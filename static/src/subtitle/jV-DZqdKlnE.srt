1
00:00:06,018 --> 00:00:07,959
I'm Jason Grimblatt, and this is Brian Bucklew.

2
00:00:08,179 --> 00:00:10,780
We're co-founders at a small indie studio called Freehold

3
00:00:10,820 --> 00:00:14,061
Games, and we're going to end the day of math for game

4
00:00:14,081 --> 00:00:17,482
developers with a talk with basically no math in it.

5
00:00:17,642 --> 00:00:20,783
So I apologize in advance.

6
00:00:20,863 --> 00:00:24,124
But yeah, we're going to be walking you through the

7
00:00:24,224 --> 00:00:26,045
architecture for one of our big procedural

8
00:00:26,065 --> 00:00:27,105
generation systems.

9
00:00:27,506 --> 00:00:29,126
So the talk is called End-to-End Procedural

10
00:00:29,146 --> 00:00:30,287
Generation in Caves of Qud.

11
00:00:32,343 --> 00:00:35,606
So let's say that you have some familiarity

12
00:00:35,666 --> 00:00:39,009
with procedural generation, some various techniques.

13
00:00:39,049 --> 00:00:42,132
Let's say you've used L-systems to generate some plants

14
00:00:42,452 --> 00:00:44,034
or maybe this weird horseshoe creature.

15
00:00:44,674 --> 00:00:47,036
You've used noise maps to generate terrain.

16
00:00:48,237 --> 00:00:50,940
Maybe you've used a Markov chain to generate some text.

17
00:00:51,881 --> 00:00:53,281
But we have a problem here.

18
00:00:53,521 --> 00:00:54,922
So here's our problem statement,

19
00:00:55,482 --> 00:00:56,802
which is the reason why we're here.

20
00:00:56,882 --> 00:00:58,703
How do you combine Proc Gen techniques

21
00:00:58,743 --> 00:01:00,743
to build large-scale generative systems?

22
00:01:01,684 --> 00:01:03,884
And obviously, large-scale is a relative term,

23
00:01:04,044 --> 00:01:05,865
but what we mean for our purposes today

24
00:01:05,925 --> 00:01:08,405
is any system that requires you

25
00:01:08,425 --> 00:01:12,386
to compose several of these techniques in some novel way,

26
00:01:12,447 --> 00:01:14,747
something you can't just go up and look up a tutorial for.

27
00:01:16,049 --> 00:01:16,750
So who are we?

28
00:01:16,970 --> 00:01:18,832
Why are we here to talk about this today?

29
00:01:19,272 --> 00:01:21,254
Again, we're Jason and Brian from Freehold Games.

30
00:01:21,574 --> 00:01:25,577
We've made some roguelikes, Sproggywood and Caves of Qud.

31
00:01:26,438 --> 00:01:28,900
A couple of years ago, Tanya Short and Tarn Adams

32
00:01:29,020 --> 00:01:31,182
edited this book called Procedural Generation

33
00:01:31,222 --> 00:01:33,104
in Game Design, and we have a few chapters in there.

34
00:01:33,544 --> 00:01:36,106
And then coming out today or something,

35
00:01:36,166 --> 00:01:38,288
this Procedural Storytelling in Game Design book

36
00:01:38,929 --> 00:01:40,930
is available here at GDC, I think.

37
00:01:41,191 --> 00:01:42,792
And I have a chapter in there about.

38
00:01:43,233 --> 00:01:48,941
procedurally generating history, which is one of the modules we're going to touch on today as we walk through this larger architecture.

39
00:01:50,988 --> 00:01:53,429
So let me give you some context about what Caves of Qud is.

40
00:01:53,449 --> 00:01:54,209
If you haven't heard of it,

41
00:01:54,309 --> 00:01:57,570
it's an open world science fantasy RPG and roguelike.

42
00:01:57,630 --> 00:01:59,070
It's a tile-based game.

43
00:01:59,731 --> 00:02:01,631
The tagline is chisel through a layer cake

44
00:02:01,651 --> 00:02:03,132
of thousand-year-old civilizations.

45
00:02:03,912 --> 00:02:06,173
We've sort of weaved a handcrafted narrative,

46
00:02:06,233 --> 00:02:09,734
the type you might find in, say, an Elder Scrolls RPG,

47
00:02:10,154 --> 00:02:12,535
around some deeply simulative systems.

48
00:02:14,396 --> 00:02:17,359
like I said earlier, like Brian said in his last talk,

49
00:02:17,379 --> 00:02:18,960
we make extensive use of PROC GEN,

50
00:02:19,000 --> 00:02:21,663
and that's kind of why we're here today to talk about this.

51
00:02:22,204 --> 00:02:23,805
So again, we have this problem statement,

52
00:02:24,126 --> 00:02:26,208
how do you combine PROC GEN techniques

53
00:02:26,228 --> 00:02:28,070
to build large-scale generative systems?

54
00:02:28,891 --> 00:02:31,133
And we're going to walk you through a little case study here today

55
00:02:31,574 --> 00:02:34,156
for how we procedurally generated this large-scale output.

56
00:02:34,377 --> 00:02:36,817
this whole lot of villages and caves of Qud.

57
00:02:37,458 --> 00:02:40,559
And where we can, we'll try to generalize it

58
00:02:40,639 --> 00:02:43,040
into some wisdom, but for the most part,

59
00:02:43,080 --> 00:02:44,920
we're just gonna be walking through the system

60
00:02:45,541 --> 00:02:49,222
and you can kind of experience that and take notes

61
00:02:49,282 --> 00:02:50,602
and see how you might apply it

62
00:02:50,622 --> 00:02:51,903
to your own generative systems.

63
00:02:53,789 --> 00:02:56,733
So it's going to be a pretty long talk today,

64
00:02:56,753 --> 00:02:57,915
and there's a lot going on.

65
00:02:57,955 --> 00:02:59,357
So this is what we're going to be doing.

66
00:02:59,397 --> 00:03:01,459
So first, I'm going to establish some design context.

67
00:03:02,020 --> 00:03:04,263
We're going to tell you about what our broad approach was.

68
00:03:04,904 --> 00:03:06,306
We're going to get on the same page

69
00:03:06,366 --> 00:03:08,208
by agreeing on what a village is.

70
00:03:08,949 --> 00:03:10,750
I'll show you some of the techniques we use,

71
00:03:10,970 --> 00:03:14,172
and then the little starred item here, village generation.

72
00:03:14,192 --> 00:03:16,433
This is really where most of the talk is going to live.

73
00:03:16,453 --> 00:03:18,875
We're going to be doing this sort of dive

74
00:03:19,015 --> 00:03:22,497
into the whole system flow of our village generation.

75
00:03:22,897 --> 00:03:24,438
And then we'll try to distill it down

76
00:03:24,478 --> 00:03:25,858
to some takeaways at the end.

77
00:03:27,748 --> 00:03:29,369
So design context, very important.

78
00:03:29,409 --> 00:03:32,311
So like anytime you're building a large scale system

79
00:03:32,371 --> 00:03:35,834
or any system really, I think it's important to frame it

80
00:03:35,934 --> 00:03:37,975
with what your design context is,

81
00:03:38,035 --> 00:03:41,237
because this is really what's going to be involved

82
00:03:41,778 --> 00:03:44,320
in coming down and finally making decisions.

83
00:03:45,520 --> 00:03:47,522
A couple bullet points here that are somewhat obvious,

84
00:03:47,582 --> 00:03:50,084
but benefit from some unpacking.

85
00:03:50,164 --> 00:03:53,547
So we're making an RPG, so we're taking a simulative approach

86
00:03:53,567 --> 00:03:54,068
to design.

87
00:03:54,088 --> 00:03:56,389
So what I mean by this is a village is something

88
00:03:56,429 --> 00:03:57,931
that exists in the world.

89
00:03:58,912 --> 00:04:01,494
We're trying to reproduce its dynamics to some degree.

90
00:04:01,634 --> 00:04:02,474
Maybe not perfectly.

91
00:04:02,535 --> 00:04:04,396
Maybe we have our own things we want to say,

92
00:04:04,416 --> 00:04:07,419
and so we're going to heighten certain aspects of our village.

93
00:04:07,459 --> 00:04:09,921
But by and large, a village is something, again,

94
00:04:09,941 --> 00:04:11,882
that we're trying to reproduce the dynamics of.

95
00:04:13,003 --> 00:04:15,184
Perspective is limited to a player avatar.

96
00:04:15,204 --> 00:04:17,924
So we have this idea of generating a village,

97
00:04:18,004 --> 00:04:20,845
but how players are going to engage with that village

98
00:04:20,965 --> 00:04:24,026
in our game is by being embodied in a player avatar.

99
00:04:24,066 --> 00:04:25,907
They're going to be walking through the village,

100
00:04:26,387 --> 00:04:29,148
exploring the spaces that way, talking to NPCs.

101
00:04:30,260 --> 00:04:32,761
This is different if, say, we were making a SimCity-type game

102
00:04:32,841 --> 00:04:35,201
where we were also, say, generating a village,

103
00:04:35,261 --> 00:04:37,202
but your engagement model

104
00:04:37,222 --> 00:04:39,682
with how you actually engage with that village,

105
00:04:40,062 --> 00:04:40,823
you know, is different.

106
00:04:40,863 --> 00:04:45,203
Maybe it's the course of the village's lifespan

107
00:04:45,243 --> 00:04:48,304
over 500 years, and you're looking at all sort of, um,

108
00:04:49,184 --> 00:04:50,965
systemic properties of that village.

109
00:04:51,025 --> 00:04:53,585
But for us, we're actually, we're making an RPG.

110
00:04:53,625 --> 00:04:54,766
You're embodied in the world.

111
00:04:54,806 --> 00:04:56,746
You're going to be experiencing the village that way.

112
00:04:57,834 --> 00:05:03,241
And then this aesthetic principle that we kind of hit on a lot in our talks that we like to frame

113
00:05:04,482 --> 00:05:07,786
what we're talking about with is that we value novelty very highly in output.

114
00:05:07,827 --> 00:05:13,754
So we like to say we let our generators run wild and then we sort of establish a context where that's okay.

115
00:05:16,839 --> 00:05:18,039
So modularity is good.

116
00:05:18,059 --> 00:05:20,120
This is another bit of design context.

117
00:05:20,140 --> 00:05:22,582
So both from the software design perspective,

118
00:05:22,702 --> 00:05:24,763
so decoupled modules are tractable,

119
00:05:24,783 --> 00:05:26,304
they're flexible, can be combined.

120
00:05:26,804 --> 00:05:28,425
But also from the game design perspective,

121
00:05:28,465 --> 00:05:29,986
this sort of dovetails with the idea

122
00:05:30,026 --> 00:05:32,067
that we like to let our generators run wild.

123
00:05:32,147 --> 00:05:34,928
So decoupled modules can be composed

124
00:05:35,088 --> 00:05:38,210
into various and novel, varied and novel output,

125
00:05:38,730 --> 00:05:40,451
and you'll sort of see that play out

126
00:05:40,571 --> 00:05:42,012
as we walk through the system.

127
00:05:44,092 --> 00:05:44,792
Okay, this is a mountain.

128
00:05:44,972 --> 00:05:46,032
This is Mount Fuji, in fact,

129
00:05:46,372 --> 00:05:48,833
but we're going to call it Abstraction Mountain today.

130
00:05:49,633 --> 00:05:51,773
So, this is a silly metaphor,

131
00:05:51,813 --> 00:05:53,433
but it's gonna do some work here.

132
00:05:53,473 --> 00:05:57,974
So, basically, the broad approach we're going to be taking

133
00:05:58,074 --> 00:06:00,975
is to model our village very abstractly at first,

134
00:06:01,055 --> 00:06:04,896
and then through a process of multi-steps,

135
00:06:05,016 --> 00:06:05,976
through transformations,

136
00:06:05,996 --> 00:06:07,656
we're gonna get down into Concrete Valley,

137
00:06:07,696 --> 00:06:08,417
where we're actually...

138
00:06:08,897 --> 00:06:11,438
fabricating game objects and building something

139
00:06:11,458 --> 00:06:14,199
that the player's going to experience firsthand.

140
00:06:15,720 --> 00:06:16,981
So a broader approach, what are we gonna do?

141
00:06:17,021 --> 00:06:19,422
We're gonna be generating a village over multiple steps.

142
00:06:20,142 --> 00:06:22,163
We're gonna be modeling village facets

143
00:06:22,223 --> 00:06:23,864
at various levels of abstraction.

144
00:06:25,005 --> 00:06:27,786
So the earlier steps are going to be more abstract,

145
00:06:28,026 --> 00:06:31,128
and then we're going to be using those abstract data models

146
00:06:31,228 --> 00:06:34,730
as inputs into the later steps where we reify them,

147
00:06:34,750 --> 00:06:36,090
where we make them more concrete.

148
00:06:37,478 --> 00:06:41,820
Conversely, if we get to a point where we have to make a concrete decision, and there's

149
00:06:41,880 --> 00:06:44,902
no abstract input available, we're going to use some defaults.

150
00:06:45,502 --> 00:06:51,085
And so what that means is we don't have to fully model meaning, the flow of meaning through

151
00:06:51,105 --> 00:06:51,686
our system.

152
00:06:51,746 --> 00:06:56,268
Sometimes we make a random decision, and we're just going to rely on apophanea, like the

153
00:06:57,209 --> 00:07:01,071
tendency for people to perceive patterns in things, and the fact that we do have some

154
00:07:01,111 --> 00:07:05,833
meaningful decisions we're making to have it all coherent to coherent output.

155
00:07:07,180 --> 00:07:08,920
And today it's all about the plumbing.

156
00:07:08,960 --> 00:07:11,501
We're really going to be focusing on the input and output

157
00:07:11,541 --> 00:07:14,121
of our various steps and how we're consuming and then

158
00:07:14,181 --> 00:07:15,401
producing more output.

159
00:07:15,722 --> 00:07:17,702
We're not going to be doing deep dives

160
00:07:17,742 --> 00:07:20,523
into the individual modules for a couple of reasons.

161
00:07:20,803 --> 00:07:21,943
One, we just don't have the time.

162
00:07:22,083 --> 00:07:24,323
We're going to take up most of the time just walking

163
00:07:24,363 --> 00:07:25,304
through the system flow.

164
00:07:26,124 --> 00:07:28,144
For the second reason, for a lot of our modules,

165
00:07:28,244 --> 00:07:29,484
the techniques are quite simple.

166
00:07:29,644 --> 00:07:31,425
Like, they're things that are well-researched,

167
00:07:31,465 --> 00:07:33,185
well-understood, you could go out and learn about.

168
00:07:33,745 --> 00:07:35,907
Some of them are more complex, and we'll touch on those.

169
00:07:36,007 --> 00:07:36,887
But for the most part, we're going

170
00:07:36,907 --> 00:07:40,409
to be talking about how the joints, where these modules are

171
00:07:40,849 --> 00:07:41,550
hooked up together.

172
00:07:43,591 --> 00:07:45,332
So here's a village in Caves of Qud.

173
00:07:45,392 --> 00:07:47,133
Again, it's this tile map.

174
00:07:47,633 --> 00:07:49,454
You see there's a lot going on here, right?

175
00:07:49,474 --> 00:07:51,455
There's this inner circular building

176
00:07:51,696 --> 00:07:53,877
that's surrounded by this outer circular building.

177
00:07:54,377 --> 00:07:55,598
You see a bunch of doors.

178
00:07:55,658 --> 00:07:57,939
You see a bunch of villagers here.

179
00:07:58,439 --> 00:07:59,780
In the bottom right corner, there's

180
00:08:01,181 --> 00:08:02,423
building that looks like a library.

181
00:08:02,463 --> 00:08:03,464
There's a bookshelf in there.

182
00:08:03,524 --> 00:08:05,908
In the top right corner, you see a building

183
00:08:05,948 --> 00:08:08,452
that has an oven and some drinking vessels.

184
00:08:08,492 --> 00:08:10,675
That's some sort of kitchen or food storage area.

185
00:08:11,196 --> 00:08:13,459
So we're going to be, you know, this is the final result.

186
00:08:13,479 --> 00:08:15,702
We're going to be unpacking how we arrived here.

187
00:08:17,927 --> 00:08:20,728
So let's get on the same page about what is a village, right?

188
00:08:21,329 --> 00:08:24,490
Village is something, is a concept that exists in the world.

189
00:08:24,530 --> 00:08:27,031
We can kind of come to some understanding about what we mean.

190
00:08:27,731 --> 00:08:30,232
And when we're thinking about this, you know, we're both,

191
00:08:30,712 --> 00:08:32,713
caves are kind of sort of a far future setting.

192
00:08:33,053 --> 00:08:35,154
So it actually borrows a lot from, I'd say,

193
00:08:35,194 --> 00:08:37,355
the ancient world, is the real ancient world aesthetic.

194
00:08:37,875 --> 00:08:42,716
So in deciding what we wanted to represent in our village,

195
00:08:42,956 --> 00:08:44,597
that's where we got a lot of our inspiration.

196
00:08:44,997 --> 00:08:47,517
We also have been working on this game for a long time,

197
00:08:47,677 --> 00:08:50,758
over a decade now, in fact, and we have villages in the game.

198
00:08:50,798 --> 00:08:53,378
We have handwritten static villages that we designed.

199
00:08:53,739 --> 00:08:56,099
And so what we could do is we could take those and unpack those

200
00:08:56,539 --> 00:08:59,040
and kind of figure out what we were doing as designers

201
00:08:59,420 --> 00:09:00,660
to build out what we had in mind,

202
00:09:00,680 --> 00:09:02,440
and then we could try to proceduralize it.

203
00:09:03,365 --> 00:09:04,206
So what's in our village?

204
00:09:04,246 --> 00:09:05,528
We have villagers, first of all.

205
00:09:05,688 --> 00:09:06,829
So those are gonna be represented

206
00:09:07,050 --> 00:09:10,574
like they are in most RPGs as NPCs.

207
00:09:11,334 --> 00:09:13,817
History, like the relationship with the past

208
00:09:13,897 --> 00:09:15,679
and the present is very important in Caves of Qud,

209
00:09:15,699 --> 00:09:18,162
so we're gonna be wanting to generate some sort of history.

210
00:09:18,938 --> 00:09:21,620
There's the geography of the village location,

211
00:09:21,680 --> 00:09:23,462
how it's integrated into the geography.

212
00:09:23,962 --> 00:09:25,563
The village is gonna have some architecture

213
00:09:25,583 --> 00:09:26,304
that we generate.

214
00:09:26,564 --> 00:09:28,085
It's going to have a government,

215
00:09:28,286 --> 00:09:30,868
cultural practices, religion, all sort of,

216
00:09:31,568 --> 00:09:33,450
like we're gonna generate a whole culture essentially.

217
00:09:34,110 --> 00:09:35,572
A storytelling tradition, you know,

218
00:09:35,912 --> 00:09:36,953
the village has some history,

219
00:09:36,993 --> 00:09:39,355
but how do they actually relay that history

220
00:09:39,395 --> 00:09:40,796
to people who visit the village?

221
00:09:41,557 --> 00:09:43,937
The village is going to have a relationship with local resources.

222
00:09:44,137 --> 00:09:45,938
Maybe they cook a particular meal.

223
00:09:45,978 --> 00:09:47,678
They use a local ingredient to do that.

224
00:09:48,498 --> 00:09:52,179
They're going to have furniture styles for the furniture that

225
00:09:52,239 --> 00:09:53,679
exists in all of the buildings.

226
00:09:54,079 --> 00:09:55,940
There's going to be some food and drink,

227
00:09:55,980 --> 00:09:57,740
like signature dishes for each meal.

228
00:09:58,480 --> 00:10:00,801
We do this thing where we procedurally generate dialogue

229
00:10:00,821 --> 00:10:01,761
for these NPCs.

230
00:10:01,901 --> 00:10:03,961
And so sometimes they have proverbs

231
00:10:04,081 --> 00:10:07,222
that they've sort of invented based on their history

232
00:10:07,242 --> 00:10:07,802
and their culture.

233
00:10:08,543 --> 00:10:11,065
And then finally, we have this sort of collective

234
00:10:11,125 --> 00:10:12,466
and personal needs of the village,

235
00:10:12,506 --> 00:10:15,789
which we're gonna be modeling, as most RPGs do, as quests.

236
00:10:18,191 --> 00:10:20,152
Here's a slide with just some techniques we use

237
00:10:21,253 --> 00:10:25,537
through the course of this sort of multi-tiered system.

238
00:10:25,937 --> 00:10:27,779
I'm not gonna, what'll happen is,

239
00:10:27,919 --> 00:10:29,240
as I walk through the system,

240
00:10:30,421 --> 00:10:33,384
I'll call out some of these techniques as we get there,

241
00:10:33,484 --> 00:10:35,846
but here's a slide with all of them.

242
00:10:38,327 --> 00:10:47,457
So village generation really happens over three distinct phases during the course of

243
00:10:47,477 --> 00:10:48,978
a Caves of Qod game.

244
00:10:49,138 --> 00:10:53,182
So I'm going to focus on the second and third right now, the blue and red ones, and we're

245
00:10:53,202 --> 00:10:54,704
going to get back to design in a minute.

246
00:10:55,144 --> 00:11:00,610
So first of all, when you spin up a new game of Caves of Qod, you hit create world, create

247
00:11:00,650 --> 00:11:01,511
new character in the world.

248
00:11:01,891 --> 00:11:03,712
we're generating a whole new world for you.

249
00:11:04,293 --> 00:11:07,114
And during that phase, what we call world generation,

250
00:11:07,435 --> 00:11:09,616
we're actually generating the history

251
00:11:09,736 --> 00:11:10,777
of each of these villages.

252
00:11:11,137 --> 00:11:14,199
We're going to this next step called resolve neighbors,

253
00:11:14,259 --> 00:11:16,421
where we're figuring out where the village is going

254
00:11:16,461 --> 00:11:18,382
to exist in the world and what relationship

255
00:11:18,442 --> 00:11:21,484
it's going to have with its local neighbors

256
00:11:21,624 --> 00:11:23,465
in that local region.

257
00:11:24,626 --> 00:11:27,027
Then the world is generated, you have a character,

258
00:11:27,087 --> 00:11:28,887
you can then go walk around the world.

259
00:11:29,307 --> 00:11:30,988
We don't actually build the village

260
00:11:31,088 --> 00:11:34,549
until you're about to enter the little world map tile

261
00:11:34,729 --> 00:11:36,449
that says where the village is.

262
00:11:36,509 --> 00:11:39,210
So we do this sort of village fabrication on demand.

263
00:11:40,030 --> 00:11:42,311
Once you actually do, you decide to enter the village,

264
00:11:42,371 --> 00:11:44,972
then we're in this last fabrication phase.

265
00:11:45,012 --> 00:11:46,652
And this is where we're gonna actually generate

266
00:11:46,712 --> 00:11:48,353
a specific culture for the village.

267
00:11:49,253 --> 00:11:54,935
Based on the history, we're going to generate a specific architectural style and map out

268
00:11:54,955 --> 00:11:55,895
what the buildings look like.

269
00:11:55,955 --> 00:12:00,477
And finally, the last step, right before the village actually appears in front of the,

270
00:12:00,537 --> 00:12:04,258
like is loaded on the screen for the player, we're going to fabricate game objects where

271
00:12:04,278 --> 00:12:08,239
we're actually going to place walls, place NPCs, place furniture in the building.

272
00:12:09,000 --> 00:12:11,841
This first phase is what we call design phase.

273
00:12:11,941 --> 00:12:14,502
It's where all of our pre-baked material goes in.

274
00:12:14,642 --> 00:12:17,663
So all of the static handwritten templates

275
00:12:17,783 --> 00:12:22,325
that we're using to seed our procedural generation

276
00:12:22,505 --> 00:12:23,246
are done here.

277
00:12:23,266 --> 00:12:24,906
And this is done at compile time.

278
00:12:25,026 --> 00:12:28,428
It's just if we have some sort of static blueprints

279
00:12:28,468 --> 00:12:30,989
that we're writing, we're going to bake them into the game.

280
00:12:31,329 --> 00:12:33,950
And then once the dynamic phases start to happen,

281
00:12:33,990 --> 00:12:35,511
we're going to be able to leverage those.

282
00:12:38,322 --> 00:12:46,462
So we have abstraction mountain again so again those 5 steps we're going to lay out here we're going to start really abstractly with the village history.

283
00:12:49,024 --> 00:12:53,188
Now, we get back to this idea that I was talking about earlier, where because we're generating

284
00:12:53,308 --> 00:12:58,372
a village with a very specific engagement model where players are only going to be interacting

285
00:12:58,412 --> 00:13:04,337
with it by actually walking through the village and looking at monuments, talking to NPCs,

286
00:13:05,018 --> 00:13:10,723
we can get away with generating, with representing the history pretty abstractly.

287
00:13:12,224 --> 00:13:14,266
Now, when we actually get down to fabricate game objects,

288
00:13:14,286 --> 00:13:16,107
we need to actually generate concrete things

289
00:13:16,128 --> 00:13:17,529
that the player can interact with.

290
00:13:17,589 --> 00:13:19,631
But these five steps are arranged

291
00:13:19,691 --> 00:13:21,572
along this sort of axis of abstraction.

292
00:13:21,592 --> 00:13:22,873
We're going to generate history,

293
00:13:22,893 --> 00:13:24,635
represent it really abstractly,

294
00:13:24,975 --> 00:13:26,817
resolve some neighbor relationships,

295
00:13:26,877 --> 00:13:28,838
kind of make some decisions about the history,

296
00:13:29,879 --> 00:13:31,881
go down, start to actually make decisions

297
00:13:31,921 --> 00:13:33,202
about what the culture looks like.

298
00:13:33,522 --> 00:13:35,624
And at each step, we're just getting closer and closer

299
00:13:35,684 --> 00:13:37,446
to concrete valley here, where we're actually going

300
00:13:37,466 --> 00:13:39,027
to be serving the village up to the player.

301
00:13:41,003 --> 00:13:44,006
So this is a screenshot of a monument

302
00:13:44,306 --> 00:13:45,407
in one of these villages.

303
00:13:45,487 --> 00:13:47,549
We're gonna be using it as a sort of touchstone,

304
00:13:47,649 --> 00:13:52,133
like as a sort of a nice consistent thread

305
00:13:52,173 --> 00:13:53,374
that we're gonna be able to follow

306
00:13:53,474 --> 00:13:56,357
as we do this walkthrough of this big system.

307
00:13:56,857 --> 00:13:58,919
So we see here it's a little building,

308
00:13:58,979 --> 00:14:00,840
some sort of monument hall.

309
00:14:01,061 --> 00:14:03,363
We see there's some torch posts in the corners,

310
00:14:03,863 --> 00:14:05,184
and then there's in the center

311
00:14:05,224 --> 00:14:07,206
these yellow and cyan monuments.

312
00:14:08,167 --> 00:14:10,548
Everything in Caves of Qud is an object, you can interact with it.

313
00:14:10,628 --> 00:14:12,969
It has a little description here, which I'll read.

314
00:14:13,289 --> 00:14:19,112
So in 790, the villagers of Nawon demanded that the mayor abdicate and all forms of hierarchy

315
00:14:19,152 --> 00:14:20,232
be abolished from their village.

316
00:14:20,592 --> 00:14:24,954
The two pillars of civic life in Nawon thus became Anarchy and Valatar, a legendary giant

317
00:14:24,994 --> 00:14:25,594
dragonfly.

318
00:14:26,582 --> 00:14:30,164
So Caves of Quds is a game where there's a lot of like uplifted

319
00:14:30,705 --> 00:14:34,267
planted animals, so it's very common to see a lot of like sapient dragonflies

320
00:14:34,307 --> 00:14:36,989
for instance. And if you see on the right side of this

321
00:14:37,289 --> 00:14:40,251
village there's a little statue of a dragonfly which also

322
00:14:40,812 --> 00:14:44,174
is part of the village. So we're going to walk through kind of how we came

323
00:14:44,854 --> 00:14:49,097
from generating some history about this village to actually producing this

324
00:14:49,177 --> 00:14:53,120
monument hall and this monument and pasting this

325
00:14:53,180 --> 00:14:54,061
description onto it.

326
00:14:56,357 --> 00:14:59,018
OK, so we're going to walk through.

327
00:14:59,038 --> 00:15:01,299
We're on the first step here, generate history.

328
00:15:01,319 --> 00:15:03,160
So let me describe this slide, because there's

329
00:15:03,180 --> 00:15:03,980
a lot going on here.

330
00:15:04,040 --> 00:15:05,801
And this is the format we're going

331
00:15:05,821 --> 00:15:08,382
to use for the rest of the slides in the deck.

332
00:15:08,842 --> 00:15:12,023
So again, remember I said what's important today

333
00:15:12,063 --> 00:15:12,984
is the input and output.

334
00:15:13,004 --> 00:15:15,605
So we have input coming in from the left and bottom.

335
00:15:16,065 --> 00:15:19,667
I'll describe the difference between those types of inputs

336
00:15:20,327 --> 00:15:20,707
in a minute.

337
00:15:21,227 --> 00:15:24,049
We have output, each step is gonna have some sort of output

338
00:15:24,169 --> 00:15:26,271
at some level of abstraction.

339
00:15:26,431 --> 00:15:28,072
We're at generate history, so we're gonna start

340
00:15:28,092 --> 00:15:30,054
with some really abstract output and work from there.

341
00:15:30,854 --> 00:15:32,415
And then on the right, you see there's this little

342
00:15:32,475 --> 00:15:35,337
right pane where, and all this is us tracking

343
00:15:35,377 --> 00:15:36,358
the steps we're on.

344
00:15:36,458 --> 00:15:38,219
So you see the five steps laid out,

345
00:15:38,339 --> 00:15:39,620
starting with generate history,

346
00:15:40,121 --> 00:15:41,642
ending with fabricate game objects.

347
00:15:42,422 --> 00:15:44,844
The step we're on right now as we follow,

348
00:15:44,944 --> 00:15:47,526
as we walk through the flow here, is going to be darkened.

349
00:15:47,546 --> 00:15:49,688
So generate history right now you see is highlighted.

350
00:15:50,368 --> 00:15:53,270
And then there's this little extra bit of information here

351
00:15:53,311 --> 00:15:55,312
where you see at the top it says World Gen

352
00:15:55,412 --> 00:15:58,035
and at the bottom of this pane it says Fabrication.

353
00:15:58,375 --> 00:16:00,196
This is just to remind you where,

354
00:16:00,617 --> 00:16:02,518
where and which phase we're in.

355
00:16:02,638 --> 00:16:02,839
So.

356
00:16:04,292 --> 00:16:06,294
For the first two steps, generate history

357
00:16:06,314 --> 00:16:07,655
and resolve neighbor relationships.

358
00:16:07,856 --> 00:16:09,978
We're gonna be doing this during world generation,

359
00:16:10,178 --> 00:16:12,620
when you click new game and you're spinning up

360
00:16:12,680 --> 00:16:13,581
one of these new worlds.

361
00:16:14,002 --> 00:16:15,343
And then for the last three steps,

362
00:16:15,683 --> 00:16:17,125
from generate culture onward,

363
00:16:17,425 --> 00:16:20,308
we're going to be doing during the fabrication phase,

364
00:16:20,648 --> 00:16:24,151
which is where you've actually entered a particular village

365
00:16:24,211 --> 00:16:25,873
and we're generating it on the fly.

366
00:16:27,254 --> 00:16:27,434
So.

367
00:16:28,649 --> 00:16:30,171
What are our inputs here? What do they mean?

368
00:16:30,231 --> 00:16:32,853
So, on the left, coming from the left here,

369
00:16:32,893 --> 00:16:34,594
is going to be our dynamic inputs.

370
00:16:35,215 --> 00:16:37,617
Things that are actually being, like, generated per game

371
00:16:37,637 --> 00:16:40,520
and are going to be served down from step to step.

372
00:16:40,860 --> 00:16:43,502
So the first dynamic input, because this is the first step,

373
00:16:43,542 --> 00:16:46,005
the only dynamic input is the world seed.

374
00:16:46,145 --> 00:16:48,887
So the seed that we're using to seed our random number calls.

375
00:16:49,668 --> 00:16:54,933
Every bit of procedural generation we do will be using it, and because we have this system

376
00:16:54,993 --> 00:16:58,956
of world seeds, we can reproduce that. If you enter the world seed into Kzapkad, we'll produce

377
00:16:58,996 --> 00:17:00,077
the same world, mostly.

378
00:17:02,237 --> 00:17:06,960
At the bottom here we have what we call our design inputs.

379
00:17:07,060 --> 00:17:10,322
So these are actually the static pre-baked inputs

380
00:17:10,362 --> 00:17:12,403
that are coming during that design phase.

381
00:17:12,964 --> 00:17:16,246
So there are things like we have here like factions,

382
00:17:16,266 --> 00:17:18,107
like we have a bunch of factions in Caves of Qud.

383
00:17:18,127 --> 00:17:19,488
They're all static, they're handwritten.

384
00:17:19,548 --> 00:17:21,929
We add them at compile time.

385
00:17:22,229 --> 00:17:23,510
They're the same from game to game.

386
00:17:23,890 --> 00:17:27,293
We have the sort of map of regions that can't exist in every game.

387
00:17:27,554 --> 00:17:29,135
We have this graph of cultural relationships.

388
00:17:29,415 --> 00:17:30,836
These are all the design tie-in inputs.

389
00:17:31,437 --> 00:17:34,660
And one thing I wanted to mention about this slide is like,

390
00:17:34,920 --> 00:17:39,024
you're going to be seeing a lot of slides with a lot of shapes here flowing into each other.

391
00:17:39,464 --> 00:17:41,766
You don't have to necessarily worry about, like...

392
00:17:44,525 --> 00:17:47,227
understanding the specifics of every slide.

393
00:17:47,467 --> 00:17:51,210
More important, it's more of a tool for us to sort of tell the story

394
00:17:51,490 --> 00:17:54,092
of the system generation as the information is flowing through.

395
00:17:54,132 --> 00:17:56,433
So where something is particularly important, I'll call it out.

396
00:17:56,714 --> 00:17:59,155
But don't worry about seeing a bunch of slides and memorizing them.

397
00:18:01,462 --> 00:18:04,504
Okay, so let's look at some of these design inputs

398
00:18:04,524 --> 00:18:05,144
from the bottom here.

399
00:18:05,164 --> 00:18:06,685
So, like, factions, again,

400
00:18:07,466 --> 00:18:10,267
we have a bunch of handwritten factions in our game.

401
00:18:10,888 --> 00:18:12,269
So you go to the factions screen,

402
00:18:12,289 --> 00:18:14,210
you see a bunch of different faction names,

403
00:18:14,270 --> 00:18:16,131
like, again, a bunch of uplifted animals.

404
00:18:16,171 --> 00:18:18,533
You have antelopes, you have apes, arachnids.

405
00:18:18,573 --> 00:18:20,574
You have a reputation score with each of these,

406
00:18:20,634 --> 00:18:23,096
and that determines how their behavior toward you.

407
00:18:23,556 --> 00:18:26,698
This is sort of what I mean by factions in our game.

408
00:18:27,559 --> 00:18:33,400
One really interesting design time input is this graph of cultural relationships.

409
00:18:33,980 --> 00:18:39,422
So what we have is we have this what it is, it is what it sounds like, it's this graph

410
00:18:39,482 --> 00:18:42,563
of cultural relationships that we've modeled as this replacement grammar.

411
00:18:42,943 --> 00:18:47,644
And it's a little messy because we also embed, we also use it as a replacement grammar for

412
00:18:47,704 --> 00:18:50,085
generating text, procedurally generated text.

413
00:18:50,445 --> 00:18:52,726
And so what we've done is we have a sort of.

414
00:18:55,067 --> 00:18:59,590
a mapping of relationships between various elements of culture that we've again hand-baked,

415
00:18:59,910 --> 00:19:04,394
and then a little textual snippets associated with them that we can call into when we're

416
00:19:04,434 --> 00:19:08,216
procedurally generating dialogue. And we'll use that again and again throughout these steps.

417
00:19:10,187 --> 00:19:13,109
So what are we actually outputting from this step, right?

418
00:19:13,149 --> 00:19:14,330
We're generating history.

419
00:19:14,490 --> 00:19:16,292
And remember, we're at the top of Abstraction Mountain,

420
00:19:16,312 --> 00:19:17,252
we're at Abstract Peak,

421
00:19:17,653 --> 00:19:20,174
so we're gonna be generating pretty abstract output.

422
00:19:20,615 --> 00:19:23,096
So, you know, this stuff sounds really good, right?

423
00:19:23,116 --> 00:19:24,497
Okay, so we're gonna give the village a name.

424
00:19:24,517 --> 00:19:26,519
We're gonna give it a sort of base faction,

425
00:19:26,559 --> 00:19:28,360
like the base static faction

426
00:19:28,380 --> 00:19:29,981
who decided to found this village.

427
00:19:30,382 --> 00:19:32,463
We'll give it a palette so that if they decide

428
00:19:32,503 --> 00:19:34,064
to paint their, you know,

429
00:19:34,985 --> 00:19:37,506
drinking ware later that we know what color to make it.

430
00:19:38,007 --> 00:19:40,148
We have descriptions of historic events,

431
00:19:40,228 --> 00:19:43,070
things like government, things the village finds sacred,

432
00:19:43,410 --> 00:19:44,991
things that they find profane,

433
00:19:45,411 --> 00:19:47,913
signature items that the village becomes known for,

434
00:19:47,993 --> 00:19:49,414
like maybe they're known for creating

435
00:19:49,454 --> 00:19:51,055
a particular type of drinking jug.

436
00:19:52,255 --> 00:19:54,836
signature dishes that they're known in the region for.

437
00:19:55,616 --> 00:19:57,196
And again, there's a lot of information here,

438
00:19:57,256 --> 00:20:00,877
but because we're only going to be engaging

439
00:20:01,177 --> 00:20:03,618
with the village history later on

440
00:20:03,658 --> 00:20:05,658
when we actually make it more concrete

441
00:20:05,858 --> 00:20:08,719
and allow the player to roam throughout the village

442
00:20:08,879 --> 00:20:10,820
and look at historical artifacts,

443
00:20:10,880 --> 00:20:13,660
things like monuments or historical texts.

444
00:20:14,381 --> 00:20:16,502
or having a conversation with an NPC

445
00:20:16,622 --> 00:20:18,204
and asking about the history,

446
00:20:18,564 --> 00:20:20,145
because that's the only way that history

447
00:20:20,165 --> 00:20:21,546
has actually surfaced in the game,

448
00:20:21,926 --> 00:20:24,408
we can be really abstract with how we represent it here.

449
00:20:24,729 --> 00:20:27,391
And in fact, if we look at like a screenshot of just,

450
00:20:27,731 --> 00:20:29,372
we're inspecting the data structure here,

451
00:20:29,873 --> 00:20:31,474
all of village history really is,

452
00:20:32,014 --> 00:20:34,897
is it's a bag of key value pairs at the moment.

453
00:20:34,957 --> 00:20:37,619
So you see we have this, we have properties here,

454
00:20:37,719 --> 00:20:39,000
and then we have a bunch of properties,

455
00:20:39,360 --> 00:20:41,021
like name, we have the name of the village.

456
00:20:41,482 --> 00:20:44,047
region, we have the region that the village is in,

457
00:20:44,427 --> 00:20:47,713
we can go down and see like governor, the mayor,

458
00:20:47,753 --> 00:20:50,498
we have just, like all of those things that we had listed in that previous

459
00:20:50,518 --> 00:20:53,663
slide are just represented as strings actually at this point,

460
00:20:53,743 --> 00:20:54,304
pretty simply.

461
00:20:56,641 --> 00:20:59,205
As far as how we actually,

462
00:21:00,086 --> 00:21:02,309
how the history generation actually works,

463
00:21:02,709 --> 00:21:04,091
we do some interesting stuff.

464
00:21:04,392 --> 00:21:05,974
I'm not going to do a deep dive here,

465
00:21:06,034 --> 00:21:08,718
but we essentially have a little state machine

466
00:21:08,758 --> 00:21:09,619
that we walk through,

467
00:21:09,699 --> 00:21:12,663
and we have these historic event templates that we pick.

468
00:21:13,324 --> 00:21:18,769
And we do some interesting things where we actually have a sort of inversion of historical logic

469
00:21:18,829 --> 00:21:24,214
where we decide how an event ends and then create a rationalization for why it ended that way.

470
00:21:24,234 --> 00:21:30,119
So, for example, we might have an event where a village starts to worship a nearby creature.

471
00:21:30,139 --> 00:21:30,199
And...

472
00:21:32,140 --> 00:21:34,161
Once we've chosen that event template,

473
00:21:34,201 --> 00:21:36,142
we're going to have the village worship the creature,

474
00:21:36,262 --> 00:21:38,743
we're going to generate a little procedural text

475
00:21:38,763 --> 00:21:39,724
to describe that event,

476
00:21:39,984 --> 00:21:41,705
and then we'll create some rationalization

477
00:21:42,065 --> 00:21:45,566
based on the current state of the state machine

478
00:21:45,866 --> 00:21:48,948
to decide why that village

479
00:21:48,988 --> 00:21:50,188
is going to worship that creature.

480
00:21:50,749 --> 00:21:52,130
If you want to do a...

481
00:21:52,290 --> 00:21:55,012
Okay, so yeah, this is again our monument here.

482
00:21:55,332 --> 00:21:57,714
So when we see here this little snippet of text

483
00:21:57,774 --> 00:22:00,216
that gets attached to this description of this monument,

484
00:22:00,596 --> 00:22:02,318
we have the villagers of Nahuatl demanded

485
00:22:02,338 --> 00:22:05,160
that the mayor abdicate and all forms of hierarchy

486
00:22:05,220 --> 00:22:07,002
be abolished, so anarchy in the village.

487
00:22:07,482 --> 00:22:10,105
that happened during history generation,

488
00:22:10,385 --> 00:22:12,948
and then that little snippet of text was generated

489
00:22:13,029 --> 00:22:15,091
as part of the procedural description

490
00:22:15,111 --> 00:22:16,192
of that historic event.

491
00:22:16,613 --> 00:22:18,815
And now, all the way in the fifth step,

492
00:22:18,855 --> 00:22:20,678
when we get there to fabricate game objects,

493
00:22:20,718 --> 00:22:22,219
we get to just staple it onto

494
00:22:22,339 --> 00:22:24,202
one of these historic monuments.

495
00:22:25,181 --> 00:22:30,304
If you want to do a deep dive into how the actual history

496
00:22:30,344 --> 00:22:32,486
module works, how the history generation works,

497
00:22:32,526 --> 00:22:35,888
I gave a talk on it last year at the Indie Games Summit.

498
00:22:36,228 --> 00:22:38,310
And we wrote a paper on it, so you can go and research that.

499
00:22:38,350 --> 00:22:39,991
But for now, we're going to keep it at a high level

500
00:22:40,031 --> 00:22:41,412
so we can flow through the system.

501
00:22:41,872 --> 00:22:44,574
So next, we're actually going to enter the second step, where

502
00:22:44,594 --> 00:22:46,795
we're going to resolve some neighbor relationships.

503
00:22:46,855 --> 00:22:48,517
And Brian's going to tell you about that.

504
00:22:48,677 --> 00:22:50,978
And that's how we're going to end this world generation

505
00:22:50,998 --> 00:22:51,238
phase.

506
00:22:53,778 --> 00:22:54,579
All right, am I on?

507
00:22:54,919 --> 00:22:57,201
Okay, so we have villages that have been developed

508
00:22:57,341 --> 00:22:58,822
at an extremely abstract level.

509
00:22:59,403 --> 00:23:00,664
You see that they don't exist,

510
00:23:00,724 --> 00:23:02,285
they haven't been reified into the world at all.

511
00:23:02,766 --> 00:23:05,148
In fact, some of the relationships they have with the world

512
00:23:05,188 --> 00:23:06,869
are still extremely abstract,

513
00:23:07,129 --> 00:23:08,731
like the fact that they worship a creature.

514
00:23:09,231 --> 00:23:13,156
At this point in generation, they don't even know what creature they worship.

515
00:23:13,197 --> 00:23:15,239
They simply know that they worship a creature.

516
00:23:15,720 --> 00:23:19,525
The fact that they worship a creature is interesting, but we need to reify it farther.

517
00:23:19,565 --> 00:23:23,991
So we're going to take a step down abstraction mountain here into resolving neighbor relationships.

518
00:23:26,394 --> 00:23:28,855
Let's take a look specifically at our first step,

519
00:23:29,236 --> 00:23:29,956
world location.

520
00:23:30,076 --> 00:23:31,377
This is gonna take a few inputs.

521
00:23:31,437 --> 00:23:33,418
It's gonna take the world seed.

522
00:23:33,438 --> 00:23:34,879
This gives us our random variation.

523
00:23:35,259 --> 00:23:36,440
We're gonna take the village history,

524
00:23:36,860 --> 00:23:38,601
that's the output we just took a look at,

525
00:23:39,041 --> 00:23:40,582
and we're gonna take a world map,

526
00:23:40,962 --> 00:23:42,483
and we're gonna do some processing on it,

527
00:23:42,543 --> 00:23:43,744
and we're gonna find a location

528
00:23:43,824 --> 00:23:45,225
for this very abstract village,

529
00:23:45,245 --> 00:23:47,886
which is gonna give it a little bit more concrete life.

530
00:23:48,861 --> 00:23:51,182
The world map in Caves of Qud is largely static,

531
00:23:51,282 --> 00:23:52,182
the design of the map.

532
00:23:52,462 --> 00:23:55,583
So in this case, this map is the world every time.

533
00:23:55,903 --> 00:23:58,084
So the location of individual tiles,

534
00:23:58,124 --> 00:24:01,245
like this is a jungle tile, this is a desert tile,

535
00:24:01,285 --> 00:24:02,285
this is a mountain tile,

536
00:24:02,345 --> 00:24:04,286
these are a few important static locations,

537
00:24:04,346 --> 00:24:05,906
is the same every time you start up the game.

538
00:24:06,486 --> 00:24:08,447
However, the location of the villages is dynamic.

539
00:24:08,527 --> 00:24:11,108
So you have sort of a static backbone

540
00:24:11,528 --> 00:24:14,148
against which we're placing this procedural content.

541
00:24:15,712 --> 00:24:19,236
In addition to this layout, we have some data that describes

542
00:24:19,956 --> 00:24:22,519
what generally is a part of each of these cells.

543
00:24:22,559 --> 00:24:24,040
So this is, for example, a description

544
00:24:24,060 --> 00:24:25,021
of what's in each jungle.

545
00:24:25,201 --> 00:24:27,623
What's on the surface, particular types of encounters,

546
00:24:28,064 --> 00:24:29,225
what kind of music plays there,

547
00:24:29,305 --> 00:24:31,087
what's underneath it as you descend beneath it.

548
00:24:33,479 --> 00:24:35,860
And so what we do here is we go through each village.

549
00:24:35,900 --> 00:24:38,661
We have an abstract representation of its location.

550
00:24:38,721 --> 00:24:40,581
So it might say, hey, this is a jungle village

551
00:24:40,621 --> 00:24:41,742
or this is a mountain village.

552
00:24:42,382 --> 00:24:44,543
And we find a good location for it.

553
00:24:45,203 --> 00:24:47,724
So for example, here we've got Shubul,

554
00:24:47,784 --> 00:24:49,285
which we've plopped into a mountain

555
00:24:49,305 --> 00:24:51,726
and says atop a high, fastened communities

556
00:24:51,766 --> 00:24:53,887
gather in honor of Susiraya, a legendary goat.

557
00:24:54,427 --> 00:24:56,768
So this makes sense because goats live in mountains, right?

558
00:24:58,771 --> 00:25:01,033
And so we go through each village

559
00:25:01,093 --> 00:25:03,155
and we find a place for it to live in the world,

560
00:25:04,016 --> 00:25:06,798
as well as a bunch of other stuff that lives in the world.

561
00:25:07,519 --> 00:25:11,963
Weird creatures and shoemakers and distilleries

562
00:25:12,083 --> 00:25:15,326
are all placed at this point all across the world.

563
00:25:15,787 --> 00:25:18,769
And villages are one of these objects

564
00:25:18,789 --> 00:25:19,770
that's placed concretely.

565
00:25:19,930 --> 00:25:23,313
So we develop this map and then we do.

566
00:25:25,435 --> 00:25:28,036
the reification of these abstract relationships.

567
00:25:28,056 --> 00:25:30,458
So now that we have a map of these village locations,

568
00:25:30,778 --> 00:25:33,439
and for instance, legendary monsters and their lairs,

569
00:25:33,859 --> 00:25:34,980
we can go through each village

570
00:25:35,300 --> 00:25:37,221
and resolve those abstract relationships

571
00:25:37,261 --> 00:25:38,422
into concrete relationships.

572
00:25:38,582 --> 00:25:42,364
So any of these abstract tags that says legendary monster,

573
00:25:42,824 --> 00:25:45,065
Now we go and say, well, this village probably

574
00:25:45,125 --> 00:25:46,846
is related to a legendary monster that's

575
00:25:47,026 --> 00:25:48,327
spatially correlated with it.

576
00:25:48,347 --> 00:25:50,808
So let's go find a nearby monster that's

577
00:25:50,848 --> 00:25:52,169
maybe a couple squares away.

578
00:25:52,529 --> 00:25:54,130
And now that's the monster that they worship.

579
00:25:54,250 --> 00:25:57,752
We retrofit the history with this more concrete element.

580
00:25:57,772 --> 00:25:59,333
So we've done some reification here

581
00:25:59,353 --> 00:26:00,473
to give it a very concrete.

582
00:26:01,357 --> 00:26:04,241
instance and we do that for all the abstract relationships in the village.

583
00:26:04,501 --> 00:26:08,746
So at the end of this point we've got all those abstract relationships that you can

584
00:26:09,066 --> 00:26:10,808
sort of think of as like a linking metaphor.

585
00:26:10,869 --> 00:26:13,091
We've linked those against real objects in the world.

586
00:26:15,174 --> 00:26:16,996
And so you can see here the actual data.

587
00:26:17,877 --> 00:26:20,260
We've got an entry here which says

588
00:26:21,390 --> 00:26:23,071
Asterisk worships legendary creature.

589
00:26:23,252 --> 00:26:25,213
This is an example of the kind of name value pair

590
00:26:25,253 --> 00:26:26,495
we generate, it's very simple,

591
00:26:27,035 --> 00:26:30,718
and we're doing particular stylized connections

592
00:26:30,758 --> 00:26:32,640
for each of these individual tags.

593
00:26:34,302 --> 00:26:36,444
So for instance, we've placed in these monsters

594
00:26:36,484 --> 00:26:38,325
like Kelly Ufat, the legendary boar,

595
00:26:39,026 --> 00:26:42,649
and these are linked to the individual villages.

596
00:26:43,030 --> 00:26:44,611
So does that make sense for everybody?

597
00:26:46,853 --> 00:26:47,234
Finally,

598
00:26:48,175 --> 00:26:51,136
We saw on the previous slide that we had static factions

599
00:26:51,156 --> 00:26:51,796
that we've designed.

600
00:26:51,996 --> 00:26:53,517
So you can be friendly with boars

601
00:26:53,557 --> 00:26:54,737
and you can be friendly with bears.

602
00:26:55,158 --> 00:26:56,178
In addition to this, you can have

603
00:26:56,218 --> 00:26:57,859
factional relationships with the villages.

604
00:26:58,599 --> 00:27:00,180
And in the step of resolving neighbors,

605
00:27:00,220 --> 00:27:02,241
we create some physical concrete links

606
00:27:02,281 --> 00:27:03,921
between the villages and the faction system.

607
00:27:04,422 --> 00:27:07,143
So on this slide, you can see for each village,

608
00:27:07,223 --> 00:27:09,084
we create a new faction and inject that

609
00:27:09,744 --> 00:27:12,585
up against the static world state.

610
00:27:12,685 --> 00:27:15,026
And so now we have new dynamic members of these

611
00:27:15,046 --> 00:27:16,187
that are different from game to game.

612
00:27:18,260 --> 00:27:20,441
At that point, the world generation is complete.

613
00:27:20,661 --> 00:27:21,762
So you're dropped into the game.

614
00:27:22,562 --> 00:27:25,124
And when you visit the village in practice,

615
00:27:25,264 --> 00:27:26,885
the rest of these steps happen in real time.

616
00:27:26,925 --> 00:27:29,046
So you enter the map, and we go, uh-oh,

617
00:27:29,086 --> 00:27:30,707
we need to know what this village really looks like,

618
00:27:30,767 --> 00:27:32,488
and we start generating the culture at that point.

619
00:27:35,470 --> 00:27:36,110
Yeah, no, I'm gonna.

620
00:27:38,051 --> 00:27:38,211
Hello?

621
00:27:38,604 --> 00:27:43,066
OK, so generate culture in the 3rd step now so now like Brian said where we

622
00:27:43,146 --> 00:27:47,049
entered a village we have to kind of generate a we're still in a sort of

623
00:27:47,129 --> 00:27:52,432
abstract layer here though but worse working toward actually fabricating the

624
00:27:52,452 --> 00:27:55,154
game objects but now we're actually going to take the history and generate a

625
00:27:55,194 --> 00:27:57,595
specific culture from it so.

626
00:27:58,496 --> 00:27:59,236
What are our inputs?

627
00:27:59,297 --> 00:28:00,317
Again, we have the seed.

628
00:28:00,377 --> 00:28:02,519
The seed is sort of an implicit input

629
00:28:02,599 --> 00:28:04,560
because we're doing random calls,

630
00:28:04,580 --> 00:28:06,721
so we're always going to be using our world seed.

631
00:28:07,222 --> 00:28:09,823
We have the village history, which now is updated

632
00:28:09,883 --> 00:28:11,104
to be a little more concrete.

633
00:28:11,324 --> 00:28:12,645
If a village worships a creature,

634
00:28:12,685 --> 00:28:14,066
we now would know which creature it is.

635
00:28:14,787 --> 00:28:18,691
We also have the village region, the region that the village is placed in, whether it's

636
00:28:18,731 --> 00:28:23,336
a jungle or a mountain or a desert, and that's going to affect the culture because we have

637
00:28:23,396 --> 00:28:27,421
all these sort of specifications for what a jungle culture might look like versus what

638
00:28:27,461 --> 00:28:28,542
a desert culture might look like.

639
00:28:30,235 --> 00:28:31,755
What are our design inputs?

640
00:28:31,815 --> 00:28:35,577
Well, we have population tables, which is this tool

641
00:28:35,657 --> 00:28:39,839
that we use to encapsulate some discrete procedural logic.

642
00:28:39,879 --> 00:28:41,780
So I'll be talking about that in a minute.

643
00:28:41,820 --> 00:28:43,861
And then we have that graph of cultural relationships

644
00:28:44,161 --> 00:28:46,062
that I showed you a few steps ago

645
00:28:46,362 --> 00:28:48,423
that's being used to generate text

646
00:28:48,483 --> 00:28:50,944
and figure out which things are culturally adjacent

647
00:28:50,984 --> 00:28:51,445
to each other.

648
00:28:52,165 --> 00:28:55,987
If a village likes rubies, what are they more likely to like

649
00:28:56,367 --> 00:28:57,127
in addition to that?

650
00:28:58,948 --> 00:28:59,068
So.

651
00:28:59,734 --> 00:29:01,395
Let's talk about this one output,

652
00:29:01,616 --> 00:29:03,717
when we're thinking about what is actually getting output

653
00:29:03,777 --> 00:29:05,879
from this step, we're gonna have a culture,

654
00:29:05,959 --> 00:29:09,161
all the various facets of a Caves of Qud village culture,

655
00:29:09,501 --> 00:29:11,083
one of which is the storytelling tradition.

656
00:29:11,483 --> 00:29:13,164
So the storytelling tradition ties us back

657
00:29:13,204 --> 00:29:14,665
to this monument, this diptych.

658
00:29:15,126 --> 00:29:18,868
So basically, the storytelling tradition of this village,

659
00:29:18,908 --> 00:29:21,510
this particular village, is that they like to inscribe,

660
00:29:21,931 --> 00:29:23,132
they like to build monuments

661
00:29:23,192 --> 00:29:25,093
that share the story of their history.

662
00:29:25,813 --> 00:29:28,134
There are other types of storytelling traditions.

663
00:29:28,194 --> 00:29:31,056
For instance, some villages like to engrave their histories

664
00:29:31,136 --> 00:29:32,096
onto their furniture.

665
00:29:32,156 --> 00:29:33,977
This is an example of an engraved oven.

666
00:29:35,077 --> 00:29:38,919
Some villages just like to inscribe their history

667
00:29:38,959 --> 00:29:39,599
into tomes.

668
00:29:39,739 --> 00:29:42,040
So this is a little library, again, that gets built.

669
00:29:42,120 --> 00:29:43,121
And we see a bookshelf.

670
00:29:43,261 --> 00:29:44,961
And here's a description of a book.

671
00:29:45,021 --> 00:29:46,742
It's the history of Tabbalah Volume 2.

672
00:29:47,703 --> 00:29:50,224
And if we were, you know, this is another game object

673
00:29:50,264 --> 00:29:51,584
in Caves of Qod, you could pick it up.

674
00:29:51,604 --> 00:29:52,725
You can open it up and read it.

675
00:29:52,825 --> 00:29:54,365
And it'll have the history of the village.

676
00:29:56,236 --> 00:29:58,898
So what does it mean that we're outputting

677
00:29:59,358 --> 00:30:01,720
the village storytelling tradition at this point, right?

678
00:30:01,920 --> 00:30:03,401
Well, it's really at this point,

679
00:30:03,802 --> 00:30:05,423
it's just a sort of specification.

680
00:30:05,463 --> 00:30:06,644
We're just gonna pick a string.

681
00:30:07,044 --> 00:30:08,245
And the way we do that is that we,

682
00:30:08,365 --> 00:30:10,867
what we call roll, this dice metaphor,

683
00:30:10,907 --> 00:30:12,028
we roll on this table.

684
00:30:12,128 --> 00:30:13,489
This is a little table we have.

685
00:30:14,289 --> 00:30:15,851
Each of these entries has a little weight,

686
00:30:16,111 --> 00:30:19,513
and we decide which of these storytelling traditions

687
00:30:19,573 --> 00:30:20,314
we're going to use.

688
00:30:21,711 --> 00:30:24,211
So I wanna, that's an example of a population table,

689
00:30:24,251 --> 00:30:25,952
and I'm gonna take a little tangent here

690
00:30:26,632 --> 00:30:29,772
out of these steps to tell you about a tool we wrote

691
00:30:30,173 --> 00:30:32,893
to make our lives easier with procedural generation

692
00:30:32,933 --> 00:30:34,073
called population tables.

693
00:30:35,113 --> 00:30:37,134
So what is a population table?

694
00:30:37,254 --> 00:30:41,975
Again, it is this table that we're going to roll on.

695
00:30:42,075 --> 00:30:44,015
So we see here there's an entry

696
00:30:44,075 --> 00:30:46,116
for each type of storytelling tradition.

697
00:30:46,556 --> 00:30:47,596
Each of them have weights.

698
00:30:47,956 --> 00:30:49,656
So you see, these are relative weights.

699
00:30:49,736 --> 00:30:50,636
So it's...

700
00:30:51,897 --> 00:30:53,679
Doors has a weight of 20.

701
00:30:53,919 --> 00:30:55,040
If we look down a little bit,

702
00:30:55,080 --> 00:30:56,561
monuments has a weight of 40.

703
00:30:56,922 --> 00:30:59,424
What this means is that it's twice as likely that

704
00:30:59,444 --> 00:31:00,966
a village is going to tell

705
00:31:01,006 --> 00:31:03,228
their history through building monuments than it

706
00:31:03,288 --> 00:31:05,430
is through like painting or engraving their doors.

707
00:31:07,327 --> 00:31:10,408
Now the thing about these population tables

708
00:31:10,468 --> 00:31:12,849
is that they're a nice expressive way

709
00:31:12,909 --> 00:31:16,611
to encapsulate a certain type of procedural generation,

710
00:31:16,751 --> 00:31:18,632
discrete type of procedural generation.

711
00:31:20,913 --> 00:31:22,033
Like I already showed you that we can.

712
00:31:23,564 --> 00:31:25,166
encode various weights here,

713
00:31:25,386 --> 00:31:27,368
but we could add all sorts of metadata

714
00:31:27,468 --> 00:31:31,592
to express various meaning

715
00:31:31,972 --> 00:31:36,036
in terms of our procedural generation fabrication.

716
00:31:36,517 --> 00:31:39,940
So for instance, this is a table of jungle creatures.

717
00:31:40,300 --> 00:31:43,003
The point here of the table is to just find a creature

718
00:31:43,043 --> 00:31:43,924
that lives in the jungle.

719
00:31:44,084 --> 00:31:45,105
Maybe we need to like,

720
00:31:45,785 --> 00:31:47,206
you know, have an encounter for the player.

721
00:31:47,906 --> 00:31:50,667
So as you see here, we have these various styles.

722
00:31:50,687 --> 00:31:52,687
The first style it says is pick one,

723
00:31:52,707 --> 00:31:53,968
and what that means is we're gonna look

724
00:31:53,988 --> 00:31:56,228
through each of these entries and just pick one at random

725
00:31:56,448 --> 00:31:57,249
based on their weight.

726
00:31:57,589 --> 00:31:58,849
You see they have a number there,

727
00:31:58,889 --> 00:32:00,990
so sometimes the number of creatures

728
00:32:01,030 --> 00:32:02,090
we're fabricating changes.

729
00:32:02,970 --> 00:32:06,573
You see the last entry here is actually another style.

730
00:32:06,633 --> 00:32:08,114
So we can nest these styles.

731
00:32:08,434 --> 00:32:10,455
And what this means is if we end up,

732
00:32:10,495 --> 00:32:13,237
sometimes we'll pick the first entry in this table,

733
00:32:13,337 --> 00:32:16,299
in which case the table will just return a boar.

734
00:32:16,599 --> 00:32:18,681
So whoever called into this population table

735
00:32:18,701 --> 00:32:20,342
is just going to get a boar as a result.

736
00:32:20,702 --> 00:32:22,463
But sometimes we pick this last entry.

737
00:32:22,723 --> 00:32:25,765
This last entry is actually a nested subtable.

738
00:32:26,646 --> 00:32:28,468
This table has a style of pick each,

739
00:32:28,848 --> 00:32:30,610
and so what that means is instead of just picking

740
00:32:30,830 --> 00:32:31,911
one of the following objects,

741
00:32:31,931 --> 00:32:33,012
we're gonna pick all of them.

742
00:32:33,792 --> 00:32:35,654
And this is a nice way to, okay,

743
00:32:35,834 --> 00:32:36,915
sometimes we'll generate a boar,

744
00:32:36,955 --> 00:32:38,617
but maybe sometimes we want a whole encounter.

745
00:32:39,137 --> 00:32:41,619
So here we have goat folk, goat folk are like.

746
00:32:43,400 --> 00:32:45,762
They're goat creatures that live in caves of Qod.

747
00:32:45,842 --> 00:32:48,423
And so we want to generate a little goat folk encounter.

748
00:32:48,804 --> 00:32:51,405
So we're going to pick each of these objects.

749
00:32:51,765 --> 00:32:54,647
There's going to be one or two goat folk savages.

750
00:32:55,067 --> 00:32:58,129
There's a 50% chance to have one goat folk sower,

751
00:32:58,690 --> 00:33:01,191
a 50% chance to have a yurt warden,

752
00:33:01,271 --> 00:33:03,392
and then a 10% chance to have a shaman.

753
00:33:04,193 --> 00:33:10,436
Again, we have all these specifications to generate a diverse array of output, and we've

754
00:33:10,516 --> 00:33:13,037
expressed all of them in the metadata in this table.

755
00:33:13,097 --> 00:33:13,737
This is data.

756
00:33:13,997 --> 00:33:23,021
We define this during the design phase, and we pre-bake it in, and then it's a nice way

757
00:33:23,061 --> 00:33:25,382
to express this sort of logic.

758
00:33:26,819 --> 00:33:29,741
So the last table was to generate some creatures.

759
00:33:29,781 --> 00:33:32,363
We could also use it to populate some furniture.

760
00:33:32,443 --> 00:33:35,845
So this is the table that represents the furniture

761
00:33:35,885 --> 00:33:37,326
in an Apple Merchant's tent.

762
00:33:38,147 --> 00:33:41,008
And you see here we have some extra metadata here,

763
00:33:41,069 --> 00:33:41,609
these hints.

764
00:33:42,209 --> 00:33:44,631
So we can say like, hey, let's put a torch post,

765
00:33:44,731 --> 00:33:46,432
and this is pick each, so we're gonna pick each

766
00:33:46,452 --> 00:33:48,754
of these things and put them in the Apple Merchant's tent.

767
00:33:49,614 --> 00:33:51,435
We have a torch post, so we say,

768
00:33:51,875 --> 00:33:53,056
let's pick one or two of these,

769
00:33:53,216 --> 00:33:54,737
and let's put it outside the door.

770
00:33:55,117 --> 00:33:57,098
You see colon two, that means within radius two.

771
00:33:57,138 --> 00:33:59,619
So near the door, put some torch posts.

772
00:34:00,220 --> 00:34:02,120
We see a woven basket, pick one or two,

773
00:34:02,181 --> 00:34:04,021
and put it in the inside corner of the room.

774
00:34:04,402 --> 00:34:05,822
So this is just some metadata

775
00:34:05,922 --> 00:34:08,304
about where we wanna place these objects.

776
00:34:08,324 --> 00:34:10,004
We can inject into this table,

777
00:34:10,405 --> 00:34:12,526
and then the actual consumer of this table,

778
00:34:12,586 --> 00:34:13,886
whoever is calling into it,

779
00:34:14,127 --> 00:34:16,188
is going to know what to do with those hints.

780
00:34:16,688 --> 00:34:18,751
So for instance, if we're populating a building,

781
00:34:19,071 --> 00:34:21,014
the consumer knows, oh, inside corner,

782
00:34:21,414 --> 00:34:23,697
place this in the inside corner of a building,

783
00:34:23,777 --> 00:34:25,239
which we've sketched out already.

784
00:34:25,639 --> 00:34:26,921
If we're populating something else,

785
00:34:26,981 --> 00:34:28,103
like someone's inventory,

786
00:34:28,143 --> 00:34:29,344
these hints would be meaningless,

787
00:34:29,404 --> 00:34:30,426
and we would just ignore them.

788
00:34:30,626 --> 00:34:32,068
We wouldn't even include them in the data.

789
00:34:33,627 --> 00:34:36,209
So those are population tables, just a nice,

790
00:34:36,369 --> 00:34:38,230
like it was a pattern we hit on,

791
00:34:38,270 --> 00:34:39,631
we realized we were doing a lot of this

792
00:34:39,711 --> 00:34:41,472
discrete procedural generation,

793
00:34:41,572 --> 00:34:43,713
and so we wrote this little tool to be able to

794
00:34:44,753 --> 00:34:46,574
express that a little more succinctly.

795
00:34:46,995 --> 00:34:49,016
So back to our steps here, where again,

796
00:34:49,056 --> 00:34:51,657
we're in step three of our five steps

797
00:34:51,717 --> 00:34:53,498
on our journey down Abstraction Mountain

798
00:34:53,618 --> 00:34:54,679
into Concrete Valley.

799
00:34:55,619 --> 00:34:57,240
We just picked a storytelling tradition.

800
00:34:57,780 --> 00:34:59,360
Let's look at another output.

801
00:34:59,400 --> 00:35:01,901
So let's pick a signature dish.

802
00:35:01,961 --> 00:35:05,401
So we really wanted to make food important in Caves of Qud.

803
00:35:05,421 --> 00:35:08,982
We wanted to play and replicate the idea that

804
00:35:09,162 --> 00:35:11,063
food is just an important aspect

805
00:35:11,083 --> 00:35:13,083
of culture that's often overlooked in games.

806
00:35:13,623 --> 00:35:15,024
So each village actually has

807
00:35:15,084 --> 00:35:17,304
a signature dish that they're known for cooking.

808
00:35:17,864 --> 00:35:19,165
This village, and you can walk up

809
00:35:19,205 --> 00:35:20,805
to their oven and eat their dish.

810
00:35:21,045 --> 00:35:22,585
This village is known for their fungus

811
00:35:22,665 --> 00:35:24,626
and electric schnitzel with goulash.

812
00:35:25,806 --> 00:35:31,648
Each of these dishes actually has a procedurally generated status effect that it imbues you

813
00:35:31,688 --> 00:35:31,868
with.

814
00:35:31,968 --> 00:35:37,330
So you eat this dish that's based on fungus and electric goulash, and you get protection

815
00:35:37,390 --> 00:35:41,972
against developing a fungal infection, which can happen in caves of Qud, and protection

816
00:35:42,012 --> 00:35:43,673
against electrical attacks.

817
00:35:45,711 --> 00:35:48,253
You can also go up, walk up to the villagers here,

818
00:35:48,473 --> 00:35:51,254
and there's sort of a currency of reputation.

819
00:35:51,355 --> 00:35:53,976
You can do this thing called the water ritual with them,

820
00:35:53,996 --> 00:35:58,539
which is this sort of like sacred exchange of culture.

821
00:35:58,999 --> 00:36:02,361
And you can spend reputation to learn how to cook this dish.

822
00:36:02,682 --> 00:36:03,982
And there's a whole cooking system.

823
00:36:04,022 --> 00:36:05,143
You can go to a campfire.

824
00:36:05,724 --> 00:36:06,824
If you have the right ingredients,

825
00:36:06,864 --> 00:36:08,926
you can cook this dish and you can get that effect.

826
00:36:09,700 --> 00:36:13,101
And so, you know, okay, that's all well and good,

827
00:36:13,141 --> 00:36:15,062
like I've explained what it looks like

828
00:36:15,082 --> 00:36:17,263
for the player to encounter signature dishes,

829
00:36:17,303 --> 00:36:18,984
but how did we actually get there to generate it?

830
00:36:19,544 --> 00:36:22,165
So we actually touch all of these inputs

831
00:36:22,425 --> 00:36:24,666
in the course of generating a signature dish.

832
00:36:24,706 --> 00:36:27,268
So we have some random calls, so we're gonna use the seed.

833
00:36:27,848 --> 00:36:28,868
We have the village history.

834
00:36:28,988 --> 00:36:30,969
So these village history templates,

835
00:36:31,029 --> 00:36:34,151
sometimes a village's history will include an event

836
00:36:34,291 --> 00:36:35,431
that involves food.

837
00:36:35,491 --> 00:36:38,693
Like let's say a traveling chef arrived

838
00:36:38,753 --> 00:36:39,974
and decided to cook a meal,

839
00:36:40,014 --> 00:36:41,774
and it was very popular in the village.

840
00:36:41,855 --> 00:36:44,976
Or the villagers start to grow some sort of crop

841
00:36:45,476 --> 00:36:47,997
and start to use it in their meals,

842
00:36:48,057 --> 00:36:50,959
and they become known for using that ingredient, right?

843
00:36:51,763 --> 00:36:53,103
The village region is important,

844
00:36:53,123 --> 00:36:54,464
where we actually place the village,

845
00:36:54,524 --> 00:36:58,165
because each region has a certain set of local ingredients,

846
00:36:58,445 --> 00:37:01,326
right, so your dishes are going to look different in the jungle

847
00:37:01,346 --> 00:37:02,527
than they're going to look in the desert.

848
00:37:03,807 --> 00:37:05,407
So coming up from the design inputs,

849
00:37:05,447 --> 00:37:09,769
we have these population tables that are mapping those regions

850
00:37:09,869 --> 00:37:12,430
to the various type of ingredients and plant

851
00:37:12,510 --> 00:37:15,951
and animal wildlife that exist that are possible

852
00:37:16,011 --> 00:37:20,933
to be consumed and used as ingredients to the dishes.

853
00:37:21,213 --> 00:37:23,534
And then we also have that graph of cultural relationships

854
00:37:23,995 --> 00:37:25,636
that is actually mapping together

855
00:37:25,816 --> 00:37:27,337
all various sort of text snippets

856
00:37:27,377 --> 00:37:30,319
that it's allowing us to generate a sensible name

857
00:37:30,419 --> 00:37:31,540
for that dish.

858
00:37:31,580 --> 00:37:33,621
So like that fungus and electro schnitzel,

859
00:37:33,981 --> 00:37:37,003
little text snippets that we have sort of.

860
00:37:37,504 --> 00:37:41,225
filtered up through our text generation into that dish name.

861
00:37:41,526 --> 00:37:43,307
And then finally, we output that dish.

862
00:37:43,387 --> 00:37:46,448
We have a data structure to store all that.

863
00:37:46,928 --> 00:37:49,570
And when we actually get down to more steps

864
00:37:49,610 --> 00:37:51,351
to fabricate game objects, and we're actually

865
00:37:51,471 --> 00:37:54,152
building the village oven, we put an interface in there

866
00:37:54,192 --> 00:37:56,894
that lets you cook that dish there.

867
00:37:58,174 --> 00:37:59,775
So now Brian's going to tell you a little bit

868
00:37:59,855 --> 00:38:01,916
about how the next step, where we're actually

869
00:38:01,936 --> 00:38:04,138
starting to generate the architecture of the village.

870
00:38:06,719 --> 00:38:06,959
All right.

871
00:38:08,358 --> 00:38:11,420
Okay, so we've gone through three entire pretty big steps,

872
00:38:11,760 --> 00:38:13,840
and we haven't built any game objects, right?

873
00:38:14,020 --> 00:38:15,821
All of these have been abstract decisions.

874
00:38:15,961 --> 00:38:18,042
We're setting ourselves up to generate

875
00:38:18,062 --> 00:38:19,582
some actual game objects in the game.

876
00:38:20,923 --> 00:38:22,123
And so this is our first step

877
00:38:22,143 --> 00:38:23,744
where we're actually gonna build some stuff.

878
00:38:25,924 --> 00:38:28,405
But first we have to make just a few more decisions.

879
00:38:30,205 --> 00:38:32,067
From all of the prior abstract decisions,

880
00:38:32,487 --> 00:38:34,688
we now have to make some very specific decisions

881
00:38:34,728 --> 00:38:36,470
like building style, and this is gonna start

882
00:38:36,490 --> 00:38:37,590
to be a concrete decision.

883
00:38:37,871 --> 00:38:40,292
This is like, are these gonna be square buildings?

884
00:38:40,352 --> 00:38:41,733
Are they gonna be round buildings?

885
00:38:41,773 --> 00:38:43,434
Are we gonna, if you saw my previous talk,

886
00:38:43,735 --> 00:38:45,836
what WFC templates are we gonna pull in

887
00:38:46,016 --> 00:38:47,497
in order to do the building?

888
00:38:47,877 --> 00:38:50,459
Maybe these are little tiny WFC templates

889
00:38:50,499 --> 00:38:51,700
or big spacious ones.

890
00:38:52,720 --> 00:38:54,041
What are the important buildings?

891
00:38:54,081 --> 00:38:56,442
This is driven by storytelling tradition, for example.

892
00:38:56,863 --> 00:38:58,223
What are the agricultural plants?

893
00:38:58,283 --> 00:38:59,344
What are the decorative plants?

894
00:38:59,384 --> 00:39:01,345
And you can see that these are very concrete decisions.

895
00:39:01,385 --> 00:39:05,548
We've gone from this is sort of a religious village

896
00:39:05,688 --> 00:39:11,411
that worships goats to they grow weeds, right?

897
00:39:11,511 --> 00:39:12,351
I mean, it depends.

898
00:39:13,392 --> 00:39:13,512
So.

899
00:39:14,093 --> 00:39:16,614
One of the important inputs here is the actual physical

900
00:39:16,675 --> 00:39:17,875
place that the village is placed.

901
00:39:19,376 --> 00:39:20,697
In this case, we're gonna start,

902
00:39:20,877 --> 00:39:22,178
build a village and a canyon.

903
00:39:22,338 --> 00:39:24,259
And so, we actually first, we generate the zone

904
00:39:24,299 --> 00:39:25,500
as if there was no village there.

905
00:39:25,880 --> 00:39:28,142
And we rip all the monsters and stuff off of it.

906
00:39:29,502 --> 00:39:31,264
We then make a bunch of these decision points.

907
00:39:31,484 --> 00:39:33,445
So let's talk specifically about building style,

908
00:39:34,185 --> 00:39:36,067
and then the rest of the decision points are pretty similar.

909
00:39:37,652 --> 00:39:40,552
We're making very concrete decisions using population tables

910
00:39:40,772 --> 00:39:42,253
to make this building style decision.

911
00:39:42,613 --> 00:39:45,453
So let's take a look at these input population tables.

912
00:39:46,013 --> 00:39:48,314
On the left, you can see a default building style.

913
00:39:48,474 --> 00:39:50,855
This applies if no other specializations exist.

914
00:39:51,535 --> 00:39:53,975
Below it, you can see a region-based population table.

915
00:39:54,035 --> 00:39:55,996
So this is a population table

916
00:39:56,496 --> 00:39:59,537
that is selected for a salt dunes region.

917
00:39:59,657 --> 00:40:00,797
You can see that tents are given

918
00:40:00,877 --> 00:40:02,057
very high weight in this table.

919
00:40:02,872 --> 00:40:04,793
On the right, you can see population tables

920
00:40:04,913 --> 00:40:06,573
for specific factions.

921
00:40:07,093 --> 00:40:09,534
So in this case, you can see the birds always have aries,

922
00:40:10,094 --> 00:40:13,455
fish always live in ponds, mollusks always live in ponds.

923
00:40:13,995 --> 00:40:17,036
And we have an internal order of priority

924
00:40:17,116 --> 00:40:18,556
so that if you've got a fish village,

925
00:40:18,636 --> 00:40:21,677
it rolls off the factional table.

926
00:40:22,137 --> 00:40:24,197
If it doesn't, it falls down to a regional table,

927
00:40:24,217 --> 00:40:25,838
and if that doesn't exist, it gets the default.

928
00:40:27,378 --> 00:40:29,860
If we've got, we don't have one of these

929
00:40:29,940 --> 00:40:32,963
for each type of faction, for instance.

930
00:40:33,343 --> 00:40:35,285
We specialize the ones that are important

931
00:40:35,345 --> 00:40:36,526
and the rest of them fall through

932
00:40:36,546 --> 00:40:39,508
to regional or default population tables.

933
00:40:41,347 --> 00:40:44,149
Important buildings, this ties back to the monument.

934
00:40:44,229 --> 00:40:46,730
This decision is made in largely the same way,

935
00:40:46,970 --> 00:40:47,651
four monuments.

936
00:40:48,751 --> 00:40:53,014
If we have a monumental, monument hall style,

937
00:40:53,575 --> 00:40:57,717
then we're gonna build a building like this, right?

938
00:40:57,817 --> 00:40:59,999
And this is another decision that's made

939
00:41:00,059 --> 00:41:00,939
in a very similar way.

940
00:41:01,259 --> 00:41:04,281
So we go through all of these prefabrication design points,

941
00:41:04,341 --> 00:41:05,702
and now we have an answer for each of these.

942
00:41:05,722 --> 00:41:07,243
We know what liquid, what door style,

943
00:41:07,283 --> 00:41:08,784
what wall type, what building style.

944
00:41:09,782 --> 00:41:12,808
So now we've got to actually build a map to place some objects on.

945
00:41:14,110 --> 00:41:15,072
So we start with this canyon.

946
00:41:16,787 --> 00:41:19,328
and we figure out where are we gonna place buildings.

947
00:41:19,568 --> 00:41:21,349
This is actually a pretty non-trivial problem

948
00:41:21,389 --> 00:41:22,330
for an arbitrary map.

949
00:41:23,330 --> 00:41:25,111
This is the answer we came up with.

950
00:41:25,151 --> 00:41:25,932
You can think of many.

951
00:41:26,192 --> 00:41:30,014
Each of these colored regions is a seeded Dijkstra map.

952
00:41:30,514 --> 00:41:31,915
So you can see zeros there.

953
00:41:32,535 --> 00:41:34,236
What we do is we throw down a random seed

954
00:41:34,256 --> 00:41:35,117
into a Dijkstra map,

955
00:41:35,757 --> 00:41:38,619
and then we throw down a seed into any places

956
00:41:38,659 --> 00:41:40,420
that didn't get filled with that Dijkstra map.

957
00:41:40,440 --> 00:41:41,780
I encourage you to look up that technique

958
00:41:41,800 --> 00:41:42,601
if you don't know about it.

959
00:41:43,321 --> 00:41:44,922
It's really powerful for as simple as it is.

960
00:41:45,456 --> 00:41:48,337
and then we start placing seeds at local maxima

961
00:41:48,817 --> 00:41:51,598
until the biggest region is no bigger than a defined size.

962
00:41:51,958 --> 00:41:54,178
And we pick the size based on the style of the building.

963
00:41:54,498 --> 00:41:56,859
And we get some nice, well-distributed regions.

964
00:41:57,139 --> 00:41:59,060
We figure out what the biggest internal rect

965
00:41:59,100 --> 00:42:00,180
of each of these regions is,

966
00:42:00,220 --> 00:42:02,441
and that gives us the places where we can place buildings.

967
00:42:03,601 --> 00:42:04,981
So then we go ahead and we,

968
00:42:05,661 --> 00:42:07,282
maybe we build some square buildings

969
00:42:07,342 --> 00:42:08,222
or some round buildings,

970
00:42:08,242 --> 00:42:09,362
or if you saw my previous talk,

971
00:42:09,382 --> 00:42:11,823
we pick some WFC templates and we gen a building

972
00:42:11,843 --> 00:42:13,163
that's gonna fit in that rectangle.

973
00:42:14,542 --> 00:42:15,743
and we drop those buildings in.

974
00:42:16,123 --> 00:42:18,545
And so you can see we've got some tents in the lower right,

975
00:42:18,565 --> 00:42:20,667
we've got a little green building in the upper left,

976
00:42:21,148 --> 00:42:23,550
we've got a couple caves which we're gonna turn into houses,

977
00:42:23,610 --> 00:42:24,991
we've got some WFC buildings

978
00:42:25,031 --> 00:42:26,813
in the left and right sides here.

979
00:42:27,193 --> 00:42:29,976
These have been dropped into that Dijkstra map seated space.

980
00:42:31,458 --> 00:42:34,300
And then we do one farther piece of analysis

981
00:42:34,360 --> 00:42:35,782
because we need to know where the inside

982
00:42:35,802 --> 00:42:36,462
of the buildings are,

983
00:42:36,943 --> 00:42:38,344
where the outside of the buildings are.

984
00:42:38,762 --> 00:42:41,104
And so, what we do is we drop dexter seeds

985
00:42:41,164 --> 00:42:42,686
into each of the individual buildings,

986
00:42:42,726 --> 00:42:44,467
and we close off any narrow spaces

987
00:42:45,007 --> 00:42:46,889
until we've got nice constrained spaces,

988
00:42:46,949 --> 00:42:49,651
and then we have a good analysis of inside and outside

989
00:42:49,691 --> 00:42:50,652
in a fairly simple way.

990
00:42:51,012 --> 00:42:52,594
This works for arbitrary building styles.

991
00:42:53,554 --> 00:42:54,275
So now we have data.

992
00:42:54,315 --> 00:42:56,937
We've got a nice map with a set of walls.

993
00:42:56,977 --> 00:42:57,898
We know where the inside is.

994
00:42:57,958 --> 00:42:58,959
We know where the outside is.

995
00:42:59,539 --> 00:43:01,961
You can see a few results of this process.

996
00:43:04,063 --> 00:43:08,146
And we are finally ready to fill these villages with stuff.

997
00:43:13,769 --> 00:43:16,690
So we're at the bottom of Obstruction Mountain.

998
00:43:17,131 --> 00:43:18,592
We're at Concrete Valley now, finally.

999
00:43:18,612 --> 00:43:20,373
We're actually going to be fabricating game objects

1000
00:43:20,413 --> 00:43:21,474
to serve up to the player.

1001
00:43:21,734 --> 00:43:23,055
You're going to be walking around the village.

1002
00:43:23,075 --> 00:43:24,315
This is the last step.

1003
00:43:25,496 --> 00:43:26,917
So what are our design inputs here?

1004
00:43:26,937 --> 00:43:28,638
Well, we have what we call object blueprints.

1005
00:43:28,698 --> 00:43:30,419
So each of these game objects,

1006
00:43:31,500 --> 00:43:33,822
it needs to have some sort of specification,

1007
00:43:33,842 --> 00:43:38,685
and we generally pre-bake these in during the design phase.

1008
00:43:38,745 --> 00:43:38,905
So...

1009
00:43:39,915 --> 00:43:44,299
This is the XML specification we use for a torch post.

1010
00:43:44,399 --> 00:43:48,463
For each of these parts here is actually a little component

1011
00:43:48,623 --> 00:43:53,287
that encapsulates some logic or some behavior that is

1012
00:43:53,467 --> 00:43:54,608
relevant to the torch post.

1013
00:43:54,648 --> 00:43:57,270
So you see the first here is a render part.

1014
00:43:57,470 --> 00:44:00,513
That just tells the torch post, it tells the system how

1015
00:44:00,533 --> 00:44:03,536
to actually show the torch post what ASCII character to

1016
00:44:03,636 --> 00:44:06,038
use if we're in ASCII mode, what tile to use if we're in

1017
00:44:06,058 --> 00:44:07,319
tile mode, what color to make it.

1018
00:44:07,939 --> 00:44:10,620
It has a physics part, so that just means it has a weight.

1019
00:44:10,780 --> 00:44:12,781
We define here whether it's takeable,

1020
00:44:12,841 --> 00:44:14,102
whether it's a solid object,

1021
00:44:14,902 --> 00:44:16,663
whether you can walk through it in the same tile.

1022
00:44:16,963 --> 00:44:19,644
If we scroll down, or if we just look down a little bit,

1023
00:44:19,684 --> 00:44:20,665
we see light source.

1024
00:44:21,985 --> 00:44:24,566
We see here that if it's lit, or it is lit,

1025
00:44:24,606 --> 00:44:28,248
and then it shines light in radius six.

1026
00:44:28,268 --> 00:44:30,549
So this is what actually makes it behave like a torch.

1027
00:44:30,589 --> 00:44:32,530
So each of these parts encapsulates

1028
00:44:32,570 --> 00:44:34,210
some amount of that logic that we expect

1029
00:44:34,250 --> 00:44:35,271
to have from a torch.

1030
00:44:36,967 --> 00:44:39,028
Now, what are we actually outputting as this step?

1031
00:44:39,188 --> 00:44:41,129
Well, it's the last step here, right?

1032
00:44:41,189 --> 00:44:43,231
So our output is actually going to be a furnished

1033
00:44:43,271 --> 00:44:44,472
and populated village map.

1034
00:44:45,132 --> 00:44:47,393
So again, an example of that is going to look

1035
00:44:47,413 --> 00:44:48,634
like this monument here.

1036
00:44:49,014 --> 00:44:52,257
We have the map, the monument hall that came in

1037
00:44:52,337 --> 00:44:54,738
from the generate architecture step, last step.

1038
00:44:54,958 --> 00:44:56,079
So we're gonna build that here.

1039
00:44:56,579 --> 00:44:58,941
We have the actual specification

1040
00:44:59,021 --> 00:45:00,382
for what a monument looks like

1041
00:45:00,442 --> 00:45:03,364
defined in a blueprint somewhere, and we fabricate that.

1042
00:45:03,744 --> 00:45:04,945
But then we don't just fabricate it,

1043
00:45:04,985 --> 00:45:06,445
we actually dynamically alter it.

1044
00:45:06,526 --> 00:45:08,306
And in this case, in the case of a monument,

1045
00:45:08,567 --> 00:45:10,728
we're just gonna pick one of these historic snippets

1046
00:45:11,028 --> 00:45:12,649
and staple it onto this monument.

1047
00:45:12,709 --> 00:45:14,109
So we have a little description here,

1048
00:45:14,189 --> 00:45:15,090
you look at the monument,

1049
00:45:15,430 --> 00:45:17,851
and that's how we know the history of this village

1050
00:45:17,951 --> 00:45:20,713
that they abolished hierarchy

1051
00:45:20,753 --> 00:45:22,474
and forced the mayor to abdicate.

1052
00:45:22,934 --> 00:45:25,355
That's communicated through this monument here.

1053
00:45:26,693 --> 00:45:31,281
So this is that village that we looked at at the start of the talk, or near the start of the talk,

1054
00:45:31,421 --> 00:45:36,009
with a bunch going on. So each of these game objects was fabricated in the same way.

1055
00:45:36,778 --> 00:45:38,618
So we could walk through and look at a couple of them.

1056
00:45:38,738 --> 00:45:42,159
So this is a village that has a desecrated marble statue

1057
00:45:42,339 --> 00:45:45,240
of Liramir, the legendary bloated leech.

1058
00:45:47,161 --> 00:45:48,501
We could see it's desecrated here.

1059
00:45:48,561 --> 00:45:51,302
So I know from looking at this kind of what happened, right?

1060
00:45:51,322 --> 00:45:53,683
So what happened is sometime during the village history,

1061
00:45:54,143 --> 00:45:56,403
the village decided that they were furious

1062
00:45:56,704 --> 00:45:59,124
at some creature and that they were going to record it

1063
00:45:59,204 --> 00:46:00,545
in the annals of their history.

1064
00:46:00,985 --> 00:46:02,966
Then during resolved neighbor relationships,

1065
00:46:03,386 --> 00:46:05,347
we looked at nearby creatures who are

1066
00:46:05,367 --> 00:46:08,069
good candidates for the hatred of this village.

1067
00:46:08,409 --> 00:46:09,610
We found this bloated leech,

1068
00:46:09,770 --> 00:46:10,790
decided that was a good one.

1069
00:46:11,751 --> 00:46:13,552
Then finally, when we actually get to

1070
00:46:13,652 --> 00:46:16,314
village fabricate game objects,

1071
00:46:16,674 --> 00:46:19,455
we decided that this village likes to,

1072
00:46:20,356 --> 00:46:21,817
as part of generate culture, we decided that

1073
00:46:21,857 --> 00:46:23,418
this village likes to build these statues.

1074
00:46:23,978 --> 00:46:26,040
We fabricated this marble statue.

1075
00:46:26,260 --> 00:46:28,962
We desecrated it because the village doesn't like the leech.

1076
00:46:29,002 --> 00:46:30,243
If the village had liked the leech,

1077
00:46:30,343 --> 00:46:31,985
then they probably wouldn't have desecrated it.

1078
00:46:32,685 --> 00:46:35,407
And we serve it up and we place it in the village.

1079
00:46:36,809 --> 00:46:37,469
Here's a goat.

1080
00:46:38,170 --> 00:46:39,851
This is actually a villager.

1081
00:46:39,951 --> 00:46:42,553
So again, it's quite common to find plant

1082
00:46:42,593 --> 00:46:44,175
and animal villagers in Caves of Qud.

1083
00:46:45,175 --> 00:46:48,038
A goat has a blueprint just like a torch post does.

1084
00:46:48,518 --> 00:46:50,840
It has a specification for how a goat's supposed to act.

1085
00:46:50,860 --> 00:46:52,301
So again, we're going to have the,

1086
00:46:52,742 --> 00:46:58,428
game object factory just fabricate a game object from that blueprint except before doing it right

1087
00:46:58,448 --> 00:47:03,414
before we replace it we alter it. So you can see this goat actually has a tattoo. So this is a

1088
00:47:03,614 --> 00:47:09,461
different storytelling tradition. Some villages like to tell their stories via tattoo. The

1089
00:47:09,501 --> 00:47:13,145
villagers get tattoos so this goat got a tattoo as opposed to monuments.

1090
00:47:13,705 --> 00:47:15,746
Now, it's interesting to note here,

1091
00:47:16,226 --> 00:47:18,027
why did the, you know, we could ask the question,

1092
00:47:18,087 --> 00:47:20,908
why did the village choose to share their stories

1093
00:47:20,948 --> 00:47:22,029
in the form of tattoos?

1094
00:47:22,469 --> 00:47:24,250
So sometimes there's an answer to that.

1095
00:47:24,390 --> 00:47:27,391
Sometimes there's some like through line of meaning

1096
00:47:27,431 --> 00:47:29,692
that we could trace back to the history

1097
00:47:30,072 --> 00:47:31,392
where there was some historic event

1098
00:47:31,412 --> 00:47:33,673
where tattoos became popular in the village.

1099
00:47:34,514 --> 00:47:35,495
Sometimes there's not.

1100
00:47:35,715 --> 00:47:38,297
So in this case, with this village,

1101
00:47:38,618 --> 00:47:40,259
we just made that decision randomly.

1102
00:47:40,340 --> 00:47:42,161
We needed a village, a storytelling tradition.

1103
00:47:42,542 --> 00:47:45,245
Nothing in the history specified what it should be

1104
00:47:45,305 --> 00:47:46,906
because the histories aren't complete.

1105
00:47:47,006 --> 00:47:48,548
We let them be sort of spotty.

1106
00:47:49,564 --> 00:47:51,046
But what we did here is because we

1107
00:47:51,066 --> 00:47:53,069
didn't have any sort of abstract representation,

1108
00:47:53,129 --> 00:47:54,651
we just made a decision randomly.

1109
00:47:54,932 --> 00:47:57,595
And because there are these through lines of meaning

1110
00:47:57,956 --> 00:48:00,479
for a lot of the decisions, the village

1111
00:48:00,539 --> 00:48:03,624
tends to cohere pretty well into a meaningful space

1112
00:48:03,644 --> 00:48:04,465
that you could walk around.

1113
00:48:04,745 --> 00:48:06,886
But some of the decisions are made randomly

1114
00:48:07,306 --> 00:48:11,767
and rely on the herd meaning around the whole village

1115
00:48:12,187 --> 00:48:13,247
to make sense.

1116
00:48:13,347 --> 00:48:16,128
And again, we rely on apophanea for players

1117
00:48:16,168 --> 00:48:19,348
sort of to looking at a strong narrative context that's

1118
00:48:19,368 --> 00:48:22,609
going to let a player interact with this goat.

1119
00:48:23,069 --> 00:48:25,490
And because of what they know about the world and goats

1120
00:48:25,570 --> 00:48:28,890
and villagers and all of the lore

1121
00:48:28,930 --> 00:48:31,011
they've gathered through playing Caves of Qud,

1122
00:48:31,251 --> 00:48:34,252
they have a context to interpret this goat and its tattoo.

1123
00:48:36,500 --> 00:48:39,221
So like I mentioned, we procedurally generate some dialogue.

1124
00:48:39,241 --> 00:48:42,662
So here is the, it's actually a dragonfly queen

1125
00:48:42,983 --> 00:48:43,643
of this village.

1126
00:48:43,683 --> 00:48:46,024
This village at some point had converted to a monarchy.

1127
00:48:46,364 --> 00:48:47,084
There's a queen.

1128
00:48:47,525 --> 00:48:49,806
We see a little proverb here, a little snippet of text.

1129
00:48:49,886 --> 00:48:52,087
Resorbing matter is no way to bless the queen.

1130
00:48:53,307 --> 00:48:57,569
I can unpack that a little, because being the designer, I can see where some of these

1131
00:48:57,610 --> 00:48:58,630
text snippets came from.

1132
00:48:58,970 --> 00:49:02,892
I know that resorbing matter has to do with gelatinous cubes.

1133
00:49:03,333 --> 00:49:07,855
The village had some run-in with gelatinous cubes in their past, but they decided that

1134
00:49:08,275 --> 00:49:12,337
resorbing matter, what gelatinous cubes do, that's no way to honor the queen.

1135
00:49:12,777 --> 00:49:14,458
We generate these little snippets of text.

1136
00:49:14,558 --> 00:49:19,701
This one is a proverb that gets appended to some of the dialogue whenever you interact

1137
00:49:19,741 --> 00:49:20,421
with the villager.

1138
00:49:22,079 --> 00:49:26,222
Here is a, we see here, Megolsa Shrub.

1139
00:49:26,242 --> 00:49:27,722
This is a plant villager.

1140
00:49:28,683 --> 00:49:31,585
And we actually have this whole dynamic quest system.

1141
00:49:31,805 --> 00:49:34,627
So this last module, which we're not gonna get into here

1142
00:49:34,647 --> 00:49:36,608
because it's probably the most complex of these modules,

1143
00:49:37,368 --> 00:49:40,330
we have this way to dynamically take this history

1144
00:49:40,750 --> 00:49:43,192
and produce some sort of meaningful quest around it

1145
00:49:43,372 --> 00:49:45,093
and have you go interact with the world.

1146
00:49:45,473 --> 00:49:50,216
So in this case, this shrub is asking you to go visit this location and it says,

1147
00:49:50,256 --> 00:49:52,358
you know, what pearls might this place contain?

1148
00:49:52,678 --> 00:49:57,281
Carbon dioxide, ample sunlight, a shrine to the practice of shield slamming, we must know.

1149
00:49:57,661 --> 00:49:59,242
So how is this text generated?

1150
00:49:59,543 --> 00:50:00,003
We look at...

1151
00:50:01,024 --> 00:50:03,445
you know, in our map of cultural relationships,

1152
00:50:03,525 --> 00:50:05,207
we look at some things that plants like.

1153
00:50:05,247 --> 00:50:06,508
We know this is a plant village.

1154
00:50:06,908 --> 00:50:09,230
Plants like carbon dioxide, plants like ample sunlight.

1155
00:50:09,490 --> 00:50:11,852
We inject those in here through our replacement grammar.

1156
00:50:12,172 --> 00:50:14,153
And then a shrine to the practice of shield slamming,

1157
00:50:14,413 --> 00:50:17,436
that's a cultural practice that this village honors.

1158
00:50:17,636 --> 00:50:19,737
And I can tell that by reading this,

1159
00:50:19,798 --> 00:50:20,818
but what had happened is,

1160
00:50:21,199 --> 00:50:23,820
there was some historic event where shield slamming,

1161
00:50:23,881 --> 00:50:25,041
which is a skill in the game,

1162
00:50:25,362 --> 00:50:27,943
became favorable in that village,

1163
00:50:28,224 --> 00:50:30,685
and now these villagers will actually teach you that skill

1164
00:50:30,745 --> 00:50:31,906
if you go and interact with them.

1165
00:50:32,687 --> 00:50:35,849
So again, this whole village, each of these objects

1166
00:50:35,889 --> 00:50:37,851
has some sort of little history like that,

1167
00:50:38,351 --> 00:50:41,473
and I hope we were able to sort of illuminate the process

1168
00:50:41,954 --> 00:50:43,895
by which that sort of coheres.

1169
00:50:44,996 --> 00:50:46,857
So this is a complex system.

1170
00:50:46,917 --> 00:50:48,458
Takeaways are gonna be of, you know,

1171
00:50:49,782 --> 00:50:52,743
whatever, they might be valuable, they might not be, but

1172
00:50:52,923 --> 00:50:56,144
a couple things that are, you know, we

1173
00:50:57,325 --> 00:50:59,586
a couple just like nuggets that we tend to

1174
00:51:00,186 --> 00:51:04,768
tend to like find, be patterns in our systems that we were using over and over.

1175
00:51:05,309 --> 00:51:08,550
So, like I mentioned all the way back at the beginning, you want to think

1176
00:51:08,590 --> 00:51:10,331
carefully about your design context.

1177
00:51:10,831 --> 00:51:13,733
So all of these decisions are really made,

1178
00:51:14,233 --> 00:51:16,755
what's driving them is the design,

1179
00:51:16,935 --> 00:51:18,416
the game design, the vision we have.

1180
00:51:18,696 --> 00:51:20,197
So what a village looks like,

1181
00:51:20,958 --> 00:51:25,000
we have some very specific ideas when we're designing the game,

1182
00:51:25,120 --> 00:51:28,923
and so we want this architecture to be able to serve those ideas.

1183
00:51:29,623 --> 00:51:31,244
You want to lean into modularity.

1184
00:51:33,296 --> 00:51:38,158
there's sort of a tendency to couple everything in these procedural systems,

1185
00:51:38,618 --> 00:51:42,720
especially with this qualitative type of procedural generation, where you expect

1186
00:51:43,320 --> 00:51:47,642
every decision to have some sort of meaningful through line, kind of like it does in real

1187
00:51:47,682 --> 00:51:51,944
history. But for the purposes of generating these villages that are only going to be

1188
00:51:52,184 --> 00:51:55,766
engaged with in a very particular way, you can sort of cheat occasionally.

1189
00:51:57,166 --> 00:52:01,648
have these decoupled modules which make reasoning about your system much simpler

1190
00:52:02,008 --> 00:52:06,950
and then just combine them and you're often surprised by the results.

1191
00:52:07,250 --> 00:52:12,692
This novel and sort of surprising output is one of the advantages of modularity.

1192
00:52:13,572 --> 00:52:15,414
So you want to use abstraction to your advantage.

1193
00:52:15,434 --> 00:52:16,935
So again, we have a history.

1194
00:52:17,436 --> 00:52:20,658
We only have a specific way to engage with the history.

1195
00:52:21,019 --> 00:52:23,100
We can represent it pretty abstractly.

1196
00:52:23,461 --> 00:52:28,865
We don't need to have a real fleshed out representation of this history.

1197
00:52:29,866 --> 00:52:37,431
and you can think about what facets of your village or system are going to be engaged with in this way.

1198
00:52:37,671 --> 00:52:39,693
What can you do early? What can you do abstractly?

1199
00:52:39,713 --> 00:52:41,954
And then use this input into your later modules.

1200
00:52:42,575 --> 00:52:44,896
So that's the next bullet here, parameterize your modules.

1201
00:52:45,177 --> 00:52:49,400
It's really nice when you have this flowing system of output from one step.

1202
00:52:49,880 --> 00:52:52,502
write your module so that you can consume this output,

1203
00:52:52,683 --> 00:52:54,725
and again, use defaults where you need to.

1204
00:52:54,885 --> 00:52:58,728
If you don't have a good input that's

1205
00:52:58,748 --> 00:53:01,651
going to help you make a decision, make one randomly

1206
00:53:01,731 --> 00:53:03,553
or make one according to some other logic.

1207
00:53:04,114 --> 00:53:06,096
And then finally, this sort of goes without saying,

1208
00:53:06,136 --> 00:53:07,717
but just build expressive tools.

1209
00:53:07,797 --> 00:53:10,780
So we found this pattern in our procedural generation.

1210
00:53:11,721 --> 00:53:14,201
in our design, we were often making these discrete

1211
00:53:14,522 --> 00:53:18,043
proctin sort of calls and so we built these population

1212
00:53:18,063 --> 00:53:21,024
tables that allowed us to express that really succinctly

1213
00:53:21,064 --> 00:53:24,265
in metadata and it saved a lot of time in design.

1214
00:53:25,165 --> 00:53:26,766
So that's it, thank you very much.

1215
00:53:26,806 --> 00:53:27,986
I'm Jason, this is Brian.

1216
00:53:28,006 --> 00:53:29,827
I think we have a little time for questions.

1217
00:53:29,887 --> 00:53:31,087
If you have any questions, please ask.

1218
00:53:40,207 --> 00:53:41,427
Thanks guys, that was great.

1219
00:53:42,727 --> 00:53:44,888
Brian, I'm a huge fan of your IRDC talk

1220
00:53:45,488 --> 00:53:46,728
on data-driven design,

1221
00:53:47,669 --> 00:53:49,989
and the sort of walkthrough through your blueprint system.

1222
00:53:50,929 --> 00:53:52,790
And Jason, you touched on this at the very end,

1223
00:53:54,290 --> 00:53:57,291
that when you build these holistic systems,

1224
00:53:57,311 --> 00:53:58,832
you're really tempted to couple things,

1225
00:53:58,952 --> 00:54:01,632
and so you have this persistent global view of things,

1226
00:54:01,852 --> 00:54:03,953
especially when you have any kind of physical implications

1227
00:54:03,973 --> 00:54:05,293
of the structures you're building, I find.

1228
00:54:07,411 --> 00:54:10,312
So I was wondering if you guys might be able to compare and contrast

1229
00:54:11,092 --> 00:54:13,853
like the beautiful componentization of the Blueprint system

1230
00:54:14,473 --> 00:54:19,015
with the architecture you've used to generate the world.

1231
00:54:19,755 --> 00:54:22,016
Whether that's sort of like a big serial procedure

1232
00:54:22,216 --> 00:54:26,818
or whether that actually is composed of these nice little discrete components too.

1233
00:54:29,759 --> 00:54:30,660
Sure, do you have a good answer?

1234
00:54:32,520 --> 00:54:33,881
Here. Oh, yeah.

1235
00:54:37,350 --> 00:54:38,072
How do we live?

1236
00:54:48,339 --> 00:54:49,819
Okay, so the question is, how related is the

1237
00:54:49,899 --> 00:54:52,780
NV component system to, to these PROC GEN modules?

1238
00:54:53,420 --> 00:54:54,721
And there's some relationship.

1239
00:54:54,761 --> 00:54:56,461
We take a sort of inspiration from that.

1240
00:54:56,501 --> 00:54:59,882
But the reality is that we back into these modules a lot of time, right?

1241
00:55:00,863 --> 00:55:04,604
It's the, the idea that you've got these discrete procedural modules

1242
00:55:04,624 --> 00:55:06,624
that are feeding each other input and output

1243
00:55:07,044 --> 00:55:07,705
is something that...

1244
00:55:08,348 --> 00:55:10,209
we haven't really encountered anywhere else.

1245
00:55:10,469 --> 00:55:12,850
And so we're sort of discovering the architecture

1246
00:55:12,890 --> 00:55:13,790
that allows us to do that.

1247
00:55:13,810 --> 00:55:17,032
So you'll note that this isn't quite as utterly pristine,

1248
00:55:17,072 --> 00:55:18,792
in part because we don't have the same kind of

1249
00:55:19,313 --> 00:55:22,454
basic groundwork we had to build off of ECS systems.

1250
00:55:23,254 --> 00:55:24,655
So we're inspired by that modularity.

1251
00:55:24,695 --> 00:55:27,776
We really like the power that entity component systems

1252
00:55:27,816 --> 00:55:29,257
give us when defining the objects.

1253
00:55:30,258 --> 00:55:33,220
But the fact that you're working on this very,

1254
00:55:33,820 --> 00:55:36,502
very uneven discrete playing field, right?

1255
00:55:36,542 --> 00:55:38,323
Like some of these things are very abstract,

1256
00:55:38,364 --> 00:55:39,865
and some of these things are very concrete,

1257
00:55:40,605 --> 00:55:43,147
makes it difficult to find a very unified architecture

1258
00:55:43,167 --> 00:55:43,888
to represent all of it.

1259
00:55:43,948 --> 00:55:45,709
Maybe there is one, and in 25 years,

1260
00:55:45,749 --> 00:55:46,770
we'll be getting to talk about it.

1261
00:55:47,370 --> 00:55:48,571
But right now, I feel like we're just sort of

1262
00:55:48,631 --> 00:55:50,613
peering in the door at what it means

1263
00:55:50,653 --> 00:55:52,354
to have these procedural inputs and outputs

1264
00:55:52,394 --> 00:55:53,655
at different levels of abstraction

1265
00:55:53,695 --> 00:55:55,396
and concreteness feed into one another.

1266
00:55:57,197 --> 00:55:57,618
Cool, thanks.

1267
00:55:57,910 --> 00:55:59,870
Yeah, and additionally, I would also add to that,

1268
00:55:59,910 --> 00:56:03,091
like, because it's a game with a really long dev cycle,

1269
00:56:03,151 --> 00:56:05,011
or we've been working on it now for 10 years,

1270
00:56:05,531 --> 00:56:09,372
we tend to add things like we're adding things

1271
00:56:09,392 --> 00:56:10,533
to the game a decade later.

1272
00:56:10,633 --> 00:56:12,693
And so a lot of the modules that we're adding now,

1273
00:56:12,753 --> 00:56:14,333
we had no anticipation for.

1274
00:56:14,393 --> 00:56:16,814
And so in that sense, kind of by necessity,

1275
00:56:17,254 --> 00:56:20,535
it's been this sort of composition of modules

1276
00:56:20,715 --> 00:56:22,155
as we added more and more systems

1277
00:56:22,195 --> 00:56:24,176
to the game that had no sort of like,

1278
00:56:24,956 --> 00:56:27,496
had no template in the early versions of the game.

1279
00:56:27,977 --> 00:56:28,117
Yeah.

1280
00:56:29,297 --> 00:56:29,477
Thanks.

1281
00:56:30,857 --> 00:56:30,958
Yeah.

1282
00:56:31,658 --> 00:56:31,998
Hello.

1283
00:56:32,738 --> 00:56:36,279
So, population tables looks like a great tool.

1284
00:56:36,519 --> 00:56:41,181
I can see that it's XML, but I'm wondering, have you considered abstracting this tool into

1285
00:56:41,241 --> 00:56:44,542
something you could share with the community, given that you're big on sharing information

1286
00:56:44,562 --> 00:56:45,122
with the community?

1287
00:56:46,822 --> 00:56:47,623
Have we considered that?

1288
00:56:47,663 --> 00:56:49,263
Well, we're considering it right now that you suggested.

1289
00:56:49,283 --> 00:56:49,483
Yes, we are.

1290
00:56:49,503 --> 00:56:50,223
I would love to see that closer up.

1291
00:56:50,243 --> 00:56:50,443
Thank you.

1292
00:56:50,463 --> 00:56:50,764
Thank you.

1293
00:56:50,824 --> 00:56:51,004
Thank you.

1294
00:56:51,024 --> 00:56:51,204
Thank you.

1295
00:56:51,224 --> 00:56:51,424
Thank you.

1296
00:56:51,464 --> 00:56:51,684
Thank you.

1297
00:56:51,704 --> 00:56:51,884
Thank you.

1298
00:56:51,904 --> 00:56:52,104
Thank you.

1299
00:56:52,124 --> 00:56:52,304
Thank you.

1300
00:56:52,324 --> 00:56:52,544
Thank you.

1301
00:56:52,564 --> 00:56:53,164
Thank you.

1302
00:56:53,204 --> 00:56:53,384
Thank you.

1303
00:56:53,404 --> 00:56:53,624
Thank you.

1304
00:56:53,644 --> 00:56:53,884
Thank you.

1305
00:56:53,904 --> 00:56:54,105
Thank you.

1306
00:56:54,125 --> 00:56:54,365
Thank you.

1307
00:56:54,385 --> 00:56:54,645
Thank you.

1308
00:56:58,410 --> 00:56:59,291
Hi, thanks for the talk.

1309
00:57:00,552 --> 00:57:02,935
So I saw some visualizations that you showed

1310
00:57:02,955 --> 00:57:05,919
was debugging Visual Studio, some ASCII art to actually see

1311
00:57:05,939 --> 00:57:06,519
what's going on.

1312
00:57:06,960 --> 00:57:10,044
Was that how far you went to visualize what was actually

1313
00:57:10,084 --> 00:57:10,744
being generated?

1314
00:57:10,885 --> 00:57:13,528
Like if you really needed to see the final version,

1315
00:57:13,568 --> 00:57:14,589
you just ran the game?

1316
00:57:16,412 --> 00:57:20,813
Yeah, largely. The visualizations you were seeing there were not created for GDC specifically,

1317
00:57:20,853 --> 00:57:25,014
but were actually the debug visualizations I used to visualize the system. So that alongside

1318
00:57:25,094 --> 00:57:31,075
with just the Visual Studio debugger is largely the extent of our visualization and debugging

1319
00:57:31,095 --> 00:57:31,255
tools.

1320
00:57:31,415 --> 00:57:37,217
Yeah. That's hardcore. Did you consider something that would make it easier? Did you just not

1321
00:57:37,797 --> 00:57:39,317
think you had time or not need?

1322
00:57:40,753 --> 00:57:44,335
I mean, I guess I felt like I built the tools that I needed to get the system to get the

1323
00:57:44,355 --> 00:57:44,875
output we wanted.

1324
00:57:44,935 --> 00:57:46,876
So, those tools were sufficient.

1325
00:57:47,697 --> 00:57:53,940
Whether that means I like an unpleasant life is arguable, right?

1326
00:57:54,000 --> 00:57:59,444
I probably have a slightly higher threshold for pain as Jason does when developing Games

1327
00:57:59,484 --> 00:57:59,704
of God.

1328
00:58:00,764 --> 00:58:04,006
But really, the individual techniques are fairly straightforward, right?

1329
00:58:04,067 --> 00:58:08,930
I mean, we're talking about WFC, sounds crazy, it's not that hard to use.

1330
00:58:09,130 --> 00:58:10,951
You know, Perlin noise is not that hard to use.

1331
00:58:10,971 --> 00:58:12,552
The individual techniques are not that hard.

1332
00:58:12,572 --> 00:58:15,814
The hard thing is finding a design space you want to explore and then mapping those

1333
00:58:15,854 --> 00:58:17,395
simple tools to them, right?

1334
00:58:17,415 --> 00:58:21,117
That once you get into building the individual tools, once you understand what

1335
00:58:21,137 --> 00:58:25,720
you're trying to build, it really is honestly not that difficult, I guess.

1336
00:58:26,001 --> 00:58:29,787
So you didn't get to a point where something very weird was being generated and you couldn't

1337
00:58:29,988 --> 00:58:32,051
replicate it, you couldn't really see that happening.

1338
00:58:32,733 --> 00:58:37,722
I guess those kind of concerns in Caves of Qud, we often like, wow, that's really strange,

1339
00:58:37,742 --> 00:58:38,363
that's okay.

1340
00:58:38,583 --> 00:58:39,104
Yeah.

1341
00:58:39,832 --> 00:58:40,873
Let's leave that in, right?

1342
00:58:40,893 --> 00:58:42,595
I mean, that's an interesting output.

1343
00:58:42,695 --> 00:58:47,259
And so I would say that no, we did not often run into

1344
00:58:47,319 --> 00:58:50,402
situations where we had some degenerate output that we just

1345
00:58:50,602 --> 00:58:51,383
couldn't understand.

1346
00:58:51,964 --> 00:58:53,185
It does happen at the margins.

1347
00:58:53,985 --> 00:58:55,867
But the fact that we can reproduce those environments

1348
00:58:55,887 --> 00:58:58,630
with a seed, for example, makes it really useful.

1349
00:58:58,670 --> 00:59:00,552
So we can go in and say, hey, just send me your save file.

1350
00:59:00,892 --> 00:59:03,374
We can load up that save file, issue a command to rebuild

1351
00:59:03,414 --> 00:59:03,855
that zone.

1352
00:59:04,155 --> 00:59:06,037
it'll just rebuild the zone with the same context.

1353
00:59:06,057 --> 00:59:08,199
So I can get in there in debugger and walk through that players,

1354
00:59:08,740 --> 00:59:12,384
that village regenerating and figure out what happened there.

1355
00:59:12,985 --> 00:59:16,229
So because these are repeatable systems,

1356
00:59:16,329 --> 00:59:20,874
that seed is very useful for debugging complex procedural problems.

1357
00:59:21,054 --> 00:59:23,156
Okay, so in that case you could just get the save file

1358
00:59:23,196 --> 00:59:25,377
that had that situation, you see that being generated.

1359
00:59:25,437 --> 00:59:25,758
Yeah, exactly.

1360
00:59:25,778 --> 00:59:26,338
That answers my question.

1361
00:59:26,358 --> 00:59:27,679
You can drop right in where the player is

1362
00:59:27,779 --> 00:59:29,240
and issue a command, you say rebuild,

1363
00:59:29,661 --> 00:59:32,743
and because our zone building is so discreet,

1364
00:59:33,063 --> 00:59:34,725
you can rebuild that individual zone

1365
00:59:34,905 --> 00:59:36,586
and it will walk through the same steps

1366
00:59:36,866 --> 00:59:39,608
and you'll get the same, whatever it is you're looking for.

1367
00:59:39,628 --> 00:59:40,269
Very nice, thank you.

1368
00:59:40,798 --> 00:59:42,559
And we do actually have a couple more tools.

1369
00:59:42,599 --> 00:59:44,261
There are, like, if you go into, we

1370
00:59:44,281 --> 00:59:46,042
have a sort of modding tool in the game.

1371
00:59:46,062 --> 00:59:48,925
And you could see, we do have a noise map visualizer.

1372
00:59:49,245 --> 00:59:52,007
We have something for our grammar text generation.

1373
00:59:52,047 --> 00:59:54,689
We've built a couple, but where they're useful to us, yeah.

1374
00:59:55,230 --> 00:59:56,471
OK, thanks.

1375
00:59:58,092 --> 01:00:02,215
Do you do any generation based on user interactions or input

1376
01:00:02,576 --> 01:00:02,836
at all?

1377
01:00:05,340 --> 01:00:07,321
Yeah, well, I mean, like, a little bit,

1378
01:00:07,421 --> 01:00:10,283
because we have cases where, like,

1379
01:00:10,823 --> 01:00:13,465
what the player does in the game is sort of inscribed

1380
01:00:13,505 --> 01:00:16,666
in this chronology, a sort of player journal.

1381
01:00:16,726 --> 01:00:19,628
And then we use that to seed some of the generation.

1382
01:00:19,748 --> 01:00:21,629
But it's kind of light, right?

1383
01:00:21,709 --> 01:00:23,630
Most of the generation we're doing

1384
01:00:23,930 --> 01:00:27,772
is done during world generation and then, like,

1385
01:00:27,852 --> 01:00:29,373
finalized during fabrication.

1386
01:00:29,393 --> 01:00:32,955
And the user's input to it is on the light side.

1387
01:00:32,975 --> 01:00:34,136
Thanks.

1388
01:00:36,772 --> 01:00:37,653
Hi, thanks for the talk.

1389
01:00:38,695 --> 01:00:39,435
I have a question.

1390
01:00:39,455 --> 01:00:41,137
You touched a little bit on it a minute ago

1391
01:00:41,157 --> 01:00:42,559
about the saved games.

1392
01:00:43,120 --> 01:00:46,404
Do you guys save the full results of everything,

1393
01:00:46,484 --> 01:00:49,167
or do you save just the seed or somewhere in between?

1394
01:00:49,187 --> 01:00:49,988
Oh, oh, okay.

1395
01:00:50,008 --> 01:00:53,452
So the serialization is just the worst.

1396
01:00:53,492 --> 01:00:55,755
I'm sure everybody who's touched it knows that.

1397
01:00:56,623 --> 01:00:58,645
And in Caves of Code, we actually do serialize

1398
01:00:58,725 --> 01:00:59,705
the whole world state.

1399
01:01:00,546 --> 01:01:02,727
We save it off in chunks.

1400
01:01:03,048 --> 01:01:05,950
So each of those screens is a discrete chunk

1401
01:01:05,970 --> 01:01:07,070
which we'll save off to disk.

1402
01:01:07,411 --> 01:01:09,212
And we just serialize the full game state.

1403
01:01:09,252 --> 01:01:12,074
And it's really awful and causes us all kinds of problems,

1404
01:01:12,134 --> 01:01:12,934
but it mostly works.

1405
01:01:13,415 --> 01:01:16,777
We use built-in .NET binary serialization mostly.

1406
01:01:16,837 --> 01:01:18,298
We just dump the structure to the disk

1407
01:01:19,079 --> 01:01:20,139
and then we're able to refresh it.

1408
01:01:21,080 --> 01:01:21,260
Thanks.

1409
01:01:23,901 --> 01:01:32,569
Hi. The pipeline you demonstrated seems extremely functional in a way, like it's just a

1410
01:01:32,609 --> 01:01:36,633
composition of functions that take an input and take an output. I was wondering if you made

1411
01:01:36,713 --> 01:01:40,917
use of any functional programming techniques like persistent data structures, immutable

1412
01:01:40,957 --> 01:01:43,620
data, that kind of thing, just at the implementation level.

1413
01:01:45,661 --> 01:01:47,241
So the question is do we use functional programming?

1414
01:01:47,261 --> 01:01:48,622
And the answer is no, not really.

1415
01:01:48,702 --> 01:01:50,563
It's a C-sharp program and we're largely,

1416
01:01:50,923 --> 01:01:53,604
really functionally generating a chunk of data.

1417
01:01:53,644 --> 01:01:55,905
It's getting stuck in some data structure.

1418
01:01:56,406 --> 01:01:59,167
And then the next module is,

1419
01:01:59,467 --> 01:02:00,807
it's less that we're really passing it in.

1420
01:02:00,847 --> 01:02:02,588
That makes it look a lot cleaner than it is.

1421
01:02:02,628 --> 01:02:03,809
The reality is that we have a,

1422
01:02:04,489 --> 01:02:05,790
we go and we generate the culture

1423
01:02:06,050 --> 01:02:07,570
and it reaches out to this global state

1424
01:02:08,471 --> 01:02:09,951
and grabs the things that it's interested in.

1425
01:02:10,212 --> 01:02:13,193
You can visualize it as a set of functional parameters

1426
01:02:13,233 --> 01:02:14,453
and it's cleaner to think about that way.

1427
01:02:14,830 --> 01:02:16,791
but our implementation is a bit messier.

1428
01:02:16,811 --> 01:02:19,514
We've sort of, we've done some abstraction here

1429
01:02:19,614 --> 01:02:21,656
to unpack what we're doing in order to make it

1430
01:02:21,696 --> 01:02:22,476
sort of explicable.

1431
01:02:23,557 --> 01:02:25,159
The actual implementation is not like that.

1432
01:02:25,179 --> 01:02:27,361
A little functional occasionally.

1433
01:02:27,401 --> 01:02:28,262
A little bit, yeah.

1434
01:02:28,482 --> 01:02:31,364
Yeah, I mean, we, yeah, the code is like 15 years old

1435
01:02:31,584 --> 01:02:33,686
and has many, many layers, so there's a little bit

1436
01:02:33,706 --> 01:02:35,068
of everything in there at some point.

1437
01:02:36,376 --> 01:02:37,916
Thank you.

1438
01:03:05,587 --> 01:03:10,490
I mean, I think you want to start with visualizing at the

1439
01:03:10,530 --> 01:03:15,953
concrete level, but then, and maybe building some sort of

1440
01:03:16,053 --> 01:03:18,454
prototypes at the concrete level to get an idea of what

1441
01:03:18,494 --> 01:03:19,695
you want your output to be like.

1442
01:03:19,715 --> 01:03:22,537
I mean, that's a nice technique to use with ProcGen

1443
01:03:22,577 --> 01:03:25,078
in general, is to maybe hand design some output that you're

1444
01:03:25,178 --> 01:03:26,879
trying to interpolate between.

1445
01:03:27,260 --> 01:03:30,041
But then as for the actual system, I think you want to,

1446
01:03:31,122 --> 01:03:32,083
well, I mean, you probably don't want to

1447
01:03:32,103 --> 01:03:33,043
build a system this big.

1448
01:03:33,944 --> 01:03:37,128
Well, when you do, I think you want your early steps to be abstract.

1449
01:03:37,288 --> 01:03:38,269
Yeah, I would agree with that.

1450
01:03:38,289 --> 01:03:41,493
I think that what you want to do in a procedural system, the question is do you start abstract

1451
01:03:41,553 --> 01:03:42,574
or do you start concrete?

1452
01:03:42,934 --> 01:03:48,101
I think the reality is that you start with hand designing what you want your output to

1453
01:03:48,121 --> 01:03:48,261
be.

1454
01:03:48,821 --> 01:03:51,465
And then whether you start abstract or concrete would...

1455
01:03:52,255 --> 01:03:56,597
If I was going to answer that, I would try to figure out what the riskiest thing is.

1456
01:03:56,757 --> 01:04:02,460
Is the abstract model of this the riskiest thing because the concrete is a simple tile-based

1457
01:04:02,480 --> 01:04:07,402
game or do I have a very novel concrete representation?

1458
01:04:07,542 --> 01:04:08,422
Is that very risky?

1459
01:04:08,643 --> 01:04:11,584
Then I would probably start there and try to flush the risk out of the system, the unknowns

1460
01:04:11,644 --> 01:04:12,204
out of the system.

1461
01:04:12,624 --> 01:04:14,405
It would be very dependent on context.

1462
01:04:14,905 --> 01:04:15,305
That makes sense.

1463
01:04:15,465 --> 01:04:15,626
Thanks.

1464
01:04:15,966 --> 01:04:16,166
Sure.

1465
01:04:16,306 --> 01:04:16,486
Thank you.

