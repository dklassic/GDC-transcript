1
00:00:05,907 --> 00:00:12,471
So today I'm going to be talking about animating the main villain in Marvel's Spider-Man,

2
00:00:12,471 --> 00:00:17,794
or subtitled, What? I'm Rigging How Many Legs?

3
00:00:17,794 --> 00:00:23,937
So, as you may have heard, my name is Sophie Brennan. I'm a character TD at Insomniac Games.

4
00:00:23,937 --> 00:00:29,200
This is actually our 25th year in the games industry. 25 years as a company.

5
00:00:29,200 --> 00:00:33,223
That's a pretty big milestone for a company in this industry, so go us.

6
00:00:35,624 --> 00:00:39,225
Thank you.

7
00:00:39,225 --> 00:00:41,386
A little bit about myself.

8
00:00:41,386 --> 00:00:44,127
Character TD, Rigger, whatever you want to call me,

9
00:00:44,127 --> 00:00:47,388
I've got about seven years experience.

10
00:00:47,388 --> 00:00:49,789
I worked on Marvel's Spider-Man, obviously.

11
00:00:49,789 --> 00:00:51,510
That's what I'm going to talk about today.

12
00:00:51,510 --> 00:00:55,791
Before that, I worked at Red 8 Dawn on Lone Echo

13
00:00:55,791 --> 00:00:57,312
for the Oculus, it was VR.

14
00:00:57,312 --> 00:00:59,993
And then after that, or sorry, before that,

15
00:00:59,993 --> 00:01:02,373
worked on The Order 1886, as you might have gathered

16
00:01:02,373 --> 00:01:04,374
from the little factoid before this talk.

17
00:01:06,067 --> 00:01:09,909
I just want to get this clarified.

18
00:01:09,909 --> 00:01:10,810
There will be spoilers.

19
00:01:10,810 --> 00:01:15,253
I'm going to be talking about the main villain of Spider-Man.

20
00:01:15,253 --> 00:01:19,836
So if you don't wish to be spoiled, you're out of luck.

21
00:01:19,836 --> 00:01:20,757
No, seriously, leave now.

22
00:01:20,757 --> 00:01:23,179
If you don't want to be spoiled, you've got like 10 seconds.

23
00:01:23,179 --> 00:01:25,741
The game's been out since September.

24
00:01:25,741 --> 00:01:26,621
But let's be honest here.

25
00:01:26,621 --> 00:01:31,485
Who plays video games these days anyways?

26
00:01:31,485 --> 00:01:33,586
So now that you've been warned, let's

27
00:01:33,586 --> 00:01:34,807
introduce our main villain.

28
00:01:37,931 --> 00:01:38,788
Um, there we go.

29
00:02:16,387 --> 00:02:16,787
to

30
00:02:16,787 --> 00:02:17,187
to

31
00:02:17,187 --> 00:02:17,808
to

32
00:02:17,808 --> 00:02:18,208
to

33
00:02:18,208 --> 00:02:18,608
to

34
00:02:18,608 --> 00:02:19,869
to

35
00:02:19,869 --> 00:02:20,890
to

36
00:02:20,890 --> 00:02:22,010
to

37
00:02:22,010 --> 00:02:22,351
to

38
00:03:06,264 --> 00:03:09,867
So, as you may have gathered, here's our main villain,

39
00:03:09,867 --> 00:03:11,828
Dr. Octopus, or known as Doc Ock.

40
00:03:11,828 --> 00:03:12,568
Who is Doc Ock?

41
00:03:12,568 --> 00:03:15,951
He's actually Octavius, but I mean,

42
00:03:15,951 --> 00:03:20,494
most people familiar with Spider-Man might recognize him.

43
00:03:20,494 --> 00:03:24,597
But let's talk about our Doc in Spider-Man for the PS4.

44
00:03:25,882 --> 00:03:28,943
So he's peers friendly and father-like mentor at first.

45
00:03:28,943 --> 00:03:31,284
He starts off in the journey with pure intentions

46
00:03:31,284 --> 00:03:36,645
to help the world with his advanced prosthetics research.

47
00:03:36,645 --> 00:03:39,046
However, his work combined with his own

48
00:03:39,046 --> 00:03:40,887
developing neurological disorder

49
00:03:40,887 --> 00:03:42,707
slowly turns him into our main antagonist

50
00:03:42,707 --> 00:03:44,028
over the course of the game.

51
00:03:44,028 --> 00:03:47,549
We have to show the evolution of our trusted friend and boss

52
00:03:47,549 --> 00:03:49,609
transform into our greatest foe.

53
00:03:49,609 --> 00:03:52,630
So, and this would have to be one that was strong enough

54
00:03:52,630 --> 00:03:55,531
to challenge and match the strength of Spider-Man himself.

55
00:03:56,690 --> 00:03:59,292
So a signature feature of Doc is his tentacles.

56
00:03:59,292 --> 00:04:02,454
And we wanted to foreshadow these throughout the story.

57
00:04:02,454 --> 00:04:04,516
Here you can see some earlier moments in the game

58
00:04:04,516 --> 00:04:08,458
before all turns that hint his fate.

59
00:04:08,458 --> 00:04:10,340
And then when he does turn,

60
00:04:10,340 --> 00:04:14,443
you guys can see how it goes in this clip here.

61
00:04:14,443 --> 00:04:16,825
Wait, where are the arms?

62
00:04:16,825 --> 00:04:17,065
Oh wow.

63
00:04:17,065 --> 00:04:17,525
So cool.

64
00:04:17,525 --> 00:04:25,111
But how did you?

65
00:04:25,485 --> 00:04:27,946
Intracranial neural network.

66
00:04:27,946 --> 00:04:31,567
Neurotransmission speeds under one nanosecond.

67
00:04:31,567 --> 00:04:35,469
Faster than signals travel inside the brain,

68
00:04:35,469 --> 00:04:38,170
never mind to an external prosthesis.

69
00:04:38,170 --> 00:04:41,752
We did it, Peter.

70
00:04:41,752 --> 00:04:43,513
No one can take this away from us.

71
00:04:43,513 --> 00:04:43,633
Okay, so...

72
00:04:52,375 --> 00:04:57,881
Now you know a little bit about the character, let's talk about how we went about creating him.

73
00:04:59,252 --> 00:05:02,154
Let's take a step back and let's talk about the rig itself.

74
00:05:02,154 --> 00:05:05,176
So Doc's rig is probably one of the most complicated rigs

75
00:05:05,176 --> 00:05:07,338
in our entire game.

76
00:05:07,338 --> 00:05:10,300
Bar the Faces, which by the way, Noah Alzaer,

77
00:05:10,300 --> 00:05:12,602
our fellow Insomniac and Character TD,

78
00:05:12,602 --> 00:05:14,523
is doing a talk on later this week.

79
00:05:14,523 --> 00:05:17,025
If you can go see it, it's called Superhumans of New York,

80
00:05:17,025 --> 00:05:19,947
Managing the Many Faces in Marvel's Spider-Man.

81
00:05:19,947 --> 00:05:22,769
It's here Wednesday, 5 p.m.

82
00:05:22,769 --> 00:05:23,350
Go see it.

83
00:05:24,712 --> 00:05:26,735
But back to these, they were really complicated.

84
00:05:26,735 --> 00:05:30,522
It was like having four extra characters attached to the back of Doc.

85
00:05:30,522 --> 00:05:35,851
Doc was the tentacles and without them he wasn't the formidable foe that he becomes.

86
00:05:37,041 --> 00:05:39,782
So they were important, and because of that,

87
00:05:39,782 --> 00:05:42,063
I'm going to be specifically talking about them in this talk.

88
00:05:42,063 --> 00:05:44,544
So what were they going to do in general?

89
00:05:44,544 --> 00:05:46,505
Well, we knew they were going to grab,

90
00:05:46,505 --> 00:05:48,806
they were going to reach, they were going to stretch,

91
00:05:48,806 --> 00:05:51,988
they were going to grow, swipe, attack,

92
00:05:51,988 --> 00:05:52,848
and even climb buildings.

93
00:05:52,848 --> 00:05:56,110
And we had to do this all real time and all in engine.

94
00:05:56,110 --> 00:05:58,271
And all we have in the engine at the end of the day

95
00:05:58,271 --> 00:06:01,913
is a bunch of joints.

96
00:06:01,913 --> 00:06:02,693
So how do we make them?

97
00:06:03,961 --> 00:06:06,242
So let's go over what we had at the end first, right?

98
00:06:06,242 --> 00:06:11,544
So it was, I'm sorry, an animator's nightmare, okay?

99
00:06:11,544 --> 00:06:14,506
We had four tentacles, obviously, 790 joints,

100
00:06:14,506 --> 00:06:17,327
552 of them alone in the tentacles,

101
00:06:17,327 --> 00:06:18,368
over 800,000 vertices,

102
00:06:18,368 --> 00:06:24,310
and 700,000 of them were in the tentacles.

103
00:06:24,310 --> 00:06:29,793
And of course, this was all with the biped rig

104
00:06:29,793 --> 00:06:30,693
that he was attached to.

105
00:06:32,513 --> 00:06:35,695
So initially, I wanted to create one body and one tentacle,

106
00:06:35,695 --> 00:06:39,417
and then have the tentacle duplicated at runtime

107
00:06:39,417 --> 00:06:40,937
and attached to the body.

108
00:06:40,937 --> 00:06:42,838
This way, I would only have to pay the cost

109
00:06:42,838 --> 00:06:44,759
for one tentacle on an engine, and then only have

110
00:06:44,759 --> 00:06:47,701
to maintain and update one tentacle, too.

111
00:06:47,701 --> 00:06:49,101
However, this poses some problems,

112
00:06:49,101 --> 00:06:51,382
because engine side, we didn't have the ability

113
00:06:51,382 --> 00:06:55,464
to cheaply attach and detach the tentacles.

114
00:06:55,464 --> 00:07:00,006
So and also, our anim set editor, which we animators use

115
00:07:00,006 --> 00:07:00,246
to view.

116
00:07:01,267 --> 00:07:04,731
gameplay animations couldn't support multiple models at once.

117
00:07:04,731 --> 00:07:08,215
So it meant that if they wanted to view the animations,

118
00:07:08,215 --> 00:07:12,079
they would have to view separate windows for the tentacles and for dock,

119
00:07:12,079 --> 00:07:13,140
which at the end of the day,

120
00:07:13,140 --> 00:07:16,303
wasn't very useful or efficient for them.

121
00:07:17,140 --> 00:07:19,543
So because we had a tight schedule, I mean,

122
00:07:19,543 --> 00:07:22,527
the rig had to be done in a matter of weeks,

123
00:07:22,527 --> 00:07:23,889
I decided to take an upfront course

124
00:07:23,889 --> 00:07:25,030
and instead go for plan B,

125
00:07:25,030 --> 00:07:27,533
which was everything in the kitchen sink.

126
00:07:27,533 --> 00:07:30,777
So just chuck it all in there, right?

127
00:07:30,777 --> 00:07:32,419
Good things about it was we less.

128
00:07:33,380 --> 00:07:35,920
less error prone, easier to debug,

129
00:07:35,920 --> 00:07:37,161
animators could view it in tools,

130
00:07:37,161 --> 00:07:38,861
and then also all of our mirroring,

131
00:07:38,861 --> 00:07:43,983
which in engine and in our tools came for free, right?

132
00:07:43,983 --> 00:07:47,504
But the cons of this was it was one big mess, mega asset,

133
00:07:47,504 --> 00:07:49,444
and it would be way harder to maintain

134
00:07:49,444 --> 00:07:51,224
because every time I needed to make a change

135
00:07:51,224 --> 00:07:51,925
to one of the tentacles,

136
00:07:51,925 --> 00:07:52,885
I'd have to do it three times over.

137
00:07:52,885 --> 00:07:58,466
So, our first challenge actually was also like,

138
00:07:58,466 --> 00:08:00,427
when we're building a rig, right,

139
00:08:00,427 --> 00:08:01,327
you need to know.

140
00:08:01,908 --> 00:08:05,191
the specifications of it, like how long were the tentacles?

141
00:08:05,191 --> 00:08:06,672
How could, you know, we didn't know that.

142
00:08:06,672 --> 00:08:08,193
How could we solve that?

143
00:08:08,193 --> 00:08:11,816
So my idea was to work in layers and to work iteratively.

144
00:08:11,816 --> 00:08:14,719
So I gave the animators the means to stretch the reg

145
00:08:14,719 --> 00:08:16,260
to whatever length they needed to,

146
00:08:16,260 --> 00:08:18,022
with the promise that later down the line

147
00:08:18,022 --> 00:08:19,943
I'd bring on the text seamlessly

148
00:08:19,943 --> 00:08:21,725
that would make it look correct and game.

149
00:08:22,822 --> 00:08:25,264
And this was all done via this layered system

150
00:08:25,264 --> 00:08:27,006
that I have here on the top layer.

151
00:08:27,006 --> 00:08:30,709
We have our main shape controls, our secondary controls,

152
00:08:30,709 --> 00:08:32,070
and then we have a little rigging layer.

153
00:08:32,070 --> 00:08:34,032
Don't worry about that one.

154
00:08:34,032 --> 00:08:36,855
And then below that, we had animator tweak controls,

155
00:08:36,855 --> 00:08:39,717
which honestly, they never, if ever, really touched.

156
00:08:39,717 --> 00:08:41,639
It was just for little tweaks to the shapes.

157
00:08:42,700 --> 00:08:45,662
And then below that, everything below that was free for all.

158
00:08:45,662 --> 00:08:46,503
That was free game for me.

159
00:08:46,503 --> 00:08:47,704
I could play with that to my heart's content

160
00:08:47,704 --> 00:08:49,545
and not affect any of the animation,

161
00:08:49,545 --> 00:08:51,307
which means I could increase resolution,

162
00:08:51,307 --> 00:08:54,730
decrease resolution, move joints, and animators.

163
00:08:54,730 --> 00:08:57,512
Animations would be unaffected.

164
00:09:00,902 --> 00:09:04,382
So another thing is, how do we actually build it?

165
00:09:04,382 --> 00:09:08,323
Like so I said, the tentacles were 20 meters long

166
00:09:08,323 --> 00:09:10,104
in the end, right?

167
00:09:10,104 --> 00:09:14,085
So in our rigging tool set, we have the ability

168
00:09:14,085 --> 00:09:17,005
to specify both bind pose and rig pose.

169
00:09:17,005 --> 00:09:19,506
And that allowed us to give the animators

170
00:09:19,506 --> 00:09:22,407
the pose on the left, which is obviously much more

171
00:09:22,407 --> 00:09:23,447
easy to work with.

172
00:09:23,447 --> 00:09:26,507
But whenever I needed to go in and edit the rig itself,

173
00:09:26,507 --> 00:09:30,448
with one button click, I could snap it back to our bind pose

174
00:09:30,448 --> 00:09:30,748
and edit.

175
00:09:30,869 --> 00:09:35,152
the tentacles at their full length.

176
00:09:35,152 --> 00:09:36,673
And why did we need to do that?

177
00:09:36,673 --> 00:09:38,895
Well, because I needed to build this,

178
00:09:38,895 --> 00:09:42,117
which was the ability to telescope the tentacles.

179
00:09:42,117 --> 00:09:45,480
So the stretchy one is what the animators

180
00:09:45,480 --> 00:09:47,942
started to work with, and the telescoping one

181
00:09:47,942 --> 00:09:51,284
is the more realistic, correct version of the tentacle.

182
00:09:53,232 --> 00:09:56,534
The animators also had the ability to slide the tentacles as well,

183
00:09:56,534 --> 00:09:58,916
so they would position the series of controls,

184
00:09:58,916 --> 00:10:03,478
and then with one attribute, they could dial up and down the slide

185
00:10:03,478 --> 00:10:06,740
and have the tentacle slide through all the controls back and forward.

186
00:10:11,935 --> 00:10:14,077
And then how did the animators pose it out?

187
00:10:14,077 --> 00:10:15,438
So the concept was pretty simple.

188
00:10:15,438 --> 00:10:18,319
I started with big to small shapes.

189
00:10:18,319 --> 00:10:22,202
So the big teardrop shapes are the main controls.

190
00:10:22,202 --> 00:10:23,883
There's the end one and the middle one.

191
00:10:23,883 --> 00:10:25,604
You position those first.

192
00:10:25,604 --> 00:10:28,306
You'd move on to the bigger squares,

193
00:10:28,306 --> 00:10:32,149
which would kind of get you your middle shapes.

194
00:10:32,149 --> 00:10:34,571
And then you would finalize your S-curves

195
00:10:34,571 --> 00:10:36,932
with the smaller shapes.

196
00:10:37,471 --> 00:10:42,294
Due to the way I built the ribbon-slide method, which is what this rig uses,

197
00:10:42,294 --> 00:10:46,757
at one point we had to have a decision, which was, unfortunately,

198
00:10:46,757 --> 00:10:49,639
when the animators began to twist the tentacle...

199
00:10:50,590 --> 00:10:53,472
the tentacle would flip out and go crazy at points.

200
00:10:53,472 --> 00:10:56,394
And that was because of the way I'd set up the skinning

201
00:10:56,394 --> 00:10:57,615
on the spline itself.

202
00:10:57,615 --> 00:11:00,937
So we decided to forego the nice S curves

203
00:11:00,937 --> 00:11:03,118
that we used to get on the top layers for free

204
00:11:03,118 --> 00:11:04,419
to get more stability.

205
00:11:04,419 --> 00:11:08,902
So we sacrificed positioning more controls

206
00:11:08,902 --> 00:11:11,723
for the ability to make sure that the tentacle stayed stable

207
00:11:11,723 --> 00:11:12,704
when they were animating it,

208
00:11:12,704 --> 00:11:17,087
because this thing went all over the place.

209
00:11:17,087 --> 00:11:18,107
Oh, I don't know why it keeps doing that.

210
00:11:19,122 --> 00:11:22,205
And as a finishing touch, we added two types of sine waves

211
00:11:22,205 --> 00:11:24,848
on top of the tentacle.

212
00:11:24,848 --> 00:11:26,730
So this was a set up we also used in our web regs

213
00:11:26,730 --> 00:11:27,891
in the game.

214
00:11:27,891 --> 00:11:29,392
And animators were familiar with it,

215
00:11:29,392 --> 00:11:32,115
but they could just dial in their amplitude and wavelength,

216
00:11:32,115 --> 00:11:35,719
whatever, and then animate the offset.

217
00:11:35,719 --> 00:11:36,179
And there you go.

218
00:11:36,179 --> 00:11:37,581
You get some free wiggling there.

219
00:11:42,592 --> 00:11:45,812
Last thing I had to do was support IK.

220
00:11:45,812 --> 00:11:50,214
As I said, they were walked on, they held things.

221
00:11:50,214 --> 00:11:52,314
We actually had IK and FK in the rig,

222
00:11:52,314 --> 00:11:55,075
but due to our time constraints, I couldn't build a tool

223
00:11:55,075 --> 00:11:58,916
that would blend between the two effectively in time.

224
00:11:58,916 --> 00:12:02,156
So the solution to that was basically just

225
00:12:02,156 --> 00:12:03,597
hold the animators down and say,

226
00:12:03,597 --> 00:12:05,397
please make sure you're using the right mode

227
00:12:05,397 --> 00:12:06,818
before you start animating it.

228
00:12:06,818 --> 00:12:07,818
And I think they got the point.

229
00:12:12,089 --> 00:12:15,411
So let's actually break down how the tentacle rig works.

230
00:12:15,411 --> 00:12:19,075
So here are all our attributes that the animators

231
00:12:19,075 --> 00:12:24,039
can animate on it.

232
00:12:24,039 --> 00:12:25,220
We'll break it down from the top down.

233
00:12:25,220 --> 00:12:29,223
So slide is how much the tentacle is sliding.

234
00:12:29,223 --> 00:12:30,124
So 0 is no sliding.

235
00:12:30,124 --> 00:12:33,466
And then minus 1 is retracted fully.

236
00:12:33,466 --> 00:12:35,588
There's a visual example for you.

237
00:12:35,588 --> 00:12:39,431
We also had thickness, start thickness.

238
00:12:40,568 --> 00:12:43,309
And by the way, we used these very sparingly.

239
00:12:43,309 --> 00:12:48,051
This was just to play it up to the camera if we needed to.

240
00:12:48,051 --> 00:12:49,032
And also our stretch mode.

241
00:12:49,032 --> 00:12:50,893
So that was what we talked about earlier,

242
00:12:50,893 --> 00:12:54,214
which was whether or not the animators enabled

243
00:12:54,214 --> 00:12:55,175
telescoping or not.

244
00:13:03,736 --> 00:13:06,757
So here's the equivalent variables we're going to be using.

245
00:13:06,757 --> 00:13:08,137
So this is, I've written this out

246
00:13:08,137 --> 00:13:10,417
in a bit of pseudocode for you.

247
00:13:10,417 --> 00:13:13,798
We actually use Maya's node network,

248
00:13:13,798 --> 00:13:16,919
but the logic is still the same.

249
00:13:16,919 --> 00:13:19,299
So we have our slide, our thickness scale,

250
00:13:19,299 --> 00:13:21,479
our start thickness, our end thickness,

251
00:13:21,479 --> 00:13:22,640
and our stretch mode, right?

252
00:13:22,640 --> 00:13:24,920
And then we have some static parameters

253
00:13:24,920 --> 00:13:25,820
we've got to keep track of,

254
00:13:25,820 --> 00:13:27,641
which is our total number of joints.

255
00:13:27,641 --> 00:13:29,401
So say we have 55 joints in a tentacle,

256
00:13:29,401 --> 00:13:31,682
which by the way is being a bit conservative here.

257
00:13:32,603 --> 00:13:37,787
Our start length, which is the overall length of the ribbon before we start animating it.

258
00:13:37,787 --> 00:13:41,450
And our joint number, which is the joint we're actually tracking.

259
00:13:41,450 --> 00:13:47,315
So this code I'm about to show you is duplicated for every joint that's in the rig.

260
00:13:47,315 --> 00:13:51,058
And so say we're targeting joint 18 right now.

261
00:13:51,058 --> 00:13:53,360
And then we have a dynamic value, which is the current length.

262
00:13:53,360 --> 00:13:56,783
So we need that current length to figure out the scalar value of the tentacle overall.

263
00:13:59,347 --> 00:14:02,948
So then we use all that to get our joint's position.

264
00:14:02,948 --> 00:14:04,429
So this is before scaling slides.

265
00:14:04,429 --> 00:14:06,690
So we first, we work out our incremental value,

266
00:14:06,690 --> 00:14:08,971
which is one divided by number of joints plus one.

267
00:14:08,971 --> 00:14:12,872
And to get a joint position in zero to one clamp space,

268
00:14:12,872 --> 00:14:14,013
we times that by a joint number,

269
00:14:14,013 --> 00:14:15,173
which by the way, I said was like 18.

270
00:14:15,173 --> 00:14:18,795
To get a ribbon scaler value,

271
00:14:18,795 --> 00:14:20,796
we take our start length of a ribbon

272
00:14:20,796 --> 00:14:22,557
and divide it by a current length.

273
00:14:22,557 --> 00:14:23,297
And that gives you this.

274
00:14:23,297 --> 00:14:25,518
So there it is chilling out on the surface right there.

275
00:14:26,670 --> 00:14:29,133
But if we want to add some extra logic to this,

276
00:14:29,133 --> 00:14:32,698
or stretchy chain logic, or telescoping logic,

277
00:14:32,698 --> 00:14:36,442
we have to first get the current position scale, which

278
00:14:36,442 --> 00:14:40,206
is our ribbon scalar value, and times by our joint position.

279
00:14:42,017 --> 00:14:44,418
Then if we want to figure out slide,

280
00:14:44,418 --> 00:14:46,419
which was another attribute you could animate

281
00:14:46,419 --> 00:14:48,679
as you saw a couple of slides back,

282
00:14:48,679 --> 00:14:50,100
we need our reverse joint position,

283
00:14:50,100 --> 00:14:53,641
which is one negative current joint position scale.

284
00:14:53,641 --> 00:14:56,201
And then finally we get our UV position

285
00:14:56,201 --> 00:15:00,263
by adding slide onto that, which gives you this.

286
00:15:00,263 --> 00:15:04,984
Same thing for the grow chain logic,

287
00:15:04,984 --> 00:15:06,144
except miss the first line.

288
00:15:06,144 --> 00:15:08,765
This is what it looks like in action.

289
00:15:11,473 --> 00:15:17,356
So finally, we're actually running two concurrent logic

290
00:15:17,356 --> 00:15:19,176
for the tentacles under the hood.

291
00:15:19,176 --> 00:15:24,458
We have our stretchy tentacle and our telescoping tentacle.

292
00:15:24,458 --> 00:15:26,979
So we have to figure out which one we've got enabled.

293
00:15:26,979 --> 00:15:28,300
So we have our blender value, which

294
00:15:28,300 --> 00:15:31,881
is we get that stretch node and we get one

295
00:15:31,881 --> 00:15:34,182
and we negative the stretch mode from that.

296
00:15:34,182 --> 00:15:36,143
And that's essentially a reverse node in Maya.

297
00:15:36,823 --> 00:15:40,449
and in that we feed a world space position.

298
00:15:40,449 --> 00:15:44,395
I got these from Motion Paths, but you can get them however you want.

299
00:15:44,395 --> 00:15:47,781
And then that will tell you, you know, where it is depending on which tentacle

300
00:15:47,781 --> 00:15:50,325
you've, or which setup you're using.

301
00:15:51,892 --> 00:15:55,675
Same thing for thickness as well, because we need to find out the comparative thickness

302
00:15:55,675 --> 00:15:59,217
and it's different for whether it's stretchy or whether it's telescoping.

303
00:15:59,217 --> 00:16:05,441
So we get that same value and then we do some extra maths here, we give it an arbitrary

304
00:16:05,441 --> 00:16:10,304
number of 0.05 just because Maya does not like to divide by zero, in fact really nothing

305
00:16:10,304 --> 00:16:10,585
does.

306
00:16:13,283 --> 00:16:17,844
And then so finally we have our thickness stuff, our thickness values here,

307
00:16:17,844 --> 00:16:20,425
thickness, start thickness, end thickness.

308
00:16:20,425 --> 00:16:23,566
We need to use all them to calculate the end thickness,

309
00:16:23,566 --> 00:16:28,527
which is we get our thickness difference, start thickness minus end thickness.

310
00:16:28,527 --> 00:16:31,868
Then we get our position thickness difference by getting our joint position 0 to 1,

311
00:16:31,868 --> 00:16:36,489
which we got way back a few slides, times that by the thickness difference we just got.

312
00:16:36,489 --> 00:16:42,490
Start thickness, difference position we get by adding the previous value onto our start thickness value. .

313
00:16:43,390 --> 00:16:48,513
And then we get our joint scale thickness by getting the thickness scale

314
00:16:48,513 --> 00:16:52,755
And timesing that by our start thickness difference position that we just got

315
00:16:52,755 --> 00:16:56,237
Finally we get our scalar value by getting the output u of e

316
00:16:56,237 --> 00:16:59,639
Which was another couple of slides back as well by that joint scale thickness

317
00:16:59,639 --> 00:17:03,481
We just calculated and that is a lot to say by the way, that's really difficult to talk through

318
00:17:06,329 --> 00:17:11,757
The reason it's scale-y in this instance is actually because I used world space

319
00:17:11,757 --> 00:17:16,925
joints and world space numbers for this because it's much easier for all the nodes I was using.

320
00:17:16,925 --> 00:17:20,990
So in the case of doc, negative z was down the axis and you don't want to scale down the axis.

321
00:17:22,950 --> 00:17:24,671
So let's move on to usability.

322
00:17:24,671 --> 00:17:27,832
So the first thing I discovered is that speed matters a lot.

323
00:17:27,832 --> 00:17:29,573
Animators need to be able to block out the poses fast.

324
00:17:29,573 --> 00:17:32,914
So as you may imagine, the rig was slow

325
00:17:32,914 --> 00:17:34,595
due to the number of joints and skin vertices.

326
00:17:34,595 --> 00:17:37,577
But one of our animators, Chris Lally,

327
00:17:37,577 --> 00:17:39,217
made a proxy rig and figured out

328
00:17:39,217 --> 00:17:42,059
that if you use boxes instead, the rig ran faster.

329
00:17:42,059 --> 00:17:43,779
And the less boxes he used,

330
00:17:43,779 --> 00:17:45,300
the less joints it was calculating.

331
00:17:45,600 --> 00:17:48,302
So you can see here, we actually rolled that into the rig

332
00:17:48,302 --> 00:17:50,243
and gave them proxy tiers to work with.

333
00:17:50,243 --> 00:17:53,265
So they could decide what level of visibility

334
00:17:53,265 --> 00:17:55,906
they needed to make the rig run faster

335
00:17:55,906 --> 00:17:57,147
when they needed to do that.

336
00:17:57,147 --> 00:17:57,567
Oops, sorry.

337
00:18:03,358 --> 00:18:06,883
Another usability issue was just the amount of noise on the screen.

338
00:18:06,883 --> 00:18:10,808
So there was a lot of controls and obviously the tentacles.

339
00:18:10,808 --> 00:18:14,453
So we added the ability to turn off the tentacles when they wanted to,

340
00:18:14,453 --> 00:18:17,537
which meant that an animator could focus on one tentacle

341
00:18:17,537 --> 00:18:20,321
and also it would give them a speed increase in the scene.

342
00:18:22,684 --> 00:18:24,946
So what kind of constraints did we hit or hurdles?

343
00:18:24,946 --> 00:18:27,369
Our first major one was vertex swimming.

344
00:18:27,369 --> 00:18:31,513
So our engine tries to smartly calculate

345
00:18:31,513 --> 00:18:33,495
the bounding box of an object,

346
00:18:33,495 --> 00:18:35,778
but because doc went up to 20 meters,

347
00:18:35,778 --> 00:18:40,182
the engine kind of optimizes various positions

348
00:18:40,182 --> 00:18:41,924
to compensate for that,

349
00:18:41,924 --> 00:18:43,926
and it would cause this result of things swimming.

350
00:18:46,542 --> 00:18:50,366
To fix that, it was only really apparent in a couple of shots.

351
00:18:50,366 --> 00:18:53,929
So we decided to fix it just on the spot for each thing.

352
00:18:53,929 --> 00:18:55,350
And the solution to that was this

353
00:18:55,350 --> 00:18:57,472
is our cinematic editor on the right

354
00:18:57,472 --> 00:18:59,674
and a shot of Doc on the left.

355
00:18:59,674 --> 00:19:02,997
You can see Doc's multiple, yeah.

356
00:19:03,457 --> 00:19:06,000
It has several tracks there, three times.

357
00:19:06,000 --> 00:19:07,522
And I'll give you a close-up of that.

358
00:19:07,522 --> 00:19:10,386
There's one for his body, which had all his body in it.

359
00:19:10,386 --> 00:19:13,089
So we split it out and we turned off the tentacles

360
00:19:13,089 --> 00:19:15,312
on his body so that the boundary box it drew was smaller.

361
00:19:15,312 --> 00:19:17,435
And that meant that the area around his face

362
00:19:17,435 --> 00:19:19,437
and his collar and stuff didn't suffer

363
00:19:19,437 --> 00:19:20,478
from the vertex swimming.

364
00:19:21,580 --> 00:19:23,802
The tentacles we just left as is because they were fine.

365
00:19:23,802 --> 00:19:29,909
And the head and goggles, we actually ended up putting the goggles on the head as well.

366
00:19:29,909 --> 00:19:35,695
That helped with the vertex swimming issue and also Noah, who rigged the face,

367
00:19:35,695 --> 00:19:40,140
added special controls for the goggles to follow the face.

368
00:19:42,699 --> 00:19:44,581
Another thing was it was really expensive.

369
00:19:44,581 --> 00:19:47,024
We had several look states, which

370
00:19:47,024 --> 00:19:50,908
we used to determine whether damage states or whatever.

371
00:19:50,908 --> 00:19:53,531
We had 42 individual vanity toggles.

372
00:19:53,531 --> 00:19:56,655
You can see on the right-hand side there.

373
00:19:56,655 --> 00:19:59,158
And these included our damage states, our VFX,

374
00:19:59,158 --> 00:20:00,580
and the extendable tentacles.

375
00:20:01,220 --> 00:20:04,021
And on top of that, we had three LOD tiers.

376
00:20:04,021 --> 00:20:06,642
So it was a really big asset.

377
00:20:06,642 --> 00:20:10,664
And to drive that home, the Maya file

378
00:20:10,664 --> 00:20:12,785
itself was over 300 megabytes.

379
00:20:12,785 --> 00:20:18,327
There was 14,000 plus nodes in the tentacles alone,

380
00:20:18,327 --> 00:20:20,828
which is, by the way, why I scripted them all.

381
00:20:20,828 --> 00:20:24,029
And we had 520 animator controls.

382
00:20:24,029 --> 00:20:28,631
But luckily, we made a nice picker UI for the animators

383
00:20:28,631 --> 00:20:29,651
so they didn't all go insane.

384
00:20:32,635 --> 00:20:34,536
So with that all squared up, let's

385
00:20:34,536 --> 00:20:38,599
talk about our achievements.

386
00:20:38,599 --> 00:20:41,740
First of all, we got a rig up and running very fast.

387
00:20:41,740 --> 00:20:45,803
I had the rig in the animator's hands within a week.

388
00:20:45,803 --> 00:20:48,905
And to start from nothing to giving them a full rig,

389
00:20:48,905 --> 00:20:49,805
that was pretty awesome.

390
00:20:49,805 --> 00:20:52,527
And it was actually usable for them.

391
00:20:52,527 --> 00:20:56,189
This is partially due to our incredible in-house rigging

392
00:20:56,189 --> 00:21:00,691
system, and also because I knew that I could add more systems

393
00:21:00,691 --> 00:21:01,191
online later.

394
00:21:02,521 --> 00:21:06,224
And that leads into the second point, features planned ahead.

395
00:21:06,224 --> 00:21:10,528
Planning ahead and knowing that I could iterate over the course of months

396
00:21:10,528 --> 00:21:13,570
instead of blocking out a huge block of time

397
00:21:13,570 --> 00:21:17,654
and potentially stopping animators working paid off in the end.

398
00:21:18,921 --> 00:21:21,261
We had great animation, thanks to the animators,

399
00:21:21,261 --> 00:21:23,902
especially, I would like to call out Chris Lally,

400
00:21:23,902 --> 00:21:24,822
one of our animators.

401
00:21:24,822 --> 00:21:26,043
There was a lot of back and forth,

402
00:21:26,043 --> 00:21:27,583
where I would hand him the technical rig

403
00:21:27,583 --> 00:21:29,223
and he'd hand it back and tell me how to change it.

404
00:21:29,223 --> 00:21:31,844
And the first few weeks of doing that were key

405
00:21:31,844 --> 00:21:33,424
to making sure that the behaviors

406
00:21:33,424 --> 00:21:34,364
were what the animators needed.

407
00:21:34,364 --> 00:21:37,825
And finally, we actually had a single asset

408
00:21:37,825 --> 00:21:39,185
for both gameplay and cinematics.

409
00:21:39,185 --> 00:21:41,366
So no cheating, we didn't have any special shots

410
00:21:41,366 --> 00:21:43,206
with any special rigs.

411
00:21:43,206 --> 00:21:46,787
The rig was built to cope and work in every scenario

412
00:21:46,787 --> 00:21:47,627
that we could think of.

413
00:21:49,234 --> 00:21:50,215
So what can we do to improve it?

414
00:21:50,215 --> 00:21:54,697
First thing I'd like to have is one time tentacle

415
00:21:54,697 --> 00:21:58,920
attaching tech, and also the ability to procedurally extend

416
00:21:58,920 --> 00:22:02,202
so that I wouldn't have to build 20 meters of tentacle

417
00:22:02,202 --> 00:22:04,143
into the rig and make animators cry

418
00:22:04,143 --> 00:22:05,183
whenever they load the scene.

419
00:22:07,623 --> 00:22:09,124
Faster rig to animate is quicker.

420
00:22:09,124 --> 00:22:11,945
So the fact that Chris had to find out

421
00:22:11,945 --> 00:22:14,826
how to speed up the rig, I wish I'd done that sooner.

422
00:22:14,826 --> 00:22:18,947
I wish I'd realized that the time it was taken for him

423
00:22:18,947 --> 00:22:21,488
to animate this rig, and that it was super, super important

424
00:22:21,488 --> 00:22:23,389
to get something fast in his hands.

425
00:22:23,389 --> 00:22:27,471
It would be nice to support IKFT matching.

426
00:22:27,471 --> 00:22:31,212
And as I said earlier, we sacrificed

427
00:22:31,212 --> 00:22:33,613
the shaping of the tentacle so that we could get stability.

428
00:22:34,548 --> 00:22:40,811
We already have tests and rigs in-house

429
00:22:40,811 --> 00:22:43,533
that can do that using variations of this tech,

430
00:22:43,533 --> 00:22:45,414
so I know that's possible.

431
00:22:45,414 --> 00:22:49,556
So let's sum it all up.

432
00:22:49,556 --> 00:22:52,097
We made a super versatile tentacle rig

433
00:22:52,097 --> 00:22:56,780
that we have rolled into our rigging toolbox internally,

434
00:22:56,780 --> 00:22:59,181
and it's pretty awesome.

435
00:22:59,181 --> 00:23:01,883
It's pretty awesome to use that to inform future tech.

436
00:23:03,934 --> 00:23:06,576
We also made one of the best gaming superhero villains ever.

437
00:23:06,576 --> 00:23:11,679
I mean, I know that's a bit subjective, but people really digged it.

438
00:23:11,679 --> 00:23:13,961
And I know I've probably spoiled a lot for you in this talk,

439
00:23:13,961 --> 00:23:16,983
but if I'm not going to spoil one thing, it's the actual ending of the game.

440
00:23:16,983 --> 00:23:19,645
If you haven't played the game, please go play it.

441
00:23:19,645 --> 00:23:21,667
People love the ending.

442
00:23:21,667 --> 00:23:24,749
It's a fantastic performance.

443
00:23:25,486 --> 00:23:28,928
And speaking of, the performance was actually so good

444
00:23:28,928 --> 00:23:31,209
that we were nominated for a VES award,

445
00:23:31,209 --> 00:23:33,010
specifically for Doc.

446
00:23:33,010 --> 00:23:33,751
And it was really cool,

447
00:23:33,751 --> 00:23:36,232
because I actually was personally nominated

448
00:23:36,232 --> 00:23:37,113
as one of the nominees,

449
00:23:37,113 --> 00:23:40,595
and I got to attend the VES award,

450
00:23:40,595 --> 00:23:43,597
which was one of the highlights of my career.

451
00:23:43,597 --> 00:23:47,179
I got to wear a kel and drink some free booze,

452
00:23:47,179 --> 00:23:47,719
all the good stuff.

453
00:23:50,151 --> 00:23:54,313
With that, I'd like to say thank you to all of our Insomniacs.

454
00:23:54,313 --> 00:23:56,994
Without you, the game would not be possible.

455
00:23:56,994 --> 00:23:59,796
Obviously, all of our partners as well.

456
00:23:59,796 --> 00:24:02,057
We try and stay humble at Insomniac

457
00:24:02,057 --> 00:24:03,918
and acknowledge each other as much as we can.

458
00:24:03,918 --> 00:24:07,119
So with that, you know, I talk a lot about what I did,

459
00:24:07,119 --> 00:24:08,400
but it's really what we did.

460
00:24:08,400 --> 00:24:11,462
It wouldn't have been possible without the entire team.

461
00:24:11,462 --> 00:24:15,143
And thanks to you guys for coming and listening to this talk.

462
00:24:15,143 --> 00:24:18,505
Speaking of great teams, we are hiring.

463
00:24:20,026 --> 00:24:24,290
If you like what you see, we have positions.

464
00:24:24,290 --> 00:24:25,991
You can come talk to me.

465
00:24:25,991 --> 00:24:29,794
My Twitter is up there, Waffles.

466
00:24:29,794 --> 00:24:30,715
My DMs are open.

467
00:24:30,715 --> 00:24:33,117
I will try to answer them in a timely manner.

468
00:24:33,117 --> 00:24:34,978
Questions?

469
00:24:46,527 --> 00:24:48,168
Also, thank you guys for being really gentle.

470
00:24:48,168 --> 00:24:49,308
This is my first GDC talk,

471
00:24:49,308 --> 00:24:50,869
so I'm nervous as all hell right now.

472
00:24:50,869 --> 00:24:51,269
Woo!

473
00:24:51,269 --> 00:24:51,349
Woo!

474
00:24:51,349 --> 00:24:51,510
Woo!

475
00:24:51,510 --> 00:24:51,570
Woo!

476
00:24:51,570 --> 00:24:51,770
Woo!

477
00:24:51,770 --> 00:24:51,830
Woo!

478
00:24:51,830 --> 00:24:51,990
Woo!

479
00:24:51,990 --> 00:24:52,170
Woo!

480
00:24:52,170 --> 00:24:52,230
Woo!

481
00:24:52,230 --> 00:24:52,310
Woo!

482
00:24:52,310 --> 00:25:01,994
I've actually got another one tomorrow as well,

483
00:25:01,994 --> 00:25:08,017
because there's something wrong with me.

484
00:25:08,017 --> 00:25:08,057
Ha!

485
00:25:08,057 --> 00:25:08,277
Ha!

486
00:25:08,277 --> 00:25:09,158
All right, got a question?

487
00:25:09,158 --> 00:25:10,218
Yeah, just wait until you're ready.

488
00:25:11,521 --> 00:25:12,842
So first of all, fantastic talk.

489
00:25:12,842 --> 00:25:15,304
A couple of questions, if that's OK.

490
00:25:15,304 --> 00:25:17,445
So when it comes to scene performance,

491
00:25:17,445 --> 00:25:22,509
were you generally getting 30 frames per second in your scenes?

492
00:25:22,509 --> 00:25:24,670
So the question was, do we normally

493
00:25:24,670 --> 00:25:27,212
get 30 frames per second in our scenes?

494
00:25:27,212 --> 00:25:29,093
First of all, excellent accent.

495
00:25:29,093 --> 00:25:29,473
I really dig it.

496
00:25:29,473 --> 00:25:29,653
Ditto.

497
00:25:29,653 --> 00:25:33,736
A bit more authentic than mine by now, I'd imagine,

498
00:25:33,736 --> 00:25:34,977
but whatever.

499
00:25:37,094 --> 00:25:41,641
I would say generally, that would be a question for the animators, but I would err on, with

500
00:25:41,641 --> 00:25:47,709
our proxy rigs, possibly, but, or maybe definitely in some of the lighter scenes, in some of

501
00:25:47,709 --> 00:25:48,690
the heavier scenes.

502
00:25:48,690 --> 00:25:54,318
I mean, one scene in particular, we had a crowd below of like 20 people at least.

503
00:25:54,398 --> 00:25:57,459
I don't even know how many more, actually, and Doc himself.

504
00:25:57,459 --> 00:25:59,760
And I would say no in that instance.

505
00:25:59,760 --> 00:26:02,480
But we did devise a lot of tools in-house

506
00:26:02,480 --> 00:26:03,860
to try and alleviate that.

507
00:26:03,860 --> 00:26:06,981
We would have geocaching to cache out

508
00:26:06,981 --> 00:26:09,642
geometry and characters.

509
00:26:09,642 --> 00:26:13,822
We had proxy rig stubbins for every single character

510
00:26:13,822 --> 00:26:16,223
of every different archetype.

511
00:26:16,223 --> 00:26:18,143
So obviously, we said to the animators, please, please,

512
00:26:18,143 --> 00:26:19,804
please unreference things if you're not using them,

513
00:26:19,804 --> 00:26:20,704
because that really helps, too.

514
00:26:22,917 --> 00:26:27,341
We also, the one problem we did have was like parallel mode.

515
00:26:27,341 --> 00:26:30,683
We were using 2016 and parallel mode in 2016 tended to crash

516
00:26:30,683 --> 00:26:32,505
with a lot of our skinned regs.

517
00:26:32,505 --> 00:26:37,569
So to avoid that, we just used regs with direct parenting

518
00:26:37,569 --> 00:26:39,871
and geo underneath them and that got people working

519
00:26:39,871 --> 00:26:41,612
in parallel, which honestly is one of the biggest

520
00:26:41,612 --> 00:26:42,713
speed increases you could get.

521
00:26:44,057 --> 00:26:48,079
It's worthwhile noticing that the invisibility evaluator

522
00:26:48,079 --> 00:26:49,839
in Maya is known to cause crashes as well,

523
00:26:49,839 --> 00:26:50,519
just in case people are...

524
00:26:50,519 --> 00:26:51,240
Oh, really?

525
00:26:51,240 --> 00:26:54,661
Yeah, I think everything causes crashes in Maya,

526
00:26:54,661 --> 00:26:54,961
to be fair.

527
00:26:54,961 --> 00:27:00,443
Just one other thing, did you reference the rigs as well?

528
00:27:00,443 --> 00:27:03,344
Did we reference the rigs in the scenes?

529
00:27:03,344 --> 00:27:03,524
Yeah.

530
00:27:03,524 --> 00:27:04,184
Okay, cool, that's it.

531
00:27:04,184 --> 00:27:04,604
Perfect, thanks.

532
00:27:04,604 --> 00:27:05,124
Cheers.

533
00:27:05,124 --> 00:27:08,065
After you, sir.

534
00:27:08,463 --> 00:27:09,644
Thank you.

535
00:27:09,644 --> 00:27:15,387
Excuse me, how do you manage when there's gameplay scenes and everything's kind of dynamic

536
00:27:15,387 --> 00:27:19,370
with the character's position and all the chaos breaking loose, how do you manage to

537
00:27:19,370 --> 00:27:21,891
rig on those situations?

538
00:27:21,891 --> 00:27:26,614
The question was how do we manage the regs and chaotic gameplay scenes?

539
00:27:27,908 --> 00:27:30,388
Well, I mean, that's more of an animator's question, really.

540
00:27:30,388 --> 00:27:32,849
I mean, we have a bunch of things in the rig to support that.

541
00:27:32,849 --> 00:27:37,310
We have like sync joints and motion joints that are joints with positions

542
00:27:37,310 --> 00:27:41,850
that animators can use to line up various actions in the game.

543
00:27:41,850 --> 00:27:46,671
But in terms of rig stuff, apart from that and phase joints for,

544
00:27:46,671 --> 00:27:48,872
I think, footstepping and stuff like that, there isn't...

545
00:27:48,872 --> 00:27:51,172
It's more up to the animators to make sure that they

546
00:27:51,172 --> 00:27:55,673
use all the tools available to them to make things sync up in game.

547
00:27:56,586 --> 00:27:57,407
Thanks.

548
00:27:57,407 --> 00:27:57,747
Cheers.

549
00:27:57,747 --> 00:28:01,570
Oh, this is my last question.

550
00:28:01,570 --> 00:28:03,091
Make a good one.

551
00:28:03,091 --> 00:28:04,012
Pressure's on.

552
00:28:04,012 --> 00:28:07,574
Well, first and foremost, amazing work, by the way.

553
00:28:07,574 --> 00:28:10,397
Sorry for shouting into the mic.

554
00:28:10,397 --> 00:28:14,760
So with a project like that, with a rig that, first off,

555
00:28:14,760 --> 00:28:18,643
amazing and complex, what was the first thing

556
00:28:18,643 --> 00:28:21,325
you were thinking about with regards to management

557
00:28:21,325 --> 00:28:24,948
and building it up with trying to keep as many?

558
00:28:25,928 --> 00:28:30,030
parts going at the same time and progressing forward? What were you keeping in your mind

559
00:28:30,030 --> 00:28:36,092
when you were putting the initial stages together? So the question was, what did I keep in mind when

560
00:28:36,092 --> 00:28:41,093
I was initially setting up or planning out rigs like that? I mean, the first thing you really got

561
00:28:41,093 --> 00:28:46,835
to think about is as soon as you make something and release it into the wild, people are going

562
00:28:46,835 --> 00:28:49,256
to run with it. So you better make it like...

563
00:28:50,000 --> 00:28:56,985
somewhat foolproof and know that people are going to use it to generate content

564
00:28:56,985 --> 00:29:00,887
and you want to try and keep that content and support that content.

565
00:29:00,887 --> 00:29:05,650
So I would say, unless you're very secretly in cahoots with one other person

566
00:29:05,650 --> 00:29:07,291
and you're passing back and forth a file,

567
00:29:07,291 --> 00:29:13,934
I would make sure that whatever you release to the team can...

568
00:29:14,435 --> 00:29:20,242
the work they do on it can be preserved for all the next upgrades that you do on it on the rig itself.

569
00:29:20,242 --> 00:29:25,529
Fantastic, thank you. Cheers. Cool, I think that's us.

