1
00:00:03,923 --> 00:00:12,629
Hello. How's everyone doing? It's Friday. Last day of GDC. I know. I should say goodbye

2
00:00:12,649 --> 00:00:17,232
to everyone today. Say goodbye to your friends. We'll see each other again next year. Thanks

3
00:00:17,252 --> 00:00:22,456
for coming to this super nerdy talk about mobile control schemes. You're all super nerds

4
00:00:22,476 --> 00:00:27,379
for being here, and I love you all, so thank you for coming. I'm Kayla. I'm a game director

5
00:00:27,459 --> 00:00:32,322
at Roadhouse Interactive. We are a studio up in Vancouver, Canada. We make mobile games.

6
00:00:32,954 --> 00:00:39,477
We were founded in 2009, and we have just over 100 really fancy, talented individuals working on a whole bunch of games.

7
00:00:40,878 --> 00:00:45,141
One of those games, and the one we're going to talk about today, is called Warhammer 40K Carnage.

8
00:00:45,901 --> 00:00:50,564
It is an action RPG side-scrolling platformer. I'll try to say that ten times fast.

9
00:00:51,404 --> 00:00:54,966
And it was released on mobile and tablet devices around May last year.

10
00:00:55,807 --> 00:01:00,569
We worked with our good friends at Games Workshop on this game, and it was pretty cool.

11
00:01:00,710 --> 00:01:01,690
Like the title must...

12
00:01:02,391 --> 00:01:06,234
I've said it's a platforming game, and so this talk is about the controls for that.

13
00:01:07,174 --> 00:01:09,116
Really, back in the day, it used to be so easy.

14
00:01:09,356 --> 00:01:13,119
We had these controllers that we could develop for, and they were a known good.

15
00:01:13,739 --> 00:01:16,121
As developers, all we could really do was figure out

16
00:01:16,761 --> 00:01:19,964
what buttons would do when you pressed them in the game.

17
00:01:19,984 --> 00:01:21,725
We focused on the gameplay actions,

18
00:01:22,185 --> 00:01:24,767
and just mapped them to different buttons on the controller.

19
00:01:25,828 --> 00:01:28,590
We didn't have to think about what that controller layout was like,

20
00:01:29,450 --> 00:01:30,431
or anything like that.

21
00:01:30,511 --> 00:01:31,972
We had to work within that constraint.

22
00:01:32,636 --> 00:01:35,197
And thankfully the developers were thinking about us,

23
00:01:35,557 --> 00:01:37,818
and with different console generations,

24
00:01:38,218 --> 00:01:41,299
had more and more innovation, more buttons, more innovation.

25
00:01:41,839 --> 00:01:43,620
I actually took this screenshot of the Jaguar

26
00:01:43,660 --> 00:01:46,481
that's downstairs in the North Hall.

27
00:01:46,501 --> 00:01:47,741
It's really fantastic.

28
00:01:48,762 --> 00:01:49,582
So you know, luck was good.

29
00:01:49,702 --> 00:01:51,803
More buttons, we just kind of mapped stuff to that.

30
00:01:52,943 --> 00:01:53,963
And then this happened.

31
00:01:55,262 --> 00:01:58,324
We had a wonderful Apple demonstration

32
00:01:58,844 --> 00:02:03,588
showing the new future of devices with no buttons whatsoever.

33
00:02:03,608 --> 00:02:10,532
So now we're in a world where the most popular gaming devices have no buttons.

34
00:02:11,133 --> 00:02:12,794
There's no pre-made controller hardware,

35
00:02:13,554 --> 00:02:16,476
and we now have to worry about things like grip, input schemes,

36
00:02:16,817 --> 00:02:20,359
and how all this impacts the visual representation of the game that we're making.

37
00:02:22,989 --> 00:02:26,352
So, I'm gonna try to tell a story in this talk.

38
00:02:27,353 --> 00:02:29,735
Our controller scheme really came out of

39
00:02:30,215 --> 00:02:31,316
the evolution of the game.

40
00:02:31,857 --> 00:02:33,598
So we'll kind of break this into three parts.

41
00:02:33,918 --> 00:02:35,099
Kind of a pre-pro stage.

42
00:02:35,680 --> 00:02:37,922
The different stuff we did in the game to iterate

43
00:02:38,182 --> 00:02:40,924
on what the game was and how that affected the controls.

44
00:02:41,565 --> 00:02:43,106
Then we're gonna focus on the game

45
00:02:43,527 --> 00:02:45,008
during the standard development cycle

46
00:02:45,528 --> 00:02:47,850
and all the different iterations we did during that period.

47
00:02:48,391 --> 00:02:51,213
And then our kind of finaling mode on the game

48
00:02:51,273 --> 00:02:51,473
where...

49
00:02:52,059 --> 00:02:53,460
You know, theoretically we would have just been, uh,

50
00:02:53,480 --> 00:02:56,565
uh, you know, polishing everything,

51
00:02:56,705 --> 00:03:00,390
but like all games, we had some fun new changes

52
00:03:00,430 --> 00:03:01,531
that happened at that point in time.

53
00:03:01,632 --> 00:03:04,295
So let's have this great story.

54
00:03:05,457 --> 00:03:06,178
So let's start at the beginning.

55
00:03:07,725 --> 00:03:11,267
Back in 2012, autorunners were all the rage.

56
00:03:11,948 --> 00:03:15,811
And so Temple Run was garnering some really incredible download numbers,

57
00:03:16,231 --> 00:03:19,954
and our pitch was, hey, let's take what these autorunners are doing,

58
00:03:20,294 --> 00:03:22,035
and let's put a 40k paint job on them.

59
00:03:22,776 --> 00:03:26,879
We were super inspired by games like Shellraiser and The Girl on Fire,

60
00:03:27,499 --> 00:03:31,042
and we were really taking a look at what the autorunner scene was doing,

61
00:03:31,162 --> 00:03:35,325
and thinking, let's add some controls, let's put a 40k franchise on there, and...

62
00:03:35,869 --> 00:03:36,369
should be great.

63
00:03:36,470 --> 00:03:39,231
So it was gonna be a auto-running lane-based side-scroller

64
00:03:39,792 --> 00:03:42,774
with elements of ranged and melee combat.

65
00:03:43,934 --> 00:03:45,155
And so the controller scheme

66
00:03:45,555 --> 00:03:48,117
that we really thought about for that was this.

67
00:03:48,958 --> 00:03:53,601
We would hold the device with both hands,

68
00:03:53,641 --> 00:03:56,282
a thumb down on the left would do a melee attack,

69
00:03:56,623 --> 00:03:58,744
and a thumb down on the right would do a ranged attack,

70
00:03:59,064 --> 00:04:01,226
and you could swipe up with either thumb

71
00:04:01,246 --> 00:04:04,167
to do a lane change between different platforming segments.

72
00:04:06,396 --> 00:04:10,118
So yeah, it was an auto-runner, so we didn't have to worry about controls for starting and stopping running.

73
00:04:10,819 --> 00:04:13,501
All the weapons would auto-target enemies, so we didn't have to worry about any of that.

74
00:04:14,381 --> 00:04:16,603
So yeah, this was good. It was a nice, simple control scheme.

75
00:04:17,203 --> 00:04:21,186
We built a prototype and iterated on it for a few months, and all was great.

76
00:04:22,566 --> 00:04:23,727
But really, we weren't feeling it.

77
00:04:24,027 --> 00:04:26,569
So, we took some time away from the project,

78
00:04:27,189 --> 00:04:30,411
and when we returned, we really looked critically at what we had.

79
00:04:31,230 --> 00:04:32,791
We realized we didn't really like it.

80
00:04:33,351 --> 00:04:35,692
We didn't like the movement, we didn't like the combat.

81
00:04:35,752 --> 00:04:37,072
It just wasn't feeling fun for us.

82
00:04:37,752 --> 00:04:39,252
So we looked into our hearts and we said,

83
00:04:39,412 --> 00:04:41,313
you know what, we don't really want to make an autorunner.

84
00:04:41,813 --> 00:04:44,394
We want to make some classic platformer game.

85
00:04:45,794 --> 00:04:47,795
And so we went through a massive reboot process.

86
00:04:48,215 --> 00:04:50,715
And these are some of the games that we were inspired by at that time.

87
00:04:52,772 --> 00:04:55,552
So our next big iteration of our control scheme was

88
00:04:55,952 --> 00:04:57,973
what I consider our gesture controls.

89
00:04:58,433 --> 00:05:02,214
And so at this point, our control scheme was being driven by

90
00:05:02,234 --> 00:05:06,135
a massive increase in what kind of new features

91
00:05:06,155 --> 00:05:09,096
we're going to need to have a platformer control.

92
00:05:09,196 --> 00:05:11,136
So we now have a discrete run button,

93
00:05:11,296 --> 00:05:14,397
so the player can actually hold down their left thumb

94
00:05:14,497 --> 00:05:16,598
in order to run forward or release it to stop.

95
00:05:17,218 --> 00:05:19,438
There is no left-right movement at all, it's just run or not run.

96
00:05:21,067 --> 00:05:22,107
We have swipe up to jump.

97
00:05:22,727 --> 00:05:24,208
We have swipe down to aerial attack

98
00:05:24,388 --> 00:05:25,908
if you're in the middle of the air.

99
00:05:26,308 --> 00:05:27,889
You have swipe back to parrying attack.

100
00:05:28,129 --> 00:05:29,569
Swipe forward to melee attack.

101
00:05:30,389 --> 00:05:33,170
And you can touch with your right thumb

102
00:05:33,250 --> 00:05:35,211
to range attack or hold and release

103
00:05:35,591 --> 00:05:37,151
to do a special attack, like a Mega Man's

104
00:05:37,191 --> 00:05:38,231
kind of a supercharged thing.

105
00:05:38,852 --> 00:05:40,412
This was what we thought would be

106
00:05:40,712 --> 00:05:43,233
an awesome control scheme for this game.

107
00:05:43,802 --> 00:05:47,067
And I actually still believe that we could have gotten some pretty good mileage

108
00:05:47,528 --> 00:05:48,489
off of this control scheme.

109
00:05:48,649 --> 00:05:51,354
It was pretty complicated and pretty convoluted.

110
00:05:51,854 --> 00:05:53,417
But I think there might be some merit here

111
00:05:53,737 --> 00:05:57,223
of what could be an interesting control scheme for platforms.

112
00:05:58,429 --> 00:05:59,830
But really, we still weren't feeling it.

113
00:06:00,170 --> 00:06:02,431
And although I would have loved to have iterated on this

114
00:06:02,451 --> 00:06:05,773
control for several more weeks, or months, or what

115
00:06:05,813 --> 00:06:08,415
have you, we had a public demo in about two weeks.

116
00:06:08,635 --> 00:06:11,497
And so we just couldn't afford to spend any more time on a

117
00:06:11,517 --> 00:06:13,938
control scheme that had too much risk.

118
00:06:14,619 --> 00:06:17,720
So we decided to just scrap it all and scramble for something

119
00:06:17,740 --> 00:06:20,622
that would be super easy, super low risk, and something

120
00:06:20,642 --> 00:06:21,803
we could just kind of deliver for that

121
00:06:21,843 --> 00:06:22,863
public demo in two weeks.

122
00:06:25,156 --> 00:06:32,559
So we went to this. Super simple here. We removed a lot of the different moves and we just focused on four simple moves.

123
00:06:32,579 --> 00:06:38,422
And that was hold down for run, press to jump, press to range attack, press to melee attack.

124
00:06:39,182 --> 00:06:45,505
We did have the modal support for both the ranged and melee attacks right there, so that you could hold and release for super attacks.

125
00:06:46,005 --> 00:06:50,167
Though I don't believe we actually had those moves for the prototype. It was planned at least at that point.

126
00:06:51,514 --> 00:06:53,295
And so it was a really simple control scheme.

127
00:06:54,456 --> 00:06:58,399
Although our assumption was that players would initially gravitate

128
00:06:58,439 --> 00:07:00,321
towards gesture controls as kind of a default

129
00:07:00,861 --> 00:07:02,303
when they picked up the game, what they would try to do,

130
00:07:02,643 --> 00:07:05,986
we felt that the controls for these buttons were pretty straightforward

131
00:07:06,026 --> 00:07:08,087
and it wouldn't take them very long to figure it out.

132
00:07:09,268 --> 00:07:10,269
And that proved true.

133
00:07:10,690 --> 00:07:14,233
So when we showed this control scheme at the public demo at Games Day,

134
00:07:15,113 --> 00:07:16,174
players would pick up the iPad...

135
00:07:17,210 --> 00:07:20,051
and try to do some gesture controls to move the character around

136
00:07:20,391 --> 00:07:23,452
and the second that they found that that didn't work, they would immediately find the buttons

137
00:07:23,812 --> 00:07:25,492
and it was very quick for them to figure that out.

138
00:07:26,273 --> 00:07:31,514
It was super effective, they loved the game, it had really good response from the players there

139
00:07:32,035 --> 00:07:36,296
and it was great. So, basically the positive feedback on this control scheme

140
00:07:36,776 --> 00:07:41,118
cemented this direction for us going forward and really killed any lingering priority

141
00:07:41,178 --> 00:07:43,518
for the gesture controls that we had previously.

142
00:07:45,512 --> 00:07:47,793
Alright, so that's kind of our pre-pro area.

143
00:07:48,053 --> 00:07:50,114
We're now in proper development right now.

144
00:07:50,715 --> 00:07:52,596
We have a proven prototype. People like it.

145
00:07:52,976 --> 00:07:53,817
We know what we're building.

146
00:07:54,457 --> 00:07:55,718
Let's get into active development

147
00:07:56,098 --> 00:07:57,879
and let's kind of refine those controls a bit.

148
00:07:59,366 --> 00:08:02,408
So one of the first things we really started thinking about was thumb sizes.

149
00:08:03,069 --> 00:08:04,990
And we were super scientific about this.

150
00:08:05,291 --> 00:08:08,113
I took an iPad around and I put the paper app on it,

151
00:08:08,233 --> 00:08:09,014
and I told people,

152
00:08:09,334 --> 00:08:11,876
draw me circles with your thumbs by holding the edges.

153
00:08:12,597 --> 00:08:15,459
And through that exercise, I was able to get a whole bunch of...

154
00:08:16,059 --> 00:08:20,842
markings on the iPad that showed a huge variety in sizes of thumbs.

155
00:08:22,022 --> 00:08:25,064
It's actually quite amazing. These are all adult thumb sizes.

156
00:08:25,084 --> 00:08:27,925
But you can see there's actually quite a huge difference in reach

157
00:08:28,005 --> 00:08:29,886
between a small thumb and a large thumb.

158
00:08:30,646 --> 00:08:33,228
And so, when you're targeting on iPad,

159
00:08:33,828 --> 00:08:36,789
the actual reachable area that you have for controls on the edges

160
00:08:36,969 --> 00:08:38,990
is a lot smaller than what you might think it is.

161
00:08:41,188 --> 00:08:43,070
Yeah, and so basically if you want to create

162
00:08:43,090 --> 00:08:45,211
a button control scheme on the edges right there,

163
00:08:45,591 --> 00:08:47,012
you have a very limited amount of space

164
00:08:47,412 --> 00:08:49,033
in order to allow people with small thumbs

165
00:08:49,093 --> 00:08:52,115
to not go through a lot of strain to get to those.

166
00:08:53,516 --> 00:08:56,217
So we also used this thumb placement to figure out,

167
00:08:56,237 --> 00:08:58,119
you know, where would our camera be in the game?

168
00:08:58,739 --> 00:09:01,981
And this was an interesting fight between input space,

169
00:09:02,101 --> 00:09:04,162
so basically having a good amount of space

170
00:09:04,202 --> 00:09:05,203
dedicated for input,

171
00:09:05,723 --> 00:09:08,465
but also having a good amount of screen composition

172
00:09:08,565 --> 00:09:09,025
for the game.

173
00:09:09,345 --> 00:09:10,366
This was a constant battle.

174
00:09:11,226 --> 00:09:17,271
It would have been nice to have the action a little bit higher on the screen, but that just kind of leads to a really bad visual composition.

175
00:09:17,752 --> 00:09:22,996
And so we kind of set up with this kind of a structure right here, where this line denotes.

176
00:09:23,476 --> 00:09:27,299
Below that would be where buttons are, and above that would be where the main action exists.

177
00:09:29,725 --> 00:09:31,605
button placements again would be below that line

178
00:09:32,665 --> 00:09:35,926
and we would kind of hold in that lower position right there.

179
00:09:36,946 --> 00:09:38,666
The other thing with this is that

180
00:09:39,126 --> 00:09:42,327
the jump button is the highest button on the right

181
00:09:43,147 --> 00:09:45,708
because generally if you are in an action segment

182
00:09:46,028 --> 00:09:49,748
your thumb is going to be lower which will allow for more visibility of

183
00:09:49,808 --> 00:09:51,069
enemies coming on screen.

184
00:09:51,609 --> 00:09:54,889
And so that allows you to do melee and ranged combat against enemies.

185
00:09:56,450 --> 00:09:58,250
when you see them right there, and if you're jumping,

186
00:09:58,290 --> 00:10:00,931
it's less likely to be with an enemy coming off

187
00:10:00,951 --> 00:10:01,951
of the edge of the screen.

188
00:10:03,332 --> 00:10:05,993
The other thing about buttons on iPad layouts

189
00:10:06,053 --> 00:10:08,153
is you can't just put buttons wherever feels

190
00:10:08,273 --> 00:10:09,354
most comfortable for the player.

191
00:10:09,694 --> 00:10:11,314
You actually also have to figure out,

192
00:10:11,814 --> 00:10:13,155
how do I put the buttons on a screen

193
00:10:13,195 --> 00:10:14,495
so that they actually are appealing

194
00:10:14,535 --> 00:10:16,296
in a visually good way?

195
00:10:17,016 --> 00:10:18,976
Because, again, these are gonna be viewable things

196
00:10:19,277 --> 00:10:21,377
on your screen, you have to take into consideration

197
00:10:21,677 --> 00:10:23,658
the visual composition of the button layout

198
00:10:24,558 --> 00:10:25,498
when you're putting them down.

199
00:10:28,831 --> 00:10:30,676
Alright, so we have buttons in the game,

200
00:10:31,137 --> 00:10:32,300
but buttons are a problem.

201
00:10:32,721 --> 00:10:34,526
Buttons are a big, big problem.

202
00:10:35,874 --> 00:10:38,496
And those big problems are what I like to call

203
00:10:38,576 --> 00:10:39,916
misclicks and thumb drift.

204
00:10:40,477 --> 00:10:42,898
And so if you ever play a game on mobile

205
00:10:42,918 --> 00:10:44,239
and you're getting really into the game,

206
00:10:44,619 --> 00:10:46,640
at some point, and you're trying to press buttons,

207
00:10:46,760 --> 00:10:48,081
your thumb's just gonna miss a button.

208
00:10:48,721 --> 00:10:50,642
And that happens because you're getting into the zone,

209
00:10:51,223 --> 00:10:53,184
you don't really know where that button is

210
00:10:53,284 --> 00:10:54,865
because you're totally entering a flow state,

211
00:10:55,685 --> 00:10:57,426
and one of two things is gonna happen.

212
00:10:57,866 --> 00:11:00,287
Either you are going to attempt to press a button

213
00:11:00,768 --> 00:11:02,008
and something else will fire,

214
00:11:02,329 --> 00:11:04,170
so you think you're hitting shoot, but you jump.

215
00:11:04,590 --> 00:11:09,674
or you think you're jumping over that pit, but you shoot by mistake and you die in the pit.

216
00:11:09,694 --> 00:11:11,895
Or you're just gonna try to press a button,

217
00:11:12,396 --> 00:11:15,918
and you realize that your thumb isn't actually on any active hit area at that point.

218
00:11:16,679 --> 00:11:19,501
This is hugely problematic, because the second that this happens,

219
00:11:19,781 --> 00:11:21,922
the player is immediately brought out of their flow state,

220
00:11:22,323 --> 00:11:23,924
and is now fighting with the controls of the game.

221
00:11:24,584 --> 00:11:26,446
This is awful. It sucks.

222
00:11:27,206 --> 00:11:29,407
We found that when people were playing our initial game,

223
00:11:29,907 --> 00:11:31,908
they would be hitting the run button, and very slowly,

224
00:11:31,968 --> 00:11:35,849
their thumbs would drag into wherever was most comfortable it was for them.

225
00:11:36,450 --> 00:11:39,951
If you remember, I don't know if anybody grew up playing regular Nintendo,

226
00:11:40,051 --> 00:11:43,192
but when I first played it, I would always be jumping with Mario like that,

227
00:11:43,432 --> 00:11:46,874
and the thumb drift on iPads is like the moving the controller around

228
00:11:46,934 --> 00:11:49,935
kind of thing for me growing up with NES controllers.

229
00:11:50,155 --> 00:11:54,157
So anyway, these are two big problems, and we need to kind of figure out how to fix that.

230
00:11:55,220 --> 00:11:57,624
Again, real controllers don't have this problem.

231
00:11:58,165 --> 00:11:59,627
They have these tactile buttons.

232
00:12:00,147 --> 00:12:02,411
Your thumb is touching these buttons at all given times,

233
00:12:02,851 --> 00:12:06,396
and it's giving your brain all this back-end bandwidth

234
00:12:06,597 --> 00:12:08,459
of all this information that you need to know

235
00:12:08,579 --> 00:12:10,783
in order to ensure that you are always hitting the button correctly.

236
00:12:11,183 --> 00:12:17,825
So if your thumb does drift off of a button, there's feedback there to tell your thumb to get back into place and reorient itself.

237
00:12:18,185 --> 00:12:21,286
And all this happens without you having to consciously focus on it.

238
00:12:22,206 --> 00:12:26,827
So really, if you just take this control scheme and put it on mobile, it's not going to work.

239
00:12:27,108 --> 00:12:33,529
Because this control scheme, the sizes of these buttons, the layout of these buttons, are entirely dependent on having that tactile feedback

240
00:12:33,870 --> 00:12:36,310
and allowing for your thumb to know where they are at any given time.

241
00:12:38,566 --> 00:12:41,528
So how do we solve for the lack of tactile feedback

242
00:12:42,029 --> 00:12:43,470
on a mobile control scheme?

243
00:12:44,230 --> 00:12:46,452
And so the hypothesis that we came up with was

244
00:12:47,052 --> 00:12:48,613
maybe we can use muscle feedback

245
00:12:48,774 --> 00:12:50,395
from vastly different thumb positions

246
00:12:51,035 --> 00:12:53,237
to maybe offset the loss of tactile feedback.

247
00:12:53,757 --> 00:12:55,098
So I want everybody to put their hands out,

248
00:12:55,178 --> 00:12:56,619
pretend that you're holding an iPad.

249
00:12:58,000 --> 00:12:59,402
Everybody, come on, it's Friday morning.

250
00:13:00,538 --> 00:13:02,499
and I want you to put into three different thumb positions.

251
00:13:02,579 --> 00:13:03,459
Vertically extended,

252
00:13:04,440 --> 00:13:05,500
horizontally extended,

253
00:13:05,881 --> 00:13:06,361
and tucked.

254
00:13:06,981 --> 00:13:08,442
And if you switch between those three,

255
00:13:09,142 --> 00:13:10,523
the thumb positions that you have right there

256
00:13:10,603 --> 00:13:12,404
and the kind of feedback you get from your thumb

257
00:13:12,484 --> 00:13:13,604
are very, very different.

258
00:13:13,965 --> 00:13:15,966
And so you always know where your thumb is

259
00:13:16,146 --> 00:13:18,147
if you think that you have buttons down in those positions.

260
00:13:18,587 --> 00:13:20,788
And so what we did was we created a control scheme

261
00:13:21,308 --> 00:13:22,189
that kind of utilized that.

262
00:13:23,021 --> 00:13:25,922
And so on the right hand thumb, you can see

263
00:13:26,502 --> 00:13:28,343
jump is on your vertical extended,

264
00:13:28,924 --> 00:13:30,824
melee is on your horizontal extended,

265
00:13:31,165 --> 00:13:33,265
and your ranged attack is on your tucked position.

266
00:13:33,285 --> 00:13:35,666
And what we did was we changed the angles

267
00:13:36,007 --> 00:13:37,567
of all those different controls on there

268
00:13:37,847 --> 00:13:40,268
to account for if your angle is a little bit off

269
00:13:40,449 --> 00:13:43,270
on each of those controls, it's going to account for that

270
00:13:43,530 --> 00:13:44,110
and it'll be good.

271
00:13:45,031 --> 00:13:48,192
Jump has the largest hit area on the right hand side,

272
00:13:48,572 --> 00:13:51,013
because on a platformer game, if you miss jump,

273
00:13:51,213 --> 00:13:54,374
it is going to knock you out of the flow state a lot faster

274
00:13:54,714 --> 00:13:57,575
than if you just maybe miss one shot.

275
00:13:59,333 --> 00:14:04,538
We also found that the vertical extended position is the most relaxed position for players,

276
00:14:04,918 --> 00:14:08,101
and so it's much easier for them to kind of get into that position,

277
00:14:08,381 --> 00:14:13,085
as opposed to the horizontal extended, which takes a little bit more muscle control to get down to.

278
00:14:13,766 --> 00:14:16,388
Tucked is the most uncomfortable of positions,

279
00:14:16,809 --> 00:14:21,313
and so we try to use that when more sparingly.

280
00:14:22,579 --> 00:14:28,861
So, on the left-hand side, we maintained run as just one big hit area.

281
00:14:29,141 --> 00:14:32,122
So essentially, this has a very simplistic control scheme,

282
00:14:32,202 --> 00:14:35,903
so that as a player, you really only need to have thumb dexterity on one hand,

283
00:14:36,283 --> 00:14:40,484
and on your other hand, you can just focus on either my thumb is on the screen or it's not on the screen,

284
00:14:40,784 --> 00:14:42,845
and I'm either going to be moving forward or not moving forward.

285
00:14:43,830 --> 00:14:46,511
The hit areas here extend out further than

286
00:14:47,052 --> 00:14:49,333
what the largest thumb area that we measured was,

287
00:14:49,673 --> 00:14:52,675
so that there's no chance of you putting your thumb down on the screen

288
00:14:52,835 --> 00:14:53,775
without it doing something,

289
00:14:54,115 --> 00:14:55,776
so you will never get into a situation where

290
00:14:56,076 --> 00:14:58,218
your thumb's on the screen and nothing is happening.

291
00:14:58,478 --> 00:14:59,858
There will always be something happening.

292
00:15:00,679 --> 00:15:02,720
And we have the buttons down on the screen.

293
00:15:03,120 --> 00:15:04,661
The buttons don't really act like buttons,

294
00:15:04,801 --> 00:15:05,641
they act more like...

295
00:15:06,862 --> 00:15:10,042
focus positions that tell your brain where to try to put your thumbs.

296
00:15:10,422 --> 00:15:14,123
It's kind of an orientation thing so when you look at the screen you know what you're trying to hit

297
00:15:14,683 --> 00:15:18,044
but once you're actually in that flow state they don't really matter as much anymore

298
00:15:18,184 --> 00:15:21,364
and in fact we fade them down in alpha as the player is playing

299
00:15:21,684 --> 00:15:22,904
so they kind of get out of your way.

300
00:15:23,485 --> 00:15:27,345
But they're mostly used to kind of reference where your thumbs are supposed to go.

301
00:15:27,805 --> 00:15:31,326
When you're actually hitting the screen you're probably not hitting anywhere near those buttons.

302
00:15:31,346 --> 00:15:35,227
You're hitting all around them and these large hit pads really account for that.

303
00:15:36,412 --> 00:15:37,712
This became super effective.

304
00:15:38,452 --> 00:15:41,233
What we ended up having was, if we had a bug in the game

305
00:15:41,253 --> 00:15:43,793
where these hitpads were disabled and only the buttons were working,

306
00:15:44,113 --> 00:15:46,174
people would be freaking out and coming to my desk being like,

307
00:15:46,234 --> 00:15:48,615
oh my god, our game is completely broken, I don't know why,

308
00:15:48,715 --> 00:15:49,935
it just doesn't feel good anymore.

309
00:15:50,635 --> 00:15:52,576
But then the second that we re-enabled these hitpads,

310
00:15:52,656 --> 00:15:53,836
it worked really, really well.

311
00:15:54,336 --> 00:15:56,216
And we found that when players were playing this,

312
00:15:56,316 --> 00:15:58,297
they were always able to hit the buttons

313
00:15:58,597 --> 00:15:59,617
that they felt like they were hitting,

314
00:15:59,957 --> 00:16:02,218
and they just felt super effective at all times.

315
00:16:03,458 --> 00:16:04,058
So this was great.

316
00:16:05,295 --> 00:16:09,396
But of course we aren't just shipping on iPad, we also have to ship on smaller devices.

317
00:16:10,016 --> 00:16:13,337
And so what we ended up doing was splitting our devices into two categories.

318
00:16:13,957 --> 00:16:18,358
Devices that are less than seven inches in size and devices that are larger.

319
00:16:18,778 --> 00:16:23,819
And so the devices that are seven inches and larger would be our previous control scheme

320
00:16:24,499 --> 00:16:27,320
and these smaller devices using this smaller control scheme.

321
00:16:27,800 --> 00:16:30,320
And essentially the way that I thought about this was...

322
00:16:30,820 --> 00:16:33,961
if I can have both of my thumbs touch each other on a device,

323
00:16:34,341 --> 00:16:35,901
I'm going to have to use a different control scheme

324
00:16:35,921 --> 00:16:37,181
than if they can't touch each other.

325
00:16:37,201 --> 00:16:39,902
And so we had to make some adjustments here

326
00:16:40,062 --> 00:16:42,602
because if we accounted for the same hit area,

327
00:16:43,123 --> 00:16:45,663
the actual thumb and buttons would be all over the screen

328
00:16:45,763 --> 00:16:46,903
and you wouldn't be able to see anything.

329
00:16:47,723 --> 00:16:50,624
And so we had a kind of more squished layout

330
00:16:50,684 --> 00:16:52,584
that we came up for the iPhone.

331
00:16:53,204 --> 00:16:56,165
Again, Melee is on the horizontally extended button.

332
00:16:56,565 --> 00:16:58,005
Ranged is still mostly tucked.

333
00:16:58,345 --> 00:16:58,705
And Jump...

334
00:16:59,125 --> 00:17:02,907
It has a little bit more of an angled, vertically extended type thing.

335
00:17:03,427 --> 00:17:04,507
It was still super effective.

336
00:17:04,607 --> 00:17:08,389
It wasn't as effective as an iPad control.

337
00:17:08,609 --> 00:17:12,830
There was still a little bit more chance of you misclicking between jump and melee.

338
00:17:13,450 --> 00:17:14,351
But it was pretty good.

339
00:17:15,151 --> 00:17:17,172
And it actually feels pretty solid on an iPhone.

340
00:17:17,963 --> 00:17:20,844
So, we also can see the kind of line

341
00:17:21,464 --> 00:17:23,465
where we try to maintain buttons below it

342
00:17:23,565 --> 00:17:24,326
and action above it.

343
00:17:24,746 --> 00:17:26,967
And this is what it looks like in gameplay,

344
00:17:27,307 --> 00:17:30,028
obviously, with the buttons super bright right there

345
00:17:30,088 --> 00:17:31,348
for this demo.

346
00:17:32,209 --> 00:17:33,249
The buttons, again, fade out,

347
00:17:33,629 --> 00:17:34,630
so when you're actually in gameplay,

348
00:17:34,650 --> 00:17:35,850
you don't really notice them as much.

349
00:17:36,491 --> 00:17:38,311
We keep gameplay above those buttons.

350
00:17:40,112 --> 00:17:41,613
So that was pretty cool. That was working well.

351
00:17:42,524 --> 00:17:44,666
Then we were getting into our finaling.

352
00:17:44,866 --> 00:17:46,788
So we had a solid control scheme in place,

353
00:17:46,928 --> 00:17:49,010
and now we're ready for a nice, calm finaling period.

354
00:17:49,090 --> 00:17:50,651
We're good, we're comfortable, we're happy.

355
00:17:51,372 --> 00:17:52,653
It's gonna go fantastic.

356
00:17:53,173 --> 00:17:55,155
Except it never does that in games.

357
00:17:56,015 --> 00:17:58,858
So we were at alpha, and people were like,

358
00:17:58,918 --> 00:18:00,659
you know what, our gameplay just isn't robust enough.

359
00:18:00,819 --> 00:18:02,641
We're just, we're gonna need more controls.

360
00:18:03,301 --> 00:18:06,023
We're feeling like the game is just mindless hack and slash.

361
00:18:06,324 --> 00:18:07,244
It's lacking in depth.

362
00:18:07,585 --> 00:18:09,806
It doesn't have what we need in order to really have

363
00:18:09,866 --> 00:18:11,428
player engagement over a long period of time.

364
00:18:12,765 --> 00:18:16,886
And really this complexity of controls was a really hotly debated topic throughout the entire project.

365
00:18:16,906 --> 00:18:22,008
If you remember at the very beginning, we were really targeting this auto-runner, casual audience with this game.

366
00:18:22,388 --> 00:18:26,090
And as we were moving through development, we were getting more and more complicated control schemes

367
00:18:26,190 --> 00:18:29,311
by adding buttons, and more moves, and all this kind of crazy stuff.

368
00:18:29,931 --> 00:18:32,732
And so really we were trying to figure out, you know, who is our target audience?

369
00:18:32,792 --> 00:18:35,153
What are we trying to get to? What kind of a game are we making?

370
00:18:35,833 --> 00:18:39,835
And the controls were feedbacking into what that target audience would be.

371
00:18:42,465 --> 00:18:46,553
So, in the end we added two new gameplay elements,

372
00:18:46,714 --> 00:18:48,918
and that was a defensive capability,

373
00:18:48,938 --> 00:18:51,183
basically a block, as well as adding

374
00:18:51,704 --> 00:18:52,686
full left-right controls.

375
00:18:53,062 --> 00:18:56,344
The actual left-right controls were added in the last month of development.

376
00:18:57,004 --> 00:18:59,105
They were added this time last year during GDC.

377
00:19:00,345 --> 00:19:03,267
And it completely changed the feel of the game.

378
00:19:04,087 --> 00:19:07,109
Instead of actually requiring dexterity in only one thumb,

379
00:19:07,129 --> 00:19:09,930
we were now moving to a situation where we required dexterity in two thumbs.

380
00:19:10,270 --> 00:19:12,311
It was a much more complicated control scheme

381
00:19:13,091 --> 00:19:15,672
that players needed to work with.

382
00:19:16,233 --> 00:19:17,633
So this changed our target market.

383
00:19:18,233 --> 00:19:20,835
It moved us from a casual player to a more experienced gamer.

384
00:19:21,899 --> 00:19:25,342
But we felt that it was worth that compromise.

385
00:19:26,723 --> 00:19:28,764
So our final control scheme looked like this.

386
00:19:29,945 --> 00:19:33,128
Again, all we did to accommodate the new block moves

387
00:19:33,208 --> 00:19:36,490
and the left moves was replicate what we felt was working really well

388
00:19:36,730 --> 00:19:39,332
on the right-hand side over to the left-hand side of the screen.

389
00:19:40,713 --> 00:19:43,215
Right movement is, again, quite large.

390
00:19:43,816 --> 00:19:46,198
Block is very large, so it's very easy to get up there.

391
00:19:47,489 --> 00:19:50,931
Like I said before, the tucked command is the more difficult one.

392
00:19:51,492 --> 00:19:54,815
Thankfully, our game is designed such that there's a lot less left movement than there

393
00:19:54,855 --> 00:19:57,277
is right movement, and so we were able to design around that.

394
00:19:58,858 --> 00:19:59,439
And this was good.

395
00:19:59,819 --> 00:20:02,341
The full left-right movement allowed for a lot of new gameplay elements.

396
00:20:02,401 --> 00:20:06,024
We have arena combat, we have enemies that can roll, dodge, attack from behind.

397
00:20:06,725 --> 00:20:10,088
We were able to create some better, interesting platforming segments with this new control

398
00:20:10,108 --> 00:20:10,368
scheme.

399
00:20:12,490 --> 00:20:13,130
So that was good.

400
00:20:14,822 --> 00:20:18,164
The last tweak we did before we actually shipped the game

401
00:20:18,844 --> 00:20:21,866
was to allow for sliding between hitpads.

402
00:20:22,186 --> 00:20:25,088
So originally what we had was you had to release your thumb

403
00:20:25,388 --> 00:20:27,569
and then touch another pad in order to activate it.

404
00:20:27,589 --> 00:20:30,651
One of the last things we did was allow the player to slide between them.

405
00:20:31,031 --> 00:20:34,073
This was completely necessary for left-right movement,

406
00:20:34,353 --> 00:20:36,795
so the player can just kind of move their thumb between those two positions.

407
00:20:37,475 --> 00:20:40,237
And it also worked really well for doing things like jump and shoot,

408
00:20:40,797 --> 00:20:43,559
allowing the player to shoot while in the middle of a jump command.

409
00:20:44,139 --> 00:20:47,041
And that felt really good, so you can kind of slide your thumb between those three hitpads.

410
00:20:49,763 --> 00:20:51,624
So, some closing thoughts here.

411
00:20:52,265 --> 00:20:54,486
So this control scheme, it's been really successful.

412
00:20:55,187 --> 00:20:58,209
It's allowed us to have six hitpads with full modal capability.

413
00:20:58,669 --> 00:21:01,391
This allows us to do things like charge shots for all the different weapons.

414
00:21:01,652 --> 00:21:05,635
It allows us to do Mario-style jumping, to allow different height variants with that.

415
00:21:06,174 --> 00:21:07,075
It's very easy to learn.

416
00:21:07,496 --> 00:21:08,557
Nobody that picks up the game

417
00:21:09,418 --> 00:21:11,061
has a hard time understanding the control scheme.

418
00:21:11,101 --> 00:21:12,162
It's right there in front of them.

419
00:21:12,743 --> 00:21:14,225
And it's really responsive and predictable.

420
00:21:14,785 --> 00:21:15,847
Nobody ever says things like,

421
00:21:15,887 --> 00:21:17,709
when I'm hitting a button, I'm hitting the wrong button.

422
00:21:18,029 --> 00:21:19,111
It always seems to work really well.

423
00:21:20,464 --> 00:21:22,845
But we are continuing to refine and iterate on the control scheme.

424
00:21:23,165 --> 00:21:24,866
I don't think this will ever be a done thing,

425
00:21:25,346 --> 00:21:26,107
but we're working on it.

426
00:21:26,607 --> 00:21:28,028
And there's areas that we can improve on.

427
00:21:28,748 --> 00:21:31,230
I'm still not happy with some thumb sizes

428
00:21:31,270 --> 00:21:32,890
have a hard time reaching some areas,

429
00:21:32,930 --> 00:21:35,952
and so we're looking at ways to customize the control scheme

430
00:21:36,212 --> 00:21:37,513
and customize the scale right there

431
00:21:37,573 --> 00:21:39,814
to allow people to fine-tune it a little bit more.

432
00:21:39,834 --> 00:21:43,716
And we're also looking at ways to have better graphical feedback

433
00:21:43,736 --> 00:21:45,257
that better conveys the different hit areas

434
00:21:45,317 --> 00:21:48,879
as opposed to just using the buttons to convey that information.

435
00:21:50,432 --> 00:21:51,914
Really this stuff is super hard.

436
00:21:52,594 --> 00:21:53,976
You know, controls for mobile games,

437
00:21:54,296 --> 00:21:56,438
you don't have this predefined user experience

438
00:21:56,458 --> 00:21:57,178
to kind of work with.

439
00:21:57,439 --> 00:21:58,740
You have to build all this yourself.

440
00:21:58,800 --> 00:22:00,041
There is no physical input.

441
00:22:00,522 --> 00:22:01,763
And when you're making a mobile game,

442
00:22:01,783 --> 00:22:03,524
you have to fight with grip, device size,

443
00:22:03,544 --> 00:22:04,365
screen real estate,

444
00:22:04,745 --> 00:22:05,967
all this crazy hard stuff.

445
00:22:06,707 --> 00:22:08,108
What, you know, what we were doing here is

446
00:22:08,469 --> 00:22:12,653
we didn't try to apply this tactile overlay.

447
00:22:13,445 --> 00:22:17,594
virtual d-pad type thing to the game, we knew this just wasn't going to work, but I feel

448
00:22:17,614 --> 00:22:20,300
like we've only really scratched the surface of what we can do with this.

449
00:22:22,435 --> 00:22:24,076
You know, there's a lot of problems in our industry,

450
00:22:24,096 --> 00:22:27,239
and there's one big problem, and that is our huge reliance

451
00:22:27,299 --> 00:22:28,340
on past control schemes.

452
00:22:28,440 --> 00:22:30,862
If you hand a controller to someone who's never played a game before,

453
00:22:31,182 --> 00:22:33,164
the learning curve on that is just super high.

454
00:22:33,184 --> 00:22:35,946
And I think there's a lot of opportunities for us here,

455
00:22:36,006 --> 00:22:37,047
especially in the mobile space,

456
00:22:37,628 --> 00:22:39,610
to create game experiences that allow us to

457
00:22:39,990 --> 00:22:41,631
change the way that people play our game,

458
00:22:41,912 --> 00:22:43,413
change the way that they interact with our game.

459
00:22:43,433 --> 00:22:45,735
You know, with this platform, for the first time,

460
00:22:45,775 --> 00:22:49,538
we as game developers can actually take back the control of controls.

461
00:22:52,380 --> 00:22:52,520
Yeah.

462
00:22:53,321 --> 00:22:55,423
And so here's my last inspiring end slide.

463
00:22:56,083 --> 00:22:57,364
Let's, you know, let's try to move beyond

464
00:22:57,384 --> 00:22:59,526
this tap, tap, tap and virtual D-pad stuff

465
00:22:59,566 --> 00:23:00,466
that we're doing on mobile.

466
00:23:01,027 --> 00:23:03,068
Let's try to innovate and create new ways

467
00:23:03,148 --> 00:23:05,010
for our gamers to play our mobile games.

468
00:23:05,830 --> 00:23:07,011
And that's that.

469
00:23:07,051 --> 00:23:16,898
audience applause

470
00:23:16,918 --> 00:23:18,039
Got lots of time for questions now.

471
00:23:27,887 --> 00:23:34,531
Hey there. Did you guys try any A, B testing, like with alternate control schemes?

472
00:23:36,072 --> 00:23:38,713
So the question was, did we try any A, B testing with alternate control schemes?

473
00:23:39,193 --> 00:23:41,915
We didn't really have a lot of time to do a lot of user testing,

474
00:23:42,015 --> 00:23:46,317
so we had some small internal groups of varying people with varying skill sets.

475
00:23:46,718 --> 00:23:50,940
And what we'd actually do at points where we had about three or four control schemes in the game

476
00:23:50,960 --> 00:23:53,201
that you could switch between in the options menu

477
00:23:53,461 --> 00:23:56,143
and have people play through all the different ones and give us feedback on that.

478
00:23:56,593 --> 00:23:58,735
and that'll allow us to kind of fine-tune stuff near the end.

479
00:23:59,075 --> 00:24:00,617
When we were doing that left-right control stuff,

480
00:24:00,677 --> 00:24:02,698
we had about four control schemes in the game

481
00:24:02,738 --> 00:24:04,980
at that point in time that we're toggling between

482
00:24:05,020 --> 00:24:07,242
and kind of getting some internal feedback at that point.

483
00:24:07,262 --> 00:24:08,544
man 2 in audience Okay, thanks.

484
00:24:08,564 --> 00:24:08,984
man 1 in audience Cool.

485
00:24:09,004 --> 00:24:11,967
man 2 in audience So were you satisfied

486
00:24:12,007 --> 00:24:14,849
with the auto, making your game auto-run?

487
00:24:14,949 --> 00:24:17,852
Or did you, how far did you get with the left-right stuff?

488
00:24:18,132 --> 00:24:19,594
And have you, like, had more thoughts

489
00:24:19,654 --> 00:24:21,515
on how you would move forward if you tried to do another one?

490
00:24:22,171 --> 00:24:26,693
Um, so we shipped with the left-right, so we, uh, we, so the question was, did we, uh,

491
00:24:27,053 --> 00:24:28,253
were we happy with the autorun stuff?

492
00:24:28,714 --> 00:24:29,994
Uh, we shipped with the left-right controls.

493
00:24:30,314 --> 00:24:31,615
Um, I was pretty happy with it.

494
00:24:32,195 --> 00:24:34,596
Um, I was super against left-right controls.

495
00:24:34,676 --> 00:24:37,717
I was fighting tooth and nail to keep it, uh, just moving right.

496
00:24:38,077 --> 00:24:40,498
Um, I didn't like the additional complexity of the control scheme right there.

497
00:24:41,098 --> 00:24:41,158
Um...

498
00:24:41,679 --> 00:24:46,703
But once we actually got it in there and we started looking at the different gameplay elements that it opened up, it was super awesome.

499
00:24:47,484 --> 00:24:53,249
One thing that I'm still not happy about is, with the super extended thumb positions,

500
00:24:53,569 --> 00:24:59,274
while you get that confidence that you're hitting the right thing, it's a lot slower than having smaller button controls.

501
00:24:59,674 --> 00:25:04,198
And so you lose a lot of fidelity in moving left to right, and so those really tricky platform elements

502
00:25:04,558 --> 00:25:09,503
are still quite hard to put into the game because the controls aren't really precise enough.

503
00:25:09,823 --> 00:25:11,683
So one thing I'd like to, to work on is, uh,

504
00:25:12,484 --> 00:25:14,404
what that right balance is between game design

505
00:25:14,424 --> 00:25:16,485
and level design for those platforming elements

506
00:25:16,745 --> 00:25:18,505
and, uh, where we can kind of take the controls

507
00:25:18,525 --> 00:25:20,406
to be even more responsive, uh,

508
00:25:20,446 --> 00:25:24,087
while still maintaining the, um, predictability of it.

509
00:25:24,787 --> 00:25:24,927
Cool?

510
00:25:24,947 --> 00:25:24,987
Hi.

511
00:25:26,347 --> 00:25:28,648
woman 3 in audience Hi. I wonder if you discussed

512
00:25:28,748 --> 00:25:31,208
making, um, the user able to adjust the position

513
00:25:31,228 --> 00:25:33,289
of the buttons as per their own thumb size.

514
00:25:33,857 --> 00:25:39,480
Yeah, so the question was if we've, uh, figured, if we've considered allowing the player to adjust the positions of the buttons.

515
00:25:40,180 --> 00:25:44,962
Um, one thing that's brought up quite a bit is moving buttons between those different places quite a bit.

516
00:25:45,522 --> 00:25:48,183
Um, I'm not against that, we just haven't really done it yet.

517
00:25:48,203 --> 00:25:55,026
Uh, I think one thing that's more interesting is probably scaling the size of those hitpad areas more than anything.

518
00:25:55,066 --> 00:25:59,729
I think that's one area where I think players can get into something that's more fine-tuned for their thumbs.

519
00:26:00,369 --> 00:26:00,449
Um...

520
00:26:01,029 --> 00:26:04,050
I'm not sure if it'll be as effective for players to change the angles

521
00:26:04,110 --> 00:26:06,391
between those two different, between all the different hit areas.

522
00:26:07,071 --> 00:26:09,832
Um, and there's also gonna be some, some problems

523
00:26:09,892 --> 00:26:13,073
if the players are trying to, uh, move buttons to different areas.

524
00:26:13,113 --> 00:26:15,394
Like, so one, one comment that people brought up

525
00:26:15,454 --> 00:26:17,495
was that they want to jump on the left-hand side.

526
00:26:17,915 --> 00:26:21,437
But the problem with that is then they can't move and jump at the same time,

527
00:26:21,857 --> 00:26:24,037
and it creates kind of weird edge case type stuff.

528
00:26:24,057 --> 00:26:25,398
So we're looking into it right now,

529
00:26:25,638 --> 00:26:27,959
and just trying to figure out what, what we can do that makes the most sense.

530
00:26:29,860 --> 00:26:29,960
Hello.

531
00:26:31,097 --> 00:26:36,260
Hi. You alluded to precision as being still kind of one of the problems you have with the control scheme.

532
00:26:36,781 --> 00:26:42,204
Is there anything else besides that that you're still kind of see as a hurdle or something you want to get past?

533
00:26:43,125 --> 00:26:44,265
So the question was, uh...

534
00:26:45,904 --> 00:26:47,925
other areas that we feel like is a hurdle to get past.

535
00:26:48,866 --> 00:26:50,407
So I don't think precision is a problem.

536
00:26:50,447 --> 00:26:54,109
I think the quickness of the responsiveness is a problem.

537
00:26:54,149 --> 00:26:55,430
I think it is very precise.

538
00:26:55,510 --> 00:26:57,311
If you're gonna hit something, you are gonna hit it.

539
00:26:57,371 --> 00:26:57,992
It's gonna be good.

540
00:26:58,832 --> 00:27:00,373
The one area that I wanna get beyond

541
00:27:00,473 --> 00:27:02,775
is some people still find it uncomfortable.

542
00:27:03,716 --> 00:27:05,357
And trying to find a way to get that grip

543
00:27:06,077 --> 00:27:07,518
comfortable for more people is, I think,

544
00:27:07,538 --> 00:27:09,319
a big area that I wanna work on next.

545
00:27:09,860 --> 00:27:10,900
Kinda see what I can do.

546
00:27:13,561 --> 00:27:17,083
Um, you mentioned about having sort of Mario-style jumping,

547
00:27:17,123 --> 00:27:20,025
where, which to me sounds like you can control

548
00:27:20,045 --> 00:27:20,825
the height of the jump.

549
00:27:21,045 --> 00:27:21,145
Yep.

550
00:27:21,165 --> 00:27:21,665
Is that correct?

551
00:27:21,966 --> 00:27:22,326
Correct.

552
00:27:22,846 --> 00:27:24,347
Did you have any challenges, like,

553
00:27:24,407 --> 00:27:28,629
keeping that sliding sort of input

554
00:27:29,090 --> 00:27:31,771
and still having players be able to kind of control

555
00:27:31,791 --> 00:27:34,713
that height accurately, since their thumb would still

556
00:27:34,753 --> 00:27:38,255
be sort of resting on the button when they were trying to slide?

557
00:27:38,766 --> 00:27:43,573
Yeah, so what we ended up doing was, while there is a Mario style jumping in the game,

558
00:27:43,653 --> 00:27:45,916
it's a lot more subtle than a lot of other platformers.

559
00:27:46,717 --> 00:27:50,262
We didn't, we don't have it so that it's super required.

560
00:27:50,642 --> 00:27:53,346
It's more of like a subtle feel thing in our game than anything like that.

561
00:27:53,727 --> 00:27:55,568
And so there's no gameplay that requires you

562
00:27:55,668 --> 00:27:58,710
to do a really precise Mario-style jump.

563
00:27:59,070 --> 00:28:00,511
It's more of, it's there.

564
00:28:00,571 --> 00:28:03,533
You can kind of feel it if you release the button early.

565
00:28:03,553 --> 00:28:05,534
You'll see that your jump height isn't as high.

566
00:28:05,554 --> 00:28:07,515
It's just one of the small little polish things

567
00:28:07,535 --> 00:28:10,437
that we did as opposed to a big gameplay-type thing.

568
00:28:12,858 --> 00:28:13,299
Anything else?

569
00:28:15,000 --> 00:28:17,001
Cool. Thank you so much, everyone, and have a great Friday.

