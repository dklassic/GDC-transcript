1
00:00:06,312 --> 00:00:08,873
I have a lot to talk about, so I'm going to start now.

2
00:00:09,313 --> 00:00:11,953
This is a huge amount of information

3
00:00:11,974 --> 00:00:13,014
I'm going to pop at you.

4
00:00:13,034 --> 00:00:18,715
I basically theme this talk around development versus live.

5
00:00:19,215 --> 00:00:21,076
I could give a whole nother talk on live, too,

6
00:00:21,256 --> 00:00:22,256
which I may do next year.

7
00:00:22,276 --> 00:00:25,057
And the reason I do that is because I

8
00:00:25,097 --> 00:00:27,817
think a lot of the problems that I see in live

9
00:00:27,997 --> 00:00:30,278
are caused by production problems.

10
00:00:30,858 --> 00:00:33,459
And so what I want to cover today is more focused on that.

11
00:00:33,919 --> 00:00:36,820
Now this is probably one of the hardest presentations I've done

12
00:00:37,080 --> 00:00:40,461
because in an hour to talk about everything about gains

13
00:00:40,481 --> 00:00:42,541
of the service is almost impossible that I've learned

14
00:00:42,581 --> 00:00:44,322
in the past 20 years doing it.

15
00:00:44,702 --> 00:00:47,323
But I picked up some things that I bubbled

16
00:00:47,443 --> 00:00:50,124
up based on what I call patterns,

17
00:00:50,784 --> 00:00:52,344
mistakes that people continually make.

18
00:00:53,445 --> 00:00:58,806
So the first thing I'm going to do is this is a statement I said

19
00:00:58,826 --> 00:00:58,866
in 1998.

20
00:01:01,351 --> 00:01:04,533
It's a service, not a game that you're making.

21
00:01:05,034 --> 00:01:06,495
And I think it's really important

22
00:01:06,555 --> 00:01:10,618
as you're developing the game that it's a service as well.

23
00:01:11,158 --> 00:01:14,780
So the game, I always refer to this as the iceberg theory.

24
00:01:15,281 --> 00:01:16,642
The game is right up above.

25
00:01:17,666 --> 00:01:21,309
And what people don't realize when they get into this is there's a whole bunch of things

26
00:01:21,369 --> 00:01:26,895
below that are huge, invisible to the player, but very important because if you don't do

27
00:01:26,995 --> 00:01:31,399
any of those things right, you're going to have a bad player experience at launch.

28
00:01:32,980 --> 00:01:38,726
So as you see on this list, there's tons of things that have to be built around your game.

29
00:01:39,873 --> 00:01:42,134
that makes it a very complex piece.

30
00:01:43,054 --> 00:01:48,695
I would say games as a service is probably the most complex thing any developer can build.

31
00:01:51,736 --> 00:01:56,277
This is another theme that I have throughout my presentation that's extremely important.

32
00:01:57,597 --> 00:01:59,698
It's not a sprint, it's a marathon.

33
00:02:00,158 --> 00:02:05,919
Everything you do in development will affect you in live some way, somehow.

34
00:02:06,499 --> 00:02:08,640
Some are good, some are bad.

35
00:02:10,333 --> 00:02:12,815
It's how we handle things like pre-production.

36
00:02:13,936 --> 00:02:15,917
You don't want to sprint through pre-production

37
00:02:16,377 --> 00:02:17,819
when you're building games as a service.

38
00:02:18,079 --> 00:02:19,540
But a lot of people do, because they

39
00:02:19,580 --> 00:02:21,581
want to get into things as fast as possible.

40
00:02:22,662 --> 00:02:24,744
It's how you treat production as well.

41
00:02:25,324 --> 00:02:26,525
And I'll talk about that later.

42
00:02:27,326 --> 00:02:29,147
The whole thing about marketing and PR,

43
00:02:29,167 --> 00:02:31,409
a great story about this was with Swotor.

44
00:02:31,829 --> 00:02:35,132
We launched Swotor, and EA's marketing department

45
00:02:35,172 --> 00:02:35,892
says, oh, we're done.

46
00:02:37,173 --> 00:02:37,353
What?

47
00:02:38,054 --> 00:02:38,374
No, no, no.

48
00:02:38,634 --> 00:02:39,535
We do this as beats.

49
00:02:40,448 --> 00:02:42,229
You only did one little part of the beat.

50
00:02:42,269 --> 00:02:43,129
We're open now.

51
00:02:43,469 --> 00:02:45,610
Now we have to do a whole bunch of beats of how we're going

52
00:02:45,650 --> 00:02:48,871
to market and get user acquisition and awareness.

53
00:02:51,412 --> 00:02:53,013
And community management is another one.

54
00:02:55,513 --> 00:02:57,814
You have to be in this for the long haul.

55
00:02:58,154 --> 00:03:00,355
This is probably one of the biggest things I've seen

56
00:03:00,395 --> 00:03:02,316
as a pattern that people don't realize is

57
00:03:02,356 --> 00:03:04,896
when you launch a service, it's live, it's there.

58
00:03:05,657 --> 00:03:08,398
You have a lot of people playing that game.

59
00:03:09,442 --> 00:03:12,310
And if you don't maintain it, people are going to leave,

60
00:03:12,350 --> 00:03:14,576
especially the competitiveness that's out there today,

61
00:03:14,957 --> 00:03:15,720
especially today.

62
00:03:16,843 --> 00:03:17,765
One of the things I saw.

63
00:03:19,453 --> 00:03:27,375
On Swotor, EA made a decision on Swotor to pull it down in favor of Anthem without replacing

64
00:03:27,395 --> 00:03:28,735
the people they were pulling down on.

65
00:03:29,275 --> 00:03:34,436
They made a million dollars a person for every person that was on Swotor, made a million

66
00:03:34,456 --> 00:03:34,756
dollars.

67
00:03:35,497 --> 00:03:40,558
And they were generating over $200 million in revenue, but the fact is their next project,

68
00:03:40,598 --> 00:03:44,219
which is a new thing, over here was pulling people away and they weren't backfilling.

69
00:03:44,759 --> 00:03:48,880
So now that product is going down a lot, has been for two years.

70
00:03:49,900 --> 00:03:55,006
That's, every investment you make on that product, every dollar you put in, you'll make

71
00:03:55,326 --> 00:03:59,610
50 cents easily on it, versus something over here that's an unknown brand new IP.

72
00:04:00,712 --> 00:04:05,016
What I would have done as that game, I would have invested in that game, put it on console

73
00:04:05,036 --> 00:04:09,060
and easily probably pumped in 300 million dollars a year, which is not insignificant.

74
00:04:09,801 --> 00:04:12,604
And that's what I mean by you're in it for the long haul.

75
00:04:14,907 --> 00:04:18,909
I look at building online games as a service as like the Apollo program.

76
00:04:19,910 --> 00:04:22,471
It's amazing how that thing launched, if you think about it.

77
00:04:23,632 --> 00:04:26,934
It's amazing how games as a service games launch.

78
00:04:27,074 --> 00:04:31,696
When you think about all the complexity I showed you earlier under the iceberg, everything

79
00:04:31,736 --> 00:04:36,519
has to be working right, everything has to be asynchronous, everything has to apply well

80
00:04:37,059 --> 00:04:39,881
to run a service well and to make the revenue that you want.

81
00:04:41,202 --> 00:04:43,183
Lots of moving parts, basically.

82
00:04:45,347 --> 00:04:47,608
My first lesson that I'm going to talk about

83
00:04:49,009 --> 00:04:52,752
is short-term versus long-term thinking.

84
00:04:54,593 --> 00:04:56,594
This is the one I always preach about.

85
00:04:57,195 --> 00:04:58,616
And I'm sorry if I sound like a servant here.

86
00:04:58,856 --> 00:05:00,437
This is the one I always preach about,

87
00:05:00,957 --> 00:05:04,039
because this is the one that most people don't get when

88
00:05:04,059 --> 00:05:05,300
they're building games in the service.

89
00:05:06,641 --> 00:05:10,184
As I said before, everything you decide in the game

90
00:05:10,324 --> 00:05:13,426
as you're building it will affect you somehow in live.

91
00:05:16,535 --> 00:05:17,236
It is a fact.

92
00:05:17,577 --> 00:05:20,142
I've seen things like tech debt,

93
00:05:20,463 --> 00:05:21,665
I've seen design debt,

94
00:05:22,006 --> 00:05:24,931
that are very hard to get back once you go live.

95
00:05:24,951 --> 00:05:26,114
And we'll talk about that a little later.

96
00:05:27,533 --> 00:05:31,155
Systems, as you're developing game systems, or any systems

97
00:05:31,175 --> 00:05:35,037
that you're working on, it has to be simple, scalable,

98
00:05:35,337 --> 00:05:37,959
extensible, secure, and stable.

99
00:05:38,619 --> 00:05:42,101
Those are the words I use all the time when I look at game

100
00:05:42,141 --> 00:05:44,563
systems, when I look at any other thing that supports the

101
00:05:44,843 --> 00:05:46,644
Games as a Service platform.

102
00:05:47,284 --> 00:05:47,845
Is it simple?

103
00:05:49,360 --> 00:05:55,245
When you develop complex game systems that have multiple global variables that call over

104
00:05:55,265 --> 00:05:59,508
the place and you're not sure what happens, you can fix something in live and break something

105
00:05:59,628 --> 00:05:59,808
else.

106
00:06:01,089 --> 00:06:04,992
You can fix a bug in live and break multiple bugs in live.

107
00:06:06,093 --> 00:06:07,675
Secure is another one.

108
00:06:08,235 --> 00:06:10,597
Whatever you do, you can't trust the client.

109
00:06:11,638 --> 00:06:13,920
Whatever you do has to be validated by the server.

110
00:06:16,600 --> 00:06:20,604
A lot of times I see in teams and when they're developing games of service, they become short-sighted

111
00:06:20,764 --> 00:06:24,006
and that's why I talk about short-term decisions because they want to get things done, they're

112
00:06:24,027 --> 00:06:28,790
under a tight schedule, a tight deadline and they make decisions and I say, wait a minute,

113
00:06:29,291 --> 00:06:34,255
you make that decision, you're going to have this effect when you go live and it's real

114
00:06:34,775 --> 00:06:37,898
and sometimes they don't see that and that's why I call it being short-sighted.

115
00:06:40,280 --> 00:06:43,463
When I talk about that, asset pipelines is a great one.

116
00:06:44,515 --> 00:06:48,462
You have to develop a cadence at live, a delivering content

117
00:06:48,582 --> 00:06:50,665
at a certain pace, as well as features.

118
00:06:51,006 --> 00:06:54,652
You better make sure your asset pipelines are lean and mean.

119
00:06:55,193 --> 00:06:57,577
You don't want characters to take five months to develop.

120
00:06:58,369 --> 00:07:00,370
You want characters to take far less time to develop.

121
00:07:00,690 --> 00:07:02,151
Don't overcomplex things.

122
00:07:02,211 --> 00:07:05,652
Make sure you have solid asset pipelines for one,

123
00:07:05,772 --> 00:07:06,952
if you're doing free to play game,

124
00:07:07,192 --> 00:07:09,453
to make sure you can stock your store up appropriately.

125
00:07:09,473 --> 00:07:12,655
Two, if you're making a premium plus game,

126
00:07:12,875 --> 00:07:15,216
when I call premium plus, I'm talking about you charge retail

127
00:07:15,256 --> 00:07:17,336
and then microtransactions afterwards,

128
00:07:17,737 --> 00:07:20,538
is you gotta make sure that you always have content available.

129
00:07:21,500 --> 00:07:22,140
after you launch.

130
00:07:22,361 --> 00:07:23,421
It's extremely important.

131
00:07:23,441 --> 00:07:25,121
Look at the cadence on Fortnite.

132
00:07:25,621 --> 00:07:28,022
That's a great example of good pipelines working.

133
00:07:29,122 --> 00:07:30,682
Technology choices matter.

134
00:07:30,902 --> 00:07:34,143
Everything you choose and select in development

135
00:07:34,263 --> 00:07:36,964
will affect you in live, including the engine you use

136
00:07:37,484 --> 00:07:39,564
and the technology you have behind the server

137
00:07:39,664 --> 00:07:40,324
and the platform.

138
00:07:41,065 --> 00:07:42,605
Be very careful of those choices.

139
00:07:43,225 --> 00:07:44,925
To refer back to what I said earlier,

140
00:07:44,985 --> 00:07:47,366
scalable is very important and stable.

141
00:07:49,142 --> 00:07:53,885
Getting the core loops and the metagame right for a session-based game, okay,

142
00:07:53,945 --> 00:07:57,408
for a virtual world, the elder game, you want to call it that.

143
00:07:58,108 --> 00:08:02,271
These things are really important to take your time and get them right.

144
00:08:03,231 --> 00:08:04,412
Don't move past them.

145
00:08:05,072 --> 00:08:06,413
Monetization is another one.

146
00:08:06,713 --> 00:08:10,716
Think about what type of product you're building, what type of audience you're building

147
00:08:10,816 --> 00:08:15,719
on, what platform you're building on, because console and PC are different than mobile.

148
00:08:19,450 --> 00:08:20,811
A good case study is Swotor.

149
00:08:23,252 --> 00:08:28,054
In Swotor, we're going to make a BioWare game online.

150
00:08:28,655 --> 00:08:30,956
If you know how much content is in a BioWare game,

151
00:08:31,276 --> 00:08:32,596
that should scare the hell out of you.

152
00:08:32,616 --> 00:08:34,937
It did me when I first was told about this.

153
00:08:35,598 --> 00:08:38,479
We decided that we had a choice between two engines

154
00:08:38,559 --> 00:08:41,720
at that time, one Hero engine and the Big World engine.

155
00:08:44,142 --> 00:08:45,662
Well, we chose the Hero Blade engine.

156
00:08:46,383 --> 00:08:48,023
That was a very, very bad choice.

157
00:08:50,565 --> 00:08:52,326
That caused lots of issues.

158
00:08:52,646 --> 00:08:54,588
I actually wanted the other engine,

159
00:08:55,568 --> 00:08:57,069
because it was more like UO.

160
00:08:57,289 --> 00:08:59,971
And UO is something I was used to, and I knew it could scale.

161
00:09:00,492 --> 00:09:03,054
I was very concerned about this choice, and it came true.

162
00:09:04,535 --> 00:09:07,317
What we had to do on this list, the tech debt

163
00:09:07,437 --> 00:09:09,999
that we gathered for that was so huge

164
00:09:10,979 --> 00:09:13,761
that I literally had to stop work on it.

165
00:09:14,698 --> 00:09:16,980
get a whole bunch of TDs to look at where we are,

166
00:09:17,421 --> 00:09:19,483
and figure out how we get this thing finished

167
00:09:20,264 --> 00:09:22,246
to make an online game work.

168
00:09:23,275 --> 00:09:25,936
And what that did is it took away programmers

169
00:09:26,257 --> 00:09:28,398
from the system side of the game.

170
00:09:28,698 --> 00:09:30,879
We could develop content, but not the systems.

171
00:09:30,959 --> 00:09:33,541
The problem is you need a good balance of content

172
00:09:33,661 --> 00:09:36,763
and game systems so you can have emergent game behavior

173
00:09:36,983 --> 00:09:38,804
and the stickiness that's important.

174
00:09:39,345 --> 00:09:42,266
As well as technology, especially since that was an MMO,

175
00:09:42,626 --> 00:09:44,167
that you can do character transfer,

176
00:09:44,227 --> 00:09:46,429
you can do collapsing of servers if you need to

177
00:09:46,469 --> 00:09:47,870
without the players knowing about it.

178
00:09:48,510 --> 00:09:49,971
That stuff didn't exist at launch

179
00:09:50,031 --> 00:09:52,472
because of the massive tech debt that we had.

180
00:09:53,656 --> 00:09:55,317
And it slows your ability to update,

181
00:09:55,718 --> 00:09:59,641
which is critical for you for sustaining players.

182
00:10:00,241 --> 00:10:02,603
And one of the things I've learned by that decision,

183
00:10:02,883 --> 00:10:05,785
it cost us big time in live.

184
00:10:07,587 --> 00:10:09,088
So be careful what you choose.

185
00:10:10,749 --> 00:10:11,750
Finding the right cadence.

186
00:10:11,790 --> 00:10:12,631
This is another one.

187
00:10:12,931 --> 00:10:14,272
As you're developing games as a service,

188
00:10:14,312 --> 00:10:17,034
because of the amount of content you have to deliver at launch,

189
00:10:19,795 --> 00:10:23,858
You really have to be careful about driving the team.

190
00:10:26,379 --> 00:10:30,801
Continuous acceleration is not a good thing for games of the service, because one of the things

191
00:10:31,102 --> 00:10:36,104
as versus a single player product is, it's opening night. You're just starting when you

192
00:10:36,144 --> 00:10:43,368
launch this thing. You can't take a break, as we said. Excuse me.

193
00:10:47,811 --> 00:10:49,012
It will cause burnout.

194
00:10:50,747 --> 00:10:55,010
I have done this a couple of times, and I learned my big lesson about burnout.

195
00:10:56,731 --> 00:10:58,352
You can't take time off the ship.

196
00:10:58,652 --> 00:10:59,472
People are tired.

197
00:11:00,053 --> 00:11:01,454
They're not making good decisions.

198
00:11:02,154 --> 00:11:04,635
They basically will leave, actually.

199
00:11:06,577 --> 00:11:09,738
What I've learned is when and how to accelerate.

200
00:11:11,103 --> 00:11:15,506
And what I did is I divided my schedule up into releases,

201
00:11:15,787 --> 00:11:18,149
and pretty much these are gates, we call it today.

202
00:11:18,429 --> 00:11:20,771
But remember, this is 2011, 2009.

203
00:11:22,132 --> 00:11:23,353
I developed some gates.

204
00:11:24,414 --> 00:11:26,055
Everyone knows what the gates are.

205
00:11:26,355 --> 00:11:27,736
They're pretty much standard today.

206
00:11:28,597 --> 00:11:30,999
Your first playable, your vertical slices.

207
00:11:31,019 --> 00:11:33,141
I actually do more than one vertical slice

208
00:11:33,221 --> 00:11:34,582
in games of the service.

209
00:11:35,202 --> 00:11:38,545
And at those points, I release.

210
00:11:40,162 --> 00:11:44,585
But one of the things, if I ask people to put in the extra effort when it's necessary,

211
00:11:44,886 --> 00:11:47,388
I have clear goals for everyone on the team.

212
00:11:47,568 --> 00:11:48,609
They know what they need to build.

213
00:11:49,289 --> 00:11:51,931
I establish clear guidelines, and it's voluntary.

214
00:11:54,834 --> 00:11:57,816
Because if you don't, again, you run the risk of burning out.

215
00:11:58,257 --> 00:12:00,098
You have to be very, very careful about how you do.

216
00:12:02,180 --> 00:12:03,641
One of the other things is how to release.

217
00:12:03,661 --> 00:12:09,026
One of the things I've learned on that is after about halfway through.

218
00:12:10,283 --> 00:12:12,645
A development, you should do a game jam.

219
00:12:13,705 --> 00:12:14,826
Game jam is two weeks.

220
00:12:15,687 --> 00:12:16,587
Do anything you want.

221
00:12:16,807 --> 00:12:17,528
Anybody can do it.

222
00:12:17,628 --> 00:12:19,669
Anybody can get together with anybody else in the team.

223
00:12:20,089 --> 00:12:21,770
You have two weeks to put something together

224
00:12:21,790 --> 00:12:22,731
that can be used in the game.

225
00:12:24,872 --> 00:12:26,833
You could get more done in that two weeks

226
00:12:26,853 --> 00:12:28,734
than you have in months.

227
00:12:29,995 --> 00:12:33,437
It also re-energizes the team midway through.

228
00:12:33,877 --> 00:12:35,018
Highly recommend you do that.

229
00:12:37,050 --> 00:12:42,213
I also start hiring DevOps and LiveOps well before we launch,

230
00:12:42,693 --> 00:12:45,334
go into beta testing because you want

231
00:12:45,354 --> 00:12:47,496
to buffer the team that's currently working there.

232
00:12:48,736 --> 00:12:50,837
You have to buffer them through test.

233
00:12:52,638 --> 00:12:56,280
And I usually rotate people out of DevOps for a reason

234
00:12:56,400 --> 00:12:58,402
because I want them to be able to feel the pain

235
00:12:58,722 --> 00:13:01,463
that DevOps has during testing if they need to.

236
00:13:01,823 --> 00:13:02,824
So I rotate them around.

237
00:13:04,962 --> 00:13:09,364
With UO and SWIG, one of the things I've learned

238
00:13:10,324 --> 00:13:13,066
is you could see the massive amount of crunching that I did.

239
00:13:13,086 --> 00:13:15,947
UO was in horrible shape when I came on board.

240
00:13:16,227 --> 00:13:17,688
It had to be crunched.

241
00:13:18,729 --> 00:13:22,871
And because of that, I had no choice.

242
00:13:23,351 --> 00:13:24,131
But it was awful.

243
00:13:24,311 --> 00:13:26,933
It was nine months of crunch, and then nine months afterwards.

244
00:13:26,953 --> 00:13:28,213
We had a team of 64.

245
00:13:28,253 --> 00:13:31,135
I think we went down to 12, and then went down to eight.

246
00:13:32,457 --> 00:13:34,478
people for running that kind of franchise.

247
00:13:35,459 --> 00:13:36,959
That's how burned out people were.

248
00:13:37,480 --> 00:13:41,122
We had no live ops, dev ops, or anything like that then.

249
00:13:41,562 --> 00:13:44,504
We all, everybody on the team had to bear the burden

250
00:13:44,584 --> 00:13:46,044
of working 24 by seven.

251
00:13:47,765 --> 00:13:52,288
SWIG, because we were under massive time constraints,

252
00:13:53,108 --> 00:13:56,450
we basically had to crunch the team as well.

253
00:13:56,851 --> 00:13:58,832
And I learned my lesson a lot from that.

254
00:13:58,912 --> 00:14:00,232
I'll never ever do that again.

255
00:14:01,314 --> 00:14:05,498
It's wrong and I learned how to set tempos and schedules for the releases.

256
00:14:05,999 --> 00:14:08,020
It's just something to try to avoid.

257
00:14:10,903 --> 00:14:15,027
One of the things I did with Swotor, which is a good thing, I didn't crunch the team

258
00:14:15,948 --> 00:14:17,509
like that in Swotor at all.

259
00:14:18,390 --> 00:14:19,511
And it was a huge team, 550 people.

260
00:14:21,570 --> 00:14:24,251
And what I did was I actually had better planning.

261
00:14:24,651 --> 00:14:25,911
That's why I started out with a start.

262
00:14:26,011 --> 00:14:28,132
I had a release roadmap for the product.

263
00:14:28,532 --> 00:14:30,893
Every six months, I went bottoms up on the schedule.

264
00:14:31,913 --> 00:14:33,454
I defined what the MVP was.

265
00:14:33,534 --> 00:14:36,114
I triaged all the releases to that MVP.

266
00:14:36,755 --> 00:14:37,695
I added producers.

267
00:14:37,755 --> 00:14:40,456
I broke the team up, since it was 550 people,

268
00:14:40,636 --> 00:14:42,817
into 32 autonomous teams that worked

269
00:14:43,277 --> 00:14:44,257
on different parts of it.

270
00:14:45,287 --> 00:14:49,028
I established a technical review board, and I built dev apps, live apps early.

271
00:14:49,268 --> 00:14:56,110
All that created the way of actually pacing the team where I did not have to do any long-term

272
00:14:56,170 --> 00:14:56,830
crunch at all.

273
00:14:57,130 --> 00:15:01,752
There was very little at all putting in effort to get the game up, which I was very proud

274
00:15:01,792 --> 00:15:01,852
of.

275
00:15:02,052 --> 00:15:03,072
So it does work.

276
00:15:05,793 --> 00:15:09,274
One of the biggest things that I see is not enough pre-pro.

277
00:15:10,635 --> 00:15:14,156
I don't think anybody would love to see their house foundation rushed.

278
00:15:15,685 --> 00:15:16,305
I know I wouldn't.

279
00:15:17,206 --> 00:15:21,029
That's what you do when you push through pre-pro.

280
00:15:21,609 --> 00:15:25,332
I've seen so many times people going too wide, too fast.

281
00:15:26,993 --> 00:15:29,175
That is something that's very common.

282
00:15:30,404 --> 00:15:31,125
Don't do that.

283
00:15:31,245 --> 00:15:34,487
Take the time that you need to get your core looped,

284
00:15:35,147 --> 00:15:38,390
in particular, your core loop, your moment-to-moment gameplay,

285
00:15:38,830 --> 00:15:41,252
your inner loops, working really well

286
00:15:41,532 --> 00:15:44,854
before you move on to the meta or before you move on

287
00:15:44,874 --> 00:15:46,055
to anything else in the game.

288
00:15:50,438 --> 00:15:51,559
Case study was Battlecry.

289
00:15:51,619 --> 00:15:54,981
Battlecry was a brawler game that I worked on with Bethesda.

290
00:15:56,122 --> 00:15:57,963
We were trying to do an online brawler.

291
00:15:58,589 --> 00:16:05,074
game. No one's ever done that before, fighting game. And lots of risks. But one of the things

292
00:16:05,114 --> 00:16:10,879
we did is we moved through pre-production way too fast. We had blockouts on our levels.

293
00:16:10,919 --> 00:16:15,683
We had what I call crash test dummies for our characters. We only put three classes.

294
00:16:15,723 --> 00:16:20,007
We had a total of five. We should have put all five classes in and worked out that moment

295
00:16:20,027 --> 00:16:22,830
to moment before we arted it up and made it look pretty.

296
00:16:25,183 --> 00:16:29,224
And what happened was we lost the core loop just wasn't there

297
00:16:29,264 --> 00:16:29,865
when we needed it.

298
00:16:30,105 --> 00:16:31,185
And it just haunted us.

299
00:16:38,627 --> 00:16:39,527
Content treadmill.

300
00:16:40,827 --> 00:16:41,688
This is another one.

301
00:16:42,548 --> 00:16:46,309
It takes a lot of effort to build these games.

302
00:16:48,169 --> 00:16:52,690
These games take a long time to make and to build.

303
00:16:53,802 --> 00:16:55,683
And the content side is the reason.

304
00:16:59,065 --> 00:17:02,827
One of the problems I had with Swotor at the start is we wanted

305
00:17:02,847 --> 00:17:05,309
to build a Bioware game and we wanted to have voice

306
00:17:05,389 --> 00:17:07,110
over on all the NPCs.

307
00:17:08,250 --> 00:17:10,471
So we had 200, we wanted to build 200 hours

308
00:17:10,651 --> 00:17:11,772
of content per class.

309
00:17:11,872 --> 00:17:14,754
There were 18, 8 classes so you know that's 1,600 hours

310
00:17:14,794 --> 00:17:15,254
of content.

311
00:17:15,874 --> 00:17:17,255
We wanted 185, it would work out to be

312
00:17:17,335 --> 00:17:18,516
about 185,000 lines of dialogue, 4,000 cinematics.

313
00:17:25,934 --> 00:17:29,547
The first thing I thought was, how are we going to get this done?

314
00:17:33,004 --> 00:17:35,005
And what I did, I talked about this earlier,

315
00:17:35,325 --> 00:17:36,645
is I broke the team down.

316
00:17:37,045 --> 00:17:38,845
It broke as we were scaling.

317
00:17:38,885 --> 00:17:40,026
We scaled from 80 to 200.

318
00:17:40,906 --> 00:17:44,407
It didn't, from 80 to 150, it broke.

319
00:17:44,547 --> 00:17:46,407
I had to redo the way we're planning,

320
00:17:46,447 --> 00:17:47,948
the way the whole organization worked.

321
00:17:48,288 --> 00:17:49,168
It just fell apart.

322
00:17:49,708 --> 00:17:53,069
We went from 150 to 250, it fell apart again.

323
00:17:53,509 --> 00:17:55,569
I stopped for two weeks and said,

324
00:17:55,609 --> 00:17:56,770
no one else is doing anything.

325
00:17:57,070 --> 00:18:00,390
We're gonna stop right now and figure out how to proceed

326
00:18:00,870 --> 00:18:02,771
in a way that we can be successful in scale.

327
00:18:03,691 --> 00:18:10,615
So what I found out is I broke it down to small autonomous teams that work

328
00:18:10,735 --> 00:18:16,478
together, they're interdisciplinary, I broke down my tech because it was a

329
00:18:16,538 --> 00:18:21,521
hundred programmers, I broke down my tech into seven TDs that watched different

330
00:18:21,681 --> 00:18:25,903
aspects of the game in real time and they had responsibilities.

331
00:18:27,537 --> 00:18:32,981
I had people sit who had dependencies on each other, autonomous groups that had dependencies

332
00:18:33,021 --> 00:18:34,723
on them, sit close to each other.

333
00:18:35,784 --> 00:18:38,706
I had weekly scrum of scrums and I did dailies.

334
00:18:38,966 --> 00:18:43,750
So when I did dailies, the thing I said is it takes five minutes to write, one minute

335
00:18:43,770 --> 00:18:44,090
to read.

336
00:18:45,131 --> 00:18:47,954
That's really important because I don't want a thesis.

337
00:18:49,727 --> 00:18:51,188
I just want to know what people are doing.

338
00:18:51,429 --> 00:18:52,450
Now, why did I do dailies?

339
00:18:52,770 --> 00:18:55,692
Dailies were awesome because it allowed the producers

340
00:18:55,972 --> 00:19:00,116
to see what people were doing inside all the 550 people

341
00:19:00,156 --> 00:19:03,258
in the studio and allows us to look at, well, wait a minute,

342
00:19:03,338 --> 00:19:04,459
why is he working on this?

343
00:19:04,539 --> 00:19:06,621
He's supposed to be working on that because there's

344
00:19:06,981 --> 00:19:08,743
so many things going on at once.

345
00:19:09,123 --> 00:19:12,165
It gives you that micro-level detail that's important.

346
00:19:16,049 --> 00:19:17,610
So, the other thing I did,

347
00:19:18,695 --> 00:19:21,057
was I hired contractors, a lot of them.

348
00:19:21,077 --> 00:19:22,919
I had 150 contractors on that project.

349
00:19:24,000 --> 00:19:26,242
I found a CodeDev partners.

350
00:19:26,322 --> 00:19:29,105
I had people in St. Petersburg working on it.

351
00:19:29,145 --> 00:19:30,626
I had people in Asia working on it.

352
00:19:30,646 --> 00:19:34,169
I had people up in Virginia working on it.

353
00:19:35,710 --> 00:19:38,513
And the course EA, one of the great things about working EA,

354
00:19:38,613 --> 00:19:41,055
they do have a fire hose, the people hose.

355
00:19:43,177 --> 00:19:44,518
And I had the people hose access.

356
00:19:45,389 --> 00:19:46,850
I don't like the people-holds access.

357
00:19:47,150 --> 00:19:50,092
I learned that that's really hard to scale very quickly.

358
00:19:50,873 --> 00:19:53,215
And that's what actually broke the last time.

359
00:19:53,235 --> 00:19:55,136
I had the people-holds turned on full blast.

360
00:19:55,436 --> 00:19:56,237
I said, whoa, stop.

361
00:19:56,617 --> 00:19:57,058
We're breaking.

362
00:19:59,460 --> 00:20:03,243
And I outsourced large pieces of audio and art.

363
00:20:04,524 --> 00:20:05,564
That worked out really well.

364
00:20:05,585 --> 00:20:08,267
I had a core team of artists that did reviews.

365
00:20:09,132 --> 00:20:12,215
That also did art, the more complicated iterative art,

366
00:20:12,635 --> 00:20:14,537
but it also had a ton of outsourcing

367
00:20:14,557 --> 00:20:18,821
done on characters, weapons, and all the customization.

368
00:20:23,286 --> 00:20:24,427
So that's how we got that done.

369
00:20:25,028 --> 00:20:28,189
Now, what I've learned through doing this so many times

370
00:20:28,650 --> 00:20:30,631
is you really have to start generating

371
00:20:30,651 --> 00:20:31,671
your content for launch.

372
00:20:32,251 --> 00:20:37,294
If you want things at D1, D5, D30, D90, or D60,

373
00:20:37,614 --> 00:20:39,775
you really need to start that before you ship.

374
00:20:40,235 --> 00:20:41,616
That's really hard, by the way.

375
00:20:42,256 --> 00:20:44,457
That's not an easy task because you're

376
00:20:44,497 --> 00:20:46,018
on fire before ship anyway.

377
00:20:46,738 --> 00:20:50,280
And so, but you have to ring fence some small teams,

378
00:20:50,360 --> 00:20:53,000
not big ones, small teams to get the starting point

379
00:20:53,541 --> 00:20:59,002
for doing your small updates to your monthly updates

380
00:20:59,242 --> 00:21:00,323
to your quarterly updates.

381
00:21:00,763 --> 00:21:03,384
And then you've got to leave the dev team alone once they ship.

382
00:21:04,504 --> 00:21:07,665
They should start planning what the big update's going to be.

383
00:21:08,885 --> 00:21:09,726
That works well.

384
00:21:13,726 --> 00:21:16,767
That goes into another topic is your heartbeat.

385
00:21:16,967 --> 00:21:18,228
When I talk about your heartbeat,

386
00:21:19,429 --> 00:21:22,590
I'm talking about how quickly you can

387
00:21:22,630 --> 00:21:28,313
respond to fixing something, how quickly you can update

388
00:21:29,833 --> 00:21:33,035
and move content to the users, to the players.

389
00:21:34,515 --> 00:21:35,136
It's critical.

390
00:21:37,317 --> 00:21:39,318
What affects your heartbeat?

391
00:21:40,172 --> 00:21:40,933
Your patch size.

392
00:21:41,934 --> 00:21:44,856
I've seen some things lately that blows me away.

393
00:21:45,957 --> 00:21:48,739
When I see a D1 patch bigger than the game,

394
00:21:48,759 --> 00:21:52,623
I go, what the hell is going on?

395
00:21:53,744 --> 00:21:56,866
You have to look, as building development games and servers,

396
00:21:57,186 --> 00:21:59,308
you have to get discipline on your patch sizes.

397
00:22:00,029 --> 00:22:02,131
Because people don't have the time

398
00:22:02,331 --> 00:22:04,993
to wait for an hour or so to get a patch down.

399
00:22:05,887 --> 00:22:06,547
Think about that.

400
00:22:07,088 --> 00:22:08,048
You lose people.

401
00:22:08,088 --> 00:22:10,250
The more friction you put in front of the people,

402
00:22:10,330 --> 00:22:12,572
the funnel, the more they may just say,

403
00:22:12,793 --> 00:22:14,174
hey, I'm gonna go play Fortnite.

404
00:22:14,194 --> 00:22:15,515
I'm gonna go play Division.

405
00:22:15,615 --> 00:22:17,336
You know, there's tons of things out there to play.

406
00:22:18,137 --> 00:22:20,119
Complexity of your art assets.

407
00:22:21,200 --> 00:22:23,282
How quickly you can get new weapons,

408
00:22:23,962 --> 00:22:26,584
new effects, new animations,

409
00:22:27,465 --> 00:22:29,687
new character stuff, new characters.

410
00:22:31,060 --> 00:22:37,784
Systems design, how quickly you can get things updated in the game and out there is critical.

411
00:22:38,845 --> 00:22:44,228
Your pipelines, and I'm not just talking about art, I'm talking about design as well.

412
00:22:45,108 --> 00:22:46,149
Branching is another one.

413
00:22:46,950 --> 00:22:48,110
Branching is critical.

414
00:22:50,491 --> 00:22:53,592
There are a lot of friction when some people use certain engines

415
00:22:53,632 --> 00:22:54,212
for branching.

416
00:22:54,372 --> 00:22:56,113
I'm very experienced with that one.

417
00:22:57,434 --> 00:22:59,795
You have to think about how you're going to branch

418
00:22:59,835 --> 00:23:02,436
when you're live because if you're on multiple platforms,

419
00:23:02,796 --> 00:23:04,317
you have to have multiple SKUs,

420
00:23:04,497 --> 00:23:05,797
and you have to have multiple branches.

421
00:23:05,977 --> 00:23:09,499
You also have to have, as I said, continuous stream

422
00:23:09,539 --> 00:23:13,101
of content being developed by three or four different groups

423
00:23:13,681 --> 00:23:14,901
as you're working through live.

424
00:23:15,742 --> 00:23:16,462
And you have to keep.

425
00:23:17,156 --> 00:23:19,917
Your main line, which is your main thing that you

426
00:23:20,477 --> 00:23:22,637
or the players have, you never want to touch that

427
00:23:22,957 --> 00:23:24,398
because if you ever mess that up,

428
00:23:24,598 --> 00:23:25,938
you have to repatch the game.

429
00:23:26,738 --> 00:23:28,239
That you never want to do, trust me.

430
00:23:29,199 --> 00:23:32,099
And your build system, how quickly you can deploy

431
00:23:32,119 --> 00:23:32,820
and build something.

432
00:23:34,520 --> 00:23:36,860
I'll talk about one thing that people don't think

433
00:23:36,920 --> 00:23:38,741
about a lot until they're up against it.

434
00:23:39,141 --> 00:23:40,141
It's hot fixes.

435
00:23:40,961 --> 00:23:43,782
These are emergency fixes that you have to do in live.

436
00:23:44,022 --> 00:23:46,923
This takes development time before you launch live.

437
00:23:49,252 --> 00:23:53,815
A partial build should take no more than 45 minutes to build.

438
00:23:55,216 --> 00:23:57,357
A full build should not take more than four hours.

439
00:23:59,378 --> 00:24:02,560
By the way, a lot of people I've seen do this,

440
00:24:03,020 --> 00:24:04,401
our build takes 32 hours.

441
00:24:06,242 --> 00:24:06,522
No.

442
00:24:07,422 --> 00:24:08,103
OK, we got it down to 24.

443
00:24:08,243 --> 00:24:09,143
No.

444
00:24:10,424 --> 00:24:11,465
We got it down to eight.

445
00:24:11,505 --> 00:24:11,745
No.

446
00:24:12,665 --> 00:24:14,566
You need to be four hours.

447
00:24:15,773 --> 00:24:17,835
because you don't know what you're going to have to deal

448
00:24:17,875 --> 00:24:20,737
with on executables when you're in live.

449
00:24:22,338 --> 00:24:24,660
Deploy should take less than six hours, so you better have

450
00:24:24,680 --> 00:24:28,522
a good QA process on top of that.

451
00:24:28,943 --> 00:24:31,645
85% of the fixes in order to make this happen are on the

452
00:24:31,705 --> 00:24:32,925
server, not the client.

453
00:24:33,666 --> 00:24:36,388
And they don't revolve changing the executables.

454
00:24:40,371 --> 00:24:40,631
Sorry.

455
00:24:44,313 --> 00:24:44,954
How is that done?

456
00:24:46,415 --> 00:24:48,817
The data is stored on the server.

457
00:24:50,117 --> 00:24:52,318
Design systems are data driven.

458
00:24:52,699 --> 00:24:55,780
This is one mistake I've seen over and over and over again

459
00:24:55,800 --> 00:24:59,302
about people not developing tools.

460
00:25:00,620 --> 00:25:04,242
for development in design where they have an advancement tree.

461
00:25:05,223 --> 00:25:07,244
And by the way, it should not be done in Excel.

462
00:25:07,284 --> 00:25:10,766
It should be done in something that can scale, especially

463
00:25:10,826 --> 00:25:11,327
a store.

464
00:25:12,107 --> 00:25:15,209
When you're dealing with empty microtransactions,

465
00:25:15,429 --> 00:25:19,112
you better make sure you don't put all your items in an Excel

466
00:25:19,152 --> 00:25:21,453
spreadsheet because Excel won't be

467
00:25:21,493 --> 00:25:23,094
able to handle it after a certain point in time.

468
00:25:24,015 --> 00:25:26,756
Automated QA.

469
00:25:28,621 --> 00:25:33,166
How many people have estates or computer programmers who do QA?

470
00:25:34,468 --> 00:25:40,434
See, those are lifesavers and necessary because you know what?

471
00:25:40,554 --> 00:25:42,656
If you make a hotfix, can you check it in time?

472
00:25:42,756 --> 00:25:46,981
You better have some automated tools to help you white-glove it to see if it works.

473
00:25:48,482 --> 00:25:50,425
A scripting language is one way to help.

474
00:25:52,834 --> 00:25:56,457
when you're developing game systems to be able to make fixes on the fly

475
00:25:56,997 --> 00:25:58,718
without recompiling the servers.

476
00:26:00,760 --> 00:26:03,782
It should be seamless to the user basically, or the hot fix should be.

477
00:26:05,243 --> 00:26:07,044
What does a cadence look like when you're live?

478
00:26:07,704 --> 00:26:08,945
You should do weekly patches.

479
00:26:09,986 --> 00:26:12,768
Whether you're fixing bugs, store updates, small additions,

480
00:26:12,788 --> 00:26:16,190
what I call breadcrumbs to your next kind of beat, they're important.

481
00:26:17,151 --> 00:26:20,793
Monthly patches, weapons, abilities, level, whatever you decide.

482
00:26:22,235 --> 00:26:23,916
These types of things, you look at Fortnite,

483
00:26:24,096 --> 00:26:24,617
they're getting it.

484
00:26:26,278 --> 00:26:27,999
Quarterly, seasonal.

485
00:26:28,219 --> 00:26:29,200
Seasons are a great thing.

486
00:26:29,921 --> 00:26:31,302
New levels, new characters, new models.

487
00:26:31,702 --> 00:26:33,803
Anything you can think of that fits kind of a nice big,

488
00:26:34,564 --> 00:26:38,047
not a huge update, but a nice little tick on the register

489
00:26:38,067 --> 00:26:40,749
to get users to come back, quarterlies.

490
00:26:42,530 --> 00:26:44,612
Large content features should take no longer

491
00:26:44,652 --> 00:26:45,612
than six to eight months.

492
00:26:45,672 --> 00:26:48,495
Sometimes you can wait a little longer to a year.

493
00:26:48,655 --> 00:26:51,116
But if you wait longer, they should be really, really big.

494
00:26:55,296 --> 00:27:02,717
The next topic I'm going to talk about is transitioning into live, into testing.

495
00:27:03,517 --> 00:27:05,738
You've done this throughout the development process.

496
00:27:05,938 --> 00:27:09,438
Your focus tests, what I call tissue testing, is basically getting in people that you can

497
00:27:09,478 --> 00:27:11,319
just throw away easily to test the game.

498
00:27:11,339 --> 00:27:12,419
They're an awesome thing to do.

499
00:27:13,099 --> 00:27:14,119
And internal playtesting.

500
00:27:14,679 --> 00:27:18,480
I believe that everyone that's working on the game should playtest the game, and I actually

501
00:27:18,520 --> 00:27:21,161
have mandatory playtests to make that happen.

502
00:27:21,481 --> 00:27:22,681
Because if you don't, people won't.

503
00:27:23,798 --> 00:27:26,199
People need to play what they make.

504
00:27:26,540 --> 00:27:27,660
I don't care if you're an artist.

505
00:27:28,441 --> 00:27:29,441
I don't care if you're a designer.

506
00:27:29,842 --> 00:27:31,423
I don't care if you're a programmer.

507
00:27:31,643 --> 00:27:33,364
You need to sit down and play the game.

508
00:27:35,505 --> 00:27:37,487
Now, when you start going to test,

509
00:27:37,527 --> 00:27:39,708
you have three more loops coming in to play.

510
00:27:40,128 --> 00:27:42,630
You have community players.

511
00:27:43,290 --> 00:27:45,692
You have the customer support loop near the end.

512
00:27:45,872 --> 00:27:46,653
And you have the KPIs.

513
00:27:50,137 --> 00:27:52,959
When you're building a live services group, this is when you start.

514
00:27:53,159 --> 00:27:57,443
When you start going, right before you start, when you're ready to go into test, you start

515
00:27:57,523 --> 00:28:02,507
building all these elements out.

516
00:28:03,068 --> 00:28:06,871
Not all of them need to be fully flushed, but you need to start building these services

517
00:28:06,891 --> 00:28:07,171
out.

518
00:28:09,090 --> 00:28:12,697
Now, what I usually do is I use DevOps and LiveOps

519
00:28:12,817 --> 00:28:15,302
to buffer the dev team before we launch.

520
00:28:15,623 --> 00:28:17,266
Because what's going to happen is

521
00:28:17,286 --> 00:28:19,109
you're going to get a lot of feedback when you start

522
00:28:19,169 --> 00:28:20,311
testing, external testing.

523
00:28:21,375 --> 00:28:23,657
that you didn't get when you internal test.

524
00:28:24,377 --> 00:28:26,738
Internal test is not going to get you the same thing

525
00:28:26,978 --> 00:28:28,279
that external testers have.

526
00:28:28,579 --> 00:28:31,401
Don't make that mistake that think you can do an internal

527
00:28:31,461 --> 00:28:33,922
testing group that's a QA group.

528
00:28:34,202 --> 00:28:37,084
Now, if you have a company that has over a million employees

529
00:28:37,144 --> 00:28:39,805
or more, or you can get a million players to play, then

530
00:28:39,845 --> 00:28:41,266
yes, that's a great sample set.

531
00:28:41,366 --> 00:28:43,147
And yes, you should do it that way internally.

532
00:28:43,447 --> 00:28:43,947
If you don't.

533
00:28:44,672 --> 00:28:48,395
which most people don't, you're going to get different feedback

534
00:28:49,376 --> 00:28:51,718
than if you were, even with internal,

535
00:28:51,758 --> 00:28:53,999
I'd say, with a company that big,

536
00:28:55,060 --> 00:28:58,683
having going out is even better because it's more randomized

537
00:28:58,743 --> 00:28:59,704
and it's not as biased.

538
00:29:00,164 --> 00:29:02,366
But you're going to find things come up.

539
00:29:02,826 --> 00:29:04,387
And you're going to have to balance and triage

540
00:29:04,868 --> 00:29:05,948
all the things you're finding out

541
00:29:06,008 --> 00:29:08,690
while you're testing the game to what you're building.

542
00:29:09,695 --> 00:29:16,580
in test. And that's the hard part. So I have DevOps and LiveOps buffer the team enough

543
00:29:17,041 --> 00:29:27,029
so they can do their work to finish the game. Now, things have changed once you get into

544
00:29:27,069 --> 00:29:36,117
test. Everything has changed on how you release the game, how you make updates. You're branching

545
00:29:36,157 --> 00:29:37,438
now off a mainline.

546
00:29:38,488 --> 00:29:40,049
You're triaging every release.

547
00:29:40,469 --> 00:29:41,590
You're writing patch notes.

548
00:29:41,790 --> 00:29:44,792
Community management is totally involved in this now.

549
00:29:46,273 --> 00:29:50,216
And so, this is the phase in closed beta

550
00:29:50,616 --> 00:29:52,578
where you're starting to act like a live team.

551
00:29:54,205 --> 00:29:57,626
And all these things are done, need to be done,

552
00:29:58,086 --> 00:30:00,567
and this is where you get the team acting like a live team.

553
00:30:01,367 --> 00:30:05,169
Transitioning a team from development to live is hard.

554
00:30:05,949 --> 00:30:09,170
Every time I've done this, a lot of people haven't been there

555
00:30:09,910 --> 00:30:12,191
and they don't understand it until they are.

556
00:30:12,771 --> 00:30:15,112
And so this is a time to start training them,

557
00:30:15,472 --> 00:30:17,633
putting training wheels on them before you launch.

558
00:30:19,874 --> 00:30:22,975
If you look at the development process, it's now a loop.

559
00:30:23,946 --> 00:30:26,146
You're sitting there, you're going through pre-production

560
00:30:26,206 --> 00:30:27,627
on your stuff, and by the way,

561
00:30:27,667 --> 00:30:29,447
pre-production just doesn't happen in the beginning.

562
00:30:29,967 --> 00:30:31,847
On a Games as a Service, it happens all the way

563
00:30:31,887 --> 00:30:32,607
through development.

564
00:30:33,588 --> 00:30:35,448
You're constantly doing pre-pro on things.

565
00:30:36,428 --> 00:30:39,729
Features to content, good example, you build a new level,

566
00:30:39,789 --> 00:30:41,829
you block it out first, you play test it,

567
00:30:42,249 --> 00:30:48,010
then you start putting in your level zero to level three

568
00:30:48,070 --> 00:30:52,911
to level four type of assets, all going to final.

569
00:30:53,928 --> 00:30:56,210
And so this is this feedback loop I was talking about.

570
00:30:57,210 --> 00:30:58,111
Now that you're starting it.

571
00:30:58,351 --> 00:31:00,912
Now you start to act like a live development process.

572
00:31:02,813 --> 00:31:04,514
This is maybe basic to people, but I

573
00:31:04,934 --> 00:31:07,656
feel like I need to somewhat go under this a little bit,

574
00:31:07,696 --> 00:31:08,476
go over this a little bit.

575
00:31:08,496 --> 00:31:09,737
I'll try to get through this quickly.

576
00:31:10,997 --> 00:31:12,758
Closed beta, I use closed beta.

577
00:31:12,998 --> 00:31:14,739
It basically means that you have a key

578
00:31:14,759 --> 00:31:15,700
and you're invited to it.

579
00:31:17,260 --> 00:31:18,921
It's used to validate what you have.

580
00:31:19,962 --> 00:31:22,163
You can do a lot of focus testing for UR, UI.

581
00:31:24,456 --> 00:31:26,319
and usability, that's awesome.

582
00:31:27,241 --> 00:31:29,145
But for the way the game feels and plays,

583
00:31:29,405 --> 00:31:30,968
I think this is really where you're gonna get.

584
00:31:31,978 --> 00:31:36,900
the validation because I've done a lot of focus tests that have been somewhat biased.

585
00:31:37,400 --> 00:31:42,322
The data that I got there versus the data I got when I went live was surprisingly different.

586
00:31:43,202 --> 00:31:50,585
And so this is a time where you validate your assumptions because that's what they are and

587
00:31:50,865 --> 00:31:54,566
you drive to figure out what works, what doesn't work.

588
00:31:57,385 --> 00:32:01,689
And this validation is very important to figure out

589
00:32:01,769 --> 00:32:03,911
if you have a fun, engaging game.

590
00:32:04,451 --> 00:32:05,832
That's what closed beta is about.

591
00:32:06,453 --> 00:32:06,973
Is it fun?

592
00:32:07,574 --> 00:32:08,235
Is it engaging?

593
00:32:11,778 --> 00:32:14,480
What I usually do is I start out with 5k.

594
00:32:17,318 --> 00:32:19,740
get to 10, 20, and then 100.

595
00:32:19,780 --> 00:32:22,202
That's kind of like a good sample size,

596
00:32:23,102 --> 00:32:26,185
in my opinion, for a closed beta session.

597
00:32:27,045 --> 00:32:28,326
It's good enough.

598
00:32:29,326 --> 00:32:30,547
If you can get higher, that's great.

599
00:32:30,747 --> 00:32:31,588
In fact, I recommend it.

600
00:32:31,608 --> 00:32:33,849
One of the hardest things, by the way, to scale,

601
00:32:33,969 --> 00:32:36,051
especially if you're doing your first games of the service,

602
00:32:36,351 --> 00:32:38,192
is how many players you have on the server.

603
00:32:39,053 --> 00:32:40,634
It's really hard to break that 100.

604
00:32:40,754 --> 00:32:43,936
It is very painful.

605
00:32:44,276 --> 00:32:47,719
Once you break the 100, getting to the next 1,000 is hard.

606
00:32:48,179 --> 00:32:51,301
Getting to 5,000 is hard.

607
00:32:52,122 --> 00:32:54,323
Once you start breaking above 50 to 100,

608
00:32:55,224 --> 00:32:56,305
things are a lot easier.

609
00:32:57,234 --> 00:32:58,955
What happens, I warn people about,

610
00:32:59,376 --> 00:33:02,197
is when you start hitting 200, PCU

611
00:33:02,578 --> 00:33:04,219
is when things start popping again.

612
00:33:10,563 --> 00:33:13,405
Closed beta is all about balancing and tuning

613
00:33:13,425 --> 00:33:14,386
the content as well.

614
00:33:15,326 --> 00:33:17,608
It's about the virtual currency, especially if you're doing,

615
00:33:18,028 --> 00:33:19,469
and most people who do games as a service

616
00:33:19,509 --> 00:33:20,890
has some kind of revenue model.

617
00:33:21,310 --> 00:33:24,072
Most of it is either premium plus or free to play.

618
00:33:25,486 --> 00:33:29,548
And so you want to make sure your virtual economy is working

619
00:33:29,588 --> 00:33:32,249
well before you start charging people real money.

620
00:33:33,029 --> 00:33:33,829
So that's important.

621
00:33:35,150 --> 00:33:37,271
Player wipes are possible during this phase,

622
00:33:37,491 --> 00:33:38,711
and I want to warn you about that.

623
00:33:38,791 --> 00:33:40,792
Every time you do a player wipe, you're

624
00:33:40,812 --> 00:33:42,873
going to have a problem with retention.

625
00:33:44,602 --> 00:33:45,743
So be careful with that one.

626
00:33:46,463 --> 00:33:48,484
Telemetry is very important.

627
00:33:48,684 --> 00:33:52,606
By the way, designers always ask for a list that's 18 pages

628
00:33:52,666 --> 00:33:53,867
long, and I laugh at it.

629
00:33:54,407 --> 00:33:55,728
And I said, cull it down.

630
00:33:56,548 --> 00:33:57,109
Pick your top.

631
00:33:58,589 --> 00:34:01,491
Because you can get really bogged down in data if you're

632
00:34:01,511 --> 00:34:04,032
not careful and not have the capability of storing it all.

633
00:34:06,897 --> 00:34:07,819
It's not 24 by 7.

634
00:34:08,381 --> 00:34:10,144
I usually don't run these things 24 by 7.

635
00:34:10,886 --> 00:34:12,449
They should last six to eight months.

636
00:34:12,570 --> 00:34:15,055
Anybody that does it less than that is asking

637
00:34:15,295 --> 00:34:17,019
for serious problems at launch.

638
00:34:17,978 --> 00:34:22,119
especially for an online persistent world game, even a session-based game.

639
00:34:23,840 --> 00:34:25,080
Online games are complex.

640
00:34:25,120 --> 00:34:31,462
They need the time to work through the gates of how many PCU, of how your technology will

641
00:34:31,502 --> 00:34:31,862
scale.

642
00:34:32,102 --> 00:34:34,943
It needs the gates of how your design and game systems will scale.

643
00:34:34,983 --> 00:34:35,923
You need those gates.

644
00:34:36,664 --> 00:34:39,564
And closed beta is where you practice and go through that.

645
00:34:41,885 --> 00:34:44,206
Open beta doesn't have to be that long.

646
00:34:44,486 --> 00:34:46,106
Open beta is really tried before you buy.

647
00:34:47,127 --> 00:34:50,472
It is, you better make sure that game is extremely polished.

648
00:34:51,173 --> 00:34:52,816
Really what you're doing in closed beta,

649
00:34:52,936 --> 00:34:57,262
open beta is seeing how far you can scale beyond your PCU limits.

650
00:34:57,403 --> 00:35:00,087
It's really push it hard because you want to make sure

651
00:35:00,107 --> 00:35:02,390
that that thing's going to break, it's going to break then.

652
00:35:03,071 --> 00:35:05,252
and how your patching and distribution is working,

653
00:35:05,893 --> 00:35:08,034
how all your monetization is working.

654
00:35:08,054 --> 00:35:10,296
You actually turn on the storefront for the first time

655
00:35:11,356 --> 00:35:11,957
for the players.

656
00:35:11,997 --> 00:35:14,899
You do that earlier, later in closed beta,

657
00:35:14,919 --> 00:35:16,139
but really out there now.

658
00:35:16,580 --> 00:35:19,982
There's a tendency to have to refund, by the way, in tests.

659
00:35:20,002 --> 00:35:21,843
You should make that very clear to your player base.

660
00:35:22,743 --> 00:35:25,505
Try not to, but there's always that tendency of rebalancing.

661
00:35:26,406 --> 00:35:28,427
And I usually start out.

662
00:35:29,511 --> 00:35:34,375
with limited sessions and go near the end to full-blown open.

663
00:35:35,255 --> 00:35:38,018
You need to practice that full-blown 24 hours

664
00:35:38,058 --> 00:35:40,400
to see where your memory leaks are, your CPU utilization,

665
00:35:40,420 --> 00:35:42,141
and everything else at scale.

666
00:35:42,541 --> 00:35:44,303
So it's important to get to that point.

667
00:35:44,543 --> 00:35:47,605
The reason I do durations at the beginning

668
00:35:47,885 --> 00:35:50,407
is so I can get mass amount of people in at once.

669
00:35:50,768 --> 00:35:52,649
Because if you have it open, you will

670
00:35:52,709 --> 00:35:54,871
see your curve start driving down, your PCU curve.

671
00:35:55,071 --> 00:35:57,133
And so what I want to do is close it.

672
00:35:57,553 --> 00:36:00,455
open it up for a weekend and get that mass rush in.

673
00:36:03,998 --> 00:36:05,560
This is another thing I want to talk about.

674
00:36:07,201 --> 00:36:12,906
There's lots of ways of measuring KPIs in a game, but they're extremely important.

675
00:36:15,428 --> 00:36:18,230
Game design, for instance, you have a lot of telemetry.

676
00:36:18,490 --> 00:36:22,253
These are the things you're looking at with the telemetry on game design.

677
00:36:23,285 --> 00:36:27,071
They're just as important as your business KPIs, by the way.

678
00:36:27,852 --> 00:36:31,156
And they will develop KPIs of their own for design.

679
00:36:34,341 --> 00:36:36,143
What they do is they set the goal post.

680
00:36:37,099 --> 00:36:40,221
for all your phases of test.

681
00:36:40,801 --> 00:36:43,163
So what you should do before you go into closed beta

682
00:36:43,263 --> 00:36:45,824
is, when should we go into closed beta,

683
00:36:46,085 --> 00:36:49,107
we have to meet these key indicators.

684
00:36:50,267 --> 00:36:52,369
When we go from closed beta to open beta,

685
00:36:52,409 --> 00:36:55,131
we make sure that we have these key indicators.

686
00:36:57,772 --> 00:36:58,413
Sorry.

687
00:37:03,456 --> 00:37:05,678
These are the key indicators that I look at.

688
00:37:07,386 --> 00:37:10,609
Ratio to invites to logins, you can read the list here.

689
00:37:11,970 --> 00:37:17,095
The D1 is really important when you're in closed beta.

690
00:37:17,655 --> 00:37:21,619
How many people come back at D7 to play your game

691
00:37:21,639 --> 00:37:22,660
that went in from D1?

692
00:37:24,942 --> 00:37:26,823
How many people after 15 days, and I

693
00:37:26,883 --> 00:37:31,628
try to keep it up at least 15 days on closed beta

694
00:37:31,928 --> 00:37:33,930
at once to see how I'm tracking there.

695
00:37:35,270 --> 00:37:39,683
I occasionally have a test server, which I set up, and I'm open to all the time, but

696
00:37:39,724 --> 00:37:42,311
I have exclusive invites into that test server.

697
00:37:43,288 --> 00:37:46,629
so that I have a sub-sample of people playing

698
00:37:46,869 --> 00:37:49,190
so I can get my D30 going on.

699
00:37:50,030 --> 00:37:51,310
And that test server, by the way,

700
00:37:51,370 --> 00:37:52,951
is something I don't see many people do,

701
00:37:53,011 --> 00:37:56,091
but I highly recommend that goes out in live too.

702
00:37:56,391 --> 00:37:58,132
It's where you put your latest stuff on.

703
00:37:58,572 --> 00:38:00,972
Yes, the user has to patch a new client to play it,

704
00:38:01,392 --> 00:38:02,513
but it's so worth it.

705
00:38:03,233 --> 00:38:05,333
You don't have a lot of testers testing there,

706
00:38:05,653 --> 00:38:06,993
but the amount of testers you have

707
00:38:07,013 --> 00:38:08,834
and the feedback loops you get are amazing.

708
00:38:09,074 --> 00:38:09,754
It's well worth it.

709
00:38:11,510 --> 00:38:15,711
And if anybody understands what k-factor is, k-factor is the viralness.

710
00:38:15,931 --> 00:38:19,553
This is really a key indicator as I'm moving towards open beta.

711
00:38:19,833 --> 00:38:25,255
The first question I ask is how many people would recommend a friend to play this game?

712
00:38:25,735 --> 00:38:32,058
And if I get a high percentage of people saying yes, that's a good sign.

713
00:38:33,817 --> 00:38:35,458
A lot of times people say if you don't get over 90%,

714
00:38:35,938 --> 00:38:37,879
everything else is irrelevant.

715
00:38:38,800 --> 00:38:40,521
To say that I would recommend to a friend.

716
00:38:41,142 --> 00:38:45,145
In Swotor, I did this and 80%, 85% of the people

717
00:38:45,185 --> 00:38:46,546
said I'd recommend it to a friend.

718
00:38:46,926 --> 00:38:48,307
That was a good indicator for me.

719
00:38:49,548 --> 00:38:51,809
K-Factor is another one is how many keys

720
00:38:51,889 --> 00:38:52,770
I give out to friends,

721
00:38:52,790 --> 00:38:54,571
because I always put friends keys in there.

722
00:38:54,952 --> 00:38:56,433
How many friends are playing that actually

723
00:38:56,753 --> 00:38:57,894
got the keys and logging in.

724
00:38:58,114 --> 00:39:00,015
That's a good sign to track.

725
00:39:03,263 --> 00:39:05,625
Predictive analytics, I can't talk about this enough.

726
00:39:05,765 --> 00:39:08,967
I had it in Swotor for the first time, and this is in 2011.

727
00:39:09,747 --> 00:39:11,448
I had forecasting models built.

728
00:39:12,909 --> 00:39:14,730
I had trend analysis being done.

729
00:39:15,311 --> 00:39:19,193
I actually had some people from USC come into my data

730
00:39:19,453 --> 00:39:24,596
that I was collecting in live and do machine learning for me.

731
00:39:25,317 --> 00:39:26,137
And they would predict.

732
00:39:26,993 --> 00:39:29,575
For example, in Swotor, we had farming problems.

733
00:39:30,055 --> 00:39:32,496
They wrote a machine algorithm that

734
00:39:32,697 --> 00:39:35,558
tracked how farmers were doing things and learned from that

735
00:39:35,979 --> 00:39:38,280
and would temporarily ban all the farmers.

736
00:39:38,901 --> 00:39:40,462
When we put that in, 85% of the farmers went away.

737
00:39:45,608 --> 00:39:48,049
85%. Today, this should be common.

738
00:39:48,549 --> 00:39:51,030
Anything you should do, try to use machine learning to do it.

739
00:39:51,470 --> 00:39:53,770
Another one they did was predictive churn.

740
00:39:54,010 --> 00:39:55,531
They could predict through player patterns

741
00:39:55,591 --> 00:39:56,511
when people would churn out.

742
00:39:56,971 --> 00:39:58,071
That was awesome.

743
00:39:58,991 --> 00:40:02,312
It would initiate a CRM, Customer Relations Management

744
00:40:02,352 --> 00:40:05,373
System, would put out an email to go tag that person,

745
00:40:05,413 --> 00:40:08,354
say, hey, come back, or what's wrong with a survey.

746
00:40:09,514 --> 00:40:10,114
All automated.

747
00:40:11,600 --> 00:40:14,901
Another one is if you want to do things like bots.

748
00:40:15,001 --> 00:40:15,582
Bots are big.

749
00:40:16,002 --> 00:40:21,144
Bots can ruin experience on a session-based first-person

750
00:40:21,164 --> 00:40:21,925
shooter type of game.

751
00:40:22,365 --> 00:40:25,166
If you could do machine learning to automatically temporarily

752
00:40:25,266 --> 00:40:27,387
ban those people and have CS be called,

753
00:40:28,268 --> 00:40:29,608
that is well worth doing.

754
00:40:30,088 --> 00:40:33,590
Anything that affects the player in any bad way for bad behavior,

755
00:40:34,479 --> 00:40:36,319
You should automate today because you can.

756
00:40:37,040 --> 00:40:40,040
I didn't have that ability on UO and SWIG.

757
00:40:40,500 --> 00:40:43,021
I started it in SWOTOR and I see where it's going now

758
00:40:43,701 --> 00:40:45,061
and all the talks being done about it.

759
00:40:45,481 --> 00:40:46,502
Definitely look into that.

760
00:40:46,682 --> 00:40:47,342
It's well worth it.

761
00:40:49,842 --> 00:40:52,463
One of the things I talk about and then I'm going to blast

762
00:40:52,503 --> 00:40:55,704
through this is what you need to have for live.

763
00:40:56,264 --> 00:40:57,184
Look at the list here.

764
00:40:58,664 --> 00:41:01,205
You need to have the ability to record bugs in the game.

765
00:41:01,925 --> 00:41:03,165
A lot of people forget about that.

766
00:41:04,020 --> 00:41:06,881
No, you need to have the ability to automatically build a system

767
00:41:06,901 --> 00:41:08,882
where you have a slash bug or something like that.

768
00:41:09,362 --> 00:41:11,743
They automatically get routed to a specific place

769
00:41:11,783 --> 00:41:13,124
that QA can look at and validate.

770
00:41:14,524 --> 00:41:16,525
You better be able to have surveys in the game

771
00:41:16,545 --> 00:41:19,887
that you can pop up after a mission, after an encounter

772
00:41:19,927 --> 00:41:20,927
to see if they liked it or not.

773
00:41:21,948 --> 00:41:24,829
Do that. All the community management tools,

774
00:41:25,249 --> 00:41:26,930
you define your KPIs.

775
00:41:26,950 --> 00:41:30,912
This all should be done before you open up for closed beta.

776
00:41:32,395 --> 00:41:35,217
It's the same thing for your survey, your website,

777
00:41:35,277 --> 00:41:37,098
your virtual store needs to be operational.

778
00:41:37,778 --> 00:41:39,879
An escalation plan for community and for live.

779
00:41:40,199 --> 00:41:41,060
What do I mean by that?

780
00:41:41,120 --> 00:41:44,162
If something happens, you need to have a plan

781
00:41:44,182 --> 00:41:44,742
to deal with it.

782
00:41:48,264 --> 00:41:48,804
Open beta.

783
00:41:49,845 --> 00:41:52,306
MTX Storefront should be live and operational.

784
00:41:54,301 --> 00:41:56,322
Everything should be working like it does,

785
00:41:56,522 --> 00:41:59,624
and this is in closed beta, that you're launching everything

786
00:41:59,664 --> 00:42:01,305
in the cloud, all your platform connections,

787
00:42:01,445 --> 00:42:04,046
everything should be fully functional by open beta.

788
00:42:04,607 --> 00:42:06,728
And that is in closed beta, by the way, as well.

789
00:42:08,349 --> 00:42:10,750
CRM tools, CS tools should be all online.

790
00:42:12,371 --> 00:42:16,173
Scenarios for community management is real important.

791
00:42:17,594 --> 00:42:20,515
I did scenarios with legal to say, what if this happens?

792
00:42:20,835 --> 00:42:21,616
What should we say?

793
00:42:22,797 --> 00:42:24,277
Let me tell you how valuable that is.

794
00:42:24,818 --> 00:42:27,219
You, as a community management team, could be caught.

795
00:42:27,239 --> 00:42:29,140
Because when something bad happens on a service,

796
00:42:29,280 --> 00:42:30,761
it goes to all the media.

797
00:42:31,601 --> 00:42:34,683
If you have a reactionary plan in place

798
00:42:34,743 --> 00:42:37,624
that you can immediately comment on without legal review

799
00:42:37,945 --> 00:42:41,326
or executive review, that is a very good thing to have.

800
00:42:41,566 --> 00:42:44,628
Because if you don't, and they take a long time for someone

801
00:42:44,648 --> 00:42:47,730
to respond to that, it just inflames the community.

802
00:42:52,078 --> 00:42:53,882
Again, community management.

803
00:42:54,343 --> 00:42:56,568
I'll just say one thing about community management.

804
00:42:56,588 --> 00:42:58,432
You're in an emotional relationship with your community.

805
00:42:59,655 --> 00:43:01,857
It is important to not treat them like PR piece.

806
00:43:02,577 --> 00:43:06,761
A PR person talking to them, talk to them honestly, openly.

807
00:43:07,321 --> 00:43:10,824
Talk to them not like you're doing a PR beat type of thing.

808
00:43:10,964 --> 00:43:12,406
That's where a lot of single player products,

809
00:43:12,926 --> 00:43:15,008
companies get involved in the community management,

810
00:43:15,308 --> 00:43:16,529
is they do it like PR beats.

811
00:43:17,190 --> 00:43:19,411
No, you have to be constantly involved with the community.

812
00:43:19,872 --> 00:43:21,473
Think about Twitch and streaming,

813
00:43:21,593 --> 00:43:23,555
all the things we have available on social media,

814
00:43:24,095 --> 00:43:26,197
all should be utilized for community management.

815
00:43:29,139 --> 00:43:30,740
I'll leave with this one slide.

816
00:43:32,382 --> 00:43:38,768
I said this probably 100 times in my development career to a lot of different execs.

817
00:43:39,689 --> 00:43:41,290
You only get one opening night.

818
00:43:43,592 --> 00:43:48,957
If you have a good launch, here's some hypothetical curves, you're doing really well.

819
00:43:49,558 --> 00:43:50,819
If you have a bad launch,

820
00:43:51,809 --> 00:43:57,031
That potential, that gap where that curve is and where you see where it peaks out, that

821
00:43:57,131 --> 00:43:59,211
gap, you missed the moonshot.

822
00:43:59,932 --> 00:44:01,312
You're never going to get that back.

823
00:44:01,952 --> 00:44:02,753
Can you recover?

824
00:44:03,533 --> 00:44:03,813
Yes.

825
00:44:03,993 --> 00:44:09,915
There are lots of instances of games out there who have done very well in recovering from

826
00:44:09,935 --> 00:44:13,216
a launch that the games didn't meet expectations.

827
00:44:14,136 --> 00:44:20,218
However, you'll never meet that bar, the moonshot type of revenue potential that you could have.

828
00:44:21,074 --> 00:44:26,745
That is something everyone in this room really needs to think hard about because that will

829
00:44:26,805 --> 00:44:29,650
either damage your franchise that you're working on or your new IP.

830
00:44:31,417 --> 00:44:35,520
And it also could, if it's bad enough, if your core loops weren't done well,

831
00:44:36,121 --> 00:44:38,062
and you had to do major surgery on the game,

832
00:44:38,643 --> 00:44:41,925
and you had a sentiment running bad for 90 days out,

833
00:44:42,306 --> 00:44:45,508
you could start damaging your cohorts, your zero cohorts,

834
00:44:45,528 --> 00:44:46,910
your first people in the game.

835
00:44:47,150 --> 00:44:48,391
They're your stickiest people.

836
00:44:49,011 --> 00:44:52,314
You could damage, you could go right into that curve of those people,

837
00:44:52,494 --> 00:44:53,956
and you'll never get those people back.

838
00:44:55,437 --> 00:44:56,518
And you risk shutting down.

839
00:44:59,575 --> 00:45:01,175
One of the things is Swig.

840
00:45:01,915 --> 00:45:03,236
Swig had a horrible launch.

841
00:45:04,956 --> 00:45:05,676
It melted down.

842
00:45:06,257 --> 00:45:10,518
It had lots of issues with the world not filling up

843
00:45:10,558 --> 00:45:11,918
with content because we only had,

844
00:45:12,518 --> 00:45:14,739
where our tools came on eight months before launch.

845
00:45:15,859 --> 00:45:18,040
So we did something very risky

846
00:45:18,080 --> 00:45:19,300
on the development of a platform,

847
00:45:19,320 --> 00:45:21,201
but that platform was amazingly powerful.

848
00:45:21,421 --> 00:45:23,321
That's a whole nother discussion I could talk about later.

849
00:45:23,701 --> 00:45:25,342
But there was risk there.

850
00:45:26,042 --> 00:45:28,883
And we didn't do enough stress testing.

851
00:45:30,123 --> 00:45:30,723
We lost it.

852
00:45:32,844 --> 00:45:38,166
We had 5 million people on our site, Unix, before launch.

853
00:45:40,247 --> 00:45:44,748
We lost easily half our first round of cohorts, easily,

854
00:45:44,868 --> 00:45:45,288
that week.

855
00:45:46,589 --> 00:45:47,469
We never got it back.

856
00:45:47,849 --> 00:45:48,870
We stabilized around 350.

857
00:45:48,950 --> 00:45:50,790
That could have been a million player game.

858
00:45:51,211 --> 00:45:51,851
It was done right.

859
00:45:53,032 --> 00:45:55,113
and had another six, 12 months.

860
00:45:55,713 --> 00:45:57,334
We really did need another 12 months

861
00:45:57,354 --> 00:45:58,474
of development on that team.

862
00:45:58,854 --> 00:46:01,315
We did everything from beginning to end on that project

863
00:46:01,536 --> 00:46:03,436
in two years and eight months, which

864
00:46:03,476 --> 00:46:05,878
was amazing on new tech and everything else that we did.

865
00:46:06,418 --> 00:46:08,199
But we needed another 12 months to simmer.

866
00:46:08,439 --> 00:46:13,141
So that decision for a long-term bet wasn't the best.

867
00:46:14,572 --> 00:46:17,052
But there are a lot of contractual things that, again,

868
00:46:17,132 --> 00:46:18,152
let's don't look in a vacuum.

869
00:46:18,172 --> 00:46:20,173
There's a lot of contractual things in business cases

870
00:46:20,193 --> 00:46:22,613
that don't allow you to do that, right?

871
00:46:23,673 --> 00:46:24,934
That's the reality of some of that,

872
00:46:25,294 --> 00:46:26,494
than some of that I realize.

873
00:46:27,194 --> 00:46:29,095
But think about what does that mean?

874
00:46:29,155 --> 00:46:31,015
So if you know going into it,

875
00:46:31,575 --> 00:46:32,615
there are gonna be problems,

876
00:46:33,095 --> 00:46:34,616
realize what it does to your revenue.

877
00:46:35,156 --> 00:46:35,556
Face it.

878
00:46:37,196 --> 00:46:39,037
Fallout 76 is a great example.

879
00:46:40,602 --> 00:46:44,785
You can't test a game of that scale and magnitude

880
00:46:45,205 --> 00:46:46,146
in less than two months.

881
00:46:47,126 --> 00:46:47,827
It can't be done.

882
00:46:48,747 --> 00:46:52,109
You cannot rely on your external testing group

883
00:46:52,730 --> 00:46:55,191
to get a game like that and all the bugs.

884
00:46:57,112 --> 00:47:01,035
What that did is dinged that franchise.

885
00:47:03,136 --> 00:47:05,737
I don't think it deviously hurt it, but it dinged it.

886
00:47:07,024 --> 00:47:10,846
And they started, as you saw that initial curve of the bad launch,

887
00:47:11,146 --> 00:47:13,208
they went down very fast after launch.

888
00:47:14,568 --> 00:47:16,930
They'll never recover where they could have been.

889
00:47:16,970 --> 00:47:18,070
They'll never get the moon shot.

890
00:47:20,472 --> 00:47:24,674
And one of the key decisions was, is there's too many bugs.

891
00:47:25,715 --> 00:47:28,576
They were trying to fix too many bugs at once to try to make up the time,

892
00:47:28,616 --> 00:47:30,958
which was bad because then if you fix too many bugs,

893
00:47:30,978 --> 00:47:34,660
you can't check all those bugs thoroughly and you create new bugs.

894
00:47:36,877 --> 00:47:39,238
It's important to realize where you are and how you proceed.

895
00:47:39,839 --> 00:47:42,580
You can turn things around, as I said.

896
00:47:44,861 --> 00:47:47,182
The expectations on that game was

897
00:47:47,242 --> 00:47:48,283
it was going to be a Fallout game.

898
00:47:48,383 --> 00:47:50,164
Everyone knows NPCs are in Fallout game.

899
00:47:51,204 --> 00:47:53,846
That is how people play Fallout.

900
00:47:53,906 --> 00:47:54,426
They love it.

901
00:47:54,746 --> 00:47:57,067
And in console world, this is a fact

902
00:47:58,108 --> 00:48:00,069
I've known from watching different games,

903
00:48:00,309 --> 00:48:03,470
is almost over 50% of the players in console

904
00:48:03,511 --> 00:48:04,271
play single player.

905
00:48:05,660 --> 00:48:06,661
which was surprising to me.

906
00:48:07,882 --> 00:48:10,984
And because of that, if you knew that kind of quantity and that kind of people listening

907
00:48:11,004 --> 00:48:16,789
to it, you need to have single-player content that represents that particular IP.

908
00:48:18,050 --> 00:48:21,993
And so those are the things, the lessons learned on that I think is really important

909
00:48:22,013 --> 00:48:23,975
because it made the world feel empty.

910
00:48:26,057 --> 00:48:27,138
So everything you do.

911
00:48:32,098 --> 00:48:34,159
affects you in development, affects you in life,

912
00:48:34,679 --> 00:48:36,460
one way or another, decisions you make.

913
00:48:38,161 --> 00:48:43,303
Now, I open for questions, so it would be a good time to pause.

914
00:48:43,403 --> 00:48:44,623
I know there's a lot of stuff here,

915
00:48:44,903 --> 00:48:48,205
and I wish I had more time because I had over probably

916
00:48:48,745 --> 00:48:50,125
150 slides I could talk about, and I just

917
00:48:50,166 --> 00:48:51,286
had to cull it down.

918
00:48:51,306 --> 00:48:52,767
There's lots of things I could talk about.

919
00:48:53,147 --> 00:48:54,847
Anybody have any questions they want to ask?

920
00:48:55,428 --> 00:48:56,608
I can't see you really well.

921
00:48:56,628 --> 00:48:59,189
So thank you.

922
00:48:59,209 --> 00:49:00,610
Thanks a lot.

923
00:49:00,630 --> 00:49:00,890
Thank you.

924
00:49:04,016 --> 00:49:06,279
I will say, please fill out the surveys on there.

925
00:49:06,339 --> 00:49:08,942
It's really important that I get feedback, even for me,

926
00:49:09,202 --> 00:49:10,043
to help me improve.

927
00:49:11,625 --> 00:49:15,289
And provide me with that kind of feedback would be very good.

928
00:49:15,650 --> 00:49:18,733
Anybody want to step up to the microphone and ask questions?

929
00:49:18,853 --> 00:49:22,017
This is a great Q&A time, but highly recommend you ask them.

930
00:49:22,618 --> 00:49:22,838
Yes.

931
00:49:23,839 --> 00:49:24,039
Hi.

932
00:49:24,617 --> 00:49:31,520
I had a question on your analysis on The Old Republic, Star Wars The Old Republic, about

933
00:49:31,580 --> 00:49:36,522
the decision you made between the Heroblade engine and the Big World engine.

934
00:49:36,722 --> 00:49:36,922
Yeah.

935
00:49:37,082 --> 00:49:43,645
I mean, obviously you did pre-studies on what the advantages and disadvantages of those

936
00:49:43,945 --> 00:49:50,688
particular engines were, but how would you do those pre-studies differently now, seeing

937
00:49:50,968 --> 00:49:53,509
the consequences that resulted from that?

938
00:49:54,150 --> 00:49:57,131
I would have gone with BigWorld because it's more like what I'm used to of UO.

939
00:49:57,731 --> 00:50:01,113
It was a seamless server engine and had a scripting language above it.

940
00:50:01,513 --> 00:50:05,675
There was an issue with BigWorld with source control on the seamless server boundaries,

941
00:50:06,015 --> 00:50:09,597
but I think we could have pressured to work through that.

942
00:50:10,117 --> 00:50:12,678
That was one of the decisions, that's one of the decision points of that.

943
00:50:13,559 --> 00:50:17,421
But I really think that choosing the Heroblade engine just was not going to scale.

944
00:50:18,181 --> 00:50:21,405
and was not going to, it was a great prototype tool, beware of that.

945
00:50:21,865 --> 00:50:23,887
Don't pick an engine because you can prototype quickly.

946
00:50:24,448 --> 00:50:25,629
Pick an engine that will scale.

947
00:50:26,650 --> 00:50:30,615
Pick an engine that if you're on the consoles, if you're going to be AAA, that can do AAA.

948
00:50:32,611 --> 00:50:37,616
development, including Look, and be able to run it the framework that you're going to

949
00:50:37,636 --> 00:50:37,976
need to do.

950
00:50:38,016 --> 00:50:41,640
If you're a shooter, if you need to be 60 frames or no less than 30, you need to pick

951
00:50:41,680 --> 00:50:42,401
something that can do that.

952
00:50:43,202 --> 00:50:49,389
If you're doing something that's both glass as an input, controller, and keyboard, then

953
00:50:49,429 --> 00:50:52,272
you need to pick something that can do all that, too, and scale with you.

954
00:50:56,291 --> 00:50:59,815
Hi, I'm over here. My name is Blake Mitzi. I'm from League of Geeks.

955
00:50:59,895 --> 00:51:02,098
We run our games and service across PC and consoles.

956
00:51:02,378 --> 00:51:05,141
My question for you is how you evaluate your content

957
00:51:05,161 --> 00:51:06,603
through your monthlies and your quarterlies?

958
00:51:07,343 --> 00:51:09,706
Because you're generating that content on the fly very quickly.

959
00:51:10,046 --> 00:51:13,130
How do you lock it down, test it internally for its effectiveness

960
00:51:13,170 --> 00:51:14,411
before you launch it to the public?

961
00:51:15,263 --> 00:51:20,286
So what we do is we think what we like to the public.

962
00:51:20,967 --> 00:51:22,308
We see what players are doing.

963
00:51:22,348 --> 00:51:23,889
So there's a lot of telemetry in design

964
00:51:23,929 --> 00:51:24,949
to see what players are doing.

965
00:51:25,570 --> 00:51:27,171
So if you look at that telemetry thing,

966
00:51:27,211 --> 00:51:28,692
you see the player's path in the world.

967
00:51:28,732 --> 00:51:32,174
You see what players do and what abilities they use the most,

968
00:51:32,395 --> 00:51:34,996
what features they like the most, what customization

969
00:51:35,016 --> 00:51:35,817
they want the most.

970
00:51:36,357 --> 00:51:38,359
And so what you want to do is you want to tune.

971
00:51:39,660 --> 00:51:44,304
your content toward what you're seeing in your telemetry and design, what players are

972
00:51:44,344 --> 00:51:44,924
migrating to.

973
00:51:44,944 --> 00:51:51,751
One of the things I use telemetry for too is it helps validate some of your design assumptions,

974
00:51:52,171 --> 00:51:57,216
but one of the things I think is very important that I think I want to tell people is how

975
00:51:57,276 --> 00:51:58,017
something feels.

976
00:51:58,857 --> 00:52:04,120
may not necessarily equate in telemetry or KPIs to what you want to do.

977
00:52:04,600 --> 00:52:04,820
Right.

978
00:52:05,581 --> 00:52:13,465
It's sometimes the way it feels may over we may overweight your decision for that versus true data points.

979
00:52:13,845 --> 00:52:14,045
Right.

980
00:52:14,366 --> 00:52:18,508
I use data as validation points but to me it's how it feels is more important.

981
00:52:19,684 --> 00:52:20,985
In a lot of ways, in game design.

982
00:52:21,225 --> 00:52:22,506
If I could ask a quick follow up.

983
00:52:22,747 --> 00:52:22,927
Yes.

984
00:52:22,947 --> 00:52:25,088
Do you beta test your quarterlies

985
00:52:25,449 --> 00:52:26,649
and your rolling content?

986
00:52:27,150 --> 00:52:29,532
All right, so the way we do that is

987
00:52:29,672 --> 00:52:33,595
we have QA embeds that write test plans for those.

988
00:52:34,115 --> 00:52:36,857
We run bot testing on that to make

989
00:52:36,877 --> 00:52:38,498
sure it works and everything.

990
00:52:38,538 --> 00:52:43,442
And then we go out and we put it on the test server

991
00:52:43,462 --> 00:52:46,004
I was talking about and see how players like it.

992
00:52:47,072 --> 00:52:47,272
Right?

993
00:52:48,333 --> 00:52:50,994
We do some focus testing on that.

994
00:52:51,034 --> 00:52:54,015
But like I said, tissue testing is what I call that more,

995
00:52:54,095 --> 00:52:55,436
friends and families and things like that.

996
00:52:55,856 --> 00:52:58,937
But a lot of times, putting it on a test server out there

997
00:52:59,037 --> 00:53:00,378
and letting a player see how it does

998
00:53:01,318 --> 00:53:03,639
is the best way, in my opinion, to get the feedback loops you

999
00:53:03,679 --> 00:53:03,859
need.

1000
00:53:04,680 --> 00:53:06,140
And also talking to community, too,

1001
00:53:06,560 --> 00:53:07,961
asking them about certain things.

1002
00:53:08,021 --> 00:53:10,402
And getting a community involved in some of the design stuff

1003
00:53:10,482 --> 00:53:11,262
isn't a bad idea.

1004
00:53:12,743 --> 00:53:13,023
Excellent.

1005
00:53:13,063 --> 00:53:13,483
Thank you very much.

1006
00:53:13,503 --> 00:53:13,623
Yeah.

1007
00:53:16,588 --> 00:53:18,128
Hi Richard, thank you for today.

1008
00:53:18,168 --> 00:53:20,669
Can I ask a question around your technical review board?

1009
00:53:21,230 --> 00:53:21,450
Yes.

1010
00:53:21,650 --> 00:53:25,712
I'm just keen to understand, how wide was that board?

1011
00:53:25,812 --> 00:53:26,392
Who was on it?

1012
00:53:27,872 --> 00:53:29,553
What were you looking from that board?

1013
00:53:29,813 --> 00:53:32,534
Yes, so the technical review board had, one person

1014
00:53:32,574 --> 00:53:34,795
was the TD for game, game systems.

1015
00:53:35,255 --> 00:53:36,736
Another one was TD for platform.

1016
00:53:36,776 --> 00:53:39,917
Another one was TD for the client.

1017
00:53:40,117 --> 00:53:41,418
Another one was TD for the server.

1018
00:53:41,898 --> 00:53:43,799
Another was TD for the database side of things.

1019
00:53:44,719 --> 00:53:50,185
Another one was TD for the analytics side of things.

1020
00:53:50,245 --> 00:53:50,445
Right?

1021
00:53:51,666 --> 00:53:53,548
All the things we had to track, how do we track it,

1022
00:53:53,928 --> 00:53:55,770
making sure everything was tagged appropriately,

1023
00:53:56,311 --> 00:53:58,573
getting into the database, the details are done properly.

1024
00:53:59,854 --> 00:54:02,737
Everyone had a division of area responsibility.

1025
00:54:03,758 --> 00:54:04,959
And that worked out really well.

1026
00:54:04,999 --> 00:54:06,280
And basically, they met every week,

1027
00:54:07,101 --> 00:54:08,402
and they started triaging together.

1028
00:54:09,492 --> 00:54:11,894
That helped with a large team a lot, actually.

1029
00:54:12,534 --> 00:54:17,018
Instead of making one person owner, no, we had seven.

1030
00:54:17,038 --> 00:54:17,678
It was awesome.

1031
00:54:18,799 --> 00:54:21,061
And dividing it up like that was great.

1032
00:54:21,081 --> 00:54:23,522
Because everyone has different problem sets

1033
00:54:23,562 --> 00:54:24,904
that they're dealing with in that team.

1034
00:54:25,544 --> 00:54:26,785
And talking amongst each other,

1035
00:54:27,205 --> 00:54:28,947
they work as a unit to help solve it.

1036
00:54:30,988 --> 00:54:31,348
That's great.

1037
00:54:32,109 --> 00:54:32,990
Thank you very much, appreciate it.

1038
00:54:35,563 --> 00:54:39,686
Hi, I'm a community developer on For Honor at Ubisoft Montreal,

1039
00:54:39,706 --> 00:54:41,208
so I've lived the live life.

1040
00:54:41,608 --> 00:54:42,669
So this is super interesting.

1041
00:54:42,709 --> 00:54:43,270
Thank you very much.

1042
00:54:44,250 --> 00:54:46,672
My question is, do you have any insights

1043
00:54:46,733 --> 00:54:48,934
into doing good patch notes?

1044
00:54:49,215 --> 00:54:50,956
Because that always seems to be a nightmare.

1045
00:54:51,296 --> 00:54:53,358
Yes, so one of the key thing requirements,

1046
00:54:53,418 --> 00:54:54,539
and thank you for saying that.

1047
00:54:54,559 --> 00:54:56,281
That's why I love Q&A more than anything else,

1048
00:54:56,481 --> 00:54:58,142
because I kind of forget about certain things.

1049
00:55:00,169 --> 00:55:04,635
Anybody that's doing coding, you better have your comments right and formatted in a way

1050
00:55:05,156 --> 00:55:11,844
so that I can pull out changes that I need for what's changed in code as well as design

1051
00:55:11,884 --> 00:55:12,245
as well.

1052
00:55:12,565 --> 00:55:15,549
So Confluence is a great place to start doing that.

1053
00:55:16,694 --> 00:55:24,203
We use Confluence, we have Jira, we have Shotgun, we use GitLab as our, if anybody doesn't know

1054
00:55:24,303 --> 00:55:30,390
GitLab, it's a great version control tool, but boy does it have a lot of power behind

1055
00:55:30,430 --> 00:55:33,634
it, and we're trying to get rid of P4 because I hate it.

1056
00:55:35,335 --> 00:55:35,716
ProForce.

1057
00:55:37,778 --> 00:55:38,719
Because it's antiquated.

1058
00:55:38,979 --> 00:55:41,341
I hate to say that, but it is antiquated.

1059
00:55:42,222 --> 00:55:48,587
And the new tools out today, it is important to make sure that people tag their changes,

1060
00:55:48,687 --> 00:55:49,968
is basically what I'm trying to tell you.

1061
00:55:50,008 --> 00:55:51,209
So you can easily pull it out.

1062
00:55:53,010 --> 00:55:56,073
And it is a hard, that's a hard thing, by the way.

1063
00:55:56,193 --> 00:55:59,736
Any community manager understands building patch notes is hard, because you're wrangling

1064
00:55:59,776 --> 00:56:00,056
cats.

1065
00:56:01,477 --> 00:56:02,698
And sometimes you miss things.

1066
00:56:02,718 --> 00:56:03,018
Yes?

1067
00:56:03,058 --> 00:56:03,199
Yes.

1068
00:56:03,219 --> 00:56:03,659
I agree.

1069
00:56:03,759 --> 00:56:03,979
I agree.

1070
00:56:04,019 --> 00:56:04,400
I agree.

1071
00:56:04,420 --> 00:56:04,580
I agree.

1072
00:56:04,869 --> 00:56:10,895
Yes, you spoke about outsourcing to USC as to machine learning, some predictive data modeling.

1073
00:56:10,915 --> 00:56:11,136
Yes.

1074
00:56:11,616 --> 00:56:15,641
And you talked about how you recommend that going forward for Games as a Service,

1075
00:56:15,661 --> 00:56:19,845
and I'm wondering if that's something that you see coming on to the team where it's valuable enough.

1076
00:56:20,392 --> 00:56:22,913
that you would have data science on the team

1077
00:56:22,953 --> 00:56:24,933
and you're iterating those models going forward.

1078
00:56:25,133 --> 00:56:26,494
Absolutely, absolutely.

1079
00:56:26,694 --> 00:56:29,875
And there's great Python.

1080
00:56:29,975 --> 00:56:32,196
There's actually an R plugin for Python,

1081
00:56:32,296 --> 00:56:34,077
or a light plugin for Python, actually,

1082
00:56:34,357 --> 00:56:36,298
that does all the statistical analysis and everything

1083
00:56:36,598 --> 00:56:39,499
in Python, because I could find Python programs a lot easier

1084
00:56:39,519 --> 00:56:41,620
than I can find R programmers.

1085
00:56:42,540 --> 00:56:45,582
But yeah, anything machine learning AI wise, yes.

1086
00:56:46,102 --> 00:56:51,024
To do, and I use, to do the predictive behavior

1087
00:56:51,184 --> 00:56:54,405
and be able to ban for bad behavior

1088
00:56:54,865 --> 00:56:56,286
as well as do CRM initiatives,

1089
00:56:56,486 --> 00:56:59,147
absolutely think that a data scientist on a team

1090
00:56:59,287 --> 00:57:01,768
is part of the crew now, and should be by the way.

1091
00:57:02,268 --> 00:57:02,529
Thank you.

1092
00:57:02,929 --> 00:57:04,649
But I don't think people know how to look

1093
00:57:04,669 --> 00:57:05,550
for that type of person.

1094
00:57:06,170 --> 00:57:06,710
I really don't.

1095
00:57:06,790 --> 00:57:09,031
Even know how to write to JD for that type of person,

1096
00:57:09,171 --> 00:57:09,451
actually.

1097
00:57:11,412 --> 00:57:14,174
and understanding how to hire someone like that

1098
00:57:14,214 --> 00:57:15,155
because they'll look at a JD,

1099
00:57:15,175 --> 00:57:16,496
well, you have no gaming experience.

1100
00:57:17,777 --> 00:57:19,798
No, that's not what you're trying to see.

1101
00:57:19,818 --> 00:57:22,280
You're trying to see what their root

1102
00:57:22,600 --> 00:57:23,861
of what their experience is

1103
00:57:23,921 --> 00:57:26,722
that you can apply to gaming, right?

1104
00:57:27,163 --> 00:57:28,644
I had to write a JD for that.

1105
00:57:28,964 --> 00:57:31,085
It was really hard to me to get that approved.

1106
00:57:31,802 --> 00:57:34,866
I agree, it's at the tip of the spear right now, but I'm excited to hear that.

1107
00:57:34,886 --> 00:57:35,126
Thank you.

1108
00:57:35,507 --> 00:57:40,112
They don't see the value yet, but it's just like, for example, I'll tell you with Swotor,

1109
00:57:40,833 --> 00:57:46,240
when I left, they owed some money on that and they decided it wasn't worth doing all

1110
00:57:46,260 --> 00:57:46,660
the way through.

1111
00:57:46,701 --> 00:57:50,045
We had it all prototyped and working on CRM stuff, and they said it wasn't worth it.

1112
00:57:50,902 --> 00:57:52,864
And I said, how could you say that?

1113
00:57:52,944 --> 00:57:55,106
That amount of money they're asking is trinkets to what it

1114
00:57:55,146 --> 00:57:56,287
will do, right?

1115
00:57:56,307 --> 00:58:00,031
But again, that was 2011 that that was done.

1116
00:58:00,231 --> 00:58:02,473
I think today I would probably not get that anymore.

1117
00:58:06,102 --> 00:58:07,524
Hi, Linda Fane from Bungie.

1118
00:58:08,325 --> 00:58:11,809
Just to follow on, I wanted to know if in moving to games as

1119
00:58:11,870 --> 00:58:15,014
a service, if there are new roles that need to have

1120
00:58:15,094 --> 00:58:20,301
prominence and how that power shift might happen?

1121
00:58:20,341 --> 00:58:23,345
And also, is there a different ratio of types of roles?

1122
00:58:23,757 --> 00:58:27,278
Yes, so QA, to think QA is on the outside,

1123
00:58:27,478 --> 00:58:30,299
on a Games as a Service group, that's insane.

1124
00:58:30,899 --> 00:58:33,600
QA needs to be integrated, part of the leadership

1125
00:58:33,880 --> 00:58:36,801
of that team, not a lot of, I've seen this happen,

1126
00:58:36,821 --> 00:58:38,622
I'm not kidding you, where they're not in leadership

1127
00:58:38,662 --> 00:58:40,542
when I say, what are you doing?

1128
00:58:41,062 --> 00:58:43,463
QA is the person, the group that says,

1129
00:58:43,623 --> 00:58:44,803
are you ready to go or not?

1130
00:58:45,204 --> 00:58:46,584
They're the ones that push the publish

1131
00:58:46,624 --> 00:58:49,385
and the release management structure to the service.

1132
00:58:50,305 --> 00:58:52,386
They're the ones that should say, no, it's not ready.

1133
00:58:53,288 --> 00:58:56,769
But that's a lot to get to.

1134
00:58:57,690 --> 00:58:59,790
That's a lot to absorb to a company that's

1135
00:59:00,550 --> 00:59:03,451
used to making not games as service products.

1136
00:59:03,891 --> 00:59:04,951
So QA is one of them.

1137
00:59:05,371 --> 00:59:07,612
The data scientist is another one.

1138
00:59:07,812 --> 00:59:09,132
Data analyst, right?

1139
00:59:09,473 --> 00:59:11,993
The person that does the ETLs and everything else

1140
00:59:12,013 --> 00:59:14,174
that you hooked in all your telemetry

1141
00:59:14,754 --> 00:59:17,895
and gathers that data and interprets that data for you

1142
00:59:18,195 --> 00:59:19,795
and develops your dashboards for you.

1143
00:59:20,655 --> 00:59:26,740
that person is extremely valuable and should be on the leadership of a games of service team.

1144
00:59:27,440 --> 00:59:33,985
Having in beds on your QA team to doing different things from platform to development are all

1145
00:59:34,025 --> 00:59:40,450
important people. And I would say the one thing that's missing too on your leadership, some people

1146
00:59:40,470 --> 00:59:45,193
need to put community management on their leadership board, right? And the community,

1147
00:59:45,493 --> 00:59:47,455
the lead community guy should be on the leadership board.

1148
00:59:48,223 --> 00:59:52,585
and have a voice and saying our sentiment is this it's negative.

1149
00:59:53,165 --> 00:59:54,125
Now it's turned neutral.

1150
00:59:54,265 --> 00:59:54,905
Now it's positive.

1151
00:59:54,926 --> 00:59:57,807
These are all indicators you need to know and measure.

1152
00:59:58,367 --> 01:00:04,049
So yeah I would say first and foremost is QA and how you treat QA.

1153
01:00:04,169 --> 01:00:06,110
The second one is data analyst.

1154
01:00:06,730 --> 01:00:11,772
The person that actually puts the details in and tells you what you can or can't track are very important.

1155
01:00:12,115 --> 01:00:16,777
And which roles are reduced in importance?

1156
01:00:16,817 --> 01:00:19,619
I mean, that's really kind of elephant in the room a bit

1157
01:00:19,659 --> 01:00:20,619
when you transition.

1158
01:00:22,700 --> 01:00:29,243
So I would say the live producer has a stronger voice

1159
01:00:29,304 --> 01:00:30,224
than the lead producer.

1160
01:00:33,921 --> 01:00:37,224
in development at that point when you're live,

1161
01:00:37,264 --> 01:00:38,605
because they're right up to the,

1162
01:00:38,645 --> 01:00:40,307
they have everything and responsibility.

1163
01:00:41,148 --> 01:00:43,931
I try not to separate live, when I say live,

1164
01:00:43,991 --> 01:00:46,153
development team is part of the live process,

1165
01:00:46,193 --> 01:00:47,694
they're not separated out.

1166
01:00:48,775 --> 01:00:51,158
Everyone that's working on that game is live.

1167
01:00:51,919 --> 01:00:56,061
A lot of times people try to make this little wall between it and say, no, no, no, it's

1168
01:00:56,221 --> 01:00:56,602
all live.

1169
01:00:56,622 --> 01:00:57,222
We're all live.

1170
01:00:57,482 --> 01:01:00,324
And I rotate people in and out of those other teams, I was telling you.

1171
01:01:00,584 --> 01:01:01,685
It's real important to do that.

1172
01:01:02,125 --> 01:01:06,808
As far as hierarchy goes, I think it's important to establish the right hierarchy in the beginning

1173
01:01:07,109 --> 01:01:07,909
as you move forward.

1174
01:01:08,169 --> 01:01:12,332
And all you're doing is hiring people at certain times to take those positions that are not

1175
01:01:12,392 --> 01:01:13,773
filled because you don't need them right now.

1176
01:01:14,454 --> 01:01:16,675
It's the way I respond to that question.

1177
01:01:16,855 --> 01:01:17,075
All right.

1178
01:01:17,115 --> 01:01:17,496
Thank you.

1179
01:01:17,736 --> 01:01:18,096
Thank you.

1180
01:01:18,696 --> 01:01:18,857
Go ahead.

1181
01:01:20,074 --> 01:01:22,477
I'm sorry, I can't see you really well with these lights.

1182
01:01:22,637 --> 01:01:23,038
He's next.

1183
01:01:23,519 --> 01:01:24,039
Okay, thank you.

1184
01:01:25,561 --> 01:01:31,924
Okay, uh, uh, my name is Wei from NetEase. So you talk about the hotfix, uh, I'm wondering do you

1185
01:01:31,964 --> 01:01:38,646
have any specific process, uh, between the hotfix and the, the branches because in real life

1186
01:01:38,726 --> 01:01:44,569
sometimes you have, uh, uh, DevOps team is working on the content you are going to release in

1187
01:01:44,589 --> 01:01:49,330
the future. Uh, at the same time you have your live ops team is working on the hotfix on

1188
01:01:49,470 --> 01:01:53,752
online, right? So, so do you have anything to share about the...

1189
01:01:54,012 --> 01:01:55,955
So the live fix is going into main.

1190
01:01:56,816 --> 01:01:58,578
It'll be going to test.

1191
01:01:58,818 --> 01:01:59,799
It'll be put into test.

1192
01:02:00,500 --> 01:02:03,023
And then when it's ready to go, it goes into main

1193
01:02:03,423 --> 01:02:04,104
onto the service.

1194
01:02:06,045 --> 01:02:07,125
So you mean the hotfix?

1195
01:02:07,446 --> 01:02:08,526
The hotfix, correct.

1196
01:02:08,967 --> 01:02:12,609
It is a QA branch, a test branch, that goes into,

1197
01:02:13,330 --> 01:02:16,892
that gets tested, white-gloved, then it goes into mainline.

1198
01:02:17,212 --> 01:02:22,696
So did you consider you fix the hotfix on the live branch

1199
01:02:22,876 --> 01:02:23,837
and go back to your main?

1200
01:02:23,877 --> 01:02:28,340
Because sometimes the hotfix is fixing the very urgent issue.

1201
01:02:28,680 --> 01:02:30,682
So you want to be on the same?

1202
01:02:30,722 --> 01:02:32,963
The live, by the way, the live branch is the mainline.

1203
01:02:33,364 --> 01:02:33,564
Oh, OK.

1204
01:02:34,144 --> 01:02:36,285
That is, there's no difference between the two when you're live.

1205
01:02:36,785 --> 01:02:40,107
That was why I was telling you the big transition when you go into test for the first time,

1206
01:02:40,507 --> 01:02:41,967
is your main line, is your live.

1207
01:02:42,208 --> 01:02:42,768
That's it.

1208
01:02:42,828 --> 01:02:46,269
That's when you really kind of, that's when the main line becomes real to the team.

1209
01:02:47,010 --> 01:02:47,430
Okay.

1210
01:02:47,870 --> 01:02:48,130
Okay.

1211
01:02:48,310 --> 01:02:48,630
Thank you.

1212
01:02:48,850 --> 01:02:49,030
Yeah.

1213
01:02:50,691 --> 01:02:51,772
And, sorry.

1214
01:02:53,557 --> 01:02:56,358
So, hi, I'm a designer from Vicarious Visions,

1215
01:02:56,418 --> 01:02:58,659
and I'm curious on your thoughts on burnout,

1216
01:02:58,759 --> 01:03:01,020
because as a studio, we try really hard

1217
01:03:01,040 --> 01:03:03,300
to keep that from happening, but it does occasionally.

1218
01:03:03,320 --> 01:03:05,201
I was curious if you had thoughts of,

1219
01:03:05,441 --> 01:03:06,802
like, if you see people burning out,

1220
01:03:06,842 --> 01:03:08,503
or someone burning out, do you have any thoughts

1221
01:03:08,543 --> 01:03:09,883
on how to bring them back from that,

1222
01:03:09,983 --> 01:03:11,104
or do you generally find it's like,

1223
01:03:11,164 --> 01:03:12,224
they're out, they're burned, they're done?

1224
01:03:12,768 --> 01:03:20,690
No. So what I do is I have my leads do one on ones with everyone at a at a week cadence. And you can see that I walk the

1225
01:03:20,730 --> 01:03:25,891
floor personally myself and look for it as well because I kind of know what to look for. And I try to train my leadership

1226
01:03:25,911 --> 01:03:31,173
team to know what to look for when burnout occurs because some people like to work no matter. Some people have these

1227
01:03:31,773 --> 01:03:38,334
hours that are crazy. There could be life issues that cause that whatever they don't want to go home or whatever. And I I

1228
01:03:38,374 --> 01:03:41,515
literally have to force them out the door when I see that right stop.

1229
01:03:42,698 --> 01:03:43,338
Don't do that.

1230
01:03:44,059 --> 01:03:44,939
You're not effective.

1231
01:03:45,399 --> 01:03:48,281
And a lot of studies have shown not being effective

1232
01:03:48,341 --> 01:03:49,781
once you reach a certain point anyway.

1233
01:03:49,821 --> 01:03:53,563
So why you do that, I'll tell you what causes crunch.

1234
01:03:53,963 --> 01:03:56,505
The number one thing that causes crunch in my opinion

1235
01:03:57,005 --> 01:03:59,106
is top down schedules.

1236
01:04:00,847 --> 01:04:03,028
If I had to say anything, it's top down schedules.

1237
01:04:03,868 --> 01:04:04,589
Not bottoms up.

1238
01:04:05,459 --> 01:04:09,625
And that's why I try to do the discipline of every six months in a three year project

1239
01:04:09,645 --> 01:04:14,652
to do bottoms up roadmaps to triage against to figure out where my risks are.

1240
01:04:17,055 --> 01:04:17,476
Yeah.

1241
01:04:20,900 --> 01:04:21,421
Oh thank you.

1242
01:04:21,621 --> 01:04:21,842
Sorry.

1243
01:04:24,649 --> 01:04:25,670
Hi, thanks for the presentation.

1244
01:04:25,710 --> 01:04:27,071
My name's Elliot from Square Enix.

1245
01:04:28,512 --> 01:04:30,954
When you said SWIG had launched, the back end melted,

1246
01:04:30,994 --> 01:04:34,456
was it due to poor capacity planning or elasticity issue?

1247
01:04:34,496 --> 01:04:35,797
And how did you guys recover from that?

1248
01:04:36,458 --> 01:04:38,679
It was poor planning.

1249
01:04:39,800 --> 01:04:42,282
Basically, they were confident because of EQ

1250
01:04:42,302 --> 01:04:44,964
that they could launch without any problems.

1251
01:04:45,284 --> 01:04:48,286
Didn't realize, I told you, there were five main uniques

1252
01:04:48,346 --> 01:04:49,447
hitting that website, right?

1253
01:04:50,167 --> 01:04:54,849
That's if that's not an indicator a KPI to look out for a spot to look for.

1254
01:04:55,570 --> 01:04:56,350
You better be careful.

1255
01:04:57,351 --> 01:05:08,115
And so that came as a shock and it melted down the whole Apache distribution system that we use for load

1256
01:05:08,155 --> 01:05:09,316
balancing and things like that.

1257
01:05:09,356 --> 01:05:12,858
It just collapsed and it took about a day and a half to get fixed.

1258
01:05:13,620 --> 01:05:15,723
which is denial of service for a lot of people.

1259
01:05:15,943 --> 01:05:19,748
It was just it was very hard to watch from a development point of view because that's platform.

1260
01:05:20,268 --> 01:05:25,875
But it gave me a lot of big lessons learned of what to do when testing before launch.

1261
01:05:26,015 --> 01:05:29,519
I literally have done this on a platform that we're launching on.

1262
01:05:29,639 --> 01:05:33,363
I literally disconnect the logon servers to see if they roll over properly.

1263
01:05:33,804 --> 01:05:38,687
I've actually put bugs in the game to see how autofixes work and didn't tell anybody.

1264
01:05:39,208 --> 01:05:40,048
I actually did that.

1265
01:05:40,449 --> 01:05:43,811
And I wanted to see how quickly, because I knew when it was going in, they'd find it,

1266
01:05:44,151 --> 01:05:45,272
fix it, and get it out.

1267
01:05:47,394 --> 01:05:50,636
I did severe bugs where you had to recompile.

1268
01:05:50,696 --> 01:05:57,722
I did a, where you only had to do a, not a full compile, not a full build, a partial

1269
01:05:57,762 --> 01:05:57,922
build.

1270
01:05:58,282 --> 01:05:59,563
I did things like that as well.

1271
01:06:00,600 --> 01:06:02,842
And I found out when they had to do a full bill,

1272
01:06:03,062 --> 01:06:04,663
it took 14 hours.

1273
01:06:06,524 --> 01:06:07,185
I didn't know that.

1274
01:06:07,305 --> 01:06:08,066
They said it wasn't.

1275
01:06:08,326 --> 01:06:09,687
And I don't believe them.

1276
01:06:09,727 --> 01:06:10,507
I trust McVerify.

1277
01:06:10,527 --> 01:06:12,969
And I actually had engineers do that for me.

1278
01:06:14,438 --> 01:06:15,698
I highly recommend you do that.

1279
01:06:15,738 --> 01:06:16,519
Trust but verify.

1280
01:06:17,459 --> 01:06:17,639
Thanks.

1281
01:06:17,659 --> 01:06:18,420
Just a quick follow up.

1282
01:06:20,260 --> 01:06:24,182
If the environment had been more elastic, perhaps,

1283
01:06:24,382 --> 01:06:28,024
would that have helped you recover easier from the capacity

1284
01:06:28,044 --> 01:06:28,324
limit?

1285
01:06:28,364 --> 01:06:29,284
Yeah, well, Ben, this is 2003.

1286
01:06:29,364 --> 01:06:29,584
OK?

1287
01:06:29,624 --> 01:06:31,605
Everything was starting to get virtualized by that time,

1288
01:06:31,685 --> 01:06:31,845
right?

1289
01:06:32,485 --> 01:06:34,886
So they didn't have a lot of things we have today

1290
01:06:35,306 --> 01:06:36,387
that makes things a lot easier.

1291
01:06:36,507 --> 01:06:40,208
God, I mean, when I look at platforms and where we're going,

1292
01:06:40,268 --> 01:06:43,330
right, I mean, I look at C++ we used to use or Java.

1293
01:06:43,510 --> 01:06:45,050
I use Golang now, right?

1294
01:06:45,610 --> 01:06:46,331
I use GitLab.

1295
01:06:46,811 --> 01:06:49,692
I use Kubernetes and all the other things that exist today

1296
01:06:49,732 --> 01:06:51,813
to help you push out, push out, and distribute

1297
01:06:52,173 --> 01:06:54,454
and have a service layer that's agnostic to everything

1298
01:06:54,474 --> 01:06:55,394
that can attach to it.

1299
01:06:55,754 --> 01:06:56,635
It's awesome.

1300
01:06:57,575 --> 01:06:59,696
And virtualizing everything you can do today

1301
01:07:00,176 --> 01:07:01,596
just makes things so much easier.

1302
01:07:03,514 --> 01:07:04,335
to when I started.

1303
01:07:04,995 --> 01:07:05,315
Thank you.

1304
01:07:05,555 --> 01:07:05,735
Yeah.

1305
01:07:07,776 --> 01:07:11,077
Hi, Rich, my name is Dominic, I'm the QA Manager at Square Enix.

1306
01:07:11,817 --> 01:07:15,879
So the presentation was awesome and I love hearing the questions from fellow Square Enixers.

1307
01:07:16,899 --> 01:07:20,081
One of the things I wanted to touch on was just the security point that you had there.

1308
01:07:20,161 --> 01:07:20,361
Yes.

1309
01:07:20,821 --> 01:07:24,683
What was the general split for you between the infrastructure level security testing

1310
01:07:24,703 --> 01:07:26,783
and the application security testing and the timing of that?

1311
01:07:27,692 --> 01:07:31,576
Yeah, so basically one of the problems with game programmers,

1312
01:07:32,256 --> 01:07:34,238
especially doing game systems, is security.

1313
01:07:35,419 --> 01:07:38,622
They don't realize that they have to validate certain things.

1314
01:07:39,543 --> 01:07:42,666
And so one of the hardest lessons to teach games of the service

1315
01:07:42,966 --> 01:07:44,167
when people haven't done it before

1316
01:07:44,968 --> 01:07:46,749
is to learn how to do that server validation.

1317
01:07:48,306 --> 01:07:49,366
It has to do with movement.

1318
01:07:49,947 --> 01:07:51,128
It has to do with collision.

1319
01:07:51,508 --> 01:07:55,451
It has to do with if they have a system that is dealing

1320
01:07:55,471 --> 01:07:58,153
with advancement, that there's checks to make sure people are

1321
01:07:58,193 --> 01:08:01,315
not out of bounds, and all sorts of things like that.

1322
01:08:01,855 --> 01:08:07,459
And so at Swotur, I hired a security officer.

1323
01:08:08,140 --> 01:08:10,441
And the security officer did two things for me.

1324
01:08:10,782 --> 01:08:11,482
He hired a team.

1325
01:08:12,343 --> 01:08:14,604
This is one of my slides I didn't get to.

1326
01:08:14,985 --> 01:08:16,206
It's like one of those things I threw out.

1327
01:08:16,886 --> 01:08:20,648
But I had a security team with a security guy I hired.

1328
01:08:20,948 --> 01:08:24,709
He did both external security and internal game security.

1329
01:08:25,130 --> 01:08:28,691
So for example, he locked down all the USB ports

1330
01:08:29,532 --> 01:08:30,252
in the company.

1331
01:08:30,732 --> 01:08:34,394
He made sure that everything had dual auth,

1332
01:08:34,994 --> 01:08:36,675
that we went to the service, the cloud,

1333
01:08:36,755 --> 01:08:38,095
everything had to be dual auth.

1334
01:08:39,276 --> 01:08:40,957
He was responsible with his team,

1335
01:08:40,997 --> 01:08:43,338
because there was facilities, and then there was IT,

1336
01:08:43,398 --> 01:08:44,278
and then there was the game.

1337
01:08:44,818 --> 01:08:46,219
Because if you're going to get hacked.

1338
01:08:47,227 --> 01:08:50,410
It's going to come from outside into your IT infrastructure,

1339
01:08:50,711 --> 01:08:51,551
not into your game.

1340
01:08:52,192 --> 01:08:52,832
I guarantee it.

1341
01:08:54,314 --> 01:08:56,836
And so that helped us out a lot.

1342
01:08:57,177 --> 01:08:59,539
And then he had to make sure the game programmers, he

1343
01:08:59,579 --> 01:09:01,921
had a person responsible to work with them,

1344
01:09:02,301 --> 01:09:04,864
to make sure things are tidied up with SDETs

1345
01:09:05,524 --> 01:09:06,625
to do the testing for them.

1346
01:09:08,250 --> 01:09:09,231
But again, you'll miss it.

1347
01:09:09,451 --> 01:09:12,294
I mean, every time I go out into live, there's something

1348
01:09:12,314 --> 01:09:12,995
that happens again.

1349
01:09:13,375 --> 01:09:14,396
Did you not put that?

1350
01:09:14,436 --> 01:09:15,257
No, I forgot it.

1351
01:09:15,337 --> 01:09:17,038
Because you have hundreds of systems that are

1352
01:09:17,539 --> 01:09:19,841
interrelated, especially in an RPG.

1353
01:09:21,982 --> 01:09:24,044
Because one of the things I will tell you game system

1354
01:09:24,064 --> 01:09:26,707
wise, and on games as a service, it's so much of this,

1355
01:09:27,667 --> 01:09:28,288
interconnected.

1356
01:09:29,169 --> 01:09:31,811
I've had things that I fixed on, and we checked.

1357
01:09:32,371 --> 01:09:34,273
And when it went live through some kind of

1358
01:09:35,482 --> 01:09:38,364
Scale issue that we never discovered until you got scale.

1359
01:09:39,145 --> 01:09:41,066
Something happened over here that had nothing

1360
01:09:41,086 --> 01:09:41,766
to do with what we had here.

1361
01:09:41,806 --> 01:09:44,308
But there was a global variable that was called upon.

1362
01:09:44,348 --> 01:09:47,670
We had no idea it hit over here that caused a massive problem.

1363
01:09:48,911 --> 01:09:50,432
And it took a long time to trace back

1364
01:09:51,653 --> 01:09:52,833
because it happened at scale.

1365
01:09:53,194 --> 01:09:56,556
And you can't test, even all the bots in the world, no offense,

1366
01:09:56,876 --> 01:09:58,797
cannot test things at scale.

1367
01:09:58,817 --> 01:10:00,478
And this is why I talk about things popping.

1368
01:10:01,119 --> 01:10:03,620
You are going to have that, especially if you start hitting

1369
01:10:03,660 --> 01:10:04,721
into the millions of PCUs.

1370
01:10:06,746 --> 01:10:07,307
Anybody else?

1371
01:10:07,708 --> 01:10:07,988
Thank you.

1372
01:10:08,329 --> 01:10:08,630
Thank you.

1373
01:10:09,952 --> 01:10:10,514
I can't see.

1374
01:10:10,534 --> 01:10:11,335
All right.

1375
01:10:11,396 --> 01:10:11,997
Thank you very much.

