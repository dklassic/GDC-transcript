1
00:00:11,721 --> 00:00:17,124
Hi, I'm Jeremy Abel, Technical Lead and Audio Programmer at Feral Cat Den, and I'll be talking

2
00:00:17,224 --> 00:00:21,607
about our game Genesis Noir and how we built a level around jazz improvisation.

3
00:00:22,528 --> 00:00:28,111
So Genesis Noir is a poetic adventure game with an emphasis on exploration and a simple

4
00:00:28,151 --> 00:00:29,232
palette of interactions.

5
00:00:30,072 --> 00:00:35,317
You play as a cosmic god in a world where the Big Bang is a gunshot fired at the woman you love,

6
00:00:35,857 --> 00:00:37,839
and the player's goal is to try and stop it.

7
00:00:39,200 --> 00:00:43,563
The gameplay loop consists of entering the universe and exploring a series of standalone

8
00:00:43,624 --> 00:00:49,829
short stories, and each of these stories tells a story about a human character and illustrates

9
00:00:49,869 --> 00:00:54,933
some aspect of humanity. For example, a hunter character illustrates humans' mastery over their

10
00:00:54,973 --> 00:00:59,036
environment, or a scientist character who shows curiosity about the universe.

11
00:01:00,059 --> 00:01:04,962
For the level focusing on human creativity, we really wanted to tell a story about a jazz musician

12
00:01:05,122 --> 00:01:11,285
due to the noir style of the rest of the game and how much jazz music kind of infuses the rest of everything else.

13
00:01:12,446 --> 00:01:17,208
And we kind of thought that the most interesting way to interact with a jazz musician is through music itself,

14
00:01:17,929 --> 00:01:23,672
and we really liked the idea of learning how to play music and having the human character teach the player

15
00:01:24,432 --> 00:01:26,673
about their musical world. We kind of thought that was pretty cool.

16
00:01:27,601 --> 00:01:32,726
And I have first-hand experience in this, having played drums and jazz bands all throughout my school years.

17
00:01:33,506 --> 00:01:36,289
Learning to play jazz is different from learning classical music.

18
00:01:37,010 --> 00:01:40,112
With classical music, you're expected to play exactly what's written on the page.

19
00:01:40,673 --> 00:01:46,418
The sheet music tells you how loud to play, how fast to play, when to press the piano pedals, how short the notes should be.

20
00:01:47,488 --> 00:01:51,371
And this is all done in the purpose of expressing the composer's intent.

21
00:01:51,872 --> 00:01:54,714
It's way less about the performer's expression.

22
00:01:55,194 --> 00:01:58,898
It's more about the beauty of what the composer has created.

23
00:01:59,918 --> 00:02:03,281
But with jazz, the focus is much more on the individual playing of music

24
00:02:03,822 --> 00:02:04,722
rather than the composer.

25
00:02:05,243 --> 00:02:08,385
If you look up 100 performances of Hungarian Rhapsody,

26
00:02:08,425 --> 00:02:10,027
the differences between them will be subtle,

27
00:02:10,707 --> 00:02:11,968
especially if you're just a student.

28
00:02:12,108 --> 00:02:14,210
If you play it wrong, your teacher will probably yell at you.

29
00:02:15,369 --> 00:02:21,933
But on the other hand, you can look up a hundred versions of all of me and there will be a lot of clear variation in speed,

30
00:02:22,654 --> 00:02:25,576
feeling, texture, instrumentation, and everything else.

31
00:02:26,437 --> 00:02:29,559
The sheet music doesn't even tell you what instrument to play or how fast to play it.

32
00:02:29,579 --> 00:02:36,063
It just kind of gives you a melody and some chords, and then you're expected to just kind of do whatever you think is good.

33
00:02:37,493 --> 00:02:43,138
The other prominent aspect of jazz is the solo, which used to be a big thing in classical music,

34
00:02:43,298 --> 00:02:48,283
but eventually kind of fell out of fashion. I think it was called cadenzas in that context.

35
00:02:49,464 --> 00:02:54,608
But teaching how to solo is really difficult, and in school they'll give you sheet music like this,

36
00:02:55,209 --> 00:02:59,573
where it just says repeat for solos, and then there's some chords and a bunch of slashes,

37
00:03:00,194 --> 00:03:03,316
and the slashes are just, they just mean play whatever you want.

38
00:03:04,933 --> 00:03:09,795
But that's only in school. In the real world you won't even get that. You'll just kind of get these

39
00:03:09,855 --> 00:03:15,017
bad crx copies of handwritten sheet music and you could buy them in a book called the real book.

40
00:03:16,418 --> 00:03:20,880
But the people who made this book didn't have the licenses for the songs to print the sheet music.

41
00:03:22,160 --> 00:03:26,522
So the only way you could get them was from someone's car truck outside a jazz club or if

42
00:03:26,562 --> 00:03:28,103
you know who to ask at a music store.

43
00:03:29,811 --> 00:03:33,915
And the other thing is you can't let anyone see you have one of these at the jam session

44
00:03:33,995 --> 00:03:38,180
because you were expected to learn all these tunes by just listening off the albums.

45
00:03:38,760 --> 00:03:42,624
And reading off the real book in a jazz jam session would get you kicked out.

46
00:03:42,644 --> 00:03:46,268
You're supposed to memorize them and listen to the original tracks

47
00:03:46,328 --> 00:03:48,150
and then figure out what you're supposed to play from that.

48
00:03:49,150 --> 00:03:53,071
So we felt that learning to play jazz seemed like the perfect story for a video game.

49
00:03:53,351 --> 00:03:56,633
Where you have a mysterious community that's distrustful of outsiders,

50
00:03:57,193 --> 00:04:00,374
strange rituals to learn, and a big book of secrets.

51
00:04:01,315 --> 00:04:03,596
So you're kind of becoming a jazz wizard, I guess.

52
00:04:04,696 --> 00:04:09,578
So how can we make this fun and interactive for someone who has probably never played jazz before?

53
00:04:10,298 --> 00:04:13,360
Well, let's look at the traditional path for learning this stuff.

54
00:04:14,580 --> 00:04:17,641
Step one, like everything else, is to copy the professionals.

55
00:04:18,754 --> 00:04:23,597
In jazz school this is done by transcribing solos to learn how a solo was constructed.

56
00:04:24,098 --> 00:04:27,300
And I guess this is kind of like copy pasting code from the internet.

57
00:04:29,041 --> 00:04:32,883
You would usually spend, you know, a couple hours just listening to a song over and over again and

58
00:04:32,903 --> 00:04:37,006
writing the notes out. And then you would get graded on it, I guess, on accuracy.

59
00:04:38,807 --> 00:04:43,931
So turning this process into kind of a Simon Says game made sense. I'll play a bit here.

60
00:04:43,951 --> 00:04:47,253
And you can see how this works in the game.

61
00:04:55,658 --> 00:04:59,682
So as usual, it starts out with only a couple notes, and it adds more as you go on.

62
00:05:04,587 --> 00:05:07,450
We kind of have this rectangle style to evoke piano keys.

63
00:05:17,112 --> 00:05:21,095
And after a few rounds of that, the player gets kind of blown away by the human.

64
00:05:31,585 --> 00:05:35,469
This is meant to kind of evoke the common feeling of being inadequate as a musician.

65
00:05:36,870 --> 00:05:40,734
But our character has an idea of what if we reverse this interaction.

66
00:05:43,235 --> 00:05:47,159
It's inspired by my experiences in school where the teacher would say stuff like,

67
00:05:47,259 --> 00:05:49,261
improvise using only these four notes.

68
00:05:49,982 --> 00:05:58,830
So the goal of the interaction is to pick notes and have the human bassist kind of play

69
00:05:58,870 --> 00:06:04,255
a cooler, spicier version as a call and response kind of thing.

70
00:06:04,595 --> 00:06:05,856
So now we get to the big question.

71
00:06:06,863 --> 00:06:09,906
How the heck do you make a computer play jazz music in the first place?

72
00:06:10,827 --> 00:06:17,033
And this is caveated without machine learning because we don't have the time or the budget to really go down that route

73
00:06:17,674 --> 00:06:19,095
So I started doing some research

74
00:06:20,056 --> 00:06:27,524
and I found this great video by 8-bit music theory that analyzes a saxophone solo from a Mario Kart 8 tune and

75
00:06:28,048 --> 00:06:32,856
One of the things that he mentions is a technique called chromatic enclosures, where you start

76
00:06:32,976 --> 00:06:39,847
with a single note and you add notes semitone above and below the initial note.

77
00:06:40,668 --> 00:06:42,190
And this sounds like...

78
00:06:43,512 --> 00:06:49,054
A really great potential algorithm, I guess, for taking an input set of notes and spicing

79
00:06:49,074 --> 00:06:50,715
that up, making it more interesting.

80
00:06:51,455 --> 00:06:54,616
And at the time I was really excited by this discovery.

81
00:06:54,756 --> 00:07:00,118
I didn't really think fully through why you would want to do this, what's the benefit

82
00:07:00,319 --> 00:07:01,119
of enclosures.

83
00:07:01,339 --> 00:07:07,522
I was just jazzed about there being a potential solution to the problem of starting with four

84
00:07:07,562 --> 00:07:10,663
notes and coming up with a cooler version of those four notes.

85
00:07:12,523 --> 00:07:14,344
So you can even make really long enclosures.

86
00:07:14,364 --> 00:07:16,786
You can start with one and then, you know,

87
00:07:16,846 --> 00:07:18,908
suddenly it turns into five by, you know,

88
00:07:18,988 --> 00:07:21,309
kind of weeding in and around this note

89
00:07:21,369 --> 00:07:22,110
that you're targeting.

90
00:07:24,412 --> 00:07:27,794
So I got this idea of making improvisation mutators

91
00:07:28,114 --> 00:07:29,916
where you would take the player's input notes,

92
00:07:30,396 --> 00:07:31,377
run it through some algorithm,

93
00:07:32,017 --> 00:07:34,019
and you would get some spicy output notes.

94
00:07:35,139 --> 00:07:37,281
So the first one I wrote was this enclosure one

95
00:07:37,301 --> 00:07:40,243
where it would randomly add enclosures to players' notes.

96
00:07:41,340 --> 00:07:42,741
So if our input sounded like this, 🎵

97
00:07:45,783 --> 00:07:48,745
then the enclosured version might sound like this. 🎵

98
00:07:53,989 --> 00:07:58,612
And, yeah, it doesn't really bear much resemblance to the original input.

99
00:08:00,453 --> 00:08:02,975
You can see that the targeted notes are in red,

100
00:08:03,415 --> 00:08:07,238
and they're just kind of enclosed by some other random notes

101
00:08:07,578 --> 00:08:10,160
that are above and below the targeted notes.

102
00:08:11,916 --> 00:08:13,777
I also wrote one called Double Notes.

103
00:08:15,197 --> 00:08:17,879
This one allows us to kind of, here I'll just play it.

104
00:08:21,240 --> 00:08:22,140
So if our input is.

105
00:08:27,622 --> 00:08:32,364
This kind of allows us to feel the swing rhythm more, which is a critical part of jazz.

106
00:08:32,785 --> 00:08:35,226
You can play it called straight, which is without swing.

107
00:08:35,246 --> 00:08:39,147
And then with swing, it's like this.

108
00:08:41,364 --> 00:08:45,946
You can hear how it has way more of a bouncy sound, and that's kind of a quintessential part of jazz.

109
00:08:48,447 --> 00:08:50,689
And then I wrote one called Adjust Durations,

110
00:08:51,609 --> 00:08:54,451
where it just kind of randomly changes the durations of the player's inputs.

111
00:08:54,831 --> 00:08:59,774
So if our input is this, we can adjust that to...

112
00:09:01,955 --> 00:09:05,877
Which sounds interesting, but I decided that we kind of needed to know the durations of the

113
00:09:05,917 --> 00:09:06,758
player's input notes.

114
00:09:07,587 --> 00:09:14,032
which is called quantization, where you snap some inputs to a temporal grid, basically assigning

115
00:09:14,112 --> 00:09:19,095
sensible note directions to what the player had played. And it turns out this is a really

116
00:09:19,135 --> 00:09:23,198
difficult problem to solve, especially if you're recording inputs from someone who's trying to play

117
00:09:23,238 --> 00:09:28,421
a video game and not actually perform music. But at this point it's probably like, I don't know,

118
00:09:29,422 --> 00:09:33,485
10 p.m. and I'm way too in the zone, I'm too busy writing code to stop and test the code that I've

119
00:09:33,505 --> 00:09:36,747
already written, so I come up with this a cheater solution.

120
00:09:39,160 --> 00:09:46,204
So if this is our input, we can find the maximum duration between two notes, divide that into

121
00:09:46,244 --> 00:09:52,567
three buckets, assign note durations to each bucket, and then measure each input's duration

122
00:09:52,667 --> 00:09:54,268
and sort them into the three buckets.

123
00:09:55,088 --> 00:09:56,469
And this turned out to be good enough.

124
00:09:57,589 --> 00:10:01,651
I still haven't really tested any of this, but I'm pretty proud of my GE quantization

125
00:10:01,691 --> 00:10:01,931
method.

126
00:10:03,061 --> 00:10:10,347
I commit at 1 a.m. and I come in the next day to test and it turns out that all of this sounds kind of like crap.

127
00:10:10,567 --> 00:10:16,231
It's not very interesting. It doesn't really spice up the player's inputs too much.

128
00:10:16,271 --> 00:10:19,934
It just kind of sounds like random stuff.

129
00:10:20,595 --> 00:10:27,320
It turns out this is a pretty difficult task. A lot of work has been done trying to make a computer generate a jazz solo.

130
00:10:28,381 --> 00:10:31,603
A lot of papers with lovely diagrams.

131
00:10:33,497 --> 00:10:36,799
And great titles like Recombinant Jazz Improvisations.

132
00:10:38,340 --> 00:10:41,742
And there's also a few open source tools like this one called Improvisor

133
00:10:43,163 --> 00:10:48,446
with some pretty great UI options like this button that says prepare critics

134
00:10:49,407 --> 00:10:54,630
and these check boxes where you can rectify and color your solo.

135
00:10:54,970 --> 00:10:58,673
I have no idea what those mean but it's fun that they exist.

136
00:10:59,380 --> 00:11:05,269
So at this point I realized that I'm making a video game, not a four-year PhD research paper,

137
00:11:06,011 --> 00:11:10,959
and I need to kind of step back. So I take a break for a few months, I work on some other things,

138
00:11:11,700 --> 00:11:13,983
and eventually I come to the realization that

139
00:11:15,061 --> 00:11:29,127
A generic solution is overkill. It just needs to be fun for five minutes. The player isn't going to be playing this for hours. It's just a small segment in a larger game. It just needs to be good once.

140
00:11:31,028 --> 00:11:38,791
But can we find anything in the work that we've already done that might be useful? So let's take a look at that one more time.

141
00:11:39,891 --> 00:11:41,492
So here's the add enclosures.

142
00:11:43,453 --> 00:11:47,715
Like we said before, you don't really hear the player's input very much.

143
00:11:50,437 --> 00:11:51,977
That gets transformed into...

144
00:11:51,997 --> 00:12:00,622
It doesn't really flow, it doesn't really have much of a cool rhythm, it's just kind of,

145
00:12:00,902 --> 00:12:06,265
oh great, I added two more notes to the beginning of all of this input.

146
00:12:08,146 --> 00:12:11,988
The double notes was interesting in that it helped us feel that kind of swing beat.

147
00:12:12,570 --> 00:12:15,551
but it's not super interesting as a spiced up version.

148
00:12:17,392 --> 00:12:23,195
And our adjust durations idea was also interesting, but our original implementation

149
00:12:23,275 --> 00:12:27,878
was dependent on knowing the durations of the player's inputs, which, you know,

150
00:12:28,278 --> 00:12:32,260
came up with this whole quantization problem that I just didn't want to deal with.

151
00:12:33,500 --> 00:12:36,942
So I decided at this point to actually emulate what I wanted the game to do.

152
00:12:37,956 --> 00:12:42,557
I wrote out a sequence of notes for the player's inputs and then set up the keyboard and made up

153
00:12:42,617 --> 00:12:47,498
my own Spice Step versions. And eventually I realized that since this just needs to sound

154
00:12:47,518 --> 00:12:52,759
good once, why not just pre-make the improvised responses and then build them to adapt to

155
00:12:52,819 --> 00:12:58,720
whatever the input is. And this is what we ended up shipping with. So let's see how this plays

156
00:12:58,980 --> 00:13:01,721
out in the game first and then I'll break down what's going on.

157
00:13:34,979 --> 00:13:42,704
Cool. So what we do is we record players notes into an array and we don't really care about

158
00:13:42,724 --> 00:13:49,328
the timing since we'll be applying our own rhythm. We just record them in a list. And

159
00:13:49,348 --> 00:13:56,273
then we have these things called response midis which are used to impose a rhythm on

160
00:13:56,313 --> 00:13:59,635
the player's inputs. And this is what one of them sounds like.

161
00:14:05,187 --> 00:14:09,268
And it doesn't really sound that great, but that's because we don't use the actual pitches.

162
00:14:09,748 --> 00:14:14,350
Instead, the note pitches are used as indices into the player's input array rather than

163
00:14:14,450 --> 00:14:15,010
actual pitches.

164
00:14:15,570 --> 00:14:21,712
So MIDI middle C, which is MIDI note 60, maps to the first index in the player's input array.

165
00:14:23,272 --> 00:14:27,553
So for each note, we replace it with the player's pitch from the input array.

166
00:14:28,273 --> 00:14:29,214
And let's see how that sounds.

167
00:14:29,434 --> 00:14:30,494
So this is our input.

168
00:14:33,163 --> 00:14:35,585
Then our remapped response sounds like this.

169
00:14:40,250 --> 00:14:43,813
And that's a lot more interesting. We can hear the player's input in the response,

170
00:14:45,475 --> 00:14:49,759
and we have complete control over how it sounds, what the rhythm is, what notes are picked.

171
00:14:51,067 --> 00:14:56,830
Instead of letting the computer pick randomly and chancing the fact that it would sound bad.

172
00:14:57,550 --> 00:15:03,312
And one thing that we found was that it only really sounded good when the order of the player's notes was mostly kept intact,

173
00:15:03,632 --> 00:15:05,433
especially at the beginning of the response.

174
00:15:05,853 --> 00:15:10,895
So you can see how we start with 1, 2, 3, 4, and then we just step back down that scale.

175
00:15:11,575 --> 00:15:14,536
And this is the first one that we saw in the video.

176
00:15:15,256 --> 00:15:16,857
They get more complicated as it goes on.

177
00:15:17,397 --> 00:15:21,638
But if we start in the middle of the player's input array, it gets difficult to hear that

178
00:15:21,658 --> 00:15:26,500
the player's input was the source of the response, and it doesn't really sound like the human

179
00:15:26,520 --> 00:15:29,201
character is riffing on what the player is doing.

180
00:15:30,681 --> 00:15:35,742
So there are three responses in total, and we let the player enter more notes each time,

181
00:15:36,042 --> 00:15:40,944
so we mirror the increasing complexity of the NPC-led Simon Says Game in the beginning.

182
00:15:41,364 --> 00:15:43,044
So let's see how it plays out.

183
00:15:47,585 --> 00:15:49,166
This is the third and final round.

184
00:15:50,767 --> 00:15:53,529
So we end up getting blown away once again.

185
00:15:53,569 --> 00:15:55,651
Clearly we need to practice more.

186
00:16:13,733 --> 00:16:19,755
So the four blocks from the Simon Says interaction kind of expand out into this full array of

187
00:16:19,815 --> 00:16:20,855
buttons like a piano.

188
00:16:22,115 --> 00:16:26,096
And now we have way more control over what the player can play.

189
00:16:26,717 --> 00:16:31,358
So they can hold the bounce button down and drag across the screen to play a quick string

190
00:16:31,378 --> 00:16:31,698
of notes.

191
00:16:32,498 --> 00:16:36,980
And this is kind of meant to represent the struggling practice phase of learning to improvise

192
00:16:37,400 --> 00:16:39,520
where you just practice scales for hours.

193
00:16:42,554 --> 00:16:45,595
And you'll notice that we're not using the sample sax anymore,

194
00:16:46,155 --> 00:16:48,577
because playing fast notes like this,

195
00:16:48,997 --> 00:16:50,758
allowing the player to play fast like this,

196
00:16:50,818 --> 00:16:52,698
leads to problems with our sax samples,

197
00:16:53,299 --> 00:16:56,360
where the note-to-note transitions sound super cheesy,

198
00:16:56,440 --> 00:16:57,681
like a really bad sampler.

199
00:16:58,801 --> 00:17:00,982
So this is what our first test sounded like. ♪♪♪

200
00:17:08,133 --> 00:17:12,095
So we clearly needed to find a solution for this, just because it sounds really bad.

201
00:17:13,015 --> 00:17:17,857
First thing we did was we tried the SoundFont, but that ended up sounding like bad 90s MIDI.

202
00:17:20,638 --> 00:17:26,540
And we also considered physical modeling, which sounds really great, but it would take way too long to implement.

203
00:17:27,720 --> 00:17:33,942
And, yeah, I mean, again, we're making a video game, not a simulated saxophone.

204
00:17:35,560 --> 00:17:40,941
So we kind of decided to lean into the standard synthesizer tone built into Unreal Engine.

205
00:17:41,841 --> 00:17:49,843
And we kind of enhanced that hesitant, I'm not good at this yet feeling by adding a lot of pitch wobbling and modulating the time of a delay effect.

206
00:17:50,383 --> 00:17:52,743
And that by itself without the backing track sounds like this.

207
00:18:00,945 --> 00:18:04,765
You can hear it just kind of trails off into this drunken kind of style.

208
00:18:06,822 --> 00:18:09,624
So let's continue and see how the rest of the interaction plays out.

209
00:18:16,949 --> 00:18:20,692
So once you satisfy the basis with your practicing,

210
00:18:21,832 --> 00:18:26,055
it's on to the next step of the jazz learning adventure.

211
00:18:49,262 --> 00:18:53,964
So instead of just pressing buttons now, the player is making this jazz sculpture, a completed

212
00:18:54,044 --> 00:18:54,564
piece of art.

213
00:18:55,404 --> 00:19:00,266
And we kind of represent this as a brush interaction, where the player draws their notes in free

214
00:19:00,306 --> 00:19:03,047
space as a geometric path of lines and blocks.

215
00:19:03,607 --> 00:19:06,868
At this point, there's no notes to click, no buttons or whatever, you just hold the

216
00:19:06,908 --> 00:19:08,689
button down and it automatically makes a note.

217
00:19:09,622 --> 00:19:13,366
And we use the vertical axis of the screen as pitch.

218
00:19:14,106 --> 00:19:17,730
And this is a look at the prototype that we had built originally,

219
00:19:17,930 --> 00:19:21,154
where it kind of starts to look like a city,

220
00:19:21,354 --> 00:19:24,217
but eventually it kind of evolves into this more characterful style,

221
00:19:24,718 --> 00:19:27,841
where there's windows and everything kind of pulses to the beat.

222
00:19:28,822 --> 00:19:31,746
And we also switched to a way more prominent backing track.

223
00:19:32,247 --> 00:19:37,813
So this was designed really intentionally to make the solo fun to play.

224
00:19:38,214 --> 00:19:39,896
So let's talk about how we designed that.

225
00:19:40,940 --> 00:19:46,963
So, in jazz, the backing track, or the track that you're soloing over, serves as the scaffolding

226
00:19:47,383 --> 00:19:51,906
for your improvisation. You improvise using the chords and structure of the song that you're

227
00:19:51,926 --> 00:19:58,089
playing over. And this is what's called a lead sheet, which is just the basic melody and chords

228
00:19:58,229 --> 00:20:03,953
and nothing else. And an entire band, an entire quartet, or whatever, would be able to play the

229
00:20:03,993 --> 00:20:06,354
entire song with just this amount of info.

230
00:20:08,291 --> 00:20:14,155
And in school, you'll get these lead sheets and will occasionally be given scales that you can use over each chord.

231
00:20:14,555 --> 00:20:19,518
A scale is just a series of notes that increase in pitch.

232
00:20:20,058 --> 00:20:22,960
So, like a C scale or a D scale or whatever.

233
00:20:24,561 --> 00:20:27,042
And this is an example for Miles Davis' All Blues.

234
00:20:28,948 --> 00:20:32,150
And it says stuff like G Mixolydian, G Dorian, etc.

235
00:20:32,530 --> 00:20:36,552
And that doesn't mean much to me, but it makes more much more sense like this,

236
00:20:37,613 --> 00:20:42,156
where it just hears the notes on the piano that you can play that'll make it sound good.

237
00:20:42,916 --> 00:20:48,799
And when I was working on this slide, I got distracted for like an hour just playing over the song.

238
00:20:49,720 --> 00:20:55,405
And this is kind of how I figured out originally that I wanted to make a level about improvisation,

239
00:20:55,525 --> 00:21:00,248
as I was just messing around on my keyboard while listening to some albums and realizing,

240
00:21:00,268 --> 00:21:03,871
oh, this particular song is really nice to play over.

241
00:21:04,832 --> 00:21:11,117
So I recorded a bit of my own improvisation to kind of talk through what makes this song interesting to play over.

242
00:21:18,477 --> 00:21:18,597
a

243
00:21:18,697 --> 00:21:18,978
little

244
00:21:19,158 --> 00:21:19,418
bit

245
00:21:19,438 --> 00:21:19,658
more

246
00:21:19,698 --> 00:21:20,099
context

247
00:21:20,139 --> 00:21:20,299
than

248
00:21:20,519 --> 00:21:20,819
four

249
00:21:20,980 --> 00:21:21,540
slides

250
00:21:21,660 --> 00:21:21,840
of

251
00:21:22,000 --> 00:21:22,161
the

252
00:21:22,401 --> 00:21:23,262
game

253
00:21:23,382 --> 00:21:24,323
transcript . . . . . . . . . . . . . . . .

254
00:21:46,120 --> 00:21:49,041
Apologize for subjecting you to my horrible improvisation.

255
00:21:51,323 --> 00:21:56,446
But what you want to kind of do when you're making a solo is kind of have this interest

256
00:21:56,526 --> 00:22:04,050
curve is what it's called, where you kind of take the listener on a journey with sound.

257
00:22:05,571 --> 00:22:08,773
And the song that you're playing over can really help you do this.

258
00:22:10,053 --> 00:22:13,215
And that's kind of the aspect that makes all blues so much fun to play,

259
00:22:13,795 --> 00:22:19,016
is that you don't even really have to think about, you know, oh am I, you know, do I want to increase

260
00:22:19,057 --> 00:22:22,898
intensity here? Do I want to decrease intensity? Because the song kind of does it for you.

261
00:22:23,958 --> 00:22:30,520
And that concept is called tension and release. So in music, in western harmony at least,

262
00:22:31,981 --> 00:22:35,262
certain chords feel like they need to resolve to go somewhere.

263
00:22:35,922 --> 00:22:37,603
We can hear that in this short example here.

264
00:22:44,179 --> 00:22:44,639
I'll play it again.

265
00:22:44,659 --> 00:22:50,961
So we're stable, tension, release, like that.

266
00:22:51,781 --> 00:22:53,821
And you'll hear that all over the place.

267
00:22:54,742 --> 00:22:57,062
And it's really prominent in all blues.

268
00:22:57,782 --> 00:23:01,683
So I'll play this segment again without my solo

269
00:23:01,703 --> 00:23:02,644
from the actual album.

270
00:23:04,024 --> 00:23:06,545
And we'll see, I'll talk through it.

271
00:23:09,525 --> 00:23:11,586
Stable, playing through the melody.

272
00:23:12,864 --> 00:23:23,913
Oh, it's a lot, a lot of tension.

273
00:23:23,933 --> 00:23:31,899
But a lot of tension adds to bigger release.

274
00:23:39,732 --> 00:23:44,315
And that's the whole song. It just loops like that for five or six minutes as people take solos over it.

275
00:23:45,897 --> 00:23:53,403
So, returning back to this kind of home sound adds this inherent sense of progression, like the song has been somewhere and now we've kind of come back.

276
00:23:54,104 --> 00:23:57,206
This provides an inherently interesting structure to play a solo over.

277
00:23:58,547 --> 00:24:03,231
So with this in mind, we kind of bake this same kind of tension to release into our backing track.

278
00:24:04,135 --> 00:24:08,639
And our harmonic changes aren't as extreme as all blues are,

279
00:24:09,180 --> 00:24:11,642
and that's in order to not totally blindside the player

280
00:24:12,083 --> 00:24:14,265
and have them kind of focus on their own playing instead of,

281
00:24:14,485 --> 00:24:15,566
oh, where's this song going?

282
00:24:16,607 --> 00:24:18,529
So I'll play our track here.

283
00:24:18,549 --> 00:24:22,873
playing in fast-paced rhythm

284
00:24:22,893 --> 00:24:23,714
This is stable.

285
00:24:25,215 --> 00:24:27,197
The more you repeat it, the more stable it becomes.

286
00:24:34,465 --> 00:24:37,827
So we can also assign a scale for each chord.

287
00:24:37,847 --> 00:24:45,251
In this case, we use the Scenics Lydian scale.

288
00:24:46,472 --> 00:24:49,214
It sounds like this.

289
00:25:05,558 --> 00:25:09,100
And then we switch to the C sharp Mixolydian scale, which sounds like this.

290
00:25:13,563 --> 00:25:18,146
And we encode these directly as markers in the music track in FMOD.

291
00:25:18,726 --> 00:25:23,209
And they're notated as a root note followed by the intervals between the notes in the

292
00:25:23,249 --> 00:25:23,550
scale.

293
00:25:24,190 --> 00:25:29,874
So we have scale starts on C, then we skip one, two, one, two, just one.

294
00:25:34,919 --> 00:25:37,140
1, 2, 1, 2, 1 again. And that gives us C 2, 2, 1, 2, 2, 1.

295
00:25:40,021 --> 00:25:42,582
And this allows flexibility in changing the scales later

296
00:25:43,163 --> 00:25:46,384
since the backing track hadn't been finalized by the sound team when I was

297
00:25:46,424 --> 00:25:50,125
working on the interaction. And an example of this is switching to

298
00:25:50,165 --> 00:25:54,087
C sharp just one step up is only one character

299
00:25:54,347 --> 00:25:56,047
change in in the marker.

300
00:25:58,548 --> 00:26:00,209
So let's check this out in context.

301
00:26:09,835 --> 00:26:11,716
You can see we're stable here.

302
00:26:11,736 --> 00:26:14,498
Now we've gone up to C sharp.

303
00:26:37,020 --> 00:26:42,284
Eventually we kind of build up this whole cityscape and the human character will join you.

304
00:26:43,165 --> 00:26:46,468
So at this point the players kind of gain the respect of the bassist

305
00:26:47,008 --> 00:26:50,591
and I was trying to figure out a good way to represent this through gameplay.

306
00:26:52,713 --> 00:26:57,416
And around this time I had heard Ornette Coleman's Free Jazz, a collective improvisation.

307
00:26:58,882 --> 00:27:04,426
Which is an album by Ornette Coleman where he has one quartet playing in the left side of the speaker

308
00:27:04,646 --> 00:27:06,948
and another quartet playing in the right side of the speaker.

309
00:27:07,588 --> 00:27:10,771
And they're all kind of playing collectively.

310
00:27:11,311 --> 00:27:14,854
And I was really inspired by this conversational nature of this playing.

311
00:27:15,154 --> 00:27:19,737
Kind of sounds like a big discussion with their sharing musical ideas, talking back and forth.

312
00:27:20,878 --> 00:27:21,599
And I'll play some here.

313
00:27:30,379 --> 00:27:34,280
You can hear different instruments playing all together, kind of improvising together,

314
00:27:34,420 --> 00:27:39,242
like a big kind of shouting match. And this seemed like a perfect way of communicating

315
00:27:39,282 --> 00:27:43,083
that the player has gained an understanding of human creativity from this music character.

316
00:27:44,363 --> 00:27:48,705
But now we're back here again. How do we make the computer respond to the player's inputs

317
00:27:50,405 --> 00:27:55,967
without machine learning again? But we've learned a lot, so maybe we can implement this kind of

318
00:27:56,027 --> 00:27:57,447
conversational duet idea.

319
00:27:58,559 --> 00:28:00,459
in a simple and easy way the first time,

320
00:28:00,519 --> 00:28:04,341
instead of trying some stupid stuff for an entire day.

321
00:28:05,842 --> 00:28:07,742
So let's look at the data that we have.

322
00:28:09,183 --> 00:28:12,304
We store the player's inputs as geometric paths in space,

323
00:28:12,544 --> 00:28:13,685
which are stored as splines,

324
00:28:13,945 --> 00:28:16,446
and we can imagine those splines in a box

325
00:28:16,646 --> 00:28:19,107
where the height corresponds to pitch.

326
00:28:19,907 --> 00:28:21,628
And we store one point per frame,

327
00:28:22,388 --> 00:28:24,029
and we store both the position of the point

328
00:28:24,289 --> 00:28:26,370
and the time since the last point was added.

329
00:28:27,327 --> 00:28:30,928
This allows us to replay the player's inputs both in space and in time.

330
00:28:31,809 --> 00:28:37,171
So we started by kind of randomly chopping up the player's input paths into slices and replaying them.

331
00:28:37,731 --> 00:28:42,553
But the problem here was that if the path was too long, it could pick stuff from many seconds earlier,

332
00:28:42,693 --> 00:28:44,914
and the player would have entirely forgotten that they played it,

333
00:28:45,434 --> 00:28:48,996
which would lead to a disconnect in what the computer was doing.

334
00:28:50,235 --> 00:28:54,298
So a better solution we found was to only slice the last two to five seconds of the

335
00:28:54,338 --> 00:28:58,742
player's inputs to keep what the computer played relevant.

336
00:28:59,242 --> 00:29:03,746
So as the player draws their path, segments are replayed from the latest path data.

337
00:29:04,186 --> 00:29:07,809
But this is kind of generating reiterations of the player's inputs.

338
00:29:07,889 --> 00:29:11,372
What we wanted was the computer to be a bit more creative with responding to the player.

339
00:29:12,307 --> 00:29:15,608
So, since the player's solo is just geometric data,

340
00:29:16,008 --> 00:29:20,289
we generate variations using normal geometric transformations.

341
00:29:20,949 --> 00:29:23,409
We can move the curve up or down to shift the pitch.

342
00:29:24,249 --> 00:29:27,330
We can scale it to increase the variance in the pitch.

343
00:29:28,850 --> 00:29:31,711
And rotation looks kind of weird in this context,

344
00:29:31,931 --> 00:29:33,391
but if it's just a small segment,

345
00:29:33,771 --> 00:29:35,172
the notes will kind of start out the same

346
00:29:35,372 --> 00:29:36,412
and then gradually diverge,

347
00:29:36,632 --> 00:29:38,392
which you can see in this looping section here.

348
00:29:39,858 --> 00:29:44,180
So if we combine this idea with our smarter path selection, it looks like this.

349
00:29:45,921 --> 00:29:50,624
To add a sense of progression, we can increase the variance in these transforms, how much

350
00:29:50,724 --> 00:29:54,186
they randomize, the longer the player plays with the interaction.

351
00:29:54,847 --> 00:29:59,149
And we can also move these points around in the X and Y axes to have some more visual

352
00:29:59,209 --> 00:30:02,191
separation without affecting the pitch.

353
00:30:02,211 --> 00:30:04,952
So let's check this out in action.

354
00:31:10,612 --> 00:31:14,855
So this geometric approach works really well because it always maintains the player's timing

355
00:31:14,895 --> 00:31:18,697
and rhythm, where if you play short lines, the computer will play short lines.

356
00:31:19,298 --> 00:31:22,840
If you play longer held notes, the computer will play longer held notes.

357
00:31:24,922 --> 00:31:28,004
And while the pitch is changed, the feeling is maintained.

358
00:31:28,664 --> 00:31:32,767
And at some point, this kind of all stops mattering anyway, and the player is just kind

359
00:31:32,787 --> 00:31:33,888
of vibing in this moment.

360
00:31:37,233 --> 00:31:40,935
So the last important thing we do is that we don't take this interaction away.

361
00:31:41,595 --> 00:31:45,297
One of our core design principles was to never take away the player's toys.

362
00:31:46,478 --> 00:31:53,061
If we have something fun that they're playing with, we don't want to have them accidentally click something that will take this moment away.

363
00:31:53,702 --> 00:31:59,725
So the trigger to proceed here is this train where dragging it to the right will progress the story.

364
00:32:00,245 --> 00:32:04,147
And we indicate that it will do this by gradually fading in the ending chord to the song.

365
00:32:04,767 --> 00:32:06,869
And also these city sounds as the train is dragged.

366
00:32:07,390 --> 00:32:09,952
This tells the player that if they keep dragging, the interaction will end.

367
00:32:10,653 --> 00:32:14,015
And this avoids that situation of the player clicking something by mistake

368
00:32:14,416 --> 00:32:15,737
when they don't want to continue yet.

369
00:32:34,078 --> 00:32:39,460
So with all this in mind, let's watch the whole interaction from the beginning and I'll shut up.

370
00:33:03,934 --> 00:33:09,539
What screen are you looking at?

371
00:33:10,720 --> 00:33:11,201
Top right corner.

372
00:33:11,281 --> 00:33:11,741
The Ancients

373
00:33:11,861 --> 00:33:12,262
Mercedes-Benz

374
00:33:12,282 --> 00:33:12,362
PS4

375
00:33:12,382 --> 00:33:12,822
Adidas

376
00:33:12,883 --> 00:33:13,143
Porsche

377
00:33:13,163 --> 00:33:13,703
Volkswagen

378
00:33:13,863 --> 00:33:14,384
Hyundai

379
00:33:14,444 --> 00:33:15,385
Ferrari

380
00:33:15,405 --> 00:33:18,028
Nissan

381
00:33:18,288 --> 00:33:19,389
Nissan

382
00:34:08,257 --> 00:34:08,538
(*donk*)

383
00:34:08,938 --> 00:34:09,238
(*donk*)

384
00:34:09,658 --> 00:34:09,958
(*donk*)

385
00:36:02,942 --> 00:36:04,044
Shh.

386
00:37:34,981 --> 00:37:37,943
So, I'll end with showing some feedback from some players.

387
00:37:39,203 --> 00:37:43,665
We had released the Jazz Level as a demo pretty early on in development.

388
00:37:44,265 --> 00:37:48,409
And one of the functionalities of the demo was an email feedback form.

389
00:37:49,450 --> 00:37:52,012
So it was really cool to see people enjoying the interaction.

390
00:37:52,192 --> 00:37:57,457
But some of the coolest messages we got were from educators who were inspired by what we'd made.

391
00:37:58,278 --> 00:38:03,003
And I can't find it, but we did get an email from a teacher asking if we could add some features

392
00:38:03,623 --> 00:38:05,645
so they could use the interaction for teaching their students.

393
00:38:06,871 --> 00:38:13,055
Stuff like being able to jump to any part of the three stages of the interaction and stuff like that,

394
00:38:13,436 --> 00:38:15,717
which I think is something that we'll add in a future update.

395
00:38:16,658 --> 00:38:21,402
But this really kind of highlights the potential of making a game not just with a jazz soundtrack,

396
00:38:21,442 --> 00:38:23,903
but making it about playing jazz music.

397
00:38:24,784 --> 00:38:28,767
And I feel like this similar kind of concept could apply to any other kind of music as well.

398
00:38:30,648 --> 00:38:32,029
So I'll conclude with...

399
00:38:33,074 --> 00:38:39,096
Thanking huge thanks to Skillbar, our music and sound design team, for being just outstanding

400
00:38:39,136 --> 00:38:42,757
partners in providing me with so many good sounds and ideas for the interaction.

401
00:38:43,397 --> 00:38:44,978
I can't imagine building this without them.

402
00:38:46,418 --> 00:38:48,779
So thanks, thanks for checking out the talk.

403
00:38:49,199 --> 00:38:52,040
You can find more about the game at genesisnoirgame.com.

404
00:38:53,159 --> 00:38:56,403
It's on Steam for Windows and Mac, Xbox and Switch.

405
00:38:57,244 --> 00:39:04,151
You can reach me at jeremy.ferrocatden.com at my email address or on Twitter as jablesjables.

406
00:39:05,152 --> 00:39:06,373
So thanks again and take care.

407
00:39:06,754 --> 00:39:06,974
Bye.

