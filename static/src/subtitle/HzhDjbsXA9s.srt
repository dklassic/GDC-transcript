1
00:00:07,446 --> 00:00:14,210
So, hi everyone. Thank you to everyone for coming out today. We'll start off with a brief introduction about ourselves.

2
00:00:15,291 --> 00:00:23,676
My name is Alicia Leidecker. I've been working as a programmer for a little over 10 years now and I joined Ubisoft a little over 4 years ago.

3
00:00:24,977 --> 00:00:35,263
At Ubisoft I've been working as an AI and behavior programmer and I joined the Assassin's Creed team starting with Assassin's Creed 2 and now most recently on Assassin's Creed Brotherhood.

4
00:00:36,522 --> 00:00:42,725
On those two titles, I was responsible for working on the new behaviors that were needed for the games,

5
00:00:42,885 --> 00:00:48,768
and I also helped develop our data-driven behavior systems and some of the animation tools that we'll be discussing today.

6
00:00:50,028 --> 00:00:55,791
Hi, my name is Nicolas Barbeau, and I was part of the core team in animation for Assassin's Creed Brotherhood.

7
00:00:56,371 --> 00:01:01,674
I also worked on AC2 for NPCs and main character behaviors.

8
00:01:03,135 --> 00:01:03,735
I worked at

9
00:01:04,962 --> 00:01:08,284
refining the navigation system, simplifying the navigation

10
00:01:08,344 --> 00:01:11,285
systems for NPCs and the reaction system also.

11
00:01:12,786 --> 00:01:16,208
So today, we're going to focus this presentation on what

12
00:01:16,248 --> 00:01:17,208
we call crowd life.

13
00:01:18,489 --> 00:01:20,710
We define crowd life as being the characters that

14
00:01:20,770 --> 00:01:22,411
make the world of Assassin's Creed

15
00:01:22,791 --> 00:01:24,031
a living and breathing world.

16
00:01:25,912 --> 00:01:27,973
Creating, evolving, and changing crowd life

17
00:01:28,754 --> 00:01:31,935
brought a few challenges in this short period of time

18
00:01:32,455 --> 00:01:33,396
that was our production.

19
00:01:34,281 --> 00:01:42,024
Challenges in animation with a never growing number of animations to do in less time with limited budget.

20
00:01:43,785 --> 00:01:47,446
It's also challenges in programming as we were confronted to these issues.

21
00:01:48,046 --> 00:01:54,408
We needed to find solutions that give us the best results with as little maintenance as possible.

22
00:01:55,052 --> 00:01:58,817
So we're going to show you some tools that we developed

23
00:01:59,117 --> 00:02:00,419
and how we use them in production.

24
00:02:00,779 --> 00:02:02,442
Then we'll open things up for questions.

25
00:02:02,922 --> 00:02:05,506
Alicia will continue to talk about our pipeline.

26
00:02:06,780 --> 00:02:09,540
So, before actually getting into anything related

27
00:02:09,600 --> 00:02:11,261
to the crowds on Assassins,

28
00:02:11,661 --> 00:02:14,542
we first wanted to talk about our AI team structure.

29
00:02:14,702 --> 00:02:18,523
So, first show of hands who actually is in AI or gameplay.

30
00:02:19,063 --> 00:02:21,924
Okay, good, this is rather relevant then.

31
00:02:21,984 --> 00:02:25,485
So, why are we talking about the AI team structure?

32
00:02:25,565 --> 00:02:28,706
How is this relevant to the crowds and the animation tools?

33
00:02:29,317 --> 00:02:39,142
Well, it's a couple of reasons. First, the animation tools that we're going to be discussing today really ended up playing an important role for how our teams work together.

34
00:02:39,162 --> 00:02:46,165
The tools we ended up developing allowed all of our AI teams to create much more content and in less time.

35
00:02:47,446 --> 00:02:52,728
Another reason is because the AI team structure on Assassins I find is really unique.

36
00:02:53,777 --> 00:03:00,362
On previous projects I had worked on in the past, we usually had one team that was dedicated to just AI and one that was for gameplay.

37
00:03:01,283 --> 00:03:04,005
But on Assassin's, we did things sort of differently.

38
00:03:05,326 --> 00:03:12,332
On Assassin's Creed Brotherhood, we had 24 programmers and eight animators that were all assigned to this global AI team.

39
00:03:12,932 --> 00:03:17,576
So with the number of people that we were, we really had to make this cohesive structure to the team.

40
00:03:19,270 --> 00:03:28,518
The goal of what we wanted to improve upon from Assassin's Creed 2 to Assassin's Creed Brotherhood really dictated how we divided up our AI team.

41
00:03:29,438 --> 00:03:33,722
So we broke the team up into five multidisciplinary sub-teams.

42
00:03:34,483 --> 00:03:39,227
Each team had their own team lead to manage the features and responsibilities of that team.

43
00:03:39,867 --> 00:03:45,051
So we had our core AI team, missions, behavior, fight, and the crowd team.

44
00:03:45,798 --> 00:03:55,263
So I'm going to explain briefly what each team does, give some in-game examples of what they would have worked on, and talk a bit about how the teams actually interacted together.

45
00:03:57,044 --> 00:04:04,047
So first up, we have our core AI team. This team basically deals with anything that's much more low-level AI.

46
00:04:04,888 --> 00:04:10,551
They'll work on the core mechanics that are required by the other core AI programming teams.

47
00:04:11,164 --> 00:04:15,048
Some examples of what they work on in-game is how our spawning strategy works.

48
00:04:15,988 --> 00:04:18,991
They developed our save systems and our replay systems.

49
00:04:20,833 --> 00:04:22,974
Next up, we have our AI Missions team.

50
00:04:23,715 --> 00:04:28,639
This team supports any programming needs that are required by our mission designers.

51
00:04:29,440 --> 00:04:33,604
So, if new gameplay features are required that are specific to a mission,

52
00:04:33,624 --> 00:04:35,185
then this team will develop it.

53
00:04:35,919 --> 00:04:43,384
So, for example, in Assassin's Creed Brotherhood, we had one of our exotic gameplay missions which involved using cannons.

54
00:04:44,045 --> 00:04:48,007
So the mission team was responsible for developing the gameplay for that mission.

55
00:04:49,168 --> 00:04:53,471
The mission team works very closely with the behavior team for any animation needs.

56
00:04:54,912 --> 00:04:56,273
So, the behavior team.

57
00:04:56,814 --> 00:05:02,118
This is the team that Nick and myself have worked on for Assassin's Creed 2 and Assassin's Creed Brotherhood.

58
00:05:02,852 --> 00:05:11,917
So I first want to address the question of what is a behavior and what a behavior means to us on assassins because we treat it sort of differently.

59
00:05:12,698 --> 00:05:19,802
Typically you would think of a behavior as for an NPC as something that could be broken down into three major steps.

60
00:05:20,422 --> 00:05:24,505
There's the navigation of the NPC to get that NPC from point A to point B.

61
00:05:25,280 --> 00:05:29,183
There's the AI decision logic of what that NPC should be doing.

62
00:05:29,483 --> 00:05:32,225
And then there's the physical states, the actions,

63
00:05:32,325 --> 00:05:34,226
the animations for that character.

64
00:05:34,986 --> 00:05:39,009
So on Assassins, we broke these tasks up between two teams.

65
00:05:39,889 --> 00:05:41,850
The behavior team deals with anything

66
00:05:41,890 --> 00:05:45,032
related to the physical actions and anything

67
00:05:45,072 --> 00:05:47,174
related to the animations of a character,

68
00:05:47,954 --> 00:05:50,095
whereas the navigation and decision logic

69
00:05:50,256 --> 00:05:51,776
is really handled by our crowd team.

70
00:05:53,195 --> 00:05:57,999
The behavior team is made up of behavior programmers like myself and animators.

71
00:05:58,719 --> 00:06:08,468
So having the physical actions, the states, the animations being handled by the behavior team really allows us to monitor what's being put in.

72
00:06:09,028 --> 00:06:14,193
The animators work very closely with the programmers and each time a new behavior has to be developed,

73
00:06:14,873 --> 00:06:20,778
the animator gets to make sure that the level of the quality for the animations are very high.

74
00:06:21,338 --> 00:06:27,659
So we're working very closely and our goal is to create high-level, high-quality animations.

75
00:06:28,859 --> 00:06:34,420
The crowd team, they're much more high-level and their focus is not at all on the animations or

76
00:06:34,440 --> 00:06:41,301
the behaviors. Their responsibility is to create working NPC AI, whereas the behavior team focuses

77
00:06:41,461 --> 00:06:46,722
on the animations. So again, it really helped us to break down the tasks and share the

78
00:06:46,762 --> 00:06:48,743
responsibilities between the teams.

79
00:06:50,610 --> 00:06:53,551
I would say that the behavior team deals with three main things.

80
00:06:54,191 --> 00:06:59,674
The physical state of a character, anything that's related to the main player, and any

81
00:06:59,734 --> 00:07:01,175
gameplay animation needs.

82
00:07:01,835 --> 00:07:06,637
So some examples that we would see in game is behavior team deals with the three Cs,

83
00:07:06,877 --> 00:07:09,318
the character, the camera, and the controls.

84
00:07:13,782 --> 00:07:18,466
We also develop the crowd progression and we've developed any of the abilities that

85
00:07:18,486 --> 00:07:24,011
the characters can do, such as our free-run parkour in Assassin's, the ability for characters

86
00:07:24,071 --> 00:07:26,453
to climb, or riding the horse.

87
00:07:27,534 --> 00:07:30,357
The one part that we don't deal with is the fight system.

88
00:07:31,178 --> 00:07:32,279
We have a separate team for this.

89
00:07:33,240 --> 00:07:35,702
The fight team is really a self-contained team.

90
00:07:36,456 --> 00:07:39,957
It's basically a mix of NPC AI programmers,

91
00:07:40,257 --> 00:07:42,518
behavior programmers, and animators.

92
00:07:42,678 --> 00:07:44,938
But they deal strictly with the fight.

93
00:07:45,559 --> 00:07:47,399
So they'll develop the behaviors,

94
00:07:47,459 --> 00:07:49,600
they'll work on the controls for the main player

95
00:07:50,160 --> 00:07:52,180
related to the fight, and they'll also

96
00:07:52,220 --> 00:07:55,841
develop the enemy AI, again, just for what happens

97
00:07:55,882 --> 00:07:56,982
during fight sequences.

98
00:07:58,302 --> 00:08:00,703
And finally, we have our AI crowd team.

99
00:08:01,643 --> 00:08:04,704
This is the largest of all of our AI teams.

100
00:08:05,275 --> 00:08:07,696
The team basically has two main responsibilities.

101
00:08:08,696 --> 00:08:12,317
They deal with the AI logic for the NPCs that we discussed.

102
00:08:12,337 --> 00:08:14,977
And they also handle our gameplay systems.

103
00:08:15,437 --> 00:08:18,238
So for example, they develop our economic system.

104
00:08:18,918 --> 00:08:21,819
In Brotherhood, they developed our Rome upgrade system,

105
00:08:22,259 --> 00:08:26,280
where you were able to renovate certain districts of Rome.

106
00:08:26,360 --> 00:08:28,120
And you really get to see the ambience

107
00:08:28,200 --> 00:08:30,681
of having a poor district that becomes

108
00:08:30,881 --> 00:08:32,381
a rich and lively district.

109
00:08:33,637 --> 00:08:35,719
They also developed our Assassin's Guild,

110
00:08:35,959 --> 00:08:38,520
where you were able to train assassins,

111
00:08:38,640 --> 00:08:42,462
send them on missions, and have them to fight alongside you

112
00:08:42,822 --> 00:08:43,863
during fight sequences.

113
00:08:45,163 --> 00:08:48,785
Other examples is our reaction system and NPC AI.

114
00:08:50,266 --> 00:08:52,887
So that pretty much sums up our AI team structure

115
00:08:53,128 --> 00:08:54,388
on Assassin's Creed Brotherhood.

116
00:08:55,129 --> 00:08:58,030
The structure really allowed us to give clear ownership

117
00:08:58,590 --> 00:09:00,752
while still encouraging communication

118
00:09:00,812 --> 00:09:01,812
between the teams.

119
00:09:02,485 --> 00:09:05,766
So we're going to keep referring back to these five AI teams

120
00:09:05,846 --> 00:09:08,127
throughout the presentation and give examples

121
00:09:08,548 --> 00:09:12,810
of how the animation tools really helped everyone's lives

122
00:09:12,970 --> 00:09:15,971
and everyone was able to create more content in less time.

123
00:09:17,772 --> 00:09:21,213
So now to talk about the actual crowds in Assassin's Creed.

124
00:09:22,094 --> 00:09:24,375
I'll give a quick overview about how

125
00:09:24,435 --> 00:09:27,276
the crowds have progressed over the last three Assassin's Creed

126
00:09:27,316 --> 00:09:27,696
titles.

127
00:09:28,597 --> 00:09:30,398
First up on Assassin's Creed 1.

128
00:09:31,257 --> 00:09:34,538
The big thing for us was just the concept of having crowds

129
00:09:35,019 --> 00:09:37,900
and getting this dense group of NPCs

130
00:09:37,960 --> 00:09:39,701
that were navigating throughout the cities.

131
00:09:40,362 --> 00:09:42,423
Our focus here was really on the technology

132
00:09:42,503 --> 00:09:44,184
to create an open world game.

133
00:09:45,524 --> 00:09:46,325
On Assassin's Creed 2,

134
00:09:47,105 --> 00:09:48,726
we wanted to start pushing this further.

135
00:09:49,927 --> 00:09:52,908
AC1 was really about the tech for having crowds,

136
00:09:53,369 --> 00:09:56,070
but on AC2, we wanted to start finding ways

137
00:09:56,150 --> 00:09:59,392
to break the zombie roboticness of the crowd.

138
00:10:00,026 --> 00:10:04,469
So that's where we came up with this idea of static crowd life that we could use in the world.

139
00:10:05,229 --> 00:10:08,991
So for example, in Assassin's Creed 2, we had our carnival scene.

140
00:10:09,592 --> 00:10:16,256
Here we had people that were dancing together, they were socializing, we had flamethrowers, we had acrobatics.

141
00:10:16,636 --> 00:10:19,238
So we did all of this using our crowd life system.

142
00:10:19,658 --> 00:10:24,401
But we really used crowd life in Assassin's Creed 2 to create these memorable moments.

143
00:10:25,682 --> 00:10:28,662
On Assassin's Creed Brotherhood, we

144
00:10:28,702 --> 00:10:30,883
wanted to start pushing the concept of crowd life

145
00:10:30,963 --> 00:10:31,643
even further.

146
00:10:32,103 --> 00:10:34,843
We wanted to use crowd life everywhere in the world,

147
00:10:35,184 --> 00:10:36,984
and not just for memorable moments.

148
00:10:38,344 --> 00:10:40,245
Nick is going to discuss some of the challenges

149
00:10:40,305 --> 00:10:43,845
we had with this new mandate of creating way more crowd life

150
00:10:43,885 --> 00:10:46,106
content in just a 10-month period.

151
00:10:47,646 --> 00:10:51,487
So design choices were made to push the crowd as far as

152
00:10:51,547 --> 00:10:51,847
possible.

153
00:10:53,195 --> 00:10:56,617
to actually reflect the state of the world you're playing in.

154
00:10:57,417 --> 00:10:59,438
So to create a more believable crowd,

155
00:10:59,878 --> 00:11:02,259
first we wanted missions and reactions

156
00:11:02,759 --> 00:11:05,681
to be as polished as possible, to really

157
00:11:05,721 --> 00:11:08,002
have their own specific sets of animations.

158
00:11:09,522 --> 00:11:11,063
For example, we had a mission where

159
00:11:11,143 --> 00:11:13,044
Courtesan is being poisoned.

160
00:11:13,084 --> 00:11:14,104
This is a side mission.

161
00:11:14,164 --> 00:11:15,325
It's not part of the main path.

162
00:11:15,385 --> 00:11:18,046
But we really wanted her to have a specific walk

163
00:11:18,086 --> 00:11:19,307
cycle in idle animation.

164
00:11:19,907 --> 00:11:21,467
This is what makes it believable.

165
00:11:21,507 --> 00:11:22,208
So that's what.

166
00:11:23,022 --> 00:11:24,883
one of the things we really wanted to achieve.

167
00:11:26,244 --> 00:11:29,227
Also, we wanted NPCs to be different,

168
00:11:29,447 --> 00:11:31,028
depending if it's day or night.

169
00:11:31,508 --> 00:11:33,470
So we really wanted our day and night cycle

170
00:11:33,550 --> 00:11:36,693
to be much more than just a shader and light change.

171
00:11:37,894 --> 00:11:40,936
So we'd have characters that go from being

172
00:11:41,016 --> 00:11:43,258
an old man during the day, and during the night,

173
00:11:43,298 --> 00:11:44,959
you'd have a drunkard walking the streets.

174
00:11:45,239 --> 00:11:46,781
Or a man reading a book would switch

175
00:11:46,821 --> 00:11:51,064
into somebody lighting his way with a lantern, for example.

176
00:11:52,209 --> 00:11:54,991
And finally, we wanted to illustrate the renovation

177
00:11:55,471 --> 00:11:58,312
and the liberation of Rome through our crowd life.

178
00:11:59,133 --> 00:12:02,555
So the crowd would go, you would see in the animation

179
00:12:02,595 --> 00:12:04,536
that the crowd would go from oppressed to free.

180
00:12:04,816 --> 00:12:07,678
It would go from poor and begging to rich and working.

181
00:12:09,799 --> 00:12:12,440
And all of that considering the day and night cycle, of course.

182
00:12:12,961 --> 00:12:14,181
So it's a multiplier.

183
00:12:15,102 --> 00:12:16,482
So what does it all add to?

184
00:12:16,522 --> 00:12:20,144
It adds to creating three times more crowd life than in AC2.

185
00:12:20,948 --> 00:12:22,189
but with only 10 months.

186
00:12:22,629 --> 00:12:24,630
So we need to find solutions.

187
00:12:24,670 --> 00:12:26,351
We need to make this game differently.

188
00:12:26,391 --> 00:12:28,613
So Alicia is going to continue about the tools.

189
00:12:28,633 --> 00:12:31,514
So yeah, new mandate thing.

190
00:12:31,554 --> 00:12:34,176
We had to create tons of new Crowdlife content

191
00:12:34,256 --> 00:12:35,176
in just 10 months.

192
00:12:35,276 --> 00:12:38,298
And honestly, it scared us.

193
00:12:38,318 --> 00:12:42,540
One, we couldn't use our old tools from Assassin's Creed 2.

194
00:12:43,420 --> 00:12:45,401
Whenever we wanted to create a new Crowdlife,

195
00:12:46,222 --> 00:12:49,023
that character state had to be individually scripted.

196
00:12:49,592 --> 00:12:52,233
It took up a lot of time from our level designers,

197
00:12:52,373 --> 00:12:54,613
and our animators had very little control

198
00:12:54,793 --> 00:12:57,654
for creating these new crowd-like characters and states.

199
00:12:58,495 --> 00:13:01,056
And now we were told that we had three times the amount of content

200
00:13:01,076 --> 00:13:03,256
to make, so the option of scripting everything

201
00:13:03,296 --> 00:13:05,177
was completely out of the question for us.

202
00:13:06,357 --> 00:13:08,478
The next big issue that we had was

203
00:13:08,498 --> 00:13:11,859
how our behaviors were being developed up until that point.

204
00:13:12,219 --> 00:13:14,720
Because to us, it seemed like a logical decision

205
00:13:14,800 --> 00:13:16,821
to have the crowd life be developed

206
00:13:16,861 --> 00:13:18,282
in the framework of a behavior.

207
00:13:18,678 --> 00:13:21,279
Because then the responsibility would fall on our team,

208
00:13:21,640 --> 00:13:23,801
and the animators would have much more control.

209
00:13:24,881 --> 00:13:26,602
But there's an important thing to explain

210
00:13:26,642 --> 00:13:29,564
about how our behavior systems were being developed up

211
00:13:29,624 --> 00:13:30,404
until that point.

212
00:13:31,325 --> 00:13:34,727
Each and every behavior is very programmer-centric on Assassin.

213
00:13:35,227 --> 00:13:37,288
So when a new behavior has to be developed,

214
00:13:37,629 --> 00:13:39,350
it's the programmer's responsibility

215
00:13:39,430 --> 00:13:40,930
to create the new behavior states,

216
00:13:41,311 --> 00:13:42,811
to hook everything up into the code.

217
00:13:44,193 --> 00:13:52,018
When new animations have to be integrated, again, for us, it was the programmer's responsibility to hook all of this up into the code.

218
00:13:52,658 --> 00:13:59,042
So, it seemed like using the behaviors for the crowd life was going to be just as problematic.

219
00:13:59,849 --> 00:14:03,810
So we had this little animator versus programmer moment

220
00:14:03,991 --> 00:14:05,931
at the end of AC2 and on Brotherhood,

221
00:14:06,312 --> 00:14:09,653
where the animators basically came threatening and told us

222
00:14:09,693 --> 00:14:12,195
that if we didn't come up with some new type of tools

223
00:14:12,255 --> 00:14:14,135
to be used on the behaviors, well, there

224
00:14:14,175 --> 00:14:16,497
was no way we were going to be able to accomplish

225
00:14:16,537 --> 00:14:17,477
what we wanted to do.

226
00:14:18,538 --> 00:14:19,998
So that's where the idea of starting

227
00:14:20,018 --> 00:14:22,520
to create these simple, lightweight, data-driven

228
00:14:22,560 --> 00:14:24,020
behavior systems came from.

229
00:14:25,687 --> 00:14:28,108
So obviously, pre-R data, everyone

230
00:14:28,148 --> 00:14:30,609
would be very happy with this.

231
00:14:30,849 --> 00:14:31,869
It would benefit everyone.

232
00:14:31,889 --> 00:14:34,570
Animators would have much more control

233
00:14:34,610 --> 00:14:36,790
to create simple behaviors on the fly.

234
00:14:37,610 --> 00:14:41,191
It would take off a lot of the dependency from the programmers

235
00:14:41,411 --> 00:14:42,512
and the level designers.

236
00:14:43,332 --> 00:14:46,553
So I'll talk briefly about the data-driven behaviors

237
00:14:46,593 --> 00:14:47,253
that we developed.

238
00:14:47,413 --> 00:14:49,194
And at the heart of this tech, it's

239
00:14:49,234 --> 00:14:50,894
something that we call the custom actions.

240
00:14:52,634 --> 00:14:55,056
So first off, what is a custom action?

241
00:14:55,436 --> 00:14:57,838
In its simplest sense, the custom action data

242
00:14:58,038 --> 00:15:01,502
is used to play a set of animations on any entity.

243
00:15:02,222 --> 00:15:03,103
It's pretty simple.

244
00:15:04,144 --> 00:15:07,527
The custom actions is an object that serves as a container.

245
00:15:08,048 --> 00:15:12,472
It's a lightweight object that interacts with all of our underlying behavior systems.

246
00:15:13,232 --> 00:15:20,158
So, if I wanted 100, 120 of our NPCs to be fully controlled using the custom action technology,

247
00:15:20,578 --> 00:15:25,403
we could do that because it's really just a wrapper layer to our existing behavior structure.

248
00:15:26,223 --> 00:15:30,667
We didn't want and we didn't have time to start doing major changes to our animation system.

249
00:15:31,262 --> 00:15:33,763
We didn't want to start using heavy external third party

250
00:15:33,843 --> 00:15:36,484
utilities, so we really opted for developing

251
00:15:36,524 --> 00:15:38,745
a bunch of this in-house tech ourselves

252
00:15:39,005 --> 00:15:40,365
in a very short period of time.

253
00:15:41,826 --> 00:15:44,067
The custom actions basically just

254
00:15:44,087 --> 00:15:47,208
can contain a set of animations with a whole slew

255
00:15:47,228 --> 00:15:50,490
of parameters for how it should interact with our behavior

256
00:15:50,550 --> 00:15:50,870
system.

257
00:15:51,410 --> 00:15:53,171
So we started working together to see

258
00:15:53,311 --> 00:15:55,572
what type of parameters the animators wanted

259
00:15:55,592 --> 00:15:56,392
to have access to.

260
00:15:57,349 --> 00:16:00,612
So I'm going to explain some of the parameters, show some examples.

261
00:16:00,632 --> 00:16:07,398
We'll start off with the really simple ones and then get into some more interesting parameters that we could do with our custom actions.

262
00:16:08,258 --> 00:16:12,242
So first up, obviously, the animators wanted to have access to the different body parts.

263
00:16:13,063 --> 00:16:19,708
In the custom action, can we play the animation on the full body, upper body, two arms, one arm, anything?

264
00:16:20,429 --> 00:16:22,931
The second option was body part transferring.

265
00:16:23,547 --> 00:16:28,470
What this is, is say for example, you have an animation that starts playing on an NPC,

266
00:16:28,930 --> 00:16:30,271
and it's a full body animation.

267
00:16:31,032 --> 00:16:33,513
But then that NPC gets a command to start moving.

268
00:16:34,194 --> 00:16:38,717
The animators wanted to have access to specifying what should happen at that point.

269
00:16:39,297 --> 00:16:43,280
Should my animation just blend out and let them go into a basic movement cycle?

270
00:16:43,920 --> 00:16:46,422
Or do I want that animation to continue to play?

271
00:16:46,972 --> 00:16:50,033
Maybe I want that animation to get propagated to my upper body.

272
00:16:50,293 --> 00:16:51,893
Or maybe I just want it to get propagated

273
00:16:51,953 --> 00:16:53,094
to my right arm channel.

274
00:16:53,294 --> 00:16:55,074
So we exposed a bunch of these parameters

275
00:16:55,134 --> 00:16:57,795
for transferring full animations to different body parts.

276
00:16:59,295 --> 00:17:02,316
Other simple options that we had in the custom actions

277
00:17:02,376 --> 00:17:04,736
were, how do we handle transitions?

278
00:17:06,377 --> 00:17:08,537
Can we specify different types of look at?

279
00:17:08,717 --> 00:17:10,738
So while that animation is playing,

280
00:17:10,778 --> 00:17:13,478
do I want to activate just my eye look at, my head look at,

281
00:17:13,518 --> 00:17:14,638
or the upper body look at?

282
00:17:16,242 --> 00:17:18,502
Also, can that custom action be looped?

283
00:17:18,982 --> 00:17:20,183
Can I add variety?

284
00:17:20,223 --> 00:17:22,583
Can I have multiple animations and weight them?

285
00:17:22,923 --> 00:17:23,984
Maybe some of them are played at 90%

286
00:17:24,084 --> 00:17:26,084
and some of them are played at 10%.

287
00:17:26,704 --> 00:17:28,125
So I'll show a short example,

288
00:17:29,765 --> 00:17:32,786
the simplest example of just playing the custom actions

289
00:17:32,926 --> 00:17:34,906
with body parts and body part transferring.

290
00:17:36,407 --> 00:17:38,107
So here we see one of our courtesans,

291
00:17:38,207 --> 00:17:40,568
it's just custom actions being used on the upper body.

292
00:17:41,944 --> 00:17:45,085
Something the animators wanted with the custom actions

293
00:17:45,145 --> 00:17:49,007
was maybe the animation was actually flagged as a full body,

294
00:17:49,467 --> 00:17:52,808
but in the custom action, they could flag it to be upper body.

295
00:17:53,228 --> 00:17:54,749
And then they can make another custom action

296
00:17:54,769 --> 00:17:56,950
with that same animation to say that it's

297
00:17:57,090 --> 00:17:59,691
used on my two arm channel, because it

298
00:17:59,731 --> 00:18:01,912
looks much more fluid while a character starts

299
00:18:01,992 --> 00:18:02,893
jogging or running.

300
00:18:05,254 --> 00:18:07,995
Again, just a couple simple examples.

301
00:18:25,512 --> 00:18:29,195
The next interesting part to see is what we call the orientation settings.

302
00:18:30,076 --> 00:18:34,459
This is one of the features that we use very often with the custom actions.

303
00:18:35,120 --> 00:18:40,704
What this setting does is it automatically propagates a full body animation to the upper body,

304
00:18:40,844 --> 00:18:44,767
because we want to be using the lower body to orient towards a specific target.

305
00:18:45,688 --> 00:18:47,689
So there's two types of orientation settings.

306
00:18:48,450 --> 00:18:52,293
One is for when the NPC is idle and wants to orient towards a target.

307
00:18:53,119 --> 00:19:01,065
So, what we do is we propagate the animation to the upper body, and then the lower body plays a turn on spot behavior.

308
00:19:01,826 --> 00:19:07,390
So, say for example, you have in Assassin's Creed Brotherhood, you have a bunch of beggars that are in the streets.

309
00:19:07,911 --> 00:19:14,076
Here, we're going to play an upper body animation of begging, while the lower body keeps orienting towards a target.

310
00:19:14,656 --> 00:19:16,518
So, let's say our target is Ezio.

311
00:19:17,022 --> 00:19:23,705
When Ezio comes into range with the bager, he'll continuously keep orienting using either 180 degree turns, 90, 45,

312
00:19:24,525 --> 00:19:29,367
we'll blend between it so that we're continuously pointed towards that target.

313
00:19:30,548 --> 00:19:34,089
The second level of orientation is what we call the oriented moves.

314
00:19:34,970 --> 00:19:37,191
This is a separate movement system that we developed.

315
00:19:38,506 --> 00:19:42,729
If you take your default movement system, you're basically playing with one parameter,

316
00:19:42,789 --> 00:19:44,770
which is the direction I should be moving in.

317
00:19:45,270 --> 00:19:47,832
But in the case for the oriented move, you have two parameters.

318
00:19:48,212 --> 00:19:52,215
The direction I should be moving in, and the direction that my body should be oriented

319
00:19:52,235 --> 00:19:52,735
towards.

320
00:19:53,436 --> 00:19:57,458
So, this allows us to have examples where maybe characters are walking backwards, maybe

321
00:19:57,478 --> 00:20:02,421
they're strafing, and it's because their movement direction is in one way, but their look at

322
00:20:02,481 --> 00:20:03,442
target is in another.

323
00:20:03,970 --> 00:20:07,792
So I'll show a couple examples of the turn on spot and the oriented move.

324
00:20:12,454 --> 00:20:13,535
Can we put the sound on?

325
00:20:16,596 --> 00:20:23,780
This was one of our first test examples. We used the turn on spot a lot for our group minutes.

326
00:20:23,820 --> 00:20:27,842
So whenever you come into a range with thieves or courtesans,

327
00:20:28,223 --> 00:20:32,745
they'll have this dialogue upper body and they'll be oriented towards FQ.

328
00:20:34,381 --> 00:20:34,924
What am I being put through?

329
00:20:34,944 --> 00:20:35,025
Amen!

330
00:20:35,045 --> 00:20:35,125
Amen!

331
00:20:42,006 --> 00:20:46,871
Here with our audience in the movie, we started to see how Ezio can start moving in this 360 degree range.

332
00:20:46,911 --> 00:20:49,953
But we really used it a lot for our NPCs.

333
00:20:49,973 --> 00:20:56,079
Because let's say we had crowd NPCs when they were walking by us, we wanted them to acknowledge Ezio.

334
00:20:56,159 --> 00:21:00,683
In some cases, the animators wanted to be able to fly this and say,

335
00:21:00,843 --> 00:21:08,310
during this custom action, we want the character to continuously be oriented towards Ezio while they're walking in the street.

336
00:21:11,788 --> 00:21:15,370
Our next option is what we call the blended animation setups.

337
00:21:16,391 --> 00:21:17,971
Some of our custom actions are set up

338
00:21:18,091 --> 00:21:20,512
so that we can blend between a certain set of animations

339
00:21:20,552 --> 00:21:20,893
together.

340
00:21:21,613 --> 00:21:24,794
The previous example showed how an animation

341
00:21:24,834 --> 00:21:26,295
would be played on the upper body,

342
00:21:26,455 --> 00:21:29,376
and the lower body would be orienting towards a target.

343
00:21:29,817 --> 00:21:32,758
But sometimes we wanted the full body or just the upper body

344
00:21:33,118 --> 00:21:35,299
to blend between a certain set of animations

345
00:21:35,359 --> 00:21:36,600
to orient towards a target.

346
00:21:37,400 --> 00:21:39,741
So again, let's take the example of the beggar.

347
00:21:39,921 --> 00:21:41,802
This time, the beggar is sitting in the street,

348
00:21:41,882 --> 00:21:44,843
so I can't use a turn on spot behavior on his lower body.

349
00:21:45,363 --> 00:21:48,004
Here, what the animators did is, in the custom action,

350
00:21:48,144 --> 00:21:49,644
they just flagged the custom action

351
00:21:49,704 --> 00:21:51,264
as a three-way blended animation,

352
00:21:51,725 --> 00:21:53,185
and they set three animations.

353
00:21:53,365 --> 00:21:56,326
So you'll have your beggar who's blending in the front, one

354
00:21:56,366 --> 00:21:58,547
for the back right, and one for the back left.

355
00:21:59,187 --> 00:22:01,408
And whenever the target comes into range,

356
00:22:01,448 --> 00:22:05,269
we'll continuously keep blending between these animations

357
00:22:05,329 --> 00:22:06,389
to follow our target.

358
00:22:07,479 --> 00:22:09,600
So I'll show a couple examples here.

359
00:22:09,620 --> 00:22:15,762
This is what we used for our beggars.

360
00:22:15,842 --> 00:22:20,304
We ended up using this a lot just any type of crowd life where you wanted them to really

361
00:22:20,404 --> 00:22:27,066
interact with MCO as they walked by him.

362
00:22:27,106 --> 00:22:30,628
We used a couple of these pre-set blended animation packs

363
00:22:30,668 --> 00:22:33,269
so maybe characters would continuously keep waving.

364
00:22:34,911 --> 00:22:40,695
We had it where we could point, and it really allowed for a 360 degree range while it was

365
00:22:40,775 --> 00:22:43,777
blending between the animations.

366
00:22:43,897 --> 00:22:47,860
And for the case of the animators, they were able to do all of this, which looks like new

367
00:22:47,880 --> 00:22:52,563
behaviors we would have had to develop ourselves by the programmers, but they did it by just

368
00:22:52,683 --> 00:22:56,746
flagging one of the options in the custom actions and feeding a couple of animations.

369
00:22:58,928 --> 00:23:01,611
So finally, the last example is what we call the random look

370
00:23:01,651 --> 00:23:02,111
at target.

371
00:23:03,613 --> 00:23:05,335
For the previous examples, I kept

372
00:23:05,415 --> 00:23:08,699
mentioning orienting towards a specific target

373
00:23:08,839 --> 00:23:11,082
or orienting towards a specific direction.

374
00:23:11,582 --> 00:23:14,085
But in some cases, the animators wanted it

375
00:23:14,145 --> 00:23:16,167
to be done randomly or systemically.

376
00:23:17,709 --> 00:23:20,152
For example, we had a case where we had a.

377
00:23:21,033 --> 00:23:23,613
a character who is placed in the middle of the streets.

378
00:23:23,813 --> 00:23:27,414
And we really wanted to give this sense of someone who was a little crazy.

379
00:23:27,434 --> 00:23:31,235
He was trying to get the attention of anyone who was walking by him in the streets.

380
00:23:31,955 --> 00:23:33,996
So it really helped us achieve this new mood.

381
00:23:34,456 --> 00:23:37,497
So basically the animators just used the custom actions,

382
00:23:37,837 --> 00:23:40,617
they set an animation that should be played,

383
00:23:40,657 --> 00:23:45,278
and every one to three seconds this character would keep orienting in different directions,

384
00:23:45,338 --> 00:23:50,620
really giving the sense that they were trying to get the attention of anyone passing by him in the streets.

385
00:23:52,304 --> 00:23:57,786
We also used it to achieve new moods, so I'll show a couple of examples of how we did this with Ezio.

386
00:24:01,367 --> 00:24:10,189
In the first example, all it is is we're using a custom action, no animations being played on the upper body, but we applied the random look at target.

387
00:24:11,549 --> 00:24:17,360
So it really gives a sense of Ed Field searching for something and every say 1 to 3 seconds

388
00:24:17,460 --> 00:24:22,068
he'll start looking and orienting towards a different target using the orienting tool.

389
00:24:27,403 --> 00:24:30,825
Here's the same example, but now we plugged an upper body on Ezio.

390
00:24:31,386 --> 00:24:37,951
So, typically, this would have usually involved doing a whole new movement system, a new behavior that had to be developed,

391
00:24:38,231 --> 00:24:42,914
but now the animators were able to do this by just plugging one upper body animation,

392
00:24:43,755 --> 00:24:48,258
checking off a couple of these flags in the custom actions, and creating this whole new move.

393
00:24:53,002 --> 00:24:53,943
Ezio is scared.

394
00:25:01,463 --> 00:25:07,005
So we really used the custom actions as this strong narrative component.

395
00:25:07,325 --> 00:25:10,927
The other AI teams really ended up benefiting from using the custom actions,

396
00:25:11,007 --> 00:25:14,468
because a lot of the times they needed simple behaviors like this to be done,

397
00:25:14,988 --> 00:25:18,749
and the animators were able to create the packs for them on the fly,

398
00:25:19,370 --> 00:25:25,031
and it really removed the dependency of waiting for the behavior team to develop new features for them.

399
00:25:26,132 --> 00:25:30,553
So Nick is going to talk a little bit about how the custom actions were actually being used.

400
00:25:32,704 --> 00:25:34,464
Yeah, so now let's talk about how we used it,

401
00:25:34,644 --> 00:25:35,804
how we use the custom actions.

402
00:25:37,365 --> 00:25:39,185
To start off, we'll talk about reactions.

403
00:25:40,045 --> 00:25:43,406
In Brotherhood, we have really thousands

404
00:25:43,866 --> 00:25:45,466
of reaction-related sounds.

405
00:25:46,607 --> 00:25:49,347
We need to find a way to link those sounds to animation.

406
00:25:50,488 --> 00:25:52,208
And of course, we don't want to bake

407
00:25:53,268 --> 00:25:54,529
one sound for one animation.

408
00:25:55,609 --> 00:25:58,029
So we use custom actions to link those sounds,

409
00:25:58,449 --> 00:26:01,030
make sure they could be linked to either specific animation

410
00:26:01,050 --> 00:26:02,030
or generic animation.

411
00:26:04,089 --> 00:26:04,769
So it was great.

412
00:26:04,849 --> 00:26:07,790
But creating a custom action can take about five minutes.

413
00:26:08,030 --> 00:26:09,090
It's not that long.

414
00:26:09,230 --> 00:26:11,891
But multiply that by thousands, it

415
00:26:11,931 --> 00:26:13,631
ends up being a job on its own.

416
00:26:14,091 --> 00:26:17,092
So we needed to accelerate that pipeline,

417
00:26:17,132 --> 00:26:18,932
find a way to do things differently.

418
00:26:20,232 --> 00:26:22,452
So we used software called Oasis.

419
00:26:22,653 --> 00:26:25,913
Oasis is developed in Ubisoft by the Ortec Group.

420
00:26:27,113 --> 00:26:30,794
It is used by sound designers to manage their sound bank,

421
00:26:31,114 --> 00:26:31,534
basically.

422
00:26:31,853 --> 00:26:32,654
So it's very simple.

423
00:26:33,694 --> 00:26:39,016
What we did is attach a custom grid to the Oasis system.

424
00:26:39,977 --> 00:26:42,498
Really, it looks like an Excel sheet, no more than that.

425
00:26:43,418 --> 00:26:46,019
What we did with that is take all the parameters

426
00:26:46,059 --> 00:26:47,340
of the custom actions as you saw.

427
00:26:47,380 --> 00:26:48,400
There's a lot of them.

428
00:26:49,521 --> 00:26:52,042
And we made six basic templates that we

429
00:26:52,062 --> 00:26:54,783
knew that we used very often in reactions.

430
00:26:55,824 --> 00:26:58,605
And we used these templates inside this Oasis grid.

431
00:26:59,377 --> 00:27:01,798
So it was really easy to define custom actions

432
00:27:01,918 --> 00:27:03,219
through that Excel sheet.

433
00:27:04,540 --> 00:27:07,862
For example, for a simple sound of a bummed guy saying,

434
00:27:08,182 --> 00:27:11,384
hey, be careful, we would specify an animation.

435
00:27:11,665 --> 00:27:12,926
We then choose a template.

436
00:27:12,966 --> 00:27:15,407
The template would define, OK, the animation

437
00:27:15,447 --> 00:27:18,969
is playing upper bodies using oriented move without look at.

438
00:27:19,230 --> 00:27:22,072
Or another would be, oh, this animation is full body.

439
00:27:23,022 --> 00:27:25,264
It doesn't use oriented move, but it uses look at.

440
00:27:25,424 --> 00:27:26,785
So it was really easy for us.

441
00:27:26,865 --> 00:27:28,546
It took seconds to create custom actions.

442
00:27:28,627 --> 00:27:30,148
We would create hundreds in minutes.

443
00:27:31,489 --> 00:27:33,931
So yeah, it was a great thing for us

444
00:27:34,371 --> 00:27:37,113
to manage all those thousands and thousands of reactions.

445
00:27:39,315 --> 00:27:42,317
So next, how we use custom actions

446
00:27:42,478 --> 00:27:44,279
to create static crowd life.

447
00:27:46,541 --> 00:27:48,903
We use something we call the crowd life coordinator.

448
00:27:49,750 --> 00:27:50,891
What is it exactly?

449
00:27:51,251 --> 00:27:53,613
I think of it as being a character in a box.

450
00:27:54,293 --> 00:27:59,517
So its basic use is just having, it can spawn a character

451
00:27:59,657 --> 00:28:00,957
and play a custom action on it.

452
00:28:01,578 --> 00:28:05,240
So back in AC2, we needed to actually script

453
00:28:05,280 --> 00:28:06,821
those scenes with those characters,

454
00:28:07,482 --> 00:28:08,522
those crowdlife characters.

455
00:28:08,603 --> 00:28:10,324
It took quite a long time.

456
00:28:10,984 --> 00:28:13,166
And now with this, it's such a generic tool

457
00:28:13,206 --> 00:28:14,546
for all the static crowdlife.

458
00:28:14,990 --> 00:28:17,472
that we could use it without the help of an integrator.

459
00:28:17,692 --> 00:28:20,134
Just animators could create their own crowd life

460
00:28:20,895 --> 00:28:21,695
from top to bottom.

461
00:28:22,856 --> 00:28:24,778
And what that meant is that LDs could just

462
00:28:24,898 --> 00:28:27,520
pick that as an object, drop it in the world,

463
00:28:27,820 --> 00:28:30,042
press play in the engine, and it would work.

464
00:28:31,123 --> 00:28:34,565
So it makes creating a unique ambience really fast and easy.

465
00:28:37,888 --> 00:28:40,650
So basically, we need one coordinator for one character

466
00:28:40,730 --> 00:28:43,031
because each character has his specific settings.

467
00:28:43,769 --> 00:28:46,350
Again, the purpose is just spawning the character,

468
00:28:46,670 --> 00:28:47,710
play a custom action.

469
00:28:48,811 --> 00:28:52,572
But you can spawn with spawning specifications,

470
00:28:53,452 --> 00:28:56,073
which are contained inside the crawl life coordinator.

471
00:28:57,293 --> 00:28:59,213
One of those specifications could be the mesh.

472
00:28:59,414 --> 00:29:02,434
Let's say you could define that for this coordinator,

473
00:29:02,794 --> 00:29:05,515
for this character, I need a poor peasant in dirty clothes.

474
00:29:05,675 --> 00:29:08,236
Or for another, I need a rich woman in red dress.

475
00:29:09,376 --> 00:29:12,457
You can also define if the character needs a prop.

476
00:29:12,962 --> 00:29:16,305
So let's say the character for his animation

477
00:29:16,365 --> 00:29:18,127
needs a hammer, a paintbrush, a broom.

478
00:29:18,147 --> 00:29:20,009
You can define it in the coordinator.

479
00:29:20,429 --> 00:29:23,992
So when it spawns, it spawns with its defined object.

480
00:29:24,973 --> 00:29:28,356
And finally, it manages interruptions.

481
00:29:28,376 --> 00:29:30,278
So let's say you have this static character that's

482
00:29:30,318 --> 00:29:32,620
sweeping the streets, but I decide

483
00:29:32,640 --> 00:29:34,401
to assassinate someone right next to him.

484
00:29:35,803 --> 00:29:38,685
It manages the interruption of that animation.

485
00:29:39,306 --> 00:29:40,867
and so that character can actually

486
00:29:40,967 --> 00:29:44,388
play a reaction like any other characters in the streets.

487
00:29:46,489 --> 00:29:48,249
So I have a couple of examples here.

488
00:29:48,269 --> 00:29:54,892
It's actually nice because this is the level used

489
00:29:55,572 --> 00:29:56,913
for level designers.

490
00:29:57,233 --> 00:29:59,073
So they could go in this test map

491
00:29:59,174 --> 00:30:01,414
and see all the crowd life that we created.

492
00:30:01,574 --> 00:30:02,915
And you can see the letters now.

493
00:30:03,475 --> 00:30:05,516
We divided it in different districts.

494
00:30:05,676 --> 00:30:06,656
Is it night or day?

495
00:30:08,184 --> 00:30:11,006
which level of the Rome upgrade system is it.

496
00:30:12,166 --> 00:30:15,268
And what's fun, you can see the characters actually spawning,

497
00:30:15,989 --> 00:30:17,950
and you can see they're spawning with their objects.

498
00:30:19,451 --> 00:30:22,152
And as they spawn, they use a transition animation

499
00:30:22,212 --> 00:30:26,555
to go into their specific crowd life animation.

500
00:30:26,795 --> 00:30:28,536
It would be the same if they get disturbed.

501
00:30:30,017 --> 00:30:34,160
They would just do a transition animation out of their system.

502
00:30:37,729 --> 00:30:39,269
So this is really just a sample.

503
00:30:39,310 --> 00:30:41,231
The map is really much bigger than that.

504
00:30:42,151 --> 00:30:43,012
I love that falling guy.

505
00:30:43,052 --> 00:30:43,152
Yeah.

506
00:30:52,258 --> 00:30:55,180
So now to talk about our walking crowd.

507
00:30:56,640 --> 00:31:00,163
Usually in game, we use basic two steps walk cycle

508
00:31:00,183 --> 00:31:02,224
animations, like the one you see here, illustrated.

509
00:31:04,374 --> 00:31:06,355
It's really great for most characters.

510
00:31:06,415 --> 00:31:06,976
It works well.

511
00:31:07,016 --> 00:31:07,856
It's small and everything.

512
00:31:08,296 --> 00:31:10,418
But we found that for some crowd characters,

513
00:31:10,498 --> 00:31:11,718
it felt a bit redundant.

514
00:31:12,679 --> 00:31:14,600
And it really limits character creation.

515
00:31:15,260 --> 00:31:18,382
So to break that sometimes robotic feel of the crowd

516
00:31:18,422 --> 00:31:21,644
walking just in two steps, we created a tool

517
00:31:21,684 --> 00:31:23,425
called Character Action Set.

518
00:31:23,865 --> 00:31:25,006
Well, it's really basic.

519
00:31:25,066 --> 00:31:29,749
It's just saying I'm taking this original action that's

520
00:31:29,829 --> 00:31:31,130
a two-step walk cycle.

521
00:31:31,761 --> 00:31:34,683
And I'm replacing it with an action that can maybe

522
00:31:34,903 --> 00:31:39,686
be six steps, eight, 10, 12 steps before the character

523
00:31:39,786 --> 00:31:42,267
actually loops his walk cycle animation.

524
00:31:43,748 --> 00:31:46,450
What we wanted to achieve with that is having uneven

525
00:31:46,490 --> 00:31:49,212
characters, characters that are asymmetrical,

526
00:31:49,992 --> 00:31:51,413
to make them feel more human, really.

527
00:31:52,293 --> 00:31:55,255
So the perfect example of that is our drunk character,

528
00:31:55,275 --> 00:31:58,937
which is almost impossible to create a drunk character in just

529
00:31:58,997 --> 00:31:59,478
two steps.

530
00:32:00,456 --> 00:32:02,477
We want to create the feeling of imbalance.

531
00:32:03,058 --> 00:32:05,479
So two steps is not enough.

532
00:32:05,499 --> 00:32:07,821
I have to go back to my original fixed pose.

533
00:32:07,901 --> 00:32:11,043
So we use that for drunk people.

534
00:32:13,785 --> 00:32:17,888
So here's a couple of examples of where we use it.

535
00:32:19,650 --> 00:32:21,871
We have our nice drunk character here.

536
00:32:21,891 --> 00:32:24,853
You can see he's not, after two steps,

537
00:32:24,913 --> 00:32:26,695
he's not going back to a single pose.

538
00:32:27,215 --> 00:32:28,216
He has many, many,

539
00:32:29,037 --> 00:32:30,638
steps to do is looping animation.

540
00:32:31,558 --> 00:32:33,279
This one was a limping animation,

541
00:32:33,339 --> 00:32:37,221
where we really wanted each step to be different, sometimes

542
00:32:37,301 --> 00:32:39,142
more painful, sometimes OK.

543
00:32:39,242 --> 00:32:43,584
So it enabled us to do characters

544
00:32:43,604 --> 00:32:44,664
that are really different.

545
00:32:46,925 --> 00:32:49,746
This is a panicking civilian in the villa

546
00:32:49,947 --> 00:32:51,027
when there's a villa attack.

547
00:32:51,147 --> 00:32:52,888
So there's bombs flying everywhere.

548
00:32:53,548 --> 00:32:56,790
And it was really nicer than just doing a.

549
00:32:57,389 --> 00:33:00,510
simple cycling animation that's a bit boring.

550
00:33:01,250 --> 00:33:02,391
So there it is.

551
00:33:03,271 --> 00:33:06,992
Another place where we use it is character with props.

552
00:33:08,813 --> 00:33:10,333
We really wanted character with props

553
00:33:10,373 --> 00:33:11,734
to be the highlight of our crowds.

554
00:33:14,435 --> 00:33:16,235
There is something specific about those characters

555
00:33:16,275 --> 00:33:19,616
where the animation is actually stored inside the prop.

556
00:33:20,497 --> 00:33:22,097
So when a character spawns with the prop,

557
00:33:22,257 --> 00:33:24,358
the animation is pushed onto the character.

558
00:33:24,895 --> 00:33:28,179
and if ever I bumped into him and he drops his object,

559
00:33:28,659 --> 00:33:30,541
the animation will actually be pulled out of him

560
00:33:31,081 --> 00:33:35,866
and you'll play a simple walk cycle

561
00:33:35,886 --> 00:33:36,867
like any other characters.

562
00:33:37,308 --> 00:33:40,691
So you won't walk like if he was holding an object.

563
00:33:42,192 --> 00:33:43,754
It was really good for acting also,

564
00:33:43,834 --> 00:33:45,175
trying to do different characters.

565
00:33:55,376 --> 00:33:55,896
Yep, thanks.

566
00:33:56,216 --> 00:34:00,158
So now that we have all those nice walk cycle,

567
00:34:00,838 --> 00:34:02,939
it's all great, but we still needed

568
00:34:03,139 --> 00:34:07,020
to have a way to make characters faster.

569
00:34:08,041 --> 00:34:13,483
It's an AC2 that we found that characters, NPCs from AC1,

570
00:34:13,943 --> 00:34:15,924
actually had hundreds and more animation

571
00:34:16,044 --> 00:34:18,185
to do the whole navigation system.

572
00:34:19,525 --> 00:34:22,566
Because originally, we needed to replace

573
00:34:22,786 --> 00:34:24,767
each and every animation to create a new character.

574
00:34:25,461 --> 00:34:29,382
So that's where the idea of our NPCG, which

575
00:34:29,462 --> 00:34:31,482
is our generic NPC, came to be.

576
00:34:33,663 --> 00:34:35,503
If you want to change a walk cycle,

577
00:34:35,603 --> 00:34:38,564
like how we did it previously, this is how it is.

578
00:34:39,504 --> 00:34:42,125
If I only want to change a walk cycle for a character,

579
00:34:42,985 --> 00:34:45,766
of course I have to change the transition between the wait

580
00:34:45,926 --> 00:34:49,326
and the walk cycle, because we use a pose-to-pose system.

581
00:34:49,526 --> 00:34:52,827
And if the pose from the end of the transition

582
00:34:52,907 --> 00:34:55,368
does not match the start of the walk cycle.

583
00:34:55,684 --> 00:34:57,145
we're going to get a jerk or a pop.

584
00:34:58,406 --> 00:35:00,027
So really, we want to get rid of that.

585
00:35:01,208 --> 00:35:05,271
So the tech behind NPCG, because we like to call things,

586
00:35:06,152 --> 00:35:07,252
we called it TransBlend.

587
00:35:07,933 --> 00:35:11,215
So the use of TransBlend, what it is really

588
00:35:11,455 --> 00:35:16,839
is just using a generic cycle to blend into a specific one.

589
00:35:17,760 --> 00:35:19,941
What we wanted to achieve with that is basically,

590
00:35:20,001 --> 00:35:22,683
say, we're a bit tight in time, and we

591
00:35:22,723 --> 00:35:23,644
want to create a character.

592
00:35:24,108 --> 00:35:26,450
We just want to create a character by doing

593
00:35:26,470 --> 00:35:27,931
a weight and a walk cycle.

594
00:35:29,912 --> 00:35:34,696
So we created this NPCG, this not very distinctive character.

595
00:35:36,077 --> 00:35:38,639
His animation could be played on a fat man, a thin man.

596
00:35:38,659 --> 00:35:41,762
It could be played, actually, on a woman, a guard, anybody.

597
00:35:42,762 --> 00:35:45,745
Its purpose is just to share his transition,

598
00:35:46,125 --> 00:35:49,548
share his basic animation so anybody can use it.

599
00:35:49,628 --> 00:35:50,989
Because these animations are

600
00:35:51,829 --> 00:35:56,530
about 70% of a character's animation in navigation,

601
00:35:56,570 --> 00:35:56,910
let's say.

602
00:35:57,291 --> 00:35:59,751
But you only see them maybe 10% of the time.

603
00:36:00,051 --> 00:36:02,452
What you see 90% of the time is the weight and the walk.

604
00:36:04,413 --> 00:36:07,213
So every NPC has this base layer, NPCG,

605
00:36:08,234 --> 00:36:09,294
for TransBlend to work.

606
00:36:09,994 --> 00:36:12,715
So in this example with TransBlend, what I did is,

607
00:36:13,675 --> 00:36:16,556
if I just, again, want to change the walk animation,

608
00:36:16,576 --> 00:36:21,197
the character is going to start from a wait state, let's say.

609
00:36:21,779 --> 00:36:23,220
He's going to use the generic weight.

610
00:36:24,001 --> 00:36:26,283
He's going to use, again, generic transition

611
00:36:26,323 --> 00:36:27,243
from weight to walk.

612
00:36:27,604 --> 00:36:29,185
And he's going to start his first frame

613
00:36:29,685 --> 00:36:30,906
with the generic walk.

614
00:36:31,146 --> 00:36:35,690
But as the walk cycle goes on, he's going to crossfade.

615
00:36:35,710 --> 00:36:37,892
He's going to blend into that specific walk.

616
00:36:38,752 --> 00:36:42,575
So it was a great way for us to create characters really fast.

617
00:36:42,655 --> 00:36:44,897
Some characters have no more than six animation.

618
00:36:45,057 --> 00:36:47,079
Because I'm using the walk example,

619
00:36:47,519 --> 00:36:50,542
it's good for jog, for any motion animation,

620
00:36:50,642 --> 00:36:51,342
and even for weight.

621
00:36:52,482 --> 00:36:55,123
But six animation for a character versus hundreds,

622
00:36:55,964 --> 00:36:57,164
it was a really good thing for us.

623
00:37:00,405 --> 00:37:02,366
I have an example here where we used it.

624
00:37:03,446 --> 00:37:05,947
Actually, it's an example where we used it on Ezio

625
00:37:06,007 --> 00:37:08,908
at the beginning of Brotherhood, where Ezio is wounded.

626
00:37:09,708 --> 00:37:11,809
We only created the motion animation, really.

627
00:37:12,069 --> 00:37:14,509
So he's using his transition animation,

628
00:37:14,529 --> 00:37:16,250
his basic transition animation.

629
00:37:16,610 --> 00:37:19,811
But when he starts running, you can see that with two steps,

630
00:37:20,171 --> 00:37:20,852
it's just enough to.

631
00:37:22,587 --> 00:37:24,629
crossfade into that specific animation.

632
00:37:25,509 --> 00:37:27,811
This is where we use it for a courtesan

633
00:37:28,131 --> 00:37:30,212
in a specific mission.

634
00:37:30,813 --> 00:37:33,535
Again, it wasn't a main path or anything,

635
00:37:33,575 --> 00:37:36,157
but we were able to say, yes, we can create that character,

636
00:37:36,217 --> 00:37:38,838
even if it's last minute, because it's just

637
00:37:39,439 --> 00:37:40,740
a wait and a walk, and that's it.

638
00:37:41,941 --> 00:37:42,141
So.

639
00:37:43,638 --> 00:37:45,439
And now we have our last example.

640
00:37:46,500 --> 00:37:49,441
This was our first test video that we had made,

641
00:37:49,501 --> 00:37:52,443
trying to see how the NPCG TransBlend system works.

642
00:37:53,063 --> 00:37:54,184
And when we first did it,

643
00:37:54,704 --> 00:37:56,886
we wanted to test seeing the crossfade happen

644
00:37:56,926 --> 00:37:59,487
from one motion cycle to another.

645
00:37:59,587 --> 00:38:01,989
So we made something that was sort of flashy,

646
00:38:02,109 --> 00:38:03,530
something that really show off.

647
00:38:03,850 --> 00:38:05,271
We're trying to push the limits.

648
00:38:05,291 --> 00:38:07,712
TransBlend and also showing we have fun at work.

649
00:38:15,296 --> 00:38:18,859
with a little typical Xeer flare to it as well.

650
00:38:18,999 --> 00:38:22,362
But at the same time for us, it was really a great way

651
00:38:22,382 --> 00:38:24,663
to see the actual cross-lead happening

652
00:38:24,723 --> 00:38:27,545
from a generic walk into this specific wall.

653
00:38:27,645 --> 00:38:28,266
It was fun.

654
00:38:28,366 --> 00:38:31,248
Ha ha ha.

655
00:38:33,489 --> 00:38:36,432
So now that we have all these animations, all these assets,

656
00:38:36,632 --> 00:38:37,492
that's really nice.

657
00:38:37,612 --> 00:38:39,634
But we do have to talk about budget.

658
00:38:41,135 --> 00:38:41,315
Yeah.

659
00:38:43,811 --> 00:38:45,693
Each time we do an Assassin's Creed game,

660
00:38:45,933 --> 00:38:49,197
we're a bit tight on budget, because we keep

661
00:38:49,257 --> 00:38:50,778
building upon previous games.

662
00:38:50,818 --> 00:38:53,601
So we have a whole lot of stock of animation to build upon.

663
00:38:55,783 --> 00:39:00,467
So first up for budget, NPCG was really great help for us.

664
00:39:01,288 --> 00:39:04,411
Creating characters with very few animations versus hundreds

665
00:39:04,991 --> 00:39:06,333
is a big memory saver.

666
00:39:07,417 --> 00:39:09,438
Of course, we did characters that had more than that.

667
00:39:09,538 --> 00:39:12,340
But for characters that show up only once,

668
00:39:12,400 --> 00:39:13,461
you can really get away with it.

669
00:39:15,182 --> 00:39:17,583
We also made sure that Crawlife characters were

670
00:39:17,603 --> 00:39:19,184
a bit less complex than in AC2.

671
00:39:19,204 --> 00:39:22,286
In AC2, we had a lot of breakers and everything.

672
00:39:22,306 --> 00:39:25,168
So we made it simpler, but we added more variety.

673
00:39:27,189 --> 00:39:30,371
Another way is to reuse animation, of course.

674
00:39:31,372 --> 00:39:34,213
Example, for Mission Givers, we didn't want.

675
00:39:35,050 --> 00:39:37,591
long animation, they would have dialogue for like 10 or 20

676
00:39:37,912 --> 00:39:38,232
seconds.

677
00:39:38,292 --> 00:39:41,493
So we made sure that we had these small bits of animation

678
00:39:41,513 --> 00:39:43,394
that all branched together, and we used them

679
00:39:45,475 --> 00:39:47,095
for all the mission givers, basically.

680
00:39:48,456 --> 00:39:50,156
And also custom actions were a good thing,

681
00:39:50,217 --> 00:39:53,018
where we could reuse animation in different body parts,

682
00:39:53,078 --> 00:39:57,199
even though originally it was structured as a upper body.

683
00:39:57,219 --> 00:39:59,000
We could say, oh, well, we used this one,

684
00:39:59,040 --> 00:40:01,621
but we use only the two arms, because that's what we want.

685
00:40:04,037 --> 00:40:09,119
Also, Rome is divided in different districts.

686
00:40:09,919 --> 00:40:14,100
It makes sense, but it's also really good for us

687
00:40:14,260 --> 00:40:15,141
in terms of budget.

688
00:40:16,441 --> 00:40:17,842
Because the Crawl Live coordinator

689
00:40:17,882 --> 00:40:21,583
can load animation dynamically, what it does

690
00:40:21,663 --> 00:40:25,385
is that we have specific animation

691
00:40:25,545 --> 00:40:28,546
for each area of Rome, but they are not

692
00:40:28,646 --> 00:40:30,087
loaded all at the same time.

693
00:40:30,307 --> 00:40:33,348
So the animations from the beggars in the slums.

694
00:40:34,279 --> 00:40:36,420
are never loaded when you're in the market district,

695
00:40:36,460 --> 00:40:37,641
and you have all the rich merchant.

696
00:40:38,561 --> 00:40:41,703
So it's also a good way for us to make sure that,

697
00:40:42,043 --> 00:40:45,125
because if we had all the crowdlife character

698
00:40:45,645 --> 00:40:47,566
at the same time, we would bust our budget.

699
00:40:47,606 --> 00:40:50,688
But that's a really good way for us to do it.

700
00:40:51,688 --> 00:40:52,168
And that's it.

701
00:40:52,228 --> 00:40:54,850
So memory was a big concern for us.

702
00:40:55,770 --> 00:40:58,652
But by being smart about where you spend it,

703
00:40:59,352 --> 00:41:00,453
we overcame that problem.

704
00:41:03,662 --> 00:41:07,285
To wrap things up, it was a hell of a challenge for us on Brotherhood.

705
00:41:07,305 --> 00:41:12,009
We wanted to make all of our crowd feel really much more alive, but how?

706
00:41:12,029 --> 00:41:19,256
And at the beginning, you can imagine our view, we had limited tools and 10 months to make a game.

707
00:41:19,396 --> 00:41:23,299
So we opted for developing all of this in health tech ourselves.

708
00:41:24,580 --> 00:41:29,505
It really helped everyone make all of this great new content much more, less time.

709
00:41:29,984 --> 00:41:34,466
So we had the Crowd Life Coordinator where we could just drag and drop these characters in the box,

710
00:41:34,546 --> 00:41:39,867
have all these static crowd life in all the cities of Rome, really giving it this great ambience.

711
00:41:40,528 --> 00:41:45,129
We had the character action sets where we could have diversity in our walk cycles,

712
00:41:45,309 --> 00:41:49,491
so breaking the typical two-step version that we previously had.

713
00:41:50,091 --> 00:41:52,572
We had the NPC Trans Blend system, dancing.

714
00:41:53,494 --> 00:41:56,658
where the animators were able to make new animation sets

715
00:41:56,798 --> 00:41:58,980
by just replacing a handful of animations

716
00:41:59,061 --> 00:42:01,403
versus the hundreds that we would have previously

717
00:42:01,463 --> 00:42:02,965
had to do for new animation sets.

718
00:42:03,566 --> 00:42:06,529
And then we had our custom action data-driven behaviors

719
00:42:06,950 --> 00:42:10,254
that allowed us to create simple behaviors on the fly.

720
00:42:11,074 --> 00:42:14,775
really removing the dependency from the level designers and the animators.

721
00:42:15,376 --> 00:42:18,576
So, the systems ended up being really beneficial to everyone.

722
00:42:19,797 --> 00:42:22,798
One, all of our custom actions could be used from different contexts,

723
00:42:22,878 --> 00:42:28,119
so whether you were walking, idle, riding on your horse, or running around on beams,

724
00:42:28,159 --> 00:42:30,760
you could reuse the data in any of these contexts.

725
00:42:31,590 --> 00:42:36,151
Our AI missions team ended up using a lot of our preset custom action packs.

726
00:42:36,731 --> 00:42:41,312
So we had some missions where they used the pointing custom actions.

727
00:42:41,332 --> 00:42:46,894
We had an example in Brotherhood where we had the courtesans that kept pointing the way that Ezio should be going.

728
00:42:47,374 --> 00:42:52,515
So a lot of the different teams used the custom action packs that we provided to them.

729
00:42:53,175 --> 00:42:57,336
Our crowd AI team used this a lot for their simple behaviors.

730
00:42:57,970 --> 00:43:11,519
All of our reactions in Assassin's Creed are driven by the custom actions, so if you're running around with a crossbow and you kill someone next to a whole group of NPCs, all of their little reaction that's all handled with the custom actions.

731
00:43:11,660 --> 00:43:18,184
Also simple behaviors, the interactions with the doctors, with the shopkeepers, it was all done that way.

732
00:43:19,194 --> 00:43:23,898
And lastly, our big huge benefit with all of this was with outsourcing.

733
00:43:24,078 --> 00:43:29,803
Because on Assassin's Creed Brotherhood, we had four studios helping us create this game.

734
00:43:30,343 --> 00:43:33,846
So we had us at the Montreal studio, we had Quebec.

735
00:43:34,407 --> 00:43:37,609
We had NC in France and Singapore.

736
00:43:38,050 --> 00:43:42,974
So once we made all of these internal tools and they were available in our engine,

737
00:43:43,354 --> 00:43:45,777
everyone was able to benefit from using these.

738
00:43:46,197 --> 00:43:50,080
So some of the teams ended up doing specific parts, specific maps,

739
00:43:50,301 --> 00:43:52,242
and they got to use the same tools.

740
00:43:52,743 --> 00:43:55,625
So everyone got to create more content, less time.

741
00:43:56,280 --> 00:43:59,224
So, we're really, really happy with how everything turned out.

742
00:44:00,145 --> 00:44:04,391
We ended up with a bunch of great new tech, and in 10 months, we were able to accomplish

743
00:44:04,451 --> 00:44:08,476
what we set out to do, which was creating the living, breathing crowds in Assassin's

744
00:44:08,536 --> 00:44:09,257
Creed Brotherhood.

745
00:44:10,058 --> 00:44:10,338
Thanks!

746
00:44:10,939 --> 00:44:12,421
If you have questions, you could...

