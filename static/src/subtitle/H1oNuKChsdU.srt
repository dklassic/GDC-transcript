1
00:00:04,295 --> 00:00:09,177
All right, so let's get started. My name is Ethan Redd. I'm here to talk to you guys about low

2
00:00:09,217 --> 00:00:15,319
poly and achieving a sense of style through economy. So let's start with an introduction. I'm

3
00:00:15,339 --> 00:00:20,521
sure you're all wondering who I am. I'm working on a game called Blazing Legion Ignition. It's

4
00:00:21,242 --> 00:00:27,524
in a retro sort of Sega Saturn-y looking 3D style. And it's currently in development. Mainly

5
00:00:27,584 --> 00:00:29,465
just me and two audio guys.

6
00:00:30,968 --> 00:00:38,571
And I've released a game called NEO1, which also is in that same vein, a full 56,000 square

7
00:00:38,651 --> 00:00:46,713
meter explorable island. Yeah. That's up for download on my itch page. And this other game,

8
00:00:47,013 --> 00:00:51,235
Rad Road Rally, which is about that vroom, vroom sound you make when you're six playing

9
00:00:51,255 --> 00:00:57,717
with Hot Wheels. Just like fun ode to childhood, basically. It's one of my first games, kind

10
00:00:57,737 --> 00:00:58,697
of janky, but a lot of fun.

11
00:01:00,262 --> 00:01:01,723
So yeah, just getting right into it.

12
00:01:02,003 --> 00:01:02,884
Oh wait, actually, one more.

13
00:01:03,945 --> 00:01:07,128
I worked on one of the scenes for the Dome video

14
00:01:07,288 --> 00:01:10,451
at Panorama, this concert series in New York.

15
00:01:10,991 --> 00:01:11,772
Did that last year.

16
00:01:11,792 --> 00:01:13,293
A lot of fun.

17
00:01:13,313 --> 00:01:14,254
I worked on two scenes.

18
00:01:14,474 --> 00:01:16,056
One of them actually made it into the video,

19
00:01:16,096 --> 00:01:17,517
which was super cool.

20
00:01:18,578 --> 00:01:20,079
You should look that up on YouTube if you can.

21
00:01:21,004 --> 00:01:24,206
Now actually getting into our topic, what is low poly?

22
00:01:24,847 --> 00:01:29,370
Low poly is what I like to call quantifiably qualitative

23
00:01:29,550 --> 00:01:31,692
in that there's no hard definition for it,

24
00:01:32,132 --> 00:01:34,834
but I like to think of it as the discipline

25
00:01:35,074 --> 00:01:36,935
and aesthetic of surface economy.

26
00:01:37,736 --> 00:01:41,658
So basically describing 3D or sometimes 2D surfaces

27
00:01:41,899 --> 00:01:44,881
in as little geometry as necessary to get the idea across.

28
00:01:47,410 --> 00:01:54,676
And low poly is essentially a low fidelity art. So we're thinking about efficiency more than

29
00:01:54,716 --> 00:02:00,460
we are fidelity. We're not trying to accurately recreate objects. We're trying to get the idea

30
00:02:00,520 --> 00:02:07,185
of them across. And again, it's subjective. There's no hard poly limit where you are or

31
00:02:07,285 --> 00:02:11,929
aren't low poly. But generally for me I like to think around 8K per asset is where you cross

32
00:02:11,949 --> 00:02:16,172
the line. If you can see angles along curvature, that's probably low poly.

33
00:02:17,615 --> 00:02:20,758
And we've seen sort of in 3D and evolution, right,

34
00:02:21,259 --> 00:02:24,021
of moving more towards high fidelity graphics,

35
00:02:24,322 --> 00:02:27,064
especially in 3D, because we can, basically.

36
00:02:27,745 --> 00:02:30,327
Especially at the higher scales of AAA development,

37
00:02:30,567 --> 00:02:32,589
we think of higher fidelity as better.

38
00:02:33,030 --> 00:02:35,572
Up until recently, where we are seeing sort of like

39
00:02:35,592 --> 00:02:37,754
a renaissance in low-poly art,

40
00:02:38,434 --> 00:02:42,678
for one big reason, I think, money, right?

41
00:02:44,585 --> 00:02:47,146
Independent developers, we don't have the same resources

42
00:02:47,707 --> 00:02:49,708
that AAA devs have to play with.

43
00:02:49,748 --> 00:02:51,409
We have different schedules,

44
00:02:51,469 --> 00:02:54,050
there's less of us working on a project,

45
00:02:54,911 --> 00:02:56,331
we have tighter time constraints,

46
00:02:56,351 --> 00:02:57,232
like things are different,

47
00:02:57,272 --> 00:03:00,714
and it's a bit hard to go for high fidelity looks

48
00:03:01,394 --> 00:03:04,356
when you are worried about literally everything else.

49
00:03:05,056 --> 00:03:09,338
So low poly has a place in modern development

50
00:03:09,478 --> 00:03:12,040
besides just a last second optimization step

51
00:03:12,060 --> 00:03:12,640
for bigger games.

52
00:03:13,945 --> 00:03:14,827
So modern benefits.

53
00:03:16,330 --> 00:03:17,613
First one being productivity.

54
00:03:18,870 --> 00:03:22,132
Low poly has what I like to call a lower existential barrier

55
00:03:22,973 --> 00:03:25,935
than other ways of handling 3D

56
00:03:26,235 --> 00:03:28,616
in that you can get your idea out and across

57
00:03:29,076 --> 00:03:31,738
much faster than you can like a high res sculpt.

58
00:03:31,858 --> 00:03:33,259
Excuse my computer.

59
00:03:34,580 --> 00:03:36,341
Faster than you can a high res sculpt

60
00:03:36,961 --> 00:03:39,783
or just generally richer asset.

61
00:03:40,523 --> 00:03:42,985
And you can get up and running faster,

62
00:03:43,405 --> 00:03:45,546
which is great, especially if you're into prototyping

63
00:03:45,586 --> 00:03:46,947
or trying a lot of ideas.

64
00:03:48,754 --> 00:03:53,438
And being quicker produced allows us to increase our scope

65
00:03:53,638 --> 00:03:54,679
as smaller developers.

66
00:03:55,580 --> 00:03:57,582
If you're trying to make characters

67
00:03:57,882 --> 00:04:00,064
that are completely, fully realized,

68
00:04:00,104 --> 00:04:02,526
photorealistic, like actor duplications,

69
00:04:02,906 --> 00:04:04,288
you're gonna spend a lot of time on that.

70
00:04:04,528 --> 00:04:05,569
Where if you're an indie developer,

71
00:04:05,629 --> 00:04:08,952
maybe your time is better spent making more assets

72
00:04:09,172 --> 00:04:10,913
and spreading that detail across,

73
00:04:11,514 --> 00:04:14,417
and making more instead of making one thing

74
00:04:14,497 --> 00:04:15,718
and like really digging into it.

75
00:04:17,617 --> 00:04:22,098
And a big way that we accomplish that is in our workflows.

76
00:04:22,758 --> 00:04:24,458
What I tend to use is the one at the top,

77
00:04:24,698 --> 00:04:26,119
which I call low poly first,

78
00:04:26,299 --> 00:04:28,939
where the low poly aesthetic is sort of baked

79
00:04:29,039 --> 00:04:30,460
into how the game looks.

80
00:04:31,000 --> 00:04:34,600
So the first run of the asset sometimes will be what I use

81
00:04:35,441 --> 00:04:37,061
in the final production game.

82
00:04:37,641 --> 00:04:40,382
But if I miss, it's quick to iterate on,

83
00:04:40,882 --> 00:04:43,683
and I can try out a bunch of new ideas and keep moving,

84
00:04:43,743 --> 00:04:44,983
and then even if I want to,

85
00:04:45,383 --> 00:04:47,223
go on to a high poly asset at the end.

86
00:04:48,584 --> 00:04:50,584
What you usually see with low poly is we'll start

87
00:04:51,125 --> 00:04:55,606
with a high res asset, and then there'll be

88
00:04:55,626 --> 00:04:57,707
a manual reduction of it, or someone will run

89
00:04:57,727 --> 00:04:59,727
a decimate operation over it, which is bad.

90
00:05:00,627 --> 00:05:03,108
Best case, if you run a manual reduction

91
00:05:03,368 --> 00:05:04,969
and you go and make a separate mesh,

92
00:05:05,789 --> 00:05:09,990
you can clean up a nice, smaller mesh for it,

93
00:05:10,430 --> 00:05:11,551
but you did the work twice.

94
00:05:11,911 --> 00:05:13,871
And if you're gonna end up using the low poly mesh,

95
00:05:14,052 --> 00:05:15,572
sometimes it's better just to go with that first.

96
00:05:17,009 --> 00:05:18,389
The worst case scenario is the bottom,

97
00:05:18,409 --> 00:05:20,330
which I call afterthought optimization,

98
00:05:20,390 --> 00:05:23,451
where you want the high-res asset,

99
00:05:24,311 --> 00:05:27,272
and you realize that you can't really use that,

100
00:05:27,332 --> 00:05:29,393
so then you go and run a decimate on it or whatever,

101
00:05:29,473 --> 00:05:31,613
just to clean it up, and then you realize that's trash,

102
00:05:32,033 --> 00:05:33,754
and then you have someone come back

103
00:05:33,954 --> 00:05:35,955
and make a low-poly asset from scratch.

104
00:05:36,575 --> 00:05:37,715
And you've done three steps.

105
00:05:38,455 --> 00:05:40,457
when you could have just done one to get to that asset.

106
00:05:40,878 --> 00:05:44,702
And this is even worse, because if you don't like the result of all that,

107
00:05:45,503 --> 00:05:48,385
when you see the final silhouette of the low-poly asset,

108
00:05:48,405 --> 00:05:52,730
you'll have to go back to the first step and make a new high-poly one to change that,

109
00:05:52,870 --> 00:05:55,252
and then you go through this whole chain again, and it's completely inefficient.

110
00:05:55,733 --> 00:05:59,256
So, low-poly first thinking is a great way to save time.

111
00:06:00,836 --> 00:06:03,497
And then on the other end, we have computational efficiency,

112
00:06:04,018 --> 00:06:07,419
which isn't existentially necessary these days

113
00:06:07,460 --> 00:06:10,221
because we do have hardware that you can just throw

114
00:06:10,261 --> 00:06:13,403
a million verts at and it'll run and run smoothly,

115
00:06:14,403 --> 00:06:16,324
but that's only when you're working for,

116
00:06:16,364 --> 00:06:18,325
let's say, desktops or newer consoles.

117
00:06:18,766 --> 00:06:20,466
If you're producing for small screens,

118
00:06:21,007 --> 00:06:23,488
efficiency is still very much a consideration

119
00:06:24,289 --> 00:06:26,250
and you want to keep that in your mind

120
00:06:26,350 --> 00:06:27,310
when you're designing things.

121
00:06:29,404 --> 00:06:31,584
Also, for audience purposes,

122
00:06:32,344 --> 00:06:34,265
if you want to reach the next billion users,

123
00:06:34,305 --> 00:06:36,986
like emerging markets or reaching people

124
00:06:37,206 --> 00:06:38,946
who don't have access to new technology

125
00:06:39,066 --> 00:06:40,707
or are playing on older computers,

126
00:06:41,227 --> 00:06:42,147
that pop-up is annoying me,

127
00:06:43,427 --> 00:06:45,388
if you want to reach people playing on lesser hardware

128
00:06:45,888 --> 00:06:48,169
and just generally broaden your market,

129
00:06:48,549 --> 00:06:51,110
low-poly is a great way to lower the threshold

130
00:06:51,690 --> 00:06:53,290
for who can access your game.

131
00:06:55,480 --> 00:06:57,982
And then lastly, having less overhead.

132
00:06:58,002 --> 00:07:02,946
If you're rendering things twice, for example, for VR,

133
00:07:03,647 --> 00:07:06,029
or if you are doing AR and then you have

134
00:07:06,109 --> 00:07:07,830
other processing going on graphically,

135
00:07:08,691 --> 00:07:11,173
having less geometry to worry about

136
00:07:12,134 --> 00:07:14,116
saves the GPU to worry about other things

137
00:07:14,176 --> 00:07:16,217
and you can spend that computational time

138
00:07:16,377 --> 00:07:17,438
on just other stuff.

139
00:07:18,987 --> 00:07:21,048
So now that we know why we want to use low poly,

140
00:07:21,408 --> 00:07:24,668
we want to start thinking in low poly, basically.

141
00:07:24,828 --> 00:07:27,509
And there's four principles to this, I think.

142
00:07:28,689 --> 00:07:30,329
One is stylistic compatibility.

143
00:07:31,089 --> 00:07:33,310
If you want to make a game that looks like real life,

144
00:07:33,370 --> 00:07:35,270
this is probably not a good match for you

145
00:07:35,370 --> 00:07:38,631
because fundamentally, low poly is about reduction.

146
00:07:39,051 --> 00:07:40,951
It's about taking out the details

147
00:07:40,991 --> 00:07:42,932
that aren't necessary to get your idea across

148
00:07:43,352 --> 00:07:45,272
and leaving and accentuating the ones that are.

149
00:07:46,435 --> 00:07:49,396
So if you're working with something that's angular,

150
00:07:50,017 --> 00:07:53,918
or generally sharp, or even something like

151
00:07:54,698 --> 00:07:57,959
woodblock paintings, or I don't know, cubism,

152
00:07:58,559 --> 00:08:01,680
or origami is a very classic example.

153
00:08:01,740 --> 00:08:03,281
These are things that translate to low poly

154
00:08:03,301 --> 00:08:05,602
very easily and naturally, and are sort of like

155
00:08:05,622 --> 00:08:07,062
a leg up in your design process.

156
00:08:07,782 --> 00:08:09,903
You can break away from that,

157
00:08:10,423 --> 00:08:11,604
but you're cutting against the grain.

158
00:08:11,824 --> 00:08:12,984
So this is something to consider

159
00:08:13,124 --> 00:08:14,145
at the onset of your project.

160
00:08:15,819 --> 00:08:18,062
The next pillar is resolution consciousness.

161
00:08:18,142 --> 00:08:19,805
And this is where I think a lot of people

162
00:08:19,905 --> 00:08:23,590
slip up with low poly is we sort of just will think,

163
00:08:23,670 --> 00:08:25,333
oh, just reduce it as far as you can,

164
00:08:25,353 --> 00:08:28,317
or reduce it till we get to our benchmark

165
00:08:28,357 --> 00:08:28,978
and then you're done.

166
00:08:30,039 --> 00:08:30,840
But when you do this.

167
00:08:31,739 --> 00:08:33,961
there's no human touch to it,

168
00:08:34,121 --> 00:08:36,224
and your viewer will pick up on that,

169
00:08:36,464 --> 00:08:38,587
and the general look of the game will suffer.

170
00:08:39,308 --> 00:08:41,610
By having a sense of consistency

171
00:08:41,690 --> 00:08:44,974
through how you handle the polygons that make up your mesh,

172
00:08:45,975 --> 00:08:48,038
it allows you to push the style of your game.

173
00:08:48,218 --> 00:08:49,299
And we'll get into this in detail.

174
00:08:50,753 --> 00:08:53,235
The third thing is considering silhouette at all times.

175
00:08:53,515 --> 00:08:56,516
Now if you're already a 3D modeler, this is something that's already baked into your brain

176
00:08:56,536 --> 00:08:59,717
because you know you need things to read like they are from all angles.

177
00:09:00,178 --> 00:09:04,860
But with low poly this is even more important because again, we're stripping away detail.

178
00:09:05,280 --> 00:09:07,821
So we need to make sure that the overall is very strong.

179
00:09:09,939 --> 00:09:12,481
And ultimately we're approximating things.

180
00:09:12,501 --> 00:09:14,242
We're going to dig into this in just a minute.

181
00:09:14,842 --> 00:09:16,423
So we don't really need to think about

182
00:09:16,624 --> 00:09:17,844
conveying things as they are.

183
00:09:18,005 --> 00:09:21,787
We want to convey them as what's important about them.

184
00:09:23,148 --> 00:09:25,550
And then the last pillar is either supplemental

185
00:09:25,670 --> 00:09:27,171
or old school rendering tricks

186
00:09:27,751 --> 00:09:29,172
that just sort of help you sell the style.

187
00:09:30,342 --> 00:09:35,869
You can fake things through particles, shaders, textures, or even incorporating other

188
00:09:35,949 --> 00:09:40,074
lo-fi or NPR techniques. And that allows you to achieve those looks we talked about

189
00:09:40,094 --> 00:09:45,962
earlier, like looking like origami or woodblock painting or whatever. So starting with

190
00:09:46,002 --> 00:09:46,482
resolution.

191
00:09:48,322 --> 00:09:53,767
The easiest example for explaining resolution actually came from calculus, believe it or

192
00:09:53,807 --> 00:09:57,070
not, when I was looking for examples, which surprised me.

193
00:09:58,491 --> 00:10:04,717
So for example, our data that we wanted to portray was the red area under the blue curves,

194
00:10:05,738 --> 00:10:10,062
and we wanted to show that red data in a series of finite...

195
00:10:10,987 --> 00:10:16,388
bars. If we had an infinite amount of them, we could actually show the data as it is,

196
00:10:16,808 --> 00:10:24,229
which is the leftmost graphic. As we reduce the number of bars, generally we see that

197
00:10:24,269 --> 00:10:28,430
we're approximating rougher and rougher. With 32 of them, we can sort of get the idea. If

198
00:10:28,750 --> 00:10:34,991
we added them all up, we have sort of closest, like a close representation to the data. And

199
00:10:35,051 --> 00:10:40,112
this is high fidelity. This is when something is very close and good enough to represent

200
00:10:40,152 --> 00:10:40,432
something.

201
00:10:41,325 --> 00:10:44,867
If we cut that in half, we notice that there's a lot more

202
00:10:44,967 --> 00:10:46,708
white between the blue and the red,

203
00:10:47,329 --> 00:10:49,610
and that's sort of showing a margin of error.

204
00:10:49,990 --> 00:10:52,012
But we still understand that that's a curve,

205
00:10:52,112 --> 00:10:55,634
and we still can see generally what the data is.

206
00:10:56,654 --> 00:10:59,296
So here we have a low fidelity representation

207
00:10:59,356 --> 00:11:01,678
of the area under the curve, but it's still good enough.

208
00:11:01,898 --> 00:11:02,518
We get the idea.

209
00:11:03,897 --> 00:11:05,519
And then if we move further to the right than that,

210
00:11:05,959 --> 00:11:07,381
we notice we just don't have enough data

211
00:11:07,421 --> 00:11:08,222
and we have garbage.

212
00:11:08,642 --> 00:11:09,763
This is what we want to avoid.

213
00:11:10,364 --> 00:11:12,666
So it is possible to reduce too far

214
00:11:12,866 --> 00:11:15,369
and it is possible to present too much.

215
00:11:15,729 --> 00:11:18,412
With low poly, we want to find a happy middle ground

216
00:11:18,772 --> 00:11:21,855
between the 32 and the 16 example.

217
00:11:22,796 --> 00:11:24,738
So extending this concept to shape.

218
00:11:26,481 --> 00:11:32,866
If we instead of think think about the cuts instead of as a verts around a circle like we're trying to

219
00:11:33,327 --> 00:11:34,267
approximate a circle here

220
00:11:35,829 --> 00:11:42,054
16 vertices is indeed enough to show that it's a circle like we don't even really have like a name or a common name for

221
00:11:42,094 --> 00:11:43,415
A shape that's 16 sided

222
00:11:44,756 --> 00:11:49,681
When we go over to the right we have an octagon which you know it's kind of round, but not really

223
00:11:50,101 --> 00:11:52,443
You go further, it's a hexagon, and now I'm really pushing it.

224
00:11:52,823 --> 00:11:54,925
And then when you go further than that, it's a square.

225
00:11:55,625 --> 00:11:58,187
So at that point, we've reached insufficient data

226
00:11:58,408 --> 00:11:59,548
to represent our circle.

227
00:12:00,049 --> 00:12:02,791
But from the hexagon upwards, we kind of

228
00:12:02,831 --> 00:12:06,594
have enough data to show our viewer that we're

229
00:12:06,754 --> 00:12:07,975
portraying a round thing.

230
00:12:10,577 --> 00:12:12,017
If we go to three dimensions now,

231
00:12:12,777 --> 00:12:16,598
and we think about rings cutting along our sphere

232
00:12:16,738 --> 00:12:19,199
that we would like to approximate,

233
00:12:19,239 --> 00:12:21,640
64 rings pretty much look smooth.

234
00:12:21,720 --> 00:12:22,920
I didn't smooth any of these models.

235
00:12:23,860 --> 00:12:27,281
64, you can't really even notice that it's polygonal.

236
00:12:27,741 --> 00:12:28,962
32 is indistinguishable from 64.

237
00:12:29,022 --> 00:12:32,283
So if we wanted to, just for optimization's sake,

238
00:12:32,583 --> 00:12:34,503
we can cut out half of the verts.

239
00:12:34,883 --> 00:12:35,724
Well, half of the rings,

240
00:12:35,744 --> 00:12:36,804
that'd be more than half the verts.

241
00:12:37,885 --> 00:12:40,666
of this model and the end viewer isn't gonna notice.

242
00:12:41,607 --> 00:12:44,828
We can cut it in half again and end up with 16 rings

243
00:12:45,169 --> 00:12:46,970
and it's still sufficiently smooth

244
00:12:46,990 --> 00:12:48,010
to show that we have a sphere.

245
00:12:48,030 --> 00:12:49,591
And then once we get down to eight,

246
00:12:49,831 --> 00:12:51,032
we're starting to see the banding

247
00:12:51,092 --> 00:12:53,373
and then once we get down to four, it's no longer round.

248
00:12:54,154 --> 00:12:55,995
But I think this illustrates the concept

249
00:12:56,035 --> 00:12:59,157
that you hit a point with a curvature that's good enough

250
00:12:59,557 --> 00:13:00,457
and you've made your point.

251
00:13:00,477 --> 00:13:02,478
Once we get down to three,

252
00:13:02,498 --> 00:13:05,220
it no longer has any semblance of being a sphere.

253
00:13:06,146 --> 00:13:07,066
without context.

254
00:13:08,287 --> 00:13:09,928
Which then brings us to the topic of

255
00:13:10,128 --> 00:13:11,588
what I call atomic size.

256
00:13:12,889 --> 00:13:15,330
If you notice, all of these spheres

257
00:13:15,370 --> 00:13:16,531
have the same amount of rings

258
00:13:16,631 --> 00:13:18,231
as the examples on the last screen.

259
00:13:18,852 --> 00:13:21,953
But these all have a rigid atomic size.

260
00:13:23,254 --> 00:13:25,835
That meaning, the smallest polygon

261
00:13:26,255 --> 00:13:28,236
on each of these models is the same size.

262
00:13:28,716 --> 00:13:30,277
Which then leads this scene

263
00:13:31,758 --> 00:13:32,778
to have a sense of scale.

264
00:13:33,821 --> 00:13:35,902
And it allows us, if you notice all the way to the right,

265
00:13:36,202 --> 00:13:40,365
I'm using that janky 3 and 4 ring sphere,

266
00:13:40,925 --> 00:13:43,887
and it looks more round in this context

267
00:13:43,927 --> 00:13:48,069
simply because we're communicating that there's a finite amount of detail

268
00:13:48,310 --> 00:13:49,570
that we're spending in this scene.

269
00:13:50,031 --> 00:13:52,512
And once we get down to smaller scales, there's less to work with.

270
00:13:53,813 --> 00:13:57,055
And this has a lot of uses, and it's one of the best ways

271
00:13:57,195 --> 00:14:00,677
to give your low poly art a cut above a lot of what I see,

272
00:14:00,997 --> 00:14:02,898
is by having this sense of order and cohesion.

273
00:14:04,422 --> 00:14:07,524
And when you're rigid like this, it kind of sells it

274
00:14:07,584 --> 00:14:10,246
when you're working with looser approximations of objects.

275
00:14:12,067 --> 00:14:14,028
But you don't have to be completely rigid with it.

276
00:14:14,308 --> 00:14:17,951
In this example, you see that the largest sphere

277
00:14:18,031 --> 00:14:21,793
actually has the same amount of cuts

278
00:14:22,094 --> 00:14:24,275
as the next sphere to it,

279
00:14:25,336 --> 00:14:28,538
because the atomic size is more of a lower bound.

280
00:14:29,680 --> 00:14:33,002
And that takes me to my next point of each model

281
00:14:33,022 --> 00:14:35,123
can have its own local atomic size.

282
00:14:35,683 --> 00:14:38,645
And you can play around with this as a compositional tool.

283
00:14:40,005 --> 00:14:43,347
And I illustrate this here with two scenes

284
00:14:43,587 --> 00:14:45,388
that both have 800 triangles in them.

285
00:14:46,148 --> 00:14:48,350
And the triangles are basically just spent differently.

286
00:14:48,990 --> 00:14:51,871
So if you think of detail as more of a commodity

287
00:14:52,332 --> 00:14:54,112
than just something to shoot for,

288
00:14:54,433 --> 00:14:56,013
we can start playing around with it art-wise.

289
00:14:57,602 --> 00:15:01,463
And the first thing you'll notice as a difference between these two is fitting,

290
00:15:01,823 --> 00:15:04,824
or how loosely or tightly we're approximating this data.

291
00:15:06,344 --> 00:15:10,846
The dispersal scene on the left is a very rough fit of the scene.

292
00:15:11,766 --> 00:15:15,747
And the accumulative scene on the right is more accurate,

293
00:15:16,047 --> 00:15:19,588
in that we have more detail in the individual elements of the scene.

294
00:15:21,394 --> 00:15:25,657
The way we do that while keeping our poly count the same

295
00:15:26,497 --> 00:15:27,818
is by playing with the atom size.

296
00:15:28,979 --> 00:15:31,641
The atom size in the dispersal scene is global,

297
00:15:32,362 --> 00:15:34,203
where the accumulation scene

298
00:15:34,223 --> 00:15:36,505
has a local atom size usage.

299
00:15:37,025 --> 00:15:41,989
So the rock has different size polygons throughout it,

300
00:15:42,049 --> 00:15:44,071
then the grass, then the tree, then the leaves.

301
00:15:44,731 --> 00:15:46,032
Where on the left-hand side,

302
00:15:46,693 --> 00:15:50,736
generally we try to keep the size of the polygons comparable.

303
00:15:52,564 --> 00:15:56,386
This ends up allowing us to do different things in the two scenes

304
00:15:56,407 --> 00:16:00,089
because on the left hand side, it's very dense and rich and lush.

305
00:16:00,489 --> 00:16:04,331
This is great for if you want to have a forest scene or you want to do a city

306
00:16:04,412 --> 00:16:08,214
and you don't necessarily need detail, you just need lots of things to look at.

307
00:16:09,315 --> 00:16:11,336
The sparse density of the scene on the right

308
00:16:12,216 --> 00:16:15,258
allows you what I call innate composition.

309
00:16:16,844 --> 00:16:19,886
where the scene on the left is more muddy,

310
00:16:20,346 --> 00:16:21,587
which isn't necessarily a bad thing.

311
00:16:21,787 --> 00:16:24,769
That lets your eye have something to look at at all times.

312
00:16:24,809 --> 00:16:25,690
No matter where you look at the scene,

313
00:16:25,730 --> 00:16:27,151
there's some grass or there's a tree

314
00:16:27,251 --> 00:16:28,331
or there's a rock, whatever.

315
00:16:28,972 --> 00:16:31,794
On the right-hand side, we have clarity,

316
00:16:32,294 --> 00:16:35,036
which is great because it naturally draws the eye places.

317
00:16:35,156 --> 00:16:37,797
And you can use this in level design to draw the player

318
00:16:37,877 --> 00:16:40,039
to areas where you want them to go

319
00:16:40,099 --> 00:16:42,180
without using text or dialogue or whatever.

320
00:16:42,961 --> 00:16:45,185
or you can use it just as a way to convey story

321
00:16:45,225 --> 00:16:47,348
if you have things where you want to have the player

322
00:16:47,408 --> 00:16:48,490
look at and read or whatever.

323
00:16:48,510 --> 00:16:52,076
And it's something you can play with on a design level.

324
00:16:53,783 --> 00:16:54,924
And it's something I use here.

325
00:16:55,564 --> 00:16:57,465
This is a prototype I worked on for like,

326
00:16:57,485 --> 00:16:58,866
I don't know, two or three weeks or so.

327
00:16:59,206 --> 00:17:01,708
But it was like a generative space game

328
00:17:02,008 --> 00:17:05,029
where there's 200 star systems.

329
00:17:05,069 --> 00:17:07,250
And each star system has up to 12 planets

330
00:17:07,350 --> 00:17:09,832
with each having up to three moons.

331
00:17:10,212 --> 00:17:12,693
And each planet has its own distinctive flora.

332
00:17:14,374 --> 00:17:16,795
that could easily become a huge project,

333
00:17:16,855 --> 00:17:18,996
but by using dispersal techniques

334
00:17:19,677 --> 00:17:21,478
and having the models composed,

335
00:17:21,498 --> 00:17:24,339
I was able to make these rich environments very quickly,

336
00:17:24,639 --> 00:17:26,240
which allowed me to play with big ideas

337
00:17:26,500 --> 00:17:27,520
on a very small scale.

338
00:17:28,921 --> 00:17:30,582
And then I do sort of a hybrid approach

339
00:17:30,602 --> 00:17:31,622
with my game NEO1,

340
00:17:32,083 --> 00:17:34,604
where I used accumulation techniques on the hero assets,

341
00:17:34,644 --> 00:17:36,685
like the big trees and the cliffs and such,

342
00:17:37,445 --> 00:17:39,906
to sort of draw your eye to the interesting things.

343
00:17:40,811 --> 00:17:42,831
And then I use what I call breadcrumbing

344
00:17:43,312 --> 00:17:45,692
by having more detail sort of hot-spotted

345
00:17:45,852 --> 00:17:47,493
in areas where I want the player to go

346
00:17:48,033 --> 00:17:50,633
because I didn't want to have any sort of text

347
00:17:50,653 --> 00:17:52,374
or dialogue or whatever guiding the player

348
00:17:52,414 --> 00:17:52,994
where I wanted them.

349
00:17:53,774 --> 00:17:56,175
And then on the other end, I use dispersal techniques

350
00:17:56,235 --> 00:17:59,636
to litter the environment and populate it with stuff

351
00:18:00,076 --> 00:18:02,156
because you're in this lush alien forest.

352
00:18:02,196 --> 00:18:05,497
I want it to feel like there's plant life everywhere.

353
00:18:05,917 --> 00:18:08,638
So just having a tree here, a tree there,

354
00:18:08,658 --> 00:18:09,598
and a rock, that's not gonna do it.

355
00:18:10,599 --> 00:18:14,163
I wanted to have small polygonal grass everywhere.

356
00:18:14,203 --> 00:18:16,827
There's little flowers, there's berries,

357
00:18:16,847 --> 00:18:18,308
there's little gems or whatever.

358
00:18:19,049 --> 00:18:20,351
And it gives you something to look at

359
00:18:20,431 --> 00:18:21,132
no matter where you are.

360
00:18:22,093 --> 00:18:23,915
And also, by using dispersal techniques,

361
00:18:23,955 --> 00:18:26,738
a great benefit of modern game engines

362
00:18:26,798 --> 00:18:29,942
with this sort of look is you can catch light and shadow.

363
00:18:31,027 --> 00:18:34,569
So it makes the ground of the forest look much more interesting

364
00:18:34,609 --> 00:18:36,590
because it catches that nice moving lighting

365
00:18:37,170 --> 00:18:42,513
and just overall adds a little bit of detailing to a sparse world.

366
00:18:44,114 --> 00:18:45,455
So going on to silhouette.

367
00:18:47,074 --> 00:18:50,675
Silhouette consciousness is key to good low poly

368
00:18:50,775 --> 00:18:53,917
because things need to make sense, right?

369
00:18:54,217 --> 00:18:55,878
If we're constantly removing details

370
00:18:56,158 --> 00:18:58,299
and things that we would identify objects by,

371
00:18:58,599 --> 00:19:02,200
we need to leave what's important to recognize them by.

372
00:19:02,481 --> 00:19:04,081
So the first thing you wanna consider

373
00:19:04,121 --> 00:19:05,002
when modeling something

374
00:19:05,342 --> 00:19:06,763
and trying to be conscious of the silhouette

375
00:19:06,803 --> 00:19:09,064
is how legible is the overall shape,

376
00:19:09,144 --> 00:19:11,145
both on its own and in context?

377
00:19:13,053 --> 00:19:18,135
The second point you'd want to think of is how should light and shadow interact with your object.

378
00:19:18,515 --> 00:19:21,437
A really great example of this is actually the chairs that you guys are sitting on,

379
00:19:21,777 --> 00:19:24,458
where you can represent these chairs a bunch of different ways,

380
00:19:25,358 --> 00:19:28,800
but if you want to accurately sell the shape,

381
00:19:29,020 --> 00:19:35,163
you're going to need to use geometry instead of textures or alpha to model the bar that's holding the cushion.

382
00:19:35,924 --> 00:19:37,265
So that way shadow will shine through it.

383
00:19:37,806 --> 00:19:40,469
Or maybe you could use planes with a texture of the bar

384
00:19:40,750 --> 00:19:42,632
with alpha that allows light to pass through.

385
00:19:42,652 --> 00:19:44,374
But this is something you want to consider

386
00:19:44,795 --> 00:19:48,960
because light interacting with the form of the object

387
00:19:48,980 --> 00:19:50,642
is crucial making the image work.

388
00:19:52,085 --> 00:19:56,048
And then the last thing you want to think about is are you over or under selling curvature?

389
00:19:56,688 --> 00:20:00,451
It's really easy, especially coming from a sculpting or hi-fi background,

390
00:20:00,991 --> 00:20:04,094
to think that round things need to be really round.

391
00:20:04,674 --> 00:20:08,297
But again, like I showed earlier, there comes a point where you've done enough.

392
00:20:08,977 --> 00:20:13,561
And maybe a couple 30 degree angles is enough for a turn,

393
00:20:13,681 --> 00:20:15,202
instead of actually subdividing that.

394
00:20:15,622 --> 00:20:18,004
And then on the flip side, you don't want to get too reductive

395
00:20:18,044 --> 00:20:20,466
to where you're just making really blocky things that shouldn't be.

396
00:20:22,714 --> 00:20:26,661
An example of this is a hand from the cockpit of Blazing

397
00:20:26,701 --> 00:20:31,250
Legion, and the 800 tri version is the actual asset.

398
00:20:32,257 --> 00:20:34,437
And this was made first, not the high poly one.

399
00:20:34,878 --> 00:20:38,059
By using clean topology, or relatively clean topology,

400
00:20:38,679 --> 00:20:41,440
you're able to subdivide and get a high res asset

401
00:20:41,700 --> 00:20:42,300
if you want it.

402
00:20:43,181 --> 00:20:46,422
But if you don't, by considering what's important

403
00:20:46,542 --> 00:20:48,923
about the model, I can have different striations

404
00:20:48,943 --> 00:20:51,604
that I can use to reduce if I need to

405
00:20:51,624 --> 00:20:52,564
for performance reasons.

406
00:20:52,964 --> 00:20:55,625
So if I wanted to convey just this is a hand in a glove

407
00:20:55,825 --> 00:20:56,666
with a sleeve over it.

408
00:20:57,586 --> 00:20:59,110
I don't necessarily need fingers for that.

409
00:20:59,270 --> 00:21:04,742
So when I step down to 400, I can block off the three fingers and still have the one index

410
00:21:04,782 --> 00:21:07,629
finger available for trigger activities or whatever.

411
00:21:08,495 --> 00:21:10,836
while still keeping it more or less deformable.

412
00:21:11,617 --> 00:21:13,078
If I don't need a trigger finger,

413
00:21:13,638 --> 00:21:14,559
maybe for the other hand,

414
00:21:14,599 --> 00:21:17,541
where it's just like holding a joystick or something,

415
00:21:18,081 --> 00:21:19,502
you can actually get rid of that other finger

416
00:21:19,562 --> 00:21:22,604
and then reduce a couple of edge loops out of that,

417
00:21:23,104 --> 00:21:24,505
get rid of some of the detail in the sleeve,

418
00:21:24,545 --> 00:21:25,706
and now you've cut it almost in half.

419
00:21:26,627 --> 00:21:28,708
And now if you know the hand doesn't need to animate,

420
00:21:29,208 --> 00:21:30,389
you can just lock it into a fist

421
00:21:30,409 --> 00:21:31,430
and cut even further from there.

422
00:21:32,419 --> 00:21:35,807
So by thinking about what's important about the shape that you're modeling,

423
00:21:36,749 --> 00:21:40,699
you can make smart decisions and stylize it so that it makes sense.

424
00:21:41,941 --> 00:21:45,582
Now, a bad example of what you'll see a lot

425
00:21:45,682 --> 00:21:47,943
is just people decimating a model

426
00:21:47,963 --> 00:21:49,483
when they need to get more efficiency out of it.

427
00:21:49,984 --> 00:21:53,485
And this is ultimately, I think, a bad way to do it.

428
00:21:54,185 --> 00:21:55,986
Because as we decimate further,

429
00:21:56,006 --> 00:21:58,086
we notice that our geometry gets harder and harder

430
00:21:58,106 --> 00:21:59,267
to work with and maintain,

431
00:21:59,387 --> 00:22:00,967
and also gets less and less deformable.

432
00:22:02,688 --> 00:22:06,009
The 256-try example, if you tried to rig that,

433
00:22:06,049 --> 00:22:07,209
would just have horrible results.

434
00:22:08,150 --> 00:22:10,811
The 172, I really hope you're not intending

435
00:22:10,851 --> 00:22:11,651
on moving that at all.

436
00:22:14,284 --> 00:22:18,006
From here, you can still subdivide up, obviously, because it's the same mesh,

437
00:22:18,106 --> 00:22:19,607
but I really want you to pay attention to that.

438
00:22:20,447 --> 00:22:26,249
This is bad, right? This isn't really doing low poly, in my personal opinion.

439
00:22:26,950 --> 00:22:29,571
There's got to be a personal touch to it because it's holistic.

440
00:22:29,611 --> 00:22:32,992
We need to decide what is and isn't important.

441
00:22:33,232 --> 00:22:36,073
We want to think reductively about what we're portraying

442
00:22:36,493 --> 00:22:37,734
and make a decision about it,

443
00:22:38,294 --> 00:22:41,355
not just cut down based off of angles and numbers.

444
00:22:42,907 --> 00:22:46,469
And this is sort of like a lightning round of tricks that I like to use that help

445
00:22:47,529 --> 00:22:53,452
breathe life into these techniques and also give a bit of authenticity to the look.

446
00:22:54,472 --> 00:22:59,714
So something that really compliments low poly modeling, in my opinion, is low resolution rendering

447
00:22:59,794 --> 00:23:03,756
because the two sort of came hand in hand with each other back when there was less.

448
00:23:05,629 --> 00:23:10,412
computing power to work with all around. So these are two prototypes I worked on. On the left is

449
00:23:10,452 --> 00:23:15,956
actually a prototype for Blazing Legion that was made in like a week or so. And rendering

450
00:23:16,377 --> 00:23:24,483
really, really quick bad models at very low resolution really helps to hide the errors and

451
00:23:24,563 --> 00:23:30,267
general lack of detail if you make any. On the right‑hand side is sort of like a star‑foxy

452
00:23:30,407 --> 00:23:31,087
shmup type deal.

453
00:23:31,992 --> 00:23:35,156
And it ends up looking more like a SNES 3D game.

454
00:23:35,496 --> 00:23:38,960
And it forgives the pop-in that you see at the end

455
00:23:39,180 --> 00:23:40,502
that's happening with the level generation

456
00:23:40,822 --> 00:23:42,504
because it seems like a hardware constraint.

457
00:23:43,345 --> 00:23:45,868
Because your eye knows to interpret those things together.

458
00:23:46,168 --> 00:23:49,912
So this is one of those techniques that just kind of goes well with low poly.

459
00:23:50,273 --> 00:23:53,036
If it works for your art style, I'd say at least experiment with it.

460
00:23:54,325 --> 00:23:58,049
Another one that's also kind of popular these days is using color palettes as textures.

461
00:23:58,930 --> 00:24:03,474
Sort of my signature with a lot of my work is I use the Sega Master System palette

462
00:24:04,275 --> 00:24:05,876
because I just really like the colors. But also

463
00:24:07,338 --> 00:24:09,840
this is a really great way to batch materials

464
00:24:10,741 --> 00:24:14,885
because a lot of times I'll actually have two or three materials in an entire game

465
00:24:14,905 --> 00:24:16,546
because they're all using the same colors.

466
00:24:17,888 --> 00:24:20,029
And that saves a lot of rendering time,

467
00:24:20,149 --> 00:24:24,231
especially when paired with a reduced polygon count.

468
00:24:24,551 --> 00:24:25,632
So that's something to consider.

469
00:24:25,712 --> 00:24:27,573
And it's a nice stylistic touch, especially

470
00:24:27,633 --> 00:24:29,334
if you're going for an unlit look.

471
00:24:30,014 --> 00:24:32,716
You can get a very nice sticker vibe out of it,

472
00:24:33,236 --> 00:24:34,376
like the little dude on the left.

473
00:24:36,510 --> 00:24:39,592
Then playing with normals is also something you can do.

474
00:24:40,333 --> 00:24:44,796
It's great for doing a cheap glass or fluid

475
00:24:44,836 --> 00:24:47,318
or anything that is semi-transparent

476
00:24:47,338 --> 00:24:48,439
and you see like the back of.

477
00:24:49,560 --> 00:24:52,522
I use it here for like showing a glass jar

478
00:24:52,562 --> 00:24:53,583
and a prototype I'm working on.

479
00:24:54,183 --> 00:24:56,585
And another prototype.

480
00:24:57,126 --> 00:25:00,068
It's the helmet of this little astronaut dude.

481
00:25:01,048 --> 00:25:04,532
And you can combine these techniques with this one.

482
00:25:04,772 --> 00:25:08,335
This is scrolling UVs, which is another thing you can do

483
00:25:08,516 --> 00:25:10,498
that's cheaper than shaders sometimes,

484
00:25:10,578 --> 00:25:11,599
and you can also batch this.

485
00:25:12,079 --> 00:25:14,702
But anyway, by combining these techniques,

486
00:25:14,742 --> 00:25:16,223
you can get effects like this,

487
00:25:16,284 --> 00:25:20,107
where it's like a really Sega Genesis, Sega Saturn,

488
00:25:20,408 --> 00:25:22,950
3D-looking atmosphere around a little planet.

489
00:25:24,000 --> 00:25:28,085
Just by scrolling UVs and having flipped normals for the atmosphere,

490
00:25:28,525 --> 00:25:31,128
this whole planet, I think, is under 500 tris.

491
00:25:31,248 --> 00:25:33,891
So when I'm rendering a whole system of these, it's ultra cheap.

492
00:25:35,822 --> 00:25:38,084
So yeah, takeaways, I want you to consider

493
00:25:38,304 --> 00:25:39,885
stylistic compatibility.

494
00:25:40,425 --> 00:25:41,906
Make sure the look you're going for

495
00:25:42,166 --> 00:25:44,048
is compatible with low poly

496
00:25:44,248 --> 00:25:46,689
and lends to the aesthetic of it.

497
00:25:46,709 --> 00:25:50,832
I want you to approximate instead of duplicating objects.

498
00:25:51,172 --> 00:25:53,394
Think about what's important and reduce to that.

499
00:25:54,494 --> 00:25:56,536
Be consistent with resolution.

500
00:25:57,718 --> 00:26:05,201
Either use it uniformly to create the dispersal look that I showed, or play around with atom

501
00:26:05,221 --> 00:26:09,343
size intentionally and get the accumulation look.

502
00:26:10,423 --> 00:26:16,746
Develop strong silhouettes so that your shapes actually make sense and stand out in context

503
00:26:16,846 --> 00:26:17,266
and alone.

504
00:26:17,966 --> 00:26:20,867
Cheat hard when possible, and please don't hit decimate.

505
00:26:22,088 --> 00:26:23,128
So yeah, thanks for coming.

506
00:26:23,728 --> 00:26:24,669
That's the end of my talk.

507
00:26:25,429 --> 00:26:25,729
Yeah.

508
00:26:30,089 --> 00:26:30,509
Thank you.

509
00:26:30,529 --> 00:26:33,211
Thank you.

510
00:26:33,632 --> 00:26:34,552
Thank you.

511
00:26:34,612 --> 00:26:34,953
Thank you.

512
00:26:34,973 --> 00:26:38,035
So yeah, I think I have extra time if anyone wants to ask questions.

513
00:26:38,815 --> 00:26:39,216
Two minutes?

514
00:26:40,376 --> 00:26:40,536
Hey, yeah.

515
00:26:40,556 --> 00:26:40,737
Questions?

516
00:26:40,857 --> 00:26:40,937
Yeah.

517
00:26:40,957 --> 00:26:50,283
Yeah, so you mentioned not wanting to break those specific hands.

518
00:26:50,303 --> 00:26:50,403
Right.

519
00:26:56,137 --> 00:27:05,680
Okay. So is there like specifically for organic or for mechanical things? Okay. So to repeat

520
00:27:05,700 --> 00:27:09,742
the question, he was asking about what to consider when rigging low poly models. It's

521
00:27:09,802 --> 00:27:13,523
generally the same as high poly models. You want to make sure there's enough geometry to

522
00:27:13,603 --> 00:27:18,365
articulate. So if you have a joint, like for example a finger, you want to have a little bit

523
00:27:18,745 --> 00:27:21,746
above the joint, a little bit below the joint and something in the middle so that way the

524
00:27:21,766 --> 00:27:24,207
bones have something to catch on to. So he was asking about what to consider when rigging

525
00:27:24,795 --> 00:27:26,456
So that's if you have continuous geometry.

526
00:27:27,097 --> 00:27:29,878
Something I use a lot is actually just intersecting

527
00:27:29,918 --> 00:27:31,659
geometry where things aren't even connected,

528
00:27:31,699 --> 00:27:33,580
and then you can just assign that directly to a bone.

529
00:27:33,960 --> 00:27:36,401
That's a great cheat if you're doing something like robots

530
00:27:36,521 --> 00:27:39,082
or anything mechanical, because nobody really cares

531
00:27:39,142 --> 00:27:39,983
if they're connected or not.

532
00:27:42,464 --> 00:27:43,564
Any other cues?

533
00:27:44,203 --> 00:27:44,443
Yeah.

534
00:27:45,043 --> 00:27:45,723
Yeah.

535
00:27:45,824 --> 00:27:56,128
So, human eyes are really good at pattern recognition and it can really easy to pick

536
00:27:56,288 --> 00:27:58,969
up the same model if you repeat too much.

537
00:27:59,369 --> 00:27:59,749
Right.

538
00:27:59,809 --> 00:28:00,590
So I think that.

539
00:28:02,651 --> 00:28:06,953
Low poly can really synergize with random generation.

540
00:28:06,973 --> 00:28:09,975
So do you think how we can work,

541
00:28:10,055 --> 00:28:14,258
like maybe not for the models which you need to rig for animation,

542
00:28:14,318 --> 00:28:18,661
but for like environmental assets like trees and stuff you can.

543
00:28:20,022 --> 00:28:27,747
So how can we approach this if we want to say randomize generation and tree model?

544
00:28:29,172 --> 00:28:32,513
Okay, so just to clarify, do you want to know about

545
00:28:33,474 --> 00:28:36,195
how can we provide a little bit of variation

546
00:28:36,675 --> 00:28:38,436
in smaller assets with low poly?

547
00:28:38,876 --> 00:28:42,558
Yeah, and I think it can also save time for you.

548
00:28:42,598 --> 00:28:43,118
And save time?

549
00:28:43,378 --> 00:28:43,958
Yeah.

550
00:28:44,338 --> 00:28:46,839
Yeah, so that's where I'd say is a good use case

551
00:28:46,900 --> 00:28:48,020
for dispersal techniques,

552
00:28:48,480 --> 00:28:51,221
where you make really small coarse assets

553
00:28:51,261 --> 00:28:52,362
and you can just make a ton of them

554
00:28:52,382 --> 00:28:53,763
because they take you 30 minutes each.

555
00:28:54,303 --> 00:28:56,864
And then you just vary those in your generator.

556
00:28:58,092 --> 00:29:01,133
So just generally approximating loosely, working quickly,

557
00:29:01,313 --> 00:29:03,734
and just make a ton of variations.

558
00:29:04,914 --> 00:29:05,254
Thank you.

559
00:29:05,274 --> 00:29:08,055
Any other questions?

560
00:29:08,856 --> 00:29:09,056
Yeah.

561
00:29:09,696 --> 00:29:11,937
Hi, and thank you for the talk.

562
00:29:13,037 --> 00:29:14,497
It looks like this year at GDC,

563
00:29:14,537 --> 00:29:17,718
the subdivision services are finally coming to game engines.

564
00:29:18,593 --> 00:29:24,898
And at least in my experience it looks like low poly modeling is a really good starting point.

565
00:29:25,599 --> 00:29:33,024
Like even old box modeling is like the perfect starting point to get elegant control cages for subdivision.

566
00:29:33,985 --> 00:29:39,329
And I'd like to ask if you've played around with any of that and have anything...

567
00:29:39,369 --> 00:29:40,730
Subdivision control cages?

568
00:29:41,131 --> 00:29:43,453
Yeah, really, like when you make a...

569
00:29:44,960 --> 00:29:52,524
low poly character with just a few hundred polygons, but you use edge creasing.

570
00:29:53,164 --> 00:29:57,666
The resulting subdivided model is a really, really elegant.

571
00:29:59,120 --> 00:29:59,901
shape for...

572
00:30:00,021 --> 00:30:00,901
Oh yeah, I see what you're saying.

573
00:30:01,001 --> 00:30:01,942
Like subdivision modeling.

574
00:30:02,202 --> 00:30:02,723
Yeah.

575
00:30:03,323 --> 00:30:03,983
Yeah, definitely.

576
00:30:04,264 --> 00:30:05,284
Low poly is great.

577
00:30:05,564 --> 00:30:06,905
Like I was saying in the beginning,

578
00:30:06,925 --> 00:30:08,506
it's a great way to leverage up, you know?

579
00:30:08,867 --> 00:30:11,929
So like, working on a low poly cage, as you're calling it,

580
00:30:12,629 --> 00:30:15,992
doing that first, you can reap the workflow benefits

581
00:30:16,272 --> 00:30:18,233
of being able to iterate on Silhouette very quickly.

582
00:30:18,914 --> 00:30:21,635
And then once you subdivide after that,

583
00:30:21,675 --> 00:30:23,056
you can hang on to the low poly model

584
00:30:23,096 --> 00:30:24,397
in case you want to make changes

585
00:30:24,457 --> 00:30:25,858
that are like drastic to the Silhouette.

586
00:30:26,138 --> 00:30:30,520
like for example you want to change shoulder width or hip height or something

587
00:30:31,040 --> 00:30:34,642
and then subdivide and then you can go over that again with a sculpting step.

588
00:30:35,642 --> 00:30:35,942
Thank you.

589
00:30:36,242 --> 00:30:37,063
Yeah, thank you.

590
00:30:37,963 --> 00:30:38,283
The other?

591
00:30:38,583 --> 00:30:44,226
Yeah.

592
00:30:44,246 --> 00:30:54,170
Hi, so this might seem kind of anachronistic since low poly is, I mean...

593
00:30:55,900 --> 00:30:59,502
older consoles like the PS1 didn't have normal mapping support.

594
00:30:59,562 --> 00:31:09,430
So I'm curious what you think might be the potential role for more advanced rendering

595
00:31:09,490 --> 00:31:18,076
techniques that newer engines like Unreal and Unity offer in regards to PBR and more

596
00:31:18,116 --> 00:31:22,299
advanced kinds of materials in stylized low poly.

597
00:31:22,319 --> 00:31:22,659
Right.

598
00:31:22,699 --> 00:31:22,739
Um.

599
00:31:22,759 --> 00:31:23,700
Thank you.

600
00:31:24,503 --> 00:31:27,805
Okay, so the question was where do I think low poly could go

601
00:31:27,865 --> 00:31:31,267
with ‑‑ I'm actually out of time. If you guys want to ‑‑

602
00:31:31,408 --> 00:31:35,550
I'm so sorry. If you want to talk more, I'll be at the little

603
00:31:35,590 --> 00:31:38,873
room that they provide, I forget what it's called. Thanks for

604
00:31:38,893 --> 00:31:39,073
coming.

