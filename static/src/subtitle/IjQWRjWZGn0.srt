1
00:00:06,217 --> 00:00:12,345
I'm just super thrilled to give this talk today, Shading the World of Anthem.

2
00:00:13,186 --> 00:00:16,250
And I need to give you a little bit of backstory to help you understand why.

3
00:00:17,352 --> 00:00:22,418
For the last three years, I've been giving talks about writing shaders at the Tech Artist

4
00:00:22,438 --> 00:00:22,919
Boot Camp.

5
00:00:23,924 --> 00:00:28,007
and each talk I would give examples of shaders

6
00:00:28,047 --> 00:00:30,269
that you could write and show and kind of break them down

7
00:00:30,609 --> 00:00:31,530
and show how they worked.

8
00:00:33,191 --> 00:00:35,352
But I wasn't able to show anything

9
00:00:36,413 --> 00:00:38,294
from the game that I was working on

10
00:00:38,715 --> 00:00:40,176
because Anthem hadn't shipped yet.

11
00:00:41,116 --> 00:00:42,477
But now that it has shipped,

12
00:00:42,978 --> 00:00:46,100
I can actually show an audience like you guys

13
00:00:46,980 --> 00:00:49,542
some shader examples from our actual game.

14
00:00:49,662 --> 00:00:52,504
And that just feels super cool to me.

15
00:00:53,994 --> 00:00:56,335
Before we begin, something that's really important for me

16
00:00:56,635 --> 00:01:01,718
to point out about this talk is that I'm the one here giving

17
00:01:01,738 --> 00:01:03,438
the talk, but I actually represent

18
00:01:03,978 --> 00:01:06,400
hundreds of really talented developers

19
00:01:06,500 --> 00:01:11,422
back home in both BioWare Austin and BioWare Edmonton, who

20
00:01:11,462 --> 00:01:13,503
worked really hard to make this game.

21
00:01:14,503 --> 00:01:16,964
So while I'm going to show a lot of the work

22
00:01:17,004 --> 00:01:19,205
that I helped to create, I don't want

23
00:01:19,225 --> 00:01:21,686
to take credit for any of it, because it was.

24
00:01:22,907 --> 00:01:25,312
a massive collaboration from the whole team.

25
00:01:25,993 --> 00:01:28,859
And I especially want to call out the contributions

26
00:01:29,100 --> 00:01:30,883
of my colleague Nick Sadler,

27
00:01:31,324 --> 00:01:34,591
who was a fantastic shader artist on the project as well.

28
00:01:36,543 --> 00:01:37,864
And with that, let's jump right in.

29
00:01:38,445 --> 00:01:41,107
Just as a brief introduction, I'm Ben Cloward,

30
00:01:41,387 --> 00:01:43,910
and I've been a technical artist and animator

31
00:01:43,990 --> 00:01:46,152
in the video game industry for 20 years now.

32
00:01:47,073 --> 00:01:48,894
These are some of the projects that I've worked on.

33
00:01:48,914 --> 00:01:53,379
I also helped to create some software

34
00:01:53,399 --> 00:01:56,622
that's part of Max and Maya now called Shader Effects.

35
00:01:56,702 --> 00:01:57,963
I don't know how many of you are familiar

36
00:01:58,003 --> 00:02:00,205
with Shader Effects and Max or Maya.

37
00:02:00,699 --> 00:02:02,801
So I helped to work on that project

38
00:02:03,341 --> 00:02:05,762
as well as shipping these games.

39
00:02:06,883 --> 00:02:10,205
And now of course, for the last three and a half years,

40
00:02:10,486 --> 00:02:12,947
I've been working on a little project called Anthem.

41
00:02:13,568 --> 00:02:15,569
Can I see how many of you have played Anthem?

42
00:02:17,270 --> 00:02:19,371
Alright, fantastic, maybe a third of you.

43
00:02:20,152 --> 00:02:21,773
For those of you that aren't familiar with it,

44
00:02:22,173 --> 00:02:23,634
I wanna play a trailer.

45
00:02:24,795 --> 00:02:26,236
So we'll just take a minute to watch that.

46
00:02:31,420 --> 00:02:35,502
You are the chosen few, protectors of our world.

47
00:02:36,322 --> 00:02:38,343
This is your time.

48
00:02:40,824 --> 00:02:41,444
Fire!

49
00:02:46,627 --> 00:02:49,428
Out there, you will fight the unimaginable.

50
00:02:59,632 --> 00:03:01,333
Feel the power of your javelin.

51
00:03:01,533 --> 00:03:02,874
It's precision.

52
00:03:13,138 --> 00:03:14,178
Rely on each other.

53
00:03:14,819 --> 00:03:15,939
Unleash your power.

54
00:03:37,664 --> 00:03:38,165
Thank you.

55
00:03:39,585 --> 00:03:44,927
So the first time I saw this trailer was at a company meeting on a screen maybe three

56
00:03:44,987 --> 00:03:48,309
times this size and when it was done I was just like, yeah, I'm fired up.

57
00:03:48,529 --> 00:03:50,089
I want to go blow some things up.

58
00:03:51,870 --> 00:03:55,671
Anyway, so as you can see from the trailer, Anthem is a...

59
00:03:56,865 --> 00:04:01,828
The most recent adventure game from Bioware.

60
00:04:02,548 --> 00:04:05,009
You're in a squad of up to four players.

61
00:04:05,530 --> 00:04:08,491
You put on javelin armor and you go out into the wild

62
00:04:08,991 --> 00:04:11,753
to have amazing adventures with your friends.

63
00:04:13,994 --> 00:04:17,536
So, we ran into a lot of challenges

64
00:04:17,796 --> 00:04:19,317
in the process of developing this game.

65
00:04:20,677 --> 00:04:22,558
And when I originally gave this talk,

66
00:04:24,486 --> 00:04:26,527
to the tech artists at BioWare.

67
00:04:28,147 --> 00:04:29,527
I have this slide here, and it just

68
00:04:29,567 --> 00:04:32,428
had bullet points with three of the challenges we ran into.

69
00:04:32,468 --> 00:04:33,589
And they were like, no, no, no.

70
00:04:33,729 --> 00:04:37,850
Bullet points in a list do not do these challenges justice.

71
00:04:38,350 --> 00:04:40,230
We want you to separate them out and put them

72
00:04:40,290 --> 00:04:43,411
in like a triangle shape and just really emphasize

73
00:04:44,292 --> 00:04:45,552
how hard these things were.

74
00:04:46,652 --> 00:04:48,654
because they're not just individual items,

75
00:04:48,694 --> 00:04:51,696
they actually multiply on each other.

76
00:04:52,697 --> 00:04:55,439
So the first challenge was that we had

77
00:04:55,459 --> 00:04:57,841
a lot of diverse environments.

78
00:04:57,881 --> 00:05:03,286
So we had swamps and jungles and weird alien interiors,

79
00:05:03,346 --> 00:05:04,887
and I'll show you some examples in a minute.

80
00:05:05,628 --> 00:05:08,350
So we had a really large library of assets

81
00:05:08,430 --> 00:05:10,311
to support all of these different environments.

82
00:05:11,574 --> 00:05:14,716
On top of that, we have a dynamic weather system in the game.

83
00:05:14,756 --> 00:05:18,780
So any time while you're playing, the clouds can roll in

84
00:05:18,820 --> 00:05:22,283
and it can start raining softly and then rain harder.

85
00:05:22,824 --> 00:05:25,706
So all of the assets in all of our diverse environments

86
00:05:25,886 --> 00:05:31,071
also have to support the ability to look wet

87
00:05:31,171 --> 00:05:33,133
and rained on at any given time.

88
00:05:34,232 --> 00:05:36,555
And being a dynamic open world,

89
00:05:37,275 --> 00:05:39,758
we also have our day and night system,

90
00:05:39,878 --> 00:05:42,120
so all of our assets also have to look good

91
00:05:42,621 --> 00:05:44,082
under any lighting conditions.

92
00:05:44,623 --> 00:05:47,946
So these aren't just like three individual challenges,

93
00:05:48,006 --> 00:05:50,408
but they kind of compound on one another.

94
00:05:52,067 --> 00:05:54,849
So for each of these, I have a little demo video

95
00:05:54,869 --> 00:05:55,709
that I want to show you.

96
00:05:56,169 --> 00:05:59,191
And this first one is an illustration

97
00:05:59,331 --> 00:06:01,713
of some of the diverse environments that we have.

98
00:06:01,733 --> 00:06:04,534
So you can see we have rocky terrain

99
00:06:04,794 --> 00:06:10,577
and really weird looking alien interiors and jungles.

100
00:06:10,697 --> 00:06:11,698
The list just goes on.

101
00:06:19,168 --> 00:06:25,771
So you can imagine building lots of different types of environments require creating a very

102
00:06:25,851 --> 00:06:30,772
large asset library to be able to support this kind of variety.

103
00:06:57,808 --> 00:07:00,609
really neat experience to be able to go to work every day

104
00:07:00,669 --> 00:07:02,570
and look at artwork like that and feel like,

105
00:07:02,850 --> 00:07:04,550
oh, I get to participate in this.

106
00:07:04,611 --> 00:07:06,811
I get to help our environment artists

107
00:07:06,871 --> 00:07:08,732
build this amazing work.

108
00:07:09,692 --> 00:07:11,513
Next, I wanna show you a video that shows

109
00:07:12,053 --> 00:07:14,114
what our dynamic weather system looks like.

110
00:07:16,335 --> 00:07:19,016
While you're watching this, I wanna just kinda tell you

111
00:07:19,076 --> 00:07:21,277
that shader artists are weird.

112
00:07:23,047 --> 00:07:33,072
And the reason for that is, you know, this is a game about getting in a javelin and going out and destroying things and fighting monsters and having a great time.

113
00:07:33,753 --> 00:07:36,274
And here we are as game developers and what are we doing?

114
00:07:37,275 --> 00:07:38,756
We're staring at the cement.

115
00:07:44,459 --> 00:07:48,801
A few years ago, I took my kids to the zoo and I had my camera with me.

116
00:07:49,709 --> 00:07:51,892
And my kids were all excited about looking at the animals,

117
00:07:51,952 --> 00:07:54,134
you know, oh, giraffes, lions, tigers.

118
00:07:54,915 --> 00:07:56,697
And because I had my camera, I was looking around

119
00:07:56,717 --> 00:07:58,379
and I was like, ooh, there's really neat

120
00:07:58,720 --> 00:07:59,941
material reference here.

121
00:08:00,001 --> 00:08:02,644
And so I had my camera pointed at the brick wall

122
00:08:03,505 --> 00:08:05,708
and a guy came up and tapped me on the shoulder

123
00:08:05,728 --> 00:08:07,810
and he was like, buddy, the monkeys are over there.

124
00:08:10,068 --> 00:08:16,592
So anyway, you can see in this video we have the dynamic weather, the clouds roll in, you can see the little raindrops on the cement.

125
00:08:17,193 --> 00:08:21,416
I have it sped up a little bit, but the puddles will grow dynamically over time.

126
00:08:21,436 --> 00:08:24,878
And then you can see the rain ripples in the puddles.

127
00:08:25,659 --> 00:08:27,960
And then the storm stops and the clouds dissipate.

128
00:08:29,385 --> 00:08:33,967
and you can still see the rain ripples, but then they go away and then the puddles start to shrink.

129
00:08:33,987 --> 00:08:39,450
And I have it sped up because I didn't think you wanted to sit here for 10 minutes just watching

130
00:08:39,510 --> 00:08:45,393
puddles dry. But yeah, that's how our dynamic weather system works and I'll get into that

131
00:08:45,433 --> 00:08:46,733
a little bit more later in the talk.

132
00:08:48,695 --> 00:08:50,476
And then we also have our day night cycles.

133
00:08:51,456 --> 00:08:53,657
And our day and night lasts about an hour

134
00:08:53,897 --> 00:08:55,098
of real time in the game.

135
00:08:55,158 --> 00:08:57,319
And so I have this sped up 60 times.

136
00:08:57,379 --> 00:08:59,160
So you only have to watch it for a minute.

137
00:09:00,080 --> 00:09:03,301
But you can see that the sun moves across the sky

138
00:09:03,502 --> 00:09:04,842
and the shadows change.

139
00:09:05,563 --> 00:09:08,884
And this was especially a challenge for lighting artists

140
00:09:09,144 --> 00:09:12,626
who had to be sure that the lighting looked correct

141
00:09:13,486 --> 00:09:14,687
at all times of the day.

142
00:09:15,127 --> 00:09:17,308
They had to create nice looking cloudy sky,

143
00:09:17,348 --> 00:09:18,008
but then also.

144
00:09:18,889 --> 00:09:20,029
a sky at night.

145
00:09:20,910 --> 00:09:22,311
And when the sun goes down here in a minute,

146
00:09:22,331 --> 00:09:25,633
you'll see that the stars will come out,

147
00:09:25,673 --> 00:09:27,154
and you can see the moons go by,

148
00:09:27,214 --> 00:09:29,895
and it's just really beautiful to look at.

149
00:09:29,975 --> 00:09:32,016
One of the things that I did to contribute to this is

150
00:09:32,577 --> 00:09:35,459
I wrote this shader that has the bioluminescent bacteria

151
00:09:35,499 --> 00:09:38,340
in the water that you can only see at nighttime.

152
00:09:43,609 --> 00:09:45,070
So yeah, those are some pretty big challenges.

153
00:09:45,110 --> 00:09:47,632
And I know these aren't necessarily things

154
00:09:47,672 --> 00:09:49,033
that are new in games,

155
00:09:49,434 --> 00:09:51,816
but they are really neat to be able to work on.

156
00:09:51,876 --> 00:09:54,198
And I was excited to be able to participate in a project

157
00:09:54,258 --> 00:09:58,121
with time of day and dynamic weather

158
00:09:58,261 --> 00:10:00,543
and all kinds of fun challenges like that.

159
00:10:01,764 --> 00:10:03,525
It makes it exciting to go to work

160
00:10:03,705 --> 00:10:06,928
when you have hard problems to bite off and chew.

161
00:10:08,837 --> 00:10:10,939
So here are a couple of techniques that we used,

162
00:10:11,199 --> 00:10:14,823
or that I used, when faced with any particular challenge.

163
00:10:14,843 --> 00:10:16,244
So I'd have an environment artist

164
00:10:16,304 --> 00:10:18,466
or the art director come to me and he would say,

165
00:10:18,886 --> 00:10:22,169
or she would say, I need a shader that does this.

166
00:10:22,990 --> 00:10:26,433
And so I would go down these steps in order to create that.

167
00:10:26,513 --> 00:10:28,615
First of all, I would go out and collect reference,

168
00:10:29,455 --> 00:10:31,117
either photos that I took for myself

169
00:10:31,237 --> 00:10:33,799
or images that I found with Google Image Search.

170
00:10:34,808 --> 00:10:36,148
And I would bring them all together

171
00:10:36,208 --> 00:10:37,489
into a big reference library,

172
00:10:37,509 --> 00:10:39,190
and then I would work together with the person

173
00:10:39,210 --> 00:10:41,751
that asked for that particular asset

174
00:10:42,391 --> 00:10:44,172
to identify some key elements

175
00:10:45,172 --> 00:10:48,333
that represented the essence of what that effect was.

176
00:10:49,554 --> 00:10:52,155
And just as important as identifying

177
00:10:52,275 --> 00:10:54,195
what we wanted to go into the effect

178
00:10:54,356 --> 00:10:56,796
was identifying what we wanted to leave out.

179
00:10:58,140 --> 00:10:59,781
Because if you go out and look at reality,

180
00:10:59,941 --> 00:11:02,182
it's infinitely detailed.

181
00:11:03,142 --> 00:11:05,384
And we just can't push that kind of detail.

182
00:11:05,424 --> 00:11:07,385
And so you have to kind of draw the line somewhere

183
00:11:07,425 --> 00:11:09,346
and say, well, we can do this and we can do this,

184
00:11:09,946 --> 00:11:12,628
but we can't do these other 300 things that we see.

185
00:11:13,048 --> 00:11:15,349
You really have to identify what you're not gonna do

186
00:11:16,049 --> 00:11:17,390
in addition to what you will do.

187
00:11:18,882 --> 00:11:23,245
And then I would go about creating a shader step by step,

188
00:11:24,205 --> 00:11:26,406
trying to mimic each of these key elements

189
00:11:26,466 --> 00:11:30,428
that we had identified from our reference material.

190
00:11:33,010 --> 00:11:34,731
So what I'm gonna do for the rest of the talk

191
00:11:36,191 --> 00:11:38,693
is I'm gonna walk you through three example shaders

192
00:11:38,793 --> 00:11:40,474
that were created for Anthem.

193
00:11:41,437 --> 00:11:44,121
And I'm going to show you how those steps applied

194
00:11:44,161 --> 00:11:45,723
of collecting reference material,

195
00:11:46,124 --> 00:11:47,606
identifying key elements,

196
00:11:48,106 --> 00:11:50,049
and then building the shader step-by-step

197
00:11:50,770 --> 00:11:54,676
to replicate the elements that we saw in the reference.

198
00:11:56,519 --> 00:11:58,001
So let's start out with lava.

199
00:12:00,644 --> 00:12:03,046
So, as I said, first of all, we collect a reference,

200
00:12:03,907 --> 00:12:05,548
and here are some images of lava

201
00:12:06,109 --> 00:12:08,311
that we were able to find and bring together.

202
00:12:08,791 --> 00:12:11,474
We used a lot more of this, a lot more images than this,

203
00:12:11,534 --> 00:12:13,076
but these are just a few examples.

204
00:12:14,317 --> 00:12:15,578
So what we needed to do then,

205
00:12:16,439 --> 00:12:18,240
once we had our reference images collected,

206
00:12:18,260 --> 00:12:21,404
is identify some key characteristics

207
00:12:21,864 --> 00:12:23,626
that make lava what it is.

208
00:12:25,916 --> 00:12:26,696
So let's take a look.

209
00:12:26,796 --> 00:12:29,978
First of all, lava has these really interesting folds

210
00:12:30,178 --> 00:12:32,519
and wrinkles when it kind of piles up on itself

211
00:12:32,599 --> 00:12:35,360
and it hardens into these really unique shapes.

212
00:12:37,101 --> 00:12:38,362
Secondly, you can see from the images

213
00:12:38,382 --> 00:12:41,603
that there's a really nice contrast between the areas

214
00:12:41,643 --> 00:12:44,124
of really molten lava, where it's really hot,

215
00:12:44,744 --> 00:12:46,705
and areas where it's cooled.

216
00:12:48,137 --> 00:12:51,199
And then finally, there's this really beautiful gradient

217
00:12:51,239 --> 00:12:54,300
between bright yellow and orange and red,

218
00:12:54,941 --> 00:12:58,142
representing the different temperatures of the lava.

219
00:12:58,803 --> 00:13:01,204
And not displayed in these images, obviously,

220
00:13:01,264 --> 00:13:04,906
but we also collected reference video of lava moving,

221
00:13:05,366 --> 00:13:08,948
and it has this really irregular way of oozing

222
00:13:09,208 --> 00:13:11,329
that we were gonna try to replicate.

223
00:13:12,947 --> 00:13:15,970
So it also, in addition to being able to collect reference,

224
00:13:16,190 --> 00:13:19,453
it's also very beneficial if you can send some people

225
00:13:19,933 --> 00:13:22,095
to actually take photos of the real thing.

226
00:13:23,437 --> 00:13:25,058
So we had some of our environment artists

227
00:13:25,158 --> 00:13:27,821
go on a photogrammetry trip to Hawaii.

228
00:13:29,102 --> 00:13:29,563
Lucky them.

229
00:13:32,282 --> 00:13:36,867
So they spent 10 days capturing images of all kinds of things.

230
00:13:37,328 --> 00:13:40,591
And you can see here they're taking pictures of the lava

231
00:13:40,652 --> 00:13:40,972
flows.

232
00:13:41,412 --> 00:13:44,476
Now, they didn't actually go to any real flowing lava,

233
00:13:44,836 --> 00:13:46,779
and so they kind of left that part up to me.

234
00:13:46,839 --> 00:13:50,122
We weren't going to put our artists on top

235
00:13:50,162 --> 00:13:51,464
of active flowing lava.

236
00:13:52,865 --> 00:13:59,629
but from what they captured with the photogrammetry and the images that we created,

237
00:13:59,669 --> 00:14:02,170
we were able to put that together and create something convincing.

238
00:14:03,490 --> 00:14:06,932
So from the photogrammetry, I was able to derive

239
00:14:06,992 --> 00:14:09,993
some really nice source textures.

240
00:14:10,594 --> 00:14:12,494
So you can see here we have our base color,

241
00:14:12,514 --> 00:14:15,956
our height, normal ambient inclusion, and smoothness.

242
00:14:16,396 --> 00:14:19,158
And these all came from the photogrammetry assets

243
00:14:19,278 --> 00:14:22,079
that the environment artists created

244
00:14:22,159 --> 00:14:23,319
from their trip to Hawaii.

245
00:14:24,100 --> 00:14:26,301
All right, so let's dive right in and create a shader.

246
00:14:27,531 --> 00:14:29,813
Now, in the previous years when I've given these talks,

247
00:14:29,973 --> 00:14:31,835
I've been using the Unreal Engine,

248
00:14:32,096 --> 00:14:36,160
but at BioWare, we use the Frostbite game engine,

249
00:14:36,320 --> 00:14:37,761
and I love working in Frostbite

250
00:14:37,781 --> 00:14:40,284
because it enables us to create

251
00:14:40,744 --> 00:14:42,306
some really amazing-looking effects.

252
00:14:42,786 --> 00:14:45,629
Pretty much anything that we can think of

253
00:14:45,769 --> 00:14:47,391
that we get from the reference images,

254
00:14:47,531 --> 00:14:50,554
I'm able to replicate in Frostbite's shader editor.

255
00:14:52,135 --> 00:14:54,817
So here you can see I have my two base textures.

256
00:14:55,317 --> 00:14:57,638
This texture at the top is a packing

257
00:14:57,699 --> 00:14:59,099
of the base color and the height.

258
00:14:59,840 --> 00:15:01,881
And then the second texture is the normal,

259
00:15:02,021 --> 00:15:03,683
the ambient inclusion and the smoothness.

260
00:15:04,203 --> 00:15:07,285
And I'm just passing all that data into my lit root node.

261
00:15:08,946 --> 00:15:11,968
And so let's take a look at what that looks like.

262
00:15:12,509 --> 00:15:15,010
So this is the lava that we're looking right at

263
00:15:15,110 --> 00:15:15,791
right here in the middle.

264
00:15:17,582 --> 00:15:20,024
The rest of the environment here is just so that you can

265
00:15:20,344 --> 00:15:22,465
kind of take a look at it in context.

266
00:15:22,525 --> 00:15:25,166
But this thing that's going diagonally down the middle

267
00:15:25,226 --> 00:15:26,967
is what we're gonna be looking at for this example.

268
00:15:27,688 --> 00:15:29,729
And you can see that it's just this static lava

269
00:15:29,769 --> 00:15:31,770
that they captured from the lava fields.

270
00:15:31,890 --> 00:15:34,431
And there's a lot more work that we need to do

271
00:15:35,091 --> 00:15:38,033
on this effect to make it what we wanna see.

272
00:15:39,033 --> 00:15:41,255
So the first thing that I wanna do is figure out

273
00:15:41,455 --> 00:15:46,037
where in the lava I wanna put the molten parts.

274
00:15:46,954 --> 00:15:48,575
And so to do that, I'm gonna start out

275
00:15:48,635 --> 00:15:51,297
by sampling the height mask.

276
00:15:52,077 --> 00:15:53,518
So here I've got the height mask,

277
00:15:53,558 --> 00:15:57,080
which was in the alpha channel of my base color.

278
00:15:58,021 --> 00:16:00,122
And I have this node down here called linstep,

279
00:16:00,482 --> 00:16:02,844
and this is very similar to smoothstep,

280
00:16:03,284 --> 00:16:06,126
but it's linear, and so it's a little bit more optimized.

281
00:16:06,686 --> 00:16:09,388
And what that node does is it remaps the range

282
00:16:10,488 --> 00:16:12,390
between two values that I specified.

283
00:16:13,561 --> 00:16:14,661
And then I'm gonna invert it.

284
00:16:15,282 --> 00:16:17,983
This compliment node is like a one minus, it flips it.

285
00:16:18,804 --> 00:16:20,865
And the reason I wanna do that is because

286
00:16:20,965 --> 00:16:23,306
the height map is bright where it's high,

287
00:16:23,446 --> 00:16:25,367
and I actually want it to be bright where it's low,

288
00:16:25,427 --> 00:16:27,408
because I want the lava to be in the cracks.

289
00:16:28,648 --> 00:16:29,889
So after applying the height map,

290
00:16:29,909 --> 00:16:31,990
now you can see I've plugged my height map here

291
00:16:32,070 --> 00:16:33,751
into reflectance.

292
00:16:34,411 --> 00:16:35,672
And the reason for that is I'm gonna use

293
00:16:35,712 --> 00:16:37,673
the reflectance channel temporarily

294
00:16:38,373 --> 00:16:42,195
just to get a debug view of what that mask looks like.

295
00:16:43,330 --> 00:16:45,853
So here is our reflectance view,

296
00:16:46,114 --> 00:16:48,296
and you can see I'm starting to create the mask

297
00:16:48,597 --> 00:16:51,200
that will determine where the molten parts

298
00:16:51,240 --> 00:16:52,201
of the lava are gonna go.

299
00:16:52,721 --> 00:16:54,143
And just using the height map,

300
00:16:54,764 --> 00:16:56,025
it's kind of blurry looking,

301
00:16:56,045 --> 00:16:57,327
and there's not enough detail there.

302
00:16:57,347 --> 00:16:59,990
I wanna add some more details and make it look cooler.

303
00:17:00,591 --> 00:17:02,453
So I'm going to...

304
00:17:03,614 --> 00:17:04,594
Go back to my shader.

305
00:17:04,975 --> 00:17:07,155
And what I can do is I had a lot of detail

306
00:17:07,376 --> 00:17:10,617
in the ambient occlusion and smoothness maps.

307
00:17:11,517 --> 00:17:12,758
So those are coming from right here.

308
00:17:12,838 --> 00:17:15,479
So what I'm going to do is take those maps

309
00:17:15,899 --> 00:17:17,299
and adjust them a little bit.

310
00:17:17,379 --> 00:17:19,760
I'll adjust brightness and contrast, invert them,

311
00:17:20,681 --> 00:17:23,161
multiply a little bit to brighten it up.

312
00:17:24,002 --> 00:17:27,423
And then I'm going to add those masks together with the mask

313
00:17:27,463 --> 00:17:29,324
that I already created for my height map.

314
00:17:30,384 --> 00:17:31,425
And that's going to look like this.

315
00:17:32,835 --> 00:17:35,136
So you can see, using the smoothness

316
00:17:35,156 --> 00:17:36,477
and ambient occlusion detail,

317
00:17:36,537 --> 00:17:39,479
I'm able to pull in some more detail

318
00:17:39,959 --> 00:17:41,960
and make it look a little bit more interesting.

319
00:17:43,400 --> 00:17:45,802
The next thing I need to do is take that mask

320
00:17:46,422 --> 00:17:48,903
and map it to my color gradient.

321
00:17:50,064 --> 00:17:51,524
So this is a gradient that I created

322
00:17:51,564 --> 00:17:52,845
based on the reference images,

323
00:17:53,405 --> 00:17:54,666
just kind of color picking,

324
00:17:55,466 --> 00:17:57,727
kind of a darker red, orange,

325
00:17:58,628 --> 00:18:00,949
leading up to a yellow and then almost white

326
00:18:01,169 --> 00:18:02,170
at the hottest part of the.

327
00:18:02,735 --> 00:18:03,255
the gradient.

328
00:18:04,315 --> 00:18:06,516
All right, so I'm going to take my mask here

329
00:18:07,157 --> 00:18:09,818
and use that as my coordinate to look up

330
00:18:09,998 --> 00:18:12,279
into my small gradient texture.

331
00:18:12,839 --> 00:18:13,719
I'm able to store this.

332
00:18:14,100 --> 00:18:16,761
In the previous slide, this gradient looks really big,

333
00:18:16,801 --> 00:18:18,582
but I'm able to store it in an image that's

334
00:18:18,622 --> 00:18:21,043
only like 32 by 4 pixels, because I

335
00:18:21,083 --> 00:18:22,803
don't need a ton of detail, because it's

336
00:18:22,863 --> 00:18:24,204
a nice, smooth gradient.

337
00:18:25,395 --> 00:18:27,456
All right, so then I plug that color detail

338
00:18:27,536 --> 00:18:30,238
into my base color and also my emissive color,

339
00:18:30,919 --> 00:18:33,941
and I end up with something that looks much more like lava.

340
00:18:35,482 --> 00:18:36,423
But we're not quite there yet.

341
00:18:36,443 --> 00:18:37,904
There's a couple of things still missing.

342
00:18:38,824 --> 00:18:40,886
First of all, I wanna mask out the lava

343
00:18:41,006 --> 00:18:43,388
so that it's not as bright on the edges

344
00:18:44,048 --> 00:18:47,791
to kind of mimic the fact that it's gonna be cool

345
00:18:48,552 --> 00:18:51,073
on the edges but more hot in the center.

346
00:18:51,867 --> 00:18:54,329
And so I created another gradient image that just goes

347
00:18:54,409 --> 00:18:56,150
from black to white to black again.

348
00:18:56,991 --> 00:19:00,493
And then I multiply from one side to the other,

349
00:19:00,533 --> 00:19:02,194
it's going black to white to black again.

350
00:19:02,214 --> 00:19:04,996
And then I multiply my mask by that.

351
00:19:06,777 --> 00:19:08,839
And I'm able to get an effect that looks like this.

352
00:19:09,019 --> 00:19:10,860
So here's what it used to look like.

353
00:19:11,976 --> 00:19:13,377
And then when we apply that mask,

354
00:19:13,918 --> 00:19:17,601
kind of masks out the edges so that over here,

355
00:19:17,841 --> 00:19:19,883
I'm not getting hot lava,

356
00:19:19,923 --> 00:19:23,286
but I'm mostly isolating that to the center of the flow.

357
00:19:25,467 --> 00:19:27,429
All right, now there's one more thing that I need,

358
00:19:27,449 --> 00:19:29,571
and it's probably obvious.

359
00:19:29,631 --> 00:19:31,212
Like, you've been staring at this lava,

360
00:19:31,232 --> 00:19:32,413
and you're like, why isn't it moving?

361
00:19:32,473 --> 00:19:33,814
It's supposed to be flowing, right?

362
00:19:33,874 --> 00:19:34,715
Lava flows.

363
00:19:35,376 --> 00:19:36,697
So that's what we're gonna add next.

364
00:19:37,297 --> 00:19:38,999
And we're gonna do it with a flow map.

365
00:19:39,938 --> 00:19:41,239
And I'm not gonna spend a lot of time

366
00:19:41,279 --> 00:19:43,140
going into what a flow map is,

367
00:19:44,021 --> 00:19:45,962
because at last year's GDC,

368
00:19:46,863 --> 00:19:50,766
Abel spent his entire talk talking about what a flow map is.

369
00:19:51,466 --> 00:19:53,148
But just really briefly,

370
00:19:53,648 --> 00:19:54,889
what you do with a flow map

371
00:19:55,049 --> 00:19:57,151
is you stretch the UVs of a texture

372
00:19:57,631 --> 00:19:59,192
along a specific direction,

373
00:19:59,332 --> 00:20:01,154
and that direction is defined in the flow map.

374
00:20:01,914 --> 00:20:04,275
And then as the UVs become too stretched,

375
00:20:04,895 --> 00:20:06,895
you crossfade to another texture,

376
00:20:07,575 --> 00:20:08,756
which is also stretching,

377
00:20:08,856 --> 00:20:10,636
and you kind of ping pong back and forth.

378
00:20:11,076 --> 00:20:12,997
So one texture is stretching out,

379
00:20:13,017 --> 00:20:14,937
and then you fade to the other one, and it's moving.

380
00:20:15,277 --> 00:20:17,278
And this one, while you're seeing this one,

381
00:20:17,318 --> 00:20:18,258
this one pops back.

382
00:20:18,658 --> 00:20:20,278
But because you're fading back and forth,

383
00:20:20,338 --> 00:20:21,199
you hide the pop.

384
00:20:22,019 --> 00:20:23,279
So that's what flow maps are.

385
00:20:23,699 --> 00:20:25,600
And in this case, I'm gonna use the flow maps

386
00:20:26,180 --> 00:20:29,120
to make the lava flow faster in the center

387
00:20:29,561 --> 00:20:30,721
and slower on the edges.

388
00:20:31,832 --> 00:20:36,575
I could just scroll the UVs so that it all would move uniform, but I don't think that

389
00:20:36,595 --> 00:20:37,416
would look as nice.

390
00:20:37,976 --> 00:20:39,757
And so we're gonna use a flow map instead.

391
00:20:41,519 --> 00:20:46,922
And so here's my graph that sets up the UV coordinates to sample my two textures.

392
00:20:47,483 --> 00:20:49,624
So I have my UV1 and my UV2.

393
00:20:50,485 --> 00:20:56,609
And then I also have this logic here that's gonna set up the math to blend back and forth

394
00:20:56,829 --> 00:20:57,990
between the two textures.

395
00:20:59,351 --> 00:21:00,812
So here's my graph as it was.

396
00:21:01,868 --> 00:21:06,352
And now it becomes a little more complicated because I'm having to sample two textures,

397
00:21:06,832 --> 00:21:09,194
both of the base color and of the utilities.

398
00:21:10,695 --> 00:21:17,781
And so this node right here is what I showed on the previous slide of the logic that I

399
00:21:17,801 --> 00:21:19,742
was using to set up the UVs for the flow map.

400
00:21:20,952 --> 00:21:23,913
And then for my flow, I'm using this same gradient down here

401
00:21:23,953 --> 00:21:26,914
that I was using to multiply the brightness,

402
00:21:26,994 --> 00:21:28,875
so the black to white to black.

403
00:21:29,295 --> 00:21:31,196
And that's gonna make it flow faster in the middle

404
00:21:31,696 --> 00:21:32,757
and slower on the edges.

405
00:21:35,078 --> 00:21:36,759
So then we end up with something that looks like this.

406
00:21:36,779 --> 00:21:39,340
So you can see that over here on the edge of the effect,

407
00:21:39,420 --> 00:21:40,660
it's hardly moving at all,

408
00:21:41,061 --> 00:21:44,182
but then the lava in the middle is flowing faster.

409
00:21:50,133 --> 00:21:52,794
All right, and that is the lava effect.

410
00:21:52,974 --> 00:21:55,195
And I have a little video here that kind of shows

411
00:21:55,995 --> 00:21:58,596
this example plus a couple of other ones

412
00:21:59,096 --> 00:22:02,377
so that you can see in context what this effect looked like.

413
00:22:04,278 --> 00:22:06,358
I also, I didn't show this in the shader itself,

414
00:22:06,418 --> 00:22:08,679
but I also added some controls that would allow

415
00:22:09,259 --> 00:22:11,600
the environment artists to control the temperature

416
00:22:11,640 --> 00:22:14,861
of the lava in various places along the flow.

417
00:22:15,601 --> 00:22:16,902
So in the...

418
00:22:17,877 --> 00:22:21,521
In one of the shots you could see that it was really red looking and then in other places

419
00:22:21,601 --> 00:22:26,706
it looks really warm and that's because they were able to control at each point along this

420
00:22:26,826 --> 00:22:29,569
flow how hot and how cold it was.

421
00:22:31,631 --> 00:22:33,293
All right, let's move on to the next example.

422
00:22:34,434 --> 00:22:37,617
So now we're going to talk about the dynamic weather in the game.

423
00:22:40,065 --> 00:22:43,026
And so, as with the lava, we needed to go out

424
00:22:43,086 --> 00:22:44,106
and capture reference.

425
00:22:44,566 --> 00:22:46,767
And this is, yet again, more evidence

426
00:22:47,107 --> 00:22:49,687
of how weird shader artists are.

427
00:22:50,468 --> 00:22:53,148
Here I am with my camera, standing in the rain,

428
00:22:54,629 --> 00:22:57,510
taking pictures of things with raindrops on them.

429
00:22:58,370 --> 00:23:00,871
So, you can see that from the reference images,

430
00:23:02,956 --> 00:23:07,418
Hard surfaces have rain that hits them and it kind of rolls off and runs down the side.

431
00:23:08,998 --> 00:23:11,700
Porous surfaces, the rain soaks into them.

432
00:23:12,940 --> 00:23:16,742
After it's been raining for a while, puddles form and the puddles have ripples.

433
00:23:17,602 --> 00:23:22,505
And so these are all the kinds of things that we want to try to imitate as we create the weather for our game.

434
00:23:25,658 --> 00:23:27,679
So as I said, the next thing that we do

435
00:23:27,779 --> 00:23:30,201
is identify these key steps.

436
00:23:30,261 --> 00:23:32,442
So we're gonna talk about creating wetness,

437
00:23:33,483 --> 00:23:36,625
creating rain drops on the horizontal surfaces,

438
00:23:37,465 --> 00:23:41,608
rain drips on vertical surfaces, and also puddles.

439
00:23:43,629 --> 00:23:44,750
So let's jump right into it.

440
00:23:45,110 --> 00:23:46,531
First, we're gonna talk about wetness.

441
00:23:47,452 --> 00:23:50,533
So when surfaces get wet, what happens?

442
00:23:51,194 --> 00:23:52,735
If the surface is porous,

443
00:23:54,114 --> 00:23:56,455
The liquid is going to soak into them

444
00:23:57,055 --> 00:23:58,556
and it's gonna make the surface look

445
00:23:58,776 --> 00:24:00,497
more saturated and darker.

446
00:24:01,518 --> 00:24:04,220
And if the surface is impermeable,

447
00:24:04,760 --> 00:24:06,881
the water is gonna pool on the surface

448
00:24:07,161 --> 00:24:08,202
and make it more smooth.

449
00:24:09,022 --> 00:24:11,244
So this shader function is doing just that.

450
00:24:11,944 --> 00:24:14,966
I have a mask down here that's determining

451
00:24:15,066 --> 00:24:16,887
how wet the surface is gonna be.

452
00:24:17,627 --> 00:24:20,589
And it's also using this term called impermeability

453
00:24:20,669 --> 00:24:21,289
to figure out

454
00:24:22,229 --> 00:24:22,950
what should happen.

455
00:24:23,270 --> 00:24:26,552
And I also have this term here, the drop and puddle mask,

456
00:24:26,612 --> 00:24:29,013
because we know that it's gonna be 100% wet

457
00:24:29,693 --> 00:24:31,975
if it's puddle or if it's a raindrop.

458
00:24:32,795 --> 00:24:36,637
So then I use that value to determine the final base color,

459
00:24:36,678 --> 00:24:38,358
the smoothness and reflectance.

460
00:24:39,419 --> 00:24:41,640
Smoothness and reflectance are fairly straightforward.

461
00:24:41,780 --> 00:24:44,022
I can just blend between the current smoothness

462
00:24:44,582 --> 00:24:45,843
and the smoothness of water

463
00:24:47,024 --> 00:24:48,664
based on the mask that I created.

464
00:24:49,590 --> 00:24:53,573
and the same with reflectance, blend between the current reflectance and reflectance of

465
00:24:53,653 --> 00:24:55,774
water based on the mass that I created.

466
00:24:56,535 --> 00:24:59,257
The base color is just a little bit more involved.

467
00:25:00,057 --> 00:25:05,801
Here I'm blending between the base color and my adjusted wet color based on the mass that

468
00:25:05,841 --> 00:25:06,282
I created.

469
00:25:07,848 --> 00:25:10,169
And in order to create the adjusted wet color,

470
00:25:11,189 --> 00:25:14,150
I use this desaturate node with a negative value,

471
00:25:14,310 --> 00:25:16,571
which actually makes the color more saturated.

472
00:25:16,751 --> 00:25:18,051
I know it's called desaturate,

473
00:25:18,091 --> 00:25:19,832
but if you pass a negative value into it,

474
00:25:19,872 --> 00:25:21,392
it actually saturates.

475
00:25:22,433 --> 00:25:24,093
And then I have this multiplier here,

476
00:25:24,733 --> 00:25:26,014
which is darkening the color.

477
00:25:26,554 --> 00:25:28,675
So this is the wet color and the dry color,

478
00:25:29,355 --> 00:25:31,235
and I get my final color based on

479
00:25:31,275 --> 00:25:32,996
where the wetness shows up.

480
00:25:36,098 --> 00:25:39,520
All right, next I want to show raindrops.

481
00:25:40,480 --> 00:25:42,721
And there's a really important principle

482
00:25:42,741 --> 00:25:44,402
that I want to talk about with this slide.

483
00:25:44,762 --> 00:25:47,643
And that is, it's really important to do

484
00:25:47,783 --> 00:25:51,505
as few texture samples as possible in your shaders.

485
00:25:52,005 --> 00:25:53,946
The more times you sample a texture,

486
00:25:54,006 --> 00:25:55,166
the more expensive it is.

487
00:25:56,027 --> 00:25:58,308
And so here I have four different maps

488
00:25:58,809 --> 00:26:01,571
that I need in order to create my raindrop effect,

489
00:26:02,171 --> 00:26:04,113
but I wanna figure out a way that I can pack them

490
00:26:04,233 --> 00:26:05,974
all together into a single texture

491
00:26:05,994 --> 00:26:08,096
so that I can just do one texture lookup

492
00:26:08,756 --> 00:26:10,417
for the entire raindrop effect.

493
00:26:11,058 --> 00:26:12,859
So my normal map has three channels,

494
00:26:13,840 --> 00:26:17,663
and I know that I can derive the Z component

495
00:26:17,723 --> 00:26:19,644
of the normal in the shader,

496
00:26:19,844 --> 00:26:22,586
and so I really just need two channels for my normal map.

497
00:26:23,615 --> 00:26:26,676
Then my second map here is temporal offset map.

498
00:26:27,297 --> 00:26:29,357
And every drop here, I don't know if you can see

499
00:26:29,417 --> 00:26:30,878
on the slide there, but every drop

500
00:26:30,918 --> 00:26:32,198
is a different shade of gray.

501
00:26:33,079 --> 00:26:35,019
And I'm gonna combine that with time.

502
00:26:35,039 --> 00:26:37,580
I'm actually gonna subtract it from my time value

503
00:26:38,020 --> 00:26:39,661
so that when the drops are animated,

504
00:26:39,721 --> 00:26:41,501
they happen all at different times

505
00:26:41,561 --> 00:26:44,262
instead of all at once in sync.

506
00:26:45,443 --> 00:26:46,763
And then I have two masks here.

507
00:26:46,883 --> 00:26:48,764
One mask is for my animated drops,

508
00:26:48,904 --> 00:26:50,885
and my other mask is for my static drops.

509
00:26:52,714 --> 00:26:57,437
And if I put my normal map in my red and my green channel

510
00:26:57,997 --> 00:27:00,399
and my temporal offset mask in my blue channel,

511
00:27:00,839 --> 00:27:04,141
that leaves me one channel left and two masks.

512
00:27:05,602 --> 00:27:07,883
But in this case, the really nice thing about these masks

513
00:27:08,103 --> 00:27:11,885
is that the data doesn't overlap.

514
00:27:13,346 --> 00:27:17,028
So the animated drops fit in between the static drops.

515
00:27:18,063 --> 00:27:21,906
And so what I can do is adjust my animated drop mask

516
00:27:22,406 --> 00:27:24,807
so that it goes from .5 to one,

517
00:27:25,888 --> 00:27:29,470
and my static drop mask so that it goes from .5 to zero.

518
00:27:29,490 --> 00:27:30,791
Does that make sense?

519
00:27:31,271 --> 00:27:34,933
So I'm packing the two textures together

520
00:27:35,033 --> 00:27:36,354
into one single channel.

521
00:27:38,335 --> 00:27:39,335
So when I'm able to do that,

522
00:27:39,635 --> 00:27:43,297
then I can take all this data and put it into one texture,

523
00:27:43,698 --> 00:27:47,220
and then just use one texture sample to create my effect.

524
00:27:48,756 --> 00:27:50,597
And so here's what my shader graph looks like

525
00:27:50,677 --> 00:27:52,998
for creating the raindrops.

526
00:27:54,398 --> 00:27:58,059
This up here is multiplying by two and subtracting one,

527
00:27:58,279 --> 00:28:00,740
which is a standard operation that you have to do

528
00:28:00,800 --> 00:28:01,621
for a normal map.

529
00:28:02,201 --> 00:28:04,282
To switch it from your texture,

530
00:28:04,322 --> 00:28:06,122
you're storing your data from zero to one,

531
00:28:06,622 --> 00:28:09,143
but in a normal map it needs to be negative one to one.

532
00:28:09,732 --> 00:28:13,095
And so I expand that by multiplying by two and subtracting one.

533
00:28:13,635 --> 00:28:16,778
And that gives me my normal multiplied by my mask.

534
00:28:16,938 --> 00:28:19,560
And there's the normal that I need for the drops.

535
00:28:20,821 --> 00:28:22,663
So let's talk about how the mask is created.

536
00:28:23,204 --> 00:28:26,927
Here's the blue channel, which is my temporal offset mask.

537
00:28:27,187 --> 00:28:29,269
And as I said, I subtract that from time.

538
00:28:29,896 --> 00:28:32,919
and then I take the fractional value of what's left.

539
00:28:32,959 --> 00:28:35,562
And what that does is it gives me time

540
00:28:35,722 --> 00:28:37,604
that proceeds from zero to one

541
00:28:37,744 --> 00:28:39,366
and then jumps back to zero to one

542
00:28:39,446 --> 00:28:41,908
and then it's like making it into a loop.

543
00:28:42,549 --> 00:28:44,451
And with that temporal offset mask,

544
00:28:44,971 --> 00:28:48,014
it makes every drop loop at a different time.

545
00:28:51,872 --> 00:28:54,252
Now, there's something really interesting going on here,

546
00:28:54,272 --> 00:28:56,133
and that is these two nodes that I'm using

547
00:28:56,213 --> 00:28:57,714
to expand my normal map,

548
00:28:58,374 --> 00:29:01,815
that's exactly what I need to expand and separate out

549
00:29:01,955 --> 00:29:06,016
the two masks that I packed together in the same channel.

550
00:29:06,537 --> 00:29:09,178
So I had one that went from .5 to one,

551
00:29:09,318 --> 00:29:11,578
and the other one that went from .5 to zero.

552
00:29:12,479 --> 00:29:14,459
And with this times two minus one,

553
00:29:15,080 --> 00:29:17,540
now I have one map that goes from zero to one,

554
00:29:17,761 --> 00:29:20,061
and the other map that goes from zero to negative one.

555
00:29:20,822 --> 00:29:25,303
And so it's really easy to just add a single saturate node

556
00:29:25,983 --> 00:29:28,404
to get the one mask because then I throw out the data

557
00:29:28,444 --> 00:29:31,425
that's less than zero and I just have the mask left over

558
00:29:31,445 --> 00:29:32,486
that's from zero to one.

559
00:29:33,126 --> 00:29:37,147
And then for my static drops, I multiply it by a negative one

560
00:29:37,227 --> 00:29:39,448
because that data is from zero to negative one.

561
00:29:39,468 --> 00:29:41,709
So if I multiply it by negative one, I flip it over

562
00:29:42,369 --> 00:29:45,490
and then I saturate that and I have my animated drop mask.

563
00:29:46,223 --> 00:29:48,984
So I'm able to share these two nodes

564
00:29:49,004 --> 00:29:52,446
that unpack my normal map in order to also unpack

565
00:29:53,467 --> 00:29:56,848
my animated and static drop mask.

566
00:29:57,649 --> 00:30:01,931
So then I combine those two masks

567
00:30:02,832 --> 00:30:05,053
and I multiply them by this other mask down here.

568
00:30:05,113 --> 00:30:07,714
Now this is my world space normal

569
00:30:08,294 --> 00:30:09,455
with my Y component.

570
00:30:10,537 --> 00:30:13,779
facing up and also a factor that I pass into this

571
00:30:13,879 --> 00:30:15,961
to determine like is it raining or not.

572
00:30:16,762 --> 00:30:18,944
And so then I'm able to multiply my map by that

573
00:30:19,004 --> 00:30:21,986
and I get my drop mask out and my normal map out.

574
00:30:23,608 --> 00:30:25,289
And my result looks something like this.

575
00:30:25,329 --> 00:30:28,071
You can see on the top of the surface here,

576
00:30:28,652 --> 00:30:31,214
I've got drops and some of them are static,

577
00:30:31,314 --> 00:30:34,076
some of them are animated and I don't get any drops

578
00:30:34,256 --> 00:30:35,758
here on the side of the object.

579
00:30:39,119 --> 00:30:40,540
All right, let's take a look at puddles.

580
00:30:41,801 --> 00:30:44,524
Now, I know that puddles have been

581
00:30:44,544 --> 00:30:48,708
a kind of a controversial topic lately,

582
00:30:51,050 --> 00:30:52,132
but we're gonna talk about them anyway.

583
00:30:52,932 --> 00:30:55,775
So, we wanted puddles to form all over the map.

584
00:30:57,694 --> 00:31:01,335
and we're able to procedurally decide where to put them

585
00:31:01,415 --> 00:31:02,836
based on a noise texture.

586
00:31:03,416 --> 00:31:06,518
And this particular shader that I'm showing here

587
00:31:06,698 --> 00:31:10,380
is for our props, but on terrain we actually used

588
00:31:11,020 --> 00:31:13,321
two of them that were scaled differently

589
00:31:13,401 --> 00:31:14,482
and combined with each other

590
00:31:14,982 --> 00:31:17,083
so that the tiling was much less apparent.

591
00:31:17,123 --> 00:31:18,984
But I wanted to show kind of a simple example

592
00:31:19,624 --> 00:31:21,085
so that it was obvious what was going on.

593
00:31:21,105 --> 00:31:24,607
But basically this is projected from world space Y.

594
00:31:27,402 --> 00:31:30,083
Down here for puddle size, one of the neat things

595
00:31:30,143 --> 00:31:31,603
about the Frostbite engine is that I'm

596
00:31:32,043 --> 00:31:34,644
able to really easily pass in parameters

597
00:31:34,804 --> 00:31:36,684
from outside the shader that the engine

598
00:31:36,744 --> 00:31:37,945
is controlling externally.

599
00:31:38,525 --> 00:31:41,445
So in this case, this wetness parameters red channel

600
00:31:41,966 --> 00:31:44,566
contains a value from the environment system

601
00:31:45,026 --> 00:31:46,907
that is the accumulation of water.

602
00:31:47,547 --> 00:31:49,827
And what this does is the game is keeping track

603
00:31:49,867 --> 00:31:52,848
of how long it's been raining, and the longer it rains,

604
00:31:52,928 --> 00:31:54,288
the higher this value gets.

605
00:31:54,989 --> 00:31:58,611
So it's basically controlling how big the puddles can be.

606
00:31:59,712 --> 00:32:01,333
And then I remap these two values

607
00:32:01,433 --> 00:32:03,074
and pass them into my LensStep,

608
00:32:03,514 --> 00:32:07,997
which again is remapping my texture color.

609
00:32:08,257 --> 00:32:10,078
So the puddles start out really small

610
00:32:10,219 --> 00:32:11,499
in the areas that are black,

611
00:32:12,180 --> 00:32:13,781
and they grow over time

612
00:32:14,361 --> 00:32:16,663
as my wetness red channel value gets higher.

613
00:32:18,938 --> 00:32:23,842
Then, I also have another y up value here

614
00:32:24,082 --> 00:32:26,284
that's masking so the puddles only appear

615
00:32:26,444 --> 00:32:27,605
on up-facing surfaces.

616
00:32:28,446 --> 00:32:30,167
And I have some logic up here in the shader

617
00:32:30,187 --> 00:32:32,569
that's controlling what the normals look like in the puddles.

618
00:32:33,249 --> 00:32:36,312
I have one node that does the wind ripples

619
00:32:36,532 --> 00:32:39,334
and another node that does the rain ripples.

620
00:32:41,356 --> 00:32:43,958
So then I add those together and I blend

621
00:32:44,018 --> 00:32:46,500
between the current normal and the puddle normal.

622
00:32:47,042 --> 00:32:48,803
and here I pass out my puddle mask

623
00:32:49,084 --> 00:32:51,686
and my normal mask for the puddles.

624
00:32:52,987 --> 00:32:55,570
Now, if you've attended my talk two years ago,

625
00:32:55,590 --> 00:32:58,813
I actually went into a whole lot of detail

626
00:32:59,053 --> 00:33:01,815
about how these drop ripples were created.

627
00:33:02,845 --> 00:33:06,406
And in that particular talk, I was using the Unreal engine,

628
00:33:06,446 --> 00:33:09,026
so you can see this node graph looks a little bit different

629
00:33:09,046 --> 00:33:10,287
than the other ones that I've been showing,

630
00:33:10,307 --> 00:33:12,827
and that's because I built this example in Unreal,

631
00:33:12,887 --> 00:33:15,888
but it's basically the exact same thing in Frostbite.

632
00:33:16,768 --> 00:33:18,209
Because I talked about it back then,

633
00:33:18,349 --> 00:33:20,169
I'm not gonna go into a whole lot of detail

634
00:33:20,809 --> 00:33:22,910
about how these ripples are created now,

635
00:33:22,990 --> 00:33:25,371
but please check out the talk that I gave

636
00:33:25,771 --> 00:33:30,232
two years ago on the vault to go into more detail

637
00:33:30,252 --> 00:33:31,592
about how these ripples were created.

638
00:33:32,601 --> 00:33:34,162
So I take this ripple logic,

639
00:33:35,503 --> 00:33:37,285
and then I duplicate it four times.

640
00:33:37,325 --> 00:33:38,706
You can see how that's happening here.

641
00:33:39,427 --> 00:33:41,308
And the reason that it's duplicated four times is

642
00:33:42,589 --> 00:33:44,131
if you're just doing it like this,

643
00:33:44,992 --> 00:33:47,333
there's no possible chance that any of these ripples

644
00:33:47,374 --> 00:33:48,494
can overlap each other.

645
00:33:49,723 --> 00:33:51,103
And that's really what we wanted to do.

646
00:33:51,543 --> 00:33:54,464
And so I needed to do this effect multiple times

647
00:33:55,324 --> 00:33:58,445
with different time offsets, different speeds,

648
00:33:58,865 --> 00:34:01,386
different positions and scale offsets as well.

649
00:34:01,906 --> 00:34:03,667
So when all of those are combined together,

650
00:34:04,087 --> 00:34:06,247
you get an effect that's much more convincing.

651
00:34:08,288 --> 00:34:10,469
So here I have my four ripple nodes

652
00:34:10,809 --> 00:34:12,409
and I combine those normals together

653
00:34:13,069 --> 00:34:14,010
and then I pass them out.

654
00:34:14,738 --> 00:34:18,099
Now, if you really want to get a lot of detail on creating

655
00:34:18,159 --> 00:34:21,320
weather effects and rain and puddles and ripples,

656
00:34:22,681 --> 00:34:26,682
I recommend you take a look at Sebastian Lagarde's blog online.

657
00:34:27,262 --> 00:34:28,763
It's absolutely amazing.

658
00:34:28,823 --> 00:34:31,104
He goes into all kinds of scientific detail

659
00:34:31,144 --> 00:34:33,145
about what surfaces look like when they're wet,

660
00:34:33,605 --> 00:34:34,425
how they change.

661
00:34:35,305 --> 00:34:36,886
And he's got all kinds of references.

662
00:34:37,186 --> 00:34:39,787
And it's just really, really useful material.

663
00:34:42,396 --> 00:34:44,018
So here's what our puddles look like.

664
00:34:44,058 --> 00:34:47,260
And in this particular video, I didn't actually capture it long

665
00:34:47,301 --> 00:34:48,862
enough to see the puddles grow.

666
00:34:49,663 --> 00:34:52,585
But you can see that they do have the wind ripples

667
00:34:53,066 --> 00:34:54,127
and the rain ripples.

668
00:34:55,128 --> 00:34:58,491
And we get puddles on the up-facing surfaces of terrain

669
00:34:59,372 --> 00:35:00,593
and objects that are flat.

670
00:35:09,930 --> 00:35:12,071
All right, so I talked about how to create raindrops,

671
00:35:12,431 --> 00:35:13,912
and I talked about how to create puddles,

672
00:35:14,512 --> 00:35:15,692
and we talked about wetness.

673
00:35:15,933 --> 00:35:18,034
So what this graph is doing is it's combining

674
00:35:18,114 --> 00:35:19,294
all of those effects together.

675
00:35:19,954 --> 00:35:22,976
So this node here represents the drops graph

676
00:35:23,176 --> 00:35:24,116
that I had previously.

677
00:35:25,057 --> 00:35:27,838
This node here represents the puddles graph that I had.

678
00:35:28,599 --> 00:35:30,319
And then down here what I'm doing is

679
00:35:30,339 --> 00:35:35,122
I'm making the world kind of wet overall.

680
00:35:36,662 --> 00:35:36,822
So...

681
00:35:37,924 --> 00:35:41,288
This multiply here is like a value of .6,

682
00:35:42,369 --> 00:35:47,334
and so everything in general gets about .6 wet

683
00:35:48,575 --> 00:35:50,056
after it's been raining for a little while.

684
00:35:50,777 --> 00:35:52,179
So I know that my drops are 100% wet,

685
00:35:52,199 --> 00:35:52,999
my puddles are 100% wet.

686
00:35:55,802 --> 00:35:58,804
And then everything else is about 60% wet.

687
00:35:59,244 --> 00:36:01,086
And I combine those together, and then I

688
00:36:01,326 --> 00:36:04,047
run that through my wetness so that we

689
00:36:04,087 --> 00:36:06,629
can create wetness where there's a puddle, where there's

690
00:36:06,669 --> 00:36:10,531
a raindrop, or just in general for 60% of everything.

691
00:36:13,099 --> 00:36:15,721
And so that's how our weather effects are created.

692
00:36:15,761 --> 00:36:17,382
Now this is a really simple example.

693
00:36:17,803 --> 00:36:19,824
We actually made the liquid look different

694
00:36:19,944 --> 00:36:23,207
on different surfaces, so it works differently on rocks

695
00:36:23,267 --> 00:36:25,569
and it works differently on hard surface objects

696
00:36:25,649 --> 00:36:27,030
and it works differently on terrain.

697
00:36:27,690 --> 00:36:29,712
But this is a fairly straightforward way

698
00:36:29,752 --> 00:36:31,974
of illustrating some of the things that it does.

699
00:36:31,994 --> 00:36:36,697
All right, and here's kind of a montage video

700
00:36:36,757 --> 00:36:38,719
showing what it looks like on different surfaces.

701
00:36:40,929 --> 00:36:45,950
So here are some ruin walls. You can see the water kind of flowing down the sides.

702
00:36:47,110 --> 00:36:50,251
The puddles with the wind ripples and rain ripples.

703
00:36:51,591 --> 00:36:54,211
Also water flowing down the sides of rocks.

704
00:36:56,012 --> 00:36:58,892
And you can see droplets on hard surface objects.

705
00:37:03,013 --> 00:37:08,655
And this was so much fun to do. I just absolutely loved figuring out how to do all these things.

706
00:37:25,604 --> 00:37:28,726
All right, let's move on to water surfaces.

707
00:37:32,107 --> 00:37:33,768
We had tons of water in our game.

708
00:37:33,808 --> 00:37:37,490
I think our environment artists decided early on that they really liked the way that water

709
00:37:37,510 --> 00:37:39,271
looked and so they were just going to put it everywhere.

710
00:37:40,071 --> 00:37:41,792
So we ended up with all kinds of water.

711
00:37:42,815 --> 00:37:45,638
But I'm gonna go over kind of the basics

712
00:37:45,678 --> 00:37:46,919
of creating a water shader,

713
00:37:47,780 --> 00:37:49,501
and then we'll show some examples

714
00:37:49,581 --> 00:37:51,563
of the variety of water that we had.

715
00:37:51,623 --> 00:37:54,486
So here are some images that we collected

716
00:37:55,166 --> 00:37:58,349
kind of as reference to figure out what water looks like.

717
00:37:59,230 --> 00:38:01,713
And these are some of the key elements we identified.

718
00:38:01,773 --> 00:38:04,695
So water has ripples on the surface.

719
00:38:05,776 --> 00:38:08,939
It changes color as you go from shallow water to deep color.

720
00:38:09,659 --> 00:38:11,080
It also changes opacity.

721
00:38:11,581 --> 00:38:16,604
It's really transparent when it's shallow and it gets less transparent the deeper that you go.

722
00:38:17,065 --> 00:38:20,788
Then it has really nice looking reflections and it also has refraction.

723
00:38:22,349 --> 00:38:23,850
So this is what we start out with.

724
00:38:23,890 --> 00:38:26,152
We start out with just a completely blank slate.

725
00:38:26,792 --> 00:38:27,973
We have a flat plane here,

726
00:38:28,453 --> 00:38:30,195
just a solid gray color,

727
00:38:30,615 --> 00:38:33,297
and we need to create a shader that makes this look like water.

728
00:38:35,170 --> 00:38:37,370
So I'm gonna start off with the surface ripples.

729
00:38:38,170 --> 00:38:40,131
And you can see here I have a normal map

730
00:38:40,311 --> 00:38:42,191
that looks like rippling water,

731
00:38:42,891 --> 00:38:44,191
and I'm using three of these,

732
00:38:44,431 --> 00:38:46,152
and basically these are different sizes,

733
00:38:46,712 --> 00:38:48,852
and I'm scrolling them at different rates

734
00:38:49,632 --> 00:38:51,653
across each other and combining those together.

735
00:38:51,673 --> 00:38:55,313
Now I need to step back and tell a story here.

736
00:38:56,113 --> 00:38:59,274
I gave my talk for my wife maybe two weeks ago,

737
00:39:00,374 --> 00:39:03,435
and when we got to this slide, she said, wait a minute.

738
00:39:05,396 --> 00:39:08,259
She said, a couple of weeks ago, you and I were on a date,

739
00:39:09,100 --> 00:39:11,182
and we were taking a walk down by the river.

740
00:39:11,222 --> 00:39:12,863
This is the River Walk in San Antonio,

741
00:39:12,923 --> 00:39:14,185
for those of you that are familiar with it.

742
00:39:15,366 --> 00:39:16,767
And you pointed out the water to me,

743
00:39:16,787 --> 00:39:18,489
and you said, isn't that beautiful water?

744
00:39:18,569 --> 00:39:19,910
It has small ripples.

745
00:39:19,930 --> 00:39:21,231
It has medium ripples.

746
00:39:21,312 --> 00:39:22,473
It has large ripples.

747
00:39:23,013 --> 00:39:24,695
And I thought you were being romantic.

748
00:39:26,477 --> 00:39:28,559
She said, you were doing research, weren't you?

749
00:39:31,104 --> 00:39:33,588
It's really easy to get into trouble with your wife

750
00:39:34,309 --> 00:39:35,631
when you're excited about things

751
00:39:36,271 --> 00:39:39,676
and you're out on a walk, so be careful.

752
00:39:40,598 --> 00:39:42,120
Anyway, so what this network is doing

753
00:39:42,160 --> 00:39:44,703
is it's combining three different sizes of ripples together.

754
00:39:45,750 --> 00:39:48,471
And we also have this control here that blends between,

755
00:39:48,612 --> 00:39:50,912
this blue color here represents a flat normal,

756
00:39:51,473 --> 00:39:53,754
and we're able to use ripple one suppression,

757
00:39:53,794 --> 00:39:55,794
these are values that I can pass into the function,

758
00:39:56,395 --> 00:39:59,096
ripple one suppression and ripple three suppression

759
00:39:59,496 --> 00:40:02,597
to control how much of each of those I'm blending together

760
00:40:03,578 --> 00:40:07,119
so that I can get more big waves or more small waves.

761
00:40:09,005 --> 00:40:11,726
And so here's the very simple start of my shader.

762
00:40:12,686 --> 00:40:14,747
The ripple normals are in this node,

763
00:40:14,767 --> 00:40:17,607
then I use this node to transform them into world space

764
00:40:18,308 --> 00:40:20,308
because that's what Frostbite wants.

765
00:40:20,988 --> 00:40:22,769
And then I just pass that into my root.

766
00:40:23,669 --> 00:40:25,809
And I get something that looks like this.

767
00:40:27,610 --> 00:40:29,470
So it's not water yet, but you can see

768
00:40:29,510 --> 00:40:31,911
that the ripples are sort of trying

769
00:40:31,951 --> 00:40:34,171
to approximate something that might become water

770
00:40:34,211 --> 00:40:35,312
if we do a little bit more with it.

771
00:40:38,330 --> 00:40:42,054
All right, so the next thing that we want to do is use some depth.

772
00:40:42,614 --> 00:40:44,936
So I add this depth node, and what this does is...

773
00:40:47,363 --> 00:40:50,224
Surfaces below my water that are really far away,

774
00:40:50,284 --> 00:40:53,165
and I can specify a value for how deep the maximum is,

775
00:40:53,425 --> 00:40:54,866
that will appear white.

776
00:40:55,526 --> 00:40:57,007
And anything that's really shallow

777
00:40:57,127 --> 00:40:59,688
or right next to the surface of my water will appear black.

778
00:41:00,508 --> 00:41:01,849
So in this case, I'm just gonna start out

779
00:41:01,889 --> 00:41:03,410
by passing that into my base color

780
00:41:03,430 --> 00:41:04,470
and I get something like this.

781
00:41:04,530 --> 00:41:06,871
So you can see that it's sort of white down here

782
00:41:06,911 --> 00:41:09,692
where it's deep and black up here where it's shallow.

783
00:41:11,804 --> 00:41:14,206
So that creates a mask for me and then I'm able to use

784
00:41:14,246 --> 00:41:15,746
that mask to do some interesting things.

785
00:41:15,766 --> 00:41:18,068
So the first thing that I'm going to do with it is blend

786
00:41:18,088 --> 00:41:19,188
between two different colors.

787
00:41:19,208 --> 00:41:21,850
I kind of have this light green color where it's shallow

788
00:41:22,270 --> 00:41:25,172
and then this sort of darker blue color where it's deep.

789
00:41:26,572 --> 00:41:27,893
And that gives me something like this.

790
00:41:27,913 --> 00:41:29,534
So I have my darker blue color here

791
00:41:30,235 --> 00:41:31,775
and my lighter green color here.

792
00:41:32,536 --> 00:41:34,837
But I can also use this mask for opacity.

793
00:41:35,910 --> 00:41:40,192
And so in this case, I'm just going to take my depth opacity

794
00:41:40,252 --> 00:41:43,554
here, and I'm going to pass it into the opacity on my root

795
00:41:43,594 --> 00:41:43,814
node.

796
00:41:44,234 --> 00:41:47,216
Now, I'm adding a value of 0.2 because I don't ever

797
00:41:47,276 --> 00:41:50,177
want the water to become completely transparent.

798
00:41:50,277 --> 00:41:53,579
Even at the edges, I want it to have a little bit of opacity,

799
00:41:53,619 --> 00:41:55,219
so I add a value of 0.2 there.

800
00:41:55,920 --> 00:41:57,480
And so where I started out with this,

801
00:41:58,221 --> 00:42:00,722
when I use my depth for opacity, I

802
00:42:00,962 --> 00:42:02,423
end up with something that looks like this.

803
00:42:03,458 --> 00:42:06,480
Now, there's nothing amazing or fancy in my shader

804
00:42:06,520 --> 00:42:10,403
that's creating those caustic patterns dynamically,

805
00:42:10,763 --> 00:42:12,084
so don't kind of get that idea

806
00:42:12,104 --> 00:42:13,425
that I'm doing something amazing there.

807
00:42:13,965 --> 00:42:15,866
The caustics are a completely separate effect

808
00:42:16,487 --> 00:42:19,088
that we project using an environment decal.

809
00:42:19,789 --> 00:42:21,470
But they are there to illustrate the fact

810
00:42:21,510 --> 00:42:22,911
that you can see through the water,

811
00:42:23,511 --> 00:42:27,254
and it's more transparent where it's shallow,

812
00:42:27,354 --> 00:42:30,376
and then as it gets deeper, it's less transparent.

813
00:42:32,122 --> 00:42:33,663
All right, so there's still a little bit more

814
00:42:33,683 --> 00:42:35,683
that we need to do, and the next step that we're gonna do

815
00:42:35,923 --> 00:42:37,363
is add in some reflections.

816
00:42:38,224 --> 00:42:40,904
So this node takes my world space normal,

817
00:42:41,664 --> 00:42:45,145
and it generates reflectance and smoothness values.

818
00:42:45,205 --> 00:42:47,166
Now the smoothness values are pretty much constant.

819
00:42:47,186 --> 00:42:49,386
I think I just passed in like a value of .95

820
00:42:49,426 --> 00:42:50,046
or something like that.

821
00:42:50,546 --> 00:42:54,047
But for reflectance, what I want is to use a Fresnel term.

822
00:42:54,107 --> 00:42:59,769
So the water is more reflectant at a glancing angle,

823
00:42:59,909 --> 00:43:01,749
and then if I'm looking straight down into it.

824
00:43:02,650 --> 00:43:05,852
it's less reflectance, so that's what that's giving me there.

825
00:43:05,872 --> 00:43:10,055
And so this is what it looked like without the reflectance,

826
00:43:10,816 --> 00:43:12,597
and then I add in the reflections.

827
00:43:13,077 --> 00:43:15,359
You can see that I get really nice reflections out here

828
00:43:15,399 --> 00:43:17,301
where my water's at a glancing angle,

829
00:43:17,681 --> 00:43:20,823
but as I'm looking down directly into it, I get less.

830
00:43:22,164 --> 00:43:24,626
All right, now there's one last thing that's missing,

831
00:43:25,287 --> 00:43:27,549
and that is the refraction on the water.

832
00:43:28,709 --> 00:43:30,251
So I'm gonna add in one more node here

833
00:43:30,291 --> 00:43:31,352
which does refraction.

834
00:43:31,920 --> 00:43:33,880
It takes my tangent space normals

835
00:43:34,440 --> 00:43:37,041
and does a screen space distortion effect.

836
00:43:37,761 --> 00:43:39,481
And this also has a Fresnel term in it

837
00:43:39,541 --> 00:43:41,062
so that I'm only getting refraction

838
00:43:41,102 --> 00:43:43,002
when I'm looking down at the water

839
00:43:43,402 --> 00:43:44,803
and not when I'm looking across it.

840
00:43:44,863 --> 00:43:46,963
I wanna get reflections looking across it

841
00:43:47,403 --> 00:43:49,104
and refractions when I'm looking down.

842
00:43:50,984 --> 00:43:52,084
And so this is what it looks like

843
00:43:52,124 --> 00:43:54,605
without the distortion or without the refractions.

844
00:43:54,925 --> 00:43:56,805
And then when I add that in, I get something that.

845
00:43:57,881 --> 00:43:58,562
Looks pretty nice.

846
00:43:58,862 --> 00:43:59,784
Now we got some water.

847
00:43:59,804 --> 00:44:01,606
We've got reflections, refractions,

848
00:44:02,648 --> 00:44:06,333
depth-based opacity, and depth-based color,

849
00:44:06,714 --> 00:44:08,536
and then some nice ripples on the surface.

850
00:44:09,137 --> 00:44:10,259
And these are all of the elements

851
00:44:10,279 --> 00:44:13,083
that we put together to create basic water.

852
00:44:14,908 --> 00:44:17,550
We did all kinds of water for this game, like I said.

853
00:44:17,650 --> 00:44:19,431
So I would start out with this,

854
00:44:19,651 --> 00:44:21,432
and then the environment artists would come to me

855
00:44:21,452 --> 00:44:23,013
and they would say, can you make it look muddy?

856
00:44:23,434 --> 00:44:24,754
Can you make it look like somebody

857
00:44:24,794 --> 00:44:26,195
poured antifreeze into it?

858
00:44:26,576 --> 00:44:29,257
Can you make it really swampy looking?

859
00:44:29,397 --> 00:44:32,179
And so we created tons of different kinds of water,

860
00:44:32,440 --> 00:44:34,801
and I put together this video montage

861
00:44:35,301 --> 00:44:37,643
to give you some ideas of some of the different

862
00:44:38,804 --> 00:44:41,005
looking water effects that we're able to achieve in the game.

863
00:45:36,211 --> 00:45:37,092
All right, we're almost done.

864
00:45:37,112 --> 00:45:39,513
So let's just go over a couple of takeaways.

865
00:45:39,993 --> 00:45:43,094
The first one is that collecting good reference is critical.

866
00:45:43,915 --> 00:45:46,376
And if you can sneak in a trip to Hawaii, that's good too.

867
00:45:48,425 --> 00:45:52,969
Next, it's important that when you create or when you collect your reference that you

868
00:45:53,009 --> 00:45:57,352
identify the elements that make this thing what is it.

869
00:45:57,392 --> 00:46:02,296
You boil it down to its essence and figure out what is it that I'm going to try to imitate

870
00:46:02,356 --> 00:46:03,897
in my shaders based on the reference.

871
00:46:04,338 --> 00:46:05,178
And like I said before.

872
00:46:06,139 --> 00:46:10,924
it's almost as important to identify the things that you're not going to do as to identify the

873
00:46:10,964 --> 00:46:15,728
things that you are going to do. And you need to figure out things that you can leave out

874
00:46:16,589 --> 00:46:17,649
to save on performance.

875
00:46:19,688 --> 00:46:21,809
because you can't do absolutely everything.

876
00:46:23,229 --> 00:46:24,850
Early on in the production of our game,

877
00:46:24,990 --> 00:46:29,491
we had a lot more complicated looking weather, for example,

878
00:46:30,191 --> 00:46:31,971
and we found that we just couldn't run it

879
00:46:32,371 --> 00:46:34,572
and we had to simplify things a lot.

880
00:46:34,652 --> 00:46:36,552
So the examples that I showed you

881
00:46:36,612 --> 00:46:38,992
were the more simplified versions

882
00:46:39,193 --> 00:46:40,673
of what we started out with.

883
00:46:41,173 --> 00:46:43,693
So it would've been a lot better to do that up front,

884
00:46:44,354 --> 00:46:46,434
but that's not how things turned out.

885
00:46:47,805 --> 00:46:49,906
If I've done my job today in my talk,

886
00:46:50,006 --> 00:46:52,107
hopefully all of you are thinking,

887
00:46:52,267 --> 00:46:54,468
man, shader work is super cool.

888
00:46:54,688 --> 00:46:55,729
How can I get into this?

889
00:46:55,849 --> 00:46:56,969
Like, if you don't write shaders,

890
00:46:57,530 --> 00:46:58,750
how can I start learning this?

891
00:46:59,651 --> 00:47:02,032
And here are a few things that you can do to get started.

892
00:47:03,253 --> 00:47:04,833
First of all, take a look at other games.

893
00:47:04,913 --> 00:47:06,934
When I was in the process of working on this,

894
00:47:07,895 --> 00:47:14,118
I loved playing games like Horizon Zero Dawn and Spider-Man.

895
00:47:15,454 --> 00:47:19,922
Just by show of hands, how many of you have been to 10 or more talks about Spider-Man

896
00:47:20,042 --> 00:47:20,423
at GDC?

897
00:47:22,022 --> 00:47:23,383
Okay.

898
00:47:23,423 --> 00:47:27,746
Yeah, but anyway, I loved looking at other games and figuring out what they were doing.

899
00:47:29,247 --> 00:47:32,670
You can do Google and YouTube searches for tutorials on writing shaders.

900
00:47:33,991 --> 00:47:38,394
You can download Unreal for free, for example, and get into shader writing that way or use

901
00:47:38,634 --> 00:47:40,075
shader effects in Max or Maya.

902
00:47:40,476 --> 00:47:41,817
And most importantly, just do it.

903
00:47:42,497 --> 00:47:46,300
Identify something that you want to try to imitate and just give it your best shot.

904
00:47:47,246 --> 00:47:50,249
And I talked about finding a book to read.

905
00:47:50,269 --> 00:47:52,231
These are some of the books that I learned

906
00:47:52,271 --> 00:47:53,292
how to write shaders with,

907
00:47:53,512 --> 00:47:55,534
and this was maybe 10 or 15 years ago.

908
00:47:56,295 --> 00:47:59,018
But this knowledge is all still very relevant

909
00:47:59,058 --> 00:48:00,600
to writing shaders now.

910
00:48:00,680 --> 00:48:01,821
So if you wanna get started,

911
00:48:02,542 --> 00:48:04,984
it's really great to grab a book.

912
00:48:05,084 --> 00:48:07,426
A lot of these books are available for free online now.

913
00:48:10,391 --> 00:48:11,212
And so that's my talk.

914
00:48:11,252 --> 00:48:13,875
I have my email address here and my Twitter handle

915
00:48:13,915 --> 00:48:15,516
if you wanna give me some direct feedback.

916
00:48:16,337 --> 00:48:17,899
And I really appreciate all of you

917
00:48:17,979 --> 00:48:20,141
for coming and listening to what I have to say today.

918
00:48:20,181 --> 00:48:20,762
So thanks a lot.

919
00:48:29,433 --> 00:48:31,595
And it looks like we have about five or 10 minutes

920
00:48:31,635 --> 00:48:32,276
for questions.

921
00:48:32,396 --> 00:48:33,957
So if you'd like to ask a question,

922
00:48:34,838 --> 00:48:38,140
feel free to step up to the mic, and I'll

923
00:48:38,160 --> 00:48:39,041
do what I can to answer.

924
00:48:39,061 --> 00:48:39,661
Go ahead.

925
00:48:39,901 --> 00:48:40,142
Hi.

926
00:48:40,242 --> 00:48:40,542
Hello.

927
00:48:40,642 --> 00:48:41,202
I'm sorry.

928
00:48:41,943 --> 00:48:43,604
I may be missing some information,

929
00:48:43,664 --> 00:48:46,206
so just want to confirm that.

930
00:48:47,107 --> 00:48:51,010
For your rain drops maps, they are not normal map,

931
00:48:51,510 --> 00:48:56,294
and temporal offset mask and three masks.

932
00:48:56,334 --> 00:48:59,056
Then you said that you package them to the one map.

933
00:48:59,416 --> 00:49:03,337
So as I know, like the RGB channel only three channels.

934
00:49:03,637 --> 00:49:08,178
So how could you package all maps in the one map?

935
00:49:08,319 --> 00:49:11,359
And like when you withdraw the normal map,

936
00:49:11,399 --> 00:49:13,480
you make sure it's the correct normal map.

937
00:49:13,880 --> 00:49:14,100
Sure.

938
00:49:14,160 --> 00:49:17,281
So a texture can have three channels,

939
00:49:17,381 --> 00:49:18,541
or it can have four channels.

940
00:49:18,641 --> 00:49:20,822
You can have red, green, blue, and alpha.

941
00:49:21,322 --> 00:49:25,443
And so the static map and the animated drop map

942
00:49:25,483 --> 00:49:27,604
were both packed into the alpha channel together.

943
00:49:28,131 --> 00:49:32,333
OK, so screen or overlay together in the alpha channel?

944
00:49:32,693 --> 00:49:32,873
Right.

945
00:49:33,194 --> 00:49:33,534
OK.

946
00:49:34,434 --> 00:49:37,176
And then the second part of your question was about the normal.

947
00:49:37,556 --> 00:49:37,836
Yes.

948
00:49:38,036 --> 00:49:41,238
So if you put the red in, or if you

949
00:49:41,258 --> 00:49:44,639
put the x component and the y component of your normal map

950
00:49:44,840 --> 00:49:46,600
into the red channel and the green channel,

951
00:49:46,901 --> 00:49:50,242
then in the shader, you can reconstruct your normal.

952
00:49:50,422 --> 00:49:53,124
Now in this particular example, I just kind of,

953
00:49:54,016 --> 00:49:55,957
didn't do that to make it cheaper.

954
00:49:56,377 --> 00:49:58,498
But if you want it to be technically correct,

955
00:49:59,018 --> 00:50:04,120
you can do the math to derive the z component

956
00:50:04,620 --> 00:50:05,660
from the x and the y,

957
00:50:05,700 --> 00:50:07,781
because the normal is supposed to be normalized.

958
00:50:08,902 --> 00:50:11,043
That math has a square root in it,

959
00:50:11,183 --> 00:50:12,423
which is kind of expensive.

960
00:50:13,023 --> 00:50:14,704
And so I just skipped it in this effect

961
00:50:14,764 --> 00:50:16,805
because I didn't think it was necessary.

962
00:50:16,825 --> 00:50:19,606
I just assumed a value of one for the...

963
00:50:20,356 --> 00:50:22,357
for the z component instead of calculating it.

964
00:50:22,537 --> 00:50:23,018
OK, OK.

965
00:50:23,338 --> 00:50:28,521
So actually, you use the blue channel to package one map,

966
00:50:28,681 --> 00:50:31,943
and then the alpha channel packages the rest two, right?

967
00:50:32,123 --> 00:50:32,783
That's correct.

968
00:50:32,883 --> 00:50:33,504
Thank you very much.

969
00:50:33,524 --> 00:50:33,924
You're welcome.

970
00:50:34,304 --> 00:50:34,624
Over here.

971
00:50:35,205 --> 00:50:35,345
Hi.

972
00:50:35,865 --> 00:50:38,266
You mentioned your first pass on the weather stuff

973
00:50:38,346 --> 00:50:40,047
wasn't performing enough to ship,

974
00:50:40,127 --> 00:50:41,588
and you had to optimize it a bit.

975
00:50:42,607 --> 00:50:45,930
Sort of along those lines, do you have shader LODs

976
00:50:46,010 --> 00:50:49,094
or per skew shader control, high, medium, low?

977
00:50:49,334 --> 00:50:50,435
Yeah, yeah, absolutely.

978
00:50:50,475 --> 00:50:51,517
And those are the kinds of things

979
00:50:51,537 --> 00:50:53,238
that I took out of these examples,

980
00:50:53,319 --> 00:50:56,562
just so my graph didn't look like a pile of spaghetti.

981
00:50:57,403 --> 00:50:59,606
For the shots of my graphs that I was showing here,

982
00:51:00,086 --> 00:51:01,647
they're really simplified down.

983
00:51:01,687 --> 00:51:03,628
But we have a node that controls quality,

984
00:51:04,148 --> 00:51:07,910
where you can, it has a low, medium, high, and ultra pin,

985
00:51:08,491 --> 00:51:10,492
and whatever you pass into each of those pins

986
00:51:10,552 --> 00:51:12,253
is what gets compiled as the shader

987
00:51:12,393 --> 00:51:14,294
for those quality settings.

988
00:51:14,594 --> 00:51:16,015
How often do you have to use that,

989
00:51:16,455 --> 00:51:18,756
like what percentage of the materials in the game

990
00:51:18,836 --> 00:51:20,337
need a cheaper version?

991
00:51:21,818 --> 00:51:25,080
Um, that's a hard question.

992
00:51:25,100 --> 00:51:27,081
I use it as often as I can.

993
00:51:28,516 --> 00:51:32,158
because you want the game to be much more performant

994
00:51:32,878 --> 00:51:34,719
on each of those levels of quality.

995
00:51:35,479 --> 00:51:38,721
If there are things that can be left out

996
00:51:38,941 --> 00:51:41,602
without absolutely killing the image,

997
00:51:41,662 --> 00:51:44,003
then we want to do that on the lower quality levels,

998
00:51:44,043 --> 00:51:44,403
for sure.

999
00:51:44,463 --> 00:51:46,384
So you do it ahead of time instead of waiting

1000
00:51:46,464 --> 00:51:48,004
for engineering to come to your desk and?

1001
00:51:50,046 --> 00:51:51,888
I've never had engineering do that to me.

1002
00:51:53,209 --> 00:51:57,072
I usually do it myself because we work in kind of two passes.

1003
00:51:57,172 --> 00:52:01,797
So we'll do a look dev development pass and get things looking the way that we want them

1004
00:52:01,837 --> 00:52:04,979
to and then we'll go back and perform a performance pass.

1005
00:52:05,580 --> 00:52:07,922
And really that just involves, you know, using.

1006
00:52:09,826 --> 00:52:16,100
Razer on PS4 or PIX and just kind of seeing how much things cost and well does it does it fit in my time?

1007
00:52:16,140 --> 00:52:18,466
And if not, you know, how can I make it faster?

1008
00:52:19,488 --> 00:52:20,510
Cool. Thank you. You're welcome

1009
00:52:21,724 --> 00:52:27,346
Hello. My question is more on the organizational bookkeeping as you're putting together these

1010
00:52:28,347 --> 00:52:32,408
growing libraries of shaders. So you mentioned you have environment artists come to you and

1011
00:52:32,468 --> 00:52:39,651
ask you for a new effect or you have these extensive different types of water and I struggle

1012
00:52:39,691 --> 00:52:40,471
personally to where I'll...

1013
00:52:41,332 --> 00:52:44,614
go down the path of wanting to create more and more like master materials.

1014
00:52:45,374 --> 00:52:49,497
So do you have any certain cutoffs that you try to keep to to determine whether you want

1015
00:52:49,517 --> 00:52:53,660
to combine two setters together or keep stuff more separate?

1016
00:52:55,041 --> 00:52:56,582
That's a really good question.

1017
00:52:58,283 --> 00:53:03,346
In the case of water, we don't have the ability to pass.

1018
00:53:04,958 --> 00:53:07,560
external parameters in to adjust it.

1019
00:53:07,881 --> 00:53:10,283
And so every time the artist wants something new,

1020
00:53:10,423 --> 00:53:12,865
I need to create a new shader.

1021
00:53:13,645 --> 00:53:16,508
And that's one of the reasons why all of those water nodes

1022
00:53:16,548 --> 00:53:18,189
were created kind of modularly.

1023
00:53:18,229 --> 00:53:20,991
I had one for reflection, one for refraction.

1024
00:53:21,392 --> 00:53:23,593
Because I could just take those and put them together

1025
00:53:23,654 --> 00:53:25,755
to create a new one fairly quickly.

1026
00:53:25,775 --> 00:53:26,055
Yeah.

1027
00:53:26,716 --> 00:53:29,760
Yeah, for some of the other assets, like vegetation,

1028
00:53:29,960 --> 00:53:32,163
or rocks, or that sort of thing, we

1029
00:53:32,223 --> 00:53:34,345
had one really large shader, but then you

1030
00:53:34,385 --> 00:53:37,048
could tick boxes to turn it on and off the features

1031
00:53:37,068 --> 00:53:37,629
that you needed.

1032
00:53:38,357 --> 00:53:41,238
so that the shaders didn't get out of hand

1033
00:53:41,278 --> 00:53:42,999
in terms of how many of them there were.

1034
00:53:43,539 --> 00:53:45,440
The artist could just pick, I want the rock shader,

1035
00:53:45,480 --> 00:53:46,761
and then they could check the boxes

1036
00:53:46,841 --> 00:53:48,721
for the features that they needed.

1037
00:53:49,122 --> 00:53:51,002
Even with the master shader for the rocks,

1038
00:53:51,102 --> 00:53:53,583
is there a certain cutoff to where you don't want to have

1039
00:53:54,704 --> 00:53:56,585
20 plus exposed parameters for them to go through

1040
00:53:56,605 --> 00:53:57,145
for easy use?

1041
00:53:57,205 --> 00:53:57,985
Yeah, absolutely.

1042
00:53:58,605 --> 00:54:00,026
I don't have a silver bullet for you

1043
00:54:00,366 --> 00:54:02,567
on how to decide how to do that.

1044
00:54:03,487 --> 00:54:04,588
But definitely something to consider.

1045
00:54:04,608 --> 00:54:06,489
Yeah, yeah, absolutely.

1046
00:54:06,969 --> 00:54:07,209
Thank you.

1047
00:54:09,564 --> 00:54:12,026
I'm interested to hear more about the optimization pass.

1048
00:54:13,047 --> 00:54:15,529
Did you optimize it yourself, or did you ever

1049
00:54:15,589 --> 00:54:17,671
hand it over to a graphics programmer

1050
00:54:17,691 --> 00:54:20,093
to kind of hand optimize it?

1051
00:54:21,614 --> 00:54:24,997
No, none of our shaders were touched by graphics programmers.

1052
00:54:25,257 --> 00:54:27,159
Sometimes they would say, hey, in general,

1053
00:54:27,219 --> 00:54:28,660
this view is too expensive.

1054
00:54:29,041 --> 00:54:29,861
Go and figure it out.

1055
00:54:30,322 --> 00:54:32,284
But optimization of the art assets

1056
00:54:32,364 --> 00:54:35,266
is generally the domain of the tech artists at our studios.

1057
00:54:35,887 --> 00:54:39,630
And so the graphics engineers would say, hey,

1058
00:54:39,770 --> 00:54:40,951
tech artists, figure this out.

1059
00:54:40,991 --> 00:54:43,974
But they wouldn't actually get in and tell us how to do it.

1060
00:54:44,954 --> 00:54:48,678
It was just a matter of isolating a specific view

1061
00:54:48,938 --> 00:54:50,880
or direction that we are looking in the game.

1062
00:54:50,920 --> 00:54:53,622
And if it's not running at 30 frames a second here,

1063
00:54:54,122 --> 00:54:55,584
or actually faster because we had

1064
00:54:55,604 --> 00:54:57,745
to account for characters and VFX

1065
00:54:57,786 --> 00:54:58,626
and all kinds of other things.

1066
00:54:59,385 --> 00:55:02,728
I think our target was like 25 or 28 milliseconds.

1067
00:55:04,049 --> 00:55:09,494
If it was over that, then we would just run that specific frame through Pix or Razor and

1068
00:55:09,674 --> 00:55:12,396
identify targets of opportunity to produce.

1069
00:55:12,416 --> 00:55:13,958
All right.

1070
00:55:14,098 --> 00:55:14,338
Thank you.

1071
00:55:14,538 --> 00:55:14,678
Mm-hmm.

1072
00:55:15,982 --> 00:55:16,643
Yeah.

1073
00:55:17,743 --> 00:55:26,588
I've already tried to packing extra information to a normal map channel, but with DX5 compression,

1074
00:55:26,648 --> 00:55:31,050
I cannot avoid compression artifact on normal training.

1075
00:55:31,151 --> 00:55:35,853
So could you tell me what kind of compression setting did you use?

1076
00:55:36,213 --> 00:55:36,493
Yeah.

1077
00:55:36,533 --> 00:55:39,395
So in the case of this rain texture, it's a 512 by 512.

1078
00:55:40,696 --> 00:55:44,258
And because it's used on every asset in the game, we did not compress it.

1079
00:55:45,156 --> 00:55:46,780
So this texture is stored uncompressed.

1080
00:55:47,402 --> 00:55:47,983
Oh, I see.

1081
00:55:48,164 --> 00:55:48,926
Okay, thank you.

1082
00:55:51,540 --> 00:55:51,961
Oh, hello.

1083
00:55:52,101 --> 00:55:52,441
Nice talk.

1084
00:55:53,382 --> 00:55:56,204
I'm interested in doing the refraction.

1085
00:55:57,064 --> 00:55:59,566
Did you do it in the screen space,

1086
00:55:59,786 --> 00:56:04,550
and did you use the depth map to assist the pickup of how

1087
00:56:04,590 --> 00:56:10,574
to resolve the resulting angle of the light vector?

1088
00:56:11,154 --> 00:56:11,355
Right.

1089
00:56:11,435 --> 00:56:14,217
So one of the things that's interesting about our engine

1090
00:56:14,277 --> 00:56:18,860
is that, yeah, it does this distortion in screen space.

1091
00:56:19,740 --> 00:56:24,683
And what I really would like to have is something where the surface of the water is not distorted

1092
00:56:24,724 --> 00:56:26,765
and it only distorts what's underneath it.

1093
00:56:27,245 --> 00:56:30,727
But unfortunately because this is a screen space effect, it gets applied to everything.

1094
00:56:31,348 --> 00:56:35,430
And so that's why it was really important to do the fall off or the Fresnel so that

1095
00:56:35,470 --> 00:56:38,152
it only showed up when you're looking directly down.

1096
00:56:38,492 --> 00:56:39,773
What was the second half of your question?

1097
00:56:40,437 --> 00:56:42,459
I was just wondering if you used the depth map

1098
00:56:42,639 --> 00:56:44,000
to assist in that pickup.

1099
00:56:44,580 --> 00:56:47,502
So I used the depth map to determine

1100
00:56:47,602 --> 00:56:49,103
how much distortion to apply.

1101
00:56:49,163 --> 00:56:51,624
So the deeper the water it is, the more I would distort.

1102
00:56:51,644 --> 00:56:52,965
Is that what you're talking about?

1103
00:56:53,005 --> 00:56:54,926
OK, so it is an approximate term then.

1104
00:56:55,366 --> 00:56:55,587
Yeah.

1105
00:56:55,827 --> 00:56:56,347
Very nice.

1106
00:56:56,387 --> 00:56:57,248
Thank you.

1107
00:56:58,128 --> 00:56:59,189
All right, last question.

1108
00:57:00,169 --> 00:57:02,271
I was actually wondering about that depth map myself.

1109
00:57:02,411 --> 00:57:05,052
Is that a screen space depth map for your water depth?

1110
00:57:05,092 --> 00:57:07,294
Or is it actual, like from the top,

1111
00:57:07,334 --> 00:57:08,735
how deep is the water down?

1112
00:57:09,588 --> 00:57:11,810
Ah, so yes, it is a screen space effect.

1113
00:57:12,571 --> 00:57:15,194
Did you run into any issues with the fact

1114
00:57:15,234 --> 00:57:17,476
that different angles would produce a different depth

1115
00:57:17,496 --> 00:57:17,656
touch?

1116
00:57:17,676 --> 00:57:20,259
Yeah, and for that I had to multiply it by a Fresnel term

1117
00:57:20,619 --> 00:57:22,341
to isolate it so that you'd only get it

1118
00:57:22,381 --> 00:57:23,202
when you're looking down.

1119
00:57:23,402 --> 00:57:25,104
It had to be adjusted, yeah.

1120
00:57:25,604 --> 00:57:25,905
Gotcha.

1121
00:57:25,965 --> 00:57:26,205
Thank you.

1122
00:57:26,225 --> 00:57:26,705
Good question.

1123
00:57:27,446 --> 00:57:29,028
All right, thanks a lot for coming, everybody.

