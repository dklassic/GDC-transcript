1
00:00:07,159 --> 00:00:12,941
Hey, so like Dave mentioned, this is not actually a talk about utility AI from the content creation standpoint.

2
00:00:12,941 --> 00:00:17,242
This is a talk about utility AI from the content creator's standpoint.

3
00:00:17,242 --> 00:00:26,184
And where this all came from was about a year ago after GDC, I had this inkling of wanting to make a tool

4
00:00:27,117 --> 00:00:31,341
that could turn utility AI into something that was intuitive and accessible for the

5
00:00:31,341 --> 00:00:32,443
average AI developer.

6
00:00:32,443 --> 00:00:35,966
This was partially selfishly motivated.

7
00:00:35,966 --> 00:00:40,652
I had a lot of designers at ArenaNet that were working with utility AI projects that

8
00:00:40,652 --> 00:00:45,437
Dave and I had done there and other things like that, and there were a lot of gaps in

9
00:00:45,437 --> 00:00:46,798
the education there.

10
00:00:47,849 --> 00:00:49,510
There's a lot of other AI developers,

11
00:00:49,510 --> 00:00:52,250
especially in places like the AI Summit at GDC,

12
00:00:52,250 --> 00:00:53,831
where I had conversations with people

13
00:00:53,831 --> 00:00:56,952
about how they had difficulty with educating designers

14
00:00:56,952 --> 00:00:58,772
or even programmers about how utility AI

15
00:00:58,772 --> 00:00:59,672
is supposed to work.

16
00:00:59,672 --> 00:01:03,193
So there's a specific challenge that keeps coming up

17
00:01:03,193 --> 00:01:04,694
in the Guild Wars 2 franchise,

18
00:01:04,694 --> 00:01:09,075
which is probably easiest to summarize as,

19
00:01:09,075 --> 00:01:11,536
why the hell does my AI do that thing?

20
00:01:11,536 --> 00:01:12,656
He's supposed to do this thing.

21
00:01:13,973 --> 00:01:16,874
So the fact that we keep facing this question over and over

22
00:01:16,874 --> 00:01:19,335
signals to me that our tools need to be better.

23
00:01:19,335 --> 00:01:21,076
We need to be better about creating tools

24
00:01:21,076 --> 00:01:23,397
for rapid iteration and prototyping,

25
00:01:23,397 --> 00:01:24,597
but we also need to be better

26
00:01:24,597 --> 00:01:27,498
about creating tools for debugging.

27
00:01:27,498 --> 00:01:29,739
So Curvature is a standalone tool,

28
00:01:29,739 --> 00:01:31,940
and that might sound like a strange decision

29
00:01:31,940 --> 00:01:33,360
since we already have a game engine

30
00:01:33,360 --> 00:01:35,461
with a bunch of utility AI technology built into it.

31
00:01:36,290 --> 00:01:38,931
But my thinking here is pretty straightforward.

32
00:01:38,931 --> 00:01:42,313
Coupling to a particular game engine is a constraint.

33
00:01:42,313 --> 00:01:43,454
It carries a lot of baggage.

34
00:01:43,454 --> 00:01:45,815
There's things that I have to do if I'm going to work

35
00:01:45,815 --> 00:01:48,697
on a utility AI experiment, like set up the rendering

36
00:01:48,697 --> 00:01:50,658
and make sure that all my shaders are right

37
00:01:50,658 --> 00:01:52,939
so that I can actually see my AI agents running around.

38
00:01:52,939 --> 00:01:55,340
And maybe if I want to have some physics involved,

39
00:01:55,340 --> 00:01:56,901
I have to get all that debugged.

40
00:01:56,901 --> 00:01:58,682
There's an awful lot of extra stuff

41
00:01:58,682 --> 00:02:02,364
that just has to happen for a AI experiment to come to life.

42
00:02:03,655 --> 00:02:08,799
Another problem that I run into a lot personally is that a lot of engines out there are not

43
00:02:08,799 --> 00:02:10,040
great at real time editing.

44
00:02:10,040 --> 00:02:13,863
And what I mean is they have to do data pipeline builds.

45
00:02:13,863 --> 00:02:17,927
And this means that every time I need to change something, I have to run a process that bakes

46
00:02:17,927 --> 00:02:21,810
my data out, does some processing of some kind, and then generates something that can

47
00:02:21,810 --> 00:02:23,231
actually run in the game.

48
00:02:23,231 --> 00:02:25,894
This is murder on iteration time.

49
00:02:25,894 --> 00:02:31,318
So instant feedback is actually the secret to building a system that's easy to understand.

50
00:02:32,669 --> 00:02:35,991
As a result, Curvature is 100% self-contained.

51
00:02:35,991 --> 00:02:39,352
My hope is that it's really easy to set up and play with.

52
00:02:39,352 --> 00:02:42,294
And there's no baggage from any other engines

53
00:02:42,294 --> 00:02:43,334
or technologies involved.

54
00:02:43,334 --> 00:02:45,916
It's literally one EXE file written in C Sharp.

55
00:02:45,916 --> 00:02:47,256
You can drop it on your desktop, run it, and go.

56
00:02:47,256 --> 00:02:50,618
The last point that I really want to hammer on this

57
00:02:50,618 --> 00:02:53,179
is that this is a fully real-time editing experience.

58
00:02:53,179 --> 00:02:55,060
Everything you play with in this tool

59
00:02:55,060 --> 00:02:56,981
is reflected immediately back to you.

60
00:02:58,444 --> 00:03:02,547
So utility AI is an architectural category

61
00:03:02,547 --> 00:03:05,530
of approaches to making behavioral decisions

62
00:03:05,530 --> 00:03:06,310
with an AI system.

63
00:03:06,310 --> 00:03:10,214
The basic principle of utility theory is,

64
00:03:10,214 --> 00:03:12,736
in a nutshell, we're gonna score all the possible things

65
00:03:12,736 --> 00:03:14,037
that I might wanna do as an AI agent,

66
00:03:14,037 --> 00:03:15,859
and then I'm just gonna pick the best one

67
00:03:15,859 --> 00:03:17,100
for some value of best.

68
00:03:18,982 --> 00:03:23,167
This is specifically built on the Infinite Access Utility System that Dave Mark introduced

69
00:03:23,167 --> 00:03:25,590
here at the AI Summit several years ago.

70
00:03:25,590 --> 00:03:29,335
I don't have time to go into a full treatment of how the architecture works, but the basic

71
00:03:29,335 --> 00:03:30,376
pieces are pretty easy.

72
00:03:32,482 --> 00:03:36,024
The first thing that we want to do is get a whole bunch of input data about the world.

73
00:03:36,024 --> 00:03:39,787
So we've had talks earlier in the last couple days about knowledge representation

74
00:03:39,787 --> 00:03:44,190
and understanding the context of what our agents are doing in the world around them.

75
00:03:44,190 --> 00:03:48,192
This is exactly the kind of thing that I'm talking about now.

76
00:03:48,192 --> 00:03:51,815
Taking data from the simulation and processing it.

77
00:03:51,815 --> 00:03:54,357
In our case, we do this through what we call response curves,

78
00:03:54,357 --> 00:03:57,459
which are basically just small little compact formulas.

79
00:03:57,459 --> 00:04:01,201
And those formulas help us decide that for each possible behavior,

80
00:04:02,174 --> 00:04:06,696
What is the score? Should I continue talking right now? Should I take a drink of water?

81
00:04:06,696 --> 00:04:10,477
Should I blow my nose? Whatever. I have a lot of options of things I could do right now.

82
00:04:10,477 --> 00:04:17,400
What's the winner? So the recipe for this whole system is really simple. It's input data plus

83
00:04:17,400 --> 00:04:20,781
response curve equals score. And then you just pick the best scoring option.

84
00:04:24,095 --> 00:04:26,676
Before I get into the bulk of this,

85
00:04:26,676 --> 00:04:28,116
there's a couple of quick things

86
00:04:28,116 --> 00:04:29,717
that I just wanted to point out.

87
00:04:29,717 --> 00:04:31,177
Curvature is a spare time project.

88
00:04:31,177 --> 00:04:32,738
It's not sponsored by ArenaNet.

89
00:04:32,738 --> 00:04:33,998
It's not a public thing.

90
00:04:33,998 --> 00:04:36,219
It's actually open source, just me on my own time.

91
00:04:36,219 --> 00:04:38,160
There's room for improvement,

92
00:04:38,160 --> 00:04:40,060
but I think that's actually very exciting

93
00:04:40,060 --> 00:04:41,501
because that leads me to a challenge

94
00:04:41,501 --> 00:04:43,261
that I would like to issue to everyone here.

95
00:04:43,261 --> 00:04:47,283
Specifically, I would like you to leave this session

96
00:04:47,283 --> 00:04:49,684
thinking about how you can improve AI tooling

97
00:04:49,684 --> 00:04:52,104
because I firmly believe that all of us can

98
00:04:52,104 --> 00:04:52,865
and all of us should.

99
00:04:55,421 --> 00:04:59,084
So, step one of this whole process is knowledge representation.

100
00:04:59,084 --> 00:05:04,768
I'm going to quickly define some requirements that I impose on this system.

101
00:05:04,768 --> 00:05:07,710
It's going to be a lot simpler than most games would work with,

102
00:05:07,710 --> 00:05:12,273
but it's just enough to get the basics of a simulation running so that we can play with it.

103
00:05:12,273 --> 00:05:16,896
So the first thing I wanted to do is identify properties of agents.

104
00:05:16,896 --> 00:05:20,799
So an agent is basically just a character, an NPC or whatever running around in the world.

105
00:05:20,799 --> 00:05:22,700
They have properties. Some of those are user defined.

106
00:05:23,346 --> 00:05:26,169
and some of them are calculated from the simulation.

107
00:05:26,169 --> 00:05:28,311
But regardless of where this information comes from,

108
00:05:28,311 --> 00:05:30,233
everything needs to have a name.

109
00:05:30,233 --> 00:05:33,317
This is a personal line in the sand of my own,

110
00:05:33,317 --> 00:05:36,060
where I want to be able to refer, by name,

111
00:05:36,060 --> 00:05:39,924
a human-readable string to every single piece of my AI data.

112
00:05:39,924 --> 00:05:44,168
The next part of this that's important is validation.

113
00:05:44,168 --> 00:05:45,690
I wanna be able to have...

114
00:05:46,951 --> 00:05:51,714
an expression of what numbers make sense for this particular type of data.

115
00:05:51,714 --> 00:05:56,498
So we can do numeric ranges, and we can also in Curvature do user-defined tags.

116
00:05:56,498 --> 00:06:01,541
If you were here for Rez Graham's talk earlier, this should sound awfully familiar.

117
00:06:01,541 --> 00:06:04,623
So let's look at the UI real quick.

118
00:06:04,623 --> 00:06:08,186
This is what the UI for knowledge representation in Curvature looks like.

119
00:06:08,784 --> 00:06:11,546
The idea here is that we have a series of records,

120
00:06:11,546 --> 00:06:14,649
and each record is a piece of data about the world,

121
00:06:14,649 --> 00:06:16,250
and it has a number of attributes.

122
00:06:16,250 --> 00:06:18,271
The first one that I want to point out is name.

123
00:06:18,271 --> 00:06:21,074
So we have these names over in these boxes here

124
00:06:21,074 --> 00:06:23,716
that describe what this data is,

125
00:06:23,716 --> 00:06:25,597
what is its semantic significance.

126
00:06:28,100 --> 00:06:31,141
The next thing we want to look at is where does this data come from?

127
00:06:31,141 --> 00:06:32,221
In this case we have two choices.

128
00:06:32,221 --> 00:06:35,002
It can be a property of an agent

129
00:06:35,002 --> 00:06:37,443
or it can be something derived using a prefab equation.

130
00:06:37,443 --> 00:06:39,484
I'll describe prefabs a little bit in a second.

131
00:06:39,484 --> 00:06:45,766
Another piece of information that's very useful is the validation.

132
00:06:45,766 --> 00:06:49,867
Does this number have to be in a configurable range

133
00:06:49,867 --> 00:06:52,488
or is it a predefined value like a tag or enumeration?

134
00:06:54,316 --> 00:07:04,204
So you can see here there's just a couple of different pieces of UI that'll dynamically spawn into the window as you choose whether or not this is a configurable range or a predefined value.

135
00:07:04,204 --> 00:07:08,727
You'll get UI that automatically helps you flesh out the validation for that data point.

136
00:07:08,727 --> 00:07:17,113
Then down here we have this little use distance prefab drop down which is a nice little transition to why we do prefabs at all.

137
00:07:18,714 --> 00:07:22,877
So the idea is there are a lot of things that we can compute about the environment.

138
00:07:22,877 --> 00:07:27,359
We can compute distances, we can compute line of sight, we can do all kinds of great stuff.

139
00:07:27,359 --> 00:07:31,582
And we don't want to have to represent that as static data that a designer enters.

140
00:07:31,582 --> 00:07:37,005
This is stuff that a simulation should be able to provide to us for free or small computational

141
00:07:37,005 --> 00:07:40,768
cost and then the AI can reason about that information.

142
00:07:41,525 --> 00:07:44,126
So we could use this mechanism to hook up a bunch of things.

143
00:07:44,126 --> 00:07:46,368
We could do pathfinding, we could do raycasting.

144
00:07:46,368 --> 00:07:48,029
If you were here just before lunch,

145
00:07:48,029 --> 00:07:50,330
Dave gave an excellent talk on influence maps,

146
00:07:50,330 --> 00:07:53,472
which would have a lot of potential in a system like this.

147
00:07:53,472 --> 00:07:55,913
Right now in curvature specifically,

148
00:07:55,913 --> 00:07:57,414
I've been deliberately minimalistic

149
00:07:57,414 --> 00:08:00,556
because A, it's less work for me and I'm lazy,

150
00:08:00,556 --> 00:08:05,359
but B, it's actually easier for the user of the tool

151
00:08:05,359 --> 00:08:08,141
to not have to keep all of these possible inputs in mind.

152
00:08:08,721 --> 00:08:13,343
The main challenge that I've run into with explaining AI systems to anyone

153
00:08:13,343 --> 00:08:16,384
is that when you get into a certain level of complexity,

154
00:08:16,384 --> 00:08:20,785
there is just so much going on that it's virtually impossible to keep it all in your head.

155
00:08:20,785 --> 00:08:24,587
So we have a whole lot of data about the world.

156
00:08:24,587 --> 00:08:29,468
The next thing that we want to ask is what kinds of things can we do to influence that data?

157
00:08:29,468 --> 00:08:31,809
How can we feed back into the simulation and do things?

158
00:08:31,809 --> 00:08:36,251
So again, I'll start with some quick requirements that I imposed on this project.

159
00:08:37,595 --> 00:08:40,916
I wanted to have a set of actions that the AI could choose from.

160
00:08:40,916 --> 00:08:47,057
And these would be things like move to a place, or start doing this new set of behaviors,

161
00:08:47,057 --> 00:08:47,437
or so on and so forth.

162
00:08:47,437 --> 00:08:55,700
I wanted to basically have a behavior be an actual effect in the simulation.

163
00:08:55,700 --> 00:09:00,901
So anytime an agent chooses to do something, I should be able to measure that response in the world.

164
00:09:02,201 --> 00:09:06,164
So again, I could move my agent to a place, I could change a property of an agent,

165
00:09:06,164 --> 00:09:12,508
and all kinds of different little things that help make a simulation actually move forward through time.

166
00:09:12,508 --> 00:09:17,371
There's another little element of this that's very interesting as you get into more sophisticated simulations,

167
00:09:17,371 --> 00:09:19,152
which is targeting.

168
00:09:20,478 --> 00:09:23,960
the number of choices that we have to score grows

169
00:09:23,960 --> 00:09:26,781
in sometimes complex and difficult ways

170
00:09:26,781 --> 00:09:29,283
with the number of targets that I have to consider

171
00:09:29,283 --> 00:09:31,224
times the number of decisions that might interact

172
00:09:31,224 --> 00:09:32,765
with each of those targets.

173
00:09:32,765 --> 00:09:37,407
So basically, we want to limit the number of times

174
00:09:37,407 --> 00:09:40,889
that we do redundant calculations on parallel targets,

175
00:09:40,889 --> 00:09:43,291
especially because some things just don't make sense

176
00:09:43,291 --> 00:09:43,871
to have a target.

177
00:09:44,551 --> 00:09:47,733
Right, like if I want to yawn, I don't do that to somebody.

178
00:09:47,733 --> 00:09:50,094
That is a thing that happens to me personally,

179
00:09:50,094 --> 00:09:52,555
and that is contained within my agent.

180
00:09:52,555 --> 00:09:55,197
So again, let's go to some UI here.

181
00:09:55,197 --> 00:09:59,359
I wanna look real quickly at the core of

182
00:09:59,359 --> 00:10:02,061
what are four behaviors that I've defined

183
00:10:02,061 --> 00:10:02,681
for this particular demo.

184
00:10:02,681 --> 00:10:06,183
You can see here we've got a couple of pursuit

185
00:10:06,183 --> 00:10:07,984
and a couple of evade,

186
00:10:07,984 --> 00:10:10,986
and there's variants for the blue team and the red team.

187
00:10:14,068 --> 00:10:16,350
So each one of these has a specific drop down

188
00:10:16,350 --> 00:10:19,713
that tells the curvature system what happens

189
00:10:19,713 --> 00:10:21,794
when an AI chooses to do this behavior.

190
00:10:21,794 --> 00:10:26,118
What does it mean in the simulation as an active event

191
00:10:26,118 --> 00:10:27,218
for this behavior to be executed?

192
00:10:27,218 --> 00:10:30,381
And then of course there's also this little ability

193
00:10:30,381 --> 00:10:32,342
down here to change the targeting mode

194
00:10:32,342 --> 00:10:35,725
which lets you control what context makes sense

195
00:10:35,725 --> 00:10:36,946
for me to do this action in.

196
00:10:36,946 --> 00:10:38,747
So like I said before, if I'm yawning,

197
00:10:38,747 --> 00:10:41,229
I can say no that can't target others and uncheck that box.

198
00:10:43,360 --> 00:10:44,881
So this is where the AI starts to happen.

199
00:10:44,881 --> 00:10:48,022
The real question that we have is why?

200
00:10:48,022 --> 00:10:50,203
You remember if I said at the beginning,

201
00:10:50,203 --> 00:10:52,684
the problem that we kept running into was

202
00:10:52,684 --> 00:10:55,104
why does my AI do this and not that?

203
00:10:55,104 --> 00:10:57,665
So why would the AI do this and not that?

204
00:10:57,665 --> 00:11:01,106
The answer to that question is considerations.

205
00:11:01,106 --> 00:11:04,548
And again, going through the requirements definition,

206
00:11:04,548 --> 00:11:05,908
it's really just all about the why.

207
00:11:05,908 --> 00:11:08,729
Why would I prefer to do one thing versus something else?

208
00:11:09,391 --> 00:11:14,715
The goal here is to account for real-world relevant data as much as possible.

209
00:11:14,715 --> 00:11:17,317
But we also need to contextualize that data,

210
00:11:17,317 --> 00:11:19,719
because it's not the same for me to say,

211
00:11:19,719 --> 00:11:23,622
I want to buy a plane ticket, how far is too far to fly?

212
00:11:23,622 --> 00:11:26,264
And I want to walk to lunch, how far is too far to walk?

213
00:11:26,264 --> 00:11:29,466
Those are both distance questions, but they have very different contexts.

214
00:11:31,376 --> 00:11:34,141
So ultimately, all of the different input factors

215
00:11:34,141 --> 00:11:36,345
that we're gaining from the simulation,

216
00:11:36,345 --> 00:11:38,448
scraping out from this knowledge-based system,

217
00:11:38,448 --> 00:11:40,772
they all have different contributions

218
00:11:40,772 --> 00:11:42,655
to the score of a particular behavior,

219
00:11:42,655 --> 00:11:44,398
and considerations are how we reflect that.

220
00:11:45,666 --> 00:11:51,671
So this is a little bit wallet texty, but I'll kind of point out some of the most important

221
00:11:51,671 --> 00:11:53,012
aspects of it.

222
00:11:53,012 --> 00:11:55,113
A consideration has an input.

223
00:11:55,113 --> 00:12:01,539
This little highlight here kind of shows that we have currently selected to work with the

224
00:12:01,539 --> 00:12:02,279
distance to target input.

225
00:12:02,279 --> 00:12:05,842
There's also validation, which we can do from this view.

226
00:12:05,842 --> 00:12:09,985
And then there's this interesting little mess down here for a response curve.

227
00:12:11,397 --> 00:12:17,999
I've seen enough demos of utility AI to know that as soon as these little two-axis plots

228
00:12:17,999 --> 00:12:22,300
with the blue curve come out, a lot of people start feeling a little freaked out.

229
00:12:22,300 --> 00:12:27,542
And that's fine, because there is an escape hatch in curvature, which is right here, the

230
00:12:27,542 --> 00:12:27,882
presets button.

231
00:12:27,882 --> 00:12:30,883
So this is the fun part.

232
00:12:30,883 --> 00:12:33,744
I am a firm believer in the power of natural language.

233
00:12:33,744 --> 00:12:38,265
This is sometimes at odds with my desire to make video games, because they don't often

234
00:12:38,265 --> 00:12:38,825
overlap very much.

235
00:12:39,827 --> 00:12:44,493
But I think sometimes it's true that being able to express something in a few concise

236
00:12:44,493 --> 00:12:48,898
words is much more impactful than spending a bunch of time trying to play with all these

237
00:12:48,898 --> 00:12:52,843
possible sliders and UI elements and, you know, rolling numbers and all this to try

238
00:12:52,843 --> 00:12:56,547
and lock in an exact shape that you want.

239
00:12:56,547 --> 00:12:58,690
So this is the Curve Preset Generator dialog.

240
00:12:59,768 --> 00:13:04,972
These two drop-downs here are basically highlighting the two controls that we have.

241
00:13:04,972 --> 00:13:11,196
This system is starting with a list of over a dozen different preset curves.

242
00:13:11,196 --> 00:13:14,779
With no inputs, it will let you choose from amongst all of them.

243
00:13:14,779 --> 00:13:16,840
But as we refine our request for a curve,

244
00:13:16,840 --> 00:13:21,884
it's going to use the natural language description of what I put in these boxes

245
00:13:21,884 --> 00:13:25,807
to filter down the list of suggestions and only show me the curves

246
00:13:25,807 --> 00:13:27,988
that match the exact description that I provide.

247
00:13:27,988 --> 00:13:29,089
So here's how that works.

248
00:13:30,586 --> 00:13:36,689
The top input is as input values grow towards 1, or as input values get bigger, basically,

249
00:13:36,689 --> 00:13:40,470
the consideration score should...

250
00:13:40,470 --> 00:13:45,573
Now we have some options here. We can become more appealing, we can become less appealing,

251
00:13:45,573 --> 00:13:50,335
we can stay the same because we don't care, or maybe we can fluctuate a bit because we're being random.

252
00:13:52,805 --> 00:13:55,427
So let's look at what happens if I plug in

253
00:13:55,427 --> 00:13:59,108
steadily less appealing scores as inputs grow to the right.

254
00:13:59,108 --> 00:14:01,769
And you can see that graph there.

255
00:14:01,769 --> 00:14:04,391
And I've chosen a constant or linear rate of change

256
00:14:04,391 --> 00:14:05,351
in the second input.

257
00:14:05,351 --> 00:14:09,153
And the net result is that we get exactly what we asked for.

258
00:14:09,153 --> 00:14:15,356
We have this graph that does a perfect linear decrease

259
00:14:15,356 --> 00:14:18,617
from yes to no across the input range.

260
00:14:20,363 --> 00:14:21,604
But we don't have to stop there.

261
00:14:21,604 --> 00:14:26,388
What if we decided that we wanted to have a curve that started decreasing quickly and

262
00:14:26,388 --> 00:14:30,471
then slowly decreased out towards the top end of the input range?

263
00:14:30,471 --> 00:14:35,015
This is something that Dave and I would refer to as a 4-poly or a quadric curve.

264
00:14:35,015 --> 00:14:40,059
So we can see here I plug that input into the preset generator and that's what I get.

265
00:14:40,059 --> 00:14:40,119
So

266
00:14:44,579 --> 00:14:47,382
There are other possibilities in those drop downs.

267
00:14:47,382 --> 00:14:50,345
What if I decide that I just am not content with that

268
00:14:50,345 --> 00:14:52,848
and what I really wanted was something that is slow

269
00:14:52,848 --> 00:14:54,250
at either end and fast in the middle?

270
00:14:54,250 --> 00:14:56,132
And you should already have a mental image

271
00:14:56,132 --> 00:14:57,093
of what this looks like,

272
00:14:57,093 --> 00:14:59,896
but the curve is really easy to visualize.

273
00:14:59,896 --> 00:15:02,459
This starts slow, accelerates in the middle,

274
00:15:02,459 --> 00:15:04,121
and then slows down again.

275
00:15:04,121 --> 00:15:05,863
This is an inverse logistic curve.

276
00:15:07,107 --> 00:15:12,111
And then just for the hell of it, I figured I'd do a consideration whose score fluctuates

277
00:15:12,111 --> 00:15:16,293
dynamically and there's a sine wave. I didn't bother animating the arrow because that was

278
00:15:16,293 --> 00:15:19,455
a pain. But you can kind of get the idea of where this is going.

279
00:15:19,455 --> 00:15:25,439
So I wanted to pause here to kind of cover a couple of thoughts.

280
00:15:27,104 --> 00:15:29,306
The natural language feature has gotten a lot of great feedback.

281
00:15:29,306 --> 00:15:31,529
A lot of people really enjoy being able to work with it,

282
00:15:31,529 --> 00:15:35,292
being able to specify things in what feels like a much more intuitive manner.

283
00:15:35,292 --> 00:15:37,415
It's super easy to implement.

284
00:15:37,415 --> 00:15:40,538
It's literally just a tag on each preset that says,

285
00:15:40,538 --> 00:15:43,961
these are the different properties this function has.

286
00:15:43,961 --> 00:15:46,364
It increases quickly at the beginning,

287
00:15:46,364 --> 00:15:48,306
slowly at the end, or whatever the curve might be.

288
00:15:49,232 --> 00:15:51,833
And then the drop downs are just a filtering mechanism.

289
00:15:51,833 --> 00:15:52,553
So it's super easy.

290
00:15:52,553 --> 00:15:54,174
There's not actually any natural language AI.

291
00:15:54,174 --> 00:15:55,234
I'm sorry if I disappointed anyone.

292
00:15:55,234 --> 00:15:59,315
There's no real genuine difficult work going on here.

293
00:15:59,315 --> 00:16:02,216
But this is low hanging fruit for everyone

294
00:16:02,216 --> 00:16:03,677
who doesn't want to have to think about

295
00:16:03,677 --> 00:16:06,238
the equation form of all those response curves.

296
00:16:06,238 --> 00:16:09,839
So this is a very different type of intuition

297
00:16:09,839 --> 00:16:13,180
that people can develop about how utility AI works

298
00:16:13,180 --> 00:16:14,560
without having to think about it

299
00:16:14,560 --> 00:16:16,681
in more math, more formal terms.

300
00:16:18,467 --> 00:16:21,168
Now I think we can go further than this.

301
00:16:21,168 --> 00:16:23,569
You'll notice that in the screenshots

302
00:16:23,569 --> 00:16:26,750
there was this notion of as the input grows towards one.

303
00:16:26,750 --> 00:16:28,451
I'm not totally happy with that.

304
00:16:28,451 --> 00:16:32,293
I would like the UI to say something more relevant.

305
00:16:32,293 --> 00:16:35,694
Like as the input, which actually is distance,

306
00:16:35,694 --> 00:16:37,555
grows towards the upper end of the range,

307
00:16:37,555 --> 00:16:41,436
which is 75 meters, then I should get something that says

308
00:16:41,436 --> 00:16:43,677
as distance to target grows towards 75 meters,

309
00:16:43,677 --> 00:16:47,298
the score should, and then the designer fills in the blank.

310
00:16:48,836 --> 00:16:50,677
So that's kind of an idea of where I'm going with all this.

311
00:16:50,677 --> 00:16:53,859
I wanted to jump back to the consideration view real quick

312
00:16:53,859 --> 00:16:55,420
because there's another escape hatch

313
00:16:55,420 --> 00:16:57,541
that's worth calling out real quickly.

314
00:16:57,541 --> 00:17:00,262
And that is this wizard button up here in the top right.

315
00:17:00,262 --> 00:17:03,584
The consideration wizard is genuinely a wall of text,

316
00:17:03,584 --> 00:17:07,627
but the idea here is that if you've got a moment

317
00:17:07,627 --> 00:17:09,107
and you're not entirely sure

318
00:17:09,107 --> 00:17:11,169
what you're trying to accomplish,

319
00:17:11,169 --> 00:17:12,349
you should be able to sit down

320
00:17:12,349 --> 00:17:14,510
and read through these instructions

321
00:17:14,510 --> 00:17:17,132
and get a perfect idea of what you're trying to do and why.

322
00:17:19,139 --> 00:17:23,781
So each of these panes, each of these tabs in the wizard goes through a different part of

323
00:17:23,781 --> 00:17:28,644
building a consideration. Uh the first one is input selection and this one here you can see

324
00:17:28,644 --> 00:17:35,027
is chosen distance to target. Um I then can do the parameterization which tells me what are my

325
00:17:35,027 --> 00:17:38,969
relevant ranges. I care about everything between zero and 75 meters. And then of course there's

326
00:17:38,969 --> 00:17:45,712
the actual response curve system which has the preset escape hatch again so that you can go look

327
00:17:45,712 --> 00:17:47,573
at the natural language version if that's what you prefer.

328
00:17:48,837 --> 00:17:50,338
There's a fun little twist on the end of this one,

329
00:17:50,338 --> 00:17:52,859
which is that naming things is actually,

330
00:17:52,859 --> 00:17:55,099
as I said before, very important to me.

331
00:17:55,099 --> 00:17:57,320
And one of the ways that I've emphasized that

332
00:17:57,320 --> 00:17:59,261
is by providing this link,

333
00:17:59,261 --> 00:18:01,862
which goes to the Curvature Wiki

334
00:18:01,862 --> 00:18:04,823
and actually explains in a very brief and digestible way,

335
00:18:04,823 --> 00:18:07,184
how to do good consideration names.

336
00:18:07,184 --> 00:18:09,705
So this one, for example, is Prioritize Closer Targets.

337
00:18:09,705 --> 00:18:12,686
This kind of gives you a real quick and three words idea

338
00:18:12,686 --> 00:18:14,567
of what the consideration is doing,

339
00:18:14,567 --> 00:18:15,907
what it's trying to accomplish for the AI.

340
00:18:19,076 --> 00:18:23,099
So, this is probably my favorite phrase right now,

341
00:18:23,099 --> 00:18:25,741
is building intuition through play.

342
00:18:25,741 --> 00:18:29,044
I really like this idea of experimenting

343
00:18:29,044 --> 00:18:32,006
and messing around and just getting your hands dirty

344
00:18:32,006 --> 00:18:35,389
and by that process alone, coming to comprehend

345
00:18:35,389 --> 00:18:37,810
how a system functions and how to control it.

346
00:18:37,810 --> 00:18:43,715
So this is an example of a behavior

347
00:18:43,715 --> 00:18:44,996
with some considerations on it.

348
00:18:44,996 --> 00:18:45,997
There's a...

349
00:18:47,392 --> 00:18:51,735
set of inputs right up here that we can look at that correspond directly to the inputs

350
00:18:51,735 --> 00:18:56,737
that are in those considerations. So you remember things like distance or is this target on

351
00:18:56,737 --> 00:19:02,761
a particular team. I can also see the response curves here which show that for the current

352
00:19:02,761 --> 00:19:09,725
values of the inputs, these are the scores that the considerations will have.

353
00:19:09,725 --> 00:19:12,826
Now as I play with these specific

354
00:19:13,246 --> 00:19:20,411
input drop downs, we should be able to see these response curves moving in response to

355
00:19:20,411 --> 00:19:26,435
what I'm doing. So I will change the distance and you can watch that blue dot on the bottom

356
00:19:26,435 --> 00:19:31,999
right box slide back and forth. That is a very visceral kind of instant feedback mechanism

357
00:19:31,999 --> 00:19:37,223
for someone who doesn't want to think in terms of equations, but does want to think in terms

358
00:19:37,223 --> 00:19:38,243
of geometric shapes.

359
00:19:39,005 --> 00:19:43,188
So you can play with these and then if you want the numbers you can go over here on the left

360
00:19:43,188 --> 00:19:48,411
and look at the actual breakdown of the scores of what the considerations produced as they

361
00:19:48,411 --> 00:19:53,354
calculated their response curve values and what the score of the behavior was at the end of that process.

362
00:19:53,354 --> 00:19:58,937
So this is useful if you're looking at considerations within a single behavior.

363
00:19:58,937 --> 00:20:04,840
It doesn't do you much good if what you really care about is how different behaviors compete with each other.

364
00:20:05,403 --> 00:20:08,904
So there is another tab in Curvature which actually targets that specific use case.

365
00:20:08,904 --> 00:20:16,266
You can see in the center column there are the four behaviors that I introduced at the beginning,

366
00:20:16,266 --> 00:20:17,807
to pursue and to evade.

367
00:20:17,807 --> 00:20:20,707
Right now I have the variance for the red team selected.

368
00:20:20,707 --> 00:20:25,889
So I'm dealing with behaviors that only an agent on the red team would actually try to execute.

369
00:20:28,096 --> 00:20:34,332
and the same input controls are here as well as we had in the consideration system with a twist.

370
00:20:34,332 --> 00:20:37,059
If I have two decisions that are both based on distance,

371
00:20:37,802 --> 00:20:42,404
I only get one control in the UI that controls distance.

372
00:20:42,404 --> 00:20:45,726
It will intelligently collapse all of the different inputs

373
00:20:45,726 --> 00:20:47,867
that are the same basic input data

374
00:20:47,867 --> 00:20:51,229
so that you don't have the problem of feeding

375
00:20:51,229 --> 00:20:54,390
considerations for this decision with a distance of 30

376
00:20:54,390 --> 00:20:57,852
and considerations for this decision with a distance of 50

377
00:20:57,852 --> 00:21:00,133
and now you get broken behavior as a result.

378
00:21:02,619 --> 00:21:05,061
So the last piece of this is there's a little chart,

379
00:21:05,061 --> 00:21:07,403
and this is a lot more impressive

380
00:21:07,403 --> 00:21:08,964
with larger, more complex demos,

381
00:21:08,964 --> 00:21:10,485
but this is enough to get the point across.

382
00:21:10,485 --> 00:21:13,647
You can see here there's these two behaviors

383
00:21:13,647 --> 00:21:15,909
that are being scored against each other,

384
00:21:15,909 --> 00:21:19,511
and the winner of them is highlighted down at the bottom.

385
00:21:19,511 --> 00:21:21,753
So in the situation that I've configured

386
00:21:21,753 --> 00:21:23,874
with these sliders and everything up on the top,

387
00:21:23,874 --> 00:21:28,578
the particular decision that my AI will choose to pursue

388
00:21:28,578 --> 00:21:31,079
is actually to go chase down an enemy of the red team,

389
00:21:31,079 --> 00:21:32,000
or probably a blue guy.

390
00:21:32,500 --> 00:21:35,643
And we can see that the score for that is .71.

391
00:21:35,643 --> 00:21:41,128
So this is all different ways of gaining intuition of a running system.

392
00:21:41,128 --> 00:21:42,730
But it's not quite enough.

393
00:21:42,730 --> 00:21:50,697
I wanted to put in a last twist on the experimental intuition through play concept

394
00:21:50,697 --> 00:21:53,200
and do a complete sandbox simulation.

395
00:21:54,180 --> 00:21:57,743
So, again, starting with the requirements for what I wanted this to be,

396
00:21:57,743 --> 00:22:00,806
I wanted to visualize what the AI would do.

397
00:22:00,806 --> 00:22:04,469
So if I actually took and built all the data for an AI system

398
00:22:04,469 --> 00:22:07,832
and plugged it into this tool, I want to watch them actually behave.

399
00:22:07,832 --> 00:22:12,736
The other thing that I really found really important, and I alluded to this earlier,

400
00:22:12,736 --> 00:22:16,859
is just debugging. I want a way to go back and look at this stuff

401
00:22:16,859 --> 00:22:19,181
and understand where it went off the rails and why.

402
00:22:20,658 --> 00:22:24,280
So this real quickly is the scenario mode of curvature.

403
00:22:24,280 --> 00:22:27,282
You can see up in the top left,

404
00:22:27,282 --> 00:22:31,103
there's some red guys kind of hanging around a little base,

405
00:22:31,103 --> 00:22:33,825
and there's some blue guys down in the bottom right

406
00:22:33,825 --> 00:22:34,185
doing the same thing.

407
00:22:34,185 --> 00:22:36,686
I'm gonna go ahead and play this forward,

408
00:22:36,686 --> 00:22:40,548
and what you'll see is a whole bunch of these agents

409
00:22:40,548 --> 00:22:42,569
swarming towards each other,

410
00:22:42,569 --> 00:22:45,170
and then collapsing as they run into each other

411
00:22:45,170 --> 00:22:46,050
in the middle of the field.

412
00:22:46,563 --> 00:22:53,185
And what's happening is they're doing exactly the two behaviors that they were given earlier

413
00:22:53,185 --> 00:22:59,128
in the behaviors section, which is to pursue their enemies and evade their allies.

414
00:22:59,128 --> 00:23:01,049
That is the only thing these guys are going to do.

415
00:23:01,049 --> 00:23:11,773
You'll notice as they move towards each other, they have this tendency to swing out.

416
00:23:11,773 --> 00:23:14,674
And that is them trying not to run into each other as they go.

417
00:23:15,740 --> 00:23:20,383
And then the fun part happens, and they realize that I've run into my enemy.

418
00:23:20,383 --> 00:23:22,204
I don't have a reason to pursue him anymore.

419
00:23:22,204 --> 00:23:24,385
I have no reason to exist.

420
00:23:24,385 --> 00:23:25,646
And so they stall.

421
00:23:25,646 --> 00:23:29,729
And this is actually an event that you can get in the curvature debug logs.

422
00:23:29,729 --> 00:23:31,970
I stalled because I ran out of stuff to do.

423
00:23:31,970 --> 00:23:38,295
So the debug logs themselves are a little more on the programmer-friendly side than

424
00:23:38,295 --> 00:23:42,777
the designer-friendly side at the moment, but this is something that is ripe for exploration,

425
00:23:42,777 --> 00:23:43,038
I think.

426
00:23:44,892 --> 00:23:47,074
Down the left side is a tree.

427
00:23:47,074 --> 00:23:50,095
The tree contains a list of every tick

428
00:23:50,095 --> 00:23:52,037
that has occurred in the simulation.

429
00:23:52,037 --> 00:23:57,420
Underneath each tick, there's a list of every agent

430
00:23:57,420 --> 00:24:00,922
that did a thinking operation in that tick.

431
00:24:00,922 --> 00:24:02,483
For every agent in that layer,

432
00:24:02,483 --> 00:24:04,364
there's a list of all the behaviors

433
00:24:04,364 --> 00:24:06,645
that they considered trying to do.

434
00:24:10,094 --> 00:24:12,915
Then for each behavior that they thought about doing,

435
00:24:12,915 --> 00:24:15,496
there's a list of targets, so relevant things

436
00:24:15,496 --> 00:24:18,157
that they could do that behavior with in the world.

437
00:24:18,157 --> 00:24:20,997
The winning option happens to be marked.

438
00:24:20,997 --> 00:24:23,278
In this case, there's a small blue rectangle

439
00:24:23,278 --> 00:24:27,500
on one of the items in the tree on the left side.

440
00:24:27,500 --> 00:24:29,080
This is just kind of a visual indicator of,

441
00:24:29,080 --> 00:24:31,501
this is the thing that in that tick,

442
00:24:31,501 --> 00:24:33,822
this particular agent actually wound up doing.

443
00:24:35,237 --> 00:24:38,299
So the key here is actually the text on the right.

444
00:24:38,299 --> 00:24:41,101
And that has all the details that we could possibly want.

445
00:24:41,101 --> 00:24:43,443
I'm not going to go through it line by line,

446
00:24:43,443 --> 00:24:44,904
but basically from the top down,

447
00:24:44,904 --> 00:24:47,727
there's more generic to more specific information.

448
00:24:47,727 --> 00:24:49,348
You can look at things like the position

449
00:24:49,348 --> 00:24:50,509
of the agent in the world.

450
00:24:51,029 --> 00:24:54,451
You can look at what their decision was that they actually wound up doing.

451
00:24:54,451 --> 00:24:58,514
You can look at the comparison between that decision and other competing decisions

452
00:24:58,514 --> 00:25:01,256
or even competing targets for the same decision.

453
00:25:01,256 --> 00:25:05,558
And then you can finally, at the lowest level of granularity, you can see there's numbers there

454
00:25:05,558 --> 00:25:10,582
that represent the actual input values, the actual normalized input values,

455
00:25:10,582 --> 00:25:16,225
and the response curve scores for every single consideration that we processed in that tick.

456
00:25:20,006 --> 00:25:24,627
So, just to kind of bring this around to a little bit more open thinking,

457
00:25:24,627 --> 00:25:29,089
the debug experience is kind of a work in progress.

458
00:25:29,089 --> 00:25:30,989
There's a lot of stuff that could be done with it.

459
00:25:30,989 --> 00:25:33,030
There's a lot of exciting potential there, in my opinion.

460
00:25:33,030 --> 00:25:36,351
One of the things that would personally make me very happy

461
00:25:36,351 --> 00:25:39,692
is to be able to rewind the simulation to a specific point.

462
00:25:39,692 --> 00:25:43,653
I would love to be able to scrub forward and backward on a timeline

463
00:25:43,653 --> 00:25:46,574
and say, this is where things went wrong.

464
00:25:46,574 --> 00:25:49,395
I'm going to stop there, change the data,

465
00:25:50,766 --> 00:25:53,531
manipulate the AI design in some way,

466
00:25:53,531 --> 00:25:55,656
and then run the game forward, the simulation forward,

467
00:25:55,656 --> 00:25:57,399
from that exact moment in time,

468
00:25:57,399 --> 00:25:59,223
and see if it fixes the problem that I noticed.

469
00:25:59,223 --> 00:26:02,108
Another thing that would be really cool is if.

470
00:26:02,737 --> 00:26:07,780
you could modify the properties of an agent while you were running through the simulation.

471
00:26:07,780 --> 00:26:11,222
So, I want to, I'm in the moment, I'm watching these guys have a giant fight,

472
00:26:11,222 --> 00:26:15,544
I want that guy to have 10 more hit points, I want to be able to click on him and go 10 more hit points,

473
00:26:15,544 --> 00:26:16,225
and everything just works.

474
00:26:16,225 --> 00:26:22,348
That kind of thing would be very exciting, not just for me, but for a lot of the designers that I know work with these systems.

475
00:26:22,348 --> 00:26:29,913
The current limitation of curvature is you can manipulate the properties of agents, but you have to pause the simulation to do it.

476
00:26:29,913 --> 00:26:29,973
So...

477
00:26:33,024 --> 00:26:38,468
You can inspect objects in the world, those little triangular or circular agents that were flying around

478
00:26:38,468 --> 00:26:40,029
in the simulation mode earlier.

479
00:26:40,029 --> 00:26:45,993
You can click on them individually and get a breakdown of what they've been doing and why they're thinking about what they're thinking about.

480
00:26:47,209 --> 00:26:51,632
uh it's opportunity for improvement here because there's a lot of information that could be

481
00:26:51,632 --> 00:26:58,275
there and it's very difficult to predict in uh uh kind of ahead of the time what information

482
00:26:58,275 --> 00:27:03,177
you might want that display to populate with. So I might know all kinds of things about

483
00:27:03,177 --> 00:27:07,280
this agent and what he's been up to but the designer only cares about one tiny slice of

484
00:27:07,280 --> 00:27:11,942
that and this is a UX challenge to figure out how do I pipe that slice of things that

485
00:27:11,942 --> 00:27:16,044
the designer needs to know through that particular interface of inspection.

486
00:27:18,910 --> 00:27:22,392
So I got a couple of basic ideas that I really want to leave you with.

487
00:27:22,392 --> 00:27:24,953
If you get nothing else, this is the good stuff.

488
00:27:24,953 --> 00:27:28,515
We talk a lot about tools for producing stuff.

489
00:27:28,515 --> 00:27:31,277
We do a lot of work to make tools so that we can ship games.

490
00:27:31,277 --> 00:27:33,138
This is a great thing.

491
00:27:33,138 --> 00:27:34,999
I think tools are very important.

492
00:27:34,999 --> 00:27:38,300
I think tools are a critical piece of how we get our jobs done.

493
00:27:39,293 --> 00:27:42,758
But we don't spend a lot of time talking about tools

494
00:27:42,758 --> 00:27:45,942
that just provide learning and exposure to a concept.

495
00:27:45,942 --> 00:27:48,986
We don't spend a lot of time on educational tools

496
00:27:48,986 --> 00:27:50,929
that exist solely to help people

497
00:27:50,929 --> 00:27:52,210
build intuition through play.

498
00:27:54,641 --> 00:27:58,684
One of the things that I think is very critical when we're talking about that type of tool

499
00:27:58,684 --> 00:28:01,185
is there has to be multiple ways to understand what's going on.

500
00:28:01,185 --> 00:28:06,228
And that's why there are so many different modes and angles for approaching data in curvature.

501
00:28:06,228 --> 00:28:11,491
Because what I want is for anyone to be able to find a route to that information that they're

502
00:28:11,491 --> 00:28:12,391
comfortable traveling on.

503
00:28:13,112 --> 00:28:18,899
I want everyone to be able to sit down with that tool and feel that they understand utility AI

504
00:28:18,899 --> 00:28:22,464
because they can own the process of understanding what's going on under the hood.

505
00:28:22,464 --> 00:28:24,327
And that means we have to give alternatives.

506
00:28:25,587 --> 00:28:31,453
So iterating on the tool is just as important as iteration while you're using the tool.

507
00:28:31,453 --> 00:28:35,698
A lot of tools talk, spend time talking about the user's iteration time and how you need

508
00:28:35,698 --> 00:28:39,362
to make sure that they can save and reload and do all this stuff really quickly.

509
00:28:39,362 --> 00:28:40,704
That's all very important.

510
00:28:40,704 --> 00:28:43,047
But actually evolving the tool past version 1.

511
00:28:43,727 --> 00:28:44,848
is also extremely important.

512
00:28:44,848 --> 00:28:48,051
And so that's something that I would like to reinforce here,

513
00:28:48,051 --> 00:28:50,173
is that when we build these systems,

514
00:28:50,173 --> 00:28:52,455
we shouldn't just let them sit once we're

515
00:28:52,455 --> 00:28:53,696
sort of happy with them.

516
00:28:53,696 --> 00:28:55,838
We need to tend to them and grow them

517
00:28:55,838 --> 00:28:57,259
and evolve them with ourselves.

518
00:28:57,259 --> 00:28:59,381
Sandboxes are a lot of fun.

519
00:28:59,381 --> 00:29:00,441
This is just kind of a bonus point.

520
00:29:00,441 --> 00:29:03,804
I love the idea of doing one outside of an engine

521
00:29:03,804 --> 00:29:05,606
because it means that it's very lightweight,

522
00:29:05,606 --> 00:29:06,687
it's very flexible,

523
00:29:06,687 --> 00:29:09,229
and it gives you the ability to experiment very quickly.

524
00:29:10,717 --> 00:29:12,858
Most of all, I want everyone here, again,

525
00:29:12,858 --> 00:29:16,300
think about how you can improve AI tools

526
00:29:16,300 --> 00:29:18,941
and what you can do along these lines

527
00:29:18,941 --> 00:29:21,743
to make the experience of learning and using your AI

528
00:29:21,743 --> 00:29:23,084
systems even better.

529
00:29:23,084 --> 00:29:25,045
Curvature is open source.

530
00:29:25,045 --> 00:29:27,286
You can find it on GitHub at this URL.

531
00:29:27,286 --> 00:29:28,487
I'll leave this up.

532
00:29:28,487 --> 00:29:30,268
And this is also my email address.

533
00:29:30,268 --> 00:29:31,028
And that's what I got.

534
00:29:31,028 --> 00:29:31,628
Thank you very much.

