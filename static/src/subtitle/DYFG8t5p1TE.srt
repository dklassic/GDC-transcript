1
00:00:05,628 --> 00:00:13,053
Hey everybody. Thank you very much for coming. My name is Karim Schuman. I'm in the Audio

2
00:00:13,093 --> 00:00:21,339
QA department at Bungie. This is the talk. I hope you can read it. It's pretty big. So

3
00:00:21,780 --> 00:00:27,904
just a few quick things. Please silence your phones or put them on vibrate.

4
00:00:32,341 --> 00:00:34,823
It doesn't look like we're gonna be super packed

5
00:00:34,843 --> 00:00:36,825
so you don't need to move into the middle or anything.

6
00:00:39,347 --> 00:00:41,608
Also, at the end of this talk,

7
00:00:41,648 --> 00:00:43,970
you should be receiving evaluations in your email.

8
00:00:45,391 --> 00:00:46,893
It would be really great to get some feedback.

9
00:00:47,273 --> 00:00:49,114
So I'll try to remind you again at the end.

10
00:00:50,035 --> 00:00:50,836
All right, let's get started.

11
00:00:54,239 --> 00:00:56,060
We got a quick, fun intro.

12
00:01:01,001 --> 00:01:02,744
Bungie is an exciting place to be.

13
00:01:02,824 --> 00:01:04,367
Everyone's always looking forward.

14
00:01:04,427 --> 00:01:05,469
Everyone's always thinking,

15
00:01:05,569 --> 00:01:08,835
how do we take destiny and evolve it to the future?

16
00:01:13,023 --> 00:01:14,465
Leave them wondering how the hell you did it.

17
00:01:14,875 --> 00:01:19,058
Bungie as an audio team has always had a hyper attention to detail.

18
00:01:19,278 --> 00:01:22,039
That's a key part of the mantra of what our team is about.

19
00:01:22,180 --> 00:01:24,861
We each bring something to it that wouldn't be there if we weren't here.

20
00:01:24,941 --> 00:01:26,902
We work well together, we challenge each other.

21
00:01:27,082 --> 00:01:32,145
Being a part of a much bigger team is exciting because there's a lot more collaboration and iteration on ideas.

22
00:01:32,245 --> 00:01:35,607
You're constantly trying to achieve something. You're trying to get to a higher place.

23
00:01:35,727 --> 00:01:41,731
It's a big goal and a big accomplishment to create a universe from scratch and then make it sound like that universe.

24
00:01:47,160 --> 00:01:48,762
I really enjoy working with the people here.

25
00:01:48,782 --> 00:01:50,763
It's been a fun ride and the ride's still moving.

26
00:01:50,803 --> 00:01:51,804
What a great place to be.

27
00:01:55,747 --> 00:01:55,987
Awesome.

28
00:01:57,208 --> 00:01:59,910
So I have the distinct pleasure of working with that amazing team.

29
00:02:01,611 --> 00:02:03,713
For those of you who don't know, let's quickly go over.

30
00:02:04,693 --> 00:02:09,077
Destiny is an action shooter developed entirely by Bungie.

31
00:02:10,164 --> 00:02:12,766
Rise of Iron, which we're going to be talking about today,

32
00:02:13,166 --> 00:02:16,668
is our latest expansion, which was released September 2016.

33
00:02:18,569 --> 00:02:22,432
And for the audio professionals in the room who are curious,

34
00:02:23,052 --> 00:02:25,334
we use Wwise middleware implementation.

35
00:02:25,694 --> 00:02:28,796
That's how we handle all of the audio going in and out

36
00:02:28,816 --> 00:02:29,236
of the system.

37
00:02:31,418 --> 00:02:35,240
So what are we talking about today?

38
00:02:36,199 --> 00:02:41,183
This whole project, which eventually turned into a presentation, started with a conversation

39
00:02:41,223 --> 00:02:45,887
I had with our audio producer, Victor, who is somewhere around here today.

40
00:02:46,167 --> 00:02:52,693
And so my question to him was, what is the most painful part of development for our audio

41
00:02:52,733 --> 00:02:52,953
team?

42
00:02:55,155 --> 00:02:58,377
And his answer was the mixing process.

43
00:02:59,778 --> 00:03:00,599
And his reason for that.

44
00:03:01,525 --> 00:03:07,468
was that our audio team tends to lose a lot of time dealing with issues that are not audio

45
00:03:07,508 --> 00:03:07,848
issues.

46
00:03:08,548 --> 00:03:14,731
They're running into roadblocks and problems that aren't things that actually have to do

47
00:03:14,791 --> 00:03:15,852
with making it sound good.

48
00:03:17,593 --> 00:03:22,595
And overall, because of various time factors and the way that the mix process works, it

49
00:03:23,595 --> 00:03:25,076
could get stressful for our team.

50
00:03:26,389 --> 00:03:30,793
Now, for those of you who don't know, this is sort of a cross-pollination talk.

51
00:03:30,813 --> 00:03:34,377
We've got people from all different fields in the room.

52
00:03:35,427 --> 00:03:38,609
I'm going to quickly go over what an audio mix process is.

53
00:03:39,130 --> 00:03:45,775
It basically occurs at the end of development when all of the sounds and music and dialogue

54
00:03:45,795 --> 00:03:50,478
is already in the game, but that doesn't necessarily mean it sounds great already.

55
00:03:50,958 --> 00:03:54,561
A lot of work needs to go into making it feel cinematic and natural.

56
00:03:55,321 --> 00:04:00,365
So for example, let's say there's a cutscene of two characters having a conversation and

57
00:04:00,385 --> 00:04:02,106
they're standing next to a river.

58
00:04:03,325 --> 00:04:08,346
You do not want the sound of that river to be louder than the conversation to the point

59
00:04:08,406 --> 00:04:12,228
where you're having trouble understanding what the characters are saying to each other.

60
00:04:13,688 --> 00:04:19,270
Even if it's a really big river that's rushing by and that might actually be more true to

61
00:04:19,370 --> 00:04:23,452
real life, you want something that's a fun cinematic experience.

62
00:04:23,712 --> 00:04:25,012
You want to be able to hear that river.

63
00:04:25,592 --> 00:04:30,779
But an important part of the audio mix is to make sure that what's important is louder

64
00:04:31,019 --> 00:04:35,504
and clearer than what's unimportant, even though we want to be able to hear and experience

65
00:04:35,564 --> 00:04:36,646
the whole scene.

66
00:04:39,802 --> 00:04:42,624
The audio mix also involves a lot more than just volume manipulation.

67
00:04:42,684 --> 00:04:50,529
It involves adjusting timing of various cues, it involves checking frequencies and making

68
00:04:50,569 --> 00:04:52,030
adjustments in that way as well.

69
00:04:53,371 --> 00:04:57,594
It can even require going back to the drawing board at times, which is rare, it's sort of

70
00:04:57,634 --> 00:05:03,758
a last resort, but if certain sounds are regularly occurring in conjunction and that's not something

71
00:05:04,138 --> 00:05:06,039
we were hearing during the sound design process.

72
00:05:06,680 --> 00:05:09,566
It might be something that's coming up in the mix and one or two of them might need

73
00:05:09,586 --> 00:05:11,871
to be reworked before they can be finalized.

74
00:05:12,893 --> 00:05:16,179
So because of all this delicate audio work that needs to go into the final mix...

75
00:05:17,426 --> 00:05:19,548
And it needs to happen at the final stage of development,

76
00:05:19,608 --> 00:05:22,270
when all of the sound and music and dialogue

77
00:05:22,310 --> 00:05:23,310
is already in the game.

78
00:05:24,131 --> 00:05:27,353
Mix requires that our technicians are

79
00:05:27,394 --> 00:05:31,016
working in balanced audio rooms, full 5.1 surround sound,

80
00:05:31,256 --> 00:05:31,917
speaker setup.

81
00:05:32,157 --> 00:05:34,239
So kind of like the image that you're seeing here.

82
00:05:34,259 --> 00:05:38,062
It's one of our specialized audio rooms in the Bungie

83
00:05:38,082 --> 00:05:38,422
studio.

84
00:05:39,683 --> 00:05:43,265
And it also requires our team to be playing and experiencing

85
00:05:43,466 --> 00:05:45,647
all the new content that we release for a project.

86
00:05:46,758 --> 00:05:49,842
over multiple playthroughs. It's a long and intense process.

87
00:05:52,364 --> 00:06:00,093
So the mix is handled by the audio leads at Bungie. With a lot of help. We have help from

88
00:06:00,274 --> 00:06:04,699
our head of audio, head of the entire department, our

89
00:06:06,344 --> 00:06:08,646
music director, our dialogue director.

90
00:06:08,966 --> 00:06:13,130
There's a lot of input that goes into the process, but primarily it's being handled

91
00:06:13,190 --> 00:06:16,834
by our audio leads first and foremost.

92
00:06:17,995 --> 00:06:21,679
We had three weeks scheduled for the mix process on Rise of Iron.

93
00:06:24,349 --> 00:06:30,193
One of the biggest challenges about this for our audio leads is that when they switch from

94
00:06:30,713 --> 00:06:35,737
creating content to mixing content, they're suddenly put in a position where they need

95
00:06:35,757 --> 00:06:37,838
to be experiencing content like a player.

96
00:06:38,239 --> 00:06:44,663
So if you take a look at the slide, which is just a super quick breakdown of part of

97
00:06:44,723 --> 00:06:48,486
what the audio dev process looks like for our team, you'll realize that

98
00:06:49,688 --> 00:06:55,310
Everything that occurs before the final mix doesn't actually require them to be playing

99
00:06:55,370 --> 00:06:56,811
the game like a player would.

100
00:06:57,171 --> 00:07:01,693
They do go into the game engine, they go into test maps, they make sure that their content

101
00:07:01,813 --> 00:07:03,394
is functioning the way it's intended to.

102
00:07:03,854 --> 00:07:09,036
But the final mix requires them to actually progress through the game and simulate the

103
00:07:09,076 --> 00:07:10,016
player experience.

104
00:07:10,777 --> 00:07:16,219
And that can be challenging to suddenly be put in a different sort of work mindset.

105
00:07:18,990 --> 00:07:23,074
On top of all that, time is really precious, and I can't stress that enough.

106
00:07:23,795 --> 00:07:23,975
It's...

107
00:07:25,010 --> 00:07:28,912
the last three weeks of development, and that deadline is a hard deadline.

108
00:07:29,872 --> 00:07:33,954
It's close to ship, and everything needs to be as polished as possible.

109
00:07:34,834 --> 00:07:39,356
So previously, what had been occurring and what Victor communicated to me in our original

110
00:07:39,416 --> 00:07:43,418
conversation is that a lot of time was being lost navigating in the game.

111
00:07:43,778 --> 00:07:45,959
And we're going to go into that more deeply in a minute.

112
00:07:47,600 --> 00:07:51,761
As well as that, multiplayer content, which our game has quite a lot of, proves extra

113
00:07:51,801 --> 00:07:53,442
difficult during this process as well.

114
00:07:54,745 --> 00:07:59,309
And so my project can be summarized into two basic goals

115
00:08:01,030 --> 00:08:02,852
in order to improve this mix process.

116
00:08:03,812 --> 00:08:08,696
I wanted to organize audio play tests to facilitate and improve

117
00:08:08,836 --> 00:08:11,378
our multiplayer experience and mix process.

118
00:08:12,439 --> 00:08:15,561
And I ended up customizing tools that we have internally

119
00:08:15,822 --> 00:08:18,864
to make the work easier overall for our audio leads.

120
00:08:19,164 --> 00:08:21,366
So let's get started with part one, multiplayer.

121
00:08:23,321 --> 00:08:27,644
So Rise of Iron, the expansion, included plenty of multiplayer content.

122
00:08:28,625 --> 00:08:34,149
Audio mix decisions in this type of scenario must be based on real gameplay.

123
00:08:34,929 --> 00:08:42,054
So imagine you're one of the audio leads and there's a new PvP mode that you want to be

124
00:08:42,134 --> 00:08:48,759
mixing and you're in your specialized audio room and you load up the game, you load into

125
00:08:48,779 --> 00:08:49,500
the PvP map.

126
00:08:50,235 --> 00:08:54,417
and you're running around and you're like, yeah, all the new sounds sound great.

127
00:08:55,177 --> 00:09:00,999
Is that analogous to a full 6v6 12-player PvP experience on that map?

128
00:09:01,679 --> 00:09:02,419
And the answer is no.

129
00:09:02,579 --> 00:09:05,140
And of course, our leads know that.

130
00:09:05,260 --> 00:09:09,541
It's just difficult to fully replicate the scenario.

131
00:09:11,742 --> 00:09:16,103
No one before this had taken ownership of audio play tests.

132
00:09:16,443 --> 00:09:19,104
And so while they did occur, they were inconsistent.

133
00:09:20,457 --> 00:09:23,478
Now, to be clear, playtests at Bungie are very common.

134
00:09:23,858 --> 00:09:27,339
We have a lot of balancing playtests and design playtests

135
00:09:27,359 --> 00:09:31,161
that occur, especially with our PVP team and our raid team.

136
00:09:31,561 --> 00:09:32,741
A lot of work goes into that.

137
00:09:33,141 --> 00:09:34,922
We have designated playtest areas.

138
00:09:36,299 --> 00:09:40,623
The issue is that audio mix playtests come with added difficulty on top of that.

139
00:09:41,463 --> 00:09:47,048
It involves connecting rooms digitally so that we have the playtest rooms where we can

140
00:09:47,068 --> 00:09:51,852
have large groups of people connected to one of our audio rooms where one of our audio

141
00:09:51,892 --> 00:09:55,615
leads would be making adjustments and improving the mix.

142
00:09:57,056 --> 00:10:01,820
It involved planning a lot of extra time as part of that and reserving those rooms.

143
00:10:02,850 --> 00:10:05,611
It also required support from other teams.

144
00:10:05,771 --> 00:10:10,633
It required having those playtesters who handled the PvP content, the raid content,

145
00:10:10,993 --> 00:10:15,175
and getting them on board because we needed their expertise and we needed butts in the

146
00:10:15,215 --> 00:10:22,798
seats to really fill out a whole 6v6 experience and get a realistic scenario for our audio

147
00:10:22,838 --> 00:10:24,039
leads to make real decisions.

148
00:10:25,563 --> 00:10:29,124
And so mostly this was an issue of timing and communication.

149
00:10:29,765 --> 00:10:32,605
And it also involved a lot of explaining the importance of

150
00:10:32,665 --> 00:10:35,466
what we were trying to do to those other teams.

151
00:10:35,606 --> 00:10:39,387
I mean, if you're in the audio department of whatever

152
00:10:39,427 --> 00:10:42,148
project you're currently working on, you know that you

153
00:10:42,188 --> 00:10:44,349
have to be an advocate for the importance of what we do.

154
00:10:45,049 --> 00:10:48,710
And sometimes it can be unclear to those who aren't as

155
00:10:48,750 --> 00:10:50,611
experienced with working on audio.

156
00:10:52,131 --> 00:10:56,332
So, scheduling a big thing and taking time out of everyone's day to say, hey, we're going

157
00:10:56,372 --> 00:11:02,153
to do an audio mix play test for the new PvP experience, a large part of what I was doing

158
00:11:02,193 --> 00:11:06,054
was answering the question, what, why, what is that, and why do we need to do that?

159
00:11:06,194 --> 00:11:11,715
And so previously our audio leads maybe didn't have the luxury of sort of sitting down and

160
00:11:11,755 --> 00:11:15,836
making sure everyone understood what we were doing because their time was so precious this

161
00:11:15,876 --> 00:11:16,437
close to ship.

162
00:11:19,013 --> 00:11:24,525
So, best example of multiplayer that I'll be digging into a bit deeper is the raid that

163
00:11:24,545 --> 00:11:27,211
we released with Rise of Iron, the Wrath of the Machine raid.

164
00:11:28,510 --> 00:11:34,473
So for those of you who don't know what a Destiny raid is like, it's a six-player co-op experience.

165
00:11:35,094 --> 00:11:41,397
There are giant boss encounters, rooms after rooms, jumping puzzles, and a lot of unique

166
00:11:41,437 --> 00:11:42,797
content, unique mechanics.

167
00:11:43,198 --> 00:11:46,859
And so of course as a result we have a lot of unique sound design that goes into that

168
00:11:47,200 --> 00:11:50,721
and a lot of unique music that's triggered as you experience that content.

169
00:11:51,021 --> 00:11:52,222
So it was really important.

170
00:11:52,242 --> 00:11:55,944
This was one of the biggest elements to the release for the audio team.

171
00:11:56,704 --> 00:11:58,445
with the new expansion.

172
00:11:59,726 --> 00:12:02,287
So, allow me to show you why this type of content

173
00:12:02,407 --> 00:12:04,268
is extra challenging for our team.

174
00:12:04,368 --> 00:12:05,228
I'm going to show you a video.

175
00:12:06,469 --> 00:12:07,649
It's one audio lead.

176
00:12:07,910 --> 00:12:09,811
It's an example of one audio lead

177
00:12:09,871 --> 00:12:13,372
trying to mix the final boss fight of this specific raid.

178
00:12:13,893 --> 00:12:14,713
And they're fighting alone.

179
00:12:15,974 --> 00:12:18,035
They've got a debug command inputted into the game,

180
00:12:18,075 --> 00:12:19,315
so they're receiving no damage.

181
00:12:19,915 --> 00:12:22,357
And they're just trying to experience the final boss fight

182
00:12:22,397 --> 00:12:23,717
to make some audio decisions.

183
00:12:24,378 --> 00:12:25,858
So, let's take a listen.

184
00:12:51,968 --> 00:12:54,650
Okay, so that was a mess.

185
00:12:55,791 --> 00:12:58,112
One of the loudest sounds in our game is getting shot.

186
00:12:59,033 --> 00:13:01,915
uh... regardless of whether or not you're taking damage and there are

187
00:13:01,955 --> 00:13:03,937
enough enemies in that encounter

188
00:13:05,278 --> 00:13:08,040
balanced and designed for six players working together

189
00:13:08,461 --> 00:13:11,683
okay so all of those enemies based on their AI scripting

190
00:13:12,004 --> 00:13:15,727
were just targeting the only player in that scenario

191
00:13:16,427 --> 00:13:17,228
as a result of

192
00:13:17,628 --> 00:13:18,229
getting shot

193
00:13:18,889 --> 00:13:22,052
all the time not being able to really move around or hear

194
00:13:22,753 --> 00:13:25,175
ambience the external cues that are occurring

195
00:13:26,215 --> 00:13:31,357
It's really, really hard for our audio team to experience that content solo

196
00:13:31,977 --> 00:13:34,998
and really improve the mix based on what they're hearing.

197
00:13:35,758 --> 00:13:38,419
So, here's a quick clip of the same encounter with a full team.

198
00:13:39,600 --> 00:13:41,420
This is how the content is supposed to be experienced.

199
00:14:16,258 --> 00:14:17,299
So that's the audio goal.

200
00:14:18,019 --> 00:14:20,280
There's a lot of moving pieces, as you can see.

201
00:14:20,660 --> 00:14:22,981
There's specific audio cues, and they

202
00:14:23,021 --> 00:14:25,041
need to be balanced with the overall experience.

203
00:14:25,381 --> 00:14:26,202
It's very complex.

204
00:14:27,482 --> 00:14:29,303
And so the first workflow upgrade

205
00:14:29,863 --> 00:14:32,604
was scheduling consistent audio mix playtests.

206
00:14:32,864 --> 00:14:35,064
It was mostly a task of coordinating and planning.

207
00:14:35,785 --> 00:14:38,405
It started with us on the audio QA side

208
00:14:38,525 --> 00:14:41,767
attending regularly the PVP and RAID balance playtests.

209
00:14:43,579 --> 00:14:43,779
that

210
00:14:43,799 --> 00:14:46,521
meant we got lots of players experiencing the content as a group.

211
00:15:01,740 --> 00:15:04,963
Another interesting effect was that they were playing like real players.

212
00:15:05,423 --> 00:15:10,427
This was content that they were familiar with, that they knew how players would play it in

213
00:15:10,487 --> 00:15:15,292
real life, and they weren't running around in the game like our sound designers do, where

214
00:15:15,332 --> 00:15:18,394
they get all excited about the new thing that they made, and they're like, ooh, look, we

215
00:15:18,414 --> 00:15:20,056
can do this, and isn't that great?

216
00:15:20,176 --> 00:15:25,020
And then you get people who are playing the game like real players, and they're running

217
00:15:25,080 --> 00:15:27,422
the boss fight real fast in real time.

218
00:15:28,243 --> 00:15:32,305
This allowed our audio leads to get an improved perception

219
00:15:32,425 --> 00:15:35,126
of what the game was going to sound like at full speed play.

220
00:15:36,067 --> 00:15:38,008
Overall, this proved very valuable,

221
00:15:38,388 --> 00:15:41,009
and we continue to expand on audio mix playtests today.

222
00:15:41,430 --> 00:15:43,371
We're starting to do them earlier in development.

223
00:15:43,911 --> 00:15:47,132
It's really an important improvement

224
00:15:47,172 --> 00:15:48,393
that we made with our workflow.

225
00:15:50,434 --> 00:15:54,756
So part two, improving the tools to make the mix process

226
00:15:54,896 --> 00:15:56,137
easier for our team overall.

227
00:15:57,208 --> 00:16:01,129
During Mix, time was lost just getting around.

228
00:16:02,369 --> 00:16:06,451
And the reason for that is because Destiny is big and complex.

229
00:16:08,291 --> 00:16:11,172
The leads want to access all the new content quickly.

230
00:16:11,532 --> 00:16:13,773
They need to get to this specific scenario.

231
00:16:13,813 --> 00:16:15,613
They need to hear this specific mission.

232
00:16:17,294 --> 00:16:21,595
But unlocking and accessing content in our game is challenging.

233
00:16:22,755 --> 00:16:22,855
So...

234
00:16:23,898 --> 00:16:27,401
Here are some examples of how content naturally unlocks in Destiny.

235
00:16:27,862 --> 00:16:29,323
It's just some, there's more.

236
00:16:31,805 --> 00:16:36,129
Each item that you're seeing on the screen is tied to, in the engine, a hidden flag.

237
00:16:37,110 --> 00:16:43,917
When you complete a mission, for example, you flip that flag, you trigger it, and it

238
00:16:43,957 --> 00:16:46,800
allows you to then access the next piece of content behind that.

239
00:16:48,474 --> 00:16:53,979
Of course, working in development, we have debug commands that let us specifically trigger

240
00:16:54,019 --> 00:16:59,043
these flags without actually having to complete the content and play the game naturally every

241
00:16:59,083 --> 00:16:59,484
single day.

242
00:17:02,555 --> 00:17:08,399
during development, those flags can change, those debug commands can change, more implementation

243
00:17:08,459 --> 00:17:15,403
occurs as we move closer to ship date, the build becomes closer to what is actually going

244
00:17:15,463 --> 00:17:24,288
to be released, and so it becomes more and more systematically set up for those flags

245
00:17:24,328 --> 00:17:25,809
to be in place and functioning.

246
00:17:26,777 --> 00:17:31,641
where it's more like the player experience and less like the creation experience that

247
00:17:31,821 --> 00:17:32,721
we get used to.

248
00:17:35,023 --> 00:17:39,546
And so leads wouldn't be encountering any of these challenges before they started working

249
00:17:39,586 --> 00:17:40,287
on the audio mix.

250
00:17:40,367 --> 00:17:46,351
What I was saying before, that their work before working on mix is not based on experiencing

251
00:17:46,371 --> 00:17:47,252
the game like a player.

252
00:17:48,133 --> 00:17:52,374
They're working in their DAWs, they're working in WISE, they're working on test maps, but

253
00:17:52,454 --> 00:17:56,535
now three weeks before ship they need to work on the mix, they need to be experiencing it

254
00:17:56,575 --> 00:18:02,577
like a player, and that means moving forward and experiencing one mission or one section

255
00:18:03,117 --> 00:18:03,877
as a player would.

256
00:18:04,197 --> 00:18:09,258
And that meant dealing with all of these flags quickly and effectively.

257
00:18:10,459 --> 00:18:15,820
So the goal was getting around and returning to specific states day after day as they iterated

258
00:18:15,900 --> 00:18:17,240
and improved on the mix process.

259
00:18:18,563 --> 00:18:21,724
This is how our devs got around in Destiny before Rise of Iron.

260
00:18:22,985 --> 00:18:26,106
Dev builds, all of our dev builds include command lines.

261
00:18:27,366 --> 00:18:31,847
The challenge with that is you need to actually memorize every debug command that you want

262
00:18:31,887 --> 00:18:32,948
to send into the build.

263
00:18:33,728 --> 00:18:35,108
That comes with its own challenges.

264
00:18:36,249 --> 00:18:40,390
Most people use our debug menu, which is the image that you can see on the screen.

265
00:18:41,670 --> 00:18:43,171
Now the debug menu definitely works.

266
00:18:44,668 --> 00:18:50,170
It uses controller shortcuts, so it's regardless of platform, you just have a controller plugged

267
00:18:50,250 --> 00:18:54,671
in, you press a series of buttons to open up the menu and you continue to use the controller

268
00:18:54,691 --> 00:18:56,032
to navigate through those menus.

269
00:18:56,372 --> 00:18:59,853
It's basically a series of nested menus, like a folder sort of structure.

270
00:19:01,474 --> 00:19:04,075
It can be pretty slow navigating through it.

271
00:19:04,115 --> 00:19:07,276
We're going to have a video briefly just to give you an idea of what it's like to move

272
00:19:07,316 --> 00:19:07,836
around in it.

273
00:19:08,942 --> 00:19:11,422
It can also be hard to find what you need sometimes.

274
00:19:11,862 --> 00:19:15,943
Most of our devs, they get used to going to specific audio locations where they know it

275
00:19:16,003 --> 00:19:20,144
has debug commands that they need, but if it's something new or it's something they're

276
00:19:20,164 --> 00:19:24,525
trying to deal with a debug issue that they don't normally deal with, it can be very challenging

277
00:19:24,585 --> 00:19:26,805
to navigate if you don't know where you're going.

278
00:19:27,526 --> 00:19:29,546
And also, it doesn't include everything.

279
00:19:29,686 --> 00:19:34,547
When a flag got changed, that doesn't necessarily mean the new debug command required to handle

280
00:19:34,587 --> 00:19:36,708
it was going to appear in that menu.

281
00:19:37,648 --> 00:19:40,589
So here's a quick video just to give you an idea of what it's like.

282
00:19:40,729 --> 00:19:43,790
You can be in-game, you can press the shortcut to open up the menu,

283
00:19:44,411 --> 00:19:47,812
and you can use the keypad to move up and down

284
00:19:48,632 --> 00:19:50,893
and hit confirm to enter a menu,

285
00:19:51,274 --> 00:19:53,795
turn on a command that you want, hit cancel to go back,

286
00:19:54,615 --> 00:19:55,395
select a different one.

287
00:19:57,276 --> 00:19:59,937
And that's just the general concept of what it's like.

288
00:20:01,058 --> 00:20:01,158
So.

289
00:20:01,842 --> 00:20:05,185
To improve the process, I focused on this tool specifically.

290
00:20:05,385 --> 00:20:08,347
It's a dev tool we have at Bungie called Guardian.

291
00:20:09,869 --> 00:20:10,990
There are a couple caveats here.

292
00:20:11,030 --> 00:20:14,032
Caveat number one, this is an internal tool that we use.

293
00:20:14,733 --> 00:20:16,414
I had to sneak out just to show you this much.

294
00:20:17,095 --> 00:20:20,057
So make of it what you can.

295
00:20:20,818 --> 00:20:23,440
Caveat second one, I did not make it.

296
00:20:25,001 --> 00:20:29,945
I customized it specifically for our audio team, and I'm going to go into how in a bit

297
00:20:29,965 --> 00:20:30,525
more detail.

298
00:20:30,985 --> 00:20:37,049
But many thanks to the Bungie Tools programmers that we have, an amazing team, for not only

299
00:20:37,409 --> 00:20:42,853
creating this tool, but also including with it all the tools necessary to customize it

300
00:20:42,893 --> 00:20:43,833
for each team's use.

301
00:20:45,646 --> 00:20:48,848
What I'm hoping that you'll get from me explaining all of this

302
00:20:48,908 --> 00:20:52,210
are some of the concepts and usage and feedback that I received

303
00:20:52,810 --> 00:20:56,292
that will hopefully help you with whatever project you're currently working on

304
00:20:56,352 --> 00:20:57,093
or will in the future.

305
00:20:57,773 --> 00:21:00,575
So Guardian handles a lot of different functions.

306
00:21:01,424 --> 00:21:02,865
We're not going to get into all of them.

307
00:21:03,725 --> 00:21:08,548
It runs on a PC, that's important to know, so it's controlled by the mouse, and it connects

308
00:21:08,608 --> 00:21:11,289
to your game client regardless of what platform you're on.

309
00:21:11,489 --> 00:21:18,472
So you give it the name or IP address of whatever dev kit we might be working on, and it can

310
00:21:18,512 --> 00:21:24,215
connect to it, recognize our game client, and allow you to make changes.

311
00:21:25,497 --> 00:21:29,540
Specifically, the element we're going to be talking about with Guardian today is the

312
00:21:29,580 --> 00:21:30,260
command assistant.

313
00:21:30,900 --> 00:21:36,944
And again, getting around in Destiny is hard, so the goal was to use this tool to improve

314
00:21:37,084 --> 00:21:41,847
accessing the content and make useful debug commands accessible with a single click.

315
00:21:44,328 --> 00:21:45,989
This is Guardian's command assistant.

316
00:21:46,129 --> 00:21:46,890
It's what it looks like.

317
00:21:47,350 --> 00:21:52,133
If set up properly, Guardian can replace the need for the debug menu of the video that

318
00:21:52,153 --> 00:21:52,773
I just showed you.

319
00:21:53,814 --> 00:21:54,715
It starts off blank.

320
00:21:55,987 --> 00:21:58,428
So I created all of the buttons that you're seeing in front of you.

321
00:21:59,548 --> 00:22:05,450
Basically, behind each button when clicked, custom scripts send multiple debug commands

322
00:22:05,970 --> 00:22:07,770
to the game client that you're connected to.

323
00:22:08,371 --> 00:22:13,972
And so it's organized and created with the intent of easy functionality, grouped based

324
00:22:14,052 --> 00:22:18,273
on how the devs actually use those debug commands, specifically the audio devs.

325
00:22:19,585 --> 00:22:24,987
So one of the other excellent features is that as soon as this was finalized and saved,

326
00:22:25,347 --> 00:22:29,409
I could automatically share the entire page of buttons with the whole office.

327
00:22:29,889 --> 00:22:34,551
So the next time anyone in the office closed and reopened Guardian, it would automatically

328
00:22:34,611 --> 00:22:40,213
make this page available from them from the dropdown of buttons and command assistants

329
00:22:40,313 --> 00:22:42,274
that are saved into our system.

330
00:22:44,375 --> 00:22:47,616
Before this, there had been no audio command assistant page.

331
00:22:48,682 --> 00:22:52,645
Before this, no one in audio used Guardian pretty much at all.

332
00:22:53,606 --> 00:22:58,090
But based on my experience, I was the one who believed that it could make things easier

333
00:22:58,130 --> 00:23:01,253
and faster, specifically when it came to the mix process.

334
00:23:02,894 --> 00:23:03,515
Quick tangent.

335
00:23:05,136 --> 00:23:08,299
Maybe you don't know what kind of debug commands are useful for an audio team.

336
00:23:09,280 --> 00:23:14,625
And so I'm sort of going into all these debug commands, and you're wondering, why is this

337
00:23:14,665 --> 00:23:15,826
so useful and important?

338
00:23:17,530 --> 00:23:25,176
So if you're a tools programmer, maybe, or an audio programmer, maybe you can look into

339
00:23:25,236 --> 00:23:28,678
creating some of these debug commands and tools for your teams.

340
00:23:29,498 --> 00:23:34,682
If you're an audio content dev and you've been struggling with your own process, maybe

341
00:23:34,902 --> 00:23:39,225
you can ask some of the programmers on your project for some of these excellent tools.

342
00:23:39,265 --> 00:23:40,686
So let's get into it a little bit.

343
00:23:41,627 --> 00:23:45,469
Antimeters, this is my personal favorite.

344
00:23:47,818 --> 00:23:49,379
It's used a lot by the audio team.

345
00:23:49,580 --> 00:23:53,243
It basically puts, if you look at the bottom half of this image,

346
00:23:53,383 --> 00:23:57,568
you'll see some blue debug text that you will not

347
00:23:57,628 --> 00:23:58,849
see in the game normally.

348
00:23:59,870 --> 00:24:04,855
This text includes the name of the event that's being triggered,

349
00:24:04,975 --> 00:24:06,777
the audio event that's being triggered by Wyze.

350
00:24:07,197 --> 00:24:10,821
And it's placed directly over the object that

351
00:24:10,881 --> 00:24:12,002
is triggering it in the game.

352
00:24:13,546 --> 00:24:17,410
This proves extremely useful as we navigate and we encounter issues.

353
00:24:17,970 --> 00:24:19,132
We're searching for bugs.

354
00:24:19,212 --> 00:24:24,317
We want to verify that a specific weapon, for example, is making the sound that that

355
00:24:24,357 --> 00:24:28,001
weapon has, the sound that that has been designed for that weapon.

356
00:24:29,382 --> 00:24:30,263
So on and so forth.

357
00:24:30,363 --> 00:24:35,028
It's extremely useful for quickly understanding why something is not sounding the way it's

358
00:24:35,048 --> 00:24:35,668
supposed to sound.

359
00:24:38,285 --> 00:24:42,806
Distance, occlusion, obstruction, basically anything that gives us visual feedback of

360
00:24:42,906 --> 00:24:48,668
what is happening in the audio engine that Wwise is trying to create for us.

361
00:24:49,128 --> 00:24:50,268
Whoa, I need to hurry up.

362
00:24:50,688 --> 00:24:50,988
Okay.

363
00:24:51,889 --> 00:24:54,830
So distance, occlusion, obstruction also adds some of that blue text.

364
00:24:55,530 --> 00:24:59,772
It lets us know how far away things are from the camera as they're being triggered,

365
00:24:59,812 --> 00:25:02,013
lets us check falloff distances, things like that.

366
00:25:02,413 --> 00:25:05,995
Environment info brings up a big blue window like the one you're seeing here

367
00:25:06,516 --> 00:25:10,998
that tells us what ambience loop is currently playing,

368
00:25:11,978 --> 00:25:14,880
what reverb settings we are in based on the environment.

369
00:25:15,973 --> 00:25:19,775
Material info is this exact blue window that you're seeing.

370
00:25:20,255 --> 00:25:23,697
Based on where your crosshairs are placed,

371
00:25:24,277 --> 00:25:27,499
it will let you know the exact material name, which

372
00:25:27,579 --> 00:25:30,761
gives us a lot of great information for gunshot impacts

373
00:25:30,941 --> 00:25:31,601
and footsteps.

374
00:25:32,782 --> 00:25:34,103
And we also have a bunch of commands that

375
00:25:34,123 --> 00:25:37,084
let you wander around without actually playing the game.

376
00:25:37,104 --> 00:25:38,505
So things like turning off damage,

377
00:25:38,745 --> 00:25:40,226
skipping ahead in a mission, these

378
00:25:40,266 --> 00:25:42,887
are all super useful for us, especially in the mix process.

379
00:25:45,133 --> 00:25:48,015
Incorporating our favorite debug commands into Guardian.

380
00:25:49,096 --> 00:25:51,819
Again, function and layout needed to be intuitive.

381
00:25:53,640 --> 00:25:55,642
I spent a lot of time working on iteration.

382
00:25:56,263 --> 00:25:58,124
It didn't come out perfect the first time.

383
00:25:58,144 --> 00:26:01,287
A lot of changes were necessary at first.

384
00:26:01,808 --> 00:26:03,429
Once it was completed and in a state

385
00:26:03,469 --> 00:26:06,252
that I thought it was actually useful and better

386
00:26:06,292 --> 00:26:08,654
than what we were currently doing, I then had to teach.

387
00:26:10,392 --> 00:26:12,553
With the help from Victor, our audio producer,

388
00:26:12,813 --> 00:26:15,635
we had a demo for the audio team where

389
00:26:15,675 --> 00:26:17,416
I went through with Guardian and showed them,

390
00:26:17,836 --> 00:26:19,017
went through the paces and showed them

391
00:26:19,037 --> 00:26:19,938
what it was capable of.

392
00:26:20,918 --> 00:26:22,979
Then in the next office-wide play test

393
00:26:22,999 --> 00:26:24,941
that we had while developing Rise of Iron,

394
00:26:25,381 --> 00:26:27,262
I went to each of our content creators' desks.

395
00:26:27,502 --> 00:26:28,503
I had them load up Guardian.

396
00:26:29,303 --> 00:26:31,965
I gave them a couple of examples of how it could allow

397
00:26:31,985 --> 00:26:33,026
them to navigate the game.

398
00:26:33,646 --> 00:26:35,227
And I asked them to try using it if they

399
00:26:35,267 --> 00:26:37,789
wanted to use any debug commands instead of the debug menu

400
00:26:37,929 --> 00:26:39,410
that they were used to, just to give it a shot.

401
00:26:41,110 --> 00:26:45,893
I also, throughout the process, was offering to take requests to make new buttons.

402
00:26:46,473 --> 00:26:51,415
Each individual dev might have commands that they used, shortcuts that they wanted that

403
00:26:51,435 --> 00:26:55,137
would improve their particular process, and I was always happy to incorporate that.

404
00:26:56,857 --> 00:27:01,079
Once questions and ideas for improvement started to arrive in my email inbox, I was really

405
00:27:01,119 --> 00:27:02,480
happy it meant they were using it.

406
00:27:03,580 --> 00:27:06,882
And overall, just a quick display here.

407
00:27:07,816 --> 00:27:09,018
It's organized by columns.

408
00:27:09,879 --> 00:27:12,922
Player setup allows you to sort of skip the character creation

409
00:27:12,962 --> 00:27:14,484
system when you're loading up a new account.

410
00:27:15,045 --> 00:27:18,749
Gameplay changes allow you to turn on things

411
00:27:18,829 --> 00:27:24,115
like turn off damage, increase your ammo, your ability,

412
00:27:24,316 --> 00:27:24,936
recharge rate.

413
00:27:25,657 --> 00:27:29,822
Debug client allows us to turn on all of those debug texts

414
00:27:29,922 --> 00:27:31,504
that we were talking about in the previous slide,

415
00:27:32,125 --> 00:27:35,509
music information, ammo, investment shortcuts.

416
00:27:36,270 --> 00:27:38,712
This is the general assist page that I

417
00:27:38,752 --> 00:27:42,036
made that continues to be useful for us throughout development.

418
00:27:43,638 --> 00:27:46,321
So here's an example of Guardian in use.

419
00:27:47,648 --> 00:27:50,289
So we've got Guardian page on a PC on the left.

420
00:27:50,489 --> 00:27:52,450
We've got the game client running on the right.

421
00:27:53,050 --> 00:27:54,150
We're in a very specific scenario.

422
00:27:54,170 --> 00:27:55,990
I'm going to pause it real quick, because I forgot

423
00:27:56,010 --> 00:27:57,011
to explain what we're trying to do.

424
00:27:57,451 --> 00:28:00,131
So let's say you're in the mix session,

425
00:28:00,811 --> 00:28:02,312
and you made a change the previous day.

426
00:28:02,552 --> 00:28:03,172
It's a new build.

427
00:28:03,352 --> 00:28:05,373
You want to check to see how it's working.

428
00:28:05,893 --> 00:28:08,493
So you change the falloff distance and volume

429
00:28:08,833 --> 00:28:12,174
on a specific sound that only occurs at the end of mission 2.

430
00:28:12,494 --> 00:28:15,455
Some monitors turn on, and you made some changes.

431
00:28:15,495 --> 00:28:16,495
You want to see if it's working.

432
00:28:16,795 --> 00:28:16,915
So.

433
00:28:17,975 --> 00:28:20,156
This is the process that we're going to go through.

434
00:28:20,896 --> 00:28:24,437
The first thing we did here was we selected Mission 2

435
00:28:25,158 --> 00:28:27,839
from one of the command assistant pages.

436
00:28:28,379 --> 00:28:31,960
And so now we've already started loading in to Mission 2 on the screen.

437
00:28:31,980 --> 00:28:33,920
You're going to see the ship take off.

438
00:28:35,081 --> 00:28:36,361
Now we're going into player state,

439
00:28:37,962 --> 00:28:39,242
and we're turning off damage.

440
00:28:41,858 --> 00:28:45,279
So we don't have to worry about getting killed while experiencing the sound.

441
00:28:45,920 --> 00:28:47,720
Now we're going into the debug client column.

442
00:28:48,420 --> 00:28:52,561
We're turning on event emitters, so we can see the sound names.

443
00:28:53,122 --> 00:28:56,803
And we're turning on distance emitters, so we're going to be able to really check

444
00:28:57,203 --> 00:29:00,804
the falloff rate based on the camera location to where the sound's being emitted from.

445
00:29:01,564 --> 00:29:05,065
Now we're just waiting for the ship to actually load into the mission,

446
00:29:05,425 --> 00:29:08,126
and you can already see some of the blue debug text in-game.

447
00:29:08,766 --> 00:29:11,046
This is all fully connected but running on two different screens.

448
00:29:13,722 --> 00:29:15,803
We've set up the phase jump command.

449
00:29:16,883 --> 00:29:18,824
We're going to skip ahead to the end of mission two.

450
00:29:18,864 --> 00:29:20,665
We don't want to play through the whole mission, right?

451
00:29:21,745 --> 00:29:24,126
So we're skipping ahead to the final phase.

452
00:29:26,548 --> 00:29:27,348
Now we're in the game.

453
00:29:27,368 --> 00:29:28,969
We've got all the debug text we need.

454
00:29:29,069 --> 00:29:32,330
We can pick up the controller and immediately move

455
00:29:32,430 --> 00:29:34,731
to the section that triggers the monitor sound.

456
00:29:38,693 --> 00:29:39,774
So we open up our ghost.

457
00:29:40,154 --> 00:29:41,935
We're seeing all the debug information

458
00:29:42,175 --> 00:29:43,135
playing over the sound.

459
00:29:44,387 --> 00:29:47,127
So we know what's playing and how far it is from the camera.

460
00:29:47,147 --> 00:29:50,728
Overall, on 100K, would that be enough to figure out

461
00:29:50,748 --> 00:29:55,569
why it was falling apart?

462
00:29:58,330 --> 00:30:00,631
And there's that unique sound that only

463
00:30:00,671 --> 00:30:01,931
occurs in that part of the game.

464
00:30:03,011 --> 00:30:05,892
We wanted to make sure that the changes we made yesterday

465
00:30:05,932 --> 00:30:06,972
were sounding good today.

466
00:30:07,933 --> 00:30:10,953
And that's the process and an example.

467
00:30:13,706 --> 00:30:18,309
That video took a little over a minute, and a lot of it was spent loading into the zone,

468
00:30:18,449 --> 00:30:21,151
skipping ahead in loading the final phase.

469
00:30:21,652 --> 00:30:27,276
Before Guardian, according to my conversations, that process could have taken 10 to 15 minutes.

470
00:30:28,257 --> 00:30:33,020
Repeated dozens of times per day of audio mix process, the time savings were really

471
00:30:33,060 --> 00:30:35,582
high, and it reduced a lot of stress for our devs.

472
00:30:36,743 --> 00:30:44,006
Keep in mind that more mix time overall meant that more content gets polished, because that

473
00:30:44,046 --> 00:30:45,486
deadline's not moving, right?

474
00:30:45,926 --> 00:30:50,807
So any time saved meant that more content, more polish could actually go in, our devs

475
00:30:50,827 --> 00:30:54,028
could get closer and closer to the final product that they were really proud of.

476
00:30:54,488 --> 00:30:55,329
So the results were in.

477
00:30:55,829 --> 00:30:58,130
There were two pages of Guardian custom buttons created

478
00:30:58,190 --> 00:31:01,351
for Rise of Iron, a general audio assistant that I went

479
00:31:01,391 --> 00:31:04,632
through, and a Rise of Iron content page that specifically

480
00:31:04,692 --> 00:31:08,073
allowed you to access all of the activities that we created

481
00:31:08,113 --> 00:31:09,433
for Rise of Iron quickly.

482
00:31:10,093 --> 00:31:12,494
The audio team adjusted to using this new system.

483
00:31:13,194 --> 00:31:16,015
Devs no longer bothered with the debug menu at all.

484
00:31:16,255 --> 00:31:19,576
I'm told today they don't even bring it up.

485
00:31:19,736 --> 00:31:22,137
They are consistently using that system.

486
00:31:23,260 --> 00:31:26,882
It also improved audio QA efficiency to the point where it's now crucial.

487
00:31:27,522 --> 00:31:33,265
We on the audio QA team use Guardian and those command assistants to the point where the

488
00:31:33,325 --> 00:31:36,066
expectations of how long something will take have actually changed.

489
00:31:36,866 --> 00:31:40,748
Other teams, it's also really useful for when other teams have audio queries.

490
00:31:42,022 --> 00:31:45,145
It's really easy to point to, hey, Kareem, I think I found an audio bug.

491
00:31:45,825 --> 00:31:46,766
Something weird's happening.

492
00:31:46,846 --> 00:31:48,968
How can I check to see if it's triggering the right event?

493
00:31:49,388 --> 00:31:53,652
Instead of typing or copy pasting along a specific debug command to them,

494
00:31:54,032 --> 00:31:55,893
I can just point them to the Guardian page,

495
00:31:56,414 --> 00:31:58,155
and they can bring it up and use it themselves.

496
00:31:59,772 --> 00:32:05,074
Most importantly, it resulted in a better final mix, a better overall product.

497
00:32:05,674 --> 00:32:07,435
Everyone wins when the game sounds awesome.

498
00:32:07,575 --> 00:32:11,797
And so the teams helping us playtest were happy, and next time it's even easier.

499
00:32:13,158 --> 00:32:17,520
In summary, if you aren't in audio, please know, audio devs need support.

500
00:32:18,561 --> 00:32:22,823
In this specific scenario, me and Audio QA, that's where that support came from.

501
00:32:22,923 --> 00:32:24,043
But it can come from anywhere.

502
00:32:26,060 --> 00:32:30,241
The next thing as well is that audio decisions really need to be based on real gameplay.

503
00:32:30,601 --> 00:32:33,582
And that's part of the reason why multiplayer can be so challenging.

504
00:32:35,082 --> 00:32:38,023
I also implore you, please don't skip on project tools.

505
00:32:38,463 --> 00:32:39,784
Customization is awesome.

506
00:32:40,044 --> 00:32:45,265
If you have the time or the resources to create a system that allows you to customize your

507
00:32:45,305 --> 00:32:46,866
tools, I highly recommend it.

508
00:32:48,499 --> 00:32:52,640
And it's important to recognize that even if you have a tool that can do something really

509
00:32:52,760 --> 00:32:54,201
awesome, it needs to be easy to use.

510
00:32:54,781 --> 00:32:59,422
No one in our team had used Guardian before because it wasn't easy for them to understand.

511
00:32:59,822 --> 00:33:04,704
And so by customizing it for them and for their needs and making it intuitive, that's

512
00:33:04,744 --> 00:33:06,624
when the changes really started to occur.

513
00:33:07,205 --> 00:33:08,765
Development is hard overall.

514
00:33:09,025 --> 00:33:13,166
Games are hard to make, especially as you get towards the end, right?

515
00:33:13,726 --> 00:33:15,567
But by working early, looking ahead...

516
00:33:16,407 --> 00:33:19,369
We can really do our best to make those final days as easy as possible.

517
00:33:20,710 --> 00:33:23,511
Overall, this project proved to be really successful.

518
00:33:23,531 --> 00:33:25,772
Here are some words from the audio team at Bungie.

519
00:33:26,553 --> 00:33:29,114
Thank you very much. This has been my first talk at GDC.

520
00:33:29,855 --> 00:33:31,616
It's been a real honor to speak in front of all of you.

521
00:33:33,016 --> 00:33:35,158
And please fill out your evaluations if you can.

522
00:33:36,078 --> 00:33:38,860
If you have any questions, you can follow me to the wrap-up room.

523
00:33:38,880 --> 00:33:40,100
I know we're out of time. Thank you.

