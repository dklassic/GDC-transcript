1
00:00:04,292 --> 00:00:04,785
Hi everyone!

2
00:00:07,894 --> 00:00:09,735
Alright, this is going to be fun.

3
00:00:10,015 --> 00:00:12,936
Hi, my name is John Manning and this is May.

4
00:00:13,956 --> 00:00:16,537
Let's talk about how to get other people to fix your bugs for you.

5
00:00:16,557 --> 00:00:20,499
I am 50% of a game dev studio called Secret Lab.

6
00:00:20,579 --> 00:00:22,460
We're based in Tasmania, Australia.

7
00:00:23,540 --> 00:00:25,981
And I'm working on a small game called Leonardo's Moonship,

8
00:00:26,041 --> 00:00:28,022
which is an adventure game with a really pretty hand-drawn look.

9
00:00:28,042 --> 00:00:29,562
We're really excited about it. Awesome!

10
00:00:29,963 --> 00:00:30,823
I'm also an author.

11
00:00:31,343 --> 00:00:33,324
We recently wrote a book on Kerbal Space Program.

12
00:00:33,544 --> 00:00:35,145
This is a shameless plug. Please go buy it.

13
00:00:36,046 --> 00:00:39,792
And also, more importantly, I'm helping on Night in the Woods, which shipped last week.

14
00:00:45,342 --> 00:00:47,083
And it did pretty well.

15
00:00:47,123 --> 00:00:48,885
In fact, one of the ways that we know that it did pretty well

16
00:00:48,905 --> 00:00:50,526
is because Arby's tweeted about it.

17
00:00:51,227 --> 00:00:52,448
And we don't know why.

18
00:00:53,288 --> 00:00:55,350
So yeah, that was really, really fun.

19
00:00:56,311 --> 00:00:58,893
So Night in the Woods was developed by Infinite Fall

20
00:00:59,013 --> 00:01:01,215
and published by Finji, who are some rad people.

21
00:01:01,455 --> 00:01:04,137
And massive, massive thanks to everyone involved.

22
00:01:04,237 --> 00:01:05,698
And particular thanks to Ashell in the Pit,

23
00:01:05,758 --> 00:01:07,140
who did all the amazing sound.

24
00:01:07,980 --> 00:01:09,562
So Night in the Woods, if you don't know,

25
00:01:09,582 --> 00:01:12,724
is an adventure-y, platform-ery type emotion game.

26
00:01:13,285 --> 00:01:14,486
It's a game about this cat.

27
00:01:15,370 --> 00:01:15,491
and...

28
00:01:16,876 --> 00:01:22,277
Today we'll be talking about how Night in the Woods worked with the open source process,

29
00:01:22,597 --> 00:01:26,798
why you should do it, how to do it well, and also how to maximize the benefit you get out of it.

30
00:01:27,519 --> 00:01:32,900
So, Night in the Woods hit a problem, and that is dialogue is really big and really tough to manage,

31
00:01:33,680 --> 00:01:36,541
the word count in Night in the Woods is ridiculous, and to manage it,

32
00:01:36,901 --> 00:01:40,822
a tool called Yarnspinner was written and open sourced, which I'll talk about that first,

33
00:01:40,902 --> 00:01:43,243
and then I'll talk more broadly about open sourcing and ways

34
00:01:44,183 --> 00:01:46,383
you as an independent developer can take advantage of that.

35
00:01:47,541 --> 00:01:58,574
So we have about 130 unique characters, lots of dialogue, we have about 139,799 words in the game, not counting any code or character names.

36
00:02:00,016 --> 00:02:01,697
Dialogue in these kinds of games is...

37
00:02:02,258 --> 00:02:04,921
either typically node-driven or scripted.

38
00:02:05,041 --> 00:02:10,186
So by node-driven I mean each line or choice is created in some kind of visual editor

39
00:02:10,487 --> 00:02:12,108
and each node is connected up.

40
00:02:12,188 --> 00:02:14,291
Chatnapper is a really good example of that.

41
00:02:15,252 --> 00:02:17,434
The other alternative is scripting,

42
00:02:17,854 --> 00:02:21,158
where you basically write code that describes how the dialogue works.

43
00:02:21,979 --> 00:02:26,923
Node-driven is really intuitive but can be quite clunky when there's a lot of dialogue

44
00:02:26,943 --> 00:02:28,904
and it's difficult to manage in a very graphical way.

45
00:02:30,065 --> 00:02:36,770
By contrast, scripting requires you to learn a whole other language, depending on the complexity.

46
00:02:37,763 --> 00:02:44,106
Scott Benson and Bethany Hockenberry, who were the writers of the game, didn't have time to learn a new complex system on top of what they were doing already,

47
00:02:44,146 --> 00:02:46,928
because Scott was doing all the art as well.

48
00:02:47,748 --> 00:02:52,070
So writing, I believe, should require the least amount of coding as possible.

49
00:02:52,190 --> 00:02:55,072
You don't want to have to additionally burden your team.

50
00:02:55,792 --> 00:03:03,176
So we noticed that one of the most popular game tools currently available is designed for non-programmers, and that is Twine.

51
00:03:03,976 --> 00:03:05,117
Who loves Twine, by the way?

52
00:03:05,137 --> 00:03:06,017
Yay!

53
00:03:06,938 --> 00:03:11,660
Twine's awesome. So Twine is increasingly being used by people who don't know programming,

54
00:03:12,080 --> 00:03:17,742
but do want to tell a story, and Twine's syntax is really really sparse and focuses on letting you

55
00:03:17,862 --> 00:03:21,704
write. So this approach was perfect for managing Night in the Woods content.

56
00:03:22,664 --> 00:03:27,465
Yarn is the editor that we built based on the ideas of Entwine.

57
00:03:27,605 --> 00:03:30,766
It lets you create text files that get loaded into the Unity-based game engine,

58
00:03:30,846 --> 00:03:33,166
and in the game we wrote a library called YarnSpinner

59
00:03:33,406 --> 00:03:35,867
that does the parsing and the compilation and execution.

60
00:03:35,947 --> 00:03:37,627
And we'll come back to YarnSpinner in a moment.

61
00:03:38,687 --> 00:03:41,128
Here's an example of some of the Yarn code we did in the game.

62
00:03:41,328 --> 00:03:46,529
So you can see how the amount of syntax required for a conversation

63
00:03:46,629 --> 00:03:48,509
is really, really sparse and minimal.

64
00:03:50,351 --> 00:03:53,994
So Yarn became the scripting language that ran the entire plot of the game.

65
00:03:54,775 --> 00:03:59,800
We have a lot of additional small commands that just make acting happen, that set some

66
00:03:59,840 --> 00:04:00,981
game state and things like that.

67
00:04:01,121 --> 00:04:06,085
Most of the game, I would say, is written in Yarn, the use of visible stuff anyway.

68
00:04:07,695 --> 00:04:11,817
Some very cool features that were specific to dialogue-heavy games like Night in the

69
00:04:11,837 --> 00:04:13,738
Woods got added to the syntax of the language.

70
00:04:14,079 --> 00:04:16,540
Halfway through, that was really powerful and really great.

71
00:04:16,840 --> 00:04:21,522
So like this really, really simple choice syntax, which helped the writers create lots

72
00:04:21,542 --> 00:04:23,603
and lots of branching dialogue very easily.

73
00:04:24,444 --> 00:04:30,146
So we can just pop up a dialogue box and select an option and then easily write dialogue with

74
00:04:30,166 --> 00:04:31,547
a lot of player choice.

75
00:04:32,448 --> 00:04:32,608
So

76
00:04:34,257 --> 00:04:38,565
Basically, the entire game is written in Yarn, all the dialogue, all the cutscenes, all the high-level game logic,

77
00:04:38,605 --> 00:04:43,514
and in fact, the game's save files are mainly a dump of all the variables that Yarn knows about.

78
00:04:45,077 --> 00:04:49,879
The yarn tool was put up on GitHub with no license, which is not great for reasons I'll

79
00:04:49,899 --> 00:04:50,239
talk about.

80
00:04:51,760 --> 00:04:52,940
So it was on GitHub.

81
00:04:53,040 --> 00:04:59,343
At that point, me, I discovered it and went, okay, this is really cool, maybe I can improve

82
00:04:59,363 --> 00:05:02,965
it and I did and it turned into YarnSpinner, which is a totally separate and independent

83
00:05:03,005 --> 00:05:07,867
library, which had a more robust parser, some better tools, better error handling, support

84
00:05:07,887 --> 00:05:09,528
for localization and other good stuff.

85
00:05:10,209 --> 00:05:12,590
And others started contributing to Yarnspinner as well.

86
00:05:12,990 --> 00:05:16,692
So we got things like multiple type variables where previously they were all integers and

87
00:05:16,752 --> 00:05:20,634
bug fixes and all of these changes were able to be merged straight into Night in the Woods.

88
00:05:22,275 --> 00:05:24,656
So if you go to this page you can find more information.

89
00:05:24,676 --> 00:05:25,877
It also has a link to the GitHub.

90
00:05:26,317 --> 00:05:27,017
It's kind of great.

91
00:05:27,077 --> 00:05:30,219
Basically Yarnspinner is awesome and I think everyone should go and use it right now.

92
00:05:30,919 --> 00:05:31,760
So yeah.

93
00:05:33,370 --> 00:05:35,154
So, it worked for Night in the Woods.

94
00:05:35,816 --> 00:05:37,721
Why should you do it though on your game

95
00:05:37,741 --> 00:05:39,405
and how are you gonna make it more likely

96
00:05:39,706 --> 00:05:40,468
to get a good outcome?

97
00:05:41,352 --> 00:05:45,492
So, first of all, big thanks to Paul Fenwick who created the CCanon project for Kerbal

98
00:05:45,512 --> 00:05:46,172
Space Program.

99
00:05:46,393 --> 00:05:49,673
A lot of this information is from a conversation that I had with him.

100
00:05:50,193 --> 00:05:56,214
When a project is open sourced, it's guaranteed that if the author vanishes, that won't kill

101
00:05:56,254 --> 00:05:56,794
the project.

102
00:05:57,455 --> 00:06:01,515
I happen to think this is the most important reason to open source anything aside from

103
00:06:01,555 --> 00:06:03,176
the personal benefits to the core devs.

104
00:06:04,096 --> 00:06:07,496
Additionally, when you open source code, you make it more likely that others are going

105
00:06:07,516 --> 00:06:07,957
to use it.

106
00:06:08,850 --> 00:06:13,474
Critically, for you, it means that you let other people fix your bugs.

107
00:06:15,035 --> 00:06:16,396
That's less work that you have to do.

108
00:06:16,936 --> 00:06:21,639
Now a lot of people are only aware of open source because they grab the stuff from GitHub,

109
00:06:21,780 --> 00:06:25,162
and with good reason, because it's free, so you don't have to pay for anything, and it's

110
00:06:25,282 --> 00:06:27,824
often quite good, and it's free, so you don't have to pay for anything.

111
00:06:28,865 --> 00:06:31,547
But GitHub isn't where open source starts and ends.

112
00:06:35,905 --> 00:06:38,607
I've given you some reasons why open sourcing is good in principle.

113
00:06:38,647 --> 00:06:41,450
Let's talk about some practical things you can do to get the most out of doing it.

114
00:06:42,971 --> 00:06:45,013
First of all, let's define what we're trying to get out of this.

115
00:06:45,353 --> 00:06:49,397
You're busy working on your game, and that means your primary goal for releasing code

116
00:06:49,777 --> 00:06:54,221
during your production is to get contributions, which translates to community done features

117
00:06:54,281 --> 00:06:56,143
and bug fixes that you didn't have to do yourself.

118
00:06:56,603 --> 00:06:57,604
Let's look at how we can do this.

119
00:06:59,010 --> 00:07:04,035
The critical thing for building any kind of community of people who want to fix your bugs for you

120
00:07:04,136 --> 00:07:07,339
is to make it as easy as possible for them to make those contributions.

121
00:07:07,859 --> 00:07:09,961
So we'll talk about two main categories for this.

122
00:07:10,622 --> 00:07:15,567
Technical things you can do and things you can do to improve the emotional and social experience

123
00:07:15,727 --> 00:07:17,529
of those contributors so that people come back.

124
00:07:18,150 --> 00:07:21,113
After all, your goal here is to attract help.

125
00:07:23,533 --> 00:07:26,214
So a great way to start is to put your code somewhere

126
00:07:26,414 --> 00:07:27,375
where people are familiar.

127
00:07:27,515 --> 00:07:29,756
So GitHub has kind of won this kind of battle,

128
00:07:30,037 --> 00:07:31,017
but it isn't the only one.

129
00:07:31,097 --> 00:07:33,378
Bitbucket is also great, as is GitLab.

130
00:07:33,759 --> 00:07:34,959
The reason why you want to do this

131
00:07:35,199 --> 00:07:37,521
is the popular code hosting sites not only

132
00:07:37,681 --> 00:07:39,702
are a great place to just dump your code,

133
00:07:39,982 --> 00:07:41,923
but also they have built-in social features which

134
00:07:41,943 --> 00:07:43,044
can really help your community.

135
00:07:43,544 --> 00:07:46,246
So GitHub has the biggest thing because of the network effect,

136
00:07:46,466 --> 00:07:48,667
but Bitbucket and GitLab are competing quite well

137
00:07:48,847 --> 00:07:49,848
on technical features at the moment.

138
00:07:51,522 --> 00:07:55,484
This is the slide that I want you to pay most attention to.

139
00:07:55,804 --> 00:07:59,045
You need to have a license if you release code as open source.

140
00:07:59,146 --> 00:08:01,026
It's the most important thing to take away from this.

141
00:08:01,827 --> 00:08:04,988
You need to let people know whether they can make changes.

142
00:08:05,208 --> 00:08:06,769
Additionally, if there's no license,

143
00:08:06,869 --> 00:08:09,890
it's unclear if they can even use your code in their games.

144
00:08:11,350 --> 00:08:14,193
There are basically two types of licenses available for you to choose from,

145
00:08:14,273 --> 00:08:15,874
copyleft and permissive.

146
00:08:16,595 --> 00:08:21,780
A copyleft license is designed to make the idea and the philosophy of open source spread.

147
00:08:22,140 --> 00:08:27,485
So the idea behind copyleft is, if I use copyleft license code in my game,

148
00:08:27,725 --> 00:08:31,448
then I must release my game under the same license as open source.

149
00:08:32,109 --> 00:08:36,792
So the GPL, the General Public License, is a really good and famous example of this.

150
00:08:37,613 --> 00:08:41,556
Usually, games tend not to use copyleft licenses because of this.

151
00:08:41,616 --> 00:08:44,159
And additionally, some engines, especially the Unreal Engine,

152
00:08:44,479 --> 00:08:47,962
specifically says you cannot use code that is under GPL in your project

153
00:08:48,222 --> 00:08:51,285
because doing so would require you to release the entire game source,

154
00:08:51,425 --> 00:08:52,966
including Unreal, under GPL.

155
00:08:53,066 --> 00:08:54,227
And Epic says, no, thank you.

156
00:08:54,947 --> 00:09:01,589
So, by contrast, permissive licenses say that you're allowed to release derived closed source versions.

157
00:09:01,689 --> 00:09:05,189
In other words, use it in your game without having to release your game as open source.

158
00:09:06,030 --> 00:09:08,790
So these are generally more commonly used in games.

159
00:09:08,990 --> 00:09:17,392
Usually the only thing that they need is attribution and just, you know, acknowledgement that you are not going to try and sue them for warranty stuff.

160
00:09:18,232 --> 00:09:22,094
You're busy, you're working on your own game, you don't want to have to think about which license to pick.

161
00:09:22,194 --> 00:09:27,317
In which case, people generally go with MIT or the Apache 2 license.

162
00:09:27,578 --> 00:09:29,739
So I'll talk a little bit about those in a bit more detail.

163
00:09:30,759 --> 00:09:33,781
MIT is the simplest one, you have probably seen it around.

164
00:09:34,121 --> 00:09:38,424
All it says is, you can do whatever you like as long as you give attribution

165
00:09:38,584 --> 00:09:41,285
and are aware that the author offers no warranty support.

166
00:09:42,146 --> 00:09:44,647
I'm paraphrasing, please read the license itself for the details.

167
00:09:45,708 --> 00:09:48,729
Apache 2 is more complex but it's also more thorough.

168
00:09:49,309 --> 00:09:51,910
It gives a more complete job of explaining the user's rights

169
00:09:52,070 --> 00:09:55,270
and it also grants the recipients of the code a patent grant

170
00:09:55,591 --> 00:09:57,351
for anything in the code that is patented.

171
00:09:57,391 --> 00:10:00,292
That's very useful to have because you can end up in situations

172
00:10:00,592 --> 00:10:02,292
where you have the source code to something

173
00:10:02,592 --> 00:10:06,534
but you can't use it because you don't hold the patent license to do it.

174
00:10:07,034 --> 00:10:10,635
So, yeah, Apache 2 includes a specific grant saying

175
00:10:10,895 --> 00:10:12,975
also you get to use whatever patents apply to this code.

176
00:10:14,395 --> 00:10:18,559
If you don't care at all, a lot of people default to going with Apache 2

177
00:10:18,739 --> 00:10:22,462
because it's fairly straightforward and offers the most clarity to your users.

178
00:10:23,223 --> 00:10:27,627
So that's often what I go with, but make your own decisions.

179
00:10:28,587 --> 00:10:30,848
Next up, have a contributor's guide.

180
00:10:30,968 --> 00:10:32,069
You need one of these.

181
00:10:32,089 --> 00:10:34,330
This is second on my list of things you should know about.

182
00:10:34,350 --> 00:10:36,731
A contributor's guide offers guidance

183
00:10:37,111 --> 00:10:39,892
on how someone can make a contribution,

184
00:10:40,173 --> 00:10:42,154
both technically as well as socially,

185
00:10:42,314 --> 00:10:44,415
so interacting with other people on the project.

186
00:10:44,755 --> 00:10:47,276
It tells them what is expected in their contributions,

187
00:10:47,576 --> 00:10:49,937
who to talk to for help, and also how to get started.

188
00:10:50,177 --> 00:10:52,138
It really reduces the dauntingness

189
00:10:52,678 --> 00:10:53,959
of a person's first contribution.

190
00:10:54,759 --> 00:10:56,280
Critically, it should also direct people

191
00:10:56,320 --> 00:10:58,021
to your code of conduct, which I'll come to in a bit.

192
00:10:58,999 --> 00:11:04,689
If you're using GitHub, then if you have your contributors guide in a file called contributing.md,

193
00:11:05,009 --> 00:11:08,214
then GitHub will actually link to that file whenever you go to post an issue,

194
00:11:08,274 --> 00:11:12,081
which is a really great way to get people directed to that document.

195
00:11:13,294 --> 00:11:16,817
Another really good reason for putting your code on a server like GitHub and Bitbucket

196
00:11:16,877 --> 00:11:20,099
is that it keeps your code and your bug tracker in the same place.

197
00:11:20,219 --> 00:11:21,219
That's really awesome.

198
00:11:21,680 --> 00:11:26,483
So it's much easier to deal with both the code and the issues when you don't have to

199
00:11:26,523 --> 00:11:27,363
jump between them.

200
00:11:27,984 --> 00:11:33,027
It reduces the friction, and again, reducing the friction means fewer people get discouraged,

201
00:11:33,087 --> 00:11:34,288
which means more contributions.

202
00:11:35,789 --> 00:11:38,731
Have a central place where people can go to talk about your project.

203
00:11:38,971 --> 00:11:41,492
A Slack, an IRC, anything that lets people chat.

204
00:11:42,429 --> 00:11:45,731
What's really important about this one is you should be present there.

205
00:11:46,271 --> 00:11:50,633
That doesn't mean be on call or reply to every single question instantly,

206
00:11:50,873 --> 00:11:54,515
but it's really, really reassuring to see that the creator of the project

207
00:11:54,615 --> 00:11:57,316
is invested enough to want to be reachable.

208
00:11:59,496 --> 00:12:07,749
Make a list of very, very low hanging fruit, easy bugs, simple things that a person who's brand new can get started doing right away.

209
00:12:08,751 --> 00:12:13,138
Make this very visible, put it in your contributor's guide, maybe even put it in your readme.

210
00:12:14,102 --> 00:12:16,363
and direct people who come to you who say,

211
00:12:16,443 --> 00:12:17,584
I want to help out, say, well then,

212
00:12:17,804 --> 00:12:19,605
here's a list of things you can do right now.

213
00:12:20,305 --> 00:12:22,726
So easy bugs is one part of it.

214
00:12:22,746 --> 00:12:25,867
You can also direct people to look at your existing bug list

215
00:12:25,947 --> 00:12:29,069
and ask them to mark the bugs as easy sounding

216
00:12:29,149 --> 00:12:30,009
or hard sounding.

217
00:12:30,049 --> 00:12:31,190
That's a thing that doesn't really

218
00:12:31,230 --> 00:12:33,251
require a huge amount of knowledge of the project,

219
00:12:34,791 --> 00:12:37,973
but it gets people going, gets people ready.

220
00:12:38,073 --> 00:12:39,473
And finally, documentation updates

221
00:12:39,873 --> 00:12:42,735
are also a great source of non-technical contributions.

222
00:12:44,293 --> 00:12:47,075
On the flip side to this, it means that you as the developer

223
00:12:47,155 --> 00:12:50,677
should focus on the stuff that requires the knowledge of the code

224
00:12:50,937 --> 00:12:53,819
and to resist the temptation to work on the easy stuff yourself.

225
00:12:54,539 --> 00:12:57,281
Get other people to take care of the easy stuff for you

226
00:12:57,341 --> 00:12:58,081
and free yourself up.

227
00:13:00,022 --> 00:13:01,163
If someone comes to you saying,

228
00:13:01,243 --> 00:13:03,905
hey, could you add this cool feature? I'd really appreciate it.

229
00:13:04,405 --> 00:13:05,746
And you don't want to do it yourself,

230
00:13:06,066 --> 00:13:08,908
you should immediately reply, no, but we'd love that.

231
00:13:09,528 --> 00:13:12,930
Then refer them to your contributor's guide or...

232
00:13:13,709 --> 00:13:18,014
to an open ticket in the bug tracker, or even make a new ticket for them and then aim them at it.

233
00:13:18,975 --> 00:13:21,758
So this helps to bring people in, because if they're able to,

234
00:13:21,998 --> 00:13:23,960
they're more likely to add the feature themselves.

235
00:13:24,140 --> 00:13:27,323
One thing that a lot of open source projects have discovered is that even just noting

236
00:13:27,664 --> 00:13:30,767
that a feature is desired can be enough to bring people in.

237
00:13:32,133 --> 00:13:36,095
Now it's important to realize and remember that contributions to your open source project

238
00:13:36,475 --> 00:13:37,816
aren't always source code.

239
00:13:37,896 --> 00:13:41,677
Bugs, documentation and feature ideas are all just as valid as the code.

240
00:13:42,277 --> 00:13:47,119
Anytime anyone adds anything to your project, you should notice them, you should thank them,

241
00:13:47,339 --> 00:13:50,081
you should promote them and you should make them feel wanted and welcome.

242
00:13:50,101 --> 00:13:50,861
They'll stick around.

243
00:13:51,921 --> 00:13:55,543
For best results, you should prepare yourself for when someone comes in so that you know

244
00:13:55,603 --> 00:13:56,383
what steps to take.

245
00:13:56,603 --> 00:13:58,724
So let's talk about what those steps are.

246
00:13:59,694 --> 00:14:02,315
you should have a pre-prepared induction process.

247
00:14:02,335 --> 00:14:03,816
This is not a big complicated thing,

248
00:14:03,876 --> 00:14:06,057
just have a list of steps that you follow

249
00:14:06,337 --> 00:14:07,738
for when someone else comes along.

250
00:14:08,679 --> 00:14:11,100
When someone comes along and makes any kind of contribution,

251
00:14:11,240 --> 00:14:12,941
even just a post on your forum saying,

252
00:14:12,961 --> 00:14:15,002
this is awesome, welcome them immediately

253
00:14:15,302 --> 00:14:17,664
and thank them for whatever their contribution was.

254
00:14:18,284 --> 00:14:19,425
If it's their first contribution,

255
00:14:19,685 --> 00:14:21,306
you really, really want to accept it.

256
00:14:21,626 --> 00:14:24,508
If this is their first chunk of code or pull request,

257
00:14:24,968 --> 00:14:27,209
accept it, even if it's bad.

258
00:14:28,263 --> 00:14:31,206
People will feel accepted and it will get them excited to do more.

259
00:14:31,486 --> 00:14:35,509
Additionally, you can modify their contribution before you merge it into the main branch.

260
00:14:36,270 --> 00:14:38,132
People don't mind when that happens.

261
00:14:38,332 --> 00:14:42,375
In fact, they love feeling like they're being given more information on how things work.

262
00:14:42,495 --> 00:14:44,137
It feels like they're being brought into the fold.

263
00:14:45,378 --> 00:14:48,541
So, yeah, this is kind of not obvious, but I hope that you do it.

264
00:14:50,552 --> 00:14:53,894
Third on the list of things that you really should know, have a code of conduct.

265
00:14:54,215 --> 00:14:59,459
I hope that this is not like an amazing newsflash, but you really should have a code of conduct.

266
00:15:00,020 --> 00:15:05,965
Because if you have a successful project, then at some point there will be some sort of incident that will be considered inappropriate.

267
00:15:07,106 --> 00:15:11,989
If you have a code of conduct, then you have a clear document to point to on how these things are to be dealt with.

268
00:15:12,269 --> 00:15:20,015
And if you don't have one, then what will result is an endless and exhausting discussion on whether it was appropriate, what to do, and so on and so forth.

269
00:15:20,315 --> 00:15:25,698
So this is a tool for you. It's not a hammer with which to club people who say something sexist.

270
00:15:25,718 --> 00:15:27,640
This is a thing that you can use.

271
00:15:28,540 --> 00:15:33,626
Because when these kinds of incidents happen, they create a ludicrous debate and they sap your will to live.

272
00:15:33,666 --> 00:15:38,470
Imagine if you decided on your bracing style for your source code halfway through development.

273
00:15:38,911 --> 00:15:42,354
Imagine the conversation that that would result in. It's the same kind of thing.

274
00:15:43,343 --> 00:15:49,410
So, give people the ability and the power to point to the code of conduct and to shut

275
00:15:49,430 --> 00:15:50,572
people down on your behalf.

276
00:15:51,173 --> 00:15:52,895
So it shouldn't be up to you to police it.

277
00:15:52,935 --> 00:15:56,960
You can make the policing power available to your community by having a code of conduct

278
00:15:57,020 --> 00:15:58,842
and also the ability to lock threads and such.

279
00:16:00,290 --> 00:16:02,590
don't worry too much about somebody going off on a huff.

280
00:16:03,491 --> 00:16:06,492
So if someone says, well, I don't like your code of conduct,

281
00:16:06,592 --> 00:16:09,473
and I don't like the fact that I can't call people bad things,

282
00:16:09,653 --> 00:16:12,334
I'm going to take your source code and go and do my own damn thing.

283
00:16:12,714 --> 00:16:15,715
And that sounds bad, but actually that can be often OK,

284
00:16:16,015 --> 00:16:20,056
because if they take your code and want to run it in a different way,

285
00:16:20,216 --> 00:16:20,317
and...

286
00:16:20,817 --> 00:16:23,897
do their own contributions, then they'll probably keep it under the same license,

287
00:16:24,097 --> 00:16:25,938
especially if it's a permissive license,

288
00:16:26,618 --> 00:16:29,058
and then you can just merge those good stuff back,

289
00:16:29,178 --> 00:16:32,539
even if they, assuming they do in the first place.

290
00:16:33,139 --> 00:16:36,420
In fact, there are more than a couple of examples of open source projects

291
00:16:36,520 --> 00:16:40,541
outside of games where the project had a hostile fork,

292
00:16:40,921 --> 00:16:43,501
and then it actually later completely re-merged back into the main thing

293
00:16:43,562 --> 00:16:46,262
after everyone had cooled down with more good stuff.

294
00:16:46,482 --> 00:16:49,323
So at the end of the day, what you care about is contributions.

295
00:16:49,883 --> 00:16:52,826
it's better to let the toxicity happen somewhere else if you can't stop it entirely.

296
00:16:54,187 --> 00:16:57,010
So it's possible that you might think, well this is a big burdensome thing,

297
00:16:57,411 --> 00:17:00,314
but I guarantee that if your project is any kind of success,

298
00:17:00,374 --> 00:17:02,536
then you'll end up citing this code of conduct at least once.

299
00:17:04,499 --> 00:17:07,561
Without a code of conduct, then nice people will disappear from your community,

300
00:17:07,581 --> 00:17:10,903
and that is the worst thing that can happen when your community is brand new,

301
00:17:10,983 --> 00:17:13,405
because a code of conduct isn't the same thing as saying you can't swear,

302
00:17:13,765 --> 00:17:15,326
it's saying you can't use racial slurs.

303
00:17:16,366 --> 00:17:19,969
It also indicates that you are serious about the project,

304
00:17:20,369 --> 00:17:23,771
because saying that participating in your community requires a thick skin

305
00:17:23,851 --> 00:17:25,252
indicates that your community is toxic,

306
00:17:25,292 --> 00:17:27,733
and being in games, I think we know a bit about that kind of thing.

307
00:17:28,614 --> 00:17:30,815
So, make it part of your induction process.

308
00:17:30,875 --> 00:17:32,757
If someone becomes a core contributor, make it.

309
00:17:33,529 --> 00:17:37,152
very, very clear to them that they are expected to enforce the code of conduct as well.

310
00:17:37,172 --> 00:17:41,755
Make it clear to them that it's as important as welcoming newcomers or having good coding standards.

311
00:17:42,996 --> 00:17:45,858
If you don't know where to start with the code of conduct, the contributor covenant,

312
00:17:45,958 --> 00:17:48,339
look it up, is fantastic, it's a great template.

313
00:17:48,560 --> 00:17:50,661
You can just copy it and use it. In fact, that's encouraged.

314
00:17:50,721 --> 00:17:52,602
So please adopt the code of conduct.

315
00:17:54,132 --> 00:17:56,593
You might be thinking, wow, this is a lot to deal with,

316
00:17:56,673 --> 00:17:59,535
you're a really busy person and you don't want to have to take on a second job.

317
00:18:00,215 --> 00:18:04,998
That's why we're going to talk about ways to reduce the burden on you as a developer.

318
00:18:05,959 --> 00:18:09,721
So, how do you, as somebody who wants to get contributions,

319
00:18:09,801 --> 00:18:13,003
reduce the amount of work that you need to put in in order to get good outcomes?

320
00:18:13,875 --> 00:18:16,217
First, make a list of stuff that you want.

321
00:18:17,038 --> 00:18:18,779
Not just a future roadmap,

322
00:18:18,959 --> 00:18:21,822
just like unstructured list of things

323
00:18:21,842 --> 00:18:23,883
that would be nice to have and then publish it.

324
00:18:25,244 --> 00:18:27,426
So this gives people an idea

325
00:18:27,526 --> 00:18:28,927
of the kind of help that you're looking for.

326
00:18:29,548 --> 00:18:33,070
When people, if when people come to help you, say yes.

327
00:18:33,491 --> 00:18:34,331
Doesn't matter who they are.

328
00:18:35,813 --> 00:18:40,316
This is fairly obvious advice, but it tends to happen not as often as you'd think

329
00:18:40,376 --> 00:18:41,877
because of the problem of people's egos.

330
00:18:42,317 --> 00:18:44,779
People tend to get quite defensive of how their project is run.

331
00:18:45,299 --> 00:18:49,582
So I would strongly advise you to just take whatever help arrives

332
00:18:49,702 --> 00:18:53,885
and merge every pull request you can find unless it's obviously incredibly incompatible.

333
00:18:54,665 --> 00:18:56,686
Give people the permission to do what they need to do.

334
00:18:57,106 --> 00:19:00,428
So, for example, make people moderators, make people admins.

335
00:19:00,688 --> 00:19:02,789
Give them permission to merge pull requests for you.

336
00:19:03,169 --> 00:19:06,610
Give them permission to integrate into whatever workflow you have.

337
00:19:06,710 --> 00:19:10,172
It's very, very difficult to screw things up completely when you're using Git.

338
00:19:11,092 --> 00:19:11,813
You can always roll back.

339
00:19:12,950 --> 00:19:15,951
Say yes to people, especially if they want to automate stuff.

340
00:19:16,312 --> 00:19:20,213
Because if somebody wants to set up a build server, say yes and give them API keys.

341
00:19:20,933 --> 00:19:25,795
If someone wants to create a bot that posts when new issues have been filed, give them permission.

342
00:19:26,555 --> 00:19:26,995
Say yes.

343
00:19:27,816 --> 00:19:31,237
Because getting hung up on how you want your project to be run

344
00:19:31,437 --> 00:19:34,018
while you're already busy working on your game

345
00:19:34,378 --> 00:19:36,379
is a very easy way to run out of energy for both of them.

346
00:19:37,379 --> 00:19:41,321
And allowing somebody else to help you out is your main goal here.

347
00:19:41,721 --> 00:19:42,361
Don't get picky.

348
00:19:43,896 --> 00:19:47,758
If you're faced with the choice of either not doing something at all,

349
00:19:48,138 --> 00:19:51,060
or doing it in somebody else's way that you don't agree with,

350
00:19:51,900 --> 00:19:52,881
do it somebody else's way.

351
00:19:54,021 --> 00:19:56,022
It's okay for mediocre contributions to happen,

352
00:19:56,182 --> 00:19:58,804
because you can always come back and fix it.

353
00:19:59,104 --> 00:20:00,484
Your only question should be,

354
00:20:00,985 --> 00:20:04,086
is this contribution better than what it was before?

355
00:20:04,667 --> 00:20:06,768
Don't wait for the perfect contribution,

356
00:20:06,888 --> 00:20:08,328
accept the okay contribution,

357
00:20:08,729 --> 00:20:10,309
even to the point of accepting technical debt.

358
00:20:10,954 --> 00:20:14,335
because you can always accept the later contribution from somebody else that fixes it.

359
00:20:16,376 --> 00:20:19,196
The only way that you can encourage people to take the first step to contributing to

360
00:20:19,216 --> 00:20:22,097
your project is to make sure that first step is not burdensome.

361
00:20:22,217 --> 00:20:23,778
Make things easier to do.

362
00:20:23,898 --> 00:20:26,198
In fact, find things that are easier for people to do.

363
00:20:26,538 --> 00:20:28,999
Take the tasks and break them up into smaller tasks as well.

364
00:20:29,819 --> 00:20:32,420
Leave them in the issue tracker like plantalizing plums.

365
00:20:34,447 --> 00:20:37,368
An even better way to get a feel for how to run an open-source project

366
00:20:37,488 --> 00:20:40,490
is to contribute something to an open-source project yourself.

367
00:20:41,230 --> 00:20:43,731
Doesn't have to be much, doesn't even have to be a long-term commitment.

368
00:20:43,931 --> 00:20:47,993
Just, you know, push something to an open-source repo that you have liked.

369
00:20:48,133 --> 00:20:51,174
Even if it's nothing more than you fixed a typo in the readme.

370
00:20:52,452 --> 00:20:54,834
Additionally, if you participate in open source stuff,

371
00:20:55,515 --> 00:20:57,537
it's a really great way to add stuff

372
00:20:57,557 --> 00:20:58,918
to your list of contributions,

373
00:20:59,519 --> 00:21:00,840
if you ever want to participate in capitalism.

374
00:21:01,481 --> 00:21:04,744
So, it's a really great way to develop street cred

375
00:21:05,205 --> 00:21:07,968
and make yourself known in this kind of community.

376
00:21:13,088 --> 00:21:16,331
So, marketing is as important for this kind of thing as it is your game.

377
00:21:16,432 --> 00:21:18,534
You already have an existing marketing setup, right?

378
00:21:19,215 --> 00:21:19,415
Right?

379
00:21:20,877 --> 00:21:22,739
So, use all that existing stuff.

380
00:21:22,979 --> 00:21:25,181
Twitter, word of mouth, even do screenshot Saturday.

381
00:21:26,022 --> 00:21:28,885
I did, and Yarn is a text-based thing.

382
00:21:28,905 --> 00:21:30,547
I just took screenshots of text. It worked.

383
00:21:32,009 --> 00:21:35,610
Also, Chris Dwyer, who did the marketing for Night in the Woods, had a session yesterday.

384
00:21:35,730 --> 00:21:37,470
If you weren't there, go get it on the Vault.

385
00:21:37,530 --> 00:21:38,330
It's fantastic.

386
00:21:39,551 --> 00:21:40,351
Put the call out for help.

387
00:21:40,411 --> 00:21:41,291
Just ask for help.

388
00:21:41,431 --> 00:21:42,792
Just say, I'm looking for help.

389
00:21:43,272 --> 00:21:44,112
People will respond.

390
00:21:45,713 --> 00:21:48,613
You can also encourage people to turn up by saying, this is going to be great.

391
00:21:48,693 --> 00:21:52,975
I love my project, but it'll be even better if I had this other thing as well.

392
00:21:54,100 --> 00:21:57,421
More often than not, that tends to have someone who already knows about the thing come along

393
00:21:57,441 --> 00:21:58,661
and say, oh cool, how are you doing it?

394
00:21:58,941 --> 00:22:00,302
Then you can assign them to the project.

395
00:22:02,422 --> 00:22:05,463
This also ties into people feeling appreciated and included.

396
00:22:06,103 --> 00:22:09,684
Additionally, you should automate as much as you can if you have time to do it, and

397
00:22:09,724 --> 00:22:12,064
also if you don't have time to do it, then ask someone else to do it.

398
00:22:12,404 --> 00:22:17,106
So things like build servers, or a bot that closes the stale issues, or also a bot that

399
00:22:17,326 --> 00:22:18,786
announces when a new release is available.

400
00:22:19,778 --> 00:22:21,678
You can also even automate bits of your community.

401
00:22:22,178 --> 00:22:24,219
So a lot of the social stuff can be automated as well.

402
00:22:24,479 --> 00:22:26,499
The Rust language project does this really well.

403
00:22:27,460 --> 00:22:30,460
When someone submits their very first pull request

404
00:22:30,480 --> 00:22:32,041
to the project where they contribute code,

405
00:22:32,561 --> 00:22:35,362
a bot replies to them right away with a welcome message,

406
00:22:35,882 --> 00:22:37,602
thanking them, and then sending them

407
00:22:37,762 --> 00:22:40,163
to the Contributors Guide and the Code O'Connor

408
00:22:40,183 --> 00:22:41,683
and everything they need to get started.

409
00:22:41,983 --> 00:22:45,464
It also pings a human who has been assigned

410
00:22:45,544 --> 00:22:47,765
to this newcomer to help them through the process.

411
00:22:49,803 --> 00:22:52,584
And this bot's quite clever, it also reassigns that human

412
00:22:53,585 --> 00:22:56,306
if either of the parties don't reply in time.

413
00:22:56,966 --> 00:22:59,828
Even a bot that just says, thank you, can be enough.

414
00:23:01,629 --> 00:23:07,271
OK, so GitHub, the company, released this fairly recently,

415
00:23:07,351 --> 00:23:08,512
opensource.guide.

416
00:23:09,372 --> 00:23:11,333
And this goes into much more detail

417
00:23:11,373 --> 00:23:12,614
about the kinds of things we've talked about today.

418
00:23:13,802 --> 00:23:16,867
So I strongly suggest you check this out, opensource.guide.

419
00:23:17,388 --> 00:23:20,233
I'll leave that up there, I see people taking photos.

420
00:23:20,794 --> 00:23:25,141
You should open source parts of your game during production, it can be really rewarding.

421
00:23:26,680 --> 00:23:28,861
It's not completely effort free for you.

422
00:23:28,941 --> 00:23:30,883
You can't just dump stuff on GitHub

423
00:23:30,943 --> 00:23:32,484
and wait for the bug fix to roll in.

424
00:23:32,984 --> 00:23:33,885
It doesn't quite work like that.

425
00:23:33,905 --> 00:23:35,105
If you want to get something out of it,

426
00:23:35,406 --> 00:23:36,266
there's some work to do,

427
00:23:36,506 --> 00:23:38,668
but it's not as big as you might imagine.

428
00:23:39,428 --> 00:23:41,650
It doesn't have to be a long-term, massive commitment.

429
00:23:42,470 --> 00:23:45,032
It made Night in the Woods production much, much better,

430
00:23:45,352 --> 00:23:47,153
and I think that it can make yours better as well.

431
00:23:47,714 --> 00:23:49,635
So, thank you all very much for listening.

432
00:23:51,456 --> 00:23:52,577
Follow me on Twitter, you'll see in a second,

433
00:23:52,677 --> 00:23:54,958
and tell me about your awesome open source project.

434
00:23:55,379 --> 00:23:55,619
Thank you.

435
00:24:05,793 --> 00:24:07,734
So if you have a question, I think we have a bit of time.

436
00:24:07,934 --> 00:24:09,874
If you can go to the mics, that would be awesome.

437
00:24:10,935 --> 00:24:12,195
Oh yeah, in case it wasn't obvious,

438
00:24:12,215 --> 00:24:13,435
this is all in Indian as well.

439
00:24:13,475 --> 00:24:15,176
So now we're playing Night in the Woods.

440
00:24:19,057 --> 00:24:20,058
You were there first, yes, hello.

441
00:24:20,298 --> 00:24:21,138
Hi.

442
00:24:21,338 --> 00:24:26,000
So I was wondering about contributor license agreements

443
00:24:26,320 --> 00:24:27,440
because you didn't bring that up.

444
00:24:28,441 --> 00:24:29,121
So someone.

445
00:24:29,894 --> 00:24:32,277
writes a chunk of code, you put it in your game,

446
00:24:32,778 --> 00:24:35,742
and they didn't assign copyright to you, what do you do?

447
00:24:36,003 --> 00:24:36,484
Okay, so...

448
00:24:36,504 --> 00:24:41,090
Okay, I should preface this with I am not a lawyer, let alone a copyright lawyer,

449
00:24:41,231 --> 00:24:42,833
so none of this is legal advice.

450
00:24:42,873 --> 00:24:44,696
However, I can tell you what has worked for me in the past.

451
00:24:46,583 --> 00:24:50,444
Assignation of copyright turns out to be way more complicated than you might expect,

452
00:24:50,524 --> 00:24:53,605
especially when it comes to stuff like estates if the person dies.

453
00:24:55,025 --> 00:24:58,186
So what we did on Yarnspinner is we said,

454
00:24:59,747 --> 00:25:02,308
any contribution must be licensed under MIT.

455
00:25:02,988 --> 00:25:03,748
That's all you need.

456
00:25:04,188 --> 00:25:08,330
So the copyright for Yarnspinner is actually Copyright Secret Lab, which is me,

457
00:25:08,990 --> 00:25:10,150
and Yarnspinner Contributors.

458
00:25:11,113 --> 00:25:15,799
That way you have the right to use it in your game, people have the right to use the code,

459
00:25:16,239 --> 00:25:20,264
everyone goes home happy. It's great. So yeah, you don't necessarily, in my opinion,

460
00:25:20,965 --> 00:25:23,548
need to assign copyright. But again, your mileage may vary.

461
00:25:24,472 --> 00:25:24,672
Thanks.

462
00:25:25,012 --> 00:25:25,132
Cool.

463
00:25:25,352 --> 00:25:25,973
Hi, what's your name?

464
00:25:26,333 --> 00:25:27,274
Hi, I'm Jeremy.

465
00:25:27,574 --> 00:25:27,754
Hi.

466
00:25:28,855 --> 00:25:30,676
What are, what's an example,

467
00:25:30,836 --> 00:25:32,918
you were saying there were some classic examples

468
00:25:32,978 --> 00:25:35,339
of a community splitting and forking,

469
00:25:35,860 --> 00:25:38,802
and then that fork, after everyone cooled down,

470
00:25:38,982 --> 00:25:42,424
sort of got reintegrated back into the original project,

471
00:25:42,464 --> 00:25:44,826
and I was wondering if there's a particular example

472
00:25:44,866 --> 00:25:45,326
that shines.

473
00:25:46,216 --> 00:25:51,018
I know that the GNOME project, which is a desktop application suite,

474
00:25:51,258 --> 00:25:53,319
and also it's a desktop, not just applications,

475
00:25:53,879 --> 00:25:55,760
has had multiple forks over its lifetime,

476
00:25:55,780 --> 00:26:00,001
and usually whatever patches from those have filtered back into the main project.

477
00:26:00,662 --> 00:26:02,963
There are a couple, but I can't really recall them off the top of my head.

478
00:26:03,003 --> 00:26:04,623
It doesn't happen very often, but it has happened.

479
00:26:06,004 --> 00:26:06,564
Ghost melters.

480
00:26:07,444 --> 00:26:09,225
Thank you.

481
00:26:09,845 --> 00:26:10,526
Better take shelter.

482
00:26:11,886 --> 00:26:12,926
Yes? Hi, what's your name?

483
00:26:13,864 --> 00:26:15,165
My name is Jillian.

484
00:26:15,566 --> 00:26:20,469
So I work for a company in Ohio, and we do contract work with people in California.

485
00:26:20,869 --> 00:26:26,133
And I'm really surprised at how similar it is that we have the same problems and the same issues,

486
00:26:26,913 --> 00:26:29,455
working from studio to studio with Open Source Cores.

487
00:26:29,475 --> 00:26:36,100
So I feel like the biggest problem that we have is two people working on the same problem at the same time,

488
00:26:36,560 --> 00:26:39,242
and at the end they have to choose, okay, which solution do we have?

489
00:26:39,282 --> 00:26:40,463
Which code is better than this?

490
00:26:40,803 --> 00:26:42,084
So do you have the same issue?

491
00:26:43,245 --> 00:26:48,726
Not really, this is really a problem that's solved by really, really open communication.

492
00:26:48,786 --> 00:26:54,647
Additionally, the fact that you can create a branch and publicly push code as the solution's being done,

493
00:26:54,687 --> 00:27:00,788
like it's, if the solution is so small that you could have done it on your own in a single commit,

494
00:27:01,108 --> 00:27:03,749
then really I don't think that's as big of a problem,

495
00:27:03,789 --> 00:27:08,990
but you know, this is really a thing that you solve by having the two teams work in the same repo.

496
00:27:09,774 --> 00:27:10,535
I have a second thing.

497
00:27:10,615 --> 00:27:12,236
So I do game development on Twitch.

498
00:27:12,936 --> 00:27:15,958
And it used to be people doing game development on Twitch

499
00:27:16,038 --> 00:27:17,279
would just do their own project,

500
00:27:17,359 --> 00:27:18,680
and people would just watch them.

501
00:27:18,720 --> 00:27:20,981
But now it's turning into this community effort

502
00:27:21,021 --> 00:27:24,724
where people in chat are doing the code with the coder

503
00:27:24,784 --> 00:27:26,825
and adding audio and adding art and stuff like that.

504
00:27:26,905 --> 00:27:29,487
So if people want to be part of projects like this,

505
00:27:29,567 --> 00:27:31,268
Twitch is a great place to go to

506
00:27:31,348 --> 00:27:32,749
and be part of a community.

507
00:27:32,769 --> 00:27:35,891
So are you talking about live coding collaboration

508
00:27:35,911 --> 00:27:36,551
or are you just talking?

509
00:27:38,504 --> 00:27:41,646
Or are you talking about just general working together?

510
00:27:42,106 --> 00:27:43,267
It's both, yeah.

511
00:27:43,347 --> 00:27:45,268
There's a large spectrum of that.

512
00:27:45,648 --> 00:27:48,510
Sometimes it's really focused, sometimes it's open for anybody.

513
00:27:50,010 --> 00:27:56,054
So on the second point, which is just collaboration on the same project, just jump into any project

514
00:27:56,094 --> 00:27:59,856
that pops up on GitHub Explore or anything like that, and yeah, you'll be able to find

515
00:27:59,876 --> 00:28:01,937
something to contribute to and just get part of that community.

516
00:28:02,197 --> 00:28:07,080
I'm less familiar with the live coding stuff, but I kind of want to get into that myself.

517
00:28:08,027 --> 00:28:08,227
Cool.

518
00:28:08,247 --> 00:28:08,308
Hi.

519
00:28:09,549 --> 00:28:10,730
What's your name?

520
00:28:11,270 --> 00:28:12,291
Hi, Sienna Leslie.

521
00:28:12,491 --> 00:28:12,772
Hello.

522
00:28:13,252 --> 00:28:15,995
Hi, so first, thanks for the talk.

523
00:28:16,035 --> 00:28:18,277
I thought it was very good.

524
00:28:18,297 --> 00:28:18,797
Thanks.

525
00:28:19,017 --> 00:28:20,979
And I'm curious to hear a little more

526
00:28:21,099 --> 00:28:22,861
about some techniques that have worked for you

527
00:28:22,961 --> 00:28:26,424
for when it's a good idea to spotlight specific issues

528
00:28:26,484 --> 00:28:26,885
and which.

529
00:28:27,966 --> 00:28:32,349
channels you've decided to spotlight them from because my open source project has

530
00:28:32,909 --> 00:28:36,872
several hundred contributors so we do have like utilize a lot of tags and stuff

531
00:28:36,912 --> 00:28:45,158
within the with within github but I'm curious to hear more about approaching

532
00:28:45,359 --> 00:28:48,961
other channels to spotlight specific issues so you're talking about like

533
00:28:48,981 --> 00:28:53,224
where to go to find more people to contribute yes who are outside of the

534
00:28:53,284 --> 00:28:54,505
community that you already have

535
00:28:55,169 --> 00:29:00,452
I think that you should rely on the same kind of mapping techniques that you use for the game itself.

536
00:29:00,752 --> 00:29:06,695
So just, you know, don't limit your discussion of the project to people who already would be interested in doing it.

537
00:29:06,855 --> 00:29:11,578
Go to your personal Twitter, go to your games, like your studio's Twitter, and just say,

538
00:29:11,638 --> 00:29:14,440
Hey, by the way, in addition to the game we're working on, we also do this.

539
00:29:14,860 --> 00:29:16,381
If you're a coder, then please jump in.

540
00:29:18,249 --> 00:29:21,773
Really, it's just a matter of running around and yelling about it as much as you can, every weekend.

541
00:29:21,793 --> 00:29:24,275
And that's, yeah, that's really it.

542
00:29:24,635 --> 00:29:25,376
Thank you very much.

543
00:29:25,416 --> 00:29:25,796
You're welcome.

544
00:29:26,577 --> 00:29:31,482
I think that's it for questions, so thank you all so much again for coming, and yeah.

545
00:29:35,986 --> 00:29:36,987
Thank you.

