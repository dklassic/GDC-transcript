1
00:00:06,219 --> 00:00:09,761
I'm here today to talk to you about a fairly unique position that we have at Bungie

2
00:00:10,121 --> 00:00:12,703
called the Technical Designer in Animation, and it's my job.

3
00:00:13,443 --> 00:00:17,465
So, maybe you're here because you're looking for ways to grow your own animation team,

4
00:00:17,946 --> 00:00:20,767
or you're looking for another perspective on a job you're already familiar with,

5
00:00:21,268 --> 00:00:22,949
or maybe you're interested in becoming a TDIA,

6
00:00:23,489 --> 00:00:25,410
or maybe you're just waiting for the parties to start,

7
00:00:25,570 --> 00:00:27,731
but for whatever reason, thank you for coming.

8
00:00:28,452 --> 00:00:31,033
So before I get carried away, let me talk about who I am.

9
00:00:32,014 --> 00:00:32,974
My name is Jamie Jeffcoat.

10
00:00:34,730 --> 00:00:37,531
I've been working on Destiny at Bungie for the past two and a half years.

11
00:00:38,392 --> 00:00:40,033
My background is in computer science.

12
00:00:40,753 --> 00:00:43,275
I have a master's in art creation for video games.

13
00:00:43,295 --> 00:00:45,136
I figured that would help get into the industry.

14
00:00:45,816 --> 00:00:48,838
And before all those years of college and master's degrees,

15
00:00:48,918 --> 00:00:52,040
I was a real person with real interests, like band and theater,

16
00:00:52,180 --> 00:00:54,181
and of course, most importantly, video games.

17
00:00:55,021 --> 00:00:57,723
I was interested in every aspect about them, and I wanted to make them.

18
00:00:58,143 --> 00:00:59,724
So that's why I'm here.

19
00:01:01,283 --> 00:01:04,305
And so, let's get to the real beef of this conversation,

20
00:01:04,565 --> 00:01:06,505
what is a technical designer in animation?

21
00:01:07,746 --> 00:01:09,846
I would show you a real, but it's kind of difficult

22
00:01:09,906 --> 00:01:12,587
to show you something that isn't obviously visual.

23
00:01:13,228 --> 00:01:14,428
The things that I work on are things

24
00:01:14,448 --> 00:01:15,968
that you don't normally notice in a game,

25
00:01:16,189 --> 00:01:17,809
like animations not popping,

26
00:01:18,149 --> 00:01:20,310
or entering the vehicle from the correct side,

27
00:01:20,610 --> 00:01:23,291
or seamless enemy encounters and proper ammo count.

28
00:01:24,051 --> 00:01:27,352
In a video of me reading a bug and identifying the issue,

29
00:01:28,173 --> 00:01:29,333
wouldn't really give you a good idea

30
00:01:29,353 --> 00:01:30,413
of what I do as a whole.

31
00:01:32,510 --> 00:01:33,430
But I'll show you one anyway.

32
00:01:34,750 --> 00:01:37,971
So, this is me, every day, reading bugs, fixing them.

33
00:01:38,411 --> 00:01:41,432
I mean, it's not always just bugs, but this is a pretty good example of

34
00:01:42,132 --> 00:01:43,873
something that I would do on a daily basis.

35
00:01:45,013 --> 00:01:49,094
Investigating the problems, finding the solution, fixing it, checking it in.

36
00:01:49,775 --> 00:01:51,715
Even if I didn't want to, because it was really funny.

37
00:01:53,756 --> 00:01:53,916
So...

38
00:01:55,041 --> 00:01:57,662
And today I'll start by explaining what our name is,

39
00:01:58,202 --> 00:02:01,564
what our quest is, and how do we get across the bridge

40
00:02:01,644 --> 00:02:03,945
between animators, designers, and engineers.

41
00:02:04,985 --> 00:02:06,306
So, what is my name?

42
00:02:07,726 --> 00:02:09,847
Since I have to say the title of my job

43
00:02:09,907 --> 00:02:12,508
about a thousand times in the next 28 minutes,

44
00:02:12,728 --> 00:02:14,789
I'm going to shorten it to TDIA.

45
00:02:15,369 --> 00:02:18,911
So, TDIA, hear it, know it, love it, need it.

46
00:02:20,755 --> 00:02:23,017
But to understand how the role of the TDIA

47
00:02:23,077 --> 00:02:25,640
came to be at Bungie, it will help to give a history

48
00:02:25,760 --> 00:02:28,322
of how our team has grown and how we came into action.

49
00:02:29,563 --> 00:02:32,766
So looking back at Halo 3, we had about three to five

50
00:02:32,866 --> 00:02:35,729
animators in a lead, with a third of an engineer

51
00:02:36,630 --> 00:02:39,472
working on about three hours a day with animation.

52
00:02:39,613 --> 00:02:42,395
So it was a small team, and it lacked great support,

53
00:02:42,475 --> 00:02:43,676
but we made do with what we had.

54
00:02:44,901 --> 00:02:47,762
Moving on, post-Halo 3, we were working on Reach.

55
00:02:48,683 --> 00:02:50,504
The animation team, as you can see, was growing.

56
00:02:50,764 --> 00:02:51,884
We have cinematics now.

57
00:02:52,405 --> 00:02:55,626
And we also began hiring dedicated engineers to animation.

58
00:02:55,886 --> 00:02:57,427
And our rigging teams were growing as well,

59
00:02:57,567 --> 00:02:59,068
to fit our growing animation needs.

60
00:03:00,228 --> 00:03:03,430
So, one of our lead animators took a managerial role

61
00:03:03,550 --> 00:03:05,351
across the entire animation team.

62
00:03:05,711 --> 00:03:08,192
And at this time, the role of producer was introduced as well.

63
00:03:12,368 --> 00:03:16,370
Right now, animators are still using the old Halo 3 system.

64
00:03:16,931 --> 00:03:19,292
Animations are blocked or bottlenecked from setup.

65
00:03:19,612 --> 00:03:21,693
They're not able to see things in-game immediately,

66
00:03:21,733 --> 00:03:26,276
like jumps, damages, vaults, combat activities, vehicle animation.

67
00:03:28,720 --> 00:03:33,482
We even had a system that automatically imported animations based off their names,

68
00:03:33,642 --> 00:03:37,403
so animators were in charge of things like spelling errors.

69
00:03:37,423 --> 00:03:42,084
And other issues that we had were no animation blending to smooth out all of our transitions,

70
00:03:42,524 --> 00:03:47,385
and there was no live debugging tools to help the animators figure out what's wrong with their animations in the engine.

71
00:03:48,275 --> 00:03:52,240
So, our animation manager, with all of her awesome experience and wisdom, says,

72
00:03:52,300 --> 00:03:56,285
hey, I worked on a fighting game once with a guy called a character scripter.

73
00:03:56,725 --> 00:04:00,189
And whether you have experience on fighting games or not, you can probably predict

74
00:04:00,249 --> 00:04:04,534
that it involves a lot of coordination between designers, engineers, and animators alike.

75
00:04:05,335 --> 00:04:08,256
So, we need someone to facilitate the setup.

76
00:04:09,036 --> 00:04:13,078
And introducing our first TDIA, my boss, Joe Spitaro.

77
00:04:13,818 --> 00:04:16,179
To introduce his background, he started in game design.

78
00:04:16,759 --> 00:04:17,939
He moved on to animation,

79
00:04:18,560 --> 00:04:22,021
and he was also having a growing love affair with programming.

80
00:04:22,961 --> 00:04:26,182
And so we hire him and throw him into the trenches of Halo Reach.

81
00:04:26,843 --> 00:04:28,964
And he notices some systems seem a little broken,

82
00:04:29,104 --> 00:04:30,244
and there's a lot of work to be done.

83
00:04:32,056 --> 00:04:34,158
If you actually would like to go into the GDC vault,

84
00:04:34,978 --> 00:04:38,420
my boss Joe Spitaro did a talk with the animation engineer

85
00:04:38,440 --> 00:04:40,762
Tam Armstrong, and they talk about how they developed

86
00:04:40,802 --> 00:04:41,903
the systems for Halo Reach.

87
00:04:42,343 --> 00:04:44,004
And I'll have more information on where to find that

88
00:04:44,024 --> 00:04:44,645
at the end of my show.

89
00:04:45,900 --> 00:04:48,442
And so, as the Destiny team began to grow and form,

90
00:04:48,742 --> 00:04:51,404
more animators and engineers were brought on again.

91
00:04:51,964 --> 00:04:54,046
And Cinematics has become its own team now.

92
00:04:55,166 --> 00:04:57,448
Even a spec ops team was developed

93
00:04:57,488 --> 00:04:59,609
to help bring our animated environments to life.

94
00:05:00,250 --> 00:05:03,452
And so, as you can see, the team has grown quite a bit now,

95
00:05:03,912 --> 00:05:05,613
but there's still only one TDIA,

96
00:05:06,033 --> 00:05:07,394
and he's busy, to say the least.

97
00:05:08,535 --> 00:05:10,556
So, until that fateful day in July of 2012.

98
00:05:12,400 --> 00:05:14,361
I began as the second TDIA at Bungie,

99
00:05:15,042 --> 00:05:17,343
and I had heard of technical artists

100
00:05:17,603 --> 00:05:19,844
and technical animators and riggers, of course,

101
00:05:19,944 --> 00:05:22,445
but this position was pretty unique to me.

102
00:05:23,025 --> 00:05:24,426
And though I wasn't sure exactly

103
00:05:24,466 --> 00:05:26,807
what I was getting myself into, it felt just right.

104
00:05:28,408 --> 00:05:31,970
So we even found some other teams to sprinkle TDIA magic on,

105
00:05:32,930 --> 00:05:35,771
which brings me to the end of our introductory section.

106
00:05:36,792 --> 00:05:37,472
And to wrap it up,

107
00:05:37,732 --> 00:05:39,473
I'll attempt to describe my job in a sentence.

108
00:05:40,264 --> 00:05:42,826
So I think a TDIA is a cross-disciplinary bridge

109
00:05:43,146 --> 00:05:45,808
between designers and engineers who works to support

110
00:05:46,049 --> 00:05:47,990
and build the animated world of Destiny

111
00:05:48,330 --> 00:05:50,092
and sustain our content requirements.

112
00:05:50,672 --> 00:05:52,453
We're the glue that holds the whole thing together

113
00:05:52,493 --> 00:05:53,154
between everyone.

114
00:05:54,575 --> 00:05:55,936
So that covers our name.

115
00:05:56,336 --> 00:05:58,278
Now moving along, what is our quest?

116
00:06:00,099 --> 00:06:02,281
So, sorry, animators have their principles

117
00:06:02,821 --> 00:06:05,863
and designers have their pillars.

118
00:06:06,144 --> 00:06:07,765
So I sat down with my team

119
00:06:07,805 --> 00:06:09,066
and we came up with our own pillars.

120
00:06:10,731 --> 00:06:13,172
So we're here to liberate creative people,

121
00:06:13,372 --> 00:06:16,652
which for us mainly means animators, engineers,

122
00:06:16,832 --> 00:06:17,353
and designers.

123
00:06:18,173 --> 00:06:20,153
We're here to reduce costs at all costs,

124
00:06:20,673 --> 00:06:23,174
bringing efficiency and harmony to the animation team.

125
00:06:24,034 --> 00:06:25,334
And we're always looking forward.

126
00:06:25,895 --> 00:06:27,975
A Latin motto that we say at Bungie a lot

127
00:06:28,055 --> 00:06:29,535
is per adasia ad astra.

128
00:06:29,956 --> 00:06:31,036
Hopefully I didn't butcher that.

129
00:06:31,776 --> 00:06:34,197
and which basically translates to through boldness,

130
00:06:34,537 --> 00:06:35,918
or through boldness to the stars,

131
00:06:36,598 --> 00:06:38,479
which is something our team is always preparing for.

132
00:06:38,979 --> 00:06:41,521
So now let's elaborate on liberating creative people.

133
00:06:42,321 --> 00:06:43,662
And in the case of the TDIA,

134
00:06:43,842 --> 00:06:47,783
I'm mainly talking about animators, designers, and animation engineers.

135
00:06:48,804 --> 00:06:55,507
So, let's break down these people that I strive to liberate on a daily basis.

136
00:06:56,692 --> 00:06:59,814
We'll talk about animators now, and how I understand their priorities.

137
00:07:00,474 --> 00:07:03,616
They want readable silhouettes, clear communication to the player,

138
00:07:04,156 --> 00:07:05,677
and their stuff to not look broken in game,

139
00:07:06,137 --> 00:07:08,298
and with a decent frame rate to show it all off.

140
00:07:09,298 --> 00:07:12,761
There's 12 principles of animation written by Frank Thomas and Ollie Johnson

141
00:07:12,901 --> 00:07:16,765
that have proven themselves in capturing great performance.

142
00:07:17,165 --> 00:07:20,828
But in the world of video games, technical restraints and design limitations

143
00:07:21,309 --> 00:07:25,893
cause us to solve and find the best practices for getting these things into game.

144
00:07:26,634 --> 00:07:30,677
To name a few things that you can imagine would introduce interesting design challenges,

145
00:07:31,138 --> 00:07:34,841
timing and spacing, anticipation, exaggeration, squatch and stretch.

146
00:07:36,004 --> 00:07:38,727
But mainly, I think animators want to bring characters to life

147
00:07:39,147 --> 00:07:41,470
so the player can kill them or wish they could kill them.

148
00:07:42,511 --> 00:07:45,635
And if you don't know who that is, you're probably better off.

149
00:07:45,695 --> 00:07:48,818
But if you do play Destiny, you will definitely hate this guy.

150
00:07:49,899 --> 00:07:52,062
So moving right along, we'll talk about designers.

151
00:07:52,202 --> 00:07:52,322
Woo!

152
00:07:52,977 --> 00:07:54,737
This presentation is getting ahead of me.

153
00:07:56,418 --> 00:07:57,839
Designers have their own pillars, you know.

154
00:07:58,059 --> 00:08:00,020
And in fact, when I googled pillars of design,

155
00:08:00,560 --> 00:08:02,741
a Bungie article was the top of the list.

156
00:08:03,001 --> 00:08:04,482
So we'll throw that up there.

157
00:08:05,142 --> 00:08:07,223
And basically, they want to focus

158
00:08:07,343 --> 00:08:09,364
on creating a fun and rewarding world

159
00:08:09,444 --> 00:08:12,585
that players want to be in, that feels new and shared

160
00:08:12,625 --> 00:08:15,427
by people of all skill levels or time availability.

161
00:08:15,907 --> 00:08:18,608
They want the world to feel solid and responsive.

162
00:08:18,848 --> 00:08:20,269
And they never want to let anything

163
00:08:20,309 --> 00:08:22,090
get in the way of what the player wants to do.

164
00:08:24,361 --> 00:08:25,922
But in the case of most animations,

165
00:08:26,022 --> 00:08:28,925
designers are control freaks, with just cause, of course.

166
00:08:29,485 --> 00:08:31,527
Fine-tuning fun requires lots of iteration,

167
00:08:31,847 --> 00:08:33,609
and we have to break these tuning controls

168
00:08:33,709 --> 00:08:36,131
into tangible and understandable bits of information.

169
00:08:36,612 --> 00:08:38,233
And hopefully, you have a decent system

170
00:08:38,273 --> 00:08:40,115
to bend your content to your designers' wills.

171
00:08:41,075 --> 00:08:43,157
I mean, just think about when some of those design

172
00:08:43,197 --> 00:08:44,979
requirements get a little complicated.

173
00:08:46,160 --> 00:08:47,721
So enough about designers.

174
00:08:48,021 --> 00:08:48,762
Let's talk about

175
00:08:50,591 --> 00:08:55,194
engineers. In this case, I'm mostly talking about animation engineers, but I've been known

176
00:08:55,254 --> 00:09:01,558
to rub elbows with sandbox or tools engineers on occasion. And working with engineers to

177
00:09:01,578 --> 00:09:06,141
verify content set up across all the systems can really save a lot of headache and heartache

178
00:09:06,521 --> 00:09:08,863
as bugs are being fixed or new systems come online.

179
00:09:11,097 --> 00:09:14,538
I believe engineers want to bring the best animation performance to the console

180
00:09:14,718 --> 00:09:15,778
with the least amount of cost.

181
00:09:16,278 --> 00:09:18,939
They write code that actually gets the animations into the game,

182
00:09:19,399 --> 00:09:22,180
and without them we wouldn't have any of this great animated biz.

183
00:09:22,400 --> 00:09:27,441
So, liberating them and allowing them to concentrate on what's most critical to the game

184
00:09:27,781 --> 00:09:29,402
is always something I'm looking to help with.

185
00:09:31,282 --> 00:09:35,303
But really, when animators, designers, and engineers get to focus on being creative,

186
00:09:35,923 --> 00:09:38,624
the team, the game, and the players reap the benefits.

187
00:09:40,079 --> 00:09:42,301
So woo, let's get ready for some examples, people.

188
00:09:42,461 --> 00:09:44,643
They're coming up soon to back up some of these claims

189
00:09:44,663 --> 00:09:45,363
that I'm going to make.

190
00:09:46,664 --> 00:09:50,147
Prove that I can talk the talk and implement

191
00:09:50,167 --> 00:09:51,208
what I was just talking about.

192
00:09:52,889 --> 00:09:55,852
So how do we facilitate this creative liberation movement?

193
00:09:56,032 --> 00:09:59,475
Well, we liberate animators by unblocking animation content.

194
00:10:00,115 --> 00:10:03,998
Our animators don't consider anything actually complete

195
00:10:04,078 --> 00:10:06,080
until they can see it working in game as they want.

196
00:10:06,863 --> 00:10:09,746
We also strive to lift restrictions on creating content.

197
00:10:09,986 --> 00:10:12,308
We find ways to simplify and speed up the process

198
00:10:12,368 --> 00:10:15,271
of going from animation to actually getting things in-game.

199
00:10:16,633 --> 00:10:18,314
Also, we're capable of editing content.

200
00:10:18,835 --> 00:10:21,197
I know my way around Maya well enough

201
00:10:21,317 --> 00:10:23,159
to make edits to an animator's content

202
00:10:23,199 --> 00:10:24,721
so they don't have to sweat the small stuff,

203
00:10:24,801 --> 00:10:27,223
like fine-tuning the character's root movement

204
00:10:27,323 --> 00:10:29,125
or fixing a character's neck position

205
00:10:29,165 --> 00:10:31,047
right before he ragdolls so it doesn't look broken.

206
00:10:32,747 --> 00:10:34,648
We also connect the animators with other departments

207
00:10:34,688 --> 00:10:36,969
around the studio, or sometimes we even act as a shield.

208
00:10:37,650 --> 00:10:40,731
But if they need to trigger, say, like a certain behavior,

209
00:10:41,092 --> 00:10:43,233
they want to test their berserk layers on a bad guy,

210
00:10:43,733 --> 00:10:45,674
maybe they don't know how to make that berserk layer trigger,

211
00:10:46,035 --> 00:10:48,156
but they can come to me, and if I don't know the answer,

212
00:10:48,356 --> 00:10:49,997
I would talk to the AI guys and figure out

213
00:10:50,037 --> 00:10:51,078
how to get that set up for them.

214
00:10:52,538 --> 00:10:55,060
And so we also do desk side support,

215
00:10:55,600 --> 00:10:57,461
so animators can come to me at any time,

216
00:10:57,601 --> 00:10:59,502
pull me over to their desk, and I can help them set up

217
00:10:59,563 --> 00:11:00,923
whatever they're confused about.

218
00:11:02,162 --> 00:11:04,084
So, now I'll delve into my first example

219
00:11:04,564 --> 00:11:06,145
on how we unblock animation content.

220
00:11:07,106 --> 00:11:10,208
So, a common occurrence is the need to get a vendor

221
00:11:10,308 --> 00:11:11,489
or an NPC in the game,

222
00:11:11,809 --> 00:11:13,170
because you want to test and make sure

223
00:11:13,190 --> 00:11:16,193
the state machine is properly lined up with the environment,

224
00:11:17,293 --> 00:11:18,735
or he's playing the right idols

225
00:11:18,815 --> 00:11:20,416
whenever the player's not close,

226
00:11:20,476 --> 00:11:22,637
and then he pays attention when the player gets near.

227
00:11:23,378 --> 00:11:25,219
So, to set up this kind of thing,

228
00:11:25,239 --> 00:11:26,801
we need to take the animation content.

229
00:11:27,599 --> 00:11:30,082
And we put that animation content in a state machine, of course.

230
00:11:30,983 --> 00:11:33,726
And all of this stuff is living within the actual character.

231
00:11:34,727 --> 00:11:38,471
And another thing that we have to add to interact with their actual engine

232
00:11:38,792 --> 00:11:43,176
is a little AI tag that specifies the state machine that you want this guy to play.

233
00:11:43,797 --> 00:11:46,040
So after that, I'll open up the level editor.

234
00:11:47,180 --> 00:11:50,804
and we'll open up the level that we want to put this guy in, which is the tower.

235
00:11:51,484 --> 00:11:54,967
And so I put a little spawn point in, and I open up the script,

236
00:11:55,027 --> 00:11:57,990
and I make sure he plays the state machine that we have specified.

237
00:11:58,630 --> 00:12:02,333
And then once that's all done, after all that's set up, it leads to this.

238
00:12:02,814 --> 00:12:04,835
Seeing the character perfectly aligned with the table,

239
00:12:04,855 --> 00:12:06,337
because that happened the first time.

240
00:12:07,237 --> 00:12:09,119
And looking good, if I do say so myself.

241
00:12:10,800 --> 00:12:12,642
I love starting with this example, because it makes...

242
00:12:14,212 --> 00:12:16,375
The whole process looks simple, but I do have

243
00:12:16,415 --> 00:12:18,477
examples later down the line to show how some

244
00:12:18,517 --> 00:12:20,420
of these systems weren't always so easy.

245
00:12:22,021 --> 00:12:26,487
So let's talk about designers. How do we liberate

246
00:12:26,527 --> 00:12:28,749
them? Well, we help them by having a deep

247
00:12:28,789 --> 00:12:31,593
understanding of the available systems. They can come to

248
00:12:31,673 --> 00:12:33,295
us and know that we'll have an answer, or

249
00:12:33,315 --> 00:12:34,176
at least know where to start.

250
00:12:35,581 --> 00:12:38,102
We also help prototype ideas to estimate workload

251
00:12:38,142 --> 00:12:40,403
and find missing elements for things that they want to create.

252
00:12:41,004 --> 00:12:44,225
And we can identify unique bugs by looking at the symptoms

253
00:12:44,285 --> 00:12:45,966
and knowing how all the systems work together.

254
00:12:46,707 --> 00:12:48,188
And since we are designers ourselves,

255
00:12:48,268 --> 00:12:50,409
we do write tools to liberate ourselves as well.

256
00:12:50,589 --> 00:12:52,210
We like to automate any process

257
00:12:52,230 --> 00:12:53,691
that we have to repeat more than once.

258
00:12:54,771 --> 00:12:57,093
So now I'll talk about how I've prototyped an idea

259
00:12:57,333 --> 00:12:58,353
to help out a designer.

260
00:12:59,767 --> 00:13:03,448
So, there I was, one day, the designer comes up and says,

261
00:13:03,508 --> 00:13:05,488
hey, I have this really cool idea.

262
00:13:06,428 --> 00:13:09,529
I've got this level, and I want the player ship to be in it.

263
00:13:09,569 --> 00:13:11,669
For the first time, you're playing the game

264
00:13:11,729 --> 00:13:12,870
the first time you see your ship.

265
00:13:13,390 --> 00:13:15,270
But I want Fallen, these bad guys,

266
00:13:15,310 --> 00:13:16,350
to be sitting on top of it.

267
00:13:16,870 --> 00:13:18,391
And I'm like, that sounds really cool.

268
00:13:18,871 --> 00:13:19,511
And he says, yeah.

269
00:13:19,571 --> 00:13:21,351
And then the player runs in, and the Fallen

270
00:13:21,391 --> 00:13:23,232
jumped down on top of him, and he has to fight him.

271
00:13:23,892 --> 00:13:25,312
So I say, let's figure out how to do that.

272
00:13:26,052 --> 00:13:28,193
So it brings us to the questions that we have to ask,

273
00:13:28,253 --> 00:13:28,393
like.

274
00:13:29,133 --> 00:13:31,393
Where should the character be positioned in the animation?

275
00:13:31,594 --> 00:13:34,754
Should he be where the ship is,

276
00:13:34,814 --> 00:13:37,535
or should he be positioned at the root of the file?

277
00:13:37,955 --> 00:13:39,056
Where does the spawn point go?

278
00:13:39,136 --> 00:13:41,196
Does it start at the ship, or does it start where he lands?

279
00:13:41,656 --> 00:13:42,556
How should the physics work?

280
00:13:43,117 --> 00:13:44,677
Whenever I set this up for the first time,

281
00:13:44,737 --> 00:13:46,057
I noticed a few problems, like

282
00:13:46,518 --> 00:13:49,458
the physics pill was colliding with the ship geometry

283
00:13:49,478 --> 00:13:50,879
and pushing the character out of the way,

284
00:13:51,319 --> 00:13:53,139
or the Fallen would jump straight through the floor

285
00:13:53,179 --> 00:13:54,360
instead of landing properly.

286
00:13:54,960 --> 00:13:57,866
And how to achieve a perfect alignment with the ship

287
00:13:57,926 --> 00:14:00,611
was very important to make sure the animator's performance

288
00:14:01,112 --> 00:14:02,034
was sustained throughout.

289
00:14:03,855 --> 00:14:04,776
This led to results.

290
00:14:05,717 --> 00:14:07,678
So we ended up with a new AI physics setting

291
00:14:07,718 --> 00:14:08,979
for special cases like this,

292
00:14:09,379 --> 00:14:12,142
where we can allow the character to sit on top of a ship

293
00:14:12,202 --> 00:14:13,783
and ignore the physics for the time being.

294
00:14:14,643 --> 00:14:16,545
We even later developed easier tools

295
00:14:16,585 --> 00:14:18,266
to help set this kind of thing up,

296
00:14:18,466 --> 00:14:20,007
as we saw in the previous example

297
00:14:20,047 --> 00:14:21,248
of putting the character in game

298
00:14:21,288 --> 00:14:23,550
and making him play something pretty simply.

299
00:14:23,570 --> 00:14:27,353
And now these features can be used all over the game,

300
00:14:27,473 --> 00:14:28,734
and they are used all over the game.

301
00:14:28,954 --> 00:14:31,316
And it all came from sort of setting this up to begin with.

302
00:14:32,310 --> 00:14:34,334
So if you play the game, here it is.

303
00:14:34,835 --> 00:14:37,420
You can see it as soon as you create your new character.

304
00:14:39,625 --> 00:14:40,146
And there they are.

305
00:14:40,406 --> 00:14:42,230
Jumping off the ship, it's so awesome.

306
00:14:44,902 --> 00:14:46,022
So again, what did we do here?

307
00:14:46,503 --> 00:14:47,763
How were we useful?

308
00:14:48,164 --> 00:14:51,065
We unblocked the designer by prototyping one of his ideas,

309
00:14:51,606 --> 00:14:54,047
and we discovered the technical and design requirements

310
00:14:54,247 --> 00:14:55,088
needed to pull it off.

311
00:14:55,628 --> 00:14:57,249
And so we helped create a better process

312
00:14:57,689 --> 00:14:59,991
for the whole game

313
00:15:00,651 --> 00:15:03,052
and entering those kind of situations.

314
00:15:03,553 --> 00:15:05,174
So let's talk about liberating engineers,

315
00:15:05,574 --> 00:15:06,715
and how do we accomplish this?

316
00:15:07,235 --> 00:15:09,576
Well, sometimes we program animation features.

317
00:15:11,718 --> 00:15:14,079
In case an engineer doesn't have time.

318
00:15:16,425 --> 00:15:18,068
Sorry. How do we accomplish this?

319
00:15:18,528 --> 00:15:22,735
Sometimes we program animation features that the engineers don't have bandwidth for,

320
00:15:23,176 --> 00:15:25,479
but they still may be time-sensitive and quite important.

321
00:15:26,641 --> 00:15:29,145
Something that we can figure out within the existing architecture.

322
00:15:30,670 --> 00:15:32,912
We also create analysis and validation tools

323
00:15:32,952 --> 00:15:34,673
to make sure that our content is up to snuff

324
00:15:34,713 --> 00:15:36,555
and imports properly and works well.

325
00:15:37,916 --> 00:15:40,718
Sometimes we translate those import error strings

326
00:15:40,738 --> 00:15:44,401
that spew across the screen

327
00:15:44,681 --> 00:15:45,962
when you're importing a character

328
00:15:46,183 --> 00:15:47,784
to animator-friendly language

329
00:15:48,104 --> 00:15:50,206
so that they can fix and identify their own bugs.

330
00:15:51,107 --> 00:15:54,069
Also, we unblock new animation features

331
00:15:55,690 --> 00:15:57,672
by assisting with setup.

332
00:15:59,287 --> 00:16:03,369
And so, as our engineers create more robust and efficient systems,

333
00:16:03,649 --> 00:16:04,570
that's where we would help them.

334
00:16:05,650 --> 00:16:08,552
And so, another example is how I've programmed an animation feature.

335
00:16:09,512 --> 00:16:12,914
So we had this vehicle enter and exit in idle animations,

336
00:16:12,974 --> 00:16:15,416
but we had no way to actually call them or put them in the game.

337
00:16:16,536 --> 00:16:19,958
And so we needed a way to attach these animations to the character,

338
00:16:20,518 --> 00:16:24,060
organize them between enters, exits, left, right, idle,

339
00:16:24,501 --> 00:16:28,103
and we needed to select the correct animation at runtime.

340
00:16:28,902 --> 00:16:33,305
So I took this content, and I wrote a schema that organizes and holds all the information.

341
00:16:33,565 --> 00:16:35,446
Enter, idle, front left, back right.

342
00:16:35,966 --> 00:16:38,428
And I wrote import code that reads from all of those schemas.

343
00:16:39,588 --> 00:16:39,909
And, uh...

344
00:16:41,690 --> 00:16:45,932
And so, once that import code was implemented, I had to go into the runtime code

345
00:16:46,372 --> 00:16:49,674
and make sure that I'm selecting the correct animation

346
00:16:50,175 --> 00:16:51,775
once the character enters the vehicle.

347
00:16:51,896 --> 00:16:52,036
So...

348
00:16:52,857 --> 00:16:59,121
Entering to figure out whether the character is on the left or the right uses vector math using the position of the vehicle and the character.

349
00:16:59,661 --> 00:17:00,882
Exiting uses the

350
00:17:01,722 --> 00:17:08,146
direction on the joystick that the character is pressing at the time. And general cases were set up because combatants use vehicles as well.

351
00:17:08,907 --> 00:17:10,548
So that leads to things like

352
00:17:11,368 --> 00:17:15,190
the characters coming out of the drop ships or this awesome PvP scramble

353
00:17:16,231 --> 00:17:17,191
with multiple vehicles.

354
00:17:18,846 --> 00:17:22,389
So now that we've talked about liberating the creative people and who they are,

355
00:17:22,689 --> 00:17:25,211
let's move on to the next topic of reducing cost.

356
00:17:26,392 --> 00:17:29,734
Cost can mean a lot of things, and it definitely has a broad definition for my team,

357
00:17:30,254 --> 00:17:33,357
but to name a few examples,

358
00:17:33,437 --> 00:17:37,880
runtime cost, like memory performance or performance of animations in the game,

359
00:17:38,441 --> 00:17:42,183
or even production costs, like creator time, my time, or bug fixing time.

360
00:17:43,976 --> 00:17:46,397
So there are several ways that we reduce costs,

361
00:17:46,497 --> 00:17:48,879
and our skill set allows us to improve workflows

362
00:17:48,919 --> 00:17:50,119
of animators and designers.

363
00:17:51,100 --> 00:17:53,261
If something needs to be repeated, make a script for it.

364
00:17:53,662 --> 00:17:56,323
And if an error is causing a big risk to data,

365
00:17:56,763 --> 00:17:58,104
automate out the chance of mistakes.

366
00:17:59,905 --> 00:18:02,887
Since there are so many steps to cover for an animator

367
00:18:02,987 --> 00:18:05,328
to create their animation and get it into the game,

368
00:18:05,848 --> 00:18:08,650
optimizing pipelines feeds up animators and designers alike.

369
00:18:09,724 --> 00:18:11,706
Collecting animation data can mean many things.

370
00:18:12,246 --> 00:18:14,648
Sometimes we use it to find out how much memory

371
00:18:14,688 --> 00:18:17,009
our animations take or which animations

372
00:18:17,049 --> 00:18:18,070
are going to be in use.

373
00:18:18,510 --> 00:18:20,192
Either way, we can save a lot of memory

374
00:18:20,212 --> 00:18:21,352
by keeping track of this data.

375
00:18:23,774 --> 00:18:25,675
But keeping track of that data isn't really useful

376
00:18:25,836 --> 00:18:27,957
unless we're constantly finding ways to optimize it.

377
00:18:28,437 --> 00:18:30,419
So in the world of Destiny, we want to be able

378
00:18:30,459 --> 00:18:32,180
to reuse content wherever possible

379
00:18:32,300 --> 00:18:34,181
while adding things on to make it unique.

380
00:18:36,380 --> 00:18:39,402
Quickly prototyping designers' ideas, as demonstrated earlier,

381
00:18:39,462 --> 00:18:40,222
saves a lot of time.

382
00:18:40,742 --> 00:18:43,764
When they can recognize a new idea may require technical support.

383
00:18:44,164 --> 00:18:46,626
It's great when someone on my team can help discover

384
00:18:46,686 --> 00:18:50,047
the things that are needed to make that happen.

385
00:18:50,968 --> 00:18:53,609
And by facilitating good communication between departments,

386
00:18:53,809 --> 00:18:56,291
we speed up interactions by knowing who to contact.

387
00:18:56,931 --> 00:18:59,112
But we can also identify unnecessary meetings.

388
00:19:00,013 --> 00:19:02,054
And though this is certainly not a complete list,

389
00:19:02,414 --> 00:19:04,955
it sets us up for some awesome examples for reducing cost.

390
00:19:08,030 --> 00:19:12,413
Here's an example of how we've improved the workflow.

391
00:19:12,453 --> 00:19:14,875
We don't always solve these problems before they happen.

392
00:19:15,356 --> 00:19:17,678
Sometimes, only after fuddling through a process

393
00:19:17,838 --> 00:19:19,599
over and over do we find the golden path

394
00:19:19,639 --> 00:19:20,360
and how to improve it.

395
00:19:20,960 --> 00:19:22,802
But that's okay, because it's better late than never, right?

396
00:19:23,963 --> 00:19:26,705
And so one way TDIAs have worked with animators

397
00:19:26,825 --> 00:19:29,828
and tools engineers is to improve the workflow

398
00:19:29,868 --> 00:19:31,269
of creating state machines.

399
00:19:32,110 --> 00:19:34,792
And so as I described earlier with the vendor on the table.

400
00:19:35,712 --> 00:19:38,193
So, we have our old way of setting up animation,

401
00:19:38,354 --> 00:19:40,695
and it's not pretty, guys, but I'm gonna show it to you anyway.

402
00:19:42,136 --> 00:19:43,417
I mean, I thrived in it.

403
00:19:43,697 --> 00:19:46,039
All those nested references pointing to indices,

404
00:19:46,659 --> 00:19:47,440
it made sense to me.

405
00:19:48,160 --> 00:19:49,742
But you know what's not fun to look at all day

406
00:19:49,802 --> 00:19:50,822
when you'd rather be animating?

407
00:19:51,743 --> 00:19:52,183
This stuff.

408
00:19:53,704 --> 00:19:55,966
So, whenever it came down to it,

409
00:19:56,026 --> 00:19:58,328
we were mostly the people setting up these systems.

410
00:20:00,103 --> 00:20:03,146
But we needed something to improve and simplify this visually,

411
00:20:03,186 --> 00:20:05,407
so animators could create their own state machines.

412
00:20:06,068 --> 00:20:07,909
We needed something that would represent each state,

413
00:20:08,390 --> 00:20:11,452
all the transitions it could have, and all the rules between them.

414
00:20:12,413 --> 00:20:13,834
So, are you ready for the result?

415
00:20:14,554 --> 00:20:16,596
Here's the exact same state machine we were just looking at,

416
00:20:17,256 --> 00:20:18,817
but in the new and improved view.

417
00:20:19,518 --> 00:20:22,840
And now, you can tell that it starts in an idle activity,

418
00:20:23,461 --> 00:20:26,383
and then it can exit fast, and then it goes into combat.

419
00:20:27,264 --> 00:20:31,925
And this can even scale up to more complicated versions of state machines, like this one,

420
00:20:32,606 --> 00:20:35,827
which still maintains visual clarity,

421
00:20:36,167 --> 00:20:38,208
and at least it's a lot better than what we saw before.

422
00:20:38,808 --> 00:20:41,209
You can tell that this one has a couple of idle variants,

423
00:20:42,230 --> 00:20:44,731
and then can go into a couple different exit states,

424
00:20:44,791 --> 00:20:47,752
depending on whether it was interrupted by the player coming up to it or not.

425
00:20:48,732 --> 00:20:50,953
So the top one, it'll exit if the player's not around.

426
00:20:51,350 --> 00:20:52,792
he can just go back into patrolling,

427
00:20:53,113 --> 00:20:55,877
and the bottom, if the player interrupts him,

428
00:20:56,298 --> 00:20:57,280
he'll go into combat.

429
00:20:58,282 --> 00:21:00,485
So, here's an example of how we've optimized data

430
00:21:00,545 --> 00:21:01,186
to reduce cost.

431
00:21:04,134 --> 00:21:06,315
Here's a script that I created actually recently

432
00:21:06,916 --> 00:21:10,238
to find unused data that we were finding in our system.

433
00:21:10,698 --> 00:21:13,901
Our player and our civilians had all these animations

434
00:21:13,941 --> 00:21:15,762
that were created for prototype content

435
00:21:15,822 --> 00:21:17,724
but weren't actually being used anymore.

436
00:21:18,404 --> 00:21:21,066
So we want a quick way to find them and delete them

437
00:21:21,126 --> 00:21:22,647
and figure out what to do with all that space.

438
00:21:23,428 --> 00:21:25,729
So, in my script, I get a list of all the clips,

439
00:21:26,189 --> 00:21:29,630
and then I s- and just all those clips that it says are used,

440
00:21:29,710 --> 00:21:30,430
but they may not be.

441
00:21:31,091 --> 00:21:33,391
And then, I scan through each animation feature,

442
00:21:33,932 --> 00:21:35,772
and if the animation is referenced,

443
00:21:35,932 --> 00:21:36,913
I just take it off the list.

444
00:21:37,113 --> 00:21:37,613
Pretty simple.

445
00:21:38,553 --> 00:21:41,354
And then that leaves me with a list of unused clips,

446
00:21:41,614 --> 00:21:42,315
which is awesome,

447
00:21:42,395 --> 00:21:44,876
because now we can decide which ones to remove

448
00:21:45,416 --> 00:21:47,597
and how to handle all that new space that we just made.

449
00:21:50,432 --> 00:21:52,354
So that wraps up our reducing cost pillar,

450
00:21:52,734 --> 00:21:54,295
which finally brings me to my last pillar

451
00:21:54,336 --> 00:21:55,577
of always be looking forward.

452
00:21:56,237 --> 00:21:58,059
Destiny is a game that's meant to be worked on

453
00:21:58,219 --> 00:21:59,180
for many years to come,

454
00:21:59,620 --> 00:22:02,382
with expansions coming out on a fairly regular basis.

455
00:22:02,983 --> 00:22:05,845
It's one of the fundamental aspects of my job

456
00:22:06,346 --> 00:22:07,667
to always be looking forward,

457
00:22:08,027 --> 00:22:09,168
but not just for long term.

458
00:22:09,348 --> 00:22:10,449
Sometimes we're trying to figure out

459
00:22:10,509 --> 00:22:11,930
what needs need to be met next week.

460
00:22:13,348 --> 00:22:15,370
So, what should we be looking into?

461
00:22:16,050 --> 00:22:17,171
Preparing for sequels, of course.

462
00:22:17,671 --> 00:22:19,552
We need to anticipate the needs of the future.

463
00:22:20,132 --> 00:22:22,113
And make sure content is robust and reusable

464
00:22:22,153 --> 00:22:23,914
throughout the entire course of production.

465
00:22:25,435 --> 00:22:26,796
We also must strive to understand

466
00:22:26,836 --> 00:22:28,256
how all the systems work together

467
00:22:28,276 --> 00:22:29,437
in relation with animation.

468
00:22:29,837 --> 00:22:32,079
And be familiar with even things beyond that.

469
00:22:33,359 --> 00:22:35,781
And with every problem, we must brainstorm a solution.

470
00:22:36,321 --> 00:22:38,502
You may not have time or resources to fix it now,

471
00:22:38,802 --> 00:22:39,863
but you will find time later.

472
00:22:42,021 --> 00:22:48,167
And this is one of the most important parts about our job and always looking forward is to always make ourselves obsolete

473
00:22:49,208 --> 00:22:54,414
It may not sound very appealing to strive for this kind of thing, but despite our attempts. There's always more work to do

474
00:22:55,896 --> 00:23:02,923
Sometimes this is done simply by making really well documented guidance that an animator can reference in order for them to unblock themselves on creating

475
00:23:02,983 --> 00:23:03,804
Or setting something up

476
00:23:05,047 --> 00:23:07,708
We also find inconsistencies with our tools or engine,

477
00:23:08,128 --> 00:23:10,068
finding where things can easily go wrong

478
00:23:10,208 --> 00:23:11,509
and removing them from the process.

479
00:23:12,649 --> 00:23:14,910
Also, we want to find processes that aren't ideal

480
00:23:15,130 --> 00:23:16,730
or interfaces that aren't easy to use.

481
00:23:17,110 --> 00:23:18,030
How can we improve these,

482
00:23:18,250 --> 00:23:21,231
and how can we reinforce the first two goals?

483
00:23:22,271 --> 00:23:24,852
And on occasion, we get a chance to design better tools,

484
00:23:25,552 --> 00:23:27,733
much like the example with the state machines earlier.

485
00:23:30,607 --> 00:23:32,769
how we reduced the overhead cost of creating them.

486
00:23:33,529 --> 00:23:35,651
But all of these goals for looking ahead

487
00:23:35,731 --> 00:23:37,152
reinforce our first two pillars

488
00:23:37,352 --> 00:23:39,553
of liberating creative people and reducing cost.

489
00:23:41,295 --> 00:23:43,336
And so, unfortunately, we're running short on time,

490
00:23:43,416 --> 00:23:44,837
so I have time for one more example.

491
00:23:45,277 --> 00:23:47,379
And here's a fun way I made myself obsolete

492
00:23:47,439 --> 00:23:49,140
by anticipating the needs of animators

493
00:23:49,480 --> 00:23:51,001
to debug their damage animations.

494
00:23:52,062 --> 00:23:54,243
So, we start with this character.

495
00:23:56,056 --> 00:24:00,057
And the animator notices he's not playing the correct headshot animation when he gets shot in the head.

496
00:24:00,837 --> 00:24:02,838
And so, normally in our engine,

497
00:24:03,558 --> 00:24:07,499
we don't have any way to see how the engine interpreted this damage.

498
00:24:08,159 --> 00:24:11,480
And so, you just had to dig into the old content spec,

499
00:24:11,500 --> 00:24:13,281
like I showed you earlier with the state machines,

500
00:24:13,701 --> 00:24:14,801
and you had to dig through that.

501
00:24:15,101 --> 00:24:18,802
Maybe a left or a right, or a body was set to a head or something,

502
00:24:18,822 --> 00:24:20,542
and just something might have been set up wrong,

503
00:24:21,023 --> 00:24:23,543
and it was really difficult to dig in there and figure out the problem.

504
00:24:24,244 --> 00:24:28,368
So, I decide to look into the code available for debugging at runtime,

505
00:24:29,028 --> 00:24:30,050
and I start poking around.

506
00:24:30,870 --> 00:24:32,872
My experience earlier from the vehicle setup

507
00:24:32,912 --> 00:24:35,795
sort of kick-started my idea of using character positions

508
00:24:35,835 --> 00:24:36,836
and the vectors around them.

509
00:24:37,257 --> 00:24:39,800
So why not apply it here too for more informational reasons?

510
00:24:41,140 --> 00:24:42,781
So I find the position of the character,

511
00:24:42,861 --> 00:24:44,541
and I figured out how to draw this sweet circle

512
00:24:44,581 --> 00:24:45,042
at the bottom.

513
00:24:45,682 --> 00:24:46,983
And then I get a little carried away

514
00:24:47,103 --> 00:24:49,244
by adding lines that correspond to the data

515
00:24:49,344 --> 00:24:52,225
that the engine has been fed

516
00:24:52,385 --> 00:24:55,107
to give the result of the damage animation.

517
00:24:55,687 --> 00:24:57,648
And along with that, I represent the line

518
00:24:57,668 --> 00:24:58,689
where the damage came from.

519
00:24:59,289 --> 00:25:00,790
And I even got more carried away

520
00:25:00,970 --> 00:25:02,571
and added a line in the 3D space

521
00:25:02,631 --> 00:25:04,932
to show exactly where the bullet was coming from

522
00:25:04,972 --> 00:25:06,613
and the path that it took to hit the character.

523
00:25:08,575 --> 00:25:10,417
Here's a couple shots of the tool in action.

524
00:25:11,217 --> 00:25:14,219
And this allowed animators to debug their animations

525
00:25:14,620 --> 00:25:16,601
with a full arsenal of knowledge on the screen.

526
00:25:17,121 --> 00:25:19,483
And they can identify the problem themselves easily,

527
00:25:20,003 --> 00:25:21,885
something they weren't able to do at all before.

528
00:25:23,226 --> 00:25:25,407
So that wraps up the end of my always looking forward

529
00:25:25,447 --> 00:25:28,449
section, which brings us to the final section

530
00:25:28,489 --> 00:25:30,751
of this presentation, is getting across the bridge

531
00:25:30,811 --> 00:25:32,732
between animators, designers, and engineers.

532
00:25:34,513 --> 00:25:35,574
So where do we fit in?

533
00:25:35,934 --> 00:25:36,995
Your team may already have one.

534
00:25:38,885 --> 00:25:40,945
Perhaps a combination of people are doing this.

535
00:25:41,726 --> 00:25:44,947
Or worst case scenario, your team doesn't have time to deal with this type of issue.

536
00:25:45,647 --> 00:25:47,528
So, which department do we fit in?

537
00:25:47,808 --> 00:25:49,769
Well, we're considered part of the animation team,

538
00:25:49,889 --> 00:25:52,030
but we're labeled formally as a technical designer.

539
00:25:52,611 --> 00:25:54,952
And our cross-disciplinary skill sets do vary.

540
00:25:55,092 --> 00:25:57,213
Some of us are stronger in animation and engineering,

541
00:25:57,353 --> 00:25:59,073
or some are stronger in design and animation.

542
00:25:59,353 --> 00:26:03,075
But whatever combination, we're definitely well-suited for this kind of role.

543
00:26:03,776 --> 00:26:05,358
And theoretically, where do we go?

544
00:26:05,598 --> 00:26:08,923
Well, we're a bridge between animators, designers, and engineers, right?

545
00:26:10,005 --> 00:26:12,669
So, really, where do they put us in the studio?

546
00:26:13,669 --> 00:26:16,010
Here's actually a cropped version of our studio floor plan,

547
00:26:16,030 --> 00:26:17,371
and you can see in the bottom left

548
00:26:18,171 --> 00:26:20,753
that we're nestled right between the animators

549
00:26:20,873 --> 00:26:21,754
and the engineers.

550
00:26:22,354 --> 00:26:25,236
And there's even a cinematics TDIA,

551
00:26:25,416 --> 00:26:26,637
and the guy up there in effects

552
00:26:27,057 --> 00:26:28,498
helps support the spec ops team.

553
00:26:29,199 --> 00:26:31,160
And as you can see, the open floor plan

554
00:26:31,320 --> 00:26:33,181
allows us really easy access to designers

555
00:26:33,221 --> 00:26:34,262
across the rest of the studio.

556
00:26:35,518 --> 00:26:40,582
So what makes a good TDIA? I think we should be spongy. We should soak up bits of information

557
00:26:40,682 --> 00:26:46,426
everywhere across engine setup. Content, miscellaneous elements, of course basic systems. We should

558
00:26:46,446 --> 00:26:51,789
have a breadth of knowledge. It's key to finding the answers to any given problem. A good TDIA

559
00:26:51,829 --> 00:26:54,971
should be proactive, finding problems. They should be outspoken.

560
00:26:55,872 --> 00:26:59,016
One of the best ways to reduce costs and improve communication between teams

561
00:26:59,397 --> 00:27:00,838
is to speak up and speak often.

562
00:27:01,379 --> 00:27:04,744
It not only helps get the job done quicker, but it instills confidence in your team.

563
00:27:05,485 --> 00:27:06,766
We're also leadership ninjas.

564
00:27:06,967 --> 00:27:11,032
Our cross-disciplinary aspect of our role...

565
00:27:12,754 --> 00:27:14,877
really makes us a good point of communication

566
00:27:14,897 --> 00:27:16,158
between a bunch of different people.

567
00:27:16,739 --> 00:27:18,781
And also having a flexible schedule,

568
00:27:18,902 --> 00:27:20,644
knowing our priorities, and being available

569
00:27:20,704 --> 00:27:22,706
to animators, engineers, and designers alike

570
00:27:23,147 --> 00:27:25,890
make us an available warrior for animation.

571
00:27:26,631 --> 00:27:27,412
So, in review.

572
00:27:28,333 --> 00:27:28,953
What's our name?

573
00:27:29,493 --> 00:27:32,174
We do code, or we're a technical designer animation.

574
00:27:32,254 --> 00:27:34,394
We code, tools, runtime, in-engine setup.

575
00:27:34,814 --> 00:27:35,934
We're a designer.

576
00:27:35,994 --> 00:27:38,675
We prototype ideas, set up encounters and abilities.

577
00:27:39,295 --> 00:27:41,216
We're in animation, verifying requirements,

578
00:27:41,296 --> 00:27:43,396
supporting animators, and editing content

579
00:27:43,416 --> 00:27:44,316
whenever necessary.

580
00:27:45,176 --> 00:27:47,417
And our goals on the daily are to support the game,

581
00:27:47,537 --> 00:27:51,778
the team, unblock content, and facilitate communication

582
00:27:51,818 --> 00:27:53,078
to kick butts and take names.

583
00:27:53,578 --> 00:27:54,558
And our future goals are...

584
00:27:55,639 --> 00:27:58,260
are to think about ways to improve existing systems

585
00:27:58,881 --> 00:28:00,982
while hoping to create a better animation system

586
00:28:01,603 --> 00:28:02,523
in tools and run time,

587
00:28:02,864 --> 00:28:04,625
while planning a smoother and simpler experience

588
00:28:04,745 --> 00:28:06,626
between working with all the departments.

589
00:28:07,027 --> 00:28:09,328
And so thank you very much for coming to my talk today.

590
00:28:09,628 --> 00:28:11,470
Here's the information I had promised

591
00:28:11,530 --> 00:28:12,791
about the two talks I mentioned.

592
00:28:13,431 --> 00:28:15,292
And thanks for coming everyone.

593
00:28:15,312 --> 00:28:16,493
I hope this is useful.

594
00:28:18,154 --> 00:28:19,175
Are there any questions?

595
00:28:19,355 --> 00:28:20,276
And I believe we're out of time,

596
00:28:20,296 --> 00:28:23,838
so we may have to take them in the question room.

597
00:28:24,798 --> 00:28:26,225
But yeah, thank you so much for coming.

598
00:28:26,245 --> 00:28:27,351
I'm so sorry I ran out of time.

