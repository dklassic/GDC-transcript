1
00:00:05,195 --> 00:00:06,276
My name is Doug Sheehan.

2
00:00:06,276 --> 00:00:08,597
I'm one of the lead gameplay programmers at Insomniac Games.

3
00:00:08,597 --> 00:00:11,338
And we're here to talk about building traversal

4
00:00:11,338 --> 00:00:12,859
in Marvel's Spider-Man.

5
00:00:12,859 --> 00:00:13,839
So let's just jump right in.

6
00:00:13,839 --> 00:00:19,442
So in the fall of 2014, I found out Insomniac Games

7
00:00:19,442 --> 00:00:21,303
was making a Spider-Man game, and that I

8
00:00:21,303 --> 00:00:23,744
was going to be assigned to bring his traversal to life.

9
00:00:24,224 --> 00:00:27,827
This was not only going to be the biggest game in Insomniac's history, but it was also

10
00:00:27,827 --> 00:00:33,572
using a legendary IP that had really heavily infested and rabid fan base, and it had an

11
00:00:33,572 --> 00:00:36,935
unrivaled expectation of quality for anything that we'd ever made.

12
00:00:36,935 --> 00:00:40,678
And as someone that, as a poor college student, holed up in bookstores and read Spider-Man

13
00:00:40,678 --> 00:00:45,902
comics, the idea of making Spider-Man swing was super exciting and also at the same time

14
00:00:45,902 --> 00:00:47,504
completely and utterly terrifying.

15
00:00:48,405 --> 00:00:52,251
Fortunately, we had the game's vision statement as a starting point, which was, play like

16
00:00:52,251 --> 00:00:54,053
a superhero movie feels.

17
00:00:54,053 --> 00:00:58,060
So we kind of set upon our journey to, as the saying goes, make you feel like Spider-Man.

18
00:00:59,475 --> 00:01:01,276
So what does playing like a superhero movie

19
00:01:01,276 --> 00:01:03,418
feels even mean for Traversal?

20
00:01:03,418 --> 00:01:05,019
Well, with Swingin' as our starting point,

21
00:01:05,019 --> 00:01:07,841
we decided on a few core beliefs that would kind of guide

22
00:01:07,841 --> 00:01:09,122
the feature's development.

23
00:01:09,122 --> 00:01:11,023
So the first thing we acknowledged

24
00:01:11,023 --> 00:01:13,264
was that we wanted to target a pretty broad audience.

25
00:01:13,264 --> 00:01:15,406
Spider-Man has a really big worldwide following,

26
00:01:15,406 --> 00:01:17,828
and we wanted as many people as possible to be able to play

27
00:01:17,828 --> 00:01:18,728
and enjoy the game.

28
00:01:19,424 --> 00:01:23,528
However, we knew that we had the issue that most gamers don't really have any muscle memory

29
00:01:23,528 --> 00:01:24,529
for swinging.

30
00:01:24,529 --> 00:01:28,553
Unlike, say, a third-person shooter or a first-person shooter, most folks don't have any brain map

31
00:01:28,553 --> 00:01:30,775
for how to make swinging go and function.

32
00:01:30,775 --> 00:01:34,739
So to add to the challenge, we start the game out by chucking you out a window, giving you

33
00:01:34,739 --> 00:01:37,962
the control, and saying, all right, swing time, go.

34
00:01:37,962 --> 00:01:41,546
So wanting that first moment to feel just right, we knew we had to get the controls

35
00:01:41,546 --> 00:01:44,168
to a point where they were easy to learn but hard to master.

36
00:01:45,743 --> 00:01:49,605
Next, we wanted traversal and swinging in particular to be rooted in physics.

37
00:01:49,605 --> 00:01:54,249
This was vital to give players a sense of believability, that feeling that they could

38
00:01:54,249 --> 00:01:56,790
actually swing through New York as a superhero.

39
00:01:56,790 --> 00:02:00,613
Following that, swing lines had to attach to in-world geometry.

40
00:02:00,613 --> 00:02:01,333
No questions asked.

41
00:02:01,333 --> 00:02:06,857
This was extremely important in order to ground the simulation correctly, but we were mostly

42
00:02:06,857 --> 00:02:09,859
terrified that a bunch of angry fans would tell us we were ruining their childhood if

43
00:02:09,859 --> 00:02:10,480
we didn't do it.

44
00:02:12,695 --> 00:02:14,638
So finally, we wanted to have a dynamic camera.

45
00:02:14,638 --> 00:02:17,582
The look and feel of swinging needed to be fluid, fast,

46
00:02:17,582 --> 00:02:19,684
exciting, and especially cinematic.

47
00:02:19,684 --> 00:02:21,426
We needed a camera that helped translate

48
00:02:21,426 --> 00:02:23,929
all that high-flying acrobatics and velocity

49
00:02:23,929 --> 00:02:25,932
into a really visceral experience for the player,

50
00:02:25,932 --> 00:02:27,554
something that they could just feel in their gut.

51
00:02:28,559 --> 00:02:32,642
Today, I'm going to show you how we achieved those core principles by taking you through

52
00:02:32,642 --> 00:02:34,263
the process by which we created Traversal.

53
00:02:34,263 --> 00:02:36,964
The biggest key to our success is iteration.

54
00:02:36,964 --> 00:02:40,987
For a lot of the elements I'll show you, not just what we ended up actually shipping, but

55
00:02:40,987 --> 00:02:45,329
where we started, where we failed, what we learned, and how we got better.

56
00:02:45,329 --> 00:02:49,232
However, knowing when you needed to improve isn't necessarily always obvious to you.

57
00:02:49,232 --> 00:02:53,054
It came from a steady diet of playtesting and learning how players interacted with the

58
00:02:53,054 --> 00:02:54,335
game and where it was failing them.

59
00:02:55,272 --> 00:02:58,274
This meant we had to stay really flexible in our execution

60
00:02:58,274 --> 00:03:00,736
and always looking to be greater.

61
00:03:00,736 --> 00:03:02,577
So before we can actually swing, we

62
00:03:02,577 --> 00:03:04,378
have to have something to attach to.

63
00:03:04,378 --> 00:03:06,699
So as stated, we wanted swinging to be accessible.

64
00:03:06,699 --> 00:03:09,281
And this meant that we needed to think a bit about attach points

65
00:03:09,281 --> 00:03:10,541
from the player's perspective.

66
00:03:10,541 --> 00:03:12,303
Namely, what is the player actually

67
00:03:12,303 --> 00:03:14,344
going to be responsible for when it comes

68
00:03:14,344 --> 00:03:15,364
to picking an attach point?

69
00:03:15,364 --> 00:03:17,746
And what is the system going to be responsible for

70
00:03:17,746 --> 00:03:19,247
and doing to help them?

71
00:03:19,247 --> 00:03:21,108
So we first decided that we wanted players really

72
00:03:21,108 --> 00:03:23,850
just thinking about where they wanted to go, rather than

73
00:03:23,850 --> 00:03:24,890
where they were attaching.

74
00:03:25,359 --> 00:03:28,841
This removed a pretty significant burden from the player and let them focus on additional

75
00:03:28,841 --> 00:03:33,705
layers of gameplay, like chasing cars, dodging bullets, rockets, and the occasional pigeon.

76
00:03:33,705 --> 00:03:37,827
The player would communicate their directional intent with the analog stick, and then the

77
00:03:37,827 --> 00:03:39,148
system would take it from there.

78
00:03:40,507 --> 00:03:42,349
So our first attempt at finding attach points

79
00:03:42,349 --> 00:03:45,213
was to comb the environment using an array of ray casts.

80
00:03:45,213 --> 00:03:47,495
This was designed to minimize the required effort

81
00:03:47,495 --> 00:03:50,139
from design and environment and to ensure that we were actually

82
00:03:50,139 --> 00:03:51,821
attaching to geometry.

83
00:03:51,821 --> 00:03:53,543
But this presented a number of problems

84
00:03:53,543 --> 00:03:55,706
that we just couldn't overcome at the end of the day.

85
00:03:56,360 --> 00:04:00,261
The biggest issue is that raycasts simply didn't provide enough resolution for us.

86
00:04:00,261 --> 00:04:05,022
Our line lengths would often exceed 50 meters, and even with a respectable density of raycasts,

87
00:04:05,022 --> 00:04:07,983
we were getting these 20 meter gaps at full range.

88
00:04:07,983 --> 00:04:11,644
This was enough to not only miss small objects that we wanted to swing from, like flagpoles

89
00:04:11,644 --> 00:04:16,425
and radio towers, but it would completely miss large sections of buildings entirely.

90
00:04:16,425 --> 00:04:20,366
Specifically, an additional issue we recognized is that corners were often the optimal swing

91
00:04:20,366 --> 00:04:24,768
points and raycasts were just really bad at finding those positions because of the resolution

92
00:04:24,768 --> 00:04:25,048
problem.

93
00:04:26,005 --> 00:04:29,766
So a more obvious problem is that Raycast can't hit things that don't have collision.

94
00:04:29,766 --> 00:04:33,588
This was particularly problematic with trees in areas like Central Park, and even if those

95
00:04:33,588 --> 00:04:37,430
objects did have a little bit of collision for the trunk or something like that, we still

96
00:04:37,430 --> 00:04:39,351
weren't going to be able to find them because of the resolution issue.

97
00:04:40,548 --> 00:04:42,230
And finally, as we'll talk about later,

98
00:04:42,230 --> 00:04:44,432
a lot of points require some additional fix-up

99
00:04:44,432 --> 00:04:45,433
after you find that initial point.

100
00:04:45,433 --> 00:04:48,377
Doing these adjustments via collision checks

101
00:04:48,377 --> 00:04:51,160
could prove really costly in a performance hit

102
00:04:51,160 --> 00:04:53,743
when processing dozens of potential attach points.

103
00:04:53,743 --> 00:04:55,865
And they still might not really be what we want.

104
00:04:57,024 --> 00:04:58,905
So with those raycasts coming up short, we moved on.

105
00:04:58,905 --> 00:05:01,446
We decided to use a markup-based approach

106
00:05:01,446 --> 00:05:03,928
by wrapping our buildings in box volumes that approximate

107
00:05:03,928 --> 00:05:04,728
the shape of the building.

108
00:05:04,728 --> 00:05:06,709
We could find those nearby volumes,

109
00:05:06,709 --> 00:05:08,730
process them on a face-by-face basis,

110
00:05:08,730 --> 00:05:11,812
and then only then perform a final raycast on that point

111
00:05:11,812 --> 00:05:15,114
to get their true attach point on the geometry.

112
00:05:15,114 --> 00:05:17,495
But moving to markup provided a number

113
00:05:17,495 --> 00:05:19,996
of advantages that were absent when using raycasts.

114
00:05:20,815 --> 00:05:22,937
First, point collection was really fast.

115
00:05:22,937 --> 00:05:25,700
By using a kind of a cache-friendly sphere database

116
00:05:25,700 --> 00:05:27,562
that was just our data, it significantly

117
00:05:27,562 --> 00:05:28,843
helped with scalability in terms of being

118
00:05:28,843 --> 00:05:30,325
able to have a lot of markup out in the world

119
00:05:30,325 --> 00:05:32,227
and be able to process it quickly.

120
00:05:32,227 --> 00:05:34,189
By using the shape information, we effectively now

121
00:05:34,189 --> 00:05:36,131
had infinite resolution for point placement

122
00:05:36,131 --> 00:05:37,212
on each face of the volume.

123
00:05:37,212 --> 00:05:39,674
This allowed us to easily find edges and corners

124
00:05:39,674 --> 00:05:42,037
and never have to worry about missing smaller objects.

125
00:05:42,904 --> 00:05:44,525
And finally, by using markup, we were

126
00:05:44,525 --> 00:05:46,665
able to afford designers a lot of additional control

127
00:05:46,665 --> 00:05:49,446
over various gameplay aspects, like custom swing parameters

128
00:05:49,446 --> 00:05:51,187
and where you could and couldn't swing.

129
00:05:51,187 --> 00:05:55,288
So the main drawback with markup was placement scalability.

130
00:05:55,288 --> 00:05:57,128
We had a huge world full of things that were

131
00:05:57,128 --> 00:05:58,209
going to require the markup.

132
00:05:58,209 --> 00:06:00,450
And placing all of this by hand and maintaining it

133
00:06:00,450 --> 00:06:01,550
through production as environment

134
00:06:01,550 --> 00:06:03,330
was constantly changing was going

135
00:06:03,330 --> 00:06:06,191
to be an enormous amount of upkeep and potential bugs.

136
00:06:06,191 --> 00:06:08,532
So our solution to that involved a couple of primary tools.

137
00:06:08,532 --> 00:06:10,913
First, we had to handle the buildings.

138
00:06:11,193 --> 00:06:13,673
Fortunately, we were using a system called Houdini

139
00:06:13,673 --> 00:06:16,194
to help us generate the geometry for our environment

140
00:06:16,194 --> 00:06:17,294
out of building blocks.

141
00:06:17,294 --> 00:06:19,534
This software could also then be leveraged

142
00:06:19,534 --> 00:06:22,775
to analyze that geometry and procedurally place volumes

143
00:06:22,775 --> 00:06:24,315
to approximate our building shapes.

144
00:06:24,315 --> 00:06:27,176
For objects outside of Houdini's operation,

145
00:06:27,176 --> 00:06:29,396
we deployed our engine's prefab system.

146
00:06:29,396 --> 00:06:31,577
This bundled up markup with all of those objects

147
00:06:31,577 --> 00:06:33,557
that we'd place, and every time an instance was put down,

148
00:06:33,557 --> 00:06:34,858
it would just bring the markup in with it

149
00:06:34,858 --> 00:06:36,278
so we didn't have to worry about it.

150
00:06:37,444 --> 00:06:39,305
So with our markup now populating the world,

151
00:06:39,305 --> 00:06:41,446
we needed to actually do something kind of useful for it

152
00:06:41,446 --> 00:06:43,047
rather than just stare at it.

153
00:06:43,047 --> 00:06:44,368
And at any point, the immediate area

154
00:06:44,368 --> 00:06:46,349
can be filled with just hundreds of volumes that

155
00:06:46,349 --> 00:06:47,770
are all potential swing points.

156
00:06:47,770 --> 00:06:50,152
And we needed to filter through all that to find the best one.

157
00:06:50,152 --> 00:06:52,553
So in order to pick that final attach point,

158
00:06:52,553 --> 00:06:54,914
we need to start with a reasonable reference

159
00:06:54,914 --> 00:06:56,195
point as our ideal position.

160
00:06:56,894 --> 00:06:59,436
Here we kind of have a top-down view of our hero surrounded

161
00:06:59,436 --> 00:07:00,316
by buildings.

162
00:07:00,316 --> 00:07:02,258
And the player influence over point selection

163
00:07:02,258 --> 00:07:03,459
comes from the input on the left stick.

164
00:07:03,459 --> 00:07:05,820
And as stated before, we want the player thinking only

165
00:07:05,820 --> 00:07:07,222
about where they're going, not specifically

166
00:07:07,222 --> 00:07:08,462
where they're attaching.

167
00:07:08,462 --> 00:07:09,824
So the input direction really just kind of

168
00:07:09,824 --> 00:07:12,085
provides a starting point.

169
00:07:12,085 --> 00:07:14,607
From that input direction, we can then apply an ideal slope

170
00:07:14,607 --> 00:07:16,669
and a line length to transform the input direction

171
00:07:16,669 --> 00:07:19,111
into a position that represents kind of our ideal attach point,

172
00:07:19,111 --> 00:07:21,913
where we would want to go if we had infinite attach

173
00:07:21,913 --> 00:07:22,433
points all over.

174
00:07:23,381 --> 00:07:25,102
And moving back to a top-down view,

175
00:07:25,102 --> 00:07:27,805
we can then use that position to generate two more

176
00:07:27,805 --> 00:07:29,326
points on each face.

177
00:07:29,326 --> 00:07:31,668
First one is the point that's closest to our reference point,

178
00:07:31,668 --> 00:07:34,590
and the next is a raycast point along our ideal line

179
00:07:34,590 --> 00:07:37,353
direction, which is then just clamped to the volume bounds.

180
00:07:38,619 --> 00:07:41,262
So we can then blend between those two points

181
00:07:41,262 --> 00:07:43,705
to get our output point for any situation.

182
00:07:43,705 --> 00:07:45,507
The closest point is most useful when

183
00:07:45,507 --> 00:07:48,031
you want to swing along the face and swing parallel to it,

184
00:07:48,031 --> 00:07:50,794
while the right cast point is most useful when you're

185
00:07:50,794 --> 00:07:52,336
swinging directly at the object.

186
00:07:52,336 --> 00:07:54,478
And then we can just kind of blend between those

187
00:07:54,478 --> 00:07:56,701
based on what your input is relative to the face normal

188
00:07:56,701 --> 00:07:58,163
to get one that's most appropriate.

189
00:07:59,277 --> 00:08:01,078
So now that we have a point, we need

190
00:08:01,078 --> 00:08:04,000
to refine it a little bit in order to make it more effective.

191
00:08:04,000 --> 00:08:06,482
Our blended point can change the slope and the line length

192
00:08:06,482 --> 00:08:08,723
a lot, which can lead to really long flat lines,

193
00:08:08,723 --> 00:08:11,485
short and steep lines, and everything kind of in between.

194
00:08:11,485 --> 00:08:13,707
So we really wanted to try and give the player

195
00:08:13,707 --> 00:08:16,148
a more consistent rhythm with swinging.

196
00:08:16,148 --> 00:08:18,450
And that meant that we needed to try and keep those lines

197
00:08:18,450 --> 00:08:20,151
as consistent as possible.

198
00:08:20,151 --> 00:08:21,612
So we wanted to move things around a little bit

199
00:08:21,612 --> 00:08:22,973
to get closer to the ideal.

200
00:08:23,692 --> 00:08:26,715
So this is an example of shifting the attach point up

201
00:08:26,715 --> 00:08:29,317
just a little bit in order to get closer to that ideal slope,

202
00:08:29,317 --> 00:08:31,719
which had gotten kind of overly flattened by the closest point

203
00:08:31,719 --> 00:08:32,800
calculation.

204
00:08:32,800 --> 00:08:34,362
By moving more towards this ideal slope,

205
00:08:34,362 --> 00:08:36,544
you can see that we prevent the player from having quite

206
00:08:36,544 --> 00:08:39,466
such an excessive drop during the swing, which will then

207
00:08:39,466 --> 00:08:41,448
make it more consistent as they go swing to swing

208
00:08:41,448 --> 00:08:42,469
and more predictable.

209
00:08:43,798 --> 00:08:45,959
So now that we've generated this field of points

210
00:08:45,959 --> 00:08:47,359
across a whole bunch of markup faces,

211
00:08:47,359 --> 00:08:49,360
and we need to actually decide which

212
00:08:49,360 --> 00:08:51,981
one's going to be our swing point for this frame.

213
00:08:51,981 --> 00:08:54,322
So we do this by scoring each of the points

214
00:08:54,322 --> 00:08:55,543
and taking the best one.

215
00:08:55,543 --> 00:08:57,183
Our scoring algorithm is then geared

216
00:08:57,183 --> 00:08:59,524
to fulfill that desire of translating that stick

217
00:08:59,524 --> 00:09:01,845
input to a point that moves us in the desired direction.

218
00:09:02,850 --> 00:09:05,013
So our first scoring element is how the face normal

219
00:09:05,013 --> 00:09:06,356
relates to input direction.

220
00:09:06,356 --> 00:09:08,159
As I said, you're trying to swing parallel

221
00:09:08,159 --> 00:09:11,044
to the faces where possible in this case.

222
00:09:11,044 --> 00:09:13,007
And so the input direction means that the player

223
00:09:13,007 --> 00:09:14,189
will be able to swing along that surface

224
00:09:14,189 --> 00:09:15,070
in the direction they desire.

225
00:09:16,460 --> 00:09:19,202
Now, because corners provide the player the most control,

226
00:09:19,202 --> 00:09:22,624
we do try and snap points to edges when they're nearby.

227
00:09:22,624 --> 00:09:25,566
So we can then use the best normal available

228
00:09:25,566 --> 00:09:27,767
on that entire sweep of the corner

229
00:09:27,767 --> 00:09:30,148
to compare against input for our score calculation.

230
00:09:30,148 --> 00:09:32,049
We can also give corners a bonus when

231
00:09:32,049 --> 00:09:33,410
we're trying to turn if that corner is going

232
00:09:33,410 --> 00:09:34,691
to help us make that turn.

233
00:09:34,691 --> 00:09:36,292
When taking input into account, we

234
00:09:36,292 --> 00:09:38,173
start with the angle between the input direction

235
00:09:38,173 --> 00:09:39,313
and the direction of the attach point,

236
00:09:39,313 --> 00:09:40,514
and then we score that delta.

237
00:09:41,280 --> 00:09:42,901
And for range, we're looking for points

238
00:09:42,901 --> 00:09:45,323
that match our ideal length, and then it just

239
00:09:45,323 --> 00:09:48,164
falls off in either direction as we deviate from that.

240
00:09:48,164 --> 00:09:50,385
And we apply a similar fall-off method for slope

241
00:09:50,385 --> 00:09:52,587
as the angle moves away from our ideal.

242
00:09:52,587 --> 00:09:53,987
And once we have all that together,

243
00:09:53,987 --> 00:09:57,269
we can do a weighted sum, and the highest score

244
00:09:57,269 --> 00:09:57,690
is going to win.

245
00:10:01,578 --> 00:10:05,881
So here you can see it all coming together in game.

246
00:10:05,881 --> 00:10:08,063
The blue boxes are our market volumes,

247
00:10:08,063 --> 00:10:10,705
and you can see a little bit of debug info

248
00:10:10,705 --> 00:10:13,467
about each point's score floating above it

249
00:10:13,467 --> 00:10:15,769
that kind of helps us figure out when we try to debug

250
00:10:15,769 --> 00:10:17,611
why one point is better than another point,

251
00:10:17,611 --> 00:10:20,993
particularly if we didn't want that to be the case,

252
00:10:20,993 --> 00:10:22,915
we can go adjust those weighting values

253
00:10:22,915 --> 00:10:23,936
in order to tune swing to make it

254
00:10:23,936 --> 00:10:25,096
so that we're continuing to get the expected point.

255
00:10:26,147 --> 00:10:30,109
Now that we have our attach point, we can talk about what happens when you're actually

256
00:10:30,109 --> 00:10:30,710
on the line.

257
00:10:30,710 --> 00:10:35,013
As stated, we wanted to have a physics-based system that we modify the results of.

258
00:10:35,013 --> 00:10:38,355
We're going to start with the physics and then proceed to mess with the universe a little

259
00:10:38,355 --> 00:10:38,515
bit.

260
00:10:39,637 --> 00:10:41,918
So the two basic forces involved in the pendulum

261
00:10:41,918 --> 00:10:42,798
are gravity and tension.

262
00:10:42,798 --> 00:10:45,378
As you can see here, the tension is

263
00:10:45,378 --> 00:10:47,739
a factor of line length, angle, and gravity,

264
00:10:47,739 --> 00:10:49,339
all in the direction of the line.

265
00:10:49,339 --> 00:10:50,660
And it's kind of responsible for pulling

266
00:10:50,660 --> 00:10:52,060
that bob of the pendulum in a circle

267
00:10:52,060 --> 00:10:53,780
around the center of the system.

268
00:10:53,780 --> 00:10:56,661
We also break gravity up into its two component vectors

269
00:10:56,661 --> 00:10:58,581
here, one parallel to the line and one perpendicular.

270
00:10:58,581 --> 00:11:01,062
The perpendicular portion represents

271
00:11:01,062 --> 00:11:02,082
that kind of restoring force.

272
00:11:02,082 --> 00:11:03,662
It's the thing that makes the pendulum

273
00:11:03,662 --> 00:11:04,603
oscillate back and forth.

274
00:11:05,303 --> 00:11:07,083
And the parallel portion is what's left.

275
00:11:07,083 --> 00:11:08,463
And you'll see in our calculations,

276
00:11:08,463 --> 00:11:10,404
we can actually cancel that out with part of tension

277
00:11:10,404 --> 00:11:13,224
to simplify the math a little bit, which we do here.

278
00:11:13,224 --> 00:11:15,525
So when actually calculating this in code,

279
00:11:15,525 --> 00:11:16,865
we internally just set the mass to one

280
00:11:16,865 --> 00:11:18,745
since we're not really dealing with a variable mass system,

281
00:11:18,745 --> 00:11:20,986
and we can tune gravity how we want to.

282
00:11:20,986 --> 00:11:22,526
And after a bit of simplification,

283
00:11:22,526 --> 00:11:24,606
we apply the remaining forces of tension

284
00:11:24,606 --> 00:11:27,227
and perpendicular gravity to our velocity.

285
00:11:27,227 --> 00:11:28,687
Also, just for a little bit more accuracy,

286
00:11:28,687 --> 00:11:30,087
we do four iterations each frame

287
00:11:30,087 --> 00:11:32,288
to run the entire thing at about 120 hertz.

288
00:11:33,718 --> 00:11:36,340
So when we're talking about how we wanted swinging to feel,

289
00:11:36,340 --> 00:11:37,740
the number one thing that came up

290
00:11:37,740 --> 00:11:39,982
was that swings needed to feel fluid.

291
00:11:39,982 --> 00:11:41,542
This led to a couple of rules that

292
00:11:41,542 --> 00:11:43,763
drove a variety of other elements

293
00:11:43,763 --> 00:11:44,644
within the swing system.

294
00:11:44,644 --> 00:11:47,185
First, we wanted to avoid slack lines.

295
00:11:47,185 --> 00:11:50,047
We wanted to keep the player feeling like they were swinging,

296
00:11:50,047 --> 00:11:51,287
not falling.

297
00:11:51,287 --> 00:11:53,208
So by keeping the line taut at all times,

298
00:11:53,208 --> 00:11:55,549
it gave the player a much more predictable experience

299
00:11:55,549 --> 00:11:57,790
and prevented kind of bounciness and sudden change

300
00:11:57,790 --> 00:12:01,052
in direction as that slack line goes taut from a free fall.

301
00:12:02,049 --> 00:12:05,032
And this led to the need that once a line is shortened,

302
00:12:05,032 --> 00:12:06,974
it generally stays that length.

303
00:12:06,974 --> 00:12:09,517
We do look for opportunities to try and kind of restore

304
00:12:09,517 --> 00:12:11,740
lost line length when possible, but doing so too quickly

305
00:12:11,740 --> 00:12:13,743
feels really wrong to people.

306
00:12:13,743 --> 00:12:15,324
And so we had to be really careful to do that

307
00:12:15,324 --> 00:12:15,845
with caution.

308
00:12:17,057 --> 00:12:19,038
So our first goal on getting a new line

309
00:12:19,038 --> 00:12:22,381
is then giving the player a good experience of just getting

310
00:12:22,381 --> 00:12:23,182
into the swing.

311
00:12:23,182 --> 00:12:25,964
But the initial setup poses an immediate challenge.

312
00:12:25,964 --> 00:12:28,986
The incoming velocity is almost always very, very different

313
00:12:28,986 --> 00:12:31,208
than the velocity that's going to be tangent to the swing arc.

314
00:12:31,208 --> 00:12:32,750
And we don't want to just snap it,

315
00:12:32,750 --> 00:12:34,131
because that's going to feel like a sudden change

316
00:12:34,131 --> 00:12:36,373
in direction and just give players whiplash.

317
00:12:37,141 --> 00:12:40,684
So, however, if we just let the simulation play out as is,

318
00:12:40,684 --> 00:12:43,027
you get something that looks a bit like this.

319
00:12:43,027 --> 00:12:44,828
Because of our rule that we don't allow the line

320
00:12:44,828 --> 00:12:46,390
to lengthen again, the velocity running

321
00:12:46,390 --> 00:12:47,651
into the center of the swing arc

322
00:12:47,651 --> 00:12:48,952
shortens the line up considerably,

323
00:12:48,952 --> 00:12:52,376
and this can result in losing the entirety of the swing's dip

324
00:12:52,376 --> 00:12:54,518
as well as causing a really rapid acceleration

325
00:12:54,518 --> 00:12:57,040
in angular velocity that's hard for players to react to.

326
00:12:57,040 --> 00:12:58,281
They just get shot up in the air

327
00:12:58,281 --> 00:12:59,202
without knowing what happened.

328
00:13:00,332 --> 00:13:03,113
So to improve, we blend the incoming velocity

329
00:13:03,113 --> 00:13:05,395
towards the tangent direction of the swing arc

330
00:13:05,395 --> 00:13:06,976
a little bit on each iteration.

331
00:13:06,976 --> 00:13:09,037
This helps maintain healthier line lengths

332
00:13:09,037 --> 00:13:11,238
and improves the expected behavior in the angular

333
00:13:11,238 --> 00:13:12,219
velocity.

334
00:13:12,219 --> 00:13:14,620
And the player can also now feel a lot more significant drop

335
00:13:14,620 --> 00:13:16,722
in the swing arc compared to the previous motion path.

336
00:13:17,828 --> 00:13:19,609
So now that they're into the swing,

337
00:13:19,609 --> 00:13:21,311
the player is going to want to further mess around

338
00:13:21,311 --> 00:13:24,333
with their motion in order to move themselves around.

339
00:13:24,333 --> 00:13:26,795
So we do this with just a simple accelerated rotation

340
00:13:26,795 --> 00:13:28,237
on the total velocity.

341
00:13:28,237 --> 00:13:30,439
We scale that turn speed based on your max,

342
00:13:30,439 --> 00:13:32,220
we scale that turn speed based on where you are

343
00:13:32,220 --> 00:13:34,762
in the swing arc, so you get more control at the trough,

344
00:13:34,762 --> 00:13:36,864
less up at the apexes, so you kind of come to a stall

345
00:13:36,864 --> 00:13:38,285
that feels about right.

346
00:13:38,285 --> 00:13:39,947
And we can also adjust the turn speed based on

347
00:13:39,947 --> 00:13:42,108
whether you're turning with the attach point

348
00:13:42,108 --> 00:13:43,349
or away from the attach point.

349
00:13:44,770 --> 00:13:47,172
So when it comes to managing speed while on the line,

350
00:13:47,172 --> 00:13:49,594
things are going to vary a lot from swing to swing.

351
00:13:49,594 --> 00:13:52,896
The two biggest influences on speed for any given swing

352
00:13:52,896 --> 00:13:54,458
will be the amount of speed the hero brings in,

353
00:13:54,458 --> 00:13:56,599
as well as the gravity that's applied

354
00:13:56,599 --> 00:13:58,861
during the swing that's going to accelerate them

355
00:13:58,861 --> 00:14:00,002
throughout the swing arc.

356
00:14:00,002 --> 00:14:02,304
So due to streaming considerations,

357
00:14:02,304 --> 00:14:05,527
we also needed to stay below about a 10 second average speed

358
00:14:05,527 --> 00:14:08,069
of 30 meters per second so that we could avoid loading stalls

359
00:14:08,069 --> 00:14:09,730
and just get everything in as we're

360
00:14:09,730 --> 00:14:10,671
hurtling through the world.

361
00:14:12,212 --> 00:14:15,732
So we start by deciding what our horizontal terminal velocity

362
00:14:15,732 --> 00:14:17,473
is for any given swing.

363
00:14:17,473 --> 00:14:20,354
As a baseline, this is done by translating our fall speed

364
00:14:20,354 --> 00:14:22,994
into a max speed while never letting it actually

365
00:14:22,994 --> 00:14:25,055
slow you down so we don't cut your incoming speed at all.

366
00:14:25,055 --> 00:14:27,516
So this ends up feeling pretty natural to players

367
00:14:27,516 --> 00:14:30,296
because they're basically using gravity to help generate speed.

368
00:14:30,296 --> 00:14:32,237
And it helps with streaming because in order

369
00:14:32,237 --> 00:14:33,637
to generate fall speed, they have

370
00:14:33,637 --> 00:14:35,358
to be just falling for a while, which

371
00:14:35,358 --> 00:14:36,378
is going to have drag, which is going

372
00:14:36,378 --> 00:14:37,838
to slow their horizontal speed, which

373
00:14:37,838 --> 00:14:38,678
helps our average speed.

374
00:14:39,259 --> 00:14:42,925
So, once they're attached, we let normal physics accelerate them up to the max speed, and we

375
00:14:42,925 --> 00:14:43,346
go from there.

376
00:14:44,605 --> 00:14:45,926
But to enforce that terminal velocity,

377
00:14:45,926 --> 00:14:47,687
we do kind of a little bit of a weird thing.

378
00:14:47,687 --> 00:14:49,108
We only cap the hero's horizontal speed.

379
00:14:49,108 --> 00:14:51,729
And this can have a little bit of an odd side effect

380
00:14:51,729 --> 00:14:54,190
in some cases, where you're actually slowing down

381
00:14:54,190 --> 00:14:56,372
in 3D through the downswing,

382
00:14:56,372 --> 00:14:58,213
but it does help you get through these really long

383
00:14:58,213 --> 00:15:00,194
swing arcs a lot faster, get down to the trough,

384
00:15:00,194 --> 00:15:02,355
get down to where you wanna be in a better way.

385
00:15:02,355 --> 00:15:04,416
And the slowdown doesn't come into play too often,

386
00:15:04,416 --> 00:15:06,717
and most players are completely unaware it's happening

387
00:15:06,717 --> 00:15:08,418
due to a lot of other speed cues going on,

388
00:15:08,418 --> 00:15:10,459
like camera rotation, environment motion,

389
00:15:10,459 --> 00:15:12,100
motion blur, screen effects, everything else

390
00:15:12,100 --> 00:15:13,941
that we're just throwing at them to try and sell.

391
00:15:14,361 --> 00:15:16,342
sell that speed.

392
00:15:16,342 --> 00:15:18,783
Now, on the other side of the swing, on the upswing,

393
00:15:18,783 --> 00:15:20,823
gravity is going to be slowing you down.

394
00:15:20,823 --> 00:15:22,164
However, we do have a few things

395
00:15:22,164 --> 00:15:24,925
that we wanted to take into account on this side of the swing.

396
00:15:24,925 --> 00:15:26,305
First, we want players to feel like

397
00:15:26,305 --> 00:15:28,066
gravity is appropriately slowing them down,

398
00:15:28,066 --> 00:15:30,527
so it needs to feel physically correct and natural.

399
00:15:30,527 --> 00:15:32,687
But, with line lengths being highly variable,

400
00:15:32,687 --> 00:15:34,548
it creates an inconsistent timing

401
00:15:34,548 --> 00:15:37,209
to the various release levels, something we wanted

402
00:15:37,209 --> 00:15:39,049
to try and close the gap on.

403
00:15:39,830 --> 00:15:43,514
So we also don't want to slow the player down too much when they're near the trough.

404
00:15:43,514 --> 00:15:46,076
We want to let them keep that hard-earned speed just a little bit longer

405
00:15:46,076 --> 00:15:47,958
so that they can use it to fling themselves through the world.

406
00:15:48,750 --> 00:15:51,551
And from there, we account for all this

407
00:15:51,551 --> 00:15:54,172
by implementing a variable gravity upswing.

408
00:15:54,172 --> 00:15:55,612
At any given point on the upswing,

409
00:15:55,612 --> 00:15:57,252
your gravity is going to be determined

410
00:15:57,252 --> 00:15:59,113
by a combination of your current speed

411
00:15:59,113 --> 00:16:01,393
and where you are on the swing arc.

412
00:16:01,393 --> 00:16:03,634
What this ends up doing is really helping swing timing

413
00:16:03,634 --> 00:16:06,435
be a lot more consistent and allowing more swings

414
00:16:06,435 --> 00:16:08,235
to move through the full range of release points.

415
00:16:08,235 --> 00:16:11,076
So the player ends up having a much more predictable time

416
00:16:11,076 --> 00:16:13,616
and can get those high releases even if they're not necessarily

417
00:16:13,616 --> 00:16:15,577
moving that fast.

418
00:16:15,577 --> 00:16:15,737
So.

419
00:16:16,615 --> 00:16:22,160
With the basics all now in place, I want to talk a bit about our experience of refining the swinging mechanics over the course of production.

420
00:16:22,160 --> 00:16:26,383
Again, we go back to our usability-driven, iterative approach, and per our initial goals,

421
00:16:26,383 --> 00:16:30,707
we really wanted the player to feel the momentum in physics, but we also wanted swinging to be accessible.

422
00:16:31,751 --> 00:16:34,212
So usability testing proves a critical element

423
00:16:34,212 --> 00:16:35,873
in iterating on this accessibility.

424
00:16:35,873 --> 00:16:38,033
This is because developers quickly become

425
00:16:38,033 --> 00:16:40,274
their own worst testers, and I say this all the time

426
00:16:40,274 --> 00:16:42,415
to people that I work with, because basically,

427
00:16:42,415 --> 00:16:44,196
we just know too much about how things work,

428
00:16:44,196 --> 00:16:46,517
and we're generally really quick to forgive ourselves

429
00:16:46,517 --> 00:16:48,057
because our code is amazing,

430
00:16:48,057 --> 00:16:49,558
and shame on you for suggesting otherwise.

431
00:16:51,930 --> 00:16:54,872
So, we also tend to play the game in a very particular way,

432
00:16:54,872 --> 00:16:56,433
the way we designed it.

433
00:16:56,433 --> 00:16:58,214
Real players, however, will interact with the game

434
00:16:58,214 --> 00:17:01,236
in a number of unexpected and sometimes confounding ways,

435
00:17:01,236 --> 00:17:02,376
stressing elements of the system

436
00:17:02,376 --> 00:17:04,677
that the developer may never encounter.

437
00:17:04,677 --> 00:17:07,159
So finally, you need to make sure

438
00:17:07,159 --> 00:17:09,220
functionality lines up with player expectations.

439
00:17:09,220 --> 00:17:12,722
As a developer, we may have a perfectly rational explanation

440
00:17:12,722 --> 00:17:14,903
for why something works the way it does put to a player,

441
00:17:14,903 --> 00:17:17,084
it just seems weird, broken, confusing,

442
00:17:17,084 --> 00:17:18,805
or just not any fun whatsoever.

443
00:17:19,977 --> 00:17:21,118
So what did we find?

444
00:17:21,118 --> 00:17:23,380
Well, players suck at managing physics.

445
00:17:23,380 --> 00:17:26,543
So forces will often act against their desires,

446
00:17:26,543 --> 00:17:28,565
attach points aren't really directly player-driven,

447
00:17:28,565 --> 00:17:30,366
leading to a lot of variability,

448
00:17:30,366 --> 00:17:32,448
and world geometry is complex and difficult

449
00:17:32,448 --> 00:17:34,310
for many players to effectively navigate

450
00:17:34,310 --> 00:17:35,811
while tethered to an attach point.

451
00:17:35,811 --> 00:17:38,454
The end result was that players felt

452
00:17:38,454 --> 00:17:40,856
that they kind of lacked control over the in-game results.

453
00:17:40,856 --> 00:17:43,779
This was despite everything working just as intended

454
00:17:43,779 --> 00:17:45,440
when we made the initial version of Swinging.

455
00:17:46,521 --> 00:17:48,162
So how do we approach solving this problem?

456
00:17:48,162 --> 00:17:50,204
We injected a number of assists into swinging

457
00:17:50,204 --> 00:17:51,886
to help smooth out the experience,

458
00:17:51,886 --> 00:17:53,707
giving them a few less things to worry about

459
00:17:53,707 --> 00:17:55,769
and moving the system's behavior to be closer

460
00:17:55,769 --> 00:17:58,852
to the player expectations wherever possible.

461
00:17:58,852 --> 00:18:01,294
Our goal was to keep these as invisible

462
00:18:01,294 --> 00:18:03,216
to the player as we could, and we found

463
00:18:03,216 --> 00:18:05,678
that if you deviated too far from real physics,

464
00:18:05,678 --> 00:18:08,120
players would notice, and often they would react

465
00:18:08,120 --> 00:18:09,081
pretty negatively to it.

466
00:18:10,200 --> 00:18:12,481
So our first major usability problem

467
00:18:12,481 --> 00:18:15,303
was that players felt like it was basically impossible

468
00:18:15,303 --> 00:18:16,584
to swing in a straight line.

469
00:18:16,584 --> 00:18:19,086
The result of the simulation was creating a mismatch

470
00:18:19,086 --> 00:18:22,308
between the player's input intent and the character motion.

471
00:18:22,308 --> 00:18:24,470
And the results were confusing and frustrating

472
00:18:24,470 --> 00:18:25,070
a lot of our players.

473
00:18:25,070 --> 00:18:28,393
So the reason this was happening is that forces

474
00:18:28,393 --> 00:18:30,574
were conspiring to move the character in a way

475
00:18:30,574 --> 00:18:32,416
that it would settle underneath the attach point,

476
00:18:32,416 --> 00:18:33,857
as you might imagine with a normal pendulum.

477
00:18:34,467 --> 00:18:37,950
The tension force has this component that moves towards the attach point and gravity

478
00:18:37,950 --> 00:18:39,991
just reinforces that to continue to pull you down.

479
00:18:39,991 --> 00:18:45,115
So in this video you'll be able to see what happens when the tension forces are in full

480
00:18:45,115 --> 00:18:45,595
effect.

481
00:18:46,550 --> 00:18:49,833
The player is going to be trying to swing straight down the middle of the street here,

482
00:18:49,833 --> 00:18:52,816
but they're consistently getting pulled sideways towards the attach point.

483
00:18:52,816 --> 00:18:55,459
When they then try and counter-steer to get back to the middle,

484
00:18:55,459 --> 00:18:58,602
their next attach point goes on the other side of the street,

485
00:18:58,602 --> 00:19:00,203
and it just increases frustration.

486
00:19:00,203 --> 00:19:02,346
So to top all this off, that zigzagging motion

487
00:19:02,346 --> 00:19:05,409
also slows them down for their straight line speed,

488
00:19:05,409 --> 00:19:08,852
and they just feel like they can't really build up that momentum that they're looking for.

489
00:19:11,872 --> 00:19:13,293
So, how do you fight gravity?

490
00:19:13,293 --> 00:19:14,794
Well, you cheat.

491
00:19:14,794 --> 00:19:18,456
So we move the simulation pivot away from the wall

492
00:19:18,456 --> 00:19:20,797
into a position that will help us swing straighter

493
00:19:20,797 --> 00:19:22,839
while leaving the visible attach point on the wall.

494
00:19:22,839 --> 00:19:26,861
We then can blend that pivot position back over time

495
00:19:26,861 --> 00:19:28,182
or when the player is turning.

496
00:19:28,182 --> 00:19:30,924
This makes sure that turns do pivot on the right place

497
00:19:30,924 --> 00:19:33,406
and on the visible place, and that if you settle

498
00:19:33,406 --> 00:19:34,967
underneath the attach point, you're settling

499
00:19:34,967 --> 00:19:37,328
under the visual one, not the one that we've moved away.

500
00:19:37,908 --> 00:19:39,829
This motion was detectable to players,

501
00:19:39,829 --> 00:19:41,390
particularly when we A-B tested it,

502
00:19:41,390 --> 00:19:43,330
but we found that most Veldt it actually worked more

503
00:19:43,330 --> 00:19:47,792
as they expected, aligning their input desire to the results.

504
00:19:47,792 --> 00:19:49,332
In this video, you'll see that pivot tweaking

505
00:19:49,332 --> 00:19:50,312
is going to be fully active.

506
00:19:50,312 --> 00:19:53,514
The player can maintain a lot more consistent center line

507
00:19:53,514 --> 00:19:55,654
and build speed a lot more easily.

508
00:19:55,654 --> 00:19:57,795
Their directional intent is transferred

509
00:19:57,795 --> 00:20:04,597
a lot more cleanly to motion.

510
00:20:05,609 --> 00:20:07,630
The next usability problem was that players

511
00:20:07,630 --> 00:20:09,771
felt they weren't really able to get a swing line when

512
00:20:09,771 --> 00:20:12,912
their body was at or near the top of a building.

513
00:20:12,912 --> 00:20:15,534
This was happening because we required an attach point

514
00:20:15,534 --> 00:20:17,074
to be just a minimum height above you.

515
00:20:17,074 --> 00:20:19,796
And we do that because it prevents you from just flying

516
00:20:19,796 --> 00:20:21,336
over the pivot point or requiring

517
00:20:21,336 --> 00:20:23,517
that we just slam you straight down in order

518
00:20:23,517 --> 00:20:24,738
to get you under it.

519
00:20:24,738 --> 00:20:26,079
However, this rule was completely

520
00:20:26,079 --> 00:20:26,959
hidden from the player.

521
00:20:26,959 --> 00:20:29,060
And there was not really any reason for them

522
00:20:29,060 --> 00:20:30,861
to expect or anticipate that it was there.

523
00:20:32,002 --> 00:20:39,631
An additional reason this can occur is that players' perception of the character position for the world is pretty murky when they're in the air and all the buildings are pretty far off to the side.

524
00:20:39,631 --> 00:20:44,217
And players are just frankly pretty impatient when falling and spamming that R2 button and trying to get a swing line.

525
00:20:45,272 --> 00:20:45,972
So what do we do?

526
00:20:45,972 --> 00:20:47,834
Well, once a cheater, always a cheater.

527
00:20:47,834 --> 00:20:50,356
We secretly allowed the simulation attach point

528
00:20:50,356 --> 00:20:52,037
to rise above the building edge.

529
00:20:52,037 --> 00:20:53,938
This would raise the valid attach point ceiling

530
00:20:53,938 --> 00:20:56,000
and let people attach a little bit sooner.

531
00:20:56,000 --> 00:20:57,501
It also had this nice side effect

532
00:20:57,501 --> 00:20:59,723
of improving lines that were previously good,

533
00:20:59,723 --> 00:21:01,845
but not really all that great.

534
00:21:01,845 --> 00:21:04,207
And so player awareness of this was actually almost zero.

535
00:21:04,207 --> 00:21:05,568
It's actually pretty hard to notice

536
00:21:05,568 --> 00:21:07,609
a vertical shift in the pivot point

537
00:21:07,609 --> 00:21:08,790
when you're swinging underneath it.

538
00:21:10,000 --> 00:21:13,302
So our next usability problem was our game director special,

539
00:21:13,302 --> 00:21:15,284
which is that players were often oversteering

540
00:21:15,284 --> 00:21:16,385
when trying to turn and clipping

541
00:21:16,385 --> 00:21:17,906
into the edges of buildings.

542
00:21:18,758 --> 00:21:21,580
And so our solution here is to do a number of collision tests

543
00:21:21,580 --> 00:21:23,741
to scan the world for problem cases.

544
00:21:23,741 --> 00:21:25,182
We'd send a cone of checks forward,

545
00:21:25,182 --> 00:21:26,483
looking for things that we might run into,

546
00:21:26,483 --> 00:21:27,844
so that we can nudge you just a little

547
00:21:27,844 --> 00:21:29,145
to the left or the right.

548
00:21:29,145 --> 00:21:30,586
And we would also send a series of checks

549
00:21:30,586 --> 00:21:32,067
kind of forward and sideways,

550
00:21:32,067 --> 00:21:33,948
looking for gaps in upcoming walls.

551
00:21:33,948 --> 00:21:36,089
This gave us a clue that we might want to

552
00:21:36,089 --> 00:21:37,630
dampen your steering values a little bit,

553
00:21:37,630 --> 00:21:40,392
so that you don't oversteer when trying to make a turn

554
00:21:40,392 --> 00:21:41,733
and slam yourself into the wall,

555
00:21:41,733 --> 00:21:45,035
instead of clearing that wall and swinging into the gap.

556
00:21:45,575 --> 00:21:49,857
So these two things combined to give players a hugely empowering feeling of just made it

557
00:21:49,857 --> 00:21:54,659
without really noticing that we were the ones letting them make it.

558
00:21:54,659 --> 00:21:57,641
So yet another consistent problem was that players would often have a line that was just

559
00:21:57,641 --> 00:22:00,662
long enough to smack them right into the top of a building that they thought they were

560
00:22:00,662 --> 00:22:01,722
going to clear.

561
00:22:01,722 --> 00:22:05,264
And this was kind of particularly bad because players, as we've said, didn't have any control

562
00:22:05,264 --> 00:22:08,285
over line length, so they were quick to blame us for all their problems.

563
00:22:09,450 --> 00:22:11,794
So the solution, then, is to just shorten the line,

564
00:22:11,794 --> 00:22:14,579
slowly but dynamically, in order to get it just short enough

565
00:22:14,579 --> 00:22:15,621
to clear that building.

566
00:22:15,621 --> 00:22:18,265
So we'd use collision to scan ahead for the maximum height,

567
00:22:18,265 --> 00:22:20,489
and then we would slowly raise the player through the swing

568
00:22:20,489 --> 00:22:22,793
until the new line length was just short enough

569
00:22:22,793 --> 00:22:23,554
to clear that building.

570
00:22:25,299 --> 00:22:26,640
So one final element to talk about

571
00:22:26,640 --> 00:22:29,041
is how we shorten the line to keep players above the ground.

572
00:22:29,041 --> 00:22:31,783
So we do this because our ground and rooftops

573
00:22:31,783 --> 00:22:34,265
are so littered with cars and props and pedestrians

574
00:22:34,265 --> 00:22:36,626
and squirrels and other things that trying to navigate

575
00:22:36,626 --> 00:22:38,967
and swing through all that would be basically impossible.

576
00:22:38,967 --> 00:22:40,949
We didn't want players face-planing

577
00:22:40,949 --> 00:22:41,989
into the ground all the time,

578
00:22:41,989 --> 00:22:43,270
and we also didn't want them becoming

579
00:22:43,270 --> 00:22:44,511
just a bug on a windshield.

580
00:22:44,931 --> 00:22:48,157
So, similar to clearing buildings, we'd use collision to get the ground tight and then

581
00:22:48,157 --> 00:22:52,324
we'd scale that vertical motion on their downswing in order to keep them above the ground and

582
00:22:52,324 --> 00:22:55,750
have kind of a swing floor so that they could get that nice street sweeping feel.

583
00:22:57,378 --> 00:22:59,159
So once a player's time on the line is complete,

584
00:22:59,159 --> 00:23:01,520
it's time for what ends up being one of the most satisfying

585
00:23:01,520 --> 00:23:03,560
elements of swinging, flinging yourself off the line

586
00:23:03,560 --> 00:23:05,120
across the world with reckless abandon.

587
00:23:05,120 --> 00:23:08,461
So when doing so, we have two sets of data for letting go.

588
00:23:08,461 --> 00:23:10,702
We have releasing and jumping.

589
00:23:10,702 --> 00:23:14,243
Jumping gives you a lot more acrobatic motion, a lot more

590
00:23:14,243 --> 00:23:15,703
height and more speed.

591
00:23:15,703 --> 00:23:18,004
But just simple releasing has simpler animations

592
00:23:18,004 --> 00:23:20,304
and allows you to take a follow-up action more quickly.

593
00:23:20,304 --> 00:23:22,445
So players get to choose between the two based

594
00:23:22,445 --> 00:23:23,445
on what they're trying to do.

595
00:23:24,406 --> 00:23:26,630
One of the really nice gameplay features of swinging

596
00:23:26,630 --> 00:23:28,974
when it comes to these releases is the inherent analog

597
00:23:28,974 --> 00:23:32,480
nature of how release points translate into exit direction.

598
00:23:32,480 --> 00:23:35,005
So a player can choose to release low to get more speed

599
00:23:35,005 --> 00:23:37,169
or hold on just a little bit longer to get more height.

600
00:23:38,477 --> 00:23:40,417
Now our first approach to swing releases

601
00:23:40,417 --> 00:23:42,878
was very metric driven, something that was totally sane

602
00:23:42,878 --> 00:23:45,359
based on Insomniac's platforming history.

603
00:23:45,359 --> 00:23:46,740
So we defined a desired jump height

604
00:23:46,740 --> 00:23:48,581
and a time to peak for various release points

605
00:23:48,581 --> 00:23:49,841
and speeds along the swing arc,

606
00:23:49,841 --> 00:23:53,983
and then kind of blend those values from those key points

607
00:23:53,983 --> 00:23:55,863
to get one for any release point.

608
00:23:55,863 --> 00:23:58,564
The goal was to make jumps feel predictable and consistent

609
00:23:58,564 --> 00:23:59,705
so that players could plan ahead

610
00:23:59,705 --> 00:24:00,665
and get their next move going.

611
00:24:02,062 --> 00:24:03,602
We had this model for about two years,

612
00:24:03,602 --> 00:24:05,824
and we were getting mostly positive feedback on it.

613
00:24:05,824 --> 00:24:08,585
But there was always this kind of undercurrent pointing

614
00:24:08,585 --> 00:24:10,446
at a lack of player satisfaction.

615
00:24:10,446 --> 00:24:11,867
Players felt like jumps were too heavy

616
00:24:11,867 --> 00:24:13,668
and that their momentum on the swing line

617
00:24:13,668 --> 00:24:15,409
wasn't really translating to their jumps.

618
00:24:15,409 --> 00:24:17,570
This was because the metric-driven approach

619
00:24:17,570 --> 00:24:19,671
was changing gravity significantly

620
00:24:19,671 --> 00:24:23,133
for any given release point based on player speed

621
00:24:23,133 --> 00:24:25,054
to hit that jump height target that we had set.

622
00:24:25,615 --> 00:24:28,135
Instead of feeling really rewarding with an expected amount of fling,

623
00:24:28,135 --> 00:24:30,376
players' kind of physics feel was being violated,

624
00:24:30,376 --> 00:24:32,797
and they felt that they were being penalized somehow.

625
00:24:32,797 --> 00:24:36,558
We had this model in for the helicopter chase demo in 2017,

626
00:24:36,558 --> 00:24:38,698
when a lot of people online were saying,

627
00:24:38,698 --> 00:24:40,659
oh, the swinging looks slow.

628
00:24:40,659 --> 00:24:43,280
And so part of that was this kind of heaviness to the swing...

629
00:24:43,280 --> 00:24:45,000
excuse me, to the swing jumps.

630
00:24:45,901 --> 00:24:49,366
So to fix this, we moved to a more free release model

631
00:24:49,366 --> 00:24:51,269
that let go of all those controlling metrics

632
00:24:51,269 --> 00:24:54,013
in order to keep a fixed gravity for each release point.

633
00:24:54,013 --> 00:24:56,036
This was the only design factor into the jump,

634
00:24:56,036 --> 00:24:58,620
other than your velocity on the swing line,

635
00:24:58,620 --> 00:25:00,362
and as we wanted to remove anything else

636
00:25:00,362 --> 00:25:01,604
that was gonna feel artificial.

637
00:25:02,321 --> 00:25:04,963
So once implemented, this change created a much more

638
00:25:04,963 --> 00:25:07,285
natural translation of swing speed to jump size

639
00:25:07,285 --> 00:25:09,928
that better matched player expectation.

640
00:25:09,928 --> 00:25:12,109
We saw an immediate increase in fun factor

641
00:25:12,109 --> 00:25:13,831
as players were now able to fling themselves

642
00:25:13,831 --> 00:25:15,572
across the world with just abandon,

643
00:25:15,572 --> 00:25:18,395
which led to a greatly increased sense of speed and joy

644
00:25:18,395 --> 00:25:19,476
and just general cohesiveness

645
00:25:19,476 --> 00:25:22,318
of the entire swinging experience.

646
00:25:22,679 --> 00:25:25,440
So stepping away from the simulation side for a minute,

647
00:25:25,440 --> 00:25:26,801
I want to talk just a little bit about how

648
00:25:26,801 --> 00:25:29,683
the animation for swinging is implemented on the code side.

649
00:25:29,683 --> 00:25:31,964
So it's mostly going to be about the mechanics of how

650
00:25:31,964 --> 00:25:34,646
we pick animations to play and then adjust them to more

651
00:25:34,646 --> 00:25:36,587
accurately represent the underlying simulation.

652
00:25:37,671 --> 00:25:39,412
So when we first started talking about swinging,

653
00:25:39,412 --> 00:25:41,032
the gameplay and animation groups

654
00:25:41,032 --> 00:25:43,713
laid out some high-level goals for how we wanted the animation

655
00:25:43,713 --> 00:25:44,673
to look and feel.

656
00:25:44,673 --> 00:25:46,974
This included having fluid animation

657
00:25:46,974 --> 00:25:48,374
over the course of the swing arc,

658
00:25:48,374 --> 00:25:50,895
having a clean entry animation from our air pose

659
00:25:50,895 --> 00:25:52,636
through the sling and into the swing.

660
00:25:52,636 --> 00:25:55,457
The character's body, obviously, wanted to align to the web line

661
00:25:55,457 --> 00:25:56,657
so that it felt right.

662
00:25:56,657 --> 00:25:59,198
And we needed to have this kind of well-timed kick

663
00:25:59,198 --> 00:26:01,939
at the trough in order to sell momentum and for a player

664
00:26:01,939 --> 00:26:03,880
cue as to where they were in the swing arc.

665
00:26:05,036 --> 00:26:07,539
So our first iteration of animating the swing,

666
00:26:07,539 --> 00:26:09,722
we approached the seamless animation through the swing arc

667
00:26:09,722 --> 00:26:11,985
by actually just using a single animation.

668
00:26:11,985 --> 00:26:14,127
The animator created an on-the-line animation

669
00:26:14,127 --> 00:26:15,749
that started at the drop horizon

670
00:26:15,749 --> 00:26:18,232
and went all the way through to the apex horizon.

671
00:26:18,232 --> 00:26:20,575
In code, we would then drive the animation's time

672
00:26:20,575 --> 00:26:23,178
based on where the player was in the swing arc

673
00:26:23,178 --> 00:26:24,019
for any given frame.

674
00:26:25,258 --> 00:26:27,059
So in order to get our clean entry animations,

675
00:26:27,059 --> 00:26:29,420
we created separate swing intro animations

676
00:26:29,420 --> 00:26:31,540
for different points along the swing arc.

677
00:26:31,540 --> 00:26:34,021
These animations would end pose matched

678
00:26:34,021 --> 00:26:35,062
with the full swing animation,

679
00:26:35,062 --> 00:26:37,542
so that the blend to the swing would be seamless.

680
00:26:37,542 --> 00:26:38,783
And when a player began a swing,

681
00:26:38,783 --> 00:26:42,224
we would calculate where they were in the swing arc

682
00:26:42,224 --> 00:26:44,145
and blend between those different kind of...

683
00:26:44,972 --> 00:26:47,233
pointed animations in order to get one specifically

684
00:26:47,233 --> 00:26:48,313
for that angle.

685
00:26:48,313 --> 00:26:50,534
We would then continue to dynamically blend

686
00:26:50,534 --> 00:26:53,455
that value during the entirety of that intro animation

687
00:26:53,455 --> 00:26:54,756
so that we would get a nice match

688
00:26:54,756 --> 00:26:56,937
for the final pose of the swing as they go into that swing

689
00:26:56,937 --> 00:26:57,297
animation.

690
00:26:57,297 --> 00:27:00,979
In order to get the body to align without having

691
00:27:00,979 --> 00:27:03,060
to make duplicate swing arc animations,

692
00:27:03,060 --> 00:27:04,800
we then deployed partial animations

693
00:27:04,800 --> 00:27:07,081
to just kind of adjust the final body angle.

694
00:27:07,081 --> 00:27:09,242
We used this on both the body to go side to side,

695
00:27:09,242 --> 00:27:10,943
as well as the arms for kind of a final fix up

696
00:27:10,943 --> 00:27:12,684
when those weren't matching.

697
00:27:13,875 --> 00:27:16,896
So after iterating on this model for most of production,

698
00:27:16,896 --> 00:27:19,317
we had some things that worked just as expected.

699
00:27:19,317 --> 00:27:21,058
These included the entry animation system

700
00:27:21,058 --> 00:27:22,198
working really, really well.

701
00:27:22,198 --> 00:27:23,839
It allowed smooth entry and timing

702
00:27:23,839 --> 00:27:25,640
into the swing animation.

703
00:27:25,640 --> 00:27:27,660
And our adjustment partials did a really good job

704
00:27:27,660 --> 00:27:29,321
at aligning the character to the swing line

705
00:27:29,321 --> 00:27:32,602
with minimal amount of additional animation required.

706
00:27:32,602 --> 00:27:35,663
Finally, the animation through the swing arc was fluid.

707
00:27:35,864 --> 00:27:37,686
But the system presented a few limitations

708
00:27:37,686 --> 00:27:39,709
that were capping the animator's creativity.

709
00:27:39,709 --> 00:27:42,013
First, we had really limited variability in the swing.

710
00:27:42,013 --> 00:27:44,056
Getting any variation in this model

711
00:27:44,056 --> 00:27:46,340
required animating a brand new swing from start

712
00:27:46,340 --> 00:27:47,902
to finish, one end to the other.

713
00:27:47,902 --> 00:27:49,104
And if you wanted to do something different,

714
00:27:49,104 --> 00:27:50,907
you had to make another one and another one and another one.

715
00:27:51,707 --> 00:27:55,250
And so next we had very, very perceptible animation time scaling.

716
00:27:55,250 --> 00:28:01,353
Line lengths and player speeds are highly variable, which was born out in highly variable arc speeds.

717
00:28:01,353 --> 00:28:05,255
And with a fixed number of animation frames scaling over a variable time range,

718
00:28:05,255 --> 00:28:08,017
we would get these really easy-to-feel time scaling artifacts.

719
00:28:08,017 --> 00:28:12,620
And this was especially evident when we get these really slow, sluggish kick-throughs

720
00:28:12,620 --> 00:28:16,562
that lacked any impact whatsoever on longer lines or slower swings.

721
00:28:17,815 --> 00:28:19,515
So we had a couple of new goals.

722
00:28:19,515 --> 00:28:21,296
Enable variety and reduce the time scaling.

723
00:28:21,296 --> 00:28:23,737
We accomplished, we attacked these

724
00:28:23,737 --> 00:28:26,479
by breaking the swing arc up into pieces

725
00:28:26,479 --> 00:28:28,419
that we then animated separately.

726
00:28:28,419 --> 00:28:31,221
We would animate the downswing and the upswing independently

727
00:28:31,221 --> 00:28:32,821
all the way through the trough,

728
00:28:32,821 --> 00:28:35,302
which let us kind of overlap the kick animation

729
00:28:35,302 --> 00:28:38,804
wherever we wanted to kind of overlap that inflection point.

730
00:28:38,804 --> 00:28:41,105
We would then continue to drive the animation time

731
00:28:41,105 --> 00:28:43,106
as before on the up and downswing animations

732
00:28:43,106 --> 00:28:45,787
as they weren't as susceptible to the visible scaling

733
00:28:45,787 --> 00:28:47,448
as the kick animations were.

734
00:28:49,259 --> 00:28:51,862
So once we were in a swing, we would estimate the time

735
00:28:51,862 --> 00:28:54,485
to trough during the downswing so that we could trigger

736
00:28:54,485 --> 00:28:56,487
that kick animation at just the right time

737
00:28:56,487 --> 00:28:58,629
in order to be able to play at a full speed.

738
00:28:58,629 --> 00:29:00,371
This instantly made our kicks feel a lot more

739
00:29:00,371 --> 00:29:02,113
powerful and consistent.

740
00:29:02,113 --> 00:29:04,575
It also meant that we could plug in a variety of animations

741
00:29:04,575 --> 00:29:06,958
into the kick portion without needing to reanimate

742
00:29:06,958 --> 00:29:08,500
the rest of the swing.

743
00:29:08,500 --> 00:29:10,962
But animators be animators, and we weren't done yet.

744
00:29:10,962 --> 00:29:11,543
They wanted more.

745
00:29:12,672 --> 00:29:14,834
So by breaking the swing animation into pieces,

746
00:29:14,834 --> 00:29:16,635
it allowed us to now have a lot more variety

747
00:29:16,635 --> 00:29:19,457
in the way we constructed the animation for the swing.

748
00:29:19,457 --> 00:29:22,019
We were able to introduce custom kicks and spins

749
00:29:22,019 --> 00:29:23,040
with custom upswings.

750
00:29:23,040 --> 00:29:25,582
We had hard catch variations of the downswing.

751
00:29:25,582 --> 00:29:27,823
And all of these things could be played with or without

752
00:29:27,823 --> 00:29:31,006
one another to get a whole bunch of custom swings

753
00:29:31,006 --> 00:29:32,787
and unique swings that look different

754
00:29:32,787 --> 00:29:34,328
as you went from one swing to the next

755
00:29:34,328 --> 00:29:36,449
and add a lot more texture and flavor

756
00:29:36,449 --> 00:29:37,470
to swinging in the game.

757
00:29:38,815 --> 00:29:41,295
So this new iteration helped us solve our major problems

758
00:29:41,295 --> 00:29:43,656
by allowing us to create a lot more animation variety,

759
00:29:43,656 --> 00:29:45,956
and it also helped us eliminate the animation scaling

760
00:29:45,956 --> 00:29:47,697
for the most notable portion of the swing.

761
00:29:47,697 --> 00:29:50,117
So one final problem worth noting

762
00:29:50,117 --> 00:29:52,638
was that with all of the various moves that Spider-Man can do,

763
00:29:52,638 --> 00:29:54,999
he would often end up in poses that didn't really

764
00:29:54,999 --> 00:29:57,839
play nicely with our swing intro animations.

765
00:29:57,839 --> 00:29:59,600
We needed to either wait for the animation

766
00:29:59,600 --> 00:30:01,280
to get to a point where the character could

767
00:30:01,280 --> 00:30:02,660
blend into the intro better.

768
00:30:03,115 --> 00:30:05,557
or live with really, really bad looking blends

769
00:30:05,557 --> 00:30:07,159
as we tried to get into those sling animations.

770
00:30:07,159 --> 00:30:09,881
So to solve this, Animation wanted to add

771
00:30:09,881 --> 00:30:12,444
a lot more variety to swing intros,

772
00:30:12,444 --> 00:30:14,186
but programming didn't really want to manage

773
00:30:14,186 --> 00:30:15,247
each of those clips manually.

774
00:30:15,247 --> 00:30:18,570
So to push that work over to the content creators,

775
00:30:18,570 --> 00:30:20,892
we added a data-driven setup that allowed animators

776
00:30:20,892 --> 00:30:23,214
to tell the game what the next animation would be.

777
00:30:23,931 --> 00:30:25,732
from the current time in the active animation.

778
00:30:25,732 --> 00:30:28,273
They'd mark up a section of a jump animation with data

779
00:30:28,273 --> 00:30:29,633
that would point to custom sling animations,

780
00:30:29,633 --> 00:30:32,214
and this allowed them to cleanly get out

781
00:30:32,214 --> 00:30:35,495
of all these crazy acrobatic poses with custom slings

782
00:30:35,495 --> 00:30:37,596
that made the traversal feel a lot more seamless

783
00:30:37,596 --> 00:30:38,957
and the character feel a lot more dynamic.

784
00:30:40,523 --> 00:30:42,444
So, kind of stepping away now from animation,

785
00:30:42,444 --> 00:30:44,184
I want to talk a bit about our approach

786
00:30:44,184 --> 00:30:45,105
to the traversal camera.

787
00:30:45,105 --> 00:30:48,686
We knew from previous games that good motion and animation

788
00:30:48,686 --> 00:30:52,067
only goes so far in translating the experience to the player.

789
00:30:52,067 --> 00:30:55,008
The camera is actually often the most important aspect

790
00:30:55,008 --> 00:30:57,628
in conveying elements of speed and translation

791
00:30:57,628 --> 00:30:59,569
in a way that gives the player that kind of visceral

792
00:30:59,569 --> 00:31:02,150
connection to the action that's on the screen.

793
00:31:03,092 --> 00:31:05,132
So when we started out our top level goals

794
00:31:05,132 --> 00:31:08,314
for the traversal camera, we came up with three main items

795
00:31:08,314 --> 00:31:10,494
that we found important after early prototyping

796
00:31:10,494 --> 00:31:12,735
with kind of a mostly static camera.

797
00:31:12,735 --> 00:31:14,816
First, we wanted to minimize the amount of player input

798
00:31:14,816 --> 00:31:15,596
was required.

799
00:31:15,596 --> 00:31:16,897
This is because players would often

800
00:31:16,897 --> 00:31:18,177
need to be using the face buttons

801
00:31:18,177 --> 00:31:19,198
and we didn't want to require them

802
00:31:19,198 --> 00:31:20,979
to have to switch between that and a stick input.

803
00:31:20,979 --> 00:31:22,759
That was just a lot of camera management

804
00:31:22,759 --> 00:31:25,140
that we didn't want people to mess with.

805
00:31:25,140 --> 00:31:27,281
Next, we needed to accentuate the pendulum motion

806
00:31:27,281 --> 00:31:28,381
and the forces on the line.

807
00:31:28,381 --> 00:31:31,323
And finally, we wanted to communicate a sense of speed

808
00:31:31,323 --> 00:31:31,783
to the player.

809
00:31:32,977 --> 00:31:35,238
So we have a pretty long history of third-person games

810
00:31:35,238 --> 00:31:37,018
at Insomniac, and we've generally

811
00:31:37,018 --> 00:31:38,959
started with a follow camera model that

812
00:31:38,959 --> 00:31:41,359
tries to have the camera looking in the same direction

813
00:31:41,359 --> 00:31:42,520
as the hero's velocity.

814
00:31:42,520 --> 00:31:45,560
So while successful in other games, in other contexts,

815
00:31:45,560 --> 00:31:47,621
it did present a few problems for Spider-Man,

816
00:31:47,621 --> 00:31:50,902
particularly at the high speeds that Spider-Man could move

817
00:31:50,902 --> 00:31:52,942
and how much we had to let you see where you were going.

818
00:31:52,942 --> 00:31:56,543
So the biggest issue was that when we tuned it effectively,

819
00:31:57,864 --> 00:32:00,506
to where you were going, it was extremely susceptible

820
00:32:00,506 --> 00:32:02,407
to these sudden changes in velocity

821
00:32:02,407 --> 00:32:04,949
causing large changes in view direction.

822
00:32:04,949 --> 00:32:07,411
The camera would just swing around incessantly on people.

823
00:32:07,411 --> 00:32:10,393
This had this feedback loop with camera relative controls

824
00:32:10,393 --> 00:32:11,334
where the camera would change a lot,

825
00:32:11,334 --> 00:32:12,295
which would change your input a lot,

826
00:32:12,295 --> 00:32:13,696
which would change your camera a lot,

827
00:32:13,696 --> 00:32:15,257
and you'd just get into this death spiral.

828
00:32:16,197 --> 00:32:17,838
So in order to fix the problem, we

829
00:32:17,838 --> 00:32:19,818
moved to a model based on the player more

830
00:32:19,818 --> 00:32:21,158
dragging the camera around.

831
00:32:21,158 --> 00:32:23,999
This was done by we'd predict the player's position based

832
00:32:23,999 --> 00:32:25,579
on their current speed, and then we'd

833
00:32:25,579 --> 00:32:28,040
use that to calculate how it would drag more of a camera

834
00:32:28,040 --> 00:32:30,140
boom and how that would change the rotation.

835
00:32:30,140 --> 00:32:33,741
This ended up being a lot less noisy with velocity changes,

836
00:32:33,741 --> 00:32:37,022
as the frame-to-frame delta was generally a whole lot smaller.

837
00:32:37,022 --> 00:32:40,383
So with the camera now following us more appropriately,

838
00:32:40,383 --> 00:32:43,383
I want to talk a bit about how we accentuate the pendulum

839
00:32:43,383 --> 00:32:45,404
motion of the player through camera motion.

840
00:32:46,199 --> 00:32:51,342
In addition to just feeling better, this also actually helped address two major usability issues

841
00:32:51,342 --> 00:32:53,883
that a more static camera was presenting.

842
00:32:53,883 --> 00:32:58,246
First, as stated before, players weren't really noticing the full extent of vertical translation

843
00:32:58,246 --> 00:33:00,367
the character was actually performing.

844
00:33:00,367 --> 00:33:05,370
Players were also presenting a really poor level of comprehension of where they actually were in the swing arc.

845
00:33:05,370 --> 00:33:08,672
They were frequently hanging on for too long, releasing high,

846
00:33:08,672 --> 00:33:11,333
losing all their forward momentum, and wondering what in the hell happened.

847
00:33:12,506 --> 00:33:15,127
So the first thing we manipulate to help sell the swing arc

848
00:33:15,127 --> 00:33:16,467
is the camera's pitch.

849
00:33:16,467 --> 00:33:18,968
We try and roughly match the swing arc's pitch

850
00:33:18,968 --> 00:33:20,889
in order to feel that motion through the camera.

851
00:33:20,889 --> 00:33:23,630
As you can see here, we want to keep the pitch a little more

852
00:33:23,630 --> 00:33:25,031
flattened on the downswing so that you

853
00:33:25,031 --> 00:33:26,631
can keep your eyes on the horizon

854
00:33:26,631 --> 00:33:28,432
and keep an eye on where you're going.

855
00:33:28,432 --> 00:33:31,733
And then on the upswing, we tend to exaggerate the pitch

856
00:33:31,733 --> 00:33:34,674
a little bit in order to communicate that rise more

857
00:33:34,674 --> 00:33:36,555
effectively and let them feel like they're moving up

858
00:33:36,555 --> 00:33:38,296
without getting too far into the upswing.

859
00:33:39,438 --> 00:33:41,599
So the next element we added to help the player feel

860
00:33:41,599 --> 00:33:43,720
the swing arc more was to move the character's position

861
00:33:43,720 --> 00:33:45,380
and screen space down and then back up

862
00:33:45,380 --> 00:33:47,101
over the course of the swing.

863
00:33:47,101 --> 00:33:49,782
This created kind of a real-world physical tracking

864
00:33:49,782 --> 00:33:52,123
response from the player that would reinforce

865
00:33:52,123 --> 00:33:53,603
the in-game motion as they kind of looked down

866
00:33:53,603 --> 00:33:56,224
and looked up with the character moving on screen.

867
00:33:57,424 --> 00:33:58,865
So when it came to turning, we really

868
00:33:58,865 --> 00:34:01,766
wanted to get players to feel that they were whipping

869
00:34:01,766 --> 00:34:03,527
around a corner at high speed and bringing

870
00:34:03,527 --> 00:34:05,527
that same sensation you get when you're in a turning

871
00:34:05,527 --> 00:34:06,628
car leaning to the side.

872
00:34:06,628 --> 00:34:09,829
And to get this effect, we apply a little bit of roll

873
00:34:09,829 --> 00:34:11,630
to the camera when turning and scale it

874
00:34:11,630 --> 00:34:13,911
based on the line angle and turn speed.

875
00:34:13,911 --> 00:34:15,192
But a word of caution here, we did

876
00:34:15,192 --> 00:34:17,152
have to be careful not to push it too far due

877
00:34:17,152 --> 00:34:18,153
to motion sickness concerns.

878
00:34:18,153 --> 00:34:20,514
And we did add an option to scale it down or turn it off

879
00:34:20,514 --> 00:34:22,715
entirely for people that had problems with that.

880
00:34:23,534 --> 00:34:25,056
So now that we have players feeling

881
00:34:25,056 --> 00:34:26,017
the translation in traversal,

882
00:34:26,017 --> 00:34:28,240
we need to make sure that they actually felt the speed.

883
00:34:28,240 --> 00:34:30,382
So this means we needed to layer

884
00:34:30,382 --> 00:34:31,984
as many visual cues as possible

885
00:34:31,984 --> 00:34:34,187
to help sell not just the current speed,

886
00:34:34,187 --> 00:34:35,048
but changes in speed.

887
00:34:36,287 --> 00:34:38,288
Probably the most impactful thing to sensing speed

888
00:34:38,288 --> 00:34:40,509
through the world is going to be field of view.

889
00:34:40,509 --> 00:34:42,570
A wider field of view tends to elongate objects

890
00:34:42,570 --> 00:34:43,710
in front of you, making it feel like you're

891
00:34:43,710 --> 00:34:44,711
covering more ground.

892
00:34:44,711 --> 00:34:47,052
And it also brings a lot of peripheral objects

893
00:34:47,052 --> 00:34:49,232
into view that are going to be moving really fast by you

894
00:34:49,232 --> 00:34:52,114
so you get a lot more of that relative motion feel.

895
00:34:52,114 --> 00:34:53,754
In order to really sell the changes in speed,

896
00:34:53,754 --> 00:34:55,675
we're constantly updating the game's field of view

897
00:34:55,675 --> 00:34:56,415
while traversing.

898
00:34:57,412 --> 00:34:58,552
To deal with sudden speed changes,

899
00:34:58,552 --> 00:35:00,632
we rely more on actually adjusting the camera's follow

900
00:35:00,632 --> 00:35:02,993
distance, as you don't want to bounce field of view

901
00:35:02,993 --> 00:35:03,513
around too much.

902
00:35:03,513 --> 00:35:05,133
It gets really weird.

903
00:35:05,133 --> 00:35:06,914
We have certain kind of explosive moves

904
00:35:06,914 --> 00:35:08,374
that create a spring action on the camera

905
00:35:08,374 --> 00:35:11,355
so that it falls back before blending closer again.

906
00:35:11,355 --> 00:35:13,775
This gives those moves a much bigger sense of impact,

907
00:35:13,775 --> 00:35:15,536
like the character's boosting away suddenly,

908
00:35:15,536 --> 00:35:16,936
leaving the camera in the dust, and then it

909
00:35:16,936 --> 00:35:18,197
has to play catch up a little bit.

910
00:35:19,335 --> 00:35:22,358
So here you'll be able to see all of that coming together to show the sense of speed.

911
00:35:22,358 --> 00:35:28,144
There's a little bit of debugger on the side to give you a better idea of how the field of view and follow distance are changing as it goes through the action.

912
00:35:46,943 --> 00:35:50,804
So the final bit of camera development I want to talk about is related to how the camera

913
00:35:50,804 --> 00:35:53,665
is handled when we perform a variety of traversal moves.

914
00:35:53,665 --> 00:35:57,506
So our first version of the traversal camera treated each move as its kind of special,

915
00:35:57,506 --> 00:35:58,246
unique item.

916
00:35:58,246 --> 00:36:02,247
This was driven by a desire to make every move as cinematic as possible with the thought

917
00:36:02,247 --> 00:36:05,188
that if you string together a bunch of really cinematic moves, you're going to get something

918
00:36:05,188 --> 00:36:06,668
extra special, super cinematic.

919
00:36:06,668 --> 00:36:08,869
This presented a couple of problems though.

920
00:36:09,490 --> 00:36:14,815
In this video from an early vertical slice, you'll see some of the issues with the

921
00:36:14,815 --> 00:36:18,819
everything is a special snowflake and how that kind of breaks down. You'll see

922
00:36:18,819 --> 00:36:22,103
that going from move to move would cause a change in framing and field of view

923
00:36:22,103 --> 00:36:26,127
that could kind of muddle the perception of speed and rapid sequencing of moves

924
00:36:26,127 --> 00:36:29,711
would create a very noisy relationship between the world, the character, and the

925
00:36:29,711 --> 00:36:29,851
view.

926
00:36:48,689 --> 00:36:51,451
So, how did we get better?

927
00:36:51,451 --> 00:36:53,572
Well, we started with a more unified model

928
00:36:53,572 --> 00:36:55,154
for all of our traversal moves

929
00:36:55,154 --> 00:36:58,236
that had a speed-driven field of view and follow distance

930
00:36:58,236 --> 00:36:59,337
that would stay consistent

931
00:36:59,337 --> 00:37:02,059
across all of the different moves.

932
00:37:02,059 --> 00:37:04,281
We also smoothed out any adjustments we were doing

933
00:37:04,281 --> 00:37:06,683
to offsets to make those changes feel less aggressive

934
00:37:06,683 --> 00:37:08,384
and not kind of upset the player.

935
00:37:09,718 --> 00:37:13,621
So here, you're going to see that we ended up getting some pretty good results.

936
00:37:13,621 --> 00:37:17,585
You're going to get a lot more consistent perception of speed when moving from one move

937
00:37:17,585 --> 00:37:18,145
to another.

938
00:37:18,145 --> 00:37:21,648
The camera ends up being a lot more predictable to the player, and one move flows into the

939
00:37:21,648 --> 00:37:25,112
next without feeling like there's a major state change that the player has to suddenly

940
00:37:25,112 --> 00:37:25,372
adjust to.

941
00:37:25,372 --> 00:37:29,115
This proved a lot more fun and predictable to players, and gave an overall better experience.

942
00:37:48,375 --> 00:37:52,619
Alright, so, as we started to get a full set of traversal moves in the game,

943
00:37:52,619 --> 00:37:55,861
and playing with them more both internally and through usability,

944
00:37:55,861 --> 00:37:59,504
we found that unsurprisingly, our first version was rarely good enough.

945
00:37:59,504 --> 00:38:03,387
So this led to a lot of feedback that motion felt stiff and imprecise.

946
00:38:03,387 --> 00:38:05,488
Players weren't able to navigate as well as they wanted,

947
00:38:05,488 --> 00:38:07,650
a lot of moves weren't matching expectations,

948
00:38:07,650 --> 00:38:10,112
and they were unable to actually land where they wanted to.

949
00:38:10,112 --> 00:38:11,653
So we started kind of revisiting things.

950
00:38:12,665 --> 00:38:14,865
So with wall run, our first pass was set up

951
00:38:14,865 --> 00:38:17,366
to actually be locked to either be horizontal or vertical

952
00:38:17,366 --> 00:38:19,607
with no in-between and no ability to switch.

953
00:38:19,607 --> 00:38:21,828
The entry was based on a combination

954
00:38:21,828 --> 00:38:24,929
of character velocity, input direction, the walls facing,

955
00:38:24,929 --> 00:38:26,849
and it had a heavy bias towards maintaining

956
00:38:26,849 --> 00:38:27,930
your current momentum.

957
00:38:27,930 --> 00:38:30,010
So if you're going really fast horizontally,

958
00:38:30,010 --> 00:38:31,851
you are really likely to get a horizontal wall run.

959
00:38:33,470 --> 00:38:34,951
The single biggest problem we had

960
00:38:34,951 --> 00:38:36,371
was that wall run entry direction

961
00:38:36,371 --> 00:38:38,332
was really poorly mapped to player expectations.

962
00:38:38,332 --> 00:38:40,193
They never really understood the concept

963
00:38:40,193 --> 00:38:42,014
of momentum driving the entry direction

964
00:38:42,014 --> 00:38:43,195
and how that overwhelmed their input.

965
00:38:43,195 --> 00:38:44,736
And this was made even worse

966
00:38:44,736 --> 00:38:45,977
because there was just no ability

967
00:38:45,977 --> 00:38:47,518
to switch from horizontal to vertical

968
00:38:47,518 --> 00:38:48,958
if they didn't get what they wanted.

969
00:38:48,958 --> 00:38:50,859
And on top of that, the camera direction

970
00:38:50,859 --> 00:38:53,921
versus a vertical wall was making input

971
00:38:53,921 --> 00:38:56,082
to entry mapping even more confusing.

972
00:38:56,082 --> 00:38:59,464
Can you tell me in this image, pushing up on the stick,

973
00:38:59,464 --> 00:39:01,345
is that supposed to make you go forward or up?

974
00:39:02,352 --> 00:39:05,053
A lot of players didn't really know what they wanted to do in that situation.

975
00:39:05,053 --> 00:39:09,415
So players would often try to compensate for this by pointing the camera where they wanted

976
00:39:09,415 --> 00:39:13,937
to go, but the system was paying zero attention to the camera, and so it wasn't helping them.

977
00:39:13,937 --> 00:39:17,978
So with our big problems identified, we set out to make some changes.

978
00:39:17,978 --> 00:39:20,279
The first thing we did was to add analog steering.

979
00:39:20,279 --> 00:39:23,640
This created a lot more in-between values for entry direction, as well as giving players

980
00:39:23,640 --> 00:39:26,821
the ability to adjust on the fly if they weren't happy with their entry direction.

981
00:39:27,729 --> 00:39:30,511
Then we revisited our entry direction process as a whole.

982
00:39:30,511 --> 00:39:31,891
We added a camera-driven influence

983
00:39:31,891 --> 00:39:35,634
to help translate player intent to in-game results.

984
00:39:35,634 --> 00:39:38,055
And we then significantly amped up the effect of player input

985
00:39:38,055 --> 00:39:40,957
over momentum so that they had a lot more control

986
00:39:40,957 --> 00:39:43,018
over the results and what happened on the output.

987
00:39:43,018 --> 00:39:46,300
So these combined to result in a significant reduction

988
00:39:46,300 --> 00:39:48,341
in player frustration.

989
00:39:48,341 --> 00:39:50,382
So for in-air control, once they're off the line,

990
00:39:50,382 --> 00:39:52,783
just flying through the air, we wanted the player

991
00:39:53,500 --> 00:39:56,803
we had an initial approach that heavily favored momentum.

992
00:39:56,803 --> 00:39:58,384
Again, we were looking at that momentum thing

993
00:39:58,384 --> 00:39:59,705
over and over again in the first rev.

994
00:39:59,705 --> 00:40:02,447
So this meant that in-air steering was fairly stiff

995
00:40:02,447 --> 00:40:04,348
and players needed to rely on web moves

996
00:40:04,348 --> 00:40:06,990
like swinging and web zip for rapid direction change.

997
00:40:06,990 --> 00:40:09,872
The idea was that it would make your swing releases

998
00:40:09,872 --> 00:40:11,993
more meaningful and consequential.

999
00:40:12,394 --> 00:40:17,997
But this model presented a number of problems in play testing, much like everything else seems to.

1000
00:40:17,997 --> 00:40:23,201
First, swing speeds amplify small differences in angle over large distances.

1001
00:40:23,201 --> 00:40:25,722
This made it almost impossible to be precise.

1002
00:40:25,722 --> 00:40:29,184
If you tried to release off a line and you saw something in the distance,

1003
00:40:29,184 --> 00:40:32,747
little variations in that angle would cause big variations in where you ended up.

1004
00:40:33,680 --> 00:40:38,183
In addition, players were really just terrible at thinking ahead to manage their speed.

1005
00:40:38,183 --> 00:40:42,686
While there are tools to slow down, they generally go as fast as possible to their destination,

1006
00:40:42,686 --> 00:40:44,467
and only once they're there do they try and stop.

1007
00:40:44,467 --> 00:40:48,069
This usually ends up with the player kind of fumbling around and orbiting their destination

1008
00:40:48,069 --> 00:40:50,231
as they try and get closer and just having a bad time.

1009
00:40:50,231 --> 00:40:55,714
So finally, players were having a lot of difficulty reacting quickly to changes in situation or

1010
00:40:55,714 --> 00:40:56,195
geometry.

1011
00:40:57,682 --> 00:40:59,384
So in order to help solve these problems,

1012
00:40:59,384 --> 00:41:01,807
we had to put more control back in players' hands

1013
00:41:01,807 --> 00:41:04,770
and let go of some of our really strict momentum-based

1014
00:41:04,770 --> 00:41:05,271
concepts.

1015
00:41:05,271 --> 00:41:07,373
To start, we significantly increased the in-air turn

1016
00:41:07,373 --> 00:41:07,834
speeds.

1017
00:41:07,834 --> 00:41:09,836
This immediately helped players react a lot more quickly

1018
00:41:09,836 --> 00:41:12,759
to dynamic elements, and it also allowed people to more

1019
00:41:12,759 --> 00:41:14,221
effectively set up their next move,

1020
00:41:14,221 --> 00:41:16,343
increasing their ability to chain moves

1021
00:41:16,343 --> 00:41:18,746
and just basically use the full suite of traversal elements.

1022
00:41:20,035 --> 00:41:23,016
Later on, we massively increased the amount of drag applied

1023
00:41:23,016 --> 00:41:25,777
to the player when pulling back on the stick.

1024
00:41:25,777 --> 00:41:27,798
This let players feel a lot more precise

1025
00:41:27,798 --> 00:41:29,439
when they were reaching their destination

1026
00:41:29,439 --> 00:41:31,759
because they could go from 60 to zero in a very short time.

1027
00:41:31,759 --> 00:41:34,320
Overall, this led to a lot fewer instances

1028
00:41:34,320 --> 00:41:36,301
of players fumbling around their destination

1029
00:41:36,301 --> 00:41:38,202
and let people feel like they could stick the landing.

1030
00:41:39,529 --> 00:41:43,710
So the next thing we needed to address was our more specific

1031
00:41:43,710 --> 00:41:45,390
world interaction moves.

1032
00:41:45,390 --> 00:41:46,611
So when we started making the game,

1033
00:41:46,611 --> 00:41:48,651
we knew that we wanted to make the city feel

1034
00:41:48,651 --> 00:41:51,412
like a big part of traversal, and Spider-Man's interaction

1035
00:41:51,412 --> 00:41:53,432
with the world needed to be tangible.

1036
00:41:53,432 --> 00:41:56,593
And while swinging and web zip did require geometry to work,

1037
00:41:56,593 --> 00:41:58,613
you were still kind of mid-air and disconnected

1038
00:41:58,613 --> 00:41:59,533
when using them.

1039
00:41:59,533 --> 00:42:00,934
We wanted something that was a little more tactile.

1040
00:42:00,934 --> 00:42:04,694
So our first version was zipping through the legs of a water

1041
00:42:04,694 --> 00:42:06,255
tower with our web tunnel move.

1042
00:42:06,635 --> 00:42:09,076
This was really cinematic from a presentation standpoint,

1043
00:42:09,076 --> 00:42:11,017
and it really fulfilled the fantasy of interacting

1044
00:42:11,017 --> 00:42:12,078
with those specific objects.

1045
00:42:12,078 --> 00:42:14,559
But it did have a few shortcomings.

1046
00:42:14,559 --> 00:42:17,180
The first problem is that the move has a pretty rigid

1047
00:42:17,180 --> 00:42:18,341
directionality.

1048
00:42:18,341 --> 00:42:19,762
There wasn't a lot of room for players

1049
00:42:19,762 --> 00:42:21,923
to modify the direction going through the object

1050
00:42:21,923 --> 00:42:23,924
because it was a fixed structure.

1051
00:42:23,924 --> 00:42:26,085
And in addition, the entry angles were pretty limited.

1052
00:42:26,085 --> 00:42:28,346
You could only engage the web tunnel from a limited angle

1053
00:42:28,346 --> 00:42:31,207
range before it started to look really weird of getting sucked

1054
00:42:31,207 --> 00:42:32,868
in sideways and turning through this thing.

1055
00:42:34,056 --> 00:42:36,486
So in this case, we recognize that WebTunnel

1056
00:42:36,486 --> 00:42:38,314
had some inherent limitations that we weren't

1057
00:42:38,314 --> 00:42:39,238
going to be able to get over.

1058
00:42:39,914 --> 00:42:42,415
In addition, we liked having the move

1059
00:42:42,415 --> 00:42:43,735
as it was for certain situations.

1060
00:42:43,735 --> 00:42:45,435
That cinematic presentation was really

1061
00:42:45,435 --> 00:42:46,555
effective for certain things.

1062
00:42:46,555 --> 00:42:48,696
So instead, we created point launch,

1063
00:42:48,696 --> 00:42:51,276
a move where you could zip to a point on top of an object

1064
00:42:51,276 --> 00:42:53,676
and then spring back off instantly with a big jump.

1065
00:42:53,676 --> 00:42:56,077
We were able to get the desired world interaction

1066
00:42:56,077 --> 00:42:57,537
we were looking for with web tunnels,

1067
00:42:57,537 --> 00:43:00,218
along with a number of additional benefits.

1068
00:43:00,218 --> 00:43:01,918
First, the player could enter and exit a point launch

1069
00:43:01,918 --> 00:43:02,558
from any direction.

1070
00:43:02,558 --> 00:43:04,378
And because we needed just a point,

1071
00:43:04,378 --> 00:43:06,859
the opportunity for placement in the world

1072
00:43:06,859 --> 00:43:08,139
had increased dramatically.

1073
00:43:09,072 --> 00:43:10,613
So once point launch was implemented,

1074
00:43:10,613 --> 00:43:13,315
we started to notice that we had a lot of traversal moves

1075
00:43:13,315 --> 00:43:15,756
that we were treating as unique.

1076
00:43:15,756 --> 00:43:17,177
We had unique names for them, and we

1077
00:43:17,177 --> 00:43:18,177
thought they were all special.

1078
00:43:18,177 --> 00:43:20,139
But to the player, they all felt like the same thing.

1079
00:43:20,139 --> 00:43:22,820
In this case, that was go to a thing.

1080
00:43:22,820 --> 00:43:25,362
So as you can see, we had separate unique button

1081
00:43:25,362 --> 00:43:28,563
combinations for going to a perch, point launching,

1082
00:43:28,563 --> 00:43:29,584
and zipping to a wall.

1083
00:43:31,195 --> 00:43:34,219
To make things worse, point launch only worked on perches,

1084
00:43:34,219 --> 00:43:35,361
which were a special kind of point.

1085
00:43:35,361 --> 00:43:37,624
But we had a very similar move that

1086
00:43:37,624 --> 00:43:39,526
worked on perches and edges.

1087
00:43:39,526 --> 00:43:41,068
And ultimately, this led to a lot of problems

1088
00:43:41,068 --> 00:43:42,790
with the player's ability to mentally map

1089
00:43:42,790 --> 00:43:45,454
this variety of controls to what felt to them

1090
00:43:45,454 --> 00:43:46,155
like the same action.

1091
00:43:46,155 --> 00:43:48,277
So they'd fumble a lot, do the wrong thing,

1092
00:43:48,277 --> 00:43:49,759
and just generally get themselves screwed up.

1093
00:43:50,480 --> 00:43:52,841
So our solution was then to merge all of this

1094
00:43:52,841 --> 00:43:55,321
into a single input space using the triggers.

1095
00:43:55,321 --> 00:43:58,022
This helped to ensure that the button to action mapping

1096
00:43:58,022 --> 00:44:00,463
in the player's brain was a lot more one to one.

1097
00:44:00,463 --> 00:44:02,244
However, it's not just a matter of merging buttons,

1098
00:44:02,244 --> 00:44:03,104
it's never that simple.

1099
00:44:03,104 --> 00:44:06,745
It did require us to adapt some of the moves as well.

1100
00:44:06,745 --> 00:44:08,766
First, we expanded point launch to work on all edges,

1101
00:44:08,766 --> 00:44:10,906
which ended up being a win for the player,

1102
00:44:10,906 --> 00:44:12,867
and we merged it with zip to perch.

1103
00:44:12,867 --> 00:44:15,448
We then moved zip to wall to be an aim mode only action

1104
00:44:15,448 --> 00:44:18,109
so that its targeting didn't conflict with the other moves

1105
00:44:18,109 --> 00:44:19,229
that it was sharing buttons with.

1106
00:44:20,959 --> 00:44:23,421
So after iterating our controls by doing things

1107
00:44:23,421 --> 00:44:25,162
like changing buttons and adding moves,

1108
00:44:25,162 --> 00:44:27,164
there's a few major takeaways from this section

1109
00:44:27,164 --> 00:44:29,045
that I feel are pretty important.

1110
00:44:29,045 --> 00:44:31,508
First, if the player expectation and system designs

1111
00:44:31,508 --> 00:44:33,709
are not aligned, then your controls just fail

1112
00:44:33,709 --> 00:44:35,291
and the player experience is gonna drop.

1113
00:44:35,291 --> 00:44:38,634
We spent a lot of time giving long-winded design reasons

1114
00:44:38,634 --> 00:44:41,676
why our controls were the way they were when they started,

1115
00:44:41,676 --> 00:44:43,938
but ultimately, players will just never get the most

1116
00:44:43,938 --> 00:44:45,459
out of a system that they have trouble using.

1117
00:44:46,373 --> 00:44:49,014
And the next lesson would be that trying to add analog input

1118
00:44:49,014 --> 00:44:52,334
and behavior to our moves helped add depth, utility, freedom,

1119
00:44:52,334 --> 00:44:54,575
and flow to our moves and just increase the player's

1120
00:44:54,575 --> 00:44:55,415
experience.

1121
00:44:55,415 --> 00:44:59,236
So as we were getting towards the end of production

1122
00:44:59,236 --> 00:45:00,976
and our core mechanics were all in place,

1123
00:45:00,976 --> 00:45:03,816
we started to drive down to the next level of usability

1124
00:45:03,816 --> 00:45:04,377
feedback.

1125
00:45:04,377 --> 00:45:06,757
We found that players were still feeling

1126
00:45:06,757 --> 00:45:09,377
that they experienced a somewhat kind of stuttery rhythm, where

1127
00:45:09,377 --> 00:45:11,638
it would feel incredibly smooth at times,

1128
00:45:11,638 --> 00:45:12,718
but they were kind of consistently

1129
00:45:12,718 --> 00:45:14,298
getting these little snags and hiccups that

1130
00:45:14,298 --> 00:45:15,298
were breaking their momentum.

1131
00:45:16,511 --> 00:45:18,212
So, as we kept gathering information,

1132
00:45:18,212 --> 00:45:19,833
we found that most of the problems

1133
00:45:19,833 --> 00:45:22,735
boiled down to just a few cases across the city.

1134
00:45:22,735 --> 00:45:25,276
In response, we created a kind of small palette of moves

1135
00:45:25,276 --> 00:45:26,737
that would help maintain flow

1136
00:45:26,737 --> 00:45:28,498
to get around those rough edges.

1137
00:45:28,498 --> 00:45:30,719
Many of these moves were designed to be

1138
00:45:30,719 --> 00:45:33,181
a natural extension from the character's current action,

1139
00:45:33,181 --> 00:45:34,922
so they didn't require any input.

1140
00:45:34,922 --> 00:45:36,683
One of the players who feel like

1141
00:45:36,683 --> 00:45:38,484
they were expertly executing these moves

1142
00:45:38,484 --> 00:45:40,405
that would often require unnatural reflexes

1143
00:45:40,405 --> 00:45:42,326
if they wanted to execute them manually.

1144
00:45:43,390 --> 00:45:46,651
So my first example here shows one of our biggest issues.

1145
00:45:46,651 --> 00:45:49,432
You'd clip a corner, causing a short wall run that would then

1146
00:45:49,432 --> 00:45:50,392
eject you sideways.

1147
00:45:50,392 --> 00:45:53,414
The sudden change in direction would often surprise players

1148
00:45:53,414 --> 00:45:55,594
and would frequently create situations

1149
00:45:55,594 --> 00:45:58,616
that were difficult to recover from as they were exiting

1150
00:45:58,616 --> 00:46:00,036
at a high enough velocity they'd often

1151
00:46:00,036 --> 00:46:01,877
get clear across the street before they knew what

1152
00:46:01,877 --> 00:46:02,637
the hell happened to them.

1153
00:46:03,910 --> 00:46:06,252
So we kind of fixed this by adding just a small little move

1154
00:46:06,252 --> 00:46:09,535
to redirect you parallel to your incoming velocity

1155
00:46:09,535 --> 00:46:11,837
if you were only wall running for a really short time.

1156
00:46:11,837 --> 00:46:14,420
This very quickly got the player back in action

1157
00:46:14,420 --> 00:46:15,981
with a consistent reference direction

1158
00:46:15,981 --> 00:46:17,663
and they were able to just get right back

1159
00:46:17,663 --> 00:46:18,323
to what they were doing.

1160
00:46:19,456 --> 00:46:21,658
So the next example looks more at a case

1161
00:46:21,658 --> 00:46:23,260
where players didn't really have a tool

1162
00:46:23,260 --> 00:46:25,141
to change direction easily.

1163
00:46:25,141 --> 00:46:26,683
If a player was wall running up a building

1164
00:46:26,683 --> 00:46:28,064
and wanted to corner over it,

1165
00:46:28,064 --> 00:46:29,425
they would have to clear the building

1166
00:46:29,425 --> 00:46:31,007
and then figure out what their next move was

1167
00:46:31,007 --> 00:46:32,849
once they could actually see what was above them.

1168
00:46:32,849 --> 00:46:34,891
This led to kind of this gap in flow

1169
00:46:34,891 --> 00:46:36,592
while players processed that view

1170
00:46:36,592 --> 00:46:38,314
and caused a lot of stall for them.

1171
00:46:39,763 --> 00:46:43,804
To fix this, we added a move that the player could trigger before clearing the wall to

1172
00:46:43,804 --> 00:46:46,165
get over the edge and redirect their velocity all in one shot.

1173
00:46:46,165 --> 00:46:50,067
This added a little layer of skill, which was nice, and it added some depth while letting

1174
00:46:50,067 --> 00:46:52,468
players a lot more efficiently navigate over these buildings.

1175
00:46:53,657 --> 00:46:55,660
So a lot of our additional moves centered around

1176
00:46:55,660 --> 00:46:57,963
trying to traverse through space near walls

1177
00:46:57,963 --> 00:46:59,805
and how that conflicts with our art team's desire

1178
00:46:59,805 --> 00:47:01,787
to have a lot of stuff sticking out of those walls

1179
00:47:01,787 --> 00:47:03,049
and into our play space.

1180
00:47:03,049 --> 00:47:05,292
The biggest factor here was fire escapes.

1181
00:47:05,292 --> 00:47:07,354
It just didn't feel like New York without them,

1182
00:47:07,354 --> 00:47:09,317
but they were basically the total arch nemesis

1183
00:47:09,317 --> 00:47:11,179
for the traversal team the entire production.

1184
00:47:12,189 --> 00:47:13,930
We ended up making a lot of vaulting moves,

1185
00:47:13,930 --> 00:47:16,472
both from the air and from wall run and from swing,

1186
00:47:16,472 --> 00:47:19,233
to get around these, as well as completely custom ladder

1187
00:47:19,233 --> 00:47:21,695
climbing web move to kind of climb them like a ladder

1188
00:47:21,695 --> 00:47:23,476
up a fire escape stack.

1189
00:47:23,476 --> 00:47:25,878
We also needed to deal with signs hanging out of buildings,

1190
00:47:25,878 --> 00:47:27,098
particularly in places like Chinatown,

1191
00:47:27,098 --> 00:47:29,740
and a lot of small little outcroppings and changes

1192
00:47:29,740 --> 00:47:32,642
in wall contour that were too small to just wall run over,

1193
00:47:32,642 --> 00:47:36,204
but they were too big to just wall run over,

1194
00:47:36,204 --> 00:47:38,345
but too small to actually run on entirely.

1195
00:47:38,345 --> 00:47:38,445
So.

1196
00:47:41,080 --> 00:47:42,501
And today, that wraps up our journey

1197
00:47:42,501 --> 00:47:45,083
that we went on with creating Traversal for Marvel's Spider-Man.

1198
00:47:45,083 --> 00:47:46,884
We had a whole lot of fun along the way

1199
00:47:46,884 --> 00:47:48,145
working with such a great character,

1200
00:47:48,145 --> 00:47:49,926
but there are definitely a few key things

1201
00:47:49,926 --> 00:47:53,589
I believe any developer can learn from our experience here.

1202
00:47:53,589 --> 00:47:57,031
First, in creating mechanics, start with a simple implementation

1203
00:47:57,031 --> 00:48:00,854
and then add complexity only as you uncover new problems.

1204
00:48:00,854 --> 00:48:02,055
By keeping things simple early,

1205
00:48:02,055 --> 00:48:04,617
we were able to avoid going too far down a path

1206
00:48:04,617 --> 00:48:06,218
that our players wouldn't respond to,

1207
00:48:06,218 --> 00:48:08,439
which in many cases kept us from wasting work.

1208
00:48:08,840 --> 00:48:11,461
We ended up with a system that had a whole lot of features,

1209
00:48:11,461 --> 00:48:12,902
but many of the additions were things

1210
00:48:12,902 --> 00:48:15,843
that we could never have anticipated needing

1211
00:48:15,843 --> 00:48:17,164
or wanting ahead of time.

1212
00:48:17,164 --> 00:48:20,966
Second, you have to stay flexible in your approach

1213
00:48:20,966 --> 00:48:22,046
to creating mechanics.

1214
00:48:22,046 --> 00:48:23,847
We were initially really resistant to some

1215
00:48:23,847 --> 00:48:25,968
of the best changes, because we had all the design

1216
00:48:25,968 --> 00:48:27,749
reasons listed out why it was working

1217
00:48:27,749 --> 00:48:28,649
like it was supposed to.

1218
00:48:28,649 --> 00:48:31,751
And clearly, it was the feedback that was the problem.

1219
00:48:31,751 --> 00:48:33,632
By allowing the game to evolve, we

1220
00:48:33,632 --> 00:48:36,033
came to a final product that was far superior to what

1221
00:48:36,033 --> 00:48:37,554
we thought was the right approach earlier

1222
00:48:37,554 --> 00:48:38,254
in development.

1223
00:48:39,173 --> 00:48:41,496
And finally, you are your own worst tester.

1224
00:48:41,496 --> 00:48:43,077
And in some cases, the rest of your dev team

1225
00:48:43,077 --> 00:48:44,539
quickly catches up with being terrible.

1226
00:48:44,539 --> 00:48:47,522
Developers know exactly how their systems work

1227
00:48:47,522 --> 00:48:51,205
and they're just, and the way they're supposed to be used.

1228
00:48:51,205 --> 00:48:53,127
So when you play the game, it will often work

1229
00:48:53,127 --> 00:48:54,368
exactly as you expected.

1230
00:48:54,368 --> 00:48:55,990
Different players will play the game

1231
00:48:55,990 --> 00:48:57,111
in wildly different ways.

1232
00:48:57,371 --> 00:48:59,692
and you'll never know where the real problems and edge cases

1233
00:48:59,692 --> 00:49:01,392
are until you let them loose in your game.

1234
00:49:01,392 --> 00:49:03,653
Even with external play testers, you

1235
00:49:03,653 --> 00:49:05,834
should always challenge yourself and others

1236
00:49:05,834 --> 00:49:07,694
to try to play the game in different ways

1237
00:49:07,694 --> 00:49:09,155
and try and have a different experience

1238
00:49:09,155 --> 00:49:11,616
in mapping what your controls are into the game.

1239
00:49:11,616 --> 00:49:12,436
So that's it for me.

1240
00:49:12,436 --> 00:49:14,097
Thanks so much for coming.

1241
00:49:14,097 --> 00:49:27,021
And it looks like we've got about 10 minutes for some Q&A.

1242
00:49:30,211 --> 00:49:31,852
I'm going to start over here.

1243
00:49:31,852 --> 00:49:31,992
Hello.

1244
00:49:31,992 --> 00:49:34,534
So the problem space you're working in

1245
00:49:34,534 --> 00:49:36,756
seemed like it required a ton of different skill sets

1246
00:49:36,756 --> 00:49:38,177
to effectively solve these problems,

1247
00:49:38,177 --> 00:49:40,939
like cinematography, physics, game design,

1248
00:49:40,939 --> 00:49:42,960
a whole bunch of others.

1249
00:49:42,960 --> 00:49:45,302
What was the composition of your team like?

1250
00:49:45,302 --> 00:49:47,083
And how did you effectively organize

1251
00:49:47,083 --> 00:49:49,585
around these different skill sets to solve these problems?

1252
00:49:49,785 --> 00:49:52,287
So we have what we call the traversal pod,

1253
00:49:52,287 --> 00:49:54,829
which consisted of a couple of programmers,

1254
00:49:54,829 --> 00:49:57,431
a handful of animators, a designer,

1255
00:49:57,431 --> 00:49:59,213
as well as just everybody else

1256
00:49:59,213 --> 00:50:00,574
looking at traversal in general.

1257
00:50:00,574 --> 00:50:02,115
So we'd have effects people that would come in

1258
00:50:02,115 --> 00:50:04,958
and help with effects, our animation director.

1259
00:50:05,078 --> 00:50:06,278
would also kind of be looking at things

1260
00:50:06,278 --> 00:50:07,479
from a cinematography standpoint,

1261
00:50:07,479 --> 00:50:10,840
as well as the animators in the Traversal Pod.

1262
00:50:10,840 --> 00:50:12,980
And so it was really just getting,

1263
00:50:12,980 --> 00:50:16,701
it was an extremely collaborative environment

1264
00:50:16,701 --> 00:50:18,662
and getting all the different people

1265
00:50:18,662 --> 00:50:21,563
from all the different disciplines with eyeballs on it

1266
00:50:21,563 --> 00:50:23,123
and everybody looking for ways to give input

1267
00:50:23,123 --> 00:50:23,943
on how to improve things.

1268
00:50:23,943 --> 00:50:24,103
Thanks.

1269
00:50:24,751 --> 00:50:31,312
Was any inspiration drawn from Spider-Man 2's web-slinging mechanics?

1270
00:50:31,312 --> 00:50:34,193
Early on, we definitely played all of the games.

1271
00:50:34,193 --> 00:50:37,574
Spider-Man 2 did a lot of really great things, so did Ultimate Spider-Man,

1272
00:50:37,574 --> 00:50:39,494
so did Web of Shadows, so did ASM2.

1273
00:50:39,494 --> 00:50:44,816
Those were all teams that had a lot of really great ideas that they executed in different ways.

1274
00:50:44,816 --> 00:50:47,456
We definitely took things from them.

1275
00:50:47,456 --> 00:50:51,057
The biggest thing we got through the history of Spider-Man games

1276
00:50:51,057 --> 00:50:54,118
was your web's better darn well attached to buildings.

1277
00:50:54,118 --> 00:50:54,518
But...

1278
00:50:54,738 --> 00:50:58,861
When we took it from there, we ended up at the end of the day wanting to make something

1279
00:50:58,861 --> 00:50:59,862
that was also kind of our own.

1280
00:50:59,862 --> 00:51:03,704
And I think we sort of hit that by having a traversal system that layered a lot of different

1281
00:51:03,704 --> 00:51:06,987
moves together to make you feel like you had a wider palette.

1282
00:51:06,987 --> 00:51:08,328
Thank you.

1283
00:51:08,328 --> 00:51:15,693
What were some of the challenges and solutions you had with swing-heavy combat situations

1284
00:51:15,693 --> 00:51:19,096
such as like the final Doc Ock fight, which was on a rooftop?

1285
00:51:19,712 --> 00:51:22,453
Yeah, so that created kind of a lot of weird things.

1286
00:51:22,453 --> 00:51:27,416
And we actually had the ability to basically have a config

1287
00:51:27,416 --> 00:51:29,537
data set that kind of parameterized

1288
00:51:29,537 --> 00:51:30,858
how swinging worked.

1289
00:51:30,858 --> 00:51:33,159
And so one of the things we were able to do was make a

1290
00:51:33,159 --> 00:51:35,640
duplicate data set that was entirely re-parameterized for

1291
00:51:35,640 --> 00:51:36,281
different situations.

1292
00:51:36,981 --> 00:51:39,762
So when we were inside GCT, inside Grand Central,

1293
00:51:39,762 --> 00:51:42,643
or when we were in a combat arena, like a boss fight,

1294
00:51:42,643 --> 00:51:44,423
we could sit there and basically just change

1295
00:51:44,423 --> 00:51:46,444
all the parameters for how swinging worked

1296
00:51:46,444 --> 00:51:48,084
in order to make it fit that space a little bit better.

1297
00:51:48,084 --> 00:51:49,145
We didn't want to deviate too far,

1298
00:51:49,145 --> 00:51:51,426
it needed to be kind of, make sense to the player,

1299
00:51:51,426 --> 00:51:54,066
but it did let us make sure that we weren't

1300
00:51:54,066 --> 00:51:56,327
kind of overshooting things, when you weren't getting...

1301
00:51:56,787 --> 00:51:58,509
When you're outside, it's these big, huge swings

1302
00:51:58,509 --> 00:52:00,330
that give you a lot of height and a lot of stuff like that.

1303
00:52:00,330 --> 00:52:02,112
If you're inside or in a boss arena,

1304
00:52:02,112 --> 00:52:03,453
that becomes a problem if you're constantly

1305
00:52:03,453 --> 00:52:04,674
getting yourself flung up in the air

1306
00:52:04,674 --> 00:52:05,455
with nothing to swing from

1307
00:52:05,455 --> 00:52:06,796
and just have to free fall for a while.

1308
00:52:06,796 --> 00:52:09,939
So that re-parameterization really helped us

1309
00:52:09,939 --> 00:52:12,702
to make things fit whatever situation we were dealing with.

1310
00:52:12,702 --> 00:52:13,402
Thank you.

1311
00:52:13,402 --> 00:52:17,246
Hi, thanks for the talk.

1312
00:52:17,246 --> 00:52:19,388
Really, really excellent.

1313
00:52:19,388 --> 00:52:22,951
So I have a question about

1314
00:52:23,365 --> 00:52:30,073
What you said earlier where you would do animation blending to correct the way Spider-Man was facing during Swing.

1315
00:52:30,073 --> 00:52:38,783
But with all of his cool poses and so on, how did you prevent that blend from creating like strange artifacts during the animation?

1316
00:52:39,629 --> 00:52:45,256
I'll give a lot of credit there to our animation team with Elliot Grossman, who did a lot of

1317
00:52:45,256 --> 00:52:48,800
the animation work, and to our core engine programmer for animation, Johnny Garrett.

1318
00:52:48,800 --> 00:52:53,566
They made a sweet animation system and a bunch of sweet animations that did really cool stuff.

1319
00:52:53,566 --> 00:52:56,130
For the most part, the blending ended up...

1320
00:52:56,830 --> 00:52:59,252
We just made sure to control where those things go,

1321
00:52:59,252 --> 00:53:01,173
and we made sure to control when we used them

1322
00:53:01,173 --> 00:53:04,094
so that they didn't get too far outside of what we needed.

1323
00:53:04,094 --> 00:53:06,116
We also had the side effect that when you're swinging,

1324
00:53:06,116 --> 00:53:07,096
you're kind of out in the air.

1325
00:53:07,096 --> 00:53:08,937
So, unlike if you're on the ground

1326
00:53:08,937 --> 00:53:10,798
or somewhere where you have to really

1327
00:53:10,798 --> 00:53:13,300
hand plant on things and touch things,

1328
00:53:13,300 --> 00:53:14,340
if there was a little bit of drift

1329
00:53:14,340 --> 00:53:15,381
from those partials and stuff,

1330
00:53:15,381 --> 00:53:17,982
it didn't really matter as much for swinging.

1331
00:53:17,982 --> 00:53:19,363
And so it gave us a lot more freedom

1332
00:53:19,363 --> 00:53:20,264
to kind of play with that stuff.

1333
00:53:20,264 --> 00:53:21,504
We just had to make sure that visually

1334
00:53:21,504 --> 00:53:22,545
you were lined up with the line

1335
00:53:22,545 --> 00:53:24,066
and it felt like those forces were correct,

1336
00:53:24,066 --> 00:53:25,487
and at that point we were good to go.

1337
00:53:26,444 --> 00:53:28,966
Alright, thanks.

1338
00:53:28,966 --> 00:53:29,086
Yeah.

1339
00:53:29,086 --> 00:53:33,268
Hey, it seems like throughout development you're changing like gravity settings, adding

1340
00:53:33,268 --> 00:53:35,570
new mechanics that Spider-Man can use.

1341
00:53:35,570 --> 00:53:39,492
How did you like work alongside the level design team like during this process to make

1342
00:53:39,492 --> 00:53:43,835
sure that all their work isn't like thrown away as soon as you change like a huge fundamental

1343
00:53:43,835 --> 00:53:44,555
setting or something?

1344
00:53:44,555 --> 00:53:47,577
That was one of the biggest challenges we had.

1345
00:53:47,577 --> 00:53:49,258
You know, working on...

1346
00:53:50,845 --> 00:53:54,208
not necessarily a new IP to us.

1347
00:53:54,208 --> 00:53:57,070
We didn't really have all of the mechanics locked down

1348
00:53:57,070 --> 00:53:58,351
until we were well into production

1349
00:53:58,351 --> 00:53:59,893
before things started to get locked down, which,

1350
00:53:59,893 --> 00:54:03,575
as you said, creates challenges for the design team.

1351
00:54:03,575 --> 00:54:07,018
A lot of it came down to the designer in our pod, Josue,

1352
00:54:07,018 --> 00:54:10,361
basically did a lot of work of trying to maintain things

1353
00:54:10,361 --> 00:54:10,761
consistently.

1354
00:54:10,761 --> 00:54:12,983
He actually built the metrics for the entire city.

1355
00:54:13,764 --> 00:54:15,285
by himself, and then it was done.

1356
00:54:15,285 --> 00:54:16,926
And then we actually generated the geometry

1357
00:54:16,926 --> 00:54:18,167
after that through Houdini.

1358
00:54:18,167 --> 00:54:20,589
So we got a lot of consistency in the open world

1359
00:54:20,589 --> 00:54:23,011
by just having that go through one person.

1360
00:54:23,011 --> 00:54:25,473
For interiors and stuff, we just tried to set up some metrics

1361
00:54:25,473 --> 00:54:26,694
and go from there.

1362
00:54:26,694 --> 00:54:28,316
I would say that kind of swinging on interiors

1363
00:54:28,316 --> 00:54:31,578
is something that I think we didn't make as good

1364
00:54:31,578 --> 00:54:33,340
as we would have liked because it was such a big move

1365
00:54:33,340 --> 00:54:36,042
and we didn't have the time to really focus on that.

1366
00:54:36,042 --> 00:54:38,704
But we were able to use that re-parameterization

1367
00:54:38,704 --> 00:54:41,166
to make it work for most of the spaces that we needed it.

1368
00:54:41,166 --> 00:54:41,667
Awesome, thanks.

1369
00:54:43,727 --> 00:54:44,768
Hi.

1370
00:54:44,768 --> 00:54:45,509
Excellent talk.

1371
00:54:45,509 --> 00:54:46,149
Thank you so much.

1372
00:54:46,149 --> 00:54:46,449
Great game.

1373
00:54:46,449 --> 00:54:47,710
I'm definitely stealing all your math.

1374
00:54:47,710 --> 00:54:51,913
I noticed in this talk about traversal, you didn't really

1375
00:54:51,913 --> 00:54:54,415
talk about the wall climbing at all, like the walking around.

1376
00:54:54,415 --> 00:54:56,757
I'm assuming it might have either been outside the scope

1377
00:54:56,757 --> 00:54:57,918
of this talk or not super relevant.

1378
00:54:57,918 --> 00:55:00,920
But that's a system that I've actually messed around with

1379
00:55:00,920 --> 00:55:01,721
for my own game.

1380
00:55:01,721 --> 00:55:05,784
And I'm curious if it was ever supposed to be a bigger

1381
00:55:05,784 --> 00:55:07,765
element of traversal than it was, and then you clamped it

1382
00:55:07,765 --> 00:55:08,946
because it was too complicated.

1383
00:55:09,407 --> 00:55:11,569
or any edge cases like that?

1384
00:55:11,569 --> 00:55:13,231
So wall crawl was really, you know,

1385
00:55:13,231 --> 00:55:14,873
it's really identifiable with the character,

1386
00:55:14,873 --> 00:55:18,958
but it has this problem for games,

1387
00:55:18,958 --> 00:55:22,082
which is when you do it, you can only go so fast

1388
00:55:22,082 --> 00:55:25,266
or you look like a weird salamander.

1389
00:55:25,266 --> 00:55:27,689
And usually when people are on a wall,

1390
00:55:27,689 --> 00:55:30,132
they want to interact out from the wall.

1391
00:55:31,285 --> 00:55:33,688
There's nowhere to put your camera except for inside of you or something.

1392
00:55:33,688 --> 00:55:36,391
And so it creates a lot of these gameplay problems.

1393
00:55:36,391 --> 00:55:40,936
Our designers in some ways had trouble figuring out how to use it.

1394
00:55:40,936 --> 00:55:44,900
Our buildings had a lot of complexity to their geometry

1395
00:55:44,900 --> 00:55:48,003
that added a lot of complexity to the wall crawl stuff.

1396
00:55:48,003 --> 00:55:50,586
We actually had Ross McIntosh, one of our programmers,

1397
00:55:50,586 --> 00:55:51,607
was working on it for.

1398
00:55:52,650 --> 00:55:55,292
probably a couple years working on some wall crawl stuff.

1399
00:55:55,292 --> 00:55:58,494
And it's a really, really complicated problem

1400
00:55:58,494 --> 00:55:59,815
to deal with all of that geometry.

1401
00:55:59,815 --> 00:56:01,936
I noticed that you hard clamped it

1402
00:56:01,936 --> 00:56:03,978
to go around corners of specific animations

1403
00:56:03,978 --> 00:56:05,299
so it didn't actually have to deal

1404
00:56:05,299 --> 00:56:06,139
with artifacts and stuff.

1405
00:56:06,139 --> 00:56:08,001
Yeah, so we tried to kind of scope down

1406
00:56:08,001 --> 00:56:10,322
in places where we could to take some things

1407
00:56:10,322 --> 00:56:12,784
that were really hard problems and make them into...

1408
00:56:13,304 --> 00:56:14,805
little bit simpler problems.

1409
00:56:14,805 --> 00:56:17,926
And so we did that wherever we could with wall crawl.

1410
00:56:17,926 --> 00:56:19,947
We still wanted to make sure and fulfill that kind of

1411
00:56:19,947 --> 00:56:23,469
fantasy element while having most of the game focused on

1412
00:56:23,469 --> 00:56:26,290
this big, fast speed traversal.

1413
00:56:26,290 --> 00:56:29,632
And so we just chose to have wall crawl be something that

1414
00:56:29,632 --> 00:56:32,573
we implemented as well as we could, but didn't try to

1415
00:56:32,573 --> 00:56:33,433
over-focus on.

1416
00:56:33,433 --> 00:56:34,394
Makes sense.

1417
00:56:34,394 --> 00:56:35,054
Thank you so much.

1418
00:56:36,355 --> 00:56:38,376
Hey, amazing talk.

1419
00:56:38,376 --> 00:56:40,017
Totally loved it.

1420
00:56:40,017 --> 00:56:42,738
We tried to build a Spider-Man game as one of the prototypes

1421
00:56:42,738 --> 00:56:44,199
and really, really failed to do it.

1422
00:56:44,199 --> 00:56:47,120
So one of the things I had a doubt about

1423
00:56:47,120 --> 00:56:50,661
was you mentioned that we used box volumes for collision

1424
00:56:50,661 --> 00:56:51,582
detections.

1425
00:56:51,582 --> 00:56:55,183
And so how do you decide which objects in the scene

1426
00:56:55,183 --> 00:56:55,383
to go to?

1427
00:56:55,383 --> 00:56:57,644
Was it applied to everything that he could attach to?

1428
00:56:57,644 --> 00:57:00,986
And if so, how did you maintain the performance

1429
00:57:00,986 --> 00:57:03,507
as to where you detect the collision occurs?

1430
00:57:03,507 --> 00:57:05,888
Does it happen in a particular area, and how so?

1431
00:57:06,304 --> 00:57:08,666
So, sorry, was your question like,

1432
00:57:08,666 --> 00:57:11,509
how do we decide where to place markup and where not to?

1433
00:57:11,509 --> 00:57:11,769
Yeah.

1434
00:57:11,769 --> 00:57:14,531
So, for the most part, we wanted to,

1435
00:57:14,531 --> 00:57:17,954
in the open world, we marked up everything.

1436
00:57:17,954 --> 00:57:21,257
Like I was saying, we used our procedurally generating

1437
00:57:21,257 --> 00:57:22,719
system Houdini, well, it's not ours,

1438
00:57:22,719 --> 00:57:24,480
it's not worth any license, but,

1439
00:57:24,480 --> 00:57:26,342
to place a lot of that stuff, so it was kind of everywhere.

1440
00:57:27,842 --> 00:57:30,663
For interiors and things, we would just decide if the space was in metric,

1441
00:57:30,663 --> 00:57:33,424
and we would place or not place things based on whether it was in metric for that.

1442
00:57:33,424 --> 00:57:37,425
And other than that, we would just find other things that we wanted to attach to,

1443
00:57:37,425 --> 00:57:39,906
like treetops and stuff like that, and just place markup there.

1444
00:57:39,906 --> 00:57:41,227
That's where we could use our prefabs to say,

1445
00:57:41,227 --> 00:57:44,788
okay, this object is always going to come bundled with this markup,

1446
00:57:44,788 --> 00:57:47,028
so every time it gets out there, it's populated with that markup.

1447
00:57:47,028 --> 00:57:50,349
So it really just came down to anything that, as much as possible,

1448
00:57:50,349 --> 00:57:52,610
anything that looked like you should be able to swing from it,

1449
00:57:52,610 --> 00:57:53,670
we tried to get markup on it.

1450
00:57:53,942 --> 00:57:57,663
Did you have any performance issues in trying to find out which place to attach to or like

1451
00:57:57,663 --> 00:57:59,804
whether anything you had to optimize to do that?

1452
00:57:59,804 --> 00:58:00,624
We had a few things.

1453
00:58:00,624 --> 00:58:03,665
We went through a number of iterations on that.

1454
00:58:03,665 --> 00:58:07,827
We ended up getting better by, like I said, using kind of a sphere database and some search

1455
00:58:07,827 --> 00:58:12,488
querying to kind of pack all the data in as much as we could.

1456
00:58:12,488 --> 00:58:13,969
Really helped us kind of speed things up.

1457
00:58:13,969 --> 00:58:17,450
We ended up being able to move it off onto a job on kind of another thread so that it

1458
00:58:17,450 --> 00:58:18,230
could happen in the background.

1459
00:58:18,690 --> 00:58:21,131
And so it ended up taking, even in an area that was highly dense,

1460
00:58:21,131 --> 00:58:23,632
it ended up taking, on the PS4,

1461
00:58:23,632 --> 00:58:26,213
probably in a dense area, about 2 milliseconds

1462
00:58:26,213 --> 00:58:27,753
to process and chug through everything.

1463
00:58:27,753 --> 00:58:30,394
So it wasn't necessarily cheap,

1464
00:58:30,394 --> 00:58:32,215
but it wasn't too untractable either.

1465
00:58:32,215 --> 00:58:32,895
Cool, thank you.

1466
00:58:32,895 --> 00:58:37,417
Hi. Thank you for your impressive session.

1467
00:58:37,417 --> 00:58:43,179
So I'm making a swinging VR game,

1468
00:58:43,179 --> 00:58:44,019
like Spider-Man.

1469
00:58:44,630 --> 00:58:49,433
So if you will make VR Spider-Man,

1470
00:58:49,433 --> 00:58:54,115
so what do you change spec or game design?

1471
00:58:54,115 --> 00:58:56,196
What was your question?

1472
00:58:56,196 --> 00:58:57,637
Sorry, I didn't catch it.

1473
00:58:57,637 --> 00:58:59,018
Sorry.

1474
00:58:59,018 --> 00:59:04,381
So what do you change for VR game like Spider-Man?

1475
00:59:04,381 --> 00:59:08,002
What do we kind of change to make a game like Spider-Man?

1476
00:59:09,369 --> 00:59:15,810
go through the town and swing with rope.

1477
00:59:17,426 --> 00:59:20,588
So is it kind of how do we have to change the city to make swinging work?

1478
00:59:20,588 --> 00:59:21,329
Yeah, you're right.

1479
00:59:21,329 --> 00:59:23,710
Gotcha. Okay, so it's actually interesting.

1480
00:59:23,710 --> 00:59:28,833
We had a lot of tests early on talking about how wide the streets needed to be.

1481
00:59:28,833 --> 00:59:31,095
If you actually take full New York width streets,

1482
00:59:31,095 --> 00:59:32,556
they're actually really terrible for swinging

1483
00:59:32,556 --> 00:59:35,238
because your line angles end up being like too far to the side.

1484
00:59:35,238 --> 00:59:39,180
So we did a lot of tests to figure out what the right widths were for the streets,

1485
00:59:39,180 --> 00:59:39,961
a lot of metric tests early on.

1486
00:59:39,961 --> 00:59:42,823
And so we had to kind of play around with all of that really early.

1487
00:59:43,343 --> 00:59:45,065
in order to find what the right distances were

1488
00:59:45,065 --> 00:59:47,387
before we kind of populated the entire city with stuff.

1489
00:59:47,387 --> 00:59:50,670
So it was kind of just progressing things a little bit,

1490
00:59:50,670 --> 00:59:52,572
a little bit at a time in lockstep

1491
00:59:52,572 --> 00:59:55,214
as we were kind of iterating on the design side

1492
00:59:55,214 --> 00:59:58,397
and on the world construction side,

1493
00:59:58,397 --> 01:00:00,799
iterating on the swing side to make sure those two things

1494
01:00:00,799 --> 01:00:01,940
kind of work together in a really nice way.

1495
01:00:01,940 --> 01:00:02,481
Thank you.

1496
01:00:02,481 --> 01:00:02,681
Cool.

1497
01:00:02,681 --> 01:00:04,002
There's other questions?

1498
01:00:04,002 --> 01:00:05,884
All right, I think we're out of time.

1499
01:00:05,884 --> 01:00:06,325
Thanks guys.

