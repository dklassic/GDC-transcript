1
00:00:06,393 --> 00:00:06,894
All right, everybody.

2
00:00:06,914 --> 00:00:11,617
Welcome to this, the last talk, in the last hour,

3
00:00:11,637 --> 00:00:13,599
the last day of GDC.

4
00:00:14,099 --> 00:00:15,620
We have deployed smooth jazz to keep

5
00:00:15,640 --> 00:00:17,662
you resolute in the face of almost certain boredom.

6
00:00:19,263 --> 00:00:21,445
By the way, if there's a seat closer to the middle

7
00:00:21,485 --> 00:00:23,546
from where you are, you can kind of squeeze in.

8
00:00:23,566 --> 00:00:25,708
We can get more people in, unfortunately.

9
00:00:26,528 --> 00:00:30,151
There sure are a lot of you here today.

10
00:00:30,171 --> 00:00:32,453
I was kind of hoping there wouldn't.

11
00:00:35,576 --> 00:00:39,900
Today we are going to talk about dialogue in games.

12
00:00:40,080 --> 00:00:42,122
A really simple way to do dialogue in games.

13
00:00:42,182 --> 00:00:44,685
A really easy way to make writers very awesome.

14
00:00:45,166 --> 00:00:47,608
This game, this talk is not really about code.

15
00:00:47,988 --> 00:00:49,070
It is not really about programming.

16
00:00:49,590 --> 00:00:51,072
It is about enabling writers.

17
00:00:51,472 --> 00:00:53,174
And I don't mean like by handing them the scotch,

18
00:00:53,194 --> 00:00:54,916
although God knows I've had to do that often enough.

19
00:00:57,805 --> 00:01:00,547
By the way, if you are the sort of person who freaks out

20
00:01:00,968 --> 00:01:03,450
taking lots of notes in every slide, taking a picture,

21
00:01:03,490 --> 00:01:04,290
feel free to take notes.

22
00:01:04,390 --> 00:01:06,592
But the slides are all going to be up on the Valve website

23
00:01:06,973 --> 00:01:07,713
probably by Monday.

24
00:01:08,274 --> 00:01:10,015
So there is no need to take pictures of every slide

25
00:01:10,776 --> 00:01:11,536
unless you really want to.

26
00:01:13,238 --> 00:01:18,281
This talk is about our system for tracking lots and lots of facts about the world, and

27
00:01:18,321 --> 00:01:22,804
then picking one rule from a gigantic database full of lines based on criteria for all those

28
00:01:22,844 --> 00:01:23,184
facts.

29
00:01:23,784 --> 00:01:27,566
It's a system that we've used in Half-Life 2, Team Fortress 2, Left 4 Dead, Portal 2,

30
00:01:27,926 --> 00:01:29,227
Dota 2, all of our games.

31
00:01:29,707 --> 00:01:33,269
Most of my examples are going to be from Left 4 Dead 2, just because it was easy for me

32
00:01:33,309 --> 00:01:36,311
to capture video, but it's the same tech in all of these games.

33
00:01:37,349 --> 00:01:42,932
And we realized after the fact you can use it to drive some things that are not speech, like animation and sound.

34
00:01:43,593 --> 00:01:48,096
You will see a particular scene that will tip you off as to what other games uses this for for animation.

35
00:01:49,777 --> 00:01:54,860
But really this talk is not about code. It is about writers. It is about empowering writers.

36
00:01:56,501 --> 00:02:01,504
It is about a way to approach tracking state in the world in a way that enables writers to do what they do best,

37
00:02:01,564 --> 00:02:03,826
which is making your character say things that are interesting.

38
00:02:05,847 --> 00:02:11,191
It is as much as possible a system that is simple, general, efficient, and friendly.

39
00:02:11,231 --> 00:02:12,591
That is three things, not four.

40
00:02:12,972 --> 00:02:16,214
I am firmly of the belief that simple and friendly are the same thing.

41
00:02:16,714 --> 00:02:18,875
Because if a system is simple to use, people will use it.

42
00:02:18,975 --> 00:02:20,856
If it is simple to build, you can maintain it.

43
00:02:21,337 --> 00:02:23,898
If you can build a complicated system, you can only do simple things with it.

44
00:02:23,918 --> 00:02:25,960
You have to build a simple system to make complicated things.

45
00:02:27,877 --> 00:02:30,718
And why stand up here and talk at you for an hour about talking?

46
00:02:30,798 --> 00:02:34,640
Well, there have been a bunch of really cool games in the past couple years

47
00:02:34,940 --> 00:02:37,861
that have done cool and interesting things with dialogue, dialogue states,

48
00:02:37,921 --> 00:02:40,842
state, you know, tracking the player, tracking what you've done previously,

49
00:02:40,922 --> 00:02:44,004
communicating, character, or just being really fun.

50
00:02:44,704 --> 00:02:47,685
Personally, I really enjoyed each and every one of these games.

51
00:02:48,065 --> 00:02:50,847
So if I can show you how to make similar games, then hopefully you will,

52
00:02:50,947 --> 00:02:51,927
and I will get to play them.

53
00:02:52,467 --> 00:02:53,428
My ulterior motive.

54
00:02:55,555 --> 00:03:00,802
When I mean contextual dialogue, I am referring to any kind of like state or character, speech

55
00:03:00,862 --> 00:03:05,868
or behavior by character that seems to be aware of what state the world is in and what

56
00:03:05,969 --> 00:03:07,210
the player has done previously.

57
00:03:07,831 --> 00:03:11,236
In the early days when games were nothing but dialogue, this was pretty easy, but games

58
00:03:11,256 --> 00:03:13,619
got complicated and so did dialogue pretty quickly.

59
00:03:14,259 --> 00:03:18,582
RPGs have the notion of conversation trees, but you know, you may occasionally have a

60
00:03:18,622 --> 00:03:21,704
character who wants to remember things like the fact that you blew up his hometown three

61
00:03:21,744 --> 00:03:24,546
missions previously, you know, might respond to you differently based on that.

62
00:03:24,566 --> 00:03:28,088
So you have to start throwing explicit flags and closing off branches of trees.

63
00:03:28,128 --> 00:03:30,109
It gets really unwieldy if you have a bunch of stuff.

64
00:03:31,650 --> 00:03:35,212
Some games don't have conversation trees, but they do have characters who bark to announce

65
00:03:35,232 --> 00:03:35,712
their state.

66
00:03:36,433 --> 00:03:37,313
Stealth games are a con-

67
00:03:38,363 --> 00:03:43,045
canonical example of this, because it's an important part of the game mechanic.

68
00:03:43,105 --> 00:03:46,046
The player needs to be aware of what the AI knows about the player,

69
00:03:46,406 --> 00:03:48,527
what the AI is thinking, where the AI is going to go next.

70
00:03:48,567 --> 00:03:50,528
It's actually how you play the game.

71
00:03:51,168 --> 00:03:54,349
A great example of this, I think, is, once again, Batman.

72
00:03:54,369 --> 00:03:55,390
I love this game.

73
00:03:55,410 --> 00:03:56,710
There's so much good stuff in this game.

74
00:03:57,170 --> 00:04:00,511
Among the good stuff in this game is one particular kind of AI guard,

75
00:04:00,872 --> 00:04:03,653
who is so explicit, so clear in what he is thinking,

76
00:04:03,993 --> 00:04:05,933
that it's like he was tailor made for doing presentations.

77
00:04:15,914 --> 00:04:18,576
Target deployed smoke to escape. Target is now moving.

78
00:04:23,820 --> 00:04:24,060
Huh?

79
00:04:26,322 --> 00:04:26,962
Smoke.

80
00:04:29,725 --> 00:04:33,087
Target was a negative. Just blew the crap out of an extinguisher.

81
00:04:34,208 --> 00:04:36,891
Target is moving this way.

82
00:04:38,472 --> 00:04:39,773
Target spotted above us. In my...

83
00:04:40,173 --> 00:04:40,994
Target is lost.

84
00:04:41,694 --> 00:04:42,535
Move to locate!

85
00:04:45,687 --> 00:04:47,268
So it's really, but you can see like it's,

86
00:04:48,248 --> 00:04:50,829
this is how the AI tells Batman how to play the game, right?

87
00:04:50,849 --> 00:04:52,229
The game is all about manipulating

88
00:04:52,529 --> 00:04:53,410
where the guards are moving.

89
00:04:53,810 --> 00:04:54,530
It really is a good game.

90
00:04:54,570 --> 00:04:55,590
I played it for like 100 hours.

91
00:04:57,131 --> 00:04:59,552
Other games use it as an artistic or a narrative device.

92
00:04:59,792 --> 00:05:01,972
Bastion has an omniscient narrator

93
00:05:02,313 --> 00:05:03,873
who responds to everything the player does

94
00:05:03,893 --> 00:05:05,093
with some kind of specific speech.

95
00:05:05,514 --> 00:05:06,574
This is not because the player needs

96
00:05:06,614 --> 00:05:07,594
to be told what he is doing,

97
00:05:07,874 --> 00:05:09,235
but because that's what the game is about.

98
00:05:09,475 --> 00:05:10,375
It's about storytelling.

99
00:05:10,415 --> 00:05:11,976
It's about creating the world through your actions.

100
00:05:11,996 --> 00:05:14,116
That's the game lets you know that it's paying attention.

101
00:05:15,235 --> 00:05:19,617
Sports games somehow create tens of thousands of possible utterances from I don't even know

102
00:05:19,657 --> 00:05:20,317
how many lines.

103
00:05:20,698 --> 00:05:23,619
And a sports game is a really highly dynamic situation, right?

104
00:05:23,659 --> 00:05:25,700
They've got all these different teams and players in the field.

105
00:05:26,000 --> 00:05:28,461
You can't just handle this by a gigantic cascade of if-else.

106
00:05:28,581 --> 00:05:29,801
Your brain would probably melt.

107
00:05:30,982 --> 00:05:33,583
And modern RPGs track an absurd amount of state.

108
00:05:33,643 --> 00:05:37,366
Think about all the stuff that Skyrim and Mass Effect remember about what you've done.

109
00:05:37,746 --> 00:05:42,029
Not just to control character outcomes and mission outcomes and conversation trees, but

110
00:05:42,109 --> 00:05:45,771
also so that townspeople can remember that you are the elf mage that saved the town from

111
00:05:45,791 --> 00:05:47,632
the demon horde just a few missions previously.

112
00:05:47,972 --> 00:05:49,793
It's how they create the feeling of a living world.

113
00:05:50,134 --> 00:05:52,695
It's how they create the feeling the world actually responds to your actions.

114
00:05:53,536 --> 00:05:54,736
I have no clue how all those...

115
00:05:54,756 --> 00:05:55,917
Oops.

116
00:05:58,339 --> 00:05:59,059
PowerPoint fail.

117
00:06:01,595 --> 00:06:05,338
Well, while I'm waiting for PowerPoint to respond, I have no clue how all those games

118
00:06:05,358 --> 00:06:09,121
did their stuff, but I can tell you how we did our stuff, and that's what I will be talking

119
00:06:09,161 --> 00:06:09,381
about.

120
00:06:10,201 --> 00:06:11,522
Assuming PowerPoint gets back to me.

121
00:06:13,224 --> 00:06:13,804
Worst nightmare.

122
00:06:14,985 --> 00:06:16,806
We'll move on to the next slide that I haven't got up on screen.

123
00:06:17,367 --> 00:06:22,370
Our system, as much as possible, designed to be simple, uniform, one way to track all

124
00:06:22,410 --> 00:06:23,811
the state of the game in one place.

125
00:06:24,804 --> 00:06:29,347
one way to find the right line for every possible circumstance from a gigantic database of circumstances,

126
00:06:29,687 --> 00:06:34,250
and as much as possible, a way for writers to be able to create the rules database themselves.

127
00:06:34,290 --> 00:06:35,391
I'm going to reboot PowerPoint.

128
00:06:37,873 --> 00:06:39,194
Restart the program, please.

129
00:06:39,894 --> 00:06:41,375
Do not recover my information. Cancel.

130
00:06:51,602 --> 00:06:52,243
So how's the fish?

131
00:06:57,942 --> 00:06:58,662
All right, where are we?

132
00:07:02,105 --> 00:07:06,028
Slideshow from current slide.

133
00:07:07,109 --> 00:07:07,509
And we're back.

134
00:07:10,151 --> 00:07:12,653
Team Fortress, for example, a multiplayer game

135
00:07:12,673 --> 00:07:15,015
where you can play one of nine different character classes.

136
00:07:16,316 --> 00:07:17,897
We wanted a mechanism in this game

137
00:07:17,917 --> 00:07:19,258
where you could hit a button and speak

138
00:07:19,278 --> 00:07:20,199
in your character's voice.

139
00:07:20,339 --> 00:07:22,180
If, for example, I am a soldier and injured,

140
00:07:22,200 --> 00:07:23,041
need medical attention.

141
00:07:25,369 --> 00:07:28,812
I can push a button and have the soldier say it in his voice.

142
00:07:29,252 --> 00:07:32,855
It's not just for role-playing purposes, although that's kind of the largest purpose, but it's

143
00:07:32,895 --> 00:07:34,056
also for international play.

144
00:07:34,617 --> 00:07:38,380
If I'm in the United States and I push the button, I will hear my soldier speaking medic

145
00:07:38,400 --> 00:07:41,462
in English, but if you're in Spain, you're going to hear him speaking in the localized

146
00:07:41,502 --> 00:07:41,743
voice.

147
00:07:41,843 --> 00:07:46,607
It's a way for players to play across international lines, to communicate simple orders and ideas

148
00:07:46,647 --> 00:07:49,869
to each other, and have the localization system take care of it for them.

149
00:07:56,129 --> 00:07:59,710
There are other characters who have to automatically announce their state to the player.

150
00:08:00,570 --> 00:08:03,971
That is so that if, for example, I'm next to a medic character and the medic is ready

151
00:08:03,991 --> 00:08:04,851
to heal me, I know that.

152
00:08:05,312 --> 00:08:08,713
And I know it even if the player has failed to actually push the button or spoken over

153
00:08:08,773 --> 00:08:09,713
his headset to remind me.

154
00:08:20,374 --> 00:08:24,477
And we also have a contextual dialogue button where you put your cursor over an object in the world,

155
00:08:24,837 --> 00:08:28,379
push a button, game tries to figure out what it was that you wanted to say about that thing.

156
00:08:29,800 --> 00:08:31,801
Help me capture this bloody thing!

157
00:08:31,821 --> 00:08:35,443
We also use it to communicate rivalries between individual characters.

158
00:08:35,503 --> 00:08:38,045
It's part of the role playing in the story of the game.

159
00:08:38,065 --> 00:08:40,607
The engineer is a spy!

160
00:08:40,627 --> 00:08:44,449
The scout is a spy!

161
00:08:44,469 --> 00:08:48,391
The spy is a double agent!

162
00:08:51,091 --> 00:08:54,438
So having finished the orange box and Team Fortress and all that, Valve did something

163
00:08:54,538 --> 00:08:54,798
kind of...

164
00:08:55,825 --> 00:08:56,186
valve.

165
00:08:57,306 --> 00:09:00,629
We really were not ready to go on and make another huge game straight away.

166
00:09:00,669 --> 00:09:01,910
We were a little bit crispy.

167
00:09:02,230 --> 00:09:06,673
And we figured, okay, how about we take everybody who rolled off the project, put them on little

168
00:09:06,693 --> 00:09:10,316
teams of like four or six people a piece, and each of them comes up with some interesting

169
00:09:10,376 --> 00:09:14,839
design idea, some piece of code, some feature that maybe we can put into our next game.

170
00:09:15,099 --> 00:09:15,880
Do something risky.

171
00:09:15,900 --> 00:09:18,321
You know, if it doesn't pan out, you only spent a couple months in it, eh.

172
00:09:18,802 --> 00:09:22,284
But if it is cool, then it can become a feature that we use from then on.

173
00:09:22,965 --> 00:09:24,306
One of the teams asked themselves...

174
00:09:24,886 --> 00:09:27,508
what can we do to improve companion characters in our games?

175
00:09:27,688 --> 00:09:30,630
What can we do to make people like Alex Vance seem more real,

176
00:09:31,050 --> 00:09:32,451
seem like they're aware of their environment,

177
00:09:32,812 --> 00:09:34,092
seem like they have memory?

178
00:09:34,733 --> 00:09:37,074
So we took a bunch of Half-Life 2 art assets,

179
00:09:37,355 --> 00:09:38,596
banged together a couple of characters,

180
00:09:38,976 --> 00:09:40,837
had a programmer and an artist record some voices,

181
00:09:40,897 --> 00:09:42,018
and created a project called

182
00:09:42,898 --> 00:09:44,119
Two Bots, One Wrench.

183
00:09:45,246 --> 00:09:46,307
for reasons I will not describe.

184
00:09:47,367 --> 00:09:48,868
I was going to say, by the way, here,

185
00:09:48,968 --> 00:09:51,089
seen for the first time ever outside of Valve,

186
00:09:51,109 --> 00:09:51,870
some internal video.

187
00:09:52,270 --> 00:09:55,572
I am told that Jeff Keighley, in his Portal Last Hour app,

188
00:09:55,852 --> 00:09:56,812
has already shown this video.

189
00:09:56,832 --> 00:09:59,534
So here, for the second time ever, outside Valve,

190
00:10:00,214 --> 00:10:00,795
to Botswana Branch.

191
00:10:01,914 --> 00:10:04,837
Starting up, how can we make characters aware of the environment?

192
00:10:04,977 --> 00:10:08,179
You can do all kinds of crazy code, but we only had a couple months.

193
00:10:08,199 --> 00:10:10,301
We're like, what's the easiest, simplest way we can do this?

194
00:10:10,902 --> 00:10:13,724
And we thought about that system that we had in Team Fortress 2, where you can put your

195
00:10:13,764 --> 00:10:17,467
cursor over an object and say something contextual about that object.

196
00:10:17,687 --> 00:10:21,911
Well, we said, okay, how about we just tag every single object in the world with a string

197
00:10:21,931 --> 00:10:26,034
name, like its class name, and then each of the characters in the game, each of the robots

198
00:10:26,054 --> 00:10:26,475
that we made.

199
00:10:27,524 --> 00:10:30,525
automatically pulls his field of vision every few seconds,

200
00:10:30,665 --> 00:10:32,206
like you are pushing that vocalize button.

201
00:10:32,706 --> 00:10:34,347
And if it finds an object there, it

202
00:10:34,387 --> 00:10:35,587
pulls a string name off the object.

203
00:10:35,927 --> 00:10:37,968
It goes through its database, tries

204
00:10:38,008 --> 00:10:40,269
to find a line matching the name of the object.

205
00:10:40,309 --> 00:10:41,630
And if there is one, it says the line.

206
00:10:42,390 --> 00:10:43,550
Super brain dead simple.

207
00:10:43,570 --> 00:10:46,151
A laundry car.

208
00:10:46,651 --> 00:10:47,632
There's a laundry nearby.

209
00:10:48,492 --> 00:10:49,813
This heater appears to be broken.

210
00:10:51,153 --> 00:10:53,454
Anyone want to see me break this cinder block with me yet?

211
00:10:54,535 --> 00:10:54,835
Anyone?

212
00:10:56,515 --> 00:10:58,756
A shoe? Someone's gonna fucking miss this.

213
00:10:59,657 --> 00:11:02,598
Danger. Flammable materials.

214
00:11:03,538 --> 00:11:04,999
Look at me, that does sound dangerous.

215
00:11:05,999 --> 00:11:07,360
Look! Tiny spoons!

216
00:11:12,962 --> 00:11:14,703
Oh, there's more. Not done yet.

217
00:11:17,300 --> 00:11:19,524
So this is literally all the code that you need to do that.

218
00:11:19,564 --> 00:11:20,545
It is not even code.

219
00:11:20,605 --> 00:11:22,168
It's barely even a script.

220
00:11:22,208 --> 00:11:23,630
It's a text file in Notepad.

221
00:11:24,572 --> 00:11:25,813
You've got these rules.

222
00:11:26,374 --> 00:11:27,737
Each of the rules has a list of criteria,

223
00:11:28,017 --> 00:11:29,680
like why am I being polled?

224
00:11:29,900 --> 00:11:30,741
Oh, I've seen an object.

225
00:11:31,182 --> 00:11:34,684
Am I being shot at? No. What am I looking at? And there's the name of the object.

226
00:11:35,084 --> 00:11:37,806
If the writer wanted to create a new rule for a particular kind of object,

227
00:11:37,826 --> 00:11:40,627
had some funny thing that occurred to him about a shoe,

228
00:11:40,647 --> 00:11:43,009
he would put in a shoe rule. If not, the rule would not play.

229
00:11:43,589 --> 00:11:48,552
All it takes to add a new line to any object in the world is just like four pieces of text right there.

230
00:11:50,402 --> 00:11:53,884
Having characters babble whatever pops into their head is well and good, but we have two

231
00:11:53,904 --> 00:11:55,605
of them and we would like them to talk to each other.

232
00:11:56,065 --> 00:11:59,788
Once again, what is the easiest, simplest, laziest way that I could possibly implement

233
00:11:59,808 --> 00:12:00,028
that?

234
00:12:00,608 --> 00:12:02,609
You can have all kinds of ways to handle conversations.

235
00:12:02,629 --> 00:12:05,911
You can have an entity that binds the two characters, you can have a scripted sequence,

236
00:12:05,931 --> 00:12:07,112
you can lock both of them down.

237
00:12:07,552 --> 00:12:08,693
Sounds like a lot of programming to me.

238
00:12:08,713 --> 00:12:10,134
You know what's a lot easier?

239
00:12:10,554 --> 00:12:11,995
Doing the exact same thing we did before.

240
00:12:12,355 --> 00:12:14,377
Every time one character says a line...

241
00:12:15,302 --> 00:12:18,084
He creates an event, dispatches it to the other character,

242
00:12:18,284 --> 00:12:21,046
except this time the parameter, instead of being the name of the object,

243
00:12:21,507 --> 00:12:23,468
now it is the name of the line that has just been said.

244
00:12:24,029 --> 00:12:26,691
Second character looks in his database, tries to find a line

245
00:12:27,231 --> 00:12:28,912
corresponding to the thing that was just sent to him,

246
00:12:29,333 --> 00:12:30,093
and says that line.

247
00:12:30,394 --> 00:12:32,215
When he's finished, he may have a line of his own,

248
00:12:32,255 --> 00:12:34,116
send it back to the first one, back and forth,

249
00:12:34,617 --> 00:12:36,919
implementing conversation in like three hours of code.

250
00:12:40,762 --> 00:12:41,362
Oh, PowerPoint.

251
00:12:45,186 --> 00:12:45,826
And we've crashed.

252
00:12:45,846 --> 00:12:55,232
All right.

253
00:12:57,614 --> 00:13:01,356
While PowerPoint is restoring, I will send a video over to the other screen.

254
00:13:01,376 --> 00:13:04,498
Now.

255
00:13:15,647 --> 00:13:15,907
Sorry.

256
00:13:15,927 --> 00:13:19,789
I'll show from current slide.

257
00:13:25,511 --> 00:13:28,172
Danger, crane overhead.

258
00:13:28,673 --> 00:13:30,173
Caution, you're an idiot.

259
00:13:30,734 --> 00:13:33,955
It won't be so funny when you get crushed by a bloody crane.

260
00:13:34,615 --> 00:13:37,157
What kind of monster locks a traffic cone in prison?

261
00:13:37,577 --> 00:13:38,497
It's unconscionable.

262
00:13:38,837 --> 00:13:40,118
It doesn't even make sense.

263
00:13:40,998 --> 00:13:42,279
Do you know who sat at this desk?

264
00:13:42,846 --> 00:13:43,126
Who?

265
00:13:43,386 --> 00:13:44,187
The warden.

266
00:13:44,767 --> 00:13:45,528
No!

267
00:13:45,888 --> 00:13:46,509
It's true.

268
00:13:47,329 --> 00:13:48,130
A wooden plank.

269
00:13:48,630 --> 00:13:50,111
They were trying to keep something in.

270
00:13:50,632 --> 00:13:51,452
Or out.

271
00:13:51,912 --> 00:13:53,594
Well, it is a prison, mate.

272
00:13:53,894 --> 00:13:54,955
Yes, probably in then.

273
00:13:55,835 --> 00:13:57,997
Oh, that's a rather shabby crate.

274
00:13:58,417 --> 00:14:00,298
Oh my God, it's horrible.

275
00:14:00,799 --> 00:14:02,660
Ah, I accidentally looked at it again.

276
00:14:03,000 --> 00:14:03,981
Stop looking at it!

277
00:14:04,401 --> 00:14:07,544
Ha ha ha.

278
00:14:07,624 --> 00:14:11,286
Incidentally, the Redbot Richard Lord, the same artist who did the original Wheatley voice

279
00:14:11,326 --> 00:14:12,407
that you may have heard on YouTube.

280
00:14:12,968 --> 00:14:13,088
Right.

281
00:14:13,709 --> 00:14:15,611
So it's great to have characters babbling at each other,

282
00:14:15,631 --> 00:14:17,133
but you know what conversation really needs?

283
00:14:17,233 --> 00:14:18,455
It needs running gags.

284
00:14:19,015 --> 00:14:20,597
We needed some way for characters to remember

285
00:14:20,637 --> 00:14:22,860
what they had said to each other, to said to themselves,

286
00:14:23,200 --> 00:14:24,282
and what the player had done to them.

287
00:14:25,243 --> 00:14:26,885
Once again, what is the easiest possible way

288
00:14:26,905 --> 00:14:27,566
that we can do this?

289
00:14:27,906 --> 00:14:28,026
Well.

290
00:14:28,927 --> 00:14:33,229
We have this notion of every time a character says a line, it's evaluating all these criteria

291
00:14:33,269 --> 00:14:35,310
about the state of the world that we passed in from the function.

292
00:14:35,870 --> 00:14:40,151
What if, along with all the other state in this function, we also pass in a table that

293
00:14:40,211 --> 00:14:41,392
is stored in the character's head?

294
00:14:41,652 --> 00:14:45,393
We can just have the writer store arbitrary variables, just a name and a number, and it

295
00:14:45,413 --> 00:14:46,034
can update that.

296
00:14:46,414 --> 00:14:50,735
So the first time this robot sees a barrel, it's going to go through its database, it's

297
00:14:50,755 --> 00:14:51,796
going to find that first line.

298
00:14:52,916 --> 00:14:57,578
And then it's going to set that scene barrels parameter to one more than it was before.

299
00:14:57,618 --> 00:15:01,820
So the next time it sees a barrel, it's going to go through the same thing except the scene

300
00:15:01,840 --> 00:15:05,022
barrels criterion will match for the second row.

301
00:15:05,042 --> 00:15:07,603
Don't fail me now, PowerPoint.

302
00:15:08,364 --> 00:15:10,505
The second row and play the next line.

303
00:15:10,665 --> 00:15:13,566
And that way you can get a whole series of lines about an event.

304
00:15:13,586 --> 00:15:17,188
All right.

305
00:15:17,708 --> 00:15:19,169
Switching to emergency backup laptop.

306
00:15:24,893 --> 00:15:24,956
you

307
00:16:06,753 --> 00:16:07,133
And we're back.

308
00:16:09,354 --> 00:16:12,696
All right.

309
00:16:13,276 --> 00:16:16,618
That is all the code it takes to do this kind of memory mechanism.

310
00:16:16,778 --> 00:16:16,898
Right?

311
00:16:16,918 --> 00:16:20,900
You see that first rule there for no scene barrels, the first time the character sees

312
00:16:20,920 --> 00:16:22,200
a barrel, he's going to play that rule.

313
00:16:22,721 --> 00:16:26,663
Then it will set that scene barrels criterion to one more, play the second rule.

314
00:16:28,092 --> 00:16:29,993
That one has the additional criterion there.

315
00:16:30,894 --> 00:16:31,774
And then when that's finished, it's

316
00:16:31,794 --> 00:16:33,536
going to increment that state one more time,

317
00:16:34,036 --> 00:16:36,697
and then send a trigger back to the other robot.

318
00:16:42,081 --> 00:16:43,822
Fast quantities of urine.

319
00:16:43,842 --> 00:16:45,303
Ooh, I very much doubt that.

320
00:16:45,343 --> 00:16:48,324
Do you doubt it enough to go stick your head inside?

321
00:16:49,385 --> 00:16:51,506
Look out, another urine barrel.

322
00:16:52,987 --> 00:16:54,228
This heater appears to be broken.

323
00:16:54,248 --> 00:16:56,690
We've got to get out of here before we freeze to death.

324
00:16:57,194 --> 00:16:59,955
Another broken heater. The entire system must be down.

325
00:17:01,236 --> 00:17:04,958
This is the type of bottle that I'm afraid might contain a bit of urine.

326
00:17:05,398 --> 00:17:11,521
What is wrong with you?

327
00:17:11,561 --> 00:17:15,963
After we finished that project and kind of overcame our laughter, Left 4 Dead was going into production.

328
00:17:16,203 --> 00:17:20,465
And we realized that Left 4 Dead, again I'm showing you examples from Left 4 Dead 2, but it's the same tech.

329
00:17:20,925 --> 00:17:23,066
Left 4 Dead is a game that would really benefit from this.

330
00:17:23,916 --> 00:17:25,476
And the thing about why, if you haven't played it,

331
00:17:25,556 --> 00:17:27,597
it's about four human survivors, you and your friends,

332
00:17:28,217 --> 00:17:29,557
against a zombie apocalypse.

333
00:17:30,357 --> 00:17:32,718
It is a game that is designed to have high replay value.

334
00:17:33,218 --> 00:17:34,978
There are only about five campaigns that ship with them,

335
00:17:35,358 --> 00:17:36,798
about one hour long a piece,

336
00:17:37,058 --> 00:17:39,519
but every time you play the game, it's different,

337
00:17:39,639 --> 00:17:41,859
because an AI director throws different situations,

338
00:17:41,899 --> 00:17:44,020
different characters, different enemies at you each time.

339
00:17:46,060 --> 00:17:47,280
But you can see why this means

340
00:17:47,300 --> 00:17:49,280
that we couldn't have pre-canned audio

341
00:17:49,421 --> 00:17:51,121
unlike environmental triggers.

342
00:17:52,110 --> 00:17:55,894
For example, Nick the gambler cannot say the same line about the hunter zombie every time

343
00:17:55,934 --> 00:17:59,118
he sets foot in the warehouse for the first time because the zombie may not be there.

344
00:17:59,138 --> 00:18:00,259
It may be a different zombie.

345
00:18:00,379 --> 00:18:01,480
You may have seen the zombie earlier.

346
00:18:01,881 --> 00:18:02,662
Nick may be dead.

347
00:18:03,583 --> 00:18:08,448
Moreover, because you're playing the same mission a bunch of times, if you played the

348
00:18:08,488 --> 00:18:12,253
exact same line at the exact same location, it would be rapidly very tiring.

349
00:18:13,160 --> 00:18:15,743
And as I mentioned, the game is about getting to safety,

350
00:18:16,343 --> 00:18:17,384
but not everyone makes it.

351
00:18:17,844 --> 00:18:19,245
We needed some kind of system that

352
00:18:19,285 --> 00:18:21,347
could cope with characters being dead at certain points

353
00:18:21,387 --> 00:18:22,688
in the game and try to figure out,

354
00:18:22,708 --> 00:18:24,610
what can I say with whoever happens to be alive?

355
00:18:26,832 --> 00:18:28,954
Here's a little bit of what I mean about having variety

356
00:18:29,254 --> 00:18:29,654
in the game.

357
00:18:30,435 --> 00:18:32,477
This is the exact same point in the exact same mission,

358
00:18:32,817 --> 00:18:33,758
but two different playthroughs.

359
00:18:35,296 --> 00:18:36,836
Okay, here's the plan.

360
00:18:37,576 --> 00:18:38,937
First we look for supplies.

361
00:18:39,437 --> 00:18:41,517
Then we start the Midnight Rider finale.

362
00:18:41,977 --> 00:18:45,538
It's all kinds of fireworks, smoke pots, and lights and shit.

363
00:18:45,998 --> 00:18:47,879
That chopper pilot can't miss it.

364
00:18:48,399 --> 00:18:50,920
So we gotta set up to rock, and then fight zombies.

365
00:18:51,720 --> 00:18:53,560
This is the best day of my life!

366
00:18:55,100 --> 00:18:56,541
Okay, here's the plan.

367
00:18:57,385 --> 00:19:04,211
It's been a long time since I've seen the Riders, but if their finale is the same, that'll signal the chopper pilot.

368
00:19:04,651 --> 00:19:05,892
We just need to start it.

369
00:19:06,533 --> 00:19:09,555
Coach, that is the stupidest idea I have ever agreed with.

370
00:19:10,116 --> 00:19:12,878
Then let's do it. Everybody grab a weapon and let's go!

371
00:19:15,351 --> 00:19:16,911
In addition to canned conversations,

372
00:19:17,232 --> 00:19:18,872
we also needed a way for AI characters

373
00:19:18,892 --> 00:19:20,413
to call out things they saw in the world.

374
00:19:21,133 --> 00:19:23,234
Things like ammunition caches and weapon caches

375
00:19:23,394 --> 00:19:25,274
are in a different place in the world and on every play

376
00:19:25,294 --> 00:19:26,475
that we put weapons differently.

377
00:19:26,515 --> 00:19:28,055
It's part of the replayability.

378
00:19:28,555 --> 00:19:29,816
And if you're playing with human friends,

379
00:19:29,876 --> 00:19:31,756
your friends will tell you, oh, there's a weapons cache

380
00:19:31,796 --> 00:19:32,577
over here this time.

381
00:19:33,117 --> 00:19:35,277
But you may not always have three human co-players.

382
00:19:35,317 --> 00:19:36,758
You may have robots in their place.

383
00:19:36,798 --> 00:19:38,378
The game is designed to fill out your team

384
00:19:38,718 --> 00:19:39,499
if you're playing alone.

385
00:19:40,019 --> 00:19:41,459
So the robot players needed to call

386
00:19:41,499 --> 00:19:43,560
these pieces of information out in the same way.

387
00:19:44,500 --> 00:19:47,824
And once we did it for the AIs, we realized it's pretty fun to have the human-controlled

388
00:19:47,864 --> 00:19:49,406
characters talk automatically as well.

389
00:19:49,446 --> 00:19:50,467
It helps the role-playing.

390
00:19:53,370 --> 00:19:54,171
We have guns here!

391
00:19:54,211 --> 00:19:54,331
Smoker!

392
00:19:54,351 --> 00:19:55,332
Nice shot!

393
00:19:55,372 --> 00:19:56,513
I hear a jockey.

394
00:19:56,533 --> 00:19:56,713
Jockey!

395
00:19:56,733 --> 00:19:57,414
Jockey!

396
00:19:57,454 --> 00:19:57,574
Jockey!

397
00:19:57,594 --> 00:19:58,355
Reloading.

398
00:19:58,375 --> 00:19:58,715
Kill the clown!

399
00:19:58,735 --> 00:19:59,176
I got a boop!

400
00:19:59,196 --> 00:20:00,057
I got a boop!

401
00:20:00,097 --> 00:20:00,637
I got a boop!

402
00:20:00,657 --> 00:20:00,898
I got a boop!

403
00:20:00,938 --> 00:20:01,198
I got a boop!

404
00:20:01,238 --> 00:20:02,159
I got a boop!

405
00:20:02,179 --> 00:20:02,519
I got a boop!

406
00:20:02,539 --> 00:20:03,180
I got a boop!

407
00:20:03,200 --> 00:20:03,440
I got a boop!

408
00:20:03,460 --> 00:20:04,842
I got a boop!

409
00:20:04,862 --> 00:20:05,142
I got a boop!

410
00:20:05,162 --> 00:20:05,743
I got a boop!

411
00:20:05,763 --> 00:20:07,384
I got a boop!

412
00:20:07,404 --> 00:20:07,645
I got a boop!

413
00:20:11,646 --> 00:20:15,269
And finally, Left 4 Dead is a game that tells its story through in the environment.

414
00:20:15,289 --> 00:20:17,611
There's not a lot of cut scenes or scripted sequences.

415
00:20:18,012 --> 00:20:21,455
The story of the zombie apocalypse is told through the environments that you move through

416
00:20:21,495 --> 00:20:22,616
and the objects you come across.

417
00:20:23,056 --> 00:20:26,499
So the best opportunity for characters to express themselves, for us to have character

418
00:20:26,539 --> 00:20:30,843
moments, was to have them interact with and talk about the environment as well.

419
00:20:32,625 --> 00:20:38,390
Elephant ears, funnel capes, corn dogs, man these signs are bringing back some memories.

420
00:20:41,903 --> 00:20:43,223
Hey, can we stop and make some cotton candy?

421
00:20:43,843 --> 00:20:44,283
Seriously.

422
00:20:45,484 --> 00:20:46,784
Holy shit, guys!

423
00:20:47,144 --> 00:20:48,184
Candy Land!

424
00:20:48,985 --> 00:20:50,265
I wanna ride one. Just one.

425
00:20:50,505 --> 00:20:52,085
Just let me ride the Screaming Oak once.

426
00:20:52,586 --> 00:20:54,226
Man, when are we ever gonna be here again?

427
00:20:56,246 --> 00:20:58,887
Well, looks like we're going through the tunnel of love, people.

428
00:20:59,967 --> 00:21:01,008
No hanky-panky.

429
00:21:03,828 --> 00:21:05,269
The air duct of love.

430
00:21:07,189 --> 00:21:08,870
I found a burger tank in this place.

431
00:21:09,936 --> 00:21:12,788
I'm gonna be a one-man cheeseburger apocalypse.

432
00:21:16,868 --> 00:21:20,690
To get this kind of scale, it is imperative that your writers are the ones doing your

433
00:21:20,730 --> 00:21:21,030
writing.

434
00:21:21,450 --> 00:21:23,711
You want to give your writers tools, not homework assignments.

435
00:21:24,592 --> 00:21:28,714
In a lot of games like this, what happens is the AI programmer, while making the AI,

436
00:21:28,794 --> 00:21:32,976
asks himself, hmm, well, at what moments would this character like to say something?

437
00:21:33,016 --> 00:21:34,937
Let me try to guess all the times a character would speak.

438
00:21:34,957 --> 00:21:37,939
I'll put code hooks in for that, give the writer this big spreadsheet and tell her,

439
00:21:38,799 --> 00:21:40,480
fill this out with things the character could say.

440
00:21:40,820 --> 00:21:43,482
Well, this reduces your writer to filling out Mad Libs, which is not writing.

441
00:21:44,322 --> 00:21:46,224
It also means your programmer is the one doing the writing.

442
00:21:46,684 --> 00:21:48,525
And the intersection between good programmers and good

443
00:21:48,565 --> 00:21:50,526
writers, while non-zero, is pretty small.

444
00:21:50,606 --> 00:21:52,267
It's kind of Verner Vinge, really.

445
00:21:54,029 --> 00:21:56,370
So as much as possible, you really want the writers to be

446
00:21:56,390 --> 00:21:58,912
the ones driving when lines get said, what are the

447
00:21:58,952 --> 00:22:01,133
circumstances, what are the specific cases that need

448
00:22:01,153 --> 00:22:02,954
specific lines, what are the general cases that need

449
00:22:02,974 --> 00:22:04,095
general lines, and so on.

450
00:22:05,445 --> 00:22:06,085
Here's how we did it.

451
00:22:06,946 --> 00:22:09,168
I should warn you, the system is incredibly simple.

452
00:22:09,388 --> 00:22:11,169
It is brain dead, face palm,

453
00:22:11,469 --> 00:22:12,570
why didn't I think of that symbol?

454
00:22:13,051 --> 00:22:13,831
That is the point.

455
00:22:14,412 --> 00:22:15,773
The system evolved by accretion.

456
00:22:15,853 --> 00:22:17,174
It wasn't designed from the ground up.

457
00:22:17,314 --> 00:22:18,755
It was we had this one thing in Half-Life

458
00:22:18,775 --> 00:22:20,256
and then we added something and added something.

459
00:22:20,617 --> 00:22:21,738
If we had designed it from the ground up,

460
00:22:21,758 --> 00:22:22,698
there's no way we could have come up

461
00:22:22,718 --> 00:22:23,399
with something as simple.

462
00:22:25,107 --> 00:22:25,928
Here's the general idea.

463
00:22:25,948 --> 00:22:28,129
Got a big database full of rules.

464
00:22:28,649 --> 00:22:30,030
A rule is a list of criteria that

465
00:22:30,070 --> 00:22:32,371
have to be met about the world, like which map I'm on,

466
00:22:32,411 --> 00:22:33,511
how many players are nearby.

467
00:22:34,492 --> 00:22:35,912
Each rule associated has a response.

468
00:22:36,113 --> 00:22:37,893
It's just the thing that happens when the rule matches,

469
00:22:38,134 --> 00:22:38,854
like a line playing.

470
00:22:40,095 --> 00:22:41,995
When you want to say a line, you build up a query

471
00:22:42,436 --> 00:22:43,516
of all the state in the world.

472
00:22:44,096 --> 00:22:45,097
You take all the state in the world,

473
00:22:45,137 --> 00:22:47,278
you find the rule that best matches that state.

474
00:22:48,339 --> 00:22:51,520
When you find one, you send that response over to the character.

475
00:22:51,960 --> 00:22:52,881
Character says the line.

476
00:22:53,341 --> 00:22:54,462
You have achieved dialogue.

477
00:22:55,901 --> 00:22:57,522
A glossary for the words I'm about to throw at you.

478
00:22:57,542 --> 00:23:00,523
When I say context or fact, it is just a piece of state

479
00:23:00,583 --> 00:23:01,904
about the world, like my hit points.

480
00:23:02,364 --> 00:23:03,885
Query is a bunch of those all together,

481
00:23:04,325 --> 00:23:05,086
all the state of the world.

482
00:23:05,526 --> 00:23:07,527
Criterion is a single thing that has to be true

483
00:23:08,007 --> 00:23:09,728
about the world, like my hit points R5.

484
00:23:10,268 --> 00:23:11,469
A rule is a bunch of those together,

485
00:23:11,549 --> 00:23:13,130
and the response is the thing that happens.

486
00:23:15,037 --> 00:23:16,780
To think about the way that we assemble these queries,

487
00:23:17,220 --> 00:23:18,982
programmers are used to thinking of the world

488
00:23:19,503 --> 00:23:21,826
as a pile of facts, strewn hither and yon.

489
00:23:22,067 --> 00:23:24,149
If I'm going to play a line about a character

490
00:23:24,189 --> 00:23:27,013
when he's in the cave and he's got a number of allies nearby,

491
00:23:27,454 --> 00:23:29,576
I'm used to calling all these member functions and looking

492
00:23:29,637 --> 00:23:31,279
at data things and knowing where to find these things.

493
00:23:31,839 --> 00:23:32,961
So a few problems with this approach.

494
00:23:33,662 --> 00:23:34,802
One is it's not discoverable.

495
00:23:35,063 --> 00:23:37,484
It's hard to know what information is available to you

496
00:23:37,884 --> 00:23:40,786
to pick a piece of behavior from unless you kind of put it

497
00:23:40,806 --> 00:23:42,527
there yourself or you've read the docs or something.

498
00:23:42,987 --> 00:23:44,828
Secondly, it's kind of a palaver to get

499
00:23:44,848 --> 00:23:46,549
in the individual piece of information.

500
00:23:46,609 --> 00:23:47,970
If I want the name of my ally, I have

501
00:23:47,990 --> 00:23:50,432
to know that I have the current player object from which I

502
00:23:50,472 --> 00:23:52,173
call the ally function and I get the thing.

503
00:23:52,933 --> 00:23:56,695
Thirdly, kind of a mess, right?

504
00:23:57,776 --> 00:24:00,858
Way easier to think of the world as a flat list of facts.

505
00:24:01,787 --> 00:24:05,074
Every time you want to do a query, you just pull all that information into one place.

506
00:24:05,094 --> 00:24:05,715
It's always there.

507
00:24:05,735 --> 00:24:07,379
It makes it way more discoverable.

508
00:24:07,960 --> 00:24:11,167
You can just look at the query and see what information you have available to write a

509
00:24:11,187 --> 00:24:11,587
rule from.

510
00:24:12,601 --> 00:24:15,482
You don't have to go thinking very hard about where you're going to get this information from.

511
00:24:16,042 --> 00:24:19,423
Sure, you have to do a little bit of extra work to pull all the information together in the first place,

512
00:24:19,823 --> 00:24:21,523
but I'll show you that's actually not that much more work,

513
00:24:21,863 --> 00:24:23,204
but it is so much more usable.

514
00:24:23,444 --> 00:24:24,524
It is absolutely worth it.

515
00:24:25,324 --> 00:24:27,365
So let's think about how we build up these queries.

516
00:24:27,845 --> 00:24:29,545
An individual fact is a piece of state.

517
00:24:30,085 --> 00:24:31,065
My hit points are 57.

518
00:24:31,726 --> 00:24:32,886
It is just a key value pair.

519
00:24:33,366 --> 00:24:35,066
It's a name and a value.

520
00:24:35,607 --> 00:24:36,308
The name is a string.

521
00:24:36,888 --> 00:24:38,890
By the way, when I say string in this talk,

522
00:24:38,930 --> 00:24:41,313
I do not mean that you should use a const char star like a noob.

523
00:24:41,853 --> 00:24:44,536
I am assuming that you have some kind of in-turn string representation,

524
00:24:44,616 --> 00:24:45,537
some kind of symbol table.

525
00:24:45,998 --> 00:24:48,841
I'm just using the word string to mean some kind of human,

526
00:24:49,041 --> 00:24:50,583
readable, unique identifying number.

527
00:24:52,305 --> 00:24:53,805
A query is a pile of those together.

528
00:24:54,405 --> 00:24:56,866
It is not usually meaningful to have the same key appear

529
00:24:56,886 --> 00:24:57,586
twice in a query.

530
00:24:57,646 --> 00:24:58,986
Hit points cannot be both 50 and 80.

531
00:24:59,767 --> 00:25:00,987
So really, it's a dictionary.

532
00:25:01,187 --> 00:25:02,167
It's an associative array.

533
00:25:02,967 --> 00:25:05,628
We have typically queries that are hundreds of items long

534
00:25:05,748 --> 00:25:08,289
because we pull together all the possible state of the world

535
00:25:08,609 --> 00:25:09,809
every time we query the database.

536
00:25:10,309 --> 00:25:12,110
That is so that if our writer wakes up

537
00:25:12,150 --> 00:25:14,010
in the middle of the night with this brilliant idea for a line

538
00:25:14,030 --> 00:25:16,091
that can be said when the zombie is on the merry-go-round next

539
00:25:16,111 --> 00:25:17,611
to the ice cream machine for the third time,

540
00:25:18,031 --> 00:25:18,191
you can.

541
00:25:18,552 --> 00:25:21,852
You can add this line without having to ask the programmer to inject any additional state

542
00:25:21,892 --> 00:25:22,472
into the query.

543
00:25:22,712 --> 00:25:23,473
It's just always there.

544
00:25:24,153 --> 00:25:28,894
For performance reasons, we have a couple of key names that are in every query and every

545
00:25:28,934 --> 00:25:29,154
rule.

546
00:25:29,314 --> 00:25:30,154
You'll see why in a sec.

547
00:25:30,974 --> 00:25:36,135
We call them the concept, the general idea being said, reloading, I'm hit, and who, which

548
00:25:36,175 --> 00:25:36,915
is the person speaking.

549
00:25:36,935 --> 00:25:39,976
It makes no sense to play a line if you don't know who's talking.

550
00:25:41,236 --> 00:25:44,577
To build a query, you start with the function that decides it wants to speak.

551
00:25:45,782 --> 00:25:48,782
For example, let's say we have our on hit event function.

552
00:25:49,042 --> 00:25:50,823
This is the thing that starts the events in motion.

553
00:25:51,323 --> 00:25:52,443
It creates this query object.

554
00:25:53,043 --> 00:25:55,844
It starts filling out the first fields in the associative array

555
00:25:56,104 --> 00:25:58,045
based on the parameters to the event.

556
00:25:58,625 --> 00:26:01,026
And then it calls into the base speak function.

557
00:26:01,046 --> 00:26:03,166
It starts to pull together information about the world.

558
00:26:03,886 --> 00:26:06,327
The first wad of information we get is about the player.

559
00:26:07,067 --> 00:26:08,568
Let's say it's Nick in this case.

560
00:26:09,108 --> 00:26:11,109
There's a bunch of stuff that we can procedurally

561
00:26:11,129 --> 00:26:13,470
calculate about Nick that might be relevant for a line.

562
00:26:13,930 --> 00:26:17,112
For example, his hit points, his ammunition, who's nearby.

563
00:26:18,152 --> 00:26:20,473
We simply go through all the member functions,

564
00:26:20,593 --> 00:26:23,555
all the state on Nick, pull it together, add it to the array.

565
00:26:24,833 --> 00:26:27,596
Then we take any of the arbitrary memory numbers

566
00:26:27,616 --> 00:26:28,697
that may have been stored on Nick,

567
00:26:28,737 --> 00:26:30,058
the things that the writers may have just

568
00:26:30,098 --> 00:26:32,680
given arbitrary names to and triggered from roles.

569
00:26:33,221 --> 00:26:36,023
These two are pulled from Nick's memory and added to the array.

570
00:26:36,744 --> 00:26:38,625
We do the same thing, pulling in data from the world,

571
00:26:39,146 --> 00:26:41,448
both procedural information, like what map are we on,

572
00:26:41,848 --> 00:26:44,811
which allies are alive, have we encountered the crazy hillbilly,

573
00:26:44,991 --> 00:26:46,973
and so forth, as well as, once again,

574
00:26:47,013 --> 00:26:48,854
writers can store arbitrary state on the world.

575
00:26:48,874 --> 00:26:50,356
It's just a key and a value.

576
00:26:51,296 --> 00:26:52,638
Take all these sources of information,

577
00:26:53,741 --> 00:26:56,250
you merge them all together into one gigantic table.

578
00:26:56,270 --> 00:26:57,755
This is your query.

579
00:26:59,596 --> 00:27:02,318
It's also natural to think of dialogue as a pile of rules.

580
00:27:02,438 --> 00:27:04,339
We're used to thinking of like, well, in general,

581
00:27:04,379 --> 00:27:06,521
if the henchman sees Batman, he says, oh, look, Batman,

582
00:27:06,581 --> 00:27:08,202
unless he can kind of barely see Batman,

583
00:27:08,502 --> 00:27:09,583
unless he works for the Penguin,

584
00:27:09,963 --> 00:27:11,725
unless he works for the Penguin and the Penguin is dead,

585
00:27:12,125 --> 00:27:14,226
unless, you know, unless, unless, unless, unless.

586
00:27:14,687 --> 00:27:17,589
It's really natural to think in terms of general rules

587
00:27:17,969 --> 00:27:20,711
and specific exceptions and exceptions to the exceptions

588
00:27:20,771 --> 00:27:22,512
and exceptions to the exceptions to the exceptions,

589
00:27:22,792 --> 00:27:24,073
kind of like a pyramid.

590
00:27:25,702 --> 00:27:29,446
To this end, we represent each of those exceptions as a criterion,

591
00:27:29,726 --> 00:27:32,309
which is just a function that tests a fact, like,

592
00:27:32,769 --> 00:27:33,470
is the speaker bill?

593
00:27:34,151 --> 00:27:35,192
Are hit points between 30 and 60?

594
00:27:35,292 --> 00:27:38,936
In computer sciences, it's a predicate function,

595
00:27:38,996 --> 00:27:41,038
but in practice, we don't really use function pointers

596
00:27:41,399 --> 00:27:42,059
for this kind of thing.

597
00:27:42,079 --> 00:27:44,742
I mean, you could, but there's not much call for it.

598
00:27:45,823 --> 00:27:47,424
A rule is a pile of those together.

599
00:27:48,785 --> 00:27:50,767
All the criteria in a rule must match for the rule

600
00:27:50,787 --> 00:27:51,708
to be considered a match.

601
00:27:52,468 --> 00:27:54,730
If a criterion mentions a key name that isn't in the query,

602
00:27:54,890 --> 00:27:56,892
like there's a killed five bunnies criterion,

603
00:27:57,232 --> 00:27:58,714
and the query doesn't even mention bunnies,

604
00:27:59,034 --> 00:28:00,235
the criterion is considered a fail.

605
00:28:01,314 --> 00:28:03,395
And because multiple rules may match a given query,

606
00:28:03,755 --> 00:28:05,495
like if you see a zombie on the merry-go-round,

607
00:28:05,515 --> 00:28:07,336
you're going to say, oh, look, a frolicsome zombie

608
00:28:07,356 --> 00:28:08,036
in the merry-go-round.

609
00:28:08,416 --> 00:28:10,957
But the, oh, look, a zombie line will also match.

610
00:28:11,157 --> 00:28:13,237
So you have to have some way to pick the specific rules

611
00:28:13,618 --> 00:28:14,978
over the more general ones.

612
00:28:15,758 --> 00:28:17,239
We tried a bunch of different scoring functions.

613
00:28:17,599 --> 00:28:19,499
As always, the very simplest one imaginable

614
00:28:19,539 --> 00:28:20,519
was the one that worked best.

615
00:28:20,980 --> 00:28:24,180
The more criteria a rule has, the more specific it is,

616
00:28:24,801 --> 00:28:25,521
the higher it scores.

617
00:28:26,826 --> 00:28:31,007
Let's walk really fast through a simple example of how we might match a single rule to a query.

618
00:28:31,428 --> 00:28:32,308
Let's say this is our query.

619
00:28:32,768 --> 00:28:37,209
Nick has been hit in the circus, he's partially injured, he has two friends, and he was hit by a zombie clown.

620
00:28:37,850 --> 00:28:40,551
Let's think about all the rules we might have in the seven rule database.

621
00:28:41,571 --> 00:28:44,572
First one, has Nick been hit? Yes. Passes.

622
00:28:45,152 --> 00:28:48,533
The next one, the concept criterion does not match. Fails.

623
00:28:49,221 --> 00:28:52,305
Next, the health criterion doesn't match, fails.

624
00:28:52,885 --> 00:28:54,767
Next, there's a more specific criterion.

625
00:28:55,128 --> 00:28:56,249
Does he have at least one ally?

626
00:28:56,309 --> 00:28:57,390
He does, passes.

627
00:28:58,091 --> 00:28:59,593
Next, are we in the circus?

628
00:28:59,993 --> 00:29:00,614
Yes, we are.

629
00:29:01,936 --> 00:29:02,576
Was it a clown?

630
00:29:02,877 --> 00:29:03,437
Yes, it was.

631
00:29:04,398 --> 00:29:05,720
Was it a clown in the circus?

632
00:29:05,860 --> 00:29:06,621
Yes, it was.

633
00:29:08,383 --> 00:29:09,725
So here are the rules that have passed.

634
00:29:10,982 --> 00:29:14,884
To start with, we've got this one, which has only two criteria, and this one has three.

635
00:29:15,124 --> 00:29:17,465
So we can reject the first rule. It's not specific. It won't play.

636
00:29:18,185 --> 00:29:22,468
Up to this point, each of these rules has a score of three. They each have three criteria.

637
00:29:22,848 --> 00:29:26,130
So to this point, the engine would randomly pick from any of them to say a line here.

638
00:29:26,150 --> 00:29:28,871
They're all equally specific, and we'd get more variety that way.

639
00:29:29,271 --> 00:29:32,013
But in this case, we have one line that is more specific.

640
00:29:32,273 --> 00:29:34,334
It has a higher score. That is the one that will play.

641
00:29:35,622 --> 00:29:37,283
The response is an arbitrary payload.

642
00:29:37,663 --> 00:29:38,444
It's whatever happens.

643
00:29:38,844 --> 00:29:41,305
There's not much to say about it other than that it's OK to

644
00:29:41,345 --> 00:29:43,166
have a bit of intelligence in your response.

645
00:29:43,606 --> 00:29:46,708
What we have here are a number of different minor variations

646
00:29:46,748 --> 00:29:49,009
in the same line that are all considered the same response.

647
00:29:49,409 --> 00:29:50,730
The game will randomly pick between them.

648
00:29:51,290 --> 00:29:54,352
Saves us the effort of having 12 parallel rules for the same

649
00:29:54,412 --> 00:29:54,672
notion.

650
00:29:54,692 --> 00:29:57,453
You can also have responses that disable themselves, that

651
00:29:57,493 --> 00:29:58,994
move sequentially through a series of lines.

652
00:29:59,374 --> 00:30:01,455
It's totally cool to have arbitrary logic in your

653
00:30:01,475 --> 00:30:02,996
response, however you implement it.

654
00:30:04,712 --> 00:30:07,394
Let's think of a simple example of how we handle write-back

655
00:30:07,434 --> 00:30:08,796
in conversations between characters,

656
00:30:09,276 --> 00:30:11,258
one of those convos at the beginning of a mission.

657
00:30:14,002 --> 00:30:16,425
Every few seconds, a character just asks themselves,

658
00:30:16,945 --> 00:30:18,046
do I have a line to say?

659
00:30:18,447 --> 00:30:19,528
That's what we call the idle talk.

660
00:30:20,248 --> 00:30:22,170
This rule will match if that's happening,

661
00:30:22,791 --> 00:30:24,953
and there are at least three living survivors,

662
00:30:25,573 --> 00:30:28,076
and the person speaking is Nick, the gambler,

663
00:30:28,676 --> 00:30:29,997
and he hasn't said this line before,

664
00:30:30,618 --> 00:30:33,040
and he's in the swamp, and he's in the start area.

665
00:30:33,661 --> 00:30:34,422
All these things match.

666
00:30:35,434 --> 00:30:37,375
This rule will match before it says a line.

667
00:30:37,935 --> 00:30:39,817
It's going to write some state back to Nick's memory.

668
00:30:40,457 --> 00:30:43,299
In this particular case, simply that this line has been said,

669
00:30:43,319 --> 00:30:46,582
and then that Nick is speaking so that other characters don't

670
00:30:46,602 --> 00:30:47,142
talk over him.

671
00:30:48,423 --> 00:30:50,925
You can set an expiry time in some contexts, if you like.

672
00:30:50,965 --> 00:30:52,806
That's how you can prevent successive lines of a running

673
00:30:52,847 --> 00:30:54,428
gag playing too close to each other.

674
00:30:55,860 --> 00:30:57,000
Then we will play the response.

675
00:30:57,501 --> 00:30:59,622
There's three lines in this particular response.

676
00:30:59,662 --> 00:31:00,822
We'll choose randomly between them.

677
00:31:01,122 --> 00:31:03,684
If the first one plays, Swamp's Going to Ruin My White Suit,

678
00:31:04,444 --> 00:31:07,426
after it's finished, the then clause there

679
00:31:07,826 --> 00:31:11,068
will send this concept over to Rochelle, the TV producer.

680
00:31:11,868 --> 00:31:14,670
She'll check her database to see if she has a reply to that.

681
00:31:14,890 --> 00:31:15,410
And she does.

682
00:31:15,790 --> 00:31:16,611
She'll say her reply.

683
00:31:16,631 --> 00:31:19,372
And then after that, it sends an event back to Nick the Gambler

684
00:31:20,052 --> 00:31:20,673
and back and forth.

685
00:31:21,692 --> 00:31:22,453
could have come out differently.

686
00:31:23,053 --> 00:31:24,034
Second line could have been played.

687
00:31:24,694 --> 00:31:26,475
After he says, these swamps don't agree with me,

688
00:31:26,655 --> 00:31:28,376
the follow up goes back to Nick.

689
00:31:28,637 --> 00:31:31,919
It creates the illusion that he's saying one longer line

690
00:31:31,939 --> 00:31:34,460
rather than having a back and forth conversation.

691
00:31:34,840 --> 00:31:36,942
That way we can bail out of the conversation if we need to.

692
00:31:37,743 --> 00:31:40,364
After he said that second line, once again there's two choices.

693
00:31:40,945 --> 00:31:42,085
He happens to pick the first one,

694
00:31:42,505 --> 00:31:43,946
then the reply at the end of that line

695
00:31:43,966 --> 00:31:44,906
goes over to the mechanic.

696
00:31:45,386 --> 00:31:46,547
Mechanic checks his database.

697
00:31:46,867 --> 00:31:48,267
He's got a line, and so on.

698
00:31:48,807 --> 00:31:51,308
This is a brain dead simple way to create

699
00:31:51,568 --> 00:31:53,929
branching conversations of as many different branches

700
00:31:53,969 --> 00:31:55,770
as you like with a minimum of effort.

701
00:31:56,290 --> 00:31:58,771
Because as you saw, each of these individual branches

702
00:31:58,891 --> 00:32:00,591
is maybe five lines of text.

703
00:32:02,542 --> 00:32:05,183
In addition to sending a reply to a specific character,

704
00:32:05,683 --> 00:32:08,144
we also have a way to ask all of the characters nearby,

705
00:32:08,564 --> 00:32:10,405
do any of you have something that you want to say?

706
00:32:11,085 --> 00:32:13,106
For example, let us say that Nick is badly injured

707
00:32:13,226 --> 00:32:14,206
and he's unhappy about that.

708
00:32:15,286 --> 00:32:17,567
Not dead yet, but not exactly healthy.

709
00:32:18,548 --> 00:32:20,108
After he finishes saying this line,

710
00:32:20,248 --> 00:32:22,669
it's going to dispatch that ally dying concept

711
00:32:23,089 --> 00:32:24,530
to any character within earshot.

712
00:32:24,550 --> 00:32:25,810
He's going to ask every character,

713
00:32:26,410 --> 00:32:27,851
do you have a reply that you want to say?

714
00:32:28,451 --> 00:32:29,091
Rochelle does not.

715
00:32:29,651 --> 00:32:31,012
Ellis has kind of a general reply,

716
00:32:31,372 --> 00:32:31,772
but coach.

717
00:32:32,820 --> 00:32:36,302
Coach is different. Coach is a coach. He coaches people through their difficult times.

718
00:32:36,803 --> 00:32:41,285
He has a whole bunch of really specific lines for the particular case of there being an injured ally.

719
00:32:41,765 --> 00:32:46,488
And if Coach happens to be alive and nearby, he's going to be the one with the highest matching response.

720
00:32:49,049 --> 00:32:51,451
Come on now, put it behind you. You good? You good?

721
00:32:52,011 --> 00:32:55,953
In addition to those general replies, he also has specific ones for specific characters.

722
00:32:56,393 --> 00:32:58,775
Hey Nick, at least you dressed for a funeral.

723
00:32:59,756 --> 00:33:01,337
Come on, Alice, you got it in you.

724
00:33:02,138 --> 00:33:03,518
So he could play those specific lines,

725
00:33:03,899 --> 00:33:05,179
but he still has the general lines.

726
00:33:05,560 --> 00:33:08,462
We play them one out of 60 times for the sake of variety,

727
00:33:08,702 --> 00:33:11,323
but moreover, if we had picked up an entirely new character

728
00:33:11,744 --> 00:33:12,824
and dropped her into Left 4 Dead,

729
00:33:13,045 --> 00:33:14,626
if we had picked up Zoe from Left 4 Dead 1

730
00:33:14,666 --> 00:33:15,706
and put her in Left 4 Dead 2,

731
00:33:16,207 --> 00:33:17,708
Coach would still have something to say to her.

732
00:33:18,108 --> 00:33:20,429
Even though we never recorded Zoe's specific lines for Coach,

733
00:33:20,770 --> 00:33:22,831
he would still just fall back to the general case,

734
00:33:23,211 --> 00:33:24,152
and we would have created the illusion

735
00:33:24,192 --> 00:33:25,493
that they had known each other the whole time.

736
00:33:27,215 --> 00:33:29,175
It's also important to remember that every time we

737
00:33:29,195 --> 00:33:31,376
do one of these follow queries, it is de novo.

738
00:33:32,076 --> 00:33:34,137
If Coach mentions his favorite rock band,

739
00:33:34,777 --> 00:33:36,158
and the reply goes over to Ellis,

740
00:33:36,778 --> 00:33:38,319
Ellis is not going to look up his line

741
00:33:38,519 --> 00:33:39,959
until Coach has finished speaking.

742
00:33:40,959 --> 00:33:43,620
The reason for this is, let us say that Coach mentions

743
00:33:43,660 --> 00:33:44,541
his favorite rock band.

744
00:33:44,841 --> 00:33:47,082
But while he's saying this line, a zombie interferes

745
00:33:47,122 --> 00:33:48,082
and starts chewing on Ellis.

746
00:33:48,622 --> 00:33:49,783
In this case, we do not want Ellis

747
00:33:49,803 --> 00:33:51,803
to reply with some banal line about a rock band.

748
00:33:51,843 --> 00:33:53,924
We want him to say, oh my god, a zombie is chewing on me.

749
00:33:56,297 --> 00:34:01,300
So there are ways that you could have like a scripted conversation object and interrupt

750
00:34:01,340 --> 00:34:05,583
it and so on, but it's way easier if Ellis doesn't even look up his reply until Coach

751
00:34:05,623 --> 00:34:09,885
is finished speaking, then the reply that he chooses will be contingent on the criteria

752
00:34:09,925 --> 00:34:11,707
of the world at that exact moment.

753
00:34:12,107 --> 00:34:15,529
And at that exact moment, the not in danger criterion is no longer true.

754
00:34:16,089 --> 00:34:20,032
So the conversation simply self-terminates by virtue of its criteria no longer being

755
00:34:20,072 --> 00:34:20,232
that.

756
00:34:22,433 --> 00:34:25,934
That means there's no cutscene entity that grabs both characters, there's nothing to lock them down,

757
00:34:25,954 --> 00:34:28,956
there's no kinds of cases where people get involved in this big speech,

758
00:34:28,996 --> 00:34:30,877
and a dragon comes and sets them on fire halfway through,

759
00:34:30,917 --> 00:34:32,878
but they can't do anything because they're talking to each other.

760
00:34:32,898 --> 00:34:37,960
It is also helpful, if you have long speeches, to cut them up into little pieces,

761
00:34:38,280 --> 00:34:41,641
where the character says something, and then sends a follow-up to himself, to himself.

762
00:34:42,062 --> 00:34:45,943
That way, if you have these long monologues, they can automatically bail out if something happens.

763
00:34:47,546 --> 00:34:50,108
It also means that you've blurred the line between code and content here,

764
00:34:50,588 --> 00:34:51,289
usually a good thing.

765
00:34:51,309 --> 00:34:53,151
It means writers can do work that otherwise

766
00:34:53,171 --> 00:34:55,573
they would have had to have waited for programmers to do for them.

767
00:34:56,153 --> 00:34:58,815
Less dependencies, less merge conflicts, no compile time.

768
00:34:59,256 --> 00:35:03,039
Typically it's easier to edit and continue script than code, right?

769
00:35:03,059 --> 00:35:07,602
Oh! A leprechaun!

770
00:35:08,063 --> 00:35:09,704
It's a doll. It's just a doll.

771
00:35:10,104 --> 00:35:10,685
Bloody hell.

772
00:35:11,285 --> 00:35:14,988
This prison is a bloody minefield of possibly urine-filled containers.

773
00:35:19,092 --> 00:35:22,279
Alrighty, let us think for a moment about the machine writer interface.

774
00:35:22,359 --> 00:35:24,745
How do we make humans interact with this crazy system?

775
00:35:26,389 --> 00:35:28,330
There is a bit of prior art here, by the way.

776
00:35:28,690 --> 00:35:30,610
A programming language called Inform 7,

777
00:35:31,030 --> 00:35:32,431
designed expressly for the purpose

778
00:35:32,451 --> 00:35:34,491
of writing text adventures, which I am now

779
00:35:34,531 --> 00:35:35,871
supposed to call interactive fiction,

780
00:35:35,891 --> 00:35:39,232
has this very mechanism of rule books,

781
00:35:39,532 --> 00:35:41,153
of general rules being overridden

782
00:35:41,193 --> 00:35:42,093
by more specific ones.

783
00:35:42,493 --> 00:35:44,053
By the way, this is actual source code.

784
00:35:44,093 --> 00:35:46,314
This is what the source code for a text adventure looks like.

785
00:35:46,814 --> 00:35:49,615
Inform is designed to have a language that

786
00:35:49,675 --> 00:35:52,075
resembles natural English as much as possible.

787
00:35:53,163 --> 00:35:57,192
This kind of suggests as to how intuitive this concept is for the sake of writing stories.

788
00:35:57,754 --> 00:36:01,082
A programming language that exists for the sole purpose of creating dialogue has this

789
00:36:01,102 --> 00:36:01,603
very idea.

790
00:36:03,611 --> 00:36:07,575
Moreover, when designing the mechanism for writers to get their dialogue into the system,

791
00:36:08,336 --> 00:36:09,858
assume that your writers are smart, right?

792
00:36:09,918 --> 00:36:10,899
Writers are smart people.

793
00:36:11,159 --> 00:36:13,662
If they were not smart people, they would be vice presidents of marketing.

794
00:36:14,182 --> 00:36:16,845
And smart people know perfectly well what works for them.

795
00:36:17,566 --> 00:36:21,130
Mark Twain did not have to be told by his editor to either purchase or throw out a typewriter.

796
00:36:21,150 --> 00:36:24,273
So let's think about different ways that we can specify these rules.

797
00:36:25,287 --> 00:36:26,467
You could just write the script directly.

798
00:36:27,188 --> 00:36:28,628
Our script language happens to be

799
00:36:29,248 --> 00:36:30,548
the recursive descent language.

800
00:36:31,269 --> 00:36:33,889
It's kind of human readable-ish.

801
00:36:34,549 --> 00:36:36,330
I mean, I guess I could write some lines that way,

802
00:36:36,390 --> 00:36:37,350
but it would be really painful.

803
00:36:38,270 --> 00:36:40,131
Better to have more comfortable tools.

804
00:36:40,271 --> 00:36:43,732
For example, you can always have a more natural

805
00:36:43,752 --> 00:36:45,232
language representation of the rules

806
00:36:45,352 --> 00:36:47,492
and parse from those into your script.

807
00:36:48,553 --> 00:36:50,533
This is pseudocode, but you can see how each of these

808
00:36:50,713 --> 00:36:53,914
individual rules has a pretty mechanical representation.

809
00:36:55,101 --> 00:36:56,142
in the corresponding script.

810
00:36:57,662 --> 00:37:00,284
Similarly, in Form 7, remember, this is not English.

811
00:37:00,724 --> 00:37:02,265
This is a parsable computer grammar.

812
00:37:03,486 --> 00:37:04,686
If you have a parsable grammar, you

813
00:37:04,706 --> 00:37:06,647
can always do a syntax tree transformation,

814
00:37:07,168 --> 00:37:12,110
turn English rules into script rules.

815
00:37:12,130 --> 00:37:13,131
Or you could use Excel.

816
00:37:13,851 --> 00:37:15,432
On Dota, we have a bunch of characters

817
00:37:15,452 --> 00:37:16,593
who have specific rivalries.

818
00:37:17,033 --> 00:37:19,935
When Tidehunter kills Kunkka, he has a specific line to say.

819
00:37:20,695 --> 00:37:22,296
The writer on Dota happens to like Excel.

820
00:37:22,316 --> 00:37:22,576
You know what?

821
00:37:23,577 --> 00:37:24,077
That's fine.

822
00:37:24,357 --> 00:37:26,459
We have a script that exports from Excel

823
00:37:26,539 --> 00:37:27,680
into our in-engine script.

824
00:37:28,681 --> 00:37:29,722
And it's actually really convenient

825
00:37:29,782 --> 00:37:33,285
because then we can use the same Excel spreadsheet to export

826
00:37:33,365 --> 00:37:36,988
from the same Excel spreadsheet exports not only the script

827
00:37:37,008 --> 00:37:39,270
that the engine loads, but also the paper script

828
00:37:39,370 --> 00:37:41,492
that the actor takes down into the recording booth

829
00:37:41,893 --> 00:37:42,413
and reads from.

830
00:37:42,573 --> 00:37:43,974
It's one stop for all the data.

831
00:37:45,655 --> 00:37:47,778
We also could build visual tools.

832
00:37:47,898 --> 00:37:50,742
I've lost screenshots, but one summer I spent a few weeks

833
00:37:51,403 --> 00:37:53,265
building this complicated visual system

834
00:37:53,305 --> 00:37:54,968
that had nodes and arrows and things.

835
00:37:56,149 --> 00:37:57,311
See, here I fell into the trap

836
00:37:57,331 --> 00:37:58,232
that I was mentioning earlier

837
00:37:58,272 --> 00:37:59,834
about thinking about your particular writers.

838
00:38:00,475 --> 00:38:02,576
When I designed this thing, I was not thinking about my writers.

839
00:38:02,716 --> 00:38:04,238
I was thinking about writers.

840
00:38:04,318 --> 00:38:06,159
And I asked myself, what do writers like?

841
00:38:06,359 --> 00:38:07,640
Writers are creative people.

842
00:38:07,700 --> 00:38:08,821
Creative people are visual.

843
00:38:08,881 --> 00:38:11,283
Visual people like bubbles and arrows and things.

844
00:38:11,683 --> 00:38:13,584
And I spent all these weeks building this thing.

845
00:38:13,645 --> 00:38:14,845
And then I showed it to our writers.

846
00:38:14,865 --> 00:38:16,767
And they were like, what the heck is this Fisher-Price toy?

847
00:38:17,507 --> 00:38:19,289
Because our writers, and I forgot this,

848
00:38:19,949 --> 00:38:21,370
were DBAs in a previous life.

849
00:38:21,430 --> 00:38:23,712
And for them, the most comfortable interface was Fox Pro.

850
00:38:27,097 --> 00:38:28,958
You know, works for them.

851
00:38:29,118 --> 00:38:30,419
They built a relational database,

852
00:38:30,559 --> 00:38:31,340
stored all their lines.

853
00:38:31,400 --> 00:38:32,941
It actually worked fantastic.

854
00:38:32,961 --> 00:38:35,502
This is how we handled like 10,000 pieces of dialogue

855
00:38:35,562 --> 00:38:36,163
in Left 4 Dead.

856
00:38:36,563 --> 00:38:37,363
And it was great for them.

857
00:38:37,463 --> 00:38:38,344
They were comfortable with it.

858
00:38:38,824 --> 00:38:40,545
The point of this is do not design systems

859
00:38:40,605 --> 00:38:42,286
for arbitrary hypothetical writers.

860
00:38:43,047 --> 00:38:44,988
Design them for your writer that you have in your studio.

861
00:38:45,028 --> 00:38:46,309
She is just down the hallway.

862
00:38:46,429 --> 00:38:47,530
Ask her what she wants.

863
00:38:47,930 --> 00:38:49,511
She's the only one that you have to make happy.

864
00:38:50,928 --> 00:38:55,151
It's also possible if you have a scripting language in your engine, like Lua or Squirrel or whatnot,

865
00:38:55,671 --> 00:39:00,114
you can always use the script files as a way of loading data into the engine.

866
00:39:00,294 --> 00:39:03,036
I don't mean to say that you're actually going to write the database itself in script,

867
00:39:03,337 --> 00:39:06,359
but like the whole, you know, you could have like a script add rule function

868
00:39:06,559 --> 00:39:10,221
that sends the data over to the C++ core, which parses it and stuffs it away.

869
00:39:12,132 --> 00:39:14,915
If you're designing a system like this, you must have a way to debug it.

870
00:39:16,016 --> 00:39:18,539
Here are some tools that you would pretty clearly need.

871
00:39:18,919 --> 00:39:19,940
Some non-obvious ones.

872
00:39:20,280 --> 00:39:22,983
You want a way to figure out where individual facts come from.

873
00:39:23,423 --> 00:39:28,368
For example, if a query comes into the system and it has a line about, or one of the facts

874
00:39:28,428 --> 00:39:32,232
in the query are, the dragon has been slain, and you're like, but the dragon has not been

875
00:39:32,292 --> 00:39:32,572
slain.

876
00:39:32,652 --> 00:39:33,633
Why do you think it has been?

877
00:39:33,974 --> 00:39:35,535
You want to figure out what's setting that fact.

878
00:39:36,915 --> 00:39:38,296
If you have a whole bunch of rules matching,

879
00:39:38,316 --> 00:39:41,037
you're going to want to print out which ones match

880
00:39:41,057 --> 00:39:43,037
and what scores they had so you can figure out inversions.

881
00:39:43,638 --> 00:39:45,838
You want to be able to put your cursor on any object

882
00:39:45,858 --> 00:39:47,899
in the world and say, if you were to speak right now,

883
00:39:48,239 --> 00:39:49,620
what would your context be that you add?

884
00:39:50,100 --> 00:39:52,020
And it's really helpful to have a way of dynamically

885
00:39:52,080 --> 00:39:53,041
hot swapping your scripts.

886
00:39:53,141 --> 00:39:55,001
So it really speeds up your iteration.

887
00:39:58,403 --> 00:40:00,303
You won't fool me again, leprechaun.

888
00:40:01,884 --> 00:40:02,764
What have I?

889
00:40:04,024 --> 00:40:04,545
What?

890
00:40:05,765 --> 00:40:06,805
A lubricant machine.

891
00:40:10,328 --> 00:40:14,651
brain's private reserve of urine.

892
00:40:14,731 --> 00:40:15,732
Shhh.

893
00:40:19,854 --> 00:40:21,756
A longstanding fascination with funny robots.

894
00:40:21,776 --> 00:40:22,536
All right.

895
00:40:22,856 --> 00:40:25,958
That is all of this for how you can make your writer's lives easier.

896
00:40:26,719 --> 00:40:30,121
We will have a moment here to talk about the programming, the guts of the system.

897
00:40:30,141 --> 00:40:31,282
It's time to go off into nerd time.

898
00:40:32,971 --> 00:40:34,471
Before we begin, allow me to remind you,

899
00:40:34,511 --> 00:40:36,132
this is not a relational database.

900
00:40:36,172 --> 00:40:37,392
This is not the kind of thing that you

901
00:40:37,412 --> 00:40:39,112
can represent as an SQL query.

902
00:40:39,692 --> 00:40:41,773
If it were relational, every criterion

903
00:40:41,793 --> 00:40:44,053
would be its own column, whether a rule actually

904
00:40:44,093 --> 00:40:45,834
cared about that criterion or not.

905
00:40:45,854 --> 00:40:47,514
You would have all these null fields,

906
00:40:47,534 --> 00:40:49,555
and that is neither efficient nor convenient.

907
00:40:50,175 --> 00:40:51,795
Computer scientists would say what you have here

908
00:40:51,915 --> 00:40:53,155
is a monadic lookup database.

909
00:40:53,636 --> 00:40:54,396
It's a bunch of rows.

910
00:40:54,516 --> 00:40:56,556
Each row has exactly one key and one value,

911
00:40:57,116 --> 00:40:59,157
except the key is a complex predicate function.

912
00:40:59,417 --> 00:41:00,597
It is a tuple of predicates.

913
00:41:01,137 --> 00:41:03,179
each of which has to be true for the whole rule to match.

914
00:41:04,100 --> 00:41:04,600
What does that mean?

915
00:41:04,900 --> 00:41:06,822
It's a whole bunch of functions that all of them

916
00:41:06,862 --> 00:41:07,623
have to return true.

917
00:41:09,784 --> 00:41:10,865
Think about how we can implement this.

918
00:41:11,606 --> 00:41:11,826
All right.

919
00:41:12,366 --> 00:41:15,069
Query is a list of strings and variants.

920
00:41:15,469 --> 00:41:16,370
It's an associative array.

921
00:41:16,930 --> 00:41:18,091
When you go to query into the system,

922
00:41:18,131 --> 00:41:19,472
you take all the sources of data.

923
00:41:20,012 --> 00:41:20,793
You load them together.

924
00:41:21,454 --> 00:41:23,395
You do the big copy, the associative array merge.

925
00:41:23,415 --> 00:41:24,956
You end up with one gigantic dictionary.

926
00:41:25,977 --> 00:41:26,478
That's your query.

927
00:41:27,090 --> 00:41:31,554
Then for each rule in the database, and for each criterion in that rule, you look up the

928
00:41:31,594 --> 00:41:32,755
corresponding factor in the query.

929
00:41:33,055 --> 00:41:33,596
Does it match?

930
00:41:34,176 --> 00:41:34,817
Rule survives.

931
00:41:34,877 --> 00:41:36,638
If it does not match, rule rejects.

932
00:41:37,399 --> 00:41:40,041
Sort the survivors, return the highest scoring rule.

933
00:41:40,462 --> 00:41:40,982
That's your speech.

934
00:41:41,303 --> 00:41:41,663
It works.

935
00:41:42,424 --> 00:41:45,226
It works in cubic time, also pronounced as you're fired.

936
00:41:47,488 --> 00:41:48,489
So we can do better.

937
00:41:50,838 --> 00:41:54,319
Step one, sort the criteria and your rules and the facts

938
00:41:54,359 --> 00:41:55,840
in the query alphabetically.

939
00:41:56,300 --> 00:41:58,240
Now you don't have to search back and forth in the query.

940
00:41:58,360 --> 00:42:01,101
It's really obvious if a fact is missing from the query

941
00:42:01,121 --> 00:42:02,161
that the criteria needs.

942
00:42:02,181 --> 00:42:04,582
You don't have to do all those hash searches.

943
00:42:04,602 --> 00:42:05,542
A little bit better.

944
00:42:06,402 --> 00:42:07,603
Cubic, quadratic time.

945
00:42:07,643 --> 00:42:08,223
You're still fired.

946
00:42:09,083 --> 00:42:09,783
Let's do a little bit better.

947
00:42:09,823 --> 00:42:10,884
We can skip the merge step.

948
00:42:11,104 --> 00:42:12,844
You don't have to do that gigantic memory copy.

949
00:42:15,659 --> 00:42:19,223
When you're doing a query, it's only important that theoretically it's as if you had all

950
00:42:19,283 --> 00:42:20,264
these arrays merged together.

951
00:42:20,344 --> 00:42:24,388
So, if you simply store pointers into your data sources in parallel when you're doing

952
00:42:24,408 --> 00:42:29,473
your search, it has the exact same theoretic result, but you don't need to actually copy

953
00:42:29,493 --> 00:42:30,194
the arrays around.

954
00:42:30,214 --> 00:42:31,696
It speeds things up a little bit.

955
00:42:33,077 --> 00:42:34,979
You can partition your rules hierarchically.

956
00:42:36,002 --> 00:42:39,646
If, for example, you always know that every rule has a criterion on who is speaking,

957
00:42:40,387 --> 00:42:43,730
you can chop up your big table of rules so that when Nick talks,

958
00:42:44,030 --> 00:42:45,932
Nick does not query every rule in the system.

959
00:42:46,413 --> 00:42:48,314
No, no. Nick only queries his own rules.

960
00:42:48,435 --> 00:42:52,138
And then you can further subdivide that by what map are you in,

961
00:42:52,759 --> 00:42:54,921
what concept is he trying to say, and so on.

962
00:42:55,915 --> 00:42:59,677
If you do not want to have this set of hierarchical subdivisions,

963
00:42:59,697 --> 00:43:01,799
you know, each partition having multiple other partitions,

964
00:43:02,099 --> 00:43:02,899
you can also hash.

965
00:43:02,999 --> 00:43:06,682
You can take speaker and concept and map and whatever else you like,

966
00:43:07,663 --> 00:43:09,764
concatenate them into a string from the criteria,

967
00:43:10,144 --> 00:43:12,506
hash that string, and then use that string to pick a bucket.

968
00:43:12,546 --> 00:43:15,288
So you will have one bucket that contains both Rochelle saying,

969
00:43:15,308 --> 00:43:16,769
I'm reloading, and Nick saying, I'm hit.

970
00:43:17,149 --> 00:43:20,151
That way, you can divide your speech up into however many buckets you want.

971
00:43:21,690 --> 00:43:23,612
You can chop up your rules by region of the world.

972
00:43:23,652 --> 00:43:26,193
Let us say that you have built a globe-trotting European

973
00:43:26,233 --> 00:43:26,653
adventure.

974
00:43:28,174 --> 00:43:29,615
Well, you're going to have quests that take place

975
00:43:29,655 --> 00:43:31,376
in England and quests that take place in Spain.

976
00:43:32,137 --> 00:43:33,458
I'm certain the Spain quests are fantastic,

977
00:43:33,478 --> 00:43:34,698
but when you're in Spain, you do not

978
00:43:34,718 --> 00:43:36,299
need to even query the dialogue that

979
00:43:36,339 --> 00:43:37,560
is pertinent only to England.

980
00:43:37,960 --> 00:43:39,101
So why load it into memory?

981
00:43:40,182 --> 00:43:41,883
You can chop up all of your dialogue

982
00:43:42,283 --> 00:43:43,724
into multiple databases by region.

983
00:43:43,944 --> 00:43:44,605
See, super simple.

984
00:43:45,605 --> 00:43:46,446
Databases by region.

985
00:43:47,604 --> 00:43:49,685
You're always going to have to have global ones, like, ouch,

986
00:43:49,805 --> 00:43:50,165
I'm hit.

987
00:43:50,705 --> 00:43:52,325
But if you're in the King Arthur map,

988
00:43:52,805 --> 00:43:54,746
there's no reason to even test the Italy rules.

989
00:43:54,806 --> 00:43:56,606
There's even no reason to load them into memory.

990
00:43:56,806 --> 00:43:58,467
You only have to load the ones for the partition.

991
00:44:00,467 --> 00:44:02,568
Similarly, when you are assembling the query,

992
00:44:02,588 --> 00:44:04,448
when you're pulling together the facts about the world,

993
00:44:05,248 --> 00:44:06,789
you don't need to pull in the Italy facts

994
00:44:06,809 --> 00:44:07,909
when you're doing a query in England.

995
00:44:08,009 --> 00:44:10,490
You can store your sources of fact

996
00:44:10,870 --> 00:44:12,750
in separate regions of memory.

997
00:44:12,990 --> 00:44:14,571
And once again, you're only pulling in England

998
00:44:14,671 --> 00:44:15,271
when you're in England.

999
00:44:16,922 --> 00:44:21,084
Next optimization, sort your rules by decreasing number of criteria, by decreasing score.

1000
00:44:21,765 --> 00:44:26,027
If a six criterion rule matches, there is no need to test the five, four, three, two,

1001
00:44:26,127 --> 00:44:27,047
one criterion rules.

1002
00:44:27,748 --> 00:44:28,968
You know that you've already found your winner.

1003
00:44:29,168 --> 00:44:33,511
So by simply sorting them in descending order in each partition, you can speed up your query

1004
00:44:33,551 --> 00:44:34,111
significantly.

1005
00:44:36,133 --> 00:44:40,299
The next optimization, you can speed up the individual comparison of each criterion.

1006
00:44:40,960 --> 00:44:42,122
Like, is name Bob?

1007
00:44:42,142 --> 00:44:42,983
Are hit points.

1008
00:44:43,504 --> 00:44:48,170
I have found that almost every single criterion in a game can be represented as an interval

1009
00:44:48,290 --> 00:44:48,971
on a number line.

1010
00:44:49,612 --> 00:44:52,296
Each one can be like a greater than, less than comparison.

1011
00:44:53,805 --> 00:44:55,086
For example, hit points is obvious.

1012
00:44:55,966 --> 00:44:57,207
Are zombies greater than five?

1013
00:44:57,407 --> 00:44:58,408
Well, it's still an interval.

1014
00:44:58,428 --> 00:45:00,689
It's just an interval between a number and infinity

1015
00:45:00,809 --> 00:45:01,450
on the other side.

1016
00:45:02,010 --> 00:45:03,971
You can even represent a string comparison

1017
00:45:04,051 --> 00:45:05,412
as an interval on a number line

1018
00:45:06,033 --> 00:45:08,474
if you do not use strings but symbols like I told you to.

1019
00:45:08,975 --> 00:45:10,515
Then each string becomes a unique integer

1020
00:45:10,936 --> 00:45:12,777
and integer can be compared instantaneously.

1021
00:45:13,932 --> 00:45:18,216
By the way, you will notice that even though we're doing an equality test here,

1022
00:45:18,716 --> 00:45:22,059
I'm still doing it as greater than or equal to and less than or equal to.

1023
00:45:22,619 --> 00:45:27,784
That is so that each and every comparison can be represented with the exact same instruction stream.

1024
00:45:28,364 --> 00:45:31,286
You can store like the type of a comparison of each criterion and say,

1025
00:45:31,346 --> 00:45:34,189
okay, this one is equals to, this one is greater than, this one is less than,

1026
00:45:34,609 --> 00:45:36,471
but now you've got all these additional branch penalties.

1027
00:45:37,605 --> 00:45:40,006
If you cook everything so that it is always greater than less

1028
00:45:40,026 --> 00:45:42,548
in comparison, it's always x between a and b,

1029
00:45:42,568 --> 00:45:44,769
then you can always do the exact same comparison.

1030
00:45:44,789 --> 00:45:46,390
You're always doing the exact same assembly.

1031
00:45:46,831 --> 00:45:48,592
You dramatically reduce the branch penalties

1032
00:45:48,612 --> 00:45:49,893
that you're paying on each criterion.

1033
00:45:50,193 --> 00:45:52,094
You can get each test down to less than a nanosecond.

1034
00:45:53,655 --> 00:45:54,075
Moreover.

1035
00:45:55,037 --> 00:45:59,360
If you're on a discrete number system, which any computer is, especially with floating

1036
00:45:59,400 --> 00:46:03,522
point numbers, you can always turn a strict greater than comparison into a greater than

1037
00:46:03,562 --> 00:46:05,544
or equal to comparison by adding epsilon.

1038
00:46:06,024 --> 00:46:09,466
Epsilon here is not like some vague, ill-defined small number.

1039
00:46:09,667 --> 00:46:12,549
It has a very specific meaning in the terms of floating point numbers.

1040
00:46:13,429 --> 00:46:16,072
this number being exactly one bit higher than this number.

1041
00:46:16,552 --> 00:46:18,213
You can also compare floating point numbers

1042
00:46:18,354 --> 00:46:20,736
on the integer unit to speed things up significantly

1043
00:46:20,896 --> 00:46:21,737
if you know what you're doing.

1044
00:46:22,177 --> 00:46:23,438
Bruce Dawson knows what he is doing.

1045
00:46:23,618 --> 00:46:25,160
So if you go follow that link to his blog,

1046
00:46:25,500 --> 00:46:27,141
you will learn all there is to know about comparing

1047
00:46:27,201 --> 00:46:28,763
floating point numbers quickly.

1048
00:46:30,943 --> 00:46:34,305
Next, you can go off and do some crazy math in mad science land.

1049
00:46:34,325 --> 00:46:36,286
You've got all of these different number line intervals.

1050
00:46:36,326 --> 00:46:37,306
You've got n many of them.

1051
00:46:37,326 --> 00:46:39,067
It defines an n dimensional space.

1052
00:46:39,147 --> 00:46:40,868
Q is somewhere in your n dimensional subspace.

1053
00:46:40,888 --> 00:46:42,168
How do you find Q in subspace?

1054
00:46:43,009 --> 00:46:47,390
Or you can do it as a spatial search with a BSP or an archery or sort your criteria

1055
00:46:47,751 --> 00:46:50,572
or use principal component analysis to cluster your rules or eigenvector.

1056
00:46:50,612 --> 00:46:51,092
You know, don't.

1057
00:46:51,632 --> 00:46:53,454
I've tried this, this way lies madness.

1058
00:46:53,574 --> 00:46:58,458
It is not even any faster because all these data structures that I have tried involve

1059
00:46:58,498 --> 00:47:02,842
chasing so many pointers across large regions of memory that you actually just end up blowing

1060
00:47:02,862 --> 00:47:03,302
your cache.

1061
00:47:03,703 --> 00:47:07,606
If you use the hierarchical partitioning method, you can get it down so that you have a constant

1062
00:47:07,626 --> 00:47:12,550
time lookup into a bucket of about 12 or 24 rules, even across like a 10,000 rule database.

1063
00:47:14,231 --> 00:47:17,033
Once you've done that, it's like 100 nanoseconds

1064
00:47:17,053 --> 00:47:17,994
to test 24 rules.

1065
00:47:18,294 --> 00:47:19,095
It's perfectly fast.

1066
00:47:19,175 --> 00:47:21,257
If you are Google and you have gigantic data sets,

1067
00:47:21,277 --> 00:47:24,139
you can always re-implement the back end as something faster,

1068
00:47:24,519 --> 00:47:25,901
but the interface will be the same anyway.

1069
00:47:26,141 --> 00:47:27,642
So start simple.

1070
00:47:28,002 --> 00:47:28,703
Simple is what works.

1071
00:47:30,644 --> 00:47:32,186
One other corollary of the system,

1072
00:47:32,386 --> 00:47:33,647
it is purely additive.

1073
00:47:33,967 --> 00:47:36,629
If you have mods, if you have user-generated content,

1074
00:47:36,649 --> 00:47:39,512
you can add new content simply by adding new rules.

1075
00:47:40,516 --> 00:47:42,257
You don't have to go back and change the old code.

1076
00:47:42,638 --> 00:47:44,559
If you're always packing along all the world state

1077
00:47:44,599 --> 00:47:46,661
in every query, you don't have to actually write

1078
00:47:46,701 --> 00:47:48,202
code that adds new state to the query

1079
00:47:48,242 --> 00:47:49,663
if you want a new, more specific rule.

1080
00:47:50,084 --> 00:47:52,846
So if a modder wanted to add a new character class to a game,

1081
00:47:53,406 --> 00:47:55,568
then all they would have to do is add new rules pertinent

1082
00:47:55,588 --> 00:47:58,030
to that class, and even to the other characters for how

1083
00:47:58,070 --> 00:47:59,431
they respond to this class.

1084
00:48:00,912 --> 00:48:04,235
In summary, all this is is a pattern matching engine.

1085
00:48:04,615 --> 00:48:06,657
It's a big database of criteria about the world.

1086
00:48:07,780 --> 00:48:09,241
It's a big pile of data about the world.

1087
00:48:09,281 --> 00:48:11,103
You find which rule matches the criteria the best.

1088
00:48:11,223 --> 00:48:13,745
It is super simple, and that's why it works.

1089
00:48:15,367 --> 00:48:17,489
You want to, when you're performing your query,

1090
00:48:17,709 --> 00:48:19,871
to build the context at runtime from all the state

1091
00:48:19,891 --> 00:48:20,932
that you can possibly gather.

1092
00:48:21,493 --> 00:48:22,914
The more state you can throw at the system,

1093
00:48:23,234 --> 00:48:24,916
whether you think of a rule that needs it or not,

1094
00:48:25,376 --> 00:48:27,498
the more specific your rules can be when you finally

1095
00:48:27,578 --> 00:48:28,399
realize that you need them.

1096
00:48:30,115 --> 00:48:31,676
You need some kind of follow-up mechanism.

1097
00:48:31,996 --> 00:48:33,378
When one character finishes speaking,

1098
00:48:33,518 --> 00:48:35,099
it triggers a query on another.

1099
00:48:35,480 --> 00:48:36,901
It's much easier if you do this without having

1100
00:48:36,921 --> 00:48:38,963
to glue both characters' feet to the ground.

1101
00:48:40,724 --> 00:48:43,286
It is helpful to have some kind of write-back to the world.

1102
00:48:43,326 --> 00:48:44,668
That's how you create conditional branches,

1103
00:48:45,048 --> 00:48:46,449
so the system becomes Turing-complete.

1104
00:48:46,810 --> 00:48:48,211
So you create running gags, memory.

1105
00:48:48,231 --> 00:48:49,552
It gives you a lot more flexibility.

1106
00:48:50,193 --> 00:48:51,294
But most importantly,

1107
00:48:52,258 --> 00:48:54,339
It has to be something that your writer wants to use.

1108
00:48:54,980 --> 00:48:57,342
The person creating dialogue in your game is your writer,

1109
00:48:57,682 --> 00:48:58,823
and the whole point of the system

1110
00:48:58,863 --> 00:49:00,084
is that it is convenient for writers.

1111
00:49:00,504 --> 00:49:01,725
The more creative writers are,

1112
00:49:01,745 --> 00:49:03,066
the more easily they can iterate,

1113
00:49:03,366 --> 00:49:04,547
the more autonomous they can be,

1114
00:49:04,888 --> 00:49:05,808
the more writing they will do.

1115
00:49:06,008 --> 00:49:06,929
And the more writing they will do,

1116
00:49:07,409 --> 00:49:08,530
the better dialogue you will have.

1117
00:49:10,132 --> 00:49:12,253
Special thanks to everybody who helped me rehearse,

1118
00:49:12,634 --> 00:49:14,035
came to my talks, gave me slides,

1119
00:49:14,455 --> 00:49:15,676
everyone at Valve except Doug.

1120
00:49:18,958 --> 00:49:20,259
And I actually brought it in on time,

1121
00:49:20,640 --> 00:49:21,400
so are there any questions?

1122
00:49:34,672 --> 00:49:36,433
All right, let's go with this microphone first.

1123
00:49:37,293 --> 00:49:40,635
Hi, one of the issues that I've heard a number of people

1124
00:49:40,715 --> 00:49:44,577
raise for these kinds of dynamic dialogue sequencing systems

1125
00:49:45,237 --> 00:49:48,318
is that writers want to see how dialogue might flow.

1126
00:49:48,338 --> 00:49:52,800
So they want to see all the ways that things might come before

1127
00:49:52,980 --> 00:49:55,361
and come after the line I'm writing now

1128
00:49:55,461 --> 00:49:56,382
to make sure it always.

1129
00:49:57,162 --> 00:49:59,303
presents the character the way I want it to be presented.

1130
00:49:59,743 --> 00:50:01,924
Do your writers express that desire?

1131
00:50:02,624 --> 00:50:06,005
They did, which is why I decided I was going to go build a visual tool.

1132
00:50:06,485 --> 00:50:09,766
It turns out that what my particular writers wanted was actually an SQL query.

1133
00:50:10,646 --> 00:50:13,747
But it is absolutely possible to build a visual tool.

1134
00:50:13,787 --> 00:50:17,429
Just ask your particular writer what she wants before you build something,

1135
00:50:17,489 --> 00:50:20,089
because it's not about writers, it's about your writer.

1136
00:50:20,109 --> 00:50:20,790
Okay.

1137
00:50:22,167 --> 00:50:22,647
Stage right.

1138
00:50:23,487 --> 00:50:26,228
So I'm trying to wrap my head around how you would

1139
00:50:26,288 --> 00:50:27,869
implement it from an audio perspective.

1140
00:50:28,349 --> 00:50:29,530
What middleware do you guys use?

1141
00:50:30,730 --> 00:50:33,331
Or do you use middleware to get your audio loaded in?

1142
00:50:33,911 --> 00:50:34,612
I'm sorry, I didn't hear.

1143
00:50:34,672 --> 00:50:35,332
What do we use?

1144
00:50:36,093 --> 00:50:38,314
Do you use audio middleware to get this stuff implemented?

1145
00:50:38,334 --> 00:50:40,134
How do you load?

1146
00:50:40,314 --> 00:50:42,835
The voice files are like waves or MP3s.

1147
00:50:42,875 --> 00:50:45,516
And we have a custom tool that just glues them together

1148
00:50:45,536 --> 00:50:48,056
with animations so that when the scripting sequence decides

1149
00:50:48,076 --> 00:50:49,557
to play a character, he plays the animation

1150
00:50:49,577 --> 00:50:50,757
and says the line at the same moment.

1151
00:50:51,397 --> 00:50:52,578
There's really nothing special about it.

1152
00:50:52,718 --> 00:50:53,558
It's just a sound file.

1153
00:50:53,758 --> 00:50:56,099
So you're just dynamically loading packages

1154
00:50:56,299 --> 00:50:57,039
at level load?

1155
00:50:57,359 --> 00:50:57,519
Yeah.

1156
00:50:57,539 --> 00:50:59,480
When the level loads up, we just load in the WAVs.

1157
00:50:59,900 --> 00:51:01,881
By the way, if you are partitioning up your rules

1158
00:51:02,001 --> 00:51:04,121
by region, you can use that as a hint for what lines

1159
00:51:04,141 --> 00:51:05,162
you need to load into memory.

1160
00:51:05,868 --> 00:51:10,496
very cool, thanks. Stage left. Uh, hi. Good talk, thanks. Uh, I

1161
00:51:10,516 --> 00:51:14,162
had two questions. One, did anybody ever ask for an or? Uh,

1162
00:51:14,843 --> 00:51:19,190
I mean, I know you can do rules, um, and simple is good, but I

1163
00:51:19,210 --> 00:51:20,072
was just wondering about that.

1164
00:51:20,839 --> 00:51:22,260
Yes, you can have an or.

1165
00:51:22,320 --> 00:51:24,241
The easiest way to implement or, actually,

1166
00:51:24,361 --> 00:51:26,602
is just to have two different rules, right?

1167
00:51:26,702 --> 00:51:27,762
Two different rules that both match,

1168
00:51:27,782 --> 00:51:28,803
and they'll play the same line.

1169
00:51:29,623 --> 00:51:31,724
Even if you represent or in the interface

1170
00:51:31,764 --> 00:51:33,125
in the friendly script specification,

1171
00:51:33,665 --> 00:51:35,646
I recommend that's the way that you implement it internally,

1172
00:51:35,766 --> 00:51:37,327
because it will make the branching a lot faster,

1173
00:51:37,347 --> 00:51:38,327
and make the testing faster.

1174
00:51:38,468 --> 00:51:39,528
And then the other thing I was wondering about

1175
00:51:39,568 --> 00:51:40,969
is with writeback, did you ever get

1176
00:51:41,029 --> 00:51:43,770
sort of artificial shortening of the number of criteria

1177
00:51:43,790 --> 00:51:45,791
such that something else that had more

1178
00:51:45,851 --> 00:51:48,372
would win out unintendedly?

1179
00:51:49,907 --> 00:51:52,029
As I mentioned, we tried a bunch of different scoring functions.

1180
00:51:52,209 --> 00:51:53,290
And in our system, actually, it's

1181
00:51:53,330 --> 00:51:55,491
possible to give different criteria different weight

1182
00:51:55,991 --> 00:51:58,713
so that some of them score more for a particular rule.

1183
00:51:59,094 --> 00:52:00,454
In practice, we used it very little.

1184
00:52:01,515 --> 00:52:03,376
You can see it's really obvious for how to implement it.

1185
00:52:03,396 --> 00:52:05,058
It's just we never actually needed it.

1186
00:52:05,078 --> 00:52:05,818
OK.

1187
00:52:06,018 --> 00:52:06,158
Thanks.

1188
00:52:07,879 --> 00:52:11,840
With that prototype you were showing with the robots running around the sewer

1189
00:52:12,500 --> 00:52:14,841
It seemed like there was a lot more going on than just the audio

1190
00:52:15,041 --> 00:52:20,003
Because they were pointing at the object in question and they were playing specific animations and so forth

1191
00:52:20,543 --> 00:52:22,683
So I was just wondering what was going on there. Yes

1192
00:52:23,884 --> 00:52:26,125
Can actually use my question and answer slides. This is fantastic

1193
00:52:32,244 --> 00:52:32,604
Yes.

1194
00:52:33,124 --> 00:52:36,648
So, you can trigger entire scripts rather than just animation and speech.

1195
00:52:36,848 --> 00:52:41,072
Rather than just playing a WAV file, you can actually take the facts that were presented

1196
00:52:41,092 --> 00:52:44,695
in the query and bind them to parameters of a script that plays.

1197
00:52:45,076 --> 00:52:47,818
So, in those cases, we had an actual script for the robot.

1198
00:52:47,838 --> 00:52:48,719
It wasn't a sound file.

1199
00:52:48,939 --> 00:52:51,782
It was like turn, play point animation, bind to thing.

1200
00:52:52,242 --> 00:52:54,905
And the things that he was turning towards were the same parameters that were used for

1201
00:52:54,925 --> 00:52:55,526
the voice query.

1202
00:52:56,767 --> 00:52:57,007
Thank you.

1203
00:52:58,154 --> 00:52:58,555
Stage left.

1204
00:52:58,915 --> 00:52:59,917
Hey, great talk.

1205
00:53:00,478 --> 00:53:05,206
You explained that when the criteria are looked at,

1206
00:53:05,647 --> 00:53:08,992
you pull information from games, objects, or states.

1207
00:53:10,737 --> 00:53:14,079
I was wondering, do you ever run into problems that,

1208
00:53:14,659 --> 00:53:18,721
like threat problems, or that you have criteria

1209
00:53:18,741 --> 00:53:20,302
that just flip in one frame?

1210
00:53:20,882 --> 00:53:23,263
Like for instance, when an entity is shooting,

1211
00:53:23,863 --> 00:53:25,864
is that only like on for one frame?

1212
00:53:26,205 --> 00:53:29,206
But then when you evaluate the rules,

1213
00:53:30,307 --> 00:53:35,789
you know, that bit is not on your thread or on your frame.

1214
00:53:36,669 --> 00:53:38,451
We have a single-threaded dialogue system,

1215
00:53:38,611 --> 00:53:39,892
which solves a lot of those problems.

1216
00:53:40,273 --> 00:53:42,515
But for things that are transient, like shooting,

1217
00:53:43,075 --> 00:53:45,598
you want to store not, is he shooting this frame,

1218
00:53:45,838 --> 00:53:47,800
but when is the last time that he has shot.

1219
00:53:48,120 --> 00:53:49,601
Has he shot within the last quarter second?

1220
00:53:50,222 --> 00:53:51,523
And that can count as the same kind of thing.

1221
00:53:51,563 --> 00:53:53,846
It gives you a hysteriasis in your query.

1222
00:53:53,866 --> 00:53:55,527
OK, thanks.

1223
00:53:57,347 --> 00:53:58,908
Yeah, trying to think how to phrase it.

1224
00:53:58,928 --> 00:54:04,671
But do all of the key values evaluate to some Boolean state?

1225
00:54:05,412 --> 00:54:07,893
Each criterion evaluates to a Boolean result.

1226
00:54:07,913 --> 00:54:09,194
That's what makes it a predicate function.

1227
00:54:09,794 --> 00:54:11,755
In the fact, the key is any string,

1228
00:54:11,816 --> 00:54:14,877
and the value can be any kind of number, string,

1229
00:54:15,017 --> 00:54:16,779
whatever variant type you want, as long

1230
00:54:16,819 --> 00:54:18,580
as the relevant predicate function.

1231
00:54:19,080 --> 00:54:22,683
takes that type as its parameter, but the predicate has to return true or false.

1232
00:54:22,983 --> 00:54:27,747
Okay. Was there ever any desire to add something with more weighting to it,

1233
00:54:27,787 --> 00:54:31,851
or more individual state per key, or would that defeat the purpose of key principle?

1234
00:54:32,111 --> 00:54:32,832
Just add more keys.

1235
00:54:32,852 --> 00:54:35,574
Stage left.

1236
00:54:36,014 --> 00:54:38,897
Doug says he's sorry, but he was really sick, that he missed your thing on Monday.

1237
00:54:39,397 --> 00:54:39,477
Aww.

1238
00:54:45,546 --> 00:54:51,392
I was just wondering about Left 4 Dead is primarily a multiplayer game, and so I was

1239
00:54:51,452 --> 00:54:57,939
wondering is there a concept of a host that plays and then propagates like the sound files

1240
00:54:57,959 --> 00:55:02,644
and what sound files to play across the network, or do all the peers play them individually

1241
00:55:02,664 --> 00:55:05,287
and it might be random or might be different, I guess.

1242
00:55:05,867 --> 00:55:07,949
Are you asking, like, is all the logic run on the host?

1243
00:55:08,705 --> 00:55:12,888
Yeah, or can the clients themselves

1244
00:55:12,948 --> 00:55:14,790
play different dialogue to what the host hears?

1245
00:55:14,850 --> 00:55:15,690
Do people hear differently?

1246
00:55:16,070 --> 00:55:18,212
In our implementation, it is completely client-server.

1247
00:55:18,492 --> 00:55:19,393
There's a left-footed server.

1248
00:55:19,413 --> 00:55:20,173
The clients are all done.

1249
00:55:20,193 --> 00:55:21,834
They're just telling what the server tells them to do.

1250
00:55:22,275 --> 00:55:23,576
And the server is doing all the logic.

1251
00:55:24,096 --> 00:55:25,177
Now, you can see it's actually not

1252
00:55:25,237 --> 00:55:26,818
hard to implement it in a peer-to-peer way,

1253
00:55:26,858 --> 00:55:28,579
to have the clients independently pick lines.

1254
00:55:29,039 --> 00:55:30,720
So now you have the problem of they

1255
00:55:30,740 --> 00:55:33,022
may pick different minor variations in the line.

1256
00:55:33,042 --> 00:55:34,963
You have to find some way to resolve those things.

1257
00:55:35,544 --> 00:55:36,745
We didn't, because we're client-server.

1258
00:55:38,787 --> 00:55:43,091
right? One more? Oh, uh, sorry, sit right. So if you're doing,

1259
00:55:43,372 --> 00:55:45,794
uh, the responses to someone else's line and you have a

1260
00:55:45,894 --> 00:55:48,116
number of characters that can all respond to the same line,

1261
00:55:48,857 --> 00:55:52,840
um, and the logic is per speaker, how do you prevent them

1262
00:55:52,940 --> 00:55:54,061
all from responding at once?

1263
00:55:54,470 --> 00:55:56,231
So when we do the then any query,

1264
00:55:56,511 --> 00:55:58,452
it's like querying all the nearby characters to ask,

1265
00:55:58,492 --> 00:55:59,953
you know, which of you has a response.

1266
00:56:00,453 --> 00:56:01,854
It finds the highest scoring one.

1267
00:56:02,354 --> 00:56:05,316
Because all the characters are being tested simultaneously

1268
00:56:05,536 --> 00:56:07,897
in that any query, we only pick the highest scoring one.

1269
00:56:08,117 --> 00:56:09,778
If they're equally scoring, we'll pick one at random.

1270
00:56:10,259 --> 00:56:12,260
Because it's really kind of the character who has just

1271
00:56:12,300 --> 00:56:14,141
said the line, who's querying the neighbors

1272
00:56:14,361 --> 00:56:14,981
to make them speak.

1273
00:56:16,742 --> 00:56:17,062
Stage left.

1274
00:56:17,559 --> 00:56:18,379
A great talk, by the way.

1275
00:56:18,399 --> 00:56:18,820
Thank you.

1276
00:56:19,220 --> 00:56:20,781
With all this dynamic content, some lines

1277
00:56:20,801 --> 00:56:22,243
are going to get played a lot more than others.

1278
00:56:22,303 --> 00:56:23,704
I know Valve does a lot of data tracking

1279
00:56:23,724 --> 00:56:26,086
to see how much of the game gets completed and such.

1280
00:56:26,166 --> 00:56:27,447
Do you have any kind of metrics for that

1281
00:56:27,547 --> 00:56:29,709
for how some lines that are ultra-specific

1282
00:56:29,729 --> 00:56:31,351
get played more or less often than others?

1283
00:56:31,431 --> 00:56:32,832
And what was feedback on that?

1284
00:56:32,972 --> 00:56:34,553
Do we have a database that stores

1285
00:56:34,574 --> 00:56:35,735
how often each line gets said?

1286
00:56:36,135 --> 00:56:36,295
Yes.

1287
00:56:36,795 --> 00:56:37,536
Do I ever look at it?

1288
00:56:37,756 --> 00:56:37,876
No.

1289
00:56:38,617 --> 00:56:39,318
Ha, ha.

1290
00:56:39,358 --> 00:56:39,498
Ha.

1291
00:56:41,119 --> 00:56:42,541
Ha.

1292
00:56:42,561 --> 00:56:42,941
Stage left.

1293
00:56:44,389 --> 00:56:47,951
Hi, I'm actually coming from the other side of the fence in that I am actually a writer.

1294
00:56:48,091 --> 00:56:54,053
So thank you so much for making this, you know, this code and this tool that makes people like mine's job easier.

1295
00:56:54,814 --> 00:57:00,316
But I am wondering, you know, in that you've taken the time to sort of help the writers out with their job.

1296
00:57:01,697 --> 00:57:04,838
How can writers help you out with your job?

1297
00:57:04,898 --> 00:57:12,181
How can writers, you know, go and meet the programmers midway to, you know, to make your job easier?

1298
00:57:12,602 --> 00:57:14,543
Well, for one thing, simply thinking about dialogue

1299
00:57:14,583 --> 00:57:17,324
in this way, in terms of a series of general to more

1300
00:57:17,344 --> 00:57:19,465
specific rules matching state about the world,

1301
00:57:20,426 --> 00:57:21,546
it's a lot more convenient than having

1302
00:57:21,586 --> 00:57:23,287
to think of a whole bunch of explicit code hooks

1303
00:57:23,327 --> 00:57:24,428
that are all super specific.

1304
00:57:24,948 --> 00:57:27,429
Moreover, being clear about what is a useful workflow,

1305
00:57:27,449 --> 00:57:28,610
because at the point that I made,

1306
00:57:28,670 --> 00:57:30,031
smart writers know what works for them.

1307
00:57:30,431 --> 00:57:31,752
If you're clear about what works for you,

1308
00:57:31,792 --> 00:57:33,512
then they can actually build the tool that works for you,

1309
00:57:33,633 --> 00:57:34,633
as opposed to simply guessing.

1310
00:57:35,373 --> 00:57:35,654
Thank you.

1311
00:57:37,274 --> 00:57:38,735
If there are no further questions.

1312
00:57:39,801 --> 00:57:43,049
And I have the prerogative of playing the last slide of GDC.

1313
00:57:43,129 --> 00:57:44,393
I have been waiting for this for days.

1314
00:57:46,317 --> 00:57:49,465
Smooth jazz will be deployed in three, two, one.

