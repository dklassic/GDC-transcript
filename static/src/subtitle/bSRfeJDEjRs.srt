1
00:00:08,586 --> 00:00:12,887
So good afternoon everyone, and thank you for attending this presentation.

2
00:00:13,668 --> 00:00:18,869
My name is Nadege Jozsa and I am a Senior Project Manager for Localization Services

3
00:00:18,969 --> 00:00:22,090
at Sony Interactive Entertainment in Europe.

4
00:00:23,651 --> 00:00:29,433
So this presentation has been created together with Nadine Martin, Senior Manager for Test

5
00:00:29,493 --> 00:00:35,535
Services, and Chris Burgess, Manager for our Localization Tools at SIE.

6
00:00:37,217 --> 00:00:40,599
So yes, it took three of us to come up with a recipe

7
00:00:41,139 --> 00:00:44,161
on how not to screw your localization.

8
00:00:45,482 --> 00:00:46,983
So with this joint effort, we would

9
00:00:47,043 --> 00:00:51,146
like to share with you what we have been experiencing

10
00:00:51,306 --> 00:00:54,388
and implementing for years of localizing

11
00:00:54,488 --> 00:00:57,130
exciting games at SAE, and what we

12
00:00:57,190 --> 00:01:02,074
see as essential steps towards efficient, cost-effective,

13
00:01:02,314 --> 00:01:05,236
and painless localization for our dev teams.

14
00:01:07,015 --> 00:01:13,564
So it is our ambition that you will be able to walk away today with a good few tips, either

15
00:01:13,624 --> 00:01:20,333
to establish a new localization process or tools, or just to answer some of the difficulties

16
00:01:20,373 --> 00:01:21,715
that you are currently facing.

17
00:01:25,099 --> 00:01:31,100
So, after this presentation, at the end, the three of us will be available for Q&As, should

18
00:01:31,140 --> 00:01:33,300
we have any time for this.

19
00:01:34,001 --> 00:01:40,522
But the cherry on the cake today is that Chris will be holding two poster sessions, 15 minutes

20
00:01:40,602 --> 00:01:46,463
after the end of my presentation, where I will be going more in-depth into some of the

21
00:01:46,503 --> 00:01:49,404
tool features that I will be touching on today.

22
00:01:49,444 --> 00:01:51,085
So please come along.

23
00:01:51,225 --> 00:01:52,845
It's going to be Indie Overlook 2018.

24
00:01:54,685 --> 00:01:57,327
And we'll be waiting for you there as well.

25
00:01:58,507 --> 00:02:04,290
So before we start, show of hands who here is from a dev

26
00:02:04,330 --> 00:02:10,333
team, and who from a localization vendor,

27
00:02:10,373 --> 00:02:12,634
translation, audio testing services.

28
00:02:14,255 --> 00:02:15,276
OK, that's a good mix.

29
00:02:17,252 --> 00:02:22,676
So starting now with a brief intro to localization at SIE.

30
00:02:23,316 --> 00:02:29,461
So since last April 2016 up to December 2016, so in a

31
00:02:29,501 --> 00:02:33,144
duration of nine months, we have worked on 108 full titles.

32
00:02:36,635 --> 00:02:41,498
We have translated, culturalized, and adapted 15 million words.

33
00:02:41,998 --> 00:02:48,883
We have recorded 18,000 hours of dialogues in studios across the world.

34
00:02:50,704 --> 00:02:57,688
We have set up 75 or over 75 servers on our localization dedicated to.

35
00:02:59,821 --> 00:03:07,364
We have tested more than 1,000 patches and overall performed

36
00:03:08,185 --> 00:03:10,806
450,000 hours of testing globally.

37
00:03:11,826 --> 00:03:15,308
So whilst this will give you some context on the

38
00:03:15,348 --> 00:03:18,489
localization scope of challenges that we face at

39
00:03:18,769 --> 00:03:22,211
SAE, we found that the solutions that we have put in

40
00:03:22,291 --> 00:03:26,092
place have been effective, whether your project be small

41
00:03:26,372 --> 00:03:28,753
or large, complex or straightforward.

42
00:03:32,362 --> 00:03:36,967
So now, as a developer, you will be in charge of integrating

43
00:03:37,427 --> 00:03:40,911
one, 10, or more languages into your game.

44
00:03:41,632 --> 00:03:44,915
The big question usually is, at what time do I need to

45
00:03:45,055 --> 00:03:46,437
think of localization?

46
00:03:47,618 --> 00:03:50,120
In our opinion, the earlier, the better.

47
00:03:51,374 --> 00:03:58,199
Getting to meet with your localization experts as early as possible is vital in order to

48
00:03:58,259 --> 00:04:04,583
allow the people who will really look after your localization to immerse themselves into

49
00:04:05,244 --> 00:04:10,327
your needs, your game, your objectives, and also to share consultancy.

50
00:04:11,894 --> 00:04:15,196
Conversely, for us localization experts,

51
00:04:15,777 --> 00:04:17,858
it's essential to meet with you early

52
00:04:17,898 --> 00:04:22,781
to understand how to adapt our processes, our tools,

53
00:04:23,241 --> 00:04:24,122
to your needs.

54
00:04:26,043 --> 00:04:30,246
And most importantly, to determine together

55
00:04:30,346 --> 00:04:33,808
the most appropriate pipeline that will

56
00:04:33,928 --> 00:04:35,609
suit the needs of your game.

57
00:04:42,596 --> 00:04:49,582
So this traditional waterfall model would be best suited where the full game is already

58
00:04:49,862 --> 00:04:56,808
in development, where the source script and audio is already well underway, and where

59
00:04:56,848 --> 00:05:00,190
there will be minimal fragmentation of assets needed.

60
00:05:00,571 --> 00:05:02,873
So in practice, this means...

61
00:05:03,373 --> 00:05:10,837
After meeting our development teams pre-alpha, localization is done during the alpha phase

62
00:05:11,217 --> 00:05:17,940
with a view to deliver the majority of the localization assets by the beta milestone,

63
00:05:19,221 --> 00:05:26,585
at which point our localization QA colleagues will take over for the first sweep of localization

64
00:05:26,625 --> 00:05:30,346
testing before we all move into the pickup session.

65
00:05:31,783 --> 00:05:35,364
So traditionally, we have also followed this pipeline,

66
00:05:36,024 --> 00:05:38,365
and we still do for many of our titles.

67
00:05:39,145 --> 00:05:41,826
However, where our developers have adopted

68
00:05:41,886 --> 00:05:45,587
more agile processes, and where the source assets

69
00:05:45,667 --> 00:05:48,247
remain unfinalized a lot longer,

70
00:05:48,627 --> 00:05:52,928
we really needed to find a different approach.

71
00:05:55,752 --> 00:05:58,214
And that different approach was realized

72
00:05:58,274 --> 00:05:59,514
through this pipeline.

73
00:06:00,175 --> 00:06:02,956
So this one is a more iterative model

74
00:06:03,276 --> 00:06:06,878
that we use to match the development processes

75
00:06:07,479 --> 00:06:11,261
whilst still retaining localization efficiencies.

76
00:06:12,796 --> 00:06:17,921
on such a model, localization, so translation, audio services,

77
00:06:18,401 --> 00:06:20,844
and localization QA for the testing

78
00:06:21,344 --> 00:06:23,526
effectively become one team.

79
00:06:24,547 --> 00:06:27,850
And we will be collaborating really extensively

80
00:06:28,311 --> 00:06:31,514
on each of the rolling localization cycles.

81
00:06:33,749 --> 00:06:38,354
So as you can see, the tasks are completely identical to

82
00:06:38,394 --> 00:06:42,679
the previous waterfall model, but the sequencing has been

83
00:06:42,859 --> 00:06:47,285
adapted to match the development processes and the

84
00:06:47,325 --> 00:06:50,328
way the development are building their game.

85
00:06:53,057 --> 00:06:53,778
So here it is.

86
00:06:53,958 --> 00:06:56,661
Our ingredient number one towards efficiencies

87
00:06:57,262 --> 00:07:02,047
is for the main stakeholders to actually meet early in order

88
00:07:02,127 --> 00:07:05,811
to determine together the most appropriate pipeline

89
00:07:06,012 --> 00:07:07,433
for the needs of your game.

90
00:07:11,470 --> 00:07:19,893
So one of the other challenges that we usually face is to get all the main stakeholders to

91
00:07:20,533 --> 00:07:27,316
work towards the same efficiencies without all developing ad hoc processes, ad hoc tools

92
00:07:27,636 --> 00:07:33,078
that will certainly benefit their own process but will completely disregard the process

93
00:07:33,238 --> 00:07:34,698
of their calling departments.

94
00:07:36,220 --> 00:07:39,667
So at Acai, we do so through one common tool,

95
00:07:40,288 --> 00:07:42,893
our localization asset management system.

96
00:07:45,032 --> 00:07:47,332
So LAMS is a proprietary tool that

97
00:07:47,352 --> 00:07:48,993
has been developed internally.

98
00:07:49,473 --> 00:07:54,214
It's a cloud-based system for source and localized text,

99
00:07:54,695 --> 00:07:56,255
audio, and subtitles.

100
00:07:57,095 --> 00:08:00,736
It has, in fact, become a central repository

101
00:08:01,157 --> 00:08:04,778
for the majority of our games for the source

102
00:08:04,998 --> 00:08:06,458
and localized assets.

103
00:08:07,278 --> 00:08:09,139
And with it, it has really become.

104
00:08:09,680 --> 00:08:15,046
a point of convergence for all the various disciplines in localization.

105
00:08:17,549 --> 00:08:26,320
So, the reason why LAMS has in fact become so popular with our dev teams is because it

106
00:08:26,420 --> 00:08:27,441
is flexible.

107
00:08:28,427 --> 00:08:32,208
It's integrating with whatever workflow has been agreed upon,

108
00:08:33,049 --> 00:08:36,690
and most importantly, it is integrating

109
00:08:36,890 --> 00:08:39,911
with the development team's existing tools.

110
00:08:41,612 --> 00:08:44,533
So let's explore the top features

111
00:08:44,613 --> 00:08:46,734
of what localization tools should

112
00:08:47,014 --> 00:08:50,736
display to support and promote effective localization.

113
00:08:54,253 --> 00:08:58,635
starting with the most crucial and basic of feature.

114
00:08:59,616 --> 00:09:04,679
Allowing access to all the various disciplines involved

115
00:09:05,099 --> 00:09:08,300
is the cornerstone of all the steps and improvement

116
00:09:08,401 --> 00:09:10,182
that we are about to discuss today.

117
00:09:11,022 --> 00:09:13,844
So if you take nothing else away today,

118
00:09:14,364 --> 00:09:18,906
please remember to make a priority of this

119
00:09:19,026 --> 00:09:21,047
for the next localization tool

120
00:09:21,428 --> 00:09:23,909
that you will build by all use.

121
00:09:26,265 --> 00:09:34,572
And if possible, take this further by allowing or by using a tool that will support multiple

122
00:09:34,613 --> 00:09:40,518
different file formats so that all the teams involved can all work in the best of their

123
00:09:40,578 --> 00:09:43,561
process yet still do so in harmony.

124
00:09:46,802 --> 00:09:52,585
With LAMS, there is no risk of overwriting assets, because

125
00:09:52,645 --> 00:09:57,208
the tool will prevent the tester, for instance, to

126
00:09:58,089 --> 00:10:02,472
update some strings should the translator already be busy

127
00:10:02,532 --> 00:10:03,212
working on it.

128
00:10:05,364 --> 00:10:13,567
transparency on what lines is being worked on by whom means no delay, no unnecessary

129
00:10:13,627 --> 00:10:19,069
duplication of work between tester, translator, and so no unnecessary costs.

130
00:10:23,611 --> 00:10:29,153
So once our access is granted, work can start in earnest.

131
00:10:30,162 --> 00:10:37,865
And as we have seen, a lot of disciplines and a lot of people will be involved in your localization process.

132
00:10:38,786 --> 00:10:45,349
And often in our industry, we are likely to be working with people scattered all around the globe.

133
00:10:46,593 --> 00:10:53,699
So the tool that you build by our use should really help to ease the communication between

134
00:10:53,959 --> 00:11:01,105
all the various disciplines, keeping everyone on the same page regardless of your geographic

135
00:11:01,165 --> 00:11:01,765
location.

136
00:11:07,450 --> 00:11:15,857
So at SAE, we allow searches and display configurations to be saved and shared.

137
00:11:17,032 --> 00:11:20,335
And this means that you can be sure that someone

138
00:11:20,455 --> 00:11:22,737
who is on the other side of the world

139
00:11:23,217 --> 00:11:26,560
will see the exact same results as you are.

140
00:11:28,582 --> 00:11:33,206
Say on a project, developer based in Europe

141
00:11:33,826 --> 00:11:39,251
wants their localization partners in America or Japan

142
00:11:40,211 --> 00:11:43,614
to work on very specific sets of strings.

143
00:11:44,623 --> 00:11:53,752
By sharing their display configurations with their colleague departments, the assets coverage

144
00:11:53,792 --> 00:12:02,181
will be identical for everyone, and there will be no risk to work on incorrect or outdated

145
00:12:02,241 --> 00:12:02,922
set of strings.

146
00:12:04,683 --> 00:12:13,305
And most of all, there will be no time wasted on back and forth and back and forth of email

147
00:12:13,665 --> 00:12:15,026
knowing what to do.

148
00:12:23,328 --> 00:12:23,528
Yeah.

149
00:12:24,108 --> 00:12:32,370
So, as we know, translation is underway, and with it comes the eternal problem of the context.

150
00:12:33,810 --> 00:12:36,492
When translating any size of project,

151
00:12:36,952 --> 00:12:38,493
there are bound to be queries.

152
00:12:39,233 --> 00:12:42,415
And without the visual support, terms can really

153
00:12:42,455 --> 00:12:44,656
be open to interpretation.

154
00:12:45,536 --> 00:12:48,078
So take the word fire, for instance.

155
00:12:53,554 --> 00:13:00,678
So make sure that the tool you go for has a system to allow these questions to be asked

156
00:13:01,058 --> 00:13:04,520
in the context of the text they refer to.

157
00:13:08,642 --> 00:13:17,046
So for us, this means an integrated Q&A system where our translators can ask their queries.

158
00:13:17,825 --> 00:13:23,369
And developers or production can answer almost instantly.

159
00:13:24,669 --> 00:13:28,111
We even sometimes get our functional QA tester

160
00:13:28,551 --> 00:13:31,053
to answer these questions, because this

161
00:13:31,093 --> 00:13:33,935
will save a great deal of time to our developers.

162
00:13:35,055 --> 00:13:38,177
And we also allow these replies to be images,

163
00:13:38,377 --> 00:13:40,178
because one image can say 1,000 words, or 1,300

164
00:13:40,238 --> 00:13:42,179
in our localized versions.

165
00:13:46,140 --> 00:13:50,565
So with this system, there are no unnecessary spurious bugs

166
00:13:50,846 --> 00:13:51,607
by testers.

167
00:13:52,969 --> 00:13:56,633
The testers gains really more awareness of the choice of

168
00:13:56,693 --> 00:13:58,756
wording of the translator.

169
00:13:59,537 --> 00:14:02,621
And there seems to be more respect overall between

170
00:14:02,661 --> 00:14:04,623
translator and tester.

171
00:14:09,272 --> 00:14:13,695
So now, once your assets are localized,

172
00:14:14,036 --> 00:14:17,998
and because our European languages are typically

173
00:14:18,259 --> 00:14:20,840
30% longer than our source English,

174
00:14:21,321 --> 00:14:23,602
you should expect that the localized assets

175
00:14:23,783 --> 00:14:26,905
will be different to the source English.

176
00:14:27,865 --> 00:14:30,207
I know, that's the GDC insight that you've paid for.

177
00:14:31,959 --> 00:14:36,301
So, for this reason, make sure that you can communicate

178
00:14:36,361 --> 00:14:39,603
the constraints on text length restriction

179
00:14:40,303 --> 00:14:42,424
and audio technical specifications

180
00:14:43,025 --> 00:14:46,047
ahead of the localization phase.

181
00:14:46,747 --> 00:14:51,109
And ideally, make sure that you can enforce them

182
00:14:51,450 --> 00:14:52,610
through your tool.

183
00:14:55,072 --> 00:14:58,033
So, the simplest thing to have to start with

184
00:14:58,454 --> 00:15:00,935
would be to have a character count.

185
00:15:01,987 --> 00:15:05,389
You can take this further by allowing for a line count,

186
00:15:06,269 --> 00:15:10,072
and further still to allow different character limits

187
00:15:10,472 --> 00:15:11,873
for different character sets.

188
00:15:14,315 --> 00:15:18,137
Then you can move that feature along to the audio

189
00:15:19,578 --> 00:15:21,800
by checking simple file properties.

190
00:15:22,560 --> 00:15:26,083
And in fact, you could look at any other aspects

191
00:15:26,403 --> 00:15:29,585
of the audio, such as the bit depth, the sample rate,

192
00:15:29,785 --> 00:15:31,246
the duration, or the volume.

193
00:15:32,610 --> 00:15:42,013
In any of these cases, the tool should really make it easy to identify where your localised

194
00:15:42,213 --> 00:15:51,436
assets are not compliant with your source assets and should ideally report or alert

195
00:15:51,796 --> 00:15:57,497
the stakeholders for the corrective actions to be taken and the issues to be resolved.

196
00:15:59,296 --> 00:16:08,223
And if you want to get really fancy, you can even enable your tool to automatically fix

197
00:16:08,383 --> 00:16:09,544
these volume issues.

198
00:16:14,508 --> 00:16:22,874
So our LAM system will check the text length restrictions and the audio technical specifications

199
00:16:23,595 --> 00:16:27,418
upon upload of the localized assets within our tool.

200
00:16:28,896 --> 00:16:39,561
For instance, should the audio assets be mismatching with the source, the system will report the

201
00:16:39,682 --> 00:16:46,925
issue and send a notification to the various disciplines or stakeholders.

202
00:16:48,623 --> 00:16:55,470
So the time saved here is significant because we do not have to wait for manual checks by

203
00:16:55,670 --> 00:17:03,278
either our development teams or by the localization project managers, the testers, the translators,

204
00:17:04,339 --> 00:17:07,101
because the discrepancies in compliance.

205
00:17:07,622 --> 00:17:12,827
will be notified upon upload of the localized assets

206
00:17:13,107 --> 00:17:15,129
within the tool by the system.

207
00:17:15,909 --> 00:17:19,513
And the fixes will be pretty much instant,

208
00:17:20,253 --> 00:17:24,217
whether by your localization vendors

209
00:17:25,078 --> 00:17:26,419
or by the tool itself.

210
00:17:31,418 --> 00:17:34,459
So now taking the thoughts on audio a little step further,

211
00:17:34,479 --> 00:17:36,220
we are going to be looking at subtitling.

212
00:17:37,000 --> 00:17:41,402
So it will be a great help if everyone involved

213
00:17:41,722 --> 00:17:45,283
in the process can make changes to the subtitles,

214
00:17:45,824 --> 00:17:48,465
both to the text and the timing.

215
00:17:49,225 --> 00:17:52,546
So really, it could be through some simple markup

216
00:17:52,806 --> 00:17:56,248
in the translation, or it could be splitting

217
00:17:56,328 --> 00:17:59,129
the subtitles into their own entity.

218
00:18:01,459 --> 00:18:09,427
The key thing is that it should really be nice and simple for the right people to go

219
00:18:09,507 --> 00:18:10,989
to and change.

220
00:18:12,270 --> 00:18:20,138
But, again, this builds on having that centralised accessible system for collaboration.

221
00:18:24,355 --> 00:18:29,400
For us at SAE, the rough idea is that our LAMS team

222
00:18:30,221 --> 00:18:36,207
has set up a UI that uses the waveform of the audio file

223
00:18:36,808 --> 00:18:41,192
to hand slide us to get the timing just right really

224
00:18:41,232 --> 00:18:41,613
quickly.

225
00:18:42,802 --> 00:18:47,986
So unfortunately, there is work here that I can't really talk about too much because

226
00:18:48,046 --> 00:18:55,111
it's patent pending for our LAMS team, but what I can say is that the immediate benefit

227
00:18:55,391 --> 00:18:58,093
observed is time and cost saving.

228
00:18:59,001 --> 00:19:08,288
So, on Until Dawn, for instance, our subtitles were automated at 93%, meaning that neither

229
00:19:08,788 --> 00:19:16,854
the developers, nor the translators, nor the testers needed to take any time at all to

230
00:19:17,094 --> 00:19:21,797
manually split the subtitles out, because the tool did that itself.

231
00:19:22,698 --> 00:19:26,761
And that really represented a great cost and time saving.

232
00:19:34,305 --> 00:19:38,729
Now, not forgetting the fans of reporting out there,

233
00:19:39,670 --> 00:19:42,673
whatever localization, whatever approach you will take

234
00:19:42,773 --> 00:19:45,236
to your localization tool, there is,

235
00:19:46,677 --> 00:19:49,280
or there are certain things that you will want your tool

236
00:19:49,360 --> 00:19:50,481
to be able to tell you.

237
00:19:51,585 --> 00:19:52,505
How far have we got?

238
00:19:53,206 --> 00:19:55,968
How much more do we still have to localize?

239
00:19:56,849 --> 00:20:00,552
So going beyond the reactive reporting,

240
00:20:01,092 --> 00:20:04,735
what you might want to see is proactive reporting.

241
00:20:05,235 --> 00:20:11,060
Reports that your system will be providing you

242
00:20:11,540 --> 00:20:15,303
without you necessarily having to go and request it

243
00:20:15,503 --> 00:20:16,404
each and every time.

244
00:20:18,312 --> 00:20:21,533
So exactly what that looks like is entirely up to you.

245
00:20:21,853 --> 00:20:23,874
It could be a pop-up box, a message,

246
00:20:24,034 --> 00:20:25,154
or a good old-fashioned email.

247
00:20:26,895 --> 00:20:29,876
So if you think back a few slides,

248
00:20:30,376 --> 00:20:32,217
and I hope you were paying attention,

249
00:20:34,238 --> 00:20:38,019
I spoke about saving and sharing particular searches.

250
00:20:38,680 --> 00:20:43,201
So these actually form the backbone of our automation,

251
00:20:44,422 --> 00:20:46,503
of our automated reporting.

252
00:20:48,243 --> 00:20:56,246
Users can use any of their searches or any searches that have been shared with them to

253
00:20:56,306 --> 00:20:58,707
create report subscription.

254
00:21:00,007 --> 00:21:11,591
Then LAMs will email the report of their choosing for the search of their choosing in the layout

255
00:21:12,211 --> 00:21:15,272
of their choosing and at a time and frequency.

256
00:21:20,118 --> 00:21:27,480
So, or we can also use the data to create visualizations to provide at-a-glance reporting.

257
00:21:32,701 --> 00:21:35,722
This one being for our programmers specifically.

258
00:21:36,082 --> 00:21:40,583
So talking of access being the cornerstone of improvements before.

259
00:21:41,923 --> 00:21:46,024
Remote access should not just be limited to people.

260
00:21:48,836 --> 00:21:53,037
for your localization tool, you will want to either build

261
00:21:53,377 --> 00:21:57,739
or make sure it has an API that you can use.

262
00:21:58,779 --> 00:22:03,561
As a developer, this will give you a range of options

263
00:22:03,861 --> 00:22:09,583
and opportunities for improving the efficiency

264
00:22:09,803 --> 00:22:13,464
of your system integration, the localization,

265
00:22:14,044 --> 00:22:15,385
the localization testing.

266
00:22:17,017 --> 00:22:22,582
This service mentality also allows for integration

267
00:22:22,742 --> 00:22:28,768
into other systems and opens up some really interesting

268
00:22:28,908 --> 00:22:29,669
possibilities.

269
00:22:31,371 --> 00:22:33,693
One of these possibilities has been

270
00:22:33,833 --> 00:22:38,358
to enable LAMs to support our streaming video tool.

271
00:22:39,439 --> 00:22:40,880
So let's look at a short demo clip.

272
00:22:51,725 --> 00:22:57,026
So the concept on that one is that by using the unique string ID,

273
00:22:57,706 --> 00:22:59,887
or simply searching for the string,

274
00:23:00,727 --> 00:23:06,708
the testers are really quickly able to navigate to the particular asset,

275
00:23:08,228 --> 00:23:10,689
watch the relevant recording footage,

276
00:23:11,469 --> 00:23:17,750
and verify this asset while still retaining the context.

277
00:23:22,765 --> 00:23:30,248
Additionally, you can also see a graphic display of the PlayStation controller on screen.

278
00:23:31,549 --> 00:23:38,573
So the testers know what buttons are being selected at the time the assets are playing,

279
00:23:39,593 --> 00:23:46,396
meaning they can really verify whether the text and the action are actually matching.

280
00:23:49,573 --> 00:23:53,677
So automation for localization has been extremely successful

281
00:23:53,897 --> 00:23:55,078
at PlayStation.

282
00:23:55,638 --> 00:24:00,303
And we continue to invest in refining our capabilities in

283
00:24:00,363 --> 00:24:00,923
this field.

284
00:24:01,684 --> 00:24:06,628
And in fact, development and refinement are really high on

285
00:24:06,869 --> 00:24:09,491
our list of priorities for the future.

286
00:24:14,447 --> 00:24:18,368
And we have already outlined priorities for the future.

287
00:24:19,148 --> 00:24:24,471
Starting with our tool, we are in the process of implementing

288
00:24:24,791 --> 00:24:27,932
a validation tool for the naming conventions.

289
00:24:28,692 --> 00:24:33,536
So as we know, getting our text right in the game is important,

290
00:24:34,016 --> 00:24:36,438
but getting the naming conventions right

291
00:24:36,598 --> 00:24:37,819
is actually essential.

292
00:24:38,620 --> 00:24:41,362
So I will not go too much into it,

293
00:24:41,422 --> 00:24:45,525
because Chris will be talking about it a bit further

294
00:24:45,545 --> 00:24:49,868
during his poster session in 15 minutes in the Overlook 2018,

295
00:24:51,369 --> 00:24:53,171
if you're interested to know more.

296
00:24:57,191 --> 00:25:02,476
Now, with any new hardware, new challenges emerge.

297
00:25:03,397 --> 00:25:07,762
And in VR, we are addressing the player much more directly

298
00:25:07,782 --> 00:25:12,366
than ever before to create some really, truly immersive

299
00:25:12,566 --> 00:25:13,467
experiences.

300
00:25:14,408 --> 00:25:18,212
So to maintain that, we must make sure that the player is

301
00:25:18,232 --> 00:25:20,214
spoken to appropriately.

302
00:25:22,281 --> 00:25:26,683
So within LAMS, we will allow the use of variance

303
00:25:27,263 --> 00:25:31,965
so that different versions of one same line can be provided.

304
00:25:33,525 --> 00:25:40,168
And by variance, we mean either male, female, even young, old,

305
00:25:41,748 --> 00:25:43,509
really quite a wide range.

306
00:25:45,288 --> 00:25:51,112
So in a sense, our devs control the variants that their title

307
00:25:51,873 --> 00:25:52,914
will be supporting.

308
00:25:53,474 --> 00:25:56,496
LAMS as a system becomes the enabler.

309
00:25:57,137 --> 00:26:02,701
And the translator will be free to choose to use this as and

310
00:26:02,741 --> 00:26:06,083
when their expertise require it is right to do so.

311
00:26:10,046 --> 00:26:11,988
So for localization services.

312
00:26:14,115 --> 00:26:23,799
We are hoping that our translators in future will be able to verify their own translations

313
00:26:24,299 --> 00:26:35,723
in-game much more systematically in order to really catch inconsistencies and incorrect

314
00:26:35,783 --> 00:26:37,464
meanings, mistranslations.

315
00:26:37,984 --> 00:26:43,853
and really clean their scripts to make them as immersive, as creative and as emotionally

316
00:26:43,913 --> 00:26:45,035
engaging as possible.

317
00:26:47,429 --> 00:26:54,151
We are also wishing to improve on audio volumes in future,

318
00:26:54,911 --> 00:27:00,212
and by potentially centralizing the audio mastering service

319
00:27:00,532 --> 00:27:03,413
for all languages in one studio.

320
00:27:03,853 --> 00:27:07,274
So this should enhance the quality

321
00:27:07,814 --> 00:27:11,055
of the immersive experience for those titles

322
00:27:11,295 --> 00:27:13,936
where volumes could create issues.

323
00:27:17,074 --> 00:27:22,917
And finally, we are also looking at having embedded project managers at our dev teams

324
00:27:23,397 --> 00:27:30,520
whenever and wherever this is required by our developers, either kick-off time or training

325
00:27:30,761 --> 00:27:31,281
on LAMs.

326
00:27:32,481 --> 00:27:38,184
This will be to really be able to support our development teams as effectively as possible.

327
00:27:41,182 --> 00:27:44,225
For our tools, for our localization testing,

328
00:27:44,805 --> 00:27:49,209
the tool support and automation, like the video capture

329
00:27:49,229 --> 00:27:51,791
solution that we've seen before, already

330
00:27:51,952 --> 00:27:56,275
allows us to reduce the amount of localization testing

331
00:27:56,375 --> 00:27:59,578
the test, sorry, the amount of testing

332
00:27:59,618 --> 00:28:01,680
that the localization testers have

333
00:28:01,760 --> 00:28:03,382
to perform within the game.

334
00:28:04,662 --> 00:28:10,884
And in future, we expect that this testing effort will be further reduced and will turn

335
00:28:11,104 --> 00:28:17,186
more into validation and verification of the localised assets.

336
00:28:17,926 --> 00:28:25,649
So the benefits will be reduced costs, reduced time and better utilisation of our lock expert

337
00:28:25,689 --> 00:28:26,009
teams.

338
00:28:30,943 --> 00:28:33,705
With our tools and automation efforts,

339
00:28:34,166 --> 00:28:37,708
we can also map the bugs in the game.

340
00:28:38,969 --> 00:28:42,712
And this might help to identify bug clusters

341
00:28:43,392 --> 00:28:46,714
and makes it easier to actually investigate

342
00:28:46,874 --> 00:28:48,976
the root causes of a bug.

343
00:28:51,790 --> 00:28:56,914
In addition, we can also map the paths testers have taken

344
00:28:56,934 --> 00:28:58,234
through the game.

345
00:28:58,855 --> 00:29:01,937
And this is really super helpful for coverage

346
00:29:02,517 --> 00:29:05,659
and for progress tracking purposes.

347
00:29:09,452 --> 00:29:15,896
Linking this data into LAMS, we will also be able to visualize the data, which will

348
00:29:15,936 --> 00:29:23,361
help see progress at a glance, and then the project leads can use this to prioritize testing.

349
00:29:28,224 --> 00:29:35,389
So, in conclusion, if you take nothing else away today, please remember.

350
00:29:36,486 --> 00:29:48,153
to meet with your lock experts early, so they can draw an efficient plan of action adapted

351
00:29:48,434 --> 00:29:49,554
to your needs.

352
00:29:52,036 --> 00:30:00,081
Then, invest in a tool, any tool, because with it the opportunities towards efficiency

353
00:30:00,321 --> 00:30:02,563
and quality will become endless.

354
00:30:04,978 --> 00:30:09,062
For this to happen, though, please remember to empower

355
00:30:09,242 --> 00:30:11,143
your localization partners.

356
00:30:11,984 --> 00:30:17,208
Let your localization expert teams access the tools

357
00:30:17,828 --> 00:30:20,350
so that they can manage the localization

358
00:30:21,151 --> 00:30:25,014
and deliver what you need, when you need it,

359
00:30:25,394 --> 00:30:28,716
and in a manner that will be most effective for you.

360
00:30:31,839 --> 00:30:34,321
Finally, for the localization testing,

361
00:30:35,201 --> 00:30:38,363
use the potential of the tool and go

362
00:30:38,623 --> 00:30:43,706
as far as validating and automating your localization

363
00:30:43,766 --> 00:30:46,428
testing for maximum efficiency.

364
00:30:50,351 --> 00:30:54,658
So thank you very much for attending this presentation today.

365
00:30:54,799 --> 00:30:57,884
I hope that you enjoyed it.

366
00:30:58,345 --> 00:31:03,013
I'm not sure whether we will have any time for questions.

367
00:31:05,924 --> 00:31:12,770
Yeah, we've got time for one or two questions before we all

368
00:31:12,830 --> 00:31:16,994
move on to the poster session of Chris, where he will be

369
00:31:17,034 --> 00:31:19,156
going more in-depth into the tool features.

370
00:31:19,396 --> 00:31:23,480
So I will invite Nadine and Chris to come up on stage if

371
00:31:23,520 --> 00:31:24,941
we have any questions.

372
00:31:25,442 --> 00:31:26,383
If you want to join me.

373
00:31:39,428 --> 00:31:40,168
May I go first?

374
00:31:40,528 --> 00:31:42,189
Matt Whiting, Lionbridge Game Services.

375
00:31:42,589 --> 00:31:43,590
Very interesting talk.

376
00:31:43,610 --> 00:31:46,311
I wanted to ask Chris, how do you instrument your games so

377
00:31:46,331 --> 00:31:53,234
that you can do the automated audio testing or the testing

378
00:31:53,254 --> 00:31:55,315
you were showing up there on the screen where you can see

379
00:31:55,936 --> 00:31:58,777
where the lines are displayed, what the controls are being

380
00:31:58,797 --> 00:31:59,557
pushed, and so forth.

381
00:31:59,577 --> 00:32:01,338
I don't know which one is working.

382
00:32:02,319 --> 00:32:05,160
So that does place a.

383
00:32:06,086 --> 00:32:09,147
very, very slight burden on the dev, which is always something we're trying to avoid,

384
00:32:09,227 --> 00:32:14,169
but because this is tied to their engine and what's happening at runtime, there's a little

385
00:32:14,189 --> 00:32:19,310
bit of work for them to do. But all it requires is for them to just output a little debug

386
00:32:19,330 --> 00:32:25,872
string indicating, we're here, we're displaying this particular sort of identifier of line

387
00:32:25,893 --> 00:32:27,993
at this time, and then...

388
00:32:29,127 --> 00:32:32,208
everything else is handled by that video capture service

389
00:32:32,348 --> 00:32:34,429
that's kind of picking up on what's happening to the pad,

390
00:32:34,489 --> 00:32:35,830
what's happening to other things.

391
00:32:36,350 --> 00:32:38,091
It just sort of annotates the video to say,

392
00:32:38,571 --> 00:32:40,352
at this time, you can see this string.

393
00:32:40,872 --> 00:32:41,993
Come and have a look and check it's okay.

394
00:32:42,553 --> 00:32:43,273
All right, thank you.

395
00:32:46,136 --> 00:32:47,897
So I see this is a great tool.

396
00:32:47,917 --> 00:32:50,559
I see that it's proprietary.

397
00:32:51,540 --> 00:32:55,963
So is it only open to games that have a relationship with,

398
00:32:56,244 --> 00:32:58,505
that are going to be launched on PlayStation?

399
00:32:59,006 --> 00:33:02,569
Or are you guys also opening this to maybe PC games?

400
00:33:03,389 --> 00:33:05,771
And also for the version that basically,

401
00:33:06,512 --> 00:33:09,634
if we use this tool to produce a localized version,

402
00:33:10,115 --> 00:33:11,856
is that going to be restricted only

403
00:33:11,916 --> 00:33:13,437
to be published on PlayStation?

404
00:33:13,677 --> 00:33:14,678
Or does it become?

405
00:33:15,619 --> 00:33:18,259
the properties of the developers.

406
00:33:21,840 --> 00:33:26,701
Okay, so that's a little bit above my pay grade to make any kind of formal announcements

407
00:33:26,821 --> 00:33:26,941
on.

408
00:33:27,281 --> 00:33:30,902
So I'll speak historically.

409
00:33:31,302 --> 00:33:36,544
It's only ever been used for titles that we are developing or publishing ourselves.

410
00:33:37,784 --> 00:33:39,945
That might change in the future, but I'm...

411
00:33:41,100 --> 00:33:42,740
I'm not going to stand here on video and say that,

412
00:33:42,840 --> 00:33:44,161
because we've got too much.

413
00:33:44,521 --> 00:33:45,021
I understand.

414
00:33:45,061 --> 00:33:46,982
I think it's just if this tool is available,

415
00:33:47,002 --> 00:33:49,963
I think a lot of people would be very, very interested.

416
00:33:51,023 --> 00:33:51,583
Great tools.

417
00:33:51,823 --> 00:33:52,083
Thank you.

418
00:33:52,103 --> 00:33:53,164
Just wait outside with the checkbook,

419
00:33:53,244 --> 00:33:54,124
and I'll be right over.

420
00:33:54,144 --> 00:33:58,906
I have a couple of questions.

421
00:33:59,486 --> 00:34:02,847
One, do you guys manage art assets in your tool?

422
00:34:03,087 --> 00:34:07,129
Like if there's signs that need to be changed from English

423
00:34:07,229 --> 00:34:08,169
to other languages?

424
00:34:11,599 --> 00:34:17,164
We have done once, but that's only because that's what that

425
00:34:17,204 --> 00:34:18,285
particular project required.

426
00:34:18,806 --> 00:34:19,907
The system can do it.

427
00:34:20,067 --> 00:34:21,048
It's quite happy to.

428
00:34:21,669 --> 00:34:26,413
It is kind of agnostic as to what the actual asset is that

429
00:34:26,453 --> 00:34:27,174
it's looking after.

430
00:34:27,634 --> 00:34:30,357
All it really cares is there is this item that needs to

431
00:34:30,417 --> 00:34:31,858
exist for these languages.

432
00:34:32,259 --> 00:34:34,321
I will track it and make sure that it exists.

433
00:34:34,741 --> 00:34:36,465
And if the text required from that changes,

434
00:34:36,485 --> 00:34:38,068
I will prompt somebody that they need

435
00:34:38,088 --> 00:34:41,935
to update that asset as well, be it audio, texture, or even

436
00:34:42,216 --> 00:34:43,017
a 3D model.

437
00:34:43,037 --> 00:34:44,761
Anything should, in theory, be possible.

438
00:34:45,562 --> 00:34:50,886
And then my other question was, do you, does this support all the languages, like Chinese,

439
00:34:50,926 --> 00:34:56,591
like analyzing the audio files for, you know, non-FIGS languages?

440
00:34:56,651 --> 00:35:01,314
I know you showed a Japanese example, but I didn't know if that covered everything.

441
00:35:02,215 --> 00:35:02,435
Yes.

442
00:35:02,755 --> 00:35:03,436
Yeah.

443
00:35:03,536 --> 00:35:06,218
It should cover all real languages and also fake ones as well.

444
00:35:07,279 --> 00:35:07,459
Cool.

445
00:35:07,639 --> 00:35:07,859
Thanks.

446
00:35:09,981 --> 00:35:13,483
More a general question than related to the tool, but yeah.

447
00:35:14,778 --> 00:35:17,562
The process becoming structured like this with tools

448
00:35:17,682 --> 00:35:20,065
keeping track of changes and so on, do you think we will

449
00:35:20,105 --> 00:35:25,331
arrive in the point where localization edits happen

450
00:35:25,391 --> 00:35:26,913
also post-launch?

451
00:35:27,294 --> 00:35:30,378
Because it used to be that we had the game on the disk, and

452
00:35:30,458 --> 00:35:31,219
that was the game.

453
00:35:31,639 --> 00:35:36,243
Now we are in a world where you have the disk and then you have the day one patch and so

454
00:35:36,323 --> 00:35:43,208
on and so on. Localization usually never changes. There's new stuff, but if there's a mistake

455
00:35:43,248 --> 00:35:49,173
in the code, it will be fixed in the patch. If there's a mistake in the text, it's unlikely

456
00:35:49,213 --> 00:35:55,778
that it will get changed, at least historically. Do you think we might get to that with time

457
00:35:55,838 --> 00:35:56,299
and tools?

458
00:35:58,280 --> 00:35:59,641
Do you want me to take it?

459
00:35:59,681 --> 00:35:59,882
Yeah.

460
00:36:00,422 --> 00:36:00,582
Okay.

461
00:36:01,074 --> 00:36:07,018
So I think that that is already something that does happen.

462
00:36:07,118 --> 00:36:08,619
And please feel free to correct me if I'm wrong.

463
00:36:08,919 --> 00:36:12,182
But it's because of the combination of the access and

464
00:36:12,202 --> 00:36:12,782
the empowerment.

465
00:36:13,323 --> 00:36:16,085
Because in order to change that text, all it requires is

466
00:36:16,105 --> 00:36:17,326
the tester to notice it's wrong.

467
00:36:18,026 --> 00:36:20,428
And if they're within the video toolkit to be able to

468
00:36:20,468 --> 00:36:23,190
change it there, if they're looking at it directly in

469
00:36:23,230 --> 00:36:26,733
LAMS just to make a change there, that will go into the

470
00:36:26,773 --> 00:36:28,634
next build of the game, whether that is.

471
00:36:29,448 --> 00:36:31,009
the gold master, the day one patch.

472
00:36:31,069 --> 00:36:33,130
And without the need of a new submission.

473
00:36:33,410 --> 00:36:36,052
It's just normal in the flow of the patching.

474
00:36:38,013 --> 00:36:38,193
Yes.

475
00:36:38,893 --> 00:36:39,133
Yes.

476
00:36:39,814 --> 00:36:40,134
He said.

477
00:36:42,555 --> 00:36:44,837
OK, thank you very much for attending.

478
00:36:45,097 --> 00:36:48,058
And please come along with us to Chris's poster session

479
00:36:48,099 --> 00:36:50,860
if you're interested in more in-depth tool features.

480
00:36:51,681 --> 00:36:52,081
Thank you.

