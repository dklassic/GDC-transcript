1
00:00:06,977 --> 00:00:10,437
OK, let the record show that I'm the very wide one.

2
00:00:12,138 --> 00:00:12,658
Thanks, Mike.

3
00:00:12,678 --> 00:00:18,159
Yeah, a couple more minutes.

4
00:00:18,359 --> 00:00:19,379
Last session of the day.

5
00:00:19,479 --> 00:00:22,960
We have kind of gotten into the pattern over the recent years

6
00:00:23,020 --> 00:00:29,942
of ending one of the days with a panel just to kind of,

7
00:00:29,982 --> 00:00:32,742
because let's face it, we've gotten an earful so far

8
00:00:33,683 --> 00:00:34,243
during the day.

9
00:00:35,880 --> 00:00:37,781
But it isn't just a panel.

10
00:00:37,821 --> 00:00:41,125
We always try to make sure that we're giving it something

11
00:00:41,165 --> 00:00:43,907
that makes you walk out of here thinking, OK, yeah,

12
00:00:44,187 --> 00:00:49,012
inspirational or something you can kind of wrap your head

13
00:00:49,052 --> 00:00:49,973
around and say, this is something

14
00:00:49,993 --> 00:00:51,094
I can take back to my team.

15
00:00:51,334 --> 00:00:52,675
That isn't necessarily technical.

16
00:00:53,236 --> 00:00:55,277
So that's kind of where we tend to head with this.

17
00:00:55,297 --> 00:00:59,441
So this came up on the guild list of something

18
00:00:59,481 --> 00:01:00,322
we wanted to talk about.

19
00:01:01,075 --> 00:01:03,256
I won't blow all the secrets here,

20
00:01:03,476 --> 00:01:05,437
but that's why we're here.

21
00:01:06,398 --> 00:01:10,380
Anyway, who was here for Dave Churchill's thing

22
00:01:10,400 --> 00:01:12,141
in the last bit?

23
00:01:14,483 --> 00:01:16,404
Complexity classes kneel before him.

24
00:01:17,305 --> 00:01:17,865
So where is he?

25
00:01:18,025 --> 00:01:19,006
I want to see if he's blushing.

26
00:01:19,626 --> 00:01:21,247
He's probably going, oh, thank God I'm done.

27
00:01:21,707 --> 00:01:22,208
Oh, there you are.

28
00:01:25,390 --> 00:01:26,190
So good first day?

29
00:01:27,631 --> 00:01:27,971
All right.

30
00:01:28,792 --> 00:01:29,632
I do miss Jorge.

31
00:01:30,192 --> 00:01:30,753
I have to admit.

32
00:01:31,213 --> 00:01:33,955
That was like we have one regular who's not here this year.

33
00:01:35,276 --> 00:01:45,322
There is something that he was the most enthusiastic AI summit attendee ever and he definitely could bring the decibels. That's for sure, but I'll have to check on him. Hope he's alright.

34
00:01:47,123 --> 00:01:58,650
So we got quite the slate tomorrow too. So you know, hopefully we're not up against any serious competition from the other summits and tutorial. Oh no, there are no other summits and tutorials. This is the only game in town, right?

35
00:01:59,810 --> 00:02:00,611
That doesn't work as it.

36
00:02:01,395 --> 00:02:03,977
So, OK, well, we're still getting

37
00:02:03,997 --> 00:02:05,118
some people scanned in here.

38
00:02:05,138 --> 00:02:06,459
So we've got about a minute.

39
00:02:07,480 --> 00:02:10,523
Go ahead and, because we do have some people still coming in,

40
00:02:10,583 --> 00:02:13,905
if you have some empty seats in the middle of your section,

41
00:02:14,225 --> 00:02:16,007
go ahead and scoot in if you could, please.

42
00:02:17,748 --> 00:02:18,369
Yeah, thank you.

43
00:02:19,710 --> 00:02:23,593
And once again, my near ubiquitous reminder of,

44
00:02:24,113 --> 00:02:26,575
please, make sure you're scanned into the sessions,

45
00:02:26,975 --> 00:02:29,197
but make sure you fill out those evals.

46
00:02:29,557 --> 00:02:31,117
Even if you just score us, that's great.

47
00:02:31,137 --> 00:02:33,218
But more importantly, please write some comments,

48
00:02:33,678 --> 00:02:36,720
some feedback for the speakers on the sum as a whole.

49
00:02:37,300 --> 00:02:39,501
And we have been pretty shameless in past years

50
00:02:39,541 --> 00:02:44,423
about saying, writing things like the AI summit

51
00:02:44,523 --> 00:02:47,064
is the reason that I come to GDC, don't lie.

52
00:02:47,684 --> 00:02:50,846
But if this is really, really important to you,

53
00:02:51,366 --> 00:02:53,727
write that in there, because then the GDC people read that

54
00:02:53,747 --> 00:02:56,628
and go, oh, wow, yeah, we've got to keep this AI summit coming

55
00:02:56,668 --> 00:02:56,868
back.

56
00:02:57,634 --> 00:02:59,375
Not that we're at a risk, I don't think.

57
00:03:00,276 --> 00:03:03,118
But please put that kind of stuff in there,

58
00:03:03,138 --> 00:03:04,379
feedback for all of us.

59
00:03:04,759 --> 00:03:06,721
It's really important for us to hear that.

60
00:03:06,881 --> 00:03:09,703
All right, I think we're good.

61
00:03:09,743 --> 00:03:11,425
This door is closing.

62
00:03:11,505 --> 00:03:13,126
So we're going to go ahead and get things kicked off.

63
00:03:14,487 --> 00:03:17,850
Again, my name is Dave Mark, your summit advisor,

64
00:03:17,930 --> 00:03:19,191
and more importantly for right now,

65
00:03:19,251 --> 00:03:20,913
the moderator of this panel.

66
00:03:20,973 --> 00:03:25,496
My job in general is going to be direct traffic up here.

67
00:03:26,522 --> 00:03:28,362
because the real talent is on either side of me.

68
00:03:29,222 --> 00:03:32,703
A lot of experience on this subject.

69
00:03:33,703 --> 00:03:36,124
And again, this kind of came from a discussion on the guild list

70
00:03:37,624 --> 00:03:40,525
that as game behaviors get more complex,

71
00:03:40,605 --> 00:03:42,505
it's a real pain in the butt to test them.

72
00:03:42,565 --> 00:03:45,266
And so the consensus was, yeah, we should have a panel on this.

73
00:03:45,326 --> 00:03:47,386
I could speak to that, I could speak to that, etc.

74
00:03:47,406 --> 00:03:49,987
So this is who we had ending up in here.

75
00:03:50,247 --> 00:03:52,527
I will let them introduce themselves.

76
00:03:53,629 --> 00:03:55,451
First, Sergio Ocio.

77
00:03:55,671 --> 00:03:56,091
Where'd you go?

78
00:03:56,191 --> 00:03:56,791
Sergio is right here.

79
00:03:57,312 --> 00:03:58,092
So, go ahead.

80
00:03:58,873 --> 00:03:59,093
Yep.

81
00:03:59,133 --> 00:04:02,595
So, I'm a lead AI engineer at Hangar 13.

82
00:04:03,756 --> 00:04:05,737
I joined the team when we were finishing Mafia 3.

83
00:04:05,777 --> 00:04:09,219
Yes, I've been in the industry for a long time, so, you know, it's very interesting

84
00:04:09,239 --> 00:04:10,020
talking about what we have today.

85
00:04:11,140 --> 00:04:12,081
You've tested a lot of things, have you?

86
00:04:12,101 --> 00:04:12,161
Yes.

87
00:04:12,181 --> 00:04:12,942
Emil Johansen, how are you?

88
00:04:12,982 --> 00:04:13,142
I'm good.

89
00:04:13,162 --> 00:04:13,342
I'm good.

90
00:04:13,362 --> 00:04:13,582
I'm good.

91
00:04:13,602 --> 00:04:13,782
I'm good.

92
00:04:13,802 --> 00:04:14,162
I'm good.

93
00:04:14,182 --> 00:04:14,342
I'm good.

94
00:04:14,383 --> 00:04:14,663
I'm good.

95
00:04:14,683 --> 00:04:14,843
I'm good.

96
00:04:14,863 --> 00:04:15,023
I'm good.

97
00:04:15,043 --> 00:04:15,323
I'm good.

98
00:04:15,343 --> 00:04:15,563
I'm good.

99
00:04:15,603 --> 00:04:15,783
I'm good.

100
00:04:16,504 --> 00:04:17,064
I'm good.

101
00:04:17,084 --> 00:04:17,264
I'm good.

102
00:04:17,284 --> 00:04:17,444
I'm good.

103
00:04:17,464 --> 00:04:17,625
I'm good.

104
00:04:17,645 --> 00:04:17,805
I'm good.

105
00:04:18,360 --> 00:04:21,063
Yeah, I'm a contractor, so I do other people's games.

106
00:04:21,503 --> 00:04:24,746
And most of that time, it's specialized in AI.

107
00:04:25,386 --> 00:04:26,888
And for the past nine years, I've

108
00:04:26,908 --> 00:04:28,990
been doing my own middleware on that.

109
00:04:30,511 --> 00:04:30,791
OK.

110
00:04:31,292 --> 00:04:31,492
Mike.

111
00:04:32,453 --> 00:04:32,893
Mike Lewis.

112
00:04:33,233 --> 00:04:36,036
I'm the lead gameplay programmer on Guild Wars 2 at ArenaNet.

113
00:04:36,616 --> 00:04:40,539
And I've been doing AI for most of my game programming career

114
00:04:40,600 --> 00:04:41,480
in some form or another.

115
00:04:43,482 --> 00:04:44,203
And Mike Robbins.

116
00:04:44,970 --> 00:04:45,910
I'm Mike Robbins.

117
00:04:46,130 --> 00:04:48,632
I'm the senior software engineer at Holospark.

118
00:04:49,312 --> 00:04:51,993
I've worked on games like Planetary Annihilation,

119
00:04:52,053 --> 00:04:52,814
Supreme Commander 2.

120
00:04:53,434 --> 00:04:56,275
I got interested in AI as a modder in the community

121
00:04:56,555 --> 00:04:58,336
and then transitioned my way into the industry.

122
00:04:59,277 --> 00:05:01,097
Which is like the coolest way to get into the,

123
00:05:01,217 --> 00:05:02,478
oh, it's just modding stuff.

124
00:05:02,598 --> 00:05:03,619
What, you want to hire me?

125
00:05:03,779 --> 00:05:04,879
Cool, right on.

126
00:05:05,239 --> 00:05:06,140
Pretty much my reaction.

127
00:05:06,640 --> 00:05:08,501
And again, my name is Dave Mark.

128
00:05:08,521 --> 00:05:10,662
I'm the president and lead designer of Intrinsic Algorithm.

129
00:05:10,942 --> 00:05:13,703
I do AI consulting for studios all over the place.

130
00:05:14,575 --> 00:05:16,617
including I worked with Mike at ArenaNet on Guild Wars 2,

131
00:05:18,238 --> 00:05:19,919
as well as EverQuest Next.

132
00:05:21,160 --> 00:05:22,301
What else have I done?

133
00:05:22,321 --> 00:05:24,543
The Pixel Mage Hero Song here recently.

134
00:05:25,064 --> 00:05:26,665
So I've done a number of different things.

135
00:05:26,745 --> 00:05:29,027
But that is not important right now.

136
00:05:29,107 --> 00:05:31,029
What's important is what we're covering here.

137
00:05:33,731 --> 00:05:35,532
Briefly, to give an overview,

138
00:05:35,813 --> 00:05:37,434
there are a number of common problems

139
00:05:37,614 --> 00:05:39,936
that we have with testing.

140
00:05:39,956 --> 00:05:41,397
We're going to be talking about some of those.

141
00:05:41,847 --> 00:05:46,091
as well as then best practices of how to approach

142
00:05:46,912 --> 00:05:51,175
doing our programming, doing our testing, et cetera.

143
00:05:51,195 --> 00:05:52,697
And then also tool development.

144
00:05:52,817 --> 00:05:54,038
You know, what are some best practices

145
00:05:54,078 --> 00:05:58,522
for having tools available to make all of this easier?

146
00:05:59,342 --> 00:06:02,045
So we're going to touch on some common problem things first,

147
00:06:02,165 --> 00:06:03,866
just to kind of set the stage of what it is

148
00:06:03,906 --> 00:06:05,328
that we're trying to address.

149
00:06:05,808 --> 00:06:06,929
And I'm going to let each of the panelists

150
00:06:06,949 --> 00:06:09,651
kind of, you know, chat about what they

151
00:06:10,507 --> 00:06:14,209
view and believe as being the important things on each of these.

152
00:06:14,629 --> 00:06:18,231
And so the first one is that just identifying problems to start with.

153
00:06:18,251 --> 00:06:20,753
You know, is this broken or not?

154
00:06:21,373 --> 00:06:25,575
And so what is a way of kind of encapsulating, you know,

155
00:06:25,595 --> 00:06:30,578
a mindset of how you have, you know, just even realize this?

156
00:06:30,638 --> 00:06:33,960
What how big of a problem is just this one thing?

157
00:06:36,338 --> 00:06:39,439
Well, I think a lot of it depends on the actual goal

158
00:06:39,459 --> 00:06:41,119
that you're trying to hit with your AI,

159
00:06:41,179 --> 00:06:44,140
because in some cases, you do have a specific thing

160
00:06:44,160 --> 00:06:46,460
that you want to have happen and play out in a certain order,

161
00:06:46,880 --> 00:06:48,721
but in a lot of cases, it really doesn't matter.

162
00:06:48,781 --> 00:06:51,261
Like, you can totally have an agent do his own thing

163
00:06:51,301 --> 00:06:53,562
and come up with its own interesting plan for how to do it,

164
00:06:54,142 --> 00:06:55,702
and then you get this emergent result

165
00:06:55,782 --> 00:06:57,223
that the player thinks is pretty kick-ass,

166
00:06:57,263 --> 00:06:58,483
and you know, you're done.

167
00:06:58,823 --> 00:07:00,503
That's how AI is successful.

168
00:07:01,810 --> 00:07:06,474
when you have those cases that are absolutely black and white, you have to know in advance that

169
00:07:07,414 --> 00:07:11,237
we know we really needed that guy to go through the door right then because otherwise the whole

170
00:07:11,377 --> 00:07:18,321
plot of the game doesn't unfold or whatever. So sometimes the issue is easy and sometimes it's a

171
00:07:18,361 --> 00:07:23,605
little bit more nebulous and hand wavy. So okay. What are some other issues surrounding the whole

172
00:07:23,625 --> 00:07:25,166
idea of identifying problems?

173
00:07:27,914 --> 00:07:29,095
determine whether it's...

174
00:07:29,195 --> 00:07:30,775
I suppose it's what he said, like,

175
00:07:30,875 --> 00:07:32,696
it depends on the problem that you're trying to solve,

176
00:07:32,796 --> 00:07:35,737
but many times you don't really know

177
00:07:35,797 --> 00:07:36,898
if something's broken or not,

178
00:07:37,078 --> 00:07:39,099
and you know, it's very hard,

179
00:07:39,199 --> 00:07:41,340
it's easy for you if you're working on the thing,

180
00:07:41,380 --> 00:07:43,001
but it's very hard for other people to know,

181
00:07:43,081 --> 00:07:45,762
like QA, to know if the thing is broken or not.

182
00:07:46,282 --> 00:07:49,323
So just trying to come up with some rules

183
00:07:49,383 --> 00:07:51,764
or some way to tell people what means,

184
00:07:52,165 --> 00:07:53,625
what broken means for your game,

185
00:07:53,745 --> 00:07:56,847
or what, that's something that is important.

186
00:07:59,690 --> 00:08:07,013
As he was saying, in games like Mafia 3, where narrative is very important, things have to

187
00:08:07,033 --> 00:08:11,896
happen in a very specific way sometimes, but then you have other games like, I don't know,

188
00:08:11,936 --> 00:08:16,838
like maybe GTA or something like that, where anything can happen and as long as it looks

189
00:08:17,118 --> 00:08:24,081
okay or it looks plausible and not too crazy and people understand what's going on, I think

190
00:08:24,121 --> 00:08:24,541
it's fine.

191
00:08:25,852 --> 00:08:28,414
I think one of the things that was mentioned earlier today

192
00:08:28,855 --> 00:08:30,576
might actually apply to this too is,

193
00:08:30,596 --> 00:08:32,257
I can't remember who it was, it might have been Brian,

194
00:08:33,719 --> 00:08:38,742
who talked about how because AI is so central,

195
00:08:39,543 --> 00:08:43,827
sometimes something is broken, but is it the AI?

196
00:08:44,587 --> 00:08:48,951
Or is it an animation bug, or a scripting error,

197
00:08:49,031 --> 00:08:52,273
or a data error, or something in the environment,

198
00:08:52,353 --> 00:08:54,815
or whatever, I mean, so even just determining.

199
00:08:55,940 --> 00:08:59,623
Is it AI that is broken is sometimes part of our job too,

200
00:08:59,723 --> 00:09:02,686
rather than is it some other system related.

201
00:09:03,306 --> 00:09:04,467
Anything else on this or should we?

202
00:09:05,748 --> 00:09:07,850
I mean just establishing expectations

203
00:09:07,950 --> 00:09:12,374
and having common language to discuss this.

204
00:09:12,594 --> 00:09:15,236
So yeah, we'll touch on a lot of these things as we go here.

205
00:09:15,256 --> 00:09:16,237
Mike, did you have anything?

206
00:09:16,257 --> 00:09:17,938
I think we've covered it.

207
00:09:17,958 --> 00:09:19,900
Well, the next thing then on our common problems

208
00:09:19,920 --> 00:09:21,281
that we kind of came up with as a group

209
00:09:21,321 --> 00:09:22,582
is identifying the causes.

210
00:09:23,092 --> 00:09:25,333
Of course, and I just touched on this briefly myself,

211
00:09:25,594 --> 00:09:27,114
why is this broken?

212
00:09:29,015 --> 00:09:32,617
How would you rate this as a challenge to address?

213
00:09:34,978 --> 00:09:37,319
Yeah, it can be broken because, as you said,

214
00:09:37,500 --> 00:09:39,721
like it can be broken because the code is broken,

215
00:09:39,741 --> 00:09:41,582
or it can be broken because something else

216
00:09:41,682 --> 00:09:42,902
in the setup is broken.

217
00:09:43,363 --> 00:09:46,284
Those things are harder to find, I suppose, sometimes.

218
00:09:46,820 --> 00:09:49,321
You can have problems with things that are scripted,

219
00:09:49,441 --> 00:09:51,623
and you don't know if it's the AI running

220
00:09:51,683 --> 00:09:53,324
or if it's something that is scripted.

221
00:09:53,344 --> 00:09:58,808
So you always have all these types of problems, I guess.

222
00:09:58,868 --> 00:10:01,970
Which lends to a lot of finger pointing, doesn't it?

223
00:10:02,490 --> 00:10:03,531
So anybody else?

224
00:10:03,551 --> 00:10:08,874
Like Sergio said, it's trying to determine whether or not

225
00:10:08,914 --> 00:10:10,315
it's broken because the AI is broken,

226
00:10:10,355 --> 00:10:12,917
or because some other system is influencing the AI

227
00:10:12,957 --> 00:10:13,898
and causing it to behave.

228
00:10:14,604 --> 00:10:20,765
wrong is difficult, especially when your AI is swapping back and forth between doing the

229
00:10:20,845 --> 00:10:22,866
AI-based behavior or doing something scripted.

230
00:10:23,046 --> 00:10:26,546
It's like you're trying to determine whether or not it's the script broken or is it the

231
00:10:26,606 --> 00:10:27,687
AI behavior that's broken.

232
00:10:27,887 --> 00:10:30,607
Or even just some of the stimuli in the world.

233
00:10:30,787 --> 00:10:35,048
The AI believes that it is perfectly doing the thing it's supposed to do based on the

234
00:10:35,088 --> 00:10:41,149
inputs, but we just kind of sit there and go, whoa, all of the inputs are always correct,

235
00:10:41,209 --> 00:10:41,429
right?

236
00:10:41,509 --> 00:10:43,010
So it couldn't possibly be that.

237
00:10:43,570 --> 00:10:43,790
Okay.

238
00:10:45,053 --> 00:10:48,416
The third common problem is the scope of the testing.

239
00:10:49,416 --> 00:10:52,038
As games get bigger, this is kind of a thing.

240
00:10:52,358 --> 00:10:55,601
What are some of the scope issues that you've run into,

241
00:10:55,701 --> 00:10:57,082
just from a problem standpoint?

242
00:10:58,162 --> 00:11:01,224
Let's see, we had on the order of several hundred

243
00:11:01,404 --> 00:11:05,948
unique combinations of archetypes for characters.

244
00:11:06,488 --> 00:11:08,509
So everything from your forest wildlife to...

245
00:11:11,455 --> 00:11:14,456
pirates to ninjas, whatever else might be roaming

246
00:11:14,476 --> 00:11:18,058
around the game world, and then each one doing

247
00:11:18,178 --> 00:11:20,939
on the order of dozens of decisions that they could choose

248
00:11:21,399 --> 00:11:23,320
with on the order of dozens of things

249
00:11:23,340 --> 00:11:25,281
that they're thinking about for each potential decision.

250
00:11:26,221 --> 00:11:29,103
The number of things that you have to test is ludicrous.

251
00:11:29,843 --> 00:11:32,044
To put this into context, this is in Guild Wars 2.

252
00:11:32,104 --> 00:11:33,064
This is in Guild Wars 2, yeah.

253
00:11:33,104 --> 00:11:35,245
So you're in an MMO with hundreds

254
00:11:35,265 --> 00:11:37,006
of different types of characters.

255
00:11:37,106 --> 00:11:37,306
Right.

256
00:11:37,867 --> 00:11:40,508
At which span, it isn't like, well, I have

257
00:11:41,507 --> 00:11:43,968
lots of characters, but they're all human,

258
00:11:44,368 --> 00:11:45,088
or something like that.

259
00:11:45,108 --> 00:11:47,108
So we just have a variation in all of the different

260
00:11:47,488 --> 00:11:51,369
base behavior, brain behavior, how they act.

261
00:11:51,589 --> 00:11:52,889
So that type of scope.

262
00:11:52,909 --> 00:11:54,290
What's another scope issue?

263
00:11:54,570 --> 00:11:58,631
I mean, there are massive pitfalls in over and under testing

264
00:11:59,351 --> 00:12:02,191
both manually and automated testing.

265
00:12:03,752 --> 00:12:06,632
Like, again, having a good analysis of

266
00:12:07,172 --> 00:12:08,813
what are the key areas and what's...

267
00:12:10,290 --> 00:12:11,330
what's at stake.

268
00:12:13,931 --> 00:12:16,432
I mean, that's most important for manual testing,

269
00:12:16,452 --> 00:12:17,392
for having that agreement.

270
00:12:18,452 --> 00:12:22,253
And for automated testing, making it a useful task

271
00:12:22,513 --> 00:12:26,114
while still having sufficient coverage,

272
00:12:26,815 --> 00:12:30,896
so you don't go overboard in automated testing.

273
00:12:30,916 --> 00:12:34,077
So prioritization combined with, at some point, enough is enough.

274
00:12:34,117 --> 00:12:34,977
Yeah, yeah.

275
00:12:35,017 --> 00:12:36,978
Otherwise, it becomes this massive big task,

276
00:12:37,058 --> 00:12:39,198
and people start.

277
00:12:40,877 --> 00:12:44,439
ignoring it a bit or you know it becomes a hassle right.

278
00:12:44,459 --> 00:12:47,320
Well yes it is a psychological factor internally in the team

279
00:12:47,420 --> 00:12:50,202
of you know OK I got to test absolutely everything

280
00:12:50,262 --> 00:12:51,722
and does this really matter.

281
00:12:51,742 --> 00:12:51,883
Yeah OK.

282
00:12:51,923 --> 00:12:56,465
Yeah I mean personally I think that you never really finish

283
00:12:56,505 --> 00:12:58,726
testing stuff like even when the game is released

284
00:12:58,846 --> 00:13:00,667
after release you keep playing the game

285
00:13:00,727 --> 00:13:02,308
and you can see all these problems

286
00:13:02,408 --> 00:13:05,770
and hopefully in a patch you can fix them or something

287
00:13:05,810 --> 00:13:07,471
but normally you don't have that.

288
00:13:08,120 --> 00:13:12,602
Ability to keep releasing like fixes for your fans. So I don't know it's right, you know

289
00:13:13,222 --> 00:13:16,664
I I coined a phrase by accident during a GDC week when a

290
00:13:17,204 --> 00:13:23,707
discussion with with a colleague where I said something to the effect of asymptotically approaching infinity and

291
00:13:23,747 --> 00:13:25,247
He paused and he looked at me. He goes

292
00:13:26,068 --> 00:13:30,530
Did you really mean to say that but it that's actually in this case? It's one of those things is yes

293
00:13:30,570 --> 00:13:31,930
We're getting ever closer

294
00:13:32,957 --> 00:13:35,139
to something that's constantly moving away from us.

295
00:13:35,819 --> 00:13:36,900
So you can't win.

296
00:13:36,940 --> 00:13:38,561
At some point you have to just say we're done.

297
00:13:39,181 --> 00:13:41,282
Well let's get on to the solutions then.

298
00:13:42,763 --> 00:13:47,286
As far as the best practices for just testing to begin with,

299
00:13:47,706 --> 00:13:50,388
of approaching, like we talked about the common problem

300
00:13:50,408 --> 00:13:53,410
of is something broken, what would you say

301
00:13:53,470 --> 00:13:55,931
that your general approach is to testing AI?

302
00:13:56,231 --> 00:13:58,793
Either you or if you were QA or as a designer.

303
00:13:58,833 --> 00:14:01,675
So just a general broad approach of how do you,

304
00:14:02,857 --> 00:14:03,657
come at the problem.

305
00:14:03,897 --> 00:14:06,039
So to me, the most important thing

306
00:14:06,079 --> 00:14:07,640
when you have to do when you test AI

307
00:14:07,740 --> 00:14:11,003
is that you are not trying to test that the thing that you

308
00:14:11,023 --> 00:14:15,146
worked on works, but you're trying to see if it can break.

309
00:14:15,867 --> 00:14:19,349
So you are all the time trying to break your stuff, basically.

310
00:14:20,250 --> 00:14:23,673
Because you basically just want to avoid

311
00:14:23,733 --> 00:14:26,955
having problems that people are going to put on YouTube,

312
00:14:27,095 --> 00:14:31,759
and your work for years is going to be in this one video that

313
00:14:31,859 --> 00:14:32,280
is like.

314
00:14:33,194 --> 00:14:35,315
Showing bad stuff about your AI.

315
00:14:35,335 --> 00:14:37,496
So, you know, trying to avoid those things is always good.

316
00:14:37,736 --> 00:14:40,438
Nobody ever YouTubes the really cool shit that, you know,

317
00:14:40,478 --> 00:14:42,619
hey, the AI is doing exactly what it's supposed to.

318
00:14:42,659 --> 00:14:43,700
I'm going to put that on YouTube.

319
00:14:44,461 --> 00:14:45,281
That's not fun.

320
00:14:45,941 --> 00:14:49,624
Normally, people say that when the AI in a game is good

321
00:14:49,664 --> 00:14:51,745
is because it's when people don't talk,

322
00:14:51,785 --> 00:14:52,546
doesn't talk about it.

323
00:14:52,866 --> 00:14:53,046
Right.

324
00:14:53,426 --> 00:14:53,906
Yeah.

325
00:14:53,946 --> 00:14:55,147
We don't notice it because it looks natural.

326
00:14:55,768 --> 00:14:57,609
So what are the general approach to it?

327
00:14:58,930 --> 00:14:59,190
I like.

328
00:14:59,590 --> 00:15:02,293
testing iteratively, as you finish a feature,

329
00:15:02,493 --> 00:15:05,255
test the feature, start another feature, test that feature,

330
00:15:06,156 --> 00:15:09,058
to lower the scope of what possibly went wrong.

331
00:15:09,078 --> 00:15:13,462
Oh, OK, so I've done this, and if I test it now,

332
00:15:14,463 --> 00:15:15,884
if something radically changed, it's

333
00:15:15,964 --> 00:15:17,285
probably what I just did.

334
00:15:17,325 --> 00:15:19,627
Rather than, here, I just added 18 different things.

335
00:15:19,688 --> 00:15:20,708
I think it's time to test.

336
00:15:20,889 --> 00:15:22,770
Oh, shit.

337
00:15:23,271 --> 00:15:25,833
I have no idea where this broke because I've been working

338
00:15:25,873 --> 00:15:26,754
for three weeks on this.

339
00:15:27,802 --> 00:15:30,483
But I was also breaking in before that I have done this,

340
00:15:31,063 --> 00:15:33,184
and it's not done before.

341
00:15:33,224 --> 00:15:34,804
You've already started testing a lot,

342
00:15:34,844 --> 00:15:38,445
like integrating testing as part of the development process,

343
00:15:39,846 --> 00:15:45,627
like using it as an extra intelligence-like tool

344
00:15:45,747 --> 00:15:48,928
or an important part of your productivity setup.

345
00:15:51,147 --> 00:15:53,729
You leverage the tools you have for testing

346
00:15:53,949 --> 00:15:58,252
while you're developing it before you mark it done.

347
00:15:58,793 --> 00:16:00,514
So yeah.

348
00:16:00,955 --> 00:16:03,637
There's probably a case to be made for it's not done

349
00:16:03,737 --> 00:16:04,858
until you've tested it.

350
00:16:05,618 --> 00:16:08,781
Or at least you don't know if it is done,

351
00:16:08,801 --> 00:16:09,862
is a different way of looking at it.

352
00:16:10,102 --> 00:16:12,764
Or Mike, did you have something?

353
00:16:12,784 --> 00:16:13,745
Just to riff on that a little bit,

354
00:16:13,785 --> 00:16:17,788
I think the real solid approach is

355
00:16:17,848 --> 00:16:20,751
to start by assuming that everything you build can break.

356
00:16:21,672 --> 00:16:24,234
and try to find the way to do that as early as possible

357
00:16:24,695 --> 00:16:27,116
and continue doing that until as late as possible.

358
00:16:27,296 --> 00:16:29,438
If that's after ship and you still can ship patches,

359
00:16:29,518 --> 00:16:30,839
you should still be testing your stuff

360
00:16:30,939 --> 00:16:32,040
even if you think it's bulletproof.

361
00:16:32,740 --> 00:16:33,401
Okay.

362
00:16:33,421 --> 00:16:34,221
That's a good approach.

363
00:16:34,261 --> 00:16:35,442
Now, as far as the,

364
00:16:36,443 --> 00:16:41,427
okay, I've written my code and I'm running the game.

365
00:16:43,028 --> 00:16:45,229
What is in your head at that moment?

366
00:16:45,750 --> 00:16:47,551
So you've decided to iteratively test,

367
00:16:48,372 --> 00:16:50,413
stuff like that, using some of your tools early on

368
00:16:50,453 --> 00:16:50,753
and everything.

369
00:16:51,349 --> 00:16:52,209
What's in your head?

370
00:16:52,350 --> 00:16:53,290
Okay, go.

371
00:16:54,210 --> 00:16:55,371
What are you looking for?

372
00:16:57,132 --> 00:16:59,953
I mean, that sounds kind of lame, doesn't it?

373
00:16:59,973 --> 00:17:01,273
Well, I'm looking for shit that's wrong.

374
00:17:01,894 --> 00:17:03,214
Yeah, that's the easy answer.

375
00:17:03,294 --> 00:17:05,415
But you know, well, you touched a little bit on,

376
00:17:06,195 --> 00:17:08,696
you know, I think the first step would be,

377
00:17:09,117 --> 00:17:11,197
is it doing what it's supposed to?

378
00:17:11,217 --> 00:17:11,277
Yes.

379
00:17:11,698 --> 00:17:12,598
Oh, thank God, yes.

380
00:17:12,818 --> 00:17:14,599
Yeah, but normally you tend to work

381
00:17:14,619 --> 00:17:16,200
in small iterations, I guess.

382
00:17:16,340 --> 00:17:17,940
So when you work on something new, it's like.

383
00:17:18,440 --> 00:17:23,943
this tiny thing so testing that tiny thing takes just like you know a few minutes or something

384
00:17:24,283 --> 00:17:30,427
but then like testing like all the possible side effects of that tiny thing or how that

385
00:17:30,587 --> 00:17:36,070
new thing interacts with other things and what else is broken based on that and how

386
00:17:36,751 --> 00:17:42,274
how can you find like edge cases to to break your new things like it's well that's the challenge in

387
00:17:42,294 --> 00:17:45,416
and of itself is what are the edge cases because a lot of times they're not obvious

388
00:17:45,650 --> 00:17:48,391
Yeah, and it all depends on what thing you're working on, I guess.

389
00:17:49,111 --> 00:17:53,873
But I guess that's something that you learn from experience, like, based on, you know,

390
00:17:54,313 --> 00:17:58,675
once you've been working on something for so long, you know what to look for, I guess.

391
00:18:00,015 --> 00:18:07,218
So always talking with other people that have experience or, you know, trying to learn that

392
00:18:07,238 --> 00:18:12,820
thing from other people. Like, I used to have a lead, Martin Walsh, at Toronto that was super

393
00:18:12,860 --> 00:18:13,821
good at breaking things.

394
00:18:14,377 --> 00:18:16,338
And it's like I learned all that from him.

395
00:18:16,898 --> 00:18:19,800
So every time I tried to test something,

396
00:18:19,860 --> 00:18:23,121
I just remember handing my stuff over,

397
00:18:23,161 --> 00:18:24,902
like handing the controller over to him

398
00:18:24,982 --> 00:18:26,923
and seeing him break my stuff.

399
00:18:27,263 --> 00:18:30,805
So it's just keep learning from other people all the time.

400
00:18:31,045 --> 00:18:31,245
Cool.

401
00:18:32,346 --> 00:18:35,747
Yeah, I mean, as I've been iteratively developing

402
00:18:35,887 --> 00:18:40,409
or testing during the production of whatever bit

403
00:18:40,449 --> 00:18:41,070
of functionality.

404
00:18:41,554 --> 00:18:44,396
That's kind of been happening in some sort of lab clean room

405
00:18:44,416 --> 00:18:45,156
kind of scenario.

406
00:18:46,257 --> 00:18:51,221
So before adding the done label, trying to kind of force myself

407
00:18:51,281 --> 00:18:56,485
to put it into as weird, unexpected scenarios

408
00:18:56,605 --> 00:18:59,967
as possible to kind of challenge the environment it lives in,

409
00:19:01,468 --> 00:19:05,631
to try and wrestle out some unexpected behavior,

410
00:19:05,651 --> 00:19:09,434
some complicated environmental interactions, stuff like that.

411
00:19:10,955 --> 00:19:10,995
OK.

412
00:19:11,288 --> 00:19:11,929
Do you have anything else?

413
00:19:12,029 --> 00:19:12,269
Sure.

414
00:19:12,409 --> 00:19:15,831
Usually when I go through, I'm trying to think of, OK, well,

415
00:19:15,871 --> 00:19:18,333
if the AI does this, how is it going to change the game state?

416
00:19:18,613 --> 00:19:20,454
And then how is the AI going to react to that?

417
00:19:20,514 --> 00:19:22,995
Because you could put it in a new feature that

418
00:19:23,395 --> 00:19:25,116
breaks something else somewhere else

419
00:19:25,216 --> 00:19:26,877
because it's changing game state now

420
00:19:26,937 --> 00:19:28,598
that you weren't prepared for.

421
00:19:29,279 --> 00:19:32,060
So at that point, that's, again, where the iterative thing

422
00:19:32,080 --> 00:19:35,763
comes in, it seems, is that, yes, I added the one feature

423
00:19:35,843 --> 00:19:37,143
because we're doing this iteratively.

424
00:19:37,303 --> 00:19:39,085
And I can test that one feature.

425
00:19:40,165 --> 00:19:40,365
But.

426
00:19:40,854 --> 00:19:43,635
we're also not just trying to break that one feature,

427
00:19:43,715 --> 00:19:46,676
we're saying all the other stuff that I thought

428
00:19:46,736 --> 00:19:51,197
was perfectly bulletproof, is it now being broken

429
00:19:51,577 --> 00:19:53,477
just because of this one thing where you have that give

430
00:19:53,517 --> 00:19:54,898
and take back and forth between them.

431
00:19:55,278 --> 00:19:58,459
So yeah, that's just, so as we keep adding features,

432
00:19:58,539 --> 00:20:01,219
it seems like it's a combinatorial explosion

433
00:20:01,279 --> 00:20:02,800
of shit that could go wrong.

434
00:20:05,240 --> 00:20:06,301
Which is where we get back to, oh,

435
00:20:06,321 --> 00:20:09,221
and there's hundreds of different agents to test.

436
00:20:10,589 --> 00:20:18,093
How does this whole mentality change with doing your own testing rather than other people

437
00:20:18,333 --> 00:20:20,875
testing your stuff or you testing other people's stuff?

438
00:20:22,896 --> 00:20:31,081
Is there a different approach that you would have to have, a mentality, when you bring

439
00:20:31,141 --> 00:20:33,122
in other people into this process?

440
00:20:34,923 --> 00:20:36,965
I think the approach fundamentally stays the same.

441
00:20:38,727 --> 00:20:43,888
the benefit of bringing other people into the testing situation is that they're going

442
00:20:43,908 --> 00:20:45,469
to have different blind spots than you do.

443
00:20:46,029 --> 00:20:48,730
Like they will think of different things that they could try.

444
00:20:48,750 --> 00:20:52,770
They will think of different combinations of things to put together and see what happens.

445
00:20:53,251 --> 00:20:56,711
They will have a perspective that you don't by nature of being a different person.

446
00:20:57,292 --> 00:21:01,532
And that gives them a lot of power to find the weaknesses in the design that you're so

447
00:21:01,633 --> 00:21:03,213
used to looking at that you can't see.

448
00:21:03,713 --> 00:21:05,553
Like oh hey there's this obvious shortcoming right here.

449
00:21:07,257 --> 00:21:10,820
I think as AI designers and AI programmers,

450
00:21:11,300 --> 00:21:12,921
we tend to baby our AIs a little bit.

451
00:21:14,262 --> 00:21:17,445
We don't want to see them breaking or broken or dying.

452
00:21:18,886 --> 00:21:22,108
So bringing other people in that don't do that

453
00:21:22,288 --> 00:21:25,730
and really put the hammer to the AI is very useful.

454
00:21:28,218 --> 00:21:37,401
Is there, because those are advantages to bringing in other people, what are disadvantages to having someone else testing something that you've completed, for example?

455
00:21:39,002 --> 00:21:51,946
I think the biggest problem I've had is the QA team not knowing what's done, what's not. So they find a broken behavior and the answer is, well, I haven't programmed that yet. So yeah, of course it's going to break and it's not going to do what it's supposed to do.

456
00:21:51,966 --> 00:21:54,346
Have you ever run into the situation where you...

457
00:21:57,549 --> 00:22:04,411
just almost subconsciously know, well, this is supposed to exhibit this way, that way,

458
00:22:04,431 --> 00:22:12,974
this way. And so you kind of, it feels right to you, but to somebody else, they don't even know

459
00:22:13,034 --> 00:22:19,877
what they're looking for on a more subtle level. How do we solve that?

460
00:22:19,897 --> 00:22:26,779
Well, I think it was brought up earlier, like having this shared language of, what are we

461
00:22:26,899 --> 00:22:27,259
actually

462
00:22:27,637 --> 00:22:32,600
discussing here because I could look at something and see an AI bug that someone else wouldn't

463
00:22:32,660 --> 00:22:37,342
notice and vice versa because we have different opinions of what we're looking at and what

464
00:22:37,382 --> 00:22:39,703
we're actually expecting to see in those situations.

465
00:22:40,283 --> 00:22:45,345
So knowing just that you're on the same page as far as, hey, yeah, this thing is supposed

466
00:22:45,365 --> 00:22:52,909
to act like a predator or act like a pirate, those baseline expectations are super useful

467
00:22:52,949 --> 00:22:53,549
for knowing that.

468
00:22:54,118 --> 00:22:57,600
When you do start picking apart the details of what's going on on screen,

469
00:22:58,200 --> 00:23:01,101
you're talking about the same set of issues and not something completely

470
00:23:01,401 --> 00:23:05,842
divergent like, you know, the animation was broken and, well, I know the animation's broken.

471
00:23:05,862 --> 00:23:10,844
It kind of comes from just what is our game? What are these characters?

472
00:23:11,844 --> 00:23:16,426
And we can have all sorts of great discussions about, well, who's responsible for that vision?

473
00:23:17,606 --> 00:23:21,468
But it's almost a chicken-egg thing is that if it's not communicated

474
00:23:22,088 --> 00:23:23,868
to you from...

475
00:23:24,457 --> 00:23:26,659
whoever, a designer, a creative director, whatever,

476
00:23:26,779 --> 00:23:29,361
of this is the way a character is supposed to be,

477
00:23:29,401 --> 00:23:32,224
then you're possibly going to be programming it wrong anyway.

478
00:23:32,244 --> 00:23:33,565
Or if it's a data-driven system,

479
00:23:34,025 --> 00:23:35,566
then designers might be putting it, you know.

480
00:23:35,586 --> 00:23:36,948
So now you've run into this whole,

481
00:23:37,588 --> 00:23:39,830
well, no, it's wrong, but I can't tell you why.

482
00:23:39,910 --> 00:23:41,151
I can't explain it.

483
00:23:41,652 --> 00:23:43,373
Well, this is what you told me to do.

484
00:23:44,574 --> 00:23:46,897
And so, I mean, we've all been there where there's this,

485
00:23:47,177 --> 00:23:49,939
okay, we need to back it up, nevermind the game character.

486
00:23:50,380 --> 00:23:50,640
What is?

487
00:23:52,073 --> 00:23:56,295
this supposed to be? What are we trying to emulate and everything? So that's that common

488
00:23:56,355 --> 00:24:00,977
language that I think you've mentioned. There's also an interesting balance between

489
00:24:01,778 --> 00:24:07,420
making sure that like managing expectations but also trying to not go too far. So you add,

490
00:24:07,440 --> 00:24:12,702
because you risk basically exporting your own blinders and blind spots to the other people and

491
00:24:13,183 --> 00:24:18,325
you've like basically share people missing the same kind of things and

492
00:24:19,465 --> 00:24:21,046
striking that balance is interesting.

493
00:24:22,735 --> 00:24:28,361
interesting very political. I think it's also important to have a

494
00:24:29,241 --> 00:24:34,326
multidisciplinary team where QA is embedded into your team and they are not

495
00:24:34,366 --> 00:24:39,651
just someone that it's not just a person that goes and tests your stuff it's a

496
00:24:39,711 --> 00:24:45,096
person that is helping you build that thing so that way it's not that you have

497
00:24:45,136 --> 00:24:45,756
to just

498
00:24:46,579 --> 00:24:50,420
write a document saying like this is what's expected from the AI, it's something that you

499
00:24:50,800 --> 00:24:55,642
can talk with them about it every day and if you implement something new you can go and speak with

500
00:24:55,682 --> 00:25:01,204
this person and say like you know I've changed this thing so you can go and have a look at

501
00:25:01,684 --> 00:25:06,125
these potential things that I think can happen but I'm not sure I'm sure that you'll find more

502
00:25:06,165 --> 00:25:13,808
than I do and we can continue talking about it so it's I think as Roxanne said this this morning

503
00:25:13,928 --> 00:25:14,428
like the

504
00:25:15,772 --> 00:25:21,037
sort of team structure they had in Watch Dogs for the civilian AI.

505
00:25:21,597 --> 00:25:25,080
It's the sort of team structure that everyone should have for AI,

506
00:25:25,100 --> 00:25:29,144
like having designers and QA and programmers and everyone,

507
00:25:29,164 --> 00:25:31,766
like animators, everyone, part of the same thing.

508
00:25:31,826 --> 00:25:34,588
We are all in this together, building something together.

509
00:25:35,489 --> 00:25:38,692
I think just having the embedded QA in different teams,

510
00:25:39,533 --> 00:25:41,334
depending on what the different disciplines are at the game.

511
00:25:41,926 --> 00:25:47,576
if it cuts down the number of steps where you know just somebody can say you know hey Sergio

512
00:25:48,778 --> 00:25:52,846
is this supposed to be happening and they're right there rather than you know having

513
00:25:54,627 --> 00:25:58,550
Am I even terrified of walking into the QA area or vice versa, them coming over?

514
00:25:58,670 --> 00:26:04,874
It's so much easier when you sit right next to each other because you can just go and talk

515
00:26:04,914 --> 00:26:08,056
rather than having to go to the other side of the office or something.

516
00:26:08,416 --> 00:26:11,818
And it almost inherently reduces their responsibility.

517
00:26:11,939 --> 00:26:13,480
They're not testing everything in the game.

518
00:26:13,500 --> 00:26:21,024
They're working with, Roxanne said, here's the civilian team versus this type of team.

519
00:26:21,784 --> 00:26:24,046
or people who are building new characters for the game

520
00:26:24,086 --> 00:26:26,608
compared to level designers that have their own QA.

521
00:26:26,648 --> 00:26:30,171
Yeah, you basically need experts for what you're building.

522
00:26:30,191 --> 00:26:30,971
Yeah, so that's good.

523
00:26:31,011 --> 00:26:32,673
Anybody else had experiences with that?

524
00:26:33,713 --> 00:26:35,515
On the QA thing, I mean, you know,

525
00:26:35,535 --> 00:26:37,817
having somebody embedded into the team

526
00:26:37,857 --> 00:26:38,857
that you can discuss things with

527
00:26:39,117 --> 00:26:40,979
and letting them know beforehand,

528
00:26:41,119 --> 00:26:42,340
like, hey, this is what I added,

529
00:26:42,380 --> 00:26:43,601
this is what we're expecting,

530
00:26:43,701 --> 00:26:45,502
like, this is the behavior that should happen,

531
00:26:45,522 --> 00:26:47,864
and if this is not happening, then, you know, let me know.

532
00:26:47,884 --> 00:26:50,907
You know, setting expectations for the QA team is huge.

533
00:26:51,472 --> 00:26:53,073
rather than, hey, there's a new build,

534
00:26:53,193 --> 00:26:54,233
see if anything's screwed up.

535
00:26:54,474 --> 00:26:54,914
Right.

536
00:26:55,254 --> 00:26:55,474
Great.

537
00:26:55,514 --> 00:26:56,315
We did AI stuff.

538
00:26:58,556 --> 00:27:04,160
So at the risk of starting, well,

539
00:27:04,200 --> 00:27:07,922
there's two potential religious wars in this panel here.

540
00:27:09,123 --> 00:27:10,884
How do you go about approaching, we

541
00:27:10,924 --> 00:27:14,226
touched on this a little bit, scripted AI versus emergent AI.

542
00:27:15,547 --> 00:27:17,028
What are the different challenges

543
00:27:17,108 --> 00:27:20,810
and how would you approach it differently?

544
00:27:22,602 --> 00:27:24,204
in those situations.

545
00:27:25,085 --> 00:27:26,226
We mentioned a little bit of this earlier

546
00:27:26,266 --> 00:27:27,167
in our problem section.

547
00:27:27,187 --> 00:27:30,891
How would you approach those two different sort of things?

548
00:27:33,053 --> 00:27:37,658
I think the main goal is to have something that is, you know,

549
00:27:38,459 --> 00:27:42,143
plausible, something that looks like it could happen that way.

550
00:27:43,481 --> 00:27:47,985
So either for scripted AI or for emerging AI,

551
00:27:48,546 --> 00:27:50,067
in the end it's kind of like the same thing.

552
00:27:50,167 --> 00:27:53,030
Everything has to look like they are intelligent

553
00:27:53,090 --> 00:27:53,731
and that sort of thing.

554
00:27:54,472 --> 00:27:55,553
What they tend to do is, yes,

555
00:27:56,494 --> 00:27:59,316
it's a lot of smoke and mirrors all the time, right?

556
00:27:59,356 --> 00:28:00,878
So it has to be like, yeah,

557
00:28:01,098 --> 00:28:03,981
it looks like they know what's going on,

558
00:28:04,021 --> 00:28:05,102
they know what they're doing.

559
00:28:05,122 --> 00:28:07,224
So to me,

560
00:28:08,940 --> 00:28:11,082
You have to know how to break both things,

561
00:28:11,182 --> 00:28:13,785
and in the end you end up using the same tricks.

562
00:28:14,946 --> 00:28:17,208
The other thing, maybe, with scripted AI

563
00:28:17,268 --> 00:28:20,931
is that, as we were talking about before,

564
00:28:20,951 --> 00:28:23,894
that you don't know when things are scripted sometimes.

565
00:28:24,394 --> 00:28:27,497
It's like knowing if it's actually

566
00:28:27,517 --> 00:28:31,340
the code that is broken, or if it's some script that is not.

567
00:28:32,969 --> 00:28:36,332
it's not built properly or it's not showing behaviors

568
00:28:36,352 --> 00:28:38,514
that are coherent with the rest of the AI

569
00:28:38,574 --> 00:28:39,555
or that sort of thing.

570
00:28:41,216 --> 00:28:43,758
A little bit of a retrospect for,

571
00:28:44,219 --> 00:28:45,760
some of you may remember we had a panel here

572
00:28:45,780 --> 00:28:48,662
a few years ago where the concept of the green dot,

573
00:28:48,702 --> 00:28:51,245
which was famous in the Guild Circles

574
00:28:51,325 --> 00:28:52,786
and after that lecture,

575
00:28:52,826 --> 00:28:57,210
where they actually, during debug stuff,

576
00:28:57,230 --> 00:28:59,031
they would put a green dot over the head

577
00:28:59,531 --> 00:29:01,733
of characters that were under scripted control.

578
00:29:02,567 --> 00:29:05,829
And the first thing that that did was immediately route

579
00:29:05,969 --> 00:29:09,992
any complaints of, well, this is acting weird.

580
00:29:10,092 --> 00:29:10,572
It's not right.

581
00:29:10,612 --> 00:29:12,314
Well, did it have the green dot over it?

582
00:29:12,434 --> 00:29:13,754
If it is, it was scripted.

583
00:29:14,055 --> 00:29:15,736
Talk to that level designer who wrote

584
00:29:15,776 --> 00:29:17,957
that script for that particular situation.

585
00:29:18,077 --> 00:29:22,100
And so even just that helps to mitigate that, well,

586
00:29:22,160 --> 00:29:23,761
is it scripted or is it emergent?

587
00:29:25,422 --> 00:29:29,485
Just chopping that problem space in half of what system

588
00:29:29,525 --> 00:29:30,725
might be responsible for it is huge.

589
00:29:31,882 --> 00:29:33,943
I very much recommend going back on the vault

590
00:29:33,983 --> 00:29:34,583
and watching that.

591
00:29:35,284 --> 00:29:37,344
I don't even remember what the name of the panel was,

592
00:29:37,384 --> 00:29:39,525
but it was a few years back.

593
00:29:39,565 --> 00:29:41,886
Yeah, building on Sergio's stuff,

594
00:29:41,926 --> 00:29:44,908
I mean, the point where this splits

595
00:29:46,028 --> 00:29:50,270
between scripted and emergent is in the resolution step.

596
00:29:50,390 --> 00:29:53,911
Like, identifying the problem, it's the same approach.

597
00:29:53,931 --> 00:29:56,712
And then, OK, now there's a problem, we need to fix it.

598
00:29:56,953 --> 00:29:59,314
OK, now we can figure out it's scripted,

599
00:29:59,334 --> 00:30:00,474
so we diverge it over here.

600
00:30:00,877 --> 00:30:02,858
And of course, in automated testing.

601
00:30:03,959 --> 00:30:06,541
But other than that, the general approach should be the same.

602
00:30:07,262 --> 00:30:09,324
Mike, you've done a lot of work with systems

603
00:30:09,344 --> 00:30:12,206
where you had both scripted and emergent AI.

604
00:30:12,546 --> 00:30:17,130
And what was your, you know, was there a mentality shift

605
00:30:17,410 --> 00:30:19,452
of how to approach that with you?

606
00:30:19,472 --> 00:30:24,216
Well, I think the hard question is really, in the moment,

607
00:30:24,757 --> 00:30:25,958
is this thing scripted or not?

608
00:30:26,098 --> 00:30:28,540
And that's easy to solve with tricks like the green dot,

609
00:30:28,600 --> 00:30:29,881
which are super useful.

610
00:30:31,794 --> 00:30:34,674
The emergent end of the spectrum, I think,

611
00:30:34,934 --> 00:30:36,955
is actually where it gets tricky,

612
00:30:37,015 --> 00:30:38,955
because you have to ask your designer

613
00:30:39,135 --> 00:30:41,216
or whoever's owning the vision of your AI,

614
00:30:41,796 --> 00:30:44,536
like how attached are you to this exact playbook?

615
00:30:45,197 --> 00:30:48,137
Because if my AI doesn't do A and then B and then C,

616
00:30:49,017 --> 00:30:50,238
are we gonna have a problem,

617
00:30:50,398 --> 00:30:52,118
or is it cool that he decided to do

618
00:30:52,178 --> 00:30:53,458
some random arbitrary thing

619
00:30:53,518 --> 00:30:55,359
that just was flashy in the moment?

620
00:30:57,479 --> 00:30:59,599
Knowing, again, it comes back to the expectations thing,

621
00:30:59,880 --> 00:31:02,581
knowing what you're looking at and what counts as broken

622
00:31:03,121 --> 00:31:04,122
is really important.

623
00:31:04,502 --> 00:31:07,043
But then having that, again, comes back to the key

624
00:31:07,163 --> 00:31:09,124
of am I scripted right now?

625
00:31:09,584 --> 00:31:12,345
You have to know which direction to go down that fork

626
00:31:12,745 --> 00:31:15,327
of am I taking the solution that's going to be

627
00:31:15,387 --> 00:31:16,727
kind of hard-coded and scripted,

628
00:31:16,807 --> 00:31:18,928
or am I taking a solution that has to be more systemic

629
00:31:19,048 --> 00:31:20,629
in the actual AI implementation?

630
00:31:22,430 --> 00:31:24,411
Just dealing only with emergent AI,

631
00:31:25,231 --> 00:31:26,132
how do you tell if it's broken?

632
00:31:28,142 --> 00:31:31,643
I mean, that's a highly subjective question by nature, I think.

633
00:31:32,043 --> 00:31:35,565
The best thing you can do is say, does this look plausible?

634
00:31:35,665 --> 00:31:40,367
Does this look like something that is in character for the agent in question?

635
00:31:40,967 --> 00:31:45,849
And if it is, then, I mean, really, who are we to judge our agents for being themselves

636
00:31:45,930 --> 00:31:46,570
and being free?

637
00:31:50,191 --> 00:31:53,753
Well, that got kind of weird real quick.

638
00:31:53,793 --> 00:31:54,874
Power to the AI.

639
00:31:54,954 --> 00:31:55,874
You know, I don't...

640
00:31:56,937 --> 00:32:00,779
And Mike, you actually, you had some of the same, you know, situations when you're working

641
00:32:00,879 --> 00:32:05,983
with the planetary annihilation where you were like, well, I didn't tell it to do exactly

642
00:32:06,023 --> 00:32:09,805
that, but dammit, it looked cool and everyone was fine with it.

643
00:32:10,385 --> 00:32:11,266
Is it similar sort of?

644
00:32:12,680 --> 00:32:18,083
If the designers are happy with the behavior and the behavior looks reasonable and not broken,

645
00:32:18,163 --> 00:32:19,904
then it's not broken.

646
00:32:20,324 --> 00:32:23,066
As long as it's not doing something that's completely derp stupid.

647
00:32:23,166 --> 00:32:26,808
Right. If he's not running in circles or running into walls, I mean, it's fine.

648
00:32:27,028 --> 00:32:30,950
If he decided to do some random off-the-wall thing, but it looked awesome,

649
00:32:31,390 --> 00:32:33,572
and the designers are fine with it, then run with it.

650
00:32:34,272 --> 00:32:36,733
I think one way I've phrased it in the past is if the player says,

651
00:32:37,493 --> 00:32:39,074
Ooh, I did not expect that.

652
00:32:39,154 --> 00:32:40,574
I can see why he did that.

653
00:32:40,594 --> 00:32:43,035
It was a cool move, but man, I wasn't expecting it.

654
00:32:43,475 --> 00:32:44,515
That's a cool moment.

655
00:32:45,315 --> 00:32:45,835
So OK.

656
00:32:46,495 --> 00:32:48,876
But yeah, so that's where you get into the subjectivity

657
00:32:48,916 --> 00:32:50,336
of is it broken or not.

658
00:32:50,416 --> 00:32:52,036
And that's a difficult space.

659
00:32:52,156 --> 00:32:53,097
All right, moving on.

660
00:32:53,937 --> 00:32:57,418
Best practices of actually then writing code.

661
00:32:57,458 --> 00:33:01,458
What can we as programmers do to write code that's

662
00:33:01,987 --> 00:33:06,691
that's easier to test, easier to debug, et cetera, like that.

663
00:33:06,951 --> 00:33:09,454
What's, oh boy, Emil's like, I'm ready for this one.

664
00:33:10,214 --> 00:33:11,235
Separation of concerns.

665
00:33:12,216 --> 00:33:15,940
And do not allow any crossing of that boundary.

666
00:33:16,080 --> 00:33:17,481
What do you mean by separation of concerns?

667
00:33:17,501 --> 00:33:21,565
Like clearly separating out sensor systems,

668
00:33:22,486 --> 00:33:25,148
like data storage systems, blackboards, that sort of thing,

669
00:33:26,089 --> 00:33:26,810
from the various.

670
00:33:27,785 --> 00:33:32,026
Decision logic code and action code, that sort of thing,

671
00:33:32,467 --> 00:33:37,408
have that clearly separated in a modular form.

672
00:33:37,429 --> 00:33:41,810
So you can easily mock that and basically run

673
00:33:41,910 --> 00:33:43,911
unit tests on every level.

674
00:33:44,651 --> 00:33:48,133
So you're not just left with some massive integration test.

675
00:33:49,873 --> 00:33:50,353
And yeah.

676
00:33:51,234 --> 00:33:53,455
Helps you to be able to compartmentalize.

677
00:33:53,884 --> 00:33:56,285
Yeah, harsh down what could be wrong.

678
00:33:56,345 --> 00:33:57,887
And yeah, I mean, mocking stuff up,

679
00:33:59,127 --> 00:34:05,492
like quickly replacing the sensory inputs and saying,

680
00:34:05,552 --> 00:34:09,555
OK, so this scenario right here, given this world state,

681
00:34:09,675 --> 00:34:12,918
but with these tweaks, let's see what the AI does

682
00:34:13,518 --> 00:34:16,240
and make sure it adheres to its personality,

683
00:34:16,941 --> 00:34:17,722
stays in character.

684
00:34:18,602 --> 00:34:18,882
What else?

685
00:34:18,982 --> 00:34:19,143
I think.

686
00:34:21,758 --> 00:34:24,980
I think you should try to keep solutions as simple as possible.

687
00:34:25,861 --> 00:34:31,544
Have code that is readable and that people don't try to do like very fancy stuff.

688
00:34:31,744 --> 00:34:36,888
Because we are engineers and we look like fancy, you know, like super architected stuff.

689
00:34:37,648 --> 00:34:42,191
I don't think that's the right way to go for AI, for character AI at least.

690
00:34:42,972 --> 00:34:47,975
It's probably better to have a simpler solution that then if you have problems with it's going

691
00:34:47,995 --> 00:34:50,997
to be easy to understand, easy to debug.

692
00:34:51,381 --> 00:34:55,185
And not only by you, but by anyone else in the team.

693
00:34:55,726 --> 00:34:58,209
As soon as you start using a lot of templates and stuff

694
00:34:58,229 --> 00:35:00,652
like that, it's like, who knows?

695
00:35:00,752 --> 00:35:02,554
It becomes more complicated.

696
00:35:02,654 --> 00:35:04,877
And try to keep it simple, I would say.

697
00:35:05,337 --> 00:35:08,361
Behaviors are complex enough that

698
00:35:08,581 --> 00:35:10,443
don't make the situation worse by writing

699
00:35:10,483 --> 00:35:11,484
all sorts of crazy stuff.

700
00:35:11,927 --> 00:35:14,068
And especially modularity is part of that too.

701
00:35:14,088 --> 00:35:17,510
And when you're writing that for testing,

702
00:35:18,010 --> 00:35:21,791
you just gain so much from what you can reuse

703
00:35:21,831 --> 00:35:23,512
in the development of it afterwards.

704
00:35:23,952 --> 00:35:24,252
Cool.

705
00:35:24,272 --> 00:35:26,693
Mike, do you have anything?

706
00:35:26,733 --> 00:35:27,234
Either Mike?

707
00:35:29,154 --> 00:35:31,535
Clear ownership, I think, is important.

708
00:35:31,676 --> 00:35:32,996
What module owns what?

709
00:35:33,156 --> 00:35:36,017
What module is responsible for the lifetime of these objects?

710
00:35:36,758 --> 00:35:38,879
Because if you're passing them around,

711
00:35:39,059 --> 00:35:41,260
I mean, it should be clearly.

712
00:35:41,994 --> 00:35:45,615
in the code like okay I have a platoon manager it creates platoons those

713
00:35:45,635 --> 00:35:49,076
platoons go out and do behaviors the platoon manager owns the platoons it

714
00:35:49,096 --> 00:35:51,817
doesn't matter if something else needs a pointer to that or whatever

715
00:35:52,497 --> 00:35:56,359
they can have a weak pointer it doesn't matter the lifetime has to be owned by

716
00:35:56,539 --> 00:36:00,800
a single object. When you first said you know clear ownership my thing

717
00:36:00,840 --> 00:36:05,462
jumped in my head too is clear ownership from a programmer standpoint you know

718
00:36:05,482 --> 00:36:07,062
because there's a lot of times there's you know we're working

719
00:36:07,655 --> 00:36:10,616
finally at the point where a lot of teams have more than one AI programmer.

720
00:36:11,316 --> 00:36:15,397
And or but even you know gameplay server programmers and stuff like that of just saying

721
00:36:16,818 --> 00:36:19,399
this is the stuff that I'm responsible for.

722
00:36:20,119 --> 00:36:23,000
Yeah you can tap into it and here's your interfaces and stuff like that.

723
00:36:23,020 --> 00:36:24,460
But that was first thing that jumped into my head.

724
00:36:24,480 --> 00:36:27,921
But yeah I liked what you're talking about about the ownership of different systems

725
00:36:28,102 --> 00:36:29,102
you know in the AI.

726
00:36:29,582 --> 00:36:32,403
I've never had another AI program so it's always been my fault.

727
00:36:34,284 --> 00:36:36,404
For the record it's always been Mike Robbins fault.

728
00:36:37,285 --> 00:36:37,405
So.

729
00:36:37,672 --> 00:36:40,413
So I mean, I listened to this conversation,

730
00:36:40,493 --> 00:36:42,154
and I can't help but go back to

731
00:36:42,174 --> 00:36:46,215
what kind of my roots in computer engineering and think,

732
00:36:46,415 --> 00:36:50,337
you know, what would someone who has been doing this

733
00:36:50,757 --> 00:36:53,818
outside of games for 20 years think of the conversations

734
00:36:53,858 --> 00:36:55,739
we're having now in the game industry

735
00:36:55,839 --> 00:36:57,239
about how to write testable code?

736
00:36:58,040 --> 00:37:02,541
I think it's kind of interesting, we'll go with that word,

737
00:37:02,961 --> 00:37:04,622
because there's not a lot of.

738
00:37:05,533 --> 00:37:08,174
There's not a lot of awareness, I think, in the game industry,

739
00:37:08,274 --> 00:37:10,414
or at least people act like they don't have time

740
00:37:10,514 --> 00:37:12,715
to go do all these things that make your code testable.

741
00:37:13,235 --> 00:37:16,076
And this is stuff that's been like common wisdom,

742
00:37:16,096 --> 00:37:19,036
body of knowledge in the industry mainstream

743
00:37:19,116 --> 00:37:20,657
for over like two decades.

744
00:37:21,657 --> 00:37:24,418
And we're just now starting to get up to this idea that, hey,

745
00:37:24,458 --> 00:37:26,998
maybe if we can test our code, it'll suck less.

746
00:37:28,359 --> 00:37:29,359
We're growing up.

747
00:37:31,976 --> 00:37:33,276
That's an excellent point.

748
00:37:34,036 --> 00:37:35,557
Moving on to the next one, here's

749
00:37:35,577 --> 00:37:37,877
our second potential religious war.

750
00:37:39,057 --> 00:37:41,998
What architectures of the primary types,

751
00:37:42,018 --> 00:37:43,958
like your behavior tree, state machines, utility,

752
00:37:44,659 --> 00:37:46,579
more of the black boxy neural network type stuff,

753
00:37:47,439 --> 00:37:49,640
what architectures lend themselves easier

754
00:37:50,380 --> 00:37:54,441
to testing and debugging, and maybe a little bit of why,

755
00:37:54,461 --> 00:37:56,181
some of the pros and cons of things

756
00:37:56,201 --> 00:37:57,201
you would run into with that?

757
00:37:57,781 --> 00:37:59,002
Anything that's not a black box.

758
00:37:59,342 --> 00:38:00,822
Yeah, well, that's a good start.

759
00:38:00,862 --> 00:38:01,042
Yeah.

760
00:38:02,274 --> 00:38:03,655
Why is this broken?

761
00:38:05,416 --> 00:38:05,836
I don't know.

762
00:38:05,856 --> 00:38:10,158
To me it would be anything that you can visualize.

763
00:38:10,859 --> 00:38:14,141
So behavior trees, you can always build tools to be able to see

764
00:38:14,181 --> 00:38:18,183
like what the tree is doing or steam machines you can know

765
00:38:18,223 --> 00:38:21,825
like we are in this state now or with, you know, that sort of thing.

766
00:38:22,065 --> 00:38:26,287
Anything that you can build tools for and then kind of like have a more

767
00:38:26,347 --> 00:38:29,309
visual representation of what's happening inside.

768
00:38:30,219 --> 00:38:34,941
Well, it's just more easy to wrap your head around the fact that it is in this state,

769
00:38:35,061 --> 00:38:39,904
or it is in this branch, even without visualization, you can mentally know.

770
00:38:40,564 --> 00:38:44,486
And so therefore, this is the only stuff that should be available.

771
00:38:44,826 --> 00:38:45,006
Yes.

772
00:38:45,046 --> 00:38:46,267
Yeah, okay.

773
00:38:46,507 --> 00:38:47,307
Non-planner stuff.

774
00:38:47,788 --> 00:38:48,868
Non-planner stuff. Why?

775
00:38:49,108 --> 00:38:53,410
Because, I mean, stuff where you have easy, clear expectations,

776
00:38:53,750 --> 00:38:57,392
like a state machine or a behavior tree, or, yeah.

777
00:38:57,813 --> 00:38:59,674
Oh, and this kind of goes back to the scripted

778
00:38:59,694 --> 00:39:01,616
versus emergent thing too, is if it,

779
00:39:02,176 --> 00:39:05,539
you know, who was it, it was in the last session

780
00:39:05,559 --> 00:39:07,480
was talking about, well, you can back flip

781
00:39:07,560 --> 00:39:09,381
and throw the grenade off of four walls,

782
00:39:09,461 --> 00:39:12,264
and yeah, hey, it figured out all that stuff.

783
00:39:12,284 --> 00:39:13,164
Got there.

784
00:39:13,204 --> 00:39:16,767
Yeah, but you're going, was that supposed to happen?

785
00:39:17,527 --> 00:39:19,929
So, but of course you can trump that with,

786
00:39:20,109 --> 00:39:22,651
but it looked cool, so therefore it's fine.

787
00:39:22,671 --> 00:39:24,032
So now we're back into this whole,

788
00:39:24,072 --> 00:39:25,894
well, which is right and which is wrong?

789
00:39:25,954 --> 00:39:27,295
So what else, any other?

790
00:39:28,073 --> 00:39:31,956
I think it really depends an awful lot on the people you're working with, much more

791
00:39:31,996 --> 00:39:38,040
than the technology you're working with, because certain teams have reflections of how they

792
00:39:38,080 --> 00:39:39,721
think in their projects.

793
00:39:40,582 --> 00:39:42,624
And I think every team does that to some extent.

794
00:39:42,804 --> 00:39:48,388
And the more you have one mentality about how your AI is supposed to function, the harder

795
00:39:48,428 --> 00:39:53,292
it is to get away from that and decouple from that and look at your own blind spots and

796
00:39:53,312 --> 00:39:55,773
say, OK, now we've got to go find out what we forgot.

797
00:39:56,602 --> 00:40:00,625
You know, there's a lot of impact between

798
00:40:01,226 --> 00:40:03,888
the way you organize your company and your team

799
00:40:04,068 --> 00:40:06,470
and even the sub-teams within that group

800
00:40:07,110 --> 00:40:09,792
and the actual technology that you produce.

801
00:40:10,413 --> 00:40:11,714
And so if you're building something

802
00:40:11,754 --> 00:40:13,535
that's fundamentally incompatible

803
00:40:13,635 --> 00:40:15,236
with the way your team thinks,

804
00:40:15,637 --> 00:40:16,837
you're just gonna have a bad time.

805
00:40:16,918 --> 00:40:18,239
Like there's no two ways around it.

806
00:40:18,519 --> 00:40:20,760
It's gonna end up being awkward and uncomfortable.

807
00:40:21,141 --> 00:40:24,083
So if you can identify like just paradigms

808
00:40:26,343 --> 00:40:29,325
general modes of thought that your team spends a lot of time with.

809
00:40:29,905 --> 00:40:32,967
That can be incredibly useful for going back and saying, okay now we're going to

810
00:40:33,107 --> 00:40:36,729
we're going to try this architecture that happens to align very well with the

811
00:40:36,769 --> 00:40:37,429
way that we think.

812
00:40:38,750 --> 00:40:41,751
And so that's an interesting balance consideration in between

813
00:40:42,252 --> 00:40:45,834
choosing the architecture that matches the needs of the game.

814
00:40:45,854 --> 00:40:49,175
You know, so yeah, there can be a little bit of friction there.

815
00:40:49,215 --> 00:40:52,217
Well, you guys tend to think like this, however the game...

816
00:40:53,108 --> 00:40:56,429
system kind of requires us to have an AI like that.

817
00:40:56,449 --> 00:40:58,290
This goes beyond testing.

818
00:40:58,370 --> 00:41:00,311
This is like, well, shoot, so you

819
00:41:00,331 --> 00:41:03,753
have to have some bit of a transition and retraining

820
00:41:03,813 --> 00:41:06,754
and stuff like that of getting the team to think.

821
00:41:07,415 --> 00:41:11,476
And I think ultimately, if our goal is to serve the game,

822
00:41:11,757 --> 00:41:13,117
serve the purposes of the game, we

823
00:41:13,157 --> 00:41:15,698
might have to change the way we approach things,

824
00:41:15,958 --> 00:41:18,840
whether it be testing or just the architecture to begin with.

825
00:41:18,880 --> 00:41:22,562
So yeah, that's an interesting, you never think about, well,

826
00:41:23,463 --> 00:41:29,164
I think in terms of behavior trees or scoring everything in my life as utility or something.

827
00:41:29,824 --> 00:41:32,385
Not many of us think in terms of planners, I don't believe.

828
00:41:34,365 --> 00:41:38,626
So yeah, that's an interesting consideration there.

829
00:41:38,886 --> 00:41:45,128
Anything else on just in general on best practices for coding and programming and our work disciplines

830
00:41:45,228 --> 00:41:46,068
as programmers?

831
00:41:47,788 --> 00:41:51,269
Well, we brought up modularizing the AI as much as possible.

832
00:41:51,825 --> 00:41:57,007
That also lends itself to easier time testing and easier time debugging because if your

833
00:41:57,027 --> 00:42:01,769
problem is in one part of AI, well, most likely your problem is in that specific module, not

834
00:42:02,349 --> 00:42:05,130
somewhere in this entire mess of AI code.

835
00:42:06,210 --> 00:42:11,292
Is there a way that you would then be able to firewall off, okay, well I'm going to just

836
00:42:11,332 --> 00:42:15,033
continue to work under the premise that these modules are perfectly okay, I can trust everything

837
00:42:15,073 --> 00:42:16,954
coming out of them so that I can focus.

838
00:42:17,612 --> 00:42:19,693
on something in this particular module?

839
00:42:19,713 --> 00:42:22,115
How would you go about doing that just in a general sense?

840
00:42:22,616 --> 00:42:25,017
Well, we've already mentioned iteratively testing

841
00:42:25,078 --> 00:42:26,238
as you're putting things together,

842
00:42:26,278 --> 00:42:28,020
so that you can already say, well, I've already

843
00:42:28,060 --> 00:42:30,622
tested this particular subset of code.

844
00:42:30,702 --> 00:42:32,043
So we know that that's good.

845
00:42:32,063 --> 00:42:35,566
And the inputs, outputs, all of that stuff is what I expect

846
00:42:35,646 --> 00:42:37,828
and hasn't changed in the last three months.

847
00:42:37,848 --> 00:42:38,888
So it's probably not that.

848
00:42:39,129 --> 00:42:41,931
So using your example, like the tactical manager, for example,

849
00:42:41,971 --> 00:42:45,313
and let's say it's giving orders to individual units.

850
00:42:45,920 --> 00:42:48,001
You know the tactical manager is spitting out,

851
00:42:48,502 --> 00:42:50,903
you know, it's formulating good plans for tactics,

852
00:42:50,943 --> 00:42:54,045
and it's sending good, but you see units running

853
00:42:54,086 --> 00:42:56,587
all over the damn place in places you're not expecting.

854
00:42:57,888 --> 00:43:01,631
You could assume, no, the plan, the tactical plan

855
00:43:02,171 --> 00:43:03,712
and the orders coming out of it is fine.

856
00:43:03,732 --> 00:43:06,134
So it must be something in the execution,

857
00:43:06,174 --> 00:43:09,256
maybe something in your navigation system got horked up,

858
00:43:09,536 --> 00:43:13,019
or in passing the tokens of here's your command.

859
00:43:13,540 --> 00:43:15,240
Yeah, or the information that's being passed in.

860
00:43:15,580 --> 00:43:17,241
Maybe your influence map is wrong.

861
00:43:17,621 --> 00:43:18,781
Maybe that code is wrong.

862
00:43:18,821 --> 00:43:21,122
Maybe something like you were talking about earlier.

863
00:43:21,182 --> 00:43:23,682
Oh, on the other side of the tactical manager.

864
00:43:23,882 --> 00:43:24,462
OK, yeah.

865
00:43:24,502 --> 00:43:27,243
So it's just doing, well, this is the knowledge that I know.

866
00:43:27,263 --> 00:43:29,764
It's doing the right thing, but just using the wrong thing.

867
00:43:29,784 --> 00:43:32,224
So at that point, and I hate to use the term because we've

868
00:43:32,244 --> 00:43:35,085
already maligned it, you've created a black box

869
00:43:35,125 --> 00:43:37,146
that you know you're comfortable with what's

870
00:43:37,186 --> 00:43:39,646
happening in that based on the inputs and the outputs.

871
00:43:39,746 --> 00:43:42,267
And you've kind of sealed that off as this is OK.

872
00:43:42,947 --> 00:43:43,067
So.

873
00:43:43,608 --> 00:43:44,488
Is there a danger to that?

874
00:43:45,028 --> 00:43:46,769
Well, yeah, because the bug could be there.

875
00:43:46,809 --> 00:43:48,269
And if you assume that it's not there,

876
00:43:48,309 --> 00:43:50,730
you could spend hours trying to track it down somewhere else,

877
00:43:50,810 --> 00:43:52,611
only to find out that, oh, well, I mean,

878
00:43:52,691 --> 00:43:54,691
this code was not as perfect as it ought to be.

879
00:43:54,711 --> 00:43:55,512
After all it was, yeah.

880
00:43:55,532 --> 00:43:56,132
OK, excellent.

881
00:43:56,552 --> 00:43:57,112
Anybody else?

882
00:43:57,132 --> 00:43:59,873
Just general principles of being an AI programmer

883
00:43:59,953 --> 00:44:04,534
to make it easier on yourself or others?

884
00:44:04,554 --> 00:44:07,055
Ultimately, you are not alone.

885
00:44:07,555 --> 00:44:10,956
So you are in a team with other people and things like.

886
00:44:11,921 --> 00:44:17,086
getting code reviews and have other people look at your code before you check in or

887
00:44:17,106 --> 00:44:23,151
if you have two possible options and you're not sure about one or the other, you can go to other

888
00:44:23,171 --> 00:44:26,633
people in your team and try to get like ideas for other people.

889
00:44:28,215 --> 00:44:33,279
You know what I found is interesting about that is it doesn't have to be a lead or somebody above

890
00:44:33,319 --> 00:44:37,062
you or somebody with more experience. A lot of times even just getting another pair of eyeballs,

891
00:44:37,122 --> 00:44:38,763
even if it's a junior engineer or something.

892
00:44:39,689 --> 00:44:46,192
Makes it makes a huge difference. So OK yeah, no everyone like even if you are super senior

893
00:44:46,793 --> 00:44:51,235
You can always learn something from from anyone in the team like even from

894
00:44:51,755 --> 00:44:56,597
Someone that just you in your team, and it's super junior. You can still learn a lot from him

895
00:44:57,938 --> 00:44:59,298
so as a

896
00:44:59,378 --> 00:45:00,639
practical example for

897
00:45:01,279 --> 00:45:07,422
Behavior tree setup I would generally unit test actions and integration test trees

898
00:45:08,094 --> 00:45:10,235
until the point where a certain subtree is reused

899
00:45:10,695 --> 00:45:13,117
in a lot of different systems and a lot of different other trees,

900
00:45:13,518 --> 00:45:16,620
then I would have a set of unit tests for that as well.

901
00:45:17,120 --> 00:45:20,903
So it's kind of cornered off as a safe thing,

902
00:45:22,204 --> 00:45:23,305
and it becomes another...

903
00:45:23,905 --> 00:45:25,587
Safe with an asterisk.

904
00:45:25,987 --> 00:45:27,548
It's assumed safe until it's not.

905
00:45:27,808 --> 00:45:29,490
For various values of safe.

906
00:45:29,670 --> 00:45:30,711
It becomes a blind spot.

907
00:45:30,971 --> 00:45:31,811
Okay.

908
00:45:31,831 --> 00:45:33,693
Well, let's move on then.

909
00:45:34,774 --> 00:45:36,755
What tools could we...

910
00:45:37,992 --> 00:45:39,913
provide ourselves as programmers,

911
00:45:41,893 --> 00:45:43,034
for right now, just for us.

912
00:45:44,255 --> 00:45:46,576
You kind of touched a little bit on some of them here,

913
00:45:46,616 --> 00:45:48,576
but let's put a finer point on it.

914
00:45:49,217 --> 00:45:51,278
What are some things that you use,

915
00:45:51,338 --> 00:45:53,599
either for yourself or that are off the shelf?

916
00:45:54,499 --> 00:45:57,801
I mean, one of my primary priorities

917
00:45:57,901 --> 00:46:00,122
is to make sure that the authoring environment

918
00:46:00,242 --> 00:46:03,623
and the debug inside environment

919
00:46:03,683 --> 00:46:04,944
is as much as possible the same.

920
00:46:05,881 --> 00:46:11,726
So you're looking, when you're looking at the execution or the state of a running AI,

921
00:46:12,106 --> 00:46:17,710
you're using the same visualization and the same window, whatever, as your authoring environment.

922
00:46:17,730 --> 00:46:20,733
So it's an easy one-to-one switch over there.

923
00:46:21,513 --> 00:46:22,474
In some cases that works.

924
00:46:22,534 --> 00:46:24,656
In other cases that may actually be difficult.

925
00:46:24,936 --> 00:46:28,238
You need to have it in game rather than in the authoring environment.

926
00:46:28,458 --> 00:46:32,782
Well, you did a lot of work, obviously, with Unity where some of those things are a lot

927
00:46:32,842 --> 00:46:33,462
easier because you can

928
00:46:33,748 --> 00:46:38,151
have stuff in the inspector window right there and being able to write your custom things in the inspector.

929
00:46:38,191 --> 00:46:41,693
So it's finding the granularity and the visualization.

930
00:46:41,773 --> 00:46:44,775
It's an interesting challenge. Sure. Sure. What else? What are some tools?

931
00:46:45,575 --> 00:46:47,736
To me, the most important thing is debug graphics.

932
00:46:47,936 --> 00:46:50,398
That's having debug graphics for everything that you work on.

933
00:46:50,998 --> 00:46:53,020
Like every time you add something new,

934
00:46:53,100 --> 00:47:01,124
you just add debug graphics to it that can help you understand what your system is doing internally.

935
00:47:01,385 --> 00:47:02,265
And you can also...

936
00:47:03,163 --> 00:47:06,606
show it to other people and other people can understand what you were trying to do with it.

937
00:47:07,726 --> 00:47:09,588
And also, you know, tools is always...

938
00:47:11,549 --> 00:47:14,712
getting tool support is complicated sometimes, because you know

939
00:47:15,112 --> 00:47:19,075
it's not only tools for AI, it's tools for mostly

940
00:47:19,175 --> 00:47:23,038
content creators, so if you need a tools team to

941
00:47:23,078 --> 00:47:25,059
be able to work on tools for you

942
00:47:27,061 --> 00:47:30,964
maybe you won't have a lot of... you won't get a lot of support, and if you

943
00:47:31,004 --> 00:47:31,845
want to do it yourself.

944
00:47:33,008 --> 00:47:35,848
We are AI programmers, not tool programmers sometimes.

945
00:47:35,888 --> 00:47:40,229
So if you have to build this thing that interacts

946
00:47:40,469 --> 00:47:42,290
with the rest of the pipeline or whatever,

947
00:47:42,370 --> 00:47:44,930
it's probably too complicated for us,

948
00:47:45,030 --> 00:47:47,291
or it's going to take us too long to do it.

949
00:47:47,311 --> 00:47:51,551
And it's amazing how something as simple as drawing a line

950
00:47:51,771 --> 00:47:55,592
of what's my line of sight, who's my current target.

951
00:47:56,032 --> 00:47:59,013
And if you have no familiarity with the rendering engine,

952
00:47:59,033 --> 00:48:01,993
where's the code to draw a yellow line on the screen,

953
00:48:02,033 --> 00:48:02,313
please?

954
00:48:03,677 --> 00:48:08,561
Whereas somebody who's in the graphics engine people,

955
00:48:09,061 --> 00:48:11,804
the rendering people, oh yeah, that's right here.

956
00:48:11,824 --> 00:48:12,264
Oh, thank you.

957
00:48:12,384 --> 00:48:15,086
What do you mean you're not gonna do it for me?

958
00:48:18,629 --> 00:48:20,050
So what you're saying is rather than,

959
00:48:20,371 --> 00:48:21,732
hey, I've coded a bunch of stuff,

960
00:48:21,812 --> 00:48:25,915
and it's almost doing it iteratively along with that is,

961
00:48:26,536 --> 00:48:27,957
I wrote a feature that,

962
00:48:28,730 --> 00:48:33,391
I'm now paying, doing the pathfinding,

963
00:48:33,411 --> 00:48:34,111
just something simple.

964
00:48:34,791 --> 00:48:35,991
I want to be able to draw it in the world

965
00:48:36,011 --> 00:48:38,072
to make sure that that path is legit

966
00:48:38,112 --> 00:48:39,472
rather than, and is he walking

967
00:48:39,512 --> 00:48:41,073
where he's supposed to be walking?

968
00:48:41,673 --> 00:48:42,653
I want to draw it in the world.

969
00:48:42,773 --> 00:48:43,913
So I'll give you an example.

970
00:48:43,933 --> 00:48:48,995
So we had a sniper in Splinter Cell Blacklist.

971
00:48:49,949 --> 00:48:54,713
And basically the sniper was going to use his sniper rifle if you were far enough.

972
00:48:55,014 --> 00:48:59,798
And if you got closer to him, he would switch to a pistol and become like a regular guy.

973
00:49:00,338 --> 00:49:05,042
And then if you got away again, like he will switch back to the thing, right?

974
00:49:05,363 --> 00:49:06,604
Oh, I see where this is headed.

975
00:49:06,624 --> 00:49:10,087
So just drawing those little like circles around him,

976
00:49:10,107 --> 00:49:17,353
so people understood like why he was changing the weapon, that was super helpful.

977
00:49:17,655 --> 00:49:19,636
And please tell me that that wasn't the exact same range,

978
00:49:19,676 --> 00:49:21,757
that you could sit there and just do this back and forth

979
00:49:21,817 --> 00:49:23,097
and he would keep switching weapons, right?

980
00:49:23,318 --> 00:49:25,799
No, yeah, so things like that you would catch

981
00:49:25,839 --> 00:49:26,839
by doing this, right?

982
00:49:26,859 --> 00:49:28,220
Yeah, but if you can see the two ranges,

983
00:49:28,240 --> 00:49:30,821
now you understand, oh, once he gets outside of that

984
00:49:30,841 --> 00:49:32,302
or inside of this other one, yeah, okay.

985
00:49:32,342 --> 00:49:35,103
And then let's say that you add something else

986
00:49:35,464 --> 00:49:37,044
on top of the range, right?

987
00:49:37,124 --> 00:49:39,025
Like it's not, when he has the pistol,

988
00:49:39,105 --> 00:49:41,006
it's not only you are far,

989
00:49:41,086 --> 00:49:43,928
but it's also that he's not engaged with you

990
00:49:43,968 --> 00:49:44,888
in combat or something.

991
00:49:45,429 --> 00:49:50,871
So you can add something else like a little ball on top of him that says like now I'm in combat with you, so I'm fighting with you.

992
00:49:52,011 --> 00:49:57,293
So this is where we get to the iterative thing where and now that we've added this extra rule, I need a way to be able to see that.

993
00:49:57,333 --> 00:50:06,396
Yeah, so you know that it's clearly, you know, the radius is showing me that I'm far enough, so why is he not switching the weapon?

994
00:50:06,436 --> 00:50:09,817
But now I know that he has something else on his head, so maybe that's why.

995
00:50:09,897 --> 00:50:12,899
So adding a lot of that is very helpful.

996
00:50:14,925 --> 00:50:18,308
I think my favorite trick for debugging code in general

997
00:50:18,488 --> 00:50:19,910
is just a state capture.

998
00:50:20,690 --> 00:50:22,792
I want a way to be able to at a moment in time

999
00:50:22,872 --> 00:50:25,334
just dump out everything that the program has in it

1000
00:50:25,354 --> 00:50:27,276
in terms of what it believes about the world.

1001
00:50:28,136 --> 00:50:30,679
And you can learn a lot about your code

1002
00:50:30,779 --> 00:50:33,741
by comparing a state capture and your expectations

1003
00:50:33,861 --> 00:50:34,942
with the way that the debugger

1004
00:50:35,022 --> 00:50:36,203
actually steps through the code.

1005
00:50:36,904 --> 00:50:38,365
You'll find that it takes different branches

1006
00:50:38,385 --> 00:50:39,746
than you might have expected it to,

1007
00:50:40,006 --> 00:50:41,868
or loops a little longer than you thought it should

1008
00:50:41,908 --> 00:50:42,308
or whatever.

1009
00:50:42,752 --> 00:50:45,193
And this is a great way to discover your own blind spots

1010
00:50:45,353 --> 00:50:47,854
and kind of do some of that iterative testing

1011
00:50:47,975 --> 00:50:48,575
as you're going.

1012
00:50:49,475 --> 00:50:52,076
And you just dump them to like a log file, for example?

1013
00:50:52,156 --> 00:50:53,737
I mean, you can get as fancy as you want.

1014
00:50:54,197 --> 00:50:55,498
It really doesn't matter, I think.

1015
00:50:56,118 --> 00:50:58,699
What you have available at your studio is probably fine.

1016
00:50:59,440 --> 00:51:02,321
And if you can stomach using it, then just do it.

1017
00:51:02,521 --> 00:51:03,721
And if not, go write something better.

1018
00:51:03,741 --> 00:51:07,223
Anybody else good for tools for us?

1019
00:51:07,463 --> 00:51:07,763
Anything?

1020
00:51:08,784 --> 00:51:12,265
I think my favorite trick that I stole from our navigation

1021
00:51:12,305 --> 00:51:12,605
engineer.

1022
00:51:13,520 --> 00:51:15,381
was the ability to tag an agent

1023
00:51:15,841 --> 00:51:17,542
so that you could set a breakpoint in code

1024
00:51:17,862 --> 00:51:19,923
so that when that specific agent

1025
00:51:20,523 --> 00:51:22,484
entered that code path, the breakpoint would hit.

1026
00:51:22,844 --> 00:51:24,225
Oh, yeah, because if you're in a world

1027
00:51:24,245 --> 00:51:26,966
where you've got dozens or hundreds of characters,

1028
00:51:27,066 --> 00:51:29,407
and it's like, okay, so break when this value

1029
00:51:29,547 --> 00:51:32,028
is greater than two, not him, not him,

1030
00:51:32,308 --> 00:51:33,409
not that one either, not,

1031
00:51:33,909 --> 00:51:35,990
you're sitting there just looking at one box.

1032
00:51:36,630 --> 00:51:38,291
If wait until that GUID ends in 4832,

1033
00:51:40,739 --> 00:51:41,299
Oh, yeah.

1034
00:51:41,319 --> 00:51:43,320
So I like that, because then that narrows.

1035
00:51:43,500 --> 00:51:45,381
So how do you tag a character?

1036
00:51:45,421 --> 00:51:47,401
Is it in code, or can you click on somebody?

1037
00:51:47,501 --> 00:51:48,262
Usually it's a key bind.

1038
00:51:48,302 --> 00:51:49,402
In our game, it was a key bind.

1039
00:51:49,802 --> 00:51:50,983
You selected an agent.

1040
00:51:51,063 --> 00:51:55,025
You would hit a key that would set a flag on that agent.

1041
00:51:55,425 --> 00:51:56,905
And then basically all you're doing

1042
00:51:56,966 --> 00:51:59,567
is you're setting a breakpoint inside of an if statement.

1043
00:51:59,587 --> 00:52:02,368
It's like, hey, if the agent has this tag set to true,

1044
00:52:02,388 --> 00:52:03,788
I'll spin break.

1045
00:52:03,828 --> 00:52:04,589
I love that so much.

1046
00:52:04,629 --> 00:52:05,229
It's really simple.

1047
00:52:05,544 --> 00:52:10,028
Dude, now you've burned it, so you can't use it in the simplest trick in the book thing next year.

1048
00:52:10,068 --> 00:52:11,509
That's fantastic. Hey, did you have any...

1049
00:52:11,989 --> 00:52:13,350
I usually have a debug gun.

1050
00:52:14,511 --> 00:52:16,893
So I find a character and shoot it with that gun,

1051
00:52:17,053 --> 00:52:20,996
and that then starts the session recording on that character.

1052
00:52:21,937 --> 00:52:26,260
And one thing on top of the breakpoint setup,

1053
00:52:26,300 --> 00:52:30,704
I also really like to have the ability to overwrite values in the debugger.

1054
00:52:31,244 --> 00:52:32,105
So we're...

1055
00:52:32,609 --> 00:52:55,733
Like saying this is the current game environment we're playing and I've just added this new behavior, but I haven't actually implement the action yet, so it will just go to the default handler, but I just want to test it out, so I'm just going to set it to always return this value or just basically augmenting the reality of the agent and going even though.

1056
00:52:56,260 --> 00:52:58,080
You have like full ammo or whatever.

1057
00:52:58,160 --> 00:53:01,301
I want to see how you respond to not having any ammo at this point.

1058
00:53:01,341 --> 00:53:05,142
And so this beats the heck out of going and commenting out the real code and saying,

1059
00:53:05,202 --> 00:53:07,703
nope, in this case ammo equals four always.

1060
00:53:08,163 --> 00:53:11,164
And because then you always forget to go back and change it, right?

1061
00:53:11,664 --> 00:53:12,204
Fun time.

1062
00:53:12,264 --> 00:53:13,344
Yeah, fun time.

1063
00:53:13,364 --> 00:53:14,945
You know, you got a weird idea of fun.

1064
00:53:16,245 --> 00:53:20,246
Okay, so then turning it around, what tools can we provide, you know, designers in QA?

1065
00:53:20,266 --> 00:53:24,687
And some of them actually apply things for ourselves like just the visualization.

1066
00:53:25,894 --> 00:53:29,217
Or the debug gun, which I'd love to see that in action.

1067
00:53:29,257 --> 00:53:31,038
I'd love to use that on real people, actually.

1068
00:53:31,659 --> 00:53:34,961
So what are some of the things that are good to provide

1069
00:53:35,562 --> 00:53:38,985
to designers, to QA, to other non-programmer types?

1070
00:53:39,325 --> 00:53:42,127
I think that it's more, as you said,

1071
00:53:42,248 --> 00:53:44,369
it's also very useful for us,

1072
00:53:44,429 --> 00:53:46,891
but a lot of in-game things like.

1073
00:53:47,716 --> 00:53:50,497
being able to, as they were saying, select the guy

1074
00:53:50,517 --> 00:53:54,359
and maybe have a command to kill everyone else in the level

1075
00:53:54,440 --> 00:53:59,762
except that guy, or being able to spawn some people around him

1076
00:53:59,882 --> 00:54:03,764
to try and generate a specific scenario where you need,

1077
00:54:03,784 --> 00:54:05,986
like, you know, you need a sniper and something else.

1078
00:54:06,006 --> 00:54:08,947
So you can go and, by using debug commands,

1079
00:54:08,967 --> 00:54:12,189
just spawn those guys in there without having to go and create

1080
00:54:12,229 --> 00:54:13,229
a whole map for that.

1081
00:54:14,310 --> 00:54:17,111
And you can have a lot of.

1082
00:54:17,683 --> 00:54:21,644
camera controls like flying flying camera so you can like

1083
00:54:21,884 --> 00:54:26,085
look at things from different angles or you can move the

1084
00:54:26,105 --> 00:54:29,206
player somewhere else or you can make the turn the player

1085
00:54:29,266 --> 00:54:32,506
invisible for people and all those things that you want to

1086
00:54:33,827 --> 00:54:38,008
you want to kind of fake to try and stress test your your AI

1087
00:54:38,308 --> 00:54:40,388
while you're playing. That was a lot of them. Anybody writing

1088
00:54:40,448 --> 00:54:43,729
these down. That's that's cool. Yeah. Just basically I want to

1089
00:54:43,769 --> 00:54:46,930
be able to completely screw with the environment in any way.

1090
00:54:47,595 --> 00:54:51,797
in a non, you know, something that doesn't violate the AI,

1091
00:54:52,377 --> 00:54:55,899
but so I can set up my own scenarios,

1092
00:54:55,959 --> 00:55:00,321
visualize, view these scenarios to just recreate

1093
00:55:00,461 --> 00:55:03,383
a very specific situation is what you're getting at.

1094
00:55:03,583 --> 00:55:06,925
There was a cool feature in Slender Cell Blacklist.

1095
00:55:07,465 --> 00:55:10,547
So, well, for those of you who have played the game,

1096
00:55:10,587 --> 00:55:13,588
basically the LKP, the last known position thing,

1097
00:55:13,648 --> 00:55:13,868
where

1098
00:55:14,558 --> 00:55:18,062
It was basically being drawn and people knew that you had been there or whatever.

1099
00:55:18,462 --> 00:55:19,504
So they thought you were there.

1100
00:55:19,744 --> 00:55:20,365
I saw you.

1101
00:55:20,605 --> 00:55:20,825
Yeah.

1102
00:55:20,925 --> 00:55:26,311
So to stress this, that thing, I just remember we had very quickly, if you

1103
00:55:26,391 --> 00:55:31,137
pressed both, um, sticks in the controller, you started.

1104
00:55:32,002 --> 00:55:33,843
you were able to kind of like fly around.

1105
00:55:33,943 --> 00:55:36,883
So if you started doing that and kind of like flying on the other side

1106
00:55:36,943 --> 00:55:38,964
and then flying on the other side and then flying on the other side,

1107
00:55:39,004 --> 00:55:42,584
kind of like messing with them all the time to see

1108
00:55:43,024 --> 00:55:44,865
if they were updating the LKB properly,

1109
00:55:45,265 --> 00:55:48,665
if they were, what they were doing when they were not seeing you in there anymore.

1110
00:55:48,725 --> 00:55:52,446
So kind of like the invisibility thing, like toggling it like on and off,

1111
00:55:52,586 --> 00:55:56,647
or like doing all those things like it's, you know, it's a lot of tricks.

1112
00:55:58,507 --> 00:56:05,378
You know, yeah, anything to be able to speed up the process of getting to the thing that you're trying to test is what you're getting at.

1113
00:56:05,398 --> 00:56:06,379
Cool. Anybody else have...

1114
00:56:06,972 --> 00:56:08,172
What are some tools for designers in QA?

1115
00:56:09,072 --> 00:56:11,653
I don't know if this is applicable for every game,

1116
00:56:11,773 --> 00:56:13,574
but for Planetary Annihilation, we

1117
00:56:13,614 --> 00:56:17,415
had the ability of just basically spawning AI on AI

1118
00:56:17,455 --> 00:56:20,736
games and just having them run as fast as possible,

1119
00:56:20,856 --> 00:56:25,118
no visuals, no nothing, just for the purpose of finding crashes.

1120
00:56:25,838 --> 00:56:30,880
That's an easy way where you can find those weird stack errors,

1121
00:56:31,740 --> 00:56:35,501
finding overflow problems, finding null pointers where

1122
00:56:35,521 --> 00:56:36,222
they're not supposed to be.

1123
00:56:36,658 --> 00:56:37,499
finding that sort of stuff.

1124
00:56:37,879 --> 00:56:41,522
And that's also a common thing for doing balance stuff, too.

1125
00:56:41,922 --> 00:56:44,844
In things that inherently have, well,

1126
00:56:44,904 --> 00:56:47,326
and maybe even things that don't necessarily have AI players,

1127
00:56:47,766 --> 00:56:50,909
but you have created AIs that will play the game.

1128
00:56:50,929 --> 00:56:54,672
So strategy games, and I know Civilization

1129
00:56:54,692 --> 00:56:56,873
would do this quite a bit, where they would just

1130
00:56:56,973 --> 00:57:00,576
crank up the sim speed and say, OK, well, this dude

1131
00:57:00,676 --> 00:57:01,377
keeps winning.

1132
00:57:02,017 --> 00:57:03,619
Something's up with his balance stuff.

1133
00:57:03,659 --> 00:57:05,280
And it's not AI and everything, but the point still,

1134
00:57:07,242 --> 00:57:08,382
Kind of like what Sergio was talking about,

1135
00:57:08,502 --> 00:57:10,944
I want to quickly get to test this situation.

1136
00:57:11,204 --> 00:57:12,545
You're going the other extreme of,

1137
00:57:12,645 --> 00:57:14,566
I want to quickly test all situations.

1138
00:57:14,786 --> 00:57:14,926
Yep.

1139
00:57:15,106 --> 00:57:16,447
We did the same thing for navigation.

1140
00:57:16,827 --> 00:57:17,067
Sure.

1141
00:57:17,167 --> 00:57:17,647
OK, cool.

1142
00:57:18,608 --> 00:57:20,669
So like selective session recording,

1143
00:57:21,289 --> 00:57:26,172
kind of inspired by how the new consoles have that share

1144
00:57:26,232 --> 00:57:26,633
button.

1145
00:57:26,653 --> 00:57:28,374
They can hit the share button, and you

1146
00:57:28,414 --> 00:57:33,536
share a couple minutes before and after the situation

1147
00:57:33,556 --> 00:57:34,277
you currently are in.

1148
00:57:35,177 --> 00:57:35,798
Having the.

1149
00:57:36,459 --> 00:57:42,344
the designers and the QA people give them basically a panic button, like, something's

1150
00:57:42,404 --> 00:57:43,485
wrong on the screen right now.

1151
00:57:44,526 --> 00:57:53,193
And the session is just on a loop, recording the last whatever minutes and some remaining

1152
00:57:53,233 --> 00:57:54,254
time afterwards.

1153
00:57:54,434 --> 00:57:59,318
And then you go, at that point, inject an event, a marker, this is where something,

1154
00:57:59,639 --> 00:58:01,921
the button was pressed, and this is the context I have to look at.

1155
00:58:02,301 --> 00:58:03,462
Rather than, here's like...

1156
00:58:04,580 --> 00:58:09,968
20 minutes a session and around the time where this guy is on the screen and yeah.

1157
00:58:10,729 --> 00:58:17,299
Yeah, it's very similar to the rolling 30 second buffer and fraps for example, but.

1158
00:58:18,395 --> 00:58:24,117
What you're saying is now I also have a whole lot of game context that's been saved with that instead of just video.

1159
00:58:24,397 --> 00:58:28,899
I mean, I like having it as just a custom stream so you can also go,

1160
00:58:29,479 --> 00:58:34,641
oh, I'm going to combine this with the video stream or some other debug systems and just go,

1161
00:58:34,681 --> 00:58:37,042
here's the same section of gameplay.

1162
00:58:37,442 --> 00:58:42,264
And so that's great for the designers in QA, but then now you have a deliverable that they hear.

1163
00:58:42,765 --> 00:58:45,486
This is, something went wrong, I viewed this,

1164
00:58:45,767 --> 00:58:47,087
and here's a shitload of data.

1165
00:58:47,528 --> 00:58:48,728
So, okay, cool, yeah.

1166
00:58:48,848 --> 00:58:49,869
Anybody else have anything real quick?

1167
00:58:50,409 --> 00:58:53,491
Yeah, something we do really extensively in Guild Wars 2

1168
00:58:53,671 --> 00:58:56,233
is just little cheat commands that you literally type

1169
00:58:56,253 --> 00:58:59,855
into the chat box, and they range from things like.

1170
00:59:01,034 --> 00:59:04,535
boost me to max level to kill everything

1171
00:59:04,575 --> 00:59:08,177
in a 5,000 mile radius around me, or whatever.

1172
00:59:08,337 --> 00:59:08,778
5,000 miles?

1173
00:59:09,398 --> 00:59:09,878
Wow.

1174
00:59:10,158 --> 00:59:11,799
You can type whatever number you want in there.

1175
00:59:11,819 --> 00:59:12,720
It's pretty open-ended.

1176
00:59:12,740 --> 00:59:14,140
Open-ended, like.

1177
00:59:14,661 --> 00:59:17,042
The cool thing about it is that those are available

1178
00:59:17,082 --> 00:59:19,503
to anyone on our development branches.

1179
00:59:19,663 --> 00:59:22,464
So anyone in QA or design can go at any time,

1180
00:59:22,565 --> 00:59:24,505
spin up their own map, and go say,

1181
00:59:24,566 --> 00:59:26,547
okay, what happens if I just arbitrarily kill

1182
00:59:27,087 --> 00:59:29,048
these three guards, but not that one?

1183
00:59:29,725 --> 00:59:31,386
and then they can play it and find out what happens.

1184
00:59:31,486 --> 00:59:33,307
And then they can go back and pick another guard

1185
00:59:33,327 --> 00:59:35,528
to not kill the next time, or whatever they want to do.

1186
00:59:36,148 --> 00:59:39,030
And it's all done through these just little,

1187
00:59:39,230 --> 00:59:41,471
literal text strings that you type into the chat window,

1188
00:59:41,711 --> 00:59:43,172
and you can put parameters on them

1189
00:59:43,212 --> 00:59:45,653
and get real fancy if you're so inclined.

1190
00:59:45,813 --> 00:59:49,835
But the basic power of changing the game state

1191
00:59:49,875 --> 00:59:51,936
to do whatever you want is all there.

1192
00:59:51,976 --> 00:59:54,118
Yeah, it's exactly that mentality of,

1193
00:59:54,338 --> 00:59:56,919
like, you should be able to do that at any time.

1194
00:59:57,707 --> 01:00:00,169
All right, well, we've got about three or four minutes left.

1195
01:00:00,449 --> 01:00:02,970
And I told the guys, I said, if you

1196
01:00:03,170 --> 01:00:09,113
were to just evangelize one or two sentences, what's the,

1197
01:00:09,393 --> 01:00:12,354
if you could tell your team, tell every team on the planet,

1198
01:00:12,875 --> 01:00:15,776
this is one thing to remember, what would it be?

1199
01:00:16,356 --> 01:00:18,857
And so they thought about it.

1200
01:00:18,897 --> 01:00:20,318
We talked about this yesterday afternoon.

1201
01:00:20,338 --> 01:00:22,379
And so I wanted to see what you guys came up with.

1202
01:00:22,399 --> 01:00:23,680
Who has something?

1203
01:00:24,262 --> 01:00:29,484
That this is the one thing I want everyone to know about making life easier for testing.

1204
01:00:30,305 --> 01:00:30,885
Who wants to go first?

1205
01:00:31,185 --> 01:00:35,127
The developer who breaks separation of concerns gets to sit in the corner.

1206
01:00:36,848 --> 01:00:37,949
Built-in punishment too.

1207
01:00:39,110 --> 01:00:40,110
Wasn't expecting that.

1208
01:00:40,430 --> 01:00:42,211
Then that's that separation of concerns.

1209
01:00:42,231 --> 01:00:43,032
You said right, okay.

1210
01:00:43,172 --> 01:00:44,933
Yeah, so it gets to sit in the corner.

1211
01:00:45,213 --> 01:00:46,554
What if I like sitting in the corner?

1212
01:00:47,214 --> 01:00:47,474
Go ahead.

1213
01:00:47,494 --> 01:00:48,595
Anybody who's got one?

1214
01:00:49,346 --> 01:00:51,946
you know, just keeping in contact with your QA team.

1215
01:00:52,247 --> 01:00:54,127
I found that to be incredibly helpful,

1216
01:00:54,167 --> 01:00:55,207
you know, keeping them apprised,

1217
01:00:55,687 --> 01:00:57,728
letting them know what expectations there are.

1218
01:00:59,108 --> 01:01:01,248
And if you have any ideas on, you know,

1219
01:01:01,268 --> 01:01:03,849
what could possibly break the AI, I mean, share it with them.

1220
01:01:04,009 --> 01:01:05,589
You know, if you don't have time to test something

1221
01:01:05,609 --> 01:01:07,930
because you're working on a feature, let them know.

1222
01:01:08,710 --> 01:01:12,750
So just talk to the relevant people and listen to them.

1223
01:01:12,971 --> 01:01:14,711
Brian Schwab mentioned this earlier in one of the sessions,

1224
01:01:14,731 --> 01:01:17,831
just listening to what, you know, yeah, okay, cool.

1225
01:01:18,192 --> 01:01:18,332
Mike.

1226
01:01:19,510 --> 01:01:22,051
Yeah, I think the main thing that I would advertise

1227
01:01:22,191 --> 01:01:24,791
is just, you know, you need to make a tough call

1228
01:01:24,931 --> 01:01:28,772
about how attached you are to the specific set of outcomes

1229
01:01:28,832 --> 01:01:30,192
that you have in your imagination.

1230
01:01:30,852 --> 01:01:33,573
Because as we've talked about here,

1231
01:01:33,593 --> 01:01:35,793
you know, a lot of times you'll get into a situation

1232
01:01:35,873 --> 01:01:39,814
where things don't go as planned, but they still look okay.

1233
01:01:40,714 --> 01:01:44,035
And it's probably time for a lot of, you know,

1234
01:01:44,075 --> 01:01:46,095
designers and AI programmers alike

1235
01:01:46,375 --> 01:01:47,915
to come to terms with the fact that

1236
01:01:48,758 --> 01:01:50,558
If the player's having fun, we've done our job.

1237
01:01:50,798 --> 01:01:53,239
And we don't need to be holding ourselves

1238
01:01:53,259 --> 01:01:54,459
to any other metric besides that.

1239
01:01:55,119 --> 01:01:55,640
OK, cool.

1240
01:01:55,780 --> 01:01:56,860
Yeah, I like that one.

1241
01:01:57,040 --> 01:01:57,340
Sergio?

1242
01:01:57,980 --> 01:01:59,241
I'm just going to repeat myself.

1243
01:01:59,301 --> 01:02:04,582
But basically, testing that your stuff works is pretty simple.

1244
01:02:04,642 --> 01:02:08,723
But testing if it can break or not is more complicated.

1245
01:02:09,223 --> 01:02:10,403
So that's what you have to do.

1246
01:02:10,804 --> 01:02:11,704
Try and break it.

1247
01:02:12,164 --> 01:02:14,385
And when you think you can't break it anymore,

1248
01:02:14,605 --> 01:02:16,205
go and find someone else to break it for you.

1249
01:02:16,685 --> 01:02:17,265
Like Martin Moss.

1250
01:02:17,614 --> 01:02:47,151
Yeah, I can't wait to see him again. You break things. I heard you're really good at this so excellent. I appreciate that it is 629. We don't have time for questions and I don't know short of debugging your games for you, which I don't think we could do in a minute, but please help me. Thank my panelists. There's a lot of good information there. Some of it seems obvious, but we always forget it, and so that's why I really enjoyed having you know having you guys up here. So please help me. Thank Mike and Mike and Mo and Sergio.

