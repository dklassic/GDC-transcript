1
00:00:05,830 --> 00:00:13,016
Hello everyone. Everyone watching this is fired. You can't say I didn't warn you.

2
00:00:16,499 --> 00:00:22,604
Turn off your phones, noisemakers, whatever. I'm going to get into a bit of a rant.

3
00:00:23,525 --> 00:00:31,111
So I've met a lot of programmers in my day, some of them ostensibly professionals, and

4
00:00:32,732 --> 00:00:34,854
And many of them did not meet what

5
00:00:34,994 --> 00:00:38,218
I would consider to be the minimum bar for their job.

6
00:00:38,758 --> 00:00:40,020
And that's what I'm going to be talking about today.

7
00:00:41,761 --> 00:00:43,583
So let's play a little game.

8
00:00:44,945 --> 00:00:46,066
I'm going to go through a bunch of things.

9
00:00:46,566 --> 00:00:50,590
You count up how many you answer yes to.

10
00:00:53,373 --> 00:00:54,674
And sum all those up at the end.

11
00:00:55,055 --> 00:00:55,976
There's going to be 50 things.

12
00:00:58,471 --> 00:01:02,113
These are not, these are just a sample of the 50 things that annoy me, not an exhaustive

13
00:01:02,153 --> 00:01:03,493
list of all the things that annoy me.

14
00:01:05,994 --> 00:01:07,415
But we'll evaluate your score at the end.

15
00:01:07,955 --> 00:01:11,556
So I'll state things in a positive way, you say yes, and then I'll talk about what happens

16
00:01:11,616 --> 00:01:13,417
when, why it annoys me when that goes wrong.

17
00:01:13,977 --> 00:01:15,417
So let's start here.

18
00:01:16,018 --> 00:01:19,079
I can articulate precisely what problem I'm trying to solve.

19
00:01:22,034 --> 00:01:25,057
how often, I can't tell you how often I talk to a programmer,

20
00:01:25,397 --> 00:01:27,639
and they're off in the weeds somewhere.

21
00:01:28,000 --> 00:01:28,840
They're trying to figure out,

22
00:01:28,940 --> 00:01:32,244
they're solving, ostensibly solving some problem,

23
00:01:32,344 --> 00:01:34,626
working on some code, moving some shit around,

24
00:01:34,987 --> 00:01:35,928
changing some things.

25
00:01:36,288 --> 00:01:37,509
What problem are you trying to solve?

26
00:01:37,829 --> 00:01:39,631
What benefit is this to anyone?

27
00:01:40,412 --> 00:01:42,774
But they can't answer that basic question.

28
00:01:42,814 --> 00:01:44,276
So here's a, this is the easy one.

29
00:01:44,436 --> 00:01:45,037
We're starting here.

30
00:01:45,477 --> 00:01:53,780
Like unless you can tell me exactly what problem you're trying to solve. You're just wasting time. It's just noise in the team.

31
00:01:54,920 --> 00:01:59,562
I have actually articulated precisely what problem I'm trying to solve so

33
00:02:00,322 --> 00:02:04,984
Slightly different you think you know what problem you're trying to solve but you can't actually tell me you can't say it out loud

34
00:02:05,024 --> 00:02:06,905
You can't say it in a way that I could even

35
00:02:08,805 --> 00:02:11,646
potentially understand what problem you're trying to solve.

36
00:02:13,207 --> 00:02:14,608
And you have to say it out loud.

37
00:02:15,168 --> 00:02:16,349
I have to be able to hear it.

38
00:02:18,430 --> 00:02:21,031
I have confirmed that someone else can articulate

39
00:02:21,051 --> 00:02:22,172
what problem I'm trying to solve.

40
00:02:23,380 --> 00:02:25,521
You think you know what problem you're trying to solve,

41
00:02:26,541 --> 00:02:30,782
but other people probably have a really different idea of what that problem is.

42
00:02:31,302 --> 00:02:34,443
So how often does it happen that I'm working with a programmer,

43
00:02:34,463 --> 00:02:37,605
I'm working with somebody, and they think they have a pretty good idea

44
00:02:37,625 --> 00:02:38,985
of the problem they were trying to solve.

45
00:02:39,005 --> 00:02:40,545
They deliver it to somebody, and they're like,

46
00:02:40,666 --> 00:02:42,686
I didn't need this. This was not the thing that I needed.

47
00:02:43,246 --> 00:02:46,627
Because they didn't confirm that somebody else understood

48
00:02:46,688 --> 00:02:47,488
what they were talking about.

49
00:02:50,296 --> 00:02:52,940
I can articulate why my problem is important to solve.

50
00:02:54,301 --> 00:02:56,725
So I spent, you know, you will see,

51
00:02:57,486 --> 00:02:59,028
I have seen many programmers say, OK,

52
00:02:59,088 --> 00:03:00,810
I can totally tell you what problem I'm trying to solve.

53
00:03:01,431 --> 00:03:07,199
It's that these equal signs are not lined up correctly in this file.

55
00:03:08,951 --> 00:03:11,712
OK, that's not an actually important problem to solve.

56
00:03:12,953 --> 00:03:13,813
Who does that benefit?

57
00:03:15,334 --> 00:03:17,495
So that's a small example, but how often

58
00:03:17,535 --> 00:03:19,316
do we waste a lot of time solving things

59
00:03:19,336 --> 00:03:20,716
that actually have no value?

60
00:03:21,737 --> 00:03:22,717
So why is it important?

61
00:03:24,638 --> 00:03:27,840
I can articulate how much my problem is worth solving.

62
00:03:29,321 --> 00:03:31,261
So I'm working on a thing.

63
00:03:32,592 --> 00:03:34,674
And how long should I spend on this thing?

64
00:03:36,135 --> 00:03:37,476
As much as long as it takes.

65
00:03:38,137 --> 00:03:41,359
OK, fuck off.

66
00:03:41,860 --> 00:03:43,962
No problem is worth infinite time.

67
00:03:44,302 --> 00:03:47,585
There is a maximum that this problem

68
00:03:47,925 --> 00:03:49,586
is possibly worth solving.

69
00:03:50,307 --> 00:03:51,027
Is it a year?

70
00:03:51,508 --> 00:03:52,068
OK, great.

71
00:03:52,228 --> 00:03:52,889
Is it six months?

72
00:03:52,929 --> 00:03:53,570
Is it a month?

73
00:03:53,590 --> 00:03:54,470
Is it two weeks?

74
00:03:55,331 --> 00:03:56,732
How much is this problem we're solving?

75
00:03:56,832 --> 00:03:59,234
How much manpower and time and effort?

76
00:03:59,554 --> 00:04:00,274
There is a limit.

77
00:04:00,354 --> 00:04:00,755
What is it?

78
00:04:00,835 --> 00:04:03,496
Put some boundary on the value of this problem.

79
00:04:05,358 --> 00:04:09,000
I have a plan B in case my solution to my current problem

80
00:04:09,040 --> 00:04:09,480
doesn't work.

81
00:04:10,941 --> 00:04:13,403
So I get to the end of the project.

82
00:04:14,277 --> 00:04:15,077
We'll get to a demo.

83
00:04:15,097 --> 00:04:17,799
I have to deliver something for E3 or GDC or whatever.

84
00:04:18,520 --> 00:04:21,302
And it's two days before, of course.

85
00:04:22,043 --> 00:04:23,284
And everything is broken.

86
00:04:23,384 --> 00:04:25,105
And I have to say, OK, I have to give up and say,

87
00:04:25,165 --> 00:04:26,906
whatever I was currently working on wasn't going to work.

88
00:04:26,967 --> 00:04:28,187
I have to get that plan B in there.

89
00:04:28,208 --> 00:04:29,769
I have to figure it out.

90
00:04:31,150 --> 00:04:34,232
I didn't have a plan B. So now I'm scrambling

91
00:04:34,272 --> 00:04:35,934
to try to figure it out and blaming everybody else,

92
00:04:35,994 --> 00:04:39,036
blaming project management or whoever put this on the schedule

93
00:04:39,096 --> 00:04:39,616
or all the things.

94
00:04:39,656 --> 00:04:40,317
I'm very angry.

95
00:04:40,677 --> 00:04:42,759
And I'm trying to scramble for a plan B. But the thing is,

96
00:04:44,132 --> 00:04:46,534
I knew that the deadline was coming.

97
00:04:46,634 --> 00:04:49,156
I knew that there was potential risk here.

98
00:04:49,196 --> 00:04:50,877
And yet, I didn't have a plan B in advance.

99
00:04:50,917 --> 00:04:51,658
I didn't prepare for it.

100
00:04:52,799 --> 00:04:53,559
That's a problem.

101
00:04:54,480 --> 00:04:57,903
On top of that, I have already implemented my plan B

102
00:04:58,003 --> 00:05:00,445
in case my solution to my current problem doesn't work.

103
00:05:00,885 --> 00:05:02,447
I know this is risky.

104
00:05:03,027 --> 00:05:04,428
I know that when it comes right down to it,

105
00:05:04,448 --> 00:05:06,370
in those last few days, I'm going to have to do something.

106
00:05:07,671 --> 00:05:09,652
Why didn't I just implement that thing in the first place?

107
00:05:11,123 --> 00:05:15,868
Two things, right? One is, one it's a safety net and everybody else can be confident

108
00:05:15,908 --> 00:05:19,353
because if you wait until the last minute to implement your plan B, you have just added

109
00:05:19,413 --> 00:05:23,037
stress to everyone on the team because they don't know if your plan B is going to work.

110
00:05:23,377 --> 00:05:27,662
So put the plan B in first. The second thing is, you implement your plan B up front.

111
00:05:28,223 --> 00:05:31,665
you probably discover half the time that that's good enough.

112
00:05:32,066 --> 00:05:33,347
Like, it does the job.

113
00:05:33,507 --> 00:05:35,008
I don't actually need to go to plan A.

114
00:05:35,508 --> 00:05:36,929
Or I discover something about my problem

115
00:05:37,429 --> 00:05:41,292
that I didn't anticipate at all, and plan A wasn't going to work.

116
00:05:42,033 --> 00:05:43,294
So put your plan B in first.

117
00:05:44,635 --> 00:05:47,937
I can articulate the steps required to solve my current problem.

118
00:05:48,677 --> 00:05:50,639
So I get to somebody.

119
00:05:52,020 --> 00:05:52,500
I'm stuck.

120
00:05:52,640 --> 00:05:55,302
I don't know why I'm late.

121
00:05:55,342 --> 00:05:57,404
I don't know why I'm not able to deliver this thing.

122
00:05:57,464 --> 00:05:57,564
OK.

123
00:05:58,817 --> 00:06:00,919
What are the steps you need to do in order to solve this problem?

124
00:06:01,439 --> 00:06:01,819
I don't know.

125
00:06:02,480 --> 00:06:03,020
I don't know.

126
00:06:04,321 --> 00:06:07,043
How could you possibly expect to solve the problem

127
00:06:07,063 --> 00:06:08,824
if you don't know what it is that you're trying to do?

128
00:06:08,884 --> 00:06:09,965
Of course that's why you're stuck.

129
00:06:10,485 --> 00:06:11,966
Of course that's why you're spinning your wheels.

130
00:06:12,566 --> 00:06:14,848
You can't actually tell me the individual steps

131
00:06:14,908 --> 00:06:15,669
that you need to take.

132
00:06:15,889 --> 00:06:17,610
Take the time to write those things down.

133
00:06:17,630 --> 00:06:24,234
I can clearly articulate unknowns and risks

134
00:06:24,294 --> 00:06:25,495
associated with my current problem.

135
00:06:26,551 --> 00:06:29,867
uh this is why everyone throws up their hands when you give

136
00:06:30,970 --> 00:06:31,391
Estimates.

137
00:06:31,851 --> 00:06:34,293
Well, I'm just going to multiply all your estimates by 3 or 5 or 100

138
00:06:34,333 --> 00:06:37,535
or whatever, because I have no idea if your estimates have any value.

139
00:06:37,955 --> 00:06:39,156
Because you grouped them all the same.

140
00:06:39,737 --> 00:06:41,378
The things that are low risk, the things that are high risk,

141
00:06:41,398 --> 00:06:42,018
they're all equal.

142
00:06:42,238 --> 00:06:43,719
This is two days, four days, whatever.

143
00:06:43,780 --> 00:06:44,160
I don't know.

144
00:06:44,580 --> 00:06:46,461
That's because you can't articulate actually

145
00:06:46,722 --> 00:06:48,183
what the risks are in your project.

146
00:06:48,203 --> 00:06:49,904
What are the things you don't know about this?

147
00:06:49,924 --> 00:06:51,125
What are the things that you need to study?

148
00:06:51,145 --> 00:06:52,326
What are the things you need to test?

149
00:06:52,606 --> 00:06:53,707
You can't articulate that.

150
00:06:54,187 --> 00:06:56,188
Therefore, you cannot give a reasonable estimate.

151
00:06:58,392 --> 00:07:01,834
I have not thought or said, I can just make up the time

152
00:07:02,154 --> 00:07:03,615
without immediately talking to somebody.

153
00:07:04,216 --> 00:07:06,637
So it's Wednesday on a week.

154
00:07:07,237 --> 00:07:10,339
You have something due to be delivered on a Friday.

155
00:07:10,359 --> 00:07:13,221
On Wednesday, something else drops on your lap,

156
00:07:13,241 --> 00:07:14,862
some bug, something else, whatever.

157
00:07:15,502 --> 00:07:17,843
You think, ah, I can make up the time.

158
00:07:18,926 --> 00:07:19,506
So you work on that.

159
00:07:19,787 --> 00:07:20,407
You get to Friday.

160
00:07:20,587 --> 00:07:23,089
Of course, as always, you didn't make up the time.

161
00:07:24,329 --> 00:07:24,930
And the thing is late.

162
00:07:25,190 --> 00:07:27,251
At that point on that Friday, somebody comes to you

163
00:07:27,271 --> 00:07:27,872
and says, where's the thing?

164
00:07:27,912 --> 00:07:30,013
Well, I couldn't do it because this thing dropped on my lap

165
00:07:30,053 --> 00:07:32,074
on Wednesday, and it got behind, and all the things.

166
00:07:32,935 --> 00:07:35,557
All right, you knew that on Wednesday, right?

167
00:07:35,657 --> 00:07:37,378
You knew that happened on Wednesday.

168
00:07:37,498 --> 00:07:38,398
That was not a mystery.

169
00:07:38,418 --> 00:07:40,140
It was not a surprise that that happened.

170
00:07:40,180 --> 00:07:41,781
And in fact, you had all the information

171
00:07:41,821 --> 00:07:43,482
you needed to know to know that on Wednesday.

172
00:07:43,842 --> 00:07:45,983
The problem is you thought you could make up the time.

173
00:07:47,074 --> 00:07:48,836
On Wednesday, you should have told somebody about it.

174
00:07:51,300 --> 00:07:54,625
I write a framework and have used it multiple times

175
00:07:54,665 --> 00:07:57,189
to actually solve a problem that it was intended to solve.

176
00:07:57,669 --> 00:07:57,850
So.

177
00:07:58,909 --> 00:08:01,310
I could get into a rant separately about frameworks,

178
00:08:01,890 --> 00:08:05,991
which are usually an excuse to kick a problem down the road

179
00:08:06,011 --> 00:08:07,171
to get somebody else to solve it.

180
00:08:08,572 --> 00:08:10,472
But let's be generous and say you're

181
00:08:10,492 --> 00:08:12,973
building a utility of some kind that's actually useful.

182
00:08:14,033 --> 00:08:16,634
Have you actually verified that it does the job that it

183
00:08:16,654 --> 00:08:18,694
was intended to do, or are you just waiting for somebody else

184
00:08:18,774 --> 00:08:19,255
to do that?

185
00:08:20,175 --> 00:08:21,675
If you haven't actually proven it works,

186
00:08:23,056 --> 00:08:26,237
how is anybody else supposed to trust it?

187
00:08:28,812 --> 00:08:30,813
I can articulate the test for completion

188
00:08:30,833 --> 00:08:35,416
of what the test of completion from what my current problem is.

189
00:08:35,857 --> 00:08:36,597
How do I know when it's done?

190
00:08:38,539 --> 00:08:39,960
How often do I talk to a programmer?

191
00:08:39,980 --> 00:08:40,900
I don't know.

192
00:08:40,960 --> 00:08:41,741
When is this going to be done?

193
00:08:41,801 --> 00:08:42,281
How good is it?

194
00:08:42,402 --> 00:08:43,242
Well, it needs to be faster.

195
00:08:43,342 --> 00:08:44,263
How much faster is that?

196
00:08:44,663 --> 00:08:44,883
10% faster?

197
00:08:47,079 --> 00:08:47,900
10 milliseconds faster?

198
00:08:47,980 --> 00:08:49,482
Like, how much faster is faster?

199
00:08:49,502 --> 00:08:50,222
It needs to be smaller.

200
00:08:51,103 --> 00:08:51,964
One byte smaller?

201
00:08:52,986 --> 00:08:53,686
10 megabytes smaller?

202
00:08:53,726 --> 00:08:54,447
How much is smaller?

203
00:08:54,507 --> 00:08:56,009
How do you know when you've crossed the line

204
00:08:56,029 --> 00:08:57,311
and when enough is enough?

205
00:08:58,212 --> 00:08:59,753
You don't have infinite space here.

206
00:08:59,814 --> 00:09:00,554
Like, there's a limit.

207
00:09:00,695 --> 00:09:01,255
What is the limit?

208
00:09:04,057 --> 00:09:06,740
I can articulate the hypothesis related to my problem

209
00:09:07,140 --> 00:09:08,281
and how I can falsify it.

210
00:09:09,222 --> 00:09:10,463
So what am I trying to prove?

211
00:09:10,623 --> 00:09:12,285
I'm trying to prove that it's faster, cheaper.

212
00:09:12,305 --> 00:09:13,566
I'm trying to prove that it's more usable.

213
00:09:13,626 --> 00:09:15,047
I'm trying to prove that it's fun, whatever.

214
00:09:15,327 --> 00:09:17,009
I have a hypothesis.

215
00:09:17,129 --> 00:09:18,250
If I put this in, it's going to be more fun.

216
00:09:19,391 --> 00:09:22,594
But I spend all my time looking at the positive numbers.

217
00:09:24,456 --> 00:09:25,757
This is how fast it is.

218
00:09:25,777 --> 00:09:26,898
This is how fun it is, whatever.

219
00:09:27,238 --> 00:09:29,981
And I'm not looking for how I can prove it wrong.

220
00:09:30,885 --> 00:09:32,406
And that's what we need to be looking for, right?

221
00:09:32,446 --> 00:09:33,926
That's the scientific method.

222
00:09:33,946 --> 00:09:35,206
You have to be looking how you can prove,

223
00:09:35,426 --> 00:09:36,947
how you can possibly prove this wrong.

224
00:09:37,627 --> 00:09:38,567
Who could prove it wrong?

225
00:09:38,907 --> 00:09:40,808
You have no way, if you haven't even thought about

226
00:09:40,888 --> 00:09:43,348
how it can be proved, your hypothesis can be proved wrong,

227
00:09:43,588 --> 00:09:44,489
you're doing it wrong.

228
00:09:44,509 --> 00:09:48,470
I can articulate the various latency requirements

229
00:09:48,490 --> 00:09:49,270
for my current problem.

230
00:09:50,250 --> 00:09:52,671
So, say, somebody's working on a system,

231
00:09:52,691 --> 00:09:53,951
I say, how long?

232
00:09:55,469 --> 00:09:57,910
How long until somebody else needs this data?

233
00:09:58,090 --> 00:09:58,871
Like I'm writing a function.

234
00:09:58,911 --> 00:10:00,631
How long until somebody else needs this data?

235
00:10:00,751 --> 00:10:01,092
I don't know.

236
00:10:01,212 --> 00:10:01,552
Right now.

237
00:10:02,312 --> 00:10:03,393
Right now is not an answer.

238
00:10:03,473 --> 00:10:03,913
Fuck off.

239
00:10:03,933 --> 00:10:06,674
Like that's immediate latency for all the things.

240
00:10:06,754 --> 00:10:09,815
So your system is going to be just blocked on the main thread

241
00:10:09,855 --> 00:10:11,216
and blocking everybody else on the main thread.

242
00:10:11,256 --> 00:10:12,457
That's your answer to all the things.

243
00:10:12,717 --> 00:10:14,037
Immediate latency for all the things.

244
00:10:14,657 --> 00:10:14,838
No.

245
00:10:15,278 --> 00:10:18,079
That is absolutely not the answer, right?

246
00:10:18,119 --> 00:10:19,400
You have latency requirements.

247
00:10:19,420 --> 00:10:20,620
There are latency requirements.

248
00:10:20,660 --> 00:10:22,001
Not everybody needs everything that you're

249
00:10:22,141 --> 00:10:24,822
In the next possible step.

250
00:10:25,462 --> 00:10:29,187
right? What is the requirement? When do they actually need it? If you can't reason about

251
00:10:29,227 --> 00:10:35,013
it, you can't solve the problem. I can articulate the various throughput requirements for my

252
00:10:35,053 --> 00:10:39,618
current problem. How much do you need to push through the system? This is a basic question.

253
00:10:40,359 --> 00:10:42,882
Is it really just one spinning cube?

254
00:10:43,641 --> 00:10:44,321
Probably not.

255
00:10:45,622 --> 00:10:46,322
Is it one thing?

256
00:10:46,382 --> 00:10:47,063
Is it 10 things?

257
00:10:47,123 --> 00:10:47,883
Is it 1,000 things?

258
00:10:47,943 --> 00:10:48,844
Is it 10,000 things?

259
00:10:48,904 --> 00:10:49,644
Is it a million things?

260
00:10:49,724 --> 00:10:50,084
What is it?

261
00:10:50,725 --> 00:10:52,005
What is the throughput that actually

262
00:10:52,025 --> 00:10:53,086
needs to be pushed through the system?

263
00:10:53,426 --> 00:10:54,467
And what are the constraints of that?

264
00:10:54,507 --> 00:10:55,907
You need to be able to articulate that.

265
00:10:58,609 --> 00:11:02,031
I can articulate the most common concrete use case

266
00:11:02,071 --> 00:11:03,211
of the system I'm developing.

267
00:11:03,451 --> 00:11:06,073
This presupposes, when I'm sitting down with a programmer,

268
00:11:06,093 --> 00:11:08,774
that they can articulate any use case of the system

269
00:11:08,794 --> 00:11:09,515
that they're developing.

270
00:11:10,115 --> 00:11:10,715
But let's say they can.

271
00:11:12,112 --> 00:11:13,013
What's the most common thing?

272
00:11:13,093 --> 00:11:15,255
What's the most common thing that somebody

273
00:11:15,275 --> 00:11:16,716
is going to do with your system?

274
00:11:17,116 --> 00:11:18,557
Well, the most common thing is that they're

275
00:11:18,577 --> 00:11:23,081
going to be processing all the players in the game.

276
00:11:23,281 --> 00:11:23,501
Great.

277
00:11:23,701 --> 00:11:24,262
How many is that?

278
00:11:24,462 --> 00:11:24,862
I don't know.

279
00:11:24,902 --> 00:11:26,123
It's somewhere between 10 and 100.

280
00:11:26,203 --> 00:11:26,684
Great.

281
00:11:26,964 --> 00:11:28,605
So why does this function only take one thing?

282
00:11:30,587 --> 00:11:31,868
That's not your most common case.

283
00:11:32,649 --> 00:11:34,310
You've just told me your most common case

284
00:11:34,810 --> 00:11:37,032
is n number greater than 1, and yet you've

285
00:11:37,072 --> 00:11:39,534
developed an API around one thing.

286
00:11:40,515 --> 00:11:41,195
Why are you doing that?

287
00:11:44,019 --> 00:11:47,141
I know the most common actual real-life values of the data

288
00:11:47,181 --> 00:11:47,961
I am transforming.

289
00:11:49,182 --> 00:11:51,484
So somebody's solving a problem.

290
00:11:51,744 --> 00:11:52,885
What does the data look like?

291
00:11:52,925 --> 00:11:53,245
I don't know.

292
00:11:53,305 --> 00:11:53,646
It looks like.

293
00:11:54,438 --> 00:11:55,198
You know, it's an int.

294
00:11:55,618 --> 00:11:57,179
Could be anything.

295
00:11:57,339 --> 00:11:57,899
Could be anything.

296
00:11:58,579 --> 00:11:59,579
Or it can't be anything.

297
00:11:59,820 --> 00:12:01,620
There's some actual values that are actually

298
00:12:01,680 --> 00:12:02,300
coming through here.

299
00:12:03,321 --> 00:12:04,041
What do they look like?

300
00:12:04,261 --> 00:12:05,121
What's the most common things?

301
00:12:05,141 --> 00:12:08,042
Well, I've created this system that adds all these numbers

302
00:12:08,062 --> 00:12:08,402
together.

303
00:12:08,702 --> 00:12:08,963
Great.

304
00:12:09,063 --> 00:12:11,323
But in real life, 99% of those numbers are 0.

305
00:12:11,883 --> 00:12:13,504
So we're still wasting a bunch of time.

306
00:12:13,544 --> 00:12:15,885
What are the actual numbers that you're actually dealing with?

307
00:12:17,825 --> 00:12:20,526
I know the acceptable ranges of all the values of the data

308
00:12:20,546 --> 00:12:21,847
that I am transforming.

309
00:12:22,867 --> 00:12:23,007
So.

310
00:12:24,178 --> 00:12:28,339
Somebody says, it can get infinitely large.

311
00:12:28,359 --> 00:12:29,639
You can do anything with this.

312
00:12:29,719 --> 00:12:30,799
It can do anything.

313
00:12:30,819 --> 00:12:33,320
OK, great, really, it can't.

314
00:12:34,460 --> 00:12:36,761
You can't fit infinity into your 32-bit int.

315
00:12:37,181 --> 00:12:41,502
Your file size value is 32 bits, so it's not

316
00:12:41,522 --> 00:12:42,502
going to get any bigger than that.

317
00:12:42,542 --> 00:12:44,643
You have built-in limitations into your system.

318
00:12:44,703 --> 00:12:45,363
What are they?

319
00:12:46,023 --> 00:12:48,363
Articulate them in a way that other people can understand.

320
00:12:51,164 --> 00:12:55,775
I can articulate what will happen when, somehow, data outside those ranges enters the system.

321
00:12:57,213 --> 00:12:58,293
So it's inevitable.

322
00:12:58,653 --> 00:12:59,294
It's going to happen.

323
00:12:59,334 --> 00:13:00,274
You have a range of things.

324
00:13:00,294 --> 00:13:01,475
You have an acceptable range of things.

325
00:13:01,935 --> 00:13:03,876
Somehow, something is going to get in that's not

326
00:13:03,956 --> 00:13:05,056
inside that acceptable range.

327
00:13:05,116 --> 00:13:07,037
I have 32-bit file size, for instance.

328
00:13:07,057 --> 00:13:08,678
Somebody drops in a gigantic file

329
00:13:08,698 --> 00:13:09,678
that they've exported from Maya.

330
00:13:10,338 --> 00:13:10,539
Great.

331
00:13:11,179 --> 00:13:11,739
What happens?

332
00:13:12,259 --> 00:13:13,340
Does your machine crash?

333
00:13:13,660 --> 00:13:16,621
Does everything fail?

334
00:13:16,661 --> 00:13:18,922
Do you get a nice error message that says this is too big?

335
00:13:19,022 --> 00:13:21,043
What happens when this happens?

336
00:13:22,424 --> 00:13:24,705
You should have a pretty good idea of what's going to happen.

337
00:13:25,599 --> 00:13:26,300
and not just hope.

338
00:13:26,860 --> 00:13:29,161
Developing based on hope that it will never happen

339
00:13:29,641 --> 00:13:31,342
is not good engineering practice.

340
00:13:34,284 --> 00:13:35,865
I can articulate a list of input data

341
00:13:35,985 --> 00:13:38,266
into my system roughly sorted by likelihood.

342
00:13:38,346 --> 00:13:41,007
Again, that you can articulate any input data is a start.

343
00:13:41,527 --> 00:13:43,869
But that I can say, this is the most likely thing

344
00:13:43,889 --> 00:13:44,829
that I'm going to see.

345
00:13:44,849 --> 00:13:49,051
I'm going to see a set of static.

346
00:13:49,512 --> 00:13:51,092
you know, set of static things in the world.

347
00:13:51,112 --> 00:13:52,293
That's the most likely thing.

348
00:13:52,333 --> 00:13:53,733
The next most likely thing is I have

349
00:13:53,753 --> 00:13:55,494
a bunch of characters running around

350
00:13:55,814 --> 00:13:57,114
in terms of transforms, whatever.

351
00:13:57,174 --> 00:13:59,935
I can roughly sort my data based on likelihood.

352
00:14:00,335 --> 00:14:00,556
Great.

353
00:14:00,656 --> 00:14:01,436
Now you solve for that.

354
00:14:01,496 --> 00:14:03,116
Starting at the most common thing, solve for that.

355
00:14:03,136 --> 00:14:04,557
Next most common thing, solve for that.

356
00:14:06,158 --> 00:14:08,898
I know the frequency of change of the actual real life values

357
00:14:08,918 --> 00:14:10,059
of the data I'm transforming.

358
00:14:10,919 --> 00:14:14,020
So I could recalculate this thing every frame, every frame, every frame. Great.

359
00:14:14,100 --> 00:14:15,481
That only changes once a second.

360
00:14:15,961 --> 00:14:18,742
That only changes once every once in a while when this other thing changes.

361
00:14:18,782 --> 00:14:20,403
Why are we recalculating this every frame?

362
00:14:20,643 --> 00:14:21,964
It's because you haven't reasoned about

363
00:14:21,984 --> 00:14:24,985
what the frequency of change actually is

364
00:14:25,025 --> 00:14:26,606
and the actual values that you're dealing with.

365
00:14:27,766 --> 00:14:29,507
I have, at least partially,

366
00:14:29,967 --> 00:14:33,049
read the available documentation for the hardware platform and tools

367
00:14:33,949 --> 00:14:35,190
I most commonly use.

368
00:14:37,602 --> 00:14:40,962
So you have somebody who's been working, say, on a platform,

369
00:14:41,703 --> 00:14:46,543
let's say desktop platform, x64, for the last 10 years.

370
00:14:47,124 --> 00:14:47,364
Great.

371
00:14:48,184 --> 00:14:49,344
Mostly hasn't changed.

372
00:14:49,484 --> 00:14:53,245
It's mostly the same, roughly the same CPU family.

373
00:14:53,765 --> 00:14:55,945
And yet, you've never cracked the manual.

374
00:14:56,125 --> 00:14:58,466
So when things come open, you're like, I can't read that.

375
00:14:58,506 --> 00:14:59,906
I don't know what that assembly instruction does.

376
00:14:59,946 --> 00:15:01,826
That assembly structure hasn't changed in 20 years.

377
00:15:02,106 --> 00:15:03,967
You've had plenty of time to look up what it is.

378
00:15:04,987 --> 00:15:05,787
Read the manual.

379
00:15:07,511 --> 00:15:09,892
I have sat and watched the actual user of my system.

380
00:15:11,593 --> 00:15:12,854
So you can guess.

381
00:15:13,675 --> 00:15:15,796
Sometimes you might be able to read a form somebody bitching,

382
00:15:15,816 --> 00:15:17,297
but unless you sit down behind someone

383
00:15:17,317 --> 00:15:18,758
and actually watch them use it and actually

384
00:15:18,798 --> 00:15:21,759
watch them complain and gripe and work around all the things

385
00:15:21,779 --> 00:15:24,141
that you broke, you don't actually know what's happening.

386
00:15:25,662 --> 00:15:31,805
I know the slowest part of the user of my system's workflow

387
00:15:31,825 --> 00:15:32,366
with high confidence.

388
00:15:32,386 --> 00:15:32,446
So.

389
00:15:36,732 --> 00:15:39,234
So you just had a tool, and I thought, well, that tool's

390
00:15:39,254 --> 00:15:39,595
really slow.

391
00:15:39,615 --> 00:15:41,676
So I threw away the tool, and I said, I'm creating a new

392
00:15:41,696 --> 00:15:43,338
system, and this system's going to be way faster.

393
00:15:43,558 --> 00:15:45,640
The only problem is that it requires them to write this

394
00:15:46,300 --> 00:15:48,102
two-megabyte JSON file by hand.

395
00:15:49,103 --> 00:15:49,343
Great.

396
00:15:49,643 --> 00:15:51,565
That is now the slowest part of their workflow.

397
00:15:53,428 --> 00:15:55,288
I know what information users of my system

398
00:15:55,309 --> 00:15:57,109
will need to make effective use of the solution.

399
00:15:57,129 --> 00:15:57,829
So I've built a thing.

400
00:15:58,009 --> 00:16:00,890
I've said, OK, all the artists need to do is optimize this.

401
00:16:01,011 --> 00:16:01,231
Great.

402
00:16:01,411 --> 00:16:03,111
They have absolutely no profiling information.

403
00:16:03,711 --> 00:16:05,792
How do you expect them to optimize this?

404
00:16:06,072 --> 00:16:08,033
You're not giving them the information that they need.

405
00:16:09,473 --> 00:16:11,714
I can articulate the finite set of hardware

406
00:16:11,754 --> 00:16:13,815
I'm designing my solution for.

407
00:16:15,095 --> 00:16:17,136
Is this solution supposed to work on a 6502?

408
00:16:18,647 --> 00:16:19,308
Probably not.

409
00:16:19,689 --> 00:16:19,909
OK.

410
00:16:20,149 --> 00:16:22,654
So there is a piece of hardware that this is not going to work on.

411
00:16:22,794 --> 00:16:23,015
Great.

412
00:16:23,095 --> 00:16:23,636
Let's start there.

413
00:16:23,977 --> 00:16:25,519
What hardware is it supposed to work on?

414
00:16:26,501 --> 00:16:28,405
OK, desktop platforms within this range.

415
00:16:28,505 --> 00:16:28,705
Great.

416
00:16:28,906 --> 00:16:29,928
We can reason about that.

417
00:16:31,272 --> 00:16:34,193
Which brings us to, I can articulate

418
00:16:34,253 --> 00:16:36,153
how that set of hardware specifically

419
00:16:36,193 --> 00:16:37,534
affects the design of my system.

420
00:16:37,994 --> 00:16:38,974
So I have a set of hardware.

421
00:16:39,214 --> 00:16:40,634
There are requirements in the hardware.

422
00:16:40,955 --> 00:16:42,495
There are things that the hardware does.

423
00:16:42,575 --> 00:16:43,615
How does that affect your system?

424
00:16:43,675 --> 00:16:45,236
How has that affected your system?

425
00:16:45,536 --> 00:16:48,496
If you can't tell me how it affects your system,

426
00:16:48,516 --> 00:16:51,197
then you are just blindly developing in an ether.

427
00:16:51,697 --> 00:16:54,199
You need to tell me how the fact that this has SIMD,

428
00:16:54,239 --> 00:16:56,241
how the fact that this even has an FPU,

429
00:16:56,741 --> 00:16:58,703
how that has affected your design in some way.

430
00:16:58,723 --> 00:17:00,004
You've chosen floating point because there's

431
00:17:00,044 --> 00:17:00,804
a floating point unit.

432
00:17:00,884 --> 00:17:03,326
That is a clear, indirect, and trivial example

433
00:17:03,366 --> 00:17:05,127
of how hardware affects your design.

434
00:17:07,189 --> 00:17:09,651
I recently profiled the performance of my system.

435
00:17:10,832 --> 00:17:11,973
The bar here is recently.

436
00:17:12,093 --> 00:17:14,354
The bar is not never or I have once.

437
00:17:16,596 --> 00:17:17,617
Have you profiled it?

438
00:17:18,057 --> 00:17:19,338
Have you looked and see what happens?

439
00:17:20,371 --> 00:17:22,715
I have recently profiled memory usage on my system.

440
00:17:22,975 --> 00:17:23,736
We've run out of memory.

441
00:17:23,776 --> 00:17:24,337
I don't know why.

442
00:17:24,357 --> 00:17:26,260
That's solvable.

443
00:17:27,101 --> 00:17:27,482
Just look.

444
00:17:30,042 --> 00:17:33,843
I have used multiple different profiling methods to measure performance on my system.

445
00:17:33,923 --> 00:17:37,084
One thing I'd like to bitch about is FPS is not a measure of profiling.

446
00:17:37,464 --> 00:17:38,564
Stop doing that bullshit.

447
00:17:39,144 --> 00:17:43,065
Like, actually measure in milliseconds or any kind of real time

448
00:17:43,345 --> 00:17:44,806
how long something takes.

449
00:17:45,126 --> 00:17:46,846
And then use different methods to do it.

450
00:17:46,866 --> 00:17:50,287
As far as I know, maybe somebody here can correct me.

451
00:17:50,347 --> 00:17:52,488
As far as I know, there's no perfect profiling tool.

452
00:17:52,848 --> 00:17:55,229
Every different profiler, sampling profiler, other profilers

453
00:17:55,269 --> 00:17:57,489
are going to give you a different insight into your data.

454
00:17:57,669 --> 00:17:58,310
Use more than one.

455
00:17:59,521 --> 00:18:02,808
I know how to significantly improve the performance of my system

456
00:18:02,828 --> 00:18:05,995
without changing the input-output interface of the system.

457
00:18:06,375 --> 00:18:08,239
Is your system optimizable?

458
00:18:09,339 --> 00:18:10,939
Is there a way to get from here to there?

459
00:18:11,459 --> 00:18:13,560
Or have you painted yourself into a goddamn corner

460
00:18:13,580 --> 00:18:14,860
that you're never going to get out of?

461
00:18:15,240 --> 00:18:17,160
I've just allocated all the things because whatever,

462
00:18:17,200 --> 00:18:18,621
I'll optimize it at the end.

463
00:18:18,721 --> 00:18:19,301
There's no end.

464
00:18:19,361 --> 00:18:21,241
There's no place where that's ever going to happen.

465
00:18:21,521 --> 00:18:25,062
You've just created this memory spaghetti

466
00:18:25,082 --> 00:18:26,862
of all the different things, all the different allocations.

467
00:18:26,882 --> 00:18:30,203
There's no possible way we can undo that without changing

468
00:18:30,323 --> 00:18:31,583
all the interfaces to the system.

469
00:18:31,963 --> 00:18:33,843
Or I've returned a value.

470
00:18:33,863 --> 00:18:35,164
To go back to the latency point, I've

471
00:18:35,244 --> 00:18:37,144
had a function that immediately returns a value.

472
00:18:37,384 --> 00:18:37,904
Unfixable.

473
00:18:38,484 --> 00:18:39,185
Zero latency.

474
00:18:39,405 --> 00:18:40,565
Everybody's going to call that function.

475
00:18:40,585 --> 00:18:43,227
It needs that value right there, because you built it in so

476
00:18:43,247 --> 00:18:45,147
that it has zero latency requirement.

477
00:18:46,988 --> 00:18:50,910
I know specifically how I can and will debug live release

478
00:18:50,970 --> 00:18:53,011
builds of my work when they fail.

479
00:18:53,772 --> 00:18:55,112
So some presumptions in there.

480
00:18:55,833 --> 00:18:56,393
They will fail.

481
00:18:56,413 --> 00:18:57,373
It's a promise.

482
00:18:57,474 --> 00:18:58,034
That happens.

483
00:18:58,094 --> 00:18:58,954
Of course it happens.

484
00:19:00,075 --> 00:19:02,216
But I know how to debug a live release build,

485
00:19:02,436 --> 00:19:03,136
whatever that means.

486
00:19:03,256 --> 00:19:04,657
I do not need to be.

487
00:19:05,586 --> 00:19:10,391
in a debug build, in a debugger, with source code.

488
00:19:10,451 --> 00:19:12,513
Like, that's great when you have it.

489
00:19:13,174 --> 00:19:16,498
But it's necessary to solve the problem when you don't.

490
00:19:18,200 --> 00:19:21,524
I know what data I'm reading as part of my solution

491
00:19:21,624 --> 00:19:22,405
and where it comes from.

492
00:19:23,950 --> 00:19:25,330
I have actually written that down.

493
00:19:25,370 --> 00:19:26,011
I've organized it.

494
00:19:26,111 --> 00:19:28,672
I can reason about where I'm getting the data from.

495
00:19:28,692 --> 00:19:32,193
Because if I say, hey, how do we make your system parallel?

496
00:19:32,873 --> 00:19:34,894
I have no idea, because I have no idea what data I'm reading

497
00:19:34,954 --> 00:19:35,754
or where it comes from.

498
00:19:36,114 --> 00:19:36,955
So now it's impossible.

499
00:19:37,015 --> 00:19:38,595
Now we're stuck in a place where you're just

500
00:19:38,635 --> 00:19:39,776
stuck in the main thread forever,

501
00:19:39,816 --> 00:19:40,996
because you've never reasoned about where

502
00:19:41,016 --> 00:19:41,757
your data is coming from.

503
00:19:43,451 --> 00:19:48,075
I know how often I'm reading data that I do not need as part of my solution.

504
00:19:48,856 --> 00:19:50,397
So I'm reading in some data.

505
00:19:50,517 --> 00:19:52,439
I'm reading in 90% of that data is useless.

506
00:19:52,499 --> 00:19:53,280
I'm not using it.

507
00:19:53,320 --> 00:19:56,363
I'm reading in every piece of information that I read.

508
00:19:56,403 --> 00:19:58,424
I'm throwing away the vast majority of the cache line

509
00:19:58,444 --> 00:20:00,126
that I'm actually reading in because I don't

510
00:20:00,166 --> 00:20:01,267
need that piece of information.

511
00:20:01,727 --> 00:20:06,432
So I'm wasting most of the memory bandwidth of the machine I'm using.

512
00:20:06,612 --> 00:20:07,392
I can't reason about it.

513
00:20:07,513 --> 00:20:08,634
But unless I can actually.

514
00:20:09,474 --> 00:20:10,935
Say how much I'm wasting.

515
00:20:11,255 --> 00:20:12,416
And maybe that's a reason trade-off.

516
00:20:12,436 --> 00:20:14,698
OK, I'm going to waste half my cash line because of reasons.

517
00:20:15,218 --> 00:20:17,040
Fine, but at least you can reason about it.

518
00:20:17,080 --> 00:20:18,701
Unless you can tell me how much you're wasting,

519
00:20:18,881 --> 00:20:20,242
we can't do anything about it.

520
00:20:21,923 --> 00:20:24,625
I know what data I'm writing as part of my solution

521
00:20:24,685 --> 00:20:25,425
and where it is used.

522
00:20:25,545 --> 00:20:26,226
Who's using this?

523
00:20:26,326 --> 00:20:27,047
When is it used?

524
00:20:27,187 --> 00:20:27,867
How is it used?

525
00:20:28,347 --> 00:20:29,848
Again, what the latency requirements are.

526
00:20:30,269 --> 00:20:31,750
Can you reason about this at all?

527
00:20:31,770 --> 00:20:33,471
Or are you just writing arbitrarily

528
00:20:33,491 --> 00:20:36,533
anywhere in your system, and you have no organization at all?

529
00:20:36,713 --> 00:20:38,575
The expectation is that you are organized.

530
00:20:40,232 --> 00:20:42,473
I know how often I'm writing data that I do not

531
00:20:42,513 --> 00:20:44,293
need as part of my solution.

532
00:20:44,313 --> 00:20:45,534
So I'm writing extra things.

533
00:20:45,574 --> 00:20:47,955
I'm writing things that are always the same thing.

534
00:20:48,635 --> 00:20:50,175
Again, unless I can reason about it and say,

535
00:20:50,195 --> 00:20:52,076
I've actually looked at the data, saved it out,

536
00:20:52,116 --> 00:20:53,116
looked at it, and say, hey, you know what?

537
00:20:53,156 --> 00:20:54,437
I write that every single time.

538
00:20:54,497 --> 00:20:55,437
It's always the same thing.

539
00:20:55,997 --> 00:20:59,178
Or I have this giant system that essentially amounts to a lerp.

540
00:20:59,718 --> 00:21:01,539
How would we cut away all that data

541
00:21:01,559 --> 00:21:03,799
that you're writing that you don't need and just do the lerp?

542
00:21:03,999 --> 00:21:05,080
But I can't reason about it unless you

543
00:21:05,120 --> 00:21:06,040
can tell me what you're writing.

544
00:21:07,701 --> 00:21:08,701
I can articulate how.

545
00:21:09,876 --> 00:21:11,837
All the data I use is laid out in memory.

546
00:21:12,317 --> 00:21:15,278
I don't just rely on some magical memory management

547
00:21:15,298 --> 00:21:17,958
to just put magical things in magical RAM.

548
00:21:18,539 --> 00:21:19,319
That's not how it works.

549
00:21:19,399 --> 00:21:20,739
It's this real memory that you really

550
00:21:20,759 --> 00:21:21,880
need to manage that you're actually

551
00:21:21,920 --> 00:21:23,300
responsible for as a developer.

552
00:21:25,661 --> 00:21:30,402
Your players require you to have a consistent setup

553
00:21:30,442 --> 00:21:30,882
in your game.

554
00:21:31,683 --> 00:21:34,703
It needs to be consistently working and consistently

555
00:21:34,743 --> 00:21:35,624
as small as possible.

556
00:21:36,584 --> 00:21:38,665
That's on you, not on some magic system.

557
00:21:40,088 --> 00:21:42,509
I never use the phrase platform independent

558
00:21:42,709 --> 00:21:45,790
when referring to my work, because there's no such thing

559
00:21:45,810 --> 00:21:46,870
as platform independent.

560
00:21:47,750 --> 00:21:49,271
I never use the phrase future-proof

561
00:21:49,711 --> 00:21:51,992
when referring to my work, because there's

562
00:21:52,032 --> 00:21:53,232
no such thing as future-proof.

563
00:21:54,173 --> 00:21:55,993
It is 100% a fool's errand.

564
00:21:56,453 --> 00:21:58,014
How do you expect to solve a problem

565
00:21:58,034 --> 00:22:00,035
that you have no idea what that problem is?

566
00:22:00,055 --> 00:22:01,375
You can't pre-solve problems that you

567
00:22:01,395 --> 00:22:02,255
have no information about.

568
00:22:02,275 --> 00:22:05,816
I can schedule my own time well.

569
00:22:07,230 --> 00:22:07,811
All right, how many?

570
00:22:08,711 --> 00:22:10,032
I don't know how many programmers.

571
00:22:11,172 --> 00:22:12,553
This is a mess of scheduling.

572
00:22:12,613 --> 00:22:13,513
I don't know what I'm doing.

573
00:22:13,533 --> 00:22:14,354
I don't know when I'm doing it.

574
00:22:14,374 --> 00:22:15,575
I don't know how to organize my time.

575
00:22:16,055 --> 00:22:17,155
You're an adult person.

576
00:22:17,535 --> 00:22:19,456
Just use a calendar.

577
00:22:19,476 --> 00:22:24,239
I am vigilant about not wasting other people's time.

578
00:22:25,160 --> 00:22:26,101
So there's two sides to this.

579
00:22:26,281 --> 00:22:29,283
One is, if you could have looked this up in five seconds

580
00:22:29,383 --> 00:22:31,825
on Google, why bother the whole team about it?

581
00:22:31,845 --> 00:22:33,126
That's one side.

582
00:22:33,447 --> 00:22:36,829
The other side is, if you spent two weeks futzing with this

583
00:22:37,030 --> 00:22:38,951
when it could have been solved by somebody in your team

584
00:22:39,071 --> 00:22:41,213
in five minutes, you're wasting their time,

585
00:22:41,233 --> 00:22:42,794
because now they're going to have to help you catch up

586
00:22:42,874 --> 00:22:43,515
after two weeks.

587
00:22:43,775 --> 00:22:44,956
So find that sweet spot.

588
00:22:45,056 --> 00:22:46,978
Maybe that's 15 minutes, maybe it's 30, whatever.

589
00:22:47,018 --> 00:22:47,758
Find the sweet spot.

590
00:22:48,619 --> 00:22:51,722
I actively seek constructive feedback and take it seriously.

591
00:22:51,822 --> 00:22:54,264
I have a way of actually asking people for feedback.

592
00:22:54,985 --> 00:22:56,306
And then I do something about it.

593
00:22:57,787 --> 00:23:01,829
I am not actively avoiding any uncomfortable professional conversations.

594
00:23:01,949 --> 00:23:03,209
There's something wrong with the system.

595
00:23:03,850 --> 00:23:05,110
I'm not just keeping that to myself.

596
00:23:05,170 --> 00:23:06,251
I'm actually going to somebody and saying,

597
00:23:06,271 --> 00:23:07,071
there's something wrong here.

598
00:23:07,091 --> 00:23:08,152
We need to do something about it.

599
00:23:08,972 --> 00:23:12,194
I'm not actively avoiding any professional conflicts.

600
00:23:12,714 --> 00:23:13,395
Similar kind of thing.

601
00:23:13,415 --> 00:23:14,315
There's something going wrong.

602
00:23:14,355 --> 00:23:15,336
These people aren't talking.

603
00:23:15,356 --> 00:23:16,576
These things aren't communicating.

604
00:23:16,616 --> 00:23:17,817
I'm actually doing something about it.

605
00:23:19,017 --> 00:23:22,239
I consistently interact with other professionals professionally.

606
00:23:23,579 --> 00:23:26,141
Which means, like, I'm going to set the bar really, really low here.

607
00:23:26,861 --> 00:23:27,442
No yelling.

608
00:23:28,002 --> 00:23:28,642
No hitting.

609
00:23:29,143 --> 00:23:35,887
Like, let's just set, I'm painting the bar on the floor.

610
00:23:35,907 --> 00:23:40,390
I can articulate what I believe others should expect from me.

611
00:23:40,710 --> 00:23:42,091
So a lot of people are waiting for other people

612
00:23:42,111 --> 00:23:43,392
to tell them what those expectations are.

613
00:23:43,492 --> 00:23:44,473
Here's what I expect of you.

614
00:23:44,493 --> 00:23:47,755
All right, how about you tell me, what should I expect from you?

615
00:23:47,835 --> 00:23:48,756
Can you articulate that?

616
00:23:50,265 --> 00:23:54,848
I do not require multiple reminders to respond to a request or to complete work.

617
00:23:54,948 --> 00:23:56,368
Again, you are all adult people.

618
00:23:57,889 --> 00:24:01,892
Waiting for somebody else to poke you is not an effective way of getting your job done.

619
00:24:02,892 --> 00:24:07,495
I pursue opportunities to return value to the commons when appropriate.

620
00:24:07,715 --> 00:24:10,577
You're all here because of the work that you've built upon other people.

621
00:24:10,617 --> 00:24:15,620
You have taken some opportunity at some point to give value back to the community at large.

622
00:24:16,961 --> 00:24:18,922
I actively work to bring value.

623
00:24:20,029 --> 00:24:21,110
to the people that I work with.

624
00:24:22,111 --> 00:24:22,831
You're part of a team.

625
00:24:22,851 --> 00:24:25,173
There has to be a reason that you're part of a team.

626
00:24:25,193 --> 00:24:27,474
You're not an individual person just doing individual things.

627
00:24:27,494 --> 00:24:28,275
You are part of a team.

628
00:24:28,695 --> 00:24:30,677
How are you bringing value to the rest of your team?

629
00:24:31,317 --> 00:24:32,138
Where can you help them?

630
00:24:32,158 --> 00:24:33,038
Where can you teach them?

631
00:24:33,058 --> 00:24:33,959
Where can you learn from them?

632
00:24:34,019 --> 00:24:35,400
How do you interact with that team?

633
00:24:36,561 --> 00:24:39,423
I actively work to ensure underrepresented voices

634
00:24:39,483 --> 00:24:39,843
are heard.

635
00:24:40,764 --> 00:24:43,045
So the thing that pisses me off, and lots of things

636
00:24:43,085 --> 00:24:44,026
piss me off here.

637
00:24:45,107 --> 00:24:46,449
But one of the things that pissed me off

638
00:24:46,529 --> 00:24:48,811
is, of course, the old standby, it's a pipeline problem,

639
00:24:48,831 --> 00:24:50,412
and it's not my problem, and all the things, right?

640
00:24:51,213 --> 00:24:52,053
Well, fuck that shit.

641
00:24:52,073 --> 00:24:54,996
That's like, do something, anything, right?

642
00:24:55,016 --> 00:24:56,537
Make sure that it, and especially

643
00:24:56,577 --> 00:24:58,219
if there's somebody in the room, make sure that they're heard.

644
00:24:58,239 --> 00:25:00,000
Make sure that you're not talking over everybody,

645
00:25:00,040 --> 00:25:02,042
unless, obviously, you're standing in front of a room,

646
00:25:02,062 --> 00:25:02,683
and that's your job.

647
00:25:03,884 --> 00:25:05,465
But make sure that people are heard.

648
00:25:06,546 --> 00:25:09,909
So that's 50 things that pissed me off.

649
00:25:11,510 --> 00:25:12,971
Again, a sample, not exhaustive.

650
00:25:14,397 --> 00:25:15,738
So let's grade.

651
00:25:18,221 --> 00:25:20,943
So if you had a score of 0 to 20, you agree,

652
00:25:21,304 --> 00:25:25,748
you did 0 to 20 of those things in the positive sense, fired.

653
00:25:25,768 --> 00:25:31,052
All right, you have a score of 21 to 40, fired.

654
00:25:31,092 --> 00:25:31,453
41 to 49, fired.

655
00:25:31,473 --> 00:25:35,156
Score of 50.

656
00:25:43,422 --> 00:25:44,403
This is the minimum bar.

657
00:25:45,124 --> 00:25:48,107
You can argue with me whether or not this is the right minimum bar,

658
00:25:48,127 --> 00:25:49,027
but it is the minimum bar.

659
00:25:49,047 --> 00:25:50,469
I'm not trying to set the bar that high.

660
00:25:50,489 --> 00:25:52,891
These are basic expectations, really simple things

661
00:25:52,911 --> 00:25:54,032
that we should expect from everybody.

662
00:25:54,553 --> 00:25:58,696
And I think that's what is the absolute minimum

663
00:25:58,716 --> 00:25:59,777
that I can expect people to do.

664
00:25:59,877 --> 00:26:02,280
And I think this represents a good portion of that.

665
00:26:02,600 --> 00:26:02,840
Thank you.

