1
00:00:04,090 --> 00:00:05,310
Okay, hello.

2
00:00:06,151 --> 00:00:08,192
So, I'm James Benson.

3
00:00:10,153 --> 00:00:12,834
I'll give you a little brief rundown of my life in the games industry.

4
00:00:13,515 --> 00:00:15,876
So I worked on Fable 3 for a little bit, that was fun.

5
00:00:16,576 --> 00:00:20,498
And then I worked on Peter Malny's ill-fated boy simulator, Project Milo.

6
00:00:21,139 --> 00:00:22,619
So that was a laugh.

7
00:00:23,300 --> 00:00:26,061
And then that blew up, so I was out of a job and it was all very sad.

8
00:00:26,742 --> 00:00:29,623
And then I went indie, and it was a great time to go indie.

9
00:00:29,663 --> 00:00:32,565
And then Meat Boy and Limbo and all this stuff came out, it was fantastic.

10
00:00:33,874 --> 00:00:41,238
And so I sort of de facto became the lead animator a very tiny studio with like, you know, four people at the beginning

11
00:00:42,058 --> 00:00:48,021
which was a bit of a weird situation because I don't made a 2d game and I started making a

12
00:00:48,081 --> 00:00:50,723
sort of lush painted 2d game and

13
00:00:50,743 --> 00:00:53,664
On fable and Milo. I basically hadn't really done anything

14
00:00:53,724 --> 00:00:57,747
I just sort of sat around and you know kind of tweaked some little things and fix some bugs

15
00:00:58,507 --> 00:01:02,289
So I worked on Ori for four years and on the last year I was

16
00:01:03,248 --> 00:01:06,791
transitioning off. I brought on a really awesome woman called Rahel Brunold who came and helped

17
00:01:06,811 --> 00:01:11,654
me finish the project. And whatever, now I'm giving a talk about it.

18
00:01:12,354 --> 00:01:18,818
So what's Ori? If anyone doesn't know, which is probably almost all of you, Ori is a 2D

19
00:01:18,898 --> 00:01:24,602
painted open world metroidvania game with oodles of character animation, lots and lots

20
00:01:24,642 --> 00:01:30,025
of scripted stuff, and it's just very, very content-heavy game. As I mentioned, the team

21
00:01:30,145 --> 00:01:30,866
was very tiny.

22
00:01:31,800 --> 00:01:35,121
So it wasn't really even a case of, oh, we've got one person of each discipline.

23
00:01:35,501 --> 00:01:38,743
We had sort of like about half the disciplines that you'd ideally want.

24
00:01:39,123 --> 00:01:41,024
For example, no technical animator.

25
00:01:41,584 --> 00:01:43,885
And I have very limited skill set.

26
00:01:43,945 --> 00:01:44,966
I'm not very good at many things.

27
00:01:45,686 --> 00:01:49,328
So for example, I can't rig things, and I also can't draw,

28
00:01:49,788 --> 00:01:52,929
which is pretty bad if you're making a 2D game.

29
00:01:53,650 --> 00:01:57,191
Okay, so this talk is basically about how to overcome personal failings.

30
00:01:59,054 --> 00:02:00,635
Okay, so I've got a bunch of images here,

31
00:02:01,095 --> 00:02:01,855
which you may recognize.

32
00:02:01,875 --> 00:02:03,016
This is Princess Mononoke.

33
00:02:04,276 --> 00:02:06,317
This is Spirited Away, and then Mononoke again.

34
00:02:06,758 --> 00:02:09,539
So the important thing to note about these images is

35
00:02:10,839 --> 00:02:13,181
these backgrounds are ridiculously rich and detailed.

36
00:02:13,221 --> 00:02:14,881
You can see all the brush strokes, and it's gorgeous.

37
00:02:15,402 --> 00:02:16,642
And the characters all sort of awesome,

38
00:02:16,842 --> 00:02:18,383
but they're really simple.

39
00:02:18,503 --> 00:02:19,543
They're essentially just silhouettes,

40
00:02:19,844 --> 00:02:21,164
and there's a little bit of a rim light,

41
00:02:21,945 --> 00:02:24,025
but they're pretty much just flat-shaded blocks.

42
00:02:25,539 --> 00:02:26,920
And then if we go to skip to this bit,

43
00:02:27,460 --> 00:02:30,402
this is a shot from Mononoke where there's like a curse on this guy's hand

44
00:02:30,442 --> 00:02:31,503
and it's these kind of riding snakes.

45
00:02:32,103 --> 00:02:34,745
And it's actually all 3D rendering,

46
00:02:34,845 --> 00:02:36,646
but they do a really good job of tricking you

47
00:02:36,706 --> 00:02:38,668
into sort of not really noticing that at the time.

48
00:02:40,108 --> 00:02:41,649
So the reason I'm showing you this is

49
00:02:43,250 --> 00:02:46,973
we wanted to hit the kind of same aesthetic tone of these films

50
00:02:47,893 --> 00:02:49,634
and then also the kind of emotional tone

51
00:02:49,654 --> 00:02:51,576
and the moral ambiguity and that kind of thing.

52
00:02:52,336 --> 00:02:54,658
And I also wanted to kind of pull off a technical trick

53
00:02:54,718 --> 00:02:54,838
that...

54
00:02:55,548 --> 00:03:01,550
they're doing, and kind of take this sort of snake-arm type thing and do that through

55
00:03:01,990 --> 00:03:06,232
basically every single asset in the game and make you think that the 3D stuff was 2D.

56
00:03:07,652 --> 00:03:12,153
Yeah, so with that in mind, this is what I ended up making with the very talented people

57
00:03:12,193 --> 00:03:12,493
at Moose2do.

58
00:03:25,904 --> 00:03:25,985
you

59
00:04:57,653 --> 00:05:02,116
Okay, so, whoo!

60
00:05:02,156 --> 00:05:03,397
Thank you.

61
00:05:27,289 --> 00:05:27,569
Thank you.

62
00:05:28,230 --> 00:05:29,650
So you know what we were trying to do,

63
00:05:29,870 --> 00:05:31,191
and that's basically what we ended up doing.

64
00:05:31,471 --> 00:05:32,491
And I'm now just going to run through,

65
00:05:33,292 --> 00:05:36,093
in excruciating technical detail, the pipeline

66
00:05:36,153 --> 00:05:37,714
and how we did it, basically.

67
00:05:37,974 --> 00:05:39,414
And also, I always forget to mention this

68
00:05:39,434 --> 00:05:39,955
when I'm practicing.

69
00:05:40,295 --> 00:05:41,235
We made this in Unity.

70
00:05:41,535 --> 00:05:47,498
So you can make this game in Unity Engine if you want to.

71
00:05:47,518 --> 00:05:49,899
OK, so this is 3D Ori.

72
00:05:50,619 --> 00:05:51,279
He's 3D model.

73
00:05:51,359 --> 00:05:53,580
He's got one texture, which is just a diffuse texture.

74
00:05:54,140 --> 00:05:55,501
It's 100% self-illuminated.

75
00:05:55,561 --> 00:05:56,522
There's no lighting on him.

76
00:05:57,585 --> 00:05:59,226
That's kind of all he is, it's really simple.

77
00:06:00,287 --> 00:06:01,988
His entire design is about being a silhouette.

78
00:06:03,989 --> 00:06:05,090
I'm basically doing the same thing,

79
00:06:05,230 --> 00:06:07,592
hopefully that a Kadama looks like in Mononoke,

80
00:06:07,612 --> 00:06:09,053
those little white spirit creatures.

81
00:06:09,693 --> 00:06:12,735
So there's a few animation concessions in his design.

82
00:06:12,875 --> 00:06:14,576
We gave him a tail so that I could always

83
00:06:15,276 --> 00:06:17,058
show you the direction of travel that he's moving in.

84
00:06:18,398 --> 00:06:19,519
We gave him double-jointed legs

85
00:06:19,619 --> 00:06:20,840
so that it's a platforming game.

86
00:06:21,300 --> 00:06:22,521
You could coil him up like a spring

87
00:06:22,541 --> 00:06:23,502
and then have him bounce up.

88
00:06:24,967 --> 00:06:26,669
So yeah, and also the zoom of the game is usually

89
00:06:26,709 --> 00:06:28,470
a kind of like a meat boy level sort of zoom.

90
00:06:29,231 --> 00:06:30,672
So with all these super detailed backgrounds,

91
00:06:31,032 --> 00:06:32,373
having him just be pure white silhouette

92
00:06:32,674 --> 00:06:34,835
helps him read really, really clearly at all times,

93
00:06:34,875 --> 00:06:35,376
which is important.

94
00:06:36,337 --> 00:06:38,759
So like I mentioned earlier, I can't rig.

95
00:06:38,899 --> 00:06:41,841
Luckily, 3ds Max, which is the tool I use for the thing,

96
00:06:42,762 --> 00:06:44,624
comes with a really good proprietary system called Cat,

97
00:06:45,204 --> 00:06:46,385
and you don't have to be clever,

98
00:06:46,425 --> 00:06:48,006
you just click, click, click, and you make a rig,

99
00:06:48,066 --> 00:06:48,467
it's awesome.

100
00:06:49,087 --> 00:06:52,991
And I can skin, so basically that kind of took care

101
00:06:53,011 --> 00:06:54,132
of all of that side of things.

102
00:06:55,199 --> 00:06:58,740
And it also, coincidentally, happens to be, by far, my favorite rig to animate,

103
00:06:58,760 --> 00:07:01,181
because it handles scaling really well, and such, such, such.

104
00:07:01,641 --> 00:07:03,602
So it's awesome, and I use the Cat rig.

105
00:07:04,642 --> 00:07:09,144
And so for rendering, we render Ori with an orthographic camera from the side.

106
00:07:10,064 --> 00:07:12,365
It's like a small detail, but it's actually very important

107
00:07:12,405 --> 00:07:15,026
that we don't render any of these things with perspective.

108
00:07:15,885 --> 00:07:20,089
Because in the same way that not having any 3D lighting information is useful,

109
00:07:20,509 --> 00:07:23,571
not having any of that mathematical perspective information is useful,

110
00:07:23,691 --> 00:07:28,215
because having less of the detail makes it easier to trick you

111
00:07:28,295 --> 00:07:30,337
into thinking you're not looking at a 3D asset.

112
00:07:30,977 --> 00:07:31,618
So that's crucial.

113
00:07:33,059 --> 00:07:35,401
Yeah, we also do things like when I'm rendering the frame,

114
00:07:35,461 --> 00:07:38,043
I bake a nice object motion blur into it,

115
00:07:38,063 --> 00:07:40,865
because it's essentially free, I'm already paying the memory for the sprite.

116
00:07:40,885 --> 00:07:42,446
So yeah, and there, it looks a little...

117
00:07:42,806 --> 00:07:43,747
Ori's jumps, that's fun, isn't it?

118
00:07:44,600 --> 00:07:46,760
OK, so if you throw a sprite into the engine,

119
00:07:47,741 --> 00:07:51,162
using that sort of rendering style, it looks vaguely like this in most cases.

120
00:07:52,782 --> 00:07:56,583
So we can do a bunch of stuff to the frames

121
00:07:56,683 --> 00:07:58,924
before we start making them into atlases and stuff if we want.

122
00:07:59,944 --> 00:08:01,845
Tend not to, because it's better to do effects in engine,

123
00:08:01,865 --> 00:08:05,926
because it's more reusable and you can iterate better and stuff.

124
00:08:06,206 --> 00:08:08,747
But we do some things, like a GIF should play here.

125
00:08:09,407 --> 00:08:10,968
So when the owl's coming out of the camera here,

126
00:08:12,160 --> 00:08:15,663
Baked into the sprites is a depth of field that's blending out,

127
00:08:16,464 --> 00:08:20,107
which would obviously be a relatively expensive thing to do in real time,

128
00:08:20,167 --> 00:08:21,248
and we just get to do it for free.

129
00:08:22,409 --> 00:08:25,111
So once we've baked whatever effect we want to Atlases,

130
00:08:25,292 --> 00:08:27,393
we stuck it in the engine, it gets made,

131
00:08:28,514 --> 00:08:31,377
yeah, it gets made into big Atlases, the point being to save memory.

132
00:08:32,998 --> 00:08:35,260
So there's a few sort of things to note though

133
00:08:35,300 --> 00:08:36,921
that are quite cool about the Atlas system we have.

134
00:08:38,067 --> 00:08:43,009
There's a dynamic chroma keying system that we have where it samples all of the pixels

135
00:08:43,149 --> 00:08:46,911
in the various images that you're throwing into the machine, and it'll say, OK, well,

136
00:08:46,971 --> 00:08:50,812
blue is the least used thing here, and makes it a blue screen.

137
00:08:51,112 --> 00:08:54,693
But it also does really smart sampling where, like, if a character has, for example, red

138
00:08:54,913 --> 00:08:57,194
eyes, it can tell that that's important.

139
00:08:57,755 --> 00:09:01,476
And even if red is the actual, like, least used color in all those images, it'll make

140
00:09:01,516 --> 00:09:04,917
sure not to make the eyes transparent, because that would completely fuck up everything.

141
00:09:05,656 --> 00:09:06,716
So, yeah.

142
00:09:06,856 --> 00:09:08,557
There's also a lot of other, oh, these are some atlases.

143
00:09:08,857 --> 00:09:10,318
That's not very interesting, is it?

144
00:09:10,758 --> 00:09:11,718
Yeah, this is our atlasing tool.

145
00:09:11,738 --> 00:09:13,639
There's some other cool things about the tool we have.

146
00:09:13,679 --> 00:09:16,120
Like, you can see, maybe, if you can read it,

147
00:09:17,020 --> 00:09:19,361
we can specify for each individual animation,

148
00:09:20,081 --> 00:09:21,962
the scale of the sprite in-game is gonna be this.

149
00:09:22,522 --> 00:09:24,383
The camera's roughly gonna be this kind of zoom.

150
00:09:24,923 --> 00:09:27,264
And this is basically a massive bug prevention tool.

151
00:09:27,584 --> 00:09:29,745
Like, the system will analyze, okay,

152
00:09:30,585 --> 00:09:32,346
this is how many pixels it's gonna occupy

153
00:09:32,406 --> 00:09:33,186
on any given screen.

154
00:09:34,729 --> 00:09:38,190
and you've given us source frames with whatever resolution.

155
00:09:38,490 --> 00:09:39,931
And if they're just gonna be too small

156
00:09:40,031 --> 00:09:41,792
and look shitty in game, then it just says,

157
00:09:42,012 --> 00:09:43,213
you can't build this atlas,

158
00:09:43,353 --> 00:09:44,853
go back and make your frames again, please.

159
00:09:45,414 --> 00:09:46,694
Which is actually really awesome

160
00:09:46,714 --> 00:09:49,435
and just stops you from wasting time

161
00:09:49,455 --> 00:09:51,176
when you're making the game, which is good.

162
00:09:52,617 --> 00:09:55,898
Okay, so the next layer on top of that is metadata.

163
00:09:56,278 --> 00:09:59,360
And this is kind of where this sort of hybrid

164
00:09:59,400 --> 00:10:02,161
of a 2D and a 3D pipeline sort of comes into its own

165
00:10:02,201 --> 00:10:03,181
and becomes pretty awesome.

166
00:10:04,134 --> 00:10:07,498
We're obviously making sprites, but the assets are all 3D assets.

167
00:10:07,558 --> 00:10:08,880
We have all the bones, etc.

168
00:10:09,220 --> 00:10:14,546
So we have a layer where we just, once we put an animation in the game, I can grab the

169
00:10:14,566 --> 00:10:16,889
whole rig and throw that as an FBX into Unity.

170
00:10:17,825 --> 00:10:21,087
And we have another proprietary tool where it just spits out

171
00:10:21,187 --> 00:10:24,129
a little clean asset where I can track the eyes,

172
00:10:24,369 --> 00:10:27,010
I can track the feet, so we can do sounds for the footsteps,

173
00:10:27,111 --> 00:10:28,551
we can do particle effects, and blah, blah, blah.

174
00:10:28,892 --> 00:10:31,953
We can also apply root motion to all of the sprites

175
00:10:32,033 --> 00:10:34,054
because it's just 3D, and as if you

176
00:10:34,094 --> 00:10:35,535
had the actual rig in the engine,

177
00:10:36,016 --> 00:10:37,196
you can do root motion, which makes

178
00:10:37,236 --> 00:10:39,618
making cut scenes and scripted events very, very easy.

179
00:10:40,538 --> 00:10:41,098
So for example.

180
00:10:42,558 --> 00:10:44,400
As the leaf is like tumbling around the wind here,

181
00:10:44,480 --> 00:10:46,301
it's a relatively kind of complicated shot to do,

182
00:10:46,822 --> 00:10:49,043
but it was really like kind of easy to do

183
00:10:49,103 --> 00:10:52,126
because the leaf is just using the root motion from 3D.

184
00:10:52,626 --> 00:10:54,488
We have all, like the camera that's following it

185
00:10:54,628 --> 00:10:56,749
is just like following it in 3D

186
00:10:56,809 --> 00:10:58,451
because we know exactly where the thing is moving.

187
00:10:59,391 --> 00:11:01,253
We've got these particle effects and the trail

188
00:11:01,353 --> 00:11:02,794
and the glow and all this kind of stuff,

189
00:11:02,934 --> 00:11:05,857
and it's just relatively trivial to implement something

190
00:11:05,897 --> 00:11:06,997
that looks fairly complicated.

191
00:11:08,977 --> 00:11:10,237
Yeah, and then once we've done all that stuff,

192
00:11:11,058 --> 00:11:12,559
the kind of last part of the pipeline is,

193
00:11:14,440 --> 00:11:16,742
they developed, the programmers at Macy's

194
00:11:16,762 --> 00:11:19,444
developed a ridiculously awesome unified shader system

195
00:11:20,825 --> 00:11:23,026
where you can just do all kinds of crazy stuff.

196
00:11:23,086 --> 00:11:25,308
You can apply awesome animated distortion,

197
00:11:25,688 --> 00:11:26,909
you can do really, really nice

198
00:11:27,369 --> 00:11:28,630
like real-time glow effect and things,

199
00:11:28,950 --> 00:11:31,012
and also like super clever, nice things like

200
00:11:32,467 --> 00:11:35,628
you can put like a additive multiply mask

201
00:11:35,708 --> 00:11:36,668
on one side of the character

202
00:11:36,968 --> 00:11:38,429
that sort of lights the character,

203
00:11:38,629 --> 00:11:40,190
you know, if there's a big moon behind him or whatever.

204
00:11:40,510 --> 00:11:42,531
And then if the sprite flips or whatever,

205
00:11:42,891 --> 00:11:44,271
it'll still keep from that direction.

206
00:11:44,532 --> 00:11:46,232
So you can kind of fake real-time lighting

207
00:11:46,252 --> 00:11:47,073
in your scenes and things.

208
00:11:47,573 --> 00:11:49,294
So if you look at these gifs here,

209
00:11:51,314 --> 00:11:53,075
on the top right, you can see Ori,

210
00:11:53,615 --> 00:11:55,236
fictionally within the universe,

211
00:11:55,276 --> 00:11:56,436
he's kind of made of light.

212
00:11:56,757 --> 00:11:58,017
So in a dark area like this,

213
00:11:58,077 --> 00:12:00,198
we want him to kind of light up everything around him.

214
00:12:00,958 --> 00:12:01,058
So.

215
00:12:01,562 --> 00:12:04,643
He has a kind of dynamic contact shadow with the ground,

216
00:12:05,624 --> 00:12:06,304
which is made of light.

217
00:12:06,944 --> 00:12:09,165
On the left here, you can see this kind of ghostly figure,

218
00:12:09,965 --> 00:12:11,746
and that's using loads of nice little shadery things as well

219
00:12:12,006 --> 00:12:13,666
that all just kind of comes for free.

220
00:12:13,726 --> 00:12:14,847
And in terms of implementing that stuff,

221
00:12:15,127 --> 00:12:17,608
it's literally kind of like pressing some tick boxes

222
00:12:17,688 --> 00:12:18,968
on this awesome proprietary tool.

223
00:12:19,528 --> 00:12:20,248
So that's good.

224
00:12:21,269 --> 00:12:23,790
Okay, so that's the whole pipeline.

225
00:12:23,810 --> 00:12:26,491
I'm just gonna say what's good about the pipeline now.

226
00:12:29,331 --> 00:12:29,532
Okay.

227
00:12:30,312 --> 00:12:31,192
So the first bullet point.

228
00:12:32,098 --> 00:12:34,659
is essentially the most important thing in the entire talk

229
00:12:34,819 --> 00:12:36,539
and the entire animation system.

230
00:12:37,480 --> 00:12:40,700
You get to do perfect non-uniform scaling of bones,

231
00:12:41,400 --> 00:12:44,701
which is ridiculously, ridiculously important.

232
00:12:44,741 --> 00:12:46,501
The two big things you get from this, essentially,

233
00:12:47,321 --> 00:12:49,582
you get squash and stretch, which is obviously great.

234
00:12:49,742 --> 00:12:51,122
Every animator wants to do squash and stretch.

235
00:12:52,082 --> 00:12:53,303
But way more importantly,

236
00:12:54,563 --> 00:12:57,443
being able to manipulate the bones to your heart's content

237
00:12:58,304 --> 00:13:00,624
essentially means you can draw whatever shape you want.

238
00:13:02,389 --> 00:13:05,291
If I could draw and actually could get a pen and paper and do it properly,

239
00:13:06,692 --> 00:13:10,796
I'd be very careful about the separation of all the elements and the silhouette and all that kind of stuff.

240
00:13:11,597 --> 00:13:15,841
And I can just do that same thing in 3D by just absolutely tearing the bones to pieces.

241
00:13:16,878 --> 00:13:17,779
And you can cheat perspective.

242
00:13:17,839 --> 00:13:20,840
I can, for 2D sometimes, you don't want to show both arms

243
00:13:20,920 --> 00:13:22,461
when the character's running or something like this.

244
00:13:22,841 --> 00:13:25,063
And you can just shrink the arm down to a little nub

245
00:13:25,623 --> 00:13:26,904
and do all kinds of stuff.

246
00:13:26,984 --> 00:13:28,685
Also, for things like breathing,

247
00:13:28,705 --> 00:13:31,606
rather than just having the spine rotating like this,

248
00:13:31,846 --> 00:13:34,328
you can just be like, I'm just gonna grab his chest

249
00:13:34,368 --> 00:13:37,429
and be like, and it's awesome.

250
00:13:37,469 --> 00:13:38,390
He's actually breathing now.

251
00:13:39,210 --> 00:13:42,652
As an example, on the left here.

252
00:13:43,028 --> 00:13:45,770
you have an actual frame that is a nice frame

253
00:13:45,790 --> 00:13:46,370
that I'm happy about.

254
00:13:46,670 --> 00:13:47,851
And on the right, you can see what it looks like

255
00:13:47,891 --> 00:13:49,312
if you just turn the camera 90 degrees.

256
00:13:49,372 --> 00:13:50,673
And obviously, it's a fucking horror show.

257
00:13:50,693 --> 00:13:54,715
So as you can see, all of the elements of those models

258
00:13:55,795 --> 00:13:57,456
are completely aligned along one axis

259
00:13:57,496 --> 00:13:58,377
and only make sense there.

260
00:13:58,477 --> 00:14:00,678
And that's basically the whole trick

261
00:14:00,758 --> 00:14:01,899
of all of the animation in the game.

262
00:14:01,919 --> 00:14:05,321
We've got another example here with Kuro the Owl.

263
00:14:06,441 --> 00:14:08,602
Yes, again, she looks absolutely terrifying.

264
00:14:09,579 --> 00:14:11,279
So we have like the nice silhouette of the arrowhead

265
00:14:11,320 --> 00:14:12,200
kind of shape and blah, blah, blah,

266
00:14:12,240 --> 00:14:13,640
and then she's a complete monster on the other thing.

267
00:14:14,600 --> 00:14:17,541
So, oh yeah, and so for the sort of animated benefits of that

268
00:14:17,561 --> 00:14:19,401
I don't know how well you can actually see this.

269
00:14:19,742 --> 00:14:20,622
On the left you've got Ori.

270
00:14:20,962 --> 00:14:22,382
At the like the top of his jump,

271
00:14:23,182 --> 00:14:24,963
he kind of crunches down to about half his size.

272
00:14:25,383 --> 00:14:27,423
At the bottom of his jump, he's like twice his normal size.

273
00:14:27,743 --> 00:14:30,124
The frame when he hits the ground, he becomes like 10 pixels.

274
00:14:30,698 --> 00:14:32,859
And then also with his tail, as he does little spins,

275
00:14:33,200 --> 00:14:35,581
it becomes like three times its normal length for a few frames

276
00:14:35,641 --> 00:14:36,341
and all this kind of stuff.

277
00:14:37,022 --> 00:14:39,904
With Naru, as she jumps, her belly

278
00:14:39,924 --> 00:14:41,144
is kind of doing secondary motion.

279
00:14:41,184 --> 00:14:43,566
Like when she hits the ground, her legs crunch down to nothing.

280
00:14:44,546 --> 00:14:47,268
As she's falling, her neck kind of elongates like a giraffe

281
00:14:47,348 --> 00:14:48,069
for a few frames.

282
00:14:48,689 --> 00:14:50,810
And it all just kind of helps to make it look a bit nice.

283
00:14:52,115 --> 00:14:57,618
Okay, this is a slightly more controversial point, I guess, but using this system, you

284
00:14:57,658 --> 00:14:59,098
have complete control over...

285
00:15:00,119 --> 00:15:02,680
The game can't render a frame that you didn't draw, right?

286
00:15:03,701 --> 00:15:09,404
Obviously, if you're building your game to make use of real-time turning of bones for

287
00:15:09,424 --> 00:15:15,147
some kind of inspection thing or whatever, or you're doing lots of clever 3D stuff, it's

288
00:15:15,167 --> 00:15:17,088
great to have the rig running real-time in-engine.

289
00:15:19,273 --> 00:15:22,234
A lot of time you find, like, I'd be doing dailies on Fable or something,

290
00:15:22,735 --> 00:15:24,416
and you'd have your play blast, right?

291
00:15:24,536 --> 00:15:26,217
Of, okay, I've done my cool combat animation.

292
00:15:26,917 --> 00:15:27,477
It looks awesome.

293
00:15:27,838 --> 00:15:28,718
And then you put in the engine,

294
00:15:29,038 --> 00:15:30,959
and all of the edges have been rounded off

295
00:15:31,720 --> 00:15:33,541
through, like, compression and...

296
00:15:33,801 --> 00:15:36,522
another thing that I'm forgetting, whatever.

297
00:15:36,682 --> 00:15:39,124
Oh, yeah, through interpolation, like, you made a 30fps animation,

298
00:15:39,164 --> 00:15:41,745
and it's now 60, and, like, half the frames,

299
00:15:42,385 --> 00:15:43,746
they're not frames that you made anymore.

300
00:15:44,807 --> 00:15:46,648
You get a kind of mushiness to a lot of animation.

301
00:15:47,578 --> 00:15:49,719
And you don't get that if you're rendering sprites.

302
00:15:50,639 --> 00:15:52,660
Another thing is, there's no such thing in a system like this

303
00:15:52,840 --> 00:15:57,242
as a blend between two poses that's like the computer is doing.

304
00:15:57,642 --> 00:16:00,123
So, on the one hand, it's like,

305
00:16:00,203 --> 00:16:02,123
OK, well, I've now got to do a ton of work myself,

306
00:16:02,423 --> 00:16:05,024
because it's all just going to snap horribly

307
00:16:05,124 --> 00:16:08,205
if I don't put in individual transition animations.

308
00:16:08,465 --> 00:16:11,846
But on the other hand, if you now do something like this,

309
00:16:12,087 --> 00:16:13,947
and you do all the animation transitions by hand...

310
00:16:14,859 --> 00:16:17,220
If you record like 15 seconds of you playing your game,

311
00:16:17,800 --> 00:16:18,701
and then just like watch it back,

312
00:16:19,101 --> 00:16:20,201
it's gonna essentially look like

313
00:16:20,542 --> 00:16:22,462
the linear cartoon perfect version

314
00:16:22,482 --> 00:16:23,703
of what you would have animated, right?

315
00:16:24,143 --> 00:16:25,884
If this wasn't an actual dynamic system.

316
00:16:26,804 --> 00:16:29,505
And I was very blessed at Moon

317
00:16:29,645 --> 00:16:31,326
that the programmers really, really understood

318
00:16:31,346 --> 00:16:32,567
what I wanted and they gave me

319
00:16:32,687 --> 00:16:34,127
the absolute perfect system for this.

320
00:16:34,227 --> 00:16:35,228
And I could do all kinds of cool stuff.

321
00:16:35,768 --> 00:16:38,069
Like, you know, in the arc of a jump.

322
00:16:39,382 --> 00:16:40,883
I could be really, really extreme

323
00:16:41,043 --> 00:16:42,824
with all the different key poses that I would animate

324
00:16:42,884 --> 00:16:46,125
because I could specify, well, there's a transition

325
00:16:46,145 --> 00:16:49,626
that's from frames zero to six, and I let go of the stick,

326
00:16:49,887 --> 00:16:51,527
or from seven to 14, or from 15 to 19,

327
00:16:51,627 --> 00:16:54,829
and I could just basically go nuts with content,

328
00:16:54,869 --> 00:16:55,689
which is what I like to do.

329
00:16:56,329 --> 00:16:57,530
It was also really easy to debug

330
00:16:57,890 --> 00:16:59,490
and see what's happening in the system,

331
00:16:59,510 --> 00:17:02,432
which I find a lot of time, you spend your days

332
00:17:02,492 --> 00:17:03,692
just trying to work out what your assets

333
00:17:03,712 --> 00:17:06,593
are doing in the engine, and in this system,

334
00:17:07,371 --> 00:17:08,051
That's not really the case.

335
00:17:08,572 --> 00:17:11,254
I just run a tool where I click on the character,

336
00:17:11,334 --> 00:17:13,535
I click record, and then you play and try and repro

337
00:17:13,555 --> 00:17:14,536
whatever issue you're seeing.

338
00:17:15,237 --> 00:17:16,698
And then it just spits out all your states.

339
00:17:17,058 --> 00:17:18,619
And for example, it's really easy

340
00:17:18,659 --> 00:17:21,381
to tell if a pair of states don't have a transition,

341
00:17:21,641 --> 00:17:24,143
because the main gameplay relevant states are in white.

342
00:17:24,343 --> 00:17:26,204
And if you just see two bits of white text next to each other,

343
00:17:26,224 --> 00:17:27,786
it's like, that's missing a transition.

344
00:17:27,826 --> 00:17:29,167
So it's little simple things.

345
00:17:30,227 --> 00:17:31,468
OK, and then there's a smattering

346
00:17:31,508 --> 00:17:32,529
of other random benefits.

347
00:17:32,549 --> 00:17:36,992
But like I mentioned earlier.

348
00:17:37,752 --> 00:17:40,593
We've got the motion blur, which actually is pretty enormous,

349
00:17:40,693 --> 00:17:42,214
makes a really big difference.

350
00:17:42,874 --> 00:17:44,574
There's things like the dark, and we do glows

351
00:17:44,634 --> 00:17:45,235
and certain things.

352
00:17:45,355 --> 00:17:46,675
You can see whatever in After Effects.

353
00:17:47,795 --> 00:17:48,976
And then this is kind of a huge one.

354
00:17:49,996 --> 00:17:54,178
Because you're rendering from the rig in Max or whatever,

355
00:17:54,398 --> 00:17:56,378
there's no compression on those bones.

356
00:17:56,478 --> 00:17:58,679
So it's sort of the equivalent of if.

357
00:18:00,021 --> 00:18:02,562
You came into work on your 3D game on Monday,

358
00:18:03,202 --> 00:18:04,903
and the programmer said, hey, we're

359
00:18:04,923 --> 00:18:07,904
disabling all compression in the game on all of your animation.

360
00:18:08,044 --> 00:18:11,205
It would be just like Christmas and birthday all rolled into one.

361
00:18:12,165 --> 00:18:13,926
And you can treat your assets like film assets,

362
00:18:13,966 --> 00:18:15,486
because it doesn't matter.

363
00:18:15,566 --> 00:18:18,167
Like, whatever you're doing, it's just offline rendering.

364
00:18:18,247 --> 00:18:20,968
So you can have whatever polys you want.

365
00:18:20,988 --> 00:18:22,409
You can do 10K textures, whatever.

366
00:18:23,848 --> 00:18:26,229
I'm not clever enough to do lots of like fur simulation

367
00:18:26,269 --> 00:18:27,990
and fluid and things, I don't know how to do all this stuff.

368
00:18:28,070 --> 00:18:28,970
But if you know how to do it,

369
00:18:29,310 --> 00:18:30,991
then you can bake it into your sprites and it all works.

370
00:18:32,411 --> 00:18:32,911
So that's fun.

371
00:18:33,271 --> 00:18:35,032
As an example, here's Koro,

372
00:18:35,092 --> 00:18:36,252
one of the main characters in the game,

373
00:18:36,612 --> 00:18:38,333
and she's whatever, she's got loads of turbo smooth

374
00:18:38,353 --> 00:18:39,893
and all sorts of nonsense on her.

375
00:18:40,193 --> 00:18:42,654
She's got 150 bones and for some reason,

376
00:18:42,854 --> 00:18:44,475
I like to like individually animate

377
00:18:44,555 --> 00:18:46,335
every feather on her wings.

378
00:18:47,075 --> 00:18:48,336
Maybe don't do that, that's stupid.

379
00:18:49,836 --> 00:18:51,417
I like to do it, it's fun.

380
00:18:51,577 --> 00:18:52,217
So you can do whatever.

381
00:18:52,897 --> 00:18:53,077
Okay.

382
00:18:53,393 --> 00:18:54,694
This is more like a workflow thing.

383
00:18:54,714 --> 00:18:57,316
Even something simple sometimes in a game,

384
00:18:57,336 --> 00:18:59,417
like opening a door and I actually want my hand

385
00:18:59,477 --> 00:19:01,979
to attach to the doorknob and twist it and blah blah blah,

386
00:19:02,419 --> 00:19:04,520
it gets weirdly complicated, like okay,

387
00:19:04,560 --> 00:19:06,742
now we need an IK solution and blah blah blah.

388
00:19:07,760 --> 00:19:09,921
All that stuff is really, really simple in this pipeline.

389
00:19:10,742 --> 00:19:12,202
To give an example, on Fable 3,

390
00:19:12,282 --> 00:19:14,103
they wanted to kind of upgrade the way they did

391
00:19:14,643 --> 00:19:16,404
like emotes with the NPCs.

392
00:19:16,804 --> 00:19:17,904
So instead of just waving at someone,

393
00:19:18,745 --> 00:19:20,805
you could like shake their hand or kiss them or whatever.

394
00:19:21,386 --> 00:19:23,326
And the way this ended up being implemented

395
00:19:23,987 --> 00:19:25,667
was that there'd be a fade to black

396
00:19:25,767 --> 00:19:26,828
when you interacted with someone.

397
00:19:26,848 --> 00:19:28,248
It would fade from black.

398
00:19:28,388 --> 00:19:30,269
They'd have had like a new rig

399
00:19:30,309 --> 00:19:31,810
with all of the characters in the same rig.

400
00:19:32,630 --> 00:19:33,250
They'd play the thing.

401
00:19:33,722 --> 00:19:35,962
And then they do another fade to and from black,

402
00:19:36,323 --> 00:19:38,664
which is obviously not the ideal solution.

403
00:19:38,684 --> 00:19:40,864
And it kind of shows that even at a massive studio

404
00:19:40,904 --> 00:19:42,145
with millions and millions of dollars,

405
00:19:42,605 --> 00:19:44,606
these are hard problems to solve.

406
00:19:45,586 --> 00:19:48,107
So here's a random GIF of a situation like that in Ori.

407
00:19:48,728 --> 00:19:49,948
He runs up to his mom here.

408
00:19:49,988 --> 00:19:52,569
She picks him up when you jump into her little box there,

409
00:19:53,169 --> 00:19:54,170
throws him on her back.

410
00:19:54,290 --> 00:19:55,370
They do a little cut scene thing.

411
00:19:55,670 --> 00:19:56,491
And then now you're actually playing

412
00:19:56,531 --> 00:19:57,711
as both the characters at once.

413
00:19:57,751 --> 00:19:59,752
You're controlling the rigs and now the same thing.

414
00:20:00,152 --> 00:20:01,373
And the reason it's so simple is because

415
00:20:02,294 --> 00:20:05,035
They're just two sprites, and we have all of the metadata

416
00:20:05,075 --> 00:20:07,996
for where they should be, and it's just really easy.

417
00:20:08,156 --> 00:20:12,217
If I was going to make this now in a traditional 3D way,

418
00:20:12,617 --> 00:20:13,917
I'd be pulling my hair out like,

419
00:20:13,957 --> 00:20:15,458
I don't know how the fuck I'm going to do this.

420
00:20:16,298 --> 00:20:16,578
Yeah.

421
00:20:17,739 --> 00:20:19,259
So it saves you a lot of time.

422
00:20:19,339 --> 00:20:21,440
There's no such thing as check how it looks in game.

423
00:20:21,500 --> 00:20:24,381
If you like what you did in Maya or Max, that's it.

424
00:20:24,421 --> 00:20:24,821
You did it.

425
00:20:24,881 --> 00:20:25,241
Well done.

426
00:20:25,261 --> 00:20:26,221
You finished the animation.

427
00:20:27,261 --> 00:20:28,122
There's so much time.

428
00:20:28,142 --> 00:20:29,682
Obviously, there are enormous benefits

429
00:20:29,762 --> 00:20:32,063
from doing cool real-time 3D stuff.

430
00:20:32,797 --> 00:20:38,642
But when your game relies very heavily on blending and additive stuff and layers and da da da,

431
00:20:39,222 --> 00:20:42,565
you spend a lot of your time like not working on making your assets good,

432
00:20:42,645 --> 00:20:46,728
but just working like, what the fuck are my assets doing in the engine? Like I don't understand.

433
00:20:46,748 --> 00:20:51,211
I'm like trying to repro things. You just don't have that thing if you're working with sprites, which is lovely.

434
00:20:52,051 --> 00:20:54,753
Okay, so now this is the bad part. What are the cons of the pipeline?

435
00:20:56,715 --> 00:20:57,215
Okay, so...

436
00:20:58,781 --> 00:21:02,783
Essentially, it's one big con, which is texture memory.

437
00:21:03,163 --> 00:21:05,404
You're going to pay tons and tons and tons of texture memory

438
00:21:05,884 --> 00:21:08,405
to render all these sprites, especially like in Ori,

439
00:21:08,725 --> 00:21:11,266
we have this owl character that just fills the screen.

440
00:21:11,286 --> 00:21:11,847
She's huge.

441
00:21:11,867 --> 00:21:14,328
We're rendering 2K textures, and there's

442
00:21:14,348 --> 00:21:16,729
like 1,500 frames for this shot, which

443
00:21:16,789 --> 00:21:17,809
can be absolutely insane.

444
00:21:18,510 --> 00:21:22,091
And you start competing with the environment artists

445
00:21:22,131 --> 00:21:24,372
and with sound and with everyone for.

446
00:21:25,217 --> 00:21:28,419
very precious memory, and there's not a game in existence that isn't constantly fighting

447
00:21:28,439 --> 00:21:28,799
for memory.

448
00:21:29,160 --> 00:21:31,021
So that's essentially the big cost.

449
00:21:32,402 --> 00:21:34,364
There are other things, though.

450
00:21:34,864 --> 00:21:38,287
If you decide halfway through your production, like, oh, the character should have horns,

451
00:21:38,687 --> 00:21:40,328
you can't really do that, right?

452
00:21:40,368 --> 00:21:42,670
Because you've got to render every single frame in your game again.

453
00:21:43,731 --> 00:21:44,872
It's not quite as terrible as that.

454
00:21:45,132 --> 00:21:47,614
If you're actually hand-drawing everything, it's an enormous problem.

455
00:21:48,475 --> 00:21:49,636
Because the assets are still 3D.

456
00:21:50,655 --> 00:21:54,678
You can spend the time to make a batch script that

457
00:21:54,778 --> 00:21:56,920
re-renders everything, and you can swap in a new instance

458
00:21:56,960 --> 00:21:57,921
of the model and blah, blah, blah.

459
00:21:58,241 --> 00:22:00,903
But obviously, the reality is that takes programming time.

460
00:22:00,943 --> 00:22:03,205
That takes time for you to wait for things to render.

461
00:22:03,605 --> 00:22:05,667
And you're going to create bugs, and it just isn't ideal.

462
00:22:07,749 --> 00:22:10,691
You also can forget about various clever real-time 3D

463
00:22:11,112 --> 00:22:11,312
stuff.

464
00:22:11,532 --> 00:22:13,533
So you can't adjust the feet to the ground.

465
00:22:14,334 --> 00:22:15,855
You can't create any game that relies on this.

466
00:22:15,935 --> 00:22:18,157
This doesn't really apply to Ori, but like LA Noire type

467
00:22:18,177 --> 00:22:19,739
thing where you pick up a pencil and look at it

468
00:22:19,759 --> 00:22:20,279
from all angles.

469
00:22:20,635 --> 00:22:21,456
You can't do that kind of thing.

470
00:22:22,257 --> 00:22:23,758
And you can't dynamically change the model.

471
00:22:24,538 --> 00:22:27,781
If you want it so that there's an upgrade where he gets cool new boots,

472
00:22:27,941 --> 00:22:30,063
that's not going to happen because you'd have to double the memory

473
00:22:30,163 --> 00:22:33,025
of the entire game by having a boots version of the character.

474
00:22:34,747 --> 00:22:35,767
You also don't get blend trees.

475
00:22:36,168 --> 00:22:38,169
So the classic thing in any game would be there's an idle,

476
00:22:38,189 --> 00:22:39,230
there's a walk and a run,

477
00:22:39,630 --> 00:22:41,972
and I'm going to dynamically interpolate between those

478
00:22:42,012 --> 00:22:43,313
based on where the analog stick is.

479
00:22:44,529 --> 00:22:45,989
You can't really do that, although in a minute

480
00:22:46,029 --> 00:22:47,870
I'll show you how you actually can do that.

481
00:22:49,030 --> 00:22:50,630
You can't do things like the head tracking

482
00:22:50,650 --> 00:22:52,431
of like, oh, he's following an NPC with his head

483
00:22:53,211 --> 00:22:53,851
and all that kind of stuff.

484
00:22:55,411 --> 00:22:57,131
Rendering's an issue as well, just a time issue.

485
00:22:57,651 --> 00:22:59,992
If you're doing just like a jump, 30 frames,

486
00:23:00,372 --> 00:23:02,232
that's probably not gonna take any longer to render

487
00:23:02,412 --> 00:23:04,253
than just like exporting an FBX file.

488
00:23:04,733 --> 00:23:07,933
If you're rendering a cut scene with like 2K textures

489
00:23:08,253 --> 00:23:09,593
and it's like 2,000 frames, whatever,

490
00:23:10,053 --> 00:23:11,214
that might be like 10 hours,

491
00:23:11,554 --> 00:23:12,534
and so you're gonna have to come up

492
00:23:12,554 --> 00:23:13,254
with some kind of solution.

493
00:23:13,885 --> 00:23:14,986
a render farm or something,

494
00:23:16,087 --> 00:23:17,469
or you're gonna have to be very patient

495
00:23:17,589 --> 00:23:18,550
and wait a long time for rendering.

496
00:23:20,331 --> 00:23:22,373
So, did any of that actually stop us

497
00:23:22,553 --> 00:23:23,774
and impede the game in any way?

498
00:23:24,355 --> 00:23:27,077
Kind of, probably, mostly not is the answer.

499
00:23:27,498 --> 00:23:30,000
So, for the foot placement example,

500
00:23:30,140 --> 00:23:33,864
there's some gifs here of different slopes.

501
00:23:33,984 --> 00:23:36,866
We basically tackled this problem with like two things.

502
00:23:37,977 --> 00:23:42,303
The first thing is the character is just rotated to the normal of the surface that he's on,

503
00:23:43,024 --> 00:23:46,388
which is kind of like halfway there, but he obviously just looks like he's going to fall

504
00:23:46,469 --> 00:23:48,091
over because the animation is not built for that.

505
00:23:49,172 --> 00:23:51,015
So then it becomes a content problem.

506
00:23:51,135 --> 00:23:52,857
So we do a version of the idle where...

507
00:23:53,764 --> 00:23:55,645
He's looking up a slope and looking down a slope,

508
00:23:56,045 --> 00:23:58,546
and that's relatively simple, except that then you

509
00:23:58,586 --> 00:24:00,707
have to do all the transitions.

510
00:24:00,847 --> 00:24:02,828
But if you like making content, and if you

511
00:24:02,868 --> 00:24:04,669
have tools that make it very easy to make content,

512
00:24:04,789 --> 00:24:07,831
like we did, you can do stuff like this fairly easily.

513
00:24:07,951 --> 00:24:10,492
And now it's pretty robust, and basically there's

514
00:24:10,552 --> 00:24:13,133
no surface in the game that Ori can't stand on perfectly.

515
00:24:13,893 --> 00:24:15,054
The other nice thing, actually, about this

516
00:24:15,154 --> 00:24:15,414
is that

517
00:24:16,199 --> 00:24:18,380
I mean, it's cool if you can dynamically put his feet

518
00:24:18,400 --> 00:24:18,941
in the right place.

519
00:24:19,001 --> 00:24:22,083
But the fact that this is an entirely bespoke animation,

520
00:24:22,484 --> 00:24:26,087
I can completely change his posture and make it much nicer.

521
00:24:27,167 --> 00:24:29,229
So blend trees, this is kind of a fun one.

522
00:24:30,070 --> 00:24:33,893
We, for the idle walk run problem, what we ended up doing

523
00:24:33,933 --> 00:24:36,235
was all of the animations that affects,

524
00:24:36,735 --> 00:24:38,837
we rendered at four times the normal frame rate.

525
00:24:39,498 --> 00:24:42,080
And then we would dynamically speed up and slow down

526
00:24:42,120 --> 00:24:45,062
the animation based on where your stick was.

527
00:24:46,546 --> 00:24:50,990
So the 120 FPS version of the walk is playing at that threshold

528
00:24:51,090 --> 00:24:52,992
where you're doing the fastest version of the walk,

529
00:24:53,212 --> 00:24:56,475
and then we slow it down to 30 if you're doing the little, tiniest bit of stick.

530
00:24:56,936 --> 00:25:01,360
And then when you hit the threshold from the 120 walk to the 30 jog,

531
00:25:01,700 --> 00:25:02,901
we just have a transition that covers it.

532
00:25:03,282 --> 00:25:05,103
And it's not bulletproof.

533
00:25:05,143 --> 00:25:05,724
I've got five minutes.

534
00:25:06,004 --> 00:25:10,048
It's not bulletproof, but it does the job really, really well and isn't a big deal.

535
00:25:11,114 --> 00:25:13,294
For a different version of how to circumvent the blend tree issue,

536
00:25:13,895 --> 00:25:17,676
for the swimming, we wanted to do a kind of like

537
00:25:17,896 --> 00:25:19,877
a 360-degree Rayman origins type thing.

538
00:25:21,177 --> 00:25:21,897
So what we did was,

539
00:25:22,437 --> 00:25:25,519
we had like a swimming idle thing just going horizontally,

540
00:25:25,919 --> 00:25:27,979
and then we additively made like 11 versions

541
00:25:28,039 --> 00:25:29,580
with his back twisting like concave,

542
00:25:29,980 --> 00:25:31,140
11 versions twisting convex.

543
00:25:31,601 --> 00:25:34,402
And then the engine at all times is sort of simultaneously running

544
00:25:34,722 --> 00:25:35,522
all of those versions.

545
00:25:36,462 --> 00:25:38,063
And depending on the angle you're going to

546
00:25:38,483 --> 00:25:39,563
and the angle you're coming from,

547
00:25:40,536 --> 00:25:43,157
the programming magic just picks dynamically

548
00:25:43,257 --> 00:25:45,238
through all these different animations,

549
00:25:45,299 --> 00:25:46,599
and you never realize that it's playing

550
00:25:46,639 --> 00:25:48,220
like 15 different versions of things.

551
00:25:48,260 --> 00:25:50,121
It just looks like a fluid blend tree thing.

552
00:25:51,742 --> 00:25:54,383
For the lookup targets, you could do that same blend tree,

553
00:25:54,403 --> 00:25:55,784
like have a million different versions of the idle.

554
00:25:56,284 --> 00:25:57,405
That didn't end up being a big deal.

555
00:25:57,445 --> 00:25:59,165
We just made like, it's a content issue again.

556
00:25:59,726 --> 00:26:01,687
Here's one 45 degrees, here's one looking upwards,

557
00:26:01,747 --> 00:26:02,767
here's one in the background,

558
00:26:02,827 --> 00:26:04,768
and that kind of served our purposes.

559
00:26:05,869 --> 00:26:07,550
So, here's the conclusion, one sec.

560
00:26:10,346 --> 00:26:13,209
OK. So I had four years to make the game.

561
00:26:13,969 --> 00:26:15,631
If you have, like, a year or eighteen months,

562
00:26:16,091 --> 00:26:18,193
this pipeline may just be completely unfeasible.

563
00:26:19,754 --> 00:26:23,197
The guys at Moon built, like, completely custom tools

564
00:26:23,237 --> 00:26:25,999
for absolutely everything, and you might not have

565
00:26:26,019 --> 00:26:28,141
the time or the inclination to do that.

566
00:26:29,282 --> 00:26:32,645
Also, just personally, as an animator, I like building content.

567
00:26:32,745 --> 00:26:34,586
I like building tons and tons of content

568
00:26:34,887 --> 00:26:37,229
and doing little, clever, silly, weird things that

569
00:26:37,829 --> 00:26:39,810
maybe someone else would think was kind of strangely

570
00:26:39,990 --> 00:26:41,190
overdramatic and pointless.

571
00:26:41,591 --> 00:26:43,711
I think it's fun to do that kind of stuff.

572
00:26:44,012 --> 00:26:46,232
And also, I want total creative control

573
00:26:46,353 --> 00:26:47,653
over everything I'm seeing in the game.

574
00:26:48,853 --> 00:26:50,454
I don't like giving leeway to,

575
00:26:50,934 --> 00:26:52,055
okay, well, they're gonna take my animation,

576
00:26:52,095 --> 00:26:52,755
do this, do that.

577
00:26:53,015 --> 00:26:55,356
I just wanna know that it's exactly how I designed

578
00:26:55,376 --> 00:26:56,617
the thing to work and to look.

579
00:26:57,217 --> 00:27:01,178
And maybe not everyone's as insane as OCD as I am.

580
00:27:01,519 --> 00:27:02,599
So not everyone would see this pipeline.

581
00:27:02,799 --> 00:27:05,340
It's the perfect pipeline for me.

582
00:27:05,420 --> 00:27:05,820
I loved it.

583
00:27:06,421 --> 00:27:08,042
I did not want to make a 2D game any other way,

584
00:27:09,463 --> 00:27:12,265
and I was very generously supported by the programmers.

585
00:27:12,325 --> 00:27:14,106
They kind of just did whatever I wanted,

586
00:27:14,146 --> 00:27:15,908
and they entered the kind of quality I wanted.

587
00:27:15,928 --> 00:27:18,109
That's the talk, thank you very much.

588
00:27:18,129 --> 00:27:18,189
Yes!

589
00:27:27,796 --> 00:27:27,856
Yes!

590
00:27:28,396 --> 00:27:28,496
Yes!

591
00:27:28,516 --> 00:27:28,596
Yes!

592
00:27:28,616 --> 00:27:28,717
Yes!

593
00:27:28,817 --> 00:27:28,957
Yes!

594
00:27:28,977 --> 00:27:29,077
Yes!

595
00:27:29,117 --> 00:27:29,197
Yes!

596
00:27:29,217 --> 00:27:29,277
Yes!

597
00:27:29,297 --> 00:27:29,357
Yes!

598
00:27:29,377 --> 00:27:29,437
Yes!

599
00:27:29,457 --> 00:27:29,517
Yes!

600
00:27:29,537 --> 00:27:29,697
Yes!

601
00:27:29,717 --> 00:27:29,957
Yes!

602
00:27:30,678 --> 00:27:30,778
Yes!

603
00:27:30,818 --> 00:27:30,938
Yes!

604
00:27:30,958 --> 00:27:31,038
Yes!

605
00:27:31,058 --> 00:27:31,118
Yes!

606
00:27:31,138 --> 00:27:31,218
Yes!

607
00:27:31,238 --> 00:27:31,298
Yes!

608
00:27:36,113 --> 00:27:37,114
Does anyone want to ask a question?

609
00:27:37,434 --> 00:27:39,075
Won't be offended if no one wants to ask a question.

610
00:27:40,416 --> 00:27:40,536
Sorry?

611
00:27:40,556 --> 00:27:42,437
I have to go to the mic.

612
00:27:42,477 --> 00:27:45,359
Oh yes, and also, I was told to turn off your cell phones,

613
00:27:45,399 --> 00:27:46,399
but it's too late for that now, isn't it?

614
00:27:47,400 --> 00:27:48,601
Yeah, so if someone wants to ask a question,

615
00:27:48,621 --> 00:27:49,541
if you just go to the mic, that'd be great.

616
00:27:50,161 --> 00:27:50,322
Hey.

617
00:27:51,462 --> 00:27:53,043
I was just wondering if you guys tested

618
00:27:53,083 --> 00:27:57,005
with having your characters made up of separate pieces

619
00:27:57,205 --> 00:28:01,788
and animating, even animating those separate pieces,

620
00:28:02,208 --> 00:28:04,229
but using a bone system in Unity?

621
00:28:04,950 --> 00:28:05,190
Yeah.

622
00:28:06,542 --> 00:28:07,643
I've messed around with stuff like that in the past.

623
00:28:07,963 --> 00:28:10,325
The problem is, you just can't turn your character around.

624
00:28:10,345 --> 00:28:12,726
I mean, like, in the video that I showed,

625
00:28:12,746 --> 00:28:13,627
the little sizzle reel thing,

626
00:28:15,368 --> 00:28:16,949
when he's hitting on those bounce pads

627
00:28:16,969 --> 00:28:18,150
and kind of going, jush, jush, jush,

628
00:28:18,550 --> 00:28:20,051
I'm spinning the entire character around,

629
00:28:20,251 --> 00:28:22,893
and I know I keep going on about,

630
00:28:22,913 --> 00:28:23,773
you don't make it look 3D,

631
00:28:23,813 --> 00:28:25,994
but there are certain elements of being able to

632
00:28:26,255 --> 00:28:27,475
see the character from any angle

633
00:28:27,856 --> 00:28:29,136
that you're very limited by

634
00:28:29,176 --> 00:28:30,277
if you're doing a paper doll thing.

635
00:28:30,674 --> 00:28:31,574
and I didn't want to be.

636
00:28:31,654 --> 00:28:32,215
And that would mean,

637
00:28:33,215 --> 00:28:34,757
it would have been completely impossible to do that.

638
00:28:34,877 --> 00:28:36,618
I do so much stuff where I'm turning characters

639
00:28:37,239 --> 00:28:38,600
in everything, it would just not be possible.

640
00:28:39,380 --> 00:28:40,701
Hey, what's the question?

641
00:28:41,362 --> 00:28:43,644
How much of everything that you're talking about here

642
00:28:43,664 --> 00:28:46,066
is a benefit of Unity versus the,

643
00:28:46,466 --> 00:28:50,089
I guess, workflow of using a 3D asset to represent,

644
00:28:50,529 --> 00:28:51,110
instead of a Sprite?

645
00:28:52,631 --> 00:28:54,953
So how much of this pipeline is just because of Unity?

646
00:28:54,973 --> 00:28:55,853
Yeah.

647
00:28:56,214 --> 00:28:56,614
To be honest,

648
00:28:57,389 --> 00:29:00,230
Unity's just really, you can kind of do whatever you want in it.

649
00:29:00,270 --> 00:29:03,452
It doesn't come with, like, a super structured pipeline for things.

650
00:29:03,492 --> 00:29:05,614
There's, like, a relatively basic set of things it comes with.

651
00:29:06,814 --> 00:29:09,076
And I certainly, at the time, like, Mechanim didn't exist.

652
00:29:09,896 --> 00:29:15,159
And like, this, when we started, it was like Unity 3, so there wasn't even, like, the 2D

653
00:29:15,580 --> 00:29:16,460
toolkits and stuff.

654
00:29:16,480 --> 00:29:20,863
So it really was just, like, create it all from scratch, because, like, we kind of have

655
00:29:20,883 --> 00:29:21,863
to, but we also kind of want to.

656
00:29:21,883 --> 00:29:22,144
So yeah.

657
00:29:22,164 --> 00:29:22,404
Thank you.

658
00:29:22,804 --> 00:29:23,004
Thank you.

