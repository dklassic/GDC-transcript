1
00:00:06,140 --> 00:00:09,741
Hi, and welcome to Making the Believable Horses of Red Dead Redemption 2.

2
00:00:09,741 --> 00:00:17,184
My name is Tobias Cleanthus, and I'm a lead AI gameplay programmer at Rockstar Games.

3
00:00:17,184 --> 00:00:21,525
I'm based at Rockstar North, where I look after a team based at Rockstar North and Rockstar India

4
00:00:21,525 --> 00:00:25,867
that focuses on core locomotion and movement in our video games.

5
00:00:25,867 --> 00:00:31,228
And today I want to talk about one such example, which is the horses of Red Dead 2.

6
00:00:31,666 --> 00:00:34,748
Let's have a little look at what we're going to talk about today.

7
00:00:34,748 --> 00:00:37,229
I'd like to discuss where we started out at first,

8
00:00:37,229 --> 00:00:40,811
and what our goals were with the horses in Red Dead 2.

9
00:00:40,811 --> 00:00:42,652
We'll then go into talking about freedom of movement

10
00:00:42,652 --> 00:00:45,394
and how this was critical to delivering the behavior of our horses in Red Dead.

11
00:00:45,394 --> 00:00:48,536
We'll follow on with some discussion about gates and speed

12
00:00:48,536 --> 00:00:52,258
and their impact and responsiveness with the horses in the game.

13
00:00:52,258 --> 00:00:56,541
We'll then look at riders and how we synchronize their movement with horses.

14
00:00:56,541 --> 00:00:59,542
Following that, we'll discuss the environmental awareness of our horses

15
00:00:59,542 --> 00:01:01,043
and how we cope with such varied terrain.

16
00:01:02,382 --> 00:01:08,883
We'll also talk about the personalities of our horses and the differences in breeds before wrapping up at the end.

17
00:01:08,883 --> 00:01:11,964
So starting out with Red Dead 2.

18
00:01:11,964 --> 00:01:17,365
So we had a lot to follow on from the first Red Dead Redemption.

19
00:01:17,365 --> 00:01:22,326
We knew we had a big task following on from people's memories of John Marston's story.

20
00:01:22,326 --> 00:01:31,208
We knew we wanted to make sure that the horse was going to be a best supporting character for Arthur Morgan and not simply like a vehicle or mode of transport.

21
00:01:31,828 --> 00:01:34,710
We also knew this was Rockstar's biggest game world so far,

22
00:01:34,710 --> 00:01:36,832
and there was going to be huge variation in the terrain,

23
00:01:36,832 --> 00:01:41,094
and that would become very important to sell a grounded experience to players.

24
00:01:41,094 --> 00:01:44,397
We also wanted to make sure that throughout the game,

25
00:01:44,397 --> 00:01:48,199
the player was left with an emotional attachment to their horse

26
00:01:48,199 --> 00:01:51,081
through Arthur's story and beyond into Red Dead Online.

27
00:01:54,248 --> 00:01:58,930
So coming from GTA V, we had a big revamp of a lot of different code systems,

28
00:01:58,930 --> 00:02:01,051
one of which was our locomotion systems,

29
00:02:01,051 --> 00:02:05,212
which we attempted to unify several disparate systems for animal,

30
00:02:05,212 --> 00:02:08,714
human and horse movement into one.

31
00:02:08,714 --> 00:02:12,135
We also knew that we were going to change things to be a lot more grounded

32
00:02:12,135 --> 00:02:16,117
compared to the world of GTA V. Red Dead's world is a much slower pace.

33
00:02:16,759 --> 00:02:21,562
And so we focus quite early on bringing in our horses into this new technology.

34
00:02:21,562 --> 00:02:29,007
So I want to have a look at a first example of where we got the first couple of months.

35
00:02:29,007 --> 00:02:35,331
So just having a look at this, I think we'll see a few ranges of gates movements,

36
00:02:35,331 --> 00:02:37,872
so walking and countering, trotting.

37
00:02:37,872 --> 00:02:41,915
We'll also see some of the transitions from idling and stopping.

38
00:02:43,449 --> 00:02:47,410
And looking at this, I think it'd be fair to ask what's wrong with this and why don't

39
00:02:47,410 --> 00:02:48,330
we just ship it at this date?

40
00:02:48,330 --> 00:02:53,051
And I think there's quite a few different points that we looked at when we were evaluating

41
00:02:53,051 --> 00:02:53,711
it early on.

42
00:02:53,711 --> 00:02:59,492
It definitely was very functional, but we had some problems with a very discrete range

43
00:02:59,492 --> 00:03:00,253
of speeds.

44
00:03:00,253 --> 00:03:04,373
There was no range nor variation, something that would become critical as we worked on

45
00:03:04,373 --> 00:03:07,494
things such as the gang riding together with Dutch and the gang.

46
00:03:09,288 --> 00:03:11,629
We also knew there was a very limited range of movement.

47
00:03:11,629 --> 00:03:13,691
At this point, we simply had some turning animations

48
00:03:13,691 --> 00:03:14,752
and some transitions to go with.

49
00:03:14,752 --> 00:03:18,514
We also found that the turns were quite stiff.

50
00:03:18,514 --> 00:03:21,616
With the quadruped, we found that the body would be

51
00:03:21,616 --> 00:03:24,078
posing in a C shape as it turned left and right.

52
00:03:24,078 --> 00:03:25,879
So as we combined those assets together,

53
00:03:25,879 --> 00:03:28,942
we had to slow them down, reducing responsiveness

54
00:03:28,942 --> 00:03:32,024
so that they could blend together acceptably.

55
00:03:32,024 --> 00:03:34,445
And generally, a lot of our transitions were very discreet,

56
00:03:34,445 --> 00:03:36,087
so they're quite lumpy and inconsistent.

57
00:03:36,087 --> 00:03:38,628
And this is definitely something we wanted to solve for the ship.

58
00:03:40,402 --> 00:03:45,724
So looking at this, we went back and wanted to understand what the problems we were seeing were.

59
00:03:45,724 --> 00:03:49,306
Definitely functional, but missing something. And I think as I said when we started out,

60
00:03:49,306 --> 00:03:53,328
we wanted to make sure that the horse was more than just a mode of transport for APPA.

61
00:03:53,328 --> 00:03:57,610
We wanted to see if we could get a livelier performance, and we wanted to see if there

62
00:03:57,610 --> 00:04:01,711
was a large amount of behavioural implications that we could get from vastly expanding the

63
00:04:01,711 --> 00:04:02,352
amount of movement.

64
00:04:03,457 --> 00:04:06,658
So to look at how we could introduce this kind of believability to the horse,

65
00:04:06,658 --> 00:04:11,780
we started to look at capturing footage of real horses moving here in Scotland.

66
00:04:11,780 --> 00:04:15,861
So I want to just show an example of something that we caught which very early on became

67
00:04:15,861 --> 00:04:21,363
incredibly important to us. And this is a case where a horse is turning but using a lot of

68
00:04:21,363 --> 00:04:25,105
lateral movement to initially do it. So this is really exaggerated because we wanted to

69
00:04:25,105 --> 00:04:26,745
capture an example of it that really showed it off.

70
00:04:27,517 --> 00:04:30,442
But I just want to run through and show you what I'm talking about.

71
00:04:30,442 --> 00:04:32,525
So initially, as the horse goes into a turn,

72
00:04:32,525 --> 00:04:34,989
you'll see it keeps his body oriented forward.

73
00:04:34,989 --> 00:04:39,817
As it starts to turn, it's going to sidestep before it peels into the turn.

74
00:04:47,230 --> 00:04:52,811
So straightaway capturing this, we realized that adding that extra degree of freedom of movement to the game

75
00:04:52,811 --> 00:04:54,512
was going to be incredibly important.

76
00:04:54,512 --> 00:04:58,493
And so this leads me to talking about freedom of movement and how we added this to the horse.

77
00:04:58,493 --> 00:05:02,313
So the lateral movement that we saw in that video,

78
00:05:02,313 --> 00:05:07,474
something that became incredibly important when we decided that we were going to use this

79
00:05:07,474 --> 00:05:10,655
to assist the movement without having to have very slow blends

80
00:05:10,655 --> 00:05:14,836
to avoid those kind of weird shapes blending left and right assets together.

81
00:05:16,013 --> 00:05:23,335
We also wondered with this whether we could use it to deliver something that would in effect give a large amount of character to our horses in game.

82
00:05:23,335 --> 00:05:31,097
So could we give an indirect kind of notion of control by giving a responsive movement direction but lagging behind their orientation?

83
00:05:31,097 --> 00:05:37,559
It turned out to be one of the most integral features that we developed for the horse, but it was also one of the most difficult.

84
00:05:37,559 --> 00:05:44,080
So I just want to show you an example of what we actually had in our first outline bringing lateral movement into the horses.

85
00:05:47,059 --> 00:05:50,981
So we quite rapidly added these into our blend trees.

86
00:05:50,981 --> 00:05:53,764
We would have assets blending on X,

87
00:05:53,764 --> 00:05:57,667
and they would work with our turn assets and our forward assets.

88
00:05:57,667 --> 00:05:59,468
And initially, it gave us the idea,

89
00:05:59,468 --> 00:06:01,069
but it was a little bit slippery to look at.

90
00:06:01,069 --> 00:06:05,673
So why was that?

91
00:06:05,673 --> 00:06:07,554
For us, quite early on,

92
00:06:07,554 --> 00:06:10,056
we found that we had significant problems

93
00:06:10,056 --> 00:06:12,198
with the usage of blend trees in our tech.

94
00:06:12,844 --> 00:06:17,950
So we're all kind of familiar with these arrangements of blending animations together.

95
00:06:17,950 --> 00:06:22,975
They're incredibly useful, quite liberating for animators, but for us they came with a significant

96
00:06:22,975 --> 00:06:27,881
amount of problems when we were trying to integrate this kind of movement on our horses.

97
00:06:27,881 --> 00:06:31,465
So for one, our structures were very much explicitly put together.

98
00:06:32,420 --> 00:06:40,023
they didn't actually automatically pick up features from our animations, which meant as soon as we wanted to change them

99
00:06:40,023 --> 00:06:46,185
and add more, we would have to make more complicated graphs. If we wanted a different style of movement,

100
00:06:46,185 --> 00:06:47,906
we would have to make another graph.

101
00:06:47,906 --> 00:06:52,828
And overall, this kind of explicit manipulation of them became very, very complicated for us.

102
00:06:52,828 --> 00:06:53,748
So,

103
00:06:53,748 --> 00:07:00,991
we look forward to automating extraction of our features and what we could do to move away from using these blend trees and arrange

104
00:07:01,706 --> 00:07:08,489
3D spaces of our assets that would automatically extract root motion or movement of individual bones

105
00:07:08,489 --> 00:07:12,810
and combine our assets without any human intervention. This meant that we could then

106
00:07:12,810 --> 00:07:17,492
move away from having programmers or animators having to put together graphs every time they

107
00:07:17,492 --> 00:07:22,034
wanted to add any movement, but it also meant that we could vastly improve the accuracy of

108
00:07:22,034 --> 00:07:22,774
what we were adding in.

109
00:07:23,915 --> 00:07:32,784
So I just want to have a look at what I'm talking about when I say adding in these 3D spaces and go over the different dimensions we were looking at.

110
00:07:32,784 --> 00:07:36,027
So for our 1D dimension, we were looking at the angular velocity.

111
00:07:36,027 --> 00:07:39,030
This is pretty much what we had to begin with.

112
00:07:39,030 --> 00:07:45,617
By improving the automation on this, then we get a more accurate result, but we still don't get rid of that problem of blending left and right masses together.

113
00:07:47,010 --> 00:07:50,192
Then we introduced linear velocity onto that, just on xy.

114
00:07:50,192 --> 00:07:56,316
That gives us some speed control, gets rid of our problems with discrete speeds I was talking about earlier.

115
00:07:56,316 --> 00:07:59,598
But again, it doesn't help us with those problems with turning.

116
00:07:59,598 --> 00:08:03,900
And so lastly, what we need to add on is that lateral velocity that I talked about earlier,

117
00:08:03,900 --> 00:08:07,082
which is effectively strafing for our horses.

118
00:08:07,646 --> 00:08:13,627
So what we would do, put together the groups of assets required for something like a canter cycle,

119
00:08:13,627 --> 00:08:20,049
set up the system to automatically extract our root motion on x and y plus our angular velocity,

120
00:08:20,049 --> 00:08:24,549
and this will then arrange those assets together. The great thing about this though was that even

121
00:08:24,549 --> 00:08:28,870
for similar gates of movement, we could choose how many assets we would put in there and not

122
00:08:28,870 --> 00:08:33,051
have to go and explicitly create a structure every time. So we could have more detail in

123
00:08:33,051 --> 00:08:34,452
a certain place and less in others.

124
00:08:36,244 --> 00:08:40,805
So with that in play, let's go back and have a look at another example with a real-life horse.

125
00:08:40,805 --> 00:08:47,787
So talking about the lateral movement and what that actually enables a horse to do,

126
00:08:47,787 --> 00:08:51,548
I wanted to look at an example with a horse actually pivoting around its front feet.

127
00:08:51,548 --> 00:08:55,709
This kind of movement is something that became really important to us in the game

128
00:08:55,709 --> 00:08:59,330
and a feature we actually added in.

129
00:08:59,330 --> 00:09:01,490
So as we got this horse to turn in a tight circle,

130
00:09:01,490 --> 00:09:02,470
hopefully you can see.

131
00:09:03,100 --> 00:09:06,643
the vast majority of the movement is kind of pivoting around the front feet,

132
00:09:06,643 --> 00:09:12,289
rather than typically, as we might do in a video game, with some kind of root underneath the torso.

133
00:09:12,289 --> 00:09:17,654
And there's not actually very much forward velocity here at all, it's almost all entirely

134
00:09:17,654 --> 00:09:21,418
on x or lateral velocity, which allows us to do this turn in place.

135
00:09:21,418 --> 00:09:27,964
So this was something that we ended up calling drift.

136
00:09:30,933 --> 00:09:36,917
So Drift added into Red Dead straight away enabled us to deliver this notion of indirect

137
00:09:36,917 --> 00:09:42,080
control of our horses, because immediately we have some freedom of movement, which gives

138
00:09:42,080 --> 00:09:47,904
us the ability to control the movement direction of a player or AI's horse accurately without

139
00:09:47,904 --> 00:09:51,387
having to snap them into the orientation immediately.

140
00:09:52,097 --> 00:09:55,579
we can then give really consistent control on that movement direction,

141
00:09:55,579 --> 00:09:58,181
but choose to lag the orientation for lots of different purposes.

142
00:09:58,181 --> 00:10:02,643
And again, that gives us that notion that the rider's not totally in control of the horse,

143
00:10:02,643 --> 00:10:05,104
you're not steering a cow with an immediate response,

144
00:10:05,104 --> 00:10:07,005
the horse is trying to interpret your input.

145
00:10:07,005 --> 00:10:15,730
So one thing that is missing from this that I haven't brought up is what we did at zero.

146
00:10:15,730 --> 00:10:15,990
Now,

147
00:10:17,460 --> 00:10:19,002
With left and right assets combined,

148
00:10:19,002 --> 00:10:21,764
there's a position at the zero velocity,

149
00:10:21,764 --> 00:10:23,325
zero angular velocity,

150
00:10:23,325 --> 00:10:26,168
whereby you basically need some stepping on the spot.

151
00:10:26,168 --> 00:10:28,610
And with the horse, this was something that we decided

152
00:10:28,610 --> 00:10:30,491
we could make a bit of a moment with.

153
00:10:30,491 --> 00:10:32,132
So this is a dressage move

154
00:10:32,132 --> 00:10:34,074
that's typically referred to as Piaf that we added in.

155
00:10:34,074 --> 00:10:35,996
And we caught some of this in Mocha

156
00:10:35,996 --> 00:10:39,498
and found that it had a huge amount of character.

157
00:10:39,498 --> 00:10:41,120
So we wanted to replicate this

158
00:10:41,120 --> 00:10:44,262
and have this available for us

159
00:10:44,262 --> 00:10:46,144
across all of our gates on our horses.

160
00:10:47,198 --> 00:10:50,160
So here's an example in the game.

161
00:10:50,160 --> 00:10:51,641
Now, with this added in, this also

162
00:10:51,641 --> 00:10:53,823
means that across all of our gates,

163
00:10:53,823 --> 00:10:57,145
from a horse cantering to a horse walking or trotting,

164
00:10:57,145 --> 00:10:59,166
they can go all the way up to their top speed in that gate

165
00:10:59,166 --> 00:11:01,328
and all the way down to zero, which

166
00:11:01,328 --> 00:11:03,369
gives us a great deal of flexibility

167
00:11:03,369 --> 00:11:08,132
and gets rid of those discrete ranges I mentioned earlier.

168
00:11:08,132 --> 00:11:09,913
So breaking it down, I just wanted

169
00:11:09,913 --> 00:11:13,115
to go over the breakdown of what drift actually

170
00:11:13,115 --> 00:11:13,956
is for us in Red Dead.

171
00:11:15,440 --> 00:11:20,883
So with all of our horses, we always have a zone roughly in front of them where we don't

172
00:11:20,883 --> 00:11:26,686
much care about adjusting their orientation. We'll respond to movement directions, but we'll very

173
00:11:26,686 --> 00:11:33,330
loosely adjust the orientation as you move along. As a horse commits into a turn, then we'll start

174
00:11:33,330 --> 00:11:37,153
to expand that region and gradually turn closer towards the movement direction.

175
00:11:38,292 --> 00:11:43,534
And then as we can persist with that, using all of this free movement we've got available now,

176
00:11:43,534 --> 00:11:47,977
we can also make the horse oversteer. So we do another thing to introduce that idea of

177
00:11:47,977 --> 00:11:53,060
indirect control, making the horse oversteer because they don't know when you're going to

178
00:11:53,060 --> 00:11:57,182
peel out of it. And this gives us, in effect, this kind of drifting movement skidding out and

179
00:11:57,182 --> 00:12:03,945
back into straight movement. And so here's an example of that first working all together

180
00:12:03,945 --> 00:12:04,986
in Red Dirt during development.

181
00:12:09,268 --> 00:12:13,909
So hopefully you can see here as we go into the oversteer,

182
00:12:13,909 --> 00:12:16,890
then we gradually straighten up, but the movement direction stays consistent.

183
00:12:16,890 --> 00:12:22,912
Here we can see that we could then exploit the stroking, the lateral movement,

184
00:12:22,912 --> 00:12:25,672
and then gradually peel back into turning again.

185
00:12:25,672 --> 00:12:27,953
Here it is working on Chanceler as well.

186
00:12:27,953 --> 00:12:36,815
So with all of those together, we have a great deal of freedom of movement.

187
00:12:37,452 --> 00:12:43,334
and I wanted to then talk about the gates and speeds that come with this.

188
00:12:43,334 --> 00:12:47,536
So I don't want to make any assumptions about what people know about horse gates,

189
00:12:47,536 --> 00:12:53,558
but let's compare this to looking at how a biped moves, which hopefully we'll be familiar with.

190
00:12:53,558 --> 00:12:58,319
So typically we'd look in a game of having something like walk, jog, run, and sprint

191
00:12:58,319 --> 00:12:59,500
for a biped, needle movement.

192
00:13:00,327 --> 00:13:04,589
With the horses, we had walk and trot, very much similar kind of gates.

193
00:13:04,589 --> 00:13:06,190
And then we had canter and gallop.

194
00:13:06,190 --> 00:13:08,431
Now, these gates were very different.

195
00:13:08,431 --> 00:13:10,172
They're what are known as three-beat gates,

196
00:13:10,172 --> 00:13:13,453
which means they have a kind of syncopated pair of first footsteps

197
00:13:13,453 --> 00:13:15,214
before the back end comes back down.

198
00:13:15,214 --> 00:13:18,075
And this is something I'll talk about a little bit later

199
00:13:18,075 --> 00:13:21,957
because this introduces some complexity for us.

200
00:13:21,957 --> 00:13:25,198
Now, looking at the gates, what we wanted to make sure we were doing

201
00:13:25,198 --> 00:13:27,359
was allowing an overlapping range of motion.

202
00:13:28,527 --> 00:13:32,950
we could use the gates to represent effort, but we could cater for a wider range of speeds within

203
00:13:32,950 --> 00:13:38,253
any individual gate. So if you have a look at the graph that's on screen at the moment,

204
00:13:38,253 --> 00:13:43,457
you should see in red we're showing the kind of minimum ranges that our gates can cover.

205
00:13:43,457 --> 00:13:47,720
They're not ideal, not where we would generally want to be in, but we can run them. We then have

206
00:13:47,720 --> 00:13:52,063
a yellow range which is the ideal best looking region for that particular gate, and then we have

207
00:13:52,063 --> 00:13:54,104
a green range where they can overlap with the next one.

208
00:13:54,747 --> 00:14:00,650
This thing gets rid of that idea of discrete speeds and enables us now to continuously

209
00:14:00,650 --> 00:14:07,854
control the movement of the horse, most deterministically, through those different gates.

210
00:14:07,854 --> 00:14:11,896
However, there's one problem that does come with this, and that's transitions,

211
00:14:11,896 --> 00:14:17,319
which didn't have this setup. So our transitions in Red Dead 2,

212
00:14:17,319 --> 00:14:21,201
initially in development, were one-shots, a bit like in the initial video I showed.

213
00:14:22,592 --> 00:14:24,995
In isolation, these look really great.

214
00:14:24,995 --> 00:14:28,319
You can play them and get a really nicely authored movement every time.

215
00:14:28,319 --> 00:14:34,406
However, they do introduce problems for us when we're talking about trying to be deterministic.

216
00:14:34,406 --> 00:14:37,710
So, it's difficult to control the speeds of them,

217
00:14:37,710 --> 00:14:42,256
meaning that we would have to produce a large amount of them if we wanted them to overlap with all of our gates.

218
00:14:43,897 --> 00:14:46,098
the foot cycle would define how the transition behaved.

219
00:14:46,098 --> 00:14:49,220
So we couldn't exactly control the duration

220
00:14:49,220 --> 00:14:50,280
that transition would occur,

221
00:14:50,280 --> 00:14:53,622
because it would be dependent on whether a foot was down

222
00:14:53,622 --> 00:14:54,963
or lifting or mid-strike.

223
00:14:54,963 --> 00:14:57,945
And that also leads into that idea

224
00:14:57,945 --> 00:14:59,406
of them being unpredictable,

225
00:14:59,406 --> 00:15:02,227
because now we have some deterministic range

226
00:15:02,227 --> 00:15:04,028
of velocities that we can use,

227
00:15:04,028 --> 00:15:06,150
Boston a gate, and then we go into a transition,

228
00:15:06,150 --> 00:15:08,991
which only picks a fixed range.

229
00:15:08,991 --> 00:15:10,612
We now suddenly can't control

230
00:15:10,612 --> 00:15:11,493
where we're going from or to.

231
00:15:12,372 --> 00:15:17,094
So initially we tried this idea of unrolling these. By unrolling them what I mean is we would

232
00:15:17,094 --> 00:15:24,296
look at the mean velocity through these and figure out frame to frame how we could adjust the playback.

233
00:15:24,296 --> 00:15:30,718
In principle it was really quite a simple thing to do but it didn't look too great. We still

234
00:15:30,718 --> 00:15:34,719
needed a large volume of assets for them to not look like they were playing super speed or slow-mo.

235
00:15:36,054 --> 00:15:40,536
They obviously in a lot of cases looked at slow-mo or super speed because we were otherwise

236
00:15:40,536 --> 00:15:42,917
speeding up or slowing down an asset to achieve a speed.

237
00:15:42,917 --> 00:15:47,439
And again they were still kind of unpredictable because we still had a dependency on hitting

238
00:15:47,439 --> 00:15:51,681
the right foot strike whenever we played them.

239
00:15:51,681 --> 00:15:56,903
So what we wanted to look at, I'm going to go over in the next slide, which is continuous

240
00:15:56,903 --> 00:16:00,204
kind of control of us moving through gates.

241
00:16:00,204 --> 00:16:03,586
So we'll start off in this example looking at going from a trot to a canter.

242
00:16:05,133 --> 00:16:10,457
So we're gradually speeding up throughout, trying to keep a kind of deterministic acceleration as we go.

243
00:16:10,457 --> 00:16:15,440
What will happen in here is we'll go through the ideal range,

244
00:16:15,440 --> 00:16:18,682
gradually get into an uncomfortable maximum range that the horse can handle.

245
00:16:18,682 --> 00:16:23,185
And whilst we're in there, we'll look for the opportune moment

246
00:16:23,185 --> 00:16:25,907
to continue into the transogate.

247
00:16:35,592 --> 00:16:42,637
So as you can see in this example, suddenly we've gone from having quite a fixed speed at the start and end to having a very smooth progression throughout.

248
00:16:42,637 --> 00:16:52,324
And this is something that became really important for us when you look at the rides with Dutch and the gang, where all of the gang could be loosely speeding up or slowing down between each other.

249
00:16:52,324 --> 00:16:58,649
And the last thing we wanted to get into was stuck oscillating between fixed transitions as we had to pull different members of the group forwards and backwards.

250
00:17:02,241 --> 00:17:07,404
So what's the actual breakdown of these cycles that we're using in this case?

251
00:17:07,404 --> 00:17:13,068
Rather than using one-shots, we decided to introduce the idea of continuous acceleration

252
00:17:13,068 --> 00:17:18,992
and deceleration. So the idea would be we would use overlapping cycles that could represent

253
00:17:18,992 --> 00:17:23,595
the notion of acceleration on the horse or the deceleration and deliver a similar kind of posing

254
00:17:23,595 --> 00:17:29,578
for us. With these being cycles, it means that we could introduce whenever we wanted them to come in,

255
00:17:29,578 --> 00:17:31,459
independent necessarily of footstrokes.

256
00:17:32,125 --> 00:17:36,128
It also means we can control the timing really precisely on them because all the way throughout

257
00:17:36,128 --> 00:17:39,589
we can accelerate the horse or decelerate the horse at whatever rate we want to.

258
00:17:39,589 --> 00:17:45,052
We can also vary the duration of them dependent on what reason we've decided to speed up or slow

259
00:17:45,052 --> 00:17:50,315
down. So suddenly we're not just talking about a fixed gate, so going from walk to canter or

260
00:17:50,315 --> 00:17:55,958
galloping to walk, we're talking about being able to make changes such as slowing down for a corner

261
00:17:55,958 --> 00:17:58,720
and using these acceleration and deceleration cycles on top.

262
00:18:00,716 --> 00:18:05,157
Now, with that in mind, I just wanted to go over actually what the posing of these looked like

263
00:18:05,157 --> 00:18:07,037
and how we kept the animation team happy with them.

264
00:18:07,037 --> 00:18:12,559
So, hopefully these will actually look a little bit intuitive as we go through them,

265
00:18:12,559 --> 00:18:17,420
but let's break down our basic poses. So we've got a cancer on the left-hand side,

266
00:18:17,420 --> 00:18:20,461
we've got our acceleration posing on the right-hand side,

267
00:18:20,461 --> 00:18:22,321
and in the middle we've got the deceleration posing.

268
00:18:22,321 --> 00:18:26,342
So, kind of intuitively like for a human.

269
00:18:27,224 --> 00:18:35,614
As we decelerate, we find that the horse collects its feet back together to slow down and catch some of the inertia.

270
00:18:35,614 --> 00:18:37,216
And the head goes up and back.

271
00:18:37,216 --> 00:18:41,542
It's a little bit like if you can imagine sprinting along and trying to stop before a curbside.

272
00:18:43,488 --> 00:18:45,349
And then for our cancer acceleration pose,

273
00:18:45,349 --> 00:18:50,911
the footfall is extended and the head is down and forwards.

274
00:18:50,911 --> 00:18:52,572
And again, this is probably like the example

275
00:18:52,572 --> 00:18:54,733
of if you could imagine walking along

276
00:18:54,733 --> 00:18:57,194
and trying to catch a bus as it's leaving a bus stop,

277
00:18:57,194 --> 00:18:58,295
sprinting along to get it.

278
00:18:58,295 --> 00:19:03,377
So the great thing with these as well

279
00:19:03,377 --> 00:19:07,299
was that we could then replace them for different purposes.

280
00:19:07,299 --> 00:19:09,460
So in the case of the acceleration and deceleration,

281
00:19:09,460 --> 00:19:11,621
we also had a mode of skidding in the game.

282
00:19:12,343 --> 00:19:16,425
whereby when the player unlocks a bonding level with Arthur's horse,

283
00:19:16,425 --> 00:19:19,086
they now have this new move that is highly maneuverable,

284
00:19:19,086 --> 00:19:22,307
where they can skid the horse and then accelerate back out of it.

285
00:19:22,307 --> 00:19:27,530
What's great about this is that this just became some changes in our locomotion controllers,

286
00:19:27,530 --> 00:19:30,031
where we could slow down or speed up in a slightly different way,

287
00:19:30,031 --> 00:19:33,212
and then we would just condition slightly differently

288
00:19:33,212 --> 00:19:35,913
which of the acceleration or deceleration cycles we would play.

289
00:19:41,079 --> 00:19:44,001
with it working so fantastically for us for the gates,

290
00:19:44,001 --> 00:19:45,402
we then kind of got to the point

291
00:19:45,402 --> 00:19:47,663
where we started to look at our stop transitions

292
00:19:47,663 --> 00:19:49,024
and our start transitions,

293
00:19:49,024 --> 00:19:51,245
going from moving to idling, idling to moving.

294
00:19:51,245 --> 00:19:54,107
Suddenly these start to feel very lumpy as well

295
00:19:54,107 --> 00:19:54,928
in a similar fashion.

296
00:19:54,928 --> 00:19:57,549
The question with this was whether we could introduce

297
00:19:57,549 --> 00:19:58,250
this concept there.

298
00:19:59,202 --> 00:20:03,505
So we decided to approach it looking at the idea of never stopping moving with a horse.

299
00:20:03,505 --> 00:20:08,489
And in principle I don't mean necessarily never stopping moving, but what we wanted to do was

300
00:20:08,489 --> 00:20:13,433
make sure that we could allow the player or an AI to let go of control of the horse, almost come

301
00:20:13,433 --> 00:20:17,716
to a standstill, and then change their mind almost instantaneously and speed back up out of it

302
00:20:17,716 --> 00:20:23,481
all the while without going through lots of lumpy or clicky kind of different transitions.

303
00:20:23,481 --> 00:20:28,005
So we ended up using these deceleration cycles and specializing them for stopping.

304
00:20:28,692 --> 00:20:33,833
So then as we detected that a character is going to come to a halt, we would introduce the deceleration

305
00:20:33,833 --> 00:20:38,593
cycle for it. But again, if there's stick input or a decision to run off in another direction,

306
00:20:38,593 --> 00:20:43,394
the cycle can stand up again with an acceleration and we don't lose control of the character with

307
00:20:43,394 --> 00:20:48,915
a discrete transition. So the great thing about this for us is that supporting these ideas of

308
00:20:48,915 --> 00:20:53,316
the indecision of control of the horse, we want to make sure that it looks like you're not necessarily

309
00:20:53,316 --> 00:20:55,857
100% control in it and it's doing its best to respond to the horse.

310
00:21:00,195 --> 00:21:08,082
So going through that, I just want to follow on now with a little bit of an overview of how we handle the riders.

311
00:21:08,082 --> 00:21:15,188
So just beforehand, I talked a little bit about the idea of cantering and galloping being three beat gates.

312
00:21:15,188 --> 00:21:20,673
And this introduced some difficulties for us in terms of how we synchronize the assets together for these.

313
00:21:20,673 --> 00:21:27,018
Like I was saying, these have a syncopated footfall on the front legs with a third strike coming down at the back.

314
00:21:28,162 --> 00:21:32,305
So we knew quite early on with this that we couldn't actually sink here on the foot face,

315
00:21:32,305 --> 00:21:35,507
which is something that we might typically do on bipedal move.

316
00:21:35,507 --> 00:21:39,929
So we started to introduce additional tags that we would be able to map out

317
00:21:39,929 --> 00:21:41,930
things like we would call sink feet.

318
00:21:41,930 --> 00:21:46,473
So the idea with sink feet is that we'd be looking at the extension and compression of the pose

319
00:21:46,473 --> 00:21:48,014
rather than a particular foot fall.

320
00:21:49,318 --> 00:21:54,901
The idea with this was that it would actually save us having to exactly match the footfall across all of our assets,

321
00:21:54,901 --> 00:21:59,643
but it would also stop the mush happening when we had large intervals between them.

322
00:21:59,643 --> 00:22:01,144
So just to have a look at this example.

323
00:22:01,144 --> 00:22:09,148
Here's the tagging we've got. So we've got the right footfall tagged up here.

324
00:22:09,148 --> 00:22:14,250
And then we've got the left footfall tagged up here.

325
00:22:14,250 --> 00:22:18,932
So we still keep those marked up so that we can pass them on to our audio teams or whoever might be interested.

326
00:22:20,500 --> 00:22:23,841
But then we're looking at the compressed part, sync beat,

327
00:22:23,841 --> 00:22:29,943
and the extension.

328
00:22:29,943 --> 00:22:32,703
So with those in play, that then meant we could have

329
00:22:32,703 --> 00:22:34,304
a number of different cycles.

330
00:22:34,304 --> 00:22:35,944
We weren't so dependent on the interval

331
00:22:35,944 --> 00:22:43,166
between the footfalls.

332
00:22:43,166 --> 00:22:44,446
So we're adding this in for the riders.

333
00:22:44,446 --> 00:22:47,107
Our riders were actually supported

334
00:22:47,107 --> 00:22:49,847
by additional programmers and animators.

335
00:22:50,555 --> 00:22:56,659
And what we would use for them is additional layers on the horse's locomotion dedicated to a rider and a passenger.

336
00:22:56,659 --> 00:23:04,324
These would be put together so that they could define the styling that matched whatever the horse might be doing at the time.

337
00:23:04,324 --> 00:23:10,848
What's also quite important with these is that the horse would then tell the rider or the passenger what to do as we went through different movements.

338
00:23:10,848 --> 00:23:18,433
So as we hit a start transition on the horse, the horse then tells the rider and the passenger a start motion is coming in and gives them the assets to play back.

339
00:23:19,613 --> 00:23:24,678
As we hit cycles, the horse tells the rider and passenger the cycles are playing, and gives them the data.

340
00:23:24,678 --> 00:23:28,120
And as we transition to stopping, the same thing happens there as well.

341
00:23:28,120 --> 00:23:36,427
To get these working together properly, what we would end up doing is taking the dominant assets of the horse

342
00:23:36,427 --> 00:23:39,350
and providing these to the passenger and the rider to synchronize them to it.

343
00:23:39,350 --> 00:23:41,772
And this is where the tagging becomes more important.

344
00:23:43,366 --> 00:23:48,090
Alongside this, the rider was actually free to interpolate the locomotion controller's values

345
00:23:48,090 --> 00:23:52,453
as it saw fit, so we didn't have to have a one-to-one dependency on what they were doing,

346
00:23:52,453 --> 00:23:56,336
whether it be the same angular velocity at a given time or not.

347
00:23:56,336 --> 00:24:00,399
Also, we didn't have to have a one-to-one map of the assets on the rider and passenger with

348
00:24:00,399 --> 00:24:04,842
what the horse provided, so they could be decoupled, for example, adding more loops

349
00:24:04,842 --> 00:24:09,325
onto a cycle or playing back different kinds of digits on the rider compared to the horse.

350
00:24:12,851 --> 00:24:17,835
and when they sync nicely, we also get our moments like our cliff stopping.

351
00:24:17,835 --> 00:24:22,119
So, looking at what we talked about before, we had the sync beat tags on the horse,

352
00:24:22,119 --> 00:24:26,363
but what we also added in was a separate set of tracks which we call a rhythm

353
00:24:26,363 --> 00:24:28,785
for synchronising between the horse and the rider.

354
00:24:28,785 --> 00:24:33,610
Now, the extension and compression of the legs is really important for the horse assets to work together,

355
00:24:33,610 --> 00:24:35,792
but it's not necessarily important for what the rider's looking for.

356
00:24:36,487 --> 00:24:40,470
With the rider, what we found we were looking for was the points where we were at our lowest

357
00:24:40,470 --> 00:24:44,133
or our highest in any given cycle. So we added an idea of a track called rhythm,

358
00:24:44,133 --> 00:24:48,717
and again we tagged those up separately for both characters. Now with these tags shared between

359
00:24:48,717 --> 00:24:54,962
them, one thing that's great is that we didn't have to have the same number of cycles between

360
00:24:54,962 --> 00:25:01,207
them. Because we weren't dependent on a phase of an animation, we can suddenly have a simplistic

361
00:25:01,207 --> 00:25:05,691
loop for a rider that doesn't contain anyone near as much detail as the horse or vice versa.

362
00:25:06,952 --> 00:25:11,176
What we would do is take the dominant assets that are playing from the horse,

363
00:25:11,176 --> 00:25:16,400
provide them to the rider for synchronization, and map those two tracks together.

364
00:25:16,400 --> 00:25:18,282
So just to show them side by side with each other,

365
00:25:18,282 --> 00:25:25,567
you can see the high points and low points on the horse and rider simultaneously.

366
00:25:25,567 --> 00:25:29,291
Okay, what I'd like to look at next is the environmental awareness

367
00:25:29,291 --> 00:25:32,033
and how we implemented this on the horses in Red Dead 2.

368
00:25:34,066 --> 00:25:39,849
So, as I said earlier, the world that we introduced in Red Dead 2 was Rockstar's biggest in a game so far.

369
00:25:39,849 --> 00:25:45,771
The terrain was incredibly varied, and we wanted to make sure that you felt grounded on your horse in that world.

370
00:25:45,771 --> 00:25:47,932
So, what were we going to try and achieve?

371
00:25:47,932 --> 00:25:52,714
Trying to make it feel like the terrain was difficult to navigate, and it would take its toll on your horse.

372
00:25:52,714 --> 00:25:58,557
We wanted to make sure that we were selling the visuals of the horse and the rider, that difficulty that was introduced in the app.

373
00:25:59,548 --> 00:26:03,610
With our horses, they moved roughly around 18 meters a second at their top speed.

374
00:26:03,610 --> 00:26:06,472
So that's incredibly fast, around 40 miles an hour.

375
00:26:06,472 --> 00:26:09,193
And that leaves a lot of room for things to go wrong.

376
00:26:09,193 --> 00:26:12,554
So we had to look at how we could use the freedom of movement

377
00:26:12,554 --> 00:26:15,236
we introduced earlier to help navigate around the terrain successfully.

378
00:26:15,236 --> 00:26:19,518
And those responses of the horse to the terrain is another example

379
00:26:19,518 --> 00:26:21,859
of where we wanted to show the horse as an independent AI.

380
00:26:21,859 --> 00:26:25,560
It's thinking for itself, responding to the world independently of the player.

381
00:26:29,727 --> 00:26:34,690
So initially early on, we were looking at the responses to pitching in the terrain.

382
00:26:34,690 --> 00:26:38,352
Early examples of this, we actually looked at capsule adjustments and IK

383
00:26:38,352 --> 00:26:40,694
solutions to adjust as we went along them.

384
00:26:40,694 --> 00:26:45,897
So in this example, we've got a horse that was just adjusting its feet

385
00:26:45,897 --> 00:26:52,381
in capsule to the terrain, not doing anything particularly special.

386
00:26:52,381 --> 00:26:55,543
Kind of looks a little bit odd in isolation because the rider's just

387
00:26:55,543 --> 00:26:58,525
pointing out of the world's kind of normal on the ground.

388
00:27:00,127 --> 00:27:03,207
With the IK solutions, we weren't really happy with the results.

389
00:27:03,207 --> 00:27:06,408
So what we decided to do was add even more dimensions to our blends.

390
00:27:06,408 --> 00:27:12,250
With those added, we would then have the ability to control the pitch of the horse and the rider,

391
00:27:12,250 --> 00:27:15,070
independently of the speeds.

392
00:27:15,070 --> 00:27:24,273
But adding four dimensions to our blends suddenly introduced some new problems to deal with.

393
00:27:24,273 --> 00:27:27,833
So I mentioned earlier how we were extracting this information automatically.

394
00:27:28,615 --> 00:27:33,257
With 4D, we're suddenly adding a large amount of complexity if we want to do the maths properly.

395
00:27:33,257 --> 00:27:36,799
So we kind of decided we wanted to cheat our way around that.

396
00:27:36,799 --> 00:27:43,143
Rather than using the exact maths as it was, we would coarsely bin our assets automatically by

397
00:27:43,143 --> 00:27:48,866
looking at the incline or decline on them. We would then use k-means clustering on them

398
00:27:48,866 --> 00:27:53,208
to actually group them together into multiple 3D spaces.

399
00:27:53,208 --> 00:27:57,010
So looking at them separately, that meant that we would have

400
00:27:57,544 --> 00:28:03,130
end 3D spaces, in this example just three, where we would then be able to go okay these look like

401
00:28:03,130 --> 00:28:09,318
they're going down, these look like they're going up, and these look like they're going flat.

402
00:28:09,318 --> 00:28:12,562
The accuracy of this fourth dimension wasn't incredibly important to us,

403
00:28:12,562 --> 00:28:16,166
so if there was some slight deviation it's something that we could afford to ignore.

404
00:28:17,129 --> 00:28:21,252
but the x, y, and angular velocities are all still very accurate.

405
00:28:21,252 --> 00:28:25,294
When it comes to then finding an asset to play back or a combination of it at runtime,

406
00:28:25,294 --> 00:28:30,397
it just becomes a simple lookup again for us. We provided all the velocities we wanted plus the

407
00:28:30,397 --> 00:28:39,202
pitch, and that then becomes the weighted blend of two 3D spaces. But we didn't think that four

408
00:28:39,202 --> 00:28:45,166
dimensions was enough for some of the things we wanted to do, particularly with cantering.

409
00:28:45,166 --> 00:28:45,686
So with cantering...

410
00:28:46,118 --> 00:28:51,241
we were looking at the fact that actually the horses that we saw and captured footage of

411
00:28:51,241 --> 00:28:56,003
were using a leading foot on the turns when they were going left or right.

412
00:28:56,003 --> 00:29:00,305
And then we also researched this and found that there were preferences for horses to be left or

413
00:29:00,305 --> 00:29:06,788
right footed, which seemed like an interesting thing to add to the game. So with this in mind,

414
00:29:06,788 --> 00:29:11,770
we started to then bin this as a fifth dimension, looking at the assets as to what's the actual

415
00:29:11,770 --> 00:29:14,271
forefoot in them. And then

416
00:29:14,873 --> 00:29:20,416
again binning them into a left leading or a right leading space. Similarly again this is then a 2D

417
00:29:20,416 --> 00:29:25,598
k-means clustering. We bin them into the 3D spaces and then we're able to put them together

418
00:29:25,598 --> 00:29:27,359
to have some simple lookups.

419
00:29:28,848 --> 00:29:32,671
Now, what was great for us with this as well meant that similarly with the cycle, what

420
00:29:32,671 --> 00:29:36,634
we did with the cycles, we could then control the blending between being left and right

421
00:29:36,634 --> 00:29:36,874
footed.

422
00:29:36,874 --> 00:29:40,557
So we could find an opportune moment to do it, but we could also control the speed at

423
00:29:40,557 --> 00:29:44,359
which it did it so that we could get little moments like you see in the video where it

424
00:29:44,359 --> 00:29:47,622
actually looks like the front feet kind of hop slightly as the foot changes.

425
00:29:53,226 --> 00:29:59,173
Now, with all the detail in the environment, one thing that we had to spend a lot of time on was analyzing the terrain.

426
00:29:59,173 --> 00:30:06,400
We actually implemented a system with a blackboard whereby we could post all sorts of information that we'd find on our way.

427
00:30:06,400 --> 00:30:10,285
So what we would do is look at the forward integration of our locomotion controller.

428
00:30:10,945 --> 00:30:13,987
And using a combination of NavMesh and physics casts,

429
00:30:13,987 --> 00:30:16,730
we would validate positions on the terrain,

430
00:30:16,730 --> 00:30:18,111
the inclines that we saw coming up ahead.

431
00:30:18,111 --> 00:30:21,534
But we would also look at even sort of finer details

432
00:30:21,534 --> 00:30:24,757
from our graphic systems, such as the depth of surfaces

433
00:30:24,757 --> 00:30:26,419
or water features that were coming up,

434
00:30:26,419 --> 00:30:29,682
the swarms of bugs ahead in the future,

435
00:30:29,682 --> 00:30:32,284
alongside actual weather conditions,

436
00:30:32,284 --> 00:30:34,166
like the wind velocity,

437
00:30:34,166 --> 00:30:35,827
depending on where we are in the world.

438
00:30:36,855 --> 00:30:43,177
With these posted together, we then had a large amount of data that we could then use to dynamically switch in and out different styles.

439
00:30:43,177 --> 00:30:49,820
And this kind of leads me to talking a little bit about what we actually did to our locomotion system coming from FIVE.

440
00:30:49,820 --> 00:30:55,782
So coming from FIVE, we decided to break down our locomotion system into a different structure.

441
00:30:55,782 --> 00:31:01,363
What we wanted to move away from was these typical kind of manually authored state graphs.

442
00:31:02,590 --> 00:31:05,152
We weren't keen on it, and I think, as we talked about earlier,

443
00:31:05,152 --> 00:31:09,456
we found that then extending these became unnecessarily complicated for us.

444
00:31:09,456 --> 00:31:13,740
So we looked at the idea of introducing atomic moves, which we would call motions.

445
00:31:13,740 --> 00:31:18,624
These would be simple movements on a full body or a layer, just to achieve one thing.

446
00:31:18,624 --> 00:31:22,007
A collection of these together is what we would call a motion type.

447
00:31:22,007 --> 00:31:24,990
And a motion type would represent one given style.

448
00:31:24,990 --> 00:31:29,594
So in the case of a horse, this might be something like wading through water or going through deep snow.

449
00:31:30,818 --> 00:31:34,860
What we could do with these is inherit from other motion types and combine them together

450
00:31:34,860 --> 00:31:40,402
to actually create new variations. So, for example, as going through snow got deeper,

451
00:31:40,402 --> 00:31:45,104
we could then gradually replace certain assets. The selection of these was data-driven with the

452
00:31:45,104 --> 00:31:51,026
information that we put on the blackboard. So, we would have large collections of motion types

453
00:31:51,026 --> 00:31:56,689
that were conditioned on data such as the depth of the snow or the incline that we were seeing ahead,

454
00:31:56,689 --> 00:31:59,210
or even whether it was windy in a particular direction.

455
00:32:00,815 --> 00:32:04,357
In total, this was used across all of our locomotion in Red Dead 2,

456
00:32:04,357 --> 00:32:05,898
not just on the horses.

457
00:32:05,898 --> 00:32:09,961
So we had a breakdown of this, which looked something like

458
00:32:09,961 --> 00:32:13,904
around 6,300 different motions across the game,

459
00:32:13,904 --> 00:32:16,386
making up something like 2,500 different motion types.

460
00:32:16,386 --> 00:32:21,590
Across that, then we would break these down into what we called archetypes,

461
00:32:21,590 --> 00:32:24,432
which would represent certain kinds of characters or animals,

462
00:32:24,432 --> 00:32:28,115
such as whether it be Dutch or a certain kind of horse.

463
00:32:29,182 --> 00:32:33,104
and then we have our data-driven conditions numbering somewhere close to 2000.

464
00:32:33,104 --> 00:32:45,853
So just looking at an example here, what we would post to the blackboard for a snow motion type.

465
00:32:45,853 --> 00:32:49,956
So initially as we go along we would actually get the information out to tell us the name of

466
00:32:49,956 --> 00:32:54,079
the material that we're walking through. We would be able to find the depth based on any

467
00:32:54,079 --> 00:32:55,380
tread through before us.

468
00:32:56,357 --> 00:33:00,938
And then, for example, if we decided it was incredibly cold and we wanted to respond to that,

469
00:33:00,938 --> 00:33:04,959
we could do something like push through a tail shake to select the movement of that on the layer.

470
00:33:04,959 --> 00:33:10,580
We'll then be able to author these conditions independently of the game code and let the

471
00:33:10,580 --> 00:33:14,521
system actually select them for us on the fly.

472
00:33:14,521 --> 00:33:18,382
So then, in this case, you can see then that we would be getting these shakes.

473
00:33:19,124 --> 00:33:21,465
getting timed off regularly because of the cold weather.

474
00:33:21,465 --> 00:33:25,627
Even Arthur's adjustments to reach and adjust his hat would be based on things

475
00:33:25,627 --> 00:33:27,988
like the wind speed or the direction of the wind.

476
00:33:27,988 --> 00:33:31,849
So often as you turn into the wind in a blizzard, like you might see early on

477
00:33:31,849 --> 00:33:34,311
in the game, which is very much focused on wintry weather,

478
00:33:34,311 --> 00:33:36,571
Arthur would respond to that accurately.

479
00:33:36,571 --> 00:33:39,653
But again, we didn't have to code that. It was data driven.

480
00:33:46,840 --> 00:33:51,722
So another thing I mentioned earlier was the speed of the horse and the difficulty of navigating through the terrain.

481
00:33:51,722 --> 00:33:58,364
And one thing that we wanted to try and do was to use the extensive mobility that we've added to the horse

482
00:33:58,364 --> 00:34:03,926
to try and help you avoid annoying obstacles like trees and larch outcrops of rock.

483
00:34:03,926 --> 00:34:11,108
So we hoped that this could introduce this idea of self-preservation by actually increasing the mobility of the horse

484
00:34:11,108 --> 00:34:14,429
in its response to not wanting to actually run straight into a tree.

485
00:34:15,721 --> 00:34:18,803
Across the AI and players, we introduced different solutions.

486
00:34:18,803 --> 00:34:22,064
So with the player, we actually looked initially

487
00:34:22,064 --> 00:34:24,326
at whether we could get this information out of the NavMesh,

488
00:34:24,326 --> 00:34:26,467
and then ultimately actually settled on things

489
00:34:26,467 --> 00:34:29,249
like marking up large groups of rocks or trees

490
00:34:29,249 --> 00:34:30,329
that we wanted to avoid.

491
00:34:30,329 --> 00:34:32,610
We could then cast into the world

492
00:34:32,610 --> 00:34:34,231
based on the forward integrated locomotion

493
00:34:34,231 --> 00:34:37,453
to then decide whether we should be moving left, right,

494
00:34:37,453 --> 00:34:38,554
or stopping against these.

495
00:34:39,395 --> 00:34:47,058
For the AI characters, we would have velocity obstacles implemented, which would then push these shapes in there as well and use the nav mesh.

496
00:34:47,058 --> 00:34:51,920
And in practice, this worked pretty well for us most of the time.

497
00:34:51,920 --> 00:34:59,943
What we would be able to do is respond ahead of time and use our lateral velocity to shift the horse sideways and then allow the player to straighten back up.

498
00:34:59,943 --> 00:35:04,264
So then we would try and minimize the amount of time that we were actually interfering with your control.

499
00:35:05,430 --> 00:35:08,636
And by the end of it, the response of this was really, really good.

500
00:35:08,636 --> 00:35:14,606
And actually what we got asked to do was to make sure that if you held the stick towards the tree

501
00:35:14,606 --> 00:35:17,210
and mashed away galloping, you definitely hit the tree.

502
00:35:25,238 --> 00:35:31,661
Now, I've talked a lot of points through this about how important adding the range of speed was to our horses.

503
00:35:31,661 --> 00:35:35,622
We really did want to get away from discrete, kind of notchy feeling across gates.

504
00:35:35,622 --> 00:35:45,666
But the other thing that this enabled us to do as we added more detailed terrain is to actually more gradually control the speed of the character as they encounter more difficult terrain,

505
00:35:45,666 --> 00:35:52,408
whether that be depth of snow, whether that be going up and down a hill or whether that be going through bodies of water.

506
00:35:52,653 --> 00:35:57,074
So using this then we apply these ideas of what we would call speed penalties into the game.

507
00:35:57,074 --> 00:36:01,435
And the idea with speed penalties is that there are different factors that could affect the horse

508
00:36:01,435 --> 00:36:07,117
which we would post onto our blackboard. We could then manipulate their incoming desired movement

509
00:36:07,117 --> 00:36:09,918
based on that factor and reduce it non-linearly.

510
00:36:09,918 --> 00:36:14,599
So let's have a look at an example here of the horse moving through the water.

511
00:36:15,462 --> 00:36:19,865
So initially, here's our horse cantering through the water,

512
00:36:19,865 --> 00:36:21,707
no speed penalties being applied.

513
00:36:21,707 --> 00:36:24,770
So it's just a fixed speed the whole way.

514
00:36:24,770 --> 00:36:26,611
Now, what I want to show is an example of this afterwards.

515
00:36:26,611 --> 00:36:32,236
So as the effort actually increases, what we do with the speed penalties

516
00:36:32,236 --> 00:36:35,399
on the water is that we actually further increase how much we take off.

517
00:36:35,399 --> 00:36:38,902
So we more dramatically slow you down the faster you want to go.

518
00:36:39,462 --> 00:36:44,625
The idea here being then that we show how much effort's going into it so that you see a significant

519
00:36:44,625 --> 00:36:48,707
acceleration and deceleration based on your input and the depth of the water.

520
00:36:48,707 --> 00:36:57,451
Let's have a look at the speed penalty applied. Same kind of input.

521
00:36:57,451 --> 00:37:01,093
But again we're dramatically slowing the horse down now.

522
00:37:01,093 --> 00:37:04,194
And as the depth gets shallower, we rapidly speed them back up.

523
00:37:04,194 --> 00:37:08,676
And here they are side by side, just to give an example.

524
00:37:13,826 --> 00:37:17,132
So, leading on from that, I wanted to talk about one of the features

525
00:37:17,132 --> 00:37:19,295
for terrain awareness that we added to the game,

526
00:37:19,295 --> 00:37:21,880
which I think is one of my favorites, and that's cliff-stepping.

527
00:37:33,947 --> 00:37:39,511
So the cliff-stopping kind of goes against everything I've said about speed and control of the horse throughout.

528
00:37:39,511 --> 00:37:44,735
Rather than wanting to give you this indirect and soft control of the horse, whether it's an AI or a player,

529
00:37:44,735 --> 00:37:50,880
we wanted to actually make sure that we definitely got this moment every time and it was accurate.

530
00:37:50,880 --> 00:37:56,464
So what we looked at was this tech that we introduced into the game, which we called stop-matching.

531
00:37:56,464 --> 00:37:59,427
The idea with this is something you've probably seen before, but...

532
00:38:00,381 --> 00:38:07,964
What we would look at doing with this is extracting a few tracks of animation data from the root or from tags such as our foot tracks.

533
00:38:07,964 --> 00:38:11,745
So initially we would be looking at the translation to a goal.

534
00:38:11,745 --> 00:38:17,327
We would also then look at our foot or beat cycle depending on the movement.

535
00:38:17,327 --> 00:38:22,089
And in this example it's looking pretty flat, but we would also look at the orientation left to the goal position.

536
00:38:23,107 --> 00:38:27,550
So with this system, what we would look at trying to do is feeding in the information about where

537
00:38:27,550 --> 00:38:31,693
we wanted to be and what the current state was, and looking to find the closest match at any

538
00:38:31,693 --> 00:38:36,817
given point in time. We'd actually go through these bits of data, seeking the best time that

539
00:38:36,817 --> 00:38:43,021
had the lowest possible error for each of these. But alongside this, we also had a significant

540
00:38:43,021 --> 00:38:48,505
amount of markup across the world. So actually, a lot of our cliffs across the world were manually

541
00:38:48,505 --> 00:38:51,868
marked up by our RRT to actually show us these steep drops coming up.

542
00:38:52,375 --> 00:38:58,378
This is definitely something in the future that we would like to reduce the need for.

543
00:38:58,378 --> 00:39:03,041
So let's have a look at this working in an example.

544
00:39:03,041 --> 00:39:08,004
So as I'm cantering along the terrain, the forward integrated locomotion will be queried

545
00:39:08,004 --> 00:39:13,286
to see that we're actually coming up to one of these cliff planes. So as we see that,

546
00:39:14,273 --> 00:39:16,875
we then know that we've got to take some evasive action.

547
00:39:16,875 --> 00:39:19,676
So in this case, we realize that actually,

548
00:39:19,676 --> 00:39:22,698
based on the size of the horse and the assets that we have available,

549
00:39:22,698 --> 00:39:26,219
there is an ideal stopping position ahead of it.

550
00:39:26,219 --> 00:39:28,761
We can then look at the assets to see how they end,

551
00:39:28,761 --> 00:39:32,022
and then using the information in that graph that I showed before,

552
00:39:32,022 --> 00:39:34,724
we can look at finding the frame with the least possible error,

553
00:39:34,724 --> 00:39:37,465
where we would actually then be able to trigger our stop

554
00:39:37,465 --> 00:39:42,548
and play it out to hit that position with minimal slide and minimal error.

555
00:39:43,578 --> 00:39:47,714
So as we continue to go forward, we find the entry position.

556
00:39:47,714 --> 00:39:49,721
As we get there, we play the stop through.

557
00:39:54,412 --> 00:40:01,237
And for us, what was really great with this is that this also meant that we didn't have to rely on synchronization from our cycles into our stops.

558
00:40:01,237 --> 00:40:07,702
We would rely on the output of the stop matching to come back with the best possible match that would reduce that error completely.

559
00:40:07,702 --> 00:40:11,825
So then we could just go ahead and play it straight away, and any alignment in the world was minimal,

560
00:40:11,825 --> 00:40:15,128
because again, we'd found the exact entry position that we wanted to play it from.

561
00:40:15,128 --> 00:40:21,413
And again, just like the trees, this almost worked 100% of the time and never went wrong.

562
00:40:28,459 --> 00:40:34,742
Okay, what I want to talk about now is the personalities of the horses and actually what we did to introduce these in the game.

563
00:40:34,742 --> 00:40:40,784
This is a section I find kind of amusing because actually reflecting back on what we did for Red Dead 2,

564
00:40:40,784 --> 00:40:46,386
a lot of what we did to introduce personality for the horse and the player's perspective was actually to add negatives in,

565
00:40:46,386 --> 00:40:52,549
leaving much of the positive association with the horse actually coming out of the player's experience playing the game.

566
00:40:52,549 --> 00:40:57,151
So simple things like slapping the horse and getting kicked off a cliff, a memorable moment.

567
00:40:59,003 --> 00:41:03,404
What we introduced was the idea of the concepts of agitation and unruliness.

568
00:41:03,404 --> 00:41:08,065
And these are sort of features of a horse whereby they react negatively to

569
00:41:08,065 --> 00:41:11,385
different stimuli in the world or from the player.

570
00:41:11,385 --> 00:41:14,826
So in the example video that's playing now, you'll see how I'm actually making

571
00:41:14,826 --> 00:41:19,887
the horse agitated by shooting my gun and riding them really badly.

572
00:41:19,887 --> 00:41:23,147
As this builds up and up and up and up and up, the horse gets progressively

573
00:41:23,147 --> 00:41:25,688
more agitated until they just try and get rid of the binder completely.

574
00:41:27,052 --> 00:41:31,475
This was actually implemented in a basic utility system that we called motivations.

575
00:41:31,475 --> 00:41:35,077
So what we would do is take in these different stimuli in the world

576
00:41:35,077 --> 00:41:39,459
and apply some increase in the motivation for agitation throughout.

577
00:41:39,459 --> 00:41:43,361
As the agitation increased, we could then differentiate the assets as we go.

578
00:41:43,361 --> 00:41:47,663
So in this example, I'm manually increasing the agitation motivation on the horse.

579
00:41:48,239 --> 00:41:53,844
And as it gets bigger and bigger, we actually gradually differentiate more and more of the

580
00:41:53,844 --> 00:41:57,867
motion type that we're playing on the horse. So we actually would have then motion types for low

581
00:41:57,867 --> 00:42:02,911
agitation and motion types of medium and high. And what happens as we go through the different

582
00:42:02,911 --> 00:42:08,296
agitation states is that we gradually replace different assets and introduce more impediments

583
00:42:08,296 --> 00:42:09,477
to the control for the player.

584
00:42:10,812 --> 00:42:14,934
all these assets were then able to synchronize back to the rider,

585
00:42:14,934 --> 00:42:18,015
so we could have transitions between the states,

586
00:42:18,015 --> 00:42:22,336
and we could reflect the difficulty in controlling them as they changed.

587
00:42:22,336 --> 00:42:24,297
And on the way up, as they go on the way down,

588
00:42:24,297 --> 00:42:27,538
when doing things like camming a horse by giving it a pat.

589
00:42:27,538 --> 00:42:31,859
Not only did we have agitation motivations,

590
00:42:31,859 --> 00:42:35,120
but we also had, across all of our animals, toilet motivation,

591
00:42:35,120 --> 00:42:36,801
which, as that increases to one,

592
00:42:36,801 --> 00:42:39,822
results in horses or animals doing the poop.

593
00:42:41,410 --> 00:42:46,311
So let's have a look at some of the features of the agitation and the movement put together.

594
00:42:46,311 --> 00:42:50,993
I just wanted to show an example of a bear attack, where the agitation gradually increases

595
00:42:50,993 --> 00:42:56,635
and what happens to the player. So as we head towards where there's going to be a bear attack,

596
00:42:56,635 --> 00:43:01,717
the horse's agitation actually starts to increase, usually before the player would be aware that

597
00:43:01,717 --> 00:43:07,639
there's a predator coming up. As the agitation increases, the horse gets more and more agitated

598
00:43:07,639 --> 00:43:09,040
and reflects that in its animations.

599
00:43:09,663 --> 00:43:12,765
When we get to a certain threshold, the horse actually decides to stop

600
00:43:12,765 --> 00:43:16,187
and makes use of this Piaf motion that we talked about before

601
00:43:16,187 --> 00:43:18,808
to jostle around on the spot and give you a bit of a moment

602
00:43:18,808 --> 00:43:21,169
to actually back away from this encounter.

603
00:43:21,169 --> 00:43:24,731
If you don't, then the horse will actually use that motion of self-preservation

604
00:43:24,731 --> 00:43:28,273
and try and escape the scene, leaving you behind by bucking you off the horse.

605
00:43:28,273 --> 00:43:34,737
See there, you get thrown off,

606
00:43:34,737 --> 00:43:39,320
and then this gives us a pretty stressful encounter with a bear you can fight off.

607
00:43:46,822 --> 00:43:50,444
And again, I think, like I said earlier, you know, a lot of the ways that we

608
00:43:50,444 --> 00:43:53,525
introduced personality into our horse was reflecting negative states of the

609
00:43:53,525 --> 00:43:56,127
player and letting them fill in the positive moments.

610
00:43:56,127 --> 00:44:00,249
So as you did things like work your horse until it ran out of stamina, we would

611
00:44:00,249 --> 00:44:02,030
then reflect that with changes in emotion types.

612
00:44:02,030 --> 00:44:05,312
As the health went down, we would also reflect that in changes

613
00:44:05,312 --> 00:44:06,732
by emotion types as well.

614
00:44:06,732 --> 00:44:10,955
Again, these were all bits of information posted to the blackboard that was then

615
00:44:10,955 --> 00:44:13,036
used to select this emotion type automatically.

616
00:44:14,162 --> 00:44:17,164
What would also come with this is then impairments to their performance,

617
00:44:17,164 --> 00:44:20,586
so that hopefully we would discourage you from running your horse into the ground

618
00:44:20,586 --> 00:44:24,028
because as the stamina reduces, they're more likely to throw you off,

619
00:44:24,028 --> 00:44:26,829
or they're unable to move just as fast as they could in the world

620
00:44:26,829 --> 00:44:34,694
because we would introduce speed penalties like we did with the water based on their stamina.

621
00:44:34,694 --> 00:44:40,917
Finally, I just want to have a look at some of the differentiation we actually added for breeds.

622
00:44:41,938 --> 00:44:44,940
When we actually looked at what we had for a baseline horse in Red Dead,

623
00:44:44,940 --> 00:44:49,383
we were looking at somewhere around 3,000 different animations

624
00:44:49,383 --> 00:44:52,365
across 23 unique movement styles or motion types in the game,

625
00:44:52,365 --> 00:44:55,166
at which point that's already a particularly big chunk of our budget.

626
00:44:55,166 --> 00:45:00,329
So we knew, as we wanted to introduce more variations in terms of our breeds,

627
00:45:00,329 --> 00:45:03,411
that we were going to have to think of something simpler.

628
00:45:04,200 --> 00:45:07,603
So Red Dead 2 actually shipped with 19 different breeds of horse.

629
00:45:07,603 --> 00:45:14,629
And these were coarsely categorized into heavy horses like Ardennes, race horses,

630
00:45:14,629 --> 00:45:19,253
maybe like a thoroughbred, elites, which were usually like our Arabian horses,

631
00:45:19,253 --> 00:45:22,136
and standard horses, things like American Standard.

632
00:45:23,828 --> 00:45:27,629
Now to differentiate them, what we actually started looking at was how we could change

633
00:45:27,629 --> 00:45:30,490
their responses with their locomotion controllers.

634
00:45:30,490 --> 00:45:35,231
So we had a wide variety of speeds that we could make use of because we had all these

635
00:45:35,231 --> 00:45:37,191
continuous gates available to us.

636
00:45:37,191 --> 00:45:43,513
So we could modify the ideal low and high speeds within an individual gate, whether

637
00:45:43,513 --> 00:45:45,593
it was a large horse or a small horse.

638
00:45:46,755 --> 00:45:51,399
We could also control how they accelerate and decelerate deterministically.

639
00:45:51,399 --> 00:45:54,542
So, for example, our larger horses, like an Ardennes,

640
00:45:54,542 --> 00:45:58,365
could have a much slower acceleration and deceleration up to a top speed,

641
00:45:58,365 --> 00:46:01,708
but maybe might get a similar top speed to a much smaller horse.

642
00:46:01,708 --> 00:46:05,071
We could then also impact their angular responses.

643
00:46:05,071 --> 00:46:07,533
So when we were looking at the drift examples before,

644
00:46:07,533 --> 00:46:09,915
where we added this notion of indirect control,

645
00:46:10,308 --> 00:46:15,131
Again, we can make lighter horses seem more nimble by them reacting quicker to your changes

646
00:46:15,131 --> 00:46:19,553
when they're oversteering and straightening back up much more rapidly compared to a heavier horse

647
00:46:19,553 --> 00:46:25,995
that might take a lot longer to do it. Alongside this, we could then manipulate the speed penalties

648
00:46:25,995 --> 00:46:31,338
we had in the game. So, for example, the strength of a horse whilst carrying the carcass of a deer

649
00:46:31,338 --> 00:46:37,200
that you've been hunting might actually impact how they slow down for it. So a heavier horse

650
00:46:37,200 --> 00:46:39,562
might be less impacted by carrying more stuff.

651
00:46:40,673 --> 00:46:45,154
Alongside this, we also had the equipment variation, which is less to do with breed.

652
00:46:45,154 --> 00:46:49,915
And with all of this, what we did try to do was ensure that there was no one single best horse,

653
00:46:49,915 --> 00:46:54,756
that there were trade-offs between them, so that a player could go out there and try various

654
00:46:54,756 --> 00:46:57,677
different breeds and pick the one they were most attached to to run through the story.

655
00:46:57,677 --> 00:47:03,559
And what I want to just show you before we wrap up on this is having a look at the number of our

656
00:47:03,559 --> 00:47:07,500
kind of standard different types of horses in their different locomotion controllers and how

657
00:47:07,500 --> 00:47:09,680
they behave with the same input.

658
00:47:12,832 --> 00:47:18,515
It's the same recorded input, but different locomotion controllers applied across each breed.

659
00:47:18,515 --> 00:47:22,397
So hopefully on the right hand side, you can see the heavy and the elite horses.

660
00:47:22,397 --> 00:47:24,899
And they're probably the ones that are going to show up the biggest difference.

661
00:47:24,899 --> 00:47:30,122
Where our heavy horses are quite kind of almost lazy looking in how they straighten back up or turn.

662
00:47:30,122 --> 00:47:34,525
Whereas the elite horses look a lot more agile and nimble in the way that they do it.

663
00:47:34,525 --> 00:47:38,687
There's also the differentiation and the acceleration and deceleration play there.

664
00:47:38,687 --> 00:47:41,229
And also their top speeds and low end speeds vary significantly.

665
00:47:49,088 --> 00:47:52,110
And so with that, I'd like to wrap up.

666
00:47:52,110 --> 00:47:56,713
So, generally, I think what we found was that a lot of these approaches

667
00:47:56,713 --> 00:47:59,135
came together really well for us.

668
00:47:59,135 --> 00:48:04,658
We spent a lot of time working on compositional and automated approaches

669
00:48:04,658 --> 00:48:05,759
for the horses.

670
00:48:05,759 --> 00:48:08,240
And initially, we had some skepticism among the team

671
00:48:08,240 --> 00:48:09,361
as to whether this would work.

672
00:48:09,361 --> 00:48:11,983
But by the end of development, we were so settled on it

673
00:48:11,983 --> 00:48:14,784
that a lot of these concepts actually got introduced back

674
00:48:14,784 --> 00:48:18,186
onto other characters, such as Arthur and the other humans in the game.

675
00:48:19,457 --> 00:48:25,560
What we did find throughout though was that a lot of what we'd produced had a really steep technical learning curve.

676
00:48:25,560 --> 00:48:37,025
So even for programmers and technical animators, there could be a lot of difficulties and reliance on a lot of experts within the company to help assist in different areas.

677
00:48:37,025 --> 00:48:41,087
The technical approaches, like I said, on the horse informed everything else that we did in the game.

678
00:48:41,087 --> 00:48:45,730
And we did find a massive success with the large-scale data-driven locomotion system that we added.

679
00:48:45,730 --> 00:48:47,210
We didn't go into much detail about it.

680
00:48:49,495 --> 00:48:53,877
us to add a lot of variation and style throughout the game, as well as introducing a few crises

681
00:48:53,877 --> 00:48:58,939
throughout development where it was very easy for us to blow the animation budget.

682
00:48:58,939 --> 00:49:03,421
And what was most pleasing of all for me was just seeing things recognized publicly,

683
00:49:03,421 --> 00:49:08,103
like people noticing the dressage moves and analyzing them for accuracy, people being

684
00:49:08,103 --> 00:49:13,345
massively concerned about how much their horse pooped, and people loving their big stupid horses

685
00:49:13,345 --> 00:49:14,245
that got in everyone's way.

686
00:49:17,722 --> 00:49:22,964
So looking to the future, what kind of things do we want to learn from this and take forward into Rockstar's future games?

687
00:49:22,964 --> 00:49:28,525
Well, we're pretty convinced that the compositional approaches that we used for putting together Locomotion worked incredibly well,

688
00:49:28,525 --> 00:49:30,826
and we want to keep pushing forward with that.

689
00:49:30,826 --> 00:49:33,806
The determinism of movement is something that's incredibly important to us,

690
00:49:33,806 --> 00:49:41,788
and I think we want to make sure that the responsiveness of our characters in our game, whether they be AI or player-controlled, significantly improves.

691
00:49:42,378 --> 00:49:47,101
we'd like to introduce wider degrees, wider varieties of movement,

692
00:49:47,101 --> 00:49:49,003
so more styles across more varied terrain.

693
00:49:49,003 --> 00:49:53,586
And I think as well, one thing that's worth highlighting is that actually in

694
00:49:53,586 --> 00:49:56,328
some cases we didn't achieve parity between AI and

695
00:49:56,328 --> 00:49:59,470
player controlled characters. So even though they were using the same

696
00:49:59,470 --> 00:50:02,392
fundamental systems, in many cases the player would be able to

697
00:50:02,392 --> 00:50:05,694
actually execute new moves in a more satisfying manner than what we could

698
00:50:05,694 --> 00:50:08,276
deliver on the AI characters. And this is something we really want to

699
00:50:08,276 --> 00:50:09,437
improve for the future.

700
00:50:10,092 --> 00:50:14,976
Alongside this, we're also looking at machine learning approaches to improve our locomotion

701
00:50:14,976 --> 00:50:17,799
and animation, but there's not something I can talk about in depth today.

702
00:50:17,799 --> 00:50:22,483
And if any of this kind of thing sounds like something to be interested to you,

703
00:50:22,483 --> 00:50:27,047
then we are hiring.

704
00:50:27,047 --> 00:50:28,008
So thanks very much for listening.

