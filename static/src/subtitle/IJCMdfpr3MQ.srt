1
00:00:07,176 --> 00:00:13,008
Okay, so in case you guys are in the wrong place, this is the talk called Super Time Force,

2
00:00:13,329 --> 00:00:15,533
Solving the Time Travel Paradox.

3
00:00:16,727 --> 00:00:18,948
Okay, so just a little bit about myself first.

4
00:00:19,988 --> 00:00:20,348
Who am I?

5
00:00:20,988 --> 00:00:21,848
My name is Kenneth Young.

6
00:00:22,188 --> 00:00:24,309
I'm the technical director at Cappy Games.

7
00:00:25,249 --> 00:00:27,470
And I'm also the lead programmer on Super Time Force.

8
00:00:28,030 --> 00:00:30,330
Before Super Time Force, I worked on titles like

9
00:00:30,610 --> 00:00:33,471
Might and Magic, Clash of Heroes, Critter Crunch,

10
00:00:33,851 --> 00:00:37,892
and before that I worked on a mod called Max Payne Kung Fu.

11
00:00:37,912 --> 00:00:39,532
If any of you are familiar with that.

12
00:00:46,071 --> 00:00:48,534
This computer is laggy, it's not me waiting for applause.

13
00:00:51,656 --> 00:00:54,499
Quick show of hands, how many people here are quantum physicists?

14
00:00:57,742 --> 00:01:03,327
Please leave, because I am not a quantum physicist, so I may butcher things that...

15
00:01:04,160 --> 00:01:04,980
you study all the time.

16
00:01:05,740 --> 00:01:08,161
Okay, so what is this talk not about, first of all?

17
00:01:08,581 --> 00:01:10,822
Well, it's not about the technical implementation

18
00:01:10,982 --> 00:01:13,462
of timer winding, although that is an interesting thing

19
00:01:13,502 --> 00:01:17,664
that could probably take an entire talk by itself.

20
00:01:18,704 --> 00:01:21,245
John Blow did an amazing talk about his timer winding

21
00:01:21,265 --> 00:01:25,046
mechanic in Braid in 2010, so check that out

22
00:01:25,106 --> 00:01:26,026
on the GDC Vault.

23
00:01:27,556 --> 00:01:29,518
It's also not about building real-time machines.

24
00:01:30,339 --> 00:01:34,122
If you want to do that, talk to John Carmack, because as we all know, he is a robot from the future.

25
00:01:38,227 --> 00:01:39,628
So what is this talk about actually?

26
00:01:40,008 --> 00:01:43,191
It's about the game design problems of time manipulation,

27
00:01:43,832 --> 00:01:45,714
because to me those are the more interesting things,

28
00:01:46,335 --> 00:01:49,438
as opposed to the very pragmatic, you know, technical programming kind of things.

29
00:01:50,940 --> 00:01:54,903
and how we tackle it using science and I put science in quotations because

30
00:01:55,543 --> 00:01:58,005
I'm not actually a scientist but, you know,

31
00:01:58,665 --> 00:02:00,586
maybe I can pretend to be one in front of hundreds of people.

32
00:02:03,788 --> 00:02:05,749
So, solving the time travel paradox

33
00:02:06,430 --> 00:02:07,591
in a video game to be exact.

34
00:02:09,472 --> 00:02:12,313
Okay, so what is Super Time Force?

35
00:02:13,694 --> 00:02:15,635
Well, if you're not familiar with it, I'll give you a quick

36
00:02:16,396 --> 00:02:16,816
video

37
00:02:17,737 --> 00:02:18,297
of what it's about.

38
00:02:21,663 --> 00:02:27,065
So Super Time Force is a 2D run-and-gun shooter in the vein of like Contra or Metal Slug,

39
00:02:27,505 --> 00:02:29,106
but it has a time-traveling twist.

40
00:02:29,606 --> 00:02:33,888
So at any moment in time you can stop time and rewind, and in doing that you can sort

41
00:02:33,928 --> 00:02:35,148
of alter the past.

42
00:02:35,788 --> 00:02:39,169
And every time you rewind you also add a new iteration of yourself.

43
00:02:39,510 --> 00:02:44,951
So as you're rewinding, you're sort of building up an army of yourself to sort of fight alongside

44
00:02:44,971 --> 00:02:47,452
into something that we call single-player co-op.

45
00:02:47,852 --> 00:02:50,813
So you're sort of playing with yourself, as we like to say.

46
00:02:53,823 --> 00:02:56,073
Okay, so that is super time force.

47
00:03:01,542 --> 00:03:04,624
So the vision of Super Time Force was we wanted to make something simple, easy, just like

48
00:03:04,664 --> 00:03:05,885
a fun, quirky action game.

49
00:03:06,586 --> 00:03:10,489
But in reality, when you're talking about time bending, you're dealing with really complicated,

50
00:03:11,009 --> 00:03:17,194
paradox-filled craziness that is not that easy to communicate.

51
00:03:18,094 --> 00:03:23,658
So the challenge for us was to make this complicated, paradox-filled mess feel simple and fun.

52
00:03:28,984 --> 00:03:30,105
So what's so bad about time travel?

53
00:03:30,125 --> 00:03:32,167
You think, okay, yeah, just rewind time, it's pretty easy.

54
00:03:32,767 --> 00:03:34,148
Well, there's a few issues with it.

55
00:03:34,328 --> 00:03:38,071
First of all, altering the past and preventing vital events from happening.

56
00:03:38,151 --> 00:03:38,772
That's a bad thing.

57
00:03:39,792 --> 00:03:43,455
Nullifying any challenge by knowing the future, that's also a bad thing.

58
00:03:44,576 --> 00:03:48,659
Accidentally dating your mom, depends how hot your mom is, I guess.

59
00:03:51,921 --> 00:03:53,923
So in other words, time paradoxes.

60
00:03:54,904 --> 00:03:55,284
Sorry about that.

61
00:03:56,983 --> 00:04:00,584
Okay, so when we were building this game, we realized there was two main components

62
00:04:00,684 --> 00:04:02,565
to building a sort of time manipulation game.

63
00:04:02,945 --> 00:04:06,907
The first component is build an engine capable of time rewinding, or as I like to call it,

64
00:04:06,927 --> 00:04:08,007
that's the easy part.

65
00:04:09,368 --> 00:04:14,350
The second part is building the systems to deal with time paradoxes, and I call those

66
00:04:14,850 --> 00:04:15,530
the fun parts.

67
00:04:16,550 --> 00:04:21,873
Now I say easy, not because it's actually easy, but because it's easy compared to the

68
00:04:21,893 --> 00:04:22,333
fun parts.

69
00:04:27,000 --> 00:04:31,821
So what we realized was that you can have a solid engine and you can have a solid idea,

70
00:04:31,881 --> 00:04:36,382
but without these sort of fun systems in place to handle the time paradoxes, your game will

71
00:04:36,662 --> 00:04:37,463
for sure break down.

72
00:04:38,523 --> 00:04:44,004
When we first finished our first prototype, you know, we had a really solid rewind mechanic

73
00:04:44,044 --> 00:04:45,804
and we were like, oh yeah, this is cool, this is the greatest idea.

74
00:04:45,824 --> 00:04:49,085
We'll finish the game in six months and, you know, it'll be the best thing ever.

75
00:04:49,465 --> 00:04:53,306
And then we realized the game itself, the mechanics just sort of collapse under the

76
00:04:53,346 --> 00:04:55,847
weight of all these paradoxes that bring everything down.

77
00:05:00,615 --> 00:05:01,616
So why do I call it fun?

78
00:05:02,777 --> 00:05:08,280
Well, I guess, uh, this short form that I use for facilitating the unintuitiveness of

79
00:05:08,460 --> 00:05:09,261
non-linearity.

80
00:05:10,562 --> 00:05:15,585
So, essentially, what that means is that you're making systems to sort of make all the weirdnesses

81
00:05:15,725 --> 00:05:19,207
of time paradoxes transparent to the player so that, you know, they can just focus on

82
00:05:19,287 --> 00:05:20,148
playing a fun game.

83
00:05:21,409 --> 00:05:25,932
Uh, also because it's f'd up nonsense that you're constantly having to deal with when

84
00:05:26,012 --> 00:05:27,933
all you want to do is, you know, make a simple game.

85
00:05:27,953 --> 00:05:29,434
But you've got to deal with all this stuff all the time.

86
00:05:33,950 --> 00:05:35,891
So, how do you create fun?

87
00:05:37,451 --> 00:05:42,113
We broke it down, we broke down the problem of paradoxes into three things.

88
00:05:42,774 --> 00:05:45,375
Number one, causality violation.

89
00:05:46,455 --> 00:05:47,316
Sounds kind of fancy.

90
00:05:47,996 --> 00:05:51,437
Number two, butterfly effect management.

91
00:05:52,438 --> 00:05:56,620
And number three, the quantum measurement problem, which I will explain all these things.

92
00:05:59,931 --> 00:06:02,812
Okay, so we'll start with causality violation.

93
00:06:03,432 --> 00:06:06,172
First of all, what is causality?

94
00:06:08,653 --> 00:06:13,954
It can be defined as the fundamental one-way relationship between cause and effect.

95
00:06:14,814 --> 00:06:19,135
Essentially what that's saying is it's the reason why time moves forward.

96
00:06:19,175 --> 00:06:24,676
It's sort of the underlying principle of deterministic systems progressing forward.

97
00:06:25,616 --> 00:06:26,656
So that's pretty important.

98
00:06:26,676 --> 00:06:27,397
It's pretty fundamental.

99
00:06:29,203 --> 00:06:30,624
What if we just don't worry about that?

100
00:06:31,044 --> 00:06:31,624
What does that mean?

101
00:06:31,744 --> 00:06:36,907
Well, it means allow an effect to occur even if the original cause no longer occurs.

102
00:06:38,088 --> 00:06:38,869
Okay, what does that mean?

103
00:06:40,029 --> 00:06:42,271
Well, let's talk about quantum mechanics.

104
00:06:44,952 --> 00:06:48,614
So in quantum mechanics, there's a phenomenon called quantum entanglement.

105
00:06:50,227 --> 00:06:55,309
It's where you can have two particles set up in such a way that changing the state of

106
00:06:55,389 --> 00:07:00,432
one of them will instantaneously change the state of the other, even if that other particle

107
00:07:00,472 --> 00:07:02,153
is somewhere on the other side of the universe.

108
00:07:02,233 --> 00:07:08,236
It's a very strange phenomenon that caused quite a controversy when it was first discovered.

109
00:07:10,537 --> 00:07:14,258
So yeah, it's counterintuitive, but it is actually how reality works.

110
00:07:15,679 --> 00:07:17,440
So how does that affect us?

111
00:07:18,538 --> 00:07:21,359
So we came up with the idea of entity entanglement.

112
00:07:21,939 --> 00:07:26,260
So it's sort of along the same lines except that what happens is that two entities can

113
00:07:26,300 --> 00:07:31,902
become entangled, as we say, from certain important timeline events that are happening.

114
00:07:37,904 --> 00:07:40,405
So that brings us to our entanglement system.

115
00:07:40,625 --> 00:07:41,926
So what does this entanglement system do?

116
00:07:42,835 --> 00:07:46,297
First of all, it entangles entities together at key timeline events.

117
00:07:46,357 --> 00:07:51,601
Things like, you know, something spawns a power-up or something, if a player collects

118
00:07:51,641 --> 00:07:55,644
a collectible or if an explosion propels a player forward.

119
00:07:55,724 --> 00:07:57,265
Those are key timeline events.

120
00:07:58,767 --> 00:08:03,990
Then we store all of these entanglement events from all past timelines, and the last thing

121
00:08:04,010 --> 00:08:08,734
it does is that it forcibly reinserts those outcomes back into the current timeline.

122
00:08:11,182 --> 00:08:16,286
It's a little hard to explain so I will show you a little demo video of this in action.

123
00:08:22,430 --> 00:08:26,954
So here we see Zacasaurus, he's skateboarding around as a dinosaur does.

124
00:08:27,694 --> 00:08:30,236
He sees this red enemy and he decides to head stomp on him.

125
00:08:31,297 --> 00:08:36,040
He reaches this blue enemy, kills him, grabs the collectible which opens up the door which

126
00:08:36,120 --> 00:08:36,621
lets him through.

127
00:08:37,181 --> 00:08:38,422
Okay, pretty straightforward.

128
00:08:40,615 --> 00:08:43,897
Now let's rewind and change the past and introduce some paradoxes.

129
00:08:44,578 --> 00:08:45,239
So what happens now?

130
00:08:47,120 --> 00:08:52,004
So let's say Amy McKillen decides to come and kill that blue enemy sooner.

131
00:08:52,124 --> 00:08:55,687
So she kills it, spawns the collectible, and it crashes into the ground.

132
00:08:56,528 --> 00:09:01,972
So now Zachasaurus has nothing to kill, no collectible to collect, which means the door

133
00:09:02,012 --> 00:09:03,634
doesn't open, which means he falls to his death.

134
00:09:04,214 --> 00:09:04,855
And that's a bad thing.

135
00:09:05,535 --> 00:09:07,357
And we could even take it a step further.

136
00:09:08,371 --> 00:09:12,754
So let's say you spawn another Amy and you decide to kill that red enemy right away.

137
00:09:15,435 --> 00:09:18,697
So now, as you can see, Zachasaurus will immediately fall to his death

138
00:09:19,517 --> 00:09:22,679
and everything is screwed up and all the work that you just did is for nothing.

139
00:09:23,740 --> 00:09:26,541
So let's see the same situation with entity entanglement.

140
00:09:27,848 --> 00:09:32,990
So again we see Amy kill the red enemy and the blue enemy, but as you can see Zack still

141
00:09:33,470 --> 00:09:37,932
is propelled by the enemy, still kills an imaginary blue version, still collects the

142
00:09:37,952 --> 00:09:41,774
collectible which as a result opens the door and everything is fine.

143
00:09:44,555 --> 00:09:50,558
So that is how the entanglement system sort of handles the way the world works.

144
00:09:52,930 --> 00:09:57,055
So you may think things may not make temporal sense anymore, and that's true, they do not.

145
00:09:57,575 --> 00:10:00,538
But the game will feel more correct.

146
00:10:01,179 --> 00:10:01,940
Which is kind of weird.

147
00:10:04,883 --> 00:10:07,906
So the next thing we'll talk about is the butterfly effect.

148
00:10:16,223 --> 00:10:17,384
So what is the butterfly effect?

149
00:10:18,144 --> 00:10:25,330
Well, it can be described as when a small change in the initial state of a system can result in a large change in the final state of that system.

150
00:10:26,411 --> 00:10:30,614
It's also a 2004 psychological thriller starring Ashton Kutcher.

151
00:10:32,735 --> 00:10:33,696
I actually enjoy that movie.

152
00:10:34,517 --> 00:10:39,541
So anyways, the butterfly effect essentially is saying that when you change something earlier on,

153
00:10:40,241 --> 00:10:43,984
the effects will cascade and it will result in a really large change later on.

154
00:10:47,548 --> 00:10:49,709
So how does this affect our game? Why does this matter?

155
00:10:50,890 --> 00:10:52,491
Well, we can alter the past.

156
00:10:53,251 --> 00:10:57,272
So when you alter the past, you'll cause pretty much everything in the future to play out

157
00:10:57,313 --> 00:10:57,653
differently.

158
00:10:58,333 --> 00:11:01,794
And when you say differently, that can either be in a helpful way or in a detrimental way.

159
00:11:03,075 --> 00:11:10,778
And you'll realize that pretty much 99% of the time, it's going to be detrimental.

160
00:11:11,899 --> 00:11:12,499
So what does that mean?

161
00:11:12,759 --> 00:11:16,040
Does that mean time travel is completely useless as a gameplay mechanic?

162
00:11:18,373 --> 00:11:19,194
So what can we do about this?

163
00:11:23,559 --> 00:11:28,845
So the idea is to somehow manage all of these negative timeline effects to prevent this

164
00:11:28,865 --> 00:11:30,327
sort of cascading effect from happening.

165
00:11:30,948 --> 00:11:34,432
So we came up with this idea of level entropy, as we call it.

166
00:11:36,483 --> 00:11:40,606
So first of all, what is entropy? Well again, this is a concept from quantum mechanics.

167
00:11:41,167 --> 00:11:46,512
It's defined as the measure of how a thermodynamic system progresses towards equilibrium.

168
00:11:46,872 --> 00:11:51,456
Okay, what does that mean? Essentially it means that energy in a system will tend to

169
00:11:51,496 --> 00:11:55,780
sort of spread out. For example, like you have a hot mug sitting on a table, the hot

170
00:11:55,820 --> 00:11:59,503
mug will cool down, the air around it will heat up, and it will reach an equilibrium

171
00:11:59,523 --> 00:12:02,466
which is called the highest entropy.

172
00:12:03,542 --> 00:12:08,386
It's also so important that they call it the second law of thermodynamics, which states

173
00:12:08,406 --> 00:12:10,447
that entropy must always increase.

174
00:12:13,490 --> 00:12:14,131
So that's entropy.

175
00:12:14,191 --> 00:12:15,412
What is level entropy?

176
00:12:16,052 --> 00:12:19,355
Well, we take the same idea, but we redefine what equilibrium means.

177
00:12:19,875 --> 00:12:25,100
So for level entropy, equilibrium is a state when all players are alive and all enemies

178
00:12:25,320 --> 00:12:25,620
are dead.

179
00:12:26,675 --> 00:12:29,999
and we must enforce that levels must always progress towards this equilibrium

180
00:12:30,159 --> 00:12:33,822
or in other words, the entropy must always increase

181
00:12:34,443 --> 00:12:36,985
like the second law of thermodynamic states.

182
00:12:43,125 --> 00:12:44,506
So what does this mean exactly to the game?

183
00:12:44,766 --> 00:12:50,289
It just means that any modifications to the timeline must follow these two things.

184
00:12:50,309 --> 00:12:55,631
A, it must never cause past enemies to be better off than they were before, and it must

185
00:12:55,671 --> 00:12:58,493
never cause past players to be worse off.

186
00:13:00,614 --> 00:13:06,316
So that brings us to our level entropy system, which has three jobs.

187
00:13:06,596 --> 00:13:10,278
Number one, monitor all events happening across all timelines.

188
00:13:11,215 --> 00:13:13,155
know the entropy of each of those events,

189
00:13:13,735 --> 00:13:19,436
and disallow any events which would decrease level entropy in a past timeline.

190
00:13:20,957 --> 00:13:22,017
So essentially it's just saying,

191
00:13:23,157 --> 00:13:26,818
don't allow things to happen that will mess up your previous versions of yourself.

192
00:13:28,098 --> 00:13:31,519
So again, there's a video example showing this in action.

193
00:13:32,639 --> 00:13:35,499
So once again we have Zachasaur skateboarding around, scoping things out.

194
00:13:36,700 --> 00:13:39,480
So he moves forward, sees that a door closes behind him and an enemy appears,

195
00:13:40,260 --> 00:13:40,680
but he's safe.

196
00:13:41,830 --> 00:13:44,413
So he decides to jump on some crates and get out of there.

197
00:13:46,134 --> 00:13:46,575
Simple enough.

198
00:13:47,956 --> 00:13:49,598
So let's start introducing some paradoxes.

199
00:13:53,962 --> 00:13:59,006
So let's say Amy, once again, decides to run ahead and say,

200
00:13:59,046 --> 00:13:59,967
hey, I like those boxes.

201
00:14:00,027 --> 00:14:00,748
Boom, shoots them.

202
00:14:01,268 --> 00:14:01,989
Now what's going to happen?

203
00:14:02,589 --> 00:14:04,031
Well, Zack says nothing to jump on.

204
00:14:04,391 --> 00:14:05,172
He falls to his death.

205
00:14:06,093 --> 00:14:08,155
You know, same old thing with Zack.

206
00:14:11,308 --> 00:14:12,689
So let's take it one step further.

207
00:14:14,109 --> 00:14:19,592
So let's say Jean Rimbaud, you know, he doesn't want to wait around, so he runs ahead, closes

208
00:14:19,632 --> 00:14:20,713
the door early.

209
00:14:21,353 --> 00:14:25,275
Now Zach and Amy are stuck, they get shot, they're killed, and now Jean is standing there

210
00:14:25,315 --> 00:14:26,816
by himself wondering what's happening.

211
00:14:29,017 --> 00:14:31,699
So now we have the level entropy system.

212
00:14:33,520 --> 00:14:38,502
So you'll see again Jean Rimbaud running ahead, closes the door, but you'll notice that both

213
00:14:38,622 --> 00:14:40,363
Zach and Amy are able to run through the door.

214
00:14:41,524 --> 00:14:46,587
and Zack is even able to jump on crates which existed in his time, but not the current time anymore.

215
00:14:52,151 --> 00:14:54,613
So that is the level entropy system in action.

216
00:14:54,773 --> 00:14:59,896
And again, you may think, things may not make physical sense anymore, but again you'll realize

217
00:14:59,916 --> 00:15:04,760
that this makes the game feel more correct, which again seems counterintuitive.

218
00:15:06,877 --> 00:15:11,481
Okay, so the third thing is something called the quantum measurement problem.

219
00:15:12,182 --> 00:15:14,945
And this one is kind of a bit more difficult to explain.

220
00:15:16,706 --> 00:15:20,810
An easy way to explain it is sort of the adage, you know, if a tree falls in a forest and

221
00:15:20,830 --> 00:15:22,491
no one is around, does it still make a sound?

222
00:15:23,512 --> 00:15:26,135
Most people would think, yeah, why wouldn't it make a sound?

223
00:15:26,955 --> 00:15:29,498
But in actuality, the answer is no, it does not.

224
00:15:30,459 --> 00:15:32,941
Well, according to quantum mechanics, at least.

225
00:15:35,247 --> 00:15:36,448
So we're back to quantum mechanics again.

226
00:15:36,908 --> 00:15:39,269
So what is this quantum measurement problem?

227
00:15:40,029 --> 00:15:45,411
Essentially it states that particles do not exist in a definite state until they're actually

228
00:15:45,491 --> 00:15:47,191
measured by an observer.

229
00:15:47,852 --> 00:15:48,412
What does that mean?

230
00:15:49,452 --> 00:15:54,774
Well, normally you think of particles as things that have a definite position and state, but

231
00:15:54,794 --> 00:15:56,755
according to quantum mechanics that is not the case.

232
00:15:56,915 --> 00:16:01,896
Particles don't actually have a definite position and exist sort of in this weird spread out

233
00:16:03,064 --> 00:16:09,148
region, like a wave, and strangely, the moment someone tries to observe it, that's the moment

234
00:16:09,168 --> 00:16:11,871
that they spontaneously decide to have a specific position.

235
00:16:12,811 --> 00:16:13,592
So that's really weird.

236
00:16:13,652 --> 00:16:18,576
It caused quite a stir again, because there's this weird connection between how something

237
00:16:18,636 --> 00:16:20,518
exists and something actually observing it.

238
00:16:23,378 --> 00:16:29,660
So a famous sort of thought experiment to illustrate how weird this is, is Schrodinger's

239
00:16:29,700 --> 00:16:29,980
cat.

240
00:16:31,661 --> 00:16:37,363
So how this works is that, say you have some kind of box, inside the box, you can't see

241
00:16:37,383 --> 00:16:42,025
what's inside the box, but you put a cat in the box, and you also put a weird device which

242
00:16:42,105 --> 00:16:45,186
can poison the cat based on the state of a specific atom.

243
00:16:45,786 --> 00:16:50,888
Now according to quantum mechanics, that atom hasn't decided what state to be in, which

244
00:16:50,948 --> 00:16:52,428
means the poison...

245
00:16:53,874 --> 00:16:55,436
has or has not killed the cat.

246
00:16:56,116 --> 00:16:59,119
In actuality, you have to say that the cat is both alive and dead

247
00:16:59,640 --> 00:17:00,661
until someone observes it.

248
00:17:00,701 --> 00:17:03,884
Then the cat will finally decide to be dead or alive.

249
00:17:06,927 --> 00:17:07,308
Okay, cool.

250
00:17:07,428 --> 00:17:07,768
So what?

251
00:17:08,549 --> 00:17:09,590
What does that have to do with our game?

252
00:17:10,451 --> 00:17:15,316
Well, this concept actually helps solve a major problem in our game.

253
00:17:16,037 --> 00:17:17,018
So what is this major problem?

254
00:17:18,077 --> 00:17:23,901
Well first of all, since you can rewind and sort of run anywhere in the level, that means

255
00:17:23,921 --> 00:17:26,642
that players can exist anywhere and at any time.

256
00:17:27,963 --> 00:17:31,785
And because of that, that means everything in the world must be persistently active.

257
00:17:32,426 --> 00:17:37,088
So no matter when you are in the level, all enemies may be on the other end of the level,

258
00:17:37,108 --> 00:17:39,510
they still have to be doing their thing, because players could be there.

259
00:17:40,250 --> 00:17:44,233
And because of that, you can have unintentional interactions happening all over the place.

260
00:17:45,502 --> 00:17:46,222
And what's wrong with that?

261
00:17:46,763 --> 00:17:49,564
Well, you lose the ability to control the flow of a level.

262
00:17:50,004 --> 00:17:51,565
So players will be interacting with things

263
00:17:51,605 --> 00:17:52,405
that they haven't seen yet.

264
00:17:52,785 --> 00:17:55,706
They'll be doing things in areas that they're about to reach.

265
00:17:56,087 --> 00:17:58,528
And it sort of is a level design nightmare.

266
00:18:01,849 --> 00:18:03,770
So again, think about quantum mechanics.

267
00:18:10,095 --> 00:18:15,540
So our idea was to sort of treat enemies, or treat entities, like quantum particles.

268
00:18:15,560 --> 00:18:16,581
So what does that mean?

269
00:18:19,583 --> 00:18:25,428
So it means that entities are actually only allowed to interact if they have an observer,

270
00:18:26,209 --> 00:18:31,193
in the same way that particles only decide on their state if they have an observer.

271
00:18:33,495 --> 00:18:37,038
So that leads us to the Schrodinger system, as I like to call it.

272
00:18:38,375 --> 00:18:39,295
So it has three jobs.

273
00:18:39,455 --> 00:18:42,876
Number one, calculate the sum of all regions

274
00:18:42,936 --> 00:18:45,177
of the world observable by any player.

275
00:18:45,977 --> 00:18:47,817
So that just means it has to be able to know

276
00:18:48,497 --> 00:18:51,118
where in the level a player may be looking.

277
00:18:51,538 --> 00:18:53,259
And that includes all players in all

278
00:18:53,299 --> 00:18:54,579
of the previous timelines combined.

279
00:18:55,519 --> 00:18:57,820
So number two, store all of these observable regions

280
00:18:57,940 --> 00:18:59,480
for every moment in time.

281
00:19:00,601 --> 00:19:01,561
And the last thing it does is that

282
00:19:02,041 --> 00:19:04,362
it only allows entities deemed observable

283
00:19:04,862 --> 00:19:05,762
to be able to interact.

284
00:19:08,182 --> 00:19:12,824
Okay, so once again I will show a video showing this in action.

285
00:19:15,064 --> 00:19:20,366
Okay, so here we have a simple setup. We have a bunch of Time Force members fighting these two brown bots.

286
00:19:22,306 --> 00:19:24,647
And it's pretty crazy. Bullets are flying everywhere.

287
00:19:26,708 --> 00:19:29,228
But eventually, Jeff Leffert survives.

288
00:19:30,068 --> 00:19:32,109
And he runs forward and sees this door.

289
00:19:32,809 --> 00:19:34,670
And he says, hey, what's going on? There's nothing here.

290
00:19:34,690 --> 00:19:36,310
There's nothing he can do and he's sort of stuck.

291
00:19:37,710 --> 00:19:42,596
So let's see what happens when we do introduce the Schrodinger system, and you'll see what

292
00:19:42,716 --> 00:19:43,517
is supposed to happen.

293
00:19:44,778 --> 00:19:47,681
So once again, they're fighting off the two Bloundbots, bullets are flying everywhere.

294
00:19:51,445 --> 00:19:53,627
And once again, Jeff survives and decides to run ahead.

295
00:19:54,328 --> 00:19:57,532
Oh hey, this is what was supposed to be there, there was supposed to be enemies and destructible

296
00:19:57,572 --> 00:19:57,832
crates.

297
00:19:59,054 --> 00:20:02,055
So finally he's able to kill the enemy, grab the coin, which opens the door.

298
00:20:02,696 --> 00:20:07,297
And as you'll notice, bullets from off-screen are actually now interacting with these crates

299
00:20:07,398 --> 00:20:08,538
because they have an observer.

300
00:20:11,039 --> 00:20:16,961
So once again, things may not seem physically consistent, but it will make the game feel

301
00:20:17,021 --> 00:20:21,183
more correct, which, once again, you know, sort of counterintuitive.

302
00:20:24,304 --> 00:20:26,105
Okay, so in summary...

303
00:20:27,964 --> 00:20:31,767
Number one, making a time manipulation game fun is hard.

304
00:20:31,827 --> 00:20:34,269
It's not trivial, it's not straightforward.

305
00:20:35,850 --> 00:20:38,172
Counterintuitiveness can sometimes feel right.

306
00:20:39,233 --> 00:20:43,016
So, it goes against your instincts, you know, to do something that may not be consistent,

307
00:20:43,416 --> 00:20:50,842
that may not be logical, but in some cases, feel is more important than something being

308
00:20:51,042 --> 00:20:51,422
logical.

309
00:20:52,883 --> 00:20:54,344
And last but not least, science rules.

310
00:20:57,526 --> 00:21:12,018
And that's it. So, does anybody have any questions?

311
00:21:25,778 --> 00:21:30,924
might cause a player to survive, but then later on actually causes two players to die,

312
00:21:30,944 --> 00:21:31,885
or something like that.

313
00:21:32,726 --> 00:21:36,951
So the question was, how does the level entropy system work?

314
00:21:38,733 --> 00:21:40,856
Well it's actually not as complicated as it sounds.

315
00:21:40,956 --> 00:21:41,416
It's pretty much...

316
00:21:42,446 --> 00:21:46,747
as things are happening in the world, you're creating events, and these events are sort

317
00:21:46,767 --> 00:21:51,468
of relations between two entities, and you can pretty much know ahead of time whether

318
00:21:51,508 --> 00:21:54,568
these events have positive entropy or negative entropy.

319
00:21:56,029 --> 00:22:02,270
So you pretty much never want to allow a player to die before, you know, he was defined to

320
00:22:02,310 --> 00:22:02,990
die originally.

321
00:22:03,990 --> 00:22:08,031
You want to make sure that players who walked a certain distance are still able to walk

322
00:22:08,411 --> 00:22:10,351
that distance, and players that didn't fall.

323
00:22:12,023 --> 00:22:17,829
do not fall when they didn't before. So those things are usually enough to

324
00:22:17,849 --> 00:22:22,413
handle most of the situations but yeah it's not as complicated as it sounds.

325
00:22:23,014 --> 00:22:29,300
So do you kind of like run through all the possibilities through some certain depth?

326
00:22:30,978 --> 00:22:36,180
Essentially yes, but we sort of simplify the problem a little bit with game design.

327
00:22:37,100 --> 00:22:42,962
So in our game, the only interactions a player can have is either he can die on something

328
00:22:43,442 --> 00:22:45,123
or he can shoot something and kill it.

329
00:22:45,443 --> 00:22:51,384
We don't have the ability to use things or, you know, to push and pull things, because

330
00:22:51,404 --> 00:22:54,045
those things would make this system a lot more complicated if we had to deal with those

331
00:22:54,085 --> 00:22:54,265
things.

332
00:22:56,426 --> 00:22:59,006
But you still have to like run the simulation.

333
00:23:00,242 --> 00:23:06,726
Yeah, essentially we're rerunning the simulation for all the players and sort of fixing it as it needs to be fixed.

334
00:23:06,746 --> 00:23:12,591
Gotcha.

335
00:23:13,151 --> 00:23:19,215
Hi, I was wondering just how do you guys avoid players from taking advantage of the entanglement system and start breaking the game?

336
00:23:19,235 --> 00:23:22,718
You know, trying to get infinite power-ups, infinite health, and all that kind of stuff.

337
00:23:23,919 --> 00:23:26,920
So the question is how do we prevent players from sort of exploiting the system?

338
00:23:26,980 --> 00:23:35,245
Yeah, that was a big problem, but fortunately because of resource limits, you have to put

339
00:23:35,285 --> 00:23:36,946
limits on the ability to rewind.

340
00:23:37,386 --> 00:23:42,589
So there's a certain amount of time that you can exist and there's a certain number of

341
00:23:42,649 --> 00:23:43,710
times that you can rewind.

342
00:23:43,930 --> 00:23:46,031
So that sort of naturally puts a cap on these things.

343
00:23:47,082 --> 00:23:53,004
But also for any events, such as grabbing a power-up or grabbing a collectible, those things cannot be stacked.

344
00:23:53,064 --> 00:23:55,245
So as soon as they've been done by one person in the timeline,

345
00:23:55,765 --> 00:23:59,827
then only that person will do it and that power-up becomes unavailable to all of the...

346
00:24:00,467 --> 00:24:02,468
You would say it propagates across all timelines then?

347
00:24:02,748 --> 00:24:02,888
Yeah.

348
00:24:03,228 --> 00:24:03,988
Cool. Thanks.

349
00:24:04,268 --> 00:24:04,508
No problem.

350
00:24:06,590 --> 00:24:10,532
In your video examples, it seemed like the difference after you applied your systems

351
00:24:10,792 --> 00:24:16,114
was that your previous cells played out exactly as they did when they played in the first

352
00:24:16,154 --> 00:24:19,915
place regardless of whether there were things they depended on no longer existed.

353
00:24:20,575 --> 00:24:23,857
Are there any examples where that's not the case?

354
00:24:24,297 --> 00:24:27,898
I.e. how is your system different to just making all previous cells play out identically

355
00:24:27,938 --> 00:24:28,878
to how they originally played out?

356
00:24:31,173 --> 00:24:35,496
Essentially that is what we want to do. We want players to play out exactly what they did before.

357
00:24:35,796 --> 00:24:40,060
But it's not just simply a matter of putting them in the correct position with the correct velocity.

358
00:24:40,100 --> 00:24:48,106
Because they could be doing things like spawning a power-up or grabbing a power-up and going into slow motion or...

359
00:24:50,782 --> 00:24:57,784
Yeah, so it's not just about position and velocity, it's about how they change the world around them.

360
00:24:58,345 --> 00:25:03,326
Right, so are there situations where you would be helping a past self so their life would actually play out differently

361
00:25:03,987 --> 00:25:07,048
because the change you made to their situation is actually positive rather than negative?

362
00:25:07,488 --> 00:25:07,648
Yeah.

363
00:25:08,128 --> 00:25:09,129
Right, cool. Thanks.

364
00:25:10,509 --> 00:25:12,130
Just a quick question.

365
00:25:13,170 --> 00:25:15,511
Okay, alright, I guess this will be the last question.

366
00:25:16,332 --> 00:25:18,092
Just, how do you do the survivor problem? So if you...

367
00:25:20,509 --> 00:25:21,989
died and then you

368
00:25:22,890 --> 00:25:24,110
then a later version of you

369
00:25:24,310 --> 00:25:26,351
helps that person survive and there's no recording for that

370
00:25:27,052 --> 00:25:29,933
past your original death, how do you solve that?

371
00:25:30,513 --> 00:25:32,454
So the question is what happens when somebody dies

372
00:25:32,914 --> 00:25:34,915
and then you rewind and prevent that death from happening.

373
00:25:35,196 --> 00:25:36,556
Well that's actually one of the key

374
00:25:36,976 --> 00:25:38,077
gameplay mechanics in the game

375
00:25:38,757 --> 00:25:40,038
so you can sort of save yourself

376
00:25:41,218 --> 00:25:41,979
and when you do that

377
00:25:43,019 --> 00:25:45,200
we don't do anything crazy we don't sort of give you AI

378
00:25:45,480 --> 00:25:47,181
that player that you save becomes a powerup

379
00:25:47,481 --> 00:25:48,642
and you can go and collect them and

380
00:25:49,554 --> 00:25:51,799
take their powers and now you're essentially two people at once.

381
00:25:52,500 --> 00:25:52,661
Cool.

382
00:25:53,022 --> 00:25:53,182
Cool.

383
00:25:53,923 --> 00:25:54,204
No problem.

384
00:25:55,787 --> 00:25:56,389
Alright, thanks.

