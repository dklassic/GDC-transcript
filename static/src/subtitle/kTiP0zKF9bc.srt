1
00:00:07,264 --> 00:00:10,346
Hi, so we have a little bit of business before we get started.

2
00:00:11,067 --> 00:00:13,548
I'm supposed to ask you to pretty please mute your cell

3
00:00:13,568 --> 00:00:16,390
phones so they don't go off, and also

4
00:00:16,510 --> 00:00:19,272
to make sure to fill out your surveys when you're done,

5
00:00:19,292 --> 00:00:20,613
or when we're done.

6
00:00:20,993 --> 00:00:23,555
They're super helpful for GDC to figure out

7
00:00:23,575 --> 00:00:25,216
who they should invite back, and they're also

8
00:00:25,256 --> 00:00:27,077
super useful for me to figure out

9
00:00:27,177 --> 00:00:28,458
if you liked the way I presented and you

10
00:00:28,498 --> 00:00:29,218
like what I presented.

11
00:00:29,279 --> 00:00:31,440
So please take a moment when we're done to do that.

12
00:00:32,401 --> 00:00:34,722
All right, that's the stuff out of the way.

13
00:00:34,742 --> 00:00:35,382
Let's get started.

14
00:00:36,483 --> 00:00:37,704
So my name is John McDonald.

15
00:00:37,864 --> 00:00:38,584
I'm here from Valve.

16
00:00:38,904 --> 00:00:41,325
And today I wanted to come and talk a little bit about how

17
00:00:41,365 --> 00:00:45,307
we've been using deep learning to effectively combat cheating

18
00:00:45,347 --> 00:00:46,048
in CS Go.

19
00:00:46,708 --> 00:00:48,489
Spoiler alert, it works pretty well.

20
00:00:48,549 --> 00:00:49,409
We're pretty happy with it.

21
00:00:51,000 --> 00:00:51,881
So that's a bunch of stuff.

22
00:00:52,422 --> 00:00:55,304
We have a whole hour, so we're going

23
00:00:55,324 --> 00:00:56,125
to cover a lot of ground.

24
00:00:56,145 --> 00:00:59,468
I'm going to spend a little bit of time, probably,

25
00:00:59,988 --> 00:01:01,610
fair warning, probably about 15 minutes,

26
00:01:01,650 --> 00:01:04,132
kind of talking about the state of CS Go with respect

27
00:01:04,172 --> 00:01:08,035
to cheating, other things that we do in this space.

28
00:01:08,656 --> 00:01:11,118
And then we'll dive into sort of the pitch

29
00:01:11,238 --> 00:01:13,700
that I was making to folks around Valve in 2016

30
00:01:13,760 --> 00:01:16,122
for why we should maybe give this a try.

31
00:01:16,623 --> 00:01:21,488
We'll dive into results, and then we'll talk a little bit about how you train and utilize

32
00:01:21,888 --> 00:01:22,529
deep networks.

33
00:01:22,949 --> 00:01:26,072
We'll talk about some ongoing and near-term work, and then we'll finish up.

34
00:01:27,414 --> 00:01:32,379
One thing that's probably worth mentioning is that notably absent from this list is deep

35
00:01:32,419 --> 00:01:32,679
learning.

36
00:01:32,879 --> 00:01:36,803
I'm not actually going to try and teach you deep learning in an hour because I don't believe

37
00:01:36,843 --> 00:01:37,544
that I can do it.

38
00:01:38,124 --> 00:01:44,407
But i will point you at the end towards resources so that if when we're done you feel like oh, that's something that maybe i should try

39
00:01:44,427 --> 00:01:50,070
You, know, where to get started and good news it's actually pretty straightforward to to learn

40
00:01:51,335 --> 00:01:54,516
All right, so let's talk a little bit about CSGO itself first.

41
00:01:55,596 --> 00:01:58,678
CSGO, if you're unfamiliar, I think most of you probably are,

42
00:01:58,758 --> 00:02:01,439
but it is a succession of Counter-Strike.

43
00:02:01,839 --> 00:02:05,160
It is a competitive multiplayer game.

44
00:02:05,260 --> 00:02:07,101
It's fast-paced action.

45
00:02:07,861 --> 00:02:11,423
We have bullets that are extremely, extremely lethal,

46
00:02:11,623 --> 00:02:13,123
and when you're dead for a round, you're out.

47
00:02:13,764 --> 00:02:16,165
The combat engagements in CSGO are very, very short.

48
00:02:16,625 --> 00:02:19,627
The average engagement time can be like one to two seconds.

49
00:02:19,787 --> 00:02:21,708
And all of this sort of matters because it impacts

50
00:02:22,408 --> 00:02:23,188
our cheating problem.

51
00:02:23,989 --> 00:02:26,750
CSGO has 12.4 million monthly uniques

52
00:02:27,110 --> 00:02:30,032
and three million uniques checked back in every day.

53
00:02:30,172 --> 00:02:34,914
So we're pretty happy that our player base is so rabid.

54
00:02:35,635 --> 00:02:38,336
Finally, it's the 10th title that shipped on Source Engine

55
00:02:38,356 --> 00:02:40,077
and we'll see how this plays into our cheating problem

56
00:02:40,097 --> 00:02:41,478
a little bit later as well.

57
00:02:42,420 --> 00:02:45,307
One of our most popular modes for CSGO is the competitive mode.

58
00:02:45,347 --> 00:02:46,730
It's a 5v5 game mode.

59
00:02:47,472 --> 00:02:48,675
First to 16 wins.

60
00:02:49,296 --> 00:02:51,000
And each round is about 2 minutes and 57 seconds.

61
00:02:52,514 --> 00:02:59,057
When you sign in for matchmaking, we ask you to agree that you could be signing up for a 90 minute commitment.

62
00:03:00,357 --> 00:03:03,459
The average game is actually more like 40 minutes.

63
00:03:03,899 --> 00:03:07,020
65% of our players check back in with this mode at least once a month,

64
00:03:07,441 --> 00:03:11,122
and there are 600,000 of these matches every day.

65
00:03:11,222 --> 00:03:18,065
It varies depending on time of day and, sorry, day of week and summer.

66
00:03:18,085 --> 00:03:19,946
There's a lot more matches, school's out, etc.

67
00:03:21,788 --> 00:03:25,433
It turns out college kids love to play video games.

68
00:03:25,514 --> 00:03:26,555
I don't know if any of y'all knew that.

69
00:03:27,837 --> 00:03:30,701
But so let's dive in and talk about cheating,

70
00:03:30,761 --> 00:03:32,123
because that's kind of why we're here.

71
00:03:33,503 --> 00:03:37,144
Back in 2016, I was sort of figuring out

72
00:03:37,164 --> 00:03:38,225
what I was going to work on next.

73
00:03:38,285 --> 00:03:40,405
I had finished up some other CSGO work,

74
00:03:41,445 --> 00:03:43,166
and I was trying to figure out what I wanted to do.

75
00:03:43,306 --> 00:03:44,986
And usually when I'm in that space at Valve,

76
00:03:45,186 --> 00:03:47,747
I just kind of try and sort of figure out

77
00:03:47,767 --> 00:03:48,627
what the community wants.

78
00:03:48,647 --> 00:03:50,728
Because I figure any time you sort of pay down

79
00:03:50,768 --> 00:03:51,788
some debt in the community, that's

80
00:03:51,828 --> 00:03:53,608
a pretty good investment while you're trying to figure out.

81
00:03:54,269 --> 00:03:55,789
a sort of larger problem to work on.

82
00:03:56,190 --> 00:03:58,151
And it turns out, I couldn't do that,

83
00:03:58,431 --> 00:03:59,791
because the only thing the community

84
00:03:59,831 --> 00:04:01,072
was talking about was cheating.

85
00:04:02,353 --> 00:04:05,274
It was this just deafening conversation,

86
00:04:05,474 --> 00:04:07,295
and we saw this, and of course,

87
00:04:07,335 --> 00:04:08,936
like this information is all anecdotal,

88
00:04:08,976 --> 00:04:12,118
but we saw it on Reddit,

89
00:04:12,338 --> 00:04:16,059
and we saw it on our own CSGO team feedback alias,

90
00:04:16,160 --> 00:04:17,480
where players mail us directly.

91
00:04:17,920 --> 00:04:21,101
And, you know, the feedback alias in particular I had some data on.

92
00:04:21,141 --> 00:04:25,502
It was like 90% of the incoming mail was people saying, your game is filled with cheaters.

93
00:04:25,662 --> 00:04:27,743
And that's, you know, that's really frustrating.

94
00:04:28,103 --> 00:04:34,324
But we weren't sure whether or not the problem was sort of a perception problem or whether

95
00:04:34,344 --> 00:04:35,865
there was actually a cheating problem.

96
00:04:36,665 --> 00:04:40,926
Except it turned out that VAC bans, which we'll talk about in a little bit, sort of

97
00:04:40,946 --> 00:04:42,026
supported this conversation.

98
00:04:42,066 --> 00:04:44,286
Like, we had a lot of VAC bans that we were handing out.

99
00:04:45,360 --> 00:04:50,081
And we think that CSGO has sort of two main components

100
00:04:50,742 --> 00:04:53,322
that lead to cheating being such a significant problem.

101
00:04:53,562 --> 00:04:55,443
And there's a third aspect we'll talk about in a little bit.

102
00:04:55,563 --> 00:04:57,463
But one is that the design sort of,

103
00:04:57,623 --> 00:05:00,364
the design is this very satisfying combat experience

104
00:05:00,424 --> 00:05:04,005
where almost any weapon in the game can be a one-shot kill.

105
00:05:04,925 --> 00:05:07,885
But that does also sort of fail to disincentivize cheating.

106
00:05:08,626 --> 00:05:10,046
On balance, we think that's a good trade

107
00:05:10,126 --> 00:05:11,626
because players really enjoy this,

108
00:05:11,786 --> 00:05:15,067
but it does sort of make us a juicy target for cheating.

109
00:05:16,468 --> 00:05:24,353
Similarly, since the engine is so old, and about 75 to 80% of the code in CSGO is actually

110
00:05:24,453 --> 00:05:29,477
unchanged from Half-Life 2, that means that if you have a cheat that somebody wrote back

111
00:05:29,557 --> 00:05:34,440
in say 2005 for Half-Life 2 Deathmatch and then they posted it on GitHub a couple years

112
00:05:34,480 --> 00:05:35,041
ago on a Lark.

113
00:05:35,521 --> 00:05:42,565
That thing probably actually works on CS Go with a small amount of changes, like maybe

114
00:05:42,625 --> 00:05:43,906
five to ten minutes of tinkering.

115
00:05:44,406 --> 00:05:48,009
Now the good news is we do actually catch pretty much all of those cheats.

116
00:05:48,069 --> 00:05:50,410
Like if it's on GitHub, you're going to get banned for using it.

117
00:05:51,171 --> 00:05:57,034
But that just means that there is just this availability of cheats that we don't see in

118
00:05:57,054 --> 00:05:57,775
a lot of other places.

119
00:05:59,402 --> 00:06:02,484
There are two main sort of cheats that are prevalent in CSGO.

120
00:06:02,504 --> 00:06:04,745
There's a third one that we're not really going to talk about today,

121
00:06:04,965 --> 00:06:08,408
but it also is just this very minor sort of issue.

122
00:06:08,768 --> 00:06:12,170
And the primary two are probably the two that you might be used to

123
00:06:12,290 --> 00:06:14,492
if you're familiar with cheating in your games.

124
00:06:14,972 --> 00:06:17,734
And that is basically something that helps you aim better

125
00:06:18,155 --> 00:06:20,716
and something that gives you information that you're not supposed to have.

126
00:06:21,757 --> 00:06:25,320
And you can sort of, so the aim hacks or aim bots

127
00:06:26,121 --> 00:06:28,723
tend to make it sort of much, much easier for you

128
00:06:28,824 --> 00:06:32,106
to communicate, headshot that guy,

129
00:06:32,547 --> 00:06:34,789
because in CSGO, if I see a target

130
00:06:34,829 --> 00:06:37,051
and I want to headshot him, I need to identify him,

131
00:06:37,271 --> 00:06:39,773
I need to decide that he is an enemy, or she could be,

132
00:06:40,654 --> 00:06:40,894
decide.

133
00:06:41,674 --> 00:06:42,315
that they're an enemy.

134
00:06:42,615 --> 00:06:43,916
I need to move my mouse over.

135
00:06:43,936 --> 00:06:47,579
I need to place it ideally on their head, push the mouse,

136
00:06:47,959 --> 00:06:50,962
and then start dragging it down to deal with recoil.

137
00:06:51,562 --> 00:06:53,664
Or I could have a cheat that does all of those things

138
00:06:53,724 --> 00:06:56,146
if I just press the X button, including not shooting

139
00:06:56,246 --> 00:06:57,847
if that person is actually a friend of mine.

140
00:06:58,267 --> 00:07:00,929
And so that communication of intent,

141
00:07:00,990 --> 00:07:04,332
there's a big delta between the intent of the action

142
00:07:04,452 --> 00:07:05,353
and the actual action.

143
00:07:06,482 --> 00:07:12,028
And information assistance hacks are exactly what you would expect while hacks, you know,

144
00:07:12,549 --> 00:07:14,851
substituting materials or what have you.

145
00:07:14,911 --> 00:07:18,695
But it's just giving you information that basically you shouldn't have.

146
00:07:19,116 --> 00:07:22,620
And then there's sort of this scale that we sort of think about hacks on.

147
00:07:22,640 --> 00:07:26,044
There's the subtle cheats where somebody is trying to basically pretend

148
00:07:26,624 --> 00:07:28,425
that they're a better player than they are.

149
00:07:28,826 --> 00:07:30,667
And those are actually pretty hard to detect

150
00:07:30,947 --> 00:07:32,689
and not what we went after first.

151
00:07:33,029 --> 00:07:36,131
And then the scale kind of ramps up in obviousness

152
00:07:36,211 --> 00:07:38,253
until you get to what we call rage cheats.

153
00:07:38,713 --> 00:07:41,976
And the purpose of a rage cheat is not subtlety.

154
00:07:42,176 --> 00:07:44,818
The purpose of a rage cheat is to make you pissed off

155
00:07:45,138 --> 00:07:47,920
that I am cheating and there is nothing you can do about it

156
00:07:48,200 --> 00:07:50,662
and all I want to do for the next 40 minutes

157
00:07:51,002 --> 00:07:52,063
is ruin your day.

158
00:07:53,104 --> 00:07:56,448
And so we decided that seemed like a pretty good target to go after first.

159
00:07:58,170 --> 00:08:03,636
Now, cheating, because of the 5v5 nature in CSGO,

160
00:08:04,036 --> 00:08:08,521
you can sort of think about the cheating problem as it relates to an individual user.

161
00:08:08,721 --> 00:08:12,446
So if I'm going to play a competitive match, given that I am clean,

162
00:08:13,887 --> 00:08:15,668
even a low base rate of cheating,

163
00:08:15,728 --> 00:08:18,130
like if 2% of players are sort of cheaters

164
00:08:18,210 --> 00:08:19,411
and they're randomly distributed,

165
00:08:19,891 --> 00:08:22,894
then two out of 10 matches that I play are gonna be dirty.

166
00:08:23,754 --> 00:08:25,736
And if the rate is of,

167
00:08:26,036 --> 00:08:27,717
if the base rate of cheating were 7%,

168
00:08:28,057 --> 00:08:30,179
like half of the matches that I get into

169
00:08:30,259 --> 00:08:31,440
will have at least one cheater.

170
00:08:31,580 --> 00:08:33,462
And that is, again, assuming that I'm a clean player.

171
00:08:33,562 --> 00:08:35,163
Because there are nine other opportunities

172
00:08:35,863 --> 00:08:36,744
for a cheater to land.

173
00:08:37,565 --> 00:08:38,425
The other thing that is,

174
00:08:39,606 --> 00:08:45,169
maybe mildly, that's slightly even more irritating about that is that given that you were a clean player,

175
00:08:45,569 --> 00:08:49,591
you are more likely to play against a cheater than you are to have a cheater land on your team,

176
00:08:49,791 --> 00:08:53,973
because there are only four slots for them to land on your team and five slots for them to land on the other team.

177
00:08:54,793 --> 00:09:00,416
So that makes it an even more irritating problem for our sort of good actor players.

178
00:09:01,736 --> 00:09:04,438
Now the good news is, I'm gonna spend a minute here

179
00:09:04,498 --> 00:09:05,579
sort of in a digression.

180
00:09:05,879 --> 00:09:07,320
The good news is that we don't actually

181
00:09:07,460 --> 00:09:09,061
just randomly distribute our players.

182
00:09:09,941 --> 00:09:13,044
We released this system in 2016 called Trust Score,

183
00:09:13,144 --> 00:09:14,665
and this sort of mitigates the damage

184
00:09:14,705 --> 00:09:15,925
of cheating a fair amount.

185
00:09:16,306 --> 00:09:18,347
And the idea is that we sort of pay attention,

186
00:09:18,387 --> 00:09:21,869
we train the model based on how you interact with CSGO

187
00:09:21,970 --> 00:09:23,210
and how you interact with Steam,

188
00:09:24,171 --> 00:09:27,353
and we use that to try and predict how likely it is

189
00:09:27,393 --> 00:09:29,495
that you're gonna go on to receive a ban of some sort.

190
00:09:30,035 --> 00:09:33,359
And then we basically use that trust score to match

191
00:09:34,580 --> 00:09:37,823
as an additional factor when we're doing matchmaking,

192
00:09:37,963 --> 00:09:40,406
like in addition to your skill and what map you want to play

193
00:09:40,466 --> 00:09:41,788
and sort of other things.

194
00:09:43,009 --> 00:09:45,551
And that lets us sort of put known good actors

195
00:09:46,252 --> 00:09:48,254
in with other known good actors more often.

196
00:09:48,635 --> 00:09:50,397
And so as a result, our known good actors

197
00:09:50,577 --> 00:09:51,938
run into cheaters way less often.

198
00:09:52,339 --> 00:09:54,540
And this can sort of be more easily visualized.

199
00:09:54,600 --> 00:09:57,022
Like imagine this is just a population of players.

200
00:09:57,582 --> 00:09:58,202
Don't count them.

201
00:09:58,322 --> 00:09:59,363
There are 50 dots here.

202
00:09:59,763 --> 00:10:04,206
And so we need to set them into five 5v5 matches.

203
00:10:04,846 --> 00:10:07,528
And because it is way easier to do with PowerPoint,

204
00:10:08,169 --> 00:10:10,010
maybe we set our matches up like this.

205
00:10:10,870 --> 00:10:13,092
And so now we've created five matches.

206
00:10:13,612 --> 00:10:14,793
And let's find out how we did.

207
00:10:16,580 --> 00:10:18,803
you have this sort of concept that we're going to introduce

208
00:10:18,843 --> 00:10:20,024
called the rainbow of trust.

209
00:10:20,364 --> 00:10:22,747
And we think that blue players are very unlikely

210
00:10:22,767 --> 00:10:24,069
to go on to receive bands,

211
00:10:24,430 --> 00:10:27,213
but red players are very likely to go on to receive bands.

212
00:10:27,694 --> 00:10:29,776
Now you might be asking if the red players

213
00:10:29,816 --> 00:10:31,358
are likely to go on to receive bands.

214
00:10:31,879 --> 00:10:32,859
why don't you just ban them?

215
00:10:32,879 --> 00:10:35,080
And the answer is, because they haven't cheated yet.

216
00:10:35,340 --> 00:10:37,541
Like, we don't know for sure that they're cheaters,

217
00:10:37,581 --> 00:10:40,022
they are just more likely to go on to be cheating.

218
00:10:40,983 --> 00:10:44,244
But, let's assume in this case that five of the red players

219
00:10:44,304 --> 00:10:46,926
are cheating, you can see that in the worst case here,

220
00:10:47,006 --> 00:10:49,527
like all five of these matches now have cheaters.

221
00:10:50,207 --> 00:10:52,388
And what trust lets us do is basically say,

222
00:10:52,429 --> 00:10:53,969
hey, when we're trying to build matches,

223
00:10:54,029 --> 00:10:56,011
if we assume all of these players are sort of,

224
00:10:56,651 --> 00:10:58,852
that any subgroup of 10 players here

225
00:10:58,892 --> 00:11:00,413
would form a reasonable match,

226
00:11:00,753 --> 00:11:02,474
we could draw our matches like this instead.

227
00:11:02,894 --> 00:11:04,635
And now we've created four good matches,

228
00:11:04,815 --> 00:11:06,396
and the players who we're most certain

229
00:11:06,596 --> 00:11:07,937
are not gonna go on to cheat

230
00:11:09,058 --> 00:11:11,019
are very unlikely to run into cheaters.

231
00:11:12,159 --> 00:11:16,902
So, we have a bunch of data that shows that trust works really well, but I kind of prefer

232
00:11:16,922 --> 00:11:21,524
the anecdotal version instead, and that's that we actually launched trust about six

233
00:11:21,604 --> 00:11:24,886
months before we announced it.

234
00:11:25,466 --> 00:11:29,588
And during that time we were gathering feedback and looking for people that sort of like had

235
00:11:29,668 --> 00:11:31,949
bugs, like just general feedback, right?

236
00:11:31,969 --> 00:11:33,830
They didn't know that we were running the experiment.

237
00:11:35,411 --> 00:11:40,493
And so what would happen is you'd see a thread pop up on like the steam community forums where somebody would say

238
00:11:40,513 --> 00:11:42,254
CSgo is filled with cheaters

239
00:11:42,555 --> 00:11:48,358
And then you'd see somebody else reply and usually quite a few someone else's who would reply and say I don't really ever run into

240
00:11:48,378 --> 00:11:50,539
Cheaters anymore. I don't know what you're talking about

241
00:11:51,300 --> 00:11:54,462
And at this point, we had sort of been public about some of the other anti-cheat work that

242
00:11:54,482 --> 00:11:57,864
we were doing, and so the player base assumed that that was why they weren't seeing cheaters

243
00:11:57,924 --> 00:11:58,325
as often.

244
00:11:58,885 --> 00:12:04,449
But we would go and basically say, like, hey, let's go figure out what this person's trust

245
00:12:04,469 --> 00:12:04,830
score is.

246
00:12:04,870 --> 00:12:09,653
And we'd go and we'd look at the OP, and you'd be like, this dude is tied to 50 accounts,

247
00:12:09,953 --> 00:12:12,615
and 49 of them have bans for cheating.

248
00:12:12,635 --> 00:12:14,737
I don't care that that guy runs into cheaters.

249
00:12:14,757 --> 00:12:18,159
He should run into cheaters, because he's definitely going to cheat again, but maybe

250
00:12:18,179 --> 00:12:18,940
he hasn't done it yet.

251
00:12:20,482 --> 00:12:23,224
So that's pretty much all I kind of wanted to say on trust.

252
00:12:23,384 --> 00:12:25,805
I did want to mention, though, a thing that's cool about trust

253
00:12:25,865 --> 00:12:28,846
is that it doesn't really reduce the rate of cheating,

254
00:12:28,946 --> 00:12:32,468
but it reduces the blast radius when people decide to cheat.

255
00:12:34,589 --> 00:12:37,810
So let's dive in and talk about a couple

256
00:12:37,830 --> 00:12:39,911
of the other anti-cheat things that we do.

257
00:12:42,048 --> 00:12:45,410
So probably the main thrust of work that we do

258
00:12:45,490 --> 00:12:46,731
is just mitigating exploits.

259
00:12:46,771 --> 00:12:51,634
We just fix bugs when they come in, and that goes away.

260
00:12:51,714 --> 00:12:53,555
Somebody reports, hey, here's this problem.

261
00:12:53,615 --> 00:12:55,456
We investigate, we figure out what the problem is,

262
00:12:55,516 --> 00:12:56,156
and we fix it.

263
00:12:56,576 --> 00:12:58,497
And so one of the canonical examples for this

264
00:12:58,578 --> 00:12:59,998
was this speed hack.

265
00:13:00,999 --> 00:13:02,800
It turned out that players realized,

266
00:13:03,220 --> 00:13:05,942
some malicious players realized that if they,

267
00:13:06,382 --> 00:13:07,963
this part's a little bit technical, I'm sorry.

268
00:13:08,663 --> 00:13:12,365
But they basically realized that if they lied to the process,

269
00:13:12,405 --> 00:13:16,507
they lied to CSGO about how fast their clock was running,

270
00:13:16,867 --> 00:13:20,069
they could convince the game client that basically it

271
00:13:20,129 --> 00:13:21,729
was running 10 ticks at a time.

272
00:13:22,170 --> 00:13:24,731
And so then the game client would faithfully be like,

273
00:13:25,011 --> 00:13:27,812
hey server, here's 10 movement packets.

274
00:13:28,413 --> 00:13:30,474
And that would effectively, and then the game server

275
00:13:30,534 --> 00:13:34,216
was like, for reasons that client authoritative feels

276
00:13:34,356 --> 00:13:34,656
awesome.

277
00:13:35,676 --> 00:13:38,377
we would, the game server would just go,

278
00:13:38,397 --> 00:13:39,577
yeah, okay, looks good to me.

279
00:13:40,377 --> 00:13:44,219
And it would just process all 10 movement packets

280
00:13:44,639 --> 00:13:46,039
in sort of a single server tick.

281
00:13:46,399 --> 00:13:47,840
And then the results of that is that

282
00:13:47,940 --> 00:13:49,220
that player would just sort of appear

283
00:13:49,240 --> 00:13:52,121
to just teleport around the map effectively at will.

284
00:13:53,002 --> 00:13:56,607
And so the fix was basically as brutally simple as you imagine it would be.

285
00:13:57,068 --> 00:14:00,914
It is that the server is like, I'm, you know, modulo some latency issues.

286
00:14:01,194 --> 00:14:05,400
I'm only going to accept one movement packet for each client per tick.

287
00:14:05,861 --> 00:14:07,203
And the problem just goes away.

288
00:14:08,344 --> 00:14:12,608
Now, this is, like I said, this is sort of our primary form of mitigating exploits.

289
00:14:13,349 --> 00:14:15,270
It's always an option, it's always ongoing work.

290
00:14:15,671 --> 00:14:19,735
And the thing is, is that as we do that work, like, bad actors continue to probe and try

291
00:14:19,775 --> 00:14:20,756
and find new areas.

292
00:14:21,136 --> 00:14:24,759
And this sort of evolutionary behavior on their part results in this treadmill of work.

293
00:14:25,240 --> 00:14:26,741
And we don't mind doing the treadmill of work.

294
00:14:26,881 --> 00:14:30,645
It's important, valuable work, but it is a treadmill that we're sort of signed up for.

295
00:14:31,960 --> 00:14:35,882
The other primary form of anti-cheat that we utilize

296
00:14:35,902 --> 00:14:37,742
is VAC, Valve Anti-Cheat.

297
00:14:38,143 --> 00:14:43,185
And VAC basically is a system of client-side detections.

298
00:14:43,405 --> 00:14:45,666
So I'm going to pay attention to what's going on in your system.

299
00:14:46,006 --> 00:14:49,428
And then I'm going to anonymize that and scrub it

300
00:14:49,488 --> 00:14:51,309
of anything that might be personally identifiable.

301
00:14:51,429 --> 00:14:52,689
And then I'm going to hand it up to the server.

302
00:14:53,510 --> 00:14:57,512
And now that VAC is only active when you're connected to VAC-secured servers,

303
00:14:57,572 --> 00:15:02,014
and if you receive a VAC ban, it only prohibits you from playing on VAC-secured servers.

304
00:15:02,654 --> 00:15:07,536
But that is about 98% of servers, so you're pretty locked down at that point.

305
00:15:07,556 --> 00:15:12,118
And then the evidentiary standard for VAC, meaning like when VAC takes an action,

306
00:15:13,139 --> 00:15:15,660
we're 100% certain that you had your hand in the cookie jar.

307
00:15:17,822 --> 00:15:18,482
with a caveat.

308
00:15:18,842 --> 00:15:21,144
And the caveat is that sometimes we make mistakes,

309
00:15:21,404 --> 00:15:22,405
but when we make mistakes,

310
00:15:22,485 --> 00:15:24,547
we rectify them clearly and immediately.

311
00:15:24,607 --> 00:15:26,929
There's a blog post, there's a clarification

312
00:15:26,969 --> 00:15:28,610
that this was the thing and it was wrong

313
00:15:28,670 --> 00:15:30,151
and we fixed it and we're very sorry.

314
00:15:30,692 --> 00:15:31,653
And as a result of this,

315
00:15:31,673 --> 00:15:35,035
our community has very high confidence

316
00:15:35,075 --> 00:15:36,456
that when VAC takes action.

317
00:15:37,177 --> 00:15:40,818
that we are punishing cheaters, which is borne out.

318
00:15:41,398 --> 00:15:43,078
But interestingly, I know that a lot of devs

319
00:15:43,178 --> 00:15:44,979
actually struggle with the opposite problem.

320
00:15:44,999 --> 00:15:47,019
They have an anti-cheat, and their players

321
00:15:47,419 --> 00:15:50,080
believe that their anti-cheat really gets cheaters,

322
00:15:50,220 --> 00:15:53,861
but they're not actually certain that the anti-cheat

323
00:15:54,861 --> 00:15:56,662
isn't also punishing innocent users.

324
00:15:57,162 --> 00:15:58,562
We definitely don't have that problem.

325
00:15:58,582 --> 00:15:59,782
We're very happy about that.

326
00:16:02,263 --> 00:16:02,743
Okay, so.

327
00:16:03,722 --> 00:16:06,064
We don't talk about VAC very often.

328
00:16:06,504 --> 00:16:08,206
And the reason that we don't talk about VAC

329
00:16:08,426 --> 00:16:10,348
is that talking about it makes it less effective.

330
00:16:11,108 --> 00:16:13,270
And in particular, talking about detections

331
00:16:13,491 --> 00:16:15,392
just stops them from working.

332
00:16:15,933 --> 00:16:19,396
So for example, if I got up on stage today and I said,

333
00:16:19,416 --> 00:16:21,278
hey guys, here's a detection.

334
00:16:21,338 --> 00:16:21,718
What we do?

335
00:16:22,199 --> 00:16:24,440
is when somebody has a process

336
00:16:25,220 --> 00:16:27,761
and their process is scribbling into CSGO's memory,

337
00:16:27,861 --> 00:16:30,622
we go identify all of the binary parts of that process

338
00:16:31,003 --> 00:16:33,083
and then we go find the executable code

339
00:16:33,124 --> 00:16:34,944
that loaded that process from disk

340
00:16:35,084 --> 00:16:37,465
and then we MD5 sum it and then we send it home

341
00:16:37,786 --> 00:16:41,447
and we figure out if that is a malicious actor

342
00:16:41,587 --> 00:16:43,228
or like OBS or something instead.

343
00:16:43,588 --> 00:16:45,149
When I tell you that that's a thing that we do,

344
00:16:45,429 --> 00:16:46,510
I just lit that thing on fire.

345
00:16:46,810 --> 00:16:47,851
Like, it doesn't work anymore.

346
00:16:47,951 --> 00:16:52,415
Or at least by the time this hits Twitch in, you know, three seconds, it definitely won't

347
00:16:52,435 --> 00:16:52,935
work anymore.

348
00:16:53,956 --> 00:16:58,921
The good news is that we actually have thousands of detections that are sort of various sophistication

349
00:16:58,961 --> 00:17:00,062
and we write more every day.

350
00:17:00,702 --> 00:17:05,506
But again, every time we do this, our bad actors evolve and the treadmill continues.

351
00:17:07,641 --> 00:17:08,963
All right, great.

352
00:17:09,043 --> 00:17:11,287
So let's get to why we think deep learning might

353
00:17:11,347 --> 00:17:14,953
be an effective component in our sort of anti-cheat strategy.

354
00:17:15,434 --> 00:17:18,219
But before we do that, let's talk a little bit

355
00:17:18,239 --> 00:17:18,880
about deep learning.

356
00:17:19,612 --> 00:17:22,114
So if you're not really familiar with deep learning at all,

357
00:17:22,154 --> 00:17:23,596
or you're just familiar with the buzzwords,

358
00:17:24,276 --> 00:17:26,318
then I'm going to give you the 40,000 foot view.

359
00:17:26,859 --> 00:17:28,661
And the basic concept behind deep learning

360
00:17:28,841 --> 00:17:31,844
is that deep learning can help you basically just

361
00:17:32,124 --> 00:17:35,408
automatically build a function that maps inputs to outputs.

362
00:17:35,968 --> 00:17:37,790
So if you're familiar with algebra notation,

363
00:17:37,870 --> 00:17:39,912
you're probably familiar with y equals f of x.

364
00:17:41,193 --> 00:17:43,074
And we're just saying like Y is the result

365
00:17:43,174 --> 00:17:45,755
of applying some F to some input X.

366
00:17:46,275 --> 00:17:47,596
And the cool thing about deep learning

367
00:17:47,716 --> 00:17:50,056
is deep learning says if I have enough X

368
00:17:50,257 --> 00:17:52,597
and I have enough Y, I can solve for F.

369
00:17:53,418 --> 00:17:54,498
And that's pretty powerful.

370
00:17:55,579 --> 00:17:57,219
It turns out that then you can take that F

371
00:17:57,279 --> 00:17:59,100
that you have just built and you can apply it

372
00:17:59,120 --> 00:18:01,381
to sort of never before seen X values

373
00:18:01,521 --> 00:18:03,202
and get actually pretty sensible Ys.

374
00:18:03,742 --> 00:18:05,102
And if you don't use deep learning,

375
00:18:05,182 --> 00:18:07,163
then engineers are writing your F values.

376
00:18:07,223 --> 00:18:09,504
That's that treadmill of work that we were talking about.

377
00:18:11,030 --> 00:18:14,192
And that lets you make this trade that at Valve we're really excited about.

378
00:18:14,212 --> 00:18:17,773
That lets us basically trade data and compute for engineering time.

379
00:18:17,873 --> 00:18:22,415
Because at Valve we are always, always short on engineers, but we have a lot of data and

380
00:18:22,455 --> 00:18:23,755
we have a lot of compute power.

381
00:18:24,576 --> 00:18:28,517
So if I were to take this analogy, if maybe you don't follow along with the algebra, and

382
00:18:28,557 --> 00:18:31,918
I were to take this into the real world, maybe you would imagine that...

383
00:18:32,619 --> 00:18:35,361
if I had a bunch of cubes of meat,

384
00:18:35,641 --> 00:18:37,142
and I had a bunch of hamburger patties,

385
00:18:38,002 --> 00:18:38,963
and I had enough of them,

386
00:18:39,403 --> 00:18:40,844
that, and I told deep learning,

387
00:18:40,964 --> 00:18:44,107
hey, build me the thing that will convert these cubes

388
00:18:44,147 --> 00:18:45,968
of meat into delicious hamburger patties,

389
00:18:46,808 --> 00:18:48,049
it's gonna give me a meat grinder.

390
00:18:49,530 --> 00:18:54,572
And so that is the analogy that we're going to stick with a little bit through the talk.

391
00:18:54,772 --> 00:18:57,053
And I apologize to vegetarians, I'm really sorry.

392
00:18:57,533 --> 00:18:59,374
We workshopped, what else could it be?

393
00:18:59,414 --> 00:19:01,474
And it's like, this one works really well.

394
00:19:02,215 --> 00:19:02,695
So I'm sorry.

395
00:19:03,975 --> 00:19:08,837
Now, you might have noticed that I said that we're only building a possible function that maps inputs to outputs.

396
00:19:09,337 --> 00:19:12,258
And the reason is basically a data starvation problem.

397
00:19:14,102 --> 00:19:19,624
you could if you had enough x and y like there is a closed form solution that is

398
00:19:19,664 --> 00:19:24,526
sort of the best possible f that converts that x to y but the thing is is

399
00:19:24,566 --> 00:19:30,428
that you would need so much data so so so much data like quintillions of

400
00:19:30,508 --> 00:19:35,090
examples quintillions and quintillions of examples even for very simple

401
00:19:35,130 --> 00:19:38,071
functions so the reality is that like you're not going to do that you're going

402
00:19:38,091 --> 00:19:40,671
to get just one of the myriad of possible solutions

403
00:19:42,753 --> 00:19:45,755
Now, deep learning is actually really good

404
00:19:46,056 --> 00:19:47,136
at pattern recognition.

405
00:19:47,197 --> 00:19:49,819
It's really good at things that you're already familiar with,

406
00:19:49,899 --> 00:19:52,181
like, is there a cat sitting on the sofa?

407
00:19:52,201 --> 00:19:53,542
The answer is yes.

408
00:19:54,362 --> 00:19:56,224
And also, if you have a computer,

409
00:19:56,244 --> 00:19:58,626
the computer in your pocket, if you

410
00:19:59,146 --> 00:20:01,528
have interacted with Siri or Google Assistants,

411
00:20:01,588 --> 00:20:04,931
deep learning is made use of to transform the words that you

412
00:20:04,971 --> 00:20:07,833
say into text that then translates to commands that

413
00:20:07,873 --> 00:20:10,756
then is used to sort of do fuzzy lookups.

414
00:20:10,876 --> 00:20:11,416
And it's used.

415
00:20:11,837 --> 00:20:13,778
in so many pieces along the way.

416
00:20:15,279 --> 00:20:17,440
Now, deep learning basically operates in two modes.

417
00:20:17,520 --> 00:20:19,781
There's sort of training time where you're like,

418
00:20:19,821 --> 00:20:21,202
hey, I've got a bunch of cubes of meat

419
00:20:21,222 --> 00:20:22,283
and I have hamburger patties

420
00:20:22,363 --> 00:20:24,184
and I wanna build a meat grinder.

421
00:20:24,824 --> 00:20:27,006
And then once you've built that meat grinder,

422
00:20:27,166 --> 00:20:30,608
it's like, great, now I wanna take these cubes of chicken

423
00:20:30,648 --> 00:20:32,569
and I wanna turn those into a chicken burger

424
00:20:32,589 --> 00:20:34,430
because that sounds like a thing that might be good.

425
00:20:35,951 --> 00:20:38,092
Deep learning works in these two modes

426
00:20:38,112 --> 00:20:39,673
that we call, like I said, training and inferencing.

427
00:20:41,178 --> 00:20:45,061
Now I might during the talk accidentally say machine learning because we actually do a

428
00:20:45,181 --> 00:20:47,683
fair amount of machine learning at Valve as well.

429
00:20:48,203 --> 00:20:54,208
And the simplest way to talk about this, for the purposes of my talk, if I use machine

430
00:20:54,228 --> 00:20:55,989
learning you should just assume I mean deep learning.

431
00:20:56,710 --> 00:21:02,114
But if this sort of red circle represents deep learning, then this orange circle represents

432
00:21:02,174 --> 00:21:02,754
machine learning.

433
00:21:02,834 --> 00:21:06,958
Like deep learning fundamentally is just a subfield of machine learning.

434
00:21:07,698 --> 00:21:11,959
And similarly, when people are talking about deep learning, what they're really talking

435
00:21:11,979 --> 00:21:12,760
about is neural nets.

436
00:21:13,000 --> 00:21:17,561
So if you learned those 30 years ago, it turns out they finally work.

437
00:21:17,621 --> 00:21:18,261
Spoiler alert.

438
00:21:18,401 --> 00:21:22,743
The solution to get them to work was to have a million times as much data and a billion

439
00:21:22,783 --> 00:21:23,803
times as much compute.

440
00:21:23,923 --> 00:21:24,763
And then they work great.

441
00:21:24,783 --> 00:21:28,164
All right.

442
00:21:28,224 --> 00:21:29,865
So let's get back to our elevator pitch.

443
00:21:31,988 --> 00:21:33,990
We were, basically, we were looking at like,

444
00:21:34,050 --> 00:21:35,311
how do we attack this cheating problem?

445
00:21:35,351 --> 00:21:36,912
We tossed around a ton of ideas,

446
00:21:37,072 --> 00:21:39,935
but I really didn't want to sign up for the treadmill.

447
00:21:41,636 --> 00:21:43,397
And so looking at this, it was like,

448
00:21:43,437 --> 00:21:45,679
well, you know, humans, when they watch matches,

449
00:21:45,739 --> 00:21:47,221
they can tell that cheating is occurring,

450
00:21:47,261 --> 00:21:48,842
and I think that's probably because

451
00:21:48,882 --> 00:21:50,343
they're detecting a pattern of cheating.

452
00:21:50,363 --> 00:21:53,126
And deep learning is really good at detecting patterns.

453
00:21:53,486 --> 00:21:55,968
So like, shouldn't deep learning be able to detect cheating?

454
00:21:56,628 --> 00:22:01,071
And as I mentioned before, aimBots seemed like both the largest, the biggest problem

455
00:22:01,872 --> 00:22:04,733
because they're not subtle, at least a lot of them are not subtle.

456
00:22:05,174 --> 00:22:08,776
And they're also this sort of really loud signal, at least it seems like.

457
00:22:08,836 --> 00:22:10,797
So it seemed like, well, we should go after those first.

458
00:22:10,897 --> 00:22:14,319
Because if we can't do those, then we're definitely not going to be able to do the things that

459
00:22:14,359 --> 00:22:14,900
are more subtle.

460
00:22:16,280 --> 00:22:20,243
Now, if you recall, I mentioned that deep learning is trying to solve y equals f of

461
00:22:20,503 --> 00:22:21,263
x for f.

462
00:22:22,464 --> 00:22:24,926
The problem was, like, if only we had a source for x and y.

463
00:22:25,870 --> 00:22:28,552
Good news! It turns out we had a source of X and Y.

464
00:22:29,173 --> 00:22:32,876
For years, CSGO has had this system called Overwatch.

465
00:22:33,397 --> 00:22:33,997
No relation.

466
00:22:34,498 --> 00:22:36,420
Which is a jury review system.

467
00:22:39,122 --> 00:22:41,244
But basically, what we have is we have players,

468
00:22:41,364 --> 00:22:44,407
they watch cases, and those are our X values,

469
00:22:44,607 --> 00:22:46,689
and then they decide guilt through some process

470
00:22:46,769 --> 00:22:48,551
that I don't know, I don't know what their process is,

471
00:22:49,031 --> 00:22:50,072
and then they render a verdict.

472
00:22:50,813 --> 00:22:55,516
And they do this in this way where they go through this process.

473
00:22:55,777 --> 00:23:00,540
Players report other players and then a sort of central coordinator selects cases.

474
00:23:00,961 --> 00:23:03,482
By the way, that is a computer, it is not a person.

475
00:23:03,803 --> 00:23:06,665
There isn't like a guy at Valve that is like, I am the coordinator.

476
00:23:06,685 --> 00:23:08,586
That would be kind of cool, but it's not a thing.

477
00:23:09,367 --> 00:23:11,789
And then the players adjudicate those cases.

478
00:23:12,129 --> 00:23:14,692
Other players basically decide, is this person guilty?

479
00:23:15,112 --> 00:23:16,293
And they do that through a process

480
00:23:16,373 --> 00:23:19,196
where they're sort of presented with an evidentiary window.

481
00:23:19,356 --> 00:23:21,839
The evidentiary window is eight rounds long,

482
00:23:22,039 --> 00:23:23,840
and they're asked like, hey, watch,

483
00:23:24,061 --> 00:23:25,962
and the play time is anonymized,

484
00:23:26,002 --> 00:23:27,384
so you don't know who the players are.

485
00:23:28,104 --> 00:23:31,628
You watch basically a demo of eight rounds and then at the end you're asked,

486
00:23:32,649 --> 00:23:34,130
did this person use aim assistance?

487
00:23:34,691 --> 00:23:38,314
Only convict them if you believe there is evidence beyond a reasonable doubt.

488
00:23:38,714 --> 00:23:41,337
And we ask that for aim assistance, movement assistance,

489
00:23:42,378 --> 00:23:45,781
information assistance, and other assistance that we're not sure about,

490
00:23:46,322 --> 00:23:47,823
and also griefing.

491
00:23:48,724 --> 00:23:50,386
And if you're guilty, you get a BAM.

492
00:23:51,514 --> 00:23:53,355
And if you're not guilty, there's no punishment, right?

493
00:23:53,495 --> 00:23:55,377
So it works kind of the way that you would expect it to.

494
00:23:55,857 --> 00:23:58,559
Overwatch uses naive Bayes to basically look

495
00:23:58,619 --> 00:23:59,780
for a guilty threshold.

496
00:24:01,041 --> 00:24:03,243
That's a bunch of mathy stuff I'm not really gonna go through

497
00:24:03,283 --> 00:24:06,025
but the point is that according, we have a model

498
00:24:06,165 --> 00:24:07,967
and basically the evidentiary standard is that 99,

499
00:24:08,187 --> 00:24:12,070
that it needs to be 99.8% likely

500
00:24:12,250 --> 00:24:14,031
as decided by your peers that you were cheating.

501
00:24:14,412 --> 00:24:18,080
Now the actual rate that people get convicted at is usually five nines.

502
00:24:18,301 --> 00:24:24,314
Like usually convictions in Overwatch, the jurors are super, super convinced that that person is a cheater.

503
00:24:26,087 --> 00:24:29,269
So, as I mentioned, the system had existed for kind of a while.

504
00:24:29,650 --> 00:24:34,173
So back in 2015, we decided, hey, we noticed this trend.

505
00:24:34,213 --> 00:24:37,555
We did some work, and as a result, it increased participation in Overwatch.

506
00:24:37,615 --> 00:24:39,897
And it's probably worth explaining a little bit about this graph.

507
00:24:40,297 --> 00:24:44,880
The gray line at the top is the sort of total participation in Overwatch, and the blue line

508
00:24:45,080 --> 00:24:47,922
is basically the number of cases that were dismissed.

509
00:24:48,282 --> 00:24:49,763
The red line is convictions.

510
00:24:50,124 --> 00:24:51,785
And so we noticed this great trend.

511
00:24:51,825 --> 00:24:53,367
We're like, hey, this is awesome.

512
00:24:54,068 --> 00:24:56,050
As more people participate in Overwatch,

513
00:24:56,350 --> 00:24:57,291
we get more convictions.

514
00:24:57,632 --> 00:24:59,854
So we should probably get more people to do Overwatch.

515
00:25:00,034 --> 00:25:00,795
That would be awesome.

516
00:25:01,896 --> 00:25:03,117
So we did.

517
00:25:03,198 --> 00:25:04,159
Come on, come on.

518
00:25:04,919 --> 00:25:06,001
PowerPoint, you can do it.

519
00:25:06,601 --> 00:25:07,282
Oh, are you serious?

520
00:25:07,762 --> 00:25:09,004
Come on, you did it earlier.

521
00:25:09,424 --> 00:25:10,385
You can do it.

522
00:25:10,786 --> 00:25:14,309
So this graph, it just shoots up in participation.

523
00:25:14,369 --> 00:25:15,090
It's amazing.

524
00:25:15,110 --> 00:25:16,411
There's so much participation.

525
00:25:16,771 --> 00:25:19,033
It turns out the conviction rate doesn't move at all.

526
00:25:19,353 --> 00:25:22,436
Like, the number of convictions is stone dead flat.

527
00:25:22,876 --> 00:25:25,299
And then that is a trend that we see continuing.

528
00:25:26,279 --> 00:25:28,021
On this graph, which is also amazing,

529
00:25:28,121 --> 00:25:30,023
and I will totally make sure that those are fixed

530
00:25:30,043 --> 00:25:30,503
when we post.

531
00:25:30,523 --> 00:25:31,864
I don't know why they were broken.

532
00:25:31,904 --> 00:25:32,485
I'm very sad.

533
00:25:32,525 --> 00:25:32,925
I'm sorry.

534
00:25:33,779 --> 00:25:37,621
Okay, so the thing that we found in those graphs that you guys totally loved

535
00:25:37,941 --> 00:25:40,443
is that Overwatch really helps us with latent cheaters,

536
00:25:40,543 --> 00:25:42,204
but it doesn't handle subtle cheats as well.

537
00:25:42,644 --> 00:25:45,665
And that it turned out that increasing participation,

538
00:25:46,106 --> 00:25:48,847
like incentivizing participation and increasing participation,

539
00:25:49,728 --> 00:25:51,148
didn't help at all.

540
00:25:51,348 --> 00:25:54,870
Like, it seemed like the problem was basically that

541
00:25:55,711 --> 00:25:59,333
we were failing to properly select cases.

542
00:26:00,984 --> 00:26:07,168
Now, the bad news is that as players got convicted in Overwatch, they would sort of evolve their

543
00:26:07,348 --> 00:26:07,789
behavior.

544
00:26:08,089 --> 00:26:10,751
But the good news is that jurors evolve as well.

545
00:26:10,931 --> 00:26:15,334
Like, they're not fooled by your new, oh well I'll just turn 75 degrees of frame instead

546
00:26:15,394 --> 00:26:16,654
of 78 degrees of frame.

547
00:26:16,915 --> 00:26:18,916
Jurors are like, no man, that's still cheaty bullshit.

548
00:26:20,736 --> 00:26:23,419
So the elevator pitch for VACnet was born.

549
00:26:24,100 --> 00:26:27,563
The idea was that basically we would use this Overwatch

550
00:26:27,904 --> 00:26:30,166
as a giant pool of labeled data

551
00:26:30,586 --> 00:26:32,889
and we would train VACnet from Overwatch.

552
00:26:33,269 --> 00:26:36,533
And then we would build a cluster of machines

553
00:26:36,593 --> 00:26:38,635
that would monitor matches with the model that we built.

554
00:26:40,348 --> 00:26:42,350
We would use VACnet then to submit cases,

555
00:26:42,871 --> 00:26:45,333
and then humans would ultimately decide whether or not

556
00:26:45,673 --> 00:26:46,594
the person was a cheater.

557
00:26:46,775 --> 00:26:50,098
So back to our sort of Overwatch pipeline,

558
00:26:50,158 --> 00:26:52,921
all we have to do is slot in VACnet kinda right here.

559
00:26:54,803 --> 00:26:55,884
Okay, so how did we do?

560
00:26:56,945 --> 00:26:58,567
Man, I hope my graphs work over here.

561
00:26:58,587 --> 00:26:59,888
Oh boy.

562
00:27:01,391 --> 00:27:01,811
OK, good.

563
00:27:02,151 --> 00:27:04,252
I have a later graph that I see is totally good.

564
00:27:04,272 --> 00:27:05,272
So we're just going to skip ahead.

565
00:27:05,652 --> 00:27:05,852
Great.

566
00:27:06,112 --> 00:27:09,193
Oh yeah, hey, hey, here's the period.

567
00:27:09,253 --> 00:27:10,654
I'm sorry, I know I said I wouldn't move.

568
00:27:10,934 --> 00:27:13,975
Here is the period where we had increased participation,

569
00:27:14,015 --> 00:27:14,375
right here.

570
00:27:14,935 --> 00:27:17,215
And you see, this conviction rate just doesn't move at all.

571
00:27:17,235 --> 00:27:18,156
It was just horrifying.

572
00:27:18,316 --> 00:27:21,517
And again, throughout here, our participation fell,

573
00:27:21,817 --> 00:27:23,857
and it just didn't impact the conviction rate at all.

574
00:27:24,358 --> 00:27:24,658
Sorry.

575
00:27:24,958 --> 00:27:25,178
All right.

576
00:27:27,542 --> 00:27:30,703
Okay, so we deployed VACnet.

577
00:27:30,743 --> 00:27:31,783
We deployed VACnet in early 2017.

578
00:27:33,304 --> 00:27:37,625
And during this time, participation sort of doesn't really change.

579
00:27:37,805 --> 00:27:41,806
Like maybe it's going up a little bit if you squint at it, but most likely what's happened

580
00:27:41,846 --> 00:27:45,847
is it's sort of just asymptoted down to the level of participation that we expect.

581
00:27:45,887 --> 00:27:50,548
It looks a whole lot like sort of any game launch ever that has sales, right?

582
00:27:52,651 --> 00:27:54,832
So here we deployed VACnet and you can see,

583
00:27:55,232 --> 00:27:56,733
hey, we started getting more convictions.

584
00:27:56,813 --> 00:27:57,373
That's great.

585
00:27:57,633 --> 00:27:58,994
And we deployed a really simple model.

586
00:27:59,935 --> 00:28:01,516
We didn't quite have enough data yet,

587
00:28:02,156 --> 00:28:04,137
but we were like, hey, this thing's doing pretty good.

588
00:28:04,157 --> 00:28:07,019
And the conviction rate overall for VACnet started to go up.

589
00:28:07,479 --> 00:28:09,600
And then a little bit later, we had the opportunity

590
00:28:09,680 --> 00:28:13,723
to sort of train with more data until finally in December,

591
00:28:13,863 --> 00:28:15,704
early December, we hit the crossover point

592
00:28:15,764 --> 00:28:18,145
where now we actually get more convictions

593
00:28:18,305 --> 00:28:20,226
than non-convictions in Overwatch.

594
00:28:20,767 --> 00:28:22,588
So yay, the system works great.

595
00:28:23,609 --> 00:28:24,870
So how great does it work?

596
00:28:26,130 --> 00:28:28,232
So human submitted cases, when a human

597
00:28:28,292 --> 00:28:31,154
submits a case to Overwatch, the likelihood

598
00:28:31,194 --> 00:28:33,415
that they get a conviction is only 15% to 30%.

599
00:28:34,736 --> 00:28:37,378
And that sort of varies on a bunch of factors,

600
00:28:37,458 --> 00:28:39,460
like the factors might include the time of day,

601
00:28:39,520 --> 00:28:42,402
the day of the week, the time of the year, is the game on sale,

602
00:28:42,542 --> 00:28:44,743
is it spring break, spring break.

603
00:28:45,524 --> 00:28:46,324
There's a bunch of things.

604
00:28:46,504 --> 00:28:49,306
But the point is that human convictions are very low.

605
00:28:50,181 --> 00:28:51,621
And VACnet convictions are very high.

606
00:28:51,821 --> 00:28:54,182
Like, VACnet gets a conviction, when it submits a case,

607
00:28:54,702 --> 00:28:57,183
it convicts 80% to 95% of the time.

608
00:28:57,463 --> 00:28:59,224
And it varies pretty much on the same factors,

609
00:28:59,284 --> 00:29:00,204
with one exception.

610
00:29:00,704 --> 00:29:03,285
And that one exception is that whenever we retrain VACnet,

611
00:29:03,405 --> 00:29:05,326
its conviction rate is like nearly 100%

612
00:29:06,506 --> 00:29:09,547
for a little while until cheaters adapt

613
00:29:09,847 --> 00:29:12,308
and start to react to it.

614
00:29:13,603 --> 00:29:16,944
All right, so hopefully I've convinced you this is kind of a cool thing and it works

615
00:29:16,984 --> 00:29:19,585
pretty well and I'm good at Excel.

616
00:29:20,465 --> 00:29:22,226
We can talk about how we train a learner.

617
00:29:22,546 --> 00:29:26,787
And we're only going to spend one slide on this because I really just wanted here to

618
00:29:26,827 --> 00:29:31,788
give you a pointer to Keras, which is like if you're new to deep learning, Keras is great.

619
00:29:32,829 --> 00:29:37,432
But the sort of main sort of thrust of training a learner is that you need lots of X and Y data,

620
00:29:38,273 --> 00:29:42,896
and at least for supervised learning, which is the thing that we've been sort of talking about here,

621
00:29:43,957 --> 00:29:47,819
you need lots of X, Y data, you need to fit it, and then sort of you just repeatedly ask,

622
00:29:48,100 --> 00:29:49,881
hey, how are you doing? Hey, how are you doing?

623
00:29:49,901 --> 00:29:52,743
You have some measures that you pay attention to, and you're like, how are you doing?

624
00:29:52,843 --> 00:29:54,304
Are you doing good? Are you doing better? Great.

625
00:29:54,464 --> 00:29:57,146
And then when it stops getting better, you're like, okay, hold the phone.

626
00:29:58,347 --> 00:29:59,208
I've got my meat grinder.

627
00:29:59,728 --> 00:30:02,709
And then, like I said, you want to take a look at Keras.

628
00:30:04,269 --> 00:30:06,790
So we're going to jump ahead and talk about how we actually feed this thing.

629
00:30:07,230 --> 00:30:08,931
So you recall the metaphor.

630
00:30:08,971 --> 00:30:10,912
The metaphor is that we have this meat grinder.

631
00:30:11,512 --> 00:30:13,572
And all we need to do is feed it cubes of meat.

632
00:30:14,053 --> 00:30:17,894
And the problem is that as a game developer, you don't have cubes of meat.

633
00:30:18,234 --> 00:30:19,755
What you have is a cow.

634
00:30:20,789 --> 00:30:22,830
And that's not a commentary on your engine.

635
00:30:22,850 --> 00:30:25,072
My engine is the cowiest of all cows.

636
00:30:26,253 --> 00:30:29,094
But what you have is not the thing that you need.

637
00:30:29,535 --> 00:30:32,436
And the good news is, well, if you think about it,

638
00:30:32,496 --> 00:30:34,017
like the bulk of the work of like,

639
00:30:34,057 --> 00:30:36,239
how do I turn this cow into a delicious hamburger?

640
00:30:36,279 --> 00:30:38,540
You're like, well, the overwhelming majority of the work.

641
00:30:39,121 --> 00:30:40,943
is how I turn the cow into cubes of meat.

642
00:30:41,463 --> 00:30:42,424
Like, that is the work.

643
00:30:43,065 --> 00:30:46,509
And it turns out, it's actually like 95% of the effort

644
00:30:46,529 --> 00:30:47,230
that you're going to spend.

645
00:30:47,610 --> 00:30:50,113
And all of that effort is basically effort

646
00:30:50,133 --> 00:30:51,474
that you already know how to do.

647
00:30:51,495 --> 00:30:54,158
It is just bog standard engineering work.

648
00:30:54,278 --> 00:30:56,560
There's no sort of magic box around it.

649
00:30:57,021 --> 00:30:58,683
Only 1% of the effort is actually

650
00:30:58,723 --> 00:31:00,324
kind of around deep learning.

651
00:31:01,185 --> 00:31:03,246
turning, you know, in our metaphors, turning the crank.

652
00:31:03,546 --> 00:31:05,828
And 4% is cooking, I don't, the metaphor breaks down

653
00:31:05,868 --> 00:31:08,990
a little bit here, so we should probably just leave it

654
00:31:09,010 --> 00:31:10,310
there for a little bit, maybe we'll come back.

655
00:31:12,288 --> 00:31:14,450
If you have a game, to sort of be a little more concrete,

656
00:31:15,730 --> 00:31:17,491
there are some pieces that you really want to have.

657
00:31:18,372 --> 00:31:19,953
And I think the most important is that you

658
00:31:19,973 --> 00:31:21,274
want to have a replay format.

659
00:31:21,914 --> 00:31:23,615
We call it a demo format.

660
00:31:23,655 --> 00:31:25,676
Other engines call it other things.

661
00:31:26,076 --> 00:31:27,337
But the sort of salient point here

662
00:31:27,417 --> 00:31:31,139
is you basically want to have a record that you ideally

663
00:31:31,199 --> 00:31:33,881
recorded from the server or from a third party observer.

664
00:31:33,921 --> 00:31:35,902
Like you don't want the client to record this thing

665
00:31:36,222 --> 00:31:37,423
because they will just lie.

666
00:31:38,523 --> 00:31:40,945
And you want to be able to play that thing back later.

667
00:31:42,002 --> 00:31:45,805
And then you need all of the sort of infrastructure

668
00:31:45,865 --> 00:31:47,886
around storing and fetching those things

669
00:31:47,946 --> 00:31:48,847
and transmitting them.

670
00:31:49,407 --> 00:31:51,089
And you're going to want to manage metadata

671
00:31:51,149 --> 00:31:53,831
so you can say, like, which player was in this match

672
00:31:53,891 --> 00:31:55,172
so that you can evaluate them.

673
00:31:56,032 --> 00:31:58,574
And ideally, and this is the big ask, I know.

674
00:31:59,586 --> 00:32:01,666
you need a data labeling service, ideally.

675
00:32:02,186 --> 00:32:04,627
Now, I do actually think that there is a way

676
00:32:04,667 --> 00:32:07,027
to attack this problem that doesn't require

677
00:32:07,047 --> 00:32:10,068
a data labeling service, but I haven't proven it yet,

678
00:32:10,308 --> 00:32:13,569
so maybe I'll see in 2019 and we can talk about it then.

679
00:32:15,289 --> 00:32:16,649
And I wanna switch gears a little bit now

680
00:32:16,709 --> 00:32:19,090
and talk about sort of our data herd.

681
00:32:20,110 --> 00:32:21,710
So I mentioned before that we have

682
00:32:21,770 --> 00:32:22,830
roughly 600,000 5v5 matches per day.

683
00:32:26,315 --> 00:32:29,597
And for each of those 5v5 matches,

684
00:32:29,637 --> 00:32:31,658
to evaluate all 10 players, there's

685
00:32:31,778 --> 00:32:33,919
roughly four minutes of work that we have to do.

686
00:32:34,360 --> 00:32:35,740
And so if you do the math, you figure

687
00:32:35,780 --> 00:32:38,782
that is 2.4 million CPU minutes of work

688
00:32:38,882 --> 00:32:40,263
that we need to do every day.

689
00:32:40,623 --> 00:32:44,446
And somehow we need to fit that into 1,440 actual minutes,

690
00:32:44,526 --> 00:32:45,806
because that's how many there are a day.

691
00:32:47,067 --> 00:32:50,049
And you can do this by just using a bunch of processors.

692
00:32:50,169 --> 00:32:50,989
We need about 1,700.

693
00:32:53,051 --> 00:32:56,314
So that's what we did. We bought a giant farm of machines.

694
00:32:56,714 --> 00:33:01,318
And this is actually only used, this is not used for training, this is only used

695
00:33:02,279 --> 00:33:05,241
for running the inferencing sides of things.

696
00:33:05,942 --> 00:33:07,443
And this is actually only half of the farm.

697
00:33:08,023 --> 00:33:09,825
The other half is in a different data center.

698
00:33:09,865 --> 00:33:11,626
This is our actual farm. I took this picture.

699
00:33:11,666 --> 00:33:13,468
I went out with the DevOps team when we got them.

700
00:33:13,508 --> 00:33:16,030
I was like super excited. I'd never been to the data center before.

701
00:33:16,470 --> 00:33:18,072
And it was like candy trip, it was great.

702
00:33:18,092 --> 00:33:19,673
And then I was like, wow, it's really loud in here,

703
00:33:19,713 --> 00:33:21,094
and it's really cold on this side,

704
00:33:21,134 --> 00:33:22,095
and it's really hot on that side.

705
00:33:22,335 --> 00:33:23,656
But it's totally worth going.

706
00:33:23,676 --> 00:33:24,577
You should go if you get a chance.

707
00:33:25,138 --> 00:33:26,439
Anyways, what we're looking at here

708
00:33:26,599 --> 00:33:28,060
is basically these two chassis.

709
00:33:28,721 --> 00:33:33,785
And each chassis basically has 16 blades.

710
00:33:33,825 --> 00:33:35,286
Those are the things that are sort of vertical.

711
00:33:36,147 --> 00:33:38,889
And each of those blades has 54 cores and 128 gigs of RAM.

712
00:33:38,909 --> 00:33:39,530
So they're pretty beefy.

713
00:33:41,952 --> 00:33:48,625
That's about 3,500 processors total, and we bought basically 2x what we needed so that

714
00:33:48,645 --> 00:33:53,054
we would have room to expand, and we'll maybe talk about that in a little bit too.

715
00:33:54,800 --> 00:33:57,984
Like I said though, this is basically only used for inferencing time.

716
00:33:58,024 --> 00:34:03,069
This is like, I've already built the meat grinder and now I need to actually watch all of the matches.

717
00:34:03,129 --> 00:34:06,532
And like I said, 95% of the work is basically around turning a cow into meat.

718
00:34:06,592 --> 00:34:12,137
For us, 95% of the work is like cracking the demos and then building inputs out of that to feed into the learner.

719
00:34:12,458 --> 00:34:15,781
And then it's like 1% of the work is the part where it's like,

720
00:34:16,321 --> 00:34:17,523
by the way, does this look like a cheat?

721
00:34:20,906 --> 00:34:24,288
The part that we do the training, the part where we actually build the meat grinder,

722
00:34:24,308 --> 00:34:28,831
that part is just run on commodity 1080Ti's that sit under our desks.

723
00:34:29,051 --> 00:34:32,173
Like, it's totally normal hardware.

724
00:34:33,714 --> 00:34:36,355
Okay, so now I want to talk brass tacks.

725
00:34:36,635 --> 00:34:42,819
I want to talk about, like, what goes into the cubes of meat that we're feeding our models.

726
00:34:44,111 --> 00:34:47,393
Deep learning has sort of these specific input constraints.

727
00:34:47,473 --> 00:34:49,254
In our case, we've said, it's a cube of meat.

728
00:34:49,654 --> 00:34:51,876
And that means that the meat needs to be sort of uniform

729
00:34:52,036 --> 00:34:52,977
and fixed size.

730
00:34:54,017 --> 00:34:56,819
And if you're uncomfortable with the meat analogy,

731
00:34:57,099 --> 00:34:58,760
and maybe you're familiar with SQL,

732
00:34:59,040 --> 00:35:00,421
then you can kind of just think about like,

733
00:35:00,621 --> 00:35:03,103
this thing just needs to be fed with a database

734
00:35:03,423 --> 00:35:05,404
where all of the columns are non-nullable.

735
00:35:05,965 --> 00:35:11,316
And every time you run a query, you always make sure you ask for all of the columns,

736
00:35:11,456 --> 00:35:14,121
and you ask for the columns in the same order.

737
00:35:14,682 --> 00:35:16,185
And deep learning needs to sort of...

738
00:35:16,205 --> 00:35:18,049
Deep learning algorithms need to be fed in that way.

739
00:35:20,176 --> 00:35:25,378
Now, if you recall, we decided that we were going to specifically target aim assistance first.

740
00:35:25,978 --> 00:35:28,579
That was the first thing that we were going after.

741
00:35:29,079 --> 00:35:32,260
And if you think about when somebody is cheating using an aimbot,

742
00:35:33,260 --> 00:35:34,741
they're going to basically use...

743
00:35:35,781 --> 00:35:39,882
they're going to express that cheatiness when they're firing bullets downrange.

744
00:35:40,342 --> 00:35:44,064
And so we basically did some manual feature work around that.

745
00:35:47,605 --> 00:35:53,229
So here we're going to sort of have this atom on the right and we'll fill the atom with stuff.

746
00:35:53,469 --> 00:35:58,773
And the first thing that we decided to stuff into the atom was like, what weapon is the person using?

747
00:35:58,813 --> 00:36:05,198
Are they using an AWP? Are they using an AK-47? An M4A4? Because no one uses anything else.

748
00:36:05,998 --> 00:36:06,779
They're using one of those.

749
00:36:07,700 --> 00:36:07,960
And then...

750
00:36:10,000 --> 00:36:10,380
It's cool.

751
00:36:10,401 --> 00:36:11,061
There are other guns.

752
00:36:11,081 --> 00:36:11,461
They're great.

753
00:36:11,501 --> 00:36:12,081
You should try them.

754
00:36:13,522 --> 00:36:15,162
Then we want to know, basically, what

755
00:36:15,182 --> 00:36:17,203
was the result of that shot?

756
00:36:18,163 --> 00:36:18,964
Was it a head shot?

757
00:36:19,244 --> 00:36:21,925
Was it a hit, but somewhere else that wasn't the head?

758
00:36:22,045 --> 00:36:23,085
Was it a total miss?

759
00:36:23,485 --> 00:36:26,286
And we want to stick that thing into our sort of atom of stuff.

760
00:36:27,274 --> 00:36:28,394
And then we want to know, like, hey,

761
00:36:28,414 --> 00:36:30,195
given that I actually did manage to get a hit,

762
00:36:30,275 --> 00:36:33,076
because I don't have the answer otherwise,

763
00:36:33,296 --> 00:36:35,557
how far away was the target if it was a hit?

764
00:36:35,817 --> 00:36:37,357
And we have a sort of special value

765
00:36:37,377 --> 00:36:39,818
that we reserve for the cases where we're like,

766
00:36:40,018 --> 00:36:40,878
I don't know, it didn't hit.

767
00:36:41,639 --> 00:36:42,599
And the learner is fine with that.

768
00:36:44,312 --> 00:36:47,494
And then this one requires kind of a little bit more unpacking.

769
00:36:48,015 --> 00:36:51,818
What we needed was basically the sort of delta view angle pitch.

770
00:36:52,359 --> 00:36:55,361
And so what that means is like for about a half second

771
00:36:55,401 --> 00:36:57,923
before the shot and up through every tick

772
00:36:58,164 --> 00:36:59,885
until a quarter second after the shot,

773
00:37:00,946 --> 00:37:03,829
we basically say like what is your delta pitch on this tick

774
00:37:04,049 --> 00:37:05,130
versus the previous tick.

775
00:37:06,489 --> 00:37:08,030
and we just repeatedly do that.

776
00:37:08,390 --> 00:37:11,192
And a half second before and a quarter second after

777
00:37:11,212 --> 00:37:13,393
were sort of chosen purely capriciously,

778
00:37:13,713 --> 00:37:16,235
but we take all of those and we stuff them into our atom.

779
00:37:16,755 --> 00:37:17,896
And if you've been watching the atom,

780
00:37:17,996 --> 00:37:19,177
you might have noticed that like,

781
00:37:20,217 --> 00:37:22,339
everything lands in the same place every time.

782
00:37:22,579 --> 00:37:24,260
Like we make sure that all of the data

783
00:37:24,280 --> 00:37:25,641
lands in the same place every time.

784
00:37:26,041 --> 00:37:28,903
Because deep learning doesn't really care where it is,

785
00:37:29,023 --> 00:37:30,964
but it cares that it's consistent every time.

786
00:37:31,024 --> 00:37:33,365
Like that is a necessary property in order for it to learn.

787
00:37:34,420 --> 00:37:37,842
So then, with the delta view angle, sorry,

788
00:37:37,862 --> 00:37:39,403
I probably should have clarified,

789
00:37:39,503 --> 00:37:40,444
and I will do that right now.

790
00:37:40,704 --> 00:37:42,965
The view angle is obviously just like the way

791
00:37:43,025 --> 00:37:44,426
that you're kind of looking around.

792
00:37:44,826 --> 00:37:46,708
And before, we were looking only at pitch,

793
00:37:46,828 --> 00:37:48,409
which is basically your up and down.

794
00:37:48,529 --> 00:37:51,091
So we were like, hey, you looked up one degree,

795
00:37:51,151 --> 00:37:52,231
hey, you looked up two degrees.

796
00:37:52,712 --> 00:37:54,293
And then we need the same thing for yaw.

797
00:37:54,353 --> 00:37:56,814
So we want to know now right to left,

798
00:37:57,455 --> 00:38:00,477
how much did your view angle adjust right to left,

799
00:38:00,837 --> 00:38:02,778
but only as expressed as a delta

800
00:38:02,858 --> 00:38:03,799
against the previous tick.

801
00:38:04,639 --> 00:38:06,961
I turned right one degree, I turned right two degrees,

802
00:38:07,222 --> 00:38:09,183
and we're only doing this in the windows

803
00:38:09,223 --> 00:38:10,384
around when you take a shot.

804
00:38:11,485 --> 00:38:14,188
And so we do this again, half second before

805
00:38:14,228 --> 00:38:15,288
and a quarter second after,

806
00:38:15,349 --> 00:38:17,610
and this was sort of picked purely capriciously,

807
00:38:18,011 --> 00:38:20,293
and then we stuff that thing into our atom of stuff.

808
00:38:21,174 --> 00:38:22,335
And so we have our X, right?

809
00:38:23,486 --> 00:38:24,346
Well, not really.

810
00:38:24,727 --> 00:38:27,248
Because if you recall, our training data is not

811
00:38:28,649 --> 00:38:31,731
that this particular shot came from a cheaty demo

812
00:38:31,811 --> 00:38:34,453
and this particular shot did not come from a cheaty demo.

813
00:38:34,893 --> 00:38:36,514
Our data is labeled where it's like,

814
00:38:36,954 --> 00:38:38,515
hey, in this eight round window,

815
00:38:39,316 --> 00:38:41,997
something somewhere in here triggered a juror

816
00:38:42,077 --> 00:38:46,620
to decide that this behavior was cheaty and convicted.

817
00:38:46,720 --> 00:38:49,642
And it, sorry, it convinced a bunch of jurors

818
00:38:49,882 --> 00:38:51,323
that this behavior was cheaty.

819
00:38:52,588 --> 00:38:56,869
So we can't just use one atom, because this is only the information about one shot.

820
00:38:57,709 --> 00:38:59,350
We need a sequence of them.

821
00:38:59,810 --> 00:39:01,710
We need a big sequence of them.

822
00:39:02,131 --> 00:39:04,451
And in fact, actually what we want is 140 of them.

823
00:39:04,631 --> 00:39:06,332
Or at least that's what the model uses right now.

824
00:39:06,952 --> 00:39:08,812
It's also sort of purely capricious.

825
00:39:09,252 --> 00:39:12,533
And I will make a slight apology, because...

826
00:39:12,673 --> 00:39:15,714
This is a cube of meat to go with the metaphor we've been doing,

827
00:39:15,835 --> 00:39:19,876
but actually it is just a serial representation of 140 shots.

828
00:39:19,956 --> 00:39:23,097
We just take the 140 out of an eight-round window,

829
00:39:23,537 --> 00:39:24,818
and we stuff those into the model,

830
00:39:24,958 --> 00:39:28,299
and then we're like, hey, if you were to present

831
00:39:28,439 --> 00:39:31,860
this sequence of 140 shots to a juror,

832
00:39:32,520 --> 00:39:34,181
what is the likelihood you would get a conviction?

833
00:39:36,412 --> 00:39:39,714
Okay, so I spent a bunch of time early in the talk

834
00:39:39,894 --> 00:39:42,595
talking about how we can't talk about anti-cheat

835
00:39:42,655 --> 00:39:45,736
because talking about anti-cheat makes it not work anymore.

836
00:39:46,376 --> 00:39:48,517
So did I just spend 40 minutes

837
00:39:48,717 --> 00:39:50,538
like lighting this technique on fire?

838
00:39:50,558 --> 00:39:51,958
It was like a year of work overall.

839
00:39:51,978 --> 00:39:53,459
I mean, we deployed it in like four months.

840
00:39:53,499 --> 00:39:54,559
We're pretty excited about that,

841
00:39:54,599 --> 00:39:56,220
but like, did we just light this thing on fire?

842
00:39:57,060 --> 00:39:58,821
And the good news is no, no, we didn't.

843
00:39:58,941 --> 00:39:59,361
It's great.

844
00:39:59,521 --> 00:40:01,282
Let's talk about why we didn't light it on fire.

845
00:40:02,360 --> 00:40:04,961
So if you recall, my original sort of elevator pitch was like,

846
00:40:04,981 --> 00:40:06,942
hey, we're going to train data from VACnet,

847
00:40:07,222 --> 00:40:08,603
sorry, from Overwatch, and then we're

848
00:40:08,623 --> 00:40:09,804
going to have it monitor matches,

849
00:40:09,844 --> 00:40:11,325
and we're going to submit cases, and the players

850
00:40:11,345 --> 00:40:12,085
are going to determine guilt.

851
00:40:12,705 --> 00:40:14,586
And the reason that we didn't like this thing on fire

852
00:40:14,806 --> 00:40:16,827
is because we're actually going to do that thing in a loop.

853
00:40:17,088 --> 00:40:20,029
We're just going to do it over and over and over and over

854
00:40:20,129 --> 00:40:20,329
again.

855
00:40:21,090 --> 00:40:25,993
And because we're using Overwatch and we didn't actually replace all player reports, we just

856
00:40:26,033 --> 00:40:31,157
supplemented player report behaviors, that means that the learner is getting the opportunity

857
00:40:31,237 --> 00:40:33,318
to evolve along with human jurors.

858
00:40:33,899 --> 00:40:41,023
So as human jurors identify sort of new cheat behavior, the learner has the opportunity

859
00:40:41,043 --> 00:40:41,724
to do the same thing.

860
00:40:42,845 --> 00:40:47,828
So you can think about this a little bit, like imagine that you're a cheat developer

861
00:40:47,848 --> 00:40:49,910
and there might actually be one in the audience, I'm not sure.

862
00:40:50,708 --> 00:40:52,429
But you're a cheat developer, and you're like,

863
00:40:52,489 --> 00:40:57,331
aha, all I need to do is make my cheat look

864
00:40:57,391 --> 00:41:01,073
cheaty three quarters of a second before a shot,

865
00:41:01,193 --> 00:41:03,755
and then look totally normal through the half second,

866
00:41:04,315 --> 00:41:06,796
and then get the kill, and then move on.

867
00:41:07,757 --> 00:41:09,957
I think that's extremely improbable in the first place,

868
00:41:10,418 --> 00:41:12,558
but it actually won't work anyways for two reasons.

869
00:41:12,998 --> 00:41:15,899
And one is that human jurors will just be like, yeah, dude,

870
00:41:15,919 --> 00:41:16,320
I don't care.

871
00:41:16,360 --> 00:41:16,980
That looks cheaty.

872
00:41:17,160 --> 00:41:18,240
Like, boop, conviction.

873
00:41:18,440 --> 00:41:20,161
And then the learner will retrain,

874
00:41:20,201 --> 00:41:21,561
and they'll be like, I don't know

875
00:41:21,582 --> 00:41:23,682
why locking on in this particular way

876
00:41:23,902 --> 00:41:25,403
is considered to be cheaty to humans,

877
00:41:25,483 --> 00:41:27,744
but in order for me to do the best job I can do,

878
00:41:27,964 --> 00:41:29,044
I need to label that as cheaty.

879
00:41:29,504 --> 00:41:30,585
So it will just learn to think.

880
00:41:31,065 --> 00:41:33,466
And the other reason is that even if that didn't work,

881
00:41:34,355 --> 00:41:39,656
Retraining like we chose half a second before and a quarter second afterwards just totally capriciously

882
00:41:39,776 --> 00:41:45,677
We could just make it three seconds before in two seconds afterwards and the model would be just as happy it doesn't care it would

883
00:41:46,117 --> 00:41:46,738
effectively

884
00:41:47,578 --> 00:41:49,878
Result in us saying like oh we need to retrain

885
00:41:50,538 --> 00:41:57,780
So let me take the five seconds to find the command in my command history and press the button to start the retraining

886
00:41:57,880 --> 00:42:00,441
And then that'll run for six hours and when it's done

887
00:42:01,881 --> 00:42:03,401
Now it's happy with looking at stuff

888
00:42:04,042 --> 00:42:04,122
and

889
00:42:04,602 --> 00:42:05,002
for that one.

890
00:42:06,542 --> 00:42:06,802
All right.

891
00:42:07,983 --> 00:42:09,263
So I think we're mostly the way through.

892
00:42:10,684 --> 00:42:12,764
Let's talk a little bit about sort of ongoing

893
00:42:12,804 --> 00:42:15,285
and near-term work that's going on around this.

894
00:42:16,325 --> 00:42:18,626
We're doing, so one of the things is,

895
00:42:18,726 --> 00:42:20,787
like I mentioned, like right now, when we retrain,

896
00:42:20,827 --> 00:42:23,647
we still sort of just go and look at,

897
00:42:24,888 --> 00:42:27,409
like we basically just look at, like, how is it doing?

898
00:42:27,449 --> 00:42:28,709
And then we decide, like, okay,

899
00:42:28,769 --> 00:42:30,690
now seems like a reasonable time, I'm gonna go retrain.

900
00:42:31,290 --> 00:42:33,011
And I don't think that's actually the right answer.

901
00:42:33,031 --> 00:42:35,272
I think the right answer is to just totally get us out

902
00:42:35,312 --> 00:42:37,993
of the loop and instead basically just say, hey,

903
00:42:38,073 --> 00:42:42,115
like on a cron job, this should just once a day retrain.

904
00:42:42,575 --> 00:42:45,776
And then if it's convicting more stuff

905
00:42:45,977 --> 00:42:50,279
than the previous version, then we should just deploy that one.

906
00:42:50,519 --> 00:42:51,999
And we should just make that heuristic base

907
00:42:52,039 --> 00:42:53,140
and get totally out of the loop.

908
00:42:53,920 --> 00:42:55,721
The other thing that we're kind of working on

909
00:42:55,981 --> 00:42:57,722
is basically new learners.

910
00:42:58,582 --> 00:42:58,662
And

911
00:43:01,203 --> 00:43:03,185
The learner that we built, the features that we built,

912
00:43:03,345 --> 00:43:05,267
are sort of based around catching aim bots.

913
00:43:05,807 --> 00:43:08,110
But we actually think, and part of that

914
00:43:08,150 --> 00:43:10,092
was because we didn't have enough data yet

915
00:43:10,132 --> 00:43:12,614
that we were willing to sort of go whole hog on this.

916
00:43:13,134 --> 00:43:15,977
But we think that a better approach is actually instead

917
00:43:16,297 --> 00:43:18,219
to just sort of build a first person

918
00:43:18,259 --> 00:43:20,882
narrative for each of the players in the round

919
00:43:20,942 --> 00:43:23,544
and say, like, I don't know what matters in here at all.

920
00:43:24,943 --> 00:43:27,804
And I don't want to do any input engineering.

921
00:43:28,004 --> 00:43:30,265
I just want to basically say, here is a first person

922
00:43:30,285 --> 00:43:31,406
narrative for this player.

923
00:43:32,226 --> 00:43:34,847
If you take eight round windows of this first person narrative,

924
00:43:34,887 --> 00:43:37,268
does that look more like a cheaty first person narrative

925
00:43:37,328 --> 00:43:39,349
or more like a non-cheaty first person narrative?

926
00:43:39,809 --> 00:43:42,110
And we think that that model is much more

927
00:43:42,150 --> 00:43:45,491
likely to be able to attack the other types of cheating

928
00:43:45,712 --> 00:43:48,052
that we see, so like wall hacks.

929
00:43:49,199 --> 00:43:49,579
and so on.

930
00:43:50,659 --> 00:43:52,720
The other thing that we've been kind of working on

931
00:43:52,800 --> 00:43:54,981
is generalizing BACnet to other game modes.

932
00:43:55,041 --> 00:43:59,363
So we deployed to, we have a 2v2 competitive mode

933
00:43:59,383 --> 00:44:02,445
that's pretty popular, and we deployed to that a few weeks

934
00:44:02,485 --> 00:44:04,266
ago, and the conviction rate in that mode

935
00:44:04,306 --> 00:44:05,987
was like 99% for a while.

936
00:44:06,087 --> 00:44:06,787
It was great.

937
00:44:06,927 --> 00:44:08,828
Cheaters didn't get the memo that we were doing it,

938
00:44:09,028 --> 00:44:11,189
and players were super happy, and we were just

939
00:44:11,249 --> 00:44:12,390
busting cheaters left and right.

940
00:44:12,450 --> 00:44:13,310
It felt so good.

941
00:44:15,849 --> 00:44:18,750
Finally, we're actually looking to generalize VACnet to Steam.

942
00:44:19,390 --> 00:44:21,770
We think that both the model we have and the model

943
00:44:21,790 --> 00:44:24,491
that we're moving towards should actually,

944
00:44:24,571 --> 00:44:26,791
with a relatively small number of examples,

945
00:44:27,931 --> 00:44:31,292
should generalize to other initially first-person shooters,

946
00:44:31,432 --> 00:44:34,812
but then later to just other games in general.

947
00:44:34,932 --> 00:44:37,713
And we're definitely looking for partners to make that happen.

948
00:44:37,773 --> 00:44:39,493
So if that's the thing that you're interested in,

949
00:44:40,113 --> 00:44:41,033
we should talk.

950
00:44:42,634 --> 00:44:44,114
All right, let's finish up.

951
00:44:47,112 --> 00:44:50,473
So basically, I think, hopefully, I've maybe convinced

952
00:44:50,493 --> 00:44:52,855
you a little bit of this, but our sort of opinion at Valve

953
00:44:53,075 --> 00:44:56,236
is that deep learning is just this sea change technology

954
00:44:56,256 --> 00:44:57,357
for evolutionary behavior.

955
00:44:57,477 --> 00:44:59,938
We think that it is really actually helping us

956
00:45:00,438 --> 00:45:02,319
get developers off of the treadmill

957
00:45:02,460 --> 00:45:04,761
without impacting our customers in any way.

958
00:45:04,881 --> 00:45:08,022
Like, our customers are seeing fewer cheaters today

959
00:45:08,122 --> 00:45:10,884
than they have been, and the conversation around cheating

960
00:45:10,924 --> 00:45:14,005
has died tremendously compared to where it was.

961
00:45:15,426 --> 00:45:16,627
before we started this work.

962
00:45:17,147 --> 00:45:18,528
Like I think the volume,

963
00:45:18,708 --> 00:45:20,689
and I'm sorry to give a crappy anecdote,

964
00:45:20,729 --> 00:45:24,051
but I think the volume based on CSGO team feedback

965
00:45:24,852 --> 00:45:28,214
and sort of eyeballing the Steam forums and Reddit,

966
00:45:28,554 --> 00:45:29,895
it's like the volume of the conversation

967
00:45:29,955 --> 00:45:31,356
is probably 1% as loud as it was.

968
00:45:33,477 --> 00:45:34,297
before we started this.

969
00:45:34,778 --> 00:45:37,119
Now we're applying deep learning to a bunch of problems at Valve.

970
00:45:37,139 --> 00:45:38,980
There's anti-cheat and anti-fraud.

971
00:45:39,400 --> 00:45:41,381
Dota hero selection uses deep learning

972
00:45:41,441 --> 00:45:43,242
and it shipped a week and a half ago.

973
00:45:43,282 --> 00:45:45,723
There's some other Dota stuff that's more complicated

974
00:45:45,783 --> 00:45:46,904
and I don't want to explain Dota

975
00:45:46,924 --> 00:45:48,125
so I'm not going to talk about it,

976
00:45:48,165 --> 00:45:50,786
but that stuff shipped using deep learning as well.

977
00:45:53,047 --> 00:45:55,008
And there's a bunch of other work going on as well.

978
00:45:56,673 --> 00:45:59,934
So I mentioned before, I would not try and teach you

979
00:45:59,954 --> 00:46:01,955
deep learning, which I successfully avoided.

980
00:46:02,395 --> 00:46:04,656
And instead, I would point you at some resources.

981
00:46:05,776 --> 00:46:07,597
The foundational work I would sort of suggest,

982
00:46:08,037 --> 00:46:10,638
this Udacity course is really useful

983
00:46:10,758 --> 00:46:12,378
if you are a super high-level user.

984
00:46:12,879 --> 00:46:16,202
and you do not give a crap about how the insides work,

985
00:46:16,602 --> 00:46:18,043
the Udacity course is actually great.

986
00:46:18,103 --> 00:46:20,005
Like, you will come away with an understanding of,

987
00:46:20,966 --> 00:46:24,289
like, sort of how to build systems that use deep learning,

988
00:46:24,309 --> 00:46:26,050
but you will definitely not understand the guts.

989
00:46:26,711 --> 00:46:27,952
Meanwhile, the Coursera course,

990
00:46:28,012 --> 00:46:29,353
the machine learning course,

991
00:46:29,734 --> 00:46:31,175
will help you really, like,

992
00:46:31,295 --> 00:46:33,016
actually build the pieces from the ground up.

993
00:46:33,097 --> 00:46:34,498
So if you're kind of more like me,

994
00:46:34,538 --> 00:46:35,659
where you're like, no, I need to see

995
00:46:35,699 --> 00:46:37,240
how the sausage is made at least once.

996
00:46:38,001 --> 00:46:39,141
I recommend the Coursera course.

997
00:46:39,902 --> 00:46:43,663
They're both about, they're each about 30 hours of study,

998
00:46:44,264 --> 00:46:45,924
you know, that you can do sort of at your own pace,

999
00:46:45,944 --> 00:46:47,645
and they're both great, I recommend them both.

1000
00:46:48,265 --> 00:46:49,526
Additionally, once you've done that,

1001
00:46:49,806 --> 00:46:52,027
and I point you at the machine learning courses

1002
00:46:52,067 --> 00:46:53,928
because it turns out everything that you,

1003
00:46:54,128 --> 00:46:55,709
or at least most of the things that you learn

1004
00:46:55,749 --> 00:46:58,170
around machine learning will be super, super helpful

1005
00:46:58,210 --> 00:46:59,351
at understanding deep learning.

1006
00:46:59,751 --> 00:47:01,452
But once you've basically done either of those,

1007
00:47:01,532 --> 00:47:05,013
I suggest basically jumping into either the Coursera course

1008
00:47:05,714 --> 00:47:06,434
that's deep learning.

1009
00:47:06,554 --> 00:47:10,818
specific on Coursera, or the Stanford course, CS231N,

1010
00:47:10,958 --> 00:47:13,100
with Fei-Fei Li.

1011
00:47:15,302 --> 00:47:17,884
All of the material is online, except for the lectures.

1012
00:47:18,404 --> 00:47:20,966
Good news, they're a bootlegged version of all of the lectures

1013
00:47:21,046 --> 00:47:21,667
on YouTube.

1014
00:47:22,107 --> 00:47:24,389
I highly recommend the ones with Andrej Karpathy,

1015
00:47:24,449 --> 00:47:25,090
but they're all good.

1016
00:47:25,590 --> 00:47:28,393
And so you can go through basically the whole course.

1017
00:47:30,055 --> 00:47:34,476
All right, so hopefully people have some interesting questions.

1018
00:47:34,556 --> 00:47:36,397
If you have questions, please walk to the mics.

1019
00:47:37,217 --> 00:47:40,398
I did want to mention that sort of the whole thrust of the talk is like how we can sort

1020
00:47:40,418 --> 00:47:44,539
of increase value that we deliver to customers and deep learning is an important piece of

1021
00:47:44,579 --> 00:47:44,719
that.

1022
00:47:44,759 --> 00:47:47,939
But like the other way is like to just get more awesome people at Valve.

1023
00:47:48,019 --> 00:47:52,320
So if you thought this was interesting, you should definitely apply at valvesoftware.com

1024
00:47:52,340 --> 00:47:52,821
slash jobs.

1025
00:47:53,421 --> 00:47:56,701
And also while it's hard, one more thing is please fill out the surveys.

1026
00:47:56,882 --> 00:47:57,282
Pretty please.

1027
00:47:57,622 --> 00:47:57,922
Okay.

1028
00:47:58,062 --> 00:47:59,862
I'm going to go first, but I'm not positive.

1029
00:47:59,862 --> 00:47:59,930
you

1030
00:48:00,083 --> 00:48:01,424
Oh, so I ain't a vegetarian.

1031
00:48:01,484 --> 00:48:03,444
But OK, I'm fine with that part.

1032
00:48:03,484 --> 00:48:07,205
Anyway, so there's a project I heard people working on.

1033
00:48:07,245 --> 00:48:10,006
That was the Unreal Tournament, where people were actually

1034
00:48:10,066 --> 00:48:13,146
using machine learning to train robots to play like a human.

1035
00:48:13,487 --> 00:48:17,227
So do you actually see that as a concern in this problem space?

1036
00:48:17,547 --> 00:48:17,828
I see.

1037
00:48:17,908 --> 00:48:20,188
So the question is, am I concerned that somebody will

1038
00:48:20,208 --> 00:48:22,169
basically counter my deep learning

1039
00:48:22,209 --> 00:48:23,749
approach with a deep learning approach,

1040
00:48:24,109 --> 00:48:25,029
trying to play like a human?

1041
00:48:25,389 --> 00:48:28,430
So no, that is a really good question.

1042
00:48:31,077 --> 00:48:31,477
Maybe.

1043
00:48:31,837 --> 00:48:35,699
So there might be a little deep learning specific, apologize.

1044
00:48:36,219 --> 00:48:38,180
There's maybe an attack with GANs

1045
00:48:38,280 --> 00:48:41,822
that might sort of yield fruit, but I don't know for sure.

1046
00:48:42,102 --> 00:48:43,422
That's definitely something that somebody

1047
00:48:43,442 --> 00:48:46,344
would have to spend a lot, a lot, a lot of compute time on.

1048
00:48:46,444 --> 00:48:48,705
So that translates to them spending a lot, a lot,

1049
00:48:48,725 --> 00:48:49,385
a lot of money.

1050
00:48:50,225 --> 00:48:52,787
And otherwise, they just don't have the data.

1051
00:48:52,887 --> 00:48:55,568
Like a slide that I didn't have up here,

1052
00:48:55,648 --> 00:48:57,349
but that's sort of fascinating about deep learning,

1053
00:48:57,729 --> 00:49:00,410
is that it turns out that the algorithm you pick.

1054
00:49:00,870 --> 00:49:03,611
in deep learning and machine learning, it doesn't matter.

1055
00:49:04,011 --> 00:49:05,932
The thing that matters is more data.

1056
00:49:06,092 --> 00:49:06,992
Like, more data wins.

1057
00:49:07,172 --> 00:49:09,012
And so the problem is, somebody is

1058
00:49:09,032 --> 00:49:11,833
going to either need to outspend the amount of data that I have,

1059
00:49:11,933 --> 00:49:13,214
because I have lots of data.

1060
00:49:14,254 --> 00:49:16,094
And also, I could just do the same thing.

1061
00:49:16,915 --> 00:49:20,536
Or they're going to need more data than I have,

1062
00:49:20,676 --> 00:49:21,836
and they definitely don't have that.

1063
00:49:22,296 --> 00:49:23,076
So that was a good question.

1064
00:49:23,196 --> 00:49:23,376
Thanks.

1065
00:49:24,237 --> 00:49:24,337
Yeah.

1066
00:49:25,052 --> 00:49:28,094
When you showed the rainbow slide, you said that...

1067
00:49:28,134 --> 00:49:29,675
Rainbow of trust. Let's go back to that one.

1068
00:49:30,335 --> 00:49:36,198
That you weren't sure about any of the players, but you were more sure that some of them were more likely to be cheaters, right?

1069
00:49:36,499 --> 00:49:36,879
That's right.

1070
00:49:37,419 --> 00:49:40,741
So, in order to make a better experience for the blue guys,

1071
00:49:41,381 --> 00:49:41,602
Yeah.

1072
00:49:41,762 --> 00:49:46,965
Five of the red guys who aren't cheaters, but for some reason you mislabeled them as untrustworthy,

1073
00:49:47,245 --> 00:49:52,028
because they're not cheaters, you just think they're more likely, you're going to ruin their experience, like, completely, right?

1074
00:49:53,015 --> 00:49:54,895
Aren't you worried that you're going to make them churn

1075
00:49:55,135 --> 00:49:57,736
in order to make the others have a better experience?

1076
00:49:57,956 --> 00:50:01,857
Yeah, so that's definitely a concern for trust.

1077
00:50:01,877 --> 00:50:04,057
That's definitely a thing that players are concerned about.

1078
00:50:04,177 --> 00:50:07,198
But we haven't seen it actually bear fruit.

1079
00:50:07,578 --> 00:50:10,279
That model also tends to be very conservative.

1080
00:50:10,619 --> 00:50:12,539
So we're actually, despite what I'm showing here,

1081
00:50:12,559 --> 00:50:15,360
we're actually more likely to accidentally slip somebody

1082
00:50:15,720 --> 00:50:17,480
who is a cheater into blue than we

1083
00:50:17,580 --> 00:50:21,821
are to get somebody who's red to accidentally qualify somebody

1084
00:50:21,841 --> 00:50:22,622
who's orange is red.

1085
00:50:22,842 --> 00:50:26,364
So you would recommend using this if you're really sure that they're cheaters?

1086
00:50:26,644 --> 00:50:28,206
Yeah, you want to be sort of very...

1087
00:50:28,286 --> 00:50:31,888
You want to be certain that they are very likely to go on to be cheaters.

1088
00:50:31,908 --> 00:50:33,890
Like most of the people that get caught there

1089
00:50:34,870 --> 00:50:37,232
are actually in the situation that I gave the anecdote about,

1090
00:50:37,272 --> 00:50:41,135
where they have many accounts, and most of them have been backbanned.

1091
00:50:41,775 --> 00:50:42,336
Okay, thank you.

1092
00:50:43,694 --> 00:50:47,358
Hey, yeah, um, so I'm a big fan of you guys using cat humans in

1093
00:50:47,398 --> 00:50:51,502
the loop to make sure you don't have false positives. Uh, but

1094
00:50:51,582 --> 00:50:54,665
how are you planning on extending this layer for it for

1095
00:50:54,825 --> 00:50:58,268
like, for example, you're asking for partners for this and those

1096
00:50:58,288 --> 00:51:01,531
partners may not have the level of community participation that

1097
00:51:01,751 --> 00:51:03,593
that, uh, you, that valve does.

1098
00:51:04,285 --> 00:51:05,385
Yeah, that's a good question.

1099
00:51:05,405 --> 00:51:07,186
We haven't thought that far yet.

1100
00:51:07,366 --> 00:51:10,668
I think that probably it's possible

1101
00:51:10,708 --> 00:51:13,629
that the actual feature would be the whole thing,

1102
00:51:13,729 --> 00:51:15,130
like Overwatch and everything.

1103
00:51:15,190 --> 00:51:16,390
That's one possible approach.

1104
00:51:16,750 --> 00:51:20,372
The other would be to use something like this maybe

1105
00:51:20,532 --> 00:51:21,012
instead to.

1106
00:51:22,433 --> 00:51:27,979
Basically to feed into something like trust score where you're like I'm not taking as nearly as harsh in action

1107
00:51:28,019 --> 00:51:33,324
Like I'm not banning you and taking away your stuff instead. I'm just like yeah, I don't quite trust you as much

1108
00:51:33,444 --> 00:51:36,287
So I'm gonna stick you with other people who I don't trust quite as much

1109
00:51:36,587 --> 00:51:41,292
So I think like soft punishments might be a better choice for a smaller partner. That's good question. Thank you

1110
00:51:41,812 --> 00:51:41,912
Hi.

1111
00:51:42,192 --> 00:51:42,492
Hi there.

1112
00:51:42,512 --> 00:51:46,033
Are you seeing an increase between the overlap of cheaters

1113
00:51:46,233 --> 00:51:49,134
that are really bad players and actual legitimate good players?

1114
00:51:49,354 --> 00:51:51,015
And how do you deal with those scenarios?

1115
00:51:51,675 --> 00:51:53,176
I'm not sure that I understand.

1116
00:51:53,236 --> 00:51:54,056
Can you rephrase that?

1117
00:51:54,176 --> 00:51:56,797
So at some point, a very good player

1118
00:51:56,837 --> 00:51:57,977
is going to look like a cheater.

1119
00:51:58,057 --> 00:51:59,538
How do you deal with that scenario?

1120
00:51:59,638 --> 00:51:59,898
I see.

1121
00:52:00,659 --> 00:52:04,501
It turns out, so Overwatch, so the question is,

1122
00:52:04,741 --> 00:52:06,242
how do you tell the difference between somebody

1123
00:52:06,262 --> 00:52:08,764
who's just really good at the game and a cheater, right?

1124
00:52:09,524 --> 00:52:10,885
And it turns out,

1125
00:52:12,587 --> 00:52:16,229
that the things that Overwatch is good at catching are not,

1126
00:52:16,389 --> 00:52:18,170
like Overwatch doesn't catch subtle cheaters.

1127
00:52:18,370 --> 00:52:21,112
Because we ask players, like, don't convict if you're not sure.

1128
00:52:21,412 --> 00:52:25,214
And so they're like, that is plausibly just a player that's really good.

1129
00:52:25,334 --> 00:52:28,236
And so they just take the not guilty button.

1130
00:52:28,296 --> 00:52:31,477
And we've sort of hand verified that tons and tons of times,

1131
00:52:31,537 --> 00:52:34,239
that like, hey, let's spot check convictions and make sure

1132
00:52:34,299 --> 00:52:36,560
that people are still not convicting things that they shouldn't be.

1133
00:52:37,381 --> 00:52:39,141
And we haven't found a single case of it.

1134
00:52:39,342 --> 00:52:45,346
That's not to say there hasn't been like one case in all of Overwatch, like there probably has, but we haven't seen it.

1135
00:52:46,647 --> 00:52:46,748
Hi.

1136
00:52:47,668 --> 00:52:56,816
Are you at all concerned about the possibility, now that your secret is out, of cheat developers polluting your data pool by putting ringers in your jerrys?

1137
00:52:58,217 --> 00:53:06,383
Am I worried about... So am I worried now that I've basically shown everything about cheaters polluting my data?

1138
00:53:08,598 --> 00:53:09,439
They'll try.

1139
00:53:09,459 --> 00:53:11,600
I'm not really too worried about it,

1140
00:53:11,680 --> 00:53:13,821
because humans should be able to tell the difference.

1141
00:53:14,081 --> 00:53:15,661
Like, that's kind of the fundamental premise

1142
00:53:15,681 --> 00:53:16,302
that we're going on.

1143
00:53:16,362 --> 00:53:20,203
And so if humans decide that that behavior is cheaty,

1144
00:53:20,223 --> 00:53:22,264
then the learner should decide that it's cheaty as well.

1145
00:53:22,384 --> 00:53:23,244
But it's possible.

1146
00:53:23,824 --> 00:53:25,125
Like, it's definitely, we'll see.

1147
00:53:25,165 --> 00:53:26,245
Maybe I'll be back in GDC 2019,

1148
00:53:26,586 --> 00:53:28,766
and I'll be like, don't talk about cheating ever.

1149
00:53:28,826 --> 00:53:30,247
This was a terrible mistake.

1150
00:53:30,707 --> 00:53:31,387
But I don't think so.

1151
00:53:31,928 --> 00:53:32,848
That's a good question, thanks.

1152
00:53:33,848 --> 00:53:33,888
Hi.

1153
00:53:34,351 --> 00:53:35,971
Great talk and great analogy.

1154
00:53:35,992 --> 00:53:37,032
I really like the...

1155
00:53:37,452 --> 00:53:38,272
Yes!

1156
00:53:38,312 --> 00:53:39,773
One for and one against, all right.

1157
00:53:39,793 --> 00:53:41,473
They remind me of the burger I had yesterday,

1158
00:53:41,593 --> 00:53:42,514
the SuperDuper burger.

1159
00:53:42,554 --> 00:53:43,894
Good, good, good.

1160
00:53:44,334 --> 00:53:45,135
I have two questions.

1161
00:53:45,195 --> 00:53:47,595
First one is about the actual data shape.

1162
00:53:48,196 --> 00:53:51,257
Like you showed it, the cube-shaped data,

1163
00:53:51,497 --> 00:53:53,177
but I don't think that is actually cube-shaped.

1164
00:53:53,237 --> 00:53:54,178
No, no, it is not a cube.

1165
00:53:54,198 --> 00:53:55,198
Yeah, so I was wondering,

1166
00:53:55,578 --> 00:53:59,659
is it like the one user represented as a long vector

1167
00:53:59,679 --> 00:54:01,900
or a matrix of...

1168
00:54:02,460 --> 00:54:04,482
Yeah, so what it is, is it is actually,

1169
00:54:04,642 --> 00:54:07,444
it is totally sort of serial data.

1170
00:54:07,825 --> 00:54:10,547
It's just serial data doesn't look very good on a slide.

1171
00:54:11,147 --> 00:54:12,589
But it is basically just like,

1172
00:54:12,989 --> 00:54:14,710
here's all of the information about a shot,

1173
00:54:14,991 --> 00:54:17,232
and then repeat it 140 times.

1174
00:54:17,993 --> 00:54:21,256
And if a player, I didn't really talk about this at the time,

1175
00:54:21,276 --> 00:54:24,098
but like, if a player shoots, say, 200 times

1176
00:54:24,278 --> 00:54:25,859
in an eight round window, then we just build

1177
00:54:26,240 --> 00:54:28,942
like 60, 140 shot windows,

1178
00:54:29,042 --> 00:54:30,763
and we ask to inference all of them.

1179
00:54:31,084 --> 00:54:32,824
would any of these result in a conviction.

1180
00:54:33,865 --> 00:54:36,446
But there are, yeah, like it's like you could just sort of imagine a timeline

1181
00:54:36,486 --> 00:54:39,668
where somebody takes a shot, every single time they take a shot,

1182
00:54:39,768 --> 00:54:43,490
and then we're like, great, let's look at, like that is our whole timeline,

1183
00:54:43,570 --> 00:54:46,531
and then let's build sliding windows of 140

1184
00:54:47,032 --> 00:54:50,333
and see if any sliding windows will result in a conviction.

1185
00:54:50,654 --> 00:54:54,455
I see. And my next question is about the deep learning architecture.

1186
00:54:54,856 --> 00:54:56,316
Oh, I have a slide for this.

1187
00:54:56,697 --> 00:55:00,158
Let's, here, I'm just going to, oh wait, maybe I can, no, I'm sure it won't.

1188
00:55:02,411 --> 00:55:06,215
Sorry, maybe I can skip to the PowerPoint.

1189
00:55:06,336 --> 00:55:08,418
I'm so pissed about those graphs.

1190
00:55:09,219 --> 00:55:12,383
So I actually have the slide for exactly what our architecture is.

1191
00:55:16,310 --> 00:55:16,670
Bam!

1192
00:55:16,690 --> 00:55:17,930
I'm so glad I kept this one in.

1193
00:55:18,650 --> 00:55:20,631
So we use an RNN.

1194
00:55:20,671 --> 00:55:22,032
I'm sorry if you're not a deep learning person.

1195
00:55:22,112 --> 00:55:24,092
We use an RNN because we have sequence data.

1196
00:55:24,993 --> 00:55:26,973
And the only sort of weird thing is we're actually

1197
00:55:27,073 --> 00:55:31,215
using GRU and ReLU activation actually works better.

1198
00:55:31,275 --> 00:55:33,856
Most of the time, ReLU occasionally,

1199
00:55:33,916 --> 00:55:35,116
when we're training a model, it'll just

1200
00:55:35,136 --> 00:55:36,496
be like, I just can't converge.

1201
00:55:37,257 --> 00:55:39,157
But actually, most of the time, it does converge,

1202
00:55:39,237 --> 00:55:41,258
and it does significantly better than tanh.

1203
00:55:42,238 --> 00:55:43,819
So that is surprising.

1204
00:55:44,619 --> 00:55:47,902
And otherwise, this stuff is all just totally, purely capricious.

1205
00:55:47,942 --> 00:55:50,264
Like, we just searched, we just did like a grid search,

1206
00:55:50,704 --> 00:55:53,787
and we treated all of the architecture like a hyperparameter,

1207
00:55:53,807 --> 00:55:56,108
you know, like a set of hyperparameters as well.

1208
00:55:56,589 --> 00:55:59,511
And that is like the thing that currently works the best.

1209
00:55:59,791 --> 00:56:01,473
Could change tomorrow, but that's what it is today.

1210
00:56:01,873 --> 00:56:07,137
I was wondering if you have also tried like one-dimensional convolutional neural network, which...

1211
00:56:07,698 --> 00:56:09,619
It is high on my list of things to try.

1212
00:56:09,639 --> 00:56:11,000
Thank you very much.

1213
00:56:11,060 --> 00:56:11,681
Yeah, cheers, thanks.

1214
00:56:12,540 --> 00:56:12,660
Hi.

1215
00:56:13,120 --> 00:56:15,161
So as a person who does a lot of Overwatch cases, it's kind

1216
00:56:15,181 --> 00:56:16,741
of interesting to see how you're using this data.

1217
00:56:16,761 --> 00:56:17,661
Wait, hold on.

1218
00:56:18,202 --> 00:56:19,182
Thank you for your service.

1219
00:56:19,222 --> 00:56:20,162
Yeah, no problem.

1220
00:56:20,962 --> 00:56:21,142
OK.

1221
00:56:21,782 --> 00:56:23,803
So I'm kind of curious about the more subtle cases, because

1222
00:56:23,983 --> 00:56:26,903
just speaking purely as a person who does Overwatch

1223
00:56:26,923 --> 00:56:30,584
cases is there are a lot of times when you aren't certain.

1224
00:56:31,744 --> 00:56:34,125
And I think the language is actually really good about

1225
00:56:34,725 --> 00:56:36,325
really convincing you that you really have to be.

1226
00:56:37,289 --> 00:56:42,132
very sure. Evidence beyond a reasonable doubt. It's very, you know, we're very precise. Yeah,

1227
00:56:42,212 --> 00:56:46,476
legally precise. Except when we get talks. So I'm kind of curious about how you go to

1228
00:56:46,536 --> 00:56:51,320
approach the subtle case and if maybe you could talk a little bit about how to tackle that,

1229
00:56:51,400 --> 00:56:55,763
if it's going to be like an unsupervised approach that maybe bears fruit there or?

1230
00:56:55,783 --> 00:57:02,188
Yeah, so I think an unsupervised approach is going to have to be the answer. Like I think

1231
00:57:02,669 --> 00:57:05,471
If, again, sorry, deep learning, a little nerding,

1232
00:57:06,192 --> 00:57:07,373
I'm pretty sure it's gonna need to be

1233
00:57:07,393 --> 00:57:09,234
an unsupervised approach, and I think probably

1234
00:57:09,254 --> 00:57:11,156
it'll be around outlier analysis,

1235
00:57:11,637 --> 00:57:13,338
but I haven't done much work on it yet.

1236
00:57:13,798 --> 00:57:16,000
But I think that's probably the only thing to do.

1237
00:57:16,601 --> 00:57:21,525
The thing that's a little trickier for that

1238
00:57:21,786 --> 00:57:24,368
is actually the policy decision around it,

1239
00:57:24,508 --> 00:57:28,151
instead of the, hey, given that I make that thing work,

1240
00:57:29,048 --> 00:57:29,909
Now what do I do?

1241
00:57:30,129 --> 00:57:32,271
Because humans are not convicting that.

1242
00:57:32,311 --> 00:57:36,293
And I would need to have extremely high confidence

1243
00:57:36,934 --> 00:57:39,115
that a person was cheating in a subtle way

1244
00:57:39,175 --> 00:57:41,196
before I would be willing to take action against them.

1245
00:57:41,216 --> 00:57:43,378
Because I'm putting a black mark on their Steam account.

1246
00:57:43,458 --> 00:57:44,578
I'm taking their stuff away.

1247
00:57:45,119 --> 00:57:46,560
They don't get to play on back-secured servers.

1248
00:57:46,600 --> 00:57:50,782
So we need to be very, very careful around what we

1249
00:57:50,803 --> 00:57:53,084
do punitively in that situation.

1250
00:57:53,284 --> 00:57:55,786
But it may be that you feed it into trust and then you're just like, hmm.

1251
00:57:56,627 --> 00:58:01,772
I think it's also interesting, have you done experiments with how tick rate affects this?

1252
00:58:02,813 --> 00:58:03,433
I'm sorry, how what?

1253
00:58:03,613 --> 00:58:04,634
How tick rate affects...

1254
00:58:04,995 --> 00:58:05,515
Oh, tick rate.

1255
00:58:05,615 --> 00:58:09,239
Because you have a relatively high tick rate at 64,

1256
00:58:09,479 --> 00:58:13,082
which gives you sort of a lot of moment-by-moment data,

1257
00:58:13,202 --> 00:58:18,827
and I don't know if having a higher tick rate or a lower tick rate evaluation of this has any impact.

1258
00:58:19,608 --> 00:58:23,429
So overwatch cases are actually handed down only at 32k.

1259
00:58:23,469 --> 00:58:26,069
They're already stepped down and so we actually just work on that data.

1260
00:58:26,169 --> 00:58:27,129
Okay, cool. Thank you.

1261
00:58:27,290 --> 00:58:30,670
Cool. I think I have like time for one or two more questions probably,

1262
00:58:30,730 --> 00:58:32,031
although we're the last people in the room.

1263
00:58:32,071 --> 00:58:34,371
So maybe we can go a minute or two long, maybe.

1264
00:58:34,391 --> 00:58:35,431
Okay.

1265
00:58:35,751 --> 00:58:38,592
Cool. Kind of dragging on ahead,

1266
00:58:38,692 --> 00:58:40,192
I love Counter-Strike by the way.

1267
00:58:40,212 --> 00:58:40,672
Yay!

1268
00:58:40,692 --> 00:58:41,713
I play it a lot and everything.

1269
00:58:43,075 --> 00:58:48,480
going on with that, right, definitely I think the data part will always win. You guys always

1270
00:58:48,520 --> 00:58:52,624
have the data and you can always get the data so I'm sold on the machine learning part. But

1271
00:58:52,944 --> 00:58:58,570
when SteamOS came out, I was actually hoping, you know, we've got Twitch going big and we've

1272
00:58:58,590 --> 00:59:04,496
got people making entire livelihoods on this now. And it made me wonder why, you know, we

1273
00:59:04,536 --> 00:59:07,439
have secure boot, we have all these systems now.

1274
00:59:08,560 --> 00:59:11,561
couldn't we create, you know, in addition to this, could we not

1275
00:59:11,621 --> 00:59:15,522
create a, a secure system in such that it's like for

1276
00:59:15,562 --> 00:59:20,364
contestant play, you have to boot the sort of encrypted

1277
00:59:20,404 --> 00:59:23,065
images that are a whole lot more secure. I mean, this is a whole

1278
00:59:23,105 --> 00:59:26,125
nother conversation. But it allows you to do the things

1279
00:59:26,185 --> 00:59:29,526
like, hey, did he actually move his mouse physically? Like, did

1280
00:59:29,586 --> 00:59:34,028
I get XY input from that? Hey, did the DLLs exactly match, you

1281
00:59:34,068 --> 00:59:36,028
know, I'm doing checksums and, you know...

1282
00:59:36,549 --> 00:59:42,816
So we've thought about this and like I actually, that was kind of the approach I ran down initially

1283
00:59:42,917 --> 00:59:46,681
and there are sort of a few problems around it that kind of led us to go, ehh.

1284
00:59:48,123 --> 00:59:52,769
I think the easiest one is like, that feels super invasive.

1285
00:59:53,069 --> 00:59:55,410
right, like as a user, like I'm like,

1286
00:59:55,610 --> 00:59:57,950
hey, what you need to do is play my game on like my OS

1287
00:59:58,030 --> 00:59:58,630
and you need to see.

1288
00:59:58,931 --> 01:00:00,271
And like, I don't know, like,

1289
01:00:00,951 --> 01:00:03,872
and the problem is ultimately at the end of the day,

1290
01:00:04,072 --> 01:00:07,933
if the user has access to their system, physical access,

1291
01:00:08,233 --> 01:00:11,274
there is nothing I can do to determine for certain

1292
01:00:11,334 --> 01:00:12,434
that they haven't tampered with it.

1293
01:00:12,494 --> 01:00:13,754
Like, cause any query that you're like,

1294
01:00:13,774 --> 01:00:14,814
well, you just asked them this.

1295
01:00:14,914 --> 01:00:17,895
I'm like, so what I do is I hijack that function and I lie.

1296
01:00:18,415 --> 01:00:19,056
Because I did that.

1297
01:00:19,116 --> 01:00:20,156
I've done that.

1298
01:00:20,176 --> 01:00:21,417
It works great.

1299
01:00:21,797 --> 01:00:23,157
It's turtles all the way down.

1300
01:00:23,177 --> 01:00:23,738
It is.

1301
01:00:24,298 --> 01:00:26,259
Ah, but it may not be, and maybe we should talk later.

1302
01:00:26,279 --> 01:00:26,999
Right, right.

1303
01:00:27,079 --> 01:00:27,299
Cheers.

1304
01:00:27,659 --> 01:00:28,100
Oh, yeah.

1305
01:00:28,160 --> 01:00:30,461
Hi, great talk.

1306
01:00:30,921 --> 01:00:35,163
Quasi-related, because you mentioned Reddit in the forums a lot, at any point did you

1307
01:00:36,023 --> 01:00:39,565
develop something to sort of scour those in terms of watching trends for like...

1308
01:00:40,380 --> 01:00:41,041
No, we haven't.

1309
01:00:41,561 --> 01:00:42,222
Maybe we should.

1310
01:00:42,923 --> 01:00:45,085
The question is, do we have tools to scour Reddit

1311
01:00:45,145 --> 01:00:47,487
and quantify things better and other forums?

1312
01:00:48,708 --> 01:00:50,470
We don't, but maybe we should.

1313
01:00:50,510 --> 01:00:52,231
That feels like a thing that actually,

1314
01:00:52,571 --> 01:00:54,934
and performing sentiment analysis,

1315
01:00:55,014 --> 01:00:57,876
in particular being like, hey, is there a new topic that

1316
01:00:57,916 --> 01:00:59,638
is currently lighting the internet on fire?

1317
01:01:00,118 --> 01:01:02,841
That might actually be a pretty valuable thing,

1318
01:01:03,261 --> 01:01:04,722
but it's not a thing that we have right now.

1319
01:01:05,103 --> 01:01:06,064
Yeah, that would be great, though.

1320
01:01:06,644 --> 01:01:07,525
I have two questions.

1321
01:01:07,725 --> 01:01:08,546
First, great talk.

1322
01:01:08,886 --> 01:01:09,086
Thanks.

1323
01:01:09,506 --> 01:01:13,269
So firstly, how long does it take to train the data?

1324
01:01:13,850 --> 01:01:15,151
And how much data do you use?

1325
01:01:15,471 --> 01:01:21,596
So we have about 700,000 labeled pieces of data now.

1326
01:01:21,616 --> 01:01:25,759
And it takes about six hours to train on 1080 Ti.

1327
01:01:26,219 --> 01:01:26,860
On one 1080 Ti.

1328
01:01:26,980 --> 01:01:30,883
And we're actually working on parallelizing it and feeding it

1329
01:01:30,903 --> 01:01:32,524
to a bunch of V100s.

1330
01:01:32,564 --> 01:01:33,765
So we'll bring that down to.

1331
01:01:35,292 --> 01:01:36,413
10 minutes or so, pretty soon.

1332
01:01:36,734 --> 01:01:36,894
Cool.

1333
01:01:37,475 --> 01:01:39,879
And the second question, have hackers

1334
01:01:39,979 --> 01:01:42,823
tried to play the Overwatch system and ads

1335
01:01:43,544 --> 01:01:45,547
on people who just pass everything?

1336
01:01:47,230 --> 01:01:47,530
No.

1337
01:01:47,631 --> 01:01:49,493
Well, sorry, maybe.

1338
01:01:49,634 --> 01:01:50,255
Maybe they've tried.

1339
01:01:51,035 --> 01:01:56,660
But one of the things that we do in Overwatch is we pay attention to how good you are at Overwatch.

1340
01:01:56,700 --> 01:02:00,122
Like how often you go and agree with the consensus.

1341
01:02:00,203 --> 01:02:03,345
And so somebody who is just like, not guilty, not guilty, not guilty, not guilty,

1342
01:02:04,246 --> 01:02:07,889
and they do that repeatedly on cases that get convicted or the other way,

1343
01:02:08,009 --> 01:02:09,170
like they try and pollute it the other way,

1344
01:02:09,950 --> 01:02:12,612
they get basically to the point where we're like,

1345
01:02:12,632 --> 01:02:14,914
you can keep doing cases, but I don't believe you anymore.

1346
01:02:15,074 --> 01:02:16,736
So, have a good time?

1347
01:02:17,456 --> 01:02:17,616
Yeah.

1348
01:02:17,877 --> 01:02:18,217
Okay, cool. Thanks.

1349
01:02:18,237 --> 01:02:18,737
That's a good question.

1350
01:02:20,348 --> 01:02:20,889
Hey, um...

1351
01:02:21,770 --> 01:02:23,813
I think these are probably the last two, just so we're...

1352
01:02:23,873 --> 01:02:24,794
Thanks a lot for the talk.

1353
01:02:24,955 --> 01:02:27,138
Now I really know what your next game is going to be.

1354
01:02:27,298 --> 01:02:29,722
It's a VR simulator of Meat Grinder.

1355
01:02:29,942 --> 01:02:30,883
That's right, Meat Grinder.

1356
01:02:31,104 --> 01:02:31,644
Sign me up for that.

1357
01:02:31,664 --> 01:02:32,406
That's right, that's right.

1358
01:02:32,666 --> 01:02:32,926
But, uh...

1359
01:02:34,194 --> 01:02:38,936
I have a question from a different point. Obviously you're talking about real customers,

1360
01:02:40,036 --> 01:02:45,078
the real players playing and that's why you have created that system. I work for competitive

1361
01:02:45,138 --> 01:02:50,320
play so we see lots and lots of games happen when people play for actual money and I think

1362
01:02:50,340 --> 01:02:56,262
CSGO is the biggest game in this amount in terms of volume. So many tournament organizers

1363
01:02:56,322 --> 01:02:59,403
running so many tournaments, so many games are being played.

1364
01:03:00,303 --> 01:03:02,844
And the level of cheating there is slightly different.

1365
01:03:03,124 --> 01:03:04,965
People are using enhancement drugs.

1366
01:03:05,465 --> 01:03:06,606
They can throw matches.

1367
01:03:07,186 --> 01:03:10,547
And I'm just curious, is there a way for a deep learning

1368
01:03:10,587 --> 01:03:14,208
network to try to sort of siphon through that thing?

1369
01:03:14,868 --> 01:03:17,669
Or we, as tournament organizers, should look elsewhere?

1370
01:03:17,929 --> 01:03:20,890
Obviously, we are doing it physically when LANs happen.

1371
01:03:21,630 --> 01:03:25,411
Everything is secure there, but I'm more curious about online qualifiers.

1372
01:03:25,471 --> 01:03:28,872
So the question is basically how do we do this for pros, right?

1373
01:03:28,932 --> 01:03:32,033
Or how do we do this for, uh, as tournament organizers?

1374
01:03:32,253 --> 01:03:38,714
And, um, I think that there probably is an approach there that works, uh, but I

1375
01:03:38,774 --> 01:03:42,015
don't have enough confidence to talk about it right this second.

1376
01:03:42,475 --> 01:03:44,756
Um, but it is definitely a thing that we're thinking a lot about.

1377
01:03:45,497 --> 01:03:47,700
because we think the integrity of the pro scene

1378
01:03:48,140 --> 01:03:48,941
is super important.

1379
01:03:49,142 --> 01:03:50,704
Like it's really, really important.

1380
01:03:51,385 --> 01:03:52,826
So it's definitely a thing that we're thinking about,

1381
01:03:52,846 --> 01:03:54,949
but I'm not quite ready to talk about

1382
01:03:55,170 --> 01:03:56,331
exactly how we think it'll work.

1383
01:03:56,992 --> 01:03:58,254
Yeah, thank you.

1384
01:03:58,274 --> 01:03:58,955
This is a great question.

1385
01:03:59,595 --> 01:03:59,876
Last one.

1386
01:04:00,214 --> 01:04:05,660
Hey, I'm wondering how many of your players have to weigh in on an Overwatch case before

1387
01:04:05,680 --> 01:04:11,986
it is closed one way or another, and how many Overwatch cases do you close every day?

1388
01:04:12,887 --> 01:04:18,513
So I can't comment on the second one because the team agreed that it probably was not actually

1389
01:04:18,553 --> 01:04:19,935
that useful to talk about.

1390
01:04:21,616 --> 01:04:24,318
The first question, how many players need to weigh in?

1391
01:04:25,559 --> 01:04:27,820
So it varies.

1392
01:04:29,161 --> 01:04:31,182
I'm trying to answer and not be hand wavy.

1393
01:04:31,262 --> 01:04:34,744
But it kind of depends on how long it takes to converge.

1394
01:04:34,824 --> 01:04:36,205
Like cases can be sort of.

1395
01:04:36,805 --> 01:04:42,073
Rejected like if you get if you just happen to randomly hand the case out to a bunch of people who it turns out are

1396
01:04:42,133 --> 01:04:45,078
Like they're always right. They always go with consensus

1397
01:04:45,438 --> 01:04:48,803
then maybe it takes as few as seven of them to agree that

1398
01:04:49,744 --> 01:04:51,247
That a person is you know

1399
01:04:51,767 --> 01:04:54,948
this thing is super guilty or this person is definitely not guilty.

1400
01:04:56,389 --> 01:05:01,890
It might take as many as 50 or 100 if it's something that's like a little sort of less

1401
01:05:02,090 --> 01:05:06,411
certain or if, you know, there are people that are new to Overwatch and we're not sure,

1402
01:05:06,611 --> 01:05:09,532
you know, about how good they are at identifying the conviction rates.

1403
01:05:10,452 --> 01:05:13,353
All right, thank you guys so much for sticking around through the graveyard shift.

1404
01:05:13,413 --> 01:05:14,113
I really appreciate that.

1405
01:05:14,133 --> 01:05:14,334
It's great.

1406
01:05:14,354 --> 01:05:14,534
Thank you.

1407
01:05:14,554 --> 01:05:14,734
Thank you.

1408
01:05:14,754 --> 01:05:14,934
Thank you.

1409
01:05:14,954 --> 01:05:15,654
Thank you.

1410
01:05:15,674 --> 01:05:15,854
Thank you.

1411
01:05:15,874 --> 01:05:16,094
Thank you.

