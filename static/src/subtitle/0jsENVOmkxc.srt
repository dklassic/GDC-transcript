1
00:00:06,420 --> 00:00:09,962
My talk today is going to be about vehicle physics and tire dynamics.

2
00:00:10,782 --> 00:00:11,963
My name is Hamish Young.

3
00:00:12,463 --> 00:00:14,364
I was the lead mechanic designer on Just Cause 4.

4
00:00:15,805 --> 00:00:20,968
And today we're going to talk a little bit about tires in particular and wheels.

5
00:00:21,488 --> 00:00:23,769
But let's quickly just have a reminder of.

6
00:00:25,410 --> 00:00:26,771
What Just Cause 4 is.

7
00:00:27,731 --> 00:00:31,172
So Just Cause 4 is a big open world game,

8
00:00:31,532 --> 00:00:32,413
open world action game.

9
00:00:33,133 --> 00:00:35,014
We have a wide range of vehicles,

10
00:00:35,814 --> 00:00:37,635
over 100 different types of vehicle.

11
00:00:38,955 --> 00:00:40,796
And a lot of them have wheels,

12
00:00:41,516 --> 00:00:42,776
not all, but a lot of them do.

13
00:00:43,276 --> 00:00:44,557
And wheels and tires are really gonna be

14
00:00:44,577 --> 00:00:46,057
the focus of this talk.

15
00:00:46,758 --> 00:00:48,378
Obviously we could talk about many different

16
00:00:48,438 --> 00:00:49,739
types of bits of physics,

17
00:00:49,819 --> 00:00:51,339
but that's gonna be the focus.

18
00:00:51,539 --> 00:00:53,120
But some of these principles can be applied

19
00:00:53,160 --> 00:00:53,900
to other phenomena.

20
00:00:55,021 --> 00:01:01,405
A little kind of note, the code is deliberately hard to read because it will take you time

21
00:01:01,445 --> 00:01:01,865
to read it.

22
00:01:02,786 --> 00:01:06,308
If you want to read it through, obviously, get the notes afterwards.

23
00:01:07,509 --> 00:01:09,130
But I put it up there just as reference.

24
00:01:11,271 --> 00:01:11,592
Okay.

25
00:01:11,692 --> 00:01:14,554
So one of the things you want to do is obviously set out what the goals are.

26
00:01:14,574 --> 00:01:15,534
What are we trying to achieve?

27
00:01:16,463 --> 00:01:18,584
So we have some limitations.

28
00:01:18,624 --> 00:01:20,224
We've got a limited CPU budget.

29
00:01:20,244 --> 00:01:21,945
We're making a big open world game.

30
00:01:22,665 --> 00:01:24,945
And there's a lot of things going on, tornadoes,

31
00:01:25,245 --> 00:01:26,306
all sorts of things going on.

32
00:01:26,346 --> 00:01:29,206
So we're going to have to keep performance pretty good.

33
00:01:30,886 --> 00:01:33,987
Alongside that, we're running our sim at 30 hertz.

34
00:01:35,167 --> 00:01:37,828
And so we need to, unlike a dedicated driving game,

35
00:01:37,868 --> 00:01:40,308
we're going to have a limited frame rate.

36
00:01:42,262 --> 00:01:43,983
We want it to be believable.

37
00:01:44,803 --> 00:01:46,104
Now this is in quotes,

38
00:01:47,225 --> 00:01:51,549
because obviously we don't want it to be actually realistic like a driving sim,

39
00:01:51,829 --> 00:01:54,751
but we do want cars to kind of feel like they behave like cars.

40
00:01:55,552 --> 00:01:55,692
And...

41
00:01:57,133 --> 00:01:59,834
And related to that is this idea of limited cognitive load.

42
00:02:00,374 --> 00:02:01,995
So when you're driving at high speed,

43
00:02:02,556 --> 00:02:04,036
you want to be able to do other things

44
00:02:04,136 --> 00:02:06,238
and think about other things and not just driving.

45
00:02:07,238 --> 00:02:09,299
And even when you have complex environments.

46
00:02:10,080 --> 00:02:13,221
So that's one of the big design goals for what we were doing.

47
00:02:15,382 --> 00:02:17,203
We also have a very wide range of vehicles.

48
00:02:17,424 --> 00:02:20,585
Small, large, and everything in between.

49
00:02:21,146 --> 00:02:22,626
And we want one system that can cope

50
00:02:22,646 --> 00:02:23,907
with all those different types of vehicle.

51
00:02:25,484 --> 00:02:26,707
And then obviously it's an open world.

52
00:02:26,767 --> 00:02:30,256
We have a huge, diverse environment to drive in,

53
00:02:31,219 --> 00:02:34,207
and we want for it to work in all those environments.

54
00:02:36,331 --> 00:02:39,093
So let's talk a little bit about the different kind of choices

55
00:02:39,133 --> 00:02:40,754
you can make in range of handling.

56
00:02:41,655 --> 00:02:44,457
You kind of got the kind of kart racing end,

57
00:02:44,657 --> 00:02:48,260
which a lot of indie developers tend

58
00:02:48,280 --> 00:02:50,662
to have games kind of heading in this direction.

59
00:02:51,062 --> 00:02:52,363
There's no tire model.

60
00:02:52,663 --> 00:02:57,547
It's all just forces built on that kind of core rigid body.

61
00:02:59,128 --> 00:03:01,570
As you head through arcade races,

62
00:03:01,650 --> 00:03:03,311
and to some extent there's a range

63
00:03:03,331 --> 00:03:05,953
where you might use a vehicle SDK from one

64
00:03:05,993 --> 00:03:08,154
of the physics providers.

65
00:03:09,695 --> 00:03:12,017
And they have a kind of constraint-based system.

66
00:03:13,298 --> 00:03:16,000
And then you head into more Simcade and driving simulations.

67
00:03:16,080 --> 00:03:17,641
At the far end of driving simulations,

68
00:03:18,081 --> 00:03:21,444
you end up with this really kind of accurate tire model

69
00:03:22,785 --> 00:03:24,186
with large complexity.

70
00:03:25,352 --> 00:03:29,096
And what I'm gonna talk about today is how to get here.

71
00:03:30,217 --> 00:03:33,501
So how do you move either up this way

72
00:03:33,941 --> 00:03:36,024
or down the other way to hit the sweet spot

73
00:03:36,544 --> 00:03:38,146
that I'm gonna be talking about.

74
00:03:39,348 --> 00:03:41,750
So to give you a sense of the order of operations,

75
00:03:42,511 --> 00:03:44,754
I'm gonna talk about what we did for Just Cause 4.

76
00:03:46,184 --> 00:03:51,048
We're going to have similar input parameters to the simulation models, so we're going to

77
00:03:51,088 --> 00:03:56,673
take some elements from the simulation, but we want much higher grip than is real for

78
00:03:56,693 --> 00:03:59,856
that kind of use of arcade kind of physics.

79
00:04:00,917 --> 00:04:06,262
I'm going to talk quite a bit about friction clamps to stay physically stable, and this

80
00:04:06,642 --> 00:04:12,287
is kind of similar to how the constraints-based driving models work.

81
00:04:13,392 --> 00:04:16,252
And then I'm going to talk about how you can draw friction curves,

82
00:04:17,373 --> 00:04:20,974
and then scale down the pitch and roll components to compensate for the grip.

83
00:04:21,474 --> 00:04:23,915
And then we can talk about the driver assist stuff,

84
00:04:23,955 --> 00:04:29,316
which is actually very similar to the kart racing kind of physics you might see at that end.

85
00:04:29,897 --> 00:04:33,598
So what we're really trying to do is bring all those elements together into something that works as a whole.

86
00:04:35,722 --> 00:04:40,003
So let's talk a little bit about the semi-empirical

87
00:04:40,343 --> 00:04:42,724
Forza, Gran Turismo end of things.

88
00:04:44,785 --> 00:04:46,506
The models actually take real time.

89
00:04:46,546 --> 00:04:49,407
You take a real tire and you put it in a real machine

90
00:04:49,867 --> 00:04:51,668
and you vary the input parameters

91
00:04:51,748 --> 00:04:53,029
and you measure the outcome

92
00:04:53,489 --> 00:04:55,650
and then you curve fit that outcome

93
00:04:56,150 --> 00:04:57,791
to replicate it in your game.

94
00:04:58,311 --> 00:04:59,891
And the more accurately you can do that

95
00:04:59,991 --> 00:05:01,892
and the higher frequency you can run that at,

96
00:05:02,352 --> 00:05:03,573
the more accurate you're gonna be.

97
00:05:06,012 --> 00:05:09,074
The downside is that if you want to modify

98
00:05:09,154 --> 00:05:11,256
what those tires do, you don't want real,

99
00:05:12,357 --> 00:05:13,598
it gets pretty hard to modify.

100
00:05:15,399 --> 00:05:18,521
And there are real reasons why you may not want real tires.

101
00:05:20,002 --> 00:05:21,884
For a start, if you wanna run at 30 hertz,

102
00:05:22,024 --> 00:05:24,125
well, you're gonna get terrible feedback,

103
00:05:24,605 --> 00:05:26,847
especially when you have weight transfer,

104
00:05:28,128 --> 00:05:29,089
you're not gonna feel it,

105
00:05:29,209 --> 00:05:32,951
and the car is just gonna be unpredictable in its behavior.

106
00:05:34,224 --> 00:05:36,988
You also, I mean, anyone who's gone from an arcade game

107
00:05:37,048 --> 00:05:41,736
to a driving simulator, is understeer is a big deal.

108
00:05:42,176 --> 00:05:44,340
If you brake and you understeer, you don't hit the corner.

109
00:05:44,360 --> 00:05:46,563
It's kind of unacceptable in an open world game.

110
00:05:46,603 --> 00:05:48,806
I need to come up to a T-junction and get around that corner.

111
00:05:50,355 --> 00:05:53,618
And oversteer can be an issue, but actually it's not such a big issue.

112
00:05:54,379 --> 00:06:00,703
But if you do want to kind of correct oversteer in a very physical correct way, you need complex

113
00:06:00,743 --> 00:06:05,307
traction control and stability control, and that's difficult to get right.

114
00:06:07,815 --> 00:06:09,696
So I'm going to talk a little bit about the tire setup.

115
00:06:10,496 --> 00:06:11,997
There are some basic parameters we're

116
00:06:12,017 --> 00:06:14,538
going to need to assume we've generated.

117
00:06:14,558 --> 00:06:17,340
The wheel has a position and orientation,

118
00:06:17,400 --> 00:06:18,441
which includes the steer.

119
00:06:19,181 --> 00:06:20,602
You've got a linear velocity of the wheel.

120
00:06:20,862 --> 00:06:22,603
And then you've got its angular velocity

121
00:06:22,903 --> 00:06:24,324
in the direction of the spin.

122
00:06:24,964 --> 00:06:28,326
And then you've got some sort of ground position

123
00:06:28,366 --> 00:06:30,187
and normal where the tire is hitting the ground.

124
00:06:32,808 --> 00:06:35,932
So this is the tire reference frame I'm going to be talking about.

125
00:06:36,232 --> 00:06:41,359
And we're splitting the velocity into things that go along the line of the wheel with things

126
00:06:41,399 --> 00:06:42,560
that go lateral to the wheel.

127
00:06:43,021 --> 00:06:44,983
And then you've got the angular velocity of the wheel spin.

128
00:06:48,402 --> 00:06:52,086
So slip ratio, this is one of the input parameters

129
00:06:52,126 --> 00:06:53,047
that we're going to be using.

130
00:06:53,808 --> 00:06:55,029
And I'm going to take you through the kind

131
00:06:55,049 --> 00:06:56,030
of different phases of it.

132
00:06:56,871 --> 00:06:59,954
So wheel spin is defined in the slip ratio

133
00:06:59,994 --> 00:07:01,676
as when the wheel is spinning faster

134
00:07:01,716 --> 00:07:02,757
than it's moving forwards.

135
00:07:04,218 --> 00:07:10,961
There's a kind of intuitive thing here where the point on the rim that's going round, if

136
00:07:11,361 --> 00:07:16,163
it's perfectly gripping, then you actually end up with zero.

137
00:07:17,343 --> 00:07:18,664
So you're following the road.

138
00:07:18,844 --> 00:07:21,005
So wheelspin is when it's going faster than the road.

139
00:07:21,865 --> 00:07:25,867
And then when you're locked, the wheel is completely locked and you're sliding forwards.

140
00:07:26,658 --> 00:07:27,678
And that's negative.

141
00:07:27,859 --> 00:07:29,780
And the reason why we are in this space

142
00:07:29,840 --> 00:07:34,182
is because when you're braking, you're in this negative value

143
00:07:34,722 --> 00:07:35,643
up to minus 1.

144
00:07:36,063 --> 00:07:38,144
And that means you get a braking force.

145
00:07:38,845 --> 00:07:40,346
And if you've got a positive direction,

146
00:07:40,386 --> 00:07:42,407
then you're going to have acceleration,

147
00:07:42,427 --> 00:07:44,348
and it's going to be a positive force.

148
00:07:45,268 --> 00:07:48,570
And this slip ratio is now defined between minus 1

149
00:07:48,810 --> 00:07:51,832
when you're fully locked and up to essentially infinity,

150
00:07:51,932 --> 00:07:54,554
positive infinity, when the wheel is stationary

151
00:07:54,614 --> 00:07:55,975
but spinning fast.

152
00:07:57,817 --> 00:08:01,619
So if you like mathematics, this is the equation

153
00:08:01,639 --> 00:08:04,701
you'll see in books, which is literally

154
00:08:04,721 --> 00:08:05,962
what I've just shown you there.

155
00:08:06,842 --> 00:08:08,123
And there's a little bit of code,

156
00:08:08,143 --> 00:08:10,945
which is probably hard to read, which does the same thing.

157
00:08:11,605 --> 00:08:13,566
But in the game engine, actually,

158
00:08:13,926 --> 00:08:15,167
it's a little bit more complicated.

159
00:08:15,247 --> 00:08:16,548
There's a little bit of a gotcha here.

160
00:08:17,769 --> 00:08:20,590
If I actually go back, what happens is

161
00:08:20,811 --> 00:08:23,572
if the wheel spin is positive,

162
00:08:23,993 --> 00:08:26,974
and you're going backwards, so it's negative,

163
00:08:27,795 --> 00:08:30,718
you actually get a minus sign on this first piece.

164
00:08:31,258 --> 00:08:32,159
You actually end up with something

165
00:08:32,179 --> 00:08:34,941
that's kind of more negative than minus one.

166
00:08:35,642 --> 00:08:36,643
That's something you don't want.

167
00:08:38,345 --> 00:08:41,948
So in reality, you want to make a modification.

168
00:08:41,968 --> 00:08:44,850
We've got a little bit of a more complicated bit of code here

169
00:08:44,870 --> 00:08:46,372
which you can potentially look at later

170
00:08:46,732 --> 00:08:48,153
just to cope with those edge cases.

171
00:08:48,173 --> 00:08:49,355
And those edge cases are things

172
00:08:49,415 --> 00:08:50,776
that you might want to try and avoid.

173
00:08:52,941 --> 00:08:54,081
Okay, let's talk about slip angle.

174
00:08:54,942 --> 00:08:57,482
So slip angle is literally an angle,

175
00:08:58,723 --> 00:09:01,964
and it is the angle where the direction of the wheel

176
00:09:02,044 --> 00:09:03,504
is essentially sliding.

177
00:09:04,685 --> 00:09:06,986
It's basically as simple as that.

178
00:09:07,486 --> 00:09:09,646
So all you're working out is what that angle is

179
00:09:11,047 --> 00:09:13,908
in the two directions of the wheel velocity.

180
00:09:15,068 --> 00:09:17,489
And, you know, it's a pretty simple piece of code.

181
00:09:19,438 --> 00:09:20,258
We also have camber.

182
00:09:20,298 --> 00:09:22,059
So this is how much the wheel is rolling over

183
00:09:22,579 --> 00:09:25,200
relative to the ground.

184
00:09:26,000 --> 00:09:29,322
And once again, it's a relatively simple equation.

185
00:09:30,282 --> 00:09:33,463
And this is kind of a core piece of understanding

186
00:09:34,604 --> 00:09:36,325
how the wheel is relating to the ground patch.

187
00:09:38,786 --> 00:09:40,907
And finally, you have wheel load.

188
00:09:41,127 --> 00:09:44,167
Now in a sim case, the suspension

189
00:09:44,207 --> 00:09:45,368
is very high frequency.

190
00:09:45,388 --> 00:09:47,528
You're going to get a lot of detail in how

191
00:09:47,568 --> 00:09:49,409
that wheel load works.

192
00:09:49,949 --> 00:09:53,090
And the time model is going to react to that in a very

193
00:09:53,130 --> 00:09:53,810
dynamic way.

194
00:09:54,270 --> 00:09:58,651
At 30 hertz, that's not really very possible to get great

195
00:09:58,711 --> 00:09:59,452
results out of.

196
00:10:00,072 --> 00:10:00,572
And also,

197
00:10:02,012 --> 00:10:04,633
you basically don't want too much weight transfer.

198
00:10:05,233 --> 00:10:06,913
So to keep everything kind of realistic,

199
00:10:07,393 --> 00:10:10,174
what actually happens is the suspension force,

200
00:10:10,534 --> 00:10:12,574
at rest, when the thing isn't moving,

201
00:10:12,934 --> 00:10:15,655
you can blend that in to the suspension force

202
00:10:15,855 --> 00:10:17,855
with the dynamics, and you can end up

203
00:10:18,255 --> 00:10:19,595
with something that's scaled right,

204
00:10:20,035 --> 00:10:22,056
and can give you a wheel load that's kind of reliable.

205
00:10:24,376 --> 00:10:29,097
So if you want more grip, we have an issue.

206
00:10:31,666 --> 00:10:34,048
the grip can cause things to diverge.

207
00:10:34,068 --> 00:10:35,650
So if I've got a velocity of a wheel,

208
00:10:36,491 --> 00:10:37,832
and I put it through my tire model,

209
00:10:37,992 --> 00:10:39,294
and I end up with a big force,

210
00:10:40,415 --> 00:10:41,656
I'm gonna end up with something

211
00:10:41,676 --> 00:10:43,658
that actually ends up going the wrong way,

212
00:10:43,678 --> 00:10:46,481
and even faster than the way it started,

213
00:10:46,641 --> 00:10:47,682
which means a bigger force,

214
00:10:48,002 --> 00:10:49,384
which means it starts going the other way.

215
00:10:49,404 --> 00:10:51,105
You get, the model can diverge.

216
00:10:52,763 --> 00:10:57,810
And so the drag from the grip is flipping the sign of velocity is something you should never want

217
00:10:58,751 --> 00:11:01,615
It's actually one of the reasons why these things can be unstable

218
00:11:02,416 --> 00:11:05,000
So we're going to introduce this idea of a friction clamp

219
00:11:05,993 --> 00:11:09,015
The friction clamp is a way of essentially enforcing

220
00:11:09,195 --> 00:11:11,396
the fact that the friction is only gonna behave

221
00:11:11,416 --> 00:11:12,056
like a friction.

222
00:11:12,557 --> 00:11:14,418
It's not gonna go wrong.

223
00:11:14,818 --> 00:11:17,679
And actually, this principle is used all over the place.

224
00:11:17,719 --> 00:11:21,141
So for aerodynamics, when you have a V squared term

225
00:11:21,181 --> 00:11:23,823
and it's unbounded, having a friction clamp

226
00:11:23,863 --> 00:11:26,424
to prevent it from firing your thing backwards

227
00:11:26,484 --> 00:11:29,566
when you're going too fast is a pretty good thing to have.

228
00:11:30,400 --> 00:11:37,827
The danger here is that the mass in this equation, so the kind of applicable mass you're trying to use,

229
00:11:39,048 --> 00:11:41,950
if you have more than one tire, which is pretty much every vehicle,

230
00:11:43,171 --> 00:11:48,455
you can't apply it all to the same mass, and so it's a little bit more complicated.

231
00:11:49,196 --> 00:11:52,197
But in a solver, so in an iterative solver,

232
00:11:52,237 --> 00:11:53,657
like a lot of the physics engines,

233
00:11:54,157 --> 00:11:56,877
this is essentially how they're doing their vehicle physics.

234
00:11:56,917 --> 00:11:59,278
They're taking the clamp and they're scaling down

235
00:11:59,358 --> 00:12:02,299
how much force you're gonna get out relative to that clamp,

236
00:12:02,919 --> 00:12:04,979
which keeps it always in the middle.

237
00:12:05,079 --> 00:12:07,500
But it has a downside in terms of,

238
00:12:08,140 --> 00:12:10,320
if you wanted any effects based on wheel spin,

239
00:12:10,480 --> 00:12:12,461
like losing grip because of wheel spin,

240
00:12:12,901 --> 00:12:14,021
it doesn't model that at all.

241
00:12:15,692 --> 00:12:18,574
So instead of doing that, what we're talking about

242
00:12:18,654 --> 00:12:21,115
is actually providing the friction clamping code,

243
00:12:22,336 --> 00:12:25,098
but introducing this idea of useful mass.

244
00:12:25,698 --> 00:12:27,579
So it goes back to this idea of wheel load.

245
00:12:27,979 --> 00:12:32,002
So if you have all of the wheels with the correct load

246
00:12:32,242 --> 00:12:33,363
and everything is stationary,

247
00:12:34,303 --> 00:12:37,325
then the relative mass that's gonna be

248
00:12:38,246 --> 00:12:39,226
relative to that wheel,

249
00:12:40,561 --> 00:12:42,823
The heuristic is that you end up with this wheel load

250
00:12:42,863 --> 00:12:45,045
divided by all those wheel loads.

251
00:12:45,625 --> 00:12:48,088
And that kind of gives you the ratio of the vehicle mass

252
00:12:48,148 --> 00:12:50,590
you should be representing by that one tire's

253
00:12:51,170 --> 00:12:51,731
friction clamp.

254
00:12:52,271 --> 00:12:54,173
Now it's not completely perfect,

255
00:12:54,733 --> 00:12:56,175
but it's a pretty good heuristic,

256
00:12:56,235 --> 00:13:00,098
and it works very, very well up to tiny, tiny velocities,

257
00:13:01,279 --> 00:13:04,542
and it's what I'm gonna be using for the rest of the talk.

258
00:13:07,312 --> 00:13:08,713
Okay, so longitudinal friction clamps.

259
00:13:08,733 --> 00:13:09,754
So there are different dimensions

260
00:13:09,794 --> 00:13:10,875
in which we need these clamps.

261
00:13:10,955 --> 00:13:12,856
The first one is the wheel sliding forwards,

262
00:13:13,617 --> 00:13:16,039
and we just want to prevent it from going back on itself

263
00:13:16,099 --> 00:13:17,440
in a completely linear sense.

264
00:13:18,300 --> 00:13:21,002
So we have this useful mass,

265
00:13:21,062 --> 00:13:23,484
and we're trying to prevent the forward force

266
00:13:23,504 --> 00:13:26,506
from being bigger than required to stop that wheel.

267
00:13:27,627 --> 00:13:29,008
The only complication here is the wheel

268
00:13:29,048 --> 00:13:31,730
is actually putting power in if it's got torque.

269
00:13:32,251 --> 00:13:34,572
So you want to take that into account as well,

270
00:13:34,592 --> 00:13:36,094
and that's what the second term here is.

271
00:13:37,223 --> 00:13:39,004
For the angular clamp, you're trying to prevent

272
00:13:39,024 --> 00:13:40,604
the wheel spinning the wrong way

273
00:13:40,624 --> 00:13:42,285
and changing the sign of the slip.

274
00:13:43,405 --> 00:13:47,367
And so your reaction force needs to not be too big itself.

275
00:13:48,207 --> 00:13:49,767
And that's a little bit more complicated.

276
00:13:49,787 --> 00:13:51,348
You're ending up trying to work out

277
00:13:51,408 --> 00:13:54,369
what the new velocity needs to be relative to the slip.

278
00:13:55,069 --> 00:13:57,870
And so the code is a little bit more complicated,

279
00:13:58,770 --> 00:14:02,251
but it ends up generating what the maximum force should be

280
00:14:02,331 --> 00:14:04,652
to prevent the wheel actually spinning the wrong way

281
00:14:04,732 --> 00:14:05,792
relative to the road speed.

282
00:14:08,462 --> 00:14:10,444
And the third thing is this lateral clamp.

283
00:14:12,085 --> 00:14:15,188
And likewise, you might think that was simple,

284
00:14:16,749 --> 00:14:19,432
but it's just the mass going sideways.

285
00:14:20,012 --> 00:14:23,695
But you've gotta worry about the angular considerations.

286
00:14:23,755 --> 00:14:25,497
And theoretically, longitudinal clamps

287
00:14:25,517 --> 00:14:26,418
should do the same thing.

288
00:14:26,778 --> 00:14:28,199
I'm not gonna get you to read this code,

289
00:14:28,239 --> 00:14:30,381
but essentially it's taking into account the inertia

290
00:14:30,901 --> 00:14:33,163
and not just the linear force.

291
00:14:34,908 --> 00:14:37,470
So once your programmer has sorted out the friction clamps,

292
00:14:38,490 --> 00:14:40,351
let's take a look at what it does.

293
00:14:40,371 --> 00:14:41,972
So this is with the friction clamp on.

294
00:14:43,433 --> 00:14:44,573
The car's gonna accelerate.

295
00:14:44,613 --> 00:14:45,654
You may see the curves,

296
00:14:46,655 --> 00:14:49,296
and you can see that the markers on the curves are smooth,

297
00:14:49,836 --> 00:14:52,738
and they're not jumping around, and there's no jitter.

298
00:14:53,735 --> 00:14:56,257
Whereas if I show you with the clamp off,

299
00:14:56,958 --> 00:14:59,381
you should be able to see that the actual markers,

300
00:14:59,601 --> 00:15:02,845
as the car drives away, the car is shaking

301
00:15:02,885 --> 00:15:04,687
and so is the values.

302
00:15:04,707 --> 00:15:05,988
They're jittering all over the place

303
00:15:06,088 --> 00:15:07,810
because they're not getting clamped

304
00:15:07,830 --> 00:15:08,971
and you're getting this divergence.

305
00:15:09,972 --> 00:15:11,634
Obviously you don't want this in your game.

306
00:15:14,005 --> 00:15:15,426
So once you've got your clamps in place,

307
00:15:15,946 --> 00:15:18,608
now you can turn up the friction as much as you like,

308
00:15:18,848 --> 00:15:20,109
because you're never gonna break it.

309
00:15:20,790 --> 00:15:23,192
Your designers can go absolutely wild,

310
00:15:23,252 --> 00:15:24,192
they can do whatever they like.

311
00:15:25,854 --> 00:15:28,315
But if you really want to set things up

312
00:15:28,355 --> 00:15:30,217
in a way that is controllable,

313
00:15:30,917 --> 00:15:32,639
without having to record real tire data,

314
00:15:33,119 --> 00:15:35,401
you really wanna be able to find the right friction curves

315
00:15:35,541 --> 00:15:36,461
for your game.

316
00:15:37,782 --> 00:15:40,384
So we actually literally draw the friction curves

317
00:15:40,424 --> 00:15:42,446
in the spline tool, as you can see.

318
00:15:44,345 --> 00:15:46,146
And we have like a three phase model.

319
00:15:46,726 --> 00:15:54,269
So any of the curves you end up with zero relative to a peak

320
00:15:54,749 --> 00:15:56,810
and then you saturate out at the far end.

321
00:15:58,110 --> 00:15:59,270
And the reason why we do this,

322
00:15:59,290 --> 00:16:01,531
so the curve can have as many points as you like.

323
00:16:02,052 --> 00:16:04,853
The difficulty is that for the working out

324
00:16:04,893 --> 00:16:07,554
what the curves in each direction need to do,

325
00:16:09,314 --> 00:16:11,076
in a more complicated model,

326
00:16:11,116 --> 00:16:12,557
you end up with these complicated

327
00:16:12,617 --> 00:16:16,480
mathematical relationships between these different parameters

328
00:16:17,001 --> 00:16:18,362
and we're trying to simplify that down

329
00:16:18,422 --> 00:16:20,504
to something that ends up being only a few graphs.

330
00:16:21,284 --> 00:16:25,208
So this is possibly the most difficult part of the talk,

331
00:16:26,449 --> 00:16:28,230
but essentially, if you're talking about

332
00:16:28,450 --> 00:16:30,132
the force of which you're going forwards,

333
00:16:31,053 --> 00:16:32,614
so this is about forward force here.

334
00:16:34,335 --> 00:16:36,697
If you are not slipping sideways at all,

335
00:16:37,600 --> 00:16:40,462
then when you accelerate, you're gonna get a certain curve.

336
00:16:41,522 --> 00:16:43,363
And when you brake, you're gonna get a certain curve.

337
00:16:44,504 --> 00:16:47,685
But when you're sliding sideways and you want to go forwards,

338
00:16:48,105 --> 00:16:50,527
you may get more wheel spin,

339
00:16:50,547 --> 00:16:53,468
so you're reducing the shape of the curve.

340
00:16:54,268 --> 00:16:58,410
And it's something that lets you have things like donutting.

341
00:16:58,610 --> 00:17:00,211
So if you want to donut,

342
00:17:00,431 --> 00:17:04,233
then you want the side slip to actually let you wheel spin.

343
00:17:05,295 --> 00:17:06,756
And likewise the other way around,

344
00:17:07,056 --> 00:17:09,637
so now you're thinking about lateral force,

345
00:17:09,677 --> 00:17:13,218
so these curves are the force relative to the slip angle.

346
00:17:13,238 --> 00:17:15,879
You're gonna have five of them

347
00:17:16,600 --> 00:17:18,300
for each of the slips of the wheels.

348
00:17:18,880 --> 00:17:22,042
So this is how you can get effects like drifting naturally,

349
00:17:22,482 --> 00:17:25,403
where if you slam the handbrake on,

350
00:17:25,723 --> 00:17:27,083
this bottom graph kicks in

351
00:17:27,183 --> 00:17:30,225
because you're getting a negative slip angle.

352
00:17:31,448 --> 00:17:33,710
That's gonna mean you have low lateral grip.

353
00:17:34,291 --> 00:17:35,992
So you're gonna slide sideways,

354
00:17:36,592 --> 00:17:38,394
and then you're gonna pump the accelerator.

355
00:17:38,514 --> 00:17:39,975
So now you're in the saturated,

356
00:17:40,555 --> 00:17:42,376
you're now in saturated slip angle,

357
00:17:42,977 --> 00:17:45,178
and you're getting that wheel spin,

358
00:17:45,359 --> 00:17:48,721
which then gives you low lateral force as well.

359
00:17:49,201 --> 00:17:51,283
So the bottom graph and the top graph

360
00:17:51,723 --> 00:17:53,184
skip all the middle ground,

361
00:17:53,244 --> 00:17:55,106
and you get that change of behavior.

362
00:17:55,950 --> 00:17:58,734
So the relationship between the lateral graphs

363
00:17:58,814 --> 00:18:00,657
and the longitudinal graphs is something

364
00:18:00,697 --> 00:18:02,479
that can be a little counterintuitive,

365
00:18:02,840 --> 00:18:05,403
but it's still simpler than trying to modify

366
00:18:05,423 --> 00:18:07,206
a complicated mathematical function

367
00:18:07,607 --> 00:18:09,489
like you would have for a magic formula tire.

368
00:18:10,908 --> 00:18:12,970
It takes a little while to get your head around,

369
00:18:13,010 --> 00:18:15,312
but actually it's very powerful

370
00:18:15,572 --> 00:18:16,733
once you get your head around it.

371
00:18:17,374 --> 00:18:20,897
And it's really this that is the basis of the model.

372
00:18:21,377 --> 00:18:24,380
So if you head back between here,

373
00:18:24,760 --> 00:18:29,945
you really want to understand that the angle that you have

374
00:18:30,746 --> 00:18:32,007
and the steepness of the curve

375
00:18:32,487 --> 00:18:34,089
kind of represents the feel

376
00:18:34,689 --> 00:18:36,851
in a different way than you might expect.

377
00:18:37,452 --> 00:18:40,154
So the steepness of the curve is really how much grip you feel.

378
00:18:40,194 --> 00:18:43,717
It's not the actual height, it's the steepness that matters.

379
00:18:44,338 --> 00:18:47,701
And as you go up the curve, you're going to feel that it's grippy.

380
00:18:47,901 --> 00:18:51,384
And as it levels off, you're going to feel like actually it's sliding.

381
00:18:51,684 --> 00:18:56,489
And if it drops, it actually feels like the slide is getting faster.

382
00:18:57,588 --> 00:19:01,050
And so as you're going to gain intuition

383
00:19:01,090 --> 00:19:02,671
about what these curves feel like,

384
00:19:03,351 --> 00:19:06,413
you can really begin to play with when you get wheelspin,

385
00:19:06,493 --> 00:19:08,334
how does the car feel when it's turning,

386
00:19:08,794 --> 00:19:11,895
when you're drifting, how does it feel,

387
00:19:11,956 --> 00:19:13,196
and you can balance this out.

388
00:19:13,696 --> 00:19:16,478
Now in our engine, all of these curves are normalized.

389
00:19:16,558 --> 00:19:20,400
So actually in the final game, we only had pretty much

390
00:19:20,580 --> 00:19:24,402
two or three sets of tires for all vehicles

391
00:19:24,482 --> 00:19:25,082
in the whole game.

392
00:19:26,363 --> 00:19:28,445
because they basically did the right things

393
00:19:28,705 --> 00:19:30,947
and it meant that we only had to set up

394
00:19:30,967 --> 00:19:34,150
the actual grip value themselves.

395
00:19:34,190 --> 00:19:35,871
So I'm gonna move on to that in a second.

396
00:19:36,411 --> 00:19:38,713
So the actual grip, which was authored

397
00:19:39,054 --> 00:19:40,395
for the front and rear wheels,

398
00:19:40,795 --> 00:19:42,556
was just essentially a value

399
00:19:43,137 --> 00:19:45,359
and we were trying to balance the front and rear grip.

400
00:19:46,039 --> 00:19:47,861
And that was multiplied by this graph,

401
00:19:47,901 --> 00:19:49,763
this set of graphs that I mentioned earlier.

402
00:19:49,783 --> 00:19:52,786
Obviously multiplied by the wheel load,

403
00:19:53,166 --> 00:19:54,568
so it's scaled correctly.

404
00:19:55,428 --> 00:19:58,111
And then we multiplied the time step to get the impulse.

405
00:20:00,593 --> 00:20:02,615
Once you've got to basically a grip level

406
00:20:03,036 --> 00:20:04,157
multiplied by this graph,

407
00:20:04,737 --> 00:20:05,558
multiplied by the wheel load,

408
00:20:05,658 --> 00:20:07,080
multiplied by the time step,

409
00:20:07,440 --> 00:20:10,663
you really have quite a simple equation of these forces.

410
00:20:12,547 --> 00:20:14,327
But, and here's a big thing,

411
00:20:14,467 --> 00:20:16,088
if you want something to be believable

412
00:20:16,168 --> 00:20:17,309
and you turn the grip up,

413
00:20:17,869 --> 00:20:19,390
all that's gonna happen is your car

414
00:20:19,430 --> 00:20:22,391
is suddenly gonna wallow and roll and do horrible things.

415
00:20:22,891 --> 00:20:25,633
Now you can add kind of anti-damp,

416
00:20:26,213 --> 00:20:28,534
like suspension and stiffen the suspension,

417
00:20:28,554 --> 00:20:29,094
all those things.

418
00:20:29,434 --> 00:20:31,755
But if you want those values to be vaguely realistic,

419
00:20:32,916 --> 00:20:34,337
you actually, the best thing to do

420
00:20:34,757 --> 00:20:37,898
is to modify how you're gonna apply the force to begin with.

421
00:20:38,679 --> 00:20:42,681
So if you reduce the pitch and roll components of the forces you were going to apply to the wheel,

422
00:20:43,362 --> 00:20:47,065
you can really turn this down in a very controllable way. You don't have to redo your

423
00:20:47,105 --> 00:20:52,629
suspension setup. So in this case, we just decompose the impulse at a point back into

424
00:20:52,649 --> 00:20:58,453
the linear angular components, and then we just multiply by linear factor into the roll and pitch.

425
00:20:59,273 --> 00:21:02,756
And that just made it so the suspension setup could be completely

426
00:21:03,116 --> 00:21:06,498
kind of realistic, and the extra grip didn't cause too many problems.

427
00:21:09,477 --> 00:21:12,840
Okay, so just as a high-level summary.

428
00:21:12,860 --> 00:21:14,281
So we've got some input parameters.

429
00:21:14,301 --> 00:21:15,983
We've got slip ratio and slip angle.

430
00:21:17,284 --> 00:21:19,206
We're turning the grip up higher than real,

431
00:21:19,646 --> 00:21:22,849
and we're preventing it from getting too big

432
00:21:22,909 --> 00:21:23,790
with the friction clamps.

433
00:21:25,211 --> 00:21:28,294
And so that element of the friction clamps

434
00:21:28,675 --> 00:21:32,138
is keeping us physically stable, whatever graph I draw.

435
00:21:33,844 --> 00:21:36,406
And then we can draw friction curves.

436
00:21:36,906 --> 00:21:38,847
And actually you have tremendous amount of freedom here.

437
00:21:39,107 --> 00:21:40,648
So once you've got the clamp in place,

438
00:21:41,148 --> 00:21:42,209
you have a lot of freedom.

439
00:21:42,949 --> 00:21:46,271
And for our planes and non-cars,

440
00:21:46,711 --> 00:21:50,273
we actually just had a linear ramp and a saturation.

441
00:21:50,413 --> 00:21:54,215
And we didn't have this complicated wheel spin effect.

442
00:21:54,576 --> 00:21:56,417
Because the clamps meant that whatever happened,

443
00:21:56,537 --> 00:21:59,578
we would stay physically believable and it would be fine.

444
00:22:01,553 --> 00:22:04,475
If you then have too much grip, you can scale down the pitch and roll components.

445
00:22:05,256 --> 00:22:09,480
And then you get to the final step, which is like driver assist drift control.

446
00:22:10,081 --> 00:22:13,263
And that actually goes back to that kind of kart racer type physics.

447
00:22:13,283 --> 00:22:18,708
You're really controlling the car from the basis of a rigid body and the forces.

448
00:22:19,029 --> 00:22:21,691
And there are many, many ways of doing this.

449
00:22:22,693 --> 00:22:26,275
And it really is a talk in its own right.

450
00:22:26,415 --> 00:22:28,496
And I'm not going to dive too deep into it,

451
00:22:28,536 --> 00:22:29,796
although if people have questions,

452
00:22:30,016 --> 00:22:31,997
obviously that's important.

453
00:22:33,658 --> 00:22:35,679
But the real thing is if you come

454
00:22:35,739 --> 00:22:37,280
from that kind of kart racer feel,

455
00:22:37,420 --> 00:22:39,341
actually you'll be very familiar with the kinds of forces

456
00:22:39,381 --> 00:22:40,301
you might want to do here.

457
00:22:40,802 --> 00:22:43,122
The way that we triggered drift is either by,

458
00:22:43,142 --> 00:22:46,644
obviously, button press and control,

459
00:22:47,024 --> 00:22:48,504
but you can also trigger it by,

460
00:22:49,424 --> 00:22:51,985
if the slip angle of the rear wheels gets beyond a limit,

461
00:22:52,726 --> 00:22:54,506
you can then get into that kind of drift phase.

462
00:22:54,566 --> 00:22:55,887
You start controlling the vehicle,

463
00:22:56,587 --> 00:22:58,648
the whole vehicle stage and not about the tires.

464
00:22:59,448 --> 00:23:02,109
So, in our model, we've actually ended up using

465
00:23:02,789 --> 00:23:05,450
all parts of the spectrum of that kind of

466
00:23:05,490 --> 00:23:06,770
kart racer handling for drift,

467
00:23:07,510 --> 00:23:08,151
the kind of,

468
00:23:10,187 --> 00:23:12,989
physics SDK style friction clamp model

469
00:23:13,089 --> 00:23:15,070
for keeping us inbound,

470
00:23:15,711 --> 00:23:19,934
and then a slightly semi-realistic tire model

471
00:23:20,674 --> 00:23:24,937
modified heading off in the more sim direction.

472
00:23:25,898 --> 00:23:27,019
And all these things come together,

473
00:23:27,039 --> 00:23:28,080
means that we can run at 30 hertz.

474
00:23:29,232 --> 00:23:32,996
You can go around a corner very fast, unrealistically fast.

475
00:23:33,596 --> 00:23:34,918
You can control in a drift,

476
00:23:35,518 --> 00:23:37,140
and you can really bring these things together.

477
00:23:37,880 --> 00:23:41,504
And so the kind of final point I'd like to make

478
00:23:42,064 --> 00:23:44,827
before I would kind of go off this topic.

479
00:23:45,580 --> 00:23:48,302
is that the people who are building indie games

480
00:23:48,362 --> 00:23:50,685
with the kind of kart racer mechanics,

481
00:23:51,405 --> 00:23:53,027
if you want to go a bit more physical

482
00:23:53,067 --> 00:23:54,208
and you want to add tires,

483
00:23:54,708 --> 00:23:57,130
the next step along that path

484
00:23:57,271 --> 00:24:00,594
would be to get your friction clamps right for the wheels

485
00:24:01,074 --> 00:24:03,356
and then you can do whatever you like with your tire model.

486
00:24:04,457 --> 00:24:07,300
It isn't that hard to move from one to the other.

487
00:24:08,301 --> 00:24:10,883
So, that's my talk.

488
00:24:11,384 --> 00:24:11,784
Thank you very much.

489
00:24:21,403 --> 00:24:21,988
Any questions?

490
00:24:27,612 --> 00:24:28,333
Hello.

491
00:24:28,553 --> 00:24:29,393
Thank you for the talk.

492
00:24:30,173 --> 00:24:32,515
My question is, how did you decide

493
00:24:32,655 --> 00:24:34,836
where to place the tires on the ground?

494
00:24:34,936 --> 00:24:37,797
And how did that interact with your calculation

495
00:24:37,837 --> 00:24:38,898
of suspension forces?

496
00:24:39,458 --> 00:24:39,678
Sure.

497
00:24:40,098 --> 00:24:41,799
So the question was, how did we decide

498
00:24:41,839 --> 00:24:43,180
where to put the tires on the ground

499
00:24:43,280 --> 00:24:46,261
and how does that interact with suspension forces?

500
00:24:47,041 --> 00:24:50,123
So we did line tests to place the wheel on the ground.

501
00:24:50,963 --> 00:24:53,584
And then the suspension force held the vehicle

502
00:24:54,645 --> 00:24:55,886
off the ground.

503
00:24:57,467 --> 00:25:01,170
It's very similar to lots of simplistic behaviors.

504
00:25:01,950 --> 00:25:02,851
The line tests were linear,

505
00:25:03,151 --> 00:25:05,413
so we weren't doing anything sophisticated.

506
00:25:05,473 --> 00:25:06,674
Like if you wanted to model

507
00:25:07,115 --> 00:25:09,196
more sophisticated suspension geometry,

508
00:25:09,236 --> 00:25:12,119
you would actually put it on a circle

509
00:25:13,320 --> 00:25:14,641
to change how the roll center worked.

510
00:25:15,161 --> 00:25:17,603
But we kept it very simple, just had line tests.

511
00:25:17,903 --> 00:25:19,405
So that's how we placed the wheel.

512
00:25:19,885 --> 00:25:20,726
Quick follow up then.

513
00:25:20,846 --> 00:25:23,528
If the brie flew under your line test, what would you do?

514
00:25:24,279 --> 00:25:25,679
If debris fell under the line test?

515
00:25:25,739 --> 00:25:27,100
Yeah, would that push the car up?

516
00:25:27,761 --> 00:25:31,023
It depended, so we have a physics model

517
00:25:31,063 --> 00:25:34,065
where you have layers, and so the collision

518
00:25:34,085 --> 00:25:36,386
with the ray cast depends on whether something

519
00:25:36,427 --> 00:25:38,388
was tagged to be in the layer or not.

520
00:25:38,548 --> 00:25:41,870
So in the case of debris, it depended on which layer

521
00:25:41,910 --> 00:25:43,371
that debris was, if it was big enough,

522
00:25:43,971 --> 00:25:46,173
then yes, absolutely, it would climb up on it.

523
00:25:46,213 --> 00:25:48,955
But for very small things, we could not put them

524
00:25:48,975 --> 00:25:50,496
in that physics layer, and so they'd be ignored

525
00:25:50,516 --> 00:25:51,116
by the line test.

526
00:25:51,757 --> 00:25:52,317
Okay, thank you.

527
00:25:56,436 --> 00:25:56,856
Anybody else?

528
00:26:00,720 --> 00:26:05,865
Hi, I was wondering, I thought that Just Cause went through the Havok engine.

529
00:26:06,025 --> 00:26:08,968
Once you've done the calculations for the forces due to the tires,

530
00:26:09,028 --> 00:26:12,711
how did you integrate that back into Havok or did you have your own solver?

531
00:26:13,650 --> 00:26:19,071
So we used Havoc to, there's an API on Havoc to apply forces.

532
00:26:20,151 --> 00:26:22,372
So once we calculated what force we wanted to apply,

533
00:26:22,412 --> 00:26:22,972
we applied it.

534
00:26:24,412 --> 00:26:27,353
The solve happened in the Havoc solver.

535
00:26:27,833 --> 00:26:28,473
Great, so thanks.

536
00:26:28,493 --> 00:26:28,793
Okay.

537
00:26:28,813 --> 00:26:37,034
Hey, yeah, kind of related to the first question.

538
00:26:37,054 --> 00:26:39,495
Since you did line tests down, you said,

539
00:26:39,515 --> 00:26:41,315
I was just curious, because I've hit this problem,

540
00:26:42,181 --> 00:26:44,362
Do you have any issues with going over a curb

541
00:26:44,482 --> 00:26:50,125
and having it immediately changes the suspension?

542
00:26:50,185 --> 00:26:51,806
And I pretty much have things where cars fly

543
00:26:51,826 --> 00:26:52,506
when I hit curbs.

544
00:26:52,526 --> 00:26:53,947
Did you do anything to address that

545
00:26:53,967 --> 00:26:55,107
or did you even have that issue?

546
00:26:55,587 --> 00:26:58,949
Yeah, so the question is about line tests

547
00:26:59,049 --> 00:27:01,550
and the compression of a wheel based on a time step

548
00:27:02,471 --> 00:27:05,672
finding a surface that wasn't there before, right?

549
00:27:05,752 --> 00:27:07,453
Exactly, yeah, I figured you'd get it

550
00:27:07,513 --> 00:27:08,413
and you can rephrase it.

551
00:27:08,573 --> 00:27:09,874
Yeah, yeah, yeah.

552
00:27:10,014 --> 00:27:12,015
So there's two issues here.

553
00:27:12,035 --> 00:27:16,697
So one is being loads kind of insensitive,

554
00:27:16,957 --> 00:27:19,639
we didn't get side forces based on that, right?

555
00:27:19,699 --> 00:27:22,420
So the only issue was the suspension force itself.

556
00:27:23,801 --> 00:27:25,321
So we didn't suddenly gain grip

557
00:27:25,401 --> 00:27:28,283
just because we hit a curb.

558
00:27:29,744 --> 00:27:34,106
Essentially, the idea is you're going to have to damp those forces.

559
00:27:35,487 --> 00:27:37,128
And there are multiple ways of doing that.

560
00:27:38,409 --> 00:27:40,950
We took a pretty basic approach to that.

561
00:27:41,651 --> 00:27:45,253
And you can tell when you've moved the suspension a long way in one frame

562
00:27:45,693 --> 00:27:47,434
that you need to damp.

563
00:27:47,555 --> 00:27:48,355
Gotcha. Right. Thanks.

564
00:27:53,138 --> 00:27:53,258
Cool.

565
00:27:53,278 --> 00:27:55,820
Okay. Thank you very much.

