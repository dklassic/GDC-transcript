1
00:00:05,840 --> 00:00:06,800
Well, hello, everybody.

2
00:00:08,280 --> 00:00:11,261
My name is Marius Quiero, and today I will be talking about

3
00:00:11,341 --> 00:00:12,141
ranking systems.

4
00:00:12,761 --> 00:00:14,682
Let me give you a little bit about my background first.

5
00:00:15,382 --> 00:00:18,002
I'm originally from Spain, in case you're wondering where

6
00:00:18,022 --> 00:00:18,802
this accent comes from.

7
00:00:19,943 --> 00:00:22,283
I'm very competitive.

8
00:00:22,543 --> 00:00:25,744
You may have heard of the importance is to participate.

9
00:00:25,884 --> 00:00:27,444
No, the importance is to win.

10
00:00:28,184 --> 00:00:28,664
Don't forget.

11
00:00:29,505 --> 00:00:31,785
If you're like me, you probably understand why ranking

12
00:00:31,805 --> 00:00:32,885
systems are so important.

13
00:00:34,589 --> 00:00:39,033
I, back in the day, I practiced a lot of competitive sports,

14
00:00:39,073 --> 00:00:41,174
in particular rowing, you know, this racing with boats.

15
00:00:41,715 --> 00:00:42,475
I was pretty good at it.

16
00:00:42,896 --> 00:00:45,618
I also played some online games, like StarCraft.

17
00:00:45,938 --> 00:00:46,939
I was pretty terrible at it.

18
00:00:49,140 --> 00:00:50,741
Multitasking is not my thing, seems like.

19
00:00:51,962 --> 00:00:53,524
Then moved to the US, started working

20
00:00:53,584 --> 00:00:54,764
on the major leagues gaming,

21
00:00:54,925 --> 00:00:57,386
where I got experience on eSports.

22
00:00:58,287 --> 00:01:00,329
Later worked on games for about five years.

23
00:01:01,600 --> 00:01:05,621
and in the lab and now they sleep here in San Francisco and I work for twitch

24
00:01:05,641 --> 00:01:10,463
interactive you know the cool video platform but I didn't really get to dig

25
00:01:10,503 --> 00:01:16,665
deep into ranking systems until I was working in one of my side projects which

26
00:01:16,785 --> 00:01:22,027
is jump craft this is like a tiny experiment think of it as a Mario maker

27
00:01:22,247 --> 00:01:25,448
but with simple pixel graphics which are super cool

28
00:01:27,248 --> 00:01:31,830
In this game, players make their own maps, which are pixelated and just draw around.

29
00:01:32,390 --> 00:01:38,192
But then, the system will estimate what is the actual difficulty of the map.

30
00:01:38,212 --> 00:01:40,973
The system knows if the map is hard or easy.

31
00:01:41,493 --> 00:01:41,893
How does it?

32
00:01:42,434 --> 00:01:45,715
Well, it has a ranking where it will match players versus map.

33
00:01:45,835 --> 00:01:48,176
The player gets to play a random map.

34
00:01:48,436 --> 00:01:50,316
If the player is able to get to the end, the player wins.

35
00:01:50,817 --> 00:01:52,538
If the player dies before getting to the end,

36
00:01:53,018 --> 00:01:55,600
then it has three lives, but if he loses all the lives,

37
00:01:56,040 --> 00:01:57,481
then the player loses and the map wins.

38
00:01:58,222 --> 00:02:00,304
For the ranking system, they are both the same thing.

39
00:02:02,205 --> 00:02:05,507
I did it using a true skill implementation in Ruby,

40
00:02:05,547 --> 00:02:08,169
which is what I was coding, and for the system,

41
00:02:08,189 --> 00:02:10,571
there is only one rank, but I saw different ranks

42
00:02:10,611 --> 00:02:11,552
for both players and maps.

43
00:02:12,252 --> 00:02:16,075
So, if a map, if many players keep dying in the same map,

44
00:02:16,115 --> 00:02:18,396
the map slowly goes up the ladder of difficulty.

45
00:02:21,518 --> 00:02:25,119
This talk is going to be about 30 minutes,

46
00:02:25,339 --> 00:02:28,799
and I'm going to talk about Elo, system, true skill,

47
00:02:29,559 --> 00:02:31,980
building on top of Elo's ideas, and at the end,

48
00:02:32,020 --> 00:02:33,600
practical considerations to build your own.

49
00:02:34,200 --> 00:02:37,461
I'm afraid I'm not going to give the super awesome answer

50
00:02:37,521 --> 00:02:40,522
to all your problems with Elo as a player or as a designer.

51
00:02:41,242 --> 00:02:43,602
If any, I'll probably raise even more questions in your head.

52
00:02:43,782 --> 00:02:45,042
Hopefully, one of those questions

53
00:02:45,062 --> 00:02:47,083
leads to an answer that solves your specific problem.

54
00:02:48,630 --> 00:02:52,353
Let's start with the first example, the Elo rating system.

55
00:02:52,974 --> 00:02:56,337
And I'll start by introducing the man who started it all.

56
00:02:57,078 --> 00:03:00,621
He deserves no less than this amazing confetti animation,

57
00:03:01,402 --> 00:03:02,143
Arpa Zelo.

58
00:03:03,664 --> 00:03:04,405
Animation is awesome.

59
00:03:05,126 --> 00:03:09,209
Well, Arpa Zelo, born Hungarian, came to the United States

60
00:03:09,250 --> 00:03:11,372
and was a physics professor and master chess player.

61
00:03:12,369 --> 00:03:17,212
While playing chess, he identified problems with a previous ranking system called Harness,

62
00:03:17,632 --> 00:03:22,475
which was a little bit subjective in some sense and depended on which tournaments you

63
00:03:22,495 --> 00:03:23,056
play and how.

64
00:03:23,096 --> 00:03:28,019
So he proposed a new system with more sound statistical basis called the Elo rating system.

65
00:03:28,139 --> 00:03:29,740
I will put my name as well on it.

66
00:03:30,160 --> 00:03:31,181
I will call it the Mario system.

67
00:03:32,585 --> 00:03:35,207
Well, that system was adopted by the World Chess Federation

68
00:03:35,247 --> 00:03:37,389
quickly in the 70s, and he ended up

69
00:03:37,409 --> 00:03:39,691
publishing the rating of chess players past and present

70
00:03:39,771 --> 00:03:42,373
in the 78, which you all can read if you want.

71
00:03:43,294 --> 00:03:43,894
Oh, fun fact.

72
00:03:44,354 --> 00:03:46,016
Up until the mid-80s, Elo himself

73
00:03:46,236 --> 00:03:49,639
was running all the calculations for all the players manually.

74
00:03:50,359 --> 00:03:51,901
It wasn't that hard, because back then there were, like,

75
00:03:52,021 --> 00:03:53,062
no more than 2,000 players.

76
00:03:53,102 --> 00:03:54,463
But still, thanks, Elo.

77
00:03:54,943 --> 00:03:58,026
Later, computers took over, as they will with all of us

78
00:03:58,146 --> 00:03:58,586
at some point.

79
00:03:59,187 --> 00:03:59,507
Ha ha.

80
00:04:01,288 --> 00:04:01,829
So Elo.

81
00:04:02,946 --> 00:04:04,667
System is all based on

82
00:04:05,787 --> 00:04:06,728
the normal distribution

83
00:04:07,328 --> 00:04:12,990
Assuming that chess players performance are at random distributed variable. Oh

84
00:04:13,110 --> 00:04:16,212
In the eyes of Elo, you are all slimes

85
00:04:18,192 --> 00:04:20,553
Yes, you're all slime people everybody yeah

86
00:04:22,326 --> 00:04:26,567
Which, just like a slime, your skill is not here, not there, it's somewhere in between.

87
00:04:27,368 --> 00:04:30,189
And the system is not really sure where it is, but it has some idea.

88
00:04:30,369 --> 00:04:31,589
It's more or less here in the center.

89
00:04:32,229 --> 00:04:34,570
Now if you are more to the right, you are a better slime.

90
00:04:34,690 --> 00:04:36,811
You are more to the left, you are a worse slime.

91
00:04:37,371 --> 00:04:38,032
Sorry blue slime.

92
00:04:40,585 --> 00:04:43,726
The formula, and now think that the formula in Elo

93
00:04:43,746 --> 00:04:45,247
is for one versus one players because that's

94
00:04:45,267 --> 00:04:46,068
the only thing it supports.

95
00:04:46,888 --> 00:04:48,789
And nowadays, there are many different ways

96
00:04:48,849 --> 00:04:51,631
of approaching this problem, but this is the simplest

97
00:04:51,671 --> 00:04:53,332
possible way, so let's start from here.

98
00:04:54,252 --> 00:04:55,913
After a given match, when two players play,

99
00:04:56,554 --> 00:04:57,894
there will be a transfer of points

100
00:04:58,595 --> 00:05:01,837
from the player that lost into the player that wins.

101
00:05:02,557 --> 00:05:04,918
This rating difference is the score,

102
00:05:05,058 --> 00:05:06,799
which is a number, is zero if you lose,

103
00:05:07,460 --> 00:05:08,020
one for the win.

104
00:05:09,171 --> 00:05:12,032
minus the expected. And the expected is from 0 to 1, the probability

105
00:05:12,812 --> 00:05:17,054
that the system is expecting to happen before. So it's what is expected

106
00:05:18,054 --> 00:05:21,596
plus what happened minus what was expected to happen before. And then

107
00:05:21,616 --> 00:05:25,997
multiply by the k factor, which is just a random number. It's not a random number, sorry.

108
00:05:26,017 --> 00:05:29,979
It's just a number. It's a constant that you have to assign to the system.

109
00:05:30,339 --> 00:05:33,480
This is just because without the k factor, you will always be transferring points

110
00:05:33,700 --> 00:05:36,901
between 0 and 1. So we'd like transfer points from...

111
00:05:37,962 --> 00:05:39,963
red, green, 17, whatever you want,

112
00:05:39,983 --> 00:05:41,644
so you make a bigger or slower k-factor.

113
00:05:42,264 --> 00:05:44,445
It's also used for adjusting the speed of transfer.

114
00:05:44,485 --> 00:05:46,466
So inside the same ladder, you can make

115
00:05:46,947 --> 00:05:48,928
that lower players have a higher k-factor,

116
00:05:49,488 --> 00:05:53,150
and then towards the upper parts of the ranking,

117
00:05:53,570 --> 00:05:54,771
a smaller k-factor.

118
00:05:54,951 --> 00:05:57,032
But think about it as the updated speed.

119
00:05:58,513 --> 00:06:00,794
Much of the trick here is in figuring the expected,

120
00:06:01,154 --> 00:06:02,255
and that is what the system is doing,

121
00:06:02,315 --> 00:06:03,656
is predicting what will happen,

122
00:06:04,056 --> 00:06:06,137
then adjusting based on what actually happened.

123
00:06:07,342 --> 00:06:09,926
The original ELO system assumes this formula.

124
00:06:10,407 --> 00:06:11,568
What is that formula came from?

125
00:06:11,608 --> 00:06:15,053
Well, it came from the union of these lines,

126
00:06:15,073 --> 00:06:16,555
where the two lines touch together.

127
00:06:16,575 --> 00:06:18,258
There's an area there that you can integrate.

128
00:06:18,859 --> 00:06:20,481
And you can know what is the actual probability

129
00:06:20,521 --> 00:06:22,704
that player E is actually better than player B.

130
00:06:24,220 --> 00:06:27,322
Elo suggested like a shape for, like the same shape

131
00:06:27,862 --> 00:06:28,782
for the slime for everybody,

132
00:06:28,902 --> 00:06:31,303
assuming some standard deviation,

133
00:06:31,423 --> 00:06:34,644
assuming that the chess players were,

134
00:06:34,724 --> 00:06:37,245
the performance were under a normal distribution,

135
00:06:37,285 --> 00:06:38,706
but you could use any other distribution,

136
00:06:38,726 --> 00:06:39,766
you will get a different formula.

137
00:06:40,207 --> 00:06:40,747
At the end of the day,

138
00:06:41,367 --> 00:06:43,788
you get that the expected probability of player A

139
00:06:44,488 --> 00:06:47,890
of winning is based on the difference only

140
00:06:47,930 --> 00:06:48,930
between player A and B.

141
00:06:49,930 --> 00:06:50,451
As an example.

142
00:06:51,555 --> 00:06:55,219
Well, this is the kind of numbers you will get with this formula.

143
00:06:55,499 --> 00:06:58,923
Let's assume player E is 0 points better than player B,

144
00:06:59,443 --> 00:07:01,525
he will have a 50% chance of winning, which is obvious.

145
00:07:02,106 --> 00:07:06,330
If he has 100 points, and this all comes from that 400 number in there,

146
00:07:06,871 --> 00:07:09,894
you can use a different scale, but originally, as you know in chess,

147
00:07:10,375 --> 00:07:10,935
it goes from...

148
00:07:12,917 --> 00:07:14,618
1500 to 2000, you can use a different scale.

149
00:07:14,758 --> 00:07:17,741
But with this scale, 100 points will give you

150
00:07:17,941 --> 00:07:20,963
64% chance of winning, 200 give you 76, and so on.

151
00:07:21,123 --> 00:07:22,124
This is what the system predicts.

152
00:07:22,144 --> 00:07:24,566
Let's see an example with Bob and Alice.

153
00:07:25,246 --> 00:07:27,088
Bob is a new player, he has 1500 points.

154
00:07:27,228 --> 00:07:28,869
Alice is way more experienced and has 1900.

155
00:07:30,212 --> 00:07:33,033
The system believes that the expected probability of Bob

156
00:07:33,073 --> 00:07:37,474
winning is 9%, and the least is the other part, 91%.

157
00:07:38,154 --> 00:07:40,095
Well, what happens using a k-factor of 32,

158
00:07:40,715 --> 00:07:43,876
and you would use either 10, 30, depending on the case,

159
00:07:45,056 --> 00:07:46,897
this is the amount of points that you will be transferring.

160
00:07:47,517 --> 00:07:49,658
If Bob wins, he will get 29 points,

161
00:07:49,698 --> 00:07:51,538
because that was a big surprise for the system.

162
00:07:52,466 --> 00:07:54,487
If Bob loses, he will only lose three points.

163
00:07:54,727 --> 00:07:56,788
And this means that the system is self-adjusting.

164
00:07:57,148 --> 00:07:59,409
In theory, you can match anybody of different difficulties,

165
00:07:59,769 --> 00:08:01,310
and the amount of points will be transferred

166
00:08:01,350 --> 00:08:03,370
based on the actual difference of a score.

167
00:08:04,231 --> 00:08:06,892
In practice, we'll see later, it's not that easy.

168
00:08:07,052 --> 00:08:08,232
Usually you wanna match players

169
00:08:08,252 --> 00:08:09,793
that are actually closer to each other

170
00:08:10,653 --> 00:08:11,914
to avoid those outliers.

171
00:08:13,635 --> 00:08:16,856
A few comments on Elo, and we'll wrap up here,

172
00:08:17,596 --> 00:08:19,037
is a very well understood system.

173
00:08:19,868 --> 00:08:22,211
means that's an advantage, whatever you use it,

174
00:08:22,331 --> 00:08:24,694
other people will know to expect what happens with it.

175
00:08:25,255 --> 00:08:26,476
It only works for one versus one.

176
00:08:26,557 --> 00:08:27,578
It also means team versus team,

177
00:08:27,598 --> 00:08:29,340
but you can only track the team points,

178
00:08:29,480 --> 00:08:30,502
not every individual player,

179
00:08:30,962 --> 00:08:33,405
unless you do yourself some kind of distribution inside it.

180
00:08:34,366 --> 00:08:36,810
It's simple, but its simplicity is also great strength.

181
00:08:37,030 --> 00:08:38,151
It's still widely used nowadays.

182
00:08:39,352 --> 00:08:41,094
Also, if players understand how it works,

183
00:08:41,474 --> 00:08:43,475
and they can run their numbers in the calculator

184
00:08:43,495 --> 00:08:46,598
like Elo used to do himself, it also feels fair.

185
00:08:47,318 --> 00:08:49,860
The k-factor is sort of like an incognito there.

186
00:08:49,900 --> 00:08:51,681
You have to find out what is the good one for you.

187
00:08:52,041 --> 00:08:53,102
There are many, many different ways.

188
00:08:53,142 --> 00:08:54,143
That will be its own talk.

189
00:08:54,964 --> 00:08:57,265
And nowadays, there are many different implementations.

190
00:08:57,305 --> 00:09:01,048
Almost nobody uses exactly as originally stated.

191
00:09:01,128 --> 00:09:02,829
Because, obviously, we have more data.

192
00:09:03,290 --> 00:09:05,051
Even for chess, we have more data right now.

193
00:09:05,091 --> 00:09:06,392
But what is the actual standard deviation

194
00:09:06,412 --> 00:09:08,413
than what Elo assumed at the beginning?

195
00:09:09,809 --> 00:09:12,891
Also, new players can take on time to convert to the correct skill rating.

196
00:09:14,012 --> 00:09:18,495
This means that they need to play many, many games in order to get to something that reflects their actual skill.

197
00:09:20,557 --> 00:09:25,201
Let's move on into the next ranking system that I'm describing today, which is TrueSkill.

198
00:09:26,101 --> 00:09:29,444
I'm talking about TrueSkill specifically because it builds on top of the ideas of Elo.

199
00:09:32,043 --> 00:09:34,465
TrueSkill ranking system was developed by Microsoft Research,

200
00:09:35,045 --> 00:09:39,687
designed originally for allowing to have a more general system

201
00:09:39,887 --> 00:09:41,548
for Xbox Live games.

202
00:09:41,588 --> 00:09:44,290
I think the first one that went live implementing this

203
00:09:44,310 --> 00:09:45,570
was Halo 2 Online.

204
00:09:46,431 --> 00:09:48,672
In proof of open ideas.

205
00:09:49,372 --> 00:09:52,034
Well, I think Microsoft Research also did a terrible job.

206
00:09:52,394 --> 00:09:52,994
Terrible job.

207
00:09:53,494 --> 00:09:55,855
So they deserve amazing confetti animation.

208
00:09:56,056 --> 00:09:56,676
Yeah.

209
00:09:57,776 --> 00:09:58,237
This is awesome.

210
00:09:58,417 --> 00:09:59,998
My next talk, I'm going to use this animation

211
00:10:00,018 --> 00:10:00,738
for every single slide.

212
00:10:02,210 --> 00:10:03,051
It'll make it so much better.

213
00:10:04,811 --> 00:10:08,473
So the main difference, there are many differences

214
00:10:08,493 --> 00:10:12,634
with TrueSkill, I'll discuss a little later when

215
00:10:12,654 --> 00:10:13,294
compared with Yellow.

216
00:10:13,395 --> 00:10:15,135
But the main difference is that there are two variables now.

217
00:10:15,395 --> 00:10:17,016
One is a new, abbreviated skill.

218
00:10:18,355 --> 00:10:23,518
And that is pretty much what you'll have, like, count on the median, on the average

219
00:10:23,778 --> 00:10:29,621
of the standard deviation, on the average of the Gauss bell, or the Slime curve, Slime

220
00:10:29,641 --> 00:10:30,302
curve is much easier.

221
00:10:31,042 --> 00:10:33,424
And Sigma, which is the degree of uncertainty.

222
00:10:33,484 --> 00:10:38,106
So now you can model not only what is your belief on the player's skill, but also how

223
00:10:38,146 --> 00:10:38,807
much you believe it.

224
00:10:39,307 --> 00:10:41,548
Like, do you believe it's here with many uncertainty or not?

225
00:10:42,049 --> 00:10:44,370
So in the eyes of true skill, you're also Slimes.

226
00:10:46,438 --> 00:10:48,760
An easy way to explain this is that the new players' lines

227
00:10:48,800 --> 00:10:50,642
will be short and fat, like the blue one.

228
00:10:51,002 --> 00:10:53,364
And more advanced players will look more like a tall and thin

229
00:10:53,644 --> 00:10:56,246
lines, where the system is a lot more certain their skill

230
00:10:56,286 --> 00:10:57,928
actually belongs somewhere in that area.

231
00:11:00,430 --> 00:11:02,772
Now, if you have two variables, what do you show to the

232
00:11:02,792 --> 00:11:03,112
players?

233
00:11:03,773 --> 00:11:05,535
Can you tell players, like, well, this is your ranking,

234
00:11:05,575 --> 00:11:07,056
this is your new, and this is your sigma.

235
00:11:07,436 --> 00:11:09,018
Well, you've got to come out with a single number.

236
00:11:09,678 --> 00:11:13,101
TrueSkill suggests a very conservative rating of

237
00:11:14,267 --> 00:11:18,849
nu minus three times the sigma, which gets 98% coverage

238
00:11:18,989 --> 00:11:20,629
of the whole area of the curve.

239
00:11:21,810 --> 00:11:23,451
That is very conservative, meaning

240
00:11:23,491 --> 00:11:24,851
that the system actually believes

241
00:11:24,891 --> 00:11:26,492
that the actual skill of the player

242
00:11:26,652 --> 00:11:29,073
is 98% likely to be more than what you saw,

243
00:11:29,513 --> 00:11:32,154
which also means when you do updates, it's likely to go up,

244
00:11:32,995 --> 00:11:34,175
not likely to go down.

245
00:11:34,835 --> 00:11:36,776
This is just to improve the perception.

246
00:11:37,777 --> 00:11:44,503
Using sigmas and noos also allows the blue slime down there will show himself a rating of 0.

247
00:11:44,923 --> 00:11:50,428
So this is just a very good way to start players on the ranking when they see themselves with ranking 0,

248
00:11:51,369 --> 00:11:56,554
instead of in Elo where they start with 1500, which it feels like, where is the number coming from? At least for them.

249
00:11:58,380 --> 00:12:00,941
Let's see an example with the simplest cases.

250
00:12:01,541 --> 00:12:03,481
Simplest case, I mean, because in TrueSkill,

251
00:12:03,501 --> 00:12:05,062
you can model multiplayer games.

252
00:12:05,642 --> 00:12:09,103
8 versus 8, 16 versus 16, even teams of 3 versus 3

253
00:12:09,163 --> 00:12:10,183
versus 3 versus 3.

254
00:12:10,583 --> 00:12:11,523
You don't need to do any tricks.

255
00:12:11,643 --> 00:12:13,404
You just feed that data into TrueSkill.

256
00:12:13,424 --> 00:12:15,324
TrueSkill figures out every individual skill update

257
00:12:15,904 --> 00:12:18,225
based on what happened in those teams.

258
00:12:18,625 --> 00:12:21,646
The simplest case is 1 versus 1, which is very similar.

259
00:12:22,246 --> 00:12:24,786
If it was with two players that have exactly

260
00:12:24,806 --> 00:12:26,667
the same standard deviation, that

261
00:12:26,687 --> 00:12:28,147
would be equivalent to Elo, very much.

262
00:12:29,188 --> 00:12:36,999
But it can come with different levels of the sigma.

263
00:12:37,439 --> 00:12:41,084
Natalia, for example, here will see herself as first game will have that nu and sigma.

264
00:12:41,164 --> 00:12:44,689
Eric, on the other hand, has been playing for a while and has a much smaller sigma,

265
00:12:44,709 --> 00:12:46,191
which means less uncertainty.

266
00:12:47,253 --> 00:12:49,114
What happens if Natalia wins?

267
00:12:49,214 --> 00:12:51,155
Big surprise for the system,

268
00:12:51,555 --> 00:12:53,716
which allows to give her a very big update.

269
00:12:54,397 --> 00:12:56,118
So, he goes straight from rating zero to 15,

270
00:12:57,138 --> 00:13:00,039
or how it would be used in Xbox Live is the code level.

271
00:13:01,000 --> 00:13:02,761
Know that I'm using the same as Xbox Live

272
00:13:02,801 --> 00:13:07,503
from one or from zero to 50, which is what they use.

273
00:13:07,703 --> 00:13:08,383
51, you can get sometimes.

274
00:13:09,644 --> 00:13:11,105
I'm gonna go back and forth with this animation

275
00:13:11,125 --> 00:13:12,405
so you can see the data a little better.

276
00:13:12,905 --> 00:13:13,706
So, you see Natalia.

277
00:13:14,806 --> 00:13:17,849
gets a big update in her new,

278
00:13:18,289 --> 00:13:20,230
but Eric only gets a tiny update down.

279
00:13:20,331 --> 00:13:23,153
That is because he has a lot more certainty.

280
00:13:23,593 --> 00:13:26,516
Natalia also gets a big decrease in the sigma,

281
00:13:26,796 --> 00:13:29,658
and Eric also gets pretty much no difference.

282
00:13:29,698 --> 00:13:32,841
In reality, he's getting a millesimal tiny down,

283
00:13:32,861 --> 00:13:34,422
but it's rounded to 125.

284
00:13:34,943 --> 00:13:37,845
So once the sigma is small, it doesn't change that much,

285
00:13:37,905 --> 00:13:38,866
but at first it changes fast.

286
00:13:38,886 --> 00:13:41,268
This allows the system to quickly converge

287
00:13:41,408 --> 00:13:43,429
to the true scale, to get very, very fast

288
00:13:43,449 --> 00:13:44,150
to what you're actually.

289
00:13:44,951 --> 00:13:46,371
what is your actual skill as a player.

290
00:13:47,832 --> 00:13:50,794
Again, for the simplest case, those are the formulas you can find online.

291
00:13:51,154 --> 00:13:51,875
They are all public.

292
00:13:52,855 --> 00:13:55,777
They're kind of complicated, obviously.

293
00:13:57,618 --> 00:13:58,719
They are really not that complicated.

294
00:13:58,739 --> 00:14:00,820
I'm not going to go over because we have limited time here.

295
00:14:01,200 --> 00:14:03,742
If you want to see them, Microsoft Research published them.

296
00:14:03,982 --> 00:14:06,764
They are also, which you can find from a link from the Wikipedia.

297
00:14:09,305 --> 00:14:10,666
A few comments about TrueSkill.

298
00:14:10,706 --> 00:14:13,208
It is more flexible, at least when compared with Elo.

299
00:14:14,000 --> 00:14:15,962
You can model many different types of competing games.

300
00:14:16,402 --> 00:14:17,043
What do I mean with this?

301
00:14:17,663 --> 00:14:19,825
It allows you to model not only one versus one,

302
00:14:19,845 --> 00:14:20,986
but also multi-players.

303
00:14:21,906 --> 00:14:25,069
It has a parameter for the chances of drawing,

304
00:14:25,269 --> 00:14:26,430
which in some cases you can draw.

305
00:14:27,090 --> 00:14:29,392
More like in other cases, like Goat and Racing,

306
00:14:29,752 --> 00:14:31,874
you will not draw, you will always get at some point.

307
00:14:32,934 --> 00:14:34,496
It also models the luck versus the skill,

308
00:14:34,516 --> 00:14:35,276
which is very important.

309
00:14:36,438 --> 00:14:39,541
Some games, like trading card games, have more luck involved.

310
00:14:39,722 --> 00:14:40,562
Chess has less luck.

311
00:14:41,063 --> 00:14:43,305
With Elo, usually, you will have to come up

312
00:14:43,325 --> 00:14:45,747
with your own Gauss-Bell formation

313
00:14:45,808 --> 00:14:47,930
for getting more close to the actual probability

314
00:14:47,970 --> 00:14:48,630
of winning or losing.

315
00:14:49,791 --> 00:14:52,754
It does quickly convert, at least way faster than Elo.

316
00:14:53,940 --> 00:14:55,781
As example, as I was mentioning before,

317
00:14:55,901 --> 00:14:58,863
eight or 16 players playing against each other, randomized.

318
00:14:59,543 --> 00:15:01,565
The system will need about three to five games

319
00:15:01,725 --> 00:15:04,566
to get a very good prediction of their skill.

320
00:15:05,026 --> 00:15:08,028
If you're talking about teams like League of Legends,

321
00:15:08,048 --> 00:15:11,370
for example, five versus five, that needs a lot more games.

322
00:15:11,770 --> 00:15:14,852
Even if you randomize the team formations,

323
00:15:14,912 --> 00:15:17,293
we'll need about 50 games in order to get a good...

324
00:15:18,834 --> 00:15:24,157
a good prediction. This is because ELO, sorry, true skill, same as ELO, it only counts wins

325
00:15:24,197 --> 00:15:28,839
and losses. It doesn't track individual performance of players inside teams. But it works.

326
00:15:30,100 --> 00:15:35,262
Calculations are very complex, as you saw before, foosh, foosh, but today is not a problem

327
00:15:35,282 --> 00:15:40,845
with computers. You don't need ELO to run the numbers game by game. Although, if they

328
00:15:40,885 --> 00:15:44,287
are complex, that also means players sometimes don't understand what's going on. And when

329
00:15:44,307 --> 00:15:47,788
things don't go the way they expect, they'll be like, it's unfair, it's broken, it has

330
00:15:47,828 --> 00:15:48,048
a bug.

331
00:15:50,002 --> 00:15:53,028
This, using the Sigma, makes it easy to model new players,

332
00:15:53,088 --> 00:15:54,731
whether in yellow is usually a problem.

333
00:15:55,668 --> 00:15:57,830
And the downside is that it's proprietary.

334
00:15:57,970 --> 00:16:01,833
You may have to pay Microsoft, although there are great

335
00:16:01,873 --> 00:16:02,774
alternatives out there.

336
00:16:02,794 --> 00:16:05,216
There are some free implementations, or at least I

337
00:16:05,256 --> 00:16:08,399
think they're free, to be used, which don't model exactly the

338
00:16:08,419 --> 00:16:09,800
same as TruSkill, but they're close enough.

339
00:16:10,341 --> 00:16:13,223
There's also the Glico system, which it has a lot of the

340
00:16:13,263 --> 00:16:16,166
benefits of using TruSkill, but it's also modeled after

341
00:16:16,266 --> 00:16:17,106
one-versus-one players.

342
00:16:17,247 --> 00:16:20,389
It's also simpler, but it also converges to the TruSkill of

343
00:16:20,409 --> 00:16:21,430
the player very fast.

344
00:16:24,809 --> 00:16:26,149
Now, after seeing some of the theory,

345
00:16:26,269 --> 00:16:28,210
let's move on into the considerations

346
00:16:28,370 --> 00:16:29,330
if you want to build your own.

347
00:16:30,510 --> 00:16:34,431
Just doing math is not enough for having a good ranking

348
00:16:34,451 --> 00:16:35,011
system out there.

349
00:16:35,231 --> 00:16:37,292
So what makes for a good ranking system?

350
00:16:38,352 --> 00:16:39,432
Well, it needs to be credible.

351
00:16:40,112 --> 00:16:41,233
I think this is the most important thing.

352
00:16:41,253 --> 00:16:43,833
If players, it's all about player perception at the end.

353
00:16:43,913 --> 00:16:46,814
If they don't perceive that this thing is doing the right thing,

354
00:16:47,134 --> 00:16:47,614
it doesn't work.

355
00:16:49,483 --> 00:16:50,384
It needs to be easy to implement.

356
00:16:50,504 --> 00:16:53,065
This is also obvious, but that implies

357
00:16:53,365 --> 00:16:54,705
that if your system is too complicated,

358
00:16:55,206 --> 00:16:56,646
it'll be problematic both for players

359
00:16:56,686 --> 00:16:58,527
to track what's going on and also to implement,

360
00:16:58,767 --> 00:17:01,028
which also means easy to do bugs,

361
00:17:01,428 --> 00:17:03,208
to find bugs, to exploit the system.

362
00:17:03,849 --> 00:17:05,749
Depending on the case, there are many other things.

363
00:17:06,109 --> 00:17:08,150
Different games have different requirements.

364
00:17:08,690 --> 00:17:10,371
Ranking systems are used everywhere.

365
00:17:11,551 --> 00:17:13,572
So let's review a few practical issues here.

366
00:17:13,712 --> 00:17:15,173
I'm gonna go over one of those one by one.

367
00:17:16,613 --> 00:17:17,734
There are more, but those are the ones

368
00:17:17,754 --> 00:17:18,934
that I can fit in this time.

369
00:17:20,466 --> 00:17:21,427
Start from complexity.

370
00:17:21,507 --> 00:17:22,448
Foosh again, foosh.

371
00:17:23,129 --> 00:17:24,290
Yeah, I clearly love Jackie Chan.

372
00:17:24,350 --> 00:17:24,850
He's great.

373
00:17:26,452 --> 00:17:29,295
Well, the more precise and flexible your system is,

374
00:17:29,715 --> 00:17:30,596
the more complex it is.

375
00:17:31,917 --> 00:17:33,559
If it's too complex, it's hard to understand.

376
00:17:34,259 --> 00:17:36,141
And also, complex systems are easier to cheat.

377
00:17:37,182 --> 00:17:39,044
Never forget that simplicity goes a long way.

378
00:17:39,304 --> 00:17:41,606
After all, it is still widely used worldwide nowadays.

379
00:17:44,129 --> 00:17:44,810
Subjectivity.

380
00:17:46,555 --> 00:17:49,176
Well, the more subjective elements into your system,

381
00:17:49,296 --> 00:17:50,937
the more complexity you can digest.

382
00:17:50,977 --> 00:17:53,158
That's probably the best ways to do that.

383
00:17:54,079 --> 00:17:56,900
The extreme example would be a gymnastics tournament

384
00:17:56,980 --> 00:17:59,202
where there is a judge that says 7.7, 9.1, 9.9.

385
00:18:02,383 --> 00:18:03,544
They just say a number, and that's it.

386
00:18:03,904 --> 00:18:05,265
That just digests all the complexity.

387
00:18:05,305 --> 00:18:06,005
Super simple.

388
00:18:06,045 --> 00:18:07,066
You just need one person to say that.

389
00:18:07,406 --> 00:18:11,108
Well, it still is important that the players or the sports

390
00:18:13,423 --> 00:18:17,544
people that are competing believes that the rating is credible.

391
00:18:17,924 --> 00:18:20,045
If they trust the judge, then it's fine, actually.

392
00:18:21,265 --> 00:18:24,546
Also, it's important to tell that systems like Elo, more mathematical,

393
00:18:24,566 --> 00:18:27,027
they also have a lot of subjectivity involved, but it's more subtle.

394
00:18:27,367 --> 00:18:32,189
For example, Elo, you have to guess what is the best k-factor for your guess.

395
00:18:33,049 --> 00:18:36,410
Also, Elo assumes what is the standard deviation inside the players.

396
00:18:37,451 --> 00:18:38,391
But those things are more subtle.

397
00:18:41,334 --> 00:18:42,816
Inflection and deflection of scores.

398
00:18:43,556 --> 00:18:46,319
Well, scores may keep going up over time.

399
00:18:46,379 --> 00:18:47,140
Why is this?

400
00:18:47,861 --> 00:18:50,023
This is because the prediction of the system

401
00:18:50,503 --> 00:18:52,445
gives you, even if it gives you a very good estimation,

402
00:18:52,846 --> 00:18:54,027
may have a 1% error.

403
00:18:54,327 --> 00:18:55,769
That 1% error can add over time.

404
00:18:55,809 --> 00:18:57,190
If you're thinking about something like chess,

405
00:18:57,551 --> 00:18:59,773
what has been played over hundreds of years,

406
00:19:00,193 --> 00:19:01,274
that can add up over time.

407
00:19:02,323 --> 00:19:05,465
Well, in most cases, games don't last for 100 years,

408
00:19:05,625 --> 00:19:06,185
unfortunately.

409
00:19:07,346 --> 00:19:08,986
So it's usually not an issue for you.

410
00:19:09,006 --> 00:19:10,507
You shouldn't have to worry about this too much.

411
00:19:10,647 --> 00:19:12,968
But if it happens, there are things you can do.

412
00:19:13,128 --> 00:19:15,749
In chess nowadays, sometimes they

413
00:19:15,789 --> 00:19:18,050
give bonus points after tournaments,

414
00:19:18,090 --> 00:19:22,592
which help feed points into the system to make them grow.

415
00:19:22,612 --> 00:19:24,613
They can actually make, for example,

416
00:19:24,653 --> 00:19:26,034
new players start with less score,

417
00:19:26,934 --> 00:19:28,675
so there's less points into the system.

418
00:19:28,975 --> 00:19:30,656
You can try to control that somehow.

419
00:19:32,580 --> 00:19:33,961
Well, hello there, new players.

420
00:19:34,942 --> 00:19:37,324
When you have a new player into your game, your system,

421
00:19:37,484 --> 00:19:38,285
what is his skill?

422
00:19:38,405 --> 00:19:38,825
You don't know.

423
00:19:39,446 --> 00:19:41,748
They may be an expert already, somebody that was playing

424
00:19:41,788 --> 00:19:42,608
and created a new account.

425
00:19:43,769 --> 00:19:45,410
Most of the time, they will be new players also.

426
00:19:46,731 --> 00:19:48,313
The trick usually is to guess what

427
00:19:48,353 --> 00:19:50,695
is the average of all of the new players that are starting.

428
00:19:52,904 --> 00:19:55,345
Also, what is the data you give your players?

429
00:19:55,425 --> 00:19:57,806
Well, true scaling and Glico, since they have explicitly

430
00:19:57,846 --> 00:20:00,106
modeled the uncertainty of the players with the sigma,

431
00:20:00,586 --> 00:20:02,127
they just make a big sigma.

432
00:20:02,307 --> 00:20:04,728
They make those lines fat and short.

433
00:20:05,468 --> 00:20:06,468
But Elo doesn't have that.

434
00:20:07,509 --> 00:20:09,789
But Elo can work out with having a bigger k

435
00:20:09,809 --> 00:20:11,170
factor on the lower ranks.

436
00:20:12,517 --> 00:20:14,539
This is also why placement matches are very useful.

437
00:20:14,639 --> 00:20:15,800
Around 10 games is usually enough

438
00:20:16,180 --> 00:20:17,982
to have a decent estimation of the starting

439
00:20:18,022 --> 00:20:21,745
point of those players, even if it's just for matching them

440
00:20:21,785 --> 00:20:24,487
better against others on those initial games.

441
00:20:24,827 --> 00:20:27,249
You don't want your game to have the initial few games

442
00:20:27,269 --> 00:20:28,090
to be a bad experience.

443
00:20:30,332 --> 00:20:32,013
Time decay, what happens between game,

444
00:20:32,353 --> 00:20:33,474
you're waiting there like the frog.

445
00:20:34,515 --> 00:20:36,357
Well, returning players may be out of chase.

446
00:20:37,458 --> 00:20:40,960
In Elo, this is a problem, because Elo doesn't

447
00:20:41,141 --> 00:20:42,021
model time decay at all.

448
00:20:42,773 --> 00:20:49,775
You may spend a few months without playing, you go back, and your actual skill is below what the system believes it is.

449
00:20:50,115 --> 00:20:56,078
Your first games will be a bad experience because you need to lose a bunch of times until you get back to your original place.

450
00:20:56,598 --> 00:20:59,879
In TrueSkill and Glico, since they model uncertainty, again, that is easy to solve.

451
00:21:00,657 --> 00:21:03,938
True skill, at least the algorithm

452
00:21:03,958 --> 00:21:05,939
that's described by Microsoft Research,

453
00:21:06,679 --> 00:21:08,760
suggests that after every single game,

454
00:21:08,780 --> 00:21:10,801
you just increase the uncertainty a little more.

455
00:21:11,221 --> 00:21:12,121
That usually helps.

456
00:21:12,762 --> 00:21:15,503
Glico models precisely increase the sigma

457
00:21:15,523 --> 00:21:18,924
based on how long passed since the previous game.

458
00:21:19,404 --> 00:21:21,925
With biggest uncertainty, the system updates way faster

459
00:21:22,105 --> 00:21:23,545
back to your original skill.

460
00:21:23,585 --> 00:21:25,706
So you will also lose the first games,

461
00:21:25,726 --> 00:21:27,507
but maybe two games instead of six games

462
00:21:28,067 --> 00:21:30,128
in order to get back to your skill.

463
00:21:31,856 --> 00:21:33,597
I had fun once, and it was awful.

464
00:21:34,238 --> 00:21:36,300
That's what the Grumpy Cat says probably

465
00:21:36,320 --> 00:21:37,260
when I play on the ranking.

466
00:21:38,441 --> 00:21:39,922
Well, ranking can be brutally honest.

467
00:21:40,503 --> 00:21:41,604
It tells you how bad you are.

468
00:21:42,224 --> 00:21:42,905
You don't want to know that.

469
00:21:43,385 --> 00:21:44,866
Most players, realistically, they just

470
00:21:44,886 --> 00:21:45,687
want to feel progression.

471
00:21:45,827 --> 00:21:47,088
They just want to feel they improve over time.

472
00:21:47,809 --> 00:21:51,632
Well, for games, I believe this is the most important slide

473
00:21:51,772 --> 00:21:52,112
of it all.

474
00:21:52,712 --> 00:21:54,774
Sure, you have mathematics behind, but at the end,

475
00:21:54,874 --> 00:21:55,274
it's a game.

476
00:21:57,716 --> 00:21:58,477
The ranking system.

477
00:21:59,599 --> 00:22:03,169
doesn't have to be, so their score doesn't have necessarily to be what they see.

478
00:22:03,630 --> 00:22:05,154
In fact, many games use...

479
00:22:06,011 --> 00:22:09,072
a system like TrueSkill for matchmaking the players,

480
00:22:09,292 --> 00:22:11,152
but they show them a different score.

481
00:22:11,372 --> 00:22:12,333
The score is accumulative.

482
00:22:12,353 --> 00:22:13,513
There are many accumulative systems.

483
00:22:13,933 --> 00:22:15,053
I'm not covering them in here,

484
00:22:15,213 --> 00:22:17,874
but they may be a great solution for some cases.

485
00:22:17,934 --> 00:22:20,095
Accumulative means that they just get points as they win.

486
00:22:20,695 --> 00:22:23,215
This means also that players can play, play, play, play

487
00:22:23,255 --> 00:22:24,516
to kind of grind those points.

488
00:22:24,896 --> 00:22:26,036
But in some cases, this is fine.

489
00:22:26,096 --> 00:22:28,417
For example, in actual chess tournaments,

490
00:22:28,517 --> 00:22:30,537
how many chess tournaments you can play during a year

491
00:22:31,097 --> 00:22:32,338
is not that easy to actually do this.

492
00:22:32,758 --> 00:22:34,778
In other words, that could work better for some cases.

493
00:22:35,786 --> 00:22:42,208
There are side missions like Hurston Dust with some loot to get so you feel you won something even if you lose the game.

494
00:22:42,988 --> 00:22:46,829
Locality is important, play against your friends so it's not as scary.

495
00:22:47,229 --> 00:22:54,432
You can also do divisions like in Starcraft Ladder where you play against the same hundred people for the season.

496
00:22:55,012 --> 00:23:02,274
Hierarchy is important so it's more fun to be a gold player than saying I'm a player with 773 points so you can talk with other people.

497
00:23:03,014 --> 00:23:04,355
Never forget the fun factor is important.

498
00:23:06,272 --> 00:23:08,453
Gaming the system like the most interesting man in the world.

499
00:23:09,353 --> 00:23:11,275
Well, matchmaking should be random in general,

500
00:23:11,315 --> 00:23:13,236
at least if you wanna, this is the easiest way

501
00:23:13,276 --> 00:23:14,917
to avoid people gaming your system.

502
00:23:16,017 --> 00:23:18,239
When I was young, I could play against my little brother,

503
00:23:18,739 --> 00:23:20,640
StarCraft, and I would win every single time.

504
00:23:21,180 --> 00:23:23,302
Mining one point at a time, mining one point at a time.

505
00:23:23,542 --> 00:23:26,183
But the system didn't allow me to explicitly target him.

506
00:23:27,143 --> 00:23:29,504
That is mostly why those assignments are random.

507
00:23:29,964 --> 00:23:33,266
Well, it happens that usually in tournaments, since the pool of players is small,

508
00:23:33,726 --> 00:23:38,048
that is not targeting players, but that gives the players a good idea of who they are playing against.

509
00:23:38,488 --> 00:23:39,949
And that sometimes can be problematic.

510
00:23:40,389 --> 00:23:41,790
For example, in Magic the Gathering...

511
00:23:42,705 --> 00:23:47,068
They used to use Elo before, but the actual distribution

512
00:23:47,108 --> 00:23:49,269
of Elo gives a hard, like between the best player

513
00:23:49,289 --> 00:23:51,731
and the worst player, Elo says, oh, there's like a 99%

514
00:23:52,051 --> 00:23:53,132
of chance for the best player to win.

515
00:23:53,532 --> 00:23:55,594
Maybe in reality, magic is more like 70% only

516
00:23:55,634 --> 00:23:57,115
because there is still more random factor,

517
00:23:57,155 --> 00:23:59,377
which means they don't wanna play against.

518
00:23:59,797 --> 00:24:01,058
When they are on the top, they don't wanna play

519
00:24:01,638 --> 00:24:03,159
to don't lose their ranking.

520
00:24:03,420 --> 00:24:04,240
And this could be a problem.

521
00:24:04,981 --> 00:24:07,703
That led them to change a more cumulative system

522
00:24:07,723 --> 00:24:09,684
called place worker points, which works better for them.

523
00:24:12,418 --> 00:24:14,499
Margin of victory, this is an easy one.

524
00:24:14,699 --> 00:24:17,879
This is just why do these systems count for victories

525
00:24:17,959 --> 00:24:20,940
only, and they don't count for how many points you make inside.

526
00:24:21,540 --> 00:24:23,961
Well, this will be very useful, especially for team games,

527
00:24:24,141 --> 00:24:26,381
so you can track who is contributing to the team

528
00:24:26,401 --> 00:24:26,921
victory more.

529
00:24:27,281 --> 00:24:28,341
But it's always problematic.

530
00:24:28,401 --> 00:24:31,402
Every time you put a metric that players

531
00:24:31,422 --> 00:24:33,842
can maximize without thinking about their team,

532
00:24:34,203 --> 00:24:35,943
that can lead to unhealthy matches as well.

533
00:24:36,883 --> 00:24:39,964
So it's usually best to keep it simple,

534
00:24:40,064 --> 00:24:41,684
unless you have a very good reason not to.

535
00:24:42,510 --> 00:24:44,391
Now, if you do, keep the margin of victory.

536
00:24:44,572 --> 00:24:45,612
That gives you more information.

537
00:24:45,953 --> 00:24:47,874
Your system can be even more accurate.

538
00:24:47,934 --> 00:24:51,257
I guess this goes back again to complexity versus simplicity.

539
00:24:53,940 --> 00:24:56,302
In many games, there's really no place like home.

540
00:24:57,137 --> 00:24:59,558
For example, in basketball, it's well known and studied

541
00:24:59,758 --> 00:25:01,419
that there is an actual home advantage.

542
00:25:01,819 --> 00:25:03,419
Like, the referee may be biased.

543
00:25:03,759 --> 00:25:06,360
Having the crowd cheering for you is empowering.

544
00:25:06,380 --> 00:25:08,701
There are things that make, and definitely there

545
00:25:08,741 --> 00:25:12,202
are basketball skill rating systems

546
00:25:12,342 --> 00:25:16,263
that take this into account, and with a very decent chance

547
00:25:16,504 --> 00:25:16,904
of winning.

548
00:25:17,124 --> 00:25:18,424
This is just another variable that you

549
00:25:18,444 --> 00:25:20,965
could use in your rating system.

550
00:25:21,125 --> 00:25:22,125
It's an easy one to use.

551
00:25:22,145 --> 00:25:23,546
This one doesn't increase complexity much.

552
00:25:24,416 --> 00:25:26,157
And in games could be, you know, the favorite maps,

553
00:25:26,497 --> 00:25:28,959
or something that you find out where you believe these players

554
00:25:28,979 --> 00:25:30,661
have a higher chance to win already.

555
00:25:33,043 --> 00:25:35,945
And here, the Dreaded 50% win ratio.

556
00:25:36,906 --> 00:25:40,288
Well, by definition, matchmaking systems

557
00:25:40,328 --> 00:25:42,490
like Elo and TruSkill, they're trying.

558
00:25:44,789 --> 00:25:48,851
What they do is to predict, try to track the skill of players.

559
00:25:49,271 --> 00:25:50,952
Therefore, you can create high-quality matches.

560
00:25:50,972 --> 00:25:53,513
And high-quality matches means some games

561
00:25:53,553 --> 00:25:56,254
where both players have roughly the same chance of winning,

562
00:25:56,294 --> 00:25:57,654
because that makes it more interesting.

563
00:25:58,354 --> 00:26:00,835
Remember that in a ranking, a ranking itself

564
00:26:00,915 --> 00:26:01,816
is a zero-sum game.

565
00:26:02,256 --> 00:26:03,496
If you give more wins to a player,

566
00:26:03,596 --> 00:26:04,957
you're moving more wins from the other player.

567
00:26:05,037 --> 00:26:07,958
So the best you can have is 50% ratio.

568
00:26:08,418 --> 00:26:08,918
Realistically.

569
00:26:09,659 --> 00:26:12,381
Many players actually, they like to win more often.

570
00:26:12,862 --> 00:26:15,084
I wouldn't put my hand in the fire,

571
00:26:15,344 --> 00:26:17,506
but I would say this is even so more true for millennials.

572
00:26:18,127 --> 00:26:19,508
They need to win all the time.

573
00:26:20,009 --> 00:26:20,449
We all know that.

574
00:26:22,485 --> 00:26:23,506
How do you defeat this?

575
00:26:23,746 --> 00:26:26,086
Well, you cannot defeat this with a ranking system.

576
00:26:26,687 --> 00:26:28,827
You can offer side activities like the StarCraft Arcade,

577
00:26:29,467 --> 00:26:30,488
non-competitive quick games.

578
00:26:30,508 --> 00:26:33,549
You just need to give them some place

579
00:26:33,569 --> 00:26:35,029
where they can have fun and win more often.

580
00:26:35,129 --> 00:26:38,730
Maybe have fake AIs, synthesize win streaks

581
00:26:39,430 --> 00:26:40,371
when they are happy,

582
00:26:40,511 --> 00:26:42,551
and then have them many losses to counter for that.

583
00:26:42,571 --> 00:26:45,592
That's definitely something you have to take into account.

584
00:26:47,362 --> 00:26:49,282
Going beyond games and beyond.

585
00:26:50,042 --> 00:26:52,003
Well, rankings are everywhere.

586
00:26:52,223 --> 00:26:54,764
You know, Amazon, Google search, everything

587
00:26:54,804 --> 00:26:56,444
that is putting different items together

588
00:26:56,484 --> 00:26:57,504
is using ranking system.

589
00:26:57,544 --> 00:26:59,505
Well, most of the time, this is not a matchmaking system

590
00:26:59,525 --> 00:26:59,905
like Elo.

591
00:27:00,345 --> 00:27:04,126
There are many other algorithms there to find out.

592
00:27:05,027 --> 00:27:09,128
Suckenberg's famous example of doing face mask site

593
00:27:09,188 --> 00:27:12,089
before doing Facebook to run Harvard students only based

594
00:27:12,169 --> 00:27:13,629
on which one of them are more cool.

595
00:27:14,289 --> 00:27:15,730
That was using Elo behind.

596
00:27:16,795 --> 00:27:19,117
And any item that can be compared can be ranked.

597
00:27:19,217 --> 00:27:20,618
For example, player versus map.

598
00:27:22,419 --> 00:27:23,280
That's all for now.

599
00:27:23,800 --> 00:27:24,301
Keep calm.

600
00:27:24,681 --> 00:27:27,043
I love cats or kitty raptors.

601
00:27:27,743 --> 00:27:28,284
Thank you so much.

602
00:27:36,930 --> 00:27:39,012
You have any question at all, please try to use the mic.

603
00:27:54,848 --> 00:27:55,769
I'm not sure if this works.

604
00:27:55,829 --> 00:27:56,869
OK, there we go.

605
00:27:57,350 --> 00:28:00,232
What do you think about systems like you have Blizzard's

606
00:28:00,292 --> 00:28:04,075
Overwatch system where it'll hide the different rankings,

607
00:28:04,135 --> 00:28:06,637
or show you one rank, but you rank maybe something else?

608
00:28:06,877 --> 00:28:09,699
When do you think it's appropriate to hide some of

609
00:28:09,719 --> 00:28:10,680
that information from the player?

610
00:28:14,317 --> 00:28:15,158
I think it depends...

611
00:28:16,079 --> 00:28:17,479
Oh, it wasn't...

612
00:28:18,620 --> 00:28:19,721
Okay, I'm going to repeat the question.

613
00:28:19,761 --> 00:28:26,326
When is it more appropriate to hide the actual rank and just give them something that they can... different, right?

614
00:28:26,846 --> 00:28:32,210
So, this is a design question more than an actual mathematical programming question, but...

615
00:28:33,050 --> 00:28:34,552
I believe it's better in more casual games.

616
00:28:34,972 --> 00:28:36,333
You usually don't care that much about that

617
00:28:36,433 --> 00:28:38,715
because you just want the casual players to win more often

618
00:28:38,815 --> 00:28:41,397
or not to win more often but to feel the progression.

619
00:28:41,417 --> 00:28:42,779
It's all about feeling the progression.

620
00:28:43,379 --> 00:28:45,201
Where the more hardcore games,

621
00:28:46,041 --> 00:28:47,343
as far as they understand what's going on,

622
00:28:48,043 --> 00:28:50,385
and maybe you need to make sure that you're showing before the game

623
00:28:50,465 --> 00:28:51,346
your actual sort of...

624
00:28:52,027 --> 00:28:54,568
Even if it's not just the chances, like, oh, you're

625
00:28:54,708 --> 00:28:56,768
playing much against this other player, which is gold,

626
00:28:56,808 --> 00:28:57,409
and you're silver.

627
00:28:57,809 --> 00:29:00,210
That is probably good, so they know what to expect.

628
00:29:00,770 --> 00:29:02,651
It's always usually about setting the expectations.

629
00:29:02,711 --> 00:29:06,012
Now, for casual games, don't expect a lot of your players

630
00:29:06,032 --> 00:29:07,573
will not understand how the system works.

631
00:29:08,033 --> 00:29:10,414
Even so, if you have a very good system, like TrueSkill,

632
00:29:10,434 --> 00:29:13,655
and they play three games, their rating goes from zero.

633
00:29:14,295 --> 00:29:15,936
to 25 and then it stays there forever.

634
00:29:16,356 --> 00:29:17,936
And maybe it even goes down sometimes.

635
00:29:17,956 --> 00:29:18,877
That's not fun.

636
00:29:18,917 --> 00:29:21,137
So in those cases, when you can identify that,

637
00:29:21,698 --> 00:29:22,358
it's good to do so.

638
00:29:23,418 --> 00:29:25,779
You may still use a ranking system behind the scenes

639
00:29:26,019 --> 00:29:28,500
just to make sure that they have fun matches,

640
00:29:28,560 --> 00:29:32,261
that they are not ranked against somebody that's much better

641
00:29:32,301 --> 00:29:33,621
or much worse than them.

642
00:29:33,641 --> 00:29:37,282
And this is great that you can get there in three games.

643
00:29:37,722 --> 00:29:38,883
So you know as soon as possible.

644
00:29:40,263 --> 00:29:40,523
Thank you.

645
00:29:41,203 --> 00:29:41,483
No worries.

646
00:29:45,237 --> 00:29:48,738
So online games always have a problem with cheaters and

647
00:29:48,878 --> 00:29:51,780
exploiters, people who buy boosted accounts, et cetera.

648
00:29:52,640 --> 00:29:55,661
And obviously, when you catch the cheaters, you reset their

649
00:29:55,721 --> 00:29:57,862
Elo and ban them or whatever you want to do.

650
00:29:58,363 --> 00:30:00,944
But I haven't seen many games or game companies try to

651
00:30:00,984 --> 00:30:07,227
tackle the issue of having players with inflated Elo

652
00:30:07,327 --> 00:30:10,488
from either cheating or botting inflating other

653
00:30:10,528 --> 00:30:14,130
players' points by losing after they have cheated up to

654
00:30:14,170 --> 00:30:14,730
a certain rank.

655
00:30:15,322 --> 00:30:18,964
So you might have players that played against the cheater

656
00:30:19,325 --> 00:30:22,607
10 plus times in a single day, and now their ranking is too high.

657
00:30:23,548 --> 00:30:26,670
And you punish the cheater, but you don't actually tackle the problem

658
00:30:26,850 --> 00:30:31,914
of this kind of point inflation that has been introduced by cheating or exploiting.

659
00:30:33,175 --> 00:30:37,138
Okay, so the question is, how do these ranking systems fight cheaters

660
00:30:38,038 --> 00:30:40,340
when there are many different ways they can do to exploit,

661
00:30:40,360 --> 00:30:42,121
like losing purposely and things like that?

662
00:30:42,762 --> 00:30:42,902
What?

663
00:30:45,766 --> 00:30:52,629
increase the unpredictability in your equation when a player has fought against a cheater?

664
00:30:52,649 --> 00:30:53,969
That is one way of doing it.

665
00:30:54,029 --> 00:31:01,833
So this ranking system we saw here, both Elo and TruSkill and Glico, they do not try to

666
00:31:01,853 --> 00:31:02,493
solve this problem.

667
00:31:02,513 --> 00:31:05,654
What they do is they give you tools so you can work with that.

668
00:31:05,814 --> 00:31:09,036
Identifying the cheaters goes outside of this algorithm at all.

669
00:31:11,394 --> 00:31:14,396
The system never really knows if the player suddenly

670
00:31:14,436 --> 00:31:16,737
was training on the side, or now it's so good,

671
00:31:17,077 --> 00:31:17,878
or why is he losing.

672
00:31:17,918 --> 00:31:19,058
He is demotivated.

673
00:31:20,839 --> 00:31:23,420
What you can do with TrueSkill is, as you mentioned,

674
00:31:23,881 --> 00:31:24,761
play with uncertainty.

675
00:31:24,821 --> 00:31:26,102
You need to have some detectors.

676
00:31:26,862 --> 00:31:28,563
And identity sometimes is a problem.

677
00:31:28,683 --> 00:31:30,504
If you don't have a good system for it,

678
00:31:30,604 --> 00:31:32,265
if they can just break an account and make a new one,

679
00:31:32,925 --> 00:31:34,866
that will lead to problems into the ranking.

680
00:31:35,667 --> 00:31:39,568
But unfortunately, through these algorithms, there's really

681
00:31:39,608 --> 00:31:40,169
nothing you can do.

682
00:31:40,709 --> 00:31:42,330
The only thing you can do really is detect

683
00:31:42,410 --> 00:31:43,530
when this is too odd.

684
00:31:44,110 --> 00:31:46,291
He's been winning, and now it just looks weird.

685
00:31:47,692 --> 00:31:51,554
You can try to increase the sigma, change it, penalize,

686
00:31:51,994 --> 00:31:53,735
do some things like that.

687
00:31:53,835 --> 00:31:57,596
But I warn you, the more things you can try to add into it,

688
00:31:57,716 --> 00:31:59,757
the more complex the system will become.

689
00:32:00,217 --> 00:32:04,679
after all. And generally speaking, the more complex, the easier it is to cheat as well. They

690
00:32:04,699 --> 00:32:08,460
will constantly find. So that unfortunately is a constant fight.

691
00:32:08,480 --> 00:32:11,901
You're welcome.

692
00:32:15,161 --> 00:32:18,702
Hi, thanks so much. So you mentioned that one of the disadvantages with systems like

693
00:32:18,742 --> 00:32:24,144
these is that the top players don't really want to play. And you mentioned a couple of

694
00:32:24,164 --> 00:32:26,905
different ways to deal with that, like progression. Are there any others that you're aware of?

695
00:32:28,860 --> 00:32:33,744
Other ways that you know of to encourage the top players to still want to keep playing?

696
00:32:34,485 --> 00:32:39,429
Okay, so the question is going back to the players not wanting to play ranked.

697
00:32:40,189 --> 00:32:46,375
Well, in the case of DSi with Magic the Gathering and other competitive games,

698
00:32:46,675 --> 00:32:49,837
they introduced a totally different system, the place worker in this case,

699
00:32:49,878 --> 00:32:51,599
which was better for them because...

700
00:32:53,057 --> 00:32:56,659
At the end of the day, you need to think Elo was designed for chess, the way chess is being played.

701
00:32:57,180 --> 00:33:00,481
The more different it is from that, the less probably it will match your game.

702
00:33:01,342 --> 00:33:05,024
For them, making cumulative makes more sense, both for fun in terms of progression,

703
00:33:05,324 --> 00:33:09,466
and also because it's not that easy to play, to repeat many, many games of Magic.

704
00:33:10,106 --> 00:33:15,009
And also there's a correlation between the amount of games you play, the more you improve your deck.

705
00:33:16,289 --> 00:33:18,670
If you're not doing that, you don't want to radically change,

706
00:33:18,810 --> 00:33:22,932
something they could do maybe is to create a new expected

707
00:33:23,413 --> 00:33:26,214
formula into their ELO by changing the assumptions.

708
00:33:26,574 --> 00:33:30,716
They were assuming that Gauss Bell, like originally created

709
00:33:30,756 --> 00:33:32,937
for chess and for magic, may be a different one.

710
00:33:32,957 --> 00:33:35,118
I'm guessing it will be like a shorter one.

711
00:33:35,138 --> 00:33:36,599
The uncertainty will always stay higher.

712
00:33:37,319 --> 00:33:40,081
They maybe by changing that will give them, the better

713
00:33:40,121 --> 00:33:43,502
players, a more accurate estimate so they will be more

714
00:33:43,542 --> 00:33:44,023
willing to play.

715
00:33:44,800 --> 00:33:50,224
But it's very common lately to not pick your, when you're

716
00:33:50,244 --> 00:33:53,186
going to play the World Championship, not pick just

717
00:33:53,206 --> 00:33:56,969
the top players from your Elo ranking or your TrueSkill

718
00:33:57,009 --> 00:33:59,271
ranking, but do it in some other way, more based on

719
00:33:59,291 --> 00:34:00,612
achievements and things that you need to do.

720
00:34:00,632 --> 00:34:01,432
And that usually works well.

721
00:34:02,033 --> 00:34:05,135
I believe in terms of sports and e-sports as well.

722
00:34:06,569 --> 00:34:10,510
The Elo is not going to help you that much at the end of the day.

723
00:34:10,871 --> 00:34:15,493
So it's probably one of the places where you should look elsewhere for solutions.

724
00:34:15,933 --> 00:34:20,695
Look at how Hurston is doing it, which is also doing it quite different for choosing the tournaments.

725
00:34:22,096 --> 00:34:22,336
Thanks.

726
00:34:22,356 --> 00:34:29,699
I don't know if I have time for this question, but just real quick,

727
00:34:29,879 --> 00:34:32,981
because you made a game with kind of a non-traditional use of Elo,

728
00:34:33,061 --> 00:34:35,682
you had the maps and the players ranked kind of the same way.

729
00:34:36,507 --> 00:34:37,907
Was there anything kind of interesting that fell out

730
00:34:37,927 --> 00:34:38,247
from that?

731
00:34:38,327 --> 00:34:40,047
Did anything weird come up that you didn't expect?

732
00:34:41,167 --> 00:34:42,568
On the prototype?

733
00:34:42,808 --> 00:34:44,528
Like having to rank the maps.

734
00:34:44,608 --> 00:34:44,928
Did that?

735
00:34:45,428 --> 00:34:46,168
Yes.

736
00:34:46,208 --> 00:34:46,888
There's definitely.

737
00:34:46,908 --> 00:34:49,429
When you try different things, you always will find things.

738
00:34:49,949 --> 00:34:51,409
That is why it's important to understand, oh,

739
00:34:51,429 --> 00:34:52,630
I'm going to repeat the question.

740
00:34:52,650 --> 00:34:53,770
Did I find more interesting things

741
00:34:53,790 --> 00:34:57,150
when matching players versus maps?

742
00:34:57,770 --> 00:34:58,891
So yeah.

743
00:34:59,831 --> 00:35:01,391
That is why you need to understand how the model works,

744
00:35:01,411 --> 00:35:02,911
so you can adapt it to your case.

745
00:35:04,152 --> 00:35:07,774
In this case, it was surprising, first, that you have two populations,

746
00:35:07,994 --> 00:35:10,415
for the same reason they are both the same, maps and players.

747
00:35:10,515 --> 00:35:12,276
But you have two populations where they never play each other.

748
00:35:12,416 --> 00:35:14,717
Maps never play against maps. Players never play against players.

749
00:35:14,737 --> 00:35:16,178
They play each other. And it still works.

750
00:35:16,758 --> 00:35:19,720
Because they influence each other through indirect...

751
00:35:20,220 --> 00:35:21,501
Indirectly they influence each other.

752
00:35:21,841 --> 00:35:24,002
So that was surprising. It actually worked quite well.

753
00:35:24,102 --> 00:35:25,163
Especially when using TrueSkill.

754
00:35:26,109 --> 00:35:28,130
Less surprising is, well, when a player makes a new map,

755
00:35:28,390 --> 00:35:29,592
what is the initial score?

756
00:35:29,952 --> 00:35:31,373
Going back to the cold start problem.

757
00:35:31,733 --> 00:35:34,756
In this case, instead of using the default initial,

758
00:35:35,036 --> 00:35:37,118
I just applied the same score of the player.

759
00:35:37,578 --> 00:35:39,340
I was assuming if you're in, obviously,

760
00:35:39,680 --> 00:35:42,583
you have to beat your map, much like in many other user

761
00:35:42,603 --> 00:35:43,263
generated maps.

762
00:35:43,804 --> 00:35:45,865
You have to show that your map is beatable.

763
00:35:46,286 --> 00:35:47,667
And therefore, that would show.

764
00:35:47,707 --> 00:35:49,669
Later, I realized that most of the time

765
00:35:49,789 --> 00:35:52,311
is not the same skill of the player, but actually better.

766
00:35:53,112 --> 00:35:56,275
Because players this good, when they are playing other maps,

767
00:35:56,776 --> 00:35:57,777
they die on three lives.

768
00:35:57,917 --> 00:35:58,878
But when they're doing their own map,

769
00:35:58,919 --> 00:36:00,200
they can play over and over and over again.

770
00:36:00,861 --> 00:36:01,562
Now, what is the number?

771
00:36:01,602 --> 00:36:03,063
It doesn't really matter much.

772
00:36:03,304 --> 00:36:06,027
And again, if you think about progression, making fun,

773
00:36:06,087 --> 00:36:09,030
it's probably OK to make the map a little worse

774
00:36:09,451 --> 00:36:13,135
so the first few games will more likely be won.

775
00:36:14,300 --> 00:36:16,381
There are other implications like that.

776
00:36:16,441 --> 00:36:18,562
But yeah, and you also need quite a few maps.

777
00:36:19,122 --> 00:36:23,184
You need also to make tutorials where in the first few, you

778
00:36:23,204 --> 00:36:24,665
need some placement matches in which you

779
00:36:24,705 --> 00:36:25,525
will show your own maps.

780
00:36:25,565 --> 00:36:29,086
So you don't want to send players into that pool right

781
00:36:29,126 --> 00:36:30,507
away, and things like that.

782
00:36:31,687 --> 00:36:31,948
Thank you.

783
00:36:32,288 --> 00:36:32,468
Thanks.

784
00:36:35,048 --> 00:36:37,390
So I had a question, so chess...

785
00:36:37,830 --> 00:36:38,891
Last one, okay.

786
00:36:38,911 --> 00:36:44,076
Sure. So chess is a game that you have balance changes with, but we do that with live games,

787
00:36:45,017 --> 00:36:48,660
where we might introduce new troops, they have new stats, or even changing the stats with troops.

788
00:36:49,061 --> 00:36:52,484
How do you incorporate that with the ELO system or TrueSkill system?

789
00:36:53,585 --> 00:36:54,686
Do you mean...

790
00:36:54,726 --> 00:37:00,071
Players might find out the new troop is just OP and they're just using that, and then we nerf them.

791
00:37:01,905 --> 00:37:03,386
Sorry, I don't understand the question.

792
00:37:03,566 --> 00:37:04,866
You mean handicap, maybe?

793
00:37:05,347 --> 00:37:05,607
Or not?

794
00:37:05,627 --> 00:37:06,807
No, you're talking about something else.

795
00:37:07,328 --> 00:37:13,051
Yeah, I guess just adding new troops that existing players

796
00:37:13,231 --> 00:37:17,894
use and just kind of min-max and find the best ways of using

797
00:37:17,914 --> 00:37:19,414
them first.

798
00:37:20,615 --> 00:37:21,155
I'm not sure.

799
00:37:22,936 --> 00:37:24,657
Maybe we can talk right after.

800
00:37:24,797 --> 00:37:24,998
Yes.

801
00:37:25,818 --> 00:37:26,778
All right, so that was all.

802
00:37:27,039 --> 00:37:27,579
More questions?

803
00:37:27,599 --> 00:37:30,340
I'll be around here, and you can find me.

804
00:37:30,801 --> 00:37:31,061
Thank you.

