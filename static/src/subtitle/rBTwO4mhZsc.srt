1
00:00:05,614 --> 00:00:10,297
I did. The other thing is, on the other side of that wall is my lead designer, running

2
00:00:10,297 --> 00:00:16,360
a talk right now at the same time as me. I think that's why he has everybody shouting.

3
00:00:16,360 --> 00:00:21,463
So can you all do the same for me? And please shout, and we'll get this started.

4
00:00:21,463 --> 00:00:29,148
Fantastic. Thank you very much. It's always great to start something with people cheering

5
00:00:29,148 --> 00:00:34,031
for you rather than coming at the end. So I'm Connor. I'm the senior producer on RuneScape.

6
00:00:34,652 --> 00:00:37,813
And I have had the benefit of, while doing all of the other

7
00:00:37,813 --> 00:00:40,775
things that you do in production, also spending

8
00:00:40,775 --> 00:00:43,736
three years focusing on a single product's pipeline and

9
00:00:43,736 --> 00:00:46,377
moving it from things that may have caused issues onto what

10
00:00:46,377 --> 00:00:48,919
we have today, which allows us to, every single Monday at

11
00:00:48,919 --> 00:00:51,900
about 11 o'clock, put out a new piece of content.

12
00:00:51,900 --> 00:00:54,381
And we used to have a problem where we would slip from

13
00:00:54,381 --> 00:00:57,123
Monday to Tuesday, Wednesday, Thursday, and you start

14
00:00:57,123 --> 00:00:58,863
encroaching on future releases as well.

15
00:01:00,056 --> 00:01:05,319
So what we're going to go through is how our rapid release cycle has allowed us to improve that over time.

16
00:01:05,319 --> 00:01:07,940
So what is RuneScape?

17
00:01:07,940 --> 00:01:11,282
Quick question, I always like starting with this one.

18
00:01:11,282 --> 00:01:14,984
Who's heard of RuneScape?

19
00:01:14,984 --> 00:01:15,065
Yay!

20
00:01:15,065 --> 00:01:15,705
Who's played RuneScape?

21
00:01:15,705 --> 00:01:17,446
Who still plays RuneScape?

22
00:01:18,413 --> 00:01:19,833
We still have people, so that'll do.

23
00:01:19,833 --> 00:01:23,495
It was the first free-to-play MMO.

24
00:01:23,495 --> 00:01:26,036
It's been alive for 15 years continuously.

25
00:01:26,036 --> 00:01:29,637
And over those 15 years, we have continued to release content

26
00:01:29,637 --> 00:01:31,177
week in and week out.

27
00:01:31,177 --> 00:01:33,278
Right now, we have two live versions.

28
00:01:33,278 --> 00:01:35,659
We have the main game, which is the one that's

29
00:01:35,659 --> 00:01:36,579
been running continuously.

30
00:01:36,579 --> 00:01:39,440
And a number of years ago, we forked the game

31
00:01:39,440 --> 00:01:43,022
from a 2007 build, and that has had its own progression

32
00:01:43,022 --> 00:01:44,722
and now has 300,000 members.

33
00:01:45,996 --> 00:01:49,798
We tend to have 500,000 people every single day,

34
00:01:49,798 --> 00:01:51,959
and we have over 2 million people every month.

35
00:01:51,959 --> 00:01:54,201
So it's a big game, and there's lots of people there.

36
00:01:54,201 --> 00:01:57,682
We have an insatiable growing player base.

37
00:01:57,682 --> 00:02:00,084
We're looking for more and more content.

38
00:02:00,084 --> 00:02:02,205
And as a game, we currently hold the world record

39
00:02:02,205 --> 00:02:04,506
for the most prolifically updated game.

40
00:02:04,506 --> 00:02:06,948
And those updates aren't just little bug fixes

41
00:02:06,948 --> 00:02:08,168
or slight changes.

42
00:02:08,168 --> 00:02:10,209
They are big, meaningful pieces of content.

43
00:02:10,997 --> 00:02:14,058
So we do quests, which are two to four hours of,

44
00:02:14,058 --> 00:02:18,059
rather than fetch quests, you're talking about custom narrative,

45
00:02:18,059 --> 00:02:20,660
bespoke encounters, new environments.

46
00:02:20,660 --> 00:02:23,801
The event systems are small, time-limited pieces of content

47
00:02:23,801 --> 00:02:26,161
that players have to jump in and get involved with.

48
00:02:26,161 --> 00:02:29,022
We have brand new skills being added into the game, rarely,

49
00:02:29,022 --> 00:02:31,223
but we had one at the start of the year.

50
00:02:31,223 --> 00:02:34,104
And then we're always releasing new bosses, new monsters,

51
00:02:34,104 --> 00:02:35,464
new pieces of content that way.

52
00:02:36,237 --> 00:02:39,878
So the important thing is that every week you come back to RuneScape,

53
00:02:39,878 --> 00:02:43,139
you see something new and substantial to get involved with.

54
00:02:43,139 --> 00:02:45,680
And that means that we can hold our players into the game,

55
00:02:45,680 --> 00:02:48,881
and this is something that I'm hoping that by the time you leave here,

56
00:02:48,881 --> 00:02:51,702
you'll understand what you can do to match that for yourselves.

57
00:02:51,702 --> 00:02:54,683
And I see this as a bit of a challenge, a release challenge,

58
00:02:54,683 --> 00:02:56,023
and there are three components to it.

59
00:02:56,023 --> 00:02:58,264
The first part are your updates.

60
00:02:58,264 --> 00:03:00,724
What is an update? What does it mean to you?

61
00:03:00,724 --> 00:03:03,525
We have large updates that come out each week.

62
00:03:04,759 --> 00:03:08,103
But for yourselves, it's about finding that balance between,

63
00:03:08,103 --> 00:03:09,385
as a development team, what can you do?

64
00:03:09,385 --> 00:03:11,248
And as a player base, what you actually want.

65
00:03:11,248 --> 00:03:13,190
It can be a difficult negotiation to have.

66
00:03:13,190 --> 00:03:14,792
And we'll go through that in a moment.

67
00:03:14,792 --> 00:03:17,356
And then you have to consider your pace and the cadence

68
00:03:17,356 --> 00:03:18,036
that you're going through.

69
00:03:18,036 --> 00:03:18,777
How do you release?

70
00:03:18,777 --> 00:03:19,599
How often?

71
00:03:19,599 --> 00:03:21,982
And how do you make that as simple and as smooth as

72
00:03:21,982 --> 00:03:22,422
possible?

73
00:03:23,145 --> 00:03:27,247
As we update weekly, that means that we can refine and adapt it very, very quickly.

74
00:03:27,247 --> 00:03:32,289
If you're looking at more of a monthly or annual update, then it's a bigger day

75
00:03:32,289 --> 00:03:34,550
and you've less chances to make those tweaks and improvements.

76
00:03:34,550 --> 00:03:36,911
So hopefully you learn from us going crazy

77
00:03:36,911 --> 00:03:39,332
and you can take them into the bigger update that you're trying to do.

78
00:03:39,822 --> 00:03:42,544
And then once you've gone live, all that content that you've

79
00:03:42,544 --> 00:03:44,586
just put out, you need to make sure that you can maintain it.

80
00:03:44,586 --> 00:03:47,589
Because no one will ever give you any credit for fixing bugs.

81
00:03:47,589 --> 00:03:49,830
It's just kind of what you're supposed to do.

82
00:03:49,830 --> 00:03:50,531
But it still takes time.

83
00:03:50,531 --> 00:03:52,933
You still have to give your thought and your attention

84
00:03:52,933 --> 00:03:53,473
to it.

85
00:03:53,473 --> 00:03:54,594
And so how do you keep making sure

86
00:03:54,594 --> 00:03:57,317
that while you're maintaining your game and your service,

87
00:03:57,317 --> 00:04:00,019
you're also releasing new and big updates

88
00:04:00,019 --> 00:04:02,301
to hold players back into the game?

89
00:04:02,301 --> 00:04:02,881
So let's start.

90
00:04:02,881 --> 00:04:03,962
Updates.

91
00:04:03,962 --> 00:04:06,604
Like I was saying, it's a negotiation.

92
00:04:06,604 --> 00:04:08,446
You need to listen to your players.

93
00:04:09,269 --> 00:04:12,191
With RuneScape, we look at our social channels.

94
00:04:12,191 --> 00:04:15,234
We have that conversation, Facebook, Twitter, Instagram.

95
00:04:15,234 --> 00:04:16,455
We listen to what they're saying,

96
00:04:16,455 --> 00:04:18,696
and we try and take that on board.

97
00:04:18,696 --> 00:04:20,758
We also speak to them on forums.

98
00:04:20,758 --> 00:04:22,179
And then in-game conversations.

99
00:04:22,179 --> 00:04:23,240
You'll have a certain type of player

100
00:04:23,240 --> 00:04:24,541
who will engage with you in social.

101
00:04:24,541 --> 00:04:25,442
You have a different type of player

102
00:04:25,442 --> 00:04:27,644
who will only speak to you inside in your game.

103
00:04:28,522 --> 00:04:31,485
And in game, people are really happy when you have a dev just

104
00:04:31,485 --> 00:04:32,405
kind of turn up and have a chat.

105
00:04:32,405 --> 00:04:34,947
It's a nice thing to do.

106
00:04:34,947 --> 00:04:38,470
But we also have to look at the quantitative types of feedback.

107
00:04:38,470 --> 00:04:40,171
So you're looking at analytics data.

108
00:04:40,171 --> 00:04:41,412
What are players actually playing?

109
00:04:41,412 --> 00:04:42,633
They may say they like one thing,

110
00:04:42,633 --> 00:04:44,215
but they're actually playing something completely different.

111
00:04:44,215 --> 00:04:46,356
Make sure you're getting that kind of balance up.

112
00:04:46,356 --> 00:04:48,398
And you understand what does an update

113
00:04:48,398 --> 00:04:51,500
need to be to really get good feedback from your player base.

114
00:04:51,500 --> 00:04:54,603
Then the conversation moves to your team.

115
00:04:56,070 --> 00:04:57,631
It doesn't matter what you promise to your players

116
00:04:57,631 --> 00:05:00,073
if your team can't actually deliver it.

117
00:05:00,073 --> 00:05:01,655
And the people who best understand

118
00:05:01,655 --> 00:05:03,456
what a team can deliver is your own team.

119
00:05:03,456 --> 00:05:08,180
We like to aim for being comfortably stretched.

120
00:05:08,180 --> 00:05:11,323
So we feel like we're kind of pushing ourselves every time,

121
00:05:11,323 --> 00:05:12,524
but we know we can do it.

122
00:05:12,524 --> 00:05:13,465
And every time we do it,

123
00:05:13,465 --> 00:05:14,846
we push ourselves a little bit further

124
00:05:14,846 --> 00:05:17,288
to see how much bigger we can go.

125
00:05:17,288 --> 00:05:19,811
It comes down to us understanding

126
00:05:19,811 --> 00:05:21,512
what kind of rate can we deliver at,

127
00:05:21,512 --> 00:05:23,554
what's our velocity in getting through content.

128
00:05:24,035 --> 00:05:26,376
And then with all of that, we let the team actually

129
00:05:26,376 --> 00:05:28,076
decide the releases.

130
00:05:28,076 --> 00:05:30,537
We speak to our players and get a pool of ideas

131
00:05:30,537 --> 00:05:32,017
that they're really looking forward to.

132
00:05:32,017 --> 00:05:34,298
But we let the devs decide what that would actually

133
00:05:34,298 --> 00:05:35,459
be as a smaller team.

134
00:05:35,459 --> 00:05:39,500
Rather than top-down decisions of what the design would be,

135
00:05:39,500 --> 00:05:42,701
we let the devs power that and feed it back up.

136
00:05:42,701 --> 00:05:42,961
And so.

137
00:05:43,752 --> 00:05:46,454
The first thing that we did when we were having problems

138
00:05:46,454 --> 00:05:49,737
with trying to get our releases out on time

139
00:05:49,737 --> 00:05:53,480
is we thought what we need is we need some strict checks

140
00:05:53,480 --> 00:05:54,681
and process.

141
00:05:54,681 --> 00:05:56,643
So we'll put in controlling the steps

142
00:05:56,643 --> 00:05:57,764
that people are going through.

143
00:05:57,764 --> 00:05:58,784
We'll put in our sign-offs.

144
00:05:58,784 --> 00:06:00,326
We'll make sure that everybody's on board.

145
00:06:00,326 --> 00:06:01,847
We put our detail up front.

146
00:06:01,847 --> 00:06:04,149
We make sure everyone is agreed as we step through it.

147
00:06:04,149 --> 00:06:06,451
And it stops waste, right?

148
00:06:06,451 --> 00:06:07,431
You don't have to build something

149
00:06:07,431 --> 00:06:09,273
that you won't be building or using later on.

150
00:06:09,273 --> 00:06:11,735
And we detail our face, all of those ideas.

151
00:06:12,526 --> 00:06:19,198
actually happened is we kept slipping anyway and every time

152
00:06:20,597 --> 00:06:24,240
that did not work for us. So I have a couple of samples of

153
00:06:24,240 --> 00:06:28,064
responses that we got when I asked the teams, what do you

154
00:06:28,064 --> 00:06:31,147
think about how we work? And you see it was sort of reasonable,

155
00:06:31,147 --> 00:06:35,111
it was practical, we're always scrambling to get things out,

156
00:06:35,111 --> 00:06:38,434
everything is merging into a single blob, stakeholders, and

157
00:06:38,434 --> 00:06:41,658
it's just the same things over and over again. And we got this

158
00:06:41,658 --> 00:06:42,538
back from the teams.

159
00:06:43,837 --> 00:06:46,098
So with this in mind, we decided what we need to do

160
00:06:46,098 --> 00:06:48,320
is really look at what we've done with our teams.

161
00:06:48,320 --> 00:06:50,002
How we used to be structured is everybody

162
00:06:50,002 --> 00:06:53,405
would be in their each individual disciplines.

163
00:06:53,405 --> 00:06:58,008
So you'd look at artists, be it concept, modeling, animation,

164
00:06:58,008 --> 00:06:59,129
any artist.

165
00:06:59,129 --> 00:07:00,010
We're in one group.

166
00:07:00,010 --> 00:07:01,912
We'd have our code, design, and everything in another group.

167
00:07:01,912 --> 00:07:04,714
And then you pass it on to QA, a very standard waterfall process

168
00:07:04,714 --> 00:07:06,796
where you step from one to another to another.

169
00:07:06,796 --> 00:07:09,118
And it's those pass-throughs that were actually

170
00:07:09,118 --> 00:07:10,879
causing us a lot of the problems and heartache

171
00:07:10,879 --> 00:07:12,981
that we were having trying to get content out the door.

172
00:07:13,587 --> 00:07:15,471
you'd have problems of it getting delayed,

173
00:07:15,471 --> 00:07:16,633
feeling like they didn't understand

174
00:07:16,633 --> 00:07:17,735
what they were being asked for.

175
00:07:17,735 --> 00:07:20,040
The handover didn't exactly cover

176
00:07:20,040 --> 00:07:21,102
the requirements at the start.

177
00:07:21,102 --> 00:07:24,128
So we decided to split it up.

178
00:07:24,749 --> 00:07:26,609
and we made six autonomous teams.

179
00:07:26,609 --> 00:07:29,830
These teams are like small little development studios

180
00:07:29,830 --> 00:07:31,671
and we took each of the devs

181
00:07:31,671 --> 00:07:33,271
and we moved them into those teams.

182
00:07:33,271 --> 00:07:36,172
And you'll see you have a mix of every discipline.

183
00:07:36,172 --> 00:07:37,752
Those teams have a unique identity.

184
00:07:37,752 --> 00:07:40,292
Each one of them does things in its own way

185
00:07:40,292 --> 00:07:41,993
and they talk about things in their own way.

186
00:07:41,993 --> 00:07:44,713
And they're like six completely different groups of people

187
00:07:44,713 --> 00:07:46,874
and they bring their own flavor to the game.

188
00:07:46,874 --> 00:07:49,874
We also expose that outside of the studio

189
00:07:49,874 --> 00:07:50,535
to the player base.

190
00:07:51,035 --> 00:07:55,057
and they understand which team is responsible for which update and how they'll expect stuff to come

191
00:07:55,057 --> 00:08:00,380
in. They tend towards specialties but we didn't design the teams to be specialists. It just kind

192
00:08:00,380 --> 00:08:06,163
of happened. It goes with their own way of doing things. What we did then is we created two

193
00:08:06,163 --> 00:08:09,285
release trains and we assigned the teams to it.

194
00:08:10,034 --> 00:08:13,376
So the content updates are those big, meaty, large updates,

195
00:08:13,376 --> 00:08:16,297
those bosses, the quests, any of those raid-style content.

196
00:08:16,297 --> 00:08:18,358
And then we have supporting updates,

197
00:08:18,358 --> 00:08:21,119
which are a little bit smaller, smaller events,

198
00:08:21,119 --> 00:08:24,001
putting things into the store, all those kinds of stuff.

199
00:08:24,001 --> 00:08:27,382
And what we do is we plan in chunks of a month.

200
00:08:27,382 --> 00:08:29,523
Rather than trying to think of 52 extra things

201
00:08:29,523 --> 00:08:32,045
to do throughout the year, we're looking

202
00:08:32,045 --> 00:08:34,546
at 12 big blocks of content that will be

203
00:08:34,546 --> 00:08:36,066
made up of a number of updates.

204
00:08:36,467 --> 00:08:38,448
and each of those teams is assigned to one of those months

205
00:08:38,448 --> 00:08:39,508
and they work together.

206
00:08:39,508 --> 00:08:42,649
So we have a support team and we have a main content team

207
00:08:42,649 --> 00:08:44,650
looking at a month as a chunk of content

208
00:08:44,650 --> 00:08:46,311
and understanding how they can work together

209
00:08:46,311 --> 00:08:48,332
to get the best flow through the month

210
00:08:48,332 --> 00:08:49,573
and handing off to the next team

211
00:08:49,573 --> 00:08:51,253
that will be in the following month.

212
00:08:51,253 --> 00:08:52,534
Also means that each of your teams

213
00:08:52,534 --> 00:08:54,835
doesn't need to think about the whole year.

214
00:08:54,835 --> 00:08:57,897
You can split it out and you can start understanding,

215
00:08:57,897 --> 00:08:58,897
I can deliver this month.

216
00:08:58,897 --> 00:09:01,218
I don't need to think again about a release day

217
00:09:01,218 --> 00:09:02,299
for a couple of months.

218
00:09:02,299 --> 00:09:04,299
I have to think about the release day every week,

219
00:09:04,299 --> 00:09:05,900
but that's not their problem, that's my problem.

220
00:09:06,818 --> 00:09:09,019
And then we look at the types of content

221
00:09:09,019 --> 00:09:11,500
the teams are doing and we can put one of those other teams

222
00:09:11,500 --> 00:09:14,781
and they'll have a larger step between their months

223
00:09:14,781 --> 00:09:15,662
for a content team.

224
00:09:15,662 --> 00:09:18,623
Whereas a support team, because they're doing smaller updates,

225
00:09:18,623 --> 00:09:20,063
their cadence can change.

226
00:09:20,063 --> 00:09:22,784
They leapfrog each month.

227
00:09:22,784 --> 00:09:25,565
And it means that we get a better understanding

228
00:09:25,565 --> 00:09:26,326
of that velocity.

229
00:09:26,326 --> 00:09:28,006
Like I was saying, you understand your team,

230
00:09:28,006 --> 00:09:30,527
you understand your velocity, and you build your cadence

231
00:09:30,527 --> 00:09:32,108
based on what they're able to do.

232
00:09:32,108 --> 00:09:33,988
And you let them feed back to what they're able to do.

233
00:09:35,452 --> 00:09:39,756
But of course, splitting up into those autonomous unique teams

234
00:09:39,756 --> 00:09:42,919
is a new form of challenge for communication.

235
00:09:42,919 --> 00:09:44,661
Before, we had to make sure that communication

236
00:09:44,661 --> 00:09:45,581
went through the disciplines.

237
00:09:45,581 --> 00:09:48,044
And now we have to make sure that one team doesn't develop

238
00:09:48,044 --> 00:09:49,325
the game in one direction, and another one

239
00:09:49,325 --> 00:09:51,407
develops in a completely different direction.

240
00:09:51,407 --> 00:09:53,108
So we put other structures in place.

241
00:09:53,108 --> 00:09:55,610
And the first thing is disciplines.

242
00:09:55,610 --> 00:09:57,332
So we brought those guys back, but it's

243
00:09:57,332 --> 00:10:00,475
more of a temporary group on the outside of the development

244
00:10:00,475 --> 00:10:01,336
teams themselves.

245
00:10:02,202 --> 00:10:04,423
And this is how do we work?

246
00:10:04,423 --> 00:10:07,544
Make sure that even though you have a reduced number

247
00:10:07,544 --> 00:10:10,765
of each of the disciplines working very closely together,

248
00:10:10,765 --> 00:10:13,266
you ensure a community of practice across everybody

249
00:10:13,266 --> 00:10:14,247
through each of those teams.

250
00:10:14,247 --> 00:10:16,988
And this is done through show and tells,

251
00:10:16,988 --> 00:10:18,408
just demonstrations of how we work.

252
00:10:18,408 --> 00:10:21,609
And you have the same thing for our coders, make sure QA.

253
00:10:21,609 --> 00:10:23,450
And so those guys still feel like they have a bond

254
00:10:23,450 --> 00:10:25,331
and they're still part of a larger team

255
00:10:25,331 --> 00:10:27,732
even though they're in the smaller teams

256
00:10:27,732 --> 00:10:29,312
to deliver the actual content.

257
00:10:30,239 --> 00:10:34,903
The next thing we had to do is what we're making and make sure that that also works.

258
00:10:34,903 --> 00:10:39,528
So we started to see kind of a divergence of, you know, is the lore going to go in the

259
00:10:39,528 --> 00:10:39,968
right direction?

260
00:10:39,968 --> 00:10:41,990
And we created councils.

261
00:10:41,990 --> 00:10:44,812
And these are groups of interested individuals across each of the teams.

262
00:10:44,812 --> 00:10:49,857
And they're interested in various parts of the game, like combat, like balance, like

263
00:10:49,857 --> 00:10:50,398
the lore.

264
00:10:50,398 --> 00:10:54,481
And we make sure that we cause a coherence through all of those teams.

265
00:10:55,058 --> 00:10:56,798
So with all of these things in place,

266
00:10:56,798 --> 00:10:59,259
we now have our teams who understand what they're

267
00:10:59,259 --> 00:10:59,999
building.

268
00:10:59,999 --> 00:11:01,839
They're making sure that everybody's

269
00:11:01,839 --> 00:11:03,600
moving in the right direction, even

270
00:11:03,600 --> 00:11:06,060
though you're one of six autonomous groups who

271
00:11:06,060 --> 00:11:06,881
are releasing content.

272
00:11:06,881 --> 00:11:08,281
So we've got it all tight.

273
00:11:08,281 --> 00:11:09,121
We're building our content.

274
00:11:09,121 --> 00:11:10,641
We understand our velocity.

275
00:11:10,641 --> 00:11:12,482
Now we need to make sure that actually when

276
00:11:12,482 --> 00:11:13,862
we're putting it out the door, it doesn't fall apart.

277
00:11:13,862 --> 00:11:16,063
And that's the second part of the challenge, the release.

278
00:11:16,063 --> 00:11:18,723
And to be honest, probably the meatiest part of this,

279
00:11:18,723 --> 00:11:19,644
but I prefer the first section.

280
00:11:19,644 --> 00:11:21,744
So we'll go through it anyway.

281
00:11:22,602 --> 00:11:26,604
When you're releasing, we have actually a seventh team.

282
00:11:26,604 --> 00:11:29,105
We have the release team who are slightly

283
00:11:29,105 --> 00:11:30,405
different to everybody else.

284
00:11:30,405 --> 00:11:33,807
And it's made up of our build manager, our lead tech,

285
00:11:33,807 --> 00:11:37,749
a group of dedicated testers who are specialists in merge

286
00:11:37,749 --> 00:11:40,470
conflicts, which I'm sure everybody has had to deal with

287
00:11:40,470 --> 00:11:41,910
time in and time out.

288
00:11:41,910 --> 00:11:45,472
They don't need to worry about as much of the content.

289
00:11:45,472 --> 00:11:47,233
They need to worry about how it comes together

290
00:11:47,233 --> 00:11:49,754
and the impact of the issues that you will receive when

291
00:11:49,754 --> 00:11:50,694
it goes outside the door.

292
00:11:51,678 --> 00:11:55,501
We also bring in our community management team at this section so they understand the

293
00:11:55,501 --> 00:11:59,384
content that we're releasing and are embedded within the development team so they know what's

294
00:11:59,384 --> 00:12:00,504
going to be happening in the future.

295
00:12:00,504 --> 00:12:03,387
And then we also have marketing in this group as well.

296
00:12:03,387 --> 00:12:08,170
So the marketers understand the content, they know what's coming out, they can work with

297
00:12:08,170 --> 00:12:10,392
the release team to make sure that the right things are in the right place.

298
00:12:10,932 --> 00:12:14,654
And it's this kind of split of different disciplines once again,

299
00:12:14,654 --> 00:12:18,296
and not the normal disciplines we had for development,

300
00:12:18,296 --> 00:12:22,138
but the people who will be most impacted by what goes outside the door of the studio.

301
00:12:22,138 --> 00:12:24,920
It's become incredibly effective for us in this way.

302
00:12:24,920 --> 00:12:29,983
And with this team in place, we had to build a bit of a process around it.

303
00:12:29,983 --> 00:12:33,084
The other teams, the six content and support teams,

304
00:12:33,983 --> 00:12:36,844
They work pretty much in the way that they like.

305
00:12:36,844 --> 00:12:37,945
We try and step back.

306
00:12:37,945 --> 00:12:40,545
I don't want to put process in the way of them getting

307
00:12:40,545 --> 00:12:41,426
good content out the door.

308
00:12:41,426 --> 00:12:43,126
And because they're a small enough group,

309
00:12:43,126 --> 00:12:45,067
you don't have to have a heavy hand in what they're doing.

310
00:12:45,067 --> 00:12:46,427
It's more of a guiding touch.

311
00:12:46,427 --> 00:12:48,608
But what we did find is there is a place

312
00:12:48,608 --> 00:12:50,448
that you do require process.

313
00:12:50,448 --> 00:12:52,269
And sometimes it needs to be fairly strict.

314
00:12:52,269 --> 00:12:53,689
And that came in the release.

315
00:12:53,689 --> 00:12:55,490
And this is why we're able to do things on a Monday.

316
00:12:56,290 --> 00:12:59,834
So if you consider us trying to put something out the door,

317
00:12:59,834 --> 00:13:01,016
we've got a nice three weeks here.

318
00:13:01,016 --> 00:13:03,459
And if you want to release something on Monday on week

319
00:13:03,459 --> 00:13:05,702
one, I want to come in, or week three,

320
00:13:05,702 --> 00:13:08,005
I want to come in Monday morning and know

321
00:13:08,005 --> 00:13:09,707
that that's going to go out the door at 11 o'clock,

322
00:13:09,707 --> 00:13:11,489
and I can start thinking about the thing that'll come out

323
00:13:11,489 --> 00:13:12,831
in the next couple of weeks as well.

324
00:13:13,210 --> 00:13:17,132
What actually happens is the content team will finish their work.

325
00:13:17,132 --> 00:13:21,934
And this doesn't mean finish deving, because if somebody's still deving on that day, I'll be furious.

326
00:13:21,934 --> 00:13:27,177
It's more that team has come together and they agree that by the Thursday, they can sign it off.

327
00:13:27,177 --> 00:13:30,618
The support team will be coming along at the same time as well.

328
00:13:30,618 --> 00:13:34,440
So together, they feel that in isolation, what they have built,

329
00:13:34,440 --> 00:13:38,282
along with everything that has been released previously, is ready for players to consume.

330
00:13:38,822 --> 00:13:41,564
It may not have everything else that's going to go out on week three,

331
00:13:41,564 --> 00:13:43,966
but on its own, they're happy with it.

332
00:13:43,966 --> 00:13:47,589
What happens on the Friday is we kind of smash it all together

333
00:13:47,589 --> 00:13:50,171
and hope that we can make a release that'll go out the door and everybody'll enjoy.

334
00:13:50,171 --> 00:13:53,793
And that's where we lead with the lead tech and the build manager.

335
00:13:53,793 --> 00:13:56,535
That's their key place where they come into play.

336
00:13:56,535 --> 00:13:58,316
They know the game. They know the structures.

337
00:13:58,316 --> 00:14:01,859
And we just have to deal with merging lots and lots of things together.

338
00:14:02,870 --> 00:14:05,771
And what happens for the week two, we test it.

339
00:14:05,771 --> 00:14:07,592
We verify the merge didn't cause any problems.

340
00:14:07,592 --> 00:14:10,452
We target what key areas of the game

341
00:14:10,452 --> 00:14:12,013
would have been touched by the content

342
00:14:12,013 --> 00:14:13,313
that's going into that update.

343
00:14:13,313 --> 00:14:18,835
On that Friday, I need to have a sign-off from my team.

344
00:14:18,835 --> 00:14:22,096
Because if they don't sign it off on that Friday,

345
00:14:22,096 --> 00:14:23,216
I'm not ready to go live.

346
00:14:23,216 --> 00:14:24,957
It's very rare that that happens.

347
00:14:24,957 --> 00:14:28,678
In fact, I've only had one slight suggestion

348
00:14:28,678 --> 00:14:31,258
that we may delay something in the past 12 months.

349
00:14:32,374 --> 00:14:35,795
because we have to make sure that the previous week, on that Thursday,

350
00:14:35,795 --> 00:14:39,557
that those content teams and support teams are happy for that to go out the door.

351
00:14:39,557 --> 00:14:41,178
We should only be dealing with merge conflicts.

352
00:14:41,178 --> 00:14:44,939
It would be very strange for us to be dealing with any other types of issues.

353
00:14:45,972 --> 00:14:50,357
And the main reason that exists is because on that week, too, we also released on the

354
00:14:50,357 --> 00:14:53,019
Monday and the test team were doing something on the week beforehand.

355
00:14:53,019 --> 00:14:56,022
And then on the following week, they're also testing something else.

356
00:14:56,022 --> 00:14:57,324
So it all gets a bit convoluted.

357
00:14:57,324 --> 00:15:00,307
So if something falls out of place, we have a lot of things to start juggling and fix.

358
00:15:00,307 --> 00:15:04,871
It's important for us to be aware of issues long before it gets into this process.

359
00:15:04,871 --> 00:15:06,173
This needs to run smooth.

360
00:15:08,795 --> 00:15:09,375
All right.

361
00:15:09,375 --> 00:15:10,015
We got it out the door.

362
00:15:10,015 --> 00:15:12,296
Probably the meatiest part, but shortest as well,

363
00:15:12,296 --> 00:15:13,417
so it's quite nice.

364
00:15:13,417 --> 00:15:15,978
We've released something.

365
00:15:15,978 --> 00:15:16,999
We have a game.

366
00:15:16,999 --> 00:15:18,260
RuneScape is a game as a service.

367
00:15:18,260 --> 00:15:22,642
So it makes sure that there's always something for people

368
00:15:22,642 --> 00:15:23,202
to come back to.

369
00:15:23,202 --> 00:15:24,803
But we need to make sure that we're

370
00:15:24,803 --> 00:15:26,324
dealing with any of the things that come up.

371
00:15:26,324 --> 00:15:27,865
We don't want to die a death of 1,000 cuts

372
00:15:27,865 --> 00:15:31,166
from all the little things that get released each update.

373
00:15:31,166 --> 00:15:32,927
I'd love to say that we're great,

374
00:15:32,927 --> 00:15:34,848
and every update that we've ever released has had no bugs.

375
00:15:34,848 --> 00:15:35,829
It doesn't exist.

376
00:15:35,829 --> 00:15:36,649
Nobody's ever done that.

377
00:15:38,039 --> 00:15:41,842
What we found is that process at the end, which I said is incredibly important,

378
00:15:41,842 --> 00:15:45,205
and has allowed us to move from slipping to Tuesdays, Wednesdays, Thursdays,

379
00:15:45,205 --> 00:15:48,788
and lock it into place and know that by the time I have my lunch on Monday,

380
00:15:48,788 --> 00:15:53,272
I know the game update's gone out and I'm looking at what the players think.

381
00:15:53,272 --> 00:15:55,834
We put that bureaucracy in place, but it reduces agility.

382
00:15:55,834 --> 00:15:58,617
Imagine if I had to wait three weeks to deal with a bug issue on Monday.

383
00:15:58,617 --> 00:16:01,740
There's also been two other updates since that originally happened.

384
00:16:01,740 --> 00:16:03,741
And if it's a major issue, I'm going to just lose players.

385
00:16:03,741 --> 00:16:05,903
People are going to disengage. We need to keep that quality going.

386
00:16:06,773 --> 00:16:08,694
We also need to demonstrate that ability to react.

387
00:16:08,694 --> 00:16:12,756
It builds and fosters trust in our player base

388
00:16:12,756 --> 00:16:15,738
by continuously listening to what they're saying

389
00:16:15,738 --> 00:16:16,858
and adapting to it quickly.

390
00:16:16,858 --> 00:16:19,440
Part of that is allowing us to do quick hot fixes.

391
00:16:19,440 --> 00:16:22,081
So there is zero downtime for the player

392
00:16:22,081 --> 00:16:23,122
if we're doing slight tweaks.

393
00:16:23,122 --> 00:16:24,763
It's very occasional that something

394
00:16:24,763 --> 00:16:26,023
would be a major issue that we actually

395
00:16:26,023 --> 00:16:28,065
have to bring the game down.

396
00:16:28,065 --> 00:16:30,186
But the other thing that we have done is built that last team.

397
00:16:30,186 --> 00:16:31,787
So you remember on the six slides,

398
00:16:31,787 --> 00:16:32,987
one of those teams didn't move anywhere,

399
00:16:32,987 --> 00:16:33,768
and that's our Ninja team.

400
00:16:34,908 --> 00:16:38,230
They have one goal, and it's to make everything run smoothly.

401
00:16:38,230 --> 00:16:41,092
They're focusing on what are the things coming

402
00:16:41,092 --> 00:16:42,453
from the players, what are the issues,

403
00:16:42,453 --> 00:16:46,035
what are the slight bugs, what's the thing that we released

404
00:16:46,035 --> 00:16:48,697
10 years ago that's still kind of niggling

405
00:16:48,697 --> 00:16:50,898
and it's now not working as well with a piece of content

406
00:16:50,898 --> 00:16:51,919
we just released.

407
00:16:51,919 --> 00:16:52,879
And they have no restrictions.

408
00:16:52,879 --> 00:16:55,981
They have no need to go through the same process.

409
00:16:55,981 --> 00:16:57,902
They work directly with the release team.

410
00:16:57,902 --> 00:16:59,944
Well, I say directly, closer than all the other teams.

411
00:16:59,944 --> 00:17:02,946
They're getting more fixes in, lining them up,

412
00:17:02,946 --> 00:17:04,286
and getting them ready to go out the door.

413
00:17:05,127 --> 00:17:08,909
And it's because we have this team, we've actually improved the health of the game overall.

414
00:17:08,909 --> 00:17:13,492
In the past three years, that's all they've been doing, is just taking out those small little rough edges

415
00:17:13,492 --> 00:17:16,734
and making the game a better experience for everybody.

416
00:17:16,734 --> 00:17:19,336
We've seen the players, the players love them.

417
00:17:19,336 --> 00:17:23,518
They made that beautiful picture down the end that my lead designer told me not to put in, but I put it in anyway.

418
00:17:24,520 --> 00:17:29,642
But they love them. They are always talking to them. If you look at the RuneScape Reddit,

419
00:17:29,642 --> 00:17:34,144
you'll find that there's a tag saying Ninja Fix. They've just adopted this as something

420
00:17:34,144 --> 00:17:38,906
that they found incredibly useful. But it also means that internally, whenever the Ninja

421
00:17:38,906 --> 00:17:45,169
team go and get involved with a piece of content, they're fixing in the back end. I'm sure anyone

422
00:17:45,169 --> 00:17:49,470
who's had to deal with a game for an extended period of time knows the lovely story of Legacy

423
00:17:49,470 --> 00:17:49,550
Code.

424
00:17:51,014 --> 00:17:52,695
These guys are cleaning that up.

425
00:17:52,695 --> 00:17:54,076
It might be a small fix for the player,

426
00:17:54,076 --> 00:17:55,777
but the next time I'm trying to do an update

427
00:17:55,777 --> 00:17:56,758
in a particular area of the game,

428
00:17:56,758 --> 00:17:59,019
if the Ninja team have been there, they've made it better.

429
00:17:59,019 --> 00:18:01,561
And so the dev team are getting faster over time.

430
00:18:01,561 --> 00:18:05,403
There's some bits that we've had is

431
00:18:05,403 --> 00:18:07,704
they've released named 26 updates

432
00:18:07,704 --> 00:18:10,146
because they're so close to the game

433
00:18:10,146 --> 00:18:11,727
and they're so close to the players.

434
00:18:11,727 --> 00:18:13,808
Even a small little tweak from these guys

435
00:18:13,808 --> 00:18:16,330
is enough that gets an invested player

436
00:18:16,330 --> 00:18:17,310
bought back into the game.

437
00:18:17,310 --> 00:18:19,392
And we can call it out as a named update.

438
00:18:20,225 --> 00:18:23,286
They've delivered 760 little tweaks and fixes

439
00:18:23,286 --> 00:18:25,187
throughout the year.

440
00:18:25,187 --> 00:18:26,628
And they've just made everything better.

441
00:18:26,628 --> 00:18:28,949
If we do something with a Ninja update,

442
00:18:28,949 --> 00:18:31,930
we get an immediate positive return from the player base.

443
00:18:31,930 --> 00:18:34,132
The sentiment on any update that has a Ninja update

444
00:18:34,132 --> 00:18:36,393
is always better than if it didn't have a Ninja update.

445
00:18:36,393 --> 00:18:38,914
And this is something that we have just doubled down in.

446
00:18:38,914 --> 00:18:41,315
We're increasing the amount of effort

447
00:18:41,315 --> 00:18:43,156
we put into the Ninja team, while also trying

448
00:18:43,156 --> 00:18:45,177
to make sure that all the other updates continue to go out,

449
00:18:45,177 --> 00:18:46,898
which is a fun challenge, but a different talk.

450
00:18:48,507 --> 00:18:51,990
And with this in place, and with these teams doing that kind of work,

451
00:18:51,990 --> 00:18:54,732
what it's meant is that we're looking back in on ourselves.

452
00:18:54,732 --> 00:18:58,915
And so we have the game being maintained, and we're looking at everything that we're doing,

453
00:18:58,915 --> 00:19:00,256
but that doesn't mean that it stops.

454
00:19:00,256 --> 00:19:03,098
And we're always looking to continuously improve.

455
00:19:04,268 --> 00:19:06,090
And we have three parts that we always do.

456
00:19:06,090 --> 00:19:08,392
We're incredibly transparent with how we work.

457
00:19:08,392 --> 00:19:10,554
Before we were very enclosed,

458
00:19:10,554 --> 00:19:12,356
very protective of what we've done.

459
00:19:12,356 --> 00:19:14,257
Now we're open and honest about everything

460
00:19:14,257 --> 00:19:16,139
that is a problem with what we're developing

461
00:19:16,139 --> 00:19:17,440
or how we're developing.

462
00:19:17,440 --> 00:19:20,183
We talk to everybody and get everybody involved

463
00:19:20,183 --> 00:19:20,703
in conversations.

464
00:19:20,703 --> 00:19:25,908
And when we have that shown and made clear for everybody,

465
00:19:25,908 --> 00:19:28,170
we're inspecting what people are actually saying

466
00:19:28,170 --> 00:19:29,851
so we understand what their problems are

467
00:19:29,851 --> 00:19:31,293
and then we adapt and make it different.

468
00:19:32,618 --> 00:19:35,521
We've gone from a place where we had process,

469
00:19:35,521 --> 00:19:39,144
and our answer to problems was to put more bureaucracy

470
00:19:39,144 --> 00:19:41,646
in place, and put more checks and more balances.

471
00:19:41,646 --> 00:19:43,027
And we've stepped away from that.

472
00:19:43,027 --> 00:19:46,330
And we let the team lift up what they need to get fixed,

473
00:19:46,330 --> 00:19:48,872
and we fix it, and we focus on what goes out the door,

474
00:19:48,872 --> 00:19:51,234
not what we're doing inside in the studio.

475
00:19:51,234 --> 00:19:53,315
So some things on what we've done in the past year or so.

476
00:19:53,315 --> 00:19:56,098
We had 112 named updates go into the game.

477
00:19:56,098 --> 00:19:58,199
Most weeks don't only have one update.

478
00:19:58,199 --> 00:19:59,861
There'll be a couple of things, because we

479
00:19:59,861 --> 00:20:01,202
have a large player base, and they all

480
00:20:01,202 --> 00:20:02,363
have different wants and needs.

481
00:20:03,179 --> 00:20:05,960
That was across 48 weeks, because we take Christmas off,

482
00:20:05,960 --> 00:20:07,760
and a couple of other ones across the year.

483
00:20:07,760 --> 00:20:11,401
But actually, of all of those weeks,

484
00:20:11,401 --> 00:20:14,762
in terms of inside the studio, none of them

485
00:20:14,762 --> 00:20:17,803
had any day or any week without a change.

486
00:20:17,803 --> 00:20:19,264
And they're not all big changes.

487
00:20:19,264 --> 00:20:21,905
I mean, there are some things where we bring in hardening

488
00:20:21,905 --> 00:20:23,525
playthroughs towards the end of a project,

489
00:20:23,525 --> 00:20:26,646
just to make sure that maybe our backlog doesn't mean anything,

490
00:20:26,646 --> 00:20:27,706
because the game we've just built,

491
00:20:27,706 --> 00:20:29,247
we need to make sure that we make that better,

492
00:20:29,247 --> 00:20:31,027
rather than just doing the thing we wrote a week ago.

493
00:20:31,723 --> 00:20:35,585
are getting better involvement from our concept artists

494
00:20:35,585 --> 00:20:38,626
earlier in the game, or earlier in the development.

495
00:20:38,626 --> 00:20:40,627
But it's also things like somebody didn't like

496
00:20:40,627 --> 00:20:42,708
the headings that we used on retrospective documents,

497
00:20:42,708 --> 00:20:43,828
so we changed those.

498
00:20:43,828 --> 00:20:46,670
There was one day where we decided we'd have

499
00:20:46,670 --> 00:20:48,831
weird refruit Wednesdays because it was getting a bit boring

500
00:20:48,831 --> 00:20:50,331
in the middle of the week.

501
00:20:50,331 --> 00:20:52,573
But all those things make the lives of our developers

502
00:20:52,573 --> 00:20:53,733
and our teams a little bit better.

503
00:20:53,733 --> 00:20:56,514
And when you see that things are getting better over time,

504
00:20:56,514 --> 00:20:59,436
and continuously changing and making

505
00:20:59,436 --> 00:21:00,876
what they're doing easier for them,

506
00:21:01,600 --> 00:21:02,922
We get better sentiment internally,

507
00:21:02,922 --> 00:21:04,765
and that's reflected in our player base,

508
00:21:04,765 --> 00:21:06,067
and they enjoy seeing what we're doing.

509
00:21:06,067 --> 00:21:10,052
So what we're going to do next, and what we're trying to do,

510
00:21:10,052 --> 00:21:11,494
gets a little bit scary.

511
00:21:11,494 --> 00:21:14,118
We're trying to get the teams more autonomous.

512
00:21:14,118 --> 00:21:15,600
We're trying to give them more ownership.

513
00:21:16,797 --> 00:21:20,458
let them pitch the release schedule, let them pitch what they're trying to do. Our devs

514
00:21:20,458 --> 00:21:25,099
are incredibly close to our player base. Every single one of them is on Twitter constantly.

515
00:21:25,099 --> 00:21:29,020
But they're listening to what the players are saying and what they're looking for. And

516
00:21:29,020 --> 00:21:33,301
I can't tell them what they should do when they know it better than I do. We have our

517
00:21:33,301 --> 00:21:36,502
design and our top-level group making sure that we're going in the right direction. But

518
00:21:36,502 --> 00:21:40,043
the actual specifics can come from our team and they'll probably do a better job than

519
00:21:40,043 --> 00:21:40,643
I will anyway.

520
00:21:42,050 --> 00:21:44,471
We're also trying to become more autonomous.

521
00:21:44,471 --> 00:21:46,191
Not autonomous, more automation.

522
00:21:46,191 --> 00:21:49,292
We have that process at the end.

523
00:21:49,292 --> 00:21:50,753
I do have the specialist testers that

524
00:21:50,753 --> 00:21:52,094
are dealing with merge conflicts.

525
00:21:52,094 --> 00:21:53,974
But trying to pick up an entire code base

526
00:21:53,974 --> 00:21:56,895
and move to more test-driven development and unit testing

527
00:21:56,895 --> 00:21:59,216
and more continuous integration is difficult.

528
00:21:59,216 --> 00:22:00,577
But it's something that we want to do,

529
00:22:00,577 --> 00:22:02,418
and it's something that we'll do with our future games.

530
00:22:02,418 --> 00:22:05,559
So that we know that we are testing it thoroughly,

531
00:22:05,559 --> 00:22:07,359
and we can push out faster and earlier

532
00:22:07,359 --> 00:22:09,540
without having to lock in that three-week process.

533
00:22:11,210 --> 00:22:13,955
We also want to try and move to a place where we are continuously deploying.

534
00:22:13,955 --> 00:22:17,982
I'd be much happier on my release day if I'd actually released it a month ago

535
00:22:17,982 --> 00:22:20,587
and flicked a switch for the players, because I know it's been running.

536
00:22:21,402 --> 00:22:22,603
We've done it recently.

537
00:22:22,603 --> 00:22:25,024
We released a telemetry package into RuneScape.

538
00:22:25,024 --> 00:22:27,625
The telemetry package itself and all the backend

539
00:22:27,625 --> 00:22:29,926
infrastructure required to run it had actually been

540
00:22:29,926 --> 00:22:32,266
running for about four or five months previously,

541
00:22:32,266 --> 00:22:34,487
and we were just gathering data to make sure it worked.

542
00:22:34,487 --> 00:22:36,748
It meant that our release day was a button switch.

543
00:22:36,748 --> 00:22:37,328
We turned it on.

544
00:22:37,328 --> 00:22:39,169
Well, actually we turned off the thing that said,

545
00:22:39,169 --> 00:22:40,030
don't show this to anybody,

546
00:22:40,030 --> 00:22:41,750
and suddenly everybody had access.

547
00:22:41,750 --> 00:22:44,491
It was the smoothest release day I've ever had.

548
00:22:45,330 --> 00:22:49,793
But we had to put things in place that would hide it from the players while we were testing it.

549
00:22:49,793 --> 00:22:53,136
And that's difficult. Built from the ground up would be a little bit easier.

550
00:22:53,136 --> 00:22:57,919
A lot of what we're trying to do is retroactively fit it to a very old game.

551
00:22:57,919 --> 00:23:00,081
And so I hope you enjoyed this. There's some takeaways.

552
00:23:00,081 --> 00:23:02,583
I encourage you to mix your disciplines.

553
00:23:02,583 --> 00:23:06,646
Every time I speak to people and they have problems with communication,

554
00:23:06,646 --> 00:23:08,868
it's generally because they've siloed the discipline teams.

555
00:23:08,868 --> 00:23:09,849
Holding QA off to the end.

556
00:23:10,812 --> 00:23:14,174
handing things from an artist to a developer and back again.

557
00:23:14,174 --> 00:23:16,115
Mixing them up means that you're getting better integration

558
00:23:16,115 --> 00:23:17,876
between those teams, and they have different ideas

559
00:23:17,876 --> 00:23:18,797
that help each other's work.

560
00:23:18,797 --> 00:23:21,799
Consider leapfrogging.

561
00:23:21,799 --> 00:23:24,661
That was the biggest change that we've done recently,

562
00:23:24,661 --> 00:23:26,302
and it's had a good impact.

563
00:23:26,302 --> 00:23:27,362
Teams aren't as stressed.

564
00:23:27,362 --> 00:23:29,263
They get pretty stressed one month

565
00:23:29,263 --> 00:23:31,305
when they're just about to release something

566
00:23:31,305 --> 00:23:32,745
massive they've been working on, and they're

567
00:23:32,745 --> 00:23:34,266
a little bit afraid of how the players react.

568
00:23:34,266 --> 00:23:36,127
But that stress is based on them hoping

569
00:23:36,127 --> 00:23:37,388
that the game is good enough, rather than

570
00:23:37,388 --> 00:23:39,309
worrying if it's going to fall over when it goes live.

571
00:23:40,109 --> 00:23:42,211
So it means that they are able to focus on something big

572
00:23:42,211 --> 00:23:44,152
and don't have to have everything else there.

573
00:23:44,152 --> 00:23:46,093
We still have our group at the top

574
00:23:46,093 --> 00:23:49,556
who are making sure that we're going in the right direction.

575
00:23:49,556 --> 00:23:51,117
Consider why you're doing things in process.

576
00:23:51,117 --> 00:23:52,878
Sometimes it's really useful.

577
00:23:52,878 --> 00:23:54,600
Sometimes it's essential.

578
00:23:54,600 --> 00:23:56,261
But it isn't always.

579
00:23:56,261 --> 00:23:57,502
Make sure you're doing it for the right reasons.

580
00:23:57,502 --> 00:24:00,564
And then maintenance can be a massive distraction.

581
00:24:00,564 --> 00:24:02,245
I'm sure everybody here who's released a game

582
00:24:02,245 --> 00:24:04,347
or released any sort of service has seen the impact

583
00:24:04,347 --> 00:24:06,028
that you've had on your development ability

584
00:24:06,028 --> 00:24:07,509
when you have to deal with all the problems

585
00:24:07,509 --> 00:24:08,990
that you're seeing as it goes live.

586
00:24:09,533 --> 00:24:11,755
it's going to happen, you're gonna have to deal with it.

587
00:24:11,755 --> 00:24:13,838
Make sure that you've put it into place

588
00:24:13,838 --> 00:24:15,500
and you understand how you're gonna deal

589
00:24:15,500 --> 00:24:17,262
with that maintenance before you go.

590
00:24:17,262 --> 00:24:17,762
So thank you very much.

591
00:24:17,762 --> 00:24:18,323
I hope you enjoyed the talk.

592
00:24:25,619 --> 00:24:26,780
I tried to go fast enough.

593
00:24:26,780 --> 00:24:27,740
We've got five minutes.

594
00:24:27,740 --> 00:24:30,801
If anybody would like to ask any questions, please.

595
00:24:30,801 --> 00:24:32,782
Straight in.

596
00:24:32,782 --> 00:24:36,724
So I imagine, since it's a continuous development cycle,

597
00:24:36,724 --> 00:24:38,304
you have a schedule far ahead.

598
00:24:38,304 --> 00:24:40,385
Did you have to pitch out your entire schedule

599
00:24:40,385 --> 00:24:42,366
and just start over when you switched to this?

600
00:24:43,034 --> 00:24:46,277
No, but because of the structure that we had in place,

601
00:24:46,277 --> 00:24:47,699
we were able to transition nicely.

602
00:24:47,699 --> 00:24:49,481
We knew what we were building, and we knew the day

603
00:24:49,481 --> 00:24:50,942
that we'd have to move.

604
00:24:50,942 --> 00:24:52,844
So what happened is we just moved one of the teams into it.

605
00:24:52,844 --> 00:24:55,687
I would recommend that if you ever do something like that,

606
00:24:55,687 --> 00:24:57,549
don't do it over Christmas like we did,

607
00:24:57,549 --> 00:24:59,791
because the first team that was releasing on January

608
00:24:59,791 --> 00:25:02,614
was crying through the Christmas holidays.

609
00:25:02,614 --> 00:25:04,075
Don't do that, that's a terrible idea.

610
00:25:06,220 --> 00:25:06,260
Hi.

611
00:25:06,260 --> 00:25:12,104
How do you prevent the dev teams from handing off tech debt

612
00:25:12,104 --> 00:25:12,664
to Ninja?

613
00:25:12,664 --> 00:25:15,566
And then who deals with live issues?

614
00:25:15,566 --> 00:25:19,728
And then secondarily, do you have any issues with Loke

615
00:25:19,728 --> 00:25:20,528
with your tight schedule?

616
00:25:20,869 --> 00:25:22,650
Sorry, what was the localization?

617
00:25:22,650 --> 00:25:22,770
Ah.

618
00:25:22,770 --> 00:25:25,612
So to answer the first question, Ninja

619
00:25:25,612 --> 00:25:27,493
will only ever jump on a project after it's

620
00:25:27,493 --> 00:25:28,434
a number of months old.

621
00:25:28,434 --> 00:25:29,955
They won't fix things immediately.

622
00:25:29,955 --> 00:25:33,498
We make sure that the tech dev, our lead tech dev and our build

623
00:25:33,498 --> 00:25:35,419
manager, as they're merging, that's

624
00:25:35,419 --> 00:25:37,521
their kind of place to really put the final check to make

625
00:25:37,521 --> 00:25:38,181
sure everything's OK.

626
00:25:38,181 --> 00:25:39,582
There's also code reviews and everything

627
00:25:39,582 --> 00:25:42,084
during the process, as you'd expect.

628
00:25:42,450 --> 00:25:46,231
In terms of localization, we have an internal localization

629
00:25:46,231 --> 00:25:47,712
team, which is really handy.

630
00:25:47,712 --> 00:25:49,773
Jagex has been built up from the ground

631
00:25:49,773 --> 00:25:52,414
to do everything internally, so handing out and having

632
00:25:52,414 --> 00:25:52,854
to come back.

633
00:25:52,854 --> 00:25:54,955
It is definitely a pain point for us, though.

634
00:25:54,955 --> 00:25:57,196
We have to make sure that we are getting all of our content

635
00:25:57,196 --> 00:25:58,596
locked down early enough.

636
00:25:58,596 --> 00:26:00,998
And with all of those things coming into the localization

637
00:26:00,998 --> 00:26:02,578
team at the same time, it's very difficult.

638
00:26:02,578 --> 00:26:03,559
But our guys are great.

639
00:26:03,559 --> 00:26:04,719
They managed to keep up on top of it.

640
00:26:04,719 --> 00:26:06,280
And we're trying to make their lives easier right now.

641
00:26:06,280 --> 00:26:07,940
It's actually on my list of things I need to change.

642
00:26:07,940 --> 00:26:09,141
Thank you.

643
00:26:10,257 --> 00:26:11,497
I'm going to keep swapping.

644
00:26:11,497 --> 00:26:11,978
OK, hi.

645
00:26:11,978 --> 00:26:15,200
So I was wondering, how many producers

646
00:26:15,200 --> 00:26:17,061
does it take to manage all these teams?

647
00:26:17,061 --> 00:26:18,062
Or are you the only producer?

648
00:26:18,062 --> 00:26:19,063
Or how does it work?

649
00:26:19,063 --> 00:26:22,165
There's only one person in the RuneScape team

650
00:26:22,165 --> 00:26:23,566
who is the title producer, and that's me.

651
00:26:24,537 --> 00:26:26,158
What we have is a product owner.

652
00:26:26,158 --> 00:26:28,199
So if you're familiar with Scrum and the concept

653
00:26:28,199 --> 00:26:29,960
of the product owner and Scrum Master,

654
00:26:29,960 --> 00:26:32,080
we tweaked it a little bit.

655
00:26:32,080 --> 00:26:34,501
Each of the teams has its own product owner,

656
00:26:34,501 --> 00:26:35,582
but those teams are also,

657
00:26:35,582 --> 00:26:37,103
those product owners are also developers.

658
00:26:37,103 --> 00:26:38,803
It's kind of stretching the rules,

659
00:26:38,803 --> 00:26:40,744
but it's worked for us and we've kept it that way.

660
00:26:40,744 --> 00:26:41,745
Each of them has two jobs,

661
00:26:41,745 --> 00:26:43,605
but they also have support for myself.

662
00:26:43,605 --> 00:26:46,226
I do have two project managers who tend to do things

663
00:26:46,226 --> 00:26:48,047
that go outside of the development team,

664
00:26:48,047 --> 00:26:49,688
but I don't have an internally focused producer

665
00:26:49,688 --> 00:26:50,528
on the main team.

666
00:26:51,269 --> 00:26:53,711
Okay, cool, thanks. No problem.

667
00:26:53,711 --> 00:27:00,078
Thanks for a great talk. What happens if you miss a Monday, like don't receive a sign-off on

668
00:27:00,078 --> 00:27:02,440
Friday? You postpone one day or one week?

669
00:27:02,440 --> 00:27:06,844
So I was trying to cover that. It depends on the issue.

670
00:27:07,484 --> 00:27:11,328
We have occasionally done a Tuesday. It hasn't been nice.

671
00:27:11,328 --> 00:27:15,792
Because also, slipping to the Tuesday is reducing your test time on the following week.

672
00:27:15,792 --> 00:27:19,595
So it may be an option as long as the following week is not a massive update,

673
00:27:19,595 --> 00:27:21,297
but it's something a little bit more routine.

674
00:27:21,297 --> 00:27:24,620
Everything we do, we try and avoid that.

675
00:27:25,237 --> 00:27:26,837
We make sure that the content coming

676
00:27:26,837 --> 00:27:29,698
into the team as a release team is actually ready at that point.

677
00:27:29,698 --> 00:27:31,219
And if it isn't going to be ready at that point,

678
00:27:31,219 --> 00:27:33,559
I know weeks or months in advance.

679
00:27:33,559 --> 00:27:35,420
And at that point, we're adjusting the entire release

680
00:27:35,420 --> 00:27:37,401
schedule, not just one or two weeks.

681
00:27:37,401 --> 00:27:39,041
So it's the concept of making sure

682
00:27:39,041 --> 00:27:40,382
that you're looking holistically on everything

683
00:27:40,382 --> 00:27:42,823
you're changing, not just that week, and then

684
00:27:42,823 --> 00:27:44,563
the following week and the following week.

685
00:27:44,563 --> 00:27:45,724
It's a bit of a juggling act, but it's doable.

686
00:27:45,724 --> 00:27:47,384
I have a quick second question.

687
00:27:47,384 --> 00:27:51,526
If your Ninja team is releasing an update that's not critical,

688
00:27:51,526 --> 00:27:53,546
they follow the release schedule, the release team

689
00:27:53,546 --> 00:27:54,007
schedule?

690
00:27:54,274 --> 00:27:58,838
Yeah, if they're doing something that is a significant or named update, they'll always do a...

691
00:27:58,838 --> 00:28:02,521
they will work with the release team to make sure it goes through the regular process.

692
00:28:02,521 --> 00:28:05,863
It tends to be fixes or tweaks or changes where they just kind of sideline it.

693
00:28:05,863 --> 00:28:08,726
But to be honest, we kind of do it on a case-by-case basis.

694
00:28:08,726 --> 00:28:15,571
One of the things we have kind of leaned on a bit, occasionally, is we kind of fudged doing it on Monday,

695
00:28:15,571 --> 00:28:18,093
is we had a Ninja update ready to go.

696
00:28:18,692 --> 00:28:23,954
and found a very last minute bug. It came in right in the middle of the release team's test

697
00:28:23,954 --> 00:28:31,396
week. We ended up having to slide in a ninja update at that time. We saved it and it was a bit

698
00:28:31,396 --> 00:28:41,359
hairy. But it is very, very rare that happens. It's nice having a backlog ready to go.

699
00:28:41,359 --> 00:28:43,840
Thanks. Thank you.

700
00:28:44,562 --> 00:28:50,305
believe we're about 80 calling. Including each of the dev code,

701
00:28:50,305 --> 00:28:54,088
yeah, about 80. So how do you deal with conflicts when people

702
00:28:54,088 --> 00:29:00,372
disagree on process or what goes into a release? I rely on

703
00:29:00,372 --> 00:29:01,853
myself and I'm the bad guy.

704
00:29:03,836 --> 00:29:07,459
There are cases where I have to say we're doing this and not

705
00:29:07,459 --> 00:29:08,120
that.

706
00:29:08,120 --> 00:29:09,841
We tend to have those conversations fairly far

707
00:29:09,841 --> 00:29:10,662
in advance.

708
00:29:10,662 --> 00:29:13,104
There are definitely pieces of conflict,

709
00:29:13,104 --> 00:29:15,946
but quite often it comes down to myself and lead designer

710
00:29:15,946 --> 00:29:19,109
will have a chat and try and come to a good conclusion.

711
00:29:19,109 --> 00:29:21,611
So far we have the trust of our, I say so far,

712
00:29:21,611 --> 00:29:23,112
we have the trust of our dev team.

713
00:29:23,112 --> 00:29:25,374
They believe that we're doing the right thing.

714
00:29:25,374 --> 00:29:26,775
So when we do make those choices,

715
00:29:26,775 --> 00:29:28,897
they've seen the benefits that it's had in the past,

716
00:29:28,897 --> 00:29:29,537
and they trust us.

717
00:29:29,537 --> 00:29:31,599
If we lose that trust, I don't think I can keep doing that,

718
00:29:31,599 --> 00:29:32,620
but that's a bigger problem.

719
00:29:33,195 --> 00:29:40,217
you said the ninja team jumps on months after a release goes

720
00:29:40,217 --> 00:29:44,718
out. Is the dev team that put changes into a release, are they

721
00:29:44,718 --> 00:29:48,439
responsible for monitoring those changes live and responding to

722
00:29:48,439 --> 00:29:48,679
them?

723
00:29:48,679 --> 00:29:52,319
Absolutely. If you consider the release team themselves and the

724
00:29:52,319 --> 00:29:54,980
testers there, they actually get bolstered by whatever team is

725
00:29:54,980 --> 00:29:57,541
doing the release in that week. Because that team doesn't really

726
00:29:57,541 --> 00:29:59,341
have anything else to do. They need to focus on what they're

727
00:29:59,341 --> 00:30:01,561
putting out the door. So they become just kind of a bit of an

728
00:30:01,561 --> 00:30:01,841
aid.

729
00:30:02,362 --> 00:30:04,003
And that also kind of helps with the conflict,

730
00:30:04,003 --> 00:30:06,224
in that teams tend to share amongst each other

731
00:30:06,224 --> 00:30:07,585
when they're in trouble.

732
00:30:07,585 --> 00:30:10,047
We frequently, each of the POs and myself

733
00:30:10,047 --> 00:30:12,969
will sit down either weekly or monthly,

734
00:30:12,969 --> 00:30:14,630
depending on how much stuff is going on,

735
00:30:14,630 --> 00:30:17,151
and just chat about what's going on,

736
00:30:17,151 --> 00:30:19,293
and make sure that we have a good relationship between all

737
00:30:19,293 --> 00:30:20,794
our teams, rather than a competitive one.

738
00:30:20,794 --> 00:30:22,575
So everybody's kind of helping everybody.

739
00:30:22,575 --> 00:30:23,075
Thanks.

740
00:30:24,540 --> 00:30:28,142
Hi, thanks. My question is kind of related. So if you had a bug

741
00:30:28,142 --> 00:30:32,264
that went out, you know, through testing, got out to a release,

742
00:30:32,264 --> 00:30:35,385
how fast would be your hot fix time? Would it be you would

743
00:30:35,385 --> 00:30:38,467
inject into the next week's release or would it be the three

744
00:30:38,467 --> 00:30:39,307
weeks out?

745
00:30:39,307 --> 00:30:43,429
No, if something goes wrong, our fastest hot fix has been ten

746
00:30:43,429 --> 00:30:46,931
minutes. We will fix anything that is a major issue within one

747
00:30:46,931 --> 00:30:51,473
to two days. Holding my hands up, we released the skill and

748
00:30:51,473 --> 00:30:53,934
there was a significant issue in it.

749
00:30:55,025 --> 00:30:56,166
Skill is a major piece of content.

750
00:30:56,166 --> 00:30:57,808
I'll try and do this fast.

751
00:30:57,808 --> 00:30:58,929
Skill is a major piece of content.

752
00:30:58,929 --> 00:31:00,390
It's thousands of hours of gameplay.

753
00:31:00,390 --> 00:31:02,251
The balance and progression curve

754
00:31:02,251 --> 00:31:04,053
was something that had an issue.

755
00:31:04,053 --> 00:31:06,955
We went from a point of trying to deal with the progression

756
00:31:06,955 --> 00:31:09,057
issue to having a fix to getting it

757
00:31:09,057 --> 00:31:13,140
have it built, tested, and live in under three days.

758
00:31:13,921 --> 00:31:16,783
So as a team, when we have to mobilize, we work fast.

759
00:31:16,783 --> 00:31:19,225
And we've built our deployment systems in a way that we can

760
00:31:19,225 --> 00:31:20,106
push something out quickly.

761
00:31:20,106 --> 00:31:21,767
So that's the big way that we try and do things.

762
00:31:21,767 --> 00:31:24,230
And it's that release team that does that fix and pushes

763
00:31:24,230 --> 00:31:24,670
that together?

764
00:31:24,670 --> 00:31:25,130
Absolutely.

765
00:31:25,130 --> 00:31:27,672
Well, the release team will test it, but the development

766
00:31:27,672 --> 00:31:29,594
team will be the people who make sure that it's working.

767
00:31:29,594 --> 00:31:31,175
It's their responsibility.

768
00:31:31,175 --> 00:31:33,077
Development team, that's what I meant.

769
00:31:33,077 --> 00:31:33,557
I'm sorry.

770
00:31:33,557 --> 00:31:33,937
Yeah, yeah.

771
00:31:33,937 --> 00:31:36,520
Part of giving them ownership means that they also have the

772
00:31:36,520 --> 00:31:36,860
response.

773
00:31:36,860 --> 00:31:38,761
Great power comes great responsibility, right?

774
00:31:38,761 --> 00:31:39,722
So we lean on them.

775
00:31:41,184 --> 00:31:47,105
Real quick, in one slide you showed the distinction between content and support teams and had

776
00:31:47,105 --> 00:31:54,508
on the Friday, two weeks before the Monday release, you had a merge of their two builds.

777
00:31:54,508 --> 00:31:57,869
And I was just wondering what you were merging at that point.

778
00:31:57,869 --> 00:32:03,250
What separate paths were being worked on such that a merge took an entire day?

779
00:32:04,009 --> 00:32:08,792
So, to give you a structure, an idea of the structure of our code base, we have a mainline

780
00:32:08,792 --> 00:32:12,175
and each of the teams will have a branch for the release and we're pulling those branches

781
00:32:12,175 --> 00:32:13,035
back together.

782
00:32:13,035 --> 00:32:15,837
We actually go round main.

783
00:32:15,837 --> 00:32:18,139
It gets a bit technical.

784
00:32:19,140 --> 00:32:22,882
We build a release cycle by taking two child branches,

785
00:32:22,882 --> 00:32:24,163
dodging main, putting them together,

786
00:32:24,163 --> 00:32:25,724
and then pulling that back down into main.

787
00:32:25,724 --> 00:32:27,726
Because trying to merge to main and then build out

788
00:32:27,726 --> 00:32:29,587
will actually cause us more of a delay.

789
00:32:29,587 --> 00:32:30,928
It's something that we've come around.

790
00:32:30,928 --> 00:32:33,190
It's one of those many, many changes that we've done.

791
00:32:33,190 --> 00:32:34,651
So yeah, those two are coming together

792
00:32:34,651 --> 00:32:35,612
into their own release build.

793
00:32:35,612 --> 00:32:38,414
And each of them will have the previous release.

794
00:32:38,414 --> 00:32:41,716
So when that build is made on the Friday,

795
00:32:41,716 --> 00:32:44,198
the following Monday, all the other development teams

796
00:32:44,198 --> 00:32:46,619
update all of their streams to make sure it matches that.

797
00:32:47,200 --> 00:32:49,701
It's a bit of chaos, but we've gotten it working.

798
00:32:49,701 --> 00:32:50,602
That's great.

799
00:32:50,602 --> 00:32:50,982
Thank you.

800
00:32:50,982 --> 00:32:51,142
Thanks.

801
00:32:51,142 --> 00:32:52,903
Great talk.

802
00:32:52,903 --> 00:32:55,205
I was wondering, your Ninja team,

803
00:32:55,205 --> 00:32:58,006
if you have any problem with motivation,

804
00:32:58,006 --> 00:33:02,489
since they are not as creative as other teams?

805
00:33:02,489 --> 00:33:04,410
And if you allow people to change teams,

806
00:33:04,410 --> 00:33:08,172
like if they're a Ninja team and they're just fixing bugs,

807
00:33:08,172 --> 00:33:10,273
if they want to do some release, do some content.

808
00:33:10,837 --> 00:33:13,398
We let people change teams quite frequently.

809
00:33:13,398 --> 00:33:14,338
Oh, I say frequently.

810
00:33:14,338 --> 00:33:15,479
We let them choose to change teams.

811
00:33:15,479 --> 00:33:16,799
There are occasionally times when we've

812
00:33:16,799 --> 00:33:18,220
had to move people into different groups.

813
00:33:18,220 --> 00:33:21,481
So the first question was moderation.

814
00:33:21,481 --> 00:33:22,122
Is it external?

815
00:33:22,122 --> 00:33:26,764
No, if they're always motivated to fix bugs, fix issues.

816
00:33:26,764 --> 00:33:29,745
Do you have any motivation about creativity

817
00:33:29,745 --> 00:33:30,686
from your Ninja team?

818
00:33:30,686 --> 00:33:32,627
They work very closely with the community team

819
00:33:32,627 --> 00:33:34,107
and themselves, watching exactly what's

820
00:33:34,107 --> 00:33:35,028
happening with the players.

821
00:33:35,028 --> 00:33:37,289
Also, we have a lot of analytics and stats coming back,

822
00:33:37,289 --> 00:33:38,129
so we're watching that too.

823
00:33:38,129 --> 00:33:40,530
And we let them choose what they're building from that.

824
00:33:41,204 --> 00:33:43,465
Okay and that motivates them too.

825
00:33:43,465 --> 00:33:46,325
Oh motivate, sorry, yeah definitely.

826
00:33:46,325 --> 00:33:49,566
If you see a release come out and you have about 15, 20,

827
00:33:49,566 --> 00:33:50,686
or 15,000 people screaming at you saying

828
00:33:50,686 --> 00:33:51,967
that is the best fix ever,

829
00:33:51,967 --> 00:33:54,987
they have a goal where on a major release

830
00:33:54,987 --> 00:33:58,448
they want to make sure that at least three posts on Reddit

831
00:33:58,448 --> 00:34:00,669
are saying this is the best ninja fix ever

832
00:34:00,669 --> 00:34:03,410
and it jumps over the release content.

833
00:34:04,190 --> 00:34:05,292
It works for me.

834
00:34:05,292 --> 00:34:06,054
Cool, thanks.

835
00:34:06,054 --> 00:34:09,000
I'm going to have to wrap up, I think.

836
00:34:09,000 --> 00:34:10,083
I'll do the two.

837
00:34:10,083 --> 00:34:12,327
We can say if anybody else has any questions,

838
00:34:12,327 --> 00:34:15,354
I'll be over in the wrap up room and we can go there.

839
00:34:16,700 --> 00:34:24,605
Do you have any analysts working in each team, or do you have an analyst working for all teams?

840
00:34:24,605 --> 00:34:25,685
Is it analysts?

841
00:34:25,685 --> 00:34:26,106
Yeah.

842
00:34:26,106 --> 00:34:28,147
Yes, so we have a game analytics team.

843
00:34:28,147 --> 00:34:31,109
They're a shared resource rather than trying to employ six analysts.

844
00:34:31,109 --> 00:34:34,351
Also, they have a more holistic view in that case.

845
00:34:34,351 --> 00:34:34,971
Okay, thanks.

846
00:34:34,971 --> 00:34:35,592
Thanks.

847
00:34:35,592 --> 00:34:37,033
Last question.

848
00:34:37,033 --> 00:34:37,213
Go, go, go.

849
00:34:37,213 --> 00:34:40,635
So you have multiple teams of different disciplines.

850
00:34:40,635 --> 00:34:43,997
How is hierarchy organized?

851
00:34:43,997 --> 00:34:45,338
Like your official boss?

852
00:34:45,522 --> 00:34:48,504
Technically all line management follows the discipline lines.

853
00:34:48,504 --> 00:34:52,186
There is no line management within the development groups.

854
00:34:52,186 --> 00:34:56,248
So it looks like a traditional line management hierarchy.

855
00:34:56,248 --> 00:34:56,308
OK.

856
00:34:56,308 --> 00:34:58,890
All right, thank you very much, everybody.

857
00:34:58,890 --> 00:35:01,351
If you have any questions, I'll be in the rapid thing.

858
00:35:01,351 --> 00:35:01,632
Thank you.

