1
00:00:06,068 --> 00:00:07,849
Hi there, and welcome to The Sound of Anthem.

2
00:00:08,489 --> 00:00:10,770
We're very excited to be here and have an opportunity

3
00:00:10,830 --> 00:00:11,710
to show you some of the things

4
00:00:11,750 --> 00:00:12,931
that we accomplished on this game.

5
00:00:13,811 --> 00:00:14,751
Today, we're gonna walk you through

6
00:00:14,792 --> 00:00:17,252
some of the high-level concepts of the core audio experience

7
00:00:17,813 --> 00:00:20,113
but then also dive deep into some of the more interesting

8
00:00:20,514 --> 00:00:22,794
sound challenges we faced while working on this project.

9
00:00:23,555 --> 00:00:24,955
We at BioWare take great pride

10
00:00:25,015 --> 00:00:27,436
in building unique, engaging audio experiences.

11
00:00:27,876 --> 00:00:29,477
That pride is further bolstered

12
00:00:29,497 --> 00:00:30,877
by seeing all of you here today

13
00:00:31,777 --> 00:00:32,818
with an interest in what we do.

14
00:00:33,940 --> 00:00:37,144
Our studio is full of passionate and dedicated developers

15
00:00:37,464 --> 00:00:39,547
trying not only to make the best experience for the players,

16
00:00:40,307 --> 00:00:41,389
but for ourselves as well.

17
00:00:41,609 --> 00:00:44,252
I mean, why else would anyone move to the Canadian North

18
00:00:44,352 --> 00:00:46,795
or the deserts of Texas, if not to work at Bioware?

19
00:00:47,656 --> 00:00:49,498
With that, let's start off by telling you a little bit

20
00:00:49,539 --> 00:00:50,279
about who we are.

21
00:00:50,299 --> 00:00:53,583
Hey everyone.

22
00:00:54,459 --> 00:00:56,720
I'm Cody. I'm an audio director here at Bioware.

23
00:00:57,340 --> 00:00:59,901
I've been working in the industry for a little over six years now.

24
00:01:00,442 --> 00:01:03,143
I got my start doing cinematics for Dragon Age Inquisition

25
00:01:03,683 --> 00:01:06,144
after graduating from Vancouver Film School for sound design.

26
00:01:06,904 --> 00:01:10,285
On Anthem, I had a large chunk of product ownership for the game,

27
00:01:10,325 --> 00:01:12,606
including overseeing the gameplay audio crew

28
00:01:12,726 --> 00:01:14,807
and managing technical system design for audio.

29
00:01:17,737 --> 00:01:20,157
As for me, I've been working in the games industry since 2006.

30
00:01:20,878 --> 00:01:23,758
Initially, I studied out of the Art Institute of Vancouver,

31
00:01:23,918 --> 00:01:26,179
and then like Cody and many of the others at BioWare,

32
00:01:27,059 --> 00:01:29,340
I took the audio program at the Vancouver Film School.

33
00:01:30,080 --> 00:01:31,721
More relevant to our talk, I've been at BioWare

34
00:01:31,741 --> 00:01:33,901
for the last six years, where among other things,

35
00:01:33,981 --> 00:01:35,182
I am the director of audio.

36
00:01:36,002 --> 00:01:38,563
Up next, I want to introduce to you the core audio team.

37
00:01:40,423 --> 00:01:41,824
This is our work family.

38
00:01:42,719 --> 00:01:46,162
This is, or at least was, the Anthem shipping team at Bioware.

39
00:01:46,563 --> 00:01:50,687
What Cody and I will be presenting today is a result of many months and

40
00:01:50,727 --> 00:01:55,211
years of hard work by these fine people, and we couldn't be prouder to be doing so.

41
00:01:56,593 --> 00:01:58,354
Now I'm going to walk you through some of the core tenets and

42
00:01:58,374 --> 00:02:02,358
understandings about the audio vision and how we set ourselves up to execute upon those.

43
00:02:05,335 --> 00:02:08,198
Anthem was a project that's been in the works for a number of years at Bioware.

44
00:02:08,479 --> 00:02:15,307
Starting small, but even in its infancy, it had been a noticeable departure from the titles and play styles that we're typically known for.

45
00:02:15,327 --> 00:02:23,697
Where previously we lent into fantasy of the Dragon Age or sci-fi of Mass Effect, Anthem was more of a combination of those, a science fantasy reality.

46
00:02:24,982 --> 00:02:27,063
While you can see elements of our past franchises,

47
00:02:27,523 --> 00:02:29,604
with some of Anthem's focus on character development

48
00:02:29,644 --> 00:02:31,505
or exploration of exotic locales,

49
00:02:32,205 --> 00:02:34,126
it was primarily fixated from day one

50
00:02:34,306 --> 00:02:37,508
to bringing super heroic, rewarding and engaging gameplay,

51
00:02:38,308 --> 00:02:39,929
complex and deadly enemy encounters,

52
00:02:40,269 --> 00:02:41,730
all while playing together with your friends.

53
00:02:42,490 --> 00:02:45,112
So with that, the audio vision we set for ourselves

54
00:02:45,192 --> 00:02:45,792
followed suit.

55
00:02:46,192 --> 00:02:49,154
Our drive was to produce the heroic action

56
00:02:49,194 --> 00:02:50,775
and technology of the Marvel universe,

57
00:02:51,455 --> 00:02:54,676
set in the living, foreign, hostile world of Avatar.

58
00:02:57,003 --> 00:03:00,045
In addition to that, we focused heavily on immersion and believability.

59
00:03:00,226 --> 00:03:06,071
While the overarching idea of the game and direction of our sounds had them lean into the otherworldly and fantastical,

60
00:03:06,671 --> 00:03:11,415
our systems within the engine focused on treating them as if they had originated within the world as we know it.

61
00:03:12,491 --> 00:03:14,571
These were systems of dynamic reverbs

62
00:03:14,611 --> 00:03:16,672
to be the glue that pulled all the sounds together.

63
00:03:17,292 --> 00:03:20,453
Interior versus exterior mixing based on your position

64
00:03:20,533 --> 00:03:22,173
or sources and defined areas.

65
00:03:23,034 --> 00:03:24,814
Early and late reflection calculations

66
00:03:24,914 --> 00:03:27,315
providing dynamic feedback from the area around you

67
00:03:27,335 --> 00:03:29,195
to inform slap off walls, et cetera.

68
00:03:30,656 --> 00:03:33,576
Switching content tails on area type.

69
00:03:33,776 --> 00:03:35,357
This is for weapons and explosions,

70
00:03:35,397 --> 00:03:37,437
having unique assets whenever they originate

71
00:03:38,037 --> 00:03:39,438
for wherever they originated on the map.

72
00:03:40,412 --> 00:03:46,698
roll-offs based on the speed of sound calculations for accuracy in proper delays on big explosions and thunderclaps,

73
00:03:47,539 --> 00:03:51,643
and then in relative orientation to focus the mix on what the player is looking at.

74
00:03:52,383 --> 00:03:55,967
The result being an immersive, but out-of-this-world audio experience.

75
00:03:58,329 --> 00:04:02,533
Next I'm going to walk you through some of the tools that we utilized to achieve these goals.

76
00:04:03,805 --> 00:04:06,046
To begin, our toolset, for those of you not aware,

77
00:04:06,567 --> 00:04:08,008
BioWare and nearly EA-wide,

78
00:04:08,028 --> 00:04:10,030
we use Frostbite as our development game engine.

79
00:04:10,930 --> 00:04:12,652
Created initially by DICE in Sweden

80
00:04:12,672 --> 00:04:13,692
for the Battlefield games,

81
00:04:14,413 --> 00:04:18,116
BioWare was a pioneer in bringing a tool

82
00:04:18,136 --> 00:04:20,237
that was built for first-person shooters primarily,

83
00:04:20,738 --> 00:04:23,260
and then have it serve a wider variety of titles.

84
00:04:24,120 --> 00:04:26,282
Our first game using it was Dragon Age Inquisition,

85
00:04:26,943 --> 00:04:28,704
where both Cody and I started with the company.

86
00:04:29,717 --> 00:04:36,939
It's a very powerful tool, its main benefit being that it's set up in a way to allow teams to access all other portions of the game in one way or another.

87
00:04:38,259 --> 00:04:45,861
So essentially, whatever you see in a level, or in a character blueprint, or in an animation timeline, you can access back to its root,

88
00:04:46,142 --> 00:04:50,983
then pull events and parameters off to inform your sounds. As you can imagine, it can be very empowering.

89
00:04:51,783 --> 00:04:58,125
Here are just a couple screenshots of three of our audio patches to show some of the level's complexity on that back end after we've received events.

90
00:05:00,585 --> 00:05:05,587
First, you can see it takes a modular approach to building up patches using nodes of various functions,

91
00:05:06,228 --> 00:05:10,350
moving from inputs on the left to sample playback and manipulation in the middle,

92
00:05:10,770 --> 00:05:11,851
to outputs on the right.

93
00:05:12,631 --> 00:05:16,733
You can see that there are vast possibilities and complexity within as well.

94
00:05:17,274 --> 00:05:20,075
This last patch here is our master patch for our player weapons,

95
00:05:20,595 --> 00:05:24,237
the primarily yellow stack in the middle representing many elements firing together

96
00:05:24,297 --> 00:05:25,938
to essentially build a sound at playback.

97
00:05:26,640 --> 00:05:28,281
rather than just playing something preconceived.

98
00:05:28,581 --> 00:05:31,283
Very similar to stacking up audio assets in a DAW.

99
00:05:32,263 --> 00:05:35,425
I'm not going to go into much more detail about the tool set itself,

100
00:05:36,006 --> 00:05:37,787
as there are more interesting things to see and hear,

101
00:05:38,227 --> 00:05:40,428
but I just wanted to give you a brief peek behind the scenes

102
00:05:40,949 --> 00:05:44,291
to show that many of our sounds do follow this same approach.

103
00:05:46,892 --> 00:05:47,493
Source building.

104
00:05:47,533 --> 00:05:50,915
So a major foundation and tool for our work

105
00:05:50,975 --> 00:05:53,196
is finding unique and interesting source materials.

106
00:05:54,011 --> 00:05:59,879
Over the project cycle, our internal libraries grow exponentially as we put heavy importance on gathering content

107
00:06:00,099 --> 00:06:03,143
that will help us create an experience unique to us.

108
00:06:04,285 --> 00:06:10,994
With regards to recording, here are some pictures of a handful of sessions that our team has done in the last couple of years.

109
00:06:12,446 --> 00:06:18,967
covering everything from dropping and smashing cars in a junkyard, handling antique knobs and switches, didgeridooing a didgeridoo,

110
00:06:19,727 --> 00:06:24,408
taking part in cross-team weapon recordings, we did big walla sessions,

111
00:06:25,328 --> 00:06:26,389
lots of ambiences,

112
00:06:27,329 --> 00:06:32,690
electro-sluice or electromagnetic captures of everything, plunging yogurt, blacksmith shops,

113
00:06:33,010 --> 00:06:35,730
a bumblebee in a water bottle, singing bowls,

114
00:06:36,711 --> 00:06:37,591
and squeaky floors,

115
00:06:38,911 --> 00:06:39,771
and on and on and on.

116
00:06:40,671 --> 00:06:41,651
So in addition to that...

117
00:06:42,507 --> 00:06:45,108
Modular synthesis was a big contributor for this project.

118
00:06:45,709 --> 00:06:48,210
As you can see, our previous sound effects supervisor, Mike Kent,

119
00:06:48,250 --> 00:06:52,032
had caught the modular bug pretty bad over the years, leading to ship.

120
00:06:52,953 --> 00:06:55,094
This condition, fortunately and unfortunately,

121
00:06:56,275 --> 00:06:59,097
spread within our team, seeing some people building their own racks

122
00:06:59,157 --> 00:07:01,859
and others experimenting more with our multiple hardware synths

123
00:07:02,139 --> 00:07:03,239
that we pass around the studio.

124
00:07:04,060 --> 00:07:07,282
But from this rack, Mike had developed and defined

125
00:07:07,342 --> 00:07:10,684
many of our sound palettes and iconic earth-shattering content.

126
00:07:11,352 --> 00:07:16,014
It inspired and often functioned as a communal collaboration spot within the halls of BioWare Edmonton,

127
00:07:16,774 --> 00:07:18,875
but always seemed to deliver something new and amazing.

128
00:07:19,395 --> 00:07:23,097
Here are a couple clips of the team catching some modular source

129
00:07:23,297 --> 00:07:26,638
and some of the in-game content where the results were worked into layers.

130
00:08:15,468 --> 00:08:18,330
Moving off of our tools, we're saying into some game content.

131
00:08:18,831 --> 00:08:20,052
First of all, we'll talk about music.

132
00:08:20,512 --> 00:08:23,655
Music is often seen as the most important element in a game,

133
00:08:23,795 --> 00:08:24,936
or any media for that matter.

134
00:08:25,316 --> 00:08:27,398
It provides the emotion, the suspense,

135
00:08:27,438 --> 00:08:30,060
the drive to an experience that in many cases

136
00:08:30,080 --> 00:08:30,941
would have been void of it.

137
00:08:31,641 --> 00:08:33,983
It's an understatement that in any of our projects,

138
00:08:34,043 --> 00:08:36,545
when the music is implemented, it changes from essentially

139
00:08:36,585 --> 00:08:39,447
being a tech demo to a living, breathing experience.

140
00:08:40,648 --> 00:08:42,910
It always acts as a great unifier with the team at large,

141
00:08:43,191 --> 00:08:44,572
something for everybody to get behind.

142
00:08:45,337 --> 00:08:47,679
With the music for Anthem, we got a mix of otherworldly sounds,

143
00:08:48,279 --> 00:08:51,982
driving, action-filled beats, and a mysterious suspense all in the right amounts.

144
00:08:53,664 --> 00:08:57,948
To get this, something we do for all our games of Bioware is develop a series of palettes for our content.

145
00:08:58,488 --> 00:09:01,911
We do this for defining various factions of enemies,

146
00:09:02,472 --> 00:09:04,093
suit variants in the case of Anthem,

147
00:09:05,034 --> 00:09:09,278
weapon types, areas within the world, or in this case, the emotional pillars of music.

148
00:09:10,759 --> 00:09:12,681
So working with our project's creative director,

149
00:09:13,561 --> 00:09:18,026
And Lead Writers, we build a compilation of descriptors for the overall core emotions of the game

150
00:09:18,767 --> 00:09:21,270
that we then work with the composer to bring across in the score.

151
00:09:22,231 --> 00:09:26,617
As you can see, the common themes mentioned before and the audio vision are represented here,

152
00:09:27,397 --> 00:09:29,340
creating a cohesive language for all to follow.

153
00:09:29,981 --> 00:09:31,122
Now let's talk about our composer.

154
00:09:32,468 --> 00:09:35,029
For Anthem, we selected an amazing talent in Sarah Shachner.

155
00:09:35,529 --> 00:09:38,449
Before joining her team, she had brought music

156
00:09:38,509 --> 00:09:40,750
to several excellent franchises and films,

157
00:09:40,990 --> 00:09:42,650
from Assassin's Creed to Call of Duty.

158
00:09:42,690 --> 00:09:44,991
She's been able to show great breadth in her content

159
00:09:45,391 --> 00:09:47,571
and that ability was needed

160
00:09:47,931 --> 00:09:49,051
with the direction we were going.

161
00:09:49,771 --> 00:09:51,332
She truly is one of the best for creating

162
00:09:51,352 --> 00:09:54,532
a seamless combination of classical orchestra and choir,

163
00:09:55,092 --> 00:09:57,553
modular synthesis, vocoded vocalizations,

164
00:09:58,973 --> 00:10:00,833
and then often using non-traditional source

165
00:10:00,873 --> 00:10:01,773
in traditional ways.

166
00:10:02,928 --> 00:10:04,769
With this, she provided a musical landscape

167
00:10:04,809 --> 00:10:06,269
that was not only full of emotion,

168
00:10:06,689 --> 00:10:07,650
but one that walked the line

169
00:10:07,670 --> 00:10:09,191
between a classic action game

170
00:10:10,051 --> 00:10:11,472
and this otherworldly sound.

171
00:10:11,792 --> 00:10:12,712
So here's a little bit of that. ♪♪

172
00:12:15,599 --> 00:12:17,561
At this point, I'm going to turn it over to Cody for a bit.

173
00:12:17,701 --> 00:12:20,223
He's going to run you through some of the more in-depth implementations

174
00:12:20,263 --> 00:12:22,885
of the core gameplay experience with some examples of each.

175
00:12:23,365 --> 00:12:26,908
Should be a great showcase of the complexity that goes into some things

176
00:12:26,948 --> 00:12:30,050
you might not have really thought about as you blast around the map.

177
00:12:30,590 --> 00:12:30,891
Cody.

178
00:12:33,092 --> 00:12:33,833
Cool. Thanks, Eric.

179
00:12:34,513 --> 00:12:37,436
So since the large exosuits referred to as javelins

180
00:12:38,276 --> 00:12:41,979
are one of the biggest and most unique components of Anthem's action gameplay,

181
00:12:41,999 --> 00:12:45,402
we're going to do a deeper dive into how we went about constructing the audio for them.

182
00:12:46,703 --> 00:12:50,785
As Eric mentioned, one of the core tenets of the initial audio vision was this idea

183
00:12:50,825 --> 00:12:53,867
of having everything feel grounded in reality within the game's environments.

184
00:12:54,587 --> 00:12:58,989
This needed to extend to the suit design to deliver physicality and mechanical accuracy

185
00:12:59,009 --> 00:13:00,250
to the technology of the world.

186
00:13:01,471 --> 00:13:05,393
This vision is most obviously represented by the Ranger and the Colossus suits, but

187
00:13:05,413 --> 00:13:09,175
we retain those ideas in every possible way for the more extravagant Storm and Interceptor

188
00:13:09,195 --> 00:13:09,735
suits as well.

189
00:13:10,730 --> 00:13:13,673
Let's take a quick look at the ideas that we used for each of the four suits,

190
00:13:14,133 --> 00:13:18,197
as well as some short videos of the full suite of actions that each suit was capable of performing.

191
00:13:20,779 --> 00:13:22,181
So starting off with the Ranger suit,

192
00:13:24,143 --> 00:13:26,185
this was intended to be our most accessible Javelin.

193
00:13:26,485 --> 00:13:29,888
It's a basic soldier class, and from an audio point of view,

194
00:13:29,908 --> 00:13:32,971
we wanted this class to be a simple expression of the game's audio vision.

195
00:13:34,102 --> 00:13:38,184
creating an obvious physical correlation to all the sounds used on the suit.

196
00:13:38,884 --> 00:13:43,166
It's what we described as medium tech, so as not to go too far into a high tech or a

197
00:13:43,226 --> 00:13:43,987
sci-fi vibe.

198
00:13:44,547 --> 00:13:48,209
It's also kept us away from the low tech and janky feeling.

199
00:13:48,969 --> 00:13:53,432
Its thrusters are explosive and punchy with high frequency detail layers for the ignition

200
00:13:53,472 --> 00:13:53,852
triggers.

201
00:13:54,873 --> 00:13:59,755
Its locomotion uses realistic servos and detailed mechanical movements to create a really clean

202
00:13:59,775 --> 00:14:00,536
but grounded feel.

203
00:14:01,256 --> 00:14:02,157
So here's the Ranger.

204
00:14:33,165 --> 00:14:37,306
So, then from a production and a technology basis, building the Ranger suit gave us the

205
00:14:37,346 --> 00:14:39,027
template for all the suits that came after it.

206
00:14:39,867 --> 00:14:42,469
And while there were minor deviations from the design for that template,

207
00:14:42,829 --> 00:14:45,291
it pretty much held true throughout production.

208
00:14:47,773 --> 00:14:48,934
Next up is the Colossus suit.

209
00:14:49,434 --> 00:14:52,036
This was in every sense of the word our heavy class.

210
00:14:52,117 --> 00:14:52,757
It's the tank.

211
00:14:53,318 --> 00:14:55,679
The audio team affectionately referred to it as a garbage truck.

212
00:14:56,820 --> 00:14:58,962
We wanted it to be the most aggressive and lowest tech.

213
00:14:59,763 --> 00:15:04,687
It needed to sound dirty and weighty, but not messy, if possible.

214
00:15:04,767 --> 00:15:07,209
And we pushed it the furthest with distortion effects.

215
00:15:08,287 --> 00:15:11,431
in the thruster sounds to bring out that realistic rocket launch and crackle.

216
00:15:12,172 --> 00:15:16,336
Its servos were really grinding and its mechanics were thick and chunky.

217
00:15:17,017 --> 00:15:18,479
So here's what the Colossus sounds like.

218
00:15:54,185 --> 00:15:55,326
Up next is the Storm Suit.

219
00:15:55,746 --> 00:16:00,128
This was our Spellcaster class, and this really provided us with an opportunity to break away

220
00:16:00,168 --> 00:16:04,089
from the very grounded and realistic aesthetic of the Colossus and the Ranger Suit.

221
00:16:05,450 --> 00:16:09,111
The suit wields the power of ember to create magical spells

222
00:16:09,212 --> 00:16:10,892
and propel itself around the environment.

223
00:16:11,492 --> 00:16:13,653
So for the audio, we wanted to have a consistent feel

224
00:16:13,673 --> 00:16:15,453
to all the things the suit was capable of doing

225
00:16:15,914 --> 00:16:17,154
with that specific power.

226
00:16:18,254 --> 00:16:20,835
So you'll hear a lot of granular and glassy,

227
00:16:21,936 --> 00:16:25,197
liquidy elements, as well as some rolling thunder

228
00:16:25,677 --> 00:16:27,797
to give the abilities a really grand, explosive feel

229
00:16:27,817 --> 00:16:28,538
in the environment.

230
00:16:29,038 --> 00:16:31,779
Its locomotion contains more airy servos

231
00:16:31,939 --> 00:16:34,480
and then more resonant, plastic-sounding mechanics.

232
00:16:35,796 --> 00:16:40,881
And then of course, we included additive layers for the cape flaps for the storm,

233
00:16:40,901 --> 00:16:43,664
because that's an iconic part of its look.

234
00:16:45,065 --> 00:16:46,867
So here's what the storm sounds like.

235
00:17:25,009 --> 00:17:28,051
Next up, the Interceptor Suit is our melee and gadget suit.

236
00:17:29,152 --> 00:17:34,875
It's gameplay is speedy and agile and it was a really great opportunity for us to explore that high-tech vibe.

237
00:17:36,126 --> 00:17:43,672
The concept of high-tech agility played in the sound design really nicely with a lot of tight, punchy thrusters, more sci-fi laser elements.

238
00:17:44,312 --> 00:17:46,434
Another interesting part of the sound design were the servos.

239
00:17:47,555 --> 00:17:54,160
One random idea that was thrown out was to reference Bruce Lee's iconic screams as a tonal basis for the movements.

240
00:17:55,141 --> 00:18:00,225
In real, the principal sound designer for the suit actually did design a sound based on that idea.

241
00:18:00,786 --> 00:18:04,489
So remember when you hear this little squirrely synth sound layered into the movements?

242
00:18:08,000 --> 00:18:09,223
It was actually inspired by this.

243
00:18:09,243 --> 00:18:16,843
Okay, here's the interceptor.

244
00:18:54,072 --> 00:18:55,973
So, as I said, when we built the Ranger,

245
00:18:55,993 --> 00:18:58,315
it provided a good template for us

246
00:18:58,335 --> 00:18:59,757
to base the remaining suits on.

247
00:19:00,397 --> 00:19:01,878
So let's go over what the shared components

248
00:19:02,079 --> 00:19:03,420
of that template were,

249
00:19:03,440 --> 00:19:06,422
and then I'll dive a bit deeper into some of the specifics

250
00:19:06,482 --> 00:19:07,884
of how we implemented this content.

251
00:19:08,624 --> 00:19:12,207
So for the template, we had basic locomotion,

252
00:19:12,227 --> 00:19:13,609
so this is all footsteps and movement.

253
00:19:14,830 --> 00:19:16,471
Thrusters, these were any actions

254
00:19:16,511 --> 00:19:18,813
that the suit uses its jet boosters for.

255
00:19:20,345 --> 00:19:25,627
So this included all jumping, sprinting, evading, hovering, and flying.

256
00:19:25,647 --> 00:19:30,769
The hovering and the flying had more specific logic for the looping components of those states

257
00:19:30,789 --> 00:19:34,450
to get them to react to the character's flight velocity, pitch, and lean.

258
00:19:34,470 --> 00:19:39,912
Then we had swimming, which was essentially a simplified version of the flight loop system.

259
00:19:41,173 --> 00:19:42,314
We had falling and landing.

260
00:19:44,455 --> 00:19:47,837
We had sliding on steep surfaces.

261
00:19:48,317 --> 00:19:50,519
We had melee both on the ground and from the air.

262
00:19:51,279 --> 00:19:53,260
And then all the additional animation coverage

263
00:19:53,280 --> 00:19:55,722
for things like mantling, reloads, emotes,

264
00:19:55,762 --> 00:19:57,023
arrivals, victory poses.

265
00:19:58,624 --> 00:20:00,765
And I'll expand on that system a little bit more shortly.

266
00:20:02,967 --> 00:20:06,409
So first off with locomotion, like much of our content,

267
00:20:06,569 --> 00:20:08,710
our locomotion was built in modular layers.

268
00:20:09,877 --> 00:20:16,299
The modular design gives us a lot of flexibility to better react to the animations by using real-time game parameters to control the sound's playback.

269
00:20:17,179 --> 00:20:24,361
The layers built for the Javelin Locomotion were a Bass layer, which is a simple initial transient layer.

270
00:20:31,603 --> 00:20:35,043
Then there's the Mech layer, which is the second transient and the mechanical detail.

271
00:20:42,004 --> 00:20:46,952
Then what we do is we use the character's speed to scale a delay between the triggering of the bass and the mech layer,

272
00:20:47,493 --> 00:20:50,498
and then that kind of treats them like a heel and a toe respectively,

273
00:20:51,219 --> 00:20:53,964
for a more pronounced difference between walking and running.

274
00:20:55,346 --> 00:20:56,047
That sounds like this.

275
00:21:12,143 --> 00:21:14,164
And then we have the servo layer.

276
00:21:14,624 --> 00:21:16,425
This is for syncing with our movement

277
00:21:16,546 --> 00:21:18,147
and filling the gaps between the steps.

278
00:21:19,968 --> 00:21:21,949
We adjust the pitch of the servo layer

279
00:21:21,969 --> 00:21:23,050
based on the character's speed.

280
00:21:23,690 --> 00:21:25,831
Interestingly, going against our initial instinct

281
00:21:25,851 --> 00:21:27,592
to pitch it up when the player ran or sprinted,

282
00:21:27,632 --> 00:21:28,753
we found that pitching it down

283
00:21:28,793 --> 00:21:30,214
had the effect of making the suit sound

284
00:21:30,234 --> 00:21:32,415
like it was under greater strain to propel itself forward.

285
00:21:49,760 --> 00:21:55,603
Next, we have the Material layer. This is just a generic material sound with different content based on the javelin size.

286
00:21:56,864 --> 00:22:00,585
So for this we used the current ground material's softness rating,

287
00:22:01,866 --> 00:22:07,568
and controlled which layer of these layers held the initial transient for the step.

288
00:22:08,309 --> 00:22:12,691
So on hard surfaces, the base layer would be the base transient of the footstep,

289
00:22:13,031 --> 00:22:17,133
but on soft surfaces we switched and the Material layer held the initial transient.

290
00:22:17,672 --> 00:22:20,193
And this helped prevent the stacking of multiple transients,

291
00:22:20,833 --> 00:22:22,574
which would have caused the sound to get muddied.

292
00:22:22,594 --> 00:22:35,522
And then finally, the weight layer was just a simple low-end bump

293
00:22:35,922 --> 00:22:37,323
to give a consistent weight to the suit.

294
00:22:40,598 --> 00:22:44,140
Our flight sounds for the game were built into three layers.

295
00:22:45,080 --> 00:22:47,641
So we had the body, which is the main thruster sound,

296
00:22:47,701 --> 00:22:50,022
typically an engine afterburner distortion,

297
00:22:51,183 --> 00:22:53,083
with the wind to sell the movement through the open air,

298
00:22:53,544 --> 00:22:55,464
and then a noise layer to represent the environment

299
00:22:55,504 --> 00:22:56,525
the player was flying through.

300
00:22:57,605 --> 00:23:00,226
The body and the wind layer had two blended intensities

301
00:23:00,266 --> 00:23:02,307
that were constantly crossfading between each other

302
00:23:02,547 --> 00:23:03,748
based on physics parameters.

303
00:23:04,848 --> 00:23:07,069
Noise would transition between interior and exterior.

304
00:23:07,985 --> 00:23:12,329
So controlling all three of these layers is something called Thruster Load.

305
00:23:13,470 --> 00:23:18,894
We use the pitch and the lean of the character as well as the user's up-down stick deflection

306
00:23:18,934 --> 00:23:21,837
to generate a single value representing the Thruster Load.

307
00:23:22,477 --> 00:23:26,320
This controlled the intensity of the sound as well as the intensity of the Thruster VFX,

308
00:23:26,941 --> 00:23:29,543
so flying straight down gave you more wind and less thruster,

309
00:23:29,603 --> 00:23:32,846
and flying straight up or banking brought more intensity to the boosters.

310
00:23:58,885 --> 00:24:07,972
So once we had the base flight sounds established, we thought it would be interesting to try and get a little bit more reactivity from the physical environment built into the flying sound.

311
00:24:08,052 --> 00:24:11,074
So for this we repurposed our Raycast system.

312
00:24:15,438 --> 00:24:18,783
This is the same system we used to simulate early reflections in the game.

313
00:24:19,704 --> 00:24:25,331
Doing these ray checks, we would know when you were flying past transient objects, as well as skimming a contiguous surface.

314
00:24:26,092 --> 00:24:30,959
And we had one-shot whooshes as well as loops for skimming on the left and the right, as well as below the character.

315
00:24:32,500 --> 00:24:35,401
This actually evolved into a really cool multi-department collaboration,

316
00:24:35,881 --> 00:24:40,882
whereby the system that the audio team had built for Flybys

317
00:24:41,402 --> 00:24:44,123
was able to be fully integrated with VFX and actually design

318
00:24:44,483 --> 00:24:47,624
to do things like the cooling of the javelin thrusters when skimming the water.

319
00:25:23,884 --> 00:25:28,187
One of the challenges we had with the audio design for the suits was getting them to feel

320
00:25:28,487 --> 00:25:32,350
really heavy and complex without going overboard and layering too much audio onto them.

321
00:25:33,290 --> 00:25:35,111
This issue was especially prevalent with lands.

322
00:25:35,792 --> 00:25:38,413
We started the sounds for the suits landing state, of course,

323
00:25:38,433 --> 00:25:43,096
and had even conditionally swapped them based on the fall velocity,

324
00:25:43,956 --> 00:25:46,897
but we still weren't properly really capturing the full weight and energy

325
00:25:46,937 --> 00:25:50,980
of the one-ton mech suits falling through the air, impacting the ground.

326
00:25:53,281 --> 00:25:58,503
So, to demonstrate this, here's what the lands sound like just by themselves in-game.

327
00:26:06,105 --> 00:26:09,686
So, our first thought, our solution was to add a system

328
00:26:09,706 --> 00:26:11,867
for playing audio on the falling state

329
00:26:11,967 --> 00:26:13,547
as it would lead into the landing state.

330
00:26:14,767 --> 00:26:17,708
So, at first we just had a simple wind loop

331
00:26:17,728 --> 00:26:19,688
that played based on the fall velocity of the character.

332
00:26:29,711 --> 00:26:30,791
And that was kind of interesting,

333
00:26:31,471 --> 00:26:34,872
but we weren't really capturing the kind of dynamics

334
00:26:34,892 --> 00:26:35,972
that would make it feel dramatic.

335
00:26:36,700 --> 00:26:42,667
So we need to be able to play one-shots before the landing impact, so we could get a lead-in woosh that would capture the energy better.

336
00:26:43,548 --> 00:26:48,775
Luckily, animation had already built a way to generate the predicted time to land while falling through the air.

337
00:26:48,795 --> 00:26:54,382
And then using that, we could hand-design one-shots of a fixed length and trigger them at the exact right moment.

338
00:26:55,444 --> 00:26:59,608
For this we had three intensities of landing possible, depending on how far you had fallen.

339
00:26:59,628 --> 00:27:01,349
So I mirrored that with the incoming one shots.

340
00:27:01,970 --> 00:27:08,635
And then we had a hard land state, it was a specific state where you go impact the ground and have a short recovery time to get up.

341
00:27:08,675 --> 00:27:11,658
So I made that incoming sound much longer to build up that energy.

342
00:27:11,678 --> 00:27:15,461
We also had a second loop sweetener that was more chaotic.

343
00:27:16,402 --> 00:27:20,405
And then with a consistent timing, I then could apply that to all of the suits.

344
00:27:22,393 --> 00:27:26,621
It didn't take too long to get everything covered and the results were pretty good.

345
00:28:15,753 --> 00:28:17,493
So for nearly all the javelin movements,

346
00:28:17,533 --> 00:28:19,574
we knew it'd be important to give ourselves the tools

347
00:28:19,614 --> 00:28:21,114
to hit all the animation content

348
00:28:21,134 --> 00:28:22,134
that the team would be making

349
00:28:22,614 --> 00:28:24,514
without having to do hand edited

350
00:28:25,255 --> 00:28:27,755
and bespoke audio for each animation.

351
00:28:27,775 --> 00:28:30,396
So this process is pretty much identical

352
00:28:30,436 --> 00:28:31,996
to what we've developed on previous projects

353
00:28:32,016 --> 00:28:33,736
for taking cloth and movement fully.

354
00:28:34,916 --> 00:28:37,017
Here we just needed to abstract the content

355
00:28:37,037 --> 00:28:39,797
to fit with the javelin sounds of servos and mech movements.

356
00:28:41,018 --> 00:28:43,798
To do this, we basically identify a short list

357
00:28:43,978 --> 00:28:44,738
of event types.

358
00:28:46,254 --> 00:28:51,217
so that we could design a bucket of Javelin-specific content that could be reused for all the animations.

359
00:28:52,137 --> 00:28:53,898
The content for the event sounds like this.

360
00:29:12,230 --> 00:29:14,431
So as a baseline, this would give us decent coverage,

361
00:29:14,911 --> 00:29:18,652
and then anything super specific we could layer on top.

362
00:29:19,833 --> 00:29:22,013
These events then could be called

363
00:29:22,053 --> 00:29:23,534
on the timelines for the animations.

364
00:29:24,974 --> 00:29:26,575
The event calls are all generic

365
00:29:27,055 --> 00:29:29,036
because this timeline can play on any javelin.

366
00:29:29,376 --> 00:29:31,116
So the specific javelin that they were played on

367
00:29:31,176 --> 00:29:33,537
is passed to the sound patch on the backend

368
00:29:34,097 --> 00:29:35,538
to do the correct asset selection.

369
00:29:36,178 --> 00:29:38,018
So here's an example of one emote

370
00:29:38,038 --> 00:29:39,619
tagged entirely with generic calls

371
00:29:40,079 --> 00:29:41,720
playing on four different javelin types.

372
00:29:54,060 --> 00:30:03,188
All right, so now moving on from the javelins, the creatures of Anthem were always conceptualized

373
00:30:03,228 --> 00:30:06,671
to be that thing that brings forth a sense of danger and discovery to the world.

374
00:30:07,459 --> 00:30:11,740
In order to help us deliver on this vision, we partnered with Boom Audio to get a couple

375
00:30:11,780 --> 00:30:16,942
brand new sound libraries made featuring some really incredibly unique creature source and

376
00:30:17,002 --> 00:30:18,723
animal source for our games.

377
00:30:19,563 --> 00:30:23,404
In addition to all of our own recording that Eric mentioned, collaborating with Boom is

378
00:30:23,444 --> 00:30:28,066
a huge help in delivering a lot of these aggressive, visceral, and foreign sounding creatures.

379
00:30:29,126 --> 00:30:32,047
Their source sounds can be heard throughout the game's creature sound design.

380
00:30:33,247 --> 00:30:36,428
So here's some examples of some of the creatures in Anthem.

381
00:31:33,251 --> 00:31:38,712
Interesting tidbit is that one of the source sounds for the arachnid queen at the end there

382
00:31:39,132 --> 00:31:45,694
was actually a really squeaky dishwasher that was in our old building here in Edmonton.

383
00:31:49,684 --> 00:31:51,965
So moving away from the wild beasts of Anthem,

384
00:31:52,626 --> 00:31:56,889
we wanted to also talk about how we approach

385
00:31:56,909 --> 00:31:59,471
building a creature language through enemy vocal sounds.

386
00:32:00,151 --> 00:32:01,633
It's a really difficult task that requires

387
00:32:01,673 --> 00:32:03,494
building a small collaborative group,

388
00:32:04,255 --> 00:32:05,716
working across several departments,

389
00:32:05,776 --> 00:32:07,717
including writing, art, and design.

390
00:32:08,238 --> 00:32:10,759
Additionally, at BioWare, our VO is handled largely

391
00:32:10,800 --> 00:32:14,142
by our dedicated VO and performance department.

392
00:32:15,049 --> 00:32:20,233
So it's really imperative that all these stakeholders work closely together in order to deliver

393
00:32:20,593 --> 00:32:21,895
the highest quality end results.

394
00:32:22,595 --> 00:32:26,218
For the scars specifically, the direction for the pallet was that these are actually

395
00:32:26,378 --> 00:32:32,023
swarms of insect-like creatures and they'd actually just began mimicking humans in their

396
00:32:32,043 --> 00:32:36,207
appearance and their technology and ultimately in their speech, but it wouldn't be something

397
00:32:36,247 --> 00:32:39,990
that they actually were speaking any intelligible language.

398
00:32:42,955 --> 00:32:45,055
So the challenge here was to create a characteristic

399
00:32:45,095 --> 00:32:47,116
for this faction that preserved the relatability

400
00:32:47,616 --> 00:32:49,477
and emotion of a language without containing

401
00:32:49,557 --> 00:32:51,518
any significantly recognizable speech.

402
00:32:52,898 --> 00:32:54,218
Our first step with this was to engage

403
00:32:54,238 --> 00:32:57,340
with our writing department and start brainstorming ideas.

404
00:32:57,880 --> 00:32:59,780
One of our writers wrote up a script for the Scar

405
00:32:59,840 --> 00:33:02,161
that she loosely based off some Hungarian

406
00:33:02,181 --> 00:33:03,462
that she had learned when she was young.

407
00:33:04,462 --> 00:33:06,683
So she wrote up this cue sheet,

408
00:33:08,523 --> 00:33:10,384
and then we recorded a scratch session locally

409
00:33:10,844 --> 00:33:12,204
to test out how the language worked.

410
00:33:13,110 --> 00:33:16,574
So here are some examples of raw audio from that scratch session.

411
00:33:17,014 --> 00:33:18,015
Nesmir!

412
00:33:18,676 --> 00:33:19,596
Zordik!

413
00:33:20,077 --> 00:33:20,818
Unicorns!

414
00:33:21,298 --> 00:33:22,459
Lockstodon!

415
00:33:23,280 --> 00:33:24,281
Unicorns!

416
00:33:24,982 --> 00:33:26,063
Feekehazor!

417
00:33:29,025 --> 00:33:30,307
So we were able to take that

418
00:33:31,488 --> 00:33:36,212
and then start working through some of our ideas for processing for the scars.

419
00:33:47,405 --> 00:33:50,867
So, as you can hear, having the language scripted was only half the battle.

420
00:33:52,367 --> 00:33:56,650
Our challenge would be in providing a solid and reproducible direction for how we wanted

421
00:33:57,370 --> 00:33:59,411
actors to actually perform the lines.

422
00:34:00,311 --> 00:34:03,953
The idea being that we need to be able to scale up to several different actors performing

423
00:34:03,973 --> 00:34:05,474
these scripts to get variations.

424
00:34:06,696 --> 00:34:08,757
but that meant we really needed to put a lot of effort

425
00:34:08,797 --> 00:34:11,279
into capturing our gold standard example

426
00:34:11,599 --> 00:34:13,580
before we were able to trigger a pipeline

427
00:34:13,640 --> 00:34:14,881
to expand on the content.

428
00:34:16,102 --> 00:34:17,502
For this, we hired some outside help.

429
00:34:18,103 --> 00:34:21,084
We have a very talented voice actor named Olaf Jansson.

430
00:34:22,125 --> 00:34:24,867
And Olaf actually specializes in creature vocalizations.

431
00:34:25,487 --> 00:34:26,888
So he took a shot at our script

432
00:34:26,928 --> 00:34:28,189
and this is what he came back with.

433
00:34:30,430 --> 00:34:31,591
See that shot?

434
00:34:43,158 --> 00:34:47,521
Lucky for us, that performance did a great job of capturing the aggression and the menace

435
00:34:47,561 --> 00:34:48,621
we were needed from the palette.

436
00:34:49,922 --> 00:34:54,124
Then after doing some extensive work on the processing change, we finally landed on the

437
00:34:54,164 --> 00:34:58,827
vision of a swarm of insects speaking a broken non-language through a janky radio.

438
00:34:59,607 --> 00:35:02,029
Here's Olaf's performance after being processed.

439
00:35:14,698 --> 00:35:18,240
So now of course, we had this fantastic example content.

440
00:35:19,300 --> 00:35:21,342
It was much easier to get other actors

441
00:35:21,822 --> 00:35:22,922
to perform that script,

442
00:35:23,383 --> 00:35:25,624
provide consistent high quality performances

443
00:35:26,064 --> 00:35:27,985
than we could reliably batch process

444
00:35:28,586 --> 00:35:29,806
using our SCAR processing.

445
00:35:31,047 --> 00:35:33,588
And then here, so here are final versions

446
00:35:33,648 --> 00:35:34,789
from other performances.

447
00:35:44,900 --> 00:36:00,092
Okay, and that's all for me, so I'm going to throw it back over to Eric to talk about

448
00:36:00,112 --> 00:36:03,955
some of the systems we use to build Anthem's dynamic world audio.

449
00:36:06,602 --> 00:36:07,203
Thank you, Cody.

450
00:36:07,683 --> 00:36:09,785
So to wrap up our more detailed looks into the audio,

451
00:36:09,825 --> 00:36:12,607
I wanted to quickly walk you through a couple of our processes

452
00:36:12,788 --> 00:36:14,649
for getting the world of Anthem to stand up

453
00:36:14,669 --> 00:36:16,631
to a benchmark of realism in its function,

454
00:36:17,011 --> 00:36:18,653
but fantastical in its presentation.

455
00:36:19,674 --> 00:36:21,235
The approach to Anthem's world audio

456
00:36:21,275 --> 00:36:24,998
was essentially having all elements work together

457
00:36:25,058 --> 00:36:25,879
to inform the whole.

458
00:36:27,375 --> 00:36:34,199
Over the previous two projects, we started to build a core set of level audio tools that have enabled us to cover our vast worlds with great accuracy.

459
00:36:34,600 --> 00:36:40,523
So we're achieving this by systems that deal with automatic mixing and switching of content,

460
00:36:41,264 --> 00:36:50,389
interior versus exterior prioritization systems, dynamic day-night cycles with advanced timelines determining density and frequency of wildlife to be heard throughout the days,

461
00:36:51,070 --> 00:36:55,412
supportive weather, sitting atop dynamic real-world based weather systems.

462
00:36:56,793 --> 00:37:00,616
and then a set of tools that lean into procedural placement and data collection.

463
00:37:02,677 --> 00:37:06,841
To that last point, essentially we have a way to tag up all the objects in our worlds,

464
00:37:08,282 --> 00:37:12,505
giving them unique identifiers to then feed back to a centralized collation point.

465
00:37:13,105 --> 00:37:15,046
Those tags are then weighed against each other.

466
00:37:16,442 --> 00:37:20,565
prioritized and eventually serve as drivers for which core ambiences to play,

467
00:37:20,985 --> 00:37:24,568
as placements for point source sounds, or as locations for contextual audio

468
00:37:24,588 --> 00:37:29,712
content to feed back from. So you can see in this little animation, the player

469
00:37:29,732 --> 00:37:33,354
essentially acts as a polling point for the data around you at any given moment.

470
00:37:33,915 --> 00:37:37,177
That data then drives the underlying systems to do the things mentioned just

471
00:37:37,217 --> 00:37:42,301
before. You can imagine setting all this up was quite a task, but the result was a

472
00:37:42,341 --> 00:37:45,223
more or less automatic coverage of our large regions.

473
00:37:46,347 --> 00:37:51,329
This then allowed our teams to focus on custom sounds and situations to override that base layer.

474
00:37:51,609 --> 00:37:53,209
So let's take a quick look at that in action.

475
00:37:54,770 --> 00:37:56,510
Just a little bit of context before we start here.

476
00:37:57,090 --> 00:38:00,432
What you're going to see as we get close is the debug start appearing on screen.

477
00:38:00,692 --> 00:38:03,312
These points it will initialize as blue, then they'll turn green

478
00:38:03,953 --> 00:38:08,534
as they're active and transmitting back to the system the type and size of content that they represent.

479
00:38:09,672 --> 00:38:14,017
So because in this example, these are mainly foliage and it is daytime,

480
00:38:14,037 --> 00:38:17,662
the core ambience will switch to our day jungle palette

481
00:38:18,262 --> 00:38:20,505
with the corresponding reverb, area type settings,

482
00:38:20,725 --> 00:38:23,028
as well as that daytime point source content.

483
00:39:03,337 --> 00:39:08,621
Next, peripheral to that but still a core level system that we lean on heavily is what we call Big World Sounds.

484
00:39:09,502 --> 00:39:15,707
While we cover the base of the ambience with a quad of representative air winds, in some cases through that system we just spoke about,

485
00:39:16,167 --> 00:39:20,650
we use the Big World system to populate the world with all types of dynamic environmental content.

486
00:39:21,789 --> 00:39:25,673
The system in its most simplistic form essentially picks sounds from a set of defined buckets

487
00:39:25,733 --> 00:39:28,496
and throws them randomly 360 into the world around the player.

488
00:39:28,796 --> 00:39:29,497
Nothing new there.

489
00:39:30,077 --> 00:39:32,940
This being at definable distances and timings between its triggerings.

490
00:39:33,701 --> 00:39:37,244
These could be anything from the obvious like distant construction work, creature calls,

491
00:39:37,424 --> 00:39:42,609
and all the way to the more area-defining and mood-setting ambience swells that we lean

492
00:39:42,629 --> 00:39:43,550
into pretty heavily.

493
00:39:44,071 --> 00:39:46,173
Essentially these are sounds of unseen source.

494
00:39:47,898 --> 00:39:52,620
In its more complex form, we can then associate its placements to not just pick randomly,

495
00:39:53,021 --> 00:39:55,682
but to look for the points that I demonstrated in the previous section.

496
00:39:56,323 --> 00:40:00,685
This then allows us to do things like having birds only trigger from placements in tree canopies,

497
00:40:00,925 --> 00:40:05,308
or random conversations playing off of actual NPC groupings, etc.

498
00:40:06,848 --> 00:40:10,090
So in the end, you have a level of density and accuracy in the soundscape

499
00:40:10,110 --> 00:40:13,472
that is again more or less built procedurally as you move within it.

500
00:40:14,159 --> 00:40:15,981
So let's take a little peek at what I'm talking about.

501
00:40:16,001 --> 00:40:17,662
The first part of the video will be showing

502
00:40:18,163 --> 00:40:20,185
debug of cueing sounds looking to play back

503
00:40:20,305 --> 00:40:22,748
in the BigWorld system at that given time and location.

504
00:40:23,389 --> 00:40:25,951
What follows is a mix of level ambiences with

505
00:40:26,612 --> 00:40:28,795
one-shot BigWorlds triggering from across the game.

506
00:41:30,528 --> 00:41:34,350
The mix was a time where our adherence to organization and pre-planning really paid off.

507
00:41:34,570 --> 00:41:38,552
This was compounded when put in combination with the game's more procedurally-driven mixing attributes.

508
00:41:39,293 --> 00:41:43,575
With things like making sure our audio patches were as lean and approachable as possible,

509
00:41:44,035 --> 00:41:47,517
so the team could focus on making great sounds versus struggling with implementation.

510
00:41:48,597 --> 00:41:52,519
We had RMS-driven EQs to give us control of different bus interactions on the fly,

511
00:41:53,419 --> 00:41:59,062
setting up our sound content to be prioritized properly against the many thousand other sounds trying to find a spot.

512
00:42:00,043 --> 00:42:05,604
Having specific mix states and dynamically driven mixers set up for pulling out elements when we want to focus your ear.

513
00:42:05,624 --> 00:42:11,086
HDR mixing based on loudness values we associate to given sounds or groups of sounds.

514
00:42:11,966 --> 00:42:16,687
We centralize our reverb controls to have uniformity across all levels.

515
00:42:18,348 --> 00:42:23,989
And then having implementation, asset prep and design standards set up for the team for content going into the game.

516
00:42:25,055 --> 00:42:28,816
These and many other things allowed us to get a handle on what is a very busy mix environment.

517
00:42:29,076 --> 00:42:33,798
Additionally, and lucky for us, this past year in live service has given us the ability

518
00:42:33,858 --> 00:42:37,199
to continue to evolve our mix in ways we haven't been able to in past projects.

519
00:42:37,519 --> 00:42:41,601
So let's take a little look at what I'm talking about with some action and some gameplay.

520
00:42:44,147 --> 00:42:47,111
This is fun! It's like finding lost treasure.

521
00:42:47,451 --> 00:42:48,853
Lost treasure guarded by Scars.

522
00:42:49,153 --> 00:42:50,715
Scars? What Scars?

523
00:42:51,016 --> 00:42:53,780
Sorry, Freenancer. Looks like they're only at your location.

524
00:42:54,100 --> 00:42:55,622
How is that fair?

525
00:42:55,982 --> 00:42:57,124
Just lucky, I guess.

526
00:43:38,036 --> 00:43:40,619
Thanks for watching!

527
00:45:09,365 --> 00:45:09,865
And that's it.

528
00:45:10,305 --> 00:45:14,488
On behalf of both of us, the Core Audio team back in Edmonton and Austin, and all the others

529
00:45:14,508 --> 00:45:18,150
that you can see scrolling by that have helped us and our team deliver another great sounding

530
00:45:18,170 --> 00:45:18,990
experience at Bioware.

531
00:45:19,630 --> 00:45:20,452
We thank you so much.

532
00:45:21,014 --> 00:45:22,177
Thanks for having us here today.

