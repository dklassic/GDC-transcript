1
00:00:06,157 --> 00:00:06,537
All right.

2
00:00:08,538 --> 00:00:12,140
I was told everyone should turn off their cell phones

3
00:00:12,620 --> 00:00:13,300
if they want.

4
00:00:14,180 --> 00:00:15,961
It's always funny when those go off during a talk.

5
00:00:18,562 --> 00:00:20,443
OK, this is sand rendering in Journey.

6
00:00:22,044 --> 00:00:24,004
Here are some images of Journey.

7
00:00:24,505 --> 00:00:26,545
And to give a little context for those of you

8
00:00:26,565 --> 00:00:28,486
who haven't played the game, it's

9
00:00:28,546 --> 00:00:30,407
a multiplayer PlayStation Network game.

10
00:00:31,247 --> 00:00:32,628
And one of the things you're trying to do with the game

11
00:00:32,808 --> 00:00:35,669
is recreate the feeling you get when you're out in nature.

12
00:00:36,402 --> 00:00:40,366
hiking, and you encounter someone else on a trail after not having seen anyone for a while.

13
00:00:41,207 --> 00:00:46,272
There's this desire to connect with them in some way, to say hello, maybe even to journey with

14
00:00:46,292 --> 00:00:51,357
them for a while. You want to acknowledge them on a human level, which is something that is

15
00:00:51,577 --> 00:00:53,899
strangely uncommon in a lot of online video games.

16
00:00:55,432 --> 00:00:58,956
we thought the best environment for this would be a vast and barren desert

17
00:00:59,216 --> 00:01:02,720
and so we spent a long time on the technology to make the players feel like

18
00:01:02,760 --> 00:01:04,122
they were really in that environment

19
00:01:04,663 --> 00:01:09,087
to trigger that desire to actually make a human connection

20
00:01:09,608 --> 00:01:10,389
with the other players

21
00:01:13,937 --> 00:01:16,577
So the structure of this talk here is,

22
00:01:17,258 --> 00:01:18,558
this is an image of the shipping game.

23
00:01:19,118 --> 00:01:20,719
And first thing I'm gonna do is I'm gonna sort of

24
00:01:20,799 --> 00:01:22,859
peel away the various hacks we use

25
00:01:23,380 --> 00:01:25,660
to do the sand rendering one by one

26
00:01:25,680 --> 00:01:26,741
so you can just see them quickly.

27
00:01:26,761 --> 00:01:28,961
And then I'll spend the majority of the talk

28
00:01:29,001 --> 00:01:32,883
going over the hows and whys of each of the various hacks.

29
00:01:33,697 --> 00:01:35,018
So let's get started with that.

30
00:01:36,399 --> 00:01:39,540
First one we have here is we have a mipmap sharpening

31
00:01:39,580 --> 00:01:39,861
effect.

32
00:01:40,341 --> 00:01:42,602
You can maybe see that it's a little bit smoother

33
00:01:42,642 --> 00:01:43,202
in the distance.

34
00:01:43,823 --> 00:01:44,823
This is the original image again.

35
00:01:44,883 --> 00:01:47,044
It's grainy, and then it gets smoother in the distance.

36
00:01:47,985 --> 00:01:50,766
Next, we have an anisotropic failure masking hack here.

37
00:01:51,467 --> 00:01:53,068
It's that kind of radioactive oatmeal

38
00:01:53,168 --> 00:01:55,049
on the silhouettes of the dunes.

39
00:01:56,570 --> 00:01:58,491
Next is our glitter specular hack.

40
00:01:58,931 --> 00:02:00,091
Sand has gotten less shiny.

41
00:02:01,269 --> 00:02:03,110
Another ocean specular hack

42
00:02:03,810 --> 00:02:06,332
that beam of light by the players going away.

43
00:02:07,572 --> 00:02:08,393
Then switching

44
00:02:09,854 --> 00:02:13,976
to a Lambert shader for diffuse, we have a custom diffuse shader here and this is

45
00:02:13,996 --> 00:02:14,336
just a

46
00:02:15,277 --> 00:02:16,077
vanilla Lambert.

47
00:02:16,658 --> 00:02:17,438
And then finally

48
00:02:17,458 --> 00:02:21,841
our detail height maps. This is sort of a displacement map we put on the sand.

49
00:02:22,301 --> 00:02:25,063
Notice it gets very smooth and with all the effects removed it's just

50
00:02:25,743 --> 00:02:28,065
kind of maybe a big bowl of pudding here.

51
00:02:29,688 --> 00:02:31,369
I'm going to go through that again quicker.

52
00:02:31,389 --> 00:02:32,449
This is a different environment.

53
00:02:32,489 --> 00:02:34,690
Journey is full of many scenic environments,

54
00:02:34,770 --> 00:02:38,111
and this one is a bit sparklier and spookier.

55
00:02:38,771 --> 00:02:41,452
So, ship and game are mip maps,

56
00:02:42,712 --> 00:02:45,333
the anisotropic mask, specular number one,

57
00:02:45,633 --> 00:02:47,814
specular number two, switching back to Lambert,

58
00:02:48,434 --> 00:02:50,535
and then removing the height maps,

59
00:02:50,635 --> 00:02:53,176
and this is, you can't even see the terrain anymore,

60
00:02:53,236 --> 00:02:54,096
Journey in the Void.

61
00:02:56,419 --> 00:02:58,761
One thing I should say, I was calling a lot of these hacks, and I'd

62
00:02:59,682 --> 00:03:02,706
sort of like to address that before moving on with the

63
00:03:03,567 --> 00:03:05,770
family vacation photo portion of the GDC talk.

64
00:03:06,972 --> 00:03:07,813
There's a good reason for this.

65
00:03:08,574 --> 00:03:08,954
Bear with me.

66
00:03:09,154 --> 00:03:14,497
Early on in development and journey, the whole team took a trip to the Pismo Dunes, which

67
00:03:14,558 --> 00:03:15,898
are just south of here in California.

68
00:03:16,539 --> 00:03:20,762
And we spent a few days just sort of like running and jumping and diving through the

69
00:03:20,802 --> 00:03:22,463
sand to get a feel for it.

70
00:03:22,583 --> 00:03:27,586
And that actually served as the primary reference for all the technology development of the

71
00:03:27,606 --> 00:03:28,367
visuals of the sand.

72
00:03:29,147 --> 00:03:32,728
uh... we didn't use photo references until very very late in the project

73
00:03:33,048 --> 00:03:36,970
because we're never going for a a photo real look we're going for a sort of a

74
00:03:36,990 --> 00:03:40,451
a feel real look we wanted to generate an authentic

75
00:03:40,811 --> 00:03:42,231
real feeling in the player

76
00:03:42,871 --> 00:03:46,913
so they would behave like real people when they encountered other players in

77
00:03:46,933 --> 00:03:49,753
the game and they they'd want to sort of make a real human connection with them

78
00:03:51,208 --> 00:03:54,650
Okay, so with that said, on to the first hack here.

79
00:03:55,791 --> 00:03:57,071
This is sharp mipmaps again.

80
00:03:57,651 --> 00:03:59,592
You can notice that with them turned off,

81
00:03:59,652 --> 00:04:01,233
the sand in the distance is much smoother.

82
00:04:01,593 --> 00:04:03,874
And actually, this is probably more photorealistic.

83
00:04:04,695 --> 00:04:06,656
If you take a look at pictures of the sand,

84
00:04:06,676 --> 00:04:09,617
this is a photograph of real sand dunes.

85
00:04:10,377 --> 00:04:13,460
or really more like a bland dune if you look at it. You can't really see much

86
00:04:13,960 --> 00:04:17,463
detail at all here. It has that pudding-y consistency.

87
00:04:18,163 --> 00:04:21,766
And we can actually do some math to kind of see why this would be.

88
00:04:22,547 --> 00:04:25,649
If you look at this screenshot here, the character is a hundred pixels

89
00:04:26,310 --> 00:04:29,292
on screen. And if you imagine the character is about a meter

90
00:04:29,552 --> 00:04:32,275
tall, because the journeyers are short and like round numbers,

91
00:04:32,775 --> 00:04:35,917
then each pixel by his feet is one square centimeter.

92
00:04:37,009 --> 00:04:40,511
uh... and then this is actually a assumed in view of real on pismo beach

93
00:04:40,551 --> 00:04:41,532
sand where the team went

94
00:04:41,552 --> 00:04:45,675
uh... for that the reference and you can see that maybe on average each grain of

95
00:04:45,715 --> 00:04:47,636
sand about a half a millimeter wide

96
00:04:48,337 --> 00:04:51,739
which should mean that uh... there should be four hundred grains of sand

97
00:04:51,759 --> 00:04:54,440
uh... in each pixel by the characters feet

98
00:04:55,181 --> 00:04:58,303
and at least for the diffuse shading if you imagine four hundred uh...

99
00:04:58,663 --> 00:04:59,684
just different grains of sand

100
00:05:00,204 --> 00:05:03,586
facing different directions that should all even out to create that nice smooth

101
00:05:04,087 --> 00:05:05,608
uh... look you're seeing on the photographs

102
00:05:06,653 --> 00:05:10,397
But the first thing you notice when you actually go out into the dunes, the first thing you

103
00:05:10,477 --> 00:05:13,260
feel is just how grainy sand is.

104
00:05:13,941 --> 00:05:17,824
And I think part of that is the fact that eyes are still higher resolution than TVs.

105
00:05:17,864 --> 00:05:19,386
There are a few years left of that.

106
00:05:20,767 --> 00:05:24,911
But mainly I think it's that you're literally feeling the sand on your body, you know, in

107
00:05:24,931 --> 00:05:28,455
your hair, in your clothes, in the places where sand was never meant to go.

108
00:05:29,438 --> 00:05:33,779
And so we pushed that graininess out as far as we could,

109
00:05:34,139 --> 00:05:37,560
which ended up meaning a different sand grain per pixel.

110
00:05:39,020 --> 00:05:40,180
The way we did that, by the way,

111
00:05:40,220 --> 00:05:44,161
is we used this sort of detail normal map here.

112
00:05:44,241 --> 00:05:45,622
It's just basically noise.

113
00:05:45,982 --> 00:05:48,642
There's a histogram of the normal map on top,

114
00:05:48,662 --> 00:05:50,463
and you can see that most of the normals

115
00:05:50,543 --> 00:05:51,343
are pointing straight up,

116
00:05:51,383 --> 00:05:52,683
and then there are fewer and fewer

117
00:05:52,703 --> 00:05:53,903
pointing off in either direction

118
00:05:53,923 --> 00:05:56,504
in sort of a bell-shaped fashion.

119
00:05:56,984 --> 00:06:03,388
And so normally, if you generate a mipmap using a very simple box filter, you'll get something that looks like this.

120
00:06:03,968 --> 00:06:06,670
And you can see that the histogram here is much tighter,

121
00:06:06,990 --> 00:06:10,312
which means that the normals are more pointing straight up,

122
00:06:11,073 --> 00:06:13,815
and you're going to get a less grainy looking texture.

123
00:06:14,595 --> 00:06:20,098
But if you look between these two things, it appears that the second one's about half the size.

124
00:06:20,839 --> 00:06:23,541
And so we multiplied the normals by two,

125
00:06:24,381 --> 00:06:25,862
and we got something that looked the same.

126
00:06:27,095 --> 00:06:28,276
And I'm not a mathematician.

127
00:06:29,237 --> 00:06:32,979
If there are any mathematicians who want to explain how come this is true to me,

128
00:06:33,019 --> 00:06:34,620
my email is john at that game company dot com.

129
00:06:35,340 --> 00:06:37,742
For anyone else, you can just, if you want grainy normal maps,

130
00:06:37,782 --> 00:06:38,662
you multiply by two.

131
00:06:42,505 --> 00:06:45,286
The next thing you notice when you go to the dunes

132
00:06:45,506 --> 00:06:47,047
is just how sparkly it is.

133
00:06:47,207 --> 00:06:49,389
And pictures do not do this justice.

134
00:06:49,409 --> 00:06:52,150
You can see a few sparkles we managed to capture on camera.

135
00:06:52,170 --> 00:06:55,792
But when you're actually there, it's just sparkles leaping to your eyes.

136
00:06:56,730 --> 00:06:59,993
And so here's another image of the game,

137
00:07:00,154 --> 00:07:01,055
the sparkles are turned on.

138
00:07:01,075 --> 00:07:03,738
They're turned off here, and it's probably hard to see,

139
00:07:03,798 --> 00:07:04,558
so I'm gonna zoom in.

140
00:07:05,479 --> 00:07:08,783
This is sparkle turned on, and here's sparkle turned off.

141
00:07:09,464 --> 00:07:11,746
And it's maybe subtle, but when you're actually

142
00:07:11,766 --> 00:07:13,108
playing the game, it's very, very important

143
00:07:13,128 --> 00:07:13,948
for capturing that feeling.

144
00:07:15,169 --> 00:07:21,733
And when we were initially trying to implement this effect, we sort of thought it through logically for some reason, but we thought okay

145
00:07:22,633 --> 00:07:24,194
What's going on? What's making those sparkles?

146
00:07:24,254 --> 00:07:31,298
It's probably the sun is shining down and there are certain grains of sand that are oriented just the right way

147
00:07:31,358 --> 00:07:36,100
So they'll reflect the sun directly into your eyes, and then you'll see that brilliant glint

148
00:07:36,961 --> 00:07:38,341
And you know, the graphics program was like,

149
00:07:38,461 --> 00:07:39,462
oh, well, we know what that is.

150
00:07:39,482 --> 00:07:41,223
That's just, that's specular reflection.

151
00:07:41,283 --> 00:07:43,304
We know how to write specular reflection shaders.

152
00:07:43,684 --> 00:07:46,406
And that was the actual initial attempt.

153
00:07:46,566 --> 00:07:48,847
It was just a straight specular shader

154
00:07:48,887 --> 00:07:51,308
on a very sort of noisy normal map.

155
00:07:51,328 --> 00:07:53,390
And it looked like this, which is pretty good.

156
00:07:53,430 --> 00:07:54,370
I mean, that looks like glitter.

157
00:07:55,631 --> 00:07:57,112
And so it worked fine for still shots,

158
00:07:57,152 --> 00:07:58,432
but the problem was in motion.

159
00:08:01,714 --> 00:08:02,114
Hello.

160
00:08:04,676 --> 00:08:05,316
Join GDC.

161
00:08:07,914 --> 00:08:14,187
So you see it in motion here, and it's just got a very noisy look to it.

162
00:08:14,207 --> 00:08:18,095
It's like you were clubbed over the head about to get a migraine kind of look.

163
00:08:18,716 --> 00:08:18,977
So...

164
00:08:22,555 --> 00:08:31,745
And I think the problem is that the just fidelity like the maybe the bit depth of our normal maps and the number of pixels we have on screen and just not enough to use the realistic equation.

165
00:08:32,606 --> 00:08:34,208
So it would just alias too much.

166
00:08:35,609 --> 00:08:41,015
So we thought about the feeling of this effect and really the important part was that when you moved your head.

167
00:08:42,122 --> 00:08:44,483
the sparkles, the glitter, would move around.

168
00:08:44,543 --> 00:08:45,864
Like at its base, it's just

169
00:08:46,384 --> 00:08:48,086
this glitter is a view-dependent thing.

170
00:08:48,726 --> 00:08:50,327
And so we just swapped it.

171
00:08:50,347 --> 00:08:52,568
On the left we have the standard, sort of

172
00:08:53,049 --> 00:08:54,890
more physically based specular

173
00:08:55,430 --> 00:08:56,251
equation, n dot h.

174
00:08:56,271 --> 00:08:58,372
And then we just switched to basically the most view-dependent

175
00:08:58,392 --> 00:09:00,814
you know, basic view-dependent thing we could think of

176
00:09:00,894 --> 00:09:02,575
is normal dotted with the view.

177
00:09:04,276 --> 00:09:05,257
And that ended up

178
00:09:06,037 --> 00:09:06,918
looking like this.

179
00:09:09,459 --> 00:09:09,679
Which...

180
00:09:11,414 --> 00:09:12,915
may actually still look very alias to you.

181
00:09:13,576 --> 00:09:14,697
If you're actually playing Journey

182
00:09:16,158 --> 00:09:19,982
on a real TV, you can see that it's a bit smoother and it's much easier to control.

183
00:09:20,002 --> 00:09:26,468
Here are some equations

184
00:09:27,529 --> 00:09:29,170
which may or may not explain

185
00:09:29,451 --> 00:09:31,292
why this is the case. Again,

186
00:09:31,633 --> 00:09:33,494
mathematicians, it's john at thatgamecompany.com.

187
00:09:35,988 --> 00:09:39,789
There was a big problem with that last glitter effect.

188
00:09:39,810 --> 00:09:41,050
And you can see it here.

189
00:09:42,070 --> 00:09:44,912
It's that radioactive oatmeal kind of look.

190
00:09:45,752 --> 00:09:48,053
And I mean, this was actually such a huge problem

191
00:09:48,073 --> 00:09:49,073
it gave us a lot of headaches.

192
00:09:49,093 --> 00:09:50,234
We nearly canned the whole effect.

193
00:09:51,585 --> 00:09:52,846
took us a while to even figure out what it was.

194
00:09:53,866 --> 00:09:56,548
But sort of to lead you guys through that thought process,

195
00:09:57,349 --> 00:10:01,011
Journey has 16 tap anisotropic filtering

196
00:10:01,452 --> 00:10:04,274
on all the sand textures, which 16 taps is the maximum

197
00:10:04,374 --> 00:10:05,975
that the PlayStation 3 allows.

198
00:10:06,695 --> 00:10:08,236
And just to get a sense of why,

199
00:10:08,477 --> 00:10:10,438
I'm gonna show you the same scene

200
00:10:10,518 --> 00:10:11,859
with no anisotropic filtering.

201
00:10:13,140 --> 00:10:14,741
And it's actually a little bit easier to see

202
00:10:14,781 --> 00:10:15,942
in this spooky scene here.

203
00:10:16,342 --> 00:10:17,683
So here's kind of how we shipped,

204
00:10:18,263 --> 00:10:20,605
and then here's with anisotropic filter turned off.

205
00:10:21,926 --> 00:10:27,896
Kind of has looked like maybe a giant ate the oatmeal and forgot to use a handkerchief when he sneezed

206
00:10:29,484 --> 00:10:35,346
so anyway I think this might illustrate an interesting visual phenomenon though

207
00:10:36,286 --> 00:10:36,706
and that's

208
00:10:37,566 --> 00:10:41,868
if you have detail that is pixel sized or probably just uniformly sized

209
00:10:42,508 --> 00:10:45,349
the player will interpret that as graininess

210
00:10:46,109 --> 00:10:47,830
so if you have uniformly sized detail

211
00:10:48,550 --> 00:10:52,192
the pixels by the characters feet don't look like four hundred times too big

212
00:10:52,272 --> 00:10:52,912
sand boulders

213
00:10:53,192 --> 00:10:54,993
they just look like nice grainy sand

214
00:10:55,773 --> 00:10:59,715
But as soon as the detail becomes non-uniform, people start to take it literally.

215
00:11:00,276 --> 00:11:03,098
And so, as soon as your sand is one pixel too big,

216
00:11:03,118 --> 00:11:08,241
it stops being a nice rolling dune and becomes, you know, a giant pile of radioactive boogers.

217
00:11:10,182 --> 00:11:14,265
That, then, is explaining what's going on here in the circle section.

218
00:11:15,605 --> 00:11:19,268
Even the 16-tap anisotropic filter was not enough to...

219
00:11:20,843 --> 00:11:23,044
properly get per pixel detail on these edges.

220
00:11:23,624 --> 00:11:26,465
And we spent a long time trying to improve

221
00:11:26,505 --> 00:11:29,367
the anisotropic filter, which proved

222
00:11:29,387 --> 00:11:32,428
to be a task we lacked the cognitive capacity for.

223
00:11:33,189 --> 00:11:36,030
So instead, we swept it under the rug.

224
00:11:36,090 --> 00:11:37,611
We just detected where this was failing

225
00:11:37,831 --> 00:11:39,551
and stopped drawing the pixels there.

226
00:11:40,896 --> 00:11:44,100
The way we did that was using this kind of texture here.

227
00:11:44,140 --> 00:11:46,543
This texture, this is the texture in its MIP chain.

228
00:11:48,065 --> 00:11:53,913
It has a specific property where it will have very predictable values of color based on

229
00:11:53,973 --> 00:11:57,798
distance from the camera, assuming perfect anisotropic filtering.

230
00:11:59,334 --> 00:12:01,795
And you can see the terrain here with the texture applied to it.

231
00:12:02,695 --> 00:12:06,677
We added some dithering, or some noise to the texture for dithering.

232
00:12:07,118 --> 00:12:11,060
But anyway, you can see that it's very dark close to the camera and gets lighter and lighter farther away,

233
00:12:11,500 --> 00:12:14,241
except in certain spots where the anisotropic filter is failing.

234
00:12:14,842 --> 00:12:17,523
And so we use this to generate a mask.

235
00:12:18,123 --> 00:12:21,585
And the white areas now are where we know that it's safe

236
00:12:22,166 --> 00:12:24,827
to render things that need full anisotropic filtering,

237
00:12:24,867 --> 00:12:28,509
and the black areas are where the anisotropic filter can't quite keep up.

238
00:12:29,761 --> 00:12:32,883
uh... any graphics programmers in the audience at this point uh...

239
00:12:33,383 --> 00:12:36,165
maybe asking the question well why'd you go to the trouble generating this

240
00:12:36,706 --> 00:12:40,668
texture we could have just use the derivative functions in cg there's a

241
00:12:40,848 --> 00:12:41,609
a good answer for that

242
00:12:42,309 --> 00:12:44,470
that we didn't know about the derivative functions

243
00:12:45,591 --> 00:12:49,614
which uh... i think this whole episode is kind of a a heartening

244
00:12:50,354 --> 00:12:53,516
lesson in the fact that to be a graphics programmer you need neither

245
00:12:53,676 --> 00:12:54,877
intelligence nor competence

246
00:12:55,950 --> 00:12:59,593
which is a line for all the artists in the audience to take back to their studios.

247
00:13:01,934 --> 00:13:08,319
So all right, we'd fixed the anisotropic filter problem, but if you look at this image, a

248
00:13:08,439 --> 00:13:13,542
lot of the screen is actually blacked out, and that meant that we still weren't getting

249
00:13:13,582 --> 00:13:15,444
the glitteriness we needed.

250
00:13:17,385 --> 00:13:19,947
So we added more glitter.

251
00:13:21,208 --> 00:13:23,749
This is this beam of light here.

252
00:13:24,767 --> 00:13:29,912
I've never actually seen it on sand in pictures or in dreams.

253
00:13:30,953 --> 00:13:32,875
It's completely unrealistic.

254
00:13:33,535 --> 00:13:36,758
What it is, though, is it's basically the same shader

255
00:13:36,798 --> 00:13:39,501
you would use to reflect the sun or the moon off of water.

256
00:13:39,821 --> 00:13:41,383
It's kind of like an ocean specular.

257
00:13:42,424 --> 00:13:45,968
And we just sort of tried this out one day in our deep despair.

258
00:13:46,588 --> 00:13:48,510
And we noticed that it felt correct.

259
00:13:50,142 --> 00:13:52,646
And so I think maybe one of the reasons that is,

260
00:13:53,327 --> 00:13:56,151
is because when you're actually out in the dunes.

261
00:13:57,581 --> 00:14:00,022
it has this very fluid kind of feeling.

262
00:14:00,042 --> 00:14:01,722
This is a video from our Pismo trip,

263
00:14:01,742 --> 00:14:03,263
and you can just kind of see the sand

264
00:14:03,643 --> 00:14:06,224
is rolling down the hill, or it's flowing down the hill.

265
00:14:06,504 --> 00:14:08,624
You sink into it, it feels like a fluid.

266
00:14:09,745 --> 00:14:12,405
And when you're standing on top of the dunes,

267
00:14:13,246 --> 00:14:15,266
you really get this feeling like you're actually

268
00:14:15,506 --> 00:14:19,848
in an ocean of sand, which is not a unique idea.

269
00:14:19,948 --> 00:14:21,768
There are quite a few hits for that

270
00:14:22,228 --> 00:14:23,129
when you search it on Google.

271
00:14:23,549 --> 00:14:24,689
Nearly as many as Ocean of Lard.

272
00:14:28,769 --> 00:14:30,910
uh... by the way we also ended up throwing on a uh...

273
00:14:31,730 --> 00:14:33,010
well a fluid simulation

274
00:14:33,550 --> 00:14:35,491
it would simulate neither ocean nor

275
00:14:35,951 --> 00:14:37,171
any known fluid but uh...

276
00:14:37,491 --> 00:14:39,211
it still had a good feel

277
00:14:39,492 --> 00:14:41,932
just adding that additional amount of fluidity

278
00:14:42,292 --> 00:14:44,713
made it actually feel more authentic even though it's totally

279
00:14:44,733 --> 00:14:46,633
uh... away from reality

280
00:14:47,313 --> 00:14:50,194
okay and so that's done sparkle is done we finally

281
00:14:50,554 --> 00:14:52,835
solved that problem so now on to the diffuse shader

282
00:14:53,135 --> 00:14:54,075
here's what we used in journey

283
00:14:54,455 --> 00:14:55,335
here's uh... Lambert

284
00:14:55,835 --> 00:14:58,196
notice the journey shaders uh... quite a bit higher contrast

285
00:14:58,916 --> 00:15:04,843
And one of the things that we realized sort of over the development of Journey, and I'm

286
00:15:04,863 --> 00:15:11,570
surprised it took as long as it did, but basically Lambert is a terrible shader for almost any

287
00:15:11,690 --> 00:15:12,251
situation.

288
00:15:12,791 --> 00:15:16,015
Like, any, literally any change you make to it is going to be an improvement.

289
00:15:18,350 --> 00:15:20,272
And so once we realized that,

290
00:15:20,292 --> 00:15:21,793
we started looking into alternatives.

291
00:15:21,973 --> 00:15:26,297
And one of the obvious ones is possibly using Orinnaire,

292
00:15:26,337 --> 00:15:28,199
which I think has gotten pretty well known now.

293
00:15:29,300 --> 00:15:32,783
But it's a physically-based shader for diffuse lighting.

294
00:15:33,263 --> 00:15:35,645
And we did end up using it on the cloth, actually.

295
00:15:37,015 --> 00:15:40,660
but the problem with Orinnaire is that it's actually pretty expensive

296
00:15:41,341 --> 00:15:45,046
and the thought of this being over half of our screen

297
00:15:45,988 --> 00:15:47,490
made our RSXs shrivel, so

298
00:15:48,411 --> 00:15:49,793
instead we took some

299
00:15:51,386 --> 00:15:54,647
some inspiration from my favorite way to reverse a string

300
00:15:55,187 --> 00:15:57,188
which is the random shuffle verify method

301
00:15:57,768 --> 00:16:01,009
which basically means you just try out random stuff until it works

302
00:16:01,510 --> 00:16:03,650
and so here's kind of a time-lapse view of the

303
00:16:04,331 --> 00:16:07,092
diffuse development on Journey. We started off with the ugly

304
00:16:07,692 --> 00:16:08,232
Lambert

305
00:16:09,172 --> 00:16:11,433
uh... I added a 4 here and

306
00:16:12,134 --> 00:16:13,214
multiplied that by 0.3

307
00:16:13,654 --> 00:16:14,995
and that was the shader

308
00:16:19,865 --> 00:16:21,726
And I'm not sure if there's a lesson in this.

309
00:16:22,467 --> 00:16:22,567
Uh...

310
00:16:24,588 --> 00:16:25,849
If there's anything, I think it's that

311
00:16:26,690 --> 00:16:28,031
especially, you know, as programmers

312
00:16:28,071 --> 00:16:29,992
and graphics programmers, we like a certain

313
00:16:30,052 --> 00:16:32,194
amount of rigor, and that's good. That's admirable.

314
00:16:32,674 --> 00:16:34,335
But, um, sometimes

315
00:16:35,096 --> 00:16:35,936
you just need to

316
00:16:36,117 --> 00:16:38,058
random shuffle verify, and

317
00:16:38,078 --> 00:16:39,759
that's good enough, and we should admit it.

318
00:16:41,861 --> 00:16:42,081
Okay.

319
00:16:43,030 --> 00:16:47,532
Now the final effect, and I'm not going to call this one a hack because this one we actually

320
00:16:47,712 --> 00:16:50,774
only added after looking at photo references.

321
00:16:51,254 --> 00:16:53,115
And so I guess, you know, photo references are good too.

322
00:16:53,255 --> 00:16:56,877
But late in the project we decided the sand needed something else and we started looking

323
00:16:56,917 --> 00:17:02,179
at pictures and we realized it was that little sort of fine-grained geometric detail that

324
00:17:02,219 --> 00:17:02,599
you can see.

325
00:17:04,741 --> 00:17:09,322
And the way we did this is, well, so the dunes in Journey are represented by a height map.

326
00:17:09,362 --> 00:17:15,824
And actually, each level has a very low resolution 256x512 height map, which when we are sort

327
00:17:15,844 --> 00:17:20,426
of streaming into the vertex buffer, we are using a B-spline filter on, which makes it

328
00:17:20,446 --> 00:17:21,306
incredibly smooth.

329
00:17:21,366 --> 00:17:25,207
It's actually a second derivative continuous, which allowed us to use second derivatives

330
00:17:25,267 --> 00:17:26,307
for ambient occlusion.

331
00:17:27,274 --> 00:17:32,299
But anyway, on top of that very smooth height map,

332
00:17:32,319 --> 00:17:35,863
we added these high-resolution tiling height maps.

333
00:17:35,883 --> 00:17:37,205
These are the ones we used in Journey.

334
00:17:37,245 --> 00:17:37,905
There are four of them.

335
00:17:38,526 --> 00:17:40,008
And this is just sort of,

336
00:17:40,088 --> 00:17:41,129
by looking at the photo references,

337
00:17:41,149 --> 00:17:45,473
we saw that on shallow, sort of like not steep areas of sand

338
00:17:45,814 --> 00:17:47,716
there were these very tight little ripples

339
00:17:47,736 --> 00:17:49,057
that were kind of going against the grain.

340
00:17:49,798 --> 00:17:51,860
And so we used the top textures for shallow sand.

341
00:17:51,900 --> 00:17:55,303
On steep sand, there were very low frequency waves

342
00:17:55,343 --> 00:17:57,905
going sort of with the slope of the sand.

343
00:17:58,726 --> 00:18:01,088
And just, you know, we detected sort of the slope

344
00:18:01,228 --> 00:18:04,951
and the X or Y orientation of the derivative

345
00:18:05,491 --> 00:18:08,314
and applied one of these textures.

346
00:18:10,316 --> 00:18:13,338
And that's actually it for the sand effects.

347
00:18:14,499 --> 00:18:15,140
And I don't think...

348
00:18:16,252 --> 00:18:21,800
Well, I don't expect that everyone here is going to run back to their studio to implement more sand games.

349
00:18:22,781 --> 00:18:24,304
They're cool. There were a lot of them actually in 2012.

350
00:18:26,389 --> 00:18:29,573
So I think if there's anything to be taken from this talk, it's that

351
00:18:30,714 --> 00:18:33,897
that game company process for visual development and

352
00:18:34,438 --> 00:18:34,898
it's sort of

353
00:18:35,879 --> 00:18:38,422
approaching it not from the physical or photographic

354
00:18:38,862 --> 00:18:42,126
but from the actual human experience going inside the player, approaching it

355
00:18:42,166 --> 00:18:42,326
from

356
00:18:42,746 --> 00:18:44,208
the feel and letting that be

357
00:18:44,668 --> 00:18:47,051
the guide for all of your graphics development.

358
00:18:48,783 --> 00:18:49,464
Okay, that's it.

359
00:18:49,504 --> 00:18:51,745
I'd like to thank Martin Middleton,

360
00:18:51,785 --> 00:18:54,966
who did a lot of the terrain work on Journey,

361
00:18:55,826 --> 00:19:00,028
and art director Matt Nava, who's here as well.

362
00:19:00,248 --> 00:19:02,269
There are actually a couple more Journey talks happening.

363
00:19:02,669 --> 00:19:04,089
Design of Journey is happening later today.

364
00:19:05,210 --> 00:19:06,290
Creative director Genova Chen,

365
00:19:07,130 --> 00:19:09,931
and Matt Nava giving a talk tomorrow.

366
00:19:11,672 --> 00:19:12,753
Oh yeah, and we're hiring, by the way.

367
00:19:14,588 --> 00:19:17,471
graphics engineers can apply to we got a lot of engineering positions.

368
00:19:18,692 --> 00:19:21,595
So check that out all right guys that is that is all.

369
00:19:34,706 --> 00:19:39,530
Oh yeah, I was supposed to say if you are going to ask a question please go to the Mike's.

370
00:19:41,110 --> 00:19:48,691
Hi there. So I actually did try to implement this system based on a blog post that I think maybe you wrote, or someone from the team wrote.

371
00:19:50,732 --> 00:19:56,993
And the sort of important thing I guess that I got from the blog post was these multi-layered, multi-leveled height maps

372
00:19:57,053 --> 00:20:03,755
where you had a large height map for the dunes and then the smaller high resolution height map for the sand waves.

373
00:20:04,335 --> 00:20:11,077
And I found that basically in order to actually represent the high resolution waves, you had to

374
00:20:11,367 --> 00:20:13,788
well, I just needed a crap ton of vertices.

375
00:20:15,289 --> 00:20:16,289
You should get some SPUs.

376
00:20:19,690 --> 00:20:23,352
So yeah, this was on the PC and I was using a tessellation shader that kind of fell off

377
00:20:23,412 --> 00:20:26,693
over levels of detail, but still it just didn't quite do it.

378
00:20:27,533 --> 00:20:31,275
Was there any sort of magic that you guys worked to get the mesh resolution sort of

379
00:20:31,355 --> 00:20:34,956
in a manageable way, or is it just the PS3 being awesome and being able to do that?

380
00:20:38,492 --> 00:20:41,334
Pretty much everything we did was probably in some way in

381
00:20:41,434 --> 00:20:44,756
error. We just had a fair number of verts. It wasn't a crazy

382
00:20:44,796 --> 00:20:48,819
number. You just need enough tessellation to stop looking

383
00:20:48,939 --> 00:20:51,181
ugly. I'm sorry. Yeah, it was all in vertex. The only normal

384
00:20:51,201 --> 00:20:53,482
map was the actual grain texture. Everything else was

385
00:20:53,542 --> 00:20:54,003
geometry.

386
00:21:07,904 --> 00:21:18,788
Dude, can you briefly elaborate on how the hell you made the sand roll down the slopes

387
00:21:18,868 --> 00:21:20,549
when you walked in it?

388
00:21:21,609 --> 00:21:23,970
I'm not talking about the polygonal thing.

389
00:21:24,010 --> 00:21:28,212
Yeah, well, yeah, I didn't cover that here, but...

390
00:21:29,541 --> 00:21:31,962
for the actual sand grain normal map.

391
00:21:32,402 --> 00:21:36,263
That was generated by a 2D particle system

392
00:21:36,783 --> 00:21:38,323
that we rendered on the SPUs.

393
00:21:38,963 --> 00:21:42,784
So it was, I think, around 10,000 particles.

394
00:21:43,945 --> 00:21:45,705
They were like 32 by 32 little particles

395
00:21:45,765 --> 00:21:47,026
with a sand texture on them.

396
00:21:47,666 --> 00:21:49,466
And we just, we had a little physics simulation

397
00:21:49,786 --> 00:21:52,007
and a renderer for generating that texture.

398
00:21:52,027 --> 00:21:54,108
And so when your guy walked over it,

399
00:21:55,048 --> 00:21:56,968
he would exert forces on the particles and...

400
00:21:57,864 --> 00:22:00,886
It was toroidal, so it could tile.

401
00:22:01,546 --> 00:22:02,006
OK.

402
00:22:02,026 --> 00:22:02,907
But that's how we did it, yeah.

403
00:22:03,327 --> 00:22:03,528
Cool.

404
00:22:04,008 --> 00:22:04,248
Thanks.

405
00:22:08,751 --> 00:22:09,772
All right, I think, wait.

406
00:22:10,152 --> 00:22:10,753
Yeah, I think that's it.

407
00:22:12,114 --> 00:22:12,354
Thank you.

