1
00:00:04,684 --> 00:00:11,247
My name is Gwen. I'm a tech artist. I'm an animator and I'm a studio founder. I've been an animator for about eight years now

2
00:00:18,029 --> 00:00:18,709
Why thank you

3
00:00:20,610 --> 00:00:22,290
Two years ago. I actually went indie

4
00:00:22,310 --> 00:00:26,132
I left triple-a and I started a small indie studio in Boston with five other people

5
00:00:26,652 --> 00:00:28,893
We just shipped our first title the flame in the flood

6
00:00:33,363 --> 00:00:35,803
This is really good. You should do this the whole time. I feel

7
00:00:35,823 --> 00:00:39,064
really good about this. Anyway, so the flame of the flood was

8
00:00:39,104 --> 00:00:42,425
very unique. This was a game where most of the characters I

9
00:00:42,465 --> 00:00:45,486
was animating were not humanoids and not bipeds. Most of the

10
00:00:45,526 --> 00:00:48,526
characters I was working on were quadrupeds. They're animals with

11
00:00:48,586 --> 00:00:52,827
four legs to worry about. And I found that traditional biped

12
00:00:52,867 --> 00:00:56,928
animation techniques just didn't work very well for quadruped

13
00:00:56,968 --> 00:01:00,769
characters. I found that there was ‑‑ quadrupeds present

14
00:01:00,829 --> 00:01:02,750
unique problems that we needed to solve.

15
00:01:03,733 --> 00:01:07,644
Uh, when working on a quadruped character, I want to kind of go through my process.

16
00:01:10,224 --> 00:01:11,804
I kind of want to go through my process.

17
00:01:12,445 --> 00:01:15,225
I mostly try to solve three problems

18
00:01:15,625 --> 00:01:19,146
before I dive down into actually animating the character

19
00:01:19,206 --> 00:01:20,426
or polishing any animation.

20
00:01:20,926 --> 00:01:22,427
The three problems I want to solve

21
00:01:22,647 --> 00:01:24,427
are moving forward through the world,

22
00:01:24,507 --> 00:01:26,247
you know, your forward locomotion.

23
00:01:26,267 --> 00:01:28,288
I want to solve, I want to figure out

24
00:01:28,308 --> 00:01:29,908
how I'm going to get the character to turn, which

25
00:01:29,948 --> 00:01:31,609
is extremely difficult for quadrupeds.

26
00:01:32,109 --> 00:01:33,089
And I want to figure out how I'm going

27
00:01:33,109 --> 00:01:35,950
to transition between moving and idle and back again.

28
00:01:35,970 --> 00:01:38,750
And I found if you can solve these three problems,

29
00:01:38,990 --> 00:01:39,190
then.

30
00:01:39,930 --> 00:01:44,273
After that, it's mostly polishing up your animations and adding on whatever your gameplay

31
00:01:44,293 --> 00:01:44,793
layer is.

32
00:01:48,456 --> 00:01:51,898
So for this talk, I'm going to be demonstrating my solutions for these problems using two

33
00:01:51,938 --> 00:01:52,478
characters.

34
00:01:52,878 --> 00:01:54,540
The first character I'm going to show you is the boar.

35
00:01:54,940 --> 00:02:00,143
This is a kind of cartoony, stumpy little character with short little legs.

36
00:02:00,703 --> 00:02:04,406
It's a character that kind of idles for a while and charges the player really quickly

37
00:02:04,446 --> 00:02:05,246
like a battering ram.

38
00:02:05,566 --> 00:02:06,707
And then it returns to idle.

39
00:02:08,110 --> 00:02:10,891
I streamed the entire development process for the boar.

40
00:02:11,011 --> 00:02:14,632
So all the footage you're going to see in this talk is from when I was actually working

41
00:02:14,712 --> 00:02:16,172
on it, developing the boar.

42
00:02:17,172 --> 00:02:20,213
And I'm supposed to tell you we used Unreal Engine 4 for development.

43
00:02:20,713 --> 00:02:25,814
So a lot of the footage you're going to see is actually using the in‑game animation

44
00:02:25,894 --> 00:02:26,754
blueprints and such.

45
00:02:30,255 --> 00:02:30,675
All right.

46
00:02:30,775 --> 00:02:31,595
Let's get started.

47
00:02:31,635 --> 00:02:36,256
The first thing I work on when I'm doing locomotion for a quadruped is forward locomotion.

48
00:02:37,840 --> 00:02:39,501
This is just moving forward through the world.

49
00:02:39,521 --> 00:02:46,703
I think everyone here is probably familiar with how you make a biped move forward through

50
00:02:46,724 --> 00:02:47,024
the world.

51
00:02:47,164 --> 00:02:52,146
Usually you animate a walk and then you animate a jog and you animate a run and you do like

52
00:02:52,186 --> 00:02:54,127
a linear blend between these animations.

53
00:02:54,547 --> 00:02:57,808
You keep the foot phasing roughly similar between these animations so that you know

54
00:02:57,848 --> 00:02:59,449
your linear blend will work properly.

55
00:03:01,071 --> 00:03:05,333
For quadrupeds, a lot of people, if you're looking at a quadruped, they generally have

56
00:03:05,353 --> 00:03:08,735
like a trot and a gallop, so a linear blend like that wouldn't work.

57
00:03:09,135 --> 00:03:12,997
What I decided to do for the boar, because the boar pretty much always moves at roughly

58
00:03:13,117 --> 00:03:18,780
the same rate, I decided to make a linear blend and actually use that biped style linear

59
00:03:18,800 --> 00:03:23,723
blend and just go between having a slow trot, a slightly faster trot, and a super fast trot

60
00:03:23,763 --> 00:03:24,223
for the boar.

61
00:03:24,703 --> 00:03:27,145
I thought I could get away with this, because this character is really cartoony.

62
00:03:28,805 --> 00:03:29,466
Here you can see...

63
00:03:31,100 --> 00:03:33,901
The final result, I'm slowing this down quite a bit,

64
00:03:34,261 --> 00:03:35,842
for the slowest animation for the boar

65
00:03:35,882 --> 00:03:37,403
and the fastest animation for the boar.

66
00:03:37,783 --> 00:03:40,224
And you can see the feet are hitting the ground

67
00:03:40,264 --> 00:03:41,225
at roughly the same time.

68
00:03:41,665 --> 00:03:43,786
The footfalls happen at roughly the same percentage

69
00:03:43,826 --> 00:03:46,307
of the animation for both of these animations.

70
00:03:47,227 --> 00:03:48,488
So if you're familiar with biped,

71
00:03:48,508 --> 00:03:50,749
this should seem pretty standard to you.

72
00:03:53,332 --> 00:03:56,734
Here you can see actually all four animations for locomotion for the boar.

73
00:03:57,315 --> 00:04:02,158
And you'll notice that each animation, the footfalls line up pretty closely with the

74
00:04:02,198 --> 00:04:04,100
next slowest and the next fastest animation.

75
00:04:04,540 --> 00:04:10,024
And this helps you really visualize and know that your animations are going to blend together

76
00:04:10,084 --> 00:04:11,766
properly when you set up your blend space.

77
00:04:15,137 --> 00:04:16,918
All right, and this is the actual blend space

78
00:04:16,958 --> 00:04:18,059
for the boar in game.

79
00:04:19,120 --> 00:04:21,481
What you see here on the line are the little,

80
00:04:21,781 --> 00:04:24,343
the dots are those animations that I demoed a minute ago.

81
00:04:25,243 --> 00:04:29,006
And what I'm doing is I drag the cursor from left to right.

82
00:04:29,466 --> 00:04:30,807
I'm manipulating this speed variable.

83
00:04:30,887 --> 00:04:33,428
This is the speed at which the character

84
00:04:33,668 --> 00:04:34,609
is moving through the world.

85
00:04:35,492 --> 00:04:39,154
And I'm just simulating what would happen if the character moved faster through the world.

86
00:04:39,515 --> 00:04:41,135
And you can see I'm blending through these animations.

87
00:04:41,195 --> 00:04:42,976
Again, this is probably really familiar to you.

88
00:04:43,457 --> 00:04:47,059
You will notice that I have more animations when the character is moving slowly.

89
00:04:47,719 --> 00:04:49,380
I find when a character is moving slowly,

90
00:04:49,920 --> 00:04:54,442
the foot sliding and glitches are way more obvious than if a character is moving quickly.

91
00:04:54,943 --> 00:04:59,585
You can get away with a lot more when flailing around when a character is moving quickly through the world.

92
00:05:03,245 --> 00:05:06,227
All right. So that was the boar. I think this is a good

93
00:05:06,287 --> 00:05:08,689
setup if you have a character that's maybe more cartoony like

94
00:05:08,709 --> 00:05:11,551
the boar was. I think this is a setup that you're all familiar

95
00:05:11,571 --> 00:05:14,114
with. So you can do it pretty quickly. It's really easy to

96
00:05:14,154 --> 00:05:18,297
generate animations off of existing animations. Like it's

97
00:05:18,377 --> 00:05:21,079
easy to take a slow trot and make it a fast trot versus

98
00:05:21,920 --> 00:05:24,182
having a walk and a gallop which will be totally different

99
00:05:24,242 --> 00:05:28,025
animations. So I think this is a really fast setup. But it is

100
00:05:28,085 --> 00:05:31,267
extremely unrealistic. This is not what happens in the natural

101
00:05:31,307 --> 00:05:31,548
world.

102
00:05:35,421 --> 00:05:38,222
All right, the other character I want to demonstrate today is this wolf.

103
00:05:38,662 --> 00:05:43,023
This is a character that always stays on a perimeter near the player.

104
00:05:43,083 --> 00:05:45,164
This is a character that modulates its speed.

105
00:05:45,544 --> 00:05:48,865
This is a character with a long spine and these really lanky limbs.

106
00:05:48,945 --> 00:05:54,466
And I really, really wanted to differentiate the motion between these two characters because

107
00:05:54,487 --> 00:05:55,627
this is a character that, uh...

108
00:05:56,947 --> 00:06:00,409
has much more dynamic motion and moves through the world in a

109
00:06:00,989 --> 00:06:03,650
it slows to a stop rather than stopping suddenly it

110
00:06:04,191 --> 00:06:06,972
tends to run around the player at any given time

111
00:06:07,392 --> 00:06:09,573
because this is a character that does this I really wanted to

112
00:06:09,593 --> 00:06:11,614
uh... have it

113
00:06:12,214 --> 00:06:15,296
properly transition between having a walk and a gallop and so forth

114
00:06:17,557 --> 00:06:21,479
so when I started for the wolf I went ahead and I animated a walk and a trot and a gallop

115
00:06:21,919 --> 00:06:25,120
just like you would expect and the foot phasing for these is not the same they

116
00:06:25,140 --> 00:06:26,121
don't line up at all really

117
00:06:27,224 --> 00:06:29,047
If I was gonna try to do a linear blend,

118
00:06:29,448 --> 00:06:30,970
like here's a trot and a gallop,

119
00:06:31,110 --> 00:06:32,131
if I try to blend between them,

120
00:06:32,192 --> 00:06:33,534
that's obviously not gonna work.

121
00:06:33,874 --> 00:06:35,797
You're gonna get some kind of funky dance, right?

122
00:06:38,851 --> 00:06:43,877
So instead what I'm going to do is I'm going to take and I'm going to scale the play rate of those animations based on the speed of the character.

123
00:06:44,378 --> 00:06:50,425
So if the character is moving twice as fast as the animation was authored at, then I play the animation twice as fast.

124
00:06:50,846 --> 00:06:57,494
If the character is moving half as fast as the animation was authored at, then I move, then I play the animation at half speed.

125
00:07:01,059 --> 00:07:04,260
What I want to do is when I move at a certain speed, I want to

126
00:07:04,320 --> 00:07:06,701
transition from the walk to the trot to the gallop.

127
00:07:07,041 --> 00:07:11,122
This way you never actually see the walk playing at 2x speed.

128
00:07:11,142 --> 00:07:14,622
You only ever see the walk playing at maybe 20% faster or

129
00:07:15,262 --> 00:07:15,663
20% slower.

130
00:07:16,263 --> 00:07:18,783
I transition quickly between these animations, and each of

131
00:07:18,803 --> 00:07:22,664
these animations has the play rate scaled based on the

132
00:07:22,704 --> 00:07:23,624
velocity of the pawn.

133
00:07:24,004 --> 00:07:25,585
Or I'm sorry, the velocity of the character.

134
00:07:27,202 --> 00:07:31,748
For this you will actually notice there is some foot sliding when I go between the trot

135
00:07:31,788 --> 00:07:35,872
and the gallop if you look closely because they obviously don't line up in any way.

136
00:07:36,713 --> 00:07:41,980
But because the character is moving so quickly through the world, by the time that transition

137
00:07:42,020 --> 00:07:43,461
happens you really don't notice it.

138
00:07:43,521 --> 00:07:44,683
It's basically imperceptible.

139
00:07:47,962 --> 00:07:49,042
So what should you take away from this?

140
00:07:49,082 --> 00:07:50,422
I think both characters were successful.

141
00:07:50,902 --> 00:07:52,523
I think the wolf feels more like a quadruped.

142
00:07:53,123 --> 00:07:54,964
I was actually pleasantly surprised

143
00:07:55,084 --> 00:07:56,544
that I could just do a quick transition

144
00:07:56,624 --> 00:07:58,385
and I didn't have to offer an animation

145
00:07:58,425 --> 00:08:00,185
to transition between trotting and galloping.

146
00:08:00,625 --> 00:08:02,546
It actually worked pretty well to just do a quick blend.

147
00:08:03,746 --> 00:08:05,627
I think the boar was successful

148
00:08:05,687 --> 00:08:08,467
because it mostly only ever moves at one speed.

149
00:08:10,088 --> 00:08:11,808
So I was pretty happy with both characters.

150
00:08:13,632 --> 00:08:16,793
So after forward locomotion you tackle your next problem which is turning.

151
00:08:17,233 --> 00:08:19,054
This is extremely difficult for quadrupeds.

152
00:08:19,594 --> 00:08:22,996
Quadrupeds tend to have multiple points of contact with the ground at any given time.

153
00:08:23,796 --> 00:08:27,458
I can demonstrate just looking around being incredibly difficult for quadrupeds.

154
00:08:30,039 --> 00:08:30,919
I mean imagine like...

155
00:08:32,314 --> 00:08:38,078
I'm here if I look around or if this biped character looks around it's pretty simple. It's pretty straightforward

156
00:08:38,478 --> 00:08:39,779
You can manipulate

157
00:08:39,939 --> 00:08:43,902
You can look behind you and you can twist your spine in order to look behind you

158
00:08:44,382 --> 00:08:49,266
Whereas for a quadruped if you try to do the same thing if you try to twist the spine you get some really ugly

159
00:08:49,286 --> 00:08:57,171
deformation you get a pose where the the front limbs feel like they're they're unnatural they they should be moving

160
00:08:57,351 --> 00:08:58,452
Just to even look around

161
00:09:02,245 --> 00:09:04,027
So I knew that turning would be very difficult,

162
00:09:04,087 --> 00:09:06,368
and I decided to break down turning into three steps.

163
00:09:06,909 --> 00:09:08,550
I decided that the first thing a character does

164
00:09:08,570 --> 00:09:11,292
when they turn is they, a quadruped should look

165
00:09:11,312 --> 00:09:12,332
in the direction that it's gonna turn,

166
00:09:13,033 --> 00:09:15,795
and then I felt like the front legs should move

167
00:09:15,935 --> 00:09:18,176
in that direction, and the spine should kind of arc,

168
00:09:18,777 --> 00:09:21,078
and then as the quadruped continues to move

169
00:09:21,098 --> 00:09:23,260
in that direction, I wanted the spine to straighten out,

170
00:09:23,700 --> 00:09:25,341
and I wanted the back legs to catch up.

171
00:09:26,822 --> 00:09:28,604
So here's a prototype early on.

172
00:09:29,934 --> 00:09:32,775
This is after I had already had the forward locomotion happening.

173
00:09:33,355 --> 00:09:35,896
So the character is walking forward.

174
00:09:36,136 --> 00:09:38,296
Obviously I haven't had a turning solution yet here.

175
00:09:39,216 --> 00:09:44,698
And what I've done is I've slowed the turn rate of the character in engine so that you

176
00:09:44,718 --> 00:09:48,679
can see this wolf is not snapping to turn in the direction it's moving.

177
00:09:48,919 --> 00:09:50,740
It's moving a little bit slowly.

178
00:09:51,400 --> 00:09:54,641
What I'm going to do now is every frame I'm going to query the direction that the wolf

179
00:09:54,681 --> 00:09:55,141
is moving.

180
00:09:56,021 --> 00:09:58,181
And I'm going to query the direction that the wolf is facing.

181
00:09:58,682 --> 00:10:01,784
I'm going to find the angle that's the difference between those two directions.

182
00:10:02,345 --> 00:10:07,189
If I take that angle and I apply it to the spine, I can get the front legs to kind of

183
00:10:07,769 --> 00:10:12,914
follow or I can get the front legs to point in the direction that the wolf is moving.

184
00:10:13,674 --> 00:10:15,936
So here's a really early example of this.

185
00:10:16,997 --> 00:10:20,920
All I'm doing is I'm taking that angle that I'm getting every frame.

186
00:10:21,854 --> 00:10:25,077
I'm dividing it by three because there's three joints in my wolf spine.

187
00:10:25,617 --> 00:10:28,800
And I'm adding that as a world space rotation to the spine.

188
00:10:29,441 --> 00:10:34,705
And what I get now is I get a character that has its front limbs always moving in the direction

189
00:10:34,725 --> 00:10:36,346
that the wolf is, or always pointing in the direction that the wolf is facing.

190
00:10:36,367 --> 00:10:38,388
And I get the back limbs to kind of catch up as the wolf moves forward because the pill

191
00:10:38,408 --> 00:10:38,769
is turning slowly.

192
00:10:38,789 --> 00:10:42,532
And I get the back limbs to kind of catch up as the wolf moves forward because the pill

193
00:10:42,592 --> 00:10:43,413
is turning slowly.

194
00:10:45,643 --> 00:10:51,149
I did this using skeletal controls, but you can imagine once you get that angle you could solve this in many ways

195
00:10:51,209 --> 00:10:58,396
You could use that angle to drive an additive animation that that curves the spine you could drive a blend space that has a spine

196
00:11:00,218 --> 00:11:04,842
Arced in different directions. There's any number of things you can do once you have that angle I

197
00:11:04,883 --> 00:11:08,106
Mean obviously there's a lot of foot sliding in this video. It was still pretty early on

198
00:11:09,637 --> 00:11:12,899
What we ended up doing finally in game was I worked with my

199
00:11:12,959 --> 00:11:16,241
programmer at this point to manipulate the path of the wolf

200
00:11:16,261 --> 00:11:21,684
slightly. We decided to take the turn rate of the character, of

201
00:11:21,724 --> 00:11:25,626
the pill of the character, and we set that to scale based on

202
00:11:25,666 --> 00:11:27,688
the speed of the character. So if

203
00:11:28,228 --> 00:11:31,971
If the wolf was ever stationary, it couldn't twist its spine.

204
00:11:32,212 --> 00:11:35,355
But as the wolf moved faster, it could twist its spine more.

205
00:11:36,456 --> 00:11:40,780
My programmer Damian also went ahead and set the wolf

206
00:11:40,860 --> 00:11:42,562
to never turn directly in place.

207
00:11:43,062 --> 00:11:44,704
The wolf always moves forward just a little bit

208
00:11:44,744 --> 00:11:46,705
in order to turn, similar to a car.

209
00:11:46,906 --> 00:11:48,928
Like a car has to kind of be moving forward

210
00:11:48,948 --> 00:11:50,049
a little bit in order to turn.

211
00:11:50,449 --> 00:11:52,211
And that's how we got the result that you see here.

212
00:11:56,736 --> 00:11:58,097
So I liked that result a lot.

213
00:11:58,157 --> 00:11:59,397
I thought it worked really well for the wolf.

214
00:12:01,098 --> 00:12:02,899
I didn't think it would work very well for the boar.

215
00:12:02,980 --> 00:12:05,401
For the boar, I wanted this to be a character that,

216
00:12:06,041 --> 00:12:08,483
I didn't want to have a separate looking with the head

217
00:12:08,643 --> 00:12:09,683
and looking with the spine.

218
00:12:09,723 --> 00:12:12,245
I didn't want the separation there.

219
00:12:12,265 --> 00:12:14,366
I wanted this to be one mass that was always focused

220
00:12:14,486 --> 00:12:17,107
on either looking in the direction it's moving

221
00:12:17,288 --> 00:12:18,328
or looking at the player.

222
00:12:19,169 --> 00:12:19,869
I also...

223
00:12:21,230 --> 00:12:23,411
wanted to experiment with different solutions.

224
00:12:24,311 --> 00:12:26,072
I knew that the bore would mostly be moving

225
00:12:26,092 --> 00:12:27,413
in a straight line and not arcs.

226
00:12:27,973 --> 00:12:30,875
So for the bore, I decided to try using a blend space instead.

227
00:12:31,295 --> 00:12:32,575
I'm going to take that same angle,

228
00:12:33,036 --> 00:12:34,676
and I'm going to use it to drive a blend space.

229
00:12:35,097 --> 00:12:39,019
Here you can see I have my fastest trot, my medium trot,

230
00:12:39,079 --> 00:12:40,619
and at the top, my slowest trot.

231
00:12:41,000 --> 00:12:42,620
And for each one, I authored a variant,

232
00:12:43,041 --> 00:12:44,981
one where I'm looking 180 degrees to the left,

233
00:12:45,462 --> 00:12:47,323
and one where I'm looking 180 degrees to the right.

234
00:12:47,883 --> 00:12:50,985
In order to do this, I actually, in each of these animations,

235
00:12:51,025 --> 00:12:52,105
the board is facing forward.

236
00:12:52,525 --> 00:12:54,606
But I'm kind of creating a strafing motion

237
00:12:54,626 --> 00:12:57,188
at these extremes when you're looking completely behind you.

238
00:12:57,668 --> 00:13:01,410
Because I didn't want the board to look like a U.

239
00:13:02,391 --> 00:13:04,452
I wanted the board to kind of strafe if it was looking

240
00:13:04,492 --> 00:13:05,252
completely behind it.

241
00:13:10,648 --> 00:13:13,370
And here's the result of applying those animations to

242
00:13:13,410 --> 00:13:16,852
this blend space. This is the same thing you saw earlier

243
00:13:16,892 --> 00:13:19,534
where I had, when I was moving between left and right, I was

244
00:13:19,574 --> 00:13:22,055
manipulating the speed of the character. I'm still doing that.

245
00:13:22,616 --> 00:13:26,138
Now I've also added this turn direction for the up and down

246
00:13:26,558 --> 00:13:29,900
vector here, right? So whenever I move the cursor up or down,

247
00:13:29,940 --> 00:13:34,023
I'm simulating if that angle is negative 180 degrees or if that

248
00:13:34,123 --> 00:13:34,583
angle is 180 degrees.

249
00:13:36,305 --> 00:13:40,972
and I've created this blend space where just by getting the angle between the direction

250
00:13:40,992 --> 00:13:44,137
the character is moving and the direction the character is facing and by getting the

251
00:13:44,197 --> 00:13:49,766
speed I can completely blend between these different animations to get a final result

252
00:13:49,806 --> 00:13:50,708
that will work for the character.

253
00:13:56,144 --> 00:13:57,565
All right, so now we've handled turning,

254
00:13:57,605 --> 00:13:58,906
we've handled forward locomotion,

255
00:13:58,926 --> 00:14:00,827
and we get to the hardest part about quadrupeds,

256
00:14:01,408 --> 00:14:03,149
which is stopping and starting again.

257
00:14:03,670 --> 00:14:05,331
I find, like I said earlier,

258
00:14:05,391 --> 00:14:08,414
that character glitches and foot sliding

259
00:14:08,474 --> 00:14:10,375
is way more obvious when a character's moving slowly.

260
00:14:10,856 --> 00:14:12,217
Your character's never moving slower

261
00:14:12,257 --> 00:14:13,198
than when it's about to stop.

262
00:14:13,758 --> 00:14:16,160
So this is where you really need to focus your attention

263
00:14:16,200 --> 00:14:17,501
on trying to make this look good.

264
00:14:21,347 --> 00:14:24,068
For a biped, stopping and starting again is pretty

265
00:14:24,148 --> 00:14:26,929
trivial. Bipeds pretty much only ever have one foot on the

266
00:14:26,949 --> 00:14:30,150
ground at a time. You can see here I'm showing any time the

267
00:14:30,191 --> 00:14:33,292
left or the right foot is hitting the ground. And they're

268
00:14:33,312 --> 00:14:36,393
never both planted. So if you really wanted to, you could do

269
00:14:36,413 --> 00:14:39,434
what most of you do, where you actually animate the transition

270
00:14:39,554 --> 00:14:42,155
between idle and ‑‑ or between locomotion and idle and

271
00:14:42,175 --> 00:14:42,555
back again.

272
00:14:43,707 --> 00:14:48,671
You'd only have to make two animations one when the left foot is planted one when the right foot is planted

273
00:14:49,131 --> 00:14:53,774
I think a lot of studios do this and I think this is a complete non-starter for quadrupeds

274
00:14:54,394 --> 00:14:58,016
Quadrupeds could have two feet on the ground at any given time. They could have three feet on the ground

275
00:14:58,937 --> 00:14:59,237
the

276
00:15:00,318 --> 00:15:04,621
The feet could be in different positions relative to each other if they're in a gallop versus

277
00:15:04,681 --> 00:15:05,621
if they're in a trot.

278
00:15:06,162 --> 00:15:11,645
So offering animations to transition between locomotion and idle seemed like a complete

279
00:15:12,066 --> 00:15:12,466
nightmare.

280
00:15:12,486 --> 00:15:14,387
It seemed like a complete nonstarter to me.

281
00:15:16,048 --> 00:15:20,791
You could always do what many games do, which is just blend directly from locomotion to

282
00:15:20,952 --> 00:15:21,172
idle.

283
00:15:21,732 --> 00:15:23,053
I think this looks really bad.

284
00:15:23,613 --> 00:15:28,016
I think it's ‑‑ it just didn't hit my personal quality bar.

285
00:15:30,433 --> 00:15:35,034
the when you animate your idle and you assume that the feet are going to be in certain positions

286
00:15:35,474 --> 00:15:40,195
and then you're you're blending from a locomotion where the feet could be in completely different

287
00:15:40,635 --> 00:15:44,456
positions then when you do that blend the feet will probably slide along the ground you'll get

288
00:15:44,496 --> 00:15:49,377
something that looks really wonky. What I'm going to recommend instead is what you see here on the

289
00:15:49,497 --> 00:15:54,117
right where you assume with your idle that you don't know where the feet are going to be you

290
00:15:54,137 --> 00:15:58,558
just pull them right down to the ground and you idle wherever you are. Here's how I accomplished

291
00:15:58,578 --> 00:15:59,558
that with the wolf.

292
00:16:01,106 --> 00:16:03,506
So for the wolf, I had this walking forward animation.

293
00:16:04,026 --> 00:16:06,087
And what I did was I authored a second animation,

294
00:16:06,487 --> 00:16:09,167
which is the same thing, it has the feet in the same place,

295
00:16:09,728 --> 00:16:12,048
but any feet that were off the ground,

296
00:16:12,568 --> 00:16:15,569
I just pull it to the ground at that point in the animation.

297
00:16:16,189 --> 00:16:17,989
So I get this animation where the feet are just

298
00:16:18,029 --> 00:16:20,250
kind of sliding around on the ground, right?

299
00:16:20,510 --> 00:16:21,930
I also lowered the center of gravity

300
00:16:21,970 --> 00:16:22,770
for the wolf slightly.

301
00:16:22,790 --> 00:16:27,191
If you recall from earlier, for the wolf,

302
00:16:28,126 --> 00:16:31,530
I'm scaling the play rate of the animation based on the velocity of the character.

303
00:16:32,070 --> 00:16:38,798
So if the wolf is moving at half the speed that the walk was at, then the walk is playing

304
00:16:38,818 --> 00:16:39,479
at half speed.

305
00:16:40,259 --> 00:16:45,005
If the wolf is not moving at all, if velocity is zero, then that walk freezes because the

306
00:16:45,265 --> 00:16:46,046
play rate is zero.

307
00:16:46,945 --> 00:16:50,165
At that moment, I have a blend on my tree.

308
00:16:50,646 --> 00:16:53,346
So I blend from a walk to an idle state.

309
00:16:53,926 --> 00:16:58,067
This idle state is that grounded animation.

310
00:16:58,627 --> 00:17:02,008
That grounded animation is set to sync with the walking animation.

311
00:17:02,408 --> 00:17:07,229
So what happens now is any time the wolf stops moving, the walk freezes.

312
00:17:07,769 --> 00:17:10,950
We blend to the idle, which is the same frame.

313
00:17:11,770 --> 00:17:14,831
It's just that the same frozen animation, but with the feet down.

314
00:17:15,731 --> 00:17:16,271
And uh...

315
00:17:17,112 --> 00:17:18,753
the wolf will kind of freeze there in place.

316
00:17:18,814 --> 00:17:20,836
It'll lower its body and it'll kind of be frozen

317
00:17:21,276 --> 00:17:22,177
with its feet on the ground.

318
00:17:22,577 --> 00:17:24,899
When the wolf starts moving again, when velocity increases,

319
00:17:25,380 --> 00:17:26,981
the wolf will blend back to walking.

320
00:17:27,462 --> 00:17:29,003
It'll pick up right where it was before,

321
00:17:29,424 --> 00:17:31,266
just picking up any foot that it just put down on the ground,

322
00:17:31,446 --> 00:17:32,627
and it'll just resume walking.

323
00:17:36,231 --> 00:17:37,191
I thought that was pretty cool.

324
00:17:39,099 --> 00:17:40,881
So I decided to do the same thing for the boar.

325
00:17:41,502 --> 00:17:43,785
However, if you recall, the boar is set up a little bit

326
00:17:43,805 --> 00:17:44,185
differently.

327
00:17:44,225 --> 00:17:46,868
There's three walking animations for the boar.

328
00:17:47,269 --> 00:17:50,312
So in order to do this for the boar, I had to author three

329
00:17:50,492 --> 00:17:51,834
feet planted animations.

330
00:17:52,234 --> 00:17:54,417
And I had to create a blend space that would mirror what I

331
00:17:54,457 --> 00:17:55,418
was doing with the walk.

332
00:17:56,219 --> 00:17:57,421
And that's what you can see here.

333
00:18:02,721 --> 00:18:05,962
And here's an earlier prototype when I was working on the bore.

334
00:18:06,022 --> 00:18:08,082
This is where I was at this moment.

335
00:18:08,582 --> 00:18:10,463
I had the bore moving forward through space,

336
00:18:11,403 --> 00:18:13,063
using its trotting blend space.

337
00:18:13,623 --> 00:18:17,824
I had the bore turning, in this case,

338
00:18:17,864 --> 00:18:19,265
pretty much always to face the player

339
00:18:19,345 --> 00:18:20,665
rather than facing move direction.

340
00:18:21,445 --> 00:18:25,026
And I have the bore stopping, so any time the bore stops,

341
00:18:25,566 --> 00:18:27,186
it pulls its feet, it freezes,

342
00:18:27,226 --> 00:18:28,547
and it pulls its feet down to the ground.

343
00:18:32,435 --> 00:18:34,876
is all well and good, but now your character is frozen any

344
00:18:34,916 --> 00:18:38,777
time it stops moving. And we're animators, so that's not okay.

345
00:18:39,317 --> 00:18:41,638
So the next thing I did was I authored an additive idle for

346
00:18:41,658 --> 00:18:44,379
these characters. I'm going to play this any time the character

347
00:18:44,459 --> 00:18:44,940
is frozen.

348
00:18:48,617 --> 00:18:51,839
This was the first additive idle I made for the boar.

349
00:18:52,400 --> 00:18:54,101
You can see here it's a very basic keep alive.

350
00:18:54,681 --> 00:18:56,363
I'm mostly only animating the torso

351
00:18:56,403 --> 00:18:57,403
and the head and the tail.

352
00:18:57,764 --> 00:18:59,685
I'm very careful not to animate the feet

353
00:18:59,925 --> 00:19:01,867
because I don't know exactly where the feet are gonna be.

354
00:19:01,907 --> 00:19:02,948
They could be at any position

355
00:19:02,988 --> 00:19:04,349
and the legs could be at any rotation

356
00:19:04,369 --> 00:19:05,250
when the character stops.

357
00:19:08,628 --> 00:19:12,231
And this is the result of applying that additive animation

358
00:19:12,591 --> 00:19:13,552
to that idle state.

359
00:19:14,112 --> 00:19:16,113
So now, whenever the boar stops moving,

360
00:19:16,934 --> 00:19:19,976
it freezes in place, it lowers its legs,

361
00:19:20,516 --> 00:19:23,298
and in that frozen pose, it plays this additive idle.

362
00:19:24,508 --> 00:19:26,669
You'll notice here that the feet are kind of swimming around on

363
00:19:26,689 --> 00:19:29,510
the ground a little bit. This is especially apparent when the

364
00:19:29,530 --> 00:19:33,331
board turns because its hips are turned and its torso is also

365
00:19:33,371 --> 00:19:36,092
turned. So I'm going to zoom in in a second here. And you'll see

366
00:19:36,112 --> 00:19:39,154
there's a lot of foot swimming. They're kind of drifting around

367
00:19:39,174 --> 00:19:44,376
on the ground. They don't quite feel planted and grounded. I

368
00:19:44,416 --> 00:19:46,457
think anybody that's worked with additive animation is familiar

369
00:19:46,477 --> 00:19:48,878
with this. This is a result of

370
00:19:50,164 --> 00:19:53,070
the way a computer sees additive animations.

371
00:19:53,150 --> 00:19:54,633
When you create an additive animation,

372
00:19:55,074 --> 00:19:58,020
you give your engine a finished result

373
00:19:58,060 --> 00:20:01,768
and it breaks it down into a pose and an animation.

374
00:20:02,705 --> 00:20:09,489
If you take that same animation and you apply it to a pose where the base is turned or moved

375
00:20:09,529 --> 00:20:15,413
in any way, or I'm sorry, if you apply that to a pose where the hips or your base is rotated,

376
00:20:16,073 --> 00:20:21,796
then what you're going to get is a, something that's mathematically correct, but doesn't

377
00:20:21,856 --> 00:20:22,637
quite look right.

378
00:20:22,677 --> 00:20:24,578
The feeder is going to be swimming around on the ground.

379
00:20:27,205 --> 00:20:29,508
So the way I fixed this for the boar was a little unorthodox.

380
00:20:30,049 --> 00:20:31,692
I just went ahead and I parented the hooves

381
00:20:31,732 --> 00:20:33,495
directly underneath the root of the character.

382
00:20:33,975 --> 00:20:35,298
And I reversed the joint chain,

383
00:20:35,778 --> 00:20:38,843
so that the knees are underneath the ankles

384
00:20:39,023 --> 00:20:40,406
and the hips are underneath the knees.

385
00:20:41,406 --> 00:20:44,648
I did this rather than use IK to save performance because we

386
00:20:44,668 --> 00:20:49,731
couldn't run 4IK at all times on all quadrupeds. But what this

387
00:20:49,791 --> 00:20:54,353
is going to do, because I did not move the hooves during the

388
00:20:54,413 --> 00:20:57,495
additive idle, there's no translation data on the hooves.

389
00:20:58,035 --> 00:21:00,356
So when I play the additive idle, the hooves are going to

390
00:21:00,377 --> 00:21:01,477
be locked down to the ground.

391
00:21:05,474 --> 00:21:06,355
And you can see that here.

392
00:21:07,235 --> 00:21:09,117
So now the hooves are locked down to the ground.

393
00:21:09,177 --> 00:21:10,998
And technically there is still joint swimming,

394
00:21:11,398 --> 00:21:13,620
but it's occurring at the shoulders and at the hips,

395
00:21:14,540 --> 00:21:16,342
which is very difficult to detect,

396
00:21:16,482 --> 00:21:18,443
especially with this particular character.

397
00:21:19,284 --> 00:21:20,905
This is a character with a massive torso

398
00:21:20,925 --> 00:21:21,945
and our camera's top down.

399
00:21:22,026 --> 00:21:24,787
So you never see what's going on in the chest

400
00:21:24,807 --> 00:21:26,228
or in the hip region of this character.

401
00:21:28,683 --> 00:21:31,765
I can get away with this because I am the rigger and the

402
00:21:31,865 --> 00:21:34,526
animator and everything in my studio. But I know most studios

403
00:21:34,967 --> 00:21:39,009
you probably can't re‑parent up your joints if you are in the

404
00:21:39,029 --> 00:21:41,930
middle of production. That's probably a non‑starter for

405
00:21:41,950 --> 00:21:46,372
most people. So I think a more typical response would be to run

406
00:21:46,432 --> 00:21:50,614
IK on each leg if you can afford it for your game. I'm going to

407
00:21:50,634 --> 00:21:53,816
demonstrate that now. This is the additive idle I made for the

408
00:21:53,836 --> 00:21:56,617
wolf. It's kind of like an aggressive ‑‑

409
00:21:57,304 --> 00:21:59,933
motion, I am definitely moving the hips and the,

410
00:22:00,334 --> 00:22:01,960
I'm definitely changing the rotation on the hips

411
00:22:02,100 --> 00:22:03,365
and on the torso for this character.

412
00:22:07,655 --> 00:22:10,316
And this is that additive applied in engine.

413
00:22:10,777 --> 00:22:12,677
And what I'm doing here is I'm going to,

414
00:22:13,118 --> 00:22:13,958
or what I'm doing is,

415
00:22:14,418 --> 00:22:18,120
I'm taking the world space position of the paw

416
00:22:18,640 --> 00:22:20,141
before the additive is applied.

417
00:22:20,241 --> 00:22:22,882
And I'm running an in-game IK on each paw

418
00:22:23,402 --> 00:22:25,863
that will end at that position.

419
00:22:26,343 --> 00:22:27,964
And so this is just doing a bit of fix-up

420
00:22:28,004 --> 00:22:29,925
to keep the feet completely planted in place

421
00:22:29,985 --> 00:22:30,925
while that additive runs.

422
00:22:35,509 --> 00:22:37,050
All right, so what should you take away from this?

423
00:22:37,590 --> 00:22:39,472
I think there's three main things you should look into

424
00:22:39,512 --> 00:22:40,893
when you're animating a quadruped.

425
00:22:40,913 --> 00:22:42,974
I think the first thing you do is you figure out

426
00:22:43,094 --> 00:22:45,296
how this specific character is gonna look

427
00:22:45,356 --> 00:22:46,497
moving forward through space.

428
00:22:46,937 --> 00:22:48,319
You solve that because that's a lot of.

429
00:22:49,059 --> 00:22:51,120
That's a lot of the character and the feeling behind

430
00:22:51,180 --> 00:22:52,421
whatever it is you're animating.

431
00:22:53,161 --> 00:22:54,662
The next thing you do is you figure out

432
00:22:54,682 --> 00:22:56,783
the technical problem of how you're gonna turn,

433
00:22:57,283 --> 00:22:59,324
because that is a huge challenge for quadrupeds.

434
00:22:59,885 --> 00:23:02,166
And then you figure out how you're gonna transition

435
00:23:02,206 --> 00:23:04,367
between moving and stopping and starting again.

436
00:23:05,108 --> 00:23:07,409
What I did for this talk was I showed

437
00:23:07,929 --> 00:23:10,690
the boar using a linear blend for its forward locomotion.

438
00:23:10,991 --> 00:23:13,412
I showed the wolf doing a kind of gated approach.

439
00:23:14,192 --> 00:23:15,573
for its locomotion.

440
00:23:16,133 --> 00:23:17,894
And I showed how I solved turning

441
00:23:18,134 --> 00:23:19,895
and how I personally solved transitioning

442
00:23:19,935 --> 00:23:20,835
to idle and back again.

443
00:23:21,435 --> 00:23:23,016
I recommend when you transition to idle,

444
00:23:23,596 --> 00:23:26,977
I think it's wise to not assume that the feet

445
00:23:27,017 --> 00:23:28,298
need to be in any specific place,

446
00:23:28,818 --> 00:23:30,959
but to find a way in your engine or in your game

447
00:23:31,339 --> 00:23:33,100
to pull the feet down directly to the ground

448
00:23:33,580 --> 00:23:34,701
and animate wherever they are.

449
00:23:35,221 --> 00:23:36,801
I think that's an elegant solution

450
00:23:36,822 --> 00:23:39,903
and it's one I've personally enjoyed doing quite a bit.

451
00:23:44,716 --> 00:23:50,278
All right. So that was my talk. I am on Twitter and on YouTube. I do two‑minute technique

452
00:23:50,298 --> 00:23:54,480
videos, two‑minute animation technique videos on YouTube that just show off whatever tech

453
00:23:54,540 --> 00:23:59,061
animation stuff I'm working on at any given time. So definitely, you know, check that

454
00:23:59,201 --> 00:24:04,683
out. I hope you enjoyed the talk. Thank you for coming. I did just ship my first title

455
00:24:04,763 --> 00:24:09,345
as an indie, the flame in the flood. So if you get a chance to, I don't know, maybe Google

456
00:24:09,365 --> 00:24:13,006
it or something, that would be cool. It's kind of a big deal to me.

457
00:24:15,424 --> 00:24:17,385
What else was I supposed to remind them?

458
00:24:17,726 --> 00:24:21,508
If you have any questions, please come up to the mic and please say your name.

459
00:24:23,929 --> 00:24:25,610
I'm going to repeat the question back at you.

460
00:24:26,650 --> 00:24:26,950
Thank you.

461
00:24:40,657 --> 00:24:41,198
No questions?

462
00:24:41,998 --> 00:24:42,458
That's cool.

463
00:24:42,959 --> 00:24:43,819
That makes this way easy.

464
00:24:45,763 --> 00:24:46,124
One question.

465
00:24:47,024 --> 00:24:47,564
Hi, Garrett.

466
00:24:49,085 --> 00:24:49,305
OK.

467
00:24:49,325 --> 00:24:50,266
So I have a couple of questions.

468
00:24:50,286 --> 00:24:52,407
You talked about your process, but how does your process

469
00:24:52,427 --> 00:24:53,508
fit in with everybody else?

470
00:24:53,808 --> 00:24:57,230
So did you have AI behavior for the enemies

471
00:24:57,290 --> 00:24:59,571
before you started prototyping your animation blending

472
00:25:00,231 --> 00:25:00,912
and how that worked?

473
00:25:01,052 --> 00:25:03,113
Or was it kind of all together?

474
00:25:03,433 --> 00:25:04,153
Or did you do that?

475
00:25:05,136 --> 00:25:08,739
Okay. So I feel like there are two questions there. First I

476
00:25:08,779 --> 00:25:12,842
think you asked how what I'm doing here is different from how

477
00:25:12,902 --> 00:25:14,283
other people approach quadrupeds?

478
00:25:14,723 --> 00:25:16,365
No. Within your studio.

479
00:25:18,250 --> 00:25:20,731
how did you work with the people prototyping the actual enemy

480
00:25:20,751 --> 00:25:23,874
behavior or did you do that as far as game play?

481
00:25:24,054 --> 00:25:28,116
Gotcha. So our studio is six people. I do all the

482
00:25:28,196 --> 00:25:31,579
prototyping. Everything you saw up there up until I said my

483
00:25:31,619 --> 00:25:34,160
programmer stepped in here was literally me. I just used

484
00:25:34,180 --> 00:25:36,562
blueprint to script the pawn to move from one location to

485
00:25:36,602 --> 00:25:41,665
another. We're a very small outfit. So I don't have to worry

486
00:25:41,705 --> 00:25:46,428
too much about working with other people. Clearly.

487
00:25:49,903 --> 00:25:51,183
I guess that would be me.

488
00:25:53,984 --> 00:26:00,628
So you said with the boar that you couldn't afford to apply IK to all four feet with potentially

489
00:26:00,668 --> 00:26:04,289
multiple creatures and then you said with the wolf that you then did that.

490
00:26:05,310 --> 00:26:06,270
Yeah, I was playing around.

491
00:26:06,891 --> 00:26:07,151
Sorry?

492
00:26:07,671 --> 00:26:08,791
Yeah, I was playing around.

493
00:26:09,552 --> 00:26:12,293
To be honest, I did the wolf before the boar.

494
00:26:13,634 --> 00:26:15,154
And for the wolf...

495
00:26:16,169 --> 00:26:20,633
I wasn't sure if I could afford to have those 4IK running at all times.

496
00:26:21,054 --> 00:26:26,418
It was at that moment we had not yet done our profiling and we were unclear on exactly

497
00:26:26,579 --> 00:26:26,759
what

498
00:26:27,972 --> 00:26:33,554
platforms we would be on at that point. The wolf was the first AI we worked on. So when

499
00:26:33,614 --> 00:26:39,036
I came time to do the boar, I decided to use the boar as a chance to experiment with other

500
00:26:39,136 --> 00:26:44,038
solutions that would maybe save us some performance because it was something I was personally

501
00:26:44,058 --> 00:26:49,460
a little bit worried about. I was looking at the time at this, and I'm like, that's

502
00:26:49,800 --> 00:26:53,961
12 IKs running at all times, plus the dog, so that's another four, so I guess I'm not

503
00:26:54,001 --> 00:26:54,581
that good at math.

504
00:26:56,472 --> 00:26:59,754
And I was concerned that that might be expensive. I didn't actually know yet

505
00:27:00,735 --> 00:27:05,859
Sure, so the for the wolves that stayed in and then for the boars you found another solution

506
00:27:06,779 --> 00:27:08,901
Or did you then retrofit the wolf as well?

507
00:27:09,552 --> 00:27:13,635
I have not yet retrofitted the wolf. I have decided to tackle that when it becomes a problem

508
00:27:13,675 --> 00:27:19,279
because it's a huge pain. If you are going to change the rig and reverse the joint order

509
00:27:19,339 --> 00:27:24,643
that's ‑‑ and then re‑export all the animations and check it to make sure everything

510
00:27:24,663 --> 00:27:30,968
looks right. That's a significant chunk of work and I'm one person. So if we end up hitting

511
00:27:31,148 --> 00:27:37,413
a performance problem on the CPU, I will definitely look into that and see if that's a place we

512
00:27:37,433 --> 00:27:38,173
could make some savings.

513
00:27:42,233 --> 00:27:42,433
Sorry.

514
00:27:42,874 --> 00:27:43,655
Oh, sorry.

515
00:27:43,695 --> 00:27:44,095
Go ahead.

516
00:27:44,295 --> 00:27:45,336
Yeah, hi.

517
00:27:45,656 --> 00:27:49,800
So this might be a bit more of a technical question in terms of how you're doing specific

518
00:27:49,820 --> 00:27:50,521
things in Unreal.

519
00:27:51,021 --> 00:27:56,706
But you said you mentioned you're getting the turn the AI character's actually doing.

520
00:27:57,247 --> 00:27:58,728
How are you actually getting that?

521
00:27:58,748 --> 00:28:01,410
Because we don't seem to be able to have access to that.

522
00:28:01,430 --> 00:28:03,733
To get access to the turn rate of the character?

523
00:28:04,173 --> 00:28:07,396
Not the rate, but the actual turn that it's going to actually be making.

524
00:28:07,824 --> 00:28:09,865
Oh, manipulating the path finding to open an arc?

525
00:28:09,885 --> 00:28:10,146
Yeah, exactly.

526
00:28:10,346 --> 00:28:12,247
Yeah, that's why I got a programmer involved.

527
00:28:12,347 --> 00:28:12,768
Oh, right.

528
00:28:15,510 --> 00:28:18,112
Yeah, that was a, I tried scripting solutions for that.

529
00:28:19,373 --> 00:28:22,316
I did not succeed in finding a scripting solution for that quite yet.

530
00:28:25,459 --> 00:28:29,321
there was a talk yesterday if you go look at the vault and it

531
00:28:29,361 --> 00:28:35,523
was on quadruped motion. So it was a very similar solution so

532
00:28:35,543 --> 00:28:38,064
you can look that up on the vault which will answer that

533
00:28:38,124 --> 00:28:43,986
question. Thank you. That's my job for me. I appreciate that.

534
00:28:45,339 --> 00:28:51,001
Hi, so it seems like you basically have two kinds of creatures the wolf had a discreet spine and you wanted to

535
00:28:51,321 --> 00:28:57,062
Separate the motion of the front and back legs versus the boar which didn't really have a spine you wanted the whole body to move

536
00:28:57,302 --> 00:28:58,823
as as one object

537
00:29:00,403 --> 00:29:03,944
Would you foresee like a third kind of creature we have to do something in between them

538
00:29:04,084 --> 00:29:08,225
Or do you think that you could pretty much separate all quadrupeds into these two categories?

539
00:29:09,425 --> 00:29:13,786
Every time I do a character I do a completely different solution because I can

540
00:29:15,524 --> 00:29:17,246
So these aren't the only two characters.

541
00:29:17,266 --> 00:29:18,647
These are just the two I focused on

542
00:29:18,667 --> 00:29:19,608
because I only have half an hour.

543
00:29:20,168 --> 00:29:22,350
So there's also a bear that rears up on its hind legs

544
00:29:22,411 --> 00:29:24,172
and that moves in a way that's very different.

545
00:29:24,232 --> 00:29:25,673
It's actually kind of like a rabbit.

546
00:29:26,034 --> 00:29:27,055
For the bear I tried to,

547
00:29:27,475 --> 00:29:29,257
I experimented with the idea that the front legs

548
00:29:29,297 --> 00:29:31,339
and the back legs actually move completely differently

549
00:29:31,379 --> 00:29:33,380
and independently and I kind of solved in between.

550
00:29:35,182 --> 00:29:39,386
That was not the best solution so it didn't make this talk.

551
00:29:42,021 --> 00:29:47,124
dog is a pretty good hybrid between the two. Between my

552
00:29:47,284 --> 00:29:50,126
solution for the wolf and my solution for the boar. The

553
00:29:50,146 --> 00:29:52,327
rabbit is a totally different creature entirely.

554
00:29:55,869 --> 00:29:58,551
So you're showing a lot of flat terrain. I don't know if you

555
00:29:58,571 --> 00:30:00,813
guys build the levels with this in mind. How do you handle

556
00:30:00,873 --> 00:30:03,074
inclines and the change in slope?

557
00:30:03,489 --> 00:30:04,430
how would I handle that?

558
00:30:04,770 --> 00:30:05,150
Oh, I'm sorry.

559
00:30:05,170 --> 00:30:06,852
The question was how I would handle inclines

560
00:30:06,892 --> 00:30:07,652
or a change of slope.

561
00:30:08,053 --> 00:30:09,794
We don't have too much of that in our game.

562
00:30:09,834 --> 00:30:12,296
We do have subtle inclines at times,

563
00:30:12,336 --> 00:30:14,118
and that did come online a little bit late.

564
00:30:14,598 --> 00:30:16,059
If I was working at a AAA studio

565
00:30:16,099 --> 00:30:17,380
or somewhere where I had to worry about that,

566
00:30:17,881 --> 00:30:20,323
generally what you would do is you would take the pill

567
00:30:20,583 --> 00:30:22,585
and you would adjust the pill to kind of rotate

568
00:30:22,685 --> 00:30:26,428
to be perpendicular to the,

569
00:30:26,708 --> 00:30:28,489
to the whatever ground that it's over,

570
00:30:28,509 --> 00:30:31,512
and then you would probably update the feet

571
00:30:31,572 --> 00:30:32,753
using IK solutions.

572
00:30:33,713 --> 00:30:34,776
so that they're always on the ground.

573
00:30:38,288 --> 00:30:39,251
All right, that's our time.

574
00:30:39,352 --> 00:30:40,074
Thank you everybody.

