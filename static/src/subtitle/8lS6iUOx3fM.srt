1
00:00:00,089 --> 00:00:06,715
Hello and welcome to this GDC talk about cloud gaming. I'm Adam Billiard and I'll be sharing

2
00:00:06,715 --> 00:00:13,662
my thoughts about where cloud gaming is today and where we all are going with cloud gaming.

3
00:00:13,662 --> 00:00:20,588
If you are watching this live, feel free to ask any questions in the chat and if

4
00:00:20,588 --> 00:00:25,433
you're watching this in catch-up, please share your thoughts in the comments below.

5
00:00:29,856 --> 00:00:32,478
So let's kick off with a simple fact,

6
00:00:32,478 --> 00:00:38,863
which is that cloud is becoming increasingly an important part of our lives.

7
00:00:38,863 --> 00:00:42,726
From web applications to AI to Alexa to Siri,

8
00:00:42,726 --> 00:00:50,653
banking, login, authentication, it's a pervasive part of our lives.

9
00:00:50,653 --> 00:00:52,074
So I guess the question is,

10
00:00:52,074 --> 00:00:59,200
why have we not seen the full potential of cloud in gaming?

11
00:01:02,890 --> 00:01:06,553
So today I want to look at why we haven't seen

12
00:01:06,553 --> 00:01:09,115
that mass adoption of cloud gaming just yet.

13
00:01:09,115 --> 00:01:15,159
So I'm going to be guiding you through a history of cloud gaming,

14
00:01:15,159 --> 00:01:18,922
its successes and its failures,

15
00:01:18,922 --> 00:01:22,185
and we'll give you a sort of general overview of game streaming

16
00:01:22,185 --> 00:01:25,628
from a business and development point of view

17
00:01:25,628 --> 00:01:28,410
from someone who's been in the game technology

18
00:01:28,410 --> 00:01:32,253
and streaming side of the world for a very long time.

19
00:01:33,795 --> 00:01:41,164
I want to give an insight into what cloud gaming offers,

20
00:01:41,164 --> 00:01:42,606
how it's actually delivered,

21
00:01:42,606 --> 00:01:46,590
and what are the challenges that have stopped

22
00:01:46,590 --> 00:01:50,335
so many streaming companies from breaking out.

23
00:01:50,335 --> 00:01:52,857
So mostly I think I'm looking to

24
00:01:54,156 --> 00:01:57,257
arm you to ask better questions of the vendors,

25
00:01:57,257 --> 00:02:02,779
as well as evaluate the potentials for uses of cloud gaming,

26
00:02:02,779 --> 00:02:07,201
you know, from a business or from a sort of creative point of view,

27
00:02:07,201 --> 00:02:11,002
and help you, you know, get going with thinking about

28
00:02:11,002 --> 00:02:15,063
what a cloud-native experience might be.

29
00:02:15,063 --> 00:02:18,305
So, before we get started, who am I?

30
00:02:18,305 --> 00:02:21,166
Why should you listen to me?

31
00:02:21,166 --> 00:02:22,586
Well, I'm Adam.

32
00:02:22,586 --> 00:02:22,806
Hello.

33
00:02:24,309 --> 00:02:29,213
I'm a Brit. I actually spent my high school years in Minnesota,

34
00:02:29,213 --> 00:02:31,356
and that's when I got into programming,

35
00:02:31,356 --> 00:02:34,078
hanging around in radio shacks and playing with TRS-80s.

36
00:02:34,078 --> 00:02:38,763
I've been in the games industry for a very long time.

37
00:02:38,763 --> 00:02:42,367
My first game was published by Atari in 1983.

38
00:02:44,015 --> 00:02:48,817
And of course back in those days, you not only, before you actually wrote the game,

39
00:02:48,817 --> 00:02:54,599
you had to write the tools to do the art to write the game. So it's a very different world.

40
00:02:54,599 --> 00:03:00,181
I was co-founder of Criterion Software, where we built the RenderWare game engine.

41
00:03:01,002 --> 00:03:07,873
And that was for PC, Mac, PlayStation 2, PlayStation 3,

42
00:03:07,873 --> 00:03:08,754
Xbox, Xbox 360, mobile.

43
00:03:08,754 --> 00:03:15,004
There was a time when 50% of all PlayStation 2 titles were using renderware.

44
00:03:17,505 --> 00:03:22,168
So I worked with amazing teams around the world during that time.

45
00:03:22,168 --> 00:03:27,211
And when we got acquired by Electronic Arts,

46
00:03:27,211 --> 00:03:30,013
I became the tech CTO and VP in EA.

47
00:03:30,013 --> 00:03:37,078
And I worked with a lot of the internal teams and amazing teams in EA.

48
00:03:37,078 --> 00:03:41,501
More recently, I co-founded Polystream.

49
00:03:41,501 --> 00:03:46,965
And the idea is that we are building a scalable cloud streaming platform.

50
00:03:50,462 --> 00:03:53,505
So, why care about the cloud?

51
00:03:53,505 --> 00:03:57,971
You know, you may well be sitting there thinking to yourself,

52
00:03:57,971 --> 00:04:01,175
you know, why do I need to know or care

53
00:04:01,175 --> 00:04:04,238
about what goes on behind the scenes in cloud gaming?

54
00:04:04,238 --> 00:04:07,022
I just want to write games.

55
00:04:07,022 --> 00:04:07,222
Sure.

56
00:04:08,448 --> 00:04:09,189
But I want today to lift,

57
00:04:09,189 --> 00:04:16,653
show the sort of magic behind the curtain in some ways.

58
00:04:16,653 --> 00:04:18,414
I mean, I still get very excited about,

59
00:04:18,414 --> 00:04:20,395
you know, when you start a stream,

60
00:04:20,395 --> 00:04:23,897
I find it incredible that you can start a stream

61
00:04:23,897 --> 00:04:26,358
and you're playing something from the cloud,

62
00:04:26,358 --> 00:04:27,939
and it's such a great experience.

63
00:04:27,939 --> 00:04:29,380
And I know a great deal about, you know,

64
00:04:29,380 --> 00:04:31,641
what's going on behind the scenes.

65
00:04:31,641 --> 00:04:34,502
I still find it absolutely magical.

66
00:04:36,093 --> 00:04:42,618
But I think there is clearly a huge untapped potential

67
00:04:42,618 --> 00:04:45,640
for game developers with cloud gaming.

68
00:04:45,640 --> 00:04:51,605
And the growth of the market isn't slowing down.

69
00:04:51,605 --> 00:04:53,826
And 5 billion as the revenues is the mark

70
00:04:53,826 --> 00:04:56,248
that we're gonna be passing in 2023.

71
00:04:57,572 --> 00:05:00,536
So despite cloud streaming and cloud gaming's

72
00:05:00,536 --> 00:05:03,200
sort of slightly meh reputation,

73
00:05:03,200 --> 00:05:07,427
I think there's a lot of reason to be very optimistic

74
00:05:07,427 --> 00:05:09,790
about the cloud streaming future.

75
00:05:12,230 --> 00:05:23,598
There is, I guess, a perception of cloud streaming somehow defying economics and physics in some quarters.

76
00:05:23,598 --> 00:05:28,421
And I think, for the avoidance of doubt, it doesn't.

77
00:05:28,421 --> 00:05:32,645
You know, power costs money and the speed of light remains constant.

78
00:05:32,645 --> 00:05:35,246
Who knew?

79
00:05:36,877 --> 00:05:40,778
To understand the sort of history around cost,

80
00:05:40,778 --> 00:05:42,479
reach and scale and give insight,

81
00:05:42,479 --> 00:05:45,820
and knowing and sort of to give insight

82
00:05:45,820 --> 00:05:48,361
and also to understand the capabilities,

83
00:05:48,361 --> 00:05:51,382
the strengths and the limitations of this medium,

84
00:05:51,382 --> 00:05:54,083
help will help, I think,

85
00:05:54,083 --> 00:05:58,005
help make sort of informed decisions, I guess.

86
00:05:58,005 --> 00:06:02,887
So what exactly is cloud streaming?

87
00:06:04,188 --> 00:06:07,070
Well, the cloud in this context is,

88
00:06:07,070 --> 00:06:10,633
we're referring to an instantly accessible content on demand.

89
00:06:10,633 --> 00:06:15,716
So the computer resources, compute, storage,

90
00:06:15,716 --> 00:06:18,999
are available and brought to bear

91
00:06:18,999 --> 00:06:22,221
without direct active management from the user.

92
00:06:22,221 --> 00:06:25,263
And you're playing a game that's running on a server

93
00:06:26,323 --> 00:06:30,046
and it's streaming to your device rather than playing it,

94
00:06:30,046 --> 00:06:33,608
you know, on your, you know, in your living room,

95
00:06:33,608 --> 00:06:34,569
on your local device.

96
00:06:34,569 --> 00:06:38,892
I think the other sort of piece of it is, of course,

97
00:06:38,892 --> 00:06:42,735
that the nature of the streaming part

98
00:06:42,735 --> 00:06:44,376
is that you're playing those apps,

99
00:06:44,376 --> 00:06:46,317
you know, games, movies, music,

100
00:06:46,317 --> 00:06:49,159
where you're not downloading the content first

101
00:06:49,159 --> 00:06:50,000
onto your device.

102
00:06:50,000 --> 00:06:53,522
So you're streaming and that whole sort of instant play piece.

103
00:06:54,333 --> 00:06:56,754
And just so we're on the same page,

104
00:06:56,754 --> 00:06:59,415
I'm talking today about true streaming.

105
00:06:59,415 --> 00:07:03,977
I'm not going to talk about progressive file downloading schemes.

106
00:07:03,977 --> 00:07:09,639
I also want to cover some of the moving parts of cloud streaming.

107
00:07:09,639 --> 00:07:13,360
And I think it will aid understanding.

108
00:07:13,360 --> 00:07:17,042
And if you've got questions, then feel free to drop in questions

109
00:07:17,042 --> 00:07:18,342
and or email me afterwards.

110
00:07:18,342 --> 00:07:23,945
Thank you very much.

111
00:07:25,382 --> 00:07:32,605
Why cloud streaming is good? I think people generally, you know, today, understand what the

112
00:07:32,605 --> 00:07:38,988
promise, what the advantages of cloud streaming are, you know, from instant access to content,

113
00:07:38,988 --> 00:07:44,290
to not needing to manage your own storage, not the whole sort of piece of do I delete this game in

114
00:07:44,290 --> 00:07:48,272
order to install this new game locally, that all goes away with cloud streaming.

115
00:07:48,712 --> 00:07:54,678
the ability to save a game from one location and pick it up in a different location,

116
00:07:54,678 --> 00:07:55,879
potentially on a different device.

117
00:07:55,879 --> 00:08:02,004
So you could start a game on one device and you could finish the same game on a different device.

118
00:08:02,004 --> 00:08:05,107
And there's things like reduced piracy.

119
00:08:06,926 --> 00:08:12,631
There are a couple of other things that we haven't really seen before so far,

120
00:08:12,631 --> 00:08:15,433
which is in the offerings that we've seen to date,

121
00:08:15,433 --> 00:08:19,997
with things like bringing to bear huge compute that is in the cloud

122
00:08:19,997 --> 00:08:22,319
to give a different experience,

123
00:08:22,319 --> 00:08:28,844
and also the whole sort of leveraging the cloud

124
00:08:28,844 --> 00:08:32,527
to give never-before-seen scale experiences.

125
00:08:32,527 --> 00:08:36,650
Those two things, we have not seen a great deal to date on that front.

126
00:08:39,667 --> 00:08:42,367
Okay, GDC diagram time.

127
00:08:42,367 --> 00:08:47,449
So, I think if there was sort of one diagram,

128
00:08:47,449 --> 00:08:50,009
one slide you took away from this talk,

129
00:08:50,009 --> 00:08:53,750
hopefully you'll take more than just this slide.

130
00:08:53,750 --> 00:08:57,491
This would be the slide I think is incredibly useful

131
00:08:57,491 --> 00:09:01,832
to have insight into what cloud streaming, cloud gaming is.

132
00:09:01,832 --> 00:09:06,593
So, when you're in a coffee shop,

133
00:09:07,983 --> 00:09:14,997
Starbucks. I think we all know that when you're close to the Wi-Fi access point, you get a better experience.

134
00:09:15,762 --> 00:09:17,143
So if you're close to the access point,

135
00:09:17,143 --> 00:09:22,247
then typically if you're streaming videos or movies,

136
00:09:22,247 --> 00:09:26,430
they are less glitchy. If you're down on emails, it's faster.

137
00:09:26,430 --> 00:09:31,253
Now, the reason that that's the case is that as you go further away

138
00:09:31,253 --> 00:09:34,076
from that access point, the interference,

139
00:09:34,076 --> 00:09:37,598
there's a whole range of things where your data…

140
00:09:38,118 --> 00:09:40,480
essentially gets dropped and it has to be retransmitted.

141
00:09:40,480 --> 00:09:42,541
And that slows everything down.

142
00:09:42,541 --> 00:09:46,063
And as you come closer to that Wi-Fi access point,

143
00:09:46,063 --> 00:09:49,185
the connection gets better and less packets are dropped.

144
00:09:49,185 --> 00:09:52,768
And so your experience gets better.

145
00:09:52,768 --> 00:09:54,909
So in other words, you're closer, good,

146
00:09:54,909 --> 00:09:55,869
far away, not so good.

147
00:09:55,869 --> 00:10:00,832
The internet, of course, doesn't work that way particularly,

148
00:10:00,832 --> 00:10:02,614
but I think it's an okay analogy.

149
00:10:04,335 --> 00:10:09,919
So in this diagram I'm showing, on the left hand side we've got your home setup, you've

150
00:10:09,919 --> 00:10:14,563
got a router, you may have some Wi-Fi, you may have an ISP router provided by the ISP.

151
00:10:15,509 --> 00:10:20,955
But ultimately, you get that your traffic, your game traffic,

152
00:10:20,955 --> 00:10:24,518
going through a series of routers, a series of networks,

153
00:10:24,518 --> 00:10:27,021
and those hops between routers,

154
00:10:27,021 --> 00:10:32,346
where each of those hops cover a geographic distance,

155
00:10:32,346 --> 00:10:36,650
are the thing that introduces the latency.

156
00:10:37,892 --> 00:10:43,033
And so you may have, you know, you may have 5, 10, 15, 20 hops before you get to your actual data center

157
00:10:43,033 --> 00:10:51,396
where it's going to answer your, you know, send the data back, whatever it is. And that's important.

158
00:10:51,396 --> 00:10:57,358
I mean, just sort of roughly to give you a sense of it, crossing the US is kind of roughly 100

159
00:10:57,358 --> 00:11:03,640
milliseconds. That doesn't seem, a tenth of a second, it doesn't seem very long.

160
00:11:04,818 --> 00:11:07,379
But in the context of interactive games

161
00:11:07,379 --> 00:11:11,600
where your frame time is 16 milliseconds,

162
00:11:11,600 --> 00:11:13,400
it's a very big deal.

163
00:11:13,400 --> 00:11:19,222
And so that notion of being close to the data center

164
00:11:19,222 --> 00:11:24,304
is very, very critical to having a good cloud experience.

165
00:11:24,304 --> 00:11:29,825
You can't put your data centers thousands of miles away

166
00:11:29,825 --> 00:11:32,646
and expect any kind of decent experience.

167
00:11:32,646 --> 00:11:34,266
It has to be quite close to the users.

168
00:11:35,285 --> 00:11:42,507
And to give you a sense of that, I think, you know, I ran Traceroute from my home to Google,

169
00:11:42,507 --> 00:11:49,109
and just to get to Google's edge nodes, for me it was 10 hops. And that's just to get to the edge of

170
00:11:49,109 --> 00:11:54,371
Google's infrastructure, and then there'll be a few other hops to, you know,

171
00:11:54,371 --> 00:11:55,952
get to the actual servers themselves.

172
00:12:02,112 --> 00:12:07,013
So there are broadly two approaches to cloud streaming,

173
00:12:07,013 --> 00:12:08,073
or game streaming.

174
00:12:08,073 --> 00:12:11,914
There's sort of pixel streaming and command streaming.

175
00:12:11,914 --> 00:12:15,615
So how does pixel streaming work?

176
00:12:15,615 --> 00:12:19,236
Well, pixel streaming works by sending images using video technology.

177
00:12:19,236 --> 00:12:22,937
The idea is that you read the user input,

178
00:12:22,937 --> 00:12:30,079
you run the game loop on the CPU, and then you render the game.

179
00:12:30,729 --> 00:12:33,976
using a GPU that's been provided in the cloud.

180
00:12:33,976 --> 00:12:36,482
So that right there means that for

181
00:12:36,482 --> 00:12:39,268
every single user you have using your service,

182
00:12:39,268 --> 00:12:41,453
they need to have a GPU assigned to them.

183
00:12:43,260 --> 00:12:49,064
So that GPU renders the output, and then when that image is complete,

184
00:12:49,064 --> 00:12:52,946
when the rendering is finished, then you take that image

185
00:12:52,946 --> 00:12:56,087
and you encode it using a video encoder,

186
00:12:56,087 --> 00:13:01,931
which is itself a process that is quite compute intensive.

187
00:13:01,931 --> 00:13:05,433
And you then stream those video packets to the user.

188
00:13:05,897 --> 00:13:09,658
And then the reverse happens. On the user's device,

189
00:13:09,658 --> 00:13:12,980
those video packets are decoded into an image,

190
00:13:12,980 --> 00:13:14,040
and the process continues.

191
00:13:14,040 --> 00:13:17,481
There's a couple of points. One, this idea that you have to wait

192
00:13:17,481 --> 00:13:20,742
for the image to finish before you can start encoding it.

193
00:13:20,742 --> 00:13:26,084
So there's some sort of latency that gets introduced at that point.

194
00:13:29,002 --> 00:13:33,466
Command streaming is quite similar.

195
00:13:33,466 --> 00:13:36,709
So command streaming doesn't send images,

196
00:13:36,709 --> 00:13:41,013
it sends the data in order to create the image,

197
00:13:41,013 --> 00:13:43,315
in order to draw the image, not the image itself.

198
00:13:43,315 --> 00:13:48,539
So you read the user input, you run the game loop,

199
00:13:48,539 --> 00:13:54,044
and then as your application, your game is drawing the image,

200
00:13:55,030 --> 00:13:58,693
those commands used to generate that image are captured

201
00:13:58,693 --> 00:14:03,797
and they are compressed and streamed to the user's device.

202
00:14:03,797 --> 00:14:09,803
And it's on the user's device that the GPU on the user device

203
00:14:09,803 --> 00:14:12,345
is the thing that interprets that data

204
00:14:12,345 --> 00:14:15,267
and does the actual drawing to generate the image.

205
00:14:15,267 --> 00:14:17,129
So the end result is the same,

206
00:14:17,129 --> 00:14:22,133
but it's a different way of delivering that content.

207
00:14:24,061 --> 00:14:30,264
I'll go into more depth later on in the slides about command streaming

208
00:14:30,264 --> 00:14:35,327
as it sort of pertains to where we're going in the future.

209
00:14:35,327 --> 00:14:38,249
So, a sort of a simple summary, I suppose,

210
00:14:38,249 --> 00:14:44,192
is that on the left-hand side, you have pixel streaming,

211
00:14:44,192 --> 00:14:48,434
where you have in the cloud, you have a CPU and a GPU for each user.

212
00:14:49,087 --> 00:14:58,111
and that GPU renders the game and sends it to your computer or your device.

213
00:14:58,111 --> 00:15:04,614
Your local GPU, which you have nowadays, doesn't really do a lot because it's just

214
00:15:04,614 --> 00:15:06,315
video decoding that's happening.

215
00:15:07,164 --> 00:15:08,445
Command streaming is slightly different,

216
00:15:08,445 --> 00:15:11,168
where you just have a CPU in the cloud.

217
00:15:11,168 --> 00:15:14,931
You're sending those commands to your device,

218
00:15:14,931 --> 00:15:16,412
and it's your local device.

219
00:15:16,412 --> 00:15:19,755
Your local device's GPU that does the rendering.

220
00:15:19,755 --> 00:15:23,219
So you might sort of ask,

221
00:15:23,219 --> 00:15:28,623
why would you want two different ways of streaming?

222
00:15:28,623 --> 00:15:29,744
And I'm going to come back to that.

223
00:15:29,744 --> 00:15:32,087
But I think in order to understand that,

224
00:15:32,087 --> 00:15:34,048
I think it's worth sort of going back in time.

225
00:15:37,610 --> 00:15:48,799
So the announcement of Stadia at GDC 2019 was the first that many had even heard of the concept.

226
00:15:50,884 --> 00:15:55,767
But cloud streaming and cloud gaming didn't appear overnight.

227
00:15:55,767 --> 00:15:57,409
And there's quite a history.

228
00:15:57,409 --> 00:16:03,113
And so I think understanding how we arrived here in cloud streaming

229
00:16:03,113 --> 00:16:08,957
and what those choices we made, both on technology and on the business side,

230
00:16:08,957 --> 00:16:13,340
explain more about how we've got to where we are today.

231
00:16:14,767 --> 00:16:19,109
So I wanted to do a little bit of a timeline and go back and show you know who are the biggest

232
00:16:19,109 --> 00:16:23,971
players and what we know and learn from their technology and business stories.

233
00:16:23,971 --> 00:16:30,834
So going right back and when I was doing these slides I mean someone did say to me you know 1980s

234
00:16:30,834 --> 00:16:33,816
you know most of your engineers weren't born in 1980.

235
00:16:35,299 --> 00:16:43,642
But I think it's kind of an interesting observation that, you know, in the 80s you had x11 from MIT,

236
00:16:43,642 --> 00:16:50,285
you had news from some some microsystems, and they used command streaming in that they ran the

237
00:16:50,285 --> 00:16:56,968
applications in the cloud and then they streamed the commands to draw the output to your what was

238
00:16:56,968 --> 00:16:58,208
called a thin client.

239
00:17:00,955 --> 00:17:03,317
X11 was essentially a command protocol.

240
00:17:03,317 --> 00:17:08,560
News was a bit more groovy, designed by James Gosling,

241
00:17:08,560 --> 00:17:12,723
who obviously went on to write a language called Java.

242
00:17:12,723 --> 00:17:16,145
It was PostScript-based, News was PostScript-based,

243
00:17:16,145 --> 00:17:18,087
in which you sent programs.

244
00:17:18,087 --> 00:17:22,710
So you sent a program as a bunch of commands

245
00:17:22,710 --> 00:17:24,491
to draw what you want to draw.

246
00:17:26,379 --> 00:17:31,990
So it's an interesting kind of piece and I, my post-grad time, rather than doing my post-grad

247
00:17:31,990 --> 00:17:35,558
time, I spend an awful lot of my time messing about with PostScript and news.

248
00:17:39,116 --> 00:17:46,361
So moving on to the 90s, the big kind of thing, I suppose, was video on demand, VOD.

249
00:17:46,361 --> 00:17:51,585
And the idea was you could choose your movies to watch,

250
00:17:51,585 --> 00:17:57,209
and then they were streamed using compressed pixels, VHS resolution.

251
00:17:57,209 --> 00:18:04,174
There were billions of dollars invested into video technology

252
00:18:04,174 --> 00:18:07,836
and the delivery of video on demand.

253
00:18:09,187 --> 00:18:13,836
I remember many times sitting in ATSC days,

254
00:18:13,836 --> 00:18:17,383
meetings, thrashing out how VOD and HTML

255
00:18:17,383 --> 00:18:21,070
was going to solve the world, save the world even.

256
00:18:23,457 --> 00:18:24,898
Onto the noughties, the 2000s,

257
00:18:24,898 --> 00:18:30,419
I guess the big piece here that arrived was H.264.

258
00:18:30,419 --> 00:18:33,760
H.264, you know, it's just an encoder of video,

259
00:18:33,760 --> 00:18:38,781
but it dramatically increased the quality.

260
00:18:38,781 --> 00:18:41,342
And I think, you know, you probably remember before that,

261
00:18:41,342 --> 00:18:46,544
you'd be sending these MPEG-2 smudgy little sort of thumbnails

262
00:18:46,544 --> 00:18:50,065
that nobody could actually make head of tail of.

263
00:18:50,065 --> 00:18:52,025
H.264 was a huge step in fidelity.

264
00:18:53,276 --> 00:19:00,599
It was also in order to get that fidelity it increased significantly the amount of compute you needed to encode

265
00:19:00,599 --> 00:19:07,982
the video content itself, but it's a H.264 is a truly stunning piece of engineering

266
00:19:07,982 --> 00:19:14,084
You know from quarter-pel filtering to residuals. I mean, it's what's not to like

267
00:19:14,084 --> 00:19:15,965
So

268
00:19:18,304 --> 00:19:23,665
I think it's the other sort of piece, I suppose, was at that time was sort of wider adoption of

269
00:19:23,665 --> 00:19:29,607
of, you know, YouTube and Netflix, you know, started streaming in what, 2007?

270
00:19:29,607 --> 00:19:33,908
And computers, I mean, you know, home computers, they started, you know, graphics cards became

271
00:19:33,908 --> 00:19:40,730
commodity devices. It wasn't whether or not you were doing graphics. All PCs, all home computers

272
00:19:40,730 --> 00:19:45,791
had graphics chips.

273
00:19:45,791 --> 00:19:46,011
So.

274
00:19:47,214 --> 00:19:51,217
2009, in fact, OnLive at GDC announced on stage

275
00:19:51,217 --> 00:19:55,700
that this would be the last console you would ever buy.

276
00:19:55,700 --> 00:20:01,024
And the idea of OnLive

277
00:20:01,024 --> 00:20:04,406
was that you would run AAA games from the cloud.

278
00:20:05,074 --> 00:20:13,811
the natural technology choice was to take the existing video stream-based solutions

279
00:20:13,811 --> 00:20:17,538
and use those to stream not movies but games, interactive games.

280
00:20:18,784 --> 00:20:24,227
It streamed compressed pixels to consumers at HD resolution,

281
00:20:24,227 --> 00:20:24,287
so 1280x720.

282
00:20:24,287 --> 00:20:30,630
And it also included, as you can see in this picture,

283
00:20:30,630 --> 00:20:34,011
a microconsole, which was the decoder,

284
00:20:34,011 --> 00:20:36,853
plus it looked after it, Fedja TV,

285
00:20:36,853 --> 00:20:43,836
plus it looked after the controller itself.

286
00:20:43,836 --> 00:20:44,376
And...

287
00:20:45,187 --> 00:20:50,008
You know, that was, I think, just to get a sense of how radical that was.

288
00:20:50,008 --> 00:20:57,570
You have to remember that you went into the WBAR after that launch,

289
00:20:57,570 --> 00:21:02,231
and it was wall-to-wall, you know, self-certified domain experts

290
00:21:02,231 --> 00:21:07,472
telling you why it was impossible what they were doing.

291
00:21:07,472 --> 00:21:09,593
And, you know, I've done the maths, it's impossible,

292
00:21:09,593 --> 00:21:11,453
it doesn't, you know, it'll never work kind of thing.

293
00:21:12,042 --> 00:21:16,904
And yet, there were lots of people, not least the engineers on live,

294
00:21:16,904 --> 00:21:21,046
who had spent the last few years building this stuff

295
00:21:21,046 --> 00:21:27,069
and knew perfectly well it works perfectly well.

296
00:21:27,069 --> 00:21:27,250
So…

297
00:21:28,364 --> 00:21:30,425
What we learned from OnLive was, you know,

298
00:21:30,425 --> 00:21:33,127
what were the sort of motivations and sort of expectations,

299
00:21:33,127 --> 00:21:34,407
I guess, that they had.

300
00:21:34,407 --> 00:21:37,589
And it was very much around, you know, building,

301
00:21:37,589 --> 00:21:40,631
developers building a more sort of direct relationship

302
00:21:40,631 --> 00:21:44,653
with their, you know, with their customers,

303
00:21:44,653 --> 00:21:46,053
with their players.

304
00:21:46,053 --> 00:21:49,475
And, you know, the fact that you didn't need to

305
00:21:49,475 --> 00:21:52,637
have a download or invest in PCs or consoles,

306
00:21:52,637 --> 00:21:53,657
you know, that was the idea.

307
00:21:53,657 --> 00:21:55,919
It was kind of sort of, you know,

308
00:21:55,919 --> 00:21:57,499
make games more accessible in some ways.

309
00:21:58,337 --> 00:22:00,798
So, you know, in summary, it was.

310
00:22:01,485 --> 00:22:03,387
You were going to purchase games, regular games,

311
00:22:03,387 --> 00:22:05,829
and they were going to be hosted with OnLive.

312
00:22:05,829 --> 00:22:09,552
There was no downloads, you could play anywhere.

313
00:22:09,552 --> 00:22:11,234
You could play on any device.

314
00:22:11,234 --> 00:22:15,257
There was also some added

315
00:22:15,257 --> 00:22:17,839
kind of interesting social features.

316
00:22:17,839 --> 00:22:19,741
I think you probably remember

317
00:22:19,741 --> 00:22:22,283
there was the idea of sharing brag clips.

318
00:22:22,283 --> 00:22:26,467
So you could take the last 30 seconds of your game session

319
00:22:26,467 --> 00:22:28,188
and you could share it with your friends.

320
00:22:28,388 --> 00:22:30,311
which is kind of cool.

321
00:22:30,311 --> 00:22:31,292
And there was CloudLift,

322
00:22:31,292 --> 00:22:35,077
which was the sort of feat of engineering

323
00:22:35,077 --> 00:22:40,324
that was offered to allow you to play your Steam library

324
00:22:40,324 --> 00:22:42,507
from your onLive account.

325
00:22:44,885 --> 00:22:48,646
So this led to, you know, there was a whole history of OnLive,

326
00:22:48,646 --> 00:22:51,688
I think, I'm sure many of you know what happened,

327
00:22:51,688 --> 00:22:57,570
but it led to a wave of sort of early cloud gaming pioneers

328
00:22:57,570 --> 00:23:02,192
in some ways that were trying to emulate

329
00:23:02,192 --> 00:23:04,493
that whole OnLive piece.

330
00:23:04,493 --> 00:23:11,316
So, you know, there's a selection I've got here of,

331
00:23:11,316 --> 00:23:13,837
by no means exhaustive,

332
00:23:14,686 --> 00:23:21,351
I think the interesting thing is that when you look at the history of cloud gaming,

333
00:23:21,351 --> 00:23:25,474
many you'll notice have either closed their doors,

334
00:23:25,474 --> 00:23:27,936
pivoted, or been absorbed into bigger companies,

335
00:23:27,936 --> 00:23:35,521
and you hear very little more about them.

336
00:23:35,521 --> 00:23:36,302
So what happened?

337
00:23:36,302 --> 00:23:44,088
I think to fully understand what happened during what

338
00:23:44,895 --> 00:23:48,258
I will call the rise and stall of cloud gaming,

339
00:23:48,258 --> 00:23:52,800
you need to look quite carefully at what the pros and cons

340
00:23:52,800 --> 00:23:58,384
of cloud streaming today are.

341
00:23:58,384 --> 00:24:03,367
But before I do that, there's one entrance that I haven't mentioned

342
00:24:03,367 --> 00:24:07,690
that should have been, should have differed from all the others,

343
00:24:07,690 --> 00:24:08,651
because it wasn't a startup.

344
00:24:14,531 --> 00:24:17,853
Stadia. So Stadia announced in GDC 2019.

345
00:24:17,853 --> 00:24:22,595
That's a decade after OnLive launched at GDC,

346
00:24:22,595 --> 00:24:25,797
and it promised super powerful data centers,

347
00:24:25,797 --> 00:24:30,159
delivering blockbuster games, no need for downloads,

348
00:24:30,159 --> 00:24:32,541
any device would be supported.

349
00:24:32,541 --> 00:24:35,362
And it was particularly, again, aimed at people

350
00:24:35,362 --> 00:24:38,864
who didn't have access to high-end PCs and consoles.

351
00:24:38,864 --> 00:24:42,006
Does that sound familiar?

352
00:24:43,169 --> 00:24:49,775
In many ways, Stadia was a carbon copy of the online playbook.

353
00:24:49,775 --> 00:24:54,218
But I was personally super optimistic that when it launched,

354
00:24:54,218 --> 00:24:57,762
that Google did bring something quite different and new to the table.

355
00:24:57,762 --> 00:25:01,285
I mean, first off was world-beating infrastructure

356
00:25:01,285 --> 00:25:02,946
and deployment expertise.

357
00:25:02,946 --> 00:25:08,711
There was the promise of tight integration

358
00:25:08,711 --> 00:25:10,973
with existing services like YouTube.

359
00:25:11,987 --> 00:25:14,849
Very ambitious aspirations they talked about,

360
00:25:14,849 --> 00:25:16,750
about delivering 4K and 8K resolutions.

361
00:25:16,750 --> 00:25:19,672
And lastly, and probably most importantly,

362
00:25:19,672 --> 00:25:30,358
they brought an infinite money tree to pay for it all.

363
00:25:30,358 --> 00:25:33,500
So, given all that, why is it not working?

364
00:25:33,500 --> 00:25:34,001
Well, I think...

365
00:25:35,245 --> 00:25:42,169
I think it's an interesting question as to why have most cloud gaming stream offerings

366
00:25:42,169 --> 00:25:47,131
turned to pixel streaming more than anything else.

367
00:25:47,131 --> 00:25:52,694
Well, the pros of pixel streaming, it's a known technology from the introduction of VOD,

368
00:25:52,694 --> 00:26:02,239
Video On Demand. It's pretty easy to onboard content, reduced upfront engineering. Consumers

369
00:26:02,559 --> 00:26:07,623
have video players or things like video players already.

370
00:26:07,623 --> 00:26:10,265
It plays on a potato and that is an interesting piece.

371
00:26:10,265 --> 00:26:15,129
I mean, so the way video technology works, it's designed from the ground up

372
00:26:15,129 --> 00:26:18,551
to make it so that while the encoding

373
00:26:18,551 --> 00:26:22,374
of content may be fiercely expensive from a compute point

374
00:26:22,374 --> 00:26:25,977
of view, the decode of that content is very, very

375
00:26:25,977 --> 00:26:29,960
low compute requirements.

376
00:26:30,942 --> 00:26:36,227
So it was very much this idea that you could run,

377
00:26:36,227 --> 00:26:39,910
you know, fantastic content on super, super low-end,

378
00:26:39,910 --> 00:26:42,092
you know, 10-year-old laptops.

379
00:26:42,092 --> 00:26:45,995
And plus, you know, existing network transport,

380
00:26:45,995 --> 00:26:48,677
firewall videos are known quantity, I suppose.

381
00:26:53,592 --> 00:26:55,532
So let's just look at the, you know,

382
00:26:55,532 --> 00:26:57,272
I mean, because given all that, you kind of wonder,

383
00:26:57,272 --> 00:26:58,553
well, that sounds great.

384
00:26:58,553 --> 00:27:00,213
The cons, though, are kind of interesting

385
00:27:00,213 --> 00:27:03,273
and perhaps are more relevant to, you know,

386
00:27:03,273 --> 00:27:05,994
the history of cloud gaming.

387
00:27:05,994 --> 00:27:08,894
You can't use CDNs and caching

388
00:27:08,894 --> 00:27:10,875
when you're doing pixel streaming.

389
00:27:10,875 --> 00:27:13,635
And the reason is, is because it's interactive,

390
00:27:13,635 --> 00:27:16,196
you don't know what the next frame is going to be.

391
00:27:16,196 --> 00:27:21,057
You can't sort of cache 10 seconds in the future

392
00:27:21,057 --> 00:27:23,237
because you don't know what the player is going to do.

393
00:27:23,861 --> 00:27:30,850
So not being able to use CDNs and caching, which are in some ways the very heart of what the

394
00:27:30,850 --> 00:27:40,141
internet is built on, is a bit of a blow in some ways. It requires also ongoing GPU upgrades.

395
00:27:40,141 --> 00:27:40,201
So

396
00:27:41,807 --> 00:27:46,271
If your model is you can turn your game up to ultra

397
00:27:46,271 --> 00:27:49,113
and you can run it, you know, at insane settings

398
00:27:49,113 --> 00:27:55,259
and I'm going to stream to a potato, that's great.

399
00:27:55,259 --> 00:27:59,442
But ultimately, it does mean that every few years,

400
00:27:59,442 --> 00:28:03,186
everyone, including Google, are going to have to

401
00:28:03,186 --> 00:28:06,709
replace all those GPUs and get new GPUs.

402
00:28:07,621 --> 00:28:14,048
So just to stay current, so you get a new game, the next AAA game that's using all the latest

403
00:28:14,048 --> 00:28:19,915
cutting-edge GPU features, and if your model is you can stream that at ultra, it does mean

404
00:28:19,915 --> 00:28:24,520
that you're going to have to replace all those many, many thousands of GPUs.

405
00:28:27,083 --> 00:28:29,325
The other sort of piece, I suppose, is, you know,

406
00:28:29,325 --> 00:28:31,966
as we move towards increasing resolution,

407
00:28:31,966 --> 00:28:35,368
the egress, the amount of bandwidth you need for an 8K display

408
00:28:35,368 --> 00:28:36,989
is significantly more than a 4K display.

409
00:28:36,989 --> 00:28:40,630
You know, that's a piece that it's not a now problem,

410
00:28:40,630 --> 00:28:43,272
but I think, you know, you can see coming down the road

411
00:28:43,272 --> 00:28:48,815
that that is going to be quite a challenge for pixel streaming.

412
00:28:48,815 --> 00:28:50,436
It's worth talking about time of day.

413
00:28:50,436 --> 00:28:53,157
And time of day is an interesting one.

414
00:28:53,157 --> 00:28:53,557
So.

415
00:28:54,593 --> 00:29:00,196
The difficulty with interactive content is, as I said earlier,

416
00:29:00,196 --> 00:29:03,579
you need to be close to your users.

417
00:29:03,579 --> 00:29:07,061
You need to be physically close to them.

418
00:29:07,061 --> 00:29:10,843
You can't, for example, from midnight to 5 a.m.

419
00:29:10,843 --> 00:29:13,745
in the morning, use your GPUs, your expensive GPUs

420
00:29:13,745 --> 00:29:16,367
you bought in San Jose to serve the East Coast

421
00:29:16,367 --> 00:29:17,588
or your European customers.

422
00:29:17,588 --> 00:29:20,650
You have to have GPUs in all locations

423
00:29:20,650 --> 00:29:23,531
in order to serve your customers.

424
00:29:25,008 --> 00:29:26,910
And that's problematic.

425
00:29:26,910 --> 00:29:29,993
You know, pixel streaming in some ways

426
00:29:29,993 --> 00:29:32,536
is a little bit like a gym subscription model,

427
00:29:32,536 --> 00:29:34,498
which is you kind of want lots and lots of subs.

428
00:29:34,498 --> 00:29:37,401
You just really don't want them all turning up

429
00:29:37,401 --> 00:29:39,544
on January the 1st for the jogging machines,

430
00:29:39,544 --> 00:29:44,229
you know, because you're going to have a capacity problem

431
00:29:44,229 --> 00:29:45,130
if a lot of people turn up

432
00:29:45,130 --> 00:29:46,731
and all want to play games at the same time.

433
00:29:48,680 --> 00:29:51,001
I think it's kind of telling in some ways

434
00:29:51,001 --> 00:29:55,263
at the real-time conference last month,

435
00:29:55,263 --> 00:29:58,565
a panel with a lot of luminaries,

436
00:29:58,565 --> 00:30:04,907
significant players in the cloud gaming and cloud streaming world,

437
00:30:04,907 --> 00:30:08,049
said categorically that Pixel Streaming is not

438
00:30:08,049 --> 00:30:11,270
and probably will never be a B2C offering,

439
00:30:11,270 --> 00:30:14,111
just because you can't predict user numbers,

440
00:30:14,111 --> 00:30:18,213
you can't scale on demand.

441
00:30:18,213 --> 00:30:18,393
So,

442
00:30:19,848 --> 00:30:22,890
The fact that each user needs a GPU in the cloud

443
00:30:22,890 --> 00:30:25,572
makes it so it's difficult to scale.

444
00:30:25,572 --> 00:30:32,757
Okay, the challenges of pixel streaming

445
00:30:32,757 --> 00:30:35,879
comes down to power and scale.

446
00:30:35,879 --> 00:30:39,601
So for power, and I mean electricity,

447
00:30:39,601 --> 00:30:41,863
for cooling and running these things,

448
00:30:41,863 --> 00:30:44,244
the average cost of running a GPU stream

449
00:30:44,244 --> 00:30:48,747
is going to be of the order of 50 cents per hour per user.

450
00:30:51,404 --> 00:30:55,967
Some people are more efficient, some are less, but it's of that sort of order.

451
00:30:55,967 --> 00:31:00,811
And if you just pause for a moment and think as a business,

452
00:31:00,811 --> 00:31:05,734
if you are going to cost you 50 cents per hour per user to deliver content,

453
00:31:05,734 --> 00:31:12,099
that's quite a lot of monetization that you're going to need to do to make that a viable business.

454
00:31:14,634 --> 00:31:19,657
So, notwithstanding Google's quantum entanglement work

455
00:31:19,657 --> 00:31:23,079
they talked about at the Stadia 2019 launch,

456
00:31:23,079 --> 00:31:25,300
it's going to be of the order of that price.

457
00:31:25,300 --> 00:31:28,622
The other piece of this is scale.

458
00:31:28,622 --> 00:31:34,705
So, if you look at the launch window for a AAA title,

459
00:31:34,705 --> 00:31:38,287
today it's in the multiples of millions.

460
00:31:39,129 --> 00:31:45,076
So you go and look at Steam stats and see how many millions of people are turning up to playing

461
00:31:45,076 --> 00:31:52,825
some of these new games. You contrast that with the CCU capacity, how many people can

462
00:31:52,825 --> 00:32:00,513
simultaneously play on some of the pixel streaming vendors, and it's in multiples of thousands.

463
00:32:01,490 --> 00:32:07,474
They're just, it's a huge expectation mismatch

464
00:32:07,474 --> 00:32:14,819
between the consumer, millions of consumers playing games

465
00:32:14,819 --> 00:32:19,002
and the quite limited scale that GPUs are able to scale to.

466
00:32:19,002 --> 00:32:28,168
So, you say, wait, what about Netflix?

467
00:32:28,168 --> 00:32:30,430
They serve millions of customers.

468
00:32:31,581 --> 00:32:35,151
Well, Netflix is serving movie files essentially,

469
00:32:35,151 --> 00:32:39,223
and that is not the same as streaming interactive content.

470
00:32:39,989 --> 00:32:41,250
It's just not the same thing.

471
00:32:41,250 --> 00:32:45,673
You know, for starters, if you've got a movie,

472
00:32:45,673 --> 00:32:49,415
you can take weeks permuting all combinations

473
00:32:49,415 --> 00:32:52,537
of your encoder settings so that you

474
00:32:52,537 --> 00:32:55,800
can get the most optimal compression

475
00:32:55,800 --> 00:32:57,741
for this particular movie.

476
00:32:57,741 --> 00:33:00,042
Because you have the whole movie,

477
00:33:00,042 --> 00:33:01,844
and you can run your encoder, let's say,

478
00:33:01,844 --> 00:33:03,325
four weeks to get the thing.

479
00:33:03,325 --> 00:33:04,105
And it's all done offline.

480
00:33:04,105 --> 00:33:06,407
Once you've done it, you save it in a file, you're done.

481
00:33:07,848 --> 00:33:14,111
In cloud gaming, you have of the order of eight milliseconds in which to make those choices.

482
00:33:14,111 --> 00:33:20,775
It's a very, very different kettle of fish. The other thing with Netflix, of course, is that you

483
00:33:20,775 --> 00:33:26,618
can use CDNs and caches. And so you can cache portions, segments of your movie around the

484
00:33:26,618 --> 00:33:32,742
country, around the world, so that they're close to users. And that is something that, again,

485
00:33:32,742 --> 00:33:35,843
is not available to interactive cloud gaming.

486
00:33:36,441 --> 00:33:40,266
because of the nature of the interactivity.

487
00:33:40,266 --> 00:33:46,494
You can't predict what the next image is going to be.

488
00:33:46,494 --> 00:33:46,734
And lastly,

489
00:33:48,344 --> 00:33:51,765
Movie encoders have a notion of B-frames.

490
00:33:51,765 --> 00:33:54,326
B-frames essentially reference,

491
00:33:54,326 --> 00:33:58,748
think of it as a cache warming for MacroBlox.

492
00:33:58,748 --> 00:34:03,390
It's a frame in the video stream that looks forward

493
00:34:03,390 --> 00:34:07,011
to video information that's not yet shown,

494
00:34:07,011 --> 00:34:08,491
but will be shown in a short period of time.

495
00:34:08,491 --> 00:34:10,672
For movies, you have that information

496
00:34:10,672 --> 00:34:12,033
because you have the whole movie.

497
00:34:12,509 --> 00:34:18,952
for a game you clearly don't have the very next frame even. So B-frames are out and that has a

498
00:34:18,952 --> 00:34:24,875
pretty significant effect on both quality and bandwidth. Netflix, you know, can, as I say,

499
00:34:24,875 --> 00:34:30,458
they can take weeks and weeks compressing these things to save egress and it's a very different

500
00:34:30,458 --> 00:34:33,039
thing. I think the other sort of piece is with Netflix is, uh,

501
00:34:35,187 --> 00:34:38,169
If your movie starts 300 milliseconds late,

502
00:34:38,169 --> 00:34:40,249
it's not really a problem.

503
00:34:40,249 --> 00:34:43,571
You know, it's just not a significant problem

504
00:34:43,571 --> 00:34:46,572
where you've got something that starts a few hundred milliseconds late,

505
00:34:46,572 --> 00:34:48,393
you probably wouldn't even notice.

506
00:34:48,393 --> 00:34:51,074
And the last thing I think is that, you know, dash players,

507
00:34:51,074 --> 00:34:53,775
you know, the movie players, if you like,

508
00:34:53,775 --> 00:34:56,397
they themselves will cache seconds of content

509
00:34:56,397 --> 00:35:00,178
to completely hide any network jitter that you may have.

510
00:35:00,178 --> 00:35:03,660
So Netflix, very different proposition.

511
00:35:03,660 --> 00:35:04,420
If, you know...

512
00:35:05,140 --> 00:35:06,901
Colleagues, boss says, what about Netflix?

513
00:35:06,901 --> 00:35:08,561
Just say no. It's very, very different.

514
00:35:08,561 --> 00:35:17,124
So, what do we need to do to succeed?

515
00:35:17,124 --> 00:35:20,785
Well, I want to focus now on the future in some ways,

516
00:35:20,785 --> 00:35:24,346
and it's a very positive future.

517
00:35:24,346 --> 00:35:27,667
I want to remind, just sort of a reminder, I suppose,

518
00:35:27,667 --> 00:35:31,288
is what we're talking about here is commodity cloud gaming.

519
00:35:33,297 --> 00:35:39,761
For the audience of doubt, there are plenty of enterprise uses of pixel streaming,

520
00:35:39,761 --> 00:35:43,683
and they're quite happy to pay $5 per hour per user for a timed experience.

521
00:35:43,683 --> 00:35:48,665
But that's not what we're talking about here. Here we're talking about something which is

522
00:35:48,665 --> 00:35:52,307
an on-demand commodity for millions of consumers.

523
00:35:52,307 --> 00:35:56,470
So there are two sort of key issues that need to be addressed.

524
00:35:56,470 --> 00:35:59,952
One is delivery, and two is content itself.

525
00:36:03,278 --> 00:36:09,645
On the delivery side, the three pillars of this are cost, reach, scale.

526
00:36:09,645 --> 00:36:16,051
So on a cost basis, if you want to have a commodity consumer facing service,

527
00:36:16,051 --> 00:36:18,494
it has to be pennies per hour per user.

528
00:36:19,154 --> 00:36:26,419
You cannot build a viable business if you're paying 50 cents per user per hour.

529
00:36:26,419 --> 00:36:29,682
It needs to be pennies. It needs to be a significantly small amount of money.

530
00:36:29,682 --> 00:36:34,586
Secondly, there's reach. There's the whole idea of being, as I talked about earlier,

531
00:36:34,586 --> 00:36:40,530
you need to be close to your players, your users, your consumers in order to make this happen.

532
00:36:40,530 --> 00:36:45,013
And that means that being able to spin up capacity close by.

533
00:36:46,988 --> 00:36:48,849
when as necessary.

534
00:36:48,849 --> 00:36:54,030
And I think, you know, that sort of scale piece of,

535
00:36:54,030 --> 00:36:57,011
you know, even today you look at, you know, a stadium,

536
00:36:57,011 --> 00:37:01,412
it's full of spectators, for example, and then it's empty.

537
00:37:01,412 --> 00:37:04,033
And that's sort of the landscape

538
00:37:04,033 --> 00:37:07,174
I think we're gonna be looking at for cloud gaming.

539
00:37:07,174 --> 00:37:11,775
That's kind of spiky and it has to grow.

540
00:37:11,775 --> 00:37:12,996
And I think we've seen that already.

541
00:37:12,996 --> 00:37:16,176
I think with some of the digital events that we've seen,

542
00:37:17,302 --> 00:37:19,023
by their nature, they are transient.

543
00:37:19,023 --> 00:37:25,305
So, the other sort of aspect of this is content.

544
00:37:25,305 --> 00:37:32,608
Taking existing content and simply sort of putting it into the cloud,

545
00:37:32,608 --> 00:37:36,950
take a game, you put it in the cloud, that's just not enough.

546
00:37:36,950 --> 00:37:42,092
You know, reducing friction through instant play.

547
00:37:42,092 --> 00:37:42,592
You know, and...

548
00:37:43,765 --> 00:37:46,187
We all get frustrated when we sit down and, you know,

549
00:37:46,187 --> 00:37:48,528
want to play a game and it says,

550
00:37:48,528 --> 00:37:51,110
I'm going to do patches for the next 40 minutes.

551
00:37:51,110 --> 00:37:51,790
Yeah, it's irritating.

552
00:37:51,790 --> 00:37:54,152
But ultimately, you know,

553
00:37:54,152 --> 00:37:56,073
the friction that comes from Instant Play,

554
00:37:56,073 --> 00:37:57,654
you know, it's a great feature.

555
00:37:57,654 --> 00:37:58,634
It's just not enough.

556
00:37:58,634 --> 00:37:59,375
It's not compelling enough.

557
00:37:59,375 --> 00:38:02,116
And the last thing I suppose is, you know,

558
00:38:02,116 --> 00:38:04,538
offering the same old business models that we used

559
00:38:04,538 --> 00:38:06,659
for physical goods as much as anything.

560
00:38:06,659 --> 00:38:09,301
It hasn't really changed a great deal.

561
00:38:09,301 --> 00:38:11,722
And using the same old business model is just not enough.

562
00:38:12,659 --> 00:38:16,885
So we need to play to the strengths of the medium.

563
00:38:16,885 --> 00:38:22,453
So what are those strengths?

564
00:38:22,453 --> 00:38:22,974
Well,

565
00:38:24,532 --> 00:38:30,255
I think we have many kind of existence proofs that synchronous social has been very well

566
00:38:30,255 --> 00:38:33,877
served by cloud infrastructure.

567
00:38:33,877 --> 00:38:42,281
So be it Facebook, Twitch, Discord, they're all cloud-based services and they work very,

568
00:38:42,281 --> 00:38:42,641
very well.

569
00:38:44,121 --> 00:38:50,025
The other piece I think of the strengths of this medium of cloud

570
00:38:50,025 --> 00:38:52,067
is composable compute.

571
00:38:52,067 --> 00:38:57,031
And the idea of being able to scale up and down dynamically

572
00:38:57,031 --> 00:38:59,652
to support different demands

573
00:38:59,652 --> 00:39:02,775
is something that's at the very core of elastic compute.

574
00:39:02,775 --> 00:39:06,097
And it's something we have to leverage,

575
00:39:06,097 --> 00:39:09,039
not from a necessarily, partly from a capacity point of view,

576
00:39:09,039 --> 00:39:12,762
but also from the kind of experiences that we want to build.

577
00:39:14,857 --> 00:39:17,018
And I think the other sort of, I've said,

578
00:39:17,018 --> 00:39:18,359
solved network, netcode.

579
00:39:18,359 --> 00:39:22,683
You know, one thing that's interesting is

580
00:39:22,683 --> 00:39:26,346
once your game client is running in a data center,

581
00:39:26,346 --> 00:39:26,666
the...

582
00:39:29,346 --> 00:39:32,710
the interconnect between and the communication channel

583
00:39:32,710 --> 00:39:35,775
between your game clients and the other players, for example,

584
00:39:35,775 --> 00:39:39,439
can be super low latency and super high performance.

585
00:39:39,439 --> 00:39:42,543
I mean, the intra-data center connectivity,

586
00:39:42,543 --> 00:39:44,847
it starts at the bottom as very, very, very high,

587
00:39:44,847 --> 00:39:45,848
and then goes up from there.

588
00:39:46,509 --> 00:39:51,331
So, leveraging the fact that you're running these experiences,

589
00:39:51,331 --> 00:39:53,632
these games inside the data center,

590
00:39:53,632 --> 00:39:58,295
so that you can make use of all those cloud services,

591
00:39:58,295 --> 00:40:02,277
but at super low latency is something I think is really sort of does play

592
00:40:02,277 --> 00:40:05,719
to the strength of the medium.

593
00:40:05,719 --> 00:40:11,902
So, you know, it's about building cloud native experiences,

594
00:40:11,902 --> 00:40:15,304
and it's already happening today to a degree.

595
00:40:17,375 --> 00:40:21,417
So if you look back on absolutely 2020 hindsight,

596
00:40:21,417 --> 00:40:26,738
what have we learned from cloud gaming to date?

597
00:40:26,738 --> 00:40:31,120
I think certainly the early strapline of cloud gaming,

598
00:40:31,120 --> 00:40:33,281
which was throw away your console

599
00:40:33,281 --> 00:40:37,562
and trying to reproduce that console experience in the cloud,

600
00:40:37,562 --> 00:40:39,022
now looks...

601
00:40:40,835 --> 00:40:42,595
a little bit short-sighted, I think,

602
00:40:42,595 --> 00:40:47,357
and it's essentially trying to cannibalize a different SKU

603
00:40:47,357 --> 00:40:49,638
by putting it in the cloud,

604
00:40:49,638 --> 00:40:53,899
instead of trying to create experiences

605
00:40:53,899 --> 00:40:57,100
which play to the strengths of cloud,

606
00:40:57,100 --> 00:41:00,721
rather than just try and do what a console does.

607
00:41:00,721 --> 00:41:06,083
I think, as far as the do's are concerned, rather than the don'ts,

608
00:41:06,083 --> 00:41:09,104
thinking of beyond the traditional

609
00:41:11,037 --> 00:41:15,919
game mechanic, win mechanic that we've had with us for, you know, 30 plus years, and to sort of

610
00:41:15,919 --> 00:41:22,263
create unique experiences and thinking beyond those traditional audiences. So it's about

611
00:41:22,263 --> 00:41:27,586
not necessarily building experiences for gamers, but building it for non-gamers.

612
00:41:27,586 --> 00:41:35,050
And so, you know, we have these things and we see examples of it, you know, today of having game

613
00:41:35,050 --> 00:41:35,671
worlds.

614
00:41:36,593 --> 00:41:39,874
which you're exploring in-game content for entertainment.

615
00:41:39,874 --> 00:41:48,536
And it's creating a cohort of people that are spectators

616
00:41:48,536 --> 00:41:51,077
and they are sort of orthogonal to the player mechanic.

617
00:41:51,077 --> 00:41:53,538
They're completely sort of orthogonal

618
00:41:53,538 --> 00:41:54,258
to the player mechanic.

619
00:41:54,258 --> 00:41:55,638
You can have great player mechanics

620
00:41:55,638 --> 00:41:56,939
and you can have spectator mechanics

621
00:41:56,939 --> 00:41:59,860
and they're not necessarily the same thing at all.

622
00:41:59,860 --> 00:42:01,940
The difference is the spectator mechanic

623
00:42:01,940 --> 00:42:04,401
is hundreds of times larger than your player mechanic.

624
00:42:06,118 --> 00:42:10,199
I think the other piece is leveraging, as I do,

625
00:42:10,199 --> 00:42:14,020
is leveraging Cloud Compute and AI.

626
00:42:14,020 --> 00:42:16,100
So again, as I said before,

627
00:42:16,100 --> 00:42:19,281
that when you're running your game inside the data center,

628
00:42:19,281 --> 00:42:22,922
that means you have available to you a whole bunch of services

629
00:42:22,922 --> 00:42:26,583
and bringing to bear compute that is super low latency

630
00:42:26,583 --> 00:42:28,243
and can be it from…

631
00:42:28,564 --> 00:42:34,289
you know, deeper behaviors to, you know, more satisfying kind of cinematic experiences,

632
00:42:34,289 --> 00:42:39,054
to, you know, even faster content creation of using AI. And there's a bunch of stuff out there

633
00:42:39,054 --> 00:42:45,560
already that does that. But what changes, I think, is when you're running the game itself in the data

634
00:42:45,560 --> 00:42:50,845
center. So you're not doing that back all the way back from the homes.

635
00:42:50,845 --> 00:42:51,445
So...

636
00:42:55,106 --> 00:42:58,949
The two things I think we need for a future of cloud gaming is,

637
00:42:58,949 --> 00:43:01,370
one, you need it to be business viable,

638
00:43:01,370 --> 00:43:04,353
and secondly, it needs to scale with demand.

639
00:43:04,353 --> 00:43:08,736
So before we look at where we might go with cloud gaming,

640
00:43:08,736 --> 00:43:14,220
I think it's worth to revisit how we might deliver to consumers.

641
00:43:14,220 --> 00:43:20,844
So just…

642
00:43:21,847 --> 00:43:23,968
This is a techie slide, it's just a slide.

643
00:43:23,968 --> 00:43:29,032
We'll get back to more broad stuff afterwards.

644
00:43:29,032 --> 00:43:31,214
But I think it's interesting to look at command streaming,

645
00:43:31,214 --> 00:43:33,435
because I think when I was talking earlier,

646
00:43:33,435 --> 00:43:37,378
I was talking about how command streaming works.

647
00:43:37,378 --> 00:43:42,142
And I just want to take a little small step deeper into the tech,

648
00:43:42,142 --> 00:43:47,426
because I think it helps unlock a viable business

649
00:43:47,426 --> 00:43:50,788
and scalable elements that we need.

650
00:43:52,510 --> 00:43:57,633
So the way command streaming works is you choose your stream's visual fidelity

651
00:43:57,633 --> 00:43:59,914
based on each user's device GPU.

652
00:43:59,914 --> 00:44:06,558
In other words, the visual fidelity you get is based on what GPU you have,

653
00:44:06,558 --> 00:44:09,659
and so that different people with different GPUs

654
00:44:09,659 --> 00:44:12,021
get different, can have different experiences.

655
00:44:12,021 --> 00:44:14,542
It can utilize caches and CDNs,

656
00:44:14,542 --> 00:44:18,184
which is obviously good for reducing egress.

657
00:44:19,802 --> 00:44:22,823
command streaming workloads are containerized,

658
00:44:22,823 --> 00:44:24,744
which means you can dynamically scale.

659
00:44:24,744 --> 00:44:28,487
They're also kind of obviously cloud diagnostic

660
00:44:28,487 --> 00:44:31,128
because you're not chasing the availability of GPUs,

661
00:44:31,128 --> 00:44:34,170
you're chasing the availability of CPUs,

662
00:44:34,170 --> 00:44:36,851
and there are hundreds of millions of those.

663
00:44:36,851 --> 00:44:38,392
So you can get close to the user.

664
00:44:38,392 --> 00:44:42,375
And again, back to the earlier is,

665
00:44:44,587 --> 00:44:48,530
excuse me, is being close to the user,

666
00:44:48,530 --> 00:44:50,751
reducing that distance is an important part

667
00:44:50,751 --> 00:44:54,374
of giving a great environment, a great experience.

668
00:44:54,374 --> 00:44:56,896
So less hops, good.

669
00:44:56,896 --> 00:45:00,519
You know, the transport uses a sort of BBR style,

670
00:45:00,519 --> 00:45:04,862
you know, it's a round-trip time congestion control.

671
00:45:05,798 --> 00:45:09,600
But interestingly, it also accommodates having burst mode

672
00:45:09,600 --> 00:45:12,542
chunking a bit like dash players

673
00:45:12,542 --> 00:45:17,304
because of the nature of command streaming not being pixel-based.

674
00:45:17,304 --> 00:45:21,466
I think most significantly of all is the cost to serve.

675
00:45:21,466 --> 00:45:25,148
The CTS for command streaming is in some sense,

676
00:45:25,148 --> 00:45:28,149
you can see it as being shared between the data center

677
00:45:28,149 --> 00:45:29,130
and the user device.

678
00:45:33,906 --> 00:45:37,589
So, what does it all mean?

679
00:45:37,589 --> 00:45:40,011
Well, command streaming, I think, can enable creations

680
00:45:40,011 --> 00:45:42,313
at massive concurrent engagements,

681
00:45:42,313 --> 00:45:44,375
and they can be built from the ground up.

682
00:45:44,375 --> 00:45:48,218
I mean, so we know that a little bit about the technology behind it.

683
00:45:48,218 --> 00:45:52,302
There's plenty of existence proofs of command streaming delivering content,

684
00:45:52,302 --> 00:45:55,765
and there are absolutely examples of existing content running poorly.

685
00:45:56,687 --> 00:46:06,251
So we need to be designing these experiences from the ground up to, you know, play to the strengths of cloud.

686
00:46:06,251 --> 00:46:12,554
Look at those new spectator mechanics that are beyond traditional gamers.

687
00:46:12,554 --> 00:46:16,236
How do we bring in different people to enjoy that experience?

688
00:46:16,236 --> 00:46:21,778
And playing to the strengths of command streaming, which is the way in which I think we can deliver at scale.

689
00:46:24,177 --> 00:46:27,000
So that I think leads to a lot of benefits.

690
00:46:27,000 --> 00:46:29,904
And as much as anything, it's low friction access

691
00:46:29,904 --> 00:46:34,510
to synchronous social experiences.

692
00:46:34,510 --> 00:46:36,873
It's bringing non-gamers, as I say.

693
00:46:36,873 --> 00:46:40,257
The business models to monetize non-players

694
00:46:40,257 --> 00:46:43,461
is something that I think is a really exciting and...

695
00:46:44,453 --> 00:46:49,461
something very different from the slightly sledgehammer thing we've done up to now.

696
00:46:49,461 --> 00:46:56,852
And it's moving beyond games and the sort of win mechanic we tended to do for our games.

697
00:47:00,499 --> 00:47:05,662
So the challenges are that, you know, moving from experience to experience

698
00:47:05,662 --> 00:47:09,043
is going to require a whole bunch of interop between content vendors.

699
00:47:09,043 --> 00:47:13,845
You know, and that means things like, you know, shared industry standards.

700
00:47:13,845 --> 00:47:15,006
What do we do about walled gardens?

701
00:47:15,006 --> 00:47:17,747
You know, the reality is that a lot of walled garden experiences

702
00:47:17,747 --> 00:47:20,669
that are great out there, you know, how do they get incorporated

703
00:47:20,669 --> 00:47:23,930
into something where I can move seamlessly from one experience to another?

704
00:47:25,480 --> 00:47:29,545
And also, I think it's about supporting developers,

705
00:47:29,545 --> 00:47:33,810
about how they create for cloud and command streaming.

706
00:47:33,810 --> 00:47:37,735
There's also, I think the challenge is that there's a reluctance

707
00:47:37,735 --> 00:47:41,219
to move away from expensive pixel streaming infrastructures

708
00:47:41,219 --> 00:47:42,680
because they're familiar.

709
00:47:46,679 --> 00:47:52,624
So if we look today, there are quite a few games out there that have spectator modes.

710
00:47:52,624 --> 00:47:59,551
The next step will be having thousands of spectators viewing the action and using cloud

711
00:47:59,551 --> 00:48:00,311
streaming.

712
00:48:00,311 --> 00:48:06,938
So again, you've got a player mechanic running and an orthogonal spectator mechanic that's

713
00:48:06,938 --> 00:48:08,339
running completely orthogonal to that.

714
00:48:09,220 --> 00:48:11,742
But in their thousands, what does that mean?

715
00:48:11,742 --> 00:48:14,003
Spectators become a cohort, as I say,

716
00:48:14,003 --> 00:48:17,324
and they have their own play mechanic.

717
00:48:17,324 --> 00:48:20,266
It's about meeting in virtual spaces,

718
00:48:20,266 --> 00:48:23,628
it's about moving seamlessly from one experience to another.

719
00:48:23,628 --> 00:48:25,168
And I think, you know, it's...

720
00:48:25,920 --> 00:48:30,022
If you look at the trend right now, it isn't strictly come on streaming.

721
00:48:30,022 --> 00:48:33,423
It's more sort of metaverse style of trying.

722
00:48:33,423 --> 00:48:40,486
What do we need to do to make it so that we can move between these experiences

723
00:48:40,486 --> 00:48:43,347
without, you know, and do it, do it at a huge scale?

724
00:48:48,258 --> 00:48:52,381
So I think there's a whole bunch of interesting companies that are doing great stuff.

725
00:48:52,381 --> 00:48:55,763
You know, there's, you know, Unreal, Hadean, Improbable.

726
00:48:55,763 --> 00:49:01,646
I mean, it's interesting that game engines in some ways are misnomer and increasingly

727
00:49:01,646 --> 00:49:05,649
it's a collection of tools for powering, you know, interactive experiences.

728
00:49:07,223 --> 00:49:12,671
High Fidelity I think is an interesting one, I'm sort of calling out in some ways because

729
00:49:12,671 --> 00:49:20,403
they're looking at the audio and how do you deliver spatialized binaural audio to massive

730
00:49:20,403 --> 00:49:22,706
3D audiences and experiences.

731
00:49:23,447 --> 00:49:28,792
The TIFCA guys, you know, again, the whole client to cloud revolution work they're doing,

732
00:49:28,792 --> 00:49:35,037
and I urge you to go and look at some of the stuff they're doing about how do you in practice,

733
00:49:35,037 --> 00:49:41,002
you know, solve some of these interop problems across a wide range of industries and platforms.

734
00:49:41,002 --> 00:49:47,087
And I'm excited by, you know, mainframe industries, you know, the things like

735
00:49:47,087 --> 00:49:51,350
scavenger and from midwinter and entertainment.

736
00:49:52,032 --> 00:49:57,261
Avakin Life, Manticore, Roblox, I mean all these guys are doing incredible stuff with

737
00:49:57,261 --> 00:50:05,114
regard to bringing in a whole bunch of new participants that weren't there before.

738
00:50:07,247 --> 00:50:10,268
I think there is a piece here, though, about, you know,

739
00:50:10,268 --> 00:50:15,450
you can't join these things unless you've got

740
00:50:15,450 --> 00:50:16,550
the wall garden installed.

741
00:50:16,550 --> 00:50:19,231
And, you know, we've all read that.

742
00:50:19,231 --> 00:50:22,812
Well, please ensure that you download, you know, the game

743
00:50:22,812 --> 00:50:26,693
well in advance of the concert, I think is the phrase.

744
00:50:26,693 --> 00:50:29,334
But we can stitch these together

745
00:50:29,334 --> 00:50:32,155
as a sort of heterogeneous metaverse experience,

746
00:50:32,155 --> 00:50:34,515
I think, you know, with things like cloud gaming.

747
00:50:37,606 --> 00:50:42,620
So my key takeaways, I suppose, is content needs to be cloud native.

748
00:50:42,620 --> 00:50:45,327
We need to play to the strengths of cloud compute.

749
00:50:46,178 --> 00:50:49,301
We need to design for millions of consumers

750
00:50:49,301 --> 00:50:54,125
and beyond the traditional game mechanic, wind mechanic,

751
00:50:54,125 --> 00:50:58,048
and even the gamers that we've traditionally targeted.

752
00:50:58,048 --> 00:51:01,632
And I think there's a huge opportunity for transactions between participants.

753
00:51:01,632 --> 00:51:03,433
What does that actually mean?

754
00:51:03,433 --> 00:51:09,939
So content delivery needs to scale to consumer-level numbers

755
00:51:09,939 --> 00:51:13,642
in order to deliver these kinds of experiences.

756
00:51:17,653 --> 00:51:18,733
So, thank you very much.

757
00:51:18,733 --> 00:51:21,034
You know, if you have questions,

758
00:51:21,034 --> 00:51:22,955
you want to chat about stuff,

759
00:51:22,955 --> 00:51:24,155
feel free to drop me a line.

760
00:51:24,155 --> 00:51:26,936
You can find me on LinkedIn.

761
00:51:26,936 --> 00:51:27,197
Thank you.

