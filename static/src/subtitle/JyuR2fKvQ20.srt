1
00:00:06,382 --> 00:00:10,825
I talk to Errors to Play, Human Error and Game Design, just a little bit about me.

2
00:00:11,626 --> 00:00:15,188
I'm a Lead User Experience Researcher at Epic Games.

3
00:00:16,069 --> 00:00:19,391
I have a PhD in Psychology, specifically in Human Factor Psychology,

4
00:00:19,811 --> 00:00:22,754
which is the psychology of how people interact with technology.

5
00:00:23,554 --> 00:00:27,417
And I'm a Kiwi, which means I come from New Zealand and also that I cannot fly.

6
00:00:29,278 --> 00:00:34,562
If you'd like to get in contact with me, you can reach out to me at that email or on Twitter.

7
00:00:35,218 --> 00:00:39,019
or please, I love to play games, so there's all my various game IDs.

8
00:00:39,339 --> 00:00:40,499
Add me, we can play together.

9
00:00:42,440 --> 00:00:44,020
So today, we're going to talk about error.

10
00:00:44,620 --> 00:00:47,641
Here's an academic definition of error.

11
00:00:48,101 --> 00:00:50,722
It's a bit long-winded, so we can shorten that down to

12
00:00:51,402 --> 00:00:53,163
things going wrong that you don't want to go wrong.

13
00:00:54,863 --> 00:00:56,864
And that is an important thing about error,

14
00:00:56,984 --> 00:00:58,824
is that it is that you don't want to go wrong.

15
00:00:59,545 --> 00:01:04,046
And in industrial settings, when we talk about error,

16
00:01:04,312 --> 00:01:06,333
We want to prevent all error from happening.

17
00:01:06,914 --> 00:01:08,935
However, the thing that's interesting about working in

18
00:01:08,975 --> 00:01:11,857
games is that we want to prevent some errors that

19
00:01:11,897 --> 00:01:14,860
happen, the errors that are unintended, that we think make

20
00:01:14,900 --> 00:01:16,241
the player experience worse.

21
00:01:16,841 --> 00:01:19,303
But we do actually want the players to make mistakes.

22
00:01:20,044 --> 00:01:21,104
That's part of the challenge.

23
00:01:21,805 --> 00:01:26,008
Different types of errors can be, in fact, not bugs, but

24
00:01:26,068 --> 00:01:26,469
features.

25
00:01:27,269 --> 00:01:29,151
And that's part of what I want to talk about today, rather

26
00:01:29,191 --> 00:01:30,752
than just how to prevent these things.

27
00:01:32,493 --> 00:01:32,613
So.

28
00:01:33,283 --> 00:01:36,065
What do we know about Aero? Well it's been studied for quite a long time.

29
00:01:36,325 --> 00:01:40,248
It's an important thing. Typically it's been studied in transport

30
00:01:40,548 --> 00:01:42,670
to make sure that these things don't crash.

31
00:01:43,731 --> 00:01:47,694
It's been studied in industry to make sure these things don't blow up.

32
00:01:49,115 --> 00:01:52,558
And it's been studied in the military to help these things blow up other things.

33
00:01:54,105 --> 00:01:55,566
And there's been a lot of work around it.

34
00:01:55,806 --> 00:01:59,508
And of course, anything in psychology will have a nice model.

35
00:01:59,808 --> 00:02:03,389
So let's look at a model that we can use to talk about error.

36
00:02:03,949 --> 00:02:06,670
As with most models in psychology, this is a simplification,

37
00:02:06,830 --> 00:02:12,533
but it's aimed at trying to talk about how people go about their everyday life and cognition.

38
00:02:13,233 --> 00:02:15,874
The idea is when you encounter a problem for the first time,

39
00:02:16,234 --> 00:02:20,436
what you'll initially try and do and see if it can be solved automatically without you really thinking.

40
00:02:20,837 --> 00:02:25,098
Do you have a solution to this that's fast and automatic and doesn't take much effort?

41
00:02:25,818 --> 00:02:31,100
If you don't, you'll move up to the next level where you apply if-then conditional rules,

42
00:02:31,440 --> 00:02:35,481
which is to say, if this happens, then I should do this.

43
00:02:35,881 --> 00:02:40,402
So it's not quite automatic, it's a little bit more thinking, but it is on the way to

44
00:02:40,442 --> 00:02:41,363
becoming automatic.

45
00:02:41,423 --> 00:02:43,343
It's like, this situation means I do this.

46
00:02:44,644 --> 00:02:48,585
Only then, if both of those have failed you, will you move on to...

47
00:02:49,024 --> 00:02:53,306
what we would think of as thinking with logic, reasoning, rational thought.

48
00:02:53,646 --> 00:02:58,909
This kind of slow processing that takes a while to do and has a lot of inefficiencies

49
00:02:58,969 --> 00:02:59,129
in it.

50
00:03:00,030 --> 00:03:04,732
And the general idea is humans, like most other animals, are satisfying.

51
00:03:04,772 --> 00:03:08,614
We don't like to spend time and effort if we can get away without doing so.

52
00:03:08,954 --> 00:03:11,516
So we like to operate at the lower levels if we can manage.

53
00:03:11,876 --> 00:03:13,357
And it's really important that we do so.

54
00:03:15,079 --> 00:03:19,223
These levels can be called the skill level, the rule level, and the knowledge level.

55
00:03:19,623 --> 00:03:22,947
And within each of these, there are different types of errors that can occur.

56
00:03:23,387 --> 00:03:26,870
And what I'm going to do today is I'm going to go over these types of errors,

57
00:03:27,050 --> 00:03:30,233
and I'm going to talk about examples of how they can be prevented,

58
00:03:30,834 --> 00:03:32,776
and examples of how they can actually be used.

59
00:03:33,376 --> 00:03:34,998
And I do want to put a disclaimer up front.

60
00:03:35,619 --> 00:03:37,941
I'm going to use lots of examples from lots of different games.

61
00:03:38,663 --> 00:03:41,844
And when I use one that's in maybe a negative context,

62
00:03:41,925 --> 00:03:43,465
I'm not saying they shouldn't have done this,

63
00:03:43,585 --> 00:03:44,806
or this is the worst example.

64
00:03:45,066 --> 00:03:46,247
It was just a good example.

65
00:03:46,787 --> 00:03:49,608
The same way if I say, hey, here's a use of it,

66
00:03:49,808 --> 00:03:52,630
this may not be the best use, it was just a clear example.

67
00:03:52,830 --> 00:03:53,730
I want to make that clear.

68
00:03:54,391 --> 00:03:57,032
UX is sometimes accused of trying to make everything

69
00:03:57,092 --> 00:03:58,913
simple, remove all the errors, and that's not

70
00:03:58,953 --> 00:03:59,613
what we want to do.

71
00:03:59,673 --> 00:04:01,534
We want to help games be the best.

72
00:04:03,255 --> 00:04:06,857
So as I said, another title for this could be Errors,

73
00:04:06,897 --> 00:04:07,457
How to Prevent.

74
00:04:07,754 --> 00:04:08,555
and how to use them.

75
00:04:08,595 --> 00:04:11,616
And that's going to be the structure of most of the talk.

76
00:04:12,556 --> 00:04:14,117
Also at the end of the talk, I'm going

77
00:04:14,137 --> 00:04:17,579
to talk about a kind of holistic approach to dealing with this

78
00:04:17,939 --> 00:04:19,540
and why cheese is involved in that.

79
00:04:22,041 --> 00:04:23,461
So to start with, skill level.

80
00:04:24,322 --> 00:04:26,963
As I talked about before, this is the fast, automatic level

81
00:04:27,283 --> 00:04:27,963
of performance.

82
00:04:28,904 --> 00:04:31,165
If you think about it in terms of fighting games,

83
00:04:31,485 --> 00:04:34,867
it is what is often referred to as muscle memory, where

84
00:04:35,458 --> 00:04:37,579
If you're operating at the skill level, you're in that flow,

85
00:04:37,939 --> 00:04:42,680
you can just hit the combo buttons and get the combo off

86
00:04:43,180 --> 00:04:43,901
and keep on playing.

87
00:04:43,921 --> 00:04:44,941
You don't need to think about it.

88
00:04:45,041 --> 00:04:46,422
That's skill level operation when

89
00:04:46,442 --> 00:04:49,443
you're playing at that kind of muscle memory level.

90
00:04:51,343 --> 00:04:54,204
So when we talk about errors within skill level,

91
00:04:54,464 --> 00:04:55,725
there are generally two types.

92
00:04:55,825 --> 00:04:58,706
There's inattention errors and over-attention errors.

93
00:04:59,226 --> 00:05:00,626
Inattention ones are the ones that

94
00:05:00,666 --> 00:05:02,387
come to mind very easily when we think

95
00:05:02,447 --> 00:05:03,667
about people making mistakes.

96
00:05:04,068 --> 00:05:04,588
And that's the.

97
00:05:05,208 --> 00:05:08,129
There just wasn't enough attention paid to something, and something goes wrong.

98
00:05:09,010 --> 00:05:11,090
Over-attention errors we think about less often,

99
00:05:11,630 --> 00:05:16,052
but they are when you're using these higher-level cognitive processes that take a lot of effort,

100
00:05:16,632 --> 00:05:19,613
but you're trying to apply them to something that should be automatic.

101
00:05:20,793 --> 00:05:24,314
So, again, a fighting game is a good example of this.

102
00:05:24,354 --> 00:05:25,974
When you're first learning a fighting game,

103
00:05:26,154 --> 00:05:29,015
you're really, really thinking about which buttons you're pressing,

104
00:05:29,155 --> 00:05:31,036
very aware of all your actions,

105
00:05:31,356 --> 00:05:33,096
and that actually makes it harder for you to learn

106
00:05:33,176 --> 00:05:34,017
and harder for you to...

107
00:05:34,676 --> 00:05:40,357
execute them, then when later on they become automatic, and you can actually basically

108
00:05:40,457 --> 00:05:42,538
not think about them and go with the flow.

109
00:05:44,618 --> 00:05:48,039
So the first type of inattention error is double capture slip.

110
00:05:48,739 --> 00:05:52,360
I'm going to use these scientific names for them because it's helpful, but you don't necessarily

111
00:05:52,400 --> 00:05:53,441
have to remember them.

112
00:05:53,541 --> 00:05:54,821
It's more about what they're about.

113
00:05:55,961 --> 00:06:00,722
This is where there's a couple of potential fast things you could do, and because you're

114
00:06:01,583 --> 00:06:02,663
distracted or overloaded.

115
00:06:03,434 --> 00:06:05,856
the stronger one takes over. So let's go for an example.

116
00:06:06,757 --> 00:06:10,840
Say you're playing Fortnite and out of the darkness comes this terrifying pink bear.

117
00:06:11,861 --> 00:06:13,822
Now what you want to do is you want to hide from the bear,

118
00:06:14,403 --> 00:06:15,944
so you want to crouch.

119
00:06:16,725 --> 00:06:19,967
Now in Fortnite, crouching is pressing the

120
00:06:20,648 --> 00:06:21,929
right stick. Click it in.

121
00:06:22,809 --> 00:06:25,552
But, you know, this bear's really scary.

122
00:06:26,492 --> 00:06:30,455
And you're quite distracted and under load, and instead what you do is you press B,

123
00:06:30,676 --> 00:06:32,717
which quite common is crouch in a game.

124
00:06:33,239 --> 00:06:34,680
That's a stronger automatic rule.

125
00:06:35,240 --> 00:06:38,721
You crouch, you press B, that goes into build mode,

126
00:06:39,001 --> 00:06:42,062
not crouch in Fortnite, and then the bear takes you out.

127
00:06:44,283 --> 00:06:46,223
This is an example of making a double capture slip.

128
00:06:47,604 --> 00:06:50,245
To prevent double capture slips, it's relatively simple.

129
00:06:50,285 --> 00:06:52,685
This is why there is so much emphasis

130
00:06:52,745 --> 00:06:54,446
on standardization and consistency.

131
00:06:55,026 --> 00:06:58,227
If your game is consistent within itself, or

132
00:06:58,878 --> 00:07:03,800
within frameworks set up by the industry, then double capture slips are less likely

133
00:07:03,840 --> 00:07:05,961
to happen because the strongest rule is the right rule.

134
00:07:06,341 --> 00:07:11,323
So if we look at this fidget toy, the green button down the bottom, if I asked you what

135
00:07:11,363 --> 00:07:14,684
it does, a lot of you would say that it jumps or it confirms, right?

136
00:07:14,704 --> 00:07:16,025
Because that's pretty much a standard.

137
00:07:17,105 --> 00:07:19,866
Not in all cases, but it is in a lot.

138
00:07:20,426 --> 00:07:24,568
The red button, a lot of people would say that it cancels because, again, that's pretty

139
00:07:24,608 --> 00:07:25,168
much a standard.

140
00:07:26,007 --> 00:07:28,609
The other approach you can take here is to allow customization.

141
00:07:28,789 --> 00:07:30,870
Customization is great for accessibility,

142
00:07:30,990 --> 00:07:32,931
but it also means that people can bring along

143
00:07:33,291 --> 00:07:35,892
their own strong rules and set it up as they like.

144
00:07:37,813 --> 00:07:39,274
So on the next slide, very quickly,

145
00:07:39,694 --> 00:07:41,515
what button would you press to jump?

146
00:07:44,197 --> 00:07:47,738
In Nintendo, it's different from the other games,

147
00:07:48,319 --> 00:07:49,219
from the other platforms.

148
00:07:49,539 --> 00:07:51,040
And that's not necessarily a bad thing,

149
00:07:51,060 --> 00:07:52,381
but it is if you're not used to it.

150
00:07:53,311 --> 00:07:56,573
But for Nintendo, it's good, because it's been consistent that way for a while.

151
00:07:58,474 --> 00:08:00,155
So how can you use double capture slips?

152
00:08:00,455 --> 00:08:04,137
Well they get used a lot of the time in any game that requires this fast-paced twitch

153
00:08:04,217 --> 00:08:04,538
action.

154
00:08:05,778 --> 00:08:09,801
Something like Rock Band will be throwing a lot at you and it's part of the challenge

155
00:08:09,821 --> 00:08:13,123
that you're to choose the right action under a lot of pressure.

156
00:08:13,903 --> 00:08:18,807
A more kind of direct example was in Dead Space, the original Dead Space, when you fought

157
00:08:18,887 --> 00:08:20,768
the boss in that.

158
00:08:21,573 --> 00:08:24,234
the boss would grab you at one point and pull you upside down.

159
00:08:24,514 --> 00:08:27,095
And when it pulled you upside down, your control was inverted.

160
00:08:27,775 --> 00:08:30,316
Now that's going to cause a lot of extra difficulty for you

161
00:08:30,596 --> 00:08:32,977
because these double capture slips are going to take over.

162
00:08:33,017 --> 00:08:36,078
You're so used to aiming that now you have to think about something

163
00:08:36,358 --> 00:08:39,439
that used to be automatic, much increasing the load.

164
00:08:40,239 --> 00:08:42,140
All right, so that's double capture slips.

165
00:08:43,140 --> 00:08:45,221
The next is omissions following interruptions,

166
00:08:46,421 --> 00:08:49,322
or the walking out of your marching outpost without your keys problem.

167
00:08:49,723 --> 00:08:50,623
This is kind of like.

168
00:08:51,313 --> 00:08:57,138
You're going along and you've been in a zone killing monsters for a while and you decide you need to go hand in a quest.

169
00:08:57,578 --> 00:09:04,744
But on the way to the quest, you get interrupted by some more monsters and then two hours later you're killing those monsters and you've never handed in that quest.

170
00:09:04,904 --> 00:09:10,488
Because that automatic thing you've been doing more often took over when you got interrupted.

171
00:09:12,269 --> 00:09:16,132
So to prevent it, we can of course put in, are you sure prompts for...

172
00:09:17,433 --> 00:09:18,614
You're trying to exit right now.

173
00:09:18,634 --> 00:09:19,434
Have you saved?

174
00:09:19,474 --> 00:09:20,895
Have you remembered to do this thing?

175
00:09:20,935 --> 00:09:24,317
Because exiting can be quite an automatic thing.

176
00:09:24,698 --> 00:09:26,719
You can have in-world reminders of activities,

177
00:09:26,779 --> 00:09:29,661
like quest prompts or where to hand in objects that

178
00:09:29,681 --> 00:09:30,902
are pushing the player forward.

179
00:09:32,263 --> 00:09:35,685
There's not many cases you'd want to use this.

180
00:09:35,885 --> 00:09:37,486
So I'm going to kind of skip over that.

181
00:09:39,648 --> 00:09:40,769
Delay reducing control.

182
00:09:41,169 --> 00:09:43,230
This one's kind of a very familiar error

183
00:09:43,270 --> 00:09:44,131
that a lot of us have.

184
00:09:44,991 --> 00:09:45,592
Imagine you're a.

185
00:09:46,984 --> 00:09:53,307
You're a wizard in Skyrim and you're in your lab and you're making a potion and you work out you need some

186
00:09:53,707 --> 00:09:59,390
Nirnroot and there's none there and you go out into the field to collect it and then you get out in the field and then you're like

187
00:10:00,831 --> 00:10:01,771
Why am I here again?

188
00:10:03,412 --> 00:10:08,314
And the reason that this happens is that cue that you had back in your laboratory of

189
00:10:08,975 --> 00:10:12,757
No Nirnroot is now missing when you're in the field where there's plenty of it

190
00:10:13,120 --> 00:10:14,861
So that you walk into a room and you're like,

191
00:10:15,021 --> 00:10:17,301
I don't remember why I came in here, but I had a good reason.

192
00:10:17,802 --> 00:10:18,602
That's this error.

193
00:10:20,482 --> 00:10:23,283
To prevent this error, it's very common nowadays

194
00:10:23,343 --> 00:10:26,964
to carry affordances, carry queues with us

195
00:10:27,024 --> 00:10:28,204
wherever we go in a game.

196
00:10:28,424 --> 00:10:30,105
So in Assassin's Creed, for example,

197
00:10:30,425 --> 00:10:32,565
they always show the in-context action

198
00:10:32,605 --> 00:10:35,326
you can take at any time, what your current mission is,

199
00:10:35,646 --> 00:10:36,406
this kind of thing.

200
00:10:36,826 --> 00:10:39,627
In Fortnite, we also can do the same thing,

201
00:10:39,647 --> 00:10:42,108
where you can pin quests or you can pin activities.

202
00:10:42,570 --> 00:10:46,692
that you want to do. This is to reduce this error you can take these cues with you so

203
00:10:46,732 --> 00:10:52,915
you always know what you need to be doing. You can use this of course if you do want

204
00:10:53,015 --> 00:10:58,577
memory and people to have to rely on these higher level processes in your games. This

205
00:10:58,637 --> 00:11:04,500
is often used in adventure games or hidden object games. Games where you don't want these

206
00:11:04,540 --> 00:11:08,762
cues carried with them because part of the fun of the game is having a good memory and

207
00:11:08,822 --> 00:11:11,523
being able to overcome this usual problem of...

208
00:11:12,209 --> 00:11:14,650
operating on automatic and therefore forgetting things.

209
00:11:17,691 --> 00:11:19,512
Perceptual confusion is a straightforward one.

210
00:11:19,712 --> 00:11:21,572
It's essentially this thing looks like that thing.

211
00:11:22,352 --> 00:11:27,574
I know this isn't a problem for lots of people, but for me personally, one dude in camouflage

212
00:11:27,634 --> 00:11:29,495
looks quite like another dude in camouflage.

213
00:11:30,635 --> 00:11:34,196
Like the American soldiers on the bottom look like the Russian soldiers on the top, right?

214
00:11:35,497 --> 00:11:37,357
Probably made someone really mad with that.

215
00:11:37,918 --> 00:11:39,618
Americans on the top, Russians on the bottom.

216
00:11:40,298 --> 00:11:42,039
It really, to me, it doesn't stand out.

217
00:11:42,369 --> 00:11:43,650
But it does to a lot of people.

218
00:11:44,510 --> 00:11:46,692
Again, these examples are not, hey, this is bad.

219
00:11:47,593 --> 00:11:48,873
Of course, you can make military shooters.

220
00:11:49,134 --> 00:11:51,575
Just an example of how someone could get confused.

221
00:11:52,156 --> 00:11:54,597
And of course, in Battlefield, they overcome this in some ways

222
00:11:54,657 --> 00:11:55,998
with the spotting mechanic, where

223
00:11:56,018 --> 00:11:57,519
if you see an enemy, you can hit a button,

224
00:11:57,619 --> 00:11:58,980
and they get highlighted for your team

225
00:11:59,000 --> 00:12:00,081
and it makes them stand out.

226
00:12:02,062 --> 00:12:03,703
So to prevent perceptual confusion,

227
00:12:03,923 --> 00:12:06,305
you can use distinct shapes, silhouettes, and animation.

228
00:12:06,505 --> 00:12:09,367
So in Fortnite, there's not much chance

229
00:12:09,387 --> 00:12:09,967
that someone's going to.

230
00:12:10,418 --> 00:12:12,540
mistake that black knight for the bright bomber.

231
00:12:12,820 --> 00:12:15,302
They have very distinct silhouettes, they stand out,

232
00:12:15,382 --> 00:12:17,663
they don't look too similar from each other.

233
00:12:18,123 --> 00:12:20,965
You can also use animation to make enemies move in ways

234
00:12:21,025 --> 00:12:24,488
that look evil or threatening, and allies move differently.

235
00:12:25,108 --> 00:12:27,369
Or you can do highlights, such as in Paragon,

236
00:12:27,409 --> 00:12:28,690
when you targeted an enemy,

237
00:12:28,710 --> 00:12:31,192
they would have a red highlight on them,

238
00:12:31,292 --> 00:12:32,453
or you could see them through the world.

239
00:12:32,813 --> 00:12:35,535
These are all ways that you can overcome these problems.

240
00:12:37,476 --> 00:12:39,377
You can, of course, use perceptual confusion, though.

241
00:12:39,795 --> 00:12:44,077
You can add load, spot the difference games do this all the time, hidden objects games

242
00:12:44,117 --> 00:12:48,558
do it, lots of things that look like other things, and spies and ambush enemies are an

243
00:12:48,618 --> 00:12:49,099
example.

244
00:12:49,279 --> 00:12:54,301
The Bob from the old Marathon games was an ally you could have on your side, but sometimes

245
00:12:54,341 --> 00:12:58,043
they could be taken over by the aliens and they would run at you and explode.

246
00:12:58,783 --> 00:13:03,045
They look the same, so therefore a lot of players would just kill every Bob that they

247
00:13:03,085 --> 00:13:04,725
saw no matter if they were friendly or not.

248
00:13:05,406 --> 00:13:07,407
But this is a way of using perceptual confusion.

249
00:13:10,041 --> 00:13:12,863
Our next error is interference error.

250
00:13:13,403 --> 00:13:15,345
This is where two thoughts and actions enter

251
00:13:15,965 --> 00:13:20,128
and a kind of mixed up combination emerges.

252
00:13:20,929 --> 00:13:23,871
So for example, when my uncle was at a wedding

253
00:13:24,331 --> 00:13:26,012
and wanted to welcome and thank people,

254
00:13:26,332 --> 00:13:28,594
he stood up and said, I would like to wank.

255
00:13:30,195 --> 00:13:32,357
These are often called Freudian slips,

256
00:13:33,677 --> 00:13:35,239
but they aren't anything to do

257
00:13:35,259 --> 00:13:36,680
with wanting to sleep with your parents.

258
00:13:37,345 --> 00:13:39,445
They are just part of how cognition works with,

259
00:13:39,725 --> 00:13:42,286
if you have several things that could be a possibility,

260
00:13:42,306 --> 00:13:43,927
they sometimes combine into each other.

261
00:13:46,367 --> 00:13:49,388
To prevent this, really it's having low task load

262
00:13:49,548 --> 00:13:52,249
and only one choice or task at a time is the best way to do it.

263
00:13:52,869 --> 00:13:56,250
Again, this tends to help with other errors as well,

264
00:13:56,290 --> 00:13:58,731
but in this case, this is one of the most effective things to do.

265
00:14:00,091 --> 00:14:02,132
But to use it is slightly more interesting.

266
00:14:02,152 --> 00:14:06,533
We do this again in games with a lot of similarity or high task

267
00:14:06,593 --> 00:14:06,793
load.

268
00:14:07,217 --> 00:14:11,820
If you're in a quiz game, what you'll often do is the questions get harder as you'll make

269
00:14:11,920 --> 00:14:16,122
sure that the options start looking very much like each other and you'll increase the time

270
00:14:16,162 --> 00:14:20,345
pressure so that this error is more likely to happen where someone's going to pick something

271
00:14:20,385 --> 00:14:24,708
that looks right fast, quickly, automatically without really thinking because they're under

272
00:14:24,748 --> 00:14:25,588
pressure to do so.

273
00:14:28,850 --> 00:14:30,531
That's all the inattention errors.

274
00:14:30,992 --> 00:14:34,554
So now we'll talk about the over-attention ones.

275
00:14:34,574 --> 00:14:35,535
There's only really three.

276
00:14:37,363 --> 00:14:44,387
There's omission, which is you're paying so much attention to one part of a task that you miss another.

277
00:14:45,507 --> 00:14:50,650
There's repetition, which is where you'll repeat multiple parts of a task.

278
00:14:50,730 --> 00:14:57,954
So maybe you'll go and open a door multiple times even though you didn't have to do it because you're just so focused on what you're trying to do.

279
00:14:59,315 --> 00:15:05,299
And then there's reversal, which is a little bit rare, but you always feel really stupid when it happens.

280
00:15:05,359 --> 00:15:06,139
It would be something like...

281
00:15:06,998 --> 00:15:09,980
you know you have to throw some guns out,

282
00:15:10,320 --> 00:15:11,961
but you throw the gun out, and then you're,

283
00:15:11,982 --> 00:15:13,462
because you're thinking about that gun so much,

284
00:15:13,482 --> 00:15:15,364
you pick it back up again off the ground,

285
00:15:15,424 --> 00:15:17,045
and then you're like, I need to drop it again,

286
00:15:17,065 --> 00:15:18,185
and then you put it out.

287
00:15:20,026 --> 00:15:23,008
And a mission example is why I've got this picture up here,

288
00:15:23,088 --> 00:15:25,910
and that would be, you're lining up a sniper shot,

289
00:15:26,590 --> 00:15:29,572
and you're really trying to account for bullet drop,

290
00:15:29,672 --> 00:15:31,293
and the way the character's moving,

291
00:15:31,593 --> 00:15:33,375
and then you pull the trigger and it goes click,

292
00:15:33,655 --> 00:15:34,935
because you didn't think to reload,

293
00:15:34,955 --> 00:15:36,596
you didn't think to check that.

294
00:15:38,419 --> 00:15:40,502
And hopefully you're paying so much attention to me.

295
00:15:40,522 --> 00:15:42,565
You also didn't notice that that wouldn't count in this

296
00:15:42,585 --> 00:15:43,566
because it is reloaded.

297
00:15:43,726 --> 00:15:49,334
But to prevent over-attention, onboarding helps a lot here.

298
00:15:49,414 --> 00:15:50,856
An onboarding ramp that's smooth,

299
00:15:52,038 --> 00:15:53,640
that doesn't overload the player too much.

300
00:15:54,147 --> 00:15:59,148
This can be interpreted some ways by don't use tutorials or don't give a lot of information to new players.

301
00:15:59,548 --> 00:16:02,109
But actually new players tend to need more information.

302
00:16:02,309 --> 00:16:08,750
It's more about gently introducing them to it rather than hiding it or saving it for too far later.

303
00:16:09,370 --> 00:16:12,671
Flow state is kind of the opposite of over-attention.

304
00:16:12,891 --> 00:16:14,411
It is the point you want people to be in.

305
00:16:14,451 --> 00:16:17,432
If you want to get rid of over-attention, you can give skips.

306
00:16:18,332 --> 00:16:21,213
Here's a nice example from a recent game, Deadbolt,

307
00:16:21,233 --> 00:16:23,673
where they've got this message popping up saying like...

308
00:16:24,114 --> 00:16:26,296
you'll have a harder time to play when frustrated.

309
00:16:26,336 --> 00:16:28,478
They're pointing at this over-attention problem.

310
00:16:29,960 --> 00:16:31,561
But there maybe can be problems with that.

311
00:16:32,422 --> 00:16:33,983
So if you want to use over-attention,

312
00:16:35,024 --> 00:16:36,706
if you really want to make your game hard for people

313
00:16:36,766 --> 00:16:38,788
and they're supposed to be operating at an automatic level

314
00:16:38,828 --> 00:16:40,930
and they're failing, tell them to try harder.

315
00:16:41,070 --> 00:16:43,092
Do the opposite of use the force, Luke.

316
00:16:43,232 --> 00:16:44,193
Throw stuff at them.

317
00:16:44,733 --> 00:16:46,015
Point out obvious failings.

318
00:16:46,235 --> 00:16:47,096
Add time pressure.

319
00:16:48,400 --> 00:16:51,963
Metal Gear Solid had this thing that if you played it on lower difficulties and died,

320
00:16:52,023 --> 00:16:53,183
they put this hat on you.

321
00:16:53,263 --> 00:16:56,465
That probably actually made it harder for people because it's reminding them that they're

322
00:16:56,485 --> 00:16:57,086
not very good.

323
00:16:59,227 --> 00:17:03,389
God of War, it had this nice feature in it that if you died a lot of times, it would

324
00:17:03,509 --> 00:17:04,910
suggest to lower the difficulty.

325
00:17:05,251 --> 00:17:09,453
That's great, except if you were dying from a jumping puzzle and you couldn't do the jumping

326
00:17:09,513 --> 00:17:11,514
puzzle, lowering the difficulty wasn't going to help you.

327
00:17:12,255 --> 00:17:16,998
So these suggestions popping up may have made you focus a little bit more and not relax.

328
00:17:19,811 --> 00:17:27,556
So moving on to rule level errors, here's an example of a rule level system from Dragon

329
00:17:27,596 --> 00:17:33,959
Age where you could set up your tactics for your squad to say if an enemy is elite, then

330
00:17:34,059 --> 00:17:35,360
this squad member does this.

331
00:17:35,700 --> 00:17:39,303
And that's what to think about how rule level operation works.

332
00:17:39,543 --> 00:17:40,563
If then rules.

333
00:17:42,288 --> 00:17:43,949
Again, there's two types of errors here.

334
00:17:44,789 --> 00:17:46,630
One is mistakes caused by good rules,

335
00:17:47,010 --> 00:17:49,471
which are rules that generally work in most situations,

336
00:17:49,751 --> 00:17:52,572
but then you encounter a situation where, in this case,

337
00:17:52,632 --> 00:17:54,533
for whatever reason, the rule wasn't appropriate.

338
00:17:54,813 --> 00:17:56,053
It wasn't that you had a bad rule.

339
00:17:56,353 --> 00:17:59,234
It's just the situation changed, or you hadn't encountered

340
00:17:59,274 --> 00:18:00,234
the situation before.

341
00:18:01,095 --> 00:18:03,596
The other instance is if you formed a bad rule.

342
00:18:03,996 --> 00:18:07,437
So there's been something poorly explained to you

343
00:18:07,517 --> 00:18:10,318
or something miscommunicated, and the if-then rule

344
00:18:10,338 --> 00:18:12,138
you've formed is just inappropriate.

345
00:18:14,277 --> 00:18:17,700
So the first type of good rule problem is first exceptions.

346
00:18:18,140 --> 00:18:20,502
Now this is simply that exceptions are exceptional.

347
00:18:21,063 --> 00:18:24,125
And so when you encounter something that's different

348
00:18:24,225 --> 00:18:26,847
from what's usually worked up until now,

349
00:18:27,448 --> 00:18:29,709
you can't have taken into account in your rule system

350
00:18:30,190 --> 00:18:31,431
and so things can fail.

351
00:18:31,911 --> 00:18:33,452
We've all heard of Murphy's Law,

352
00:18:34,413 --> 00:18:37,536
but actually language's law is more

353
00:18:39,477 --> 00:18:40,278
commonly encountered,

354
00:18:40,298 --> 00:18:42,019
which is that everything that can go wrong

355
00:18:42,139 --> 00:18:43,260
actually usually goes right.

356
00:18:43,832 --> 00:18:48,214
The world actually usually accepts your mistakes and accepts your errors.

357
00:18:48,694 --> 00:18:54,496
And so you can sometimes get along with nothing going wrong, and then suddenly things will

358
00:18:54,536 --> 00:18:58,038
happen and the exception will come up, everything falls over.

359
00:18:59,639 --> 00:19:02,680
To prevent first exceptions, have no exceptions.

360
00:19:02,820 --> 00:19:06,962
Be consistent, be standard, similar to at the skill level.

361
00:19:07,906 --> 00:19:11,928
The Dark Souls games in the Souls series, for all their reputation for being difficult,

362
00:19:12,328 --> 00:19:13,368
are fantastic at this.

363
00:19:13,729 --> 00:19:18,031
They are deeply consistent games, which is how people can play them and overcome them.

364
00:19:18,551 --> 00:19:22,713
Enemies move in the same way, they attack in the same patterns, they're always in the

365
00:19:22,753 --> 00:19:23,313
same place.

366
00:19:23,513 --> 00:19:29,436
Your character moves in predictable, consistent fashion that does not generally have exceptions.

367
00:19:29,816 --> 00:19:33,237
This lets you overcome this problem and learn good rules.

368
00:19:34,978 --> 00:19:36,579
You can of course use first exceptions.

369
00:19:37,035 --> 00:19:38,036
by adding exceptions.

370
00:19:39,076 --> 00:19:41,877
This can be a way to break up the gameplay pattern.

371
00:19:43,498 --> 00:19:46,438
The classic example is having fire-type enemies

372
00:19:46,599 --> 00:19:49,880
or ice-type enemies that are resistant to different things

373
00:19:49,940 --> 00:19:51,820
to force the player to change up their tactics.

374
00:19:52,861 --> 00:19:54,921
An example from Destiny is the Vex enemy

375
00:19:55,321 --> 00:19:57,522
that gets shot with criticals in the stomach

376
00:19:57,582 --> 00:19:58,442
rather than in the head.

377
00:19:58,623 --> 00:20:00,723
This swaps up how the game is played,

378
00:20:01,003 --> 00:20:03,884
how the flow of the game goes, depending on what

379
00:20:03,944 --> 00:20:04,905
enemy that you encounter.

380
00:20:05,253 --> 00:20:11,235
and makes the game feel a little bit more dynamic and means that these exceptions are

381
00:20:11,276 --> 00:20:13,996
shown to players and become part of their repertoire.

382
00:20:16,177 --> 00:20:21,019
Another reason why a good rule can get misapplied is due to signal retention or counter signs,

383
00:20:21,079 --> 00:20:23,099
no signs and information overload detection.

384
00:20:23,640 --> 00:20:27,261
If you look at these pictures to the right there.

385
00:20:28,229 --> 00:20:33,353
The llamas in there are kind of hidden by a lot of noise and if you're colorblind you may not be able to see

386
00:20:33,493 --> 00:20:35,134
llamas in all four squares.

387
00:20:35,194 --> 00:20:41,538
This is a colorblind test that we have in fortnight for the colorblind mode so you can adjust things until you can see the llamas.

388
00:20:42,379 --> 00:20:47,122
And this is generally the idea of detecting a go signal from a no go signal

389
00:20:47,142 --> 00:20:50,924
which is like an alternate activity you could take or from noise.

390
00:20:51,304 --> 00:20:56,728
So you come into a room in a shooter the objective in that room is to go press the button to open the door

391
00:20:57,425 --> 00:20:58,785
But a lot of enemies come in.

392
00:20:59,166 --> 00:21:01,567
And previously in the shooter, maybe you're

393
00:21:01,607 --> 00:21:03,468
used to killing enemies to clear rooms.

394
00:21:03,868 --> 00:21:05,309
But these enemies are going to keep coming

395
00:21:05,329 --> 00:21:06,430
until you press that button.

396
00:21:07,530 --> 00:21:09,831
The press the button would be the go signal.

397
00:21:10,132 --> 00:21:12,113
The enemies would be the no go signal.

398
00:21:12,353 --> 00:21:14,194
Don't spend your time shooting enemies.

399
00:21:14,574 --> 00:21:16,575
And then all the textures and lighting and everything

400
00:21:16,615 --> 00:21:19,857
would be the noise that you have to detect these things amongst.

401
00:21:21,638 --> 00:21:24,059
So to prevent this, clear teaching.

402
00:21:24,766 --> 00:21:26,787
making it clear what the player needs to do,

403
00:21:26,947 --> 00:21:29,108
prompting in the world, highlighting information,

404
00:21:29,469 --> 00:21:32,851
making your go signals, the signs,

405
00:21:33,111 --> 00:21:35,412
really stand out from the alternatives.

406
00:21:38,974 --> 00:21:41,635
To use counter signs, you do just add noise,

407
00:21:41,775 --> 00:21:43,036
make it a noisy environment,

408
00:21:43,336 --> 00:21:45,117
do small differences between right and wrong.

409
00:21:45,297 --> 00:21:47,519
Again, this is very common in hidden object.

410
00:21:49,251 --> 00:21:54,073
games but also for invisible enemies that often have a noisy pattern and move amongst

411
00:21:54,093 --> 00:22:01,755
the textures and don't stand out. Another reason that good rules can get misapplied

412
00:22:01,996 --> 00:22:06,737
is because of rule strength, general rules and rigidity. These are three categories but

413
00:22:06,777 --> 00:22:11,579
they're very similar to each other. Essentially, the rule that you use the most becomes the

414
00:22:11,619 --> 00:22:14,040
strongest and therefore becomes the thing that you rely on.

415
00:22:15,539 --> 00:22:20,643
That's because, generally speaking, if a rule works and if it isn't broke, don't fix it.

416
00:22:20,683 --> 00:22:22,005
Like, good enough is good enough.

417
00:22:22,485 --> 00:22:27,809
And if you've ever seen this in your games, it's relatively common that, say, players

418
00:22:27,850 --> 00:22:31,232
will come up with a dominant strategy very early on and then they'll stick with it.

419
00:22:31,433 --> 00:22:38,238
They'll use 400 ammo in the gun that they like rather than swapping to the gun that

420
00:22:38,258 --> 00:22:42,082
would have been more effective in a situation that has just come up.

421
00:22:44,095 --> 00:22:49,276
So to prevent this, you can either make multiple viable paths so this never comes up, like

422
00:22:49,496 --> 00:22:54,878
whatever tactic they want to take always works, or if you do want people to task switch, you

423
00:22:54,898 --> 00:22:56,798
need to provide really clear feedback.

424
00:22:57,279 --> 00:23:05,461
One issue we had in Paragon is that generally speaking, the rule was you use your automatic

425
00:23:05,501 --> 00:23:09,322
attack to attack things and do a reasonable amount of damage.

426
00:23:09,748 --> 00:23:13,049
But for a lot of characters, you used your abilities if you wanted to do a lot of damage.

427
00:23:13,089 --> 00:23:14,189
That was a good rule.

428
00:23:14,629 --> 00:23:17,990
However, when it came to towers, your abilities didn't work on towers.

429
00:23:18,490 --> 00:23:22,171
But people would try and use their abilities and they would waste their ultimates and waste

430
00:23:22,211 --> 00:23:23,572
very high cooldown abilities.

431
00:23:24,212 --> 00:23:29,213
And we had to, even though no damage numbers came up, even though there was this feedback.

432
00:23:29,697 --> 00:23:32,738
that was not enough to stop them using this otherwise good rule.

433
00:23:33,218 --> 00:23:37,799
So eventually we really just had to add huge big immune feedback whenever they did that.

434
00:23:37,939 --> 00:23:41,220
Like, this does not work, really get in their face to do it.

435
00:23:42,880 --> 00:23:44,741
Another way you can do it is offer help on failure.

436
00:23:44,861 --> 00:23:46,281
You can have hints pop up.

437
00:23:46,321 --> 00:23:49,362
So they're trying their dominant tactic and you detect that

438
00:23:49,562 --> 00:23:52,303
and you can gently steer them towards other tactics.

439
00:23:53,843 --> 00:23:54,883
To use rule strength...

440
00:23:55,615 --> 00:23:59,676
You can add exceptions. You can also understand and subvert expectations.

441
00:23:59,936 --> 00:24:03,417
You can essentially set players up to really demonstrate to them,

442
00:24:03,697 --> 00:24:07,338
hey, cool, you can play how you want. Here's a dominant strategy, use it.

443
00:24:07,678 --> 00:24:09,619
And then you can surprise them by mixing things up.

444
00:24:09,959 --> 00:24:13,620
So, Metal Gear Solid V had the adversary system, I believe it was called,

445
00:24:14,000 --> 00:24:18,101
where the enemies would actually start to adjust to your tactics.

446
00:24:18,162 --> 00:24:20,842
So if you got a lot of headshots, they'd start wearing helmets.

447
00:24:20,942 --> 00:24:24,483
If you snuck around, they would wear night vision goggles. These kind of things.

448
00:24:27,080 --> 00:24:31,522
Another reason why good rules can sometimes go bad is redundancy.

449
00:24:31,903 --> 00:24:34,844
This is essentially if a piece of information when it's presented to you

450
00:24:35,044 --> 00:24:38,286
is not useful, you won't integrate it as part of a rule system.

451
00:24:38,867 --> 00:24:43,590
So this can often happen in games where maybe in a tutorial or in an early

452
00:24:43,650 --> 00:24:44,890
onboarding we teach something

453
00:24:45,311 --> 00:24:48,512
and then we're like, okay we taught that but then the person doesn't have to use it

454
00:24:48,632 --> 00:24:49,633
until an hour later

455
00:24:50,033 --> 00:24:53,215
or until a significant time later and the teaching...

456
00:24:54,089 --> 00:24:57,070
or the object is not introduced close enough to where it is useful.

457
00:24:57,770 --> 00:25:01,471
An example of this from Fortnite is the Outlander fragments.

458
00:25:02,451 --> 00:25:04,932
These are objects you find around the map,

459
00:25:05,232 --> 00:25:07,212
and what they do is once you have an Outlander hero,

460
00:25:07,252 --> 00:25:09,213
you can use them and it gives you special abilities.

461
00:25:09,753 --> 00:25:13,694
However, they are introduced with very little explanation

462
00:25:13,794 --> 00:25:15,875
way before you can ever have an Outlander hero,

463
00:25:16,675 --> 00:25:19,796
meaning that a lot of players just kind of learn to ignore them

464
00:25:19,836 --> 00:25:21,376
because they don't do anything,

465
00:25:21,576 --> 00:25:22,996
and even once they get an Outlander,

466
00:25:23,497 --> 00:25:23,637
they...

467
00:25:24,056 --> 00:25:30,322
continue to ignore them. To prevent it, you can give extra volume on rare information.

468
00:25:31,183 --> 00:25:34,966
You can only show information when it's needed or remind them about it later. So maybe you

469
00:25:34,986 --> 00:25:39,270
give, this is the example of the Metrovania games, right? You give someone a new tool

470
00:25:39,390 --> 00:25:43,194
and then you immediately show how to use that new tool and then that will trigger them to

471
00:25:43,234 --> 00:25:48,259
go, oh wait, I've seen those rocks with the cracks on them earlier on. I thought it wasn't

472
00:25:48,299 --> 00:25:49,960
important but now I know it is important.

473
00:25:50,384 --> 00:25:53,126
Or maybe when they walk past those cracks earlier,

474
00:25:53,466 --> 00:25:55,488
they shimmered or they had a message

475
00:25:55,528 --> 00:25:58,109
that said come back later to help prompt and remove

476
00:25:58,129 --> 00:25:59,210
this redundancy problem.

477
00:25:59,630 --> 00:26:01,872
You can also approach it with unflowering, onboarding,

478
00:26:01,892 --> 00:26:04,053
where things are generally taught over time

479
00:26:04,073 --> 00:26:06,355
and as close to when they're useful as possible.

480
00:26:06,895 --> 00:26:09,217
It's generally best to not just teach something once

481
00:26:09,277 --> 00:26:12,319
and have the player use it once, but to teach something

482
00:26:12,359 --> 00:26:14,260
and then have the player use it a couple of times

483
00:26:14,320 --> 00:26:15,601
in a useful, beneficial way.

484
00:26:18,317 --> 00:26:20,557
There's not really many cases you'd want to use redundancy,

485
00:26:20,597 --> 00:26:22,358
so I'm going to skip over that and move on

486
00:26:22,398 --> 00:26:24,198
to encoding and action deficiencies, which

487
00:26:24,278 --> 00:26:27,219
is the primary reason why bad rules exist.

488
00:26:27,639 --> 00:26:29,279
This is an if-then rule you've created

489
00:26:29,459 --> 00:26:31,620
based on bad information, generally

490
00:26:31,660 --> 00:26:34,161
because the system or the game you're interacting with

491
00:26:34,421 --> 00:26:36,061
is not giving you the information you needed

492
00:26:36,441 --> 00:26:39,942
or is letting you progress via an incorrect tactic.

493
00:26:41,083 --> 00:26:43,423
You can think of these as superstitions,

494
00:26:43,483 --> 00:26:45,804
like don't open an umbrella inside.

495
00:26:47,483 --> 00:26:49,564
They're a rule, but they're an inadvisable rule.

496
00:26:49,824 --> 00:26:51,745
We had an example of this in Paragon.

497
00:26:52,646 --> 00:26:54,787
Due to the way that we taught players

498
00:26:54,827 --> 00:26:56,247
how to level up their abilities,

499
00:26:56,528 --> 00:26:58,869
and then how to use their abilities on controller,

500
00:26:59,369 --> 00:27:01,990
a lot of players believed that the button press

501
00:27:02,030 --> 00:27:03,591
you had to do to level up,

502
00:27:04,032 --> 00:27:05,632
where you had to hold down a trigger

503
00:27:05,812 --> 00:27:09,875
and press the button that was the ability,

504
00:27:10,775 --> 00:27:12,476
was also the way you used that ability.

505
00:27:12,961 --> 00:27:17,383
And it did work, you could hold the level up button and press the ability button to use your abilities, but it was

506
00:27:17,783 --> 00:27:20,184
inelegant. You didn't need to do that. You could just press

507
00:27:20,804 --> 00:27:21,824
the ability button

508
00:27:23,245 --> 00:27:24,145
once you had it learned.

509
00:27:32,988 --> 00:27:34,809
The weak points in Fortnite.

510
00:27:36,769 --> 00:27:37,310
This is

511
00:27:37,970 --> 00:27:39,790
when you're harvesting in Fortnite. Sorry.

512
00:27:42,334 --> 00:27:46,536
When you're harvesting in Fortnite, these blue circles appear and then you hit them to harvest faster.

513
00:27:47,416 --> 00:27:52,739
This was a massive problem for Fortnite, probably one of the longest lasting kind of low level UX issues.

514
00:27:53,759 --> 00:27:57,320
These weak points went through massive number of iterations to get where they are today

515
00:27:57,721 --> 00:27:59,141
and people were still not picking them up.

516
00:27:59,461 --> 00:28:03,223
Because what people were doing was learning a bad rule associated to them.

517
00:28:03,483 --> 00:28:07,165
They'd hit an object, a spot would show up on the object and that like...

518
00:28:07,608 --> 00:28:11,330
okay this is just telling me I've successfully hit this object and this object is now marked

519
00:28:11,390 --> 00:28:15,633
so I know which one I'm harvesting from. That was the bad rule that they learned. And the

520
00:28:15,693 --> 00:28:20,415
only way we were able to eventually overcome this is rather than give this ability to people

521
00:28:20,475 --> 00:28:26,098
right at the start, you play a little bit without it so it's not there and then it

522
00:28:26,198 --> 00:28:30,741
unlocks in the skill tree and then there's a little video and then suddenly we saw even

523
00:28:30,761 --> 00:28:34,683
though this has gone through massive things with numbers on it and bright lights and all

524
00:28:34,723 --> 00:28:37,124
this kind of stuff, that was when people got it.

525
00:28:37,673 --> 00:28:41,736
And of course, if you look at people playing Fortnite Battle Royale,

526
00:28:42,176 --> 00:28:45,738
where there is no unlocking of this, you just do have it from the start.

527
00:28:45,898 --> 00:28:47,399
A lot of people don't know that it exists.

528
00:28:47,839 --> 00:28:49,561
However, in that mode, it's less important.

529
00:28:50,741 --> 00:28:54,203
So, again, onboarding, which was an example there,

530
00:28:54,223 --> 00:28:56,224
you progressively unlocked, and Cloud Area Feedback

531
00:28:56,244 --> 00:28:58,866
really helps stop these bad rules being formed,

532
00:28:58,966 --> 00:29:00,767
and they can become good rules right away.

533
00:29:02,055 --> 00:29:05,616
There's not really a reason to use them, so let's move on to knowledge level errors.

534
00:29:05,916 --> 00:29:10,417
Again, knowledge level is this higher level of operation, what we typically think of as

535
00:29:10,517 --> 00:29:10,877
thinking.

536
00:29:11,357 --> 00:29:14,098
Errors at this level are often referred to as cognitive biases.

537
00:29:15,238 --> 00:29:19,459
Here's just a logic puzzle from Divinity Original Sin.

538
00:29:19,580 --> 00:29:22,960
Here, they're going to want you to think about it, think it through.

539
00:29:23,381 --> 00:29:26,842
Now, often a lot of game developers are people that like to think things through.

540
00:29:26,882 --> 00:29:30,543
They like to optimize, they like to be rational, and they feel that this is the major way that

541
00:29:31,963 --> 00:29:36,466
encounter things and it can be the case. But what is more often the case

542
00:29:36,687 --> 00:29:40,989
is players will look to, there will be some players that optimize your system,

543
00:29:41,049 --> 00:29:42,190
take advantage of your system,

544
00:29:42,490 --> 00:29:46,233
then other players will learn off them. It's not that all players will try and do this.

545
00:29:46,693 --> 00:29:49,715
Most of the time players are just trying to get by rather than to

546
00:29:50,095 --> 00:29:54,158
optimize. Across

547
00:29:54,398 --> 00:29:55,919
all the knowledge level issues.

548
00:29:56,816 --> 00:30:00,381
And the previous ones, but particularly impacting knowledge, is workspace limitations.

549
00:30:00,421 --> 00:30:04,768
This is really where the fact that we only have limited cognitive capacity comes into

550
00:30:04,808 --> 00:30:05,048
play.

551
00:30:05,388 --> 00:30:08,072
Working at the knowledge level is very inefficient.

552
00:30:08,553 --> 00:30:12,078
It takes a lot of cognitive capacity, but it is also what's fun, like it's that

553
00:30:13,574 --> 00:30:17,797
like intense concentration that really struggling with the game

554
00:30:17,858 --> 00:30:18,798
and thinking it through.

555
00:30:19,259 --> 00:30:21,060
It has a meta impact on all these things.

556
00:30:21,140 --> 00:30:23,062
So every example I'm going to give,

557
00:30:23,182 --> 00:30:26,044
it's like caused or could be helped by reducing load.

558
00:30:26,084 --> 00:30:27,785
And I'm going to try and not talk about that,

559
00:30:27,865 --> 00:30:29,427
because it just would come up every time.

560
00:30:31,088 --> 00:30:33,590
So the first of these areas is selectivity.

561
00:30:34,431 --> 00:30:37,233
That's attention to psychologically salient things

562
00:30:37,273 --> 00:30:38,854
in the environment rather than to what

563
00:30:38,894 --> 00:30:40,315
might be logically important.

564
00:30:40,856 --> 00:30:42,277
So a straightforward example of this

565
00:30:42,317 --> 00:30:42,597
would be

566
00:30:43,072 --> 00:30:45,753
The cake is way more psychologically salient.

567
00:30:45,793 --> 00:30:47,314
It's got emotion attached to it.

568
00:30:47,574 --> 00:30:48,675
You want to eat that cake.

569
00:30:49,115 --> 00:30:51,736
But logically, probably, for your health,

570
00:30:51,816 --> 00:30:54,238
it's better to eat the vegetables, which probably

571
00:30:54,278 --> 00:30:55,659
don't have the same emotional impact.

572
00:30:55,679 --> 00:30:58,140
They don't have the same psychological saliency

573
00:30:58,560 --> 00:30:59,321
attached to them.

574
00:31:00,621 --> 00:31:03,703
Now, an example of how this can happen in games

575
00:31:03,863 --> 00:31:05,064
is the loot cave in Destiny.

576
00:31:05,724 --> 00:31:09,386
This was not the optimal way to get loot in Destiny.

577
00:31:11,690 --> 00:31:13,192
Look at all that glowing loot.

578
00:31:14,132 --> 00:31:18,556
Like, that's such an emotional, such a psychologically salient thing.

579
00:31:19,436 --> 00:31:20,617
And players will do this.

580
00:31:20,677 --> 00:31:25,000
They will do activities that are not optimal, that are grindy,

581
00:31:25,240 --> 00:31:27,822
that are otherwise not really particularly fun,

582
00:31:28,323 --> 00:31:30,785
if the psychological saliency is high enough.

583
00:31:32,306 --> 00:31:35,628
So to prevent it, make the logical psychologically salient.

584
00:31:36,189 --> 00:31:36,729
In Fortnite.

585
00:31:37,469 --> 00:31:42,073
The chests and the safes and different things where you find objects and materials in the

586
00:31:42,133 --> 00:31:43,414
world, they glow.

587
00:31:43,494 --> 00:31:45,335
They have this lovely sound to them.

588
00:31:45,996 --> 00:31:48,598
You can hear the sound through walls that attracts you to them.

589
00:31:49,318 --> 00:31:51,320
And they have real world analogues, right?

590
00:31:51,440 --> 00:31:53,521
A chest is where valuable things are.

591
00:31:54,042 --> 00:31:56,323
The same thing for our weapons in Fortnite Battle Royale.

592
00:31:56,764 --> 00:32:00,266
You can look at a weapon, it's got a nice glow on it, it lets you know it's rarity.

593
00:32:00,607 --> 00:32:02,788
It looks kind of like the real world weapon.

594
00:32:02,808 --> 00:32:07,091
You can have the psychological impact of this gun is better than this gun from how it looks.

595
00:32:07,983 --> 00:32:09,764
You can add tips, gameplay clues.

596
00:32:09,884 --> 00:32:11,325
You can highlight new information.

597
00:32:12,725 --> 00:32:16,007
If you can't make it really psychologically salient,

598
00:32:16,067 --> 00:32:18,008
if you can't make it emotive and attractive,

599
00:32:18,388 --> 00:32:21,069
then at least point it out through highlights

600
00:32:21,189 --> 00:32:21,769
or other ways.

601
00:32:23,190 --> 00:32:25,591
You can use selectivity against players

602
00:32:25,891 --> 00:32:27,471
using traps and distractors.

603
00:32:27,812 --> 00:32:29,652
A mimic is a really good example, right?

604
00:32:29,972 --> 00:32:31,933
Players see chests.

605
00:32:32,413 --> 00:32:33,094
This is a very.

606
00:32:34,335 --> 00:32:38,656
Emotional thing for them they run over it to the activator. It's jumps up and it starts attacking them

607
00:32:38,917 --> 00:32:40,757
They didn't spend the time to think about it

608
00:32:41,397 --> 00:32:44,859
They didn't notice that it's in a funny situation or whatever

609
00:32:44,899 --> 00:32:51,361
It might be you can take advantage of the fact that these items will stand out. You can also use them as this detractors

610
00:32:52,122 --> 00:32:59,424
Distractors, sorry, I should say in hidden object games you put like nice glowing things and really pretty things amongst

611
00:32:59,484 --> 00:33:03,166
Where the players actually need to click and drag their attention away from where they need to be

612
00:33:03,630 --> 00:33:05,131
if they're supposed to be thinking it through.

613
00:33:06,972 --> 00:33:10,614
Out of sight, out of mind is also sometimes called the availability

614
00:33:10,814 --> 00:33:14,896
heuristic, which is just simply the things that come easiest to our minds

615
00:33:15,397 --> 00:33:18,638
when we're encountered by encountering an issue

616
00:33:18,919 --> 00:33:22,260
will be typically the things we think are most important

617
00:33:22,461 --> 00:33:26,303
and also the things that we tend to focus on, whatever pops into your head first.

618
00:33:27,143 --> 00:33:29,525
To someone with a hammer, everything looks like a nail.

619
00:33:30,076 --> 00:33:32,838
And again, this is similar to the rigidity problem.

620
00:33:33,258 --> 00:33:35,180
Players will use the tools that you give them,

621
00:33:35,380 --> 00:33:39,363
and unless it's very clear that it's not hammer time,

622
00:33:40,184 --> 00:33:41,885
they should, they'll stick with that.

623
00:33:44,086 --> 00:33:45,908
So to prevent out of sight, out of mind,

624
00:33:46,268 --> 00:33:47,849
you can encourage solution switching

625
00:33:47,889 --> 00:33:49,190
by mixing up enemy types,

626
00:33:49,610 --> 00:33:51,092
by making certain things immune,

627
00:33:51,412 --> 00:33:52,933
and giving strong forcing functions

628
00:33:52,953 --> 00:33:54,354
to move them away from route.

629
00:33:54,374 --> 00:33:56,155
Or you can provide failure-based hints.

630
00:33:56,315 --> 00:33:57,736
Again, similar to the rigidity,

631
00:33:58,077 --> 00:33:58,757
you can pop up,

632
00:33:59,378 --> 00:33:59,458
oh.

633
00:33:59,797 --> 00:34:07,400
the enemies that are red take more damage from ice items or whatever it might be that

634
00:34:07,420 --> 00:34:12,162
you want players to think about that would not usually easily come to mind.

635
00:34:14,423 --> 00:34:18,624
You could of course use out of sight, out of mind by presenting a lot of now looking

636
00:34:18,644 --> 00:34:18,984
problems.

637
00:34:19,024 --> 00:34:20,325
We do this in games all the time.

638
00:34:20,365 --> 00:34:25,087
You give someone a big gun that's good at shooting a lot of people and then the very

639
00:34:25,127 --> 00:34:27,848
next room they go into has a lot of people in it.

640
00:34:28,491 --> 00:34:31,772
This is using the availability heuristic by proving that it's true.

641
00:34:32,052 --> 00:34:32,992
I have this thing.

642
00:34:33,373 --> 00:34:36,974
I've just walked into a room with a lot of ammo and a lot of crates.

643
00:34:37,814 --> 00:34:39,695
I know there's probably a fight through that door.

644
00:34:40,315 --> 00:34:43,716
You can also use it as kind of like a fun part of puzzle games.

645
00:34:43,876 --> 00:34:48,418
Portal would do this in some cases where you'd come into a room and there'd be all this complicated

646
00:34:48,498 --> 00:34:54,840
stuff in the room that looked really important, really like something that you should be thinking

647
00:34:54,880 --> 00:34:55,880
about to solve this puzzle.

648
00:34:56,200 --> 00:34:58,321
But the actual solution was very, very simple.

649
00:34:59,466 --> 00:35:04,489
And this could be an amazing thing for players to have worked it out this complicated way

650
00:35:04,509 --> 00:35:07,691
But then maybe see this really simple way to do it

651
00:35:09,331 --> 00:35:14,934
Confirmation bias is so well known. I almost left it out, but it's essentially that people put efforts towards what they expect

652
00:35:17,155 --> 00:35:18,676
The joke example here is that

653
00:35:19,317 --> 00:35:22,538
Tilted towers and in fortnite battle royale if you don't know is

654
00:35:22,778 --> 00:35:26,600
Somewhere there where a lot of people like to land it was it's a high loot location

655
00:35:27,030 --> 00:35:28,871
A lot of players land there at the start of the game.

656
00:35:29,391 --> 00:35:33,571
We introduced a new location called Lucky Landing and this was kind of a meme that come

657
00:35:33,632 --> 00:35:38,492
up as, hey, why are still people landing at Tilted when they could go to Lucky Landing

658
00:35:38,852 --> 00:35:41,473
where it's a little less hectic but there's still good loot there.

659
00:35:41,893 --> 00:35:46,954
And that's because they know that Tilted Towers is the place to go.

660
00:35:46,974 --> 00:35:50,495
They already know that so they're just going to keep doing what they expect to work.

661
00:35:51,635 --> 00:35:53,275
Whatever confirms their expectations.

662
00:35:53,395 --> 00:35:54,875
And when they do land there, there is loot.

663
00:35:56,893 --> 00:36:00,876
To prevent confirmation bias, understand your players' expectations, make sure they're met,

664
00:36:01,217 --> 00:36:06,641
and strongly predict contradictory information if you want them to not have this bias, which

665
00:36:06,661 --> 00:36:07,622
is a very natural one.

666
00:36:08,603 --> 00:36:12,586
So another example from Paragon is that when Paragon first launched, we had these really

667
00:36:12,626 --> 00:36:14,908
lovely towers.

668
00:36:15,088 --> 00:36:15,688
It's a MOBA.

669
00:36:16,709 --> 00:36:19,672
And they're these beautiful, art-crafted towers.

670
00:36:19,692 --> 00:36:24,075
They look amazing with this huge bubble on top, and when you're approaching them, they

671
00:36:24,115 --> 00:36:25,656
tag at you, and they shoot at you.

672
00:36:26,033 --> 00:36:26,914
It looks really awesome.

673
00:36:28,055 --> 00:36:30,657
But the thing you have to destroy to take out the towers

674
00:36:30,717 --> 00:36:33,619
is that little crystal down in the bottom left there.

675
00:36:34,600 --> 00:36:36,122
So what we would see is players would actually

676
00:36:36,162 --> 00:36:38,964
try and attack this huge big thing, and it does nothing.

677
00:36:39,144 --> 00:36:41,626
It was what they expected.

678
00:36:41,686 --> 00:36:42,807
It's where they put their effort.

679
00:36:42,927 --> 00:36:44,889
Even with contradictory information coming in

680
00:36:44,929 --> 00:36:46,631
of them getting shot, of doing no damage,

681
00:36:46,671 --> 00:36:48,012
they would go for these big towers.

682
00:36:48,793 --> 00:36:50,234
So eventually over time, we moved to this design

683
00:36:50,254 --> 00:36:51,235
where it was a little bit more complicated.

684
00:36:52,357 --> 00:36:58,541
The tower was the crystal and this big tower was replaced by a turret that would open up and have a gun in it and track you around.

685
00:36:58,901 --> 00:37:02,643
Because this lined up expectations with what the players were after.

686
00:37:02,663 --> 00:37:09,307
Alright, another one is overconfidence. Now, this is typically an error.

687
00:37:09,667 --> 00:37:14,110
And I think this is one of the strongest examples of one that's not an error in games in most cases.

688
00:37:15,885 --> 00:37:18,666
Overconfidence, where we disregard signs that are saying,

689
00:37:18,726 --> 00:37:21,326
hey, you're doing the bad thing, is actually what we want players

690
00:37:21,366 --> 00:37:23,067
to be doing nearly all the time in our games.

691
00:37:23,627 --> 00:37:25,348
It's really natural to be overconfident.

692
00:37:25,408 --> 00:37:27,748
In our games, when they see this, I have a gun.

693
00:37:28,508 --> 00:37:30,289
I'll shoot you if you come in here.

694
00:37:31,029 --> 00:37:33,010
We don't really expect our players to turn around.

695
00:37:33,070 --> 00:37:36,411
We want them to keep on going when they see these messages written

696
00:37:36,451 --> 00:37:37,331
in blood on the walls.

697
00:37:39,512 --> 00:37:41,032
If you do really want to prevent this.

698
00:37:41,860 --> 00:37:45,483
If you feel there's situations where people, you want to knock someone down or you want to show

699
00:37:45,883 --> 00:37:49,025
that maybe their character's not very powerful, there are ways to do it

700
00:37:49,645 --> 00:37:53,767
by putting fortune functions in or having the player be defeated.

701
00:37:53,867 --> 00:37:55,268
You do have to be careful about them.

702
00:37:56,009 --> 00:37:59,931
This is a classic thing that many of the Bioware games have done where they give you a boss fight

703
00:38:00,851 --> 00:38:03,993
partway through the game and you get beaten by that boss.

704
00:38:04,453 --> 00:38:05,614
And there's nothing you can do about it.

705
00:38:05,654 --> 00:38:06,955
There's no way to beat the boss.

706
00:38:06,975 --> 00:38:10,237
And this is to try and reinforce that maybe you're not powerful enough at this point.

707
00:38:10,657 --> 00:38:10,797
But...

708
00:38:11,261 --> 00:38:14,143
If handled incorrectly it can feel like a real cheat to players.

709
00:38:14,204 --> 00:38:15,505
So you do have to be careful with it.

710
00:38:15,765 --> 00:38:18,107
Because remember all the time your players think they can do it.

711
00:38:18,167 --> 00:38:19,928
That's why they keep playing your game.

712
00:38:20,289 --> 00:38:23,091
If you really convince them they can't,

713
00:38:23,892 --> 00:38:24,752
they're probably going to stop.

714
00:38:26,374 --> 00:38:27,054
But you can use it.

715
00:38:27,155 --> 00:38:29,717
Every game, every day game design relies on this.

716
00:38:29,777 --> 00:38:30,597
Things getting harder.

717
00:38:31,038 --> 00:38:32,459
Throwing challenge spikes at players.

718
00:38:32,719 --> 00:38:35,802
They'll keep on going because generally speaking we're overconfident.

719
00:38:36,362 --> 00:38:39,805
In Dark Souls, there's this huge boss you meet early on.

720
00:38:40,162 --> 00:38:43,744
but players are going to attack the boss because, well, why else would it be there?

721
00:38:43,925 --> 00:38:47,568
Like, we can take it, and then they get killed, which introduces the

722
00:38:49,089 --> 00:38:52,652
death mechanic in the game. You do have to be careful around this to make it clear

723
00:38:52,692 --> 00:38:56,034
what's happening, make sure that it's fair, but it is just part of everyday game design.

724
00:38:57,776 --> 00:38:59,057
Bias reviewing is simply

725
00:39:00,878 --> 00:39:02,179
you're thinking through what you need to do

726
00:39:02,480 --> 00:39:05,762
and you go, I've thought of everything that I can think of, so, yep, cool.

727
00:39:06,250 --> 00:39:10,913
But you can't think of things that you can't think of or that you don't know, like unexpected information.

728
00:39:11,833 --> 00:39:15,355
So of course to prevent this, very simple, it's very well used in a lot of games.

729
00:39:15,395 --> 00:39:19,877
You provide actually check-off lists that have nothing left out that the player can carry with them.

730
00:39:20,437 --> 00:39:23,219
They then don't do this bias reviewing because there's no bias.

731
00:39:23,279 --> 00:39:25,040
They have the review list, they go through it.

732
00:39:28,353 --> 00:39:32,477
You can use bias reviewing against players by not providing progression logs.

733
00:39:32,517 --> 00:39:35,620
If you do think it's important for your game, that part of the challenge of your game is

734
00:39:35,720 --> 00:39:40,304
to actually think of all the things and keep them in memory and be able to do that.

735
00:39:40,864 --> 00:39:44,368
Or you can provide progression but leave information out or change things up.

736
00:39:44,848 --> 00:39:50,613
In the Shadow of Mordor games, you build these examples of orcs, you find out what their

737
00:39:50,633 --> 00:39:54,176
weaknesses are, and then when you go to fight them, maybe another orc shows up that you

738
00:39:54,216 --> 00:39:54,797
don't know about.

739
00:39:55,057 --> 00:39:56,718
Or maybe partway through the fight, the orc...

740
00:39:57,548 --> 00:39:59,450
weakness changes or their tactics mix up.

741
00:40:00,210 --> 00:40:03,213
So, this is using the fact that the player feels prepared

742
00:40:03,513 --> 00:40:05,395
and then throwing them a bit of a loop.

743
00:40:07,136 --> 00:40:11,400
Halo effects are that good attributes in one area rub off onto others.

744
00:40:11,440 --> 00:40:15,743
We tend to think that people who are attractive are also smart and kind.

745
00:40:16,044 --> 00:40:19,606
People who are less attractive are dumb and mean.

746
00:40:20,467 --> 00:40:23,029
This can also apply to games. You can use this in your game.

747
00:40:23,290 --> 00:40:25,591
If your game looks nice and polished,

748
00:40:25,971 --> 00:40:30,855
people will actually be a little bit more forgiving to it than if it looks rough and

749
00:40:31,555 --> 00:40:33,277
unpolished because of this halo effect.

750
00:40:34,258 --> 00:40:37,280
We can prevent this by subverting and challenging expectations.

751
00:40:37,860 --> 00:40:40,503
Halo effects exist because of the society around us.

752
00:40:40,943 --> 00:40:45,687
So for a long time orcs were bad guys, then orcs started to be shown as good.

753
00:40:45,727 --> 00:40:47,488
This was subverting the halo effect.

754
00:40:47,868 --> 00:40:52,993
And probably nowadays the good orc is actually an expected thing, so this may not apply over

755
00:40:53,033 --> 00:40:53,253
time.

756
00:40:53,747 --> 00:40:56,568
But this is one example of going against Halo effects.

757
00:40:57,109 --> 00:40:58,449
And of course, we use them all the time

758
00:40:58,489 --> 00:40:59,850
by making good characters look good,

759
00:41:00,190 --> 00:41:01,430
make evil characters look evil.

760
00:41:01,870 --> 00:41:03,571
We always want to punch Nazis.

761
00:41:07,193 --> 00:41:10,314
The last two things here are related to each other.

762
00:41:10,714 --> 00:41:12,055
One is problems with causality.

763
00:41:12,515 --> 00:41:14,876
This is essentially that players tend

764
00:41:14,896 --> 00:41:18,057
to underestimate future irregularities, which

765
00:41:18,097 --> 00:41:20,218
means they tend to think how things are going now

766
00:41:20,278 --> 00:41:21,458
is how things will go in the future.

767
00:41:22,232 --> 00:41:30,701
They have the representative heuristic, which is the idea that big outcomes should come

768
00:41:30,781 --> 00:41:35,246
from big causes, and small outcomes should come from small causes.

769
00:41:35,306 --> 00:41:41,372
So they should expect if something blows up, there's something big that caused it to blow

770
00:41:41,472 --> 00:41:41,512
up.

771
00:41:42,527 --> 00:41:44,027
But if something small and subtle happens,

772
00:41:44,108 --> 00:41:46,689
they expect something small and subtle to have led to that.

773
00:41:47,189 --> 00:41:49,050
Illusion of control is essentially

774
00:41:49,110 --> 00:41:50,791
that if you give players control,

775
00:41:50,832 --> 00:41:55,134
they'll feel like they can have more control over random

776
00:41:55,194 --> 00:41:56,635
outcomes than they actually have.

777
00:41:57,395 --> 00:41:58,596
Correlation is causation.

778
00:41:58,716 --> 00:42:00,577
People, as not causation, people tend

779
00:42:00,617 --> 00:42:03,399
to associate things that happen at the same time together.

780
00:42:03,719 --> 00:42:07,021
And hindsight bias is simply that once something has

781
00:42:07,081 --> 00:42:08,742
happened and you think back on it,

782
00:42:09,423 --> 00:42:11,884
it becomes kind of very obvious that it would have happened.

783
00:42:12,830 --> 00:42:16,893
And it feels like you should have known beforehand. It can be a very big problem in UX

784
00:42:18,013 --> 00:42:23,037
And for people giving talks about these kind of things because they seem very common sense after you've heard them

785
00:42:25,798 --> 00:42:30,761
For event problems with causality, this is why we put so many feedback systems in games. This is why we

786
00:42:31,702 --> 00:42:37,726
Put progression systems power growth mapping systems. We match players expectations. We help

787
00:42:38,172 --> 00:42:43,454
overcome these cognitive biases by providing systems in the game that accurately let them see

788
00:42:44,135 --> 00:42:47,457
how their progression will go, that things are going to change in the future.

789
00:42:48,797 --> 00:42:55,121
And we of course use this all the time by just giving players control and feedback. By doing that we involve them in our games.

790
00:42:55,901 --> 00:43:01,044
It makes them feel like they have more power than they actually have when we really make them...

791
00:43:02,044 --> 00:43:04,526
their actions matter through strong feedback. So...

792
00:43:05,949 --> 00:43:07,989
Match 3 games are a really good example of this.

793
00:43:08,229 --> 00:43:11,870
You have very little control over what's going to fall in when you make a match.

794
00:43:12,630 --> 00:43:14,951
But because you're the one making the match,

795
00:43:15,251 --> 00:43:19,251
and the game makes so much big deal about it with all these popping things,

796
00:43:19,551 --> 00:43:21,972
it feels like you're really smart and in control.

797
00:43:24,372 --> 00:43:26,153
The last one is problems with complexity.

798
00:43:26,973 --> 00:43:29,833
This is essentially, we're really bad at delayed feedback.

799
00:43:30,233 --> 00:43:34,154
So if we press a button and nothing blows up or nothing obviously happens,

800
00:43:35,503 --> 00:43:37,504
we're going to have problems working out what happened.

801
00:43:38,044 --> 00:43:41,405
Things need to be close to each other for us to understand them in most cases.

802
00:43:42,065 --> 00:43:45,505
We tend to think in causal series. We like to think that this causes this,

803
00:43:45,825 --> 00:43:49,666
which causes this, which causes this, which we know isn't true in game design, right?

804
00:43:50,046 --> 00:43:54,147
We make systems that have all these emergent properties where systems all interact with

805
00:43:54,167 --> 00:43:58,008
each other and aren't necessarily causal. But your player is likely to think they're

806
00:43:58,028 --> 00:44:01,389
kind of very causal. And we have difficulties with exponentials.

807
00:44:01,429 --> 00:44:04,129
We're much better with linear growth than we are with exponential growth.

808
00:44:04,583 --> 00:44:08,505
which is partly why exponential progression can feel very

809
00:44:08,565 --> 00:44:09,585
unrewarding to players.

810
00:44:10,085 --> 00:44:12,266
And there has been a recent move towards more linear

811
00:44:12,286 --> 00:44:14,987
progression systems as they're more understandable and more

812
00:44:15,027 --> 00:44:16,448
in line with player expectations.

813
00:44:17,668 --> 00:44:20,449
So to prevent it, feedback, visualization, and clarity,

814
00:44:20,829 --> 00:44:22,630
really letting the player know what's really

815
00:44:22,650 --> 00:44:23,390
happening in the game.

816
00:44:23,510 --> 00:44:28,252
Same with the similar thing, the last issue.

817
00:44:28,832 --> 00:44:32,833
Here's an example from Ubisoft's game, For Honor.

818
00:44:33,305 --> 00:44:35,006
where they're just showing the monetization,

819
00:44:35,026 --> 00:44:37,087
a lot better than a lot of games do,

820
00:44:37,127 --> 00:44:39,449
where they actually just put a simple bar graph in to show,

821
00:44:39,909 --> 00:44:41,230
hey, when you mouse over things,

822
00:44:41,290 --> 00:44:42,831
it shows you how much base you'll get

823
00:44:42,911 --> 00:44:44,012
and how much bonus you'll get.

824
00:44:44,272 --> 00:44:48,034
This is so much better than making the player do maths

825
00:44:48,215 --> 00:44:52,017
by adding things up by like 20% off and plus 100s and whatever.

826
00:44:52,377 --> 00:44:55,559
This actually clearly shows the benefit of going at each stage.

827
00:44:57,260 --> 00:44:58,461
All right, so to finish off,

828
00:44:58,501 --> 00:44:59,722
I'm going to talk about a systems view,

829
00:44:59,742 --> 00:45:01,743
which is kind of a holistic way of dealing with error.

830
00:45:04,118 --> 00:45:09,380
The systems view at its heart is a safety culture view versus what would be a more traditional

831
00:45:09,440 --> 00:45:10,260
blame culture.

832
00:45:10,800 --> 00:45:15,081
And it's a recognition of the fact that errors are caused by system interactions, as I was

833
00:45:15,121 --> 00:45:15,621
talking about.

834
00:45:15,941 --> 00:45:18,962
Errors arise out of a lot of complicated things.

835
00:45:19,462 --> 00:45:26,064
And this error that we make naturally to think in causal systems also applies when we think

836
00:45:26,104 --> 00:45:26,564
about error.

837
00:45:26,984 --> 00:45:31,685
We like to think that errors happen because someone did this and then this happened and

838
00:45:31,705 --> 00:45:33,385
then that happened and then that happened.

839
00:45:34,119 --> 00:45:35,400
But that's not how errors happen.

840
00:45:35,420 --> 00:45:38,461
They tend to come about out of much complicated systems.

841
00:45:39,141 --> 00:45:43,062
And so the idea is rather than look to one person or look to

842
00:45:43,183 --> 00:45:46,844
one cause and then blame that and stop, you look to the

843
00:45:46,904 --> 00:45:49,685
system, you look to what caused that to occur.

844
00:45:50,125 --> 00:45:51,346
Blame stagnates things.

845
00:45:51,426 --> 00:45:52,946
It stops you at that point.

846
00:45:53,326 --> 00:45:56,988
Whereas a systems view, a safety view, lets you learn,

847
00:45:57,248 --> 00:45:58,708
it lets you improve and innovate.

848
00:45:59,989 --> 00:46:01,790
Where cheese is involved is a.

849
00:46:03,319 --> 00:46:07,500
Common model used in this is called the latent failure model or the Swiss cheese model.

850
00:46:08,240 --> 00:46:12,461
And while this is still kind of a linear line, what it suggests is within organizations and

851
00:46:12,501 --> 00:46:15,642
also within games, there's all these different systems interacting.

852
00:46:16,402 --> 00:46:18,663
And most of the time, they're solid, they're good systems.

853
00:46:19,103 --> 00:46:20,883
But within each system, there'll be holes.

854
00:46:21,523 --> 00:46:25,144
And then when certain systems all line up with each other, an error will occur when

855
00:46:25,184 --> 00:46:26,464
all those holes line up.

856
00:46:26,824 --> 00:46:30,725
It wasn't just one piece of cheese, all four pieces of cheese had to be in a line.

857
00:46:33,202 --> 00:46:37,364
Now, a system view on players is kind of the heart of usability and the heart of UX.

858
00:46:38,845 --> 00:46:43,629
When we write UX reports, we don't write the player was confused because that puts the

859
00:46:43,669 --> 00:46:44,449
blame on the player.

860
00:46:45,030 --> 00:46:52,455
We write what the issue was, so for example, this color, the color blue was not readable

861
00:46:52,535 --> 00:46:53,155
on the background.

862
00:46:53,735 --> 00:46:56,237
Then we write what the outcome was, the player couldn't read it.

863
00:46:57,437 --> 00:46:59,098
And that's how we present a UX issue.

864
00:46:59,378 --> 00:47:01,458
It's not putting the blame on the player,

865
00:47:01,798 --> 00:47:03,819
it's looking to what the systematic reason is.

866
00:47:04,539 --> 00:47:07,260
It's not to say, get good or players are just dumb.

867
00:47:07,720 --> 00:47:10,121
We look at the system to see what is causing it.

868
00:47:10,201 --> 00:47:12,401
Look deeper so it won't happen again in the future.

869
00:47:13,462 --> 00:47:14,822
And one thing I do want to end on is,

870
00:47:15,022 --> 00:47:16,783
we can also apply all this in workplaces.

871
00:47:17,043 --> 00:47:18,763
That's where human error is applied,

872
00:47:18,903 --> 00:47:20,424
generally speaking, outside of games.

873
00:47:21,184 --> 00:47:22,804
And within our own workplaces,

874
00:47:22,944 --> 00:47:24,745
we should also be thinking in a systematic way

875
00:47:24,785 --> 00:47:25,705
and not looking to blame.

876
00:47:26,159 --> 00:47:28,541
It can often be the case with our players, right?

877
00:47:29,142 --> 00:47:33,466
If something goes wrong in a game, they may find just one dev and just pile on them and

878
00:47:33,506 --> 00:47:36,430
blame that one dev who they say was responsible for it.

879
00:47:37,090 --> 00:47:38,892
But it happens within our workplaces too.

880
00:47:39,553 --> 00:47:43,918
We sometimes have a tendency to just look at somebody and blame them for a mistake.

881
00:47:44,438 --> 00:47:46,460
And that's not to say that people aren't responsible.

882
00:47:47,080 --> 00:47:49,943
But within our own workplaces, the errors that occur

883
00:47:49,983 --> 00:47:51,384
are due to systematic problems.

884
00:47:51,724 --> 00:47:52,805
Crunch is an example.

885
00:47:53,125 --> 00:47:56,507
Crunch happens because planning wasn't in the right place

886
00:47:56,567 --> 00:47:57,708
or whatever it may be.

887
00:47:58,429 --> 00:48:01,371
Lots of factors deliver into it, not just one individual.

888
00:48:02,332 --> 00:48:05,014
And with my own team, I lead the UX team,

889
00:48:05,314 --> 00:48:07,616
when something goes wrong, when somebody makes a mistake

890
00:48:07,676 --> 00:48:09,657
and an error occurs, I talk to them about it,

891
00:48:09,958 --> 00:48:12,239
and I talk to the wider team, and I try and find out

892
00:48:12,640 --> 00:48:14,321
what were the circumstances around that?

893
00:48:14,721 --> 00:48:16,843
What were the demands placed by different things?

894
00:48:17,357 --> 00:48:18,979
What were the systems going on?

895
00:48:19,159 --> 00:48:22,482
Because if I can find that out, rather than just shouting at one person,

896
00:48:23,002 --> 00:48:25,525
I can make sure that that does not happen again,

897
00:48:25,645 --> 00:48:26,926
and I'd never have to deal with it.

898
00:48:27,547 --> 00:48:29,448
Whereas if I just blame that one person,

899
00:48:29,749 --> 00:48:32,691
they may not let me know next time something goes wrong,

900
00:48:33,212 --> 00:48:34,393
they may leave the company,

901
00:48:34,973 --> 00:48:37,215
they may not work better,

902
00:48:37,456 --> 00:48:39,477
they may just become resentful.

903
00:48:40,861 --> 00:48:47,364
These errors may happen over and over again because I haven't changed what actually the problem was, which is systematic.

904
00:48:48,984 --> 00:48:54,407
So, a summary. All humans make errors to err as human.

905
00:48:55,127 --> 00:48:58,889
Errors are what make human behavior interesting, unpredictable, and fun.

906
00:48:59,329 --> 00:49:03,851
We use errors all the time in game design, and we want those intentional errors,

907
00:49:03,891 --> 00:49:07,432
the errors that are part of challenge, part of the fun of games to occur.

908
00:49:07,712 --> 00:49:08,473
What we don't want...

909
00:49:08,934 --> 00:49:11,917
is the unintended ones that make players frustrated and leave our games.

910
00:49:13,218 --> 00:49:18,685
And to do that we can embrace fun error, prevent unintended error, and look to systems both

911
00:49:18,725 --> 00:49:25,713
within our games and within our workplaces to really improve and not just focus on individuals.

912
00:49:27,435 --> 00:49:28,035
Thank you very much.

913
00:49:40,264 --> 00:49:41,945
So again, please remember the evaluation.

914
00:49:42,245 --> 00:49:44,485
And I think I've got 10 minutes for questions.

915
00:49:54,849 --> 00:49:55,389
No questions?

916
00:49:56,709 --> 00:49:56,750
OK.

917
00:49:56,770 --> 00:50:00,791
I know that in some of the cataloging schemes,

918
00:50:01,331 --> 00:50:06,073
they look like outright blind to you about some of the systems.

919
00:50:25,196 --> 00:50:25,456
Okay.

920
00:50:25,516 --> 00:50:30,178
So, the question was, I didn't quite catch the developer but there's a developer that

921
00:50:30,678 --> 00:50:31,259
pathologic?

922
00:50:33,000 --> 00:50:33,360
The void?

923
00:50:33,620 --> 00:50:33,760
Okay.

924
00:50:35,074 --> 00:50:40,699
they have NPCs lie to you as part of a tutorial, presumably because the NPC is unreliable?

925
00:50:40,839 --> 00:50:42,080
Is that what they're trying to establish?

926
00:50:42,240 --> 00:50:43,941
They're trying to establish characterization.

927
00:50:43,961 --> 00:50:53,829
The NPCs benefit if you do this.

928
00:50:53,849 --> 00:50:54,089
Okay, right.

929
00:50:54,109 --> 00:50:58,893
I mean, fundamentally, what you're trying to do there is you are trying to give players

930
00:50:59,073 --> 00:51:00,975
false information to form bad rules.

931
00:51:02,631 --> 00:51:06,452
That's fine as long as the feedback is clear what's happening and what's happened.

932
00:51:07,112 --> 00:51:13,393
Once they do follow that, like I assume the NPC laughs at them or informs them that they've been tricked or

933
00:51:14,254 --> 00:51:17,094
do they never find out? I'm not sure, I haven't played these games but

934
00:51:20,335 --> 00:51:25,436
again, if that's the intent to make these NPCs unreliable then that's perfectly fine.

935
00:51:25,456 --> 00:51:29,917
It's okay for people to make errors and be tricked by your game, it's fun.

936
00:51:31,064 --> 00:51:35,827
You just don't want that to happen and them to feel like they don't know why it just happened

937
00:51:38,770 --> 00:51:40,951
There's a there's a mic there if you could use it, sorry

938
00:51:40,971 --> 00:51:44,754
Hi

939
00:51:45,535 --> 00:51:48,377
Portal 2 I think does a version of this where in the beginning

940
00:51:49,418 --> 00:51:53,681
When you wake up Wheatley is trying to get you to do I forget what it is like talk

941
00:51:53,761 --> 00:51:56,883
maybe and he keeps you get the instruction on screen like press a

942
00:51:57,525 --> 00:52:00,726
to talk and when you do it you jump and then he's like no no what you're doing

943
00:52:00,786 --> 00:52:05,147
is jumping and then again it says press A to talk or whatever and he keeps saying

944
00:52:05,187 --> 00:52:09,248
like you know no that's a jump and then eventually he's like oh let's move on

945
00:52:09,609 --> 00:52:12,289
but basically it's just taught you A is jump and you're going to use that from

946
00:52:12,309 --> 00:52:16,290
then on and it's hilarious so yeah that might be a similar yeah and also that's

947
00:52:16,350 --> 00:52:22,352
a really good example of psychological saliency we tend to remember things that

948
00:52:22,372 --> 00:52:23,412
are funny or make us laugh

949
00:52:24,034 --> 00:52:35,220
And with that clear feedback loop of you press the button and you jumped and then there was him saying that you jumped and the repetition of it, that helps it be something that you learn and something you're not going to make a mistake about in the future.

950
00:52:41,283 --> 00:52:42,063
Any other questions?

951
00:52:43,844 --> 00:52:50,508
Okay, doesn't look like it. If anybody does want to talk to me, I'll be up front here a little bit and then I'll go around to the area.

