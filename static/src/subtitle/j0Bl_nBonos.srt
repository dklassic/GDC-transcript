1
00:00:06,809 --> 00:00:07,650
Thank you for coming today.

2
00:00:08,430 --> 00:00:09,330
My name's Camille Chiu.

3
00:00:10,171 --> 00:00:13,173
I'm the art animation lead at Monolith Productions.

4
00:00:13,493 --> 00:00:15,854
And with me today is Sean Peel, our advanced animator.

5
00:00:16,334 --> 00:00:18,876
We're going to talk about the process of creating

6
00:00:18,896 --> 00:00:21,737
the multi-character combat animations in Middle Earth

7
00:00:21,757 --> 00:00:23,458
Shadow of War, or what could also

8
00:00:23,498 --> 00:00:25,819
be known as the pursuit of murdering a lot of orcs.

9
00:00:26,400 --> 00:00:28,941
So if you have any adversity to violence,

10
00:00:28,961 --> 00:00:30,302
there is a little bit in this show.

11
00:00:30,422 --> 00:00:32,963
So feel free to vamooska if it offends you.

12
00:00:34,601 --> 00:00:36,042
So our goals today are just to give you

13
00:00:36,062 --> 00:00:37,663
a little insight behind the curtain

14
00:00:38,124 --> 00:00:41,086
and what we do in the monolith pipeline and share knowledge.

15
00:00:41,126 --> 00:00:43,128
So hopefully you come away with a couple of nuggets you can use.

16
00:00:44,769 --> 00:00:47,371
I'll start off with talking about what Shadow of War was

17
00:00:47,391 --> 00:00:49,913
and what the multi-character combat animations were to us,

18
00:00:50,614 --> 00:00:53,436
our goals in achieving those animations and the challenges

19
00:00:53,476 --> 00:00:54,497
they presented with us.

20
00:00:54,537 --> 00:00:56,398
And then we'll talk about a plan of attack

21
00:00:56,438 --> 00:00:57,839
for overcoming those challenges.

22
00:00:57,899 --> 00:00:59,240
And then I'll pass it off to John

23
00:00:59,260 --> 00:01:01,442
to do an animation tools process and deep dive.

24
00:01:03,508 --> 00:01:06,992
So Shadow of War was an action RPG released last year by Monolith,

25
00:01:07,052 --> 00:01:08,833
and it was the sequel to Shadow of Mordor.

26
00:01:09,554 --> 00:01:12,537
The player controls two characters set in Tolkien's landscape,

27
00:01:12,958 --> 00:01:15,440
Talion and Celebrimbor, in their conquest for Middle-earth

28
00:01:15,841 --> 00:01:17,082
and their fight against Sauron.

29
00:01:17,462 --> 00:01:19,645
And so in case anybody is unfamiliar with the content,

30
00:01:19,665 --> 00:01:21,887
we created a quick video to familiarize yourself.

31
00:02:18,428 --> 00:02:18,968
Yay!

32
00:02:24,132 --> 00:02:28,415
There was a lot of animation in that video, but what are the multi-character combat animations

33
00:02:28,475 --> 00:02:28,815
in there?

34
00:02:28,955 --> 00:02:33,018
So, particularly what we're going to talk about today is what Monolith calls our Sync

35
00:02:33,118 --> 00:02:37,801
Actions, which is any action in the game in which we snap the two players together in

36
00:02:37,841 --> 00:02:41,464
order to perform two animations in perfect alignment and synchronicity.

37
00:02:42,484 --> 00:02:47,686
We use this a lot for motions where we want the characters to grapple with each other

38
00:02:47,706 --> 00:02:51,127
or get a particular weapon into a certain part of the body part.

39
00:02:51,147 --> 00:02:54,928
And they're very different from the non-sync actions you can see on the left.

40
00:02:55,308 --> 00:03:01,090
Talion would look perfectly great performing that action all by himself or if there is an orc in the vicinity.

41
00:03:01,450 --> 00:03:04,671
Whereas he's going to look really funny if he performs the one on the right by himself.

42
00:03:05,987 --> 00:03:07,887
So to understand why they were important to us,

43
00:03:08,228 --> 00:03:09,748
I just want to talk about some of the goals

44
00:03:09,788 --> 00:03:12,709
that we had in creating those sync actions.

45
00:03:13,110 --> 00:03:14,850
The two of them that were really important to us

46
00:03:14,910 --> 00:03:16,251
was that we wanted to take the player

47
00:03:16,351 --> 00:03:17,551
into the heart of darkness.

48
00:03:18,012 --> 00:03:19,672
We wanted them to be able to become

49
00:03:19,712 --> 00:03:21,013
the monster to the monsters.

50
00:03:21,373 --> 00:03:23,214
And the sync actions allowed us to explore

51
00:03:23,254 --> 00:03:26,415
some really brutal and grotesque performances.

52
00:03:26,875 --> 00:03:29,076
So it allowed us to really take them to that monstrous area.

53
00:03:29,557 --> 00:03:31,457
And then in the consumer values area,

54
00:03:31,777 --> 00:03:34,259
we wanted the player to really experience

55
00:03:34,299 --> 00:03:37,860
visceral, lethal combat and predator gameplay.

56
00:03:38,360 --> 00:03:40,121
And so when I first heard that,

57
00:03:40,441 --> 00:03:42,102
I thought I understood what it meant,

58
00:03:42,182 --> 00:03:43,823
but it really is because of the tone

59
00:03:43,883 --> 00:03:47,064
that people would say visceral as.

60
00:03:47,144 --> 00:03:49,165
I need the combat to be visceral,

61
00:03:49,225 --> 00:03:51,786
and I need the animation to be more visceral, Camille.

62
00:03:52,386 --> 00:03:55,168
And so around the 50th time that I heard that,

63
00:03:55,208 --> 00:03:56,429
I realized that I should go to the internet

64
00:03:56,469 --> 00:03:57,709
and find out exactly what that means.

65
00:03:58,250 --> 00:04:01,451
And so it means coming from strong emotions

66
00:04:01,612 --> 00:04:03,253
and not from logic or reason.

67
00:04:03,833 --> 00:04:06,374
We wanted to evoke strong emotions from the player

68
00:04:06,414 --> 00:04:07,315
when playing this game.

69
00:04:07,615 --> 00:04:09,896
And we had a lot of birds in flight in order to do that.

70
00:04:10,197 --> 00:04:12,298
Some people might have heard about the nemesis system.

71
00:04:12,958 --> 00:04:15,260
Chris Hoagy is going to be giving a talk later this week.

72
00:04:15,300 --> 00:04:15,820
It's awesome.

73
00:04:15,960 --> 00:04:17,101
He's going to deep dive into it.

74
00:04:17,461 --> 00:04:19,122
But in a nutshell, it's a.

75
00:04:19,922 --> 00:04:23,504
A system designed to provoke strong player emotions

76
00:04:23,584 --> 00:04:26,306
through these long-term interactions with the orcs.

77
00:04:27,107 --> 00:04:28,888
Player commitment and time will allow

78
00:04:28,928 --> 00:04:31,089
them to interact and interface with these orcs

79
00:04:31,149 --> 00:04:33,911
in special ways and evoke those strong emotions.

80
00:04:33,971 --> 00:04:35,752
But it was a very logical system.

81
00:04:36,152 --> 00:04:38,553
And we want to be able to drop the player in the game

82
00:04:38,833 --> 00:04:42,376
and basically get to see any of these faces on them

83
00:04:42,416 --> 00:04:44,357
within the first 10 minutes of playing combat.

84
00:04:44,857 --> 00:04:45,838
So how are we going to do that?

85
00:04:47,524 --> 00:04:50,186
So we took a lot of inspiration from the Arkham formula.

86
00:04:50,346 --> 00:04:52,068
And here's a video, just basic combat,

87
00:04:52,428 --> 00:04:54,711
player hitting X to attack, Y to counter,

88
00:04:55,131 --> 00:04:58,495
B to stun, A to dodge, and this felt really great.

89
00:04:58,515 --> 00:05:01,638
It was really fun, but it was missing that spike,

90
00:05:01,718 --> 00:05:04,681
that moment to really bring the player into the moment.

91
00:05:05,502 --> 00:05:11,129
And so here's a comparative video with the addition, same combat, but with the addition

92
00:05:11,149 --> 00:05:17,016
of the sync actions, the execution pool. So you can see it really added this moment to break up

93
00:05:17,076 --> 00:05:20,981
the rhythm of combat and had that crescendo moment to dive that camera in there.

94
00:05:21,361 --> 00:05:26,384
and really allow that player to experience that brutal, monstrous, visceral moment in

95
00:05:26,464 --> 00:05:27,005
combat.

96
00:05:27,325 --> 00:05:32,448
And we knew that we had hit that moment of success when we were in a company play-through

97
00:05:32,528 --> 00:05:37,411
and a new sync action came on the projector and everybody in the room goes, ugh.

98
00:05:38,152 --> 00:05:43,375
And so we felt like we had found a pretty good recipe to success and the sync actions

99
00:05:43,435 --> 00:05:47,538
were definitely going to be a key ingredient, but they presented some challenges.

100
00:05:48,258 --> 00:05:52,539
Multi-character combat sync actions are expensive and time-consuming to create.

101
00:05:53,260 --> 00:05:58,301
From a content creation standpoint, it's understandably going to take a lot longer to animate those

102
00:05:58,341 --> 00:06:01,441
two characters struggling against each other than that basic swing.

103
00:06:02,441 --> 00:06:06,022
From an integration standpoint, it's going to be a lot more intense on everybody down

104
00:06:06,062 --> 00:06:06,642
the pipe, too.

105
00:06:06,682 --> 00:06:12,624
The designers to integrate it, the camera team to present that animation, the audio

106
00:06:12,664 --> 00:06:17,525
team to really accentuate that moment, and the effects team to make all that custom effects.

107
00:06:18,780 --> 00:06:22,222
Additionally, it's going to be very hard to, it's going to have a lot of things that can

108
00:06:22,642 --> 00:06:23,282
go wrong with it.

109
00:06:23,322 --> 00:06:27,924
What if the player is against a ledge or one of the characters start on a box or the terrain

110
00:06:27,984 --> 00:06:28,604
is uneven?

111
00:06:29,304 --> 00:06:32,105
There's a lot that can go wrong with those sync actions.

112
00:06:32,165 --> 00:06:35,927
And so we had to dedicate quite a bit of time and make sure that they worked.

113
00:06:36,007 --> 00:06:41,789
I think it was probably one of our lead engineers last three months of the pipeline, just troubleshooting

114
00:06:41,809 --> 00:06:43,390
and making sure those things look sweet in game.

115
00:06:45,126 --> 00:06:49,440
Additionally, our team is not the biggest, we're not small, but we were pretty small

116
00:06:49,480 --> 00:06:52,209
in comparison to some of the games that we were trying to compete against.

117
00:06:53,590 --> 00:06:55,711
And we're going to need a lot of them.

118
00:06:56,611 --> 00:07:00,553
We shipped with around 1,200 between just the player

119
00:07:00,633 --> 00:07:01,613
and the orc alone.

120
00:07:02,414 --> 00:07:05,435
And we had to support a lot of different entry conditions.

121
00:07:05,495 --> 00:07:07,495
Our presentation team established early

122
00:07:07,515 --> 00:07:09,496
that they didn't want to use camera cuts because it was too

123
00:07:09,576 --> 00:07:13,157
jarring to the player to have that camera ripped away

124
00:07:13,197 --> 00:07:13,498
from them.

125
00:07:13,918 --> 00:07:17,479
So if we animate the player grabbing the orc by the front

126
00:07:17,499 --> 00:07:20,280
and stabbing him in the belly, but the player attacked him

127
00:07:20,300 --> 00:07:22,581
from behind, it's going to look really jarring if we whip that.

128
00:07:22,941 --> 00:07:26,704
that work around for that sink action. So we're going to need to support sink actions from the

129
00:07:26,784 --> 00:07:31,529
front, from the back, if they're on all fours on the ground, the left, right, front, back.

130
00:07:31,549 --> 00:07:35,452
We're going to be able to attack them from above and below. There's going to be a lot

131
00:07:35,492 --> 00:07:37,153
of entry conditions that we have to support.

132
00:07:39,105 --> 00:07:40,686
Additionally, we're going to need a lot of variety.

133
00:07:41,306 --> 00:07:43,367
We're creating these animations with the intent

134
00:07:43,867 --> 00:07:45,007
of being memorable.

135
00:07:45,968 --> 00:07:48,569
So they're going to get really repetitive if we don't have

136
00:07:48,609 --> 00:07:50,109
a huge amount of variety.

137
00:07:50,169 --> 00:07:52,750
The player can trigger these off pretty rapidly in gameplay.

138
00:07:53,370 --> 00:07:57,232
So a lot of variety in order to avoid the repetition.

139
00:07:58,212 --> 00:08:00,093
And we need to support all aspects of design.

140
00:08:00,213 --> 00:08:02,094
Design doesn't just want this in the combat pool.

141
00:08:02,114 --> 00:08:03,135
They're going to want it in range,

142
00:08:03,175 --> 00:08:04,295
and they're going to want it in stealth.

143
00:08:05,096 --> 00:08:06,797
They're going to want the player's abilities

144
00:08:07,477 --> 00:08:09,939
to have these as well as they enter through progressions.

145
00:08:09,979 --> 00:08:11,720
They can feel more powerful as they play.

146
00:08:11,740 --> 00:08:15,162
And the player's going to have lots of different weapon types,

147
00:08:15,222 --> 00:08:17,163
and the orcs are going to have lots of different weapon types.

148
00:08:17,303 --> 00:08:18,864
So we're going to have to support all of those.

149
00:08:22,454 --> 00:08:26,437
Overall, with 1,200 animations between the player and the orc alone,

150
00:08:26,897 --> 00:08:29,379
if they take around three days to produce,

151
00:08:29,599 --> 00:08:34,282
the animation team is going to be doing nothing but sync actions between the orcs and the player alone,

152
00:08:34,462 --> 00:08:37,445
and obviously we need to make the rest of the game within three-year period.

153
00:08:38,746 --> 00:08:39,746
So we need a plan of attack.

154
00:08:39,946 --> 00:08:43,569
How are we going to make this happen on a production standpoint, a scope standpoint?

155
00:08:44,210 --> 00:08:46,851
And our first plan of attack was motion capture.

156
00:08:51,513 --> 00:08:54,114
I know there's probably a contingent of animators

157
00:08:54,174 --> 00:08:56,795
that motion capture is not the most exciting plan of attack

158
00:08:56,855 --> 00:08:58,956
because I was one of them many years ago.

159
00:08:59,076 --> 00:09:01,977
But I'm here to say no motion capture really is awesome.

160
00:09:03,117 --> 00:09:04,417
When I first came to Monolith and I

161
00:09:04,498 --> 00:09:06,938
saw how they were utilizing the motion capture systems,

162
00:09:07,038 --> 00:09:09,019
I was really in awe and I became a convert.

163
00:09:09,799 --> 00:09:13,641
A single strike animation or a single run animation

164
00:09:13,701 --> 00:09:15,081
was always very precious to me.

165
00:09:15,341 --> 00:09:18,423
And to make that beautiful is beautiful

166
00:09:18,463 --> 00:09:19,223
and it's a work of art.

167
00:09:20,217 --> 00:09:23,720
But what's also beautiful is to make that run look really good in game,

168
00:09:23,900 --> 00:09:28,124
all the players jamming left and right on the controller and diving that player

169
00:09:28,224 --> 00:09:31,186
up and down a hill and juking left and right.

170
00:09:32,107 --> 00:09:35,350
At any point, our player run animation can be blending between eight to 12

171
00:09:36,010 --> 00:09:38,873
other animations in order to make the player run smoothly.

172
00:09:40,834 --> 00:09:43,156
We couldn't have done this without motion capture.

173
00:09:44,881 --> 00:09:48,064
The motion capture allowed us to support the movement.

174
00:09:48,184 --> 00:09:52,467
The player movement was over 2,956 animations alone.

175
00:09:52,908 --> 00:09:55,950
So a single animation is not your art.

176
00:09:56,171 --> 00:09:57,232
The game is your art.

177
00:09:57,292 --> 00:09:59,994
Having that animation actually play well

178
00:10:00,034 --> 00:10:01,655
and support the player experience,

179
00:10:01,875 --> 00:10:04,077
look and feel good, that's amazing.

180
00:10:04,918 --> 00:10:06,459
And the motion capture is just another tool

181
00:10:06,499 --> 00:10:07,320
for creating your art.

182
00:10:09,882 --> 00:10:10,022
So.

183
00:10:11,078 --> 00:10:13,439
I'm not here to convince you about motion capture though, we're here to tell you about

184
00:10:13,479 --> 00:10:16,360
what we did with motion capture that helped us achieve our goals.

185
00:10:17,041 --> 00:10:21,422
And so one of the things that we did that was unique at Monolith is that our motion

186
00:10:21,462 --> 00:10:22,983
capture studio was on site.

187
00:10:23,423 --> 00:10:24,483
And this made all the difference.

188
00:10:25,310 --> 00:10:31,156
Benefits are exponential. We didn't need to book any shoots in advance if anybody's ever worked with an off-site

189
00:10:31,256 --> 00:10:36,340
Studio, you know that you have to book months weeks in advance and usually you have to book at least a day

190
00:10:36,440 --> 00:10:37,942
Maybe you're half day if you're lucky

191
00:10:38,783 --> 00:10:40,945
So we could shoot and capture at any time

192
00:10:41,145 --> 00:10:44,928
We could have a meeting with our designers in the morning and then the animator

193
00:10:45,428 --> 00:10:48,810
could animate and capture later that afternoon.

194
00:10:48,830 --> 00:10:50,891
They might have the data the following day

195
00:10:51,271 --> 00:10:54,513
and have that animation over to the designer for integration

196
00:10:54,593 --> 00:10:56,214
later in that 48-hour cycle.

197
00:10:56,274 --> 00:11:00,115
So we took that concept to integration time

198
00:11:00,135 --> 00:11:02,076
and really were able to compress it, which

199
00:11:02,116 --> 00:11:04,297
meant we got the animations in-game faster

200
00:11:04,317 --> 00:11:06,378
and we got to iterate more, which is better.

201
00:11:08,797 --> 00:11:11,398
Additionally, we got to do smaller, more focused shoots.

202
00:11:11,918 --> 00:11:14,859
This really alleviated some of the pressure on the actors.

203
00:11:15,719 --> 00:11:20,541
Even if you hire a professional actor or professional athlete,

204
00:11:20,761 --> 00:11:23,601
around hour three, four, they're going

205
00:11:23,641 --> 00:11:25,182
to be really tired if they're performing

206
00:11:25,802 --> 00:11:28,083
some really hefty combat actions.

207
00:11:28,243 --> 00:11:30,243
So because we could do smaller shoots

208
00:11:30,423 --> 00:11:33,564
and we could break them up consecutively into days,

209
00:11:33,584 --> 00:11:35,165
our actors' performances were better.

210
00:11:37,982 --> 00:11:42,365
And additionally, it minimizes the time-consuming pre-planning required for off-site shoots.

211
00:11:42,966 --> 00:11:46,789
If you have an off-site shoot, you'll probably have the actors, maybe some expensive actors

212
00:11:46,829 --> 00:11:48,570
in the room, and you're going to have the directors.

213
00:11:48,590 --> 00:11:52,754
Then you're going to have the mo-cap team, and then maybe you might have some stuntmen,

214
00:11:53,074 --> 00:11:57,958
and then you might have your combat choreographer, and some safety personnel and caterers.

215
00:11:58,358 --> 00:12:00,780
So it quickly becomes very expensive to be in that room.

216
00:12:01,021 --> 00:12:05,404
So you're going to spend a lot of time outside of that room making sure that you have everything

217
00:12:05,464 --> 00:12:05,704
down.

218
00:12:06,105 --> 00:12:10,507
because in that room is not the time for you to be figuring out your choreography and your plan.

219
00:12:11,408 --> 00:12:14,090
Because we had our shoot on site, we could do small shoots.

220
00:12:15,110 --> 00:12:18,332
They were very focused and our pre-planning process was very short.

221
00:12:18,372 --> 00:12:22,695
And sometimes we even shot and pre-planned in the motion capture room because everybody

222
00:12:22,715 --> 00:12:24,896
that we needed for information was on site.

223
00:12:24,936 --> 00:12:29,839
So if we forgot, if the sword ended in Talian's hand or if he was supposed to be sheathed

224
00:12:29,899 --> 00:12:31,720
at the end of it, we could just stick our heads out the room

225
00:12:31,740 --> 00:12:33,161
and ask the designer that was down the hall.

226
00:12:35,498 --> 00:12:40,841
So the other thing that was super unique about Monolith motion capture pipeline is that our

227
00:12:40,881 --> 00:12:42,142
animators are the actors.

228
00:12:43,383 --> 00:12:44,283
So I know what you're thinking.

229
00:12:44,303 --> 00:12:48,226
And you wouldn't be wrong.

230
00:12:48,966 --> 00:12:54,610
Usually normally a studio would hire professional martial artists to perform their combat animations

231
00:12:54,970 --> 00:12:57,832
because if you put an amateur in a suit, the data is going to look amateur.

232
00:12:58,473 --> 00:13:01,314
But luckily Monolith somehow collected.

233
00:13:02,737 --> 00:13:08,341
giant suite of personnel, animators that are as talented at animating as they are at combat

234
00:13:08,401 --> 00:13:16,046
performance and acting. Right here is Patrick Wigi. He's got over two decades of martial arts

235
00:13:16,286 --> 00:13:21,850
and weapon training. He brought a lot of the combat choreography into Shadow of Mordor and

236
00:13:21,870 --> 00:13:27,194
Shadow of War, and he's a real-life Talion. Some of those with the war one.

237
00:13:29,934 --> 00:13:32,236
Marc Cosio is another one of our mainstays.

238
00:13:32,276 --> 00:13:33,798
He comes from a military background.

239
00:13:34,338 --> 00:13:37,461
John Van Dusen is this big, giant, hulking animator,

240
00:13:37,522 --> 00:13:39,784
and we get him to do our Balrog and our Olag stuff

241
00:13:39,824 --> 00:13:40,705
and the big guy stuff.

242
00:13:41,205 --> 00:13:44,348
Our new recruit, Jay Vargas, really rounds us out.

243
00:13:44,408 --> 00:13:46,851
And additionally, we got guys on the presentation team

244
00:13:46,891 --> 00:13:48,693
that are fantastic actors.

245
00:13:48,773 --> 00:13:51,215
So basically, everyone on the animation team

246
00:13:51,255 --> 00:13:53,237
has been in the suit at one point or another.

247
00:13:54,638 --> 00:13:58,720
If they're not in the suit, then they're probably on the sideline directing the shoots.

248
00:13:59,220 --> 00:14:01,501
The animators are the actors and the directors.

249
00:14:02,022 --> 00:14:03,962
These have so many benefits.

250
00:14:04,683 --> 00:14:08,704
Nobody knows what the source material for the motion capture should be better than the

251
00:14:08,764 --> 00:14:11,426
person who's actually using it, the animator.

252
00:14:11,766 --> 00:14:15,187
And our animators talk directly to the designers and they make the specs and the...

253
00:14:15,507 --> 00:14:19,650
the fine details that that animation is going to need in order to be best in the game.

254
00:14:20,050 --> 00:14:24,192
So the animators are able to direct the motion capture and use it as a tool

255
00:14:24,612 --> 00:14:27,334
to make the animations the best that they can be for the game.

256
00:14:27,694 --> 00:14:31,776
They know where to cut corners. They might say, you know, I only really need that

257
00:14:32,216 --> 00:14:36,298
front movement and the end because I know that there's already an animation in game that I made

258
00:14:36,338 --> 00:14:40,060
that can do that middle and I don't really need the weapon to be captured because I'll

259
00:14:40,100 --> 00:14:43,402
just hand key that. So we really know how to do it the most efficiently.

260
00:14:45,432 --> 00:14:52,835
So here's an example of Josh Paraventi directing a shoot of Talian killing a Drake.

261
00:14:53,115 --> 00:14:57,777
So there he is, he's jumping up on the Drake back and now the Drake's rolling fire and he's going to cut off his head.

262
00:14:57,797 --> 00:14:59,778
Oh, nice job.

263
00:15:01,558 --> 00:15:02,319
So let's see it in game.

264
00:15:04,099 --> 00:15:04,840
Or in Maya.

265
00:15:12,877 --> 00:15:15,440
So Josh really used the motion capture

266
00:15:15,520 --> 00:15:19,284
to maximize his use of time within that task.

267
00:15:19,344 --> 00:15:21,807
He utilized the mocap to capture Talion's portion,

268
00:15:21,927 --> 00:15:24,469
and then he could focus on doing the hand

269
00:15:24,529 --> 00:15:26,772
key of the Drake with his time remaining,

270
00:15:27,573 --> 00:15:28,734
because we haven't figured out how

271
00:15:28,754 --> 00:15:31,036
to motion capture a Drake faster than we can hand key it.

272
00:15:33,097 --> 00:15:45,418
So success, right? We've figured out a pipeline which we can take animations that usually took us around three to four days and compressed it down to an average of about a day and a day and a half. So we're sleek animating machine. So that's enough, right?

273
00:15:47,465 --> 00:15:48,685
Not really, almost.

274
00:15:50,126 --> 00:15:55,067
We ended up shipping with close to 2,500 sync actions

275
00:15:55,128 --> 00:15:56,108
in total for the game.

276
00:15:56,188 --> 00:15:59,629
So even at 1.5 days, we're still doing nothing but sync actions

277
00:16:00,189 --> 00:16:01,050
for almost two years.

278
00:16:01,990 --> 00:16:04,611
Even if we add more animators into the pit

279
00:16:04,651 --> 00:16:07,252
until we can't fit into our cubicles anymore, which we did,

280
00:16:07,812 --> 00:16:08,853
it's still not enough.

281
00:16:10,153 --> 00:16:11,634
So we need another plan of attack.

282
00:16:11,654 --> 00:16:12,834
We need another one.

283
00:16:13,674 --> 00:16:14,615
It's going to be outsourcing.

284
00:16:19,645 --> 00:16:22,867
We had two avenues to try and maximize the outsourcing,

285
00:16:22,887 --> 00:16:24,188
and we were gonna try them both at once.

286
00:16:24,268 --> 00:16:26,830
And one of them was we were gonna just take our process,

287
00:16:26,850 --> 00:16:28,771
because we loved it and it was so successful with us,

288
00:16:28,851 --> 00:16:32,193
and just find very good sets that we could send

289
00:16:32,213 --> 00:16:34,395
to the outsourcers and own and take as a whole.

290
00:16:35,696 --> 00:16:36,877
We hoped that this would be useful,

291
00:16:36,897 --> 00:16:39,818
but it ended up taking a little bit more time to manage

292
00:16:40,099 --> 00:16:43,201
than it would have taken us to do it in-house.

293
00:16:43,221 --> 00:16:44,361
So we abandoned that process.

294
00:16:45,757 --> 00:16:51,180
Instead, we tried our plan B, which is where we mocapped the source in-house and then we

295
00:16:51,240 --> 00:16:54,502
sent it to the outsourcers to complete from a whole.

296
00:16:54,942 --> 00:17:00,225
So here's an example of some raw mocap that we would have sent out to play.

297
00:17:01,485 --> 00:17:03,786
There we go.

298
00:17:03,806 --> 00:17:04,867
So you can see there's...

299
00:17:05,897 --> 00:17:08,498
You know, this is just the raw mocap.

300
00:17:09,339 --> 00:17:12,742
No choices on timing or posing has really been done.

301
00:17:12,802 --> 00:17:15,804
We expect the outsourcers to be able to make all those calls.

302
00:17:16,124 --> 00:17:18,466
We'll write a little summary, but overall, we're

303
00:17:18,506 --> 00:17:22,168
just going to send them an example of 60 insta-kills

304
00:17:22,188 --> 00:17:23,309
that we've already done ourselves,

305
00:17:23,369 --> 00:17:24,990
and ask them to match the style.

306
00:17:25,451 --> 00:17:26,552
And this came out pretty good.

307
00:17:27,272 --> 00:17:28,993
We got really good results from this one,

308
00:17:29,033 --> 00:17:31,875
but the animators on intaking were still presenting,

309
00:17:32,796 --> 00:17:33,216
having to do.

310
00:17:33,817 --> 00:17:36,420
a couple of hours on the back end in order to intake it,

311
00:17:36,480 --> 00:17:39,484
just to get it to match that style, that timing perfectly.

312
00:17:40,164 --> 00:17:43,028
And so some of the animators started playing around

313
00:17:43,068 --> 00:17:45,270
with just doing a quick timescale pass.

314
00:17:45,290 --> 00:17:46,572
They would use the timescale tool,

315
00:17:46,652 --> 00:17:48,834
which Jean-Pierre will talk about in a little bit.

316
00:17:49,455 --> 00:17:52,158
But within that hour, that quick hour,

317
00:17:52,218 --> 00:17:54,000
they would be able to establish

318
00:17:54,500 --> 00:17:57,941
some really important timing and posing to give to those outsourcers.

319
00:17:58,581 --> 00:18:02,042
And with this process, we found we got really good results.

320
00:18:02,622 --> 00:18:06,423
And actually is very reminiscent of a process that a lot of us are probably

321
00:18:06,743 --> 00:18:10,264
familiar with, the classic 2D pipeline. Your senior

322
00:18:10,364 --> 00:18:14,425
animators lay the key poses and they do the timing

323
00:18:14,465 --> 00:18:17,866
pass and then they hand it off to the more junior animators, perhaps,

324
00:18:18,226 --> 00:18:22,007
to do the cleanup and the finish. And so that's actually how we ended up utilizing our

325
00:18:22,087 --> 00:18:23,987
outsourcers. Our internal animators would do

326
00:18:24,768 --> 00:18:28,496
the concept, the timing, the posing, and then send it to the outsourcers for finish.

327
00:18:28,936 --> 00:18:30,199
We got really good results that way.

328
00:18:33,004 --> 00:18:36,565
So as a recap, we had some pretty ambitious goals.

329
00:18:37,486 --> 00:18:39,186
The multi-character combat sync actions

330
00:18:39,206 --> 00:18:41,567
were an important component for us achieving those goals.

331
00:18:42,247 --> 00:18:45,328
And they presented a lot of challenges in terms of scope.

332
00:18:45,728 --> 00:18:47,789
But the monolith motion capture pipeline

333
00:18:47,849 --> 00:18:51,970
supported us in the rapid creation of those concepts

334
00:18:52,010 --> 00:18:52,871
and source materials.

335
00:18:52,951 --> 00:18:55,951
And the additional outsourcing lent us huge relief.

336
00:18:56,012 --> 00:18:57,832
And finally, we felt like we had a

337
00:18:58,252 --> 00:19:00,514
a pathway to success that we could support our game,

338
00:19:01,034 --> 00:19:03,255
not just the sync actions, but everything else.

339
00:19:04,256 --> 00:19:07,397
But I've left out a huge part of the important part

340
00:19:07,437 --> 00:19:09,819
of the pipeline, which is plan of attack number three,

341
00:19:09,859 --> 00:19:12,560
which is having excellent animation so that the animation

342
00:19:12,580 --> 00:19:15,582
is being created, can be created to the highest quality

343
00:19:15,622 --> 00:19:17,443
and to the highest efficiency.

344
00:19:18,003 --> 00:19:19,964
So this, thank you very much.

345
00:19:20,024 --> 00:19:21,805
I'll pass it on to John Peel, who will take us

346
00:19:21,845 --> 00:19:22,946
through the animation pipeline.

347
00:19:31,275 --> 00:19:32,915
Thanks, Camille.

348
00:19:32,935 --> 00:19:35,816
So I've been in Monolith for a little over 15 years now.

349
00:19:35,896 --> 00:19:39,377
And I'm really, really proud to have been part of the team

350
00:19:39,477 --> 00:19:45,099
on projects like Matrix Online, Fear 2, Condemned, Shadow

351
00:19:45,119 --> 00:19:46,320
of Mordor, Shadow of War.

352
00:19:47,100 --> 00:19:49,181
And today, we're going to look at sort

353
00:19:49,201 --> 00:19:52,222
of a day in the life of one of these combat sync actions

354
00:19:52,682 --> 00:19:54,282
from an authoring process.

355
00:19:54,502 --> 00:19:58,344
I've chosen a sample, one of our senior animators, Mark Casio.

356
00:19:58,364 --> 00:20:00,324
You saw him doing a lot of the falling

357
00:20:00,364 --> 00:20:01,165
and playing the.

358
00:20:01,665 --> 00:20:02,826
and some of that mocap footage.

359
00:20:04,006 --> 00:20:07,268
And sort of an overview of how this part of the talk

360
00:20:07,308 --> 00:20:08,069
is going to proceed.

361
00:20:08,989 --> 00:20:10,530
Going to talk first about something

362
00:20:10,570 --> 00:20:13,072
that's unique to Monolith, how we use our game

363
00:20:13,092 --> 00:20:14,213
data as the source.

364
00:20:14,253 --> 00:20:15,493
We don't save Maya scenes.

365
00:20:15,553 --> 00:20:18,935
We don't back up Maya files or build rigs up front.

366
00:20:19,396 --> 00:20:22,097
We pull data right in from the game data

367
00:20:22,378 --> 00:20:23,939
and build our scenes from scratch.

368
00:20:25,379 --> 00:20:30,502
The Monolith Tab panel and our tool set that allows us to have this two-way information

369
00:20:30,582 --> 00:20:33,463
flow between our working space and our game data.

370
00:20:34,703 --> 00:20:39,786
Our Maya tool set and some of the neat tricks and sort of our philosophy of how we deal

371
00:20:39,826 --> 00:20:40,766
with animation polish.

372
00:20:41,787 --> 00:20:42,847
and using motion capture.

373
00:20:43,467 --> 00:20:47,268
The motion encoding process for synchronized actions or sync

374
00:20:47,388 --> 00:20:50,009
actions, just sort of the nuts and bolts,

375
00:20:50,469 --> 00:20:52,150
digesting this data for the engine,

376
00:20:52,350 --> 00:20:55,371
getting it ready to go, key strings, and game data markup.

377
00:20:55,971 --> 00:20:57,091
The point at which the confluence

378
00:20:57,151 --> 00:20:58,692
of all the different departments work,

379
00:20:59,132 --> 00:21:01,233
sort of joins with the animation data

380
00:21:01,333 --> 00:21:05,054
and makes something better than the sum of its parts.

381
00:21:06,014 --> 00:21:09,535
And finally, look at the results and a runtime presentation

382
00:21:09,655 --> 00:21:10,956
of this sample sync action.

383
00:21:12,612 --> 00:21:17,056
So we'll go back to the MoCap studio here and take a look at the shot we're going to focus on.

384
00:21:18,137 --> 00:21:21,861
Marc Cosio is playing the Orc and Patrick Uecci is playing Talion.

385
00:21:22,801 --> 00:21:27,566
And you can see this is probably the third or fourth take of this one motion.

386
00:21:27,946 --> 00:21:30,548
They will often do a couple takes where they're sort of wrapped.

387
00:21:30,708 --> 00:21:32,129
up in proximity with each other.

388
00:21:32,849 --> 00:21:37,031
But often it's better to separate out, especially in this case, this is going to be a severing

389
00:21:37,071 --> 00:21:37,711
sink action.

390
00:21:37,751 --> 00:21:42,753
So his legs are going to get cut off at the knees and Patrick's able to hit these big

391
00:21:42,793 --> 00:21:48,995
poses and make these big swings without worrying about hitting Mark or having to avoid what

392
00:21:49,035 --> 00:21:50,316
won't be there in the final product.

393
00:21:53,098 --> 00:21:57,541
So going back to monoliths using our game data as source,

394
00:21:57,561 --> 00:21:59,362
just to talk a little more in depth about it.

395
00:22:00,243 --> 00:22:03,785
Our animation polish, our data right out of the MoCap studio,

396
00:22:03,845 --> 00:22:05,586
is in the game ready format.

397
00:22:05,626 --> 00:22:06,967
It's called a model anim file.

398
00:22:07,367 --> 00:22:09,789
We store all the takes of a MoCap session

399
00:22:10,329 --> 00:22:11,250
within a single file.

400
00:22:11,770 --> 00:22:14,712
And it's viewable with our custom tools.

401
00:22:15,493 --> 00:22:18,715
The model edit tool will allow us to preview that motion.

402
00:22:18,855 --> 00:22:20,175
We'll take a look at that in just a moment.

403
00:22:21,576 --> 00:22:26,559
As a byproduct of this, our animators stay up to date with the state of that animation in the engine.

404
00:22:26,899 --> 00:22:34,403
So if any changes get made, if we hand it off early and combat designers do a timing pass or trim part of the animation,

405
00:22:35,123 --> 00:22:39,205
any of those early editorial processes, especially if we haven't moved on to the polish phase,

406
00:22:39,245 --> 00:22:44,428
we're up to date with any of the work that's been done by any other department that coincides with that action.

407
00:22:46,607 --> 00:22:50,912
Yeah, as I said, all departments have instant access to the animations once we've handed

408
00:22:50,952 --> 00:22:51,292
them off.

409
00:22:51,373 --> 00:22:56,339
So if the audio department needs to get in there and start marking up the sounds, or

410
00:22:57,059 --> 00:23:01,144
most often the combat designers need to get in there and make sure that everything, all

411
00:23:01,165 --> 00:23:04,609
the damage key strings and windows are happening where they need to happen.

412
00:23:06,502 --> 00:23:09,883
And this is a look at one of our proprietary tools, ModelEdit.

413
00:23:09,943 --> 00:23:12,905
It's been around since probably the first Fear game.

414
00:23:13,585 --> 00:23:20,348
And it's really sort of the confluence of all of the developers' work on any animation.

415
00:23:20,388 --> 00:23:24,190
We're looking at motion capture data in this, but we'll look at some finished game data

416
00:23:24,270 --> 00:23:25,411
in this format later on.

417
00:23:27,585 --> 00:23:31,648
Yeah, and any developer on the team who installs our tool set has this tool.

418
00:23:31,668 --> 00:23:34,891
They don't need to have Maya to look at animations, and we can preview

419
00:23:35,351 --> 00:23:39,995
multiple takes or a pretty dense set of animation data to

420
00:23:40,035 --> 00:23:42,257
take a look and decide what we're going to use in a lot of cases.

421
00:23:43,937 --> 00:23:48,520
Another sort of happy byproduct of moving our source material

422
00:23:48,620 --> 00:23:51,882
to this game-ready data is that if we need to make a big change,

423
00:23:51,922 --> 00:23:53,343
and we actually did about a third of the way

424
00:23:53,363 --> 00:23:55,885
through this project, we went and revisited

425
00:23:55,945 --> 00:24:00,549
the structure of the layout of our characters' finger bones.

426
00:24:01,189 --> 00:24:04,412
And so our character artists did a new sculpt

427
00:24:04,692 --> 00:24:06,353
on Talion's hands and the orc's hands.

428
00:24:06,793 --> 00:24:07,674
We share a skeleton.

429
00:24:08,434 --> 00:24:09,575
And our

430
00:24:10,696 --> 00:24:15,380
Very talented technical artist, Frank Schorsch, went in and reconfigured the layout of those

431
00:24:15,420 --> 00:24:20,945
fingers, get better posing, better weighting, and almost overnight, I think it was over

432
00:24:20,965 --> 00:24:26,570
a weekend, but we took all those changes, batched them through, did the model geometry

433
00:24:26,610 --> 00:24:30,754
updates and had everyone back on the same page with pretty substantial change to our

434
00:24:31,535 --> 00:24:34,478
base biped skeleton layout without anyone missing a beat.

435
00:24:38,916 --> 00:24:41,003
Sorry, I should move to that hand slide a little earlier.

436
00:24:42,610 --> 00:24:51,194
So a little bit in association with the tab panel and the way we work with our source data is the philosophy of the tools that we've adopted at Monolith.

437
00:24:52,434 --> 00:25:00,818
On this project and on many other projects, since motion capture is sort of our common approach, we've optimized our workflow for motion capture.

438
00:25:01,218 --> 00:25:06,520
This dense data, we don't try to strip it away, we don't try to take the noise out of it.

439
00:25:06,560 --> 00:25:11,562
We want to preserve what's great about the motion capture, which is that sort of natural noise.

440
00:25:12,983 --> 00:25:18,189
So as a result, we don't start with an up-front rig or a rig that's trying to do everything right out of the gate.

441
00:25:18,689 --> 00:25:22,072
We take a more modular approach or an on-demand rigging approach.

442
00:25:22,573 --> 00:25:28,139
If you need IK, you build IK right onto the core skeleton, work with that, bake out from under it.

443
00:25:29,380 --> 00:25:30,921
Our focus really is on speed,

444
00:25:31,822 --> 00:25:35,266
control, and what I like to call direct interactions. I don't like to bury

445
00:25:35,826 --> 00:25:38,810
the result of the animation or the pose that you're getting under

446
00:25:39,431 --> 00:25:43,777
multiple attributes on multiple controls and things wrestling for the state of control.

447
00:25:44,478 --> 00:25:47,802
Really, if you're going to move into using IK, you're in IK mode.

448
00:25:48,043 --> 00:25:51,627
If you need to go back to IK, bake it off. Go back to working at FK.

449
00:25:54,224 --> 00:25:59,167
We accommodate a bring your best tools approach since really we start and end with a skeleton and

450
00:25:59,627 --> 00:26:02,869
Data on the bones rotation and translation data on the bones

451
00:26:03,670 --> 00:26:08,753
Then if an animator comes in or if we see a new tool or we see a new rig or some new feature in Maya

452
00:26:09,233 --> 00:26:15,357
we bring that right into the mix because we can just incorporate it into an as-needed approach to

453
00:26:16,298 --> 00:26:17,599
applying the best tool for the job

454
00:26:19,753 --> 00:26:23,094
And a byproduct of this, of working with MoCap,

455
00:26:23,174 --> 00:26:26,735
and of working with this applying and removing tools

456
00:26:26,795 --> 00:26:29,576
process is that you have to be OK with baking your keys

457
00:26:29,756 --> 00:26:30,876
on and off all the time.

458
00:26:30,896 --> 00:26:34,477
So you can't get too precious about your curve handles

459
00:26:34,537 --> 00:26:36,918
and your sparse keying.

460
00:26:37,018 --> 00:26:38,878
But there are, you'll see.

461
00:26:40,039 --> 00:26:41,199
In a step, don't worry.

462
00:26:41,439 --> 00:26:44,041
We really push into posing, we really push into timing.

463
00:26:44,401 --> 00:26:46,202
It's just a different methodology.

464
00:26:46,943 --> 00:26:48,504
They call it a destructive workflow,

465
00:26:48,564 --> 00:26:50,084
it always kind of hurts my feelings, but.

466
00:26:52,001 --> 00:26:53,903
Yeah, we'll get into it.

467
00:26:54,483 --> 00:26:57,425
And we are not particularly geared

468
00:26:57,726 --> 00:27:01,068
towards from scratch animations, although we've

469
00:27:01,289 --> 00:27:03,470
done well with it, or quadrupeds.

470
00:27:03,510 --> 00:27:06,873
But really, our animation team is so senior and so talented.

471
00:27:06,953 --> 00:27:08,975
I mean, you saw with the Drake earlier, they can.

472
00:27:10,877 --> 00:27:16,064
You can throw any challenge at them, and they'll do whatever it takes to get results.

473
00:27:16,264 --> 00:27:20,190
And they're sort of used to, if they need to do it and they need to drill down to selecting

474
00:27:20,210 --> 00:27:23,094
things right out of the hypergraph, they'll get in there and they'll make it work.

475
00:27:25,938 --> 00:27:31,023
So this is a little bit of a sizzle reel of some of the novel ways of abstracting the

476
00:27:31,063 --> 00:27:33,285
data that we've developed as part of our tool set.

477
00:27:33,805 --> 00:27:37,449
So really no one is forced to work with any of these, and most of these things we're looking

478
00:27:37,549 --> 00:27:41,292
at are not even going to be covered as the aspect of Mark's work on cleaning up this

479
00:27:41,372 --> 00:27:41,993
sink action.

480
00:27:42,633 --> 00:27:45,917
But we have things like mirroring, and we have things like abstracting the root of the

481
00:27:45,957 --> 00:27:48,059
character's motion to a center of mass.

482
00:27:48,899 --> 00:27:53,240
and IK on the knees, and just all kinds of novel approaches

483
00:27:53,280 --> 00:27:55,020
that when you need them, they're great to have.

484
00:27:55,180 --> 00:27:56,520
Most of the time, you don't need them,

485
00:27:56,580 --> 00:27:57,941
or sometimes you forget you have them.

486
00:27:58,061 --> 00:28:00,601
But it really is sort of like a utility belt,

487
00:28:00,741 --> 00:28:07,402
or just a toolbox of different ways of manipulating the data,

488
00:28:08,082 --> 00:28:09,283
putting things on as you need them,

489
00:28:09,803 --> 00:28:12,183
baking them right back off, and getting into a control scheme

490
00:28:12,223 --> 00:28:14,044
that you're more familiar with, or that's

491
00:28:14,144 --> 00:28:16,124
easier to achieve the stretch of the motion

492
00:28:16,144 --> 00:28:16,944
that you need to work with.

493
00:28:19,401 --> 00:28:22,283
This last one's a little, oh, sorry, there are a few more to go.

494
00:28:22,303 --> 00:28:23,103
I kind of rushed through that.

495
00:28:23,143 --> 00:28:29,248
But yeah, we work with cross fading, animation blending, loading multiple characters into

496
00:28:29,308 --> 00:28:33,291
scenes and even things like baked ragdoll sim.

497
00:28:33,571 --> 00:28:37,354
It sort of leveraged the NVIDIA physics system to do that kind of stuff.

498
00:28:37,914 --> 00:28:40,256
It's fun throwing Caragor ragdolls into the air.

499
00:28:42,283 --> 00:28:47,206
So now we'll take a look at actually using these great monolith tools in the tab panel

500
00:28:47,326 --> 00:28:49,447
to construct a scene from scratch with the game data.

501
00:28:50,367 --> 00:28:56,790
So we're going to do a real-time look at bringing a scene into being, importing the characters,

502
00:28:56,850 --> 00:29:00,932
weapons, materials, and animations that we're going to need to start working on this motion

503
00:29:00,952 --> 00:29:01,592
capture data.

504
00:29:02,293 --> 00:29:06,755
So on the left is a tool that queries our game database for the characters that are

505
00:29:12,678 --> 00:29:17,701
basic scale in the game and the weapon that they'll typically hold. And yeah, I

506
00:29:17,721 --> 00:29:20,863
know we're watching a progress bar, but it gets better. Talion gets pulled into

507
00:29:20,903 --> 00:29:25,086
the scene with all of his materials and he's ready, he's ready to go. He's skinned,

508
00:29:25,166 --> 00:29:30,529
he's got a skeleton. We build center out for our bounding boxes, so I'm going to

509
00:29:30,549 --> 00:29:33,732
build a dim dimensions box that's indicative of that.

510
00:29:34,872 --> 00:29:39,355
I've added a tool to build proxy shapes under the bone shape

511
00:29:39,655 --> 00:29:43,718
data so that essentially those geometry boxes are

512
00:29:44,198 --> 00:29:45,659
the same thing as your bones in the scene.

513
00:29:45,679 --> 00:29:48,121
So you can directly select them, manipulate them, and band

514
00:29:48,141 --> 00:29:49,622
select them in your scene.

515
00:29:49,682 --> 00:29:51,663
And it just gives better runtime performance.

516
00:29:52,403 --> 00:29:54,325
And next I'll pull in our second participant

517
00:29:54,345 --> 00:29:55,606
in the scene, which is the orc.

518
00:29:55,946 --> 00:29:57,547
And I think we missed it a little bit,

519
00:29:58,147 --> 00:30:00,529
our namespacing approach is a little bit.

520
00:30:03,610 --> 00:30:05,151
It's strange, but it's efficient.

521
00:30:05,251 --> 00:30:11,614
We underscore, as in putting an underscore at the prefix of the character that is in

522
00:30:11,654 --> 00:30:12,935
our primary character in the scene.

523
00:30:12,955 --> 00:30:17,277
So if we have two characters, one is going to be null and everything in his genome.

524
00:30:17,277 --> 00:30:21,220
geometry, when it's going to be underscore null, and everything that follows in his hierarchy,

525
00:30:21,800 --> 00:30:25,142
and we can switch the focus between our primary characters just with a button press.

526
00:30:25,342 --> 00:30:30,306
So we don't, our import export tools don't really handle namespacing all that well, and

527
00:30:30,686 --> 00:30:36,089
namespacing was really tough to deal with until a couple years ago, so that is our efficient

528
00:30:36,129 --> 00:30:41,593
means of swapping between several characters in the scene, and everyone has an easy time

529
00:30:42,553 --> 00:30:44,755
working that way and developing that mindset.

530
00:30:45,836 --> 00:30:51,459
So now through the actual tab panel, we've been using its functionality, but that window that we opened is

531
00:30:51,499 --> 00:30:57,783
going to pull in the animation data from our motion capture shoot. First loading onto the Ork. That took a while because the Ork was brought

532
00:30:57,823 --> 00:30:58,923
in at scale. Our

533
00:30:59,884 --> 00:31:02,846
native scale for an Ork infantry in the game is 110% of Talion's height.

534
00:31:05,767 --> 00:31:08,150
So all of our biped characters share a skeleton,

535
00:31:08,370 --> 00:31:09,632
and they share a common scale.

536
00:31:09,752 --> 00:31:13,035
Orcs are Italians' height at their native state.

537
00:31:13,616 --> 00:31:15,378
But in the game and in our scenes,

538
00:31:15,478 --> 00:31:16,940
we'll often scale them up to 110%

539
00:31:18,121 --> 00:31:21,084
because at sort of their generic height, they're taller.

540
00:31:22,245 --> 00:31:24,407
And when we have a scaled character in the scene,

541
00:31:24,427 --> 00:31:26,208
we have to re-encode their motion encoding

542
00:31:26,308 --> 00:31:31,210
to make sure that we're pulling in data at a native scale,

543
00:31:31,530 --> 00:31:32,691
baking it to a bigger character,

544
00:31:32,711 --> 00:31:33,571
and when it goes back out,

545
00:31:33,611 --> 00:31:35,612
it's getting baked back to a native scale.

546
00:31:35,793 --> 00:31:37,113
We'll look a little bit more at that later.

547
00:31:40,534 --> 00:31:45,196
So back to Mark C. Now we've assembled the Maya scene from all the game data and we're

548
00:31:45,236 --> 00:31:46,717
ready to roll with the mocap.

549
00:31:47,337 --> 00:31:51,339
His first step is going to be trimming and positioning that rough take in the mocap.

550
00:31:51,840 --> 00:31:57,262
This is where he isolates the key stretch in the motion and is going to move the roots

551
00:31:57,282 --> 00:32:00,284
of the characters to block in those key points of interaction.

552
00:32:00,684 --> 00:32:02,405
You're going to see a lot of foot sliding from here.

553
00:32:04,395 --> 00:32:08,703
So on the left is the motion as it was shot in the motion capture space.

554
00:32:09,445 --> 00:32:13,152
On the right is the rough alignment, really bringing those key points of the action in.

555
00:32:13,232 --> 00:32:15,576
But there's, let me try to loop this again.

556
00:32:19,847 --> 00:32:22,069
All right, well, we'll hope the next one loops.

557
00:32:22,549 --> 00:32:24,651
So the timescale tool, Camille talked about it

558
00:32:24,671 --> 00:32:26,573
a little bit earlier, and it's very similar to,

559
00:32:27,514 --> 00:32:30,137
well, it actually predates the Maya scene timescale

560
00:32:30,157 --> 00:32:31,898
by several years.

561
00:32:32,079 --> 00:32:35,422
It was first brought up in our studio

562
00:32:35,462 --> 00:32:37,664
as a way of cleaning up noise from our mocap data

563
00:32:37,724 --> 00:32:40,287
by moving the actual keyed animation

564
00:32:40,347 --> 00:32:41,868
to physical splines in the scene

565
00:32:41,908 --> 00:32:44,190
that we could then run smooth curve operations on.

566
00:32:44,931 --> 00:32:53,037
But here we take those splines and we use them to drive a unifying timescale attribute on a character selection.

567
00:32:53,057 --> 00:32:55,019
So it can be an entire character, part of the character.

568
00:32:55,399 --> 00:32:58,342
We can run multiple timescale attributes within a scene.

569
00:32:58,902 --> 00:33:02,665
And this is where we really start to assert our vision as animators.

570
00:33:03,606 --> 00:33:11,332
As Camille mentioned earlier, this timing pass is super important for establishing rhythm, the weight, the power, the impact of that raw motion.

571
00:33:12,052 --> 00:33:19,537
And it precedes any focus on posing layers or futzing with IK contact points or foot

572
00:33:19,577 --> 00:33:20,438
locking or anything.

573
00:33:20,478 --> 00:33:27,562
We're staying pretty loose and we're staying free to push poses, well in this case really

574
00:33:27,602 --> 00:33:28,222
push timing.

575
00:33:28,262 --> 00:33:29,523
We're not even dealing with posing.

576
00:33:32,443 --> 00:33:34,624
Here's a look at actually working with that time scale

577
00:33:34,664 --> 00:33:35,085
attributes.

578
00:33:35,105 --> 00:33:37,646
So that tangled mess of splines in the center

579
00:33:37,707 --> 00:33:39,067
are actually the NURBS splines that

580
00:33:39,087 --> 00:33:42,910
are driving locators that are representative of every animation

581
00:33:42,930 --> 00:33:43,851
track on the character.

582
00:33:44,111 --> 00:33:47,053
Every one of them represents either translation or rotation

583
00:33:47,093 --> 00:33:47,373
track.

584
00:33:47,934 --> 00:33:50,095
And we've slaved a single attribute

585
00:33:50,135 --> 00:33:52,017
to drive all those locators along the path.

586
00:33:52,457 --> 00:33:54,578
And we can mark those key points in the animation

587
00:33:55,159 --> 00:33:56,780
and then work with the spacing on the keys,

588
00:33:56,880 --> 00:33:59,001
work with the curve handles, just any way

589
00:33:59,021 --> 00:34:00,142
you want to manipulate the data.

590
00:34:00,182 --> 00:34:00,382
It is.

591
00:34:01,103 --> 00:34:06,527
Packages have started to incorporate more and better ways to deal with scaling motion

592
00:34:06,567 --> 00:34:08,289
or scaling playback speed on animations.

593
00:34:09,070 --> 00:34:14,514
But our in-house solution, again, gives us the flexibility we need, and it actually has

594
00:34:14,634 --> 00:34:19,238
quite a bit of the key string data that lives on the root of our characters that needs to

595
00:34:19,298 --> 00:34:20,839
ride along with this re-spacing.

596
00:34:20,959 --> 00:34:23,422
So it's the best way we've found to manage that.

597
00:34:24,883 --> 00:34:28,666
And we'll look at where Mark has arrived after his timescale pass on the sync action.

598
00:34:29,912 --> 00:34:36,663
So already you can see that the, uh, darn, I really am going to need to get this to loop.

599
00:34:36,943 --> 00:34:37,144
Sorry.

600
00:34:40,948 --> 00:34:41,408
Success.

601
00:34:41,688 --> 00:34:42,009
All right.

602
00:34:42,389 --> 00:34:43,970
So we'll let this play through a few times

603
00:34:44,590 --> 00:34:47,652
and sort of let it register that beginning motion

604
00:34:47,732 --> 00:34:50,374
is as great as the acting was in the studio.

605
00:34:50,974 --> 00:34:53,616
And really, our actors, our animators

606
00:34:53,656 --> 00:34:56,397
have got a flair for the theatricality

607
00:34:56,417 --> 00:34:59,199
of these attack motions.

608
00:34:59,439 --> 00:35:01,841
But really, that punching up of the timing

609
00:35:01,921 --> 00:35:05,843
is where it starts to solidify the power and impact and weight

610
00:35:05,903 --> 00:35:06,904
and speed of these things.

611
00:35:07,284 --> 00:35:08,365
And rhythm, really.

612
00:35:12,028 --> 00:35:16,952
So next we would typically move on to layer and blocking in those key poses.

613
00:35:17,593 --> 00:35:22,897
Still not worrying about locking down IK handles or applying rigs or doing anything to interfere

614
00:35:22,957 --> 00:35:27,680
with this very direct expression of where we want the key aspects of that motion to

615
00:35:27,760 --> 00:35:32,384
read the most important part of where we're making decisions as animators for how the

616
00:35:32,444 --> 00:35:34,885
final presentation of this motion is going to happen.

617
00:35:35,606 --> 00:35:37,626
So determine the key selling points of the action.

618
00:35:38,367 --> 00:35:39,827
Continue nudging those characters,

619
00:35:40,067 --> 00:35:43,368
further refining the proximity of the two to each other,

620
00:35:44,108 --> 00:35:45,348
still allowing for foot sliding.

621
00:35:46,028 --> 00:35:48,029
Maintaining that motion capture as a base layer,

622
00:35:48,069 --> 00:35:49,189
again, that's a very important part

623
00:35:49,209 --> 00:35:51,169
of the consistency of our style on the team.

624
00:35:51,569 --> 00:35:54,870
If we start clear-cutting motion capture noise

625
00:35:54,950 --> 00:35:57,130
or significantly altering things

626
00:35:58,831 --> 00:36:00,211
by cutting things out of the motion,

627
00:36:00,651 --> 00:36:02,412
we may start to get deviations in the read.

628
00:36:03,662 --> 00:36:07,765
And finally, if there are key poses that we need to blend to, or animated states,

629
00:36:07,825 --> 00:36:12,569
looping states, or branching sync actions, this is where we start to blend in those important poses.

630
00:36:13,690 --> 00:36:19,175
So here's a look at Mark's scene before and after the pose layer adjustment. Not as extreme a change

631
00:36:19,255 --> 00:36:26,281
as that timing adjustment, but really starting to make the key line of sight and those points of

632
00:36:26,341 --> 00:36:31,245
contact really read.

633
00:36:33,832 --> 00:36:38,175
So we'll take a little bit of a detour into now this modular rigging approach.

634
00:36:39,256 --> 00:36:43,459
There's several flavors of IK that we'll use now that we are happy with the posing and

635
00:36:43,499 --> 00:36:44,360
happy with the timing.

636
00:36:44,740 --> 00:36:49,063
We're going to start locking things down relative to the world and relative to the characters

637
00:36:49,103 --> 00:36:49,964
relative to each other.

638
00:36:50,484 --> 00:36:54,847
So the first and most common approach will be to bake an IK rig onto the character.

639
00:36:56,305 --> 00:36:59,408
So this first look at it, we'll see.

640
00:37:00,388 --> 00:37:03,210
It's a pretty vanilla mocap set up.

641
00:37:03,250 --> 00:37:04,872
I build an IK handle to the ankle.

642
00:37:04,892 --> 00:37:05,772
There's a pole vector.

643
00:37:06,273 --> 00:37:07,694
Since we're preserving the motion,

644
00:37:07,714 --> 00:37:10,796
we don't ever get rid of any of it.

645
00:37:10,916 --> 00:37:15,882
underlying motion. We do maintain an attribute on the pull vector handle that

646
00:37:15,962 --> 00:37:20,527
tracks the upper and lower X rotation if there is any on the limb because it's

647
00:37:20,547 --> 00:37:23,911
very important sometimes we need to break or twist those characters along

648
00:37:23,931 --> 00:37:27,194
their limbs and we don't want to pave over that motion just because we're

649
00:37:27,274 --> 00:37:27,695
using IK.

650
00:37:28,796 --> 00:37:33,681
And then I added a way to move the IK handle down to the ball of the foot so it becomes

651
00:37:33,701 --> 00:37:37,004
a little more manageable at the toe and you can get some more complex interaction.

652
00:37:37,024 --> 00:37:39,686
But again, it's nothing new.

653
00:37:39,746 --> 00:37:44,351
The thing that is sort of novel about it is that it doesn't have to be there from the

654
00:37:44,391 --> 00:37:44,771
get-go.

655
00:37:44,931 --> 00:37:49,175
We can pull in a raw character into the scene and he can have IK whenever we decide he needs

656
00:37:49,255 --> 00:37:51,077
it and bake it off when we're done.

657
00:37:53,587 --> 00:37:58,388
Looking at a little more of a special case interaction in this scene, I've applied IK

658
00:37:58,428 --> 00:38:01,910
to just the right arm that has the sword.

659
00:38:02,850 --> 00:38:08,953
And this is one of the nice features of our suite of tools is that it's very easy to change

660
00:38:08,993 --> 00:38:10,913
the object space of our controls.

661
00:38:10,973 --> 00:38:14,695
So in this case, I've selected a vertex at the tip of the sword where he's driving it

662
00:38:14,735 --> 00:38:15,375
into the ground.

663
00:38:15,915 --> 00:38:19,337
It's going to be the parent of the IK handle's motion on his right arm.

664
00:38:19,637 --> 00:38:22,098
So if I plant a stretch of that, it's going to plant the sword.

665
00:38:22,618 --> 00:38:24,879
in the ground, we can blend into and out of that state,

666
00:38:25,299 --> 00:38:27,561
and then we can key any sort of wiggle off of that,

667
00:38:28,161 --> 00:38:29,161
bake right out from under it,

668
00:38:29,181 --> 00:38:31,943
and we're back to a garden variety IK setup.

669
00:38:32,563 --> 00:38:35,185
Really, a lot of our tricks are shifting things

670
00:38:35,265 --> 00:38:37,866
off to locators, locking portions of the character

671
00:38:37,926 --> 00:38:40,047
out to world space, or orient locking them

672
00:38:40,147 --> 00:38:43,469
to an object space, or in this case,

673
00:38:43,549 --> 00:38:46,511
moving IK handle pivots to either other parts

674
00:38:46,551 --> 00:38:48,952
of other characters, or other portions

675
00:38:49,012 --> 00:38:51,413
of the character's extremities in the scene.

676
00:38:54,485 --> 00:38:55,726
It's also on-demand IK.

677
00:38:55,946 --> 00:38:58,287
One of the things that sort of breaks my heart

678
00:38:58,347 --> 00:39:00,349
anytime someone comes into a rigless environment

679
00:39:00,389 --> 00:39:02,550
is they'll grab the end of a limb,

680
00:39:03,010 --> 00:39:05,552
pull it off into space, and sort of detach the hand.

681
00:39:05,852 --> 00:39:07,333
It's a little scary to me.

682
00:39:07,893 --> 00:39:10,454
And if you've worked with the Character Studio

683
00:39:10,574 --> 00:39:12,175
or those kind of fully featured rigs,

684
00:39:12,635 --> 00:39:14,817
it's something you really enjoy having.

685
00:39:14,877 --> 00:39:19,359
So we added that through Script Jobs to our tool set.

686
00:39:19,399 --> 00:39:20,420
So through the Picker window,

687
00:39:20,900 --> 00:39:22,361
you can build an IK handle that doesn't,

688
00:39:22,461 --> 00:39:27,382
bake a full-time dedicated IK layer onto them. It just gives you a temporary way

689
00:39:27,422 --> 00:39:31,864
of controlling and adjusting the pose with an end effector, with a pole vector,

690
00:39:32,484 --> 00:39:36,805
and even the ability to move the parent relative to the end space of that rig.

691
00:39:36,985 --> 00:39:40,626
And again, it's just a great way of cheating these poses on layers or

692
00:39:40,666 --> 00:39:46,908
pushing poses on layers. And yeah, part of the bring your own best approach to the

693
00:39:46,948 --> 00:39:49,469
situation philosophy we've adopted.

694
00:39:51,310 --> 00:39:52,831
And finally, there's a human IK rig.

695
00:39:53,251 --> 00:39:56,094
This is one of those things where I see the things

696
00:39:56,114 --> 00:39:57,275
that human IK can do.

697
00:39:57,335 --> 00:40:00,338
I know I'm not going to be able to build something

698
00:40:00,378 --> 00:40:02,800
that amazing and complex and comprehensive,

699
00:40:02,860 --> 00:40:07,044
so why not just incorporate it into the available functions

700
00:40:07,244 --> 00:40:07,984
of our tool set?

701
00:40:08,024 --> 00:40:11,147
So it really was a simple matter of just writing a script

702
00:40:11,167 --> 00:40:13,910
to characterize our standard biped skeleton.

703
00:40:14,890 --> 00:40:17,913
Bake it to Maya's version of the human IK rig.

704
00:40:18,173 --> 00:40:21,756
And here, our principal animator, Patrick Wagee,

705
00:40:21,836 --> 00:40:25,859
is demoing pushing a pose on a layer using human IK.

706
00:40:26,019 --> 00:40:29,662
So using all of the features, such as the space locking,

707
00:40:30,823 --> 00:40:34,646
full body IK, all of the really, again,

708
00:40:34,907 --> 00:40:37,769
the nice, fully featured, comprehensive aspects

709
00:40:37,869 --> 00:40:39,931
of a rigging system like that.

710
00:40:39,951 --> 00:40:41,892
But again, we don't want to be a slave to a rig like that.

711
00:40:41,932 --> 00:40:42,513
We don't want.

712
00:40:43,494 --> 00:40:45,556
to have one paradigm for working with data.

713
00:40:45,696 --> 00:40:49,761
Because a lot of times, you have a tougher time drilling down

714
00:40:49,821 --> 00:40:51,263
to the way you want to control the pose

715
00:40:51,884 --> 00:40:52,985
with a fully featured rig.

716
00:40:53,346 --> 00:40:55,008
It intervenes in ways you don't want it to.

717
00:40:55,288 --> 00:40:58,152
So great for some purposes, not for all purposes.

718
00:40:58,252 --> 00:41:01,236
But we do roll it into the way we work.

719
00:41:03,852 --> 00:41:07,333
So to recap, I know it went off on a tangent about IK.

720
00:41:08,474 --> 00:41:10,595
We've seen the trimming and positioning of the raw mocap,

721
00:41:11,035 --> 00:41:14,076
the timescale pass, altering posing on layers,

722
00:41:14,156 --> 00:41:16,137
pushing those key moments in the animation.

723
00:41:17,097 --> 00:41:19,338
Now we've seen the IK cleanup on the hands and feet.

724
00:41:19,358 --> 00:41:22,399
And let's see where Mark arrived after that.

725
00:41:22,639 --> 00:41:24,980
So moonwalking talion is no more.

726
00:41:25,360 --> 00:41:29,101
And these key parts of the action are really, sorry,

727
00:41:29,161 --> 00:41:31,362
I'm going to need to figure out how to get this to loop again.

728
00:41:41,267 --> 00:41:42,348
All right, let's give it a shot.

729
00:41:47,592 --> 00:41:48,092
One moment.

730
00:41:52,035 --> 00:41:52,595
And we're back.

731
00:41:53,276 --> 00:41:56,498
So Talion's sliding, he's really grounded now.

732
00:41:56,618 --> 00:41:59,320
His feet are locked, that stab through the head

733
00:41:59,721 --> 00:42:01,502
is sinking in there and staying planted

734
00:42:01,962 --> 00:42:02,963
and he's pulling it out.

735
00:42:03,003 --> 00:42:04,644
Mark has even made a major adjustment to.

736
00:42:06,305 --> 00:42:11,550
I went, oh sorry, next slide we'll see back to the primary motion capture

737
00:42:11,570 --> 00:42:15,133
clean up here. We're seeing the difference between pre-IK, post-IK.

738
00:42:15,693 --> 00:42:19,376
Just a little bit of work that remains and that is things like finger animation,

739
00:42:20,157 --> 00:42:25,141
further polish, additional smaller details. Working general to specific

740
00:42:25,201 --> 00:42:31,226
really, it's like sketching. Good, it's looping. So I've gone all the way back to

741
00:42:31,246 --> 00:42:34,248
the original mocap here so you can see how far we've come.

742
00:42:38,393 --> 00:42:39,397
Excuse the interruption.

743
00:42:39,417 --> 00:42:41,427
Getting good at this.

744
00:42:52,817 --> 00:42:56,538
So really we started with great data, but we've enhanced it every step of the way

745
00:42:57,038 --> 00:43:01,300
to something that really is paying off in both the speed,

746
00:43:01,380 --> 00:43:05,801
the lethal feeling and just the ferocity of this final read.

747
00:43:05,981 --> 00:43:09,782
And it helps when Mark dresses up his scene with flying limbs.

748
00:43:10,282 --> 00:43:12,743
That's not a requirement of authoring this in the game.

749
00:43:12,803 --> 00:43:17,184
We will actually be spawning those giblets, but it's great as a preview for sure.

750
00:43:19,983 --> 00:43:22,505
So onto some of the less animation-driven things,

751
00:43:22,545 --> 00:43:24,526
but more the practical aspects of bringing this

752
00:43:24,586 --> 00:43:25,967
into the game data format.

753
00:43:26,467 --> 00:43:27,808
We'll look at motion encoding these.

754
00:43:28,048 --> 00:43:30,390
So an important part of making sync actions function

755
00:43:30,450 --> 00:43:32,451
is that each character tracks the location

756
00:43:33,092 --> 00:43:35,553
of their counterpart in the synchronized action.

757
00:43:36,054 --> 00:43:38,295
So each character carries something called an attach node,

758
00:43:38,675 --> 00:43:40,897
and that is used to track the world space position

759
00:43:40,917 --> 00:43:42,458
of their counterpart in the sync action.

760
00:43:42,498 --> 00:43:43,719
If one of them runs into trouble,

761
00:43:44,139 --> 00:43:46,701
grinding up against a wall, getting pushed against a ledge,

762
00:43:46,901 --> 00:43:48,162
or moving into a space,

763
00:43:48,882 --> 00:43:52,746
is dangerous for them or is going to have them looking like they don't belong, they

764
00:43:52,766 --> 00:43:56,290
can actually push their counterpart out away from the obstacle.

765
00:44:00,773 --> 00:44:06,576
So back to our model edit tool to look at how motion encoding looks in the format of

766
00:44:06,616 --> 00:44:07,677
our exported animation.

767
00:44:08,157 --> 00:44:10,678
That first stretch is watching the animation play in space.

768
00:44:11,379 --> 00:44:14,921
I click the key that allows us to see the motion encoding in action, and now the orc

769
00:44:14,961 --> 00:44:19,383
is moving as he would in the game and watching his bounding box, tracking his position in

770
00:44:19,403 --> 00:44:19,764
the world.

771
00:44:20,604 --> 00:44:24,965
I'm going to unhide the skeleton in this tool so we can actually track what that attach

772
00:44:25,025 --> 00:44:25,525
node is doing.

773
00:44:25,565 --> 00:44:27,505
It'll show up as that yellow point on the screen.

774
00:44:27,906 --> 00:44:32,026
That's representative of where Talion is going to be during the entirety of this synchronized

775
00:44:32,366 --> 00:44:33,187
combat action.

776
00:44:33,907 --> 00:44:37,447
So you can see the facing and positioning of where the player character is going to

777
00:44:37,507 --> 00:44:41,528
be and how he's going to get latched onto the orc and how they're going to be paired

778
00:44:41,768 --> 00:44:43,969
in playback during runtime.

779
00:44:49,795 --> 00:44:52,516
I love talking about this target character scale in the game.

780
00:44:52,976 --> 00:44:57,857
I talked a little earlier about orcs and how they're 110% of Italian scale, but they really

781
00:44:57,997 --> 00:44:59,097
use a shared skeleton.

782
00:44:59,538 --> 00:45:01,878
So everyone gets authored Italian size.

783
00:45:02,358 --> 00:45:07,240
But at runtime, not only do we have standard orc scales, but we have a range of variety

784
00:45:07,280 --> 00:45:08,360
within those orc scales.

785
00:45:08,420 --> 00:45:12,321
We can have an orc infantry that's 105% of human size or 115% or if he's a captain, 120%.

786
00:45:12,361 --> 00:45:13,582
We have orcs of every shape and size.

787
00:45:13,602 --> 00:45:14,242
They all share a skeleton.

788
00:45:19,203 --> 00:45:21,304
And they all have to align during sync actions.

789
00:45:22,944 --> 00:45:26,925
So at runtime, we force the scale of the character

790
00:45:27,085 --> 00:45:28,266
during sync actions.

791
00:45:28,566 --> 00:45:30,786
And we've got a nice illustration of it here.

792
00:45:31,226 --> 00:45:33,287
Three archers in the world, those numbers

793
00:45:33,307 --> 00:45:34,647
that are floating over their center

794
00:45:34,947 --> 00:45:37,148
are representative of their native scale

795
00:45:37,168 --> 00:45:38,388
as newly spawned AI.

796
00:45:38,688 --> 00:45:39,168
One guy was at 90%.

797
00:45:39,308 --> 00:45:39,848
One guy was at 92%.

798
00:45:39,888 --> 00:45:40,368
Another guy's at 97%.

799
00:45:40,408 --> 00:45:42,449
But if you watch as these sync actions are happening,

800
00:45:48,930 --> 00:45:53,411
attack that he's doing, you see that scale quickly scale up and lock during

801
00:45:53,451 --> 00:45:57,232
the entirety of that interaction. And here where Talion seizes the orc to

802
00:45:57,292 --> 00:46:02,654
brand him, he gets locked at that 1.1 scale, but as he's released slowly scales

803
00:46:02,734 --> 00:46:09,155
back to his original 0.9 size. We hide at both ends of the scale locking where we

804
00:46:09,175 --> 00:46:14,396
very quickly scale to that desired sync action size, and then after we release

805
00:46:14,436 --> 00:46:18,217
them we allow them to slowly drift back to the scale that they

806
00:46:18,780 --> 00:46:19,848
should be in the game.

807
00:46:24,164 --> 00:46:27,006
And this is where the other departments start to get involved with the data.

808
00:46:27,286 --> 00:46:30,988
Now that we've exported it out to Model Edit, we have things called key strings.

809
00:46:31,208 --> 00:46:37,271
They're markup in the game data that our combat designers will put in, again, about attack

810
00:46:37,331 --> 00:46:43,075
windows or exit windows or when damage is applied or when hip colliders are enabled.

811
00:46:43,695 --> 00:46:50,119
Our effects department, things like blood trails, sword swooshes, all the gore, even

812
00:46:50,559 --> 00:46:52,320
the severed limbs.

813
00:46:53,160 --> 00:46:56,042
Our audio key strings, again, without sound,

814
00:46:56,482 --> 00:46:58,103
these things really aren't going to pay off.

815
00:46:58,183 --> 00:47:02,486
And boy, our audio guys really make these things sound intense.

816
00:47:03,506 --> 00:47:05,648
Our combat face key strings, the animation team

817
00:47:05,668 --> 00:47:09,590
will come back in, and we'll define these preset poses

818
00:47:09,630 --> 00:47:10,130
for the faces.

819
00:47:10,630 --> 00:47:12,411
animated looping states for characters.

820
00:47:12,451 --> 00:47:16,532
And we try to sell the extremes, winces, grimaces, screams,

821
00:47:16,692 --> 00:47:21,114
yells, anger, you know, that slide with all the emotions,

822
00:47:21,134 --> 00:47:22,555
the intensity of these emotions.

823
00:47:22,975 --> 00:47:23,855
And then presentation.

824
00:47:23,875 --> 00:47:27,036
Our realization department are the guys

825
00:47:27,076 --> 00:47:29,297
who really make these things at runtime pay off

826
00:47:29,517 --> 00:47:30,878
as a cinematic experience.

827
00:47:31,238 --> 00:47:32,758
They'll bring in slow motion,

828
00:47:33,138 --> 00:47:34,419
they'll bring in camera movement,

829
00:47:34,499 --> 00:47:37,140
and they'll really do their best to sell these

830
00:47:37,260 --> 00:47:39,381
as really special moments in the game.

831
00:47:39,981 --> 00:47:40,101
So.

832
00:47:41,900 --> 00:47:46,442
Here's a look at key strings in the context again of our model edit tool and

833
00:47:46,722 --> 00:47:50,364
Model edit I should say I'm spending a lot of time bouncing back to this

834
00:47:50,684 --> 00:47:55,066
We do have better tools that show our characters textured and actually with the game data

835
00:47:55,126 --> 00:47:57,807
It just happens that this as such a simple tool

836
00:47:58,427 --> 00:48:02,490
Really becomes the the confluence of a lot of the different departments work on these

837
00:48:03,350 --> 00:48:07,773
markups all the little green ticks if you can see at the bottom of the screen a

838
00:48:07,813 --> 00:48:15,058
representative of some comment or some action that a department has specified or even a multitude of on a single frame

839
00:48:15,838 --> 00:48:17,339
semicolon separated

840
00:48:18,400 --> 00:48:22,242
scripts that tell the engine something about how this is to play back

841
00:48:23,480 --> 00:48:27,622
All right, finally, let's see this amazing sync action

842
00:48:27,682 --> 00:48:28,863
in context in the game.

843
00:48:29,323 --> 00:48:30,984
We'll see it from quite a few angles.

844
00:48:36,687 --> 00:48:37,427
Yeah!

845
00:48:39,088 --> 00:48:39,668
Give it a sec.

846
00:48:40,108 --> 00:48:41,109
Let me exit out of here.

847
00:48:41,329 --> 00:48:43,330
Boy, I don't want to steal the thunder in that one.

848
00:48:43,590 --> 00:48:43,830
Hold on.

849
00:48:43,850 --> 00:48:44,010
Ha ha ha.

850
00:48:52,535 --> 00:48:58,638
Bear with me please, and let's give that another try.

851
00:49:05,801 --> 00:49:06,321
Sorry Mark.

852
00:49:27,678 --> 00:49:31,300
Sorry about that. Let me go right to the folder and let's try playing that sucker.

853
00:49:31,580 --> 00:49:34,621
If I can just find that... You know what? I'm not even gonna...

854
00:49:34,661 --> 00:49:37,182
Let's just play it.

855
00:49:39,223 --> 00:49:43,865
And we'll see this from a number of camera angles.

856
00:49:43,905 --> 00:49:50,308
Same thing, actually, but it looks new every time I see it.

857
00:49:55,750 --> 00:49:56,070
All right.

858
00:49:57,504 --> 00:50:03,191
Thanks.

859
00:50:03,251 --> 00:50:08,257
And let me get my mouse back and let's get back to the presentation so we can finish up these slides.

860
00:50:11,882 --> 00:50:12,622
Come on back.

861
00:50:13,183 --> 00:50:13,684
There we go.

862
00:50:15,226 --> 00:50:16,547
I know you guys have got it on your screen.

863
00:50:16,607 --> 00:50:17,488
I don't have it on mine yet.

864
00:50:22,266 --> 00:50:25,407
Thanks for the applause break. I guess that really is the end of our

865
00:50:26,888 --> 00:50:30,970
talk about the tools. And I really don't wanna miss this slide though,

866
00:50:30,990 --> 00:50:33,651
because I'm gonna tell you about the other talks that Monolith is doing.

867
00:50:34,431 --> 00:50:36,752
Some really good ones. Be sure not to miss

868
00:50:38,133 --> 00:50:41,455
the ones you see listed on the screen. I got to see a few

869
00:50:41,475 --> 00:50:44,756
of them as part of practice, and I learned something new from all of

870
00:50:44,816 --> 00:50:48,538
them. So they're really informative and well worth attending.

871
00:50:50,820 --> 00:50:58,003
Monolith Games is starting to hire, so yeah, we're starting pre-production on something

872
00:50:58,043 --> 00:50:58,184
new.

873
00:50:58,364 --> 00:51:00,004
So, yeah, hit us up.

874
00:51:00,224 --> 00:51:01,045
Check out our website.

875
00:51:01,625 --> 00:51:03,166
That is our contact information.

876
00:51:03,606 --> 00:51:04,707
Thank you so much for attending.

877
00:51:04,747 --> 00:51:05,307
This was a lot of fun.

878
00:51:05,347 --> 00:51:06,187
And I guess we'll start the Q&A section now.

879
00:51:06,207 --> 00:51:06,407
Thank you.

880
00:51:06,427 --> 00:51:06,607
Thank you.

881
00:51:06,627 --> 00:51:06,808
Thank you.

882
00:51:06,828 --> 00:51:07,008
Thank you.

883
00:51:07,028 --> 00:51:07,208
Thank you.

884
00:51:07,228 --> 00:51:07,408
Thank you.

885
00:51:07,428 --> 00:51:07,608
Thank you.

886
00:51:07,628 --> 00:51:07,828
Thank you.

887
00:51:07,848 --> 00:51:08,028
Thank you.

888
00:51:08,048 --> 00:51:08,228
Thank you.

889
00:51:08,248 --> 00:51:08,428
Thank you.

890
00:51:08,448 --> 00:51:08,628
Thank you.

891
00:51:08,648 --> 00:51:08,828
Thank you.

892
00:51:20,152 --> 00:51:21,993
Hey, I've got a couple questions.

893
00:51:22,173 --> 00:51:22,453
Sure.

894
00:51:23,074 --> 00:51:26,175
You mentioned using HumanIK for some of your control rigs.

895
00:51:26,215 --> 00:51:26,435
Sure.

896
00:51:27,336 --> 00:51:30,577
Did you also use that to import your mocap files or your mocap

897
00:51:30,597 --> 00:51:31,738
data onto your skeletons?

898
00:51:32,178 --> 00:51:33,658
Oh, so no.

899
00:51:34,719 --> 00:51:37,360
Once we move out of MotionBuilder,

900
00:51:37,500 --> 00:51:39,681
which we actually do use, I guess,

901
00:51:40,642 --> 00:51:48,144
HumanIK in its MotionBuilder format to process our motion analysis skeleton onto our character

902
00:51:48,164 --> 00:51:48,584
skeleton.

903
00:51:48,964 --> 00:51:53,165
But really, once we move it out of there as an FBX file, we have a batch process that

904
00:51:53,285 --> 00:51:57,187
actually retranslates that data to our model anim format.

905
00:51:57,207 --> 00:51:59,387
So it's really just bone animation data.

906
00:51:59,447 --> 00:52:02,788
So we start with just rotations and translations on the character skeleton.

907
00:52:03,269 --> 00:52:08,230
If we want HumanIK back in the Maya context, that's our business to layer it back on when

908
00:52:08,250 --> 00:52:08,590
we need it.

909
00:52:09,350 --> 00:52:10,231
Awesome.

910
00:52:10,372 --> 00:52:13,395
And then the other one that I had is camera angles.

911
00:52:13,435 --> 00:52:15,357
Did you guys animate multiple cameras,

912
00:52:15,757 --> 00:52:17,719
or is that all handled engine side?

913
00:52:18,260 --> 00:52:18,520
Yes.

914
00:52:19,221 --> 00:52:21,083
Our realization department, when they

915
00:52:21,163 --> 00:52:22,664
focus on one of the sync actions,

916
00:52:22,684 --> 00:52:24,226
they will author multiple.

917
00:52:25,547 --> 00:52:29,228
angles of attack for them to play back in the context of the game.

918
00:52:29,268 --> 00:52:34,309
Because if there are visual obstructions or parts of the character they can't swing around

919
00:52:34,349 --> 00:52:38,910
to when they need to, they have several fallback options, falling even all the way back to

920
00:52:38,970 --> 00:52:44,110
just the game camera if they can't find a cinematic camera that operates in the space

921
00:52:44,390 --> 00:52:45,031
that it needs to.

922
00:52:45,491 --> 00:52:52,392
But yeah, they'll author two or three different takes and have those all available at runtime.

923
00:52:52,832 --> 00:52:53,152
Awesome.

924
00:52:53,172 --> 00:52:53,892
Thanks for the question.

925
00:52:54,212 --> 00:52:54,332
Yeah.

926
00:52:55,230 --> 00:52:55,431
Hi.

927
00:52:55,671 --> 00:52:56,391
Hi.

928
00:52:57,112 --> 00:52:57,532
It's great.

929
00:52:57,792 --> 00:52:58,473
I finished the game.

930
00:52:58,613 --> 00:52:59,413
It's a great game.

931
00:52:59,433 --> 00:53:02,656
So I have a question about the mocap

932
00:53:03,336 --> 00:53:04,717
and the size of the skeleton.

933
00:53:04,937 --> 00:53:07,039
So you said all the skeleton could be shared,

934
00:53:07,379 --> 00:53:09,440
but there's a lot of different size of the orc.

935
00:53:09,900 --> 00:53:13,723
So is it just one skeleton for all?

936
00:53:13,763 --> 00:53:14,564
Yes.

937
00:53:15,164 --> 00:53:17,886
And it drives our character artists a little crazy

938
00:53:17,906 --> 00:53:20,147
sometimes to have to conform to this shared biped.

939
00:53:20,228 --> 00:53:22,569
But really, from our skinniest, scrawniest orc

940
00:53:24,330 --> 00:53:28,292
Portly Orcs, they all have Talion's skeleton.

941
00:53:28,512 --> 00:53:33,234
And again, Frank Shores is a wiz at skin weighting,

942
00:53:33,294 --> 00:53:35,935
so he makes it all work on the singular format.

943
00:53:36,495 --> 00:53:39,036
We did do a trick with female characters.

944
00:53:39,576 --> 00:53:42,037
Our El Tariel DLC, and even her character in the game,

945
00:53:42,538 --> 00:53:44,618
is able to share a lot of Talion's animations.

946
00:53:45,639 --> 00:53:47,259
Our engineers, our gameplay engineers,

947
00:53:47,299 --> 00:53:49,380
gave us this great tool that allowed us

948
00:53:49,460 --> 00:53:52,381
to scale out her shoulders, or scale in her shoulders.

949
00:53:52,922 --> 00:53:55,184
So when she's idling, when she's moving around,

950
00:53:55,244 --> 00:53:58,167
she has a more feminine silhouette.

951
00:53:58,687 --> 00:54:01,250
And when she needs to be talion and reach what talion can reach,

952
00:54:01,650 --> 00:54:04,573
climbing or doing some of the sink actions,

953
00:54:05,173 --> 00:54:07,215
we let her shoulders be really broad.

954
00:54:07,696 --> 00:54:09,678
And again, like the orc scaling,

955
00:54:10,178 --> 00:54:11,860
no one seems to give us a hard time about it.

956
00:54:11,880 --> 00:54:13,301
So, yeah, everyone's happy.

957
00:54:13,642 --> 00:54:14,302
All right, thank you.

958
00:54:14,342 --> 00:54:14,582
Thank you.

959
00:54:15,698 --> 00:54:17,219
Hey, really cool talk, thanks.

960
00:54:17,259 --> 00:54:19,781
So, really interested in the on-demand rigging.

961
00:54:19,881 --> 00:54:21,503
I've been trying to push that for a while,

962
00:54:21,583 --> 00:54:24,706
but the two main pushbacks I'm getting is

963
00:54:24,906 --> 00:54:26,947
one, we're not riggers, we're animators.

964
00:54:27,048 --> 00:54:27,308
Sure, yeah.

965
00:54:27,748 --> 00:54:30,531
And the second one is we don't want to work with baked animation.

966
00:54:31,271 --> 00:54:37,375
Oh yeah, that really is sort of the deal with the devil that you have to make with this

967
00:54:37,635 --> 00:54:43,619
approach to the tools is that you can't be precious about your key spacing.

968
00:54:43,999 --> 00:54:45,800
So you know, once...

969
00:54:47,181 --> 00:54:52,203
Once you embrace that layers give you the kind of control you typically want to focus

970
00:54:52,263 --> 00:54:56,946
on the key aspects of the motion, the way that you don't have to worry about clearing

971
00:54:56,986 --> 00:55:01,548
other things out of the way to do, I think once it sort of becomes a philosophy of the

972
00:55:01,568 --> 00:55:04,049
way you manage the data, it...

973
00:55:04,789 --> 00:55:07,150
becomes a much easier mindset to embrace.

974
00:55:07,170 --> 00:55:07,570
Yeah, it's...

975
00:55:07,590 --> 00:55:09,210
That's one of those things where you have to prove it

976
00:55:09,410 --> 00:55:10,751
in order to be able to show them as to...

977
00:55:10,991 --> 00:55:14,412
Yeah, and the aspect of they don't want to be riggers,

978
00:55:14,692 --> 00:55:15,072
it really...

979
00:55:15,652 --> 00:55:17,832
It's a button press to put IK onto

980
00:55:18,132 --> 00:55:20,073
whatever limb you want or multiple limbs.

981
00:55:20,313 --> 00:55:24,014
So, they aren't fussing with worrying about, you know,

982
00:55:24,474 --> 00:55:26,054
building handles or controls.

983
00:55:26,134 --> 00:55:27,395
It's there when they want it and

984
00:55:27,715 --> 00:55:31,736
baked right back off when they want to be back in the FK space.

985
00:55:31,996 --> 00:55:34,279
So that brings me on to a second question, sorry.

986
00:55:35,942 --> 00:55:37,144
When there's a single button press,

987
00:55:37,184 --> 00:55:40,248
I'm assuming there's relatively straightforward metadata

988
00:55:40,268 --> 00:55:42,111
within the skeleton to be able to mark up to say,

989
00:55:42,131 --> 00:55:43,974
okay, well, it should be like this and so forth.

990
00:55:44,254 --> 00:55:44,655
Yes.

991
00:55:45,035 --> 00:55:45,156
Yeah.

992
00:55:45,908 --> 00:55:53,970
So with the shared skeleton, we have names that are consistent throughout our bipedal characters.

993
00:55:54,030 --> 00:55:55,671
So I leverage that a lot.

994
00:55:55,691 --> 00:56:01,072
I'm kind of a lazy scripter where if I can reference something by name and I don't need to abstract it, I will.

995
00:56:01,132 --> 00:56:05,514
But we do, we mirror the behavior of the bones in our skeleton.

996
00:56:05,614 --> 00:56:07,774
So we flip those axes where we want to.

997
00:56:08,034 --> 00:56:13,196
And again, helps with the direct control and not worrying about what is it like to manage.

998
00:56:13,796 --> 00:56:15,878
raising both arms when you don't have a nice rake.

999
00:56:17,318 --> 00:56:21,361
But it also lets us differentiate left and right behavior very easily.

1000
00:56:21,381 --> 00:56:22,102
Cool.

1001
00:56:22,602 --> 00:56:22,882
Thank you.

1002
00:56:22,902 --> 00:56:23,102
Thank you.

1003
00:56:25,658 --> 00:56:32,562
Hi, my question is regarding to creatures. Oh sure. I know that you can make a mocap with creatures

1004
00:56:32,602 --> 00:56:36,904
So how do you manage the specific creatures animation and sync animation with this?

1005
00:56:37,224 --> 00:56:40,826
Oh sure. Do you want to talk a little more about animating creatures Camille?

1006
00:56:41,006 --> 00:56:46,469
Camille has worked with and has given me a lot of great feedback on what it's like to animate with the Drake in particular

1007
00:56:46,529 --> 00:56:50,591
She did some pretty intense capture. I don't know if that works.

1008
00:56:50,851 --> 00:56:52,011
We do live a lot of the same things.

1009
00:56:52,732 --> 00:56:53,532
Oh, yeah, sorry.

1010
00:56:55,107 --> 00:56:57,727
We utilize a lot of the same tools, tool set,

1011
00:56:58,127 --> 00:57:00,428
except we're not using Bakesy animation as our source.

1012
00:57:00,468 --> 00:57:03,748
So we're still using that rip-on-off tool set.

1013
00:57:03,788 --> 00:57:06,329
We'll bring in our quadruped, you know,

1014
00:57:06,369 --> 00:57:10,109
Kragor and throw on whatever tool set, IK, feet.

1015
00:57:10,709 --> 00:57:13,170
We can have the pivots and stuff like that.

1016
00:57:13,210 --> 00:57:14,610
We can change them on the fly

1017
00:57:14,630 --> 00:57:17,130
and animate very much at a classic sense

1018
00:57:17,170 --> 00:57:18,431
for the quadrupeds.

1019
00:57:18,471 --> 00:57:20,811
Do you animate like a hand key animation?

1020
00:57:21,931 --> 00:57:22,551
Yep, mm-hmm.

1021
00:57:22,591 --> 00:57:23,372
Yeah, all key frame.

1022
00:57:24,052 --> 00:57:26,213
We did try to mocap the caracore,

1023
00:57:26,273 --> 00:57:27,474
but we didn't quite get there.

1024
00:57:29,635 --> 00:57:29,995
Thank you.

1025
00:57:30,335 --> 00:57:30,656
Thank you.

1026
00:57:32,737 --> 00:57:32,897
Hi.

1027
00:57:32,917 --> 00:57:33,397
Oh, are we done?

1028
00:57:33,457 --> 00:57:34,118
You're out of time.

1029
00:57:34,518 --> 00:57:34,878
Oh, sorry.

1030
00:57:34,898 --> 00:57:36,819
We're out of time.

1031
00:57:36,859 --> 00:57:38,440
Yeah, we'll be here if you want to come up.

1032
00:57:38,500 --> 00:57:40,621
But thanks so much, everybody, for hanging around.

