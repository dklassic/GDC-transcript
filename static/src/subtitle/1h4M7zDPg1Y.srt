1
00:00:06,710 --> 00:00:07,070
OK.

2
00:00:07,090 --> 00:00:09,312
Hello, everyone.

3
00:00:09,332 --> 00:00:11,134
The people behaved themselves last night.

4
00:00:11,254 --> 00:00:12,815
Thanks for coming, making it at 10.

5
00:00:12,856 --> 00:00:15,218
That's pretty early, even by game development standards.

6
00:00:15,278 --> 00:00:16,779
So I appreciate that.

7
00:00:18,281 --> 00:00:20,463
They've asked me to ask everyone to please silence

8
00:00:20,683 --> 00:00:23,025
your cell phones and anything else that makes noise, because

9
00:00:23,045 --> 00:00:23,766
they're recording this.

10
00:00:24,566 --> 00:00:25,828
And other than that, we'll get going.

11
00:00:26,068 --> 00:00:28,250
And hopefully we'll have some time left to answer some

12
00:00:28,310 --> 00:00:29,331
questions, if there are any.

13
00:00:30,247 --> 00:00:33,011
So by way of a quick introduction, my name is Greg Donovan.

14
00:00:33,191 --> 00:00:34,633
I'm a senior producer at Volition.

15
00:00:34,653 --> 00:00:37,677
They've been putting up with me there for about a decade.

16
00:00:37,878 --> 00:00:40,842
I've been in this crazy industry for 16 years now.

17
00:00:42,853 --> 00:00:48,496
Most recently, I was the lead producer on Saints Row 2 and Saints Row the 3rd,

18
00:00:48,696 --> 00:00:50,237
but none of that stuff's really important.

19
00:00:51,037 --> 00:00:52,798
The important stuff is what this talk is about.

20
00:00:53,799 --> 00:00:56,560
It's about the challenge of delivering on a game's vertical slice

21
00:00:57,561 --> 00:01:00,142
and showing Volition's history of vertical slices

22
00:01:00,182 --> 00:01:03,664
through examples from the Saints Row and Red Faction franchises.

23
00:01:03,724 --> 00:01:08,367
And we'll review the successes and failures of this deliverable from these titles.

24
00:01:08,407 --> 00:01:12,149
Sneak peek, we've had more failures than we've had successes, but that's okay.

25
00:01:13,046 --> 00:01:15,307
Volition as a studio believes the vertical slice

26
00:01:15,867 --> 00:01:17,387
should be part of the development cycle

27
00:01:17,568 --> 00:01:18,928
because even with its challenges,

28
00:01:18,988 --> 00:01:21,889
it can really help the team before entering production,

29
00:01:22,209 --> 00:01:25,630
and this talk aims to illustrate that point and show why.

30
00:01:27,551 --> 00:01:29,792
We're giving this talk to hopefully educate,

31
00:01:29,892 --> 00:01:31,072
share, and inform,

32
00:01:31,792 --> 00:01:33,273
potentially help you and your team

33
00:01:33,293 --> 00:01:35,153
to avoid the mistakes that we've made in the past

34
00:01:35,193 --> 00:01:37,854
because we believe that sharing each other's mistakes

35
00:01:37,934 --> 00:01:39,935
and learning from them means better games for everyone,

36
00:01:39,955 --> 00:01:41,115
and that's something we all want.

37
00:01:43,189 --> 00:01:46,470
But before this talk, there's some caveats and you need to know them.

38
00:01:47,390 --> 00:01:51,411
Number one, this is not a do this and you will have guaranteed success lecture.

39
00:01:51,851 --> 00:01:53,351
We're not claiming to have the answer.

40
00:01:53,491 --> 00:01:56,032
I've been to lectures like that and frankly I think they're horse shit.

41
00:01:56,312 --> 00:01:57,112
Excuse my French.

42
00:01:57,832 --> 00:01:58,372
Think about it.

43
00:01:58,452 --> 00:02:04,413
We, production, our job is to basically accurately and consistently schedule profitable fun.

44
00:02:04,653 --> 00:02:07,494
A process that is inherently iterated upon time and time again.

45
00:02:08,145 --> 00:02:09,546
It's really, really hard to do.

46
00:02:09,806 --> 00:02:11,167
So if you're looking for a silver bullet,

47
00:02:11,607 --> 00:02:13,508
you're going to be really disappointed with me.

48
00:02:13,868 --> 00:02:14,589
I apologize.

49
00:02:15,209 --> 00:02:17,710
Two, this talk is where Volition is now,

50
00:02:17,811 --> 00:02:19,171
based on our past learnings.

51
00:02:20,572 --> 00:02:23,774
This is how we approach Vertical Slice today.

52
00:02:23,794 --> 00:02:25,355
It may change in the future.

53
00:02:26,035 --> 00:02:27,636
And moreover, this is based on what we do

54
00:02:28,116 --> 00:02:29,397
and what works for our studio.

55
00:02:29,577 --> 00:02:31,858
Volition has about 200 full-time employees.

56
00:02:32,278 --> 00:02:34,780
And we make, by most accounts, large open world games

57
00:02:34,840 --> 00:02:35,800
on the console and PC.

58
00:02:36,438 --> 00:02:38,600
And what we do may not be right for you and your teams.

59
00:02:39,500 --> 00:02:41,321
Finally, this talk isn't about me.

60
00:02:41,481 --> 00:02:43,002
I didn't work on all the projects here.

61
00:02:43,722 --> 00:02:45,483
This is about the studio and its learnings.

62
00:02:45,563 --> 00:02:46,583
I'm just the mouthpiece.

63
00:02:47,524 --> 00:02:48,885
I drew the short straw, I guess.

64
00:02:48,905 --> 00:02:50,005
I don't know.

65
00:02:50,065 --> 00:02:52,406
I did do a lot of interviews with many principals

66
00:02:52,526 --> 00:02:55,488
on the projects to ensure that accuracy here.

67
00:02:57,189 --> 00:02:59,690
I want to spend a little bit of time answering this.

68
00:02:59,750 --> 00:03:01,491
And apologies if this is insulting.

69
00:03:01,551 --> 00:03:03,072
I know that most of you probably have an idea.

70
00:03:03,092 --> 00:03:03,992
I just want to make sure that.

71
00:03:04,873 --> 00:03:06,954
We're using the same language as a common language

72
00:03:06,994 --> 00:03:07,995
in getting into the talk.

73
00:03:08,935 --> 00:03:10,697
First and foremost, this concept can

74
00:03:10,737 --> 00:03:12,718
go by a lot of different names.

75
00:03:12,778 --> 00:03:14,359
Sometimes it's called a first playable.

76
00:03:15,039 --> 00:03:16,960
Sometimes it's called a proof of concept.

77
00:03:17,461 --> 00:03:19,522
And if you're really cool and from Silicon Valley,

78
00:03:19,542 --> 00:03:21,323
you may call it a minimum viable product.

79
00:03:21,763 --> 00:03:24,245
And if you're really, really busy, you call it an MVP,

80
00:03:24,305 --> 00:03:26,026
because acronyms are really, really cool.

81
00:03:26,687 --> 00:03:28,348
But anyway, they all mean the same thing.

82
00:03:28,688 --> 00:03:31,550
For common understanding, a vertical slice is.

83
00:03:32,443 --> 00:03:37,968
A section, level, gameplay duration, X number of missions, whatever, of the full game that

84
00:03:38,028 --> 00:03:43,392
successfully communicates the team's intended player experience by having major systems

85
00:03:43,452 --> 00:03:45,994
and features proved out in production working together.

86
00:03:46,014 --> 00:03:50,677
The assets aren't typically final, but they should be as close as possible representative

87
00:03:50,717 --> 00:03:51,538
of final quality.

88
00:03:52,659 --> 00:03:55,821
Yeah, I made that lovely image because when you try and do an image of a vertical slice,

89
00:03:55,841 --> 00:03:56,742
there aren't many out there.

90
00:03:56,762 --> 00:03:57,943
I'm really proud of that one.

91
00:03:59,255 --> 00:04:01,576
Generally speaking, vertical slice is a very large and

92
00:04:01,616 --> 00:04:05,159
complex milestone that occurs just before production. They

93
00:04:05,199 --> 00:04:07,580
are challenging, but we believe they're worth the effort

94
00:04:07,600 --> 00:04:10,842
because they can teach you a whole bunch, not least of which

95
00:04:10,982 --> 00:04:22,529
is... There we go. Click. Whether or not the team is ready

96
00:04:22,569 --> 00:04:24,910
to move into production. As a team,

97
00:04:25,492 --> 00:04:28,273
You can determine whether or not you're ready to move in production, where production is

98
00:04:28,373 --> 00:04:32,154
usually defined as the team knows what they're making and how to make it by attempting to

99
00:04:32,514 --> 00:04:35,094
actively, objectively answer these questions.

100
00:04:36,095 --> 00:04:38,215
Is the game delivering on the player experience?

101
00:04:38,275 --> 00:04:40,036
Do you get a sense of what the game is?

102
00:04:41,056 --> 00:04:43,376
Do you have an acceptable level of tech debt?

103
00:04:44,136 --> 00:04:48,397
A quick aside for tech debt, no way is everything going to be done on the vertical slice.

104
00:04:48,457 --> 00:04:49,598
Some systems and features...

105
00:04:50,737 --> 00:04:54,020
will be hacked in, others are still going to be in development, you'll probably have

106
00:04:54,040 --> 00:04:55,961
a few that haven't even been started yet.

107
00:04:56,061 --> 00:05:00,084
The issue is, the team's going to need to necessarily finish these systems, otherwise

108
00:05:00,104 --> 00:05:04,067
you're going to architect them correctly later in production.

109
00:05:04,208 --> 00:05:08,311
And the rub is trying to quantify and track how much work is left to bring these systems

110
00:05:08,371 --> 00:05:11,033
to a point where they're ready far enough along to be submitted.

111
00:05:12,728 --> 00:05:17,951
So, succinctly, it's like this vertical slice can keep the team objective and honest about

112
00:05:18,011 --> 00:05:20,073
progress and whether or not you're ready to move into production.

113
00:05:20,873 --> 00:05:24,816
Overall and importantly, the issues you uncover in a vertical slice, and you will uncover

114
00:05:24,856 --> 00:05:28,859
them, are going to be, they're best discovered earlier on, rather than later on in production.

115
00:05:30,019 --> 00:05:34,122
So to find out where we are, we're going to take a trip down memory lane, look at Volition's

116
00:05:34,182 --> 00:05:38,265
attempts at vertical slices based on what worked and what didn't on our projects.

117
00:05:39,986 --> 00:05:41,487
First up is Saints Row.

118
00:05:42,712 --> 00:05:44,153
came out in August of 2006.

119
00:05:44,613 --> 00:05:47,275
A little bit of history of this title.

120
00:05:47,435 --> 00:05:49,096
I used a similar slide last year,

121
00:05:49,176 --> 00:05:50,257
but it bears repeating.

122
00:05:50,958 --> 00:05:53,379
Saints Row was really, really hard for Volition.

123
00:05:53,800 --> 00:05:54,720
It was a new genre.

124
00:05:55,220 --> 00:05:57,062
We had never made open world games before.

125
00:05:57,682 --> 00:05:59,723
Completely new tech, engine, and tools.

126
00:05:59,743 --> 00:06:01,244
It was a new platform.

127
00:06:01,445 --> 00:06:02,565
We didn't know much about the 360

128
00:06:02,605 --> 00:06:04,547
that we were developing for it.

129
00:06:05,627 --> 00:06:07,809
We didn't know how to do much

130
00:06:07,849 --> 00:06:09,710
of what we were doing well at all.

131
00:06:10,290 --> 00:06:11,811
I mean, basically, it was shaping up to be

132
00:06:12,374 --> 00:06:17,616
a perfect storm. But this project does mark the first time that Volition consciously planned

133
00:06:17,996 --> 00:06:25,518
to deliver on a vertical slice. Before Saints Row 1, Volition had team sizes of about 50 to 60

134
00:06:25,938 --> 00:06:29,899
people. We didn't do vertical slices, in part because it wasn't part of our vernacular. It

135
00:06:29,959 --> 00:06:34,281
just wasn't a concept. And also in part it was just easier to turn around and see what people

136
00:06:34,321 --> 00:06:39,862
were doing. And with a team of 50 to 60, it's relatively easier to see what people are working

137
00:06:39,922 --> 00:06:41,903
on rather quickly and things just came together.

138
00:06:42,378 --> 00:06:44,879
this kind of cowboy development, Wild West.

139
00:06:45,779 --> 00:06:47,860
But for Saints Row One, that approach wasn't going to work.

140
00:06:49,040 --> 00:06:52,061
So this guy up here is the producer on Saints Row One.

141
00:06:52,081 --> 00:06:52,721
His name is Jacques.

142
00:06:53,181 --> 00:06:55,302
I have no real reason to put him up here, except that I

143
00:06:55,322 --> 00:06:56,002
like to troll him.

144
00:06:56,042 --> 00:06:57,523
And I know he probably doesn't like this picture.

145
00:06:58,329 --> 00:07:02,793
Anyway, he and others in studio management, before working at Volition, worked at companies

146
00:07:02,833 --> 00:07:04,794
where vertical slices were a thing.

147
00:07:05,455 --> 00:07:08,638
And they, being smart fellows, brought the concept to the team and said, hey, we should

148
00:07:08,658 --> 00:07:09,018
do this.

149
00:07:09,078 --> 00:07:12,121
And Volition, being smart fellows, said, yeah, that makes sense.

150
00:07:12,161 --> 00:07:13,302
We're buying into this concept.

151
00:07:13,322 --> 00:07:14,062
Let's make a plan.

152
00:07:14,082 --> 00:07:15,523
It wasn't a dumb idea.

153
00:07:16,104 --> 00:07:18,066
So they came up with a vertical slice deliverable.

154
00:07:18,386 --> 00:07:18,926
And that was?

155
00:07:19,803 --> 00:07:24,125
Make the deliverable phase-based, multiple milestones across multiple months.

156
00:07:24,145 --> 00:07:26,846
It's going to be a ton of work because it's new everything.

157
00:07:26,866 --> 00:07:28,587
It's going to take some time.

158
00:07:29,507 --> 00:07:35,290
Make the deliverable culminate in a demonstration of the playable experience, player experience.

159
00:07:35,850 --> 00:07:40,992
And make it playable in a city section, a small city section, that is exhibiting core gameplay.

160
00:07:41,813 --> 00:07:46,915
And overall, show progress and sell the vision to both the publisher and the team.

161
00:07:47,745 --> 00:07:50,348
Internally, we needed to know that we can make open world games,

162
00:07:50,428 --> 00:07:52,430
and the publisher, which was THQ at the time,

163
00:07:52,470 --> 00:07:55,413
we needed to show them that the game wasn't as controversial

164
00:07:55,473 --> 00:07:57,115
as some of them over there thought at the time.

165
00:07:57,936 --> 00:08:00,018
So, they had a plan, felt good about it,

166
00:08:00,278 --> 00:08:03,101
and decided to plow headlong into the storm.

167
00:08:04,320 --> 00:08:09,861
So actually part of the result, up here, this is a map of St. Trois Vertical Slice, the environment.

168
00:08:09,881 --> 00:08:13,482
It was ultimately called Phase 5 because it took 5 months to do it.

169
00:08:14,663 --> 00:08:17,364
It's one section of the city, approximately 4 blocks.

170
00:08:18,224 --> 00:08:23,425
The next clip I'm going to show you is some gameplay footage from Phase 5, from St. Trois 1.

171
00:08:23,485 --> 00:08:29,407
Full disclosure, the clip is actually one month after the latest documentation I could find on the St. Trois 1 Vertical Slice.

172
00:08:29,988 --> 00:08:35,102
But everyone I spoke with on Saints Row One says that the footage is indeed from this deliverable.

173
00:09:05,296 --> 00:09:05,436
you

174
00:09:40,229 --> 00:09:44,591
That rather brisk frame rate has not been altered or sped up in any way, I promise.

175
00:09:46,208 --> 00:09:50,936
So looking back in hindsight about what worked and what didn't for the vertical slides in Saint's Row,

176
00:09:51,497 --> 00:09:53,260
it demonstrated the player experience.

177
00:09:53,300 --> 00:09:56,164
We had gameplay there through core features working locomotion.

178
00:09:56,852 --> 00:10:00,394
combat navigation vehicles, etc. The fun was there.

179
00:10:01,574 --> 00:10:06,377
The deliverable was in a city section. The team had a first pass of what it would take to make a city.

180
00:10:07,058 --> 00:10:09,519
And it answered some good questions for the development team.

181
00:10:09,719 --> 00:10:12,221
Scope was coming into focus. We knew it was going to be huge.

182
00:10:12,761 --> 00:10:17,124
In fact, this deliverable was a starting point for us to talk about whether or not we needed more time.

183
00:10:18,125 --> 00:10:22,389
Seriously, knowing whether or not you have a scope or timing issue as early as possible is a good thing.

184
00:10:22,449 --> 00:10:29,116
The vertical slice can help add data to an otherwise subjective concerns that typically come from, you know, production team members.

185
00:10:30,498 --> 00:10:34,742
Finally, it sold the experience. It got the team excited, it got THQ excited,

186
00:10:35,243 --> 00:10:40,088
precisely because a pay provision was actually in the plan, in the game, and you could play it.

187
00:10:41,915 --> 00:10:47,917
As for what didn't work, scope was huge. Remember, the date was in question, at least internally we're talking about it.

188
00:10:48,557 --> 00:10:55,379
But instead of looking for ways to work smarter, like reducing scope, we instead asked the team to work harder, longer, and more.

189
00:10:56,260 --> 00:11:00,821
Saints Row 1 was a very bad crunch for most of the studio, and in retrospect we could have done things a lot better.

190
00:11:02,224 --> 00:11:05,485
Secondly, tech debt wasn't understood or quantified at all.

191
00:11:05,525 --> 00:11:08,466
This was our first attempt at making an open world game.

192
00:11:08,726 --> 00:11:13,008
We had no idea what we were getting into precisely, because there were so many new things.

193
00:11:14,348 --> 00:11:18,010
And although there were many unproven technical issues, you know, it's never ideal to do tech

194
00:11:18,070 --> 00:11:20,931
and game at the same time as design, but it happens.

195
00:11:21,231 --> 00:11:23,392
I'm going to focus on the streaming example.

196
00:11:24,512 --> 00:11:27,193
Streaming is the first time you're making a really big matzah ball.

197
00:11:27,213 --> 00:11:28,594
If you haven't done it, it's a lot of fun.

198
00:11:29,564 --> 00:11:31,906
So anyway, to help provide some context,

199
00:11:31,986 --> 00:11:33,828
streaming is rather critical for open world games.

200
00:11:33,868 --> 00:11:36,410
You can't have everything in the world loaded at once

201
00:11:36,871 --> 00:11:39,714
like you can for many other linear or level-based games.

202
00:11:40,314 --> 00:11:42,376
Objects, animations, all the data has to stream in

203
00:11:42,416 --> 00:11:44,338
around the player, and you do your best to hide it.

204
00:11:44,838 --> 00:11:46,159
And if your streaming isn't efficient,

205
00:11:46,179 --> 00:11:47,341
then the game doesn't run well.

206
00:11:48,101 --> 00:11:49,623
This is a map of Saints Row One.

207
00:11:49,863 --> 00:11:51,384
It's divided into city chunks.

208
00:11:52,025 --> 00:11:54,047
At the time, we had a chunk-based streaming system,

209
00:11:54,067 --> 00:11:54,527
and it could only...

210
00:11:55,375 --> 00:11:59,699
load in two chunks at once. The problem was, we didn't fully realize at the time, there

211
00:11:59,719 --> 00:12:04,464
were a number of areas that we called tri-points, which basically were three chunks met, like

212
00:12:04,524 --> 00:12:08,948
this. So whenever a player came across these areas, particularly when they were in a vehicle

213
00:12:08,988 --> 00:12:12,531
and driving very fast, the whole world would crap out and it would be a very poor experience.

214
00:12:12,551 --> 00:12:14,773
I'll bring it up here a little bit higher there.

215
00:12:15,619 --> 00:12:18,380
So again, phase five was basically only two chunks

216
00:12:19,101 --> 00:12:20,562
with an incomplete streaming system.

217
00:12:20,682 --> 00:12:22,483
And we had no idea if this tri-point problem

218
00:12:22,503 --> 00:12:23,583
was going to be that big of an issue.

219
00:12:24,123 --> 00:12:26,865
So basically, we let the development team go wide

220
00:12:26,925 --> 00:12:28,646
after phase five, the vertical slice.

221
00:12:29,106 --> 00:12:31,367
And the chunk sizes, instead of being uniform

222
00:12:31,387 --> 00:12:34,188
and in a brick pattern, were all arbitrarily sized,

223
00:12:34,248 --> 00:12:36,510
the size of which was dictated by the world artists.

224
00:12:37,540 --> 00:12:40,443
So, throw in the fact we hadn't even touched level of details,

225
00:12:40,883 --> 00:12:42,445
phase five didn't have any of those,

226
00:12:43,006 --> 00:12:44,027
and things like shaders,

227
00:12:44,087 --> 00:12:46,069
which are pretty commonplace terms now,

228
00:12:46,510 --> 00:12:47,991
at the time were only known by a few

229
00:12:48,031 --> 00:12:49,713
like really hardcore engine nerds.

230
00:12:50,554 --> 00:12:53,377
We basically had this tech debt that assumed

231
00:12:53,417 --> 00:12:55,720
that was a monster and it bit the team very, very hard.

232
00:12:57,530 --> 00:12:59,812
As far as the lessons, again using hindsight 2020,

233
00:13:00,853 --> 00:13:03,375
overall, phase five, the vertical slice,

234
00:13:03,395 --> 00:13:04,716
was deemed a helpful deliverable.

235
00:13:04,816 --> 00:13:05,997
It was gonna be a thing for us

236
00:13:06,057 --> 00:13:08,379
and part of our development schedule.

237
00:13:09,020 --> 00:13:10,541
It helped identify issues the team

238
00:13:10,561 --> 00:13:11,562
would have otherwise missed.

239
00:13:11,622 --> 00:13:12,623
It helped sell the vision.

240
00:13:13,043 --> 00:13:14,624
It's great to have a playable demo

241
00:13:14,644 --> 00:13:16,486
before that communicates the vision

242
00:13:16,526 --> 00:13:17,687
before you go into production.

243
00:13:18,307 --> 00:13:19,928
It doesn't identify all the issues.

244
00:13:20,008 --> 00:13:23,749
Certainly, we didn't realize how much technical debt we had amassed.

245
00:13:23,829 --> 00:13:25,429
Phase-based is a good way to approach it,

246
00:13:25,449 --> 00:13:28,770
because it's a lot of work, and you won't get it done in, like, in one month milestone.

247
00:13:29,290 --> 00:13:33,011
And, of course, it solidified the opinion that making open-world games is hard for us.

248
00:13:33,991 --> 00:13:36,772
So, rounding out Saints Row One, I like to do these fun facts,

249
00:13:36,792 --> 00:13:39,753
to kind of, like, make it a little bit more interesting.

250
00:13:40,364 --> 00:13:46,747
After the game launched, there was a witty YouTuber announced this musical entitled Buggy Saints Row.

251
00:13:46,767 --> 00:13:48,007
It's a musical.

252
00:13:48,027 --> 00:13:52,829
It was very painful to watch at the time, but we can mostly watch it in good faith now.

253
00:13:52,869 --> 00:13:54,089
It's still up there. I totally...

254
00:13:54,109 --> 00:13:58,111
You know, you guys can go watch it if you want, but it's kind of weird to think back.

255
00:13:58,151 --> 00:14:02,473
And we created a game that inspired someone to write a musical about performance issues.

256
00:14:02,513 --> 00:14:03,633
So, yay us.

257
00:14:04,614 --> 00:14:07,436
Saints Row 1 was running at 10 to 15 frames a second

258
00:14:07,456 --> 00:14:09,298
approximately three weeks before launch.

259
00:14:09,318 --> 00:14:10,739
This is not an exaggeration.

260
00:14:11,359 --> 00:14:14,442
I think failure to establish the tech and the budgets earlier

261
00:14:14,462 --> 00:14:16,884
in production were likely the largest contributor to this.

262
00:14:17,525 --> 00:14:19,847
And the Hail Mary was this system called PVS,

263
00:14:19,907 --> 00:14:21,468
which is Potential Visibility Sets.

264
00:14:21,508 --> 00:14:23,910
Basically this giant rendering farm

265
00:14:24,371 --> 00:14:27,994
used to calculate performances set up by programmers.

266
00:14:28,074 --> 00:14:29,755
Programming saved us on this project,

267
00:14:29,775 --> 00:14:31,477
and this is the epitome of necessities,

268
00:14:31,497 --> 00:14:32,338
the mother of invention.

269
00:14:33,417 --> 00:14:35,739
And finally, the 3DS City Max.

270
00:14:36,259 --> 00:14:40,242
The SR1 City was modeled and edited in 3DS Max.

271
00:14:40,882 --> 00:14:43,084
It's a great authoring tool, but it's not a world editor.

272
00:14:43,224 --> 00:14:45,045
And kudos to the team for actually doing that.

273
00:14:45,986 --> 00:14:47,647
All right, moving on to other titles.

274
00:14:47,707 --> 00:14:48,608
Next up is Saints Row 2.

275
00:14:50,157 --> 00:14:50,998
Came out in October of 2008.

276
00:14:51,218 --> 00:14:55,180
The history of this was pre-production on Saints Row 2

277
00:14:55,260 --> 00:14:57,441
started before Saints Row 1 actually launched.

278
00:14:57,461 --> 00:14:59,042
We were banking that was going to be a hit.

279
00:14:59,582 --> 00:15:01,823
But we necessarily had a different set of leads

280
00:15:01,863 --> 00:15:03,884
because you can't have leads finalizing a project

281
00:15:03,904 --> 00:15:05,245
and doing pre-production on the other.

282
00:15:05,898 --> 00:15:09,101
The new leads on that team, of which I was a part, was confident.

283
00:15:09,682 --> 00:15:11,544
From the outside looking in, we were saying,

284
00:15:11,564 --> 00:15:12,484
how hard could this be?

285
00:15:12,524 --> 00:15:14,446
Why are there so many problems on this new genre?

286
00:15:14,466 --> 00:15:16,888
If we're in charge, there won't be any problems.

287
00:15:16,948 --> 00:15:18,970
It'll be chocolate milk in the drinking fountains.

288
00:15:19,050 --> 00:15:20,131
Everyone will be happy.

289
00:15:21,312 --> 00:15:22,754
The Saints Row One team was overworked.

290
00:15:23,074 --> 00:15:24,835
They were really stressed.

291
00:15:25,276 --> 00:15:26,537
They were finalizing the game.

292
00:15:27,118 --> 00:15:28,439
They didn't have time to work with us,

293
00:15:28,479 --> 00:15:30,761
and because of our attitude, frankly, they didn't want to.

294
00:15:31,406 --> 00:15:33,569
So we did things our way, and that way was,

295
00:15:34,410 --> 00:15:36,652
take the code base and implement new features.

296
00:15:36,973 --> 00:15:39,856
Features that the Saints Row One team wanted to implement,

297
00:15:39,896 --> 00:15:40,878
but didn't have time to.

298
00:15:41,438 --> 00:15:43,741
Features the publisher wanted, and most importantly,

299
00:15:43,821 --> 00:15:45,683
features that we wanted to implement.

300
00:15:46,284 --> 00:15:48,307
And our plan was to make a vertical slice that

301
00:15:48,387 --> 00:15:51,230
demonstrated these features in all of their glory.

302
00:15:53,330 --> 00:15:59,152
Going through the archives, I couldn't find the actual SR2 vertical slice build, but we made one. We found something.

303
00:15:59,692 --> 00:16:04,513
Down there at the bottom there, this is a lovely Visio chart that we made. I don't know, this is like circa 2006.

304
00:16:04,913 --> 00:16:06,794
It's really weird going through all this stuff again.

305
00:16:07,354 --> 00:16:12,016
But down there at the bottom there, POC, proof of concept, was like this gate before going into production.

306
00:16:12,616 --> 00:16:15,977
But what we did find was this Saints Row 2 vision piece.

307
00:16:16,157 --> 00:16:18,198
And talking to the principals again, we agreed that...

308
00:16:18,758 --> 00:16:20,180
We're going to show you this on the next slide.

309
00:16:20,240 --> 00:16:23,865
The features that are contained in this video are all the features that we had done at the

310
00:16:23,905 --> 00:16:26,789
vertical slice before we went into production.

311
00:16:27,570 --> 00:16:31,415
So without further ado, here's the Accentro II vision piece.

312
00:16:33,578 --> 00:16:34,539
This one does have audio.

313
00:18:32,941 --> 00:18:35,261
So looking at Saints Row 2 in the context of the vertical

314
00:18:35,281 --> 00:18:36,102
slice, what worked?

315
00:18:36,142 --> 00:18:37,662
We got in a lot of cool new features.

316
00:18:37,742 --> 00:18:40,483
Frankly, a lot of the features that players expected from an

317
00:18:40,743 --> 00:18:44,864
open world game like boats, motorcycles, and flying.

318
00:18:45,524 --> 00:18:47,804
We made a lot of improvements in Saints Row 1's core

319
00:18:47,844 --> 00:18:49,525
gameplay, such as improved character

320
00:18:49,565 --> 00:18:50,885
creation and customization.

321
00:18:51,445 --> 00:18:54,026
So in this regard, we were nailing the SQL formula,

322
00:18:54,426 --> 00:18:56,686
taking the established core of the predecessor, improving

323
00:18:56,746 --> 00:18:59,687
upon it, and certainly by adding new and improved

324
00:18:59,747 --> 00:19:02,328
features on existing code bases, one way to make a

325
00:19:02,348 --> 00:19:02,548
SQL.

326
00:19:03,508 --> 00:19:06,229
And as with Saints Row 1, this video helped solidify the

327
00:19:06,269 --> 00:19:09,070
vision and get both the team and the publisher very excited

328
00:19:09,130 --> 00:19:13,732
about it. As for what didn't work, we took a shotgun feature

329
00:19:13,772 --> 00:19:16,593
approach. There was little to no focus on establishing a

330
00:19:16,633 --> 00:19:20,394
cohesive player experience. Saints Row 1 did focus on a

331
00:19:20,434 --> 00:19:23,736
player experience, even if it was Thug Life or an MTV rap

332
00:19:23,776 --> 00:19:27,257
video, they did have one. And this hurt us in production

333
00:19:27,377 --> 00:19:29,718
because we had a lot of people developing wide in the feature

334
00:19:29,758 --> 00:19:30,698
regard instead of deep.

335
00:19:31,259 --> 00:19:33,820
And Saints Row 2 tonally is really, really strange.

336
00:19:33,940 --> 00:19:36,481
In one scene, you can be euthanizing one of your homies.

337
00:19:36,921 --> 00:19:39,122
In another scene, you're streaking or you're

338
00:19:39,142 --> 00:19:40,783
spraying sewage on people.

339
00:19:40,823 --> 00:19:41,804
It's all over the place.

340
00:19:42,324 --> 00:19:44,745
The vision of that tone was just it wasn't solidified.

341
00:19:44,825 --> 00:19:47,747
And not having that in the vertical slice hurt us.

342
00:19:48,587 --> 00:19:50,628
And the tech debt thing hurt us again.

343
00:19:50,848 --> 00:19:52,949
We had to fix the streaming issues on Saints Row 1

344
00:19:53,370 --> 00:19:55,951
by making all the city chunks into a uniform size

345
00:19:56,011 --> 00:19:58,652
and make them smaller so we could have three loaded at once.

346
00:19:58,692 --> 00:19:59,853
We made it in a brick pattern.

347
00:20:00,404 --> 00:20:02,865
and we had to fix holes in the world to accommodate flying.

348
00:20:03,445 --> 00:20:07,867
But, as with Saints Row 1, we did a poor job of actually quantifying this tech debt.

349
00:20:08,747 --> 00:20:12,228
Fixing these issues in a small section of the world when you're doing it in a vertical slice

350
00:20:12,668 --> 00:20:16,729
doesn't do a good job of telling you how much work there is when you scale up into full production.

351
00:20:18,850 --> 00:20:19,831
As for the key lessons...

352
00:20:21,970 --> 00:20:24,031
You need to work towards delivering a player experience.

353
00:20:24,491 --> 00:20:26,531
Just having a list of features in a vacuum doesn't cut it.

354
00:20:27,152 --> 00:20:28,672
And if you follow a player experience,

355
00:20:28,712 --> 00:20:30,833
then necessarily the core gameplay, the systems,

356
00:20:30,893 --> 00:20:32,733
and features that support that player experience

357
00:20:32,773 --> 00:20:33,433
are going to follow.

358
00:20:34,353 --> 00:20:36,934
Again, we did the whole shotgun approach and developed wide

359
00:20:36,994 --> 00:20:37,694
instead of deep.

360
00:20:37,774 --> 00:20:39,295
And this methodology was basically

361
00:20:39,695 --> 00:20:41,435
throw things at the wall and see what sticks.

362
00:20:43,300 --> 00:20:45,783
Finally, we needed to improve, not finally, sorry.

363
00:20:45,803 --> 00:20:48,545
We needed to improve at extrapolating technical issues.

364
00:20:49,226 --> 00:20:50,748
Again, you're not gonna be feature complete,

365
00:20:51,088 --> 00:20:53,350
a vertical slice, but you need to determine

366
00:20:53,370 --> 00:20:55,612
which critical systems are really in their early states

367
00:20:55,672 --> 00:20:57,214
and how much work do they really, really need.

368
00:20:58,017 --> 00:21:00,501
And finally, check the egos at the door.

369
00:21:01,402 --> 00:21:02,404
Work with previous teams.

370
00:21:02,444 --> 00:21:05,508
A non-invented here philosophy is detrimental.

371
00:21:05,568 --> 00:21:06,569
It's not good for anyone.

372
00:21:07,090 --> 00:21:09,613
Competitiveness among teams is OK, but not

373
00:21:09,633 --> 00:21:13,839
when it comes to the expense of doubling up work and losing

374
00:21:13,859 --> 00:21:14,460
productivity.

375
00:21:17,290 --> 00:21:22,473
Fun facts about Saints Row 2. Co-op as a feature was added while in production or at the very

376
00:21:22,553 --> 00:21:27,856
least at the end of pre-production. It was our attempt at a silver bullet feature. It

377
00:21:27,876 --> 00:21:32,779
wasn't accommodated for at all in schedules and guess what, if you add co-op to a game

378
00:21:32,819 --> 00:21:35,741
before you go into production, it's going to add some work to the team.

379
00:21:36,921 --> 00:21:40,223
As with Saints Row 1, we used 3DS Max to create and edit the

380
00:21:40,263 --> 00:21:44,805
world. And this fun fact, Saints Row 2 had 94,000 reported

381
00:21:44,865 --> 00:21:48,547
bugs. The average bug count for all other Volition projects was

382
00:21:49,407 --> 00:21:52,089
40,000 bugs, which got me to thinking, what's the answer

383
00:21:52,149 --> 00:21:55,330
here? Did we have a better QA team on Saints Row 2 or was it a

384
00:21:55,410 --> 00:22:00,373
buggier game? Depends who you ask. Okay. Next up is Red

385
00:22:00,413 --> 00:22:04,255
Faction Guerrilla. It came out in June of 2009. It's a

386
00:22:06,234 --> 00:22:11,639
history for this is that Red Faction Guerrilla, I'm going to call it RFG or Guerrilla, was

387
00:22:11,679 --> 00:22:15,182
another challenging project for the studio. A key hook in this game, if you're not aware

388
00:22:15,202 --> 00:22:20,487
of the franchise, is that it has destructible environments. For RFG, we went from destruction

389
00:22:20,527 --> 00:22:25,311
in a linear game, like in Red Faction 1 or Red Faction 2, to destruction in an open world.

390
00:22:25,872 --> 00:22:27,532
which is a very hard problem to solve.

391
00:22:27,552 --> 00:22:28,372
I mean, think about it.

392
00:22:28,392 --> 00:22:31,133
You've got real-time physics-based arbitrary destruction.

393
00:22:31,533 --> 00:22:33,393
That's complicated enough in a linear game,

394
00:22:33,433 --> 00:22:34,554
but when you take it to the open world,

395
00:22:34,574 --> 00:22:36,214
it's a whole level of scariness.

396
00:22:36,234 --> 00:22:38,454
But the studio was moving towards making

397
00:22:38,515 --> 00:22:39,815
exclusively open-world games,

398
00:22:39,835 --> 00:22:41,815
so we, of course, we wanted to bring this technology

399
00:22:41,855 --> 00:22:43,976
to that genre, and it took a long time

400
00:22:44,016 --> 00:22:45,096
for the team to figure it out,

401
00:22:45,476 --> 00:22:46,616
determine how to make it work.

402
00:22:47,437 --> 00:22:49,857
The plan, starting out, because the problem

403
00:22:50,137 --> 00:22:52,418
of figuring out destruction in open world was so difficult,

404
00:22:52,878 --> 00:22:54,338
was quite intuitively, you know,

405
00:22:54,398 --> 00:22:55,478
to get the destruction working.

406
00:22:56,085 --> 00:23:00,330
through a tech demo. Lots of tech demos, they went through four of them. To be clear, these tech

407
00:23:00,350 --> 00:23:04,854
demos weren't vertical slices, they were demos focused on getting the technology working in an

408
00:23:04,914 --> 00:23:08,938
open world environment. On the next slide I'll show you a clip from one of these demos, and

409
00:23:09,018 --> 00:23:13,963
actually it's one of the things that the design team made, and you'll see that it's not really a

410
00:23:14,023 --> 00:23:17,607
playable game, it's more of a vision piece of like what could design for this game

411
00:23:18,228 --> 00:23:23,114
How could it be like if the tech were actually solidified, but at the time they made this it wasn't.

412
00:23:23,635 --> 00:23:27,280
This one does not have any sound, so there won't be anything wrong when you don't hear anything.

413
00:23:52,682 --> 00:23:56,985
So kind of looking at this holistically, what worked and what didn't for the team in regards to vertical slice.

414
00:23:57,606 --> 00:24:05,851
The team got the time to do things right, which in this case was like solving the very hard problem of real-time physics-based destruction.

415
00:24:06,867 --> 00:24:09,948
But they didn't make a true vertical slice, at least not

416
00:24:09,968 --> 00:24:10,808
before production.

417
00:24:11,468 --> 00:24:14,349
After the technology was deemed completed or solved, the team

418
00:24:14,389 --> 00:24:15,129
went into production.

419
00:24:15,169 --> 00:24:19,771
But there were still a ton of design issues to explore and,

420
00:24:19,971 --> 00:24:21,011
frankly, answer yet.

421
00:24:21,792 --> 00:24:23,932
This right here is one of the maps in the game.

422
00:24:23,952 --> 00:24:24,753
It's called Dust.

423
00:24:25,193 --> 00:24:28,674
The team remade this at least four times in production

424
00:24:28,774 --> 00:24:31,355
because they hadn't figured out the design or the

425
00:24:31,395 --> 00:24:32,095
gameplay yet.

426
00:24:33,000 --> 00:24:35,721
Effectively, the redoing of dust in production

427
00:24:36,161 --> 00:24:38,022
became the project's vertical slice,

428
00:24:38,462 --> 00:24:40,863
even though the team was officially, ostensibly,

429
00:24:41,283 --> 00:24:41,924
in production.

430
00:24:43,624 --> 00:24:47,166
Also, there wasn't a very good, strong vision on this game.

431
00:24:47,186 --> 00:24:47,926
It was very blurry.

432
00:24:47,946 --> 00:24:49,687
And some of the team had a running joke.

433
00:24:49,727 --> 00:24:50,888
It's like, what is this game about?

434
00:24:51,468 --> 00:24:52,528
Well, you destruction.

435
00:24:52,928 --> 00:24:53,809
What do you do in this game?

436
00:24:54,009 --> 00:24:55,109
Well, you destruction.

437
00:24:55,610 --> 00:24:57,130
That kind of added to the confusion

438
00:24:57,170 --> 00:24:59,631
of them trying to nail a cohesive player experience.

439
00:25:00,692 --> 00:25:02,593
Looking back at it and the lessons that we learned,

440
00:25:03,283 --> 00:25:05,905
key takeaways for Red Faction Guerrilla where it's like open

441
00:25:05,925 --> 00:25:08,908
world games with destruction are really, really hard. They take

442
00:25:08,948 --> 00:25:11,690
a long time, so long that sometimes you're going to focus

443
00:25:11,750 --> 00:25:15,633
on a singular problem, in this case the tech, and forget about

444
00:25:15,653 --> 00:25:18,796
the player experience and design. Tech demos allow the

445
00:25:18,816 --> 00:25:21,658
team to solve the problem, but tech demos are not a vertical

446
00:25:21,718 --> 00:25:25,041
slice precisely because they focus only on one thing,

447
00:25:25,441 --> 00:25:26,062
technology.

448
00:25:26,722 --> 00:25:29,084
And why this can be an important piece of the pie, it's only one piece.

449
00:25:29,264 --> 00:25:34,409
Basically, you can't prove out game design while tech of this magnitude is still evolving and being figured out.

450
00:25:34,889 --> 00:25:38,652
You can't say the team is in production if you're still trying to prove out core gameplay.

451
00:25:40,434 --> 00:25:42,355
Fun facts about Red Faction Guerrilla.

452
00:25:42,415 --> 00:25:46,739
We had two Saints Row games come out before one Red Faction game came out.

453
00:25:46,759 --> 00:25:47,660
It took them five years.

454
00:25:48,160 --> 00:25:49,541
We like to tease the team about this.

455
00:25:49,581 --> 00:25:52,724
They don't think it's nearly as funny as we do, but we think we're in the right here.

456
00:25:53,897 --> 00:25:56,219
Red Faction Guerrilla was originally a first person game.

457
00:25:56,319 --> 00:25:57,560
You may have noticed that in the clip.

458
00:25:58,321 --> 00:26:00,323
The publisher asked to change it to third person

459
00:26:00,343 --> 00:26:02,605
because at the time third person games were selling better

460
00:26:02,645 --> 00:26:04,046
than first person on console.

461
00:26:04,587 --> 00:26:08,410
This produced a very short lived but vivid shit storm of volition

462
00:26:08,430 --> 00:26:11,052
but in retrospect it was probably the right decision.

463
00:26:12,694 --> 00:26:15,717
Next up, it's one of my favorites, Red Faction Armageddon.

464
00:26:16,297 --> 00:26:17,438
Came out in June 2011.

465
00:26:20,740 --> 00:26:24,988
Depending on who you ask, some will say that Red Faction Armageddon, I may call it RFA,

466
00:26:25,449 --> 00:26:28,595
was a more difficult project than Saints Row One.

467
00:26:28,615 --> 00:26:31,180
There was a lot of collaboration from the publisher on this game.

468
00:26:31,735 --> 00:26:36,400
And unfortunately, much of this collaboration came in the form of specific features or ideas.

469
00:26:37,201 --> 00:26:42,967
Taking a step back, a lot of people don't know this, but Red Faction Armageddon was originally planned to be Red Faction Crusade,

470
00:26:43,427 --> 00:26:46,190
which is going to be a direct sequel from Red Faction Guerrilla.

471
00:26:46,710 --> 00:26:51,295
Red Faction Armageddon is kind of like the spiritual successor, but narratively doesn't have much to do with it.

472
00:26:51,875 --> 00:26:56,940
The producer on this game was from a company who also did vertical slices, so it was part of the development cycle.

473
00:26:57,400 --> 00:27:01,864
And they had a very specific plan for what they were doing the vertical slice in Red Faction Crusade.

474
00:27:02,572 --> 00:27:04,253
And that was a four-month deliverable.

475
00:27:04,453 --> 00:27:06,255
Again, it takes a long time to do these right.

476
00:27:07,655 --> 00:27:09,336
25% of the gameplay was going to be above ground.

477
00:27:09,717 --> 00:27:12,458
One of the new features was to take the destruction

478
00:27:12,558 --> 00:27:13,039
underground.

479
00:27:13,079 --> 00:27:15,060
So 75% of it would be underground.

480
00:27:15,540 --> 00:27:16,881
Proving out underground mechanics,

481
00:27:16,941 --> 00:27:18,702
underground destruction was something new for us.

482
00:27:19,183 --> 00:27:21,904
They were also focusing other single-player features

483
00:27:21,924 --> 00:27:22,565
like repair.

484
00:27:23,025 --> 00:27:24,386
In addition to destroying things,

485
00:27:24,406 --> 00:27:25,747
you could actually build it up again.

486
00:27:25,767 --> 00:27:27,708
And they were focusing also on making

487
00:27:27,728 --> 00:27:29,189
it look better than Red Faction Guerrilla.

488
00:27:30,166 --> 00:27:32,208
On the next slide, you're going to see a quick clip of the

489
00:27:32,248 --> 00:27:35,270
footage from Red Faction Crusade's vertical slice.

490
00:27:35,831 --> 00:27:37,412
It's very quick, but I just want to show it to you.

491
00:27:37,472 --> 00:27:42,156
It's like how solid, how far along this team was, because

492
00:27:42,176 --> 00:27:44,538
vertical slices were, by this time, kind of a thing in our

493
00:27:44,558 --> 00:27:45,318
development schedule.

494
00:27:45,338 --> 00:27:46,239
We're getting better at it.

495
00:27:47,220 --> 00:27:50,182
You'll notice that animations, basic combat, the way things

496
00:27:50,202 --> 00:27:51,303
look, it's really shaping up.

497
00:28:25,267 --> 00:28:28,331
Okay, then the team received some notes from a newly hired

498
00:28:28,431 --> 00:28:32,597
creative director at THQ. These notes came during month two of

499
00:28:32,637 --> 00:28:35,120
the four month vertical slice. And one of the motifs of this,

500
00:28:35,400 --> 00:28:38,625
of this, these notes were, get aliens at the game.

501
00:28:40,225 --> 00:28:43,006
At the time, the team was like, okay, thanks for the notes,

502
00:28:43,026 --> 00:28:45,268
these are great, it makes sense, but certainly these can't be a

503
00:28:45,308 --> 00:28:47,969
mandate, right? We're two months away from production, we're in

504
00:28:47,989 --> 00:28:50,130
the middle of a vertical slice, so the team kind of ignored

505
00:28:50,170 --> 00:28:53,352
these things and just went back to work. And shortly thereafter,

506
00:28:53,432 --> 00:28:55,894
THQ went through some management changes and that creative

507
00:28:55,914 --> 00:28:58,515
director became an executive vice president, and even more

508
00:28:58,595 --> 00:29:01,377
shortly thereafter, the team received some more notes, and

509
00:29:01,397 --> 00:29:04,459
the gist of those was, did you think I was joking about the

510
00:29:04,539 --> 00:29:04,959
aliens?

511
00:29:05,792 --> 00:29:06,713
And we had an epiphany.

512
00:29:06,733 --> 00:29:08,395
It was like, OK, we get it.

513
00:29:08,415 --> 00:29:09,396
Let's put in these aliens.

514
00:29:09,457 --> 00:29:10,037
It makes sense.

515
00:29:10,057 --> 00:29:11,339
It's a sci-fi game.

516
00:29:11,359 --> 00:29:11,899
Let's do this.

517
00:29:13,536 --> 00:29:16,077
And there was also a really important footnote to the whole

518
00:29:16,217 --> 00:29:17,078
add aliens thing.

519
00:29:17,118 --> 00:29:19,539
It was also, and you need to bring in the game by six

520
00:29:19,619 --> 00:29:19,899
months.

521
00:29:20,740 --> 00:29:22,421
So there was a new plan.

522
00:29:22,641 --> 00:29:24,442
As you can imagine, there was some scrambling and

523
00:29:24,482 --> 00:29:26,843
consternation and people trying to figure out what are we

524
00:29:26,863 --> 00:29:27,483
going to do here.

525
00:29:28,003 --> 00:29:30,205
So the team and studio management came up with a new

526
00:29:30,265 --> 00:29:32,966
plan, and that was the solution out of necessity was

527
00:29:33,386 --> 00:29:36,288
make the game linear, take it fully underground, because

528
00:29:36,348 --> 00:29:38,849
linearity would be easier underground, and get the

529
00:29:38,909 --> 00:29:39,710
aliens in game.

530
00:29:42,588 --> 00:29:45,031
Here's a way to contextualize what happened. On the left we

531
00:29:45,051 --> 00:29:47,313
have Red Faction Crusade, on the right we have Red Faction

532
00:29:47,333 --> 00:29:51,337
Armageddon. Here's where the team, Red Faction Crusade was

533
00:29:51,377 --> 00:29:53,820
working on the vertical slice, month two of four when the

534
00:29:53,860 --> 00:29:57,303
request for aliens came in. And here's for various reasons the

535
00:29:57,344 --> 00:30:01,368
team needed to pull it in by six months, the street date. And

536
00:30:01,408 --> 00:30:03,970
here's where the team actually got their first aliens in game.

537
00:30:04,971 --> 00:30:08,012
So looking back at Red Faction Armageddon in the context of

538
00:30:08,092 --> 00:30:11,272
what worked and what didn't, as far as the good is, the team

539
00:30:11,312 --> 00:30:14,773
got in aliens. And they pulled in the ship date by multiple

540
00:30:14,813 --> 00:30:19,234
months. They made the necessary but painful decision to go from

541
00:30:19,314 --> 00:30:22,834
open world to linear in order to hit a date. Seriously, what the

542
00:30:22,854 --> 00:30:24,735
team did here was pretty incredible. I've personally

543
00:30:24,775 --> 00:30:27,915
never worked on a team that's a game of this size that was able

544
00:30:27,935 --> 00:30:30,436
to pull in the street date by six months. And I think that

545
00:30:30,456 --> 00:30:32,776
they don't get enough credit. And they really worked hard to

546
00:30:32,896 --> 00:30:33,597
make that happen.

547
00:30:34,674 --> 00:30:37,256
As far as, oh, there we go, sorry.

548
00:30:38,237 --> 00:30:40,660
As far as what didn't work, there was no vertical slice.

549
00:30:40,760 --> 00:30:43,122
This was the epitome of a team figuring things out

550
00:30:43,242 --> 00:30:43,882
as they went.

551
00:30:44,103 --> 00:30:45,684
Aliens were added in production.

552
00:30:46,185 --> 00:30:48,286
They abandoned their plans to do a vertical slice

553
00:30:48,346 --> 00:30:49,588
and just kind of plowed ahead.

554
00:30:49,908 --> 00:30:52,110
Right or wrong, that was the decision the team made.

555
00:30:52,550 --> 00:30:54,952
And because of this, it wasn't an easy production schedule.

556
00:30:55,813 --> 00:30:56,754
When you're figuring things out,

557
00:30:56,794 --> 00:30:58,596
like what do aliens look like, how do they move,

558
00:30:58,636 --> 00:31:01,478
what are they, you're most certainly not in production.

559
00:31:02,964 --> 00:31:06,285
So the key lessons are sometimes despite best efforts and

560
00:31:06,325 --> 00:31:09,166
planning, the shit can hit the fan and things can fall apart.

561
00:31:09,766 --> 00:31:12,727
You can say you're in production, but if you're

562
00:31:12,747 --> 00:31:15,368
figuring things out as you go, you're really not in

563
00:31:15,428 --> 00:31:18,209
production. You're just fooling yourself and the team. To be

564
00:31:18,289 --> 00:31:21,690
clear, it was well within the publisher's purview to mandate

565
00:31:21,730 --> 00:31:24,671
aliens. And to be fair, the publisher did not dictate their

566
00:31:24,691 --> 00:31:26,112
behavior, how they looked.

567
00:31:27,296 --> 00:31:29,118
or their whole history of motivation.

568
00:31:29,178 --> 00:31:30,860
And aliens aren't exactly out of pocket

569
00:31:30,900 --> 00:31:32,442
when it comes to a science fiction game.

570
00:31:32,902 --> 00:31:34,324
The issue was it's just the timelines

571
00:31:34,364 --> 00:31:36,927
with developers and publishers sometimes don't match.

572
00:31:37,288 --> 00:31:39,851
And it was a very complicated feature to be added so late.

573
00:31:42,502 --> 00:31:47,505
We don't have a lot of fun facts for Red Faction Armageddon, but this is a clip from the movie Bolt,

574
00:31:47,966 --> 00:31:52,188
which quickly made the rounds around Volition and THQ when the aliens request came in.

575
00:31:52,208 --> 00:31:54,130
It was kind of serendipity. It was kind of fun.

576
00:31:54,470 --> 00:31:57,792
I know you're a busy dog, but if you've got a second, we'd love to pitch you an idea for your show.

577
00:31:58,112 --> 00:32:00,153
Tom's better at pitching. I'll let him take it from here.

578
00:32:00,433 --> 00:32:01,554
Tommy's got the spotlight!

579
00:32:05,216 --> 00:32:06,137
Wait for it...

580
00:32:08,616 --> 00:32:23,386
aliens. Audience love aliens. You can't touch us. I don't know

581
00:32:23,406 --> 00:32:25,888
if you call that ironic or serendipity or what, but it was

582
00:32:25,968 --> 00:32:29,590
great. And again, you know, the aliens went in and they fit and

583
00:32:29,750 --> 00:32:32,632
the game was a success. Saints Row the third came out in

584
00:32:32,672 --> 00:32:34,073
November of 2011.

585
00:32:38,347 --> 00:32:41,189
The history of that is like, we largely had the same

586
00:32:42,010 --> 00:32:45,372
leads team on Saints Row the 3rd as we had on Saints Row 2. This was helpful in that

587
00:32:45,893 --> 00:32:49,536
we were able to more directly learn from our experiences and our mistakes in Saints Row 2.

588
00:32:50,116 --> 00:32:53,499
Experience told us that we needed to make a more defined vertical slice, especially

589
00:32:53,579 --> 00:32:54,660
focus on the aesthetics.

590
00:32:55,181 --> 00:32:57,863
Wanted the game to look better than Saints Row 1 and Saints Row 2, not the

591
00:32:58,143 --> 00:33:00,505
prettiest looking game. So we started planning for a multi-

592
00:33:01,045 --> 00:33:02,567
phase vertical slice from the get-go.

593
00:33:03,639 --> 00:33:06,061
The plan this time was to deliver it in phases again,

594
00:33:06,121 --> 00:33:08,102
but we're going to do a two-pronged attack

595
00:33:08,582 --> 00:33:11,244
in that focus on art and gameplay vertical slices

596
00:33:11,304 --> 00:33:11,804
separately.

597
00:33:12,284 --> 00:33:14,046
The thinking was, let's let artists

598
00:33:14,086 --> 00:33:15,486
focus on making things look good,

599
00:33:15,967 --> 00:33:18,028
and let's let design focus on the fun factor.

600
00:33:18,208 --> 00:33:20,650
Let's minimize interruptions, do our respective things,

601
00:33:20,690 --> 00:33:21,830
and then marry the two at the end

602
00:33:21,870 --> 00:33:23,251
for one great vertical slice.

603
00:33:24,072 --> 00:33:25,832
On the next slide, I'm going to show you an example of one

604
00:33:25,872 --> 00:33:27,293
of the art vertical slices.

605
00:33:27,333 --> 00:33:29,954
This is an earlier one, way early in pre-production.

606
00:33:29,974 --> 00:33:31,594
It was designed to show off improvements

607
00:33:32,015 --> 00:33:34,215
to visual acuity, most notably in the world

608
00:33:34,255 --> 00:33:34,956
and the environments.

609
00:33:52,878 --> 00:33:55,502
I think everything in here had its own collision.

610
00:33:58,086 --> 00:34:00,349
It looks a lot better than Saints Row 2 for sure,

611
00:34:00,409 --> 00:34:03,834
but I don't know if its own geometry and collision

612
00:34:03,874 --> 00:34:06,097
for each of those individual assets was the right thing.

613
00:34:06,438 --> 00:34:08,861
And we'll certainly talk about that a little bit more.

614
00:34:23,158 --> 00:34:25,199
So that slide will come into play a little bit later.

615
00:34:25,219 --> 00:34:28,161
The next slide is one of the design vertical slices.

616
00:34:29,321 --> 00:34:32,382
On Saints Row III, we tried to focus more on the game loop,

617
00:34:32,522 --> 00:34:34,183
what the player is doing over and over again

618
00:34:34,223 --> 00:34:35,123
while they're playing the game.

619
00:34:36,024 --> 00:34:38,785
We focus on that more, at least compared to previous Saints Row games.

620
00:34:39,385 --> 00:34:43,287
The example you're going to see was when we were working on transitions in the game.

621
00:34:43,707 --> 00:34:48,449
The player needs to go somewhere, and when they get to their destination, there's a cinematic at that destination.

622
00:34:48,889 --> 00:34:50,990
How would that feel? What would the transitions look like?

623
00:34:51,350 --> 00:34:55,852
This clip is one of the many design vertical slices we made, but it was a good one to show.

624
00:35:11,654 --> 00:35:16,503
Listen Julius, you've made some bad choices, but you're a good man, let me help you out.

625
00:35:17,004 --> 00:35:17,545
What do you want?

626
00:35:18,386 --> 00:35:18,747
I want the-

627
00:35:31,108 --> 00:35:34,289
Okay, so looking at what worked and what didn't in the context of vertical slice,

628
00:35:34,369 --> 00:35:38,230
it definitely showed improvements in visual quality, at least compared to Saints Row 1 and 2.

629
00:35:39,370 --> 00:35:43,331
The separate art and gameplay vertical slice approach was very beneficial

630
00:35:43,351 --> 00:35:45,892
in that each discipline didn't have to worry about the others.

631
00:35:46,772 --> 00:35:47,932
It was helpful for a time.

632
00:35:49,393 --> 00:35:52,633
And it marked the first time that we focused again on the game loop,

633
00:35:52,834 --> 00:35:54,094
and at least when it comes to Saints Row 3rd.

634
00:35:54,914 --> 00:35:56,935
The game loop was customizing your character,

635
00:35:57,135 --> 00:35:59,256
going to an objective, watching a cinematic,

636
00:35:59,696 --> 00:36:01,556
killing things, and then getting stuff.

637
00:36:02,717 --> 00:36:04,437
Because of this focus, we ended up

638
00:36:04,497 --> 00:36:07,498
focusing a little bit more on a holistic player experience.

639
00:36:07,958 --> 00:36:09,959
It's kind of a subtle thing, but even transitions,

640
00:36:09,979 --> 00:36:12,020
like shown in that clip, do contribute

641
00:36:12,140 --> 00:36:14,100
to the overall player experience and what players are

642
00:36:14,120 --> 00:36:15,461
experiencing while playing the game.

643
00:36:17,388 --> 00:36:19,790
As for what didn't work, we didn't spend enough time

644
00:36:19,850 --> 00:36:20,810
nailing down budgets.

645
00:36:21,591 --> 00:36:23,912
Not monetary budgets, but performance budgets.

646
00:36:24,172 --> 00:36:25,873
I mean, again, those interiors look great,

647
00:36:25,933 --> 00:36:27,574
but at the end of the day, it was a mistake

648
00:36:27,654 --> 00:36:28,915
because they weren't realistic.

649
00:36:29,555 --> 00:36:31,676
We shouldn't have cared about individual assets.

650
00:36:32,176 --> 00:36:34,678
We should have instead focused on the overall scene

651
00:36:34,718 --> 00:36:35,678
and how that played out.

652
00:36:36,319 --> 00:36:38,660
Instead of making those bananas look super awesome,

653
00:36:38,680 --> 00:36:40,761
we should have spent more time up front focusing

654
00:36:40,781 --> 00:36:43,102
on things like level of detail, draw distance,

655
00:36:43,642 --> 00:36:45,063
ambient peds in vehicles.

656
00:36:45,624 --> 00:36:49,486
in order to have a more realistic scene and gauge where our performance was.

657
00:36:50,747 --> 00:36:54,910
So, I mean basically, at least for the art side, instead of having a creative vertical slice,

658
00:36:55,490 --> 00:36:57,432
we had an aspirational visual bar.

659
00:36:58,072 --> 00:37:01,294
A visual bar is not the same thing. It's not a bad thing, but it's a very different thing.

660
00:37:02,055 --> 00:37:06,037
We had smoke and mirrors in that the vertical slice wasn't representative of final quality,

661
00:37:06,638 --> 00:37:10,380
precisely because it wasn't a realistic depiction of what we could show in the final game.

662
00:37:10,521 --> 00:37:12,742
And we didn't spend enough time figuring out what we could show.

663
00:37:14,707 --> 00:37:17,529
Looking back in hindsight, again for Saints Row III, very

664
00:37:17,569 --> 00:37:20,811
specific category. In retrospect, was making sure we

665
00:37:20,851 --> 00:37:24,333
were maintaining and analyzing the performance budgets. We

666
00:37:24,353 --> 00:37:26,855
didn't do a good job of establishing realistic targets.

667
00:37:26,935 --> 00:37:30,097
Many in the team, as with Saints Row I, spent a large amount of

668
00:37:30,137 --> 00:37:32,579
time optimizing things in production. Granted, it wasn't

669
00:37:32,639 --> 00:37:35,741
as hard this time around. But it was nonetheless work that could

670
00:37:35,761 --> 00:37:38,623
have been mitigated had we been more focused on it earlier in

671
00:37:38,663 --> 00:37:39,264
pre-production.

672
00:37:40,093 --> 00:37:43,617
Related, establishing the visual bar, which is effectively what we did on the art side,

673
00:37:43,677 --> 00:37:49,224
is not the same thing as a vertical slice, and your bar may not be possible or frankly realistic.

674
00:37:50,265 --> 00:37:53,409
And finally, working on the game loop was very, very helpful.

675
00:37:53,569 --> 00:37:58,875
In addition to doing necessary, in addition to necessarily requiring implementation of key features,

676
00:37:59,774 --> 00:38:01,735
to complete the game loop, but also focus

677
00:38:01,755 --> 00:38:04,496
to think on things overlooked like navigation duration.

678
00:38:04,576 --> 00:38:05,736
How long does it take to get here?

679
00:38:05,796 --> 00:38:07,837
Is the player going to be engaged while I'm driving?

680
00:38:08,717 --> 00:38:10,858
What does the transition from gameplay to cinematics

681
00:38:10,898 --> 00:38:11,258
feel like?

682
00:38:11,318 --> 00:38:14,239
All those things contribute to the overall holistic player

683
00:38:14,259 --> 00:38:14,819
experience.

684
00:38:16,790 --> 00:38:20,533
Fun facts about Saints Row the Third. Spoiler alert, Burt

685
00:38:20,573 --> 00:38:22,675
Reynolds is in Saints Row the Third as a character.

686
00:38:23,236 --> 00:38:26,599
Contractually, his character couldn't use firearms. He could

687
00:38:26,679 --> 00:38:29,442
use his fists. He could kill people with his fists. He could

688
00:38:29,482 --> 00:38:33,165
only punch. And he couldn't catch on fire. He could die, but

689
00:38:33,205 --> 00:38:34,647
he needed to be impervious to fire.

690
00:38:39,189 --> 00:38:43,115
Last but not least, we have Saints Row 4, came out in August of 2013.

691
00:38:45,298 --> 00:38:48,764
This title got the best, most impressive vertical slice Volition has ever made,

692
00:38:48,804 --> 00:38:52,830
and I think the most impressive vertical slice ever made in the history of the universe and everything.

693
00:38:55,042 --> 00:39:00,186
Well, really? How'd that happen? I'm glad you asked, because if you didn't, I'd have this weird segue, and it'd be silent. It wouldn't be good.

694
00:39:00,846 --> 00:39:04,409
Again, I talked about this last year, but it's so wonderfully amazing, it bears repeating.

695
00:39:05,249 --> 00:39:11,874
Saints Row 13 was working on this standalone expansion pack after Saints Row the 3rd shipped, and it was called Enter the Dominatrix.

696
00:39:12,574 --> 00:39:17,777
Enter the Dominatrix was going to be in the same city as Saints Row III, but limited to new features and tech.

697
00:39:18,237 --> 00:39:24,981
The standout features were superpowers and aliens, and the core of that game was basically the Saints and the Matrix with aliens.

698
00:39:25,442 --> 00:39:33,987
The superpowers were fun, the title was shaping up, and then for business reasons, THQ decided to take what was best about Enter the Dominatrix and then add it to Saints Row IV.

699
00:39:35,027 --> 00:39:38,269
But, Saints Row 4 was originally doing its own thing.

700
00:39:38,309 --> 00:39:42,672
It was a separate and larger team going in a direction without superpowers.

701
00:39:42,772 --> 00:39:48,115
So effectively, the original Saints Row 4 team got word they needed to take some, in

702
00:39:48,175 --> 00:39:52,917
quotes, of what we had in the Dominatrix and add it to their game.

703
00:39:53,558 --> 00:39:55,199
But they didn't get extra time to do that.

704
00:39:55,319 --> 00:39:59,201
Basically, they had one year from the time that decision was made to combine the two

705
00:39:59,241 --> 00:39:59,641
games.

706
00:40:00,122 --> 00:40:03,884
That's not a lot of time to be adding something like superpowers and aliens in your game.

707
00:40:04,664 --> 00:40:09,415
But on a positive note, enter the dominatrix was really far along and it could be rather

708
00:40:09,856 --> 00:40:13,164
wonderfully marvelously fleshed out vertical slides for the Saints Row 14.

709
00:40:14,483 --> 00:40:16,585
I mean, think about it, at least from a vertical slice point of

710
00:40:16,625 --> 00:40:19,807
view. We imagine your vertical slices as well over 100 man

711
00:40:19,827 --> 00:40:22,128
months of focus worked, experienced by people who

712
00:40:22,148 --> 00:40:24,550
understood what they were working on. So in this one, the

713
00:40:24,570 --> 00:40:28,032
Saints Row 4 team got a fully playable critical path, which

714
00:40:28,072 --> 00:40:31,454
was about 7 hours of gameplay, more than functional new

715
00:40:31,514 --> 00:40:34,196
features, the superpowers were working and they were fun, boss

716
00:40:34,236 --> 00:40:37,518
battles, an art-directed city, and a preliminary quantification

717
00:40:37,558 --> 00:40:40,140
of performance budgets. It was the greatest vertical slice

718
00:40:40,280 --> 00:40:43,842
ever. So what worked and what didn't, the good was.

719
00:40:44,854 --> 00:40:47,842
greatest vertical slice ever in the history of the gaming industry in my

720
00:40:47,882 --> 00:40:51,752
opinion. The Saints Row 4 team had nearly everything from a vertical slice

721
00:40:51,792 --> 00:40:53,236
point of view handed to them.

722
00:40:55,013 --> 00:40:57,694
What didn't work, that kind of vertical slice doesn't work

723
00:40:57,754 --> 00:41:00,035
unless you have near limitless time and money.

724
00:41:00,596 --> 00:41:03,457
And unless you work at a studio, maybe whose name rhymes

725
00:41:03,497 --> 00:41:06,959
with mouth, you probably don't have near limitless time

726
00:41:07,019 --> 00:41:07,339
or money.

727
00:41:07,359 --> 00:41:10,041
I mean, think about it, like well over 100 man months

728
00:41:10,121 --> 00:41:12,822
of Enter the Dominatrix, this isn't time, it costs money.

729
00:41:12,862 --> 00:41:14,383
And depending on your studio's burn rate,

730
00:41:14,403 --> 00:41:15,363
that could be a lot of money.

731
00:41:16,004 --> 00:41:18,685
So basically this was financially untenable,

732
00:41:18,705 --> 00:41:19,566
at least for most of us.

733
00:41:19,606 --> 00:41:21,467
And we couldn't expect this model to be something

734
00:41:21,887 --> 00:41:23,528
we would count on in the future.

735
00:41:25,550 --> 00:41:30,519
So the key lessons, the biggest takeaway is that this was the ideal model and a properly

736
00:41:30,600 --> 00:41:33,645
constructed vertical slice is something that can be very, very helpful.

737
00:41:34,341 --> 00:41:38,262
Again, we had player experience demonstrated through a fully playable critical path.

738
00:41:38,782 --> 00:41:42,143
Core gameplay was proven. It was iterated with even some polish.

739
00:41:42,403 --> 00:41:47,464
Seven hours of gameplay that demonstrated pacing, variety, lots of little things that can be

740
00:41:47,524 --> 00:41:52,825
challenged to get in a typical vertical slice. But it was nutty and again couldn't expect to

741
00:41:52,845 --> 00:41:55,366
have this vertical slice model for us in the future.

742
00:41:56,823 --> 00:42:00,404
Fun facts, Saints Row 4, before the addition of superpowers,

743
00:42:00,444 --> 00:42:03,904
the original design called for warring tribes that were headed

744
00:42:03,984 --> 00:42:05,445
up by historical figures.

745
00:42:05,505 --> 00:42:07,505
These figures were brought to life through cloning,

746
00:42:07,565 --> 00:42:10,866
through Ultor, one of the main bad guy corporations there.

747
00:42:10,906 --> 00:42:13,606
And it included the likes of Genghis Khan, Hitler,

748
00:42:13,766 --> 00:42:14,647
and Cleopatra.

749
00:42:15,827 --> 00:42:17,607
Alas, they never made it in the final game.

750
00:42:17,667 --> 00:42:19,468
That could have been an interesting mechanic there.

751
00:42:21,683 --> 00:42:24,645
Okay, so bringing this all home, Volition's kind of a, we're

752
00:42:24,665 --> 00:42:27,186
currently a one project shop, and these days we have a larger

753
00:42:27,246 --> 00:42:29,948
collection of experiences, and that we've made a lot more

754
00:42:29,988 --> 00:42:32,209
games, and we've got, and one goal of Volition, one thing

755
00:42:32,249 --> 00:42:33,930
that they're good at is like, let's learn better from the

756
00:42:33,990 --> 00:42:36,951
past and apply it to what we do in the future. And the vertical

757
00:42:36,991 --> 00:42:40,133
slice is no exception from that rule. We ask ourselves, what

758
00:42:40,153 --> 00:42:42,515
were the key lessons that we learned, and what are we doing

759
00:42:42,535 --> 00:42:45,296
to the vertical slice, you know, milestone today based on our

760
00:42:45,396 --> 00:42:48,218
past mistakes, trials, and tribulations. And again, this is

761
00:42:48,258 --> 00:42:50,259
what works for us, your mileage may vary.

762
00:42:52,052 --> 00:42:55,254
These are kind of the core pillars in order to succinctly bring it together.

763
00:42:55,715 --> 00:42:59,078
I'll go over those a little bit more in the subsequent slides.

764
00:42:59,658 --> 00:43:02,921
I tried making a grid that showed like, you know, what worked and what didn't for each

765
00:43:02,941 --> 00:43:06,704
of the titles, but frankly it was a convoluted mess because what worked and what didn't in

766
00:43:06,724 --> 00:43:08,946
the lessons were kind of all over the place.

767
00:43:09,407 --> 00:43:12,810
And this is where we've arrived at like our core pillars when it comes to a vertical slice.

768
00:43:13,822 --> 00:43:19,905
Apologies to a certain shoe company, but it's an important milestone. Make it a thing.

769
00:43:20,805 --> 00:43:25,407
Plan for it, make sure the team's scheduling for it and they're aware of it.

770
00:43:26,187 --> 00:43:29,028
We believe and we have found there's too many benefits to not do it.

771
00:43:29,748 --> 00:43:33,190
If you think about it, a vertical slice deliverable is going to happen anyways.

772
00:43:33,250 --> 00:43:37,832
It may be right before you submit, but if you plan for it and attempt to do it before production,

773
00:43:37,912 --> 00:43:42,513
you'll likely have saved the team for some pain down the road when they're figuring things out in production.

774
00:43:43,514 --> 00:43:46,578
We've never ever done it well on paper, but not trying would

775
00:43:46,598 --> 00:43:49,722
have been a lot worse. Just ask some team members on Red

776
00:43:49,762 --> 00:43:53,988
Faction Armageddon. And even with our issues and failures, we

777
00:43:54,008 --> 00:43:56,291
still uncovered issues and problems we otherwise would have

778
00:43:56,351 --> 00:43:58,875
uncovered later in production, and that's never a good thing.

779
00:44:00,857 --> 00:44:03,398
Try to do it right, and that means use it as a gate going

780
00:44:03,438 --> 00:44:04,079
into production.

781
00:44:04,679 --> 00:44:07,600
If the vertical slice doesn't help your team understand what

782
00:44:07,620 --> 00:44:10,181
they're making, how to make it, and whether or not you have an

783
00:44:10,221 --> 00:44:13,282
acceptable level of tech debt, then you're probably not ready

784
00:44:13,322 --> 00:44:13,943
for production.

785
00:44:15,223 --> 00:44:17,684
To reiterate, focus on the player experience.

786
00:44:17,764 --> 00:44:19,325
Don't focus on a list of features.

787
00:44:19,845 --> 00:44:22,646
If you define the player experience first, then the

788
00:44:22,706 --> 00:44:25,388
features, the core gameplay, and tech and systems needed to

789
00:44:25,448 --> 00:44:27,909
support and make that player experience come to fruition is

790
00:44:28,009 --> 00:44:29,709
necessarily going to follow.

791
00:44:30,969 --> 00:44:35,092
try and quantify your technical debt. Doing this well is really

792
00:44:35,172 --> 00:44:37,974
new and hard for us. It's kind of a new thing for us. And

793
00:44:38,014 --> 00:44:40,976
again, no way does a vertical slice mean you're feature

794
00:44:41,016 --> 00:44:43,698
complete and content complete. There's going to be systems and

795
00:44:43,778 --> 00:44:47,380
features and tools work going on in production. But you should

796
00:44:47,420 --> 00:44:50,843
work with the team to determine how you plan to quantify how

797
00:44:50,883 --> 00:44:55,046
much tech debt you will need to absorb in production. Some's

798
00:44:55,086 --> 00:44:57,768
just frankly inevitable. And you need to figure out with the

799
00:44:57,788 --> 00:44:59,009
team what your threshold is.

800
00:45:00,622 --> 00:45:02,764
This deliverable is going to take longer than you think,

801
00:45:03,264 --> 00:45:05,445
make it over a course of multiple milestones.

802
00:45:05,906 --> 00:45:08,768
We found that a good way to break it down in phases

803
00:45:08,868 --> 00:45:12,390
is effectively get it working, get it working right,

804
00:45:12,830 --> 00:45:13,611
and then polish it.

805
00:45:16,589 --> 00:45:20,012
This deliverable is way too big and complex and way too early

806
00:45:20,352 --> 00:45:22,553
in development to bat a thousand. You're going to miss a

807
00:45:22,633 --> 00:45:25,055
lot of things, you're going to fail in some areas, but that's

808
00:45:25,115 --> 00:45:28,197
okay. We've never nailed the thing and yet we do it time and

809
00:45:28,237 --> 00:45:31,740
time again. Go into this thinking about the spirit of the

810
00:45:31,800 --> 00:45:34,442
deliverable. Can you honestly say the team's ready to go into

811
00:45:34,482 --> 00:45:37,384
production? Does the team have a solid idea of what it's going

812
00:45:37,404 --> 00:45:38,385
to take to make the game?

813
00:45:39,404 --> 00:45:41,226
Do you believe that the player experience is there?

814
00:45:41,466 --> 00:45:42,767
Is the fun that you're desiring,

815
00:45:42,827 --> 00:45:43,868
is it has it been delivered?

816
00:45:44,429 --> 00:45:47,332
Like doing a lawyerly checklist against specific assets

817
00:45:47,392 --> 00:45:50,715
in this milestone as the only means for measuring progress

818
00:45:51,236 --> 00:45:53,458
is gonna be futile, leave everyone frustrated.

819
00:45:53,478 --> 00:45:56,040
I mean, you're too early in development for such things

820
00:45:56,080 --> 00:45:58,343
and the bigger picture about the player experience,

821
00:45:58,363 --> 00:45:59,884
whether or not the system's working together

822
00:45:59,904 --> 00:46:00,885
is much more important.

823
00:46:03,172 --> 00:46:05,613
So the final thoughts is like much of executing on this

824
00:46:05,693 --> 00:46:06,714
comes down to balance.

825
00:46:07,274 --> 00:46:09,055
Doesn't mean feature or content complete.

826
00:46:09,135 --> 00:46:10,256
It's not a finished game.

827
00:46:10,836 --> 00:46:12,698
The key within this deliverable is

828
00:46:12,718 --> 00:46:15,119
to determine the most important things the team needs

829
00:46:15,139 --> 00:46:17,921
to be worked on in order to go successfully into production.

830
00:46:18,441 --> 00:46:20,362
The act of knowing what you're making and importantly,

831
00:46:20,402 --> 00:46:21,003
how to make it.

832
00:46:21,443 --> 00:46:24,965
To go into that development phase as painless as possible.

833
00:46:27,163 --> 00:46:29,084
Work with the team to determine the end goal for this

834
00:46:29,685 --> 00:46:31,906
deliverable, which in our opinion is realizing the

835
00:46:31,926 --> 00:46:32,766
player experience.

836
00:46:33,427 --> 00:46:36,448
Again, can't help it without necessarily defining the core

837
00:46:36,468 --> 00:46:39,470
gameplay, core loop systems and features that some people

838
00:46:39,890 --> 00:46:41,271
frankly focus on instead.

839
00:46:43,232 --> 00:46:45,073
Make sure you aren't doing this through total smoke and

840
00:46:45,113 --> 00:46:46,934
mirrors, you have to hit something that's realistic.

841
00:46:47,788 --> 00:46:49,711
and not an impossible and unreachable bar.

842
00:46:49,972 --> 00:46:52,175
We quantify and track the team's technical debt,

843
00:46:52,716 --> 00:46:55,321
how much is acceptable to your particular situation,

844
00:46:55,781 --> 00:46:57,905
how much tech work are you gonna have to do in production,

845
00:46:58,045 --> 00:46:59,828
is that okay, have you scheduled for it.

846
00:47:01,258 --> 00:47:06,544
And when you're done with the deliverable, be objective, analyze the results and have uncomfortable conversations.

847
00:47:06,604 --> 00:47:07,865
It'll be worth it in the long run.

848
00:47:08,526 --> 00:47:11,689
If you rationalize where you are, it will set the team up for pain.

849
00:47:12,430 --> 00:47:13,951
Really try and quantify where you are.

850
00:47:14,272 --> 00:47:16,314
Do you need more time before going into production?

851
00:47:16,754 --> 00:47:19,096
If so, it's probably a good idea to get it if you can.

852
00:47:19,557 --> 00:47:24,702
Basically, we believe that a longer pre-production cycle is more important than a shortened production cycle.

853
00:47:26,341 --> 00:47:29,564
Despite knowing you won't nail anything, everything, it's still worth it.

854
00:47:30,164 --> 00:47:33,447
The scary things lying there waiting to be uncovered are going to be there regardless.

855
00:47:33,527 --> 00:47:35,629
It's best to uncover them up front if you can.

856
00:47:36,049 --> 00:47:37,771
Again, the vertical slice can help with that.

857
00:47:38,692 --> 00:47:41,894
And internally at Volition we're still improving about how we tackle this beast

858
00:47:41,935 --> 00:47:45,598
and despite all the angst and uncertainty that comes with this deliverable, we still attempt them.

859
00:47:47,795 --> 00:47:50,157
I personally believe that nothing worthwhile is easy.

860
00:47:50,977 --> 00:47:53,198
There's no good progress without at least some struggle.

861
00:47:53,278 --> 00:47:54,999
And I think the majority of us in this room

862
00:47:55,120 --> 00:47:58,241
and at this conference, we love making games.

863
00:47:58,381 --> 00:48:01,283
And we get involved with the whole schedule profitable fun

864
00:48:01,803 --> 00:48:03,404
because we like the end result in working

865
00:48:03,424 --> 00:48:04,305
with creative people.

866
00:48:05,225 --> 00:48:06,526
It's too challenging otherwise.

867
00:48:06,546 --> 00:48:07,787
I mean, why sign up for it?

868
00:48:07,887 --> 00:48:10,628
So we believe that the vertical slice can help

869
00:48:10,708 --> 00:48:11,709
ease with some of the pain.

870
00:48:13,110 --> 00:48:15,011
So hopefully you got something out of this talk.

871
00:48:15,525 --> 00:48:17,787
I think we're all getting better at sharing ideas and best

872
00:48:17,827 --> 00:48:20,009
practices through conferences like GDC.

873
00:48:20,530 --> 00:48:22,692
And hopefully the end result is, by doing that, learning

874
00:48:22,732 --> 00:48:24,454
from each other, we can make better games, which is

875
00:48:24,494 --> 00:48:25,675
something that we all like.

876
00:48:25,795 --> 00:48:27,817
So thanks very, very much for coming.

877
00:48:28,217 --> 00:48:29,578
I really appreciate your attention.

878
00:48:30,159 --> 00:48:31,800
I think we've got a little bit of time for

879
00:48:31,901 --> 00:48:32,881
questions, if there are.

880
00:48:33,771 --> 00:48:37,956
Before we take questions, I want to make sure you thank the

881
00:48:38,017 --> 00:48:40,339
conference associates in the back there. This conference

882
00:48:40,359 --> 00:48:43,143
doesn't happen without their help. Please fill out the

883
00:48:43,183 --> 00:48:46,447
questionnaires. They appreciate that. And also thanks to

884
00:48:46,507 --> 00:48:49,351
Volition past and present members who helped me with this

885
00:48:49,371 --> 00:48:51,033
talk. So thanks very much. Appreciate it.

886
00:49:08,805 --> 00:49:11,326
If you have a question, we're supposed to go to the mic,

887
00:49:11,386 --> 00:49:11,586
right?

888
00:49:12,567 --> 00:49:12,867
All right.

889
00:49:14,567 --> 00:49:15,187
Hi, question.

890
00:49:15,608 --> 00:49:18,148
Do you think that it's worth, in any practical case,

891
00:49:18,348 --> 00:49:20,609
of doing specifically a visual bar

892
00:49:20,789 --> 00:49:22,750
at the expense of any component of the vertical slice?

893
00:49:23,070 --> 00:49:24,530
Or is it just better to move the art team

894
00:49:24,550 --> 00:49:26,271
straight to the vertical slice and focus on that?

895
00:49:26,886 --> 00:49:31,654
I think the vertical bar is a double-edged sword.

896
00:49:31,814 --> 00:49:33,998
I mean, again, I don't think I have the right answer for this.

897
00:49:34,539 --> 00:49:39,126
You have to work with smart team members to figure out whether or not your vertical bar is something that is...

898
00:49:40,220 --> 00:49:43,363
attainable. If it isn't, then you know you shouldn't do it. I

899
00:49:43,383 --> 00:49:45,424
think you should work with rendering programmers or

900
00:49:45,464 --> 00:49:47,947
whatnot. It's like okay, this is a vertical bar. We don't have

901
00:49:47,987 --> 00:49:50,189
the technology there yet, but we think we'll be able to approach

902
00:49:50,229 --> 00:49:53,832
that. In the case of Saint Tropez III, we just went in

903
00:49:53,872 --> 00:49:55,794
saying we're going to make this look as, we're not even going to

904
00:49:55,874 --> 00:49:57,375
consider whether or not it's possible.

905
00:49:57,935 --> 00:50:00,736
That's the issue looking back in hindsight in 2020 for us.

906
00:50:01,297 --> 00:50:04,178
We needed to work better with the technology and the rendering

907
00:50:04,198 --> 00:50:06,239
guys to say, does this make sense for us?

908
00:50:06,359 --> 00:50:07,419
Can we hit this target?

909
00:50:07,739 --> 00:50:08,720
We did that in a vacuum.

910
00:50:08,740 --> 00:50:09,680
I don't know if that helps.

911
00:50:09,700 --> 00:50:10,640
Does that answer your question?

912
00:50:10,860 --> 00:50:11,240
Well, sort of.

913
00:50:11,301 --> 00:50:12,861
It kind of sounds like that's biasing it

914
00:50:12,901 --> 00:50:15,282
more towards being a true visual vertical slice,

915
00:50:15,542 --> 00:50:17,603
and that the visual bar by itself

916
00:50:17,663 --> 00:50:20,324
doesn't really have much sway unless there's someone there

917
00:50:20,604 --> 00:50:21,825
adding tech sanity to it.

918
00:50:22,478 --> 00:50:27,202
I think, I guess the way I would answer is having a visual bar way, way earlier in pre-production helps.

919
00:50:27,602 --> 00:50:29,824
At least like characters, take that as an example.

920
00:50:29,864 --> 00:50:33,307
We want our characters to look like this, pull from movies, other games.

921
00:50:33,327 --> 00:50:36,930
And then the character artists are working towards that, with a contingency plan,

922
00:50:36,950 --> 00:50:41,274
knowing that they may have to scale back with triangles or polys or whatever later on, once the tech is figured out.

923
00:50:43,856 --> 00:50:44,096
Thank you.

924
00:50:46,057 --> 00:50:48,779
A key theme in your talk seems to be being a learning organization.

925
00:50:49,059 --> 00:50:52,420
I found that quite hard to get my organizations to learn well.

926
00:50:52,980 --> 00:50:54,881
So clearly Volition does learn from its past.

927
00:50:55,402 --> 00:50:57,142
I'm having trouble hearing you. I'm sorry.

928
00:50:57,202 --> 00:50:57,643
Is that better?

929
00:50:57,943 --> 00:50:58,143
Yes.

930
00:50:58,703 --> 00:51:00,464
So how do you make sure that you're...

931
00:51:00,884 --> 00:51:04,626
How does Volition go about learning and keeping those learnings within its company?

932
00:51:04,646 --> 00:51:07,467
Because many games companies struggle with learning.

933
00:51:07,913 --> 00:51:09,174
Well, it's not easy for us.

934
00:51:09,234 --> 00:51:10,916
I mean, we have a lot of core dumps.

935
00:51:10,976 --> 00:51:12,017
We do that with all the teams.

936
00:51:12,077 --> 00:51:13,418
It's open the entire studio.

937
00:51:13,538 --> 00:51:15,600
Before, when we had core dumps with multiple teams,

938
00:51:15,680 --> 00:51:16,681
everyone would be invited.

939
00:51:17,181 --> 00:51:18,102
And we'd record all that.

940
00:51:18,162 --> 00:51:20,865
And frankly, it's upon incumbent upon studio management

941
00:51:20,905 --> 00:51:23,046
to make sure that the key takeaways from those core dumps,

942
00:51:23,447 --> 00:51:24,448
that we're not forgetting them.

943
00:51:24,848 --> 00:51:26,009
But we failed at that a lot.

944
00:51:26,069 --> 00:51:27,671
I mean, it's like the Saints Row T1.

945
00:51:27,791 --> 00:51:30,313
It's like, we were, it was a non-invented here philosophy.

946
00:51:30,333 --> 00:51:31,274
And I was guilty of that.

947
00:51:31,354 --> 00:51:32,755
It was like, we didn't, I mean, let's.

948
00:51:33,156 --> 00:51:34,397
It's part of the learning process.

949
00:51:34,437 --> 00:51:35,618
I mean, we all have egos, right?

950
00:51:35,638 --> 00:51:37,479
We all, it's like, well, I can do this totally better.

951
00:51:37,859 --> 00:51:39,321
And it's a matter of trying your best

952
00:51:39,341 --> 00:51:40,762
to check the egos at the door and say,

953
00:51:40,802 --> 00:51:42,223
let's not go through this stuff again

954
00:51:42,243 --> 00:51:43,344
and make the same mistakes.

955
00:51:43,944 --> 00:51:46,686
I mean, again, it's like, I don't have any clear answers.

956
00:51:46,726 --> 00:51:47,867
I can just tell you what we've done.

957
00:51:47,887 --> 00:51:50,309
And we constantly have to remind ourselves to go back,

958
00:51:50,790 --> 00:51:52,911
re-read the core dumps, talk about this stuff

959
00:51:53,012 --> 00:51:54,493
over and over again, check each other,

960
00:51:54,873 --> 00:51:55,734
keep each other honest.

961
00:51:55,794 --> 00:51:57,535
It's like, all right, have we done this

962
00:51:57,655 --> 00:51:58,556
the same way in the past?

963
00:51:58,636 --> 00:52:00,958
Are we going down this road again the way we shouldn't?

964
00:52:01,458 --> 00:52:02,119
It's really hard.

965
00:52:04,002 --> 00:52:04,482
Thanks.

966
00:52:06,263 --> 00:52:06,463
Hi.

967
00:52:07,223 --> 00:52:09,644
In your experience, how much of the actual content

968
00:52:09,704 --> 00:52:11,805
of whatever you produce for Vertical Slice

969
00:52:12,265 --> 00:52:13,485
goes into the final game?

970
00:52:13,525 --> 00:52:16,146
Do you scrap it and just use the systems that you've explored?

971
00:52:17,146 --> 00:52:18,787
There's the rub there, right?

972
00:52:18,807 --> 00:52:19,787
You always want to go, all right,

973
00:52:19,967 --> 00:52:21,147
we're going to hack this stuff in

974
00:52:21,227 --> 00:52:23,528
and we'll fix it later for the final game.

975
00:52:23,548 --> 00:52:25,029
But you never have enough time to do that.

976
00:52:25,109 --> 00:52:26,009
And it's really scary.

977
00:52:26,807 --> 00:52:29,849
Saints Row 1, I mean, internally we called it spaghetti code.

978
00:52:29,949 --> 00:52:32,250
You know, it actually had code dating back from Summoner.

979
00:52:32,691 --> 00:52:38,374
And just like, things are so busy, you never have the time to, like, sit there and properly architect everything the way you want.

980
00:52:38,454 --> 00:52:43,638
So, in regards to specifically answering your question, I think it's dependent on the situation.

981
00:52:44,018 --> 00:52:50,803
You do your best to schedule, you know, I don't know how you schedule, but it's like, here's some time to get it in, and then here's the time to properly architect.

982
00:52:50,883 --> 00:52:51,063
But...

983
00:52:51,423 --> 00:52:54,103
The other hand, demos come up, and it's like you have to hack

984
00:52:54,143 --> 00:52:54,563
things in.

985
00:52:54,843 --> 00:52:57,024
I personally feel like demos are a good problem to have.

986
00:52:57,564 --> 00:52:59,304
People aren't asking for demos, then no one's

987
00:52:59,344 --> 00:53:00,284
interested in your game.

988
00:53:00,785 --> 00:53:03,505
And I think programmers get really mad at me, but I think

989
00:53:03,565 --> 00:53:05,706
if you had to choose between the two, hacked or properly

990
00:53:05,766 --> 00:53:08,146
architected, I'm going to go with hacked, because if you go

991
00:53:08,166 --> 00:53:10,666
with properly architected the whole time, you may not ever

992
00:53:10,706 --> 00:53:11,507
have a game come out.

993
00:53:13,067 --> 00:53:13,367
Thank you.

994
00:53:17,028 --> 00:53:17,828
Any other questions?

995
00:53:19,518 --> 00:53:22,572
All right. Thank you so much for coming. I really appreciate it. Thank you.

