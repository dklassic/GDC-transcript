1
00:00:06,393 --> 00:00:14,079
Hello there! Welcome to my GDC talk slash bedroom, where today we're going to talk about

2
00:00:14,620 --> 00:00:22,465
custom tools. So, let's get started. Alright, first a little bit about me. Who am I? Hi,

3
00:00:23,686 --> 00:00:29,711
I'm Brett Taylor. I got my Master's in Cognitive Studies from Columbia University. I've been

4
00:00:29,731 --> 00:00:33,894
making games for about the last 12 years or so. And my history, I worked at Arcadium for

5
00:00:33,914 --> 00:00:34,474
about three years.

6
00:00:36,015 --> 00:00:40,200
Then I went indie, I made a game called Lionlight, that did pretty well, released that in 2017.

7
00:00:41,562 --> 00:00:46,449
And most recently I'm actually a developer at Playdead, designing and doing stuff on

8
00:00:46,489 --> 00:00:48,211
their Untitled 3rd game.

9
00:00:48,431 --> 00:00:49,673
So yeah.

10
00:00:50,815 --> 00:00:53,075
All right, so this talk basically split it up into four parts.

11
00:00:53,396 --> 00:00:55,036
First, we'll talk about what is a custom tool.

12
00:00:55,076 --> 00:00:57,157
So we'll define what custom tools are.

13
00:00:58,817 --> 00:00:59,798
Then we'll talk about level editors.

14
00:00:59,838 --> 00:01:03,059
So I've made a lot of level editors in my years of development.

15
00:01:03,239 --> 00:01:04,319
I've got a lot of experience with that.

16
00:01:05,359 --> 00:01:07,640
And that's a very specific type of tool as well.

17
00:01:08,440 --> 00:01:13,642
Then we'll go over like when when does it make sense to make a tool and then finally we'll finish up with code shortcuts for

18
00:01:13,702 --> 00:01:15,643
Unity so if you are developer in unity

19
00:01:15,663 --> 00:01:20,704
I have a ton of code shortcuts that I've sort of amassed over the years that will make development life for you easier

20
00:01:20,724 --> 00:01:24,545
And actually I've got a link in there so you can just use them you can download them

21
00:01:25,085 --> 00:01:28,547
Free on the internet to make games better and faster. Yeah

22
00:01:29,951 --> 00:01:33,054
So, you might be asking me, what is a custom tool?

23
00:01:33,815 --> 00:01:34,495
That's the right question.

24
00:01:35,596 --> 00:01:37,078
So the way I would define it would be

25
00:01:37,138 --> 00:01:39,820
it's some sort of a code or system that saves time

26
00:01:39,960 --> 00:01:41,502
for the designer and or the programmer.

27
00:01:42,062 --> 00:01:43,604
So it's specifically about saving time,

28
00:01:44,404 --> 00:01:46,006
something that helps optimize the process

29
00:01:46,426 --> 00:01:47,187
and make the game faster.

30
00:01:48,728 --> 00:01:51,750
And also like throughout this talk, I'm gonna like I sort of use the term tools a little bit loosely

31
00:01:53,131 --> 00:01:56,813
Like as I'll like say a level editor is a tool but the level editor has like things within it. Yeah

32
00:01:58,033 --> 00:02:04,137
Yeah, this talk is specifically about saving time and energy. It's not about making the coolest possible tool. It's about yeah, it's about

33
00:02:04,877 --> 00:02:06,258
Making our games faster and more efficiently

34
00:02:07,259 --> 00:02:08,900
And like not wasting as much time. Yeah

35
00:02:10,324 --> 00:02:13,145
And specifically, this is about design tools.

36
00:02:13,205 --> 00:02:20,108
So there are like tools for bug profiling and stuff like that for production or programmers.

37
00:02:20,128 --> 00:02:24,189
But these tools, the ones I'm talking about, mostly for the designers to add content into the game.

38
00:02:25,269 --> 00:02:25,390
Yeah.

39
00:02:26,232 --> 00:02:30,315
All right, so let's talk about sort of the groove or flow state for the designer.

40
00:02:31,756 --> 00:02:33,837
So let's say that you save 20 seconds 12 times a day.

41
00:02:34,698 --> 00:02:36,259
That's a quantitative...

42
00:02:36,479 --> 00:02:38,220
You can say like, I've saved this by making a tool.

43
00:02:38,841 --> 00:02:40,141
Would that time be worth it?

44
00:02:40,221 --> 00:02:42,183
You know, like that's four minutes a day.

45
00:02:42,443 --> 00:02:43,684
But you're not just losing those four minutes.

46
00:02:43,704 --> 00:02:46,326
You're losing sort of like being in the groove as a designer.

47
00:02:46,846 --> 00:02:49,267
So when I talk about the value of making certain tools,

48
00:02:49,728 --> 00:02:51,369
it's not just about the time saved.

49
00:02:51,549 --> 00:02:54,011
It's about like staying sort of in that flow state as a designer.

50
00:02:55,632 --> 00:02:56,373
And that's really important.

51
00:02:56,933 --> 00:02:58,415
So you can't just say that you're saving four minutes a day,

52
00:02:58,435 --> 00:02:59,957
because you're not just saving four minutes a day.

53
00:03:00,217 --> 00:03:03,301
You're sort of staying in that state, and you're able to work more efficiently.

54
00:03:04,622 --> 00:03:06,805
So a groove state is sort of like when you're creating,

55
00:03:07,065 --> 00:03:08,987
and you're not interrupted and bothered by things.

56
00:03:10,309 --> 00:03:12,571
But it is relatively easy to interrupt this groove state.

57
00:03:13,452 --> 00:03:14,894
So let's say that's you. You're Kuzco.

58
00:03:16,842 --> 00:03:18,643
You threw up my groove, he says.

59
00:03:20,064 --> 00:03:21,404
So those would be the obstacles that waste time.

60
00:03:21,445 --> 00:03:24,406
So our goal is to stay like Kuzco in the beginning of,

61
00:03:24,526 --> 00:03:25,727
if you've seen the Emperor's New Groove,

62
00:03:26,648 --> 00:03:27,628
him in that musical number.

63
00:03:27,909 --> 00:03:29,149
We wanna be like that as designers.

64
00:03:29,570 --> 00:03:32,071
Maybe less selfish, but dancing that much.

65
00:03:34,113 --> 00:03:34,313
Yeah.

66
00:03:34,889 --> 00:03:38,192
All right, let's talk a little bit about Bob Ross, who I personally love.

67
00:03:38,292 --> 00:03:40,774
He is a time-saving role model of mine.

68
00:03:41,354 --> 00:03:42,735
So he makes oil paintings.

69
00:03:42,815 --> 00:03:47,439
He's got this show from PBS back in the 90s where he would complete these paintings.

70
00:03:48,240 --> 00:03:52,483
Each show was about like 22 or 23 or so minutes, and he finishes an entire oil painting.

71
00:03:52,803 --> 00:03:54,645
And he does that by using a lot of shortcuts.

72
00:03:55,205 --> 00:03:58,308
He has said that this is the lazy man's way of painting, which I strongly disagree with.

73
00:03:58,348 --> 00:03:59,108
I don't think that's true at all.

74
00:03:59,549 --> 00:04:01,130
This is the smart person way of painting.

75
00:04:01,710 --> 00:04:02,992
This is the efficient way of...

76
00:04:04,320 --> 00:04:05,901
and making stuff where you're like not wasting as much time.

77
00:04:06,982 --> 00:04:09,363
So like for instance, making stones, making these stones,

78
00:04:10,003 --> 00:04:13,625
you take a filbert brush, you put light color on one side, dark color on the other,

79
00:04:14,506 --> 00:04:17,787
and you just basically touch the canvas a little bit, you don't really have to do much effort at all,

80
00:04:17,827 --> 00:04:19,608
you just touch the canvas and a stone will just appear.

81
00:04:19,969 --> 00:04:23,070
It's magical. Doing it that way, it's so much faster, it's so much more efficient.

82
00:04:24,251 --> 00:04:27,933
And he's got like all sort of like little, you know, shortcuts like that.

83
00:04:28,705 --> 00:04:34,455
So I'll put tools on sort of a spectrum of small tools all the way to pretty big tools.

84
00:04:35,734 --> 00:04:39,576
So a small tool, because I'm using the term sort of loosely, but I'll just sort of call it tools in general

85
00:04:39,616 --> 00:04:44,259
It's just like things to save time. So here like this tool would be a reusable code snippet

86
00:04:44,279 --> 00:04:50,682
So let's say it's something that returns a random boolean, which is generally not a function afforded by most languages, which is strange to me

87
00:04:50,802 --> 00:04:51,943
I don't know why that doesn't exist

88
00:04:53,844 --> 00:04:59,928
To big tools like let's say an entire level editor. That's way robust. This is something that I made like 10 years ago

89
00:04:59,948 --> 00:05:01,909
I'll get into that in a little bit. Yeah

90
00:05:01,929 --> 00:05:01,969
so

91
00:05:04,637 --> 00:05:08,440
We've got designer tools, so that's something that helps the designer add content to the game.

92
00:05:08,900 --> 00:05:12,764
And then programmer tools, so like the reusable code snippet, that would be...

93
00:05:13,164 --> 00:05:15,466
Or like it could be a library or something, just something to save the programmer time.

94
00:05:15,486 --> 00:05:19,850
So they don't have to keep reinventing the wheel, that's sort of what programmer tools are more like.

95
00:05:20,530 --> 00:05:24,894
And this talk is specifically about the designer tools, it's more geared to that.

96
00:05:24,954 --> 00:05:29,278
Although at the end I'll give you some Unity code snippets for those programmers out there.

97
00:05:31,170 --> 00:05:36,693
So, types of designer tools, we could have things like a level editor, that's a pretty straightforward one.

98
00:05:37,774 --> 00:05:43,037
Something that, the tool would be like something that highlights an issue with some content in like a layout.

99
00:05:44,378 --> 00:05:49,561
Visuals, like that help, you know, you can see the little check boxes, check marks there, and I'll get into this image a little bit later.

100
00:05:49,581 --> 00:05:53,263
Yeah, it helps you like organize your content.

101
00:05:53,723 --> 00:05:55,444
Or, you know, if you're making like a branching narrative or something.

102
00:05:57,150 --> 00:05:58,071
Yeah, this is Inky.

103
00:05:59,232 --> 00:06:00,974
It's a text editor for that.

104
00:06:01,014 --> 00:06:03,497
So it would be a tool to actually make the content to put into the game.

105
00:06:03,517 --> 00:06:07,382
Okay, so part two, let's get into examples of level editors,

106
00:06:07,462 --> 00:06:10,506
which is something that I like. Level editors are fun.

107
00:06:11,628 --> 00:06:13,049
So, Scalia. Let's talk about this.

108
00:06:13,069 --> 00:06:14,650
This is the first big game that I ever made.

109
00:06:15,171 --> 00:06:15,731
It looks like this.

110
00:06:15,851 --> 00:06:17,072
This is what the level editor looks like

111
00:06:17,112 --> 00:06:17,712
as you're editing it.

112
00:06:17,732 --> 00:06:20,814
This is my first level editor that I actually made.

113
00:06:20,834 --> 00:06:22,615
I made this back in college.

114
00:06:23,396 --> 00:06:25,277
It was heavily inspired by Braid.

115
00:06:25,317 --> 00:06:27,018
The game itself was very inspired by Braid as well.

116
00:06:27,078 --> 00:06:28,759
So, Braid was like manipulating time.

117
00:06:29,219 --> 00:06:30,860
So, I was like, oh, what if you can manipulate space?

118
00:06:31,701 --> 00:06:32,781
This is way back in like 2010.

119
00:06:33,742 --> 00:06:35,563
Basically right after Braid came out.

120
00:06:37,065 --> 00:06:41,729
Anyway, so the Scalia level editor was obnoxiously over the top.

121
00:06:41,829 --> 00:06:48,916
The game itself was about a half hour long, and this level editor, it was ridiculous how

122
00:06:49,156 --> 00:06:50,918
robust and sophisticated this was.

123
00:06:51,838 --> 00:06:52,479
Yeah, it's too much.

124
00:06:53,880 --> 00:06:57,462
So the outcome of that, it cost me roughly estimating, I'd say,

125
00:06:57,502 --> 00:06:59,763
about three months to make the level editor on and off

126
00:06:59,803 --> 00:07:01,444
over the course of a year or so.

127
00:07:02,324 --> 00:07:04,025
And the payoff was not that much, honestly,

128
00:07:04,605 --> 00:07:09,488
compared to had I just hard-coded the level layouts with text files.

129
00:07:11,369 --> 00:07:13,710
So the payout wasn't, like, the amount of functionality

130
00:07:13,750 --> 00:07:15,271
I put in it really wasn't that worth it.

131
00:07:16,372 --> 00:07:18,495
But that said, I was young and I learned a lot.

132
00:07:18,515 --> 00:07:22,280
I made this in processing also, which was a ridiculous decision.

133
00:07:22,300 --> 00:07:25,524
But I learned a lot in the process.

134
00:07:27,337 --> 00:07:29,739
Let's talk about Linelight, so the game that I released back in 2017.

135
00:07:30,300 --> 00:07:32,081
So this level editor, a bit...

136
00:07:32,661 --> 00:07:36,044
I learned a lot from the Scalia level editor in terms of what not to add.

137
00:07:37,625 --> 00:07:38,886
So the Linelight level editor...

138
00:07:39,027 --> 00:07:40,047
Yeah, so actually I'll show you here.

139
00:07:40,067 --> 00:07:42,569
It looks basically like this where you can move around.

140
00:07:42,710 --> 00:07:45,171
And like, you're playing the game, you can turn the level editor on and off.

141
00:07:45,912 --> 00:07:47,033
You can just click and drag these streets.

142
00:07:47,073 --> 00:07:48,234
They automatically reconnect.

143
00:07:50,135 --> 00:07:53,738
So it's very easy to rapidly iterate on ideas and stuff.

144
00:07:54,323 --> 00:07:58,967
So I made the level editor after, I sort of started the level editor after I've hardcoded

145
00:07:58,987 --> 00:08:01,650
enough levels to decide that the game was actually worth pursuing in the first place.

146
00:08:02,811 --> 00:08:05,653
And that I needed, basically that I needed the level editor.

147
00:08:05,833 --> 00:08:08,135
I didn't make it until I knew that I actually needed it.

148
00:08:09,476 --> 00:08:15,782
So it started out this delightful hardcoded, like I had to say exactly where the pixels

149
00:08:15,822 --> 00:08:19,986
were of the elements in the screen, and eventually over time...

150
00:08:20,955 --> 00:08:21,836
I made the editor out of it.

151
00:08:22,636 --> 00:08:23,977
But I started with the hard-coded version.

152
00:08:24,077 --> 00:08:25,578
With Scalia, I didn't do that.

153
00:08:25,718 --> 00:08:26,818
I made the level editor first,

154
00:08:27,419 --> 00:08:28,959
and it had a lot of features that I really,

155
00:08:30,000 --> 00:08:31,180
just didn't really need,

156
00:08:31,301 --> 00:08:33,342
because I was so swept away by Braid,

157
00:08:33,362 --> 00:08:34,222
and I wanted to copy that,

158
00:08:34,862 --> 00:08:36,023
which, again, I learned a lot,

159
00:08:36,043 --> 00:08:38,304
but it wasn't the most efficient way of doing things.

160
00:08:38,344 --> 00:08:41,546
And then I learned and applied those lessons to Light Knight.

161
00:08:42,776 --> 00:08:47,860
So the outcome of this, roughly over the course of a while, I'd say maybe it was about a month

162
00:08:47,880 --> 00:08:51,884
development, kind of tough to estimate that, but the whole development cycle of LineLight

163
00:08:51,904 --> 00:08:52,525
was about a year and a half.

164
00:08:53,626 --> 00:08:58,110
And the payoff for that was tremendous, like the rapid iteration time was absolutely fantastic.

165
00:08:58,170 --> 00:09:01,093
This level editor was great.

166
00:09:02,194 --> 00:09:02,534
It was great.

167
00:09:03,692 --> 00:09:07,454
Yeah. And I, because I made the features as I needed them and I kept it really streamlined.

168
00:09:07,474 --> 00:09:10,776
You can even see actually that I'm using like the default GUI system from Unity.

169
00:09:11,196 --> 00:09:13,937
But I was like, I started with that and I'm like, oh, I'll make it pretty

170
00:09:14,937 --> 00:09:18,759
after I get it to work. And then I realized it's working now. No need to make it pretty.

171
00:09:19,480 --> 00:09:21,921
So that's sort of like a little lesson that I had there, which it sounds really,

172
00:09:21,941 --> 00:09:25,762
it sounds really like almost not even worth saying, but it really is because I was,

173
00:09:26,143 --> 00:09:29,844
I was so close to making it look legit, like a legit level editor.

174
00:09:30,725 --> 00:09:33,006
but I didn't need to. It wasn't worth it.

175
00:09:34,327 --> 00:09:38,790
Having it look sort of ugly like that, and kind of hard-coded a lot of it is,

176
00:09:39,951 --> 00:09:42,552
it was fine. That's all I needed to actually finish the game.

177
00:09:43,153 --> 00:09:45,454
So I didn't have to make it polished.

178
00:09:47,055 --> 00:09:50,377
So the map editor for Limelight is probably equally sophisticated,

179
00:09:51,017 --> 00:09:53,719
if not more, and there were a lot of features to this,

180
00:09:54,540 --> 00:09:55,900
which I added gradually over time.

181
00:09:57,071 --> 00:09:59,573
And I'll show you another map editor that I have that's based on this.

182
00:10:00,174 --> 00:10:02,035
I'll get into some of those details with that.

183
00:10:03,657 --> 00:10:07,760
Here's one thing that I made, maybe like two or three years ago or so,

184
00:10:07,880 --> 00:10:10,122
Designer Flags. Oh no, actually no, sorry, this was from Linelight.

185
00:10:10,162 --> 00:10:14,045
I made this for Linelight Levels and I brought it over to another game that I worked on.

186
00:10:14,586 --> 00:10:16,747
So Designer Flags, these are the five Designer Flags.

187
00:10:16,788 --> 00:10:18,009
This is just a system that I have.

188
00:10:19,482 --> 00:10:21,003
thought up and I wanted to use.

189
00:10:21,964 --> 00:10:24,005
So each level is flagged, like it's got a flag of

190
00:10:24,806 --> 00:10:26,107
one of these icons basically, and you just,

191
00:10:26,287 --> 00:10:27,848
you tap the icon to change it,

192
00:10:27,968 --> 00:10:29,609
cycles to the next one, pretty straightforward.

193
00:10:30,010 --> 00:10:31,050
And it's baked into the editor,

194
00:10:31,110 --> 00:10:32,291
so when you look at the level itself,

195
00:10:32,371 --> 00:10:33,152
like I look at the level,

196
00:10:33,272 --> 00:10:35,253
I can toggle the level names on and off,

197
00:10:35,594 --> 00:10:37,515
and I can see like if it's, you know,

198
00:10:37,595 --> 00:10:40,157
if it's a testing level, if it's just an idea

199
00:10:40,277 --> 00:10:42,318
for like a level or a puzzle or something,

200
00:10:42,658 --> 00:10:43,899
if it's something that's in progress,

201
00:10:43,939 --> 00:10:45,280
as you can tell from like the little shovel guy,

202
00:10:45,380 --> 00:10:46,661
if it's a good level or if it's a great level.

203
00:10:47,822 --> 00:10:47,962
And,

204
00:10:49,063 --> 00:10:51,545
I actually love this system. It worked really, really well.

205
00:10:53,286 --> 00:10:56,048
And it was especially great because levels would constantly be in flux.

206
00:10:57,509 --> 00:11:00,452
I would be rearranging things just all the time.

207
00:11:01,192 --> 00:11:06,176
And knowing, like having each of the levels flagged as something really helped guide me.

208
00:11:06,556 --> 00:11:10,319
And I didn't have to remember what I thought about the level or what I knew about it.

209
00:11:10,459 --> 00:11:13,402
It was already there for me, which was great.

210
00:11:13,422 --> 00:11:15,503
So, I'll start with the outcome for that.

211
00:11:17,282 --> 00:11:19,284
Honestly, yeah, that cost about five hours total.

212
00:11:19,604 --> 00:11:22,907
And the payoff was really just outstanding.

213
00:11:22,947 --> 00:11:24,948
It was great for those designer flags.

214
00:11:24,968 --> 00:11:26,730
All right, so prop display.

215
00:11:27,410 --> 00:11:29,752
So this is a similar thing to the designer flags

216
00:11:30,112 --> 00:11:33,415
in that it shows some stuff on each of the levels in the map.

217
00:11:34,215 --> 00:11:35,376
And it shows what's in each room.

218
00:11:35,516 --> 00:11:37,158
So like each of the boxes, level room,

219
00:11:37,598 --> 00:11:38,398
I use this synonymously.

220
00:11:38,939 --> 00:11:41,000
And my goal is to visualize linear progression.

221
00:11:41,041 --> 00:11:43,683
So it shows what the mechanics in the room itself are.

222
00:11:45,450 --> 00:11:49,131
So you can see here at the top, we've got flipper, you start here, this is the beginning.

223
00:11:49,151 --> 00:11:50,651
We've got flipper, flipper, flipper.

224
00:11:51,591 --> 00:11:55,072
Then we—ignore the purple—then we get enemies, enemy, enemy.

225
00:11:55,452 --> 00:11:56,353
Then flipper plus enemy.

226
00:11:57,613 --> 00:11:59,073
Okay, so then we've exhausted those.

227
00:11:59,093 --> 00:12:00,994
Now we've got a key, that's a new mechanic.

228
00:12:01,474 --> 00:12:03,514
Enemy in key, enemy flipper in key.

229
00:12:05,395 --> 00:12:10,658
So this was, I wanted to like visualize like how I was compounding mechanics on each other because that was an important part of the game.

230
00:12:12,079 --> 00:12:20,163
But I ended up not really ever using it, which surprised me a lot because I thought it was going to be beneficial, but it just didn't, it didn't pay off.

231
00:12:21,984 --> 00:12:23,225
Yeah, it just wasn't useful.

232
00:12:25,166 --> 00:12:27,687
So that cost me about like three and a half hours or so, roughly.

233
00:12:28,648 --> 00:12:31,889
And there was really no payoff. So that wasn't worth it so much.

234
00:12:32,590 --> 00:12:33,931
But you know, that's part of the learning process.

235
00:12:35,215 --> 00:12:35,555
making this.

236
00:12:37,036 --> 00:12:40,599
Bouncemeister. So before I get into like examples of the game, I'll just show you what the game looks like.

237
00:12:40,819 --> 00:12:44,422
So you can, you've got, there's one character, Jetta. You can switch between characters.

238
00:12:44,442 --> 00:12:49,566
So now we're Plunga, so you can plunge down and you get some extra height. This game was inspired by Celeste.

239
00:12:50,427 --> 00:12:56,031
I made this about like a year ago or so. Anyway, so that's what the game looks like. It's a side scroller.

240
00:12:57,192 --> 00:12:59,794
Here's the map editor. So it's, I copied and pasted pretty much

241
00:13:00,875 --> 00:13:02,116
the entire line light map editor.

242
00:13:02,997 --> 00:13:06,198
and I fix things around to make it work for Bounce Master.

243
00:13:07,679 --> 00:13:11,061
So the rooms, as you can see, you can drag them away

244
00:13:11,121 --> 00:13:12,222
and then connect them back to each other

245
00:13:12,242 --> 00:13:13,802
and they'll automatically connect in the editor.

246
00:13:14,623 --> 00:13:16,164
It also highlights issues with the layout.

247
00:13:16,184 --> 00:13:19,025
So you can see this, well, yeah,

248
00:13:19,085 --> 00:13:20,586
so there's pink lines on the edges there

249
00:13:21,006 --> 00:13:22,227
if it's not connected to something.

250
00:13:22,267 --> 00:13:23,708
So that was really useful for me as well.

251
00:13:23,728 --> 00:13:25,368
And also, like, you can see how the colors

252
00:13:25,409 --> 00:13:27,430
are clustered together if it's part of a specific cluster.

253
00:13:27,830 --> 00:13:28,430
So I could...

254
00:13:29,498 --> 00:13:31,440
make these layouts because there were several of these worlds,

255
00:13:31,981 --> 00:13:33,723
so I could drag things around with them pretty easily.

256
00:13:34,083 --> 00:13:34,784
That was really useful.

257
00:13:36,046 --> 00:13:38,348
There's also extra features, like if...

258
00:13:38,909 --> 00:13:40,992
Once I had enough levels, I needed to start searching by name,

259
00:13:41,052 --> 00:13:43,234
so if you hold down the shift key and you start typing the name,

260
00:13:43,555 --> 00:13:46,238
it'll filter out all the levels that don't have that string in their name,

261
00:13:46,258 --> 00:13:47,319
which is great, it just hides them.

262
00:13:49,281 --> 00:13:55,688
A little feature that I eventually added was, if you shift-click, it'll just select all rooms that are connected to the one that you've just clicked,

263
00:13:55,708 --> 00:13:57,409
which is actually surprisingly useful.

264
00:13:59,131 --> 00:14:03,195
And a bunch more, like little dude ads and stuff, to make this map editor useful.

265
00:14:04,556 --> 00:14:06,538
So, the room editor. Let's talk about the room editor a little bit.

266
00:14:07,299 --> 00:14:11,963
So, here's a room, a Bounce Meister, and this is actually what the editor looks like when I'm making levels.

267
00:14:13,330 --> 00:14:14,331
It uses the Unity Editor.

268
00:14:14,611 --> 00:14:17,253
So Linelight, it's baked into the actual game itself.

269
00:14:17,313 --> 00:14:18,594
It's baked into the, you know,

270
00:14:18,854 --> 00:14:20,415
like you could play it in the production,

271
00:14:20,735 --> 00:14:21,976
like the release version of Linelight.

272
00:14:23,777 --> 00:14:25,378
But Bounce Master uses the Unity Editor.

273
00:14:25,778 --> 00:14:26,479
It's got some advantages.

274
00:14:27,755 --> 00:14:29,477
It already exists. Unity Editor is already out there.

275
00:14:29,898 --> 00:14:32,601
So I didn't have to add things like undoing and redoing.

276
00:14:32,661 --> 00:14:35,725
LineLight didn't have that because that's just not worth adding on my own.

277
00:14:36,125 --> 00:14:37,607
But this had it, which is super useful.

278
00:14:38,729 --> 00:14:42,673
And especially useful is selecting multiple things and moving and scaling them all together.

279
00:14:42,693 --> 00:14:45,377
That's really useful. Unity Editor already has that built in.

280
00:14:46,208 --> 00:14:48,049
But there are some disadvantages, obviously.

281
00:14:48,550 --> 00:14:53,232
Um, uh, yeah, it's first off a separate window to play the game versus edit the game.

282
00:14:53,832 --> 00:14:56,173
Um, which I didn't really like because it made everything smaller.

283
00:14:56,193 --> 00:14:59,815
Um, uh, because there's just, you know, more windows, less screen real estate.

284
00:15:00,455 --> 00:15:06,238
Um, and also, like, I had to invent very specific workarounds to, like, work with Unities,

285
00:15:06,718 --> 00:15:10,700
like, how their editor works, um, in ways that I wasn't used to, you know, sort of working.

286
00:15:11,600 --> 00:15:14,581
So, let's talk about the room editor, some of the features in the room editor for Bouncemeister.

287
00:15:15,645 --> 00:15:21,849
Snap to grid. This was awesome. This code is hilariously not complicated. It's very simple.

288
00:15:23,970 --> 00:15:26,892
So yeah, the snap to grid is exactly what it looks like. It snaps things to the grid.

289
00:15:30,154 --> 00:15:33,697
Auto-rotating spikes. This was awesome. I wanted this for a long time, and I'll get into this

290
00:15:33,877 --> 00:15:37,019
specific example later, but when you drag it against a surface, the spikes will automatically

291
00:15:37,079 --> 00:15:38,120
rotate to match that surface.

292
00:15:38,886 --> 00:15:39,186
It's nice.

293
00:15:40,707 --> 00:15:41,688
This is gonna sound ridiculous,

294
00:15:42,609 --> 00:15:43,609
but I had to add a feature

295
00:15:43,629 --> 00:15:44,710
that would auto-expand the hierarchy.

296
00:15:44,770 --> 00:15:45,411
Cause you can tell here,

297
00:15:45,431 --> 00:15:46,832
this takes about seven seconds.

298
00:15:46,852 --> 00:15:48,473
I have to click once, twice,

299
00:15:49,914 --> 00:15:51,855
three times to open up the level itself,

300
00:15:53,517 --> 00:15:54,617
like in the hierarchy.

301
00:15:55,478 --> 00:15:56,239
And then in the code,

302
00:15:56,259 --> 00:15:57,600
anytime a level is loaded,

303
00:16:00,077 --> 00:16:04,120
Automatically would expand the hierarchy to exactly what I knew that I wanted it to be so that would save me all those clicks

304
00:16:04,400 --> 00:16:08,104
zero seconds zero clicks that actually saved a lot of time and a lot of headaches because I want to see what's in the

305
00:16:08,124 --> 00:16:09,505
What's in the level itself without having to click?

306
00:16:10,125 --> 00:16:12,227
In the actual game window, so that was really useful

307
00:16:12,487 --> 00:16:17,212
You can do that also you can like auto expand the hierarchy how you want in unity cool

308
00:16:19,041 --> 00:16:19,881
Tons of keyboard shortcuts.

309
00:16:20,261 --> 00:16:21,101
Not going to go through all of them.

310
00:16:21,762 --> 00:16:23,602
A simple one would be these keys right here.

311
00:16:24,442 --> 00:16:26,263
These just corresponded to jumping between levels.

312
00:16:27,223 --> 00:16:30,303
You can see up there, a little tiny, there's the map there.

313
00:16:30,443 --> 00:16:33,204
So I'm just like using these to warp between levels

314
00:16:33,224 --> 00:16:33,744
that are adjacent.

315
00:16:34,484 --> 00:16:36,385
And I have like a lot of,

316
00:16:36,785 --> 00:16:37,785
maybe two dozen keyboard shortcuts.

317
00:16:37,805 --> 00:16:39,045
I'm not going to go through all of them, but there's a lot.

318
00:16:39,385 --> 00:16:40,165
So we've also got gizmos

319
00:16:40,185 --> 00:16:41,486
that show mismatched room connections.

320
00:16:41,506 --> 00:16:44,426
So you can see right here, this line that's drawn,

321
00:16:44,446 --> 00:16:46,067
that's where the other room's opening is.

322
00:16:46,467 --> 00:16:47,547
So I can see if I'm looking at,

323
00:16:49,034 --> 00:16:50,595
I can see there's just a mismatch right there.

324
00:16:51,555 --> 00:16:51,996
So that made it...

325
00:16:52,496 --> 00:16:53,777
I didn't have to keep switching back and forth

326
00:16:53,797 --> 00:16:56,018
between levels to like, or like exit to the map editor

327
00:16:56,058 --> 00:16:56,999
to see if they were misaligned.

328
00:16:57,099 --> 00:16:57,679
I could just do it.

329
00:16:58,820 --> 00:17:00,581
I would know already, it'd be displayed right there.

330
00:17:01,541 --> 00:17:04,063
Next, we've got Music Story, another game that I worked on.

331
00:17:04,143 --> 00:17:05,023
This is right after Limelight.

332
00:17:05,063 --> 00:17:05,664
I didn't release it.

333
00:17:06,564 --> 00:17:07,745
This just stayed in a prototype stage.

334
00:17:08,606 --> 00:17:10,747
But I'll show you a little bit of the video of it

335
00:17:10,827 --> 00:17:12,768
and then we'll talk about the solutions

336
00:17:12,868 --> 00:17:13,669
to the challenges that I had.

337
00:17:13,689 --> 00:17:14,309
Yeah.

338
00:17:21,043 --> 00:17:23,986
You can make choices here, so you can choose to look or ignore.

339
00:17:24,006 --> 00:17:28,370
You can be nice or mean, I'll be nice.

340
00:17:48,046 --> 00:17:52,029
Okay, so anyway, so you can see that the music, the text comes in each of the notes, each

341
00:17:52,069 --> 00:17:55,392
of the syllables actually, the text will come in from each of the notes.

342
00:17:56,697 --> 00:17:58,277
all the text in the entire game is set to music.

343
00:17:59,098 --> 00:18:00,679
So this was an interesting challenge.

344
00:18:01,699 --> 00:18:04,721
I wanted a frictionless system to compose and connect,

345
00:18:04,901 --> 00:18:08,183
like to marry branching story and music.

346
00:18:08,343 --> 00:18:10,844
I'd never even conceptualized branching music before,

347
00:18:11,244 --> 00:18:12,625
so I had to figure out how to make that work.

348
00:18:13,446 --> 00:18:15,227
That was a very difficult challenge.

349
00:18:15,667 --> 00:18:17,108
Because I wanted this as frictionless as possible.

350
00:18:17,128 --> 00:18:19,169
I want to be able to add content really, really quickly.

351
00:18:19,989 --> 00:18:23,812
And not have to like worry about like setting specific timestamps. That would been like a nightmare

352
00:18:24,873 --> 00:18:27,514
Because I did that initially and it was just so time-consuming

353
00:18:28,175 --> 00:18:32,698
And it was it was difficult to add content. I wanted to just get my thoughts out as quickly as possible. That was my goal

354
00:18:34,279 --> 00:18:36,761
So the ultimate solution that I came up with for that

355
00:18:37,752 --> 00:18:41,134
This is Record Producer. This is like the first, I think I wrote my first like

356
00:18:41,635 --> 00:18:46,657
thousand or so songs in this software here. It's like from the 90s, super old.

357
00:18:47,778 --> 00:18:51,600
But anyway, yeah, so I wrote it in this. It's a MIDI editing program and I had stamps,

358
00:18:51,620 --> 00:18:55,362
so you can see like the little flags there. I read in that MIDI data into the code directly

359
00:18:56,223 --> 00:19:00,445
and I synced that up with, so I used Inky, which I mentioned earlier.

360
00:19:01,094 --> 00:19:06,658
Inky to write the actual branching dialogue and then it you see you see like the little hashtags that like specify

361
00:19:06,678 --> 00:19:11,863
They they sort of connect the music and the lyrics together that system. I was able to write content very quickly

362
00:19:12,423 --> 00:19:15,186
Considering that it was branching music, which was still weird to think about

363
00:19:15,846 --> 00:19:20,791
If somebody can make a cooler better branching music a sort of thing that would be that'd be pretty cool

364
00:19:21,491 --> 00:19:26,075
But I didn't need to make it sophisticated like I could have made an actual branching tree sort of thing like with an editor

365
00:19:26,355 --> 00:19:28,838
I was very tempted to honestly, but that wasn't worth my time

366
00:19:29,871 --> 00:19:30,932
but it would be cool for that to exist.

367
00:19:32,013 --> 00:19:33,515
Alright, let's talk about Combii.

368
00:19:33,535 --> 00:19:40,581
So you tap to drag the tiles,

369
00:19:40,681 --> 00:19:42,883
and then snap together.

370
00:19:42,903 --> 00:19:44,245
The goal is to connect all the colors,

371
00:19:44,425 --> 00:19:45,546
all the same colors together.

372
00:19:45,586 --> 00:19:47,648
You can do intro levels,

373
00:19:47,748 --> 00:19:50,811
and I guess it gets a lot more complicated.

374
00:19:50,831 --> 00:19:52,352
I think the grids get pretty big,

375
00:19:52,432 --> 00:19:53,673
but that's how to play the game.

376
00:19:55,839 --> 00:20:00,964
So with Combi, it's a mobile casual game, and we wanted over a thousand levels for the game.

377
00:20:01,084 --> 00:20:02,705
But we only had like two or three weeks to...

378
00:20:02,825 --> 00:20:04,687
Like our time frame for making the game was about three weeks.

379
00:20:05,928 --> 00:20:08,651
Which is pretty ambitious, to make a thousand levels with...

380
00:20:09,451 --> 00:20:10,733
And I was also the only developer on it.

381
00:20:12,074 --> 00:20:17,338
And the game itself was too complicated, like the merging and stuff to make procedural level generation.

382
00:20:17,599 --> 00:20:18,419
So I had to do them by hand.

383
00:20:19,985 --> 00:20:24,288
I would spend like two hours making levels, and it just blew my brain up.

384
00:20:24,468 --> 00:20:26,009
I couldn't function after that.

385
00:20:26,049 --> 00:20:28,290
So I eventually made an editor for my phone.

386
00:20:30,151 --> 00:20:33,873
This is what the level editor looks like, and this was absolutely outstanding.

387
00:20:34,694 --> 00:20:36,795
So the steps to make a level with this system.

388
00:20:37,396 --> 00:20:39,237
So first you would just hit New.

389
00:20:39,277 --> 00:20:41,658
It would generate a completely random level, potentially not even solvable.

390
00:20:41,678 --> 00:20:43,759
A lot of them were not solvable, and that's my job to figure that out.

391
00:20:45,363 --> 00:20:48,225
then play through it, and then I could edit manually.

392
00:20:48,686 --> 00:20:50,827
You can see here, paint, so we can click to add a tile,

393
00:20:50,847 --> 00:20:51,668
you can remove them as well.

394
00:20:53,069 --> 00:20:55,131
And then save and tag it, save the difficulty.

395
00:20:56,072 --> 00:21:01,376
And ultimately, each level cost about 45 seconds on average

396
00:21:01,616 --> 00:21:03,557
for me to make, including the extremely difficult levels,

397
00:21:04,318 --> 00:21:06,039
which would take a couple minutes to solve.

398
00:21:06,460 --> 00:21:07,501
A lot of them weren't even solvable.

399
00:21:07,521 --> 00:21:08,481
Like I would play through these levels

400
00:21:08,501 --> 00:21:09,462
that were not actually solvable,

401
00:21:09,482 --> 00:21:10,223
and I didn't know if they were.

402
00:21:11,164 --> 00:21:12,384
So, which means that a lot of these levels

403
00:21:12,425 --> 00:21:13,886
I was making in less than 10 seconds.

404
00:21:14,406 --> 00:21:20,108
So I would make levels after waking up, I would make levels on the subway, before I went to bed I

405
00:21:20,128 --> 00:21:23,749
would spend 10 minutes making levels, etc. etc. So I was able to make a tremendous amount of levels

406
00:21:23,769 --> 00:21:28,191
that really fit into my schedule. So this tool enabled me to make levels, and it was actually

407
00:21:28,211 --> 00:21:33,933
a lot of fun to make them too, without losing my mind by sort of fitting into my life a little bit

408
00:21:33,953 --> 00:21:35,353
better. So...

409
00:21:36,388 --> 00:21:40,090
The outcome of that, it cost maybe about three days total to make that editor.

410
00:21:40,110 --> 00:21:43,352
Tough to estimate that, but about three days roughly.

411
00:21:43,552 --> 00:21:45,333
And the payoff was my sanity.

412
00:21:46,514 --> 00:21:50,577
I literally found it was hard for me to have conversations with people after I'd been making

413
00:21:50,617 --> 00:21:51,757
levels for that long.

414
00:21:53,078 --> 00:21:54,679
So this definitely helped.

415
00:21:57,201 --> 00:21:57,801
Chapter 3.

416
00:21:58,442 --> 00:21:59,422
When to make a tool.

417
00:22:00,103 --> 00:22:00,343
When?

418
00:22:01,764 --> 00:22:02,264
Let's find out.

419
00:22:03,685 --> 00:22:06,066
So my advice, hack in the content first.

420
00:22:06,286 --> 00:22:08,046
Get the actual content working, get the design,

421
00:22:08,186 --> 00:22:08,986
and get it playable.

422
00:22:09,847 --> 00:22:12,867
And then once you've got any bit of content working,

423
00:22:14,588 --> 00:22:15,348
once you're able to play it,

424
00:22:15,588 --> 00:22:16,748
then you'll have a much clearer idea

425
00:22:16,788 --> 00:22:18,128
of what tools you actually do or don't need.

426
00:22:18,568 --> 00:22:19,449
Making the tool in advance,

427
00:22:20,569 --> 00:22:22,769
unless the design is like iron,

428
00:22:23,029 --> 00:22:23,950
like it's just like locked in,

429
00:22:25,910 --> 00:22:26,630
hacking it in first,

430
00:22:27,310 --> 00:22:30,711
for me has always, always been the right move.

431
00:22:31,905 --> 00:22:35,689
So, you know, for instance I showed earlier with Line Light I just hacked in how the streets

432
00:22:35,709 --> 00:22:36,089
were laid out.

433
00:22:36,109 --> 00:22:39,552
I didn't make any level editor, I just wanted to test if the game was a game at all in the

434
00:22:39,572 --> 00:22:39,892
first place.

435
00:22:40,793 --> 00:22:44,196
Which eventually became the Line Light level editor, which was great.

436
00:22:45,397 --> 00:22:47,279
You might be wasting more time than you realize.

437
00:22:48,620 --> 00:22:54,145
So my advice to all you folks out there, identify what your preferences are first and challenge

438
00:22:54,165 --> 00:22:54,245
them.

439
00:22:55,317 --> 00:23:01,538
So like let's say that you're easygoing, if you're not really bothered by repeating actions a lot, you don't really mind it so much, it doesn't affect you.

440
00:23:01,959 --> 00:23:06,800
So identify that. Or are you sort of on the other end of the spectrum, which is a little bit more like what I am, I'm efficiency fueled.

441
00:23:07,720 --> 00:23:10,221
Or like the moment I think of a tool I'm like, oh that would be so cool to build it.

442
00:23:11,721 --> 00:23:15,143
Identify sort of like where you think you might fall on the spectrum most of the time.

443
00:23:16,043 --> 00:23:16,963
So let's say that you're easygoing.

444
00:23:18,641 --> 00:23:25,184
So my recommendation would be, look at your process critically to see how much are you

445
00:23:25,204 --> 00:23:29,885
actually waiting for, let's say that somebody has to compile or you're waiting for something,

446
00:23:30,606 --> 00:23:35,908
and how often are you repeating actions. So some specific examples would be if you're renaming or

447
00:23:35,948 --> 00:23:39,749
editing files in bulk regularly, if you're doing this more than once a week.

448
00:23:41,505 --> 00:23:44,445
This is a really funny one that I found for myself.

449
00:23:44,706 --> 00:23:49,426
It makes a big difference, moving my mouse or my eyes really far distances.

450
00:23:49,446 --> 00:23:53,327
Because my monitors are set up, like, you can kind of see it here.

451
00:23:54,167 --> 00:23:56,588
It's pretty, yeah, it's like the gap is fairly wide.

452
00:23:56,948 --> 00:23:59,388
And there were moments where I would have to look all the way over there and then down there.

453
00:23:59,428 --> 00:24:00,889
And I also have to move my mouse between those two.

454
00:24:00,929 --> 00:24:06,830
And that's just, it sounds silly, but it really does, it interrupts the designer's flow.

455
00:24:07,310 --> 00:24:08,810
But just looking out for things like that.

456
00:24:10,777 --> 00:24:15,939
If you're waiting, every time you edit a code, it'll take 15 or more seconds to recompile.

457
00:24:15,959 --> 00:24:17,800
There probably is ways to save time.

458
00:24:17,820 --> 00:24:20,301
There's probably ways to cut that down that might be easier than you think.

459
00:24:20,401 --> 00:24:21,561
I would say challenge your complacency.

460
00:24:21,941 --> 00:24:23,022
That's my advice, basically.

461
00:24:24,622 --> 00:24:27,723
And yeah, honestly, saving time might be a lot easier than you think.

462
00:24:27,743 --> 00:24:34,866
Saving the first 30 or 40% of time, shaving that off for a lot of tasks might not take

463
00:24:34,886 --> 00:24:35,486
that much effort at all.

464
00:24:35,806 --> 00:24:36,887
So give it a shot.

465
00:24:37,247 --> 00:24:37,807
You might be surprised.

466
00:24:39,297 --> 00:24:41,497
Let's say you're more like me, efficiency fueled.

467
00:24:41,897 --> 00:24:43,158
Nah.

468
00:24:43,338 --> 00:24:46,659
My recommendation is try hacking in the content first instead.

469
00:24:46,839 --> 00:24:48,480
So this is the opposite of what I did with Scalia.

470
00:24:48,620 --> 00:24:50,060
I made the tool first.

471
00:24:50,760 --> 00:24:52,881
But my recommendation, hack in the content first,

472
00:24:53,141 --> 00:24:54,881
get that to work, and then once you've sort of got that,

473
00:24:55,842 --> 00:24:56,482
then you can make the tool.

474
00:24:57,422 --> 00:24:59,403
Because the design is probably gonna change.

475
00:25:00,343 --> 00:25:02,604
And the more specific a tool you make,

476
00:25:02,744 --> 00:25:05,045
the higher chance that tool has to becoming obsolete.

477
00:25:05,932 --> 00:25:07,833
Which brings us to the sunk cost fallacy.

478
00:25:07,873 --> 00:25:10,694
So if you've made a tool that does XYZ,

479
00:25:11,014 --> 00:25:13,235
it's actually hard to, it'll be harder for you

480
00:25:14,135 --> 00:25:17,577
as a designer or a developer to cut or change that feature,

481
00:25:17,637 --> 00:25:18,337
the XYZ feature.

482
00:25:18,397 --> 00:25:19,978
Even though you should cut the feature,

483
00:25:21,338 --> 00:25:23,879
like subconsciously you might be inclined to not,

484
00:25:23,919 --> 00:25:25,540
to leave it in because you've got the tool to make it,

485
00:25:25,820 --> 00:25:26,340
to make stuff work.

486
00:25:26,520 --> 00:25:27,741
But for the game, it's not the right decision.

487
00:25:28,481 --> 00:25:30,782
So you can avoid that by like not making the tool first.

488
00:25:32,048 --> 00:25:32,869
So let's say you're like this.

489
00:25:33,749 --> 00:25:35,450
My threshold for investing in tools

490
00:25:35,590 --> 00:25:38,171
was basically how annoying it would be without one.

491
00:25:39,092 --> 00:25:41,033
And that's sort of the equilibrium

492
00:25:41,053 --> 00:25:42,113
that I've sort of fallen into

493
00:25:42,133 --> 00:25:44,554
over the last five or six years that I've been using.

494
00:25:45,215 --> 00:25:46,515
And so first I'll try to live without a tool.

495
00:25:46,595 --> 00:25:47,676
I'll have in the back of my mind,

496
00:25:48,236 --> 00:25:50,938
somewhere in the back of my mind that this is inefficient,

497
00:25:51,538 --> 00:25:52,638
but I would go without it.

498
00:25:53,557 --> 00:25:55,799
and I would increasingly potentially think,

499
00:25:56,420 --> 00:25:57,120
this is really annoying.

500
00:25:57,741 --> 00:26:00,384
And I might become complacent with it over time, maybe,

501
00:26:00,864 --> 00:26:01,865
but sometimes not.

502
00:26:01,885 --> 00:26:02,706
Sometimes it would stay annoying

503
00:26:02,726 --> 00:26:03,627
and it would stay in the front of my head.

504
00:26:03,647 --> 00:26:06,510
At a certain threshold, once I'm annoyed enough,

505
00:26:07,271 --> 00:26:08,091
I'll ask myself, okay,

506
00:26:08,111 --> 00:26:09,713
so how long would it take to make the tool?

507
00:26:10,414 --> 00:26:11,835
And would it save me time, ultimately?

508
00:26:11,935 --> 00:26:13,617
So the time it costs to make the tool,

509
00:26:13,837 --> 00:26:14,718
would it save me more time?

510
00:26:14,818 --> 00:26:16,039
And groove as well.

511
00:26:19,379 --> 00:26:24,183
So example of this annoying thing, spike rotation, which I mentioned earlier.

512
00:26:25,083 --> 00:26:30,467
So in Bounce Meister, how to rotate a spike, the original way of rotating spikes. You drag that out. Let's go over to

513
00:26:31,408 --> 00:26:36,212
the Z and we've rotated it. Oh no, that's 90. No, I think 90 is left or negative 90 is left.

514
00:26:36,332 --> 00:26:42,216
Okay, if 90 doesn't work, then I would try negative 90 because I always get those two confused. Still get them confused.

515
00:26:42,236 --> 00:26:43,857
I don't know how. Still getting confused.

516
00:26:44,580 --> 00:26:45,721
Okay, so no, but like left is 90.

517
00:26:45,981 --> 00:26:47,842
So I would put in 90 and it was actually negative 90.

518
00:26:48,243 --> 00:26:49,343
So then I would remove the minus.

519
00:26:50,304 --> 00:26:51,965
And it's for every single spike you see down here.

520
00:26:51,985 --> 00:26:53,526
There's just a lot of spikes in each level.

521
00:26:53,566 --> 00:26:54,426
So this is a ton of spikes.

522
00:26:55,367 --> 00:26:58,229
It was a mess and it was really time consuming and it was goofy.

523
00:26:58,449 --> 00:27:01,611
And it irritated me a lot over a longer period of time.

524
00:27:02,971 --> 00:27:05,773
So I put up with it for weeks working on the game.

525
00:27:06,233 --> 00:27:07,814
Then eventually I was like, OK, OK, OK.

526
00:27:07,954 --> 00:27:09,755
What would be the easiest way to speed this up?

527
00:27:09,795 --> 00:27:11,536
The absolute simplest way. Answer.

528
00:27:12,660 --> 00:27:17,583
Okay, I can hit ctrl-r to rotate the spike 90 degrees, because I know I'm never rotating it by anything other than 90 degrees.

529
00:27:17,643 --> 00:27:19,404
It's like everything is just, you know, orthogonal.

530
00:27:19,924 --> 00:27:20,704
Okay, how long will that take?

531
00:27:20,724 --> 00:27:22,885
It took me 15 minutes to put that in.

532
00:27:23,906 --> 00:27:25,307
Excellent. That was so much quicker.

533
00:27:25,327 --> 00:27:26,987
And that's what it looks like.

534
00:27:32,850 --> 00:27:33,451
That's the right thumb.

535
00:27:35,472 --> 00:27:37,813
Yeah. It was better, but it was still clunky.

536
00:27:37,833 --> 00:27:40,094
I actually made it like a day or two using this before...

537
00:27:41,255 --> 00:27:46,536
I was even fed up with that, because it was an improvement, but it still wasn't good enough.

538
00:27:47,236 --> 00:27:50,777
So then I finally asked myself, okay, how long would it take for me to make auto-rotating spikes,

539
00:27:50,797 --> 00:27:56,318
spikes that rotate as you saw when you touched a surface? Okay, maybe about two hours. Okay,

540
00:27:56,958 --> 00:28:01,119
do I want to program that? Yeah, I absolutely want to program that. At this point,

541
00:28:01,139 --> 00:28:05,920
I'm so frustrated. Yes, I want to get this thing in. That's my answer. Yeah.

542
00:28:07,720 --> 00:28:08,740
There it is. It's beautiful, right?

543
00:28:10,117 --> 00:28:11,037
That took me an hour and a half.

544
00:28:11,057 --> 00:28:12,197
It took me 90 minutes to add that.

545
00:28:13,118 --> 00:28:14,718
And it saves so much time.

546
00:28:14,778 --> 00:28:15,458
It's so much better.

547
00:28:16,058 --> 00:28:18,039
So the manual rotation, let's say it took like,

548
00:28:18,419 --> 00:28:19,459
you know, 10 seconds or so.

549
00:28:19,519 --> 00:28:21,320
And I lost my groove a little bit each time.

550
00:28:21,920 --> 00:28:22,740
And like, that's, you know,

551
00:28:22,800 --> 00:28:23,781
if you actually add up the time on that,

552
00:28:23,801 --> 00:28:25,341
that's roughly three hours a month.

553
00:28:26,101 --> 00:28:28,082
Because I'm rotating spikes at least 50 times a day.

554
00:28:28,102 --> 00:28:29,182
This is a conservative estimate.

555
00:28:29,222 --> 00:28:30,923
So just time-wise, that was three hours a month

556
00:28:31,063 --> 00:28:31,643
of lost time.

557
00:28:32,123 --> 00:28:33,723
And I mean, I added this thing in one and a half hours,

558
00:28:33,743 --> 00:28:35,024
which is like crazy.

559
00:28:36,024 --> 00:28:38,405
Outcome, 90 minutes, pay-off is.

560
00:28:39,131 --> 00:28:41,853
Awesome. It was great. I was really happy with the outcome of this one.

561
00:28:42,273 --> 00:28:43,854
It's a good custom tool.

562
00:28:46,035 --> 00:28:51,278
Here's another example of a tool that I made for misaligned rooms, rooms that are slightly off.

563
00:28:51,538 --> 00:28:55,540
So you can see right there, when we zoom in, those rooms actually don't match up.

564
00:28:58,008 --> 00:28:58,448
They don't match up.

565
00:28:58,568 --> 00:28:59,609
So like if you move into one,

566
00:28:59,629 --> 00:29:00,850
you'll like actually hit the,

567
00:29:01,110 --> 00:29:02,672
your butt will hit like the floor of the next room.

568
00:29:03,092 --> 00:29:04,453
And that was a problem because it's really tough to see.

569
00:29:04,733 --> 00:29:07,616
So I added a feature that would highlight these errors.

570
00:29:08,556 --> 00:29:10,878
So if the map looks like this and you hit a button,

571
00:29:11,299 --> 00:29:12,980
it'll show like a little, it'll just highlight that.

572
00:29:13,000 --> 00:29:15,342
So you can see, oh, okay, I need to, I need to fix that.

573
00:29:16,163 --> 00:29:17,324
Which is very useful for the designer.

574
00:29:18,064 --> 00:29:19,806
I asked myself, do I want to add this?

575
00:29:20,606 --> 00:29:21,387
The answer was no.

576
00:29:22,168 --> 00:29:24,209
I didn't really want to, it didn't bug me enough.

577
00:29:25,470 --> 00:29:26,031
So I didn't add it.

578
00:29:26,171 --> 00:29:26,711
I never added it.

579
00:29:26,932 --> 00:29:27,472
I never put it in.

580
00:29:28,173 --> 00:29:34,721
And I continued to be slightly bugged by the fact that I do this manually each time.

581
00:29:35,121 --> 00:29:37,444
So this ideally would prevent human error, but I never put it in.

582
00:29:39,366 --> 00:29:43,611
Is there a right answer for either of these, the spikes or the highlight in the errors?

583
00:29:44,112 --> 00:29:44,953
There's not really a right answer.

584
00:29:45,113 --> 00:29:45,534
It's messy.

585
00:29:45,714 --> 00:29:47,456
Like, yeah.

586
00:29:49,230 --> 00:29:53,212
So, incomplete tools. What about tools that we don't finish? Which I have a lot of.

587
00:29:54,112 --> 00:29:58,094
So, as I mentioned at the beginning, our goal is to save time. It's not actually to make an amazing tool.

588
00:29:58,194 --> 00:30:00,635
As fun as that might be, it's ultimately about saving time.

589
00:30:01,516 --> 00:30:07,118
So, to illustrate that, Lionlight's map editor had a ton of bugs, which included...

590
00:30:07,138 --> 00:30:11,020
Instead of double-clicking to open up a level, the framerate was so low that you would have to click up to ten times.

591
00:30:11,040 --> 00:30:15,062
You just smash the mouse to open up a level. For every single level.

592
00:30:15,982 --> 00:30:19,144
Also, some of the boundaries were wrong when it displayed the levels, so I actually wasn't sure.

593
00:30:19,244 --> 00:30:20,984
I couldn't really trust them. That was a problem.

594
00:30:21,264 --> 00:30:24,946
And every time you connected levels, you still had to open each one individually and like manually

595
00:30:25,326 --> 00:30:28,247
jimmy things around. All of that could have been automated, but I didn't fix those issues

596
00:30:28,907 --> 00:30:34,109
because I didn't actually have to. I was wasting time, but the time that it would have taken to

597
00:30:34,249 --> 00:30:38,691
fix them might not have balanced out the time that I actually ended up wasting.

598
00:30:40,760 --> 00:30:43,700
When I ended up taking the code and repurposing it for Bouncemister,

599
00:30:43,940 --> 00:30:46,301
actually at that point I did fix the bugs because I was already in it,

600
00:30:46,601 --> 00:30:48,901
so that made more sense, and then I didn't have to deal with those things in the future.

601
00:30:49,241 --> 00:30:51,642
So, you know, it's not necessarily the right answer.

602
00:30:52,622 --> 00:30:55,162
So, last but not least, we have my Unity shortcuts.

603
00:30:55,982 --> 00:30:57,243
Obviously these are Unity-specific.

604
00:30:57,683 --> 00:31:00,803
These are bits of code that I've copied and pasted into every new project that I've made,

605
00:31:00,863 --> 00:31:02,364
and I continually add to them over time.

606
00:31:02,724 --> 00:31:07,585
I've got game-agnostic code that makes things a lot faster and easier for me as a programmer and developer.

607
00:31:08,891 --> 00:31:14,794
And if you're not working in Unity, and even if you are, you can use these sort of for inspiration as to ideas of how you can possibly save time.

608
00:31:14,814 --> 00:31:18,676
So I have a link to it, right? Oh, that's complicated. Can we, uh, okay, that's better.

609
00:31:18,716 --> 00:31:23,679
Alright, so go ahead and go to that link up there, cut.ly slash gdc2020tools talk.

610
00:31:23,919 --> 00:31:24,059
Yeah.

611
00:31:24,759 --> 00:31:24,859
Uh.

612
00:31:26,320 --> 00:31:27,681
Yep, that's where the code is. You can download it.

613
00:31:28,001 --> 00:31:28,101
Uh.

614
00:31:29,262 --> 00:31:32,543
Alright, and I'll keep it up on the screen for the rest of the, um, rest of the talk.

615
00:31:33,224 --> 00:31:34,724
Um, alright, so, uh, here's one.

616
00:31:35,476 --> 00:31:37,497
Reloading the scene every time the script reloads.

617
00:31:37,637 --> 00:31:40,219
Projects will often break when you recompile them in Unity,

618
00:31:40,259 --> 00:31:43,181
so if you make a change in C Sharp, the project will...

619
00:31:44,570 --> 00:31:46,631
Like, things will just be broken when you come back to Unity.

620
00:31:47,392 --> 00:31:48,732
For larger projects, it's kind of inevitable.

621
00:31:49,553 --> 00:31:51,214
Um, uh, but this...

622
00:31:52,074 --> 00:31:54,095
Literally, that is the code right there. That's all the code is.

623
00:31:54,155 --> 00:31:56,236
You have to put it in a class, of course, that exists somewhere in the scene.

624
00:31:57,017 --> 00:31:58,677
Um, but, uh, this prevents you...

625
00:31:58,878 --> 00:32:01,399
This prevented me from having to stop and run the code after every change.

626
00:32:01,619 --> 00:32:03,980
This would reload the scene, so every time I make a change in the code

627
00:32:04,080 --> 00:32:06,822
and I come back to Unity, it'll automatically reload the scene.

628
00:32:07,462 --> 00:32:10,063
Um, instead of me having to hit the play button twice, which...

629
00:32:10,744 --> 00:32:12,325
takes 10 seconds at least.

630
00:32:13,286 --> 00:32:14,907
So that saved me at least 10 seconds for every compile.

631
00:32:14,947 --> 00:32:16,328
And for larger projects it saves me more,

632
00:32:16,348 --> 00:32:18,490
because I don't have to, like, snap the whole thing and rebuild it.

633
00:32:19,491 --> 00:32:20,192
Um, yeah.

634
00:32:21,193 --> 00:32:22,574
Snap to Grid, which I already showed you earlier.

635
00:32:23,114 --> 00:32:25,637
This is the code for that. For the rectangles it's a little more complicated.

636
00:32:25,697 --> 00:32:28,079
But, um, for just the positioning of things,

637
00:32:28,479 --> 00:32:29,200
this is all it coded.

638
00:32:29,220 --> 00:32:31,842
The code is, it's extremely simple.

639
00:32:32,583 --> 00:32:33,223
Um, and useful.

640
00:32:35,490 --> 00:32:39,552
So I also have some various structs that I bring into each new project that I...

641
00:32:39,792 --> 00:32:44,234
I've got like a common folder filled with different structures that are useful.

642
00:32:44,254 --> 00:32:46,495
So for example, Color255, ColorHSP.

643
00:32:46,575 --> 00:32:50,076
So ColorHSP, of course, allows me to make colors in hue, saturation, brightness.

644
00:32:50,116 --> 00:32:51,116
It'll automatically convert it.

645
00:32:51,136 --> 00:32:53,257
Same thing with Color255.

646
00:32:53,317 --> 00:32:56,458
So if I'm using ColorPicker.com, which returns a range from 0 to 255,

647
00:32:56,838 --> 00:32:57,479
but Unity takes it from 0 to 1...

648
00:33:00,662 --> 00:33:03,364
For the longest time I would actually manually do the calculations,

649
00:33:03,945 --> 00:33:06,908
dividing the values by 255 after I got it from colorpicker.com,

650
00:33:07,229 --> 00:33:11,053
but I just made a color 255 struct eventually, which was very easy.

651
00:33:11,173 --> 00:33:15,918
So you'll say new color 255, pass in the values from 0 to 255, and say adopt to color.

652
00:33:17,667 --> 00:33:18,507
So that saved me a bunch of time.

653
00:33:18,567 --> 00:33:20,628
And it seems like, like these are things where it's like,

654
00:33:20,648 --> 00:33:21,688
well, why don't you just, you know,

655
00:33:22,048 --> 00:33:23,289
use the regular color feature,

656
00:33:24,249 --> 00:33:26,350
or like, say like divide by 255 in each of, you know,

657
00:33:26,370 --> 00:33:27,310
when you construct it.

658
00:33:27,330 --> 00:33:28,491
But that, that does take time.

659
00:33:29,131 --> 00:33:30,691
And I spent actually years doing that.

660
00:33:31,392 --> 00:33:33,052
And it ate up enough time where I wanted that,

661
00:33:33,212 --> 00:33:34,393
I wanted that little shortcut.

662
00:33:34,413 --> 00:33:35,293
And this was so easy to make.

663
00:33:35,973 --> 00:33:37,694
This is in the code up in the link up there.

664
00:33:41,155 --> 00:33:41,916
Yeah.

665
00:33:42,216 --> 00:33:43,776
And so for HSB, same principle,

666
00:33:44,296 --> 00:33:45,057
hue, saturation, brightness.

667
00:33:45,717 --> 00:33:46,097
It's awesome.

668
00:33:47,771 --> 00:33:53,353
I also have another example of a struct, vector2int, which I use all the time.

669
00:33:53,433 --> 00:33:55,173
It's so weird that this doesn't exist.

670
00:33:55,213 --> 00:33:57,014
So if you know vector2, those are floats.

671
00:33:58,374 --> 00:34:00,495
But vector2int is exactly what it sounds like.

672
00:34:00,515 --> 00:34:01,395
It's ints instead of floats.

673
00:34:02,275 --> 00:34:04,576
I literally use this for every single grid-based game.

674
00:34:05,576 --> 00:34:09,317
I don't know how this isn't built into default math libraries.

675
00:34:10,117 --> 00:34:10,657
I use it all the time.

676
00:34:10,717 --> 00:34:10,977
It's great.

677
00:34:11,357 --> 00:34:12,338
And that's in the code as well.

678
00:34:15,358 --> 00:34:15,498
Cool.

679
00:34:17,220 --> 00:34:21,103
So GameUtils, it's just a file that has a ton of utility functions.

680
00:34:21,223 --> 00:34:23,204
It's a static class that exists in all of my projects.

681
00:34:24,545 --> 00:34:27,767
And it's got tons of common functions that are game-agnostic,

682
00:34:27,807 --> 00:34:31,309
but you would use frequently for Unity editing stuff.

683
00:34:31,730 --> 00:34:33,311
Like parenting and resetting a transform.

684
00:34:33,391 --> 00:34:35,352
So instead of saying, you know, parent,

685
00:34:35,692 --> 00:34:38,654
and then calling setPosition to 0, setRotation to 0, and setScale to 1,

686
00:34:39,254 --> 00:34:39,955
this does it all for you.

687
00:34:39,975 --> 00:34:42,336
So you just say GameUtils.parentAndReset.

688
00:34:42,917 --> 00:34:45,298
Transform, passing the two game objects.

689
00:34:47,370 --> 00:34:51,379
So, uh, sizing a sprite render by pixels, it's weird that, very strange to me that that doesn't exist.

690
00:34:51,980 --> 00:34:52,762
Um, but this lets you do it.

691
00:34:53,102 --> 00:34:56,690
Um, setting the UI, the alpha of a UI graphic, so you just say game-utils.

692
00:34:57,634 --> 00:35:00,495
Set UI graphic alpha.

693
00:35:00,515 --> 00:35:03,117
Things that I'm surprised are not featured already,

694
00:35:03,657 --> 00:35:05,418
but it's just a library that looks into them.

695
00:35:06,258 --> 00:35:07,439
Also, yeah, so Unity,

696
00:35:08,319 --> 00:35:09,660
after they modified their particle system,

697
00:35:10,780 --> 00:35:13,602
you have to manually cache the particle emitter.

698
00:35:14,662 --> 00:35:15,563
It's like a whole thing.

699
00:35:15,743 --> 00:35:17,223
Anyway, so this, Game Utils will take care of it.

700
00:35:17,243 --> 00:35:17,984
It'll do it under the hood.

701
00:35:18,484 --> 00:35:20,165
Yeah, so the Game Utils will take care of that for you.

702
00:35:20,205 --> 00:35:22,466
So if you want to change the emitter color

703
00:35:22,626 --> 00:35:24,227
or stuff like that with the particle system.

704
00:35:24,247 --> 00:35:26,288
So, and that's also in the code up there.

705
00:35:27,637 --> 00:35:31,658
Also, yeah setting the editor camera position so there is a there's a function to call for that

706
00:35:32,479 --> 00:35:37,101
As well as like there's a there's a function to call for the copy pacing things to the users clipboard

707
00:35:37,881 --> 00:35:41,342
But I always forget what it's called. I always forget what the name of the function is

708
00:35:42,203 --> 00:35:45,504
It's like I don't remember honestly what it is. It's like something like universal

709
00:35:46,184 --> 00:35:51,947
Universal cache or something like that, but it doesn't it's not the word clipboard. I don't think anyway

710
00:35:52,007 --> 00:35:54,108
So if I ever need to use that feature

711
00:35:55,012 --> 00:35:57,313
I'll call gameutils.copytoclipboard

712
00:35:58,314 --> 00:35:59,374
because I remember what that's called.

713
00:36:00,074 --> 00:36:01,855
So that's like a little time-saving thing.

714
00:36:01,955 --> 00:36:03,156
It just calls the other line of code.

715
00:36:03,316 --> 00:36:04,896
It's just, it calls another line of code,

716
00:36:05,057 --> 00:36:06,317
but I can't remember what that one is.

717
00:36:06,917 --> 00:36:08,018
So that actually does save me a bunch of time.

718
00:36:08,658 --> 00:36:11,879
And yeah, we've also got setting the editor's camera position,

719
00:36:11,919 --> 00:36:14,100
which I used in Bouncemeister, which is very useful.

720
00:36:14,120 --> 00:36:14,981
Et cetera, et cetera.

721
00:36:15,001 --> 00:36:15,741
There's a bunch of stuff in there.

722
00:36:15,821 --> 00:36:17,162
Check out the code.

723
00:36:17,382 --> 00:36:19,263
Mathutils, which is similar to gameutils,

724
00:36:19,303 --> 00:36:20,903
except you'll never guess the difference.

725
00:36:22,720 --> 00:36:23,320
It's easy to guess.

726
00:36:23,860 --> 00:36:26,061
So this has things that are like math related

727
00:36:26,201 --> 00:36:28,122
or numbers or like related to primitives.

728
00:36:29,302 --> 00:36:30,443
So returning a random bool.

729
00:36:31,103 --> 00:36:34,164
So instead of having to say random, like zero to one,

730
00:36:34,664 --> 00:36:36,585
if that's less than 0.5, that's a random bool.

731
00:36:36,665 --> 00:36:38,186
So you just call mathutils.randombool.

732
00:36:39,266 --> 00:36:41,347
It also can merge two rectangles, things like that.

733
00:36:41,367 --> 00:36:43,207
I've got a lot of rectangle functions in there.

734
00:36:44,268 --> 00:36:46,409
Rounding something to a specific amount of decimal places

735
00:36:46,709 --> 00:36:47,309
and doing that.

736
00:36:48,485 --> 00:36:52,889
Doing sort of like, this is weird, Vector 2 doesn't have these features built in, like absolute

737
00:36:53,209 --> 00:36:57,593
values, max and mins of Vector 2s, but this lets you do it with them. So if you need to like absolute

738
00:36:57,613 --> 00:37:04,819
value of Vector 2, so that's all also in the code up there. Useful stuff. So to wrap things up,

739
00:37:05,540 --> 00:37:08,943
one global piece of advice I would say avoid generalizing. I alluded to this earlier,

740
00:37:09,364 --> 00:37:12,626
um, like it might be tempting to make a tool that you want to repurpose for other things.

741
00:37:13,067 --> 00:37:15,909
Don't. Make it specific to your game. Make that tool specific to your game.

742
00:37:17,075 --> 00:37:19,596
I made the map editor for LineLight extremely specific to LineLight,

743
00:37:20,137 --> 00:37:21,417
and it did exactly what I needed it to do.

744
00:37:21,737 --> 00:37:26,039
And I was able to take that code, and with only a couple of hours of dev time,

745
00:37:26,940 --> 00:37:30,541
make it so that I could use that for BounceMeister, the other game.

746
00:37:32,270 --> 00:37:33,571
that I made that I needed a similar feature.

747
00:37:34,452 --> 00:37:36,513
Making them global, it's just not going to be worth it.

748
00:37:36,573 --> 00:37:38,174
Just don't do it.

749
00:37:38,615 --> 00:37:41,237
And it's okay that tools feel unfinished and incomplete.

750
00:37:41,337 --> 00:37:41,997
That's totally fine.

751
00:37:42,017 --> 00:37:45,280
Your tools, I guess, will probably feel about as finished as your games feel.

752
00:37:45,300 --> 00:37:47,461
Because, like, does your game ever feel finished?

753
00:37:47,922 --> 00:37:49,223
It's like, there's always more stuff that you can do.

754
00:37:49,403 --> 00:37:50,163
So that's totally fine.

755
00:37:50,684 --> 00:37:51,104
Get used to it.

756
00:37:52,605 --> 00:37:53,646
And it's totally okay to make mistakes.

757
00:37:54,106 --> 00:37:55,568
I do it all the time.

758
00:37:56,668 --> 00:37:57,429
Yeah, that's just learning.

759
00:37:58,029 --> 00:37:58,350
Part of life.

760
00:38:01,288 --> 00:38:02,309
Yeah, other points.

761
00:38:02,769 --> 00:38:07,454
So good tools are designed to keep the designer in a flow

762
00:38:07,474 --> 00:38:08,795
state, sort of keeping them in the groove.

763
00:38:09,256 --> 00:38:10,377
So it's not just about saving time,

764
00:38:10,517 --> 00:38:11,978
although that obviously matters a lot too.

765
00:38:12,038 --> 00:38:13,139
So it's sort of about both of them.

766
00:38:14,801 --> 00:38:16,903
My advice, again, look at your process critically

767
00:38:17,243 --> 00:38:18,244
to see if you're wasting time.

768
00:38:18,505 --> 00:38:20,827
If you're efficiency fueled or if you're easy going,

769
00:38:21,608 --> 00:38:23,389
maybe you're wasting time by waiting or doing

770
00:38:23,409 --> 00:38:24,270
a lot of repeating actions.

771
00:38:24,310 --> 00:38:24,891
Take a look at that.

772
00:38:26,582 --> 00:38:31,667
I noticed that I was, even just the color 255, adding that saved me that little bit of time.

773
00:38:32,728 --> 00:38:35,712
Or if you're efficiency fueled, if you want to make things the moment that you think of them,

774
00:38:36,312 --> 00:38:38,394
maybe back off and hack it in first.

775
00:38:39,395 --> 00:38:41,578
Yeah, if you have any actions, perfect opportunity for a tool.

776
00:38:43,620 --> 00:38:46,182
But if you're trigger-happy to add tools, try hacking it in next time instead.

777
00:38:47,414 --> 00:38:51,755
Also, it's great to leverage your programmer's enthusiasm and interest, because there were

778
00:38:51,775 --> 00:38:55,836
things that I would leverage on my own, things that I wanted to make, and it was a lot easier

779
00:38:55,856 --> 00:38:56,176
to make them.

780
00:38:56,476 --> 00:38:58,257
And I was able to make them actually more quickly.

781
00:38:58,677 --> 00:39:03,158
So that's not even unique to tools, that's sort of just like a general piece of advice,

782
00:39:03,278 --> 00:39:03,858
I guess, on a team.

783
00:39:03,898 --> 00:39:05,258
If the programmer wants to do something that's...

784
00:39:06,239 --> 00:39:08,500
don't necessarily do it because they want to do it,

785
00:39:08,540 --> 00:39:10,921
but it's a good reason, if they're interested in it,

786
00:39:10,961 --> 00:39:15,223
leveraging that interest is actually beneficial.

787
00:39:16,464 --> 00:39:17,184
Happy teens, yeah.

788
00:39:17,604 --> 00:39:19,945
Also, you're awesome.

789
00:39:21,586 --> 00:39:22,867
Yeah, so that's my talk.

790
00:39:22,927 --> 00:39:25,168
Thank you so much for your time.

791
00:39:26,609 --> 00:39:27,689
Again, we got the link of things,

792
00:39:28,990 --> 00:39:32,571
there it is, of code, Unity shortcuts.

793
00:39:33,091 --> 00:39:36,553
I'm Brett Taylor. You can email me if you want. If you've got questions, concerns,

794
00:39:37,593 --> 00:39:38,534
other things to say,

795
00:39:39,394 --> 00:39:40,355
brett at mydogsare.com

796
00:39:41,215 --> 00:39:43,136
Tweet me. That's it. Yeah.

797
00:39:44,517 --> 00:39:45,177
Thanks for watching my talk.

798
00:39:48,439 --> 00:39:48,899
I'll uh...

799
00:39:49,480 --> 00:39:51,080
I guess I'll see you later.

800
00:39:51,100 --> 00:39:51,140
Ah.

801
00:39:51,160 --> 00:39:58,584
Got my hair.

802
00:40:01,086 --> 00:40:01,206
Adios.

