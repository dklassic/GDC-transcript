1
00:00:06,590 --> 00:00:09,571
Hello, and welcome to my talk.

2
00:00:09,571 --> 00:00:12,092
I'm going to talk about IT Syndicate

3
00:00:12,092 --> 00:00:14,193
and how we built the city.

4
00:00:14,193 --> 00:00:19,776
So I'm Damien, team lead tool programmer at Ubisoft Quebec.

5
00:00:19,776 --> 00:00:24,538
So first of all, I will give you an idea, a general idea,

6
00:00:24,538 --> 00:00:27,419
of the city we built and the kind of game

7
00:00:27,419 --> 00:00:28,940
we did for IT Syndicate.

8
00:00:28,940 --> 00:00:32,641
So it's set in Victorian London.

9
00:00:32,641 --> 00:00:35,943
We built a city almost six square kilometers.

10
00:00:37,197 --> 00:00:42,018
with almost 80 kilometers of drivable streets,

11
00:00:42,018 --> 00:00:45,279
a little bit more than 8,000 intersections,

12
00:00:45,279 --> 00:00:47,880
and we placed around 8,000 buildings.

13
00:00:47,880 --> 00:00:51,482
I'm speaking about generic buildings

14
00:00:51,482 --> 00:00:55,883
because it excludes the landmarks, train station,

15
00:00:55,883 --> 00:00:57,404
factories, and kind of big buildings.

16
00:00:57,404 --> 00:01:00,925
So the presentation is going to cover

17
00:01:00,925 --> 00:01:03,646
the different aspects of the solution

18
00:01:03,646 --> 00:01:05,307
we developed to build London.

19
00:01:05,901 --> 00:01:11,448
Instead of a simple list of topics, let's watch a short video that introduces the London we built and all the features.

20
00:02:03,408 --> 00:02:11,333
Yeah, the sound is kind of weird, but you get the idea of the feature we are.

21
00:02:11,333 --> 00:02:15,995
So in addition of the video, I'm going to talk about the user interface, how the user

22
00:02:15,995 --> 00:02:18,897
interface evolves throughout the project.

23
00:02:18,897 --> 00:02:26,082
For each subject, I'm going to introduce the context, explain what we did, and some information

24
00:02:26,082 --> 00:02:29,123
about the postmortem and feedback we get on these features.

25
00:02:30,198 --> 00:02:33,981
So, but first, a little bit of franchise history.

26
00:02:33,981 --> 00:02:37,884
We narrated all the technology from AC Unity.

27
00:02:37,884 --> 00:02:41,166
Unity was set in Paris during the French Revolution.

28
00:02:41,166 --> 00:02:43,828
Their solution for city building

29
00:02:43,828 --> 00:02:46,611
was focused on house blocks.

30
00:02:46,611 --> 00:02:49,513
They were organized, there was, sorry,

31
00:02:49,513 --> 00:02:51,374
no organized traffic in Paris.

32
00:02:51,374 --> 00:02:54,957
Therefore, the width of the street had no real importance.

33
00:02:55,592 --> 00:02:58,952
If a street was a little bit too large or too small,

34
00:02:58,952 --> 00:03:02,213
it would only be perceived as organic by the player.

35
00:03:02,213 --> 00:03:05,273
The streets were directly attached

36
00:03:05,273 --> 00:03:09,654
in front of the building in a slightly downward slope

37
00:03:09,654 --> 00:03:11,274
to the middle of the street.

38
00:03:11,274 --> 00:03:16,735
And the AC Unity tools only supported creating streets

39
00:03:16,735 --> 00:03:17,055
on the grid.

40
00:03:17,055 --> 00:03:21,876
You can see the blue lines on the pictures.

41
00:03:21,876 --> 00:03:24,457
So as a consequence, streets.

42
00:03:24,938 --> 00:03:29,702
were always constrained in length or in angle.

43
00:03:29,702 --> 00:03:31,663
So length and angle were not very flexible.

44
00:03:31,663 --> 00:03:36,787
When we set the goal for Assassin's Creed Syndicate,

45
00:03:36,787 --> 00:03:41,330
we decided very early that we wanted a more realistic street

46
00:03:41,330 --> 00:03:47,094
simulation, meaning that we had to change the way streets were

47
00:03:47,094 --> 00:03:50,997
handled compared to the previous Assassin's Creed game.

48
00:03:50,997 --> 00:03:54,059
In simple words, we wanted organized traffic.

49
00:03:54,059 --> 00:03:54,700
For instance.

50
00:03:55,559 --> 00:03:57,060
If you played an AC game before Syndicate,

51
00:03:57,060 --> 00:04:01,344
you might remember the street could have different widths,

52
00:04:01,344 --> 00:04:05,227
and the crowd always fill out the entire street.

53
00:04:05,227 --> 00:04:08,730
We had to move the crowd simulation and circulation

54
00:04:08,730 --> 00:04:09,631
on the sidewalk.

55
00:04:09,631 --> 00:04:13,234
The Assassin's Creed engine, called Anvil,

56
00:04:13,234 --> 00:04:16,337
had never been used to create any driving or racing game

57
00:04:16,337 --> 00:04:19,199
before, and the team has no prior experience

58
00:04:19,199 --> 00:04:20,100
in this kind of game.

59
00:04:21,014 --> 00:04:27,419
We knew we were going to need an easy way to iterate very late in production, an easy

60
00:04:27,419 --> 00:04:30,242
way to edit it very late in production.

61
00:04:30,242 --> 00:04:39,690
The last goal was to reuse as much as possible the IC Unity technology for obvious reasons.

62
00:04:39,690 --> 00:04:45,595
So in the franchise, the ground was usually manually created by artists.

63
00:04:46,568 --> 00:04:49,209
for AC Syndicate, since we needed

64
00:04:49,209 --> 00:04:53,712
to enforce some very strict metrics

65
00:04:53,712 --> 00:04:54,853
for the driving experience.

66
00:04:54,853 --> 00:04:59,475
We decided to have and to generate all the street meshes

67
00:04:59,475 --> 00:05:01,757
automatically.

68
00:05:01,757 --> 00:05:04,078
We started by using a debug display

69
00:05:04,078 --> 00:05:06,800
to prototype all the features we wanted.

70
00:05:06,800 --> 00:05:10,042
Let me show you a quick video of the prototyping phase

71
00:05:10,042 --> 00:05:11,022
without audio this time.

72
00:05:12,492 --> 00:05:15,014
And at the beginning, you are going

73
00:05:15,014 --> 00:05:17,856
to see a situation after intersection,

74
00:05:17,856 --> 00:05:21,939
and I will attempt to fill the AC unity

75
00:05:21,939 --> 00:05:29,185
solution on the whole network.

76
00:05:29,185 --> 00:05:30,666
Not good.

77
00:05:30,666 --> 00:05:37,291
OK.

78
00:05:37,291 --> 00:05:37,531
Sorry.

79
00:05:37,531 --> 00:05:40,913
I'm trying to fix it.

80
00:05:42,550 --> 00:05:43,710
Okay, it should work now.

81
00:05:43,710 --> 00:05:49,694
Okay, so that's the debug display.

82
00:05:49,694 --> 00:05:55,638
Intersection, so remember it's only in debug display, so

83
00:05:55,638 --> 00:05:59,320
that's a...

84
00:05:59,320 --> 00:06:00,661
network, that's a building, so.

85
00:06:06,331 --> 00:06:07,771
In the last frame of the video, we

86
00:06:07,771 --> 00:06:11,633
tried to fit the AC Unity to the Paris house

87
00:06:11,633 --> 00:06:14,694
block on the new street we just created.

88
00:06:14,694 --> 00:06:17,875
I highlighted in blue the house blocks.

89
00:06:17,875 --> 00:06:20,616
And as you can see, the orange arrow

90
00:06:20,616 --> 00:06:23,577
is pretty wide offset between the building location

91
00:06:23,577 --> 00:06:25,577
and the edge of the street.

92
00:06:25,577 --> 00:06:29,799
This is due to the strong angle enforcement of the AC Unity

93
00:06:29,799 --> 00:06:30,419
technology.

94
00:06:31,038 --> 00:06:35,179
We could enforce the street to be at certain angle,

95
00:06:35,179 --> 00:06:39,261
but we realized pretty quickly that if we process that way,

96
00:06:39,261 --> 00:06:42,041
any change in a city layout would altering much more

97
00:06:42,041 --> 00:06:43,282
as was intended.

98
00:06:43,282 --> 00:06:45,383
We would have a domino effect that

99
00:06:45,383 --> 00:06:47,923
would spread addition point until the far reach

100
00:06:47,923 --> 00:06:48,464
of the map.

101
00:06:48,464 --> 00:06:54,646
As you can imagine, this content was pretty drastic,

102
00:06:54,646 --> 00:06:56,726
and we needed to get rid of it.

103
00:06:56,726 --> 00:06:59,447
I will show you later how we managed to address this.

104
00:06:59,891 --> 00:07:06,132
But keep it in the back of your mind.

105
00:07:06,132 --> 00:07:09,493
After our first attempt in using debug display,

106
00:07:09,493 --> 00:07:14,555
we started looking into proper mesh and collision generation.

107
00:07:14,555 --> 00:07:17,095
Here is a quick video of the first time

108
00:07:17,095 --> 00:07:18,976
we were able to drive on the street.

109
00:07:18,976 --> 00:07:24,057
Of course, it's in debug display.

110
00:07:24,057 --> 00:07:26,017
It's programmer art.

111
00:07:26,017 --> 00:07:27,998
But this is real geometry generated.

112
00:07:29,497 --> 00:07:30,978
It's the first time we are able to drive.

113
00:07:30,978 --> 00:07:36,680
The solution we settled for the road mesh generation

114
00:07:36,680 --> 00:07:41,341
is based on slices, small chunks of road

115
00:07:41,341 --> 00:07:44,182
from different sizes carefully polished by artists.

116
00:07:44,182 --> 00:07:47,523
To generate the street from any length,

117
00:07:47,523 --> 00:07:50,144
we calculate the best combination of slices

118
00:07:50,144 --> 00:07:52,705
to approximate the length and stretch.

119
00:07:53,209 --> 00:07:57,250
all to slide a little bit to achieve the desired length.

120
00:07:57,250 --> 00:07:59,911
During this process, we also handled slopes

121
00:07:59,911 --> 00:08:02,272
if one end of the street is higher than the other.

122
00:08:02,272 --> 00:08:09,715
For the intersection, we created unique slices

123
00:08:09,715 --> 00:08:11,576
for each type of intersection.

124
00:08:11,576 --> 00:08:14,057
To reduce the number of intersection,

125
00:08:14,057 --> 00:08:17,538
we were able to move the extremity of the street

126
00:08:17,538 --> 00:08:19,159
from plus or minus 50 degrees.

127
00:08:19,159 --> 00:08:22,080
If we take a

128
00:08:23,440 --> 00:08:29,042
top view of the street, very schematic one.

129
00:08:29,042 --> 00:08:30,222
It's a T-shaped intersection,

130
00:08:30,222 --> 00:08:35,384
and we could move the end of the street in the red cone,

131
00:08:35,384 --> 00:08:38,605
and it would be the same for all other street entry.

132
00:08:38,605 --> 00:08:43,566
At the end of the project, we added a curvature,

133
00:08:43,566 --> 00:08:46,127
a very small curvature in the center of the street.

134
00:08:46,127 --> 00:08:49,368
This picture is, oh, sorry, oh.

135
00:08:51,487 --> 00:08:52,808
This picture is very exaggerated.

136
00:08:52,808 --> 00:08:56,370
The curvature is very big, but you get the idea.

137
00:08:56,370 --> 00:09:00,333
To conclude on the street mesh generation,

138
00:09:00,333 --> 00:09:04,056
the final generated result was very satisfactory.

139
00:09:04,056 --> 00:09:07,579
In terms of graphical fidelity, the small stretching of meshes

140
00:09:07,579 --> 00:09:09,800
was not noticeable at all.

141
00:09:09,800 --> 00:09:16,125
However, we had made the street mesh generation very easy,

142
00:09:16,125 --> 00:09:19,187
and we did not do anything for the lot

143
00:09:19,187 --> 00:09:20,428
besides the street meshes.

144
00:09:21,490 --> 00:09:25,452
It was a major production issue.

145
00:09:25,452 --> 00:09:28,993
On one side, we made sure it was very easy to move the street

146
00:09:28,993 --> 00:09:30,774
around and to iterate fast on driving.

147
00:09:30,774 --> 00:09:35,956
But each time we move a street, someone

148
00:09:35,956 --> 00:09:38,998
had to redo the ground around it.

149
00:09:38,998 --> 00:09:42,699
The intersection were very tedious to create.

150
00:09:42,699 --> 00:09:45,060
Even with a small angle correction,

151
00:09:45,060 --> 00:09:48,782
so plus or minus 50 degree, we had

152
00:09:48,782 --> 00:09:51,083
to create more than 100 intersections.

153
00:09:52,853 --> 00:09:56,176
And at the end, because everything was generated,

154
00:09:56,176 --> 00:09:59,039
it was very easy to add the curvature.

155
00:09:59,039 --> 00:10:04,323
When we tackle the next big challenge,

156
00:10:04,323 --> 00:10:07,646
creating the building placed along our on-the-road network,

157
00:10:07,646 --> 00:10:13,551
when building London, we had to account

158
00:10:13,551 --> 00:10:16,433
for some major iconic element of the city.

159
00:10:16,433 --> 00:10:22,018
The first is, you can see in this design document.

160
00:10:23,158 --> 00:10:26,279
The building has not always the same depth.

161
00:10:26,279 --> 00:10:28,020
It's an iconic element, and you can

162
00:10:28,020 --> 00:10:30,921
create some interesting parkour situation

163
00:10:30,921 --> 00:10:32,641
at the back of the building.

164
00:10:32,641 --> 00:10:37,783
So we wanted to reproduce that in our version of London.

165
00:10:37,783 --> 00:10:41,765
In London, we have a lot of pedestrian back alleys

166
00:10:41,765 --> 00:10:46,186
will allow people to walk from sidewalk to the courtyard.

167
00:10:46,186 --> 00:10:48,007
Sometimes we overpass.

168
00:10:48,007 --> 00:10:50,868
And another iconic element are the moats.

169
00:10:52,017 --> 00:10:53,318
in front of some buildings.

170
00:10:53,318 --> 00:10:59,041
And we also tried to reuse the modular solution created

171
00:10:59,041 --> 00:10:59,241
by Unity.

172
00:10:59,241 --> 00:11:04,724
Buildings are split in multiple parts,

173
00:11:04,724 --> 00:11:07,746
each being a key element of the building.

174
00:11:07,746 --> 00:11:10,767
The front, as you would expect, represents

175
00:11:10,767 --> 00:11:11,888
the facade of the building.

176
00:11:11,888 --> 00:11:18,331
In a similar fashion, the back represents everything

177
00:11:18,331 --> 00:11:20,132
behind the building.

178
00:11:20,992 --> 00:11:27,615
Contrary to Paris, we separated the front and the back to allow level designers to switch

179
00:11:27,615 --> 00:11:32,738
front and back independently because you could have a very nice representation of the street

180
00:11:32,738 --> 00:11:38,401
side but you want to change the parkour situation on the back by changing the type of stairs

181
00:11:38,401 --> 00:11:40,202
you have at the back.

182
00:11:40,202 --> 00:11:43,944
So you could change the front or the back independently.

183
00:11:43,944 --> 00:11:50,208
The roof was the last indispensable part to complete the building.

184
00:11:51,475 --> 00:11:55,197
The basement, unfortunately not very visible here,

185
00:11:55,197 --> 00:11:59,079
could be added automatically if the building is in a slope.

186
00:11:59,079 --> 00:12:03,641
So if one side of the building is not at the same level

187
00:12:03,641 --> 00:12:05,601
as the other side.

188
00:12:05,601 --> 00:12:08,943
The garden could be added in front

189
00:12:08,943 --> 00:12:12,064
to increase the space between sidewalk and buildings.

190
00:12:12,064 --> 00:12:14,385
We also used this garden for the moat.

191
00:12:16,763 --> 00:12:19,125
And finally, the parkour part, since it will not

192
00:12:19,125 --> 00:12:22,988
be an Assassin's Creed game without traversal,

193
00:12:22,988 --> 00:12:26,031
we had reusable preset props group

194
00:12:26,031 --> 00:12:31,295
used for parkour navigation and route alongside the facade.

195
00:12:31,295 --> 00:12:34,418
Building parts are dependent one to another.

196
00:12:34,418 --> 00:12:37,340
This means that if we change one part, all the dependent parts

197
00:12:37,340 --> 00:12:38,541
will also change.

198
00:12:38,541 --> 00:12:41,483
For example, if you try to add an extra floor on the front.

199
00:12:41,967 --> 00:12:44,568
you will have to change the back to add this extra floor.

200
00:12:44,568 --> 00:12:47,648
This back could be a different depth,

201
00:12:47,648 --> 00:12:50,749
so you end up changing the roof, and so on and so forth.

202
00:12:50,749 --> 00:12:55,130
In some cases, the building could

203
00:12:55,130 --> 00:12:57,890
be a pass-through building with open window

204
00:12:57,890 --> 00:13:00,231
in front and in the back.

205
00:13:00,231 --> 00:13:01,931
Contrary to the regular building,

206
00:13:01,931 --> 00:13:06,152
the front part also contains the back information.

207
00:13:06,152 --> 00:13:09,533
And you can see the holes in the window and doors.

208
00:13:10,703 --> 00:13:15,567
We had no editable back to ensure that the building,

209
00:13:15,567 --> 00:13:17,168
the wall inside will always fit.

210
00:13:17,168 --> 00:13:22,912
All the interior wall are in a separate part.

211
00:13:22,912 --> 00:13:27,275
I will remove the walls to see the interior.

212
00:13:27,275 --> 00:13:32,579
A separate part, and we, the, OK, the interior part.

213
00:13:32,579 --> 00:13:37,623
And the props are stored in a different part that

214
00:13:37,623 --> 00:13:39,905
allows with a given interior wall part.

215
00:13:40,534 --> 00:13:42,615
to have different props variation.

216
00:13:42,615 --> 00:13:48,136
The props part also contains NPC placement inside the building.

217
00:13:48,136 --> 00:13:52,537
And the roof, similar as for regular buildings.

218
00:13:52,537 --> 00:13:59,578
And we, of course, have also all other parts, garden, basement,

219
00:13:59,578 --> 00:14:00,418
and parkour.

220
00:14:00,418 --> 00:14:04,939
And the last type of part combination

221
00:14:04,939 --> 00:14:06,680
is the back alley.

222
00:14:06,680 --> 00:14:10,080
In order to replace some back alley.

223
00:14:11,930 --> 00:14:13,450
some building by Bacali.

224
00:14:13,450 --> 00:14:17,732
Here you can see a building.

225
00:14:17,732 --> 00:14:20,013
And now I can replace it by a Bacali.

226
00:14:20,013 --> 00:14:22,393
The tool will automatically generate

227
00:14:22,393 --> 00:14:24,814
the ground between the two buildings to fill the gap.

228
00:14:24,814 --> 00:14:27,255
And you could add a building overpass as an option.

229
00:14:27,255 --> 00:14:30,016
The buildings are built using small modules.

230
00:14:30,016 --> 00:14:30,876
We have two main type of modules.

231
00:14:41,069 --> 00:14:44,690
The first are the three meter wide module

232
00:14:44,690 --> 00:14:47,151
used for every important piece of the building,

233
00:14:47,151 --> 00:14:49,292
windows, doors, every features.

234
00:14:49,292 --> 00:14:53,314
You can stack some modules one on top of the other

235
00:14:53,314 --> 00:14:55,575
to create different floors.

236
00:14:55,575 --> 00:14:59,116
The second main type of module are the columns,

237
00:14:59,116 --> 00:15:01,557
half a meter wide.

238
00:15:01,557 --> 00:15:03,558
You can have as many columns as you want.

239
00:15:03,558 --> 00:15:06,859
With a little bit of imagination,

240
00:15:06,859 --> 00:15:08,260
the facade

241
00:15:09,350 --> 00:15:12,033
of the building is taking shape.

242
00:15:12,033 --> 00:15:16,316
And for some specific module, for a few feature

243
00:15:16,316 --> 00:15:18,137
of the building, we had wider modules,

244
00:15:18,137 --> 00:15:22,261
always multiple of three, in this case, six meters.

245
00:15:22,261 --> 00:15:27,044
And street level store are built using the same technique,

246
00:15:27,044 --> 00:15:29,927
the same solution, so three meters modules and columns,

247
00:15:29,927 --> 00:15:31,968
but with another design.

248
00:15:34,322 --> 00:15:38,604
And if you add decals and columns on each side,

249
00:15:38,604 --> 00:15:42,526
you have a pretty nice reusable building.

250
00:15:42,526 --> 00:15:47,249
It's a combination of three meter modules and half a meter

251
00:15:47,249 --> 00:15:50,270
columns here in top view.

252
00:15:50,270 --> 00:15:54,072
You can create your first three meter wide building.

253
00:15:54,072 --> 00:15:57,274
But however, if you put the column

254
00:15:57,274 --> 00:15:59,635
on the other side of the wall, you

255
00:15:59,635 --> 00:16:01,796
can create a four meter wide building.

256
00:16:02,888 --> 00:16:06,851
And if we apply the same solution using two 3 meter

257
00:16:06,851 --> 00:16:09,933
wide modules, you will get a 6 and 7.

258
00:16:09,933 --> 00:16:16,357
For use time and budget constraint,

259
00:16:16,357 --> 00:16:19,979
we were looking at procedurally generate some parts,

260
00:16:19,979 --> 00:16:23,021
essentially the very tedious and low creativity one,

261
00:16:23,021 --> 00:16:24,662
like the basements.

262
00:16:24,662 --> 00:16:28,524
Thanks to a very strict naming convention, for each module,

263
00:16:28,524 --> 00:16:31,526
we were able to extract its exact location in the building

264
00:16:31,526 --> 00:16:32,547
and its exact purpose.

265
00:16:33,560 --> 00:16:38,443
For example, here we have a residential house.

266
00:16:38,443 --> 00:16:40,324
B stands for Victorian.

267
00:16:40,324 --> 00:16:42,826
One F stands for 34.

268
00:16:42,826 --> 00:16:45,147
DR stands for Dome.

269
00:16:45,147 --> 00:16:46,828
And one for variation.

270
00:16:46,828 --> 00:16:51,932
By creating a basement apart using a matching naming

271
00:16:51,932 --> 00:16:55,874
convention, we are able to generate all the basements

272
00:16:55,874 --> 00:16:56,715
around the city.

273
00:17:01,279 --> 00:17:05,962
You can see the naming function is the same.

274
00:17:05,962 --> 00:17:06,563
The only one F is replaced by 0F.

275
00:17:06,563 --> 00:17:09,144
In London, the front of the building

276
00:17:09,144 --> 00:17:13,087
are from diverse architectural style.

277
00:17:13,087 --> 00:17:16,869
But the back all shares the Victorian style.

278
00:17:16,869 --> 00:17:20,412
Since that interesting fact is working at our advantage,

279
00:17:20,412 --> 00:17:25,075
it made sense to increase, to find a solution

280
00:17:25,075 --> 00:17:27,496
to share the back part throughout London

281
00:17:27,496 --> 00:17:30,018
and find a generation solution.

282
00:17:30,018 --> 00:17:31,078
For each back building.

283
00:17:31,608 --> 00:17:35,290
We created a polished and single template.

284
00:17:35,290 --> 00:17:36,531
A template is then cloned and adapted

285
00:17:36,531 --> 00:17:39,332
to each architectural style.

286
00:17:39,332 --> 00:17:41,033
In London, you have two type of Georgian back.

287
00:17:41,033 --> 00:17:45,175
You have the yellow one and the red one.

288
00:17:45,175 --> 00:17:51,459
Just by changing the color, just by changing the module,

289
00:17:51,459 --> 00:17:54,921
using the naming convention to other modules,

290
00:17:54,921 --> 00:17:59,423
we were able to generate backs for the other Georgian style,

291
00:17:59,423 --> 00:17:59,963
the red one.

292
00:18:00,946 --> 00:18:05,748
And if we add a kind of a small item on the top,

293
00:18:05,748 --> 00:18:08,930
you can see we can increase the size of the building.

294
00:18:08,930 --> 00:18:14,292
In case, this was used in the case of neoclassical building

295
00:18:14,292 --> 00:18:17,033
were a little bit taller than the Georgian one.

296
00:18:17,033 --> 00:18:21,715
And we use the same generation process for the roof

297
00:18:21,715 --> 00:18:24,737
because they share only four different shapes

298
00:18:24,737 --> 00:18:25,497
throughout London.

299
00:18:30,058 --> 00:18:32,280
To conclude on the building parts,

300
00:18:32,280 --> 00:18:34,781
with this module solution, we could

301
00:18:34,781 --> 00:18:37,523
produce a lot of building for a lesser production cost.

302
00:18:37,523 --> 00:18:40,865
With all the part generation solution,

303
00:18:40,865 --> 00:18:43,667
we were able to save time, increase significantly

304
00:18:43,667 --> 00:18:48,650
the number of back roof and basement we were able to create.

305
00:18:48,650 --> 00:18:51,252
Working with smaller modules, they are easy.

306
00:18:51,252 --> 00:18:54,073
Replace, reproduce, copy, fixed.

307
00:18:54,073 --> 00:18:55,814
It's a much easier way to work.

308
00:18:55,814 --> 00:18:58,356
And module offer a great.

309
00:18:58,742 --> 00:19:02,004
separation for taking advantage of the hardware instancing.

310
00:19:02,004 --> 00:19:05,927
Now that we know how the buildings are built,

311
00:19:05,927 --> 00:19:10,190
it's time to explain how they are placed along the street

312
00:19:10,190 --> 00:19:13,812
and how we are able to fit any length and any angle.

313
00:19:13,812 --> 00:19:18,255
The London is split in seven districts,

314
00:19:18,255 --> 00:19:22,058
each having its own artistic direction.

315
00:19:22,058 --> 00:19:27,182
To support this action, we created seven databanks.

316
00:19:27,820 --> 00:19:29,982
one data bank for each district.

317
00:19:29,982 --> 00:19:35,585
And each data bank or team contains three building styles.

318
00:19:35,585 --> 00:19:39,508
For example, if we take the city of London,

319
00:19:39,508 --> 00:19:44,391
we have the three styles we have inside,

320
00:19:44,391 --> 00:19:46,852
we also call the style kit, are the Victorian one,

321
00:19:46,852 --> 00:19:49,114
the Georgian one, and the neoclassical one.

322
00:19:49,114 --> 00:19:53,897
All districts are limited to only three building styles out

323
00:19:53,897 --> 00:19:56,779
of the seven we have in the game for memory consumption

324
00:19:56,779 --> 00:19:57,199
purposes.

325
00:19:59,048 --> 00:20:05,791
The City of London district ended up containing a little bit more than 200 straight buildings

326
00:20:05,791 --> 00:20:11,133
and a little bit more than 80 corner buildings across these tiles.

327
00:20:11,133 --> 00:20:13,754
Buildings are split in different sizes.

328
00:20:13,754 --> 00:20:18,637
Here we are going to explore the Victorian kit.

329
00:20:18,637 --> 00:20:23,579
We started by creating the straight building in seven different sizes.

330
00:20:23,579 --> 00:20:28,341
Three, four, six, seven, ten, thirteen, sixteen.

331
00:20:29,057 --> 00:20:33,098
five different heights, two, three, four, five, and six

332
00:20:33,098 --> 00:20:33,498
floors.

333
00:20:33,498 --> 00:20:37,719
And we also created all the corners

334
00:20:37,719 --> 00:20:41,420
between 30 degrees to 270 in 10 degree increment.

335
00:20:41,420 --> 00:20:45,481
A kit can hold more than one building for each type,

336
00:20:45,481 --> 00:20:50,202
but can also not hold a building for each type.

337
00:20:50,202 --> 00:20:53,323
So you can have multiple buildings.

338
00:20:53,323 --> 00:20:56,404
For example, the Victorian kit has.

339
00:20:57,490 --> 00:21:01,253
three 7 meter wide, two floor height building,

340
00:21:01,253 --> 00:21:05,636
but had no 10 meter wide, two floor height building.

341
00:21:05,636 --> 00:21:10,199
So each kit can contain more or less buildings.

342
00:21:10,199 --> 00:21:14,382
Building are placed one next to the other.

343
00:21:14,382 --> 00:21:19,486
That mean that given the available width of building,

344
00:21:19,486 --> 00:21:22,568
so three, four, six, seven, et cetera,

345
00:21:22,568 --> 00:21:26,070
we could only result in street lengths in integral.

346
00:21:26,795 --> 00:21:28,736
the same way it was in Paris.

347
00:21:28,736 --> 00:21:34,281
Since we needed to be able to create street from any length,

348
00:21:34,281 --> 00:21:38,244
we introduced the concept of adjustable building.

349
00:21:38,244 --> 00:21:40,005
Only one per frontage.

350
00:21:40,005 --> 00:21:42,588
I'm going to talk about it in the next slide.

351
00:21:42,588 --> 00:21:47,031
And a frontage describes the group of buildings

352
00:21:47,031 --> 00:21:50,834
of one side of the street.

353
00:21:50,834 --> 00:21:52,776
When the user resizes a street.

354
00:21:53,727 --> 00:21:56,668
We try to keep as many existing buildings as possible.

355
00:21:56,668 --> 00:22:02,069
So if we reduce the street from three or four meters,

356
00:22:02,069 --> 00:22:06,030
we are going to remove a 10-meter Victorian building

357
00:22:06,030 --> 00:22:10,510
and try to reinsert a six-meter Victorian building to keep

358
00:22:10,510 --> 00:22:11,491
the street as consistent as possible.

359
00:22:11,491 --> 00:22:13,971
Let's focus on the adjustable building.

360
00:22:13,971 --> 00:22:18,692
The adjustable building is capable to assume any size

361
00:22:18,692 --> 00:22:20,312
between three and four meters.

362
00:22:20,312 --> 00:22:22,433
Let's check out a small video.

363
00:22:24,095 --> 00:22:27,817
Look at the building with the light green cylinder in front.

364
00:22:27,817 --> 00:22:30,079
His side is going to shrink until it's

365
00:22:30,079 --> 00:22:36,804
reached under three meters.

366
00:22:36,804 --> 00:22:41,447
In fact, the building is split in three subgroups, one

367
00:22:41,447 --> 00:22:46,230
for each side containing the columns and the wall

368
00:22:46,230 --> 00:22:49,973
perpendicular to the street, and a central group

369
00:22:49,973 --> 00:22:51,134
containing the rest.

370
00:22:52,031 --> 00:22:56,073
We slide the subgroup into the three meter center

371
00:22:56,073 --> 00:22:57,913
to reach all the size between three and four.

372
00:22:57,913 --> 00:23:02,075
So if we take a graphical representation of all

373
00:23:02,075 --> 00:23:05,236
the street lengths we could build,

374
00:23:05,236 --> 00:23:08,838
if we add the building we have at the beginning, so three,

375
00:23:08,838 --> 00:23:13,160
four, six, seven, et cetera, we ended up

376
00:23:13,160 --> 00:23:16,461
with this kind of street we could create.

377
00:23:16,461 --> 00:23:18,702
If we add all the combination of buildings,

378
00:23:18,702 --> 00:23:21,043
we can create almost everything over nine meters.

379
00:23:23,290 --> 00:23:30,275
And if we add one adjustable building in each frontage,

380
00:23:30,275 --> 00:23:32,696
we were able to create everything

381
00:23:32,696 --> 00:23:34,757
between three and four meters, everything between six

382
00:23:34,757 --> 00:23:36,098
and eight, and everything over nine meters.

383
00:23:36,098 --> 00:23:40,741
In order to have street at any angle,

384
00:23:40,741 --> 00:23:44,744
we had to have corner buildings capable to match any angle.

385
00:23:44,744 --> 00:23:50,127
To generate the general concept between adjusting building

386
00:23:50,127 --> 00:23:51,968
to an angle is to rotate the wall.

387
00:23:53,808 --> 00:23:55,569
around six pivot points.

388
00:23:55,569 --> 00:24:02,972
Here you can see a 90-degree building in top view.

389
00:24:02,972 --> 00:24:05,013
And the six pivot points are located here.

390
00:24:05,013 --> 00:24:08,454
We use only rotation on the building, no scaling,

391
00:24:08,454 --> 00:24:10,855
in order to avoid creating unique geometry

392
00:24:10,855 --> 00:24:11,475
for each corner.

393
00:24:11,475 --> 00:24:18,618
Since we already have created building for each corner

394
00:24:18,618 --> 00:24:21,159
in 10-degree increments.

395
00:24:21,959 --> 00:24:26,321
we needed only a rotation of plus or minus 5 degrees.

396
00:24:26,321 --> 00:24:28,302
We thought that such a minor deformation

397
00:24:28,302 --> 00:24:30,563
will not be noticeable.

398
00:24:30,563 --> 00:24:33,344
Only the roof needed to have unique geometry.

399
00:24:33,344 --> 00:24:36,526
The geometry is generated deforming a template,

400
00:24:36,526 --> 00:24:40,728
and the coefficients decrease with altitude

401
00:24:40,728 --> 00:24:43,089
in order to keep the roof ridge.

402
00:24:43,089 --> 00:24:49,592
So let's check out the result of the deformation together.

403
00:24:56,045 --> 00:25:01,066
Here is a screenshot of the back of a 90-degree building.

404
00:25:01,066 --> 00:25:03,487
At first, a 1-degree deformation.

405
00:25:03,487 --> 00:25:06,028
Remember the top view from the previous slide.

406
00:25:06,028 --> 00:25:10,029
The 1 degree is between this wall and this wall.

407
00:25:10,029 --> 00:25:12,150
Let's continue our journey.

408
00:25:12,150 --> 00:25:12,450
2 degrees, 3, 4, 5.

409
00:25:12,450 --> 00:25:23,073
At this point, it's pretty clear we cannot use this solution

410
00:25:23,073 --> 00:25:24,013
in an EEE game.

411
00:25:26,372 --> 00:25:28,093
The result makes no sense.

412
00:25:28,093 --> 00:25:31,436
Nobody would build a building with a window

413
00:25:31,436 --> 00:25:32,237
that close to each other.

414
00:25:32,237 --> 00:25:33,518
And if you look at other parts of the roof in front,

415
00:25:33,518 --> 00:25:40,323
doesn't look that bad with a five degree deformation.

416
00:25:40,323 --> 00:25:43,745
But the back is pretty much destroyed.

417
00:25:43,745 --> 00:25:49,189
And even the columns are stretched too much.

418
00:25:49,189 --> 00:25:50,750
So we had to find another solution.

419
00:25:52,475 --> 00:25:58,636
We concluded that it was not possible to have an adjustment of plus or minus five degrees

420
00:25:58,636 --> 00:26:04,258
on the corner building alone, so we decided to split the load in three buildings.

421
00:26:04,258 --> 00:26:07,539
The corner and the two buildings adjacent the corner.

422
00:26:07,539 --> 00:26:13,240
Two degrees on each building adjacent the corner and one on the corner itself.

423
00:26:13,240 --> 00:26:20,542
The corner building is the last to be alterated in order to avoid generating roof geometry

424
00:26:20,542 --> 00:26:21,602
as much as possible.

425
00:26:23,014 --> 00:26:29,217
If we look at a building next to the corner,

426
00:26:29,217 --> 00:26:34,520
he split in three parts, like the adjustable building.

427
00:26:34,520 --> 00:26:39,563
And instead of just sliding the wall inside and out,

428
00:26:39,563 --> 00:26:42,184
we just rotate the wall next to the corner.

429
00:26:42,184 --> 00:26:43,345
And it's going to adjust to the angle correctly.

430
00:26:43,345 --> 00:26:47,847
To conclude, on the building placement,

431
00:26:47,847 --> 00:26:50,108
I'm going to bring back the.

432
00:26:51,253 --> 00:26:53,255
diagram from four slides ago.

433
00:26:53,255 --> 00:26:56,656
With the introduction of the angle solution,

434
00:26:56,656 --> 00:26:57,857
we had new limitation.

435
00:26:57,857 --> 00:27:01,959
We needed a minimum of three buildings along a street,

436
00:27:01,959 --> 00:27:03,800
one next to each corner to account

437
00:27:03,800 --> 00:27:06,922
for the angle deformation, and one in the center

438
00:27:06,922 --> 00:27:11,224
to account for the fractal part of the street length.

439
00:27:11,224 --> 00:27:15,987
So everything under nine meters was not possible anymore.

440
00:27:22,090 --> 00:27:29,514
To sum up, we ended up having to build much more building

441
00:27:29,514 --> 00:27:34,737
adjustable as the three meter we originally intended to create,

442
00:27:34,737 --> 00:27:38,419
because it looked weird to always have three meter

443
00:27:38,419 --> 00:27:40,680
buildings next to corners.

444
00:27:40,680 --> 00:27:44,942
So we ended up having to create three adjustable buildings,

445
00:27:44,942 --> 00:27:48,424
not only for the three meters like we originally intended,

446
00:27:48,424 --> 00:27:49,885
but also for four, three.

447
00:27:51,080 --> 00:27:53,862
7, 10, 13. I think we don't create any 16.

448
00:27:53,862 --> 00:27:58,485
And these buildings are 30% more expensive to create

449
00:27:58,485 --> 00:28:02,708
because you have subgroups to manage and that kind of stuff.

450
00:28:02,708 --> 00:28:05,690
In order to have 9 meters between corners,

451
00:28:05,690 --> 00:28:09,152
because 9 meters is now the minimum street

452
00:28:09,152 --> 00:28:13,035
length we can create, we had to produce smaller corner

453
00:28:13,035 --> 00:28:16,397
buildings in order to try to give

454
00:28:16,397 --> 00:28:19,119
to crop some size of the corner.

455
00:28:19,119 --> 00:28:19,279
So.

456
00:28:20,657 --> 00:28:22,718
And we ended up creating a smaller corner.

457
00:28:22,718 --> 00:28:25,999
And at this point, you are probably asking yourself,

458
00:28:25,999 --> 00:28:28,120
was it worth it, all this job?

459
00:28:28,120 --> 00:28:31,602
Placing building next to the street

460
00:28:31,602 --> 00:28:33,783
was definitely worth it for our project.

461
00:28:33,783 --> 00:28:36,704
We had early playable buildings.

462
00:28:36,704 --> 00:28:38,444
We could drive very early in production.

463
00:28:38,444 --> 00:28:42,066
And the city was ready sooner as any other Assassin's Creed

464
00:28:42,066 --> 00:28:43,867
game before.

465
00:28:43,867 --> 00:28:46,448
But definitively, there is a lot of room for improvement.

466
00:28:48,788 --> 00:28:54,130
Let's continue on the props and crowd life we placed throughout London.

467
00:28:54,130 --> 00:29:00,512
In addition of the parkour group, you remember from the beginning, we needed to be able to

468
00:29:00,512 --> 00:29:06,694
add props in front of buildings to create some new parkour road or simply to add some

469
00:29:06,694 --> 00:29:08,095
variety.

470
00:29:08,095 --> 00:29:15,517
We reused the modular structure of the building in order to add magnets at some key modules.

471
00:29:15,517 --> 00:29:17,058
You can see in the picture.

472
00:29:17,967 --> 00:29:21,968
This column has four magnets on it.

473
00:29:21,968 --> 00:29:24,709
At this point, you're probably wondering,

474
00:29:24,709 --> 00:29:26,689
why is he calling that a magnet?

475
00:29:26,689 --> 00:29:31,931
Magnet solution was originally created for the highway bridge

476
00:29:31,931 --> 00:29:35,132
to snap two segments of bridge together

477
00:29:35,132 --> 00:29:38,753
to avoid gaps between the segment for the overpass.

478
00:29:38,753 --> 00:29:41,613
I have a small video about that.

479
00:29:41,613 --> 00:29:46,274
It's very short, so be aware.

480
00:29:46,274 --> 00:29:47,035
Up, snapped.

481
00:29:47,751 --> 00:29:55,216
In addition of the magnet on the building, we added magnet on the props.

482
00:29:55,216 --> 00:30:03,081
We very early discovered that we had to filter everything because when we added magnet on

483
00:30:03,081 --> 00:30:09,165
honing and we didn't filter it, we didn't have honing only on top of store.

484
00:30:09,165 --> 00:30:10,286
We had honing everywhere.

485
00:30:10,286 --> 00:30:12,208
So filtering is key.

486
00:30:12,208 --> 00:30:16,971
The first implementation of the magnet solution.

487
00:30:18,181 --> 00:30:21,402
was for the user to select an item

488
00:30:21,402 --> 00:30:27,125
and try to drag it along the wall until it snapped somewhere.

489
00:30:27,125 --> 00:30:28,786
It was very similar to the solution

490
00:30:28,786 --> 00:30:32,167
we used for the bridges.

491
00:30:32,167 --> 00:30:35,489
But we quickly realized that it was not a good solution.

492
00:30:35,489 --> 00:30:38,470
We had two mini-manettes, one close to another.

493
00:30:38,470 --> 00:30:41,331
And the placement was very tedious.

494
00:30:41,331 --> 00:30:45,473
We switched to display all the available slots on the wall.

495
00:30:47,105 --> 00:30:52,710
And just by selecting one, a list of all the compatible props will be displayed,

496
00:30:52,710 --> 00:30:56,994
and you could choose whatever you want, and move to the next.

497
00:30:56,994 --> 00:31:04,621
The list is always curated depending on the flags on the props and the item you want to place.

498
00:31:04,621 --> 00:31:13,409
For the chimney, we use the same magnet solution, with specific tags of course.

499
00:31:14,044 --> 00:31:19,848
And as you can see, we had some chimney variation.

500
00:31:19,848 --> 00:31:25,232
We originally intended to have a cascading magnet for chimney,

501
00:31:25,232 --> 00:31:29,255
one for snapping the chimney wall on top of the roof.

502
00:31:29,255 --> 00:31:32,598
And on this wall, we would have other magnet

503
00:31:32,598 --> 00:31:37,021
to snap the chimney exhaust on the top of the wall.

504
00:31:37,021 --> 00:31:39,003
But after using the magnet, we realized

505
00:31:39,003 --> 00:31:42,986
that it was sufficient to have.

506
00:31:44,521 --> 00:31:47,204
only one snap magnet for the chimneys.

507
00:31:47,204 --> 00:31:50,567
So we didn't do cascading magnets, but it would be fun.

508
00:31:50,567 --> 00:31:54,550
And the crowd life is a big part

509
00:31:54,550 --> 00:31:56,151
of the Ars Sanct Crid experience.

510
00:31:56,151 --> 00:31:59,254
They create the living, bringing world feeling

511
00:31:59,254 --> 00:32:01,496
throughout the city.

512
00:32:01,496 --> 00:32:03,558
Crowd life is made up of station,

513
00:32:03,558 --> 00:32:06,120
like a guy reading his newspaper,

514
00:32:06,120 --> 00:32:07,881
two people talking about the weather.

515
00:32:08,999 --> 00:32:10,801
placed throughout the city.

516
00:32:10,801 --> 00:32:13,465
In order to ensure proper station placement,

517
00:32:13,465 --> 00:32:17,129
we created slots for crowd station at ground level.

518
00:32:17,129 --> 00:32:20,053
The usage was very similar as PropMagnet.

519
00:32:20,053 --> 00:32:23,497
The street creation tool automatically

520
00:32:23,497 --> 00:32:26,421
generated a first path of crowd life

521
00:32:26,421 --> 00:32:28,083
when the buildings are built.

522
00:32:29,525 --> 00:32:32,966
And as you can see, the idea is the same.

523
00:32:32,966 --> 00:32:33,946
You have slots.

524
00:32:33,946 --> 00:32:36,647
They are much bigger because Cloud Life is much bigger.

525
00:32:36,647 --> 00:32:37,547
But it's the same idea.

526
00:32:37,547 --> 00:32:38,208
You have slots.

527
00:32:38,208 --> 00:32:39,288
You have lists.

528
00:32:39,288 --> 00:32:43,069
You select another Cloud Life, and you can cycle

529
00:32:43,069 --> 00:32:46,750
between all the Cloud Life.

530
00:32:46,750 --> 00:32:49,390
The main feedback we received on the building props

531
00:32:49,390 --> 00:32:52,831
is that it was available too late in production.

532
00:32:52,831 --> 00:32:56,552
The postmortem revealed that it was a very efficient way

533
00:32:56,552 --> 00:32:58,593
to add items on the wall and roof.

534
00:32:59,397 --> 00:33:02,859
It encouraged diversity, since all the available props

535
00:33:02,859 --> 00:33:04,640
are clearly displayed.

536
00:33:04,640 --> 00:33:06,941
On previous Assassin's Creed games,

537
00:33:06,941 --> 00:33:09,643
because of the difficulty to find props,

538
00:33:09,643 --> 00:33:15,666
level designers tend to reuse what they knew, even

539
00:33:15,666 --> 00:33:17,387
if more were produced.

540
00:33:17,387 --> 00:33:21,529
Crown Life slot ended up not being used that much.

541
00:33:22,341 --> 00:33:24,022
Not because of the implementation,

542
00:33:24,022 --> 00:33:26,183
but because of the restriction imposed

543
00:33:26,183 --> 00:33:29,045
by the size of the sidewalk.

544
00:33:29,045 --> 00:33:31,366
We did not have enough space on sidewalk

545
00:33:31,366 --> 00:33:33,548
to add a lot of crowd life.

546
00:33:33,548 --> 00:33:36,229
Many station ended up in location not covered

547
00:33:36,229 --> 00:33:37,210
by the road network.

548
00:33:37,210 --> 00:33:41,212
Parks, back alleys, and this kind of stuff.

549
00:33:41,212 --> 00:33:42,233
As you can see in this design document, ooh.

550
00:33:53,233 --> 00:33:55,294
As you can see in this design document,

551
00:33:55,294 --> 00:34:02,000
street lamp and lampposts was part of the game early on.

552
00:34:02,000 --> 00:34:05,943
It was one of the last feature we implemented in the road

553
00:34:05,943 --> 00:34:06,703
network pipeline.

554
00:34:06,703 --> 00:34:10,646
Sidewall props are generated based on rules.

555
00:34:10,646 --> 00:34:14,509
Rules are defined once and used multiple times

556
00:34:14,509 --> 00:34:15,310
throughout the city.

557
00:34:15,310 --> 00:34:17,612
Rules are very simple parameters.

558
00:34:17,612 --> 00:34:22,035
If we start from an empty street,

559
00:34:22,035 --> 00:34:22,415
we could.

560
00:34:22,978 --> 00:34:28,619
use a rule to add bollards next to the street.

561
00:34:28,619 --> 00:34:34,121
Every props will be placed directly on the sidewalk.

562
00:34:34,121 --> 00:34:36,221
We also could alternate between two props.

563
00:34:36,221 --> 00:34:39,822
In this case, I added some lampposts.

564
00:34:39,822 --> 00:34:42,943
The ratio doesn't need to be one-to-one.

565
00:34:42,943 --> 00:34:48,865
We could have two bollards between each lamppost.

566
00:34:49,517 --> 00:34:55,382
But as you can see here, or rather as your artistic director is going to tell you, finishing

567
00:34:55,382 --> 00:34:57,123
a street with a ball art is not very pretty.

568
00:34:57,123 --> 00:35:05,669
So we quickly realized that enforcing strictly the space between props is not very important.

569
00:35:05,669 --> 00:35:10,993
It's the fact that starting and finishing with one specific prop is more important.

570
00:35:10,993 --> 00:35:14,556
So we ended up having kind of an auto-scaling rule.

571
00:35:15,416 --> 00:35:20,698
try to have a lamp post at the start and the beginning.

572
00:35:20,698 --> 00:35:23,860
The lamp post is defined by the rule.

573
00:35:23,860 --> 00:35:26,141
The rule could also be placed next to the building

574
00:35:26,141 --> 00:35:28,363
or in the center of the street.

575
00:35:28,363 --> 00:35:31,024
And of course, you can adjust density

576
00:35:31,024 --> 00:35:33,786
and the end point of each side.

577
00:35:33,786 --> 00:35:36,567
The post mortem highlighted that

578
00:35:36,567 --> 00:35:41,130
the bigger challenge we faced was the whole description.

579
00:35:42,289 --> 00:35:48,554
A lot of level designers needed to use the rule once to look at the result to really

580
00:35:48,554 --> 00:35:49,955
understand what it did.

581
00:35:49,955 --> 00:35:56,541
This was noticeable in rules placing props on both sides of the street in an alternating

582
00:35:56,541 --> 00:35:57,162
pattern.

583
00:35:57,162 --> 00:36:03,227
We also did not have a proper solution for items placed only once, like mailboxes.

584
00:36:03,227 --> 00:36:08,372
We ended up putting a big value in the distance between fields of the rules.

585
00:36:12,053 --> 00:36:16,914
We also made the mistake to not strongly enforce the rules

586
00:36:16,914 --> 00:36:19,674
to have only destructible objects in it.

587
00:36:19,674 --> 00:36:21,655
And we ended up having indestructible objects

588
00:36:21,655 --> 00:36:23,215
on sidewalks.

589
00:36:23,215 --> 00:36:24,135
It was fixed later.

590
00:36:24,135 --> 00:36:28,496
But at the end, it was a big success

591
00:36:28,496 --> 00:36:32,597
because we ended up placing a little bit less than 8,000

592
00:36:32,597 --> 00:36:35,538
props throughout London with this solution.

593
00:36:39,023 --> 00:36:41,985
The user interface is the last section of the talk.

594
00:36:41,985 --> 00:36:44,306
It's a journey through the evolution of the user

595
00:36:44,306 --> 00:36:46,747
interface during the project.

596
00:36:46,747 --> 00:36:53,330
The user interface was designed in two parts.

597
00:36:53,330 --> 00:36:55,971
First was the 3D representation.

598
00:36:55,971 --> 00:36:58,312
We decided to use a lot of debug display

599
00:36:58,312 --> 00:37:02,794
to represent the editable, all the editable information,

600
00:37:02,794 --> 00:37:05,735
starting by the streets.

601
00:37:05,735 --> 00:37:06,375
Here is a picture.

602
00:37:08,463 --> 00:37:11,005
In this picture we can easily recognize a street.

603
00:37:11,005 --> 00:37:14,647
A street is a group of edges that share the same color.

604
00:37:14,647 --> 00:37:21,671
A street shares the same configuration like pavement style and width.

605
00:37:21,671 --> 00:37:28,535
Each street can be named and level designers choose to use the real name of the street

606
00:37:28,535 --> 00:37:29,516
in London.

607
00:37:29,516 --> 00:37:35,619
If we zoom a little bit further, just after creating a new street.

608
00:37:36,503 --> 00:37:39,003
There are no buildings placed on the frontage,

609
00:37:39,003 --> 00:37:42,464
but the representation is already present.

610
00:37:42,464 --> 00:37:47,946
If you select the frontage, it's highlighted in yellow,

611
00:37:47,946 --> 00:37:50,426
and then an orange and yellow sphere appear.

612
00:37:50,426 --> 00:37:54,487
These spheres are used to offset the building construction

613
00:37:54,487 --> 00:37:55,587
along the frontage.

614
00:37:55,587 --> 00:38:00,289
Using this offset, we could expand or restrict

615
00:38:00,289 --> 00:38:02,249
building placement alongside the frontage.

616
00:38:02,782 --> 00:38:07,863
It was very useful in case we didn't have any corner building or we wanted to fill empty

617
00:38:07,863 --> 00:38:09,784
space with straight building.

618
00:38:09,784 --> 00:38:14,125
We choose two color instead of left and right offset because it was less confusing.

619
00:38:14,125 --> 00:38:23,287
When building are generated, the frontage is split into lots.

620
00:38:23,287 --> 00:38:29,428
Each lot holds only one building with an inter-alternation between green and dark green.

621
00:38:29,943 --> 00:38:35,828
The only light green lot represents the adjustable building I mentioned previously.

622
00:38:35,828 --> 00:38:38,571
Please look at the first lot.

623
00:38:38,571 --> 00:38:44,276
When the user selects a lot, he was able to do very simple operations like splitting or

624
00:38:44,276 --> 00:38:45,157
merging some lots.

625
00:38:45,157 --> 00:38:49,621
In this case, I'm going to split this lot into three smaller lots.

626
00:38:49,621 --> 00:38:53,545
So just an action pressing one key on the keyboard.

627
00:38:55,670 --> 00:38:58,813
And of course, you can convert into back alleys,

628
00:38:58,813 --> 00:38:59,954
convert into open building.

629
00:38:59,954 --> 00:39:04,718
You can do every operation just by selecting one lot.

630
00:39:04,718 --> 00:39:10,283
And once more, the section is highlighted in yellow.

631
00:39:10,283 --> 00:39:17,210
The props or the props rules are displayed on front page, too.

632
00:39:17,210 --> 00:39:19,332
They have their own representation.

633
00:39:20,148 --> 00:39:23,009
Each slot has a small representation,

634
00:39:23,009 --> 00:39:25,050
and you can select it to remove it in case it's

635
00:39:25,050 --> 00:39:27,631
in front of a back alley entry, for example.

636
00:39:27,631 --> 00:39:28,931
Since the whole goal of this project

637
00:39:28,931 --> 00:39:38,895
was to have traffic roaming throughout the beautiful city,

638
00:39:38,895 --> 00:39:43,817
we had to find a way to represent and edit its flow.

639
00:39:43,817 --> 00:39:46,779
We choose to use common representation

640
00:39:46,779 --> 00:39:47,879
of crosswalk and arrow.

641
00:39:49,065 --> 00:39:52,727
even if the historian was pretty, pretty scared by that,

642
00:39:52,727 --> 00:39:58,170
because it was not used during the Victorian era.

643
00:39:58,170 --> 00:40:00,471
But it was very easy to grasp for a level designer.

644
00:40:00,471 --> 00:40:04,734
The crosswalk will be moved along the edge

645
00:40:04,734 --> 00:40:08,936
from this original position.

646
00:40:08,936 --> 00:40:12,077
So you could move the location where the.

647
00:40:13,184 --> 00:40:15,506
people are going to cross the street.

648
00:40:15,506 --> 00:40:20,950
And to avoid any traffic jam, we could configure every lane

649
00:40:20,950 --> 00:40:22,891
in only one or multiple direction.

650
00:40:22,891 --> 00:40:28,936
For changing building parts, we started

651
00:40:28,936 --> 00:40:30,997
from what was developed on AC Unity.

652
00:40:30,997 --> 00:40:34,320
We used the cycling world to describe

653
00:40:34,320 --> 00:40:37,522
the action of changing buildings from one part to another.

654
00:40:38,497 --> 00:40:41,599
The process on Unity was very simple.

655
00:40:41,599 --> 00:40:45,683
You use your mouse to click to the part you wanted to change,

656
00:40:45,683 --> 00:40:47,484
the roof or the body, for example.

657
00:40:47,484 --> 00:40:49,906
And you press up and down on your keyboard

658
00:40:49,906 --> 00:40:53,970
to change between the variations.

659
00:40:53,970 --> 00:40:57,533
It's called cycling for this reason.

660
00:40:57,533 --> 00:41:00,115
To improve on that, we decided to focus on LUT

661
00:41:00,115 --> 00:41:03,118
instead of building parts by allowing all the parts

662
00:41:03,118 --> 00:41:05,740
to be changed by only selecting one LUT.

663
00:41:08,270 --> 00:41:12,452
When a lot was selected, we had a cycler appearing

664
00:41:12,452 --> 00:41:14,533
on the top left of the screen.

665
00:41:14,533 --> 00:41:17,574
And for the type of part you want to cycle,

666
00:41:17,574 --> 00:41:22,795
and a cycler for the value on the right top side

667
00:41:22,795 --> 00:41:25,976
of the screen to cycle between all the values.

668
00:41:25,976 --> 00:41:29,098
So this time, the level designer could know

669
00:41:29,098 --> 00:41:31,538
what part is coming next.

670
00:41:31,538 --> 00:41:34,119
And each cycling wheel clearly contains

671
00:41:34,119 --> 00:41:35,100
a key you have to press.

672
00:41:36,019 --> 00:41:41,002
and you no longer need to use your mouse to change between parts.

673
00:41:41,002 --> 00:41:45,765
You probably remember this dependency graph from a couple of slides ago.

674
00:41:45,765 --> 00:41:50,428
It indicates dependency between the three major parts.

675
00:41:50,428 --> 00:41:55,331
If you change one, the other depending parts are going to change.

676
00:41:55,331 --> 00:42:01,975
If we look at this simple case, it's a Victorian house, three floors, grammar hall, roof.

677
00:42:02,749 --> 00:42:05,591
And if you want to keep the same parameters,

678
00:42:05,591 --> 00:42:07,292
but try to convert it into a Georgian one,

679
00:42:07,292 --> 00:42:09,494
you would have to cycle the front.

680
00:42:09,494 --> 00:42:14,637
As soon as that happened, all the other parts

681
00:42:14,637 --> 00:42:15,838
would also change.

682
00:42:15,838 --> 00:42:20,521
This would result in frustrated level designer

683
00:42:20,521 --> 00:42:22,583
and a pretty destructive process.

684
00:42:23,343 --> 00:42:33,005
In order to address this problem, we introduced a new cycling mode not directly related to a specific part, but more to a concept, the concept of style.

685
00:42:33,005 --> 00:42:39,347
It allowed the user to change the style without having to cycle throughout every part.

686
00:42:39,347 --> 00:42:45,989
So it just changes the side once, and the front, the back, and the roof are going to change.

687
00:42:45,989 --> 00:42:49,390
We also applied the same concept to the floor height.

688
00:42:51,835 --> 00:42:55,476
But at this point, we realized that the cycling was not

689
00:42:55,476 --> 00:42:57,677
the proper solution we needed.

690
00:42:57,677 --> 00:43:00,597
We needed to be able to go from one point in the list

691
00:43:00,597 --> 00:43:04,838
to another without having to pass throughout every building

692
00:43:04,838 --> 00:43:09,819
in every item in the way, and needlessly altering stuff

693
00:43:09,819 --> 00:43:10,539
in the way.

694
00:43:10,539 --> 00:43:15,580
The caddy is a solution we finally settled on.

695
00:43:15,580 --> 00:43:18,721
It was a floating panel that appeared

696
00:43:18,721 --> 00:43:19,481
on your right.

697
00:43:19,831 --> 00:43:25,433
whatever you select in the 3D representation.

698
00:43:25,433 --> 00:43:32,015
The CADDIC always contains a custom made UI

699
00:43:32,015 --> 00:43:32,835
for the situation.

700
00:43:32,835 --> 00:43:33,496
Here are some examples.

701
00:43:33,496 --> 00:43:37,477
The first is a street configuration.

702
00:43:37,477 --> 00:43:42,619
Because we only had a limited number of street widths,

703
00:43:42,619 --> 00:43:45,660
we had to provide a simple way to edit.

704
00:43:45,660 --> 00:43:47,360
The total width is calculating depends.

705
00:43:48,475 --> 00:43:51,437
depending on the parameter provided by the level designer.

706
00:43:51,437 --> 00:43:53,739
The second is the crowd life slot.

707
00:43:53,739 --> 00:43:57,321
The third is the caddy for lots in basement configuration.

708
00:43:57,321 --> 00:44:03,105
The top part is for general configuration, the type,

709
00:44:03,105 --> 00:44:06,127
the style, the number of floors you are going to have.

710
00:44:06,127 --> 00:44:10,410
The bottom is for basement configuration specifically.

711
00:44:10,410 --> 00:44:14,333
The fourth is for building props.

712
00:44:14,333 --> 00:44:16,234
Here, we use the thumbnail view.

713
00:44:16,234 --> 00:44:17,555
It encourages variety.

714
00:44:18,093 --> 00:44:21,756
by presenting all the props in a simple and understandable way.

715
00:44:21,756 --> 00:44:25,799
And the last, similar to the third,

716
00:44:25,799 --> 00:44:27,520
but this time in front configuration.

717
00:44:27,520 --> 00:44:28,921
The top is the same.

718
00:44:28,921 --> 00:44:32,324
You have style, so on and so forth.

719
00:44:32,324 --> 00:44:36,227
But the bottom displays all the thumbnail for the building

720
00:44:36,227 --> 00:44:41,091
part to allow the user to move quickly from one to another.

721
00:44:41,091 --> 00:44:43,233
And once more, he had the interesting side effect

722
00:44:43,233 --> 00:44:45,734
to encourage diversity because everything

723
00:44:45,734 --> 00:44:46,755
was clearly displayed.

724
00:44:49,613 --> 00:44:57,558
The first thing we learned is that in order to have a 3D view, we absolutely need performance

725
00:44:57,558 --> 00:44:59,299
3D debug display.

726
00:44:59,299 --> 00:45:06,624
We ended up having to do a lot of optimization in 3D debug display, rendering, and picking.

727
00:45:06,624 --> 00:45:13,888
I cannot emphasize enough how important it is being able to render in 3D, open the new

728
00:45:13,888 --> 00:45:17,490
field in UX possibilities.

729
00:45:18,166 --> 00:45:21,107
Probably the majority of the game editor, I would say,

730
00:45:21,107 --> 00:45:23,248
is very property-grade based.

731
00:45:23,248 --> 00:45:29,170
But the CADI with its custom UI tailored to every specific job

732
00:45:29,170 --> 00:45:32,311
was the most praised feature of the postmortem.

733
00:45:32,311 --> 00:45:34,872
Users were asking of this kind of edition

734
00:45:34,872 --> 00:45:36,293
in other parts of Envil.

735
00:45:36,293 --> 00:45:41,095
So takeaways.

736
00:45:41,095 --> 00:45:44,856
Road generation is not enough.

737
00:45:45,938 --> 00:45:48,519
If you create a similar system, consider

738
00:45:48,519 --> 00:45:50,820
generating the entire ground, not only the street.

739
00:45:50,820 --> 00:45:54,302
It resulted in a lot of time spent

740
00:45:54,302 --> 00:45:58,144
in back and forth between artists who build the ground

741
00:45:58,144 --> 00:46:01,446
and level designers who move the street around.

742
00:46:01,446 --> 00:46:07,769
So consider building, generating everything.

743
00:46:07,769 --> 00:46:10,050
One of the biggest success is the possibility

744
00:46:10,050 --> 00:46:11,991
to drive in the game very early on.

745
00:46:13,778 --> 00:46:16,479
Even if the road was gray, flat, we

746
00:46:16,479 --> 00:46:19,100
were able to test and improve the game.

747
00:46:19,100 --> 00:46:22,221
London was the first city in all the brain front history

748
00:46:22,221 --> 00:46:24,502
to be played as early in production.

749
00:46:24,502 --> 00:46:27,623
We think that it's a major ingredient

750
00:46:27,623 --> 00:46:30,504
of the success of our first Assassin's Creed at Quebec.

751
00:46:30,504 --> 00:46:35,985
Modular buildings are a suitable solution in our scenario.

752
00:46:35,985 --> 00:46:40,007
However, I personally think we didn't push the boundary

753
00:46:40,007 --> 00:46:40,847
enough.

754
00:46:40,847 --> 00:46:43,348
We should have assembled all the buildings by code.

755
00:46:44,148 --> 00:46:44,969
not by hand.

756
00:46:44,969 --> 00:46:49,412
And we would have, it was a major time

757
00:46:49,412 --> 00:46:50,793
consuming for the project.

758
00:46:50,793 --> 00:46:55,097
And last, custom UI as a way to go.

759
00:46:55,097 --> 00:46:58,119
The post-mortem revealed that custom UI

760
00:46:58,119 --> 00:47:02,143
that suits needs of each class of users, level designer, level

761
00:47:02,143 --> 00:47:06,626
artist, audio designer, and all the classes you could have.

762
00:47:06,626 --> 00:47:09,549
Built with a combination of clickable 3D elements

763
00:47:09,549 --> 00:47:13,672
and custom design panel tailored for each job.

764
00:47:14,765 --> 00:47:17,547
is the way to go.

765
00:47:17,547 --> 00:47:20,289
Every game editor has a property grid

766
00:47:20,289 --> 00:47:22,431
to edit complex object,

767
00:47:22,431 --> 00:47:24,592
but please not underestimate the gain

768
00:47:24,592 --> 00:47:26,534
of carefully designed user interface.

769
00:47:26,534 --> 00:47:31,317
Thank you, and if you have any questions,

770
00:47:31,317 --> 00:47:37,062
feel free to use the mics, send me a mail,

771
00:47:37,062 --> 00:47:40,925
and I will be tomorrow at the Ubisoft lounge

772
00:47:40,925 --> 00:47:41,105
from 11.30 to 12.30.

773
00:48:00,155 --> 00:48:01,036
Yes?

774
00:48:01,036 --> 00:48:01,676
Hello.

775
00:48:01,676 --> 00:48:04,118
I have a question about optimizations

776
00:48:04,118 --> 00:48:06,980
of these generated buildings and cities.

777
00:48:06,980 --> 00:48:09,562
How did you deal with the level of details,

778
00:48:09,562 --> 00:48:15,326
like lots and these kind of things?

779
00:48:15,326 --> 00:48:20,289
The question is about how we optimize the modules.

780
00:48:20,289 --> 00:48:24,232
We use the SampleGon for the majority of the job.

781
00:48:24,232 --> 00:48:26,113
The LOD1 and LOD2, we use SampleGon.

782
00:48:27,999 --> 00:48:30,268
Hi, thank you for the talk, it was great.

783
00:48:30,268 --> 00:48:34,102
I was wondering when you were talking about the placement of the lots.

784
00:48:34,620 --> 00:48:38,522
What about the depth and the negative space that it creates?

785
00:48:38,522 --> 00:48:40,583
Because of the depth of the buildings,

786
00:48:40,583 --> 00:48:42,504
how do you manage that actual part

787
00:48:42,504 --> 00:48:44,665
of the placement of buildings?

788
00:48:44,665 --> 00:48:45,846
Behind the building?

789
00:48:45,846 --> 00:48:49,147
Yeah, behind the negative space or the empty space.

790
00:48:49,147 --> 00:48:51,609
That's a part that was done by the solar kitchen.

791
00:48:51,609 --> 00:48:54,750
It's about what we do behind the building.

792
00:48:54,750 --> 00:48:58,492
So that's the part we've generated by hand.

793
00:48:58,492 --> 00:49:00,553
That's part of the problem.

794
00:49:00,553 --> 00:49:02,234
All right.

795
00:49:02,234 --> 00:49:03,034
Thank you.

796
00:49:10,214 --> 00:49:10,622
Thank you.

