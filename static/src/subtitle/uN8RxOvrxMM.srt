1
00:00:05,786 --> 00:00:06,627
My name is Dominic Vega.

2
00:00:07,567 --> 00:00:09,489
I'm a senior sound designer at Avalanche Studios.

3
00:00:09,809 --> 00:00:13,512
And I was on the sound team in our New York City studio for

4
00:00:13,552 --> 00:00:14,653
Just Cause 3 and Just Cause 4.

5
00:00:15,694 --> 00:00:18,136
Among other areas of content, I was responsible for the

6
00:00:18,176 --> 00:00:20,158
creative and technical mix of Just Cause 4.

7
00:00:21,399 --> 00:00:24,181
At Avalanche Studios, games are made in our proprietary

8
00:00:24,241 --> 00:00:24,781
Apex engine.

9
00:00:25,162 --> 00:00:27,103
And the audio middleware we use is FMOD Studio.

10
00:00:27,684 --> 00:00:29,385
While we work in FMOD, a majority of what we're going

11
00:00:29,405 --> 00:00:32,207
to talk about today is openly available and applicable to

12
00:00:32,267 --> 00:00:33,368
other audio tools on the market.

13
00:00:34,730 --> 00:00:39,391
Now, in designing Just Cause 4, some new ambitious features were added that changed both how

14
00:00:39,411 --> 00:00:42,552
we needed to functionally approach the mix and how we were going to join everything in

15
00:00:42,572 --> 00:00:43,753
an aesthetically engaging way.

16
00:00:44,693 --> 00:00:48,454
Before we go a lot further, I want to contextualize a bit of what we face as sound designers on

17
00:00:48,474 --> 00:00:49,194
a Just Cause game.

18
00:00:49,815 --> 00:00:53,776
For those of you more unfamiliar with the tone of the franchise and where Just Cause

19
00:00:53,816 --> 00:00:56,877
4 was headed, here's a little peek into the world of Just Cause and what we were aiming

20
00:00:56,897 --> 00:00:57,237
to create.

21
00:01:17,637 --> 00:01:18,518
Welcome back!

22
00:01:47,966 --> 00:01:50,387
So while the gameplay and the tone of our franchise

23
00:01:51,288 --> 00:01:52,748
is really bombastic and over the top,

24
00:01:52,828 --> 00:01:54,569
we do actually put a premium on nuance

25
00:01:54,609 --> 00:01:55,650
in our approach to sound design.

26
00:01:56,370 --> 00:01:58,511
Subtle details and dynamics are really important to us,

27
00:01:58,992 --> 00:02:00,352
and something that we feel makes worlds

28
00:02:00,412 --> 00:02:01,213
really great to be in.

29
00:02:02,073 --> 00:02:03,854
Now to bring all these elements of an open world together,

30
00:02:03,974 --> 00:02:05,915
we place a strong emphasis on the game's mix.

31
00:02:06,695 --> 00:02:08,797
For Just Cause 4, we wanted the mix planning

32
00:02:08,837 --> 00:02:10,657
and prototyping to start at the design phase

33
00:02:10,758 --> 00:02:12,278
and grow and improve with the rest of the game.

34
00:02:13,125 --> 00:02:15,905
What we didn't want was lots of huge last-minute changes going in,

35
00:02:16,246 --> 00:02:18,066
as is unfortunately common in a game's production.

36
00:02:18,986 --> 00:02:22,767
These sort of last-minute mixes risk masking fantastic sound design and music moments

37
00:02:23,468 --> 00:02:25,228
to better suit bigness or finality.

38
00:02:26,388 --> 00:02:30,150
To do all this, we approached the mix on Just Cause 4 as its own separate system,

39
00:02:30,730 --> 00:02:32,750
instead of as an afterthought in the finishing process.

40
00:02:33,471 --> 00:02:36,851
We started establishing pillars which would become guidelines in the framework of our mix.

41
00:02:39,537 --> 00:02:41,318
Now out of the gate, we prioritized balance.

42
00:02:41,978 --> 00:02:45,139
This is an early first step, setting this overall static mix of the game,

43
00:02:45,499 --> 00:02:48,580
and determining aesthetically where we want specific packages of audio to be set at.

44
00:02:49,181 --> 00:02:51,681
We have thousands of assets we want to deliver in an intuitive way,

45
00:02:52,082 --> 00:02:55,023
and we want to control and maintain balance of the overall sonic weight of the mix.

46
00:02:56,243 --> 00:02:58,684
We want to emphasize clarity, and adding a layer of focus

47
00:02:58,704 --> 00:03:00,905
to what the player may be most interested in or interacting with.

48
00:03:01,893 --> 00:03:02,994
We never wanted to lose the punch,

49
00:03:03,354 --> 00:03:04,775
keeping the sound of the music hitting hard

50
00:03:04,795 --> 00:03:06,676
while retaining dynamics and economy of scale.

51
00:03:07,436 --> 00:03:08,257
And finally, style.

52
00:03:08,757 --> 00:03:10,698
We wanted to infuse a little bit of the Avalanche DNA

53
00:03:10,718 --> 00:03:12,079
into the overall audio experience,

54
00:03:12,479 --> 00:03:13,620
delivering something unique

55
00:03:13,780 --> 00:03:15,281
and that highlights the fun of the franchise.

56
00:03:15,821 --> 00:03:17,262
We also wanted the mix to have brains

57
00:03:17,382 --> 00:03:18,803
and modulate more accurately based

58
00:03:18,843 --> 00:03:20,343
not only in the sound being made in the game,

59
00:03:20,603 --> 00:03:21,764
but by the game's design itself.

60
00:03:23,325 --> 00:03:25,086
So now that we have our pillars defined,

61
00:03:25,546 --> 00:03:27,087
let's look at some of the problems we encounter

62
00:03:27,127 --> 00:03:28,488
when trying to mix a Just Cause game.

63
00:03:29,717 --> 00:03:32,079
Firstly, we're never able to gate the player's experience

64
00:03:32,099 --> 00:03:33,500
to deliver more nuanced content.

65
00:03:34,020 --> 00:03:37,103
We have to be completely prepared to make the most intimate dialogue sequences

66
00:03:37,183 --> 00:03:39,224
be audible in the most chaotic scenarios we could find.

67
00:03:40,025 --> 00:03:40,846
Now, in Just Cause 3,

68
00:03:41,606 --> 00:03:43,988
which was using more of a dynamics-driven mix structure,

69
00:03:44,669 --> 00:03:47,211
sound designers working in assets in low-priority buses

70
00:03:47,331 --> 00:03:48,912
often fought against the mix to be audible.

71
00:03:50,173 --> 00:03:52,575
This led to really hot asset designs and audible pumping

72
00:03:52,615 --> 00:03:54,236
as the dynamics have essentially been removed.

73
00:03:54,817 --> 00:03:56,338
Also, relying on compressors for a mix,

74
00:03:56,845 --> 00:03:59,086
is not only expensive in terms of CPU and processing,

75
00:03:59,326 --> 00:04:00,226
they're often one look.

76
00:04:00,766 --> 00:04:03,907
We often found ourselves either over or under compressing,

77
00:04:04,688 --> 00:04:06,588
but worse, the mix is rather unintelligent

78
00:04:06,608 --> 00:04:08,949
in making space for assets as compression can only yield

79
00:04:09,369 --> 00:04:10,990
some very small specific results.

80
00:04:11,890 --> 00:04:14,151
Now, a new project with a fresh start,

81
00:04:14,451 --> 00:04:16,472
you guys would have the benefit of starting your mix

82
00:04:16,512 --> 00:04:17,972
just needing to imagine what your last day

83
00:04:17,992 --> 00:04:18,893
of production looks like.

84
00:04:19,313 --> 00:04:20,593
What's crucial in designing a mix

85
00:04:20,933 --> 00:04:22,434
is deciding what framework you want to build

86
00:04:22,454 --> 00:04:24,795
and ask necessary questions of what your mix can do

87
00:04:24,835 --> 00:04:25,675
to better serve your game.

88
00:04:26,744 --> 00:04:28,866
So for us, to better serve the design of Just Cause 4,

89
00:04:29,386 --> 00:04:31,467
we knew we were gonna have to rethink the mix process.

90
00:04:32,088 --> 00:04:34,450
We had only just finished the mix on Just Cause 3

91
00:04:34,490 --> 00:04:36,351
a few months earlier when we moved into planning

92
00:04:36,371 --> 00:04:37,131
for Just Cause 4.

93
00:04:38,072 --> 00:04:39,053
So instead of putting the mix off

94
00:04:39,533 --> 00:04:41,014
and relying on what we had for a few years,

95
00:04:41,354 --> 00:04:42,735
we decided to attack the mix head on.

96
00:04:43,356 --> 00:04:44,657
Let's take a little bit closer look

97
00:04:44,677 --> 00:04:45,898
at our first pillar of the mix.

98
00:04:47,534 --> 00:04:49,675
Now, early in the project, we had this really long runway

99
00:04:49,695 --> 00:04:50,656
without a lot to test out.

100
00:04:51,316 --> 00:04:52,737
We took the opportunity to suss out

101
00:04:52,757 --> 00:04:54,538
where we wanted basic levels of mixer groups

102
00:04:54,558 --> 00:04:55,619
to sit in the final mix,

103
00:04:55,879 --> 00:04:57,960
and investigate how to remove layers of processing

104
00:04:58,001 --> 00:04:59,181
between a sound and the listener.

105
00:04:59,942 --> 00:05:01,062
With so many assets in the game,

106
00:05:01,403 --> 00:05:03,084
we needed to parse out and silo content

107
00:05:03,104 --> 00:05:04,504
that was designed for player interaction

108
00:05:04,825 --> 00:05:06,186
from what was more diegetic in nature.

109
00:05:06,786 --> 00:05:08,427
We could set up pseudo mix priority buckets,

110
00:05:08,647 --> 00:05:10,028
then leave room for distinct sounds

111
00:05:10,348 --> 00:05:12,009
the player maybe more locked into experiencing

112
00:05:12,049 --> 00:05:13,310
like driving a car and so on.

113
00:05:14,230 --> 00:05:14,851
In doing so though,

114
00:05:15,382 --> 00:05:17,603
we expose some issues with traditional audio signal flow

115
00:05:17,623 --> 00:05:19,204
that arises from our gameplay model.

116
00:05:20,865 --> 00:05:23,306
Here is a simple vehicle engine event from Just Cause 3.

117
00:05:24,006 --> 00:05:27,288
Now, due to the fact that you can hijack a vehicle mid-drive in Just Cause,

118
00:05:27,408 --> 00:05:30,730
unlike other games that might allow some more creative content swapping,

119
00:05:31,190 --> 00:05:33,311
we allow the player to hijack a car while it's running,

120
00:05:33,351 --> 00:05:34,912
throw the driver out, and resume driving.

121
00:05:35,692 --> 00:05:39,094
In 3D space, we may want ambient cars and traffic to be in a lower bus,

122
00:05:39,494 --> 00:05:41,015
where guns, explosions, and destruction

123
00:05:41,055 --> 00:05:42,716
will push down on them in the mix with sidechains.

124
00:05:43,630 --> 00:05:46,752
This is completely logical until you enter that vehicle.

125
00:05:47,532 --> 00:05:50,835
In Just Cause 3, we solve this by just boosting the level

126
00:05:50,875 --> 00:05:52,316
of the engine based on a parameter

127
00:05:52,556 --> 00:05:53,536
called isPlayerDriving.

128
00:05:54,577 --> 00:05:56,358
This, however, causes low-end buildup.

129
00:05:56,538 --> 00:05:58,180
It still pumps against louder sounds.

130
00:05:58,500 --> 00:06:01,422
And the max distance is stuck being as long as the furthest

131
00:06:01,462 --> 00:06:05,224
camera distance from the player in order to make the

132
00:06:05,404 --> 00:06:06,525
sound audible in 3D space.

133
00:06:07,923 --> 00:06:10,485
The solution, in order to silo content in Just Cause 4,

134
00:06:10,965 --> 00:06:12,406
was descended around the signal flow

135
00:06:12,466 --> 00:06:13,686
based on those same parameters.

136
00:06:14,407 --> 00:06:16,228
Moving an FMOD return bus up in priority

137
00:06:16,268 --> 00:06:18,449
so audio is sent and bypasses output ducking

138
00:06:18,489 --> 00:06:21,170
to a higher priority group allows greater control,

139
00:06:21,511 --> 00:06:23,372
less DSPs, and easier intelligibility.

140
00:06:24,152 --> 00:06:26,693
Since the player can only control one vehicle at a time,

141
00:06:27,113 --> 00:06:28,654
we can easily set up mixing DSPs

142
00:06:28,714 --> 00:06:29,955
reserved for player vehicles

143
00:06:30,235 --> 00:06:31,596
and resume and bail out of those states

144
00:06:31,636 --> 00:06:32,776
as quickly as the player chooses.

145
00:06:34,232 --> 00:06:35,652
Now let's expand the idea a little bit further.

146
00:06:36,352 --> 00:06:38,313
By doing the same thing with the component parts of vehicles,

147
00:06:38,373 --> 00:06:41,254
like tire interactions, chassis rattles, transmission whines,

148
00:06:41,614 --> 00:06:42,854
physics interactions, and exhaust,

149
00:06:43,255 --> 00:06:45,335
you now have every level to all assets involved

150
00:06:45,355 --> 00:06:46,736
with the vehicle in their own returns.

151
00:06:47,956 --> 00:06:49,877
We can then put a snapshot on every vehicle's event,

152
00:06:50,237 --> 00:06:51,357
just checking for the condition

153
00:06:51,557 --> 00:06:53,018
isPlayerControlled to become true,

154
00:06:53,638 --> 00:06:55,979
which then triggers a microstate for that individual vehicle

155
00:06:55,999 --> 00:06:56,839
should the player enter it.

156
00:06:58,298 --> 00:07:02,360
This snaps the mix settings for all available layers and groups we want to mix uniquely

157
00:07:02,380 --> 00:07:03,020
for each vehicle.

158
00:07:03,521 --> 00:07:07,262
This also allowed us to take most areas of vehicles excluding engines and use more global

159
00:07:07,282 --> 00:07:09,323
content, saving on performance and memory.

160
00:07:10,083 --> 00:07:13,664
Let's take a look at some examples of increased sonic variety with more general use complementary

161
00:07:13,724 --> 00:07:15,605
sounds just using modulated mixes.

162
00:07:31,373 --> 00:07:34,115
Now next here, every layer except for one is exactly the same as before.

163
00:07:34,695 --> 00:07:38,477
What's different is pitching, spatialization, and mixing of the component layers of the vehicles.

164
00:07:38,918 --> 00:07:42,240
Quite commonly, we were able to get away with making extremely small changes

165
00:07:42,600 --> 00:07:45,581
in a singular layer of content and achieve really drastically varied sounds.

166
00:08:02,025 --> 00:08:05,348
Routing this way with precise control over the output of individual layers and using

167
00:08:05,388 --> 00:08:09,111
microstate snapshots, which we're going to dive into a little bit later, for each specific

168
00:08:09,151 --> 00:08:13,295
vehicle, reduces the authoring time of a single vehicle mix from several hours each to only

169
00:08:13,335 --> 00:08:14,396
a few minutes if need be.

170
00:08:15,256 --> 00:08:19,740
The content being siloed, available, and largely unprocessed gives the mixer the necessary

171
00:08:19,801 --> 00:08:24,044
freedom to focus solely on making this singular instance sound great, without needing to worry

172
00:08:24,084 --> 00:08:26,587
about the other 100 plus vehicles that need mixing down the line.

173
00:08:28,232 --> 00:08:31,834
Once content was more siloed and accessible should the player interact with it, we started

174
00:08:31,854 --> 00:08:33,415
cleaning up layers of the mix through imaging.

175
00:08:34,136 --> 00:08:38,098
Where we situated sounds and surround space has as much impact as amplitude does on output.

176
00:08:38,719 --> 00:08:42,141
Since we're mixing in 7.1, clearing up that space has trickle-down effects through the

177
00:08:42,161 --> 00:08:42,881
fold-down mix.

178
00:08:43,542 --> 00:08:47,624
As states become more balanced and controlled, cleaning up substates and behaviors to disallow

179
00:08:47,704 --> 00:08:50,666
output on speakers let previously masked audio come through the mix.

180
00:08:52,252 --> 00:08:54,077
To show some examples of outputs to major groups,

181
00:08:54,519 --> 00:08:56,845
you can see how more specific output paths enable space

182
00:08:56,905 --> 00:08:58,169
for a more detailed soundscape.

183
00:08:58,690 --> 00:09:00,014
Let's take a closer look at some examples.

184
00:09:01,708 --> 00:09:03,509
Now, while a really low priority sound,

185
00:09:03,849 --> 00:09:06,230
world audio and ambiences play a big role in games like ours

186
00:09:06,810 --> 00:09:08,190
and set a lot of the audio tone.

187
00:09:08,470 --> 00:09:09,991
They're a persistent character in our games,

188
00:09:10,251 --> 00:09:11,511
but in order to make room in the mix,

189
00:09:11,571 --> 00:09:12,812
we keep them extremely wide.

190
00:09:13,592 --> 00:09:15,992
There are two layers, the core ambience and the details.

191
00:09:16,533 --> 00:09:18,793
Details are spawned at random points in the point clouds.

192
00:09:18,853 --> 00:09:20,634
The player has this effect of moving through them,

193
00:09:21,114 --> 00:09:22,534
and the core is a quad ambience

194
00:09:22,854 --> 00:09:24,075
rotating around the player's head,

195
00:09:24,415 --> 00:09:26,035
making the image feel more varied and alive.

196
00:10:04,534 --> 00:10:08,918
Land vehicles present a challenge for a lot of games, as they are a very noisy and full-frequency

197
00:10:08,978 --> 00:10:09,258
source.

198
00:10:09,739 --> 00:10:13,102
Their placement at the end of the mix chain is almost a full 7.1 image of being driven

199
00:10:13,122 --> 00:10:15,004
by the player, excluding the center channel.

200
00:10:15,504 --> 00:10:19,027
If broken out, though, they can have up to nine component player-specific sends that

201
00:10:19,087 --> 00:10:20,148
all use different outputs.

202
00:10:20,789 --> 00:10:24,392
Here's a deconstruction of how all the individual layers of a vehicle's sound are imaged, and

203
00:10:24,432 --> 00:10:27,395
how they sound all put together to increase clarity and get rid of audio clutter.

204
00:11:11,812 --> 00:11:15,414
And lastly, player weapons are 5.1 with discrete subwoofer content.

205
00:11:15,935 --> 00:11:18,597
They're big character sounds, so we want to reserve quite a bit of space for them.

206
00:11:19,297 --> 00:11:21,999
However, to retain clarity, keeping layer separation a priority

207
00:11:22,039 --> 00:11:24,681
kept the weapons from sounding muddy or just simply loud.

208
00:11:25,542 --> 00:11:27,703
We only allow the mech layer of guns into the center channel.

209
00:11:27,863 --> 00:11:30,445
The close and medium layers are front heavy stereo spread

210
00:11:30,925 --> 00:11:33,127
based on whether you're aiming down sights or firing from the hip.

211
00:11:33,527 --> 00:11:37,410
And tails are a stereo asset that expands and spreads to quads as the shot blooms out.

212
00:12:15,093 --> 00:12:17,454
So now with a more granularly compartmentalized mixer

213
00:12:17,674 --> 00:12:19,235
and channel separation in mix packages,

214
00:12:19,275 --> 00:12:21,496
we could tackle improving the perception of size

215
00:12:21,536 --> 00:12:23,257
and scale in the game and make the mix punch.

216
00:12:24,418 --> 00:12:26,459
Now, a really obvious statement I'm about to make

217
00:12:26,499 --> 00:12:28,440
to everybody in this room, you're probably well aware,

218
00:12:28,460 --> 00:12:30,741
is that low-end management is important in any mix.

219
00:12:31,161 --> 00:12:32,482
Now, especially for us in Just Cause 4,

220
00:12:32,602 --> 00:12:34,262
it's something we paid a lot of attention to.

221
00:12:35,243 --> 00:12:37,824
We have to accommodate barrages of explosions and gunfire

222
00:12:38,144 --> 00:12:41,166
and keep it from becoming muddy or too bottom-heavy.

223
00:12:41,674 --> 00:12:45,998
We also want to maintain a decent dynamic range in the mix that doesn't feel overly compressed.

224
00:12:47,479 --> 00:12:51,022
As with guns, we opted to use discrete LFE for surround mixes in Just Cause 4,

225
00:12:51,603 --> 00:12:53,985
and not force sound designers to concede on their setups.

226
00:12:54,726 --> 00:12:58,869
We designed discrete content for medium and large gunshots, and small, medium, and large explosions.

227
00:12:59,450 --> 00:13:04,134
And in the end, we still reserve the option to send any sum of an event's mix to the sub should we need to.

228
00:13:04,975 --> 00:13:08,958
Removing all subwoofer content makes mixing on a surround system more informative as it's

229
00:13:09,058 --> 00:13:12,381
easy to rely on the sub as a tool in your handling of your bass designs.

230
00:13:12,901 --> 00:13:16,203
But by removing it, and especially removing all sums to the subwoofer, you're forced to

231
00:13:16,243 --> 00:13:18,425
decide where it's desired and manually add it back in.

232
00:13:20,126 --> 00:13:24,049
But why did we opt for using discrete LFE content instead of just a simple frequency

233
00:13:24,089 --> 00:13:25,010
roll-off to the subwoofer?

234
00:13:26,221 --> 00:13:28,463
For us, we found it cleaned up the subwoofer immensely,

235
00:13:28,503 --> 00:13:30,024
but not allowing more in than we wanted.

236
00:13:30,465 --> 00:13:32,546
And we could design cheaply by making LFE effects

237
00:13:32,566 --> 00:13:34,168
for weapon types instead of per weapon.

238
00:13:34,928 --> 00:13:37,090
Most of all, though, sound designers were never forced

239
00:13:37,110 --> 00:13:38,451
to make concessions in their designs

240
00:13:38,511 --> 00:13:40,072
to accommodate all playback systems.

241
00:13:40,733 --> 00:13:43,235
In the past, we've had issues where a sound worked great

242
00:13:43,275 --> 00:13:44,816
over headphones or full-range speakers,

243
00:13:45,137 --> 00:13:46,978
but with a subwoofer, it became muddy

244
00:13:47,238 --> 00:13:48,259
or maybe not pronounced enough.

245
00:13:48,921 --> 00:13:51,304
You typically only have an LFE slider in most middlewares,

246
00:13:51,724 --> 00:13:52,865
in events and output buses,

247
00:13:53,005 --> 00:13:56,589
so you can only increase or decrease its overall volume send to the sub.

248
00:13:57,590 --> 00:14:00,053
Now, in this case, we sat with a consumer-level subwoofer

249
00:14:00,413 --> 00:14:02,195
and designed our sounds playing through that.

250
00:14:02,616 --> 00:14:05,699
Simple, low-pitched, sign-based sounds without a lot of upper harmonics

251
00:14:06,079 --> 00:14:07,921
worked really well through its low-powered output

252
00:14:07,961 --> 00:14:09,163
and sounded really crisp and tight.

253
00:14:10,119 --> 00:14:13,841
Now, a lot goes into maintaining the low end of a mix, which could be its own 30-minute

254
00:14:13,861 --> 00:14:17,602
talk, but first accounting for where low end could and wouldn't be handled on the highest

255
00:14:17,622 --> 00:14:22,404
end of systems paid dividends as sound designers had more reasonable expectations at the sound

256
00:14:22,424 --> 00:14:23,444
design phase of content.

257
00:14:23,904 --> 00:14:27,946
This just simply empowers more people in the audio team to positively contribute to scale

258
00:14:28,166 --> 00:14:30,747
and a punchy mix without over-complicating the process.

259
00:14:32,438 --> 00:14:33,739
Now our last pillar was style.

260
00:14:34,420 --> 00:14:36,341
Style was actually where the mix became most fun.

261
00:14:36,921 --> 00:14:38,322
With the previous priorities in place,

262
00:14:38,362 --> 00:14:40,703
we had a really solid foundation to now modulate the mix

263
00:14:40,743 --> 00:14:42,144
in really creative and unique ways.

264
00:14:42,825 --> 00:14:45,446
Find space for assets previously deemed too low of priority

265
00:14:45,746 --> 00:14:47,527
and contextualize the surrounding audio in ways

266
00:14:47,747 --> 00:14:48,968
that best fit our game's design.

267
00:14:49,448 --> 00:14:51,430
This would lead to us designing our adaptive listening mix.

268
00:14:53,279 --> 00:14:54,980
Now I said earlier that we wanted to make mixing simple.

269
00:14:55,781 --> 00:14:58,143
At this stage, the mix has largely been an exercise

270
00:14:58,183 --> 00:14:59,624
in deliberate voicing and subtraction.

271
00:15:00,305 --> 00:15:02,606
These are important stages, but with games,

272
00:15:02,647 --> 00:15:04,508
we're also accommodating for focus and feel.

273
00:15:05,429 --> 00:15:06,610
These are harder to quantify,

274
00:15:06,630 --> 00:15:07,690
and as we continued with the mix,

275
00:15:07,711 --> 00:15:09,272
we wanted to strike a balance between

276
00:15:09,752 --> 00:15:11,794
prioritizing simple locked-in experiences

277
00:15:11,854 --> 00:15:13,795
where the player's action is more easily known,

278
00:15:14,236 --> 00:15:16,477
and maintaining interest based on the surrounding context

279
00:15:16,517 --> 00:15:17,378
of these locked-in states.

280
00:15:18,187 --> 00:15:20,831
With the existing framework and a shippable static mix in place,

281
00:15:21,291 --> 00:15:22,453
mixing had now become simple,

282
00:15:22,834 --> 00:15:24,396
but that doesn't necessarily mean that it was easy.

283
00:15:25,879 --> 00:15:28,483
Now, working with designers and teams on game features

284
00:15:28,603 --> 00:15:30,546
opens up a lot of avenues for discussion and debate.

285
00:15:31,389 --> 00:15:32,970
In the early stages of remaking the mix,

286
00:15:33,150 --> 00:15:34,671
before the idea was fully realized,

287
00:15:35,091 --> 00:15:36,772
extreme weather was being worked on really heavily.

288
00:15:37,752 --> 00:15:40,033
I had these scheduled sound design reviews

289
00:15:40,053 --> 00:15:41,294
with the product owner of the feature,

290
00:15:41,954 --> 00:15:42,814
one of our lead designers,

291
00:15:43,655 --> 00:15:45,776
and he kept wanting more from the tropical storm

292
00:15:45,796 --> 00:15:46,336
in this review.

293
00:15:47,316 --> 00:15:49,397
I was a bit stuck not wanting to overpower the player

294
00:15:49,457 --> 00:15:52,219
with wind and rain and lightning to an exhausting degree.

295
00:15:53,179 --> 00:15:55,460
A bit frustrated as this review was not going very well,

296
00:15:56,280 --> 00:15:57,241
I also said offhand,

297
00:15:57,301 --> 00:15:59,142
I don't know how I'm gonna get enemy gunfire

298
00:15:59,202 --> 00:16:00,162
over this mix at this point.

299
00:16:02,086 --> 00:16:03,787
I had now lost his attention completely,

300
00:16:04,227 --> 00:16:06,047
and he was on his phone scrolling through emails,

301
00:16:06,327 --> 00:16:07,227
and he was walking out the door,

302
00:16:07,748 --> 00:16:08,688
and he sort of just said,

303
00:16:08,708 --> 00:16:10,468
I don't know, I don't really care about that,

304
00:16:10,508 --> 00:16:11,248
I just want the Stormpicker.

305
00:16:12,289 --> 00:16:13,369
It was actually a really great point,

306
00:16:13,389 --> 00:16:14,809
it was kind of a light bulb moment for us.

307
00:16:14,909 --> 00:16:17,170
We needed a smarter, stylized mix

308
00:16:17,230 --> 00:16:18,910
to deliver a great sounding experience

309
00:16:19,190 --> 00:16:21,751
that could break some more traditional rules of priority.

310
00:16:23,291 --> 00:16:24,411
But before we move into some of the more

311
00:16:24,451 --> 00:16:25,612
creative solutions we used,

312
00:16:26,172 --> 00:16:27,932
let's talk about how we functionally began the process

313
00:16:27,972 --> 00:16:30,253
of reworking our mix logic to support style.

314
00:16:31,610 --> 00:16:34,632
An early course of action we took was to remove all bespoke narrative mixes.

315
00:16:35,493 --> 00:16:39,116
We then started prototyping dynamic states and microstates that would allow us to blend

316
00:16:39,156 --> 00:16:42,880
between mixes seamlessly and deliver on a unique and always-changing soundscape.

317
00:16:43,961 --> 00:16:49,145
We then removed most compressors and dynamics-based mixing DSPs from our mixer, along with side

318
00:16:49,185 --> 00:16:52,068
chains that previously determined priority audibility.

319
00:16:53,382 --> 00:16:55,283
Now, since the inclusion of front lines and extreme weather

320
00:16:55,303 --> 00:16:57,345
kind of rocked the way the player perceives things like

321
00:16:57,405 --> 00:17:00,688
enemy gunfire, we took wider liberties with reprioritizing

322
00:17:00,728 --> 00:17:03,370
enemies firing at you whenever we could in favor of something

323
00:17:03,430 --> 00:17:06,032
more threatening or interesting that we deemed worth forcing

324
00:17:06,052 --> 00:17:06,553
your focus.

325
00:17:08,194 --> 00:17:10,056
Now, to clear up some terminology, states and

326
00:17:10,096 --> 00:17:12,438
microstates are just mixer snapshots in FMOD Studio.

327
00:17:12,918 --> 00:17:15,100
Like other mixer states available in almost all

328
00:17:15,140 --> 00:17:17,262
middleware, these are just simple terms to account for any

329
00:17:17,322 --> 00:17:20,205
player interaction or action and how we want them to sound.

330
00:17:21,307 --> 00:17:24,749
Now when we talk about states specifically, we refer to settings triggered more globally.

331
00:17:25,169 --> 00:17:28,471
Things like players inside Tropical Storm is a state triggered when you enter that storm.

332
00:17:29,131 --> 00:17:33,094
Some other examples of states are car chase combat, exploration, dynamic combat.

333
00:17:33,974 --> 00:17:37,656
A microstate is a snapshot that's triggered with sounds in the world in 3D space.

334
00:17:38,237 --> 00:17:42,139
They can be equally context driven, but most likely the intensity is simply faded in the

335
00:17:42,179 --> 00:17:43,360
closer to the sound source you get.

336
00:17:44,100 --> 00:17:46,721
An example of a microstate is enemy AI is targeting Rico.

337
00:17:47,442 --> 00:17:49,943
This microstate sets some overall levels quickly

338
00:17:50,543 --> 00:17:52,304
and is played when enemies are firing their guns at you.

339
00:17:53,584 --> 00:17:56,286
Microstates were really effective in creating space more intelligently

340
00:17:56,326 --> 00:17:58,507
and making important or loud sounds in the world stand out.

341
00:17:59,207 --> 00:18:03,509
Adding logic, like direction, simply lets us make vehicle explosions more focused and clear,

342
00:18:03,969 --> 00:18:06,250
as we disallow the microstate if the player isn't looking at it.

343
00:18:06,990 --> 00:18:08,991
This isn't possible with just sidechain compression,

344
00:18:09,071 --> 00:18:11,472
as that looks at a pure amplitude output and ducks accordingly.

345
00:18:12,553 --> 00:18:14,213
With this taking no compressor DSPs,

346
00:18:14,273 --> 00:18:15,654
no side chaining, and no metering,

347
00:18:15,734 --> 00:18:17,674
we get improved punch with better performance.

348
00:18:18,314 --> 00:18:20,195
Now keep in mind as the mix is now very separated

349
00:18:20,255 --> 00:18:22,916
and routing, our granular control lets us even make changes

350
00:18:22,996 --> 00:18:26,717
to EQ and balance if certain moments become too overbearing.

351
00:18:27,497 --> 00:18:28,997
Some other examples of microstates we made

352
00:18:29,057 --> 00:18:30,378
were AI is targeting player,

353
00:18:30,798 --> 00:18:32,098
enemy vehicle is chasing player,

354
00:18:32,438 --> 00:18:33,959
enemy helicopter is engaged with the player.

355
00:18:36,039 --> 00:18:37,580
So we have a baseline for what states are

356
00:18:37,680 --> 00:18:38,900
and some examples for their use.

357
00:18:39,340 --> 00:18:40,761
How do we use states to attack the problem

358
00:18:40,781 --> 00:18:41,561
with a tropical storm?

359
00:18:42,509 --> 00:18:44,750
We want to enforce the design that storms are all powerful

360
00:18:44,790 --> 00:18:47,531
while not drowning the player in sound to an exhausting degree.

361
00:18:49,131 --> 00:18:51,392
Where the mix became most stylized was when we exercise

362
00:18:51,432 --> 00:18:53,793
one of the most powerful tricks in setting unique mix states,

363
00:18:54,233 --> 00:18:56,413
modulating between states or within states themselves

364
00:18:56,593 --> 00:18:57,454
simply because we can.

365
00:18:58,354 --> 00:19:00,635
Since data we use to set the mix and other aspects of audio

366
00:19:00,695 --> 00:19:03,476
is already available, we can insert some chaos and randomness

367
00:19:03,496 --> 00:19:06,336
into the experience to account for fatigue, varying playtime

368
00:19:06,456 --> 00:19:09,377
or scale. For these persistent storm events, we opted to use

369
00:19:09,437 --> 00:19:10,578
time as the main modulator.

370
00:19:11,855 --> 00:19:14,696
In the tropical storm, we set the level upon entering the storm quite loud.

371
00:19:15,136 --> 00:19:16,297
We wanted to feel overbearing.

372
00:19:16,997 --> 00:19:20,379
But after 15 seconds, we start fading the base of the storm down by about 10 dB.

373
00:19:21,219 --> 00:19:24,021
We trade off and start mixing the thunder and lightning up to compensate.

374
00:19:25,217 --> 00:19:27,598
And after another 10 seconds, we lower the lightning strikes

375
00:19:27,638 --> 00:19:29,219
and only then do we allow enemy gunfire

376
00:19:29,239 --> 00:19:30,440
to duck anything inside the storms.

377
00:19:31,141 --> 00:19:34,163
Mixing like this lets storms feel chaotic and oppressive

378
00:19:34,183 --> 00:19:34,803
when you enter them.

379
00:19:35,624 --> 00:19:36,684
They're extremely disoriented

380
00:19:36,804 --> 00:19:37,885
when you're getting struck by lightning,

381
00:19:38,065 --> 00:19:41,268
but eventually some more traditional room for hierarchy

382
00:19:41,608 --> 00:19:42,348
can resume in the mix.

383
00:19:43,887 --> 00:19:47,490
In Sandstorms, we mute the player's gunfire tails to make the storm feel claustrophobic,

384
00:19:47,830 --> 00:19:51,413
boost the barks of the enemies should you not be in combat as they're yelling, searching

385
00:19:51,453 --> 00:19:54,696
for you, and track the direction of wind to balance the weight of the sound design of

386
00:19:54,736 --> 00:19:57,098
other noisy assets to keep the mix image even.

387
00:19:57,958 --> 00:20:01,301
When the player is nearing the tornado, we mute the player's car engine as the tornado

388
00:20:01,321 --> 00:20:04,784
base is really full frequency, and we want it to feel like the player's cars are losing

389
00:20:04,804 --> 00:20:05,425
control near it.

390
00:20:07,005 --> 00:20:10,747
Now one state that was most complicated and dynamic was the dynamic combat mix state.

391
00:20:11,327 --> 00:20:14,888
Easily the backbone of our mix, it managed streaming asset counts and handled various

392
00:20:14,948 --> 00:20:16,689
sizes and types of combat experiences.

393
00:20:17,449 --> 00:20:20,790
One of the first functions it performs is it scales the mix of ambiences and surrounding

394
00:20:20,830 --> 00:20:21,770
low priority sounds.

395
00:20:22,290 --> 00:20:24,371
The more enemies, the less ambiences.

396
00:20:25,251 --> 00:20:28,512
This gets noise out of the quad image and in a compression based methodology would be

397
00:20:28,552 --> 00:20:29,593
ducked by gunfire anyway.

398
00:20:30,388 --> 00:20:33,917
We have the ambiences completely muted if the enemy engaged count is greater than 5.

399
00:20:34,418 --> 00:20:37,947
This also dumps the need to stream those quad files, makes space for the music, and lightens

400
00:20:37,967 --> 00:20:39,030
the load on audio performance.

401
00:20:40,600 --> 00:20:44,001
So if the player is to get into a car, we now, from the mix perspective, consider that

402
00:20:44,021 --> 00:20:44,381
a chase.

403
00:20:45,002 --> 00:20:48,923
The mixer takes one second to fade to this new second layer of combat and changes levels

404
00:20:48,943 --> 00:20:49,423
accordingly.

405
00:20:50,143 --> 00:20:53,644
In the case of car chases, we quickly duck the vehicle mix package down to alert you

406
00:20:53,664 --> 00:20:57,965
to gunfire, lower the rears of the land vehicle's group until the chase combat is complete,

407
00:20:58,586 --> 00:21:02,207
measure the distance between you and enemy vehicles chasing you, and inversely lower

408
00:21:02,227 --> 00:21:03,567
your engine and boost the chaser.

409
00:21:04,227 --> 00:21:07,208
Then we raise the level of the rear speakers of the enemy helicopter's bus.

410
00:21:08,069 --> 00:21:11,411
This really quick state change makes car chases less frustrating

411
00:21:11,831 --> 00:21:14,033
because you can hear all threats as they're out of camera view

412
00:21:14,073 --> 00:21:16,554
and briefly modulate the mix to be more rear speaker heavy.

413
00:21:18,596 --> 00:21:20,277
Now in attempting a major rework of our mix,

414
00:21:20,817 --> 00:21:22,498
what did we learn and where did we maybe fall short?

415
00:21:23,319 --> 00:21:25,681
Now, one aspect of this mix approach that makes it difficult

416
00:21:25,821 --> 00:21:27,462
is its heavily reliant on feedback.

417
00:21:28,171 --> 00:21:32,053
Since we're still day-to-day game developers, I can't ever spend all my time and focus on

418
00:21:32,073 --> 00:21:32,393
the mix.

419
00:21:33,453 --> 00:21:38,135
It was great that iteration time dropped drastically and sound designer's content was being complemented

420
00:21:38,155 --> 00:21:41,656
by the mix structure, but we needed play tester and developer feedback to address areas of

421
00:21:41,676 --> 00:21:43,437
the game we may not be looking at.

422
00:21:44,277 --> 00:21:48,059
Aside from the sound and music being a synthesis to the visual and the experience, the mix

423
00:21:48,079 --> 00:21:52,120
can be a vital tool in aiding the game's design, but communicating that option to developers

424
00:21:52,161 --> 00:21:53,001
can be very difficult. __________________________________________________________________

425
00:21:53,979 --> 00:21:57,422
Sometimes we had to dig through feedback, searching out ways that sound could aid in

426
00:21:57,482 --> 00:22:00,204
areas of the game being labeled frustrating or challenging.

427
00:22:01,004 --> 00:22:04,427
Listening and conversing outside of our audio walls was crucial in gleaning insight into

428
00:22:04,447 --> 00:22:07,509
what developers and players expect beats and gameplay to feel like.

429
00:22:09,110 --> 00:22:13,776
And lastly, one thing we can't avoid is that by reducing the layers of processing between a vehicle engine event and the listener,

430
00:22:14,257 --> 00:22:18,102
the amount of vehicle-based groups and returns alone in the mix are multiplied ten times over.

431
00:22:18,923 --> 00:22:21,106
Processing-wise, this makes no difference, and in fact,

432
00:22:21,746 --> 00:22:25,511
more granular structures actually contributed to where most performance savings came from in the mix.

433
00:22:26,143 --> 00:22:28,664
The mixer group count grew exponentially over the project.

434
00:22:29,164 --> 00:22:31,265
Various areas of the game were similarly restructured

435
00:22:31,285 --> 00:22:33,687
like vehicles were, making the mixer quite large

436
00:22:33,707 --> 00:22:35,007
with hundreds of groups and returns.

437
00:22:35,648 --> 00:22:37,609
The authoring of snapshots becoming so vital

438
00:22:37,629 --> 00:22:39,169
to the mix itself meant that an increase

439
00:22:39,189 --> 00:22:41,471
in workflow efficiency directly correlated

440
00:22:41,531 --> 00:22:43,031
to more states to create and manage.

441
00:22:44,012 --> 00:22:46,213
On reflecting, we still felt all of this

442
00:22:46,273 --> 00:22:48,094
is worth the benefits and shows the extent

443
00:22:48,574 --> 00:22:50,735
to which granular control on a huge scale can look like.

444
00:22:52,850 --> 00:22:55,071
So we removed layers of processing between our sounds.

445
00:22:55,571 --> 00:22:58,173
We found space in our mix image to better complement and

446
00:22:58,193 --> 00:23:00,875
declutter the soundscape, and enhanced the sense of power and

447
00:23:00,915 --> 00:23:01,675
economy of scale.

448
00:23:02,476 --> 00:23:05,338
All these steps act as apparatuses in our sandbox to

449
00:23:05,378 --> 00:23:07,719
reconfigure the way we prioritize and feed players

450
00:23:07,759 --> 00:23:10,501
sounds based on the surrounding context and our own

451
00:23:10,541 --> 00:23:11,742
internal stylistic leanings.

452
00:23:12,684 --> 00:23:16,727
Open world sandbox games can present an enormous challenge to delivering a subtle and interesting

453
00:23:16,767 --> 00:23:17,007
mix.

454
00:23:17,528 --> 00:23:21,350
The principles with which we mix though can be practically applied to any type of game.

455
00:23:22,051 --> 00:23:25,253
By not treating your mix as an afterthought and pushing the limits of the tools you have,

456
00:23:25,634 --> 00:23:28,295
you can better integrate your sound design and music into the fabric of your game.

457
00:23:29,196 --> 00:23:33,880
With that, whether you work on a large audio team or a one person shop, the foundation

458
00:23:33,920 --> 00:23:37,382
is set to use your mix as a powerful instrument for reinforcing your player's experience.

459
00:23:38,489 --> 00:23:42,290
The things we haven't gotten into today like loudness, mastering, dialogue mixing, design

460
00:23:42,330 --> 00:23:46,991
changes, tone, all these are important and worthy topics, but the framework and questions

461
00:23:47,011 --> 00:23:50,472
we've established can better pull solutions to the above problems into focus.

462
00:23:51,372 --> 00:23:55,534
I truly believe that mixing should be simpler and perform both a functional and aesthetic

463
00:23:55,594 --> 00:23:55,814
role.

464
00:23:56,314 --> 00:23:59,575
What I hope is taken away is not only the importance of your final mix or improving

465
00:23:59,595 --> 00:24:03,736
your skills as a mixer, but the importance of the questions you ask when you're designing

466
00:24:03,756 --> 00:24:06,937
your mix, ensuring that you're always mixing for the games that you're actually making.

467
00:24:08,045 --> 00:24:09,106
Now, before we break for questions,

468
00:24:09,426 --> 00:24:11,088
I do want to take a few seconds to thank

469
00:24:11,228 --> 00:24:12,849
the entire development team at Avalanche Studios

470
00:24:12,869 --> 00:24:15,171
for helping get this game out the door

471
00:24:15,211 --> 00:24:16,132
and with this presentation,

472
00:24:16,913 --> 00:24:18,254
both in Stockholm and New York City,

473
00:24:18,895 --> 00:24:20,116
as well as the entire audio team

474
00:24:20,136 --> 00:24:22,238
that was really, really important

475
00:24:22,258 --> 00:24:23,419
in helping us ship this game.

476
00:24:24,640 --> 00:24:25,521
Thank you so much for taking the time

477
00:24:25,541 --> 00:24:26,262
and coming to this talk.

478
00:24:26,302 --> 00:24:27,063
Have a good GDC.

479
00:24:27,683 --> 00:24:28,544
If you have any questions,

480
00:24:28,944 --> 00:24:31,126
we have a few minutes now to go over stuff.

481
00:24:31,467 --> 00:24:31,707
That's it.

482
00:24:41,062 --> 00:24:46,206
Hello. Well, first of all, thank you for the super interesting talk.

483
00:24:47,027 --> 00:24:49,268
I was wondering, well, you said you mixed it in 7.1.

484
00:24:49,328 --> 00:24:49,829
Yeah.

485
00:24:50,469 --> 00:24:58,335
I was wondering if you did like separate mixes for stereo, 5.1, 7.1, headphones, this kind of thing.

486
00:24:58,695 --> 00:25:04,779
Yes, we did. We mix and review in every format, but since 7.1 is kind of our master,

487
00:25:04,839 --> 00:25:06,901
that's the back of the box feature, that's what we're kind of...

488
00:25:07,842 --> 00:25:13,409
aiming for. As far as fold down, there's obviously fold down steps at every layer all the way

489
00:25:13,449 --> 00:25:18,795
down to stereo that are quite complicated to go through and a little bit of hidden magic

490
00:25:18,815 --> 00:25:22,980
in middleware. So we do, that stuff does matter, but we didn't really, the

491
00:25:24,215 --> 00:25:27,259
The spatialization and imaging thing starts at 7.1 and moves down the mix.

492
00:25:27,760 --> 00:25:27,940
Okay.

493
00:25:28,561 --> 00:25:29,722
And another question.

494
00:25:30,903 --> 00:25:37,791
Does the, I didn't play the game unfortunately, does the player have a lot of control over

495
00:25:37,852 --> 00:25:38,292
the mix?

496
00:25:38,412 --> 00:25:41,856
Like do you expose like dynamic range settings, this kind of thing?

497
00:25:42,355 --> 00:25:46,256
Now it's something that I think is really cool and something I'd love to do in the future.

498
00:25:46,296 --> 00:25:51,278
The only controls in the game that we have for sound are the more typical VCA sliders,

499
00:25:51,698 --> 00:25:54,019
sound effects, music, volume, stuff like that.

500
00:25:54,499 --> 00:25:57,220
There's other areas of mixed things that didn't make it in that would be good,

501
00:25:57,240 --> 00:26:00,301
like accessibility features that are in there, night mode, those are not in there.

502
00:26:00,842 --> 00:26:02,862
Those are all just states and microstates that didn't get made.

503
00:26:03,463 --> 00:26:04,003
But yeah, no.

504
00:26:04,503 --> 00:26:05,023
Cool, thank you.

505
00:26:05,223 --> 00:26:05,543
Yeah, thanks.

506
00:26:07,808 --> 00:26:16,871
Hey, so you mentioned that going from Just Cause 3, you had a lot of heavily compressed assets on the way in, which made it a little more difficult to mix.

507
00:26:17,531 --> 00:26:26,793
Did you have any guidelines for dialing that back? Did you have loudness standards for the assets on the way in to help it pre-mix a little bit before you even got it to the engine?

508
00:26:27,429 --> 00:26:30,452
Yeah, I think I may have failed to explain that well enough.

509
00:26:31,433 --> 00:26:34,436
I think what we experienced in Just Cause 3 in the final mix

510
00:26:34,456 --> 00:26:36,918
is something that I've experienced in games I've mixed before.

511
00:26:37,979 --> 00:26:40,482
You start seeing dynamic range disappear as you're finishing the game,

512
00:26:40,702 --> 00:26:43,024
as you're doing these mastering passes and things are getting pushed together.

513
00:26:43,505 --> 00:26:48,590
But also the fact that when you're doing sort of a strictly priority-based mixing structure

514
00:26:48,610 --> 00:26:49,731
where dynamics are involved,

515
00:26:50,540 --> 00:26:54,683
If you're a sound designer stuck working on sounds in the lower bus, you can never hear your work.

516
00:26:55,244 --> 00:26:59,287
So they start pushing it up in volume because they're trying to focus on it and make it sound really good.

517
00:27:00,527 --> 00:27:02,149
So that's what we were trying to solve there.

518
00:27:02,249 --> 00:27:04,991
I think it's not really an issue of the content not being dynamic.

519
00:27:05,031 --> 00:27:08,233
It's that they're pushing up against a mix that's fighting them all the time.

520
00:27:09,274 --> 00:27:11,075
I've seen that in quite a few games where...

521
00:27:11,695 --> 00:27:14,718
You'll see the side chain almost always active on the lowest bus

522
00:27:14,798 --> 00:27:16,860
because there's always something higher up pushing on it.

523
00:27:17,240 --> 00:27:19,082
So I don't know how anybody could ever actually sit there

524
00:27:19,122 --> 00:27:20,623
and reasonably mix their content.

525
00:27:20,924 --> 00:27:23,706
If you're the ambience person, I don't know how you could do that.

526
00:27:24,046 --> 00:27:24,667
Okay.

527
00:27:24,747 --> 00:27:24,907
Yeah.

528
00:27:25,127 --> 00:27:25,548
Cool. Thank you.

529
00:27:26,529 --> 00:27:29,091
Oh, and we did not do content mastering guidelines.

530
00:27:29,111 --> 00:27:29,872
That's not something we do.

531
00:27:33,155 --> 00:27:33,695
Any other questions?

532
00:27:35,657 --> 00:27:36,057
For coming out.

