1
00:00:06,450 --> 00:00:10,333
Again, I'm Graham Rhodes, and I'll be talking about implicit geometry.

2
00:00:10,333 --> 00:00:20,741
I don't know how many of you are familiar with this idea.

3
00:00:20,741 --> 00:00:28,046
There have been a couple of talks earlier today that have shown uses of implicit geometry.

4
00:00:30,356 --> 00:00:32,538
They do show up in games in various places.

5
00:00:32,538 --> 00:00:34,801
How many...

6
00:00:34,801 --> 00:00:38,545
I just want to find out how many of you

7
00:00:38,545 --> 00:00:42,069
know or knew before you came here today what

8
00:00:42,069 --> 00:00:43,870
what is meant by implicit geometry?

9
00:00:43,870 --> 00:00:50,578
I figured some of you that had seen this before.

10
00:00:53,397 --> 00:00:56,218
So what I want to do, the first slide here, I'm just going to show a few examples.

11
00:00:56,218 --> 00:00:59,040
Probably every one of you have seen metaballs.

12
00:00:59,040 --> 00:01:06,464
This idea of having these kind of spheres in space that when they get close to each other, they morph together.

13
00:01:06,464 --> 00:01:08,585
This is one example of an implicit geometry.

14
00:01:08,585 --> 00:01:11,687
You don't just have an equation that tells you the shape of this thing.

15
00:01:11,687 --> 00:01:13,248
It comes together because of the...

16
00:01:14,720 --> 00:01:17,662
the way these things are defined in space.

17
00:01:17,662 --> 00:01:20,265
Another example here that you do see in games

18
00:01:20,265 --> 00:01:26,190
is the use of implicit surfaces to generate the fluid geometry

19
00:01:26,190 --> 00:01:29,293
when you have like a water, splashing water in a game,

20
00:01:29,293 --> 00:01:30,354
things like that.

21
00:01:30,354 --> 00:01:32,957
The fluid is solved in the background

22
00:01:32,957 --> 00:01:35,459
and then there's some technique for extracting a geometry

23
00:01:35,459 --> 00:01:35,940
to draw it.

24
00:01:37,221 --> 00:01:55,587
Another example that you may have seen on some occasion is the use of potential flow fields to do crowd pathfinding to avoid obstacles and reach a target.

25
00:01:55,587 --> 00:02:03,429
And this is done by again solving a fluid flow and then extracting the shape of the path from that fluid flow.

26
00:02:05,305 --> 00:02:13,727
So, I want to give you this. The basic idea is that you have some kind of a field function that's defined everywhere in space.

27
00:02:13,727 --> 00:02:26,752
And once you've evaluated the field based on this field function, you pick a threshold value that defines the geometry you want to extract from it.

28
00:02:28,555 --> 00:02:33,038
And I've got the thing down there, using magic to extract the level set.

29
00:02:33,038 --> 00:02:34,779
Well, you're not really going to use magic.

30
00:02:34,779 --> 00:02:37,961
There are just different techniques that you would use to extract it.

31
00:02:37,961 --> 00:02:44,305
You can, depending on the way the field is defined, you can easily ray trace these things

32
00:02:44,305 --> 00:02:49,488
or you can use geometric techniques to get real polygons out of the field

33
00:02:49,488 --> 00:02:51,449
or lines out of the field to make a shape.

34
00:02:52,895 --> 00:03:02,521
So a couple of different examples there for pulling polygons out or marching cubes or marching tetrahedra, different variations of that.

35
00:03:02,521 --> 00:03:14,768
Another technique is to use a sort of related, but to use an octree to figure out where you have function values and where it's inside and where it's outside of your threshold value.

36
00:03:16,710 --> 00:03:20,713
So I'm interested in modeling with implicit surfaces,

37
00:03:20,713 --> 00:03:22,595
not so much drawing or ray tracing,

38
00:03:22,595 --> 00:03:25,297
but how do we get geometry out of these things

39
00:03:25,297 --> 00:03:29,961
and how can we use them?

40
00:03:29,961 --> 00:03:33,283
So what kind of a function?

41
00:03:36,311 --> 00:03:42,753
makes sense. So here's some examples. We already talked about the fluid flow simulation where you

42
00:03:42,753 --> 00:03:47,375
might be extracting a surface based on fluid density to represent the boundary between air

43
00:03:47,375 --> 00:03:55,217
and water. You could generate a noise function which would perhaps enable you to extract the

44
00:03:55,217 --> 00:04:00,559
shape of clouds that you could then send into your renderer to draw volumetric clouds.

45
00:04:02,755 --> 00:04:19,520
You could use an implicit surface for carving geometry out of a block or adding material for voxel rendering and you'd use an implicit surface to kind of model the material density.

46
00:04:21,439 --> 00:04:26,683
Jim already showed an example of using a sine distance field for rendering simple shapes.

47
00:04:26,683 --> 00:04:31,207
And you could as well just have a texture that has things in it that you want to extract.

48
00:04:31,207 --> 00:04:36,912
So if you're trying to do computer vision on a photograph to extract shapes out of it,

49
00:04:36,912 --> 00:04:39,715
you could do that as well.

50
00:04:39,715 --> 00:04:47,742
But what I'm going to talk about here is how do we construct an implicit field using kernel

51
00:04:47,742 --> 00:04:48,282
functions.

52
00:04:49,441 --> 00:04:54,423
And the kernel function is really a function that's continuous throughout space so that we can add,

53
00:04:54,423 --> 00:05:03,407
we can place them at different places in the field and they add together to give us a continuous field function.

54
00:05:03,407 --> 00:05:05,828
And I'm going to go through and show you a few examples.

55
00:05:05,828 --> 00:05:11,231
This one is a signed distance field.

56
00:05:13,188 --> 00:05:15,869
for a circle or a sphere.

57
00:05:15,869 --> 00:05:19,391
And you can see it's discontinuous in the center,

58
00:05:19,391 --> 00:05:21,813
and it's linear away from the center.

59
00:05:21,813 --> 00:05:26,435
Now, one thing about this function is it's unbounded.

60
00:05:26,435 --> 00:05:29,717
So it goes to infinity at an infinite distance

61
00:05:29,717 --> 00:05:30,898
away from the radius.

62
00:05:30,898 --> 00:05:34,440
That can be advantageous, as we'll see in a minute.

63
00:05:34,440 --> 00:05:38,782
But it being discontinuous at the center

64
00:05:38,782 --> 00:05:39,983
is not really desirable.

65
00:05:42,023 --> 00:05:45,905
Another one is the bi-harmonic radial basis function.

66
00:05:45,905 --> 00:05:47,725
Now this one too is unbounded.

67
00:05:47,725 --> 00:05:51,907
It goes to infinity at an infinite distance from the center,

68
00:05:51,907 --> 00:05:54,908
but it's continuous.

69
00:05:54,908 --> 00:05:59,269
So that's advantageous compared to the

70
00:05:59,269 --> 00:06:04,171
sine distance field for general smooth function building.

71
00:06:04,171 --> 00:06:09,693
Now this one here is the Gaussian distribution.

72
00:06:11,453 --> 00:06:17,197
Unlike the other two, this one is bounded, so it doesn't go to infinity at infinity or at the center.

73
00:06:17,197 --> 00:06:24,461
And in a way, this is kind of an intuitive one, because if you were to add two of these together,

74
00:06:24,461 --> 00:06:29,144
if I were to put another example of this function off to the side...

75
00:06:30,481 --> 00:06:35,285
then you can imagine what it would look like.

76
00:06:35,285 --> 00:06:36,346
And it would look like this.

77
00:06:36,346 --> 00:06:41,050
So if we have three of those kernels placed in space

78
00:06:41,050 --> 00:06:43,452
and we add them together,

79
00:06:43,452 --> 00:06:46,114
then you get something that looks like that.

80
00:06:46,114 --> 00:06:48,616
And that's very much what the metaballs look like.

81
00:06:48,616 --> 00:06:50,438
This isn't the function that's typically used for metaballs,

82
00:06:50,438 --> 00:06:52,499
but you do kind of get that shape.

83
00:06:52,499 --> 00:06:57,403
Now the fact that this thing is bounded in its effect...

84
00:07:00,068 --> 00:07:04,211
kind of makes it not as useful as you might think.

85
00:07:04,211 --> 00:07:08,274
While it's pretty intuitive to model things with,

86
00:07:08,274 --> 00:07:12,457
you know, you kind of know what you're going to get intuitively here.

87
00:07:12,457 --> 00:07:14,079
If you had a bunch of scattered points,

88
00:07:14,079 --> 00:07:17,661
you're just going to end up with something that looks like this.

89
00:07:17,661 --> 00:07:19,923
It's not going to give you a function that's very interesting

90
00:07:19,923 --> 00:07:22,545
across the entire field.

91
00:07:22,545 --> 00:07:24,026
It's not good for gap filling.

92
00:07:24,026 --> 00:07:24,827
It's not good for...

93
00:07:25,743 --> 00:07:28,685
fitting a function to scattered data, for example,

94
00:07:28,685 --> 00:07:32,266
whereas the functions that are unbounded,

95
00:07:32,266 --> 00:07:34,847
that have infinite support,

96
00:07:34,847 --> 00:07:39,129
those are better for filling gaps.

97
00:07:39,129 --> 00:07:41,270
If I have scattered points, then I can fit a function

98
00:07:41,270 --> 00:07:42,931
that will interpolate all of the points,

99
00:07:42,931 --> 00:07:45,432
and it will give me a smooth function

100
00:07:45,432 --> 00:07:46,732
that doesn't have any holes in it.

101
00:07:46,732 --> 00:07:48,373
This one, if we tried to,

102
00:07:48,373 --> 00:07:50,454
if we had scattered points on the boundary of a circle,

103
00:07:50,454 --> 00:07:53,655
for example, then not only would we not,

104
00:07:54,391 --> 00:07:56,773
we wouldn't fill the gaps in between the points.

105
00:07:56,773 --> 00:07:59,316
We'd end up with this kind of oscillating thing that goes around

106
00:07:59,316 --> 00:08:01,538
and it really wouldn't look like a circle.

107
00:08:01,538 --> 00:08:05,482
But with the ones that have that infinite support,

108
00:08:05,482 --> 00:08:06,603
they're going to fill in the gaps,

109
00:08:06,603 --> 00:08:11,147
so we get a much better surface that fits all these scattered points.

110
00:08:11,147 --> 00:08:12,449
So looking back at the other two,

111
00:08:12,449 --> 00:08:16,413
the ones that were unbounded, or had infinite support,

112
00:08:16,413 --> 00:08:18,875
this is three...

113
00:08:20,638 --> 00:08:23,159
instances of the signed distance field added together.

114
00:08:23,159 --> 00:08:27,602
And you can see how they do kind of nicely interpolate

115
00:08:27,602 --> 00:08:30,484
across those three points.

116
00:08:30,484 --> 00:08:32,726
And the same thing happens here with the

117
00:08:32,726 --> 00:08:34,607
with the bi-harmonic radial basis function.

118
00:08:34,607 --> 00:08:38,089
It smoothly interpolates across those points.

119
00:08:38,089 --> 00:08:40,991
It kind of fills the gaps nicely and gives us a smooth function.

120
00:08:42,458 --> 00:08:44,579
Now, by the way, these are called radial basis functions

121
00:08:44,579 --> 00:08:48,120
because they're a function only on the distance

122
00:08:48,120 --> 00:08:50,640
from the field point that you're evaluating

123
00:08:50,640 --> 00:08:56,461
and the center of the particular kernel.

124
00:08:56,461 --> 00:09:00,902
So, we can use these functions then

125
00:09:00,902 --> 00:09:03,303
to build things that are beyond Blobbys,

126
00:09:03,303 --> 00:09:04,603
that are beyond Metaballs.

127
00:09:04,603 --> 00:09:07,904
We can take scattered point data,

128
00:09:07,904 --> 00:09:08,884
put these...

129
00:09:09,913 --> 00:09:14,535
kernels at appropriate points in the field

130
00:09:14,535 --> 00:09:18,317
and then formulate a set of equations

131
00:09:18,317 --> 00:09:21,198
to figure out how strong they need to be

132
00:09:21,198 --> 00:09:23,760
and that will give us a smooth function

133
00:09:23,760 --> 00:09:26,701
that kind of nicely interpolates our scattered data.

134
00:09:26,701 --> 00:09:27,822
Now, I want to talk about...

135
00:09:35,779 --> 00:09:40,145
I'll give you some references at the end that go into more detail about that process,

136
00:09:40,145 --> 00:09:48,436
about the kind of historical approaches that have been used to go about doing that.

137
00:09:48,436 --> 00:09:53,623
But I want to show you one example, and this example is an experiment that I've been doing.

138
00:09:54,633 --> 00:10:02,417
with mixed success, but I'm going to show you a specific way to do this, to take some

139
00:10:02,417 --> 00:10:09,000
set of points to figure out what the kernel strengths are and then to evaluate it to look

140
00:10:09,000 --> 00:10:11,541
at that function that we get in the end.

141
00:10:11,541 --> 00:10:19,906
And the particular thing that I'm interested in is using fluid modeling, modeling the flow

142
00:10:19,906 --> 00:10:22,187
relative to surfaces to...

143
00:10:23,703 --> 00:10:26,485
to model this geometry.

144
00:10:26,485 --> 00:10:30,709
My background, actually, I was trained as an aerospace engineer,

145
00:10:30,709 --> 00:10:36,373
so this is something that I've used a lot in the engineering world.

146
00:10:36,373 --> 00:10:40,296
And I was interested in looking at how it might be applicable

147
00:10:40,296 --> 00:10:42,358
to just general surface modeling,

148
00:10:42,358 --> 00:10:46,201
or modeling of a field relative to some control surface.

149
00:10:46,201 --> 00:10:50,224
So this example is specific to a different kernel function

150
00:10:50,224 --> 00:10:51,725
than the one that I've showed you earlier.

151
00:10:52,305 --> 00:10:58,587
So the reason that implicit or potential flows is what I'm going to be talking about here.

152
00:10:58,587 --> 00:11:06,968
Potential flows are interesting just because they're mathematically elegant.

153
00:11:06,968 --> 00:11:10,749
The governing equation for a potential flow is Laplace's equation.

154
00:11:10,749 --> 00:11:14,170
That's equivalent to the conservation of mass.

155
00:11:14,170 --> 00:11:19,491
And it can be represented compactly in that form down below where…

156
00:11:21,488 --> 00:11:25,172
I don't know if you're seeing the cursor or not, but no, you're not seeing it.

157
00:11:25,172 --> 00:11:31,036
But I'll show you what that del operator is in a minute, but the field function phi is

158
00:11:31,036 --> 00:11:33,298
a velocity potential.

159
00:11:33,298 --> 00:11:38,563
It represents basically the potential.

160
00:11:41,080 --> 00:11:43,822
The derivative of that represents the velocity

161
00:11:43,822 --> 00:11:44,423
at a point.

162
00:11:44,423 --> 00:11:48,125
The integral velocity represents the change in velocity potential

163
00:11:48,125 --> 00:11:50,047
from one point to the other.

164
00:11:50,047 --> 00:11:52,688
I'm not going to try to explain that too much.

165
00:11:52,688 --> 00:12:03,276
But this happens to be a linear PDE, partial differential

166
00:12:03,276 --> 00:12:03,776
equation.

167
00:12:06,324 --> 00:12:10,268
And so the principle of superposition applies.

168
00:12:10,268 --> 00:12:12,570
If I add these, if I add

169
00:12:12,570 --> 00:12:18,335
velocity potential kernel functions in the field,

170
00:12:18,335 --> 00:12:23,880
then the summation of those will automatically satisfy that continuity equation.

171
00:12:23,880 --> 00:12:28,844
So, any combination of those kernel functions that...

172
00:12:29,662 --> 00:12:33,247
satisfies a particular set of boundary conditions that I add

173
00:12:33,247 --> 00:12:40,298
will be a potential flow that satisfies that physics equation.

174
00:12:40,298 --> 00:12:45,846
So, we can actually design the field using these kernels.

175
00:12:46,753 --> 00:12:52,137
Now, I want to show you two potential flow kernel functions.

176
00:12:52,137 --> 00:12:59,803
One is a 3D point source, and this function here is the equation for the potential in the field.

177
00:12:59,803 --> 00:13:06,588
You can see that it is discontinuous at the center of the kernel,

178
00:13:06,588 --> 00:13:09,530
and we're just not going to worry about that.

179
00:13:09,530 --> 00:13:13,573
It's unbounded at the origin.

180
00:13:16,846 --> 00:13:19,088
but it goes to zero at infinity.

181
00:13:19,088 --> 00:13:21,129
So, kind of like the Gaussian function,

182
00:13:21,129 --> 00:13:23,771
the fact that it goes to zero infinity

183
00:13:23,771 --> 00:13:25,572
probably means this one isn't a very good one

184
00:13:25,572 --> 00:13:30,036
for modeling, for interpolating general surfaces,

185
00:13:30,036 --> 00:13:31,477
because we're not going to fill gaps between.

186
00:13:31,477 --> 00:13:32,838
If we just have these scattered points,

187
00:13:32,838 --> 00:13:33,998
we're not going to fill any gaps,

188
00:13:33,998 --> 00:13:38,822
and we're going to have a bunch of holes in the surface.

189
00:13:38,822 --> 00:13:40,083
But I wanted to show you that,

190
00:13:40,083 --> 00:13:43,926
because I can show you how that relates to a flow.

191
00:13:45,086 --> 00:13:51,008
So the derivative – the potential is a velocity potential.

192
00:13:51,008 --> 00:13:58,111
The derivative of it, the gradient of it, is the direction of an imparted – it's

193
00:13:58,111 --> 00:14:02,332
the direction of the flow velocity at that point.

194
00:14:02,332 --> 00:14:10,095
So the potential source, basically, it's feeding – it's as if it is feeding fluid

195
00:14:10,095 --> 00:14:14,097
or mass into the field radially away from the point.

196
00:14:15,419 --> 00:14:29,586
And the strength of the element is basically the mass of volume that flows away from the point per unit time.

197
00:14:29,586 --> 00:14:40,971
Now if we take the derivative of that particular function, then we get the velocity down that you see at the bottom there.

198
00:14:40,971 --> 00:14:45,113
I will explain why I'm talking about velocity before I get to the end of the talk.

199
00:14:46,900 --> 00:14:51,263
But since this thing is unbounded at infinity,

200
00:14:51,263 --> 00:14:54,825
it's not going to be very good for kind of filling in gaps

201
00:14:54,825 --> 00:14:57,107
and scattered in a scattered point field.

202
00:14:57,107 --> 00:15:00,269
So I'm not really interested in using this one.

203
00:15:00,269 --> 00:15:02,910
But if we look at this in 2D, that prior one

204
00:15:02,910 --> 00:15:03,671
was for a 3D source.

205
00:15:03,671 --> 00:15:07,493
If we look at it in 2D, the potential is very different.

206
00:15:07,493 --> 00:15:08,794
And I'm not going to go into.

207
00:15:10,561 --> 00:15:16,183
Why here? If you want to know why it's different in 2D,

208
00:15:16,183 --> 00:15:18,004
ask me afterwards and I'll explain it to you.

209
00:15:18,004 --> 00:15:23,286
It's actually pretty easy, but I'm trying to somewhat avoid the physics of it.

210
00:15:23,286 --> 00:15:27,228
But in this case we've got a natural log,

211
00:15:27,228 --> 00:15:30,909
which is going to go to infinity at an infinite distance.

212
00:15:30,909 --> 00:15:35,891
So this one is better for kind of modeling scattered points

213
00:15:35,891 --> 00:15:40,133
or a sparse collection of control geometry.

214
00:15:41,430 --> 00:15:48,754
Now the potential, the first equation there is the potential for a single point.

215
00:15:48,754 --> 00:15:55,998
But we can also consider this to be a constant strength across a line segment.

216
00:15:55,998 --> 00:16:00,961
So we're actually emitting values away from the line segment instead of just from a single point.

217
00:16:00,961 --> 00:16:03,643
And that's a little bit of a more complicated equation.

218
00:16:04,222 --> 00:16:07,985
It's got a couple of logarithms in there and it's got an arc tangent.

219
00:16:07,985 --> 00:16:10,407
So it's expensive.

220
00:16:10,407 --> 00:16:16,451
We can deal with that later, but that's what the function looks like.

221
00:16:16,451 --> 00:16:18,513
And when we take the derivative of that,

222
00:16:18,513 --> 00:16:22,937
we get velocity components that look like that second equation there.

223
00:16:22,937 --> 00:16:25,739
And in this case, just to tell you what the geometry is,

224
00:16:25,739 --> 00:16:31,363
the source is this line segment that goes from point one to point two.

225
00:16:32,369 --> 00:16:38,614
I'm evaluating it at that field point that's located at the other end of the R1 vector.

226
00:16:38,614 --> 00:16:46,922
The R vectors are just the points from the ends of the source segment to that field point.

227
00:16:46,922 --> 00:16:56,390
And the two unit directions are U, which is along the axis of the element, and N is normal

228
00:16:56,390 --> 00:16:57,150
to the element.

229
00:16:58,094 --> 00:17:06,947
And while I'm presenting the 2D equations here, there is an equivalent closed source form for a 3D source that can be placed on a polygonal element.

230
00:17:06,947 --> 00:17:11,033
So this extends naturally to 3D.

231
00:17:11,033 --> 00:17:14,217
And when I began working on this talk, I kind of...

232
00:17:16,353 --> 00:17:26,183
I really had this idea that I could do something very cool using the flow around meshes to

233
00:17:26,183 --> 00:17:28,025
generate a field function.

234
00:17:28,025 --> 00:17:28,925
And that's what I did.

235
00:17:28,925 --> 00:17:36,553
And the idea here is to use something like a handcrafted mesh as a support and then build

236
00:17:36,553 --> 00:17:38,635
a field away from that mesh.

237
00:17:40,210 --> 00:17:49,552
So if we look at this here then, if we put a source on each element of, or each polygon of the mesh,

238
00:17:49,552 --> 00:17:59,334
and give each one a unique strength, then we can evaluate,

239
00:17:59,334 --> 00:18:07,176
initially holding the strength equal to unity, we can evaluate the influence of one triangle on any other point.

240
00:18:07,727 --> 00:18:11,408
in the field. And if we choose those points to be basically the midpoint of the other

241
00:18:11,408 --> 00:18:18,772
cells, we can get the influence of each source on all of the other sources. And that will

242
00:18:18,772 --> 00:18:26,076
give us a set of equations. So looking at that phi 1 star, with phi 1 star being the

243
00:18:26,076 --> 00:18:32,479
total potential at the center of polygon 1.

244
00:18:33,455 --> 00:18:39,897
then it's going to be equal to the strength of polygon 1 times the influence of the polygon on itself

245
00:18:39,897 --> 00:18:45,579
plus the strength of element 2 times the influence of polygon 2 on polygon 1, etc.

246
00:18:45,579 --> 00:18:52,741
We build that equation for every polygon on the mesh, and we have a set of equations.

247
00:18:54,498 --> 00:19:00,661
that we can solve to get the source strengths needed to create a realistic flow relative

248
00:19:00,661 --> 00:19:01,281
to that geometry.

249
00:19:01,281 --> 00:19:08,104
One that will make that entire geometry be a source from which we can emit flow if we

250
00:19:08,104 --> 00:19:12,926
want to, or just evaluate the isosurface at some relative distance to get some geometry

251
00:19:12,926 --> 00:19:15,887
around it.

252
00:19:20,215 --> 00:19:24,657
This is what that equation looks like when we put it into matrix form.

253
00:19:24,657 --> 00:19:27,499
It's basically a linear system.

254
00:19:27,499 --> 00:19:32,321
And what we're doing here is we're applying something called Dirichlet boundary conditions.

255
00:19:32,321 --> 00:19:39,024
And this is the case where we're directly specifying the value of the field.

256
00:19:39,024 --> 00:19:44,527
We really want the surface of the geometry to become an isosurface.

257
00:19:45,945 --> 00:19:56,733
And then if we evaluate, if it works out perfectly, if we evaluate the surface at that same field value,

258
00:19:56,733 --> 00:19:58,734
then we'll get the geometry of the surface.

259
00:19:58,734 --> 00:20:02,217
But if we evaluate it at a different field value, we'll get some offset.

260
00:20:02,217 --> 00:20:08,681
So it's very nice for being able to find an offset surface away from some geometry that we specify.

261
00:20:11,474 --> 00:20:16,197
Now, one thing you should notice here is that we can't set the right-hand side of this to

262
00:20:16,197 --> 00:20:20,320
zero because then we'll just get the trivial solution where all the strengths are zero.

263
00:20:20,320 --> 00:20:25,684
There's no flow, there's no field, or it's a completely a zero field.

264
00:20:25,684 --> 00:20:31,288
So what I've done here in my experiments is just to set the potential equal to one.

265
00:20:31,288 --> 00:20:35,370
And then you solve for the source strengths.

266
00:20:37,242 --> 00:20:48,529
And once you know the source strengths, now you can go back and evaluate the field anywhere in space.

267
00:20:48,529 --> 00:20:53,152
Now, one reason for...

268
00:20:53,152 --> 00:21:04,499
So, using this technique, using this kernel function, you can generate a field that will have a surface that represents the geometry that you used as a control geometry,

269
00:21:04,499 --> 00:21:06,060
as you would with any of the other...

270
00:21:06,602 --> 00:21:08,722
basis functions.

271
00:21:08,722 --> 00:21:18,426
And in this case, you also can take the derivative of the field to get the velocity of a particle

272
00:21:18,426 --> 00:21:19,846
at a point.

273
00:21:19,846 --> 00:21:26,008
And then you can, since you can evaluate that at any point in the field, you can compute

274
00:21:26,008 --> 00:21:31,750
the velocity of a particle at a point, integrate it in time, compute the velocity at the next

275
00:21:31,750 --> 00:21:35,272
point in the field, and then trace the particle in time.

276
00:21:37,546 --> 00:21:40,567
So basically you're able to do a little bit of physics based on this field.

277
00:21:40,567 --> 00:21:47,028
And then once you're done with that, well, so now that you have this field,

278
00:21:47,028 --> 00:21:53,890
another thing that you can do is you can now superimpose other control kernels

279
00:21:53,890 --> 00:21:57,151
to modify the field in interesting ways.

280
00:21:57,151 --> 00:22:03,232
For example, if you had some object in the field that was kind of a global obstacle,

281
00:22:03,232 --> 00:22:07,153
but then you had maybe a local obstacle that was moving around.

282
00:22:08,307 --> 00:22:18,412
elsewhere, another entity or a bot or something, you can kind of interactively evaluate these

283
00:22:18,412 --> 00:22:26,355
other kernels to kind of locally modify the field to get different effects on the path.

284
00:22:26,355 --> 00:22:26,435
So.

285
00:22:36,758 --> 00:22:47,992
The functions that we were looking at back here are not simple.

286
00:22:47,992 --> 00:22:53,178
So this is not something that is great for running in an engine, because you'd have to

287
00:22:53,178 --> 00:22:57,343
do a lot of work to get it to run it, you know.

288
00:22:57,763 --> 00:23:00,085
a high frame rate.

289
00:23:00,085 --> 00:23:04,708
But you can use this in a content creation tool

290
00:23:04,708 --> 00:23:06,649
to build geometry or to build fields

291
00:23:06,649 --> 00:23:09,190
that could then be evaluated, you know,

292
00:23:09,190 --> 00:23:10,231
at run time in the game.

293
00:23:10,231 --> 00:23:15,654
There are some things that you can do to speed it up.

294
00:23:15,654 --> 00:23:17,395
You can delegate some of this stuff to the GPU.

295
00:23:17,395 --> 00:23:22,558
One thing about these potential fields is...

296
00:23:24,588 --> 00:23:26,509
far away from the elements,

297
00:23:26,509 --> 00:23:28,509
they do behave like point elements.

298
00:23:28,509 --> 00:23:32,470
So you can substitute the effect of a point element

299
00:23:32,470 --> 00:23:36,031
if you're far away from the control geometry.

300
00:23:36,031 --> 00:23:40,433
You also could use approximate functions

301
00:23:40,433 --> 00:23:41,753
or table lookups,

302
00:23:41,753 --> 00:23:44,854
something that makes it less expensive.

303
00:23:44,854 --> 00:23:46,895
Another thing that you can do is

304
00:23:46,895 --> 00:23:48,835
bake the kernel functions into

305
00:23:48,835 --> 00:23:49,976
a 2D or volumetric texture

306
00:23:49,976 --> 00:23:52,696
and then scale and transform those and look those up.

307
00:23:53,219 --> 00:23:59,842
rather than evaluate it, that could be faster.

308
00:23:59,842 --> 00:24:05,344
Now, I'm gonna show a few little demos,

309
00:24:05,344 --> 00:24:16,549
and then I'll come back to this slide.

310
00:24:31,660 --> 00:24:33,061
These are all 2D demos.

311
00:24:33,061 --> 00:24:38,022
I just didn't have time to do anything more sophisticated.

312
00:24:38,022 --> 00:24:42,703
So what I've done here is I've used the geometry of a square.

313
00:24:42,703 --> 00:24:46,824
So I've placed a single source, a constant source element

314
00:24:46,824 --> 00:24:48,225
on each edge of the square.

315
00:24:48,225 --> 00:24:49,905
And I've set the boundary condition

316
00:24:49,905 --> 00:24:56,407
to set the potential to be 0 at the midpoint of each element.

317
00:24:56,407 --> 00:25:00,228
And those little white dots that you're seeing.

318
00:25:01,575 --> 00:25:02,817
are our isosurfaces.

319
00:25:02,817 --> 00:25:08,001
So it happens that I did hit that boundary condition.

320
00:25:08,001 --> 00:25:11,104
This is an isosurface with value of one.

321
00:25:11,104 --> 00:25:13,546
So I did hit the boundary condition

322
00:25:13,546 --> 00:25:15,888
at the four midpoints, but that's it.

323
00:25:15,888 --> 00:25:18,471
So I haven't really interpolated.

324
00:25:18,471 --> 00:25:20,272
I haven't really gotten a surface

325
00:25:20,272 --> 00:25:24,216
that looks like the shape that I put in.

326
00:25:24,216 --> 00:25:25,637
It's too coarse of a set of values.

327
00:25:33,061 --> 00:25:35,982
But I can evaluate, I can do the same thing,

328
00:25:35,982 --> 00:25:42,544
this is exactly the same thing just with another isosurface added.

329
00:25:42,544 --> 00:25:44,845
And I can't see what the value of the isosurface is,

330
00:25:44,845 --> 00:25:48,066
but if you just evaluate it slightly off,

331
00:25:48,066 --> 00:25:51,488
then you do get something that's closer to the shape you put into it.

332
00:26:01,684 --> 00:26:02,665
So here's another shape.

333
00:26:02,665 --> 00:26:07,429
And here again, if you look at the midpoint of each edge,

334
00:26:07,429 --> 00:26:11,592
I do have an isosurface that passes through that midpoint.

335
00:26:11,592 --> 00:26:14,034
But it's not very close to the shape that I wanted.

336
00:26:14,034 --> 00:26:16,095
But what happens if I move?

337
00:26:16,095 --> 00:26:19,938
I'm going to go back and show you the other one.

338
00:26:34,882 --> 00:26:38,963
There's another version of this one that I forgot to show you.

339
00:26:38,963 --> 00:26:42,744
In this case, rather than set the boundary condition at the midpoint,

340
00:26:42,744 --> 00:26:46,986
I set the boundary condition to the corner itself,

341
00:26:46,986 --> 00:26:50,547
or just slightly off from the corner.

342
00:26:50,547 --> 00:26:52,928
So in this case, with an isosurface of 1,

343
00:26:52,928 --> 00:26:55,789
does basically pass through the corners.

344
00:26:55,789 --> 00:26:58,730
So some experimentation on the location of that,

345
00:26:58,730 --> 00:27:02,771
the point where you evaluate the boundary condition is useful.

346
00:27:04,631 --> 00:27:05,751
So I'm told that I don't have any time left.

347
00:27:05,751 --> 00:27:06,412
So I'll just go back to my one slide.

348
00:27:06,412 --> 00:27:08,732
I'm not sure why it didn't go all the way.

349
00:27:08,732 --> 00:27:08,773
OK.

350
00:27:08,773 --> 00:27:11,874
So the real takeaways here are I wanted to give you

351
00:27:11,874 --> 00:27:12,254
an example of using.

352
00:27:34,589 --> 00:27:42,932
radio basis functions to build implicit surfaces that interpolate kind of scattered fields in a way that can be useful.

353
00:27:42,932 --> 00:27:48,054
And to show you that this has been used in games for various applications.

354
00:27:48,054 --> 00:27:52,315
Now as for my experiment with the potential flow,

355
00:27:52,315 --> 00:27:55,316
I didn't really get very far along with it.

356
00:27:55,316 --> 00:27:59,358
And I'm not really thrilled with it so far. It's expensive and...

357
00:28:01,023 --> 00:28:04,566
I had higher hopes for it, but I may experiment with it more.

358
00:28:04,566 --> 00:28:08,389
But I did want to go through and show you what I had done

359
00:28:08,389 --> 00:28:11,812
just so that you could kind of see the mechanics of how to

360
00:28:11,812 --> 00:28:15,996
solve the problem and what it might do for you.

361
00:28:15,996 --> 00:28:17,277
So, that's it.

362
00:28:17,277 --> 00:28:20,300
Here are some references.

363
00:28:20,300 --> 00:28:24,244
These slides will be available later in case you don't have time to write those down now.

364
00:28:24,244 --> 00:28:25,385
But those first two are...

365
00:28:26,476 --> 00:28:33,259
I don't know, they're about a decade old or so, but they do talk about this technique in quite a bit of detail.

366
00:28:33,259 --> 00:28:43,804
And for the flow-specific functions, that last reference is the book that I used.

367
00:28:43,804 --> 00:28:47,426
Although there are many, many other references, but these are all good ones.

368
00:28:47,426 --> 00:28:50,828
So, does anyone have any questions?

369
00:28:54,286 --> 00:28:58,802
Okay, well, if you're interested in talking about it more, please stop by afterwards.

