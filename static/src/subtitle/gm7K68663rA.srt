1
00:00:06,274 --> 00:00:11,216
set up here. Okay. Good morning. Welcome to Goal-Oriented Action Planning. As Dave just

2
00:00:11,256 --> 00:00:20,420
mentioned, I'm Peter Higley. Um, there we go. Um, skip the slide. My name's Peter Higley. As I

3
00:00:20,460 --> 00:00:25,862
said, I worked at, um, Mortimer Productions here. One of the primary AI programmers for, um,

4
00:00:26,262 --> 00:00:30,404
our latest title, Shadow of Mortar. Middle Earth, Shadow of Mortar. Supposed to say the full

5
00:00:30,444 --> 00:00:31,205
title of the game.

6
00:00:33,040 --> 00:00:37,781
Before I get into our usage of GOAP on that product, I need to give you an overview of

7
00:00:37,821 --> 00:00:38,781
goal-oriented action planning.

8
00:00:38,801 --> 00:00:39,441
It's been 10 years.

9
00:00:39,461 --> 00:00:40,042
You might have forgot.

10
00:00:40,722 --> 00:00:42,902
So it started back in 2004.

11
00:00:43,002 --> 00:00:46,783
It was actually developed for a monolith title, Fear, by Jeff Orkin.

12
00:00:48,504 --> 00:00:49,144
It worked out well.

13
00:00:49,184 --> 00:00:50,544
We've used it many titles since.

14
00:00:51,424 --> 00:00:52,685
Most notably, Shadow of Mordor.

15
00:00:53,785 --> 00:00:57,226
So goal-oriented action planning starts with a list of goals.

16
00:01:01,584 --> 00:01:04,247
At least at Monolith, these goals are fixed priority.

17
00:01:04,787 --> 00:01:05,828
We just have a list of goals.

18
00:01:05,848 --> 00:01:09,031
We go top down to figure out which goal to pursue.

19
00:01:09,492 --> 00:01:11,734
Now each goal has an is valid check.

20
00:01:11,754 --> 00:01:13,055
And this is a simple check.

21
00:01:13,135 --> 00:01:16,018
This just checks to see if the goal should be pursued.

22
00:01:16,438 --> 00:01:18,720
The kill enemy goal up there, you'll see.

23
00:01:19,121 --> 00:01:21,703
There's no sense in trying to kill an enemy

24
00:01:21,783 --> 00:01:23,245
if the AI doesn't know where an enemy is.

25
00:01:23,345 --> 00:01:26,428
So is valid makes some very quick, simple tests.

26
00:01:27,410 --> 00:01:28,431
to see if the goal should be pursued.

27
00:01:28,631 --> 00:01:29,612
If it should be pursued,

28
00:01:30,953 --> 00:01:33,174
the goal declares what we call a desired world state.

29
00:01:33,474 --> 00:01:34,895
I'll get into what this world state is,

30
00:01:36,036 --> 00:01:38,238
but it should be obvious.

31
00:01:38,298 --> 00:01:40,920
It's a way of just communicating what the AI,

32
00:01:41,980 --> 00:01:43,441
what the goal wants the AI to do.

33
00:01:44,642 --> 00:01:46,944
All right, so the AI achieves its goals

34
00:01:48,225 --> 00:01:49,685
with actions, as we all do.

35
00:01:51,167 --> 00:01:52,848
So your AI will have a list of actions.

36
00:01:54,147 --> 00:01:56,528
Now these actions also have is valid functions.

37
00:01:57,429 --> 00:02:00,811
But you'll notice, here I have in the middle column there,

38
00:02:01,171 --> 00:02:04,113
each action declares what world state it'll satisfy.

39
00:02:04,173 --> 00:02:07,415
It's basically saying, hey, I'll make sure the AI,

40
00:02:08,436 --> 00:02:09,537
if you look down there at the bottom,

41
00:02:09,557 --> 00:02:11,898
you have that go to node function, go to node action,

42
00:02:12,199 --> 00:02:13,940
I'll make sure the AI gets to node Y.

43
00:02:15,575 --> 00:02:18,656
But before the action can actually assure the system that

44
00:02:18,676 --> 00:02:20,637
it can do that, it needs to run this is valid check.

45
00:02:20,677 --> 00:02:23,998
And it'll get the desired world state, and it'll say,

46
00:02:24,078 --> 00:02:25,118
oh, you wanna go to node Y?

47
00:02:25,138 --> 00:02:26,859
Let me make sure I can reach node Y.

48
00:02:27,259 --> 00:02:29,100
Oh yeah, I can, great, I'm valid, use me.

49
00:02:29,380 --> 00:02:30,720
Or, no, that's unreachable.

50
00:02:31,201 --> 00:02:33,422
Just don't try to do this action, it's not gonna work.

51
00:02:35,982 --> 00:02:37,783
Another important thing to note here about actions,

52
00:02:38,143 --> 00:02:39,944
they can require more world state.

53
00:02:40,284 --> 00:02:42,485
So you'll notice like melee attack up there.

54
00:02:43,565 --> 00:02:44,926
You can't really perform an attack.

55
00:02:45,467 --> 00:02:49,628
unless you have a melee weapon equipped and you're by your target. So actions can say,

56
00:02:49,648 --> 00:02:54,349
yeah, I'll make sure I attack my target, but you got to make sure I get there and have

57
00:02:54,409 --> 00:03:00,011
a melee weapon in hand. All right. So this world state I keep mentioning. The world state

58
00:03:00,551 --> 00:03:06,673
is a collection of variables. Just a finite collection of named variables. And you'll

59
00:03:06,713 --> 00:03:09,074
notice the variables carry values. Use node.

60
00:03:10,050 --> 00:03:12,232
that X there, that's going to be a node.

61
00:03:12,272 --> 00:03:14,013
It's going to say, yeah, use this node over here

62
00:03:14,053 --> 00:03:15,214
and be attacking character Y.

63
00:03:15,535 --> 00:03:16,856
That Y is going to be a character.

64
00:03:19,177 --> 00:03:21,960
Now, while building a plan, we actually

65
00:03:22,000 --> 00:03:23,841
have multiple world states.

66
00:03:25,442 --> 00:03:27,224
You'll hear me call them desired world states

67
00:03:28,425 --> 00:03:29,746
for each potential plan.

68
00:03:29,766 --> 00:03:32,708
Because as we add actions to our plan,

69
00:03:32,728 --> 00:03:35,170
we're going to build up more world state variables

70
00:03:35,210 --> 00:03:36,251
that we need to satisfy.

71
00:03:37,329 --> 00:03:40,291
And it's also the AI always has a current world state.

72
00:03:40,732 --> 00:03:43,154
While an AI is using a node, that use node X

73
00:03:43,174 --> 00:03:44,535
for the AI's current world state

74
00:03:44,715 --> 00:03:45,957
will be set to the node he's using.

75
00:03:48,579 --> 00:03:48,879
Where are we?

76
00:03:49,862 --> 00:03:52,383
Yes, and one more point here, as you've noticed,

77
00:03:52,703 --> 00:03:56,205
goals and actions usually only care about a few

78
00:03:56,545 --> 00:03:58,066
of these variables at a time.

79
00:03:58,586 --> 00:03:59,907
We have the whole collection of variables,

80
00:04:00,187 --> 00:04:02,148
but they usually only say, oh, I only care about these

81
00:04:02,208 --> 00:04:02,989
two or three variables.

82
00:04:03,489 --> 00:04:05,850
The rest are ignored when we're trying to figure out

83
00:04:05,930 --> 00:04:07,951
if the world state is satisfied,

84
00:04:08,031 --> 00:04:09,252
is the phrase we keep using.

85
00:04:10,212 --> 00:04:12,293
All right, so, we have goals, we have actions.

86
00:04:12,414 --> 00:04:13,194
How do we build a plan?

87
00:04:15,312 --> 00:04:18,353
So we run down that goal list, top down, highest priority

88
00:04:18,373 --> 00:04:21,534
first, until we find a goal that says, yeah, I'm valid.

89
00:04:22,554 --> 00:04:25,295
And then we find an action that satisfies that goal,

90
00:04:25,475 --> 00:04:28,376
as I've been telling you.

91
00:04:29,276 --> 00:04:31,737
Often that action is going to require some more world state.

92
00:04:32,097 --> 00:04:33,837
Sometimes the goal may require more world state.

93
00:04:33,877 --> 00:04:35,998
The action may satisfy one variable,

94
00:04:36,018 --> 00:04:38,219
but the goal actually may say, no, I need three

95
00:04:38,239 --> 00:04:39,319
of these variables satisfied.

96
00:04:40,319 --> 00:04:42,760
So we find more actions that satisfy

97
00:04:42,940 --> 00:04:44,560
the previous action or that goal.

98
00:04:45,867 --> 00:04:48,028
And we keep repeating until all the world states,

99
00:04:48,569 --> 00:04:51,751
all the variables are either satisfied by previous actions

100
00:04:52,332 --> 00:04:54,133
or satisfied by the current world state.

101
00:04:54,834 --> 00:04:56,175
We say the current world state's matched.

102
00:04:57,956 --> 00:04:59,257
Now that doesn't always succeed.

103
00:04:59,718 --> 00:05:00,338
That can fail.

104
00:05:00,599 --> 00:05:01,799
And if it does, that's okay.

105
00:05:02,540 --> 00:05:03,501
We still have a list of goals.

106
00:05:03,521 --> 00:05:04,882
We keep going down that list of goals

107
00:05:05,563 --> 00:05:06,884
and find the next valid goal

108
00:05:07,164 --> 00:05:09,045
and try to build a plan for that goal.

109
00:05:11,207 --> 00:05:12,708
Now, you know, I was saying,

110
00:05:12,788 --> 00:05:13,969
oh yeah, we just pick an action.

111
00:05:14,650 --> 00:05:15,110
We don't just.

112
00:05:15,772 --> 00:05:17,915
you know, throw our hand in a hat and pull out an action.

113
00:05:18,275 --> 00:05:21,559
And we use ASTAR actually to build this list of actions.

114
00:05:21,619 --> 00:05:23,522
And, you know, think about this.

115
00:05:24,583 --> 00:05:25,704
List, path.

116
00:05:27,587 --> 00:05:29,910
Really what we're doing is we're doing pathfinding

117
00:05:30,090 --> 00:05:31,552
from the goal's desired world state

118
00:05:31,952 --> 00:05:33,494
to the AI's current world state.

119
00:05:35,429 --> 00:05:38,912
Now, A star is a way to search a graph.

120
00:05:39,352 --> 00:05:43,976
The neighbor nodes from your desired world state

121
00:05:44,457 --> 00:05:47,940
are the list of actions that satisfy the outstanding world

122
00:05:47,960 --> 00:05:48,560
state variables.

123
00:05:49,441 --> 00:05:51,984
And of course, the path distance is.

124
00:05:53,110 --> 00:05:55,471
Well, for us, it's a set cost per action.

125
00:05:56,311 --> 00:05:58,011
As you'll hear from Chris, you can actually

126
00:05:58,031 --> 00:05:58,952
vary that cost per action.

127
00:05:58,972 --> 00:06:01,812
That's some really, do some fun stuff with that.

128
00:06:02,272 --> 00:06:04,853
But the cost is, the path is just

129
00:06:04,893 --> 00:06:08,133
trying to minimize the number of actions the AI needs to take.

130
00:06:08,854 --> 00:06:10,834
And of course, it's A star, we need a heuristic.

131
00:06:11,294 --> 00:06:13,715
The heuristic is just the number of outstanding world state

132
00:06:13,735 --> 00:06:14,155
variables.

133
00:06:15,575 --> 00:06:16,275
That's a lot of words.

134
00:06:16,675 --> 00:06:17,655
Let's run through an example.

135
00:06:17,875 --> 00:06:19,816
We have a list of goals, a list of actions.

136
00:06:20,735 --> 00:06:22,756
make sure the slides are all, yeah.

137
00:06:23,056 --> 00:06:24,336
Our AI is a current world state,

138
00:06:24,556 --> 00:06:26,037
he has a melee weapon equipped,

139
00:06:26,097 --> 00:06:27,297
and he's not doing much else.

140
00:06:28,278 --> 00:06:29,158
We run through our list of goals,

141
00:06:29,178 --> 00:06:31,539
we find, oh hey, I have an enemy, let's kill him.

142
00:06:32,339 --> 00:06:35,221
Now, of course, kill enemy requires

143
00:06:35,241 --> 00:06:38,242
that the attacking target world state variable be set,

144
00:06:38,462 --> 00:06:40,643
so you can see our desired world state

145
00:06:40,823 --> 00:06:42,223
is just simply attacking target.

146
00:06:43,713 --> 00:06:47,978
Uh, we expand, we find the two neighboring nodes in our A star

147
00:06:47,998 --> 00:06:53,085
process here. We find two actions that can satisfy that world state, uh, melee

148
00:06:53,105 --> 00:06:56,909
attack and ranged attack. Um, I'm just going to give them a cost of one just to

149
00:06:56,949 --> 00:06:57,610
keep things simple.

150
00:06:58,780 --> 00:07:00,583
And they each require more world state.

151
00:07:00,643 --> 00:07:02,786
So they add more required world state variables.

152
00:07:03,187 --> 00:07:04,469
There you can see range attack says,

153
00:07:04,489 --> 00:07:06,031
well, you need a range weapon,

154
00:07:06,351 --> 00:07:07,513
and you have to be near the target.

155
00:07:07,573 --> 00:07:09,176
Not on the target, but near.

156
00:07:09,696 --> 00:07:11,799
Melee attack says, well, yeah,

157
00:07:12,060 --> 00:07:13,462
you need to have a melee weapon equipped,

158
00:07:13,662 --> 00:07:15,184
and you need to be on that target.

159
00:07:16,485 --> 00:07:20,166
But, you'll notice our current world state says we have a melee weapon equipped.

160
00:07:20,726 --> 00:07:26,268
So the melee attacks desired world state actually only has one variable that's not satisfied.

161
00:07:26,388 --> 00:07:27,169
That at target X.

162
00:07:27,489 --> 00:07:28,869
Whereas ranged attack still has two.

163
00:07:28,889 --> 00:07:32,490
Do some complicated counting here.

164
00:07:32,530 --> 00:07:36,092
You find the heuristics are, the heuristic for ranged attack is bigger.

165
00:07:36,652 --> 00:07:39,573
A star always expands the shortest, you know, distance plus heuristic.

166
00:07:40,033 --> 00:07:41,353
Which is going to be melee attack.

167
00:07:42,559 --> 00:07:44,482
We find one neighboring action, go to target,

168
00:07:44,723 --> 00:07:46,206
that satisfies that at target.

169
00:07:46,987 --> 00:07:48,771
We have no more outstanding world state variables.

170
00:07:50,033 --> 00:07:51,296
We've matched our current world state.

171
00:07:51,556 --> 00:07:52,097
We have a plan.

172
00:07:53,125 --> 00:07:55,247
We go to the target, we perform a melee attack.

173
00:07:55,547 --> 00:07:57,449
We hope the enemy dies, that's the goal.

174
00:07:58,670 --> 00:07:59,710
Usually the enemy is the player,

175
00:08:00,191 --> 00:08:01,692
usually he doesn't die from one attack.

176
00:08:02,412 --> 00:08:03,153
Players don't like that.

177
00:08:03,873 --> 00:08:06,736
So when this is done, the AI just runs

178
00:08:06,756 --> 00:08:07,656
through this process again,

179
00:08:07,756 --> 00:08:09,037
starting at the top of the goal list

180
00:08:09,197 --> 00:08:11,659
and working down until he finds a valid goal,

181
00:08:12,380 --> 00:08:13,261
valid list of actions.

182
00:08:13,521 --> 00:08:16,283
It may be the same plan, but we run through that

183
00:08:16,323 --> 00:08:17,804
just in case there's higher priority goals

184
00:08:17,984 --> 00:08:19,425
or new actions that could be run.

185
00:08:19,445 --> 00:08:22,047
All right, that was a quick.

186
00:08:22,480 --> 00:08:28,082
overview of global interstate action planning. Jeff's papers are great on this subject. You can

187
00:08:29,062 --> 00:08:38,525
find them in a predecessor to AI game pro. Anyhow, find them in a wonderful AI book from 2004. You

188
00:08:38,545 --> 00:08:42,647
can also find information online. It's been around about ten years now. So there's lots of

189
00:08:42,687 --> 00:08:48,068
information. All right. So shadow of mortar. How do we use all this in shadow of mortar?

190
00:08:48,965 --> 00:08:50,085
Well, we were an open world game.

191
00:08:50,346 --> 00:08:54,568
So we can have up to 50 AIs using this planner per frame.

192
00:08:56,349 --> 00:08:59,772
Honestly, we rarely had 50 AIs hitting the planner in one

193
00:08:59,812 --> 00:09:00,072
frame.

194
00:09:00,672 --> 00:09:02,934
But we also really didn't throttle it.

195
00:09:03,854 --> 00:09:06,956
So we had to handle a lot of AIs.

196
00:09:07,296 --> 00:09:10,498
And our planner, this is the great, great grandchild,

197
00:09:10,719 --> 00:09:12,079
Jeff's 10-year-old baby.

198
00:09:13,600 --> 00:09:16,102
It's seen some changes through the years, but heart and soul,

199
00:09:16,142 --> 00:09:17,203
this is GOAP.

200
00:09:18,803 --> 00:09:21,146
I'd like to say because it is.

201
00:09:23,548 --> 00:09:26,212
So those of you who know Go, and even if you don't,

202
00:09:26,252 --> 00:09:30,316
you've just heard me talk about using A star to build list of actions and not always succeeding.

203
00:09:32,417 --> 00:09:34,498
not always the most performant planner,

204
00:09:35,379 --> 00:09:37,680
but I gotta say, we didn't have too many problems with it.

205
00:09:38,281 --> 00:09:40,743
It really never came up as one of our hot spots,

206
00:09:41,363 --> 00:09:43,805
but it did occasionally pop up,

207
00:09:44,325 --> 00:09:45,986
and I'll tell you what we did about this.

208
00:09:46,887 --> 00:09:48,588
One thing, this is very Go specific here,

209
00:09:48,848 --> 00:09:50,349
we minimized the number of world state variables.

210
00:09:52,051 --> 00:09:53,952
We found our planning costs scale

211
00:09:54,152 --> 00:09:55,253
with the number of variables.

212
00:09:56,834 --> 00:09:58,115
You know, we're building heuristics,

213
00:09:58,755 --> 00:10:00,056
we are seeing what's satisfied,

214
00:10:00,076 --> 00:10:01,798
we're walking that variable count quite a bit.

215
00:10:02,515 --> 00:10:05,816
So, we need to minimize that.

216
00:10:06,236 --> 00:10:08,777
What we discovered is that a lot of these world states,

217
00:10:08,837 --> 00:10:10,397
I showed you a lot of world states with, you know,

218
00:10:10,837 --> 00:10:12,078
pointing at nodes and targets.

219
00:10:12,158 --> 00:10:14,258
We also had a lot of just Boolean world states.

220
00:10:15,158 --> 00:10:16,419
We had a cower goal.

221
00:10:17,079 --> 00:10:19,419
It would simply say, hey, be cowering.

222
00:10:19,779 --> 00:10:21,020
You know, I want you to cower.

223
00:10:21,520 --> 00:10:23,000
Does that be a variable that would set to true?

224
00:10:23,140 --> 00:10:24,680
We had quite a few variables like that.

225
00:10:25,241 --> 00:10:27,601
Honestly, we ended up with about 40 of them.

226
00:10:28,161 --> 00:10:29,562
They were never true at the same time,

227
00:10:29,622 --> 00:10:31,802
so naturally, that's an enumeration.

228
00:10:32,802 --> 00:10:39,605
So we'd fold that variable down. We folded about 40 variables down to one. We ended up having about 10 world state variables

229
00:10:39,625 --> 00:10:41,726
we'd build our plans on and

230
00:10:42,126 --> 00:10:44,267
That you know that kept our performance good

231
00:10:45,447 --> 00:10:45,547
and

232
00:10:46,308 --> 00:10:51,650
Another the other large thing. I'm this really mostly what I'll be talking about we kept our plan length short

233
00:10:53,951 --> 00:10:57,332
It's a pretty natural thing to you know, you're using a star

234
00:10:57,792 --> 00:10:59,273
the quicker you can get to your goal,

235
00:10:59,533 --> 00:11:00,634
the quicker you find a path.

236
00:11:01,295 --> 00:11:04,518
So we actually worked to reduce the number of actions

237
00:11:04,538 --> 00:11:06,399
we actually had to do to satisfy our goals.

238
00:11:07,040 --> 00:11:11,043
We did this by taking logic and really just pulling it

239
00:11:11,124 --> 00:11:12,184
out of the planner when we could.

240
00:11:15,307 --> 00:11:16,428
Well, we skipped a few here.

241
00:11:18,610 --> 00:11:21,493
This is where I'm talking to myself as much as anyone here.

242
00:11:22,354 --> 00:11:23,134
When you work on your AI,

243
00:11:24,741 --> 00:11:26,702
you know, whenever something new comes up, you think,

244
00:11:26,962 --> 00:11:28,763
oh, I could add this to Planner, how do I do this?

245
00:11:29,344 --> 00:11:31,665
And, you know, I'd like to urge you,

246
00:11:32,305 --> 00:11:33,686
it doesn't have to be in the Planner.

247
00:11:34,026 --> 00:11:35,467
You can look to other systems and say,

248
00:11:35,487 --> 00:11:37,609
well, maybe this system could support what I need to do,

249
00:11:38,029 --> 00:11:40,270
and I don't need to make this Planner

250
00:11:40,310 --> 00:11:41,591
a large, complicated mess.

251
00:11:43,732 --> 00:11:44,212
For instance.

252
00:11:45,213 --> 00:11:47,475
Shadow of Mordor, we had several low level systems.

253
00:11:47,495 --> 00:11:49,496
Note, we had a head tracking system.

254
00:11:49,896 --> 00:11:50,916
If you have not heard that yet,

255
00:11:51,477 --> 00:11:54,118
you really wanna get a head tracking system into your game.

256
00:11:54,178 --> 00:11:55,839
It adds so much and it's so easy.

257
00:11:57,199 --> 00:11:58,600
Today I'm gonna tell you about our...

258
00:12:00,168 --> 00:12:05,531
are weapon sheathing or equipping and unequipping. Um we really didn't switch between ranged

259
00:12:05,731 --> 00:12:10,753
and melee weapons that much but uh you know you have this sword and when the orcs are

260
00:12:10,773 --> 00:12:15,596
just walking around not trying to kill anything which you know is not as often as you'd like

261
00:12:15,936 --> 00:12:21,539
if you're not an orc um they would put that sword away. Whenever they see something they

262
00:12:21,579 --> 00:12:22,399
pull that sword back out.

263
00:12:23,334 --> 00:12:25,575
That's a pretty natural thing to put into a planner,

264
00:12:25,736 --> 00:12:27,056
especially a GOAT planner.

265
00:12:27,136 --> 00:12:28,097
It really makes sense.

266
00:12:28,137 --> 00:12:29,618
You throw in a world state variable,

267
00:12:29,638 --> 00:12:31,639
weapon should be equipped or weapon should be sheathed.

268
00:12:32,159 --> 00:12:34,421
You throw in an action, sheath, unsheath, weapon.

269
00:12:35,141 --> 00:12:35,802
And it's great.

270
00:12:36,862 --> 00:12:40,524
You just set that variable and the planner figures out,

271
00:12:40,584 --> 00:12:42,345
oh, I better do this unsheath action.

272
00:12:42,806 --> 00:12:43,826
And that's good.

273
00:12:44,167 --> 00:12:45,687
But that's another world state variable.

274
00:12:45,988 --> 00:12:46,768
That's another action.

275
00:12:47,573 --> 00:12:48,974
We looked at that and we said, you know,

276
00:12:49,734 --> 00:12:51,135
just based on the animation we're playing,

277
00:12:51,415 --> 00:12:52,476
we know if the sword should be out.

278
00:12:53,216 --> 00:12:54,697
So we actually took that action

279
00:12:55,098 --> 00:12:56,999
and just put it into our animation selection

280
00:12:57,219 --> 00:12:58,900
as just a transition.

281
00:12:59,440 --> 00:13:00,301
The planner doesn't care.

282
00:13:00,421 --> 00:13:01,962
The planner cares that the orc

283
00:13:02,022 --> 00:13:04,003
is going to play an attack animation.

284
00:13:04,564 --> 00:13:06,385
And what's key there, it's going to play.

285
00:13:06,425 --> 00:13:08,026
The planner doesn't care how long it takes.

286
00:13:08,106 --> 00:13:09,527
It just sits and waits patiently

287
00:13:09,587 --> 00:13:11,228
for these low-level systems to say,

288
00:13:11,288 --> 00:13:13,289
yeah, okay, you're done, give me another plan.

289
00:13:14,090 --> 00:13:19,617
So, uh, so we actually took that action, moved it into a transition, reduced our plan length by one.

290
00:13:19,957 --> 00:13:24,803
Um, as you'll see from Eric's talk, that actually reduced our plan lengths quite a bit.

291
00:13:26,245 --> 00:13:29,889
Um, we also had a lot of mid-level systems. I call them planner driving systems,

292
00:13:30,149 --> 00:13:32,432
because these are systems setting up variables for the planner.

293
00:13:33,313 --> 00:13:33,393
And

294
00:13:34,699 --> 00:13:36,440
Again, a lot of systems I'd love to talk about.

295
00:13:36,680 --> 00:13:38,963
Today, I'm gonna tell you about the awareness system.

296
00:13:40,124 --> 00:13:42,166
Pretty early, we decided that our orcs would have

297
00:13:42,246 --> 00:13:44,248
just these finite levels of awareness.

298
00:13:45,349 --> 00:13:47,190
The orcs will be alert pretty much

299
00:13:47,250 --> 00:13:48,091
when there's something to kill.

300
00:13:48,372 --> 00:13:50,674
They're orcs, they wake up when there's something to kill.

301
00:13:51,294 --> 00:13:54,057
And ambient is the polite term for bored

302
00:13:54,277 --> 00:13:55,178
because there's nothing to kill.

303
00:13:56,089 --> 00:14:00,751
And that was great for animation, great for changing walk cycles.

304
00:14:00,811 --> 00:14:03,133
It was also good for player feedback.

305
00:14:03,193 --> 00:14:06,995
If you've played the game, you may have seen red and yellow icons over Ortega's head.

306
00:14:07,015 --> 00:14:11,658
That lets you figure out how that relates to awareness, but you're pretty much seeing awareness.

307
00:14:13,325 --> 00:14:15,228
But it also helped with our planner.

308
00:14:15,668 --> 00:14:18,933
Because we recognized that we would have some combat goals,

309
00:14:19,013 --> 00:14:20,294
we'd have some investigation goals.

310
00:14:20,775 --> 00:14:26,042
These goals were only valid when, like combat goals,

311
00:14:26,602 --> 00:14:28,205
really only valid when the Orc's alert.

312
00:14:28,665 --> 00:14:30,768
Suspicious, you know, the investigation

313
00:14:30,828 --> 00:14:31,889
only when he's suspicious, so.

314
00:14:33,792 --> 00:14:35,673
we actually found what we could do,

315
00:14:35,714 --> 00:14:37,375
rather than even hitting those goals and saying,

316
00:14:37,415 --> 00:14:38,096
hey, are you valid?

317
00:14:38,116 --> 00:14:39,817
And the goal says, well, what's my alertness level?

318
00:14:39,938 --> 00:14:41,219
No, am I alert?

319
00:14:41,519 --> 00:14:42,440
No, I'm not valid.

320
00:14:43,081 --> 00:14:44,802
We actually could just take that goal list

321
00:14:44,902 --> 00:14:46,504
and segment it by the awareness levels.

322
00:14:46,844 --> 00:14:49,227
When our AI changed awareness levels,

323
00:14:49,327 --> 00:14:51,128
we would just swap out that goal list and say,

324
00:14:51,168 --> 00:14:52,930
hey, you might wanna look, there's some new goals here.

325
00:14:53,896 --> 00:14:55,057
And that worked out great.

326
00:14:55,157 --> 00:14:58,239
That actually was a, to be honest,

327
00:14:58,259 --> 00:15:01,701
that was a late addition to our system

328
00:15:01,781 --> 00:15:04,984
that gave us just a little more CPU.

329
00:15:07,185 --> 00:15:08,466
And of course, we had high-level systems.

330
00:15:08,546 --> 00:15:10,267
And honestly, this is where I feel like

331
00:15:10,307 --> 00:15:13,169
we had our biggest win for dealing with so many AI.

332
00:15:13,369 --> 00:15:15,151
We had several high-level systems.

333
00:15:15,971 --> 00:15:18,133
Today I'm gonna tell you about this investigation system,

334
00:15:18,833 --> 00:15:20,654
partly because it started in the planner

335
00:15:20,814 --> 00:15:22,796
and we managed to extract it.

336
00:15:23,676 --> 00:15:29,938
Um, so, you know, early on we, we've always had some sort of search behavior.

337
00:15:29,978 --> 00:15:35,119
When a, you can see there's a dead orc there in the, in the middle of the

338
00:15:35,159 --> 00:15:39,781
walkway, when orcs would encounter something that's not quite right, they

339
00:15:39,801 --> 00:15:43,282
would start searching and we had investigate goal, investigate goal would

340
00:15:43,322 --> 00:15:45,803
say, yeah, I recognize there's something not quite right here.

341
00:15:45,943 --> 00:15:47,303
Why don't you go off and do some searches?

342
00:15:48,023 --> 00:15:48,383
Now we're good.

343
00:15:49,452 --> 00:15:55,113
for two or three orcs and the little box levels that we tend to write early on.

344
00:15:56,893 --> 00:16:01,435
If you've played our game we have a few more than two or three orcs and they're pretty close

345
00:16:01,475 --> 00:16:07,476
together sometimes. It started looking silly when we'd get 10, 20, 30 orcs all seeing this dead body

346
00:16:07,516 --> 00:16:14,098
all going whoa I better search. It looked ridiculous. Naturally and you know this is not news

347
00:16:14,138 --> 00:16:18,299
you you put in something like oh I got it or you know well someone else is searching I'm not going

348
00:16:18,319 --> 00:16:18,759
to search now.

349
00:16:19,260 --> 00:16:19,941
And that worked great.

350
00:16:20,542 --> 00:16:22,904
Or to encounter a dead body, they'd say, oh, someone else

351
00:16:22,944 --> 00:16:23,405
is searching.

352
00:16:23,825 --> 00:16:24,686
OK, I'll let them go.

353
00:16:24,986 --> 00:16:26,248
But we were hitting our planner.

354
00:16:26,768 --> 00:16:28,510
It's the goals they have to determine.

355
00:16:28,730 --> 00:16:29,912
Like, oh, no, someone else is planning.

356
00:16:29,932 --> 00:16:31,613
And to be honest, we still wanted

357
00:16:31,633 --> 00:16:32,875
them to react to the dead body.

358
00:16:32,915 --> 00:16:35,477
We just wanted the, boy, I don't know

359
00:16:35,517 --> 00:16:36,619
what the reaction for that one was.

360
00:16:37,019 --> 00:16:38,400
But basically, we wanted them to just acknowledge,

361
00:16:38,420 --> 00:16:39,562
like, this is not good.

362
00:16:40,102 --> 00:16:41,343
I see he's doing something.

363
00:16:41,604 --> 00:16:42,144
I'm going to move on.

364
00:16:43,111 --> 00:16:46,292
So we actually still had to have our investigate goal go live.

365
00:16:46,753 --> 00:16:48,673
It then would have to hit up these actions, say,

366
00:16:48,753 --> 00:16:49,494
oh, should I be searching?

367
00:16:49,594 --> 00:16:50,594
No, someone else is searching.

368
00:16:50,934 --> 00:16:54,336
Maybe I should just look around and hope I find something.

369
00:16:54,416 --> 00:16:55,897
No, someone else is searching.

370
00:16:55,977 --> 00:16:56,597
I don't want to do that.

371
00:16:57,137 --> 00:17:00,459
Oh, I got to just do my react to dead body,

372
00:17:00,919 --> 00:17:03,440
but I'm not going to do anything about it animation.

373
00:17:05,541 --> 00:17:07,502
So we're still hitting our planner,

374
00:17:08,222 --> 00:17:10,263
and there's a lot of work for 10, 20, 30 orcs.

375
00:17:12,602 --> 00:17:15,166
Instead, what we did is we took that logic,

376
00:17:15,387 --> 00:17:17,590
and we just made a whole new system out of it,

377
00:17:17,650 --> 00:17:18,832
the investigation system.

378
00:17:18,852 --> 00:17:21,917
It wasn't a very complex system, but it was great,

379
00:17:22,017 --> 00:17:24,441
because now when orcs see something

380
00:17:24,621 --> 00:17:26,805
that doesn't look right, they...

381
00:17:27,506 --> 00:17:29,468
don't hit the planner, they just tell the system,

382
00:17:29,508 --> 00:17:31,010
hey, I see something here,

383
00:17:31,070 --> 00:17:32,472
maybe I should be doing something about it.

384
00:17:32,972 --> 00:17:35,796
That system can then just gather everyone and go,

385
00:17:35,816 --> 00:17:36,997
oh, well yeah, you're closest,

386
00:17:37,097 --> 00:17:39,340
oh, but you're a captain, maybe you should be searching.

387
00:17:39,360 --> 00:17:41,382
You know, it can figure out who's the best person

388
00:17:41,422 --> 00:17:42,243
to be doing the search.

389
00:17:42,824 --> 00:17:44,726
It could then, it just basically assigns them a role.

390
00:17:45,920 --> 00:17:48,461
Now our planner isn't bothering with like,

391
00:17:48,821 --> 00:17:50,201
oh, is someone else searching?

392
00:17:50,281 --> 00:17:52,322
And what disturbances are out there in the world?

393
00:17:52,422 --> 00:17:55,083
No, our planner is simply saying, oh, I have a role.

394
00:17:55,363 --> 00:17:56,564
I'm lead investigator.

395
00:17:57,164 --> 00:18:00,225
And it can go through the rich set of actions

396
00:18:00,245 --> 00:18:01,446
that we have for investigating.

397
00:18:02,086 --> 00:18:05,467
Or its role could just be dismiss immediately.

398
00:18:05,547 --> 00:18:08,808
And it would just do that one single action it had to do.

399
00:18:10,079 --> 00:18:11,020
That gained us a lot.

400
00:18:11,280 --> 00:18:13,983
We all of a sudden now, our planner is only reacting

401
00:18:14,023 --> 00:18:16,266
to roles, all the logic of determining

402
00:18:16,306 --> 00:18:18,108
who should be doing what was in another system

403
00:18:18,448 --> 00:18:19,870
that could handle it much more elegantly.

404
00:18:20,410 --> 00:18:22,813
And honestly, you can see I have three roles listed there.

405
00:18:23,314 --> 00:18:24,996
That watch investigator's back, that was added.

406
00:18:26,017 --> 00:18:32,200
that was added after the system was spun up, it was so easy to add. That was so nice because I

407
00:18:32,240 --> 00:18:37,203
could just, you know, add another bucket of, oh, we need people who are watching other people's

408
00:18:37,263 --> 00:18:42,886
back. And obviously the goal and action for that is really easy. Just follow this guy.

409
00:18:44,787 --> 00:18:47,809
So it also made expanding the system, not only did we gain CPU,

410
00:18:47,949 --> 00:18:49,570
it made expanding the system much easier.

411
00:18:52,249 --> 00:18:53,211
I'm going to conclude on that.

412
00:18:53,592 --> 00:18:55,815
I'm going to urge you all, whether you're using GOAP or not,

413
00:18:56,236 --> 00:18:58,220
look at your planners and see if there's logic

414
00:18:58,240 --> 00:19:00,564
that you can maybe move out to either lower level systems

415
00:19:00,764 --> 00:19:01,746
or higher level systems.

416
00:19:03,283 --> 00:19:06,624
Doing so, I almost guarantee it's going to reduce the CPU load of your AI.

417
00:19:07,724 --> 00:19:11,806
These systems that you'll be moving things to probably will handle that logic quicker,

418
00:19:11,846 --> 00:19:12,506
more efficiently.

419
00:19:13,626 --> 00:19:15,987
And you'll also find improving your behaviors becomes easier.

420
00:19:16,287 --> 00:19:21,449
It's, oh, adding random delays is so easy when it's just some separate system.

421
00:19:21,489 --> 00:19:24,230
That's all it cares about, and the planner just sits and waits and doesn't even know

422
00:19:24,290 --> 00:19:25,950
that, oh, there's going to be something happening.

423
00:19:27,831 --> 00:19:29,851
So I'm going to wrap up on that.

424
00:19:31,942 --> 00:19:32,863
Got to give a quick plug.

425
00:19:33,443 --> 00:19:35,724
We're actually looking for an AI programmer right now.

426
00:19:35,844 --> 00:19:38,466
So please visit our website, talk to me,

427
00:19:38,566 --> 00:19:40,006
talk to, I think, Matt Teitelbaum,

428
00:19:40,987 --> 00:19:42,548
my partner in crime on this project.

429
00:19:43,208 --> 00:19:44,549
And we'd love to talk with you

430
00:19:44,609 --> 00:19:46,690
about all the wonderful opportunities.

431
00:19:46,730 --> 00:19:48,951
Not to sound too much like HR here, but there you go.

432
00:19:49,611 --> 00:19:51,732
All right, next up, we're gonna have Chris

433
00:19:52,072 --> 00:19:53,773
gonna share his experience with Tomb Raider.

434
00:19:53,793 --> 00:19:56,375
Oh, I gotta move this thing over.

435
00:20:04,400 --> 00:20:05,781
Hi, I'm Chris Conway.

436
00:20:05,881 --> 00:20:11,182
I work on the lead AI engineer for Tomb Raider, both the one

437
00:20:11,242 --> 00:20:14,063
from 2013 and the one we're currently working on.

438
00:20:15,323 --> 00:20:18,864
I started with GOAP in 2006 when our lead designer came

439
00:20:18,904 --> 00:20:21,565
back from GDC and said, hey, I just saw a presentation on

440
00:20:21,605 --> 00:20:22,485
this thing called GOAP.

441
00:20:22,905 --> 00:20:25,106
It'd be really cool if we could do that in our game that

442
00:20:25,366 --> 00:20:26,646
we were just starting at that time.

443
00:20:27,446 --> 00:20:30,627
And I managed to get it up and running from scratch in just

444
00:20:30,687 --> 00:20:31,467
two or three weeks.

445
00:20:31,647 --> 00:20:33,628
It really wasn't that difficult to do.

446
00:20:34,348 --> 00:20:40,771
We iterated on it for a while for that title and things happened and that project got cancelled

447
00:20:40,871 --> 00:20:47,053
and then I went to work on something else and came back to Crystal in 2010 and resurrected

448
00:20:47,093 --> 00:20:50,475
this code for Tomb Raider which was released in 2013.

449
00:20:53,477 --> 00:20:59,740
Most of the time spent on the AI for Tomb Raider is spent on the maintenance of the

450
00:20:59,780 --> 00:21:03,841
goals and actions, creating new goals and actions and making them better.

451
00:21:04,522 --> 00:21:06,102
Not really the GOAP library itself.

452
00:21:06,703 --> 00:21:11,705
That still, written in 2006, it's still about 90% of what it was back then.

453
00:21:12,445 --> 00:21:16,447
So it hasn't changed much, except for a few new features that I'm going to talk about

454
00:21:16,487 --> 00:21:21,149
today that are extensions to what we originally had in the GOAP system.

455
00:21:23,606 --> 00:21:30,949
So right off the top, I added the idea of situational costs for actions, which is the

456
00:21:31,029 --> 00:21:38,491
idea that perhaps a plan with an inexpensive primary action, like a melee attack, might

457
00:21:38,532 --> 00:21:43,493
become expensive if the NPC needs to move a long distance to get there.

458
00:21:44,566 --> 00:21:47,908
So for example, exactly there, the melee attack might have a

459
00:21:47,948 --> 00:21:51,610
cost of 1, but because the NPC needs to move 20 meters, the

460
00:21:51,650 --> 00:21:54,571
goto has a cost of 20, and the planned cost ends up being 21.

461
00:21:55,552 --> 00:21:59,654
Whereas the range attack, which for whatever reason it's tuned

462
00:21:59,694 --> 00:22:02,435
to be more expensive, perhaps because it uses up ammo or

463
00:22:02,475 --> 00:22:05,196
something like that, it has a cost of 10, but because they're

464
00:22:05,216 --> 00:22:08,358
already in range to do this attack, the goto only has a

465
00:22:08,398 --> 00:22:11,320
cost of 1, and we end up deciding to do a range attack

466
00:22:11,360 --> 00:22:12,180
when they're at a distance.

467
00:22:13,581 --> 00:22:20,566
So it's something that seemed very natural, very natural extension to GOAP and we use it for almost every plan. It has an effect on it.

468
00:22:22,477 --> 00:22:27,578
It's much better than putting a hard limit on things like attacks, for example, where

469
00:22:27,618 --> 00:22:32,159
we say we can only do a melee attack if you're within five meters, and you can only do a

470
00:22:32,219 --> 00:22:36,300
ranged attack if you're more than five meters away, because sometimes you run out of ammo,

471
00:22:36,420 --> 00:22:41,161
so a ranged attack isn't possible, so I need to run up to do it, or my melee weapon is

472
00:22:41,201 --> 00:22:45,522
destroyed so I need to move back to do the ranged attack, and the Goat Planner takes

473
00:22:45,602 --> 00:22:46,602
care of all that kind of stuff.

474
00:22:49,411 --> 00:22:54,675
It's also useful when you need to have different variations.

475
00:22:54,835 --> 00:22:59,978
So for example, a ranged attack might be less expensive when I have a machine gun than when I have a bow.

476
00:23:00,199 --> 00:23:05,342
So when I have a machine gun equipped, I'm more likely to pick that action for my attack plan.

477
00:23:06,283 --> 00:23:07,644
The same goes for a melee attack.

478
00:23:07,704 --> 00:23:11,767
Maybe if I'm dual wielding swords, it's something that's very inexpensive,

479
00:23:11,807 --> 00:23:16,210
but if I only have my fists, it becomes more expensive so that I want to do it less often.

480
00:23:18,413 --> 00:23:24,100
It's also useful for creating competing complex multi-action methods for the same requirement.

481
00:23:24,140 --> 00:23:29,427
So we have, at least in one of the games, we had the ability of some of our NPCs to

482
00:23:29,467 --> 00:23:29,808
fly.

483
00:23:30,308 --> 00:23:34,774
So they would make a choice of, do I want to run to my target to do the melee attack

484
00:23:34,914 --> 00:23:34,954
or...

485
00:23:35,795 --> 00:23:43,178
Is it worthwhile to spend the cost of a requirement for the fly-to action is to take off and then

486
00:23:43,218 --> 00:23:46,700
of course I need to be in a landed state when I do the melee attack.

487
00:23:46,880 --> 00:23:54,283
And the cost ends up being the total of take-off, fly-to, land, and melee attack.

488
00:23:54,323 --> 00:23:58,265
And it makes sense when they have to fly a certain distance, but if they're very close

489
00:23:58,285 --> 00:24:00,946
to their target it makes more sense to just walk there or run there.

490
00:24:04,585 --> 00:24:08,487
Another thing we added was the ability to have motives.

491
00:24:08,507 --> 00:24:12,348
This is something I did on Godfather, inspired by the

492
00:24:12,408 --> 00:24:15,569
Sims, where basically they have a set of motives that

493
00:24:15,609 --> 00:24:19,790
drive their behavior, like hunger or thirst or I need to

494
00:24:19,830 --> 00:24:22,051
be entertained or I need to socialize or

495
00:24:22,091 --> 00:24:22,791
something like this.

496
00:24:23,251 --> 00:24:28,433
And we combined that with the planner to do some very

497
00:24:28,453 --> 00:24:29,213
interesting things.

498
00:24:30,909 --> 00:24:36,430
So we can use motives to control the goals that we use.

499
00:24:36,490 --> 00:24:39,271
So for example, the investigate goal

500
00:24:39,311 --> 00:24:41,232
might be something that they only

501
00:24:41,272 --> 00:24:43,172
consider if their suspicion motive is

502
00:24:43,252 --> 00:24:44,212
above a certain level.

503
00:24:44,292 --> 00:24:45,953
So maybe the first time you throw a rock,

504
00:24:47,153 --> 00:24:48,613
their suspicion goes up a little bit

505
00:24:48,653 --> 00:24:50,074
and they just have a reaction to it.

506
00:24:50,114 --> 00:24:52,074
They don't actually plan to investigate it.

507
00:24:52,094 --> 00:24:54,515
And then the second time, they're like, what was that?

508
00:24:54,575 --> 00:24:55,555
Let me go check that out.

509
00:24:55,595 --> 00:24:56,595
And they make a plan to do it.

510
00:25:00,912 --> 00:25:05,655
We also have the ability for actions to have an effect on the motive.

511
00:25:05,716 --> 00:25:15,203
So for example, maybe a successful attack reduces your fear, which means that you're going to be less likely to flee if dangerous things keep happening that are increasing your fear.

512
00:25:19,306 --> 00:25:21,128
We also have the option to...

513
00:25:21,148 --> 00:25:26,092
We added something where we can submit multiple plan candidates to the planner.

514
00:25:28,669 --> 00:25:33,413
So, for example, when you have a usable object,

515
00:25:33,794 --> 00:25:34,734
let me skip ahead here,

516
00:25:35,915 --> 00:25:37,737
perhaps you have a usable object that says,

517
00:25:37,837 --> 00:25:38,658
I need to...

518
00:25:42,201 --> 00:25:44,963
I want to use this object to address my hunger

519
00:25:45,043 --> 00:25:48,446
or something like that, and perhaps to do that,

520
00:25:48,506 --> 00:25:49,647
I need to do some other things.

521
00:25:57,266 --> 00:25:57,566
Sorry.

522
00:26:01,188 --> 00:26:04,769
So they might say, there are two or three objects that

523
00:26:04,809 --> 00:26:06,850
can satisfy my hunger need.

524
00:26:06,910 --> 00:26:08,931
Let me go ahead and submit a plan option

525
00:26:08,971 --> 00:26:09,891
for each one of those.

526
00:26:10,112 --> 00:26:12,433
And I'll figure out whichever one is the easiest

527
00:26:12,473 --> 00:26:15,994
to use with its requirements and so forth, or the distance to it,

528
00:26:16,014 --> 00:26:16,734
or this kind of thing.

529
00:26:16,995 --> 00:26:17,935
That's the one I'll choose.

530
00:26:19,996 --> 00:26:23,637
And that can also be used for combat, you know, if there are multiple targets, maybe

531
00:26:23,677 --> 00:26:29,160
I'll submit a plan option for, you know, a target that is far away, which is currently

532
00:26:29,180 --> 00:26:35,762
my primary target, and maybe I have a secondary target, and I'll want to consider plans for

533
00:26:35,822 --> 00:26:40,204
it and I'll give a penalty to the cost on the actions for the secondary target so that

534
00:26:40,224 --> 00:26:41,545
I want to stay with my current one.

535
00:26:42,045 --> 00:26:48,988
So if I'm engaged with an enemy that is far away and I'm shooting it, I want to continue shooting with it.

536
00:26:49,008 --> 00:26:55,872
But if another one jumps right out in front of me, I can do a melee attack on it and it's a much less expensive plan.

537
00:26:55,912 --> 00:26:58,113
So I'll go ahead and switch to the target in that situation.

538
00:27:01,084 --> 00:27:06,106
We can also have the ability for an action to submit different requirement lists.

539
00:27:06,626 --> 00:27:11,329
So for example, perhaps a range attack wants the planner to consider,

540
00:27:11,649 --> 00:27:17,552
well, let's think about doing an attack with my bow, which I currently have equipped, or I want you to also consider making a plan

541
00:27:17,612 --> 00:27:21,914
with my machine gun, but I might need ammo for that. I'm not sure, you know,

542
00:27:21,974 --> 00:27:24,175
it's gonna, I'll let the planner figure that out, and then it'll...

543
00:27:25,076 --> 00:27:29,459
calculate the costs for all of that and determine which one makes the most sense to do right now.

544
00:27:29,800 --> 00:27:35,985
So we're letting the planner take care of a lot of this work that we would normally need to rely on the code to make decisions for.

545
00:27:39,008 --> 00:27:42,691
We can also have the ability for situational requirements.

546
00:27:43,582 --> 00:27:45,625
Jumping out a little bit, this is what I was talking about.

547
00:27:45,665 --> 00:27:47,007
So for example, if they're hungry

548
00:27:47,047 --> 00:27:48,929
and they decide to use the dinner table object,

549
00:27:50,211 --> 00:27:52,094
perhaps the dinner table object requires

550
00:27:52,134 --> 00:27:53,976
that they have food and a drink.

551
00:27:54,016 --> 00:27:55,879
And then the planner will go out and find,

552
00:27:56,480 --> 00:27:57,862
how can I satisfy those?

553
00:27:58,883 --> 00:28:02,466
Even though the use object had no idea about food and drink,

554
00:28:02,526 --> 00:28:04,548
it knows that the object it's required

555
00:28:04,588 --> 00:28:07,991
to use to satisfy its goal requires these other things.

556
00:28:08,672 --> 00:28:10,073
And it's going to have to put together

557
00:28:10,113 --> 00:28:13,456
a plan to meet all of those dynamic situational

558
00:28:13,496 --> 00:28:13,996
requirements.

559
00:28:14,437 --> 00:28:15,858
So for example, a plan might be.

560
00:28:16,499 --> 00:28:21,703
put together to go to the food server, use the food server to get the food that my dinner

561
00:28:21,723 --> 00:28:25,807
table is going to require, go to the bar, use the bar to get a drink, and then finally

562
00:28:25,867 --> 00:28:30,231
I can go to my dinner table, I've met all the requirements, I can use it and my hunger

563
00:28:30,291 --> 00:28:32,372
and perhaps my thirst will be satisfied.

564
00:28:34,294 --> 00:28:39,399
And performing actions can have an effect on the state of the inventory as well, so

565
00:28:39,419 --> 00:28:41,961
the food and drink get consumed when I use the dinner table.

566
00:28:45,323 --> 00:28:52,089
We also might have something where perhaps a ranged attack action requires the machine gun, as I mentioned earlier.

567
00:28:52,509 --> 00:28:55,972
But the machine gun, the ranged attack action doesn't know anything about ammo.

568
00:28:56,813 --> 00:29:02,498
It's going to leave it to the planner to determine that, well, if I'm going to use the machine gun, I need to have a certain amount of ammo.

569
00:29:03,078 --> 00:29:11,986
And that means I'm going to have to go out and, you know, go to a drawer or something like that as part of my plan to use this and acquire the ammo in order to do the ranged attack.

570
00:29:16,597 --> 00:29:23,301
Another thing we added is very important to the process is the ability for parent actions

571
00:29:23,401 --> 00:29:28,744
or the goal itself to monitor the child actions that are satisfying its requirements.

572
00:29:29,565 --> 00:29:34,308
So for example, the range attack action might determine, well, I don't have line of sight

573
00:29:34,328 --> 00:29:39,011
from where I am right now, and I don't see any cover points where I'm going to be able

574
00:29:39,031 --> 00:29:39,791
to shoot my target.

575
00:29:39,851 --> 00:29:44,294
I'm just going to tell the go-to, I'm going to fulfill...

576
00:29:45,054 --> 00:29:49,518
I'm going to push forward a requirement that I need to be within five meters of my target

577
00:29:49,558 --> 00:29:50,919
and hope that I'll get line of sight.

578
00:29:51,279 --> 00:29:56,343
But while I'm heading there, while my child action is running, satisfying my requirements,

579
00:29:56,363 --> 00:30:00,306
I'm going to continue to monitor the status of my NPC.

580
00:30:00,326 --> 00:30:04,129
And if I get line of sight, I've got to tell my child action, okay, I'm happy.

581
00:30:04,469 --> 00:30:04,829
You're done.

582
00:30:04,849 --> 00:30:06,550
You don't have to go all the way to the target.

583
00:30:06,610 --> 00:30:07,771
I've got line of sight right now.

584
00:30:08,312 --> 00:30:09,072
I can continue.

585
00:30:09,713 --> 00:30:11,154
I can continue with the plan myself.

586
00:30:12,804 --> 00:30:20,266
This also enables the parent action or goal to dynamically change the requirements while the child action is in progress.

587
00:30:20,746 --> 00:30:29,988
So for example, while we're heading towards the target for a range attack, perhaps someone leaves their cover point or they die or something like that,

588
00:30:30,028 --> 00:30:39,611
and so we're able to take their cover point, and so now my range attack action can tell, change the requirements that the child go-to action is using,

589
00:30:39,751 --> 00:30:41,792
and say, I want you to go to that cover point instead.

590
00:30:43,747 --> 00:30:48,771
This forces actions to monitor their requirements to make sure they're still feasible.

591
00:30:49,151 --> 00:30:54,755
So it's almost like the validity check or viability check is running while the action

592
00:30:54,815 --> 00:30:59,458
is still active to make sure in case the requirements are changing that we can still fulfill them.

593
00:30:59,598 --> 00:31:05,823
And it also puts a responsibility on the parent action or goal that if they're going to change

594
00:31:05,863 --> 00:31:10,186
their requirements, perhaps they want to consider that it's even possible to fulfill them.

595
00:31:13,554 --> 00:31:20,118
Another important thing is that we have our goal or action have the ability to evaluate

596
00:31:20,298 --> 00:31:27,903
and be aware of the current state of the child actions and we may want to decide at some

597
00:31:27,923 --> 00:31:28,283
point that

598
00:31:28,303 --> 00:31:28,403
the

599
00:31:28,423 --> 00:31:28,503
the

600
00:31:28,523 --> 00:31:28,723
the

601
00:31:28,743 --> 00:31:28,803
the

602
00:31:28,843 --> 00:31:28,963
the

603
00:31:29,103 --> 00:31:29,303
the

604
00:31:29,323 --> 00:31:29,403
the

605
00:31:29,504 --> 00:31:29,564
the

606
00:31:29,584 --> 00:31:29,644
the

607
00:31:29,664 --> 00:31:29,724
the

608
00:31:29,744 --> 00:31:29,804
the

609
00:31:29,824 --> 00:31:29,884
the

610
00:31:29,904 --> 00:31:29,964
the

611
00:31:30,564 --> 00:31:32,285
we no longer want to do this.

612
00:31:32,485 --> 00:31:34,827
So for example, when the range attack action

613
00:31:34,927 --> 00:31:37,789
is moving to get into range for a range attack,

614
00:31:38,089 --> 00:31:41,311
maybe it decides that the target has become injured or dead,

615
00:31:41,371 --> 00:31:42,712
and I don't want to do this anymore.

616
00:31:42,772 --> 00:31:44,253
So I'm just going to cancel the plan.

617
00:31:44,313 --> 00:31:47,255
So even though the go-to is the active action,

618
00:31:47,455 --> 00:31:49,377
it's the parent action that's monitoring,

619
00:31:49,397 --> 00:31:52,319
or the goal that is monitoring the plan

620
00:31:52,379 --> 00:31:55,581
and has the ability to make the determination that we

621
00:31:55,621 --> 00:31:56,541
should no longer do this.

622
00:31:59,163 --> 00:32:01,127
or perhaps change to a different target,

623
00:32:01,427 --> 00:32:02,128
if that's feasible.

624
00:32:05,998 --> 00:32:12,042
The goal or action can use this awareness of the current state of the plan to communicate

625
00:32:12,082 --> 00:32:13,062
with other NPCs.

626
00:32:13,162 --> 00:32:19,826
Like maybe when I make a plan to do some kind of attack where I'm going to say, okay, I'm

627
00:32:19,866 --> 00:32:23,607
going to go get her, you know, and I'm on my way, I'm going to say, okay guys, I'm going

628
00:32:23,628 --> 00:32:28,470
to go attack her and I'm this far away and I'll probably be there in two seconds.

629
00:32:28,730 --> 00:32:30,951
And that lets my friends know.

630
00:32:32,632 --> 00:32:36,933
hey, my friend is doing this, so maybe it's going to affect the way I'm behaving.

631
00:32:37,673 --> 00:32:43,515
It also provides an option for the feedback to the player, because especially with a planning

632
00:32:43,555 --> 00:32:47,376
system when you have complicated plans, it's very important to communicate to the player

633
00:32:47,836 --> 00:32:53,858
what they're doing and what their intention is, otherwise sometimes they look confused,

634
00:32:53,898 --> 00:32:54,859
like why is he doing that?

635
00:32:54,879 --> 00:32:55,759
That makes no sense.

636
00:32:55,799 --> 00:33:00,420
They have to communicate to the player, like I'm doing this because this is my goal.

637
00:33:01,757 --> 00:33:10,110
So by monitoring the state of the plan from the parent goal or action, we're able to provide a place to make that communication.

638
00:33:12,290 --> 00:33:17,736
Another thing we added was the ability to have open-ended actions, you know, where the

639
00:33:17,936 --> 00:33:19,637
action remains active.

640
00:33:19,677 --> 00:33:22,300
It doesn't just end the plan after one iteration.

641
00:33:22,420 --> 00:33:28,646
And an example of that is a ranged attack action where they originally intended to take

642
00:33:28,806 --> 00:33:33,771
one shot at their target, but if the situation is still feasible and viable.

643
00:33:34,232 --> 00:33:39,700
They're going to have tasks that they perform during this action, like reload, stepping

644
00:33:39,760 --> 00:33:42,584
out from cover, stepping back in, aiming, and firing.

645
00:33:43,586 --> 00:33:45,689
And they'll continue to run the action.

646
00:33:48,140 --> 00:33:53,262
This requires maintenance of the remaining cost of the action so that replanning can still

647
00:33:53,302 --> 00:33:57,824
happen for the same goal. So yes, I have a plan to range attack and I'm going to keep

648
00:33:57,884 --> 00:34:03,566
range attacking as long as it's viable, but I need to provide a remaining cost so that the

649
00:34:03,606 --> 00:34:07,988
planner can still make a decision to say, well, you know, I know you're doing this and

650
00:34:08,048 --> 00:34:11,569
that's good, but I found a cheaper thing. You can now do a melee attack because somebody

651
00:34:11,609 --> 00:34:12,270
has stepped right up.

652
00:34:12,770 --> 00:34:14,351
up to you or they've approached you.

653
00:34:14,431 --> 00:34:16,252
So we still allow the planner to run.

654
00:34:16,973 --> 00:34:19,875
And to do that, we need to provide a remaining cost

655
00:34:19,915 --> 00:34:20,735
for the current plan.

656
00:34:22,616 --> 00:34:24,678
The main purpose of this is it prevents us

657
00:34:24,718 --> 00:34:27,540
from repeatedly having to construct, start, and finish

658
00:34:27,580 --> 00:34:28,520
an identical plan.

659
00:34:32,683 --> 00:34:36,246
And it's just a much more efficient way

660
00:34:36,306 --> 00:34:38,227
to go about things because planning is expensive.

661
00:34:40,229 --> 00:34:44,812
But again, if we find ourselves in a situation where we have a better plan for the goal because

662
00:34:44,852 --> 00:34:50,356
we've calculated the remaining cost, the melee attack option might come up and replace the

663
00:34:50,396 --> 00:34:50,776
current one.

664
00:34:54,819 --> 00:35:00,263
Another thing we added was I started keeping statistics on how successful the NPCs were

665
00:35:00,423 --> 00:35:06,047
at doing on their goals and their actions and that provides the opportunity for them

666
00:35:06,107 --> 00:35:08,529
to learn from their success rates.

667
00:35:09,129 --> 00:35:14,631
So for example, maybe the melee attack is something that an NPC of a certain type usually

668
00:35:14,711 --> 00:35:15,071
fails.

669
00:35:15,551 --> 00:35:20,573
And what we can do is tune the cost of the melee attack to reflect that so that they're

670
00:35:20,613 --> 00:35:21,654
less likely to do it.

671
00:35:21,714 --> 00:35:25,475
Maybe they'll only do the melee attack if they're failing all the time if the target

672
00:35:25,515 --> 00:35:26,575
is right next to them.

673
00:35:27,196 --> 00:35:33,518
Or perhaps they'll never want to do it except if their other options are unavailable.

674
00:35:33,578 --> 00:35:37,439
For example, if they're on cooldown or they're out of ammo or their weapon's broken or something

675
00:35:37,479 --> 00:35:37,780
like that.

676
00:35:38,720 --> 00:35:44,543
And it works both ways, you know, maybe the ranged attack is always failing because my weapon is unreliable or something like this

677
00:35:44,603 --> 00:35:48,605
And so now I'm more willing to do the the ranged attack cost goes up

678
00:35:48,665 --> 00:35:52,567
and now it's more viable to do a melee attack from further away because

679
00:35:53,568 --> 00:35:57,590
It will have a lower cost even with the added movement requirement to do it

680
00:35:59,485 --> 00:36:04,087
The statistics generated from the success rates for the plans and the goals and actions

681
00:36:04,187 --> 00:36:06,328
can be saved with the game data.

682
00:36:07,368 --> 00:36:09,729
We can save them at tunable milestones.

683
00:36:09,769 --> 00:36:12,410
This is one of the big questions for us is how do we do this?

684
00:36:12,830 --> 00:36:17,351
Do we really want the end game NPCs to be affected by what happened at the beginning

685
00:36:17,391 --> 00:36:17,791
of the game?

686
00:36:18,172 --> 00:36:19,632
So we have to make decisions about that.

687
00:36:21,053 --> 00:36:27,460
And also we want to make sure that they're tuned to specific types of NPCs, so they're attached to the GOAP setting.

688
00:36:27,540 --> 00:36:33,146
So an NPC that has a set of goals and actions that are primarily aimed towards ranged attacks,

689
00:36:33,607 --> 00:36:39,974
perhaps it'll be different from one, they'll have different statistics from one that has goals and actions primarily for melee attacks.

690
00:36:42,259 --> 00:36:49,951
We also require different GOAP settings for different NPC types because of this.

691
00:36:49,971 --> 00:36:51,373
Yeah, like I mentioned.

692
00:36:52,829 --> 00:36:56,250
OK, and then finally, one of the big complaints

693
00:36:56,370 --> 00:37:00,611
from our designers was that the goal list

694
00:37:00,651 --> 00:37:01,952
was somewhat inflexible.

695
00:37:02,032 --> 00:37:03,952
It was just a prioritized list of goals.

696
00:37:04,092 --> 00:37:07,353
So I exposed it in their environment.

697
00:37:08,554 --> 00:37:11,675
I created a behavior graph where the goal

698
00:37:11,715 --> 00:37:15,816
that they're going to pursue can be selected by a script,

699
00:37:16,836 --> 00:37:18,096
by a visual scripting.

700
00:37:18,817 --> 00:37:22,561
So for example, they can add rules that the code doesn't even know about.

701
00:37:22,601 --> 00:37:26,886
Like if I'm in a pre-combat state, here are the things I want to think about doing right now.

702
00:37:27,026 --> 00:37:32,232
If I'm in combat, I want to do things related to attacking and this kind of thing.

703
00:37:32,252 --> 00:37:37,458
And that way I'm not wasting time pursuing goals that are not interesting for my current state.

704
00:37:39,515 --> 00:37:44,497
They can also do all kinds of things to customize when the order that goals are in, you know,

705
00:37:44,637 --> 00:37:46,017
or which ones are available.

706
00:37:46,197 --> 00:37:53,340
So, you know, perhaps they only want to converse if the motive for the loneliness is going

707
00:37:53,360 --> 00:37:58,021
to drive it, or if the player hasn't done something recently, or if the target has a

708
00:37:58,061 --> 00:38:01,803
certain weapon equipped, you know, maybe it's more important to do a certain goal, and they

709
00:38:01,823 --> 00:38:03,963
can control all of that from the behavior graph.

710
00:38:04,504 --> 00:38:09,947
And I have a very big slide to show an example of the behavior graph that the designers maintain.

711
00:38:10,868 --> 00:38:14,430
Up in the upper left-hand corner is where it all starts, and they're making a decision

712
00:38:14,470 --> 00:38:17,232
there to say, am I in combat or am I in low alert?

713
00:38:18,413 --> 00:38:22,856
And they're pursuing a set of goals, depending on which one of those they're in, and then

714
00:38:22,896 --> 00:38:23,857
they can loop back.

715
00:38:24,637 --> 00:38:26,118
They can even loop back onto each other.

716
00:38:26,158 --> 00:38:27,239
It isn't simply a tree.

717
00:38:27,680 --> 00:38:28,320
It's a graph.

718
00:38:28,580 --> 00:38:31,683
And they can go down and finally it ends at the bottom

719
00:38:31,823 --> 00:38:32,723
there with the idle.

720
00:38:32,803 --> 00:38:34,665
They'll always be able to idle if they can't find

721
00:38:34,705 --> 00:38:35,345
something else to do.

722
00:38:37,172 --> 00:38:39,112
So those are the main extensions to the system.

723
00:38:39,212 --> 00:38:42,373
I was just going to go very quickly over debugging,

724
00:38:42,433 --> 00:38:45,214
because it's absolutely critical to any planning system.

725
00:38:45,654 --> 00:38:48,075
Designers tend to force behaviors via scripting

726
00:38:48,115 --> 00:38:50,475
when they don't understand what an NPC is doing

727
00:38:50,495 --> 00:38:51,556
and why they're doing it.

728
00:38:52,696 --> 00:38:55,637
And they want to make sure that the NPC is doing

729
00:38:55,677 --> 00:38:56,577
what they expect them to do.

730
00:38:57,714 --> 00:39:10,663
Scripting is great for demos or extremely linear sections of the game, but situations with systemic behavior are just fundamentally, without systemic behavior, are less interesting and have very little replay value.

731
00:39:10,683 --> 00:39:15,586
So we really want to encourage going away from scripting and allowing dynamic gameplay.

732
00:39:16,827 --> 00:39:20,812
Complex plans can be confusing to observe, that's why they need to communicate.

733
00:39:21,753 --> 00:39:24,496
But complex plans are the exception, not a common occurrence.

734
00:39:24,576 --> 00:39:26,338
This is a fundamental aspect of GOAT.

735
00:39:26,939 --> 00:39:31,103
As Peter was saying, the planner always wants to choose the least expensive plan for a goal.

736
00:39:33,306 --> 00:39:38,970
So some of the common questions designers have while they're looking at the game is

737
00:39:39,310 --> 00:39:43,813
what is he doing right now in his plan, what are the actions that it consists of, which

738
00:39:43,913 --> 00:39:46,014
action is he on, this kind of thing.

739
00:39:46,054 --> 00:39:49,236
They also want to know, well why isn't he doing something else right now?

740
00:39:50,877 --> 00:39:54,539
you know, why haven't we been able to find something better to do since this plan started?

741
00:39:55,120 --> 00:39:59,022
Then finally, before he did what he's doing, you know, maybe 30 seconds ago, what did,

742
00:39:59,562 --> 00:40:04,365
he did something back then and I don't understand why he did it. So I have to provide on-screen

743
00:40:04,385 --> 00:40:05,766
debugging for all this kind of thing.

744
00:40:06,907 --> 00:40:08,888
And this is kind of what it looks like in Tomb Raider.

745
00:40:09,708 --> 00:40:14,971
I provide information about the plans and the reasons for why

746
00:40:15,011 --> 00:40:15,612
they're doing them.

747
00:40:15,732 --> 00:40:17,413
And I break this down a little bit.

748
00:40:17,473 --> 00:40:21,435
So here, for example, is an NPC who's doing an attack.

749
00:40:21,755 --> 00:40:24,616
And before that, the plan consists of he did a play

750
00:40:24,676 --> 00:40:26,758
input action to announce that he's doing it.

751
00:40:27,598 --> 00:40:29,099
He decided that he wanted cover.

752
00:40:29,179 --> 00:40:31,340
So to get cover, he's going to use an object.

753
00:40:31,380 --> 00:40:33,621
So he had to go to the table, flip the table.

754
00:40:34,402 --> 00:40:37,843
He then went to the cover point behind the table and he's doing a ranged attack from

755
00:40:37,863 --> 00:40:38,063
there.

756
00:40:38,384 --> 00:40:40,545
That's an example of an attack with five actions.

757
00:40:40,585 --> 00:40:45,127
And then you can see before that with timestamps next to them, he was doing an attack and that

758
00:40:45,187 --> 00:40:46,688
ended because he became suppressed.

759
00:40:47,148 --> 00:40:51,810
Before that I fired an arrow into the ground and so he investigated the projectile impact.

760
00:40:52,190 --> 00:40:53,491
Before that he was just idling.

761
00:40:54,031 --> 00:40:56,652
Then below that, I give an example of, here is where we

762
00:40:56,752 --> 00:40:59,313
provide the last time we planned.

763
00:40:59,373 --> 00:41:01,774
Here are the things we thought about doing and the reasons we

764
00:41:01,814 --> 00:41:02,454
couldn't do them.

765
00:41:02,494 --> 00:41:04,375
This is why we're still doing what we were doing.

766
00:41:04,975 --> 00:41:07,916
Then again, I give an example of, you can go back in time

767
00:41:07,976 --> 00:41:10,557
and say, when he decided to do the investigate goal, for

768
00:41:10,597 --> 00:41:13,178
example, why did he not choose to do something else?

769
00:41:13,658 --> 00:41:15,099
You can go back and look at that as well.

770
00:41:16,379 --> 00:41:17,200
OK, that's it.

771
00:41:17,600 --> 00:41:19,040
Now we're going to hear from Eric.

772
00:41:33,704 --> 00:41:34,345
Okay.

773
00:41:34,485 --> 00:41:34,725
Yeah.

774
00:41:34,745 --> 00:41:36,187
It's just like that.

775
00:41:36,928 --> 00:41:37,188
All right.

776
00:41:38,169 --> 00:41:38,409
Yeah.

777
00:41:39,070 --> 00:41:42,794
So my name is Eric Jacopin, indeed, and I work, indeed, at the Center for Research of

778
00:41:42,875 --> 00:41:43,956
French Military Academy.

779
00:41:46,381 --> 00:41:48,622
First, let me say a few words about analytics,

780
00:41:48,682 --> 00:41:50,682
because I'll be speaking of GOAP analytics,

781
00:41:50,802 --> 00:41:53,443
and I want to explain first what I mean by analytics.

782
00:41:54,523 --> 00:41:56,824
Data analytics is the process of collecting

783
00:41:57,184 --> 00:42:02,406
and extracting pieces of information,

784
00:42:02,466 --> 00:42:03,906
meaningful pieces of information,

785
00:42:04,326 --> 00:42:07,487
as input for various kinds of decisions.

786
00:42:08,867 --> 00:42:10,848
It's a business, really,

787
00:42:11,348 --> 00:42:14,949
and money comes from the processing of user inputs.

788
00:42:16,303 --> 00:42:19,604
Well, yes, of course, in the case of game analytics,

789
00:42:20,884 --> 00:42:23,685
users are players, as you can see on the left.

790
00:42:24,365 --> 00:42:26,986
And money is part of the game, yes, right?

791
00:42:27,246 --> 00:42:30,387
But not only, various kind of graphics, such as heat maps,

792
00:42:30,807 --> 00:42:33,508
and I refer you to that paper, Beyond the Heat Map,

793
00:42:33,528 --> 00:42:35,829
which got published in the now closed

794
00:42:35,889 --> 00:42:39,350
Game Developer Magazine, not too far ago.

795
00:42:40,170 --> 00:42:41,790
Okay, what about GOAP analytics,

796
00:42:42,231 --> 00:42:43,491
which is the topic of my talk.

797
00:42:44,658 --> 00:42:46,319
Am I going to make money with that?

798
00:42:47,499 --> 00:42:47,939
We'll see.

799
00:42:50,120 --> 00:42:51,860
But most of the time, I'll be showing you graphics.

800
00:42:53,861 --> 00:42:56,281
First, you get to collect data.

801
00:42:57,262 --> 00:42:58,802
I'll be speaking on both free games.

802
00:42:58,902 --> 00:43:00,123
Obviously, you got that.

803
00:43:01,223 --> 00:43:04,604
I'm going to speak of Shadow of Mordor.

804
00:43:04,904 --> 00:43:06,044
I'm going to speak of Fear.

805
00:43:06,584 --> 00:43:10,406
And yes, I'm going to speak from data I was able to get,

806
00:43:10,946 --> 00:43:11,386
thanks to.

807
00:43:12,640 --> 00:43:16,021
Chris here from the Rise of the Tomb Raider.

808
00:43:17,662 --> 00:43:22,443
By the way, Rise of the Tomb Raider is in alpha version,

809
00:43:22,483 --> 00:43:23,764
it's due later this week.

810
00:43:24,224 --> 00:43:28,886
So the data I got are only from a few slices of the game.

811
00:43:30,695 --> 00:43:34,179
And by the way, also I'll be showing some red circles

812
00:43:34,259 --> 00:43:36,462
to focus on some parts of my slides.

813
00:43:37,062 --> 00:43:38,764
I'm gonna do that right now.

814
00:43:39,425 --> 00:43:42,649
So please don't look at how many files,

815
00:43:42,769 --> 00:43:45,472
but just compare the columns here.

816
00:43:46,473 --> 00:43:51,559
What we get from fear to Shadow of Mordor is five times more plans in half the time

817
00:43:52,040 --> 00:43:56,445
and what we get from fear to Tomb Raider is a third of the plans

818
00:43:57,106 --> 00:44:01,190
Yeah, only 16 minutes, but only in the 15th of the time.

819
00:44:03,726 --> 00:44:06,669
So what kind of data you can have?

820
00:44:07,710 --> 00:44:10,873
From here, I was able to modify the SDK

821
00:44:10,893 --> 00:44:15,698
because the software development kit for Fear

822
00:44:15,758 --> 00:44:17,160
was released one year after the game, 2006.

823
00:44:17,981 --> 00:44:19,782
So I was able to modify it.

824
00:44:19,802 --> 00:44:20,603
It took me some time.

825
00:44:20,623 --> 00:44:23,306
And I produced some data.

826
00:44:24,027 --> 00:44:24,527
Then I

827
00:44:28,431 --> 00:44:31,193
put it here, but what you have to focus on here

828
00:44:31,273 --> 00:44:34,015
is the fact that I used different fonts

829
00:44:34,315 --> 00:44:36,957
and different colors because the data from Peter,

830
00:44:37,017 --> 00:44:39,419
for instance, is different from the data from Chris.

831
00:44:40,920 --> 00:44:44,503
So let's first focus on the last piece of information,

832
00:44:45,083 --> 00:44:47,786
2.1.3, 2.1.3 are plan glance.

833
00:44:48,506 --> 00:44:51,148
And the first thing you can do about all this file

834
00:44:51,188 --> 00:44:53,550
is just ask yourselves, well,

835
00:44:54,190 --> 00:44:55,551
what do my plan glance look like?

836
00:44:56,983 --> 00:44:58,364
OK, here they are.

837
00:44:58,624 --> 00:44:59,725
How long are Go plans?

838
00:45:00,205 --> 00:45:03,327
Well, Peter told you, yes, Go plans are short.

839
00:45:03,808 --> 00:45:05,168
Indeed, they're short.

840
00:45:06,589 --> 00:45:11,152
Most of the time, they're one or two actions, and that's it.

841
00:45:11,712 --> 00:45:14,654
Yes, you can find some actions of length three and length four

842
00:45:14,714 --> 00:45:16,995
in both Theore or Shadow of Mordor.

843
00:45:17,115 --> 00:45:19,577
No, no playing of length three in Shadow of Mordor.

844
00:45:19,597 --> 00:45:20,377
I don't remember that.

845
00:45:22,158 --> 00:45:23,079
But that's it.

846
00:45:23,639 --> 00:45:25,380
All right, plans are short.

847
00:45:27,613 --> 00:45:30,977
But despite the fact that RISE is in alpha mode,

848
00:45:30,997 --> 00:45:33,420
you can see that Go planning in RISE

849
00:45:34,622 --> 00:45:36,384
works already very nicely.

850
00:45:36,404 --> 00:45:41,089
And that I expect from the last screenshot Chris showed

851
00:45:41,470 --> 00:45:43,693
that the plans would be even longer than that.

852
00:45:46,647 --> 00:45:49,909
So now let's focus on the second piece of information here,

853
00:45:50,009 --> 00:45:54,472
no name, intro and this machine gun guy at the campfire.

854
00:45:56,093 --> 00:45:58,214
What you can do is just gather all the plans

855
00:45:58,814 --> 00:46:00,375
from these guys and ask yourself,

856
00:46:00,876 --> 00:46:02,557
well how many plans per NPC?

857
00:46:03,817 --> 00:46:06,839
Good question, I'll be using those rectangles

858
00:46:07,179 --> 00:46:09,101
in those graphics.

859
00:46:09,581 --> 00:46:11,802
Those rectangles are whisker boxes

860
00:46:12,263 --> 00:46:13,343
and here is how they work.

861
00:46:16,308 --> 00:46:17,809
They display a set of value.

862
00:46:18,709 --> 00:46:22,872
The first thing to know is that white line,

863
00:46:23,132 --> 00:46:24,553
which represents the medium value.

864
00:46:24,633 --> 00:46:27,454
It separates the set of value in 50% above and 53% below.

865
00:46:27,474 --> 00:46:29,816
In the black line, represent the average.

866
00:46:36,580 --> 00:46:40,965
At the bottom you have what they call the lower fence, which is just the minimum value

867
00:46:41,025 --> 00:46:41,446
of the set.

868
00:46:42,166 --> 00:46:48,373
And then of course you've got the maximum value and the rectangle separates again the

869
00:46:48,433 --> 00:46:50,355
above and below subset in two.

870
00:46:52,918 --> 00:46:54,059
So now let's get back to that.

871
00:46:55,541 --> 00:46:58,003
There's kind of a waterfall here of all the years, right?

872
00:46:58,424 --> 00:47:02,828
So on the y-axis, you get the number of plans per NPC.

873
00:47:03,168 --> 00:47:04,970
It doesn't go very far, OK?

874
00:47:05,170 --> 00:47:07,112
But it's been decreasing over the year.

875
00:47:07,532 --> 00:47:10,635
So it's 2005 and about in 10 years.

876
00:47:10,796 --> 00:47:12,938
And then you can see decreases also for a rise.

877
00:47:13,298 --> 00:47:15,520
But then increases because I got two sets of value.

878
00:47:16,421 --> 00:47:18,323
Something they didn't tell you is that there

879
00:47:18,363 --> 00:47:19,324
are two kinds of plans.

880
00:47:20,024 --> 00:47:22,545
successful plans and failed plans.

881
00:47:23,945 --> 00:47:28,406
For the far right box, I got both plans, right?

882
00:47:28,726 --> 00:47:30,966
Failed plans are plans which have been generated

883
00:47:30,986 --> 00:47:33,107
by the planner, but they're not to be executed

884
00:47:33,147 --> 00:47:34,347
by NPCs for some reason.

885
00:47:37,488 --> 00:47:40,848
So now we can focus on timestamps plus NPC ID,

886
00:47:41,128 --> 00:47:43,809
and we can combine them and make more complex graphics.

887
00:47:45,477 --> 00:47:47,978
That's what I call session castings, okay?

888
00:47:48,459 --> 00:47:51,520
So on the X, you can find milliseconds,

889
00:47:51,620 --> 00:47:53,901
despite the fact that I got microseconds,

890
00:47:53,981 --> 00:47:56,482
milliseconds, and seconds, and blah, blah, blah values.

891
00:47:58,003 --> 00:48:00,884
On the Y-axis, you can find the NPCs, right?

892
00:48:00,944 --> 00:48:02,965
And here is what they look like.

893
00:48:07,300 --> 00:48:11,161
So what is interesting here is concurrent active NPCs.

894
00:48:13,482 --> 00:48:16,123
You got concurrent active users on web pages, right,

895
00:48:16,444 --> 00:48:17,844
for data analytics.

896
00:48:18,104 --> 00:48:20,685
For game analytics, you got concurrent active players,

897
00:48:21,006 --> 00:48:24,007
while you got concurrent active NPCs for a go planning

898
00:48:24,387 --> 00:48:25,547
as well, all right?

899
00:48:25,908 --> 00:48:28,829
And what you can ask yourself is how many concurrent active

900
00:48:28,889 --> 00:48:30,089
NPCs you can get in a game.

901
00:48:34,275 --> 00:48:37,318
So again, whisker boxes.

902
00:48:38,179 --> 00:48:42,102
Here I show all the sessions, all the data I have.

903
00:48:42,162 --> 00:48:44,104
17 files on the top graphic for F.E.A.R.,

904
00:48:44,925 --> 00:48:48,668
seven for Shadow Mordor, and four for Tomb Raider.

905
00:48:49,348 --> 00:48:52,591
And you can see from the data, from the y-axis,

906
00:48:52,631 --> 00:48:57,255
that both F.E.A.R. and the Rise Alpha version

907
00:48:58,096 --> 00:48:59,277
are similar.

908
00:49:00,438 --> 00:49:04,571
But it's not at all the case for Shadow of Mordor, right?

909
00:49:05,334 --> 00:49:06,478
It's 10 times more.

910
00:49:07,425 --> 00:49:11,229
the number of concurrent active NPCs for a Shadow of Mordor

911
00:49:12,009 --> 00:49:16,053
runs up to 150, which is just amazing.

912
00:49:16,533 --> 00:49:20,417
So now you can ask yourself, why I showed you this one, right?

913
00:49:20,497 --> 00:49:24,380
Because I showed, why you didn't see it in my previous slide?

914
00:49:24,641 --> 00:49:28,684
Because I showed the intro part of the game, which

915
00:49:28,744 --> 00:49:29,365
is very linear.

916
00:49:31,547 --> 00:49:33,328
when you play the game, the very first minute,

917
00:49:33,368 --> 00:49:35,809
there's only a few NPCs on screen.

918
00:49:36,409 --> 00:49:37,970
So now you can ask yourself, yes,

919
00:49:38,130 --> 00:49:40,591
can we see the other ones where you have 150?

920
00:49:42,412 --> 00:49:44,033
Yes, you can, of course.

921
00:49:44,253 --> 00:49:44,734
Here they are.

922
00:49:45,134 --> 00:49:47,535
They don't look the same at all, right?

923
00:49:47,555 --> 00:49:48,816
It looks like it's amazing because

924
00:49:49,096 --> 00:49:50,937
if you look at the top left one,

925
00:49:51,197 --> 00:49:53,858
you have up to 400 NPCs on screen.

926
00:49:53,878 --> 00:49:55,339
I don't know if you play that game,

927
00:49:55,359 --> 00:49:56,520
but it's kind of amazing.

928
00:49:56,800 --> 00:49:59,661
You can go at the top of a fort and look at them moving.

929
00:50:00,909 --> 00:50:04,495
Okay, and one critical thing now is,

930
00:50:04,856 --> 00:50:07,560
are they all calling for planning at the same time?

931
00:50:11,006 --> 00:50:11,587
And how close?

932
00:50:13,312 --> 00:50:16,534
So one difficult graphic here, how many NPCs calling for go?

933
00:50:17,114 --> 00:50:19,015
So if you remember what Peter told you,

934
00:50:19,316 --> 00:50:21,737
there is a 50 NPC limit, right?

935
00:50:22,017 --> 00:50:25,900
The 50 NPC limit on both graphics is that dashed red line.

936
00:50:26,780 --> 00:50:30,583
The easy thing is the maximum number of NPC calling is blue

937
00:50:30,703 --> 00:50:33,245
and the mean, the average is black.

938
00:50:34,692 --> 00:50:40,758
And on the x-axis, it's something difficult here.

939
00:50:41,238 --> 00:50:43,701
It's the width of a time window

940
00:50:44,081 --> 00:50:47,344
which slides along all the session files, right?

941
00:50:47,804 --> 00:50:51,327
So for instance, if I take a time window of two seconds,

942
00:50:51,748 --> 00:50:54,570
well, I slide that time window along all the session files

943
00:50:54,630 --> 00:50:58,734
and I record, I count how many calls for planning

944
00:50:59,255 --> 00:51:01,397
per NPC appear in that time window.

945
00:51:02,137 --> 00:51:04,438
And you can see on the left, there is something critical,

946
00:51:04,839 --> 00:51:07,620
because it's a thesis.

947
00:51:08,180 --> 00:51:13,663
There is only 0.4 second to reach the 50 limit, right?

948
00:51:14,043 --> 00:51:17,985
You go above the 50 limit after 0.4 second.

949
00:51:19,506 --> 00:51:23,169
In general, in the seven sessions, Peter sent me,

950
00:51:23,729 --> 00:51:25,130
it's about two or three seconds.

951
00:51:25,230 --> 00:51:26,851
And it go well above that, right?

952
00:51:27,132 --> 00:51:31,154
It can go up to 70 when it reach 10 seconds,

953
00:51:31,214 --> 00:51:33,196
but then 10 seconds is not much a problem

954
00:51:33,236 --> 00:51:34,557
for real-time planning, right?

955
00:51:37,076 --> 00:51:38,116
Yeah, I'm finishing.

956
00:51:38,756 --> 00:51:39,557
How fast is Go?

957
00:51:40,657 --> 00:51:41,457
That's a good point.

958
00:51:43,338 --> 00:51:44,098
I cheated here.

959
00:51:44,638 --> 00:51:46,638
I introduced two more games,

960
00:51:47,038 --> 00:51:49,259
Killzone 3 and Transformers 3.

961
00:51:50,159 --> 00:51:52,540
They don't use Go planning, they use HTN planning.

962
00:51:52,920 --> 00:51:54,220
But I thought that would be interesting

963
00:51:54,260 --> 00:51:55,440
because I got data from that,

964
00:51:55,541 --> 00:51:57,841
Orion Bear from Guerrilla Games produced the data

965
00:51:57,881 --> 00:52:00,762
and Troyan Fraze when he was at High Moon

966
00:52:00,882 --> 00:52:01,842
produced the data for me.

967
00:52:02,582 --> 00:52:06,483
And you can see that HTN planning is way faster than fear.

968
00:52:07,023 --> 00:52:08,303
Okay, no problem.

969
00:52:08,584 --> 00:52:10,484
And way faster than the others as well.

970
00:52:10,844 --> 00:52:14,665
But if you look at the RISE Alpha, which includes,

971
00:52:14,785 --> 00:52:16,625
and it's only the Alpha version, right,

972
00:52:16,985 --> 00:52:19,426
which includes both successful and failed plans,

973
00:52:19,726 --> 00:52:23,767
it's as fast as what is done in Transformers 3.

974
00:52:25,227 --> 00:52:26,667
And I think it's a success, really.

975
00:52:30,928 --> 00:52:31,148
Money.

976
00:52:32,537 --> 00:52:33,958
where does the go power go?

977
00:52:35,719 --> 00:52:37,580
That's the last slide I have here,

978
00:52:37,740 --> 00:52:38,880
last complicated graphic.

979
00:52:41,562 --> 00:52:45,944
So on the y-axis you get the cumulative action frequency.

980
00:52:46,084 --> 00:52:47,925
I didn't spoke about that before.

981
00:52:48,365 --> 00:52:50,607
But what you can do is record how many times

982
00:52:50,687 --> 00:52:54,169
an action appears in a session file, you know?

983
00:52:54,489 --> 00:52:56,850
And then do that across all session files

984
00:52:56,930 --> 00:52:58,331
and do the cumulative frequency.

985
00:52:59,254 --> 00:53:04,677
And what is amazing here is that it suffices only that you get only two or three actions

986
00:53:05,077 --> 00:53:10,140
to reach a cumulative frequency of about 20 percent or 30 percent.

987
00:53:10,420 --> 00:53:13,741
And you can see, for instance, I'll take RISE first.

988
00:53:15,022 --> 00:53:23,406
So RISE, there is only two actions which swallow the planning power.

989
00:53:23,446 --> 00:53:27,628
You reach almost 60 percent of the number of occurrences.

990
00:53:28,889 --> 00:53:31,992
And you can see in F.E.A.R. that you only need two actions

991
00:53:32,993 --> 00:53:36,936
to reach 50% of the number of occurrences in all files.

992
00:53:37,536 --> 00:53:41,840
So, at random, if you pick up one session file from F.E.A.R.,

993
00:53:42,280 --> 00:53:44,342
well, there is a lot of chance you'll find

994
00:53:44,382 --> 00:53:46,284
those two actions everywhere.

995
00:53:47,264 --> 00:53:49,166
They're for animation purposes.

996
00:53:51,448 --> 00:53:54,110
They reduced that a little for Shadow of Mordor,

997
00:53:54,130 --> 00:53:55,031
but it's about the same.

998
00:53:56,243 --> 00:54:04,366
And what I expect here is one rise goes from alpha to beta and then finally the curve here will be the same of the others

999
00:54:04,806 --> 00:54:09,188
So it's a kind of 80-20 rules, right?

1000
00:54:09,548 --> 00:54:15,771
Which means 20% of the actions are enough to swallow 80% of the planning power

1001
00:54:16,611 --> 00:54:19,792
Which means, on the other side, and that's where money comes in

1002
00:54:23,513 --> 00:54:27,556
80% of the actions swallow only 20% of the planning power.

1003
00:54:28,957 --> 00:54:30,838
So some of these actions in ShadowModder

1004
00:54:31,339 --> 00:54:32,900
almost never appear, right?

1005
00:54:33,220 --> 00:54:36,522
It's pretty, I got 33,000 actions,

1006
00:54:37,603 --> 00:54:38,884
33,000 plans in all those files,

1007
00:54:39,324 --> 00:54:41,186
and some of the actions appear only once.

1008
00:54:44,268 --> 00:54:45,328
So here is the ratio.

1009
00:54:47,852 --> 00:54:59,116
8 actions to produce, to swallow 80% for fear, 14 for shadow murder and 4 for rise alpha.

1010
00:55:01,077 --> 00:55:07,560
So goop decision making. Design short plans. I won't say that enough again. 3 actions

1011
00:55:07,620 --> 00:55:13,442
at most I'd say. Money, make sure the 80% of the action using 20% of the goop power

1012
00:55:13,462 --> 00:55:15,243
were worth the death effort, really.

1013
00:55:16,024 --> 00:55:18,786
Try to use, okay I didn't speak about that,

1014
00:55:18,886 --> 00:55:22,589
but try to use action costs to influence action usage.

1015
00:55:23,550 --> 00:55:27,133
Although that's unsure, but we can speak of that

1016
00:55:27,153 --> 00:55:28,194
in the questions or later.

1017
00:55:28,734 --> 00:55:29,795
Implement planning coding.

1018
00:55:30,235 --> 00:55:32,377
Graphic coding exists for polygons.

1019
00:55:32,717 --> 00:55:34,219
Why not planning coding?

1020
00:55:35,680 --> 00:55:39,103
Both Chris and Peter described many ways of doing this.

1021
00:55:40,024 --> 00:55:41,145
I just wrote two here.

1022
00:55:41,425 --> 00:55:43,848
Set a limit of the number of NPCs calling for planning.

1023
00:55:43,928 --> 00:55:45,029
That's the 50 limit.

1024
00:55:45,549 --> 00:55:47,351
And while you're at it, set a limit

1025
00:55:47,391 --> 00:55:48,833
on the number of NPCs as well.

1026
00:55:49,813 --> 00:55:52,776
And then you'll be able maybe to reach simple planning.

1027
00:55:53,937 --> 00:55:58,141
Yes, on the right I added that nice green and red.

1028
00:55:58,422 --> 00:56:00,604
It's a planning heat map from Rise.

1029
00:56:02,477 --> 00:56:05,960
And on the left, it's an experimental graphic

1030
00:56:06,360 --> 00:56:07,901
from Shadow of Mordor.

1031
00:56:09,903 --> 00:56:12,985
So I used many of her references.

1032
00:56:13,565 --> 00:56:16,608
Probably the best on analytics is not a computation

1033
00:56:16,928 --> 00:56:19,130
or statistics book, it's a guerilla analytics

1034
00:56:19,210 --> 00:56:21,852
which helps you organize all your files.

1035
00:56:21,892 --> 00:56:24,394
And I found that very, very useful.

1036
00:56:24,454 --> 00:56:26,935
All the graphics I produced with Mathematica.

1037
00:56:29,564 --> 00:56:36,128
Yes, I want to thank Chris and Peter for producing those data. Chris is definitely in crunch

1038
00:56:36,168 --> 00:56:40,931
time and he's been producing and helping me for that. Peter produced videos, gigabytes of

1039
00:56:41,111 --> 00:56:47,435
data for me. I want to thank Ariane, Alex, Carl, Jean-Francois Gautier and Triumph RISM and

1040
00:56:47,475 --> 00:56:54,159
Geoff Harkin who answered all my Siri questions for the past four years. And I guess it's

1041
00:56:54,179 --> 00:56:54,879
time for questions.

1042
00:57:05,015 --> 00:57:05,296
Three minutes.

1043
00:57:05,336 --> 00:57:05,476
Three.

1044
00:57:05,496 --> 00:57:07,637
Three means three questions.

1045
00:57:08,318 --> 00:57:08,978
Yeah, about three minutes.

1046
00:57:08,998 --> 00:57:09,618
Oh, three minutes.

1047
00:57:09,638 --> 00:57:10,919
After conveniently one minute each.

1048
00:57:10,939 --> 00:57:11,039
Okay.

1049
00:57:11,300 --> 00:57:11,440
Alright.

1050
00:57:11,460 --> 00:57:11,600
So, yeah?

1051
00:57:11,620 --> 00:57:11,720
Yeah.

1052
00:57:11,740 --> 00:57:11,880
Do you...

1053
00:57:11,900 --> 00:57:11,940
Me?

1054
00:57:11,960 --> 00:57:12,340
Have you thought...

1055
00:57:12,360 --> 00:57:14,642
This can go to anyone who's done it, whoever can answer the question the best.

1056
00:57:14,662 --> 00:57:18,424
Do you have any systems in place for allocating more complex plans or...

1057
00:57:18,464 --> 00:57:20,305
How do you think the process is going to work?

1058
00:57:20,325 --> 00:57:21,026
So, I'm going to start with...

1059
00:57:21,046 --> 00:57:21,706
So, I'm going to start with the...

1060
00:57:21,726 --> 00:57:21,806
Yeah.

1061
00:57:21,826 --> 00:57:22,387
I'm going to start with...

1062
00:57:22,407 --> 00:57:22,827
The first question is...

1063
00:57:22,847 --> 00:57:22,927
Okay.

1064
00:57:23,007 --> 00:57:23,568
... the first question is...

1065
00:57:23,588 --> 00:57:23,768
Okay.

1066
00:57:23,808 --> 00:57:25,729
... how do you think the process is going to work?

1067
00:57:25,749 --> 00:57:26,990
So, I'm going to start with...

1068
00:57:27,010 --> 00:57:27,130
Okay.

1069
00:57:30,045 --> 00:57:36,332
Just devoting more CPU resources to NPCs that the player would be more likely to be engaged with,

1070
00:57:37,594 --> 00:57:41,618
and then less time for NPCs that they would be paying less attention to.

1071
00:57:41,959 --> 00:57:44,322
Does GOP handle that, or have you thought about ways to do that?

1072
00:57:45,926 --> 00:57:47,668
Let's each take a turn.

1073
00:57:49,390 --> 00:57:53,676
I have a planning frequency that's dynamic for my NPCs.

1074
00:57:53,736 --> 00:57:57,941
So the ones that are on screen or near players get to plan more frequently.

1075
00:57:58,762 --> 00:58:02,526
The ones that are far away and off camera don't think very often.

1076
00:58:05,278 --> 00:58:08,679
Yeah, I'll just go ahead and say shadow mortar, we had systems

1077
00:58:08,699 --> 00:58:11,339
like that in place. We had timings like that in place for

1078
00:58:11,779 --> 00:58:14,400
actually for a lot of our supporting systems. And we

1079
00:58:14,480 --> 00:58:17,681
didn't really, that's actually when Eric first started talking

1080
00:58:17,701 --> 00:58:21,081
with me. I was looking for that system for our planner and we

1081
00:58:21,121 --> 00:58:24,402
never ended up throttling our planning, our replanning

1082
00:58:24,502 --> 00:58:27,603
occurrences. I think throttling the other systems that would

1083
00:58:28,023 --> 00:58:31,844
cause events to change to cause a plan ended up just naturally

1084
00:58:31,884 --> 00:58:33,044
throttling the planner for us.

1085
00:58:36,080 --> 00:58:42,323
AI ratio for Guerrilla Games Killzone 3 was 5 hertz.

1086
00:58:45,865 --> 00:58:45,965
Hi.

1087
00:58:47,486 --> 00:58:48,467
I teach game AI.

1088
00:58:48,867 --> 00:58:51,068
And one of the things I really don't know

1089
00:58:51,248 --> 00:58:59,472
is what studios, how much of the back-end solvers and planners

1090
00:58:59,552 --> 00:59:02,534
they develop in-house, and how much they use from off-the-shelf

1091
00:59:02,554 --> 00:59:02,894
products.

1092
00:59:03,740 --> 00:59:06,402
And if there are anything that you use off the shelf,

1093
00:59:06,482 --> 00:59:08,523
I'd love to know what those titles are.

1094
00:59:10,704 --> 00:59:11,364
It's all you, Eric.

1095
00:59:11,384 --> 00:59:14,746
It's all me.

1096
00:59:15,006 --> 00:59:15,366
Zero.

1097
00:59:16,667 --> 00:59:17,127
All in-house?

1098
00:59:17,747 --> 00:59:17,907
Yeah.

1099
00:59:19,104 --> 00:59:20,526
Yeah, I can say the same.

1100
00:59:20,866 --> 00:59:22,568
Like I said in my presentation, I

1101
00:59:22,628 --> 00:59:26,272
wrote the Go library, which is still about 90% intact

1102
00:59:26,312 --> 00:59:28,494
from 2006 in about two or three weeks.

1103
00:59:30,096 --> 00:59:33,940
We do use, I'll put a plug out for Babelflux's navpower

1104
00:59:33,980 --> 00:59:34,660
for navigation.

1105
00:59:35,862 --> 00:59:38,865
Even the front end drag and drop stuff that you were doing?

1106
00:59:39,385 --> 00:59:40,006
You'd be amazed.

1107
00:59:41,968 --> 00:59:42,108
Great.

1108
00:59:44,450 --> 00:59:47,252
Can you talk briefly about how you actually organize joint behaviors?

1109
00:59:47,633 --> 00:59:50,094
Oh, Ben, yes. Hi.

1110
00:59:50,114 --> 00:59:59,621
Between like the orcs, where basically one says I'm going to go investigate, is there a blackboard system that says this NPC is assigned that role, or how's that role management?

1111
01:00:00,241 --> 01:00:02,623
Yeah, there's definitely a blackboard system. We actually have...

1112
01:00:03,764 --> 01:00:04,144
Oh, hi.

1113
01:00:05,185 --> 01:00:09,108
It'd be a lot to get into. We have both a working memory system, which is...

1114
01:00:09,768 --> 01:00:09,968
Yeah.

1115
01:00:10,804 --> 01:00:14,387
Thank you. I'm not sure how much detail I need to go into on that. A working memory system

1116
01:00:14,407 --> 01:00:22,153
where we can generate collections of facts and a blackboard system that, yeah, that's both

1117
01:00:22,574 --> 01:00:27,898
centralized blackboard for all the orgs and, of course, a blackboard per individual org.

1118
01:00:29,822 --> 01:00:33,465
On TubeRaider, we have a system that hands out cookies.

1119
01:00:34,025 --> 01:00:36,788
Only so many guys are allowed to investigate.

1120
01:00:37,789 --> 01:00:40,151
And the way it works is when there's

1121
01:00:40,191 --> 01:00:42,773
an event that is investigatable, I

1122
01:00:43,173 --> 01:00:45,575
delay the processing of the event,

1123
01:00:45,695 --> 01:00:48,758
depending on the distance, so that the guy who is closest

1124
01:00:48,818 --> 01:00:51,020
is the first one who's going to get a chance to plan for it.

1125
01:00:51,080 --> 01:00:53,702
And if he decides to investigate it or react to it,

1126
01:00:53,942 --> 01:00:54,423
he'll do it.

1127
01:00:54,483 --> 01:00:56,805
Otherwise, the next closest guy will give it a try.

1128
01:00:56,925 --> 01:00:57,445
This kind of thing.

