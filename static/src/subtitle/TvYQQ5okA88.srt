1
00:00:03,646 --> 00:00:08,850
curses. There's always one. Hi everyone. Morning. Welcome to day two. I hope you weren't all

2
00:00:08,850 --> 00:00:17,317
drinking too much. First day GDC parties are always a thing, right? Hi, my name's Danny and I

3
00:00:17,317 --> 00:00:19,418
am literally from the other side of the world.

4
00:00:21,162 --> 00:00:24,964
That's 36 hours of travel every year for GDC.

5
00:00:24,964 --> 00:00:26,064
It's good fun.

6
00:00:26,064 --> 00:00:27,065
I'm from South Africa.

7
00:00:27,065 --> 00:00:28,865
I run a studio there called QCF Design.

8
00:00:28,865 --> 00:00:34,247
And I'm also part of a thing called Make Games SA, which

9
00:00:34,247 --> 00:00:37,869
is our South African game development community.

10
00:00:37,869 --> 00:00:39,249
We're busy starting an industry body,

11
00:00:39,249 --> 00:00:41,190
and we're doing all sorts of cool things there.

12
00:00:41,190 --> 00:00:45,532
We've gone from, I think it was like 25 people employed

13
00:00:45,532 --> 00:00:48,413
in the games industry in South Africa five years ago, to 250.

14
00:00:48,413 --> 00:00:49,953
So we're doing pretty well.

15
00:00:52,629 --> 00:00:57,693
In 2011 a prototype called Desktop Dungeons did that and won an IGF award and like changed the

16
00:00:57,693 --> 00:01:03,858
future of my company forever, which is pretty cool. Desktop Dungeons actually ended up finally

17
00:01:03,858 --> 00:01:09,583
releasing on Steam in 2013 and made its way to Android and iOS last year. But that's not what

18
00:01:09,583 --> 00:01:13,747
this talk is about, unless you really want to buy my game, in which case feel free and I'll

19
00:01:13,747 --> 00:01:14,267
stop talking.

20
00:01:15,845 --> 00:01:19,891
This talk is about shipping games, or at least the impact that shipping games has on

21
00:01:19,891 --> 00:01:21,053
indie developers like us.

22
00:01:21,053 --> 00:01:25,119
It seems that everybody has some sort of horror story about shipping something.

23
00:01:25,119 --> 00:01:28,724
I mean, I know that desktop dungeons could colloquially be described as

24
00:01:28,724 --> 00:01:29,766
having an aftermath.

25
00:01:31,335 --> 00:01:35,279
And chatting to indies for advice about what was happening to us once we finished shipping

26
00:01:35,279 --> 00:01:38,581
made me realize there's a lot to talk about here.

27
00:01:38,581 --> 00:01:41,964
And I think it's really important that as indies we get a better handle on this stuff

28
00:01:41,964 --> 00:01:47,009
because hey, shipping games is a pretty large part of what we want to do.

29
00:01:47,009 --> 00:01:50,792
If shipping is the worst thing in the world, your studio is not going to survive very long.

30
00:01:52,186 --> 00:01:56,648
So in the interest of science, I augmented my sort of like

31
00:01:56,648 --> 00:01:58,989
off-the-cuff chatting to people, like, hey, I'm feeling down.

32
00:01:58,989 --> 00:02:02,071
What do I do with developers?

33
00:02:02,071 --> 00:02:04,592
And added 18 interviews with developers,

34
00:02:04,592 --> 00:02:07,133
sort of like really formal things,

35
00:02:07,133 --> 00:02:09,234
recorded them and everything, ranging an experience

36
00:02:09,234 --> 00:02:12,415
from like zero game shipped to tens of games shipped,

37
00:02:12,415 --> 00:02:13,816
so kind of the whole gamut.

38
00:02:13,816 --> 00:02:15,097
I also chatted to a few publishers

39
00:02:15,097 --> 00:02:17,718
to try and get their angle on these things.

40
00:02:17,718 --> 00:02:18,398
And.

41
00:02:19,198 --> 00:02:24,080
After that, I turned the interviews into a series of questions that I lobbed another

42
00:02:24,080 --> 00:02:31,763
thirty, a further, a further forty-five developers to get their thoughts on the things that the

43
00:02:31,763 --> 00:02:36,945
interviews had highlighted as important areas. And now, this can be a pretty loaded topic.

44
00:02:36,945 --> 00:02:41,646
Like, if everybody has a terrifying story about shipping their game, chances are they feel

45
00:02:41,646 --> 00:02:45,668
quite strongly about it. And there are some pretty hectic memories. So.

46
00:02:47,105 --> 00:02:52,307
The whole point of this was to isolate learning from those events as opposed to like make them identifiable.

47
00:02:52,307 --> 00:02:57,969
So I tend to talk in the immediate person and I only show graphs when they can be fully anonymized.

48
00:02:57,969 --> 00:03:05,511
And I'm not providing any information that was given to me in confidence because I trust and respect the people who told me things that they probably shouldn't have told me.

49
00:03:07,718 --> 00:03:08,859
So time for some background.

50
00:03:08,859 --> 00:03:12,221
For the context of this talk, shipping a game

51
00:03:12,221 --> 00:03:15,043
is mostly from the indie perspective.

52
00:03:15,043 --> 00:03:18,324
I'm not talking about the AAA kind of pump and dump cycle.

53
00:03:18,324 --> 00:03:20,806
That's a completely different thing.

54
00:03:20,806 --> 00:03:22,307
It's terrible, and hopefully it makes more indies.

55
00:03:22,307 --> 00:03:26,769
Also, shipping is a nice problem to have.

56
00:03:26,769 --> 00:03:30,411
One of the reasons we probably don't talk about that this much

57
00:03:30,411 --> 00:03:32,812
is because in the industry, 90% of games don't ship.

58
00:03:33,692 --> 00:03:35,395
and they don't ship for a whole host of reasons.

59
00:03:35,395 --> 00:03:37,938
And sorting out those problems up front

60
00:03:37,938 --> 00:03:40,902
is probably a really, really good focus point.

61
00:03:40,902 --> 00:03:42,344
But if we want longevity, if we want

62
00:03:42,344 --> 00:03:45,168
to avoid what people are talking about next door,

63
00:03:45,168 --> 00:03:46,270
we need to get better at shipping.

64
00:03:48,620 --> 00:03:51,601
And one of the things that came out of this

65
00:03:51,601 --> 00:03:55,642
is that shipping is a relatively long process.

66
00:03:55,642 --> 00:03:58,523
So as a starting point, I said, cool,

67
00:03:58,523 --> 00:04:01,064
shipping is when the game is first released to the public.

68
00:04:01,064 --> 00:04:03,785
So when players can first download your game

69
00:04:03,785 --> 00:04:07,386
or can first buy your game as a finished product.

70
00:04:07,386 --> 00:04:10,027
And it ends when in-house development ceases.

71
00:04:11,324 --> 00:04:14,126
So that includes porting and bug fixing and everything.

72
00:04:14,126 --> 00:04:17,710
At some point, everybody has a stage where they can say,

73
00:04:17,710 --> 00:04:19,231
I'm putting this game to bed.

74
00:04:19,231 --> 00:04:19,832
It's done.

75
00:04:19,832 --> 00:04:22,634
Maybe they revisit it every once in a while, but usually it's done.

76
00:04:22,634 --> 00:04:27,739
And shipping tends to vary in impact quite hugely,

77
00:04:27,739 --> 00:04:31,503
depending on the experience levels of the team working on it.

78
00:04:31,503 --> 00:04:33,645
So if you've shipped a lot of games before,

79
00:04:33,645 --> 00:04:35,787
probably your next ship is not going to be terrible.

80
00:04:37,797 --> 00:04:40,938
And shipping isn't uploading a game to a store

81
00:04:40,938 --> 00:04:42,018
and kind of just hoping.

82
00:04:42,018 --> 00:04:43,398
And that happens a lot.

83
00:04:43,398 --> 00:04:45,819
I know in South Africa, that's kind of the major issue

84
00:04:45,819 --> 00:04:47,119
that we have.

85
00:04:47,119 --> 00:04:50,780
That's literally just putting something out there and meh.

86
00:04:50,780 --> 00:04:53,600
Shipping is the point at which business intersects most

87
00:04:53,600 --> 00:04:55,701
strongly with game development.

88
00:04:55,701 --> 00:04:58,161
So if you're not thinking about business and the business

89
00:04:58,161 --> 00:05:00,161
impact of your actions, you're not shipping a game.

90
00:05:00,161 --> 00:05:04,162
And shipping isn't early access.

91
00:05:04,162 --> 00:05:06,603
I know I'm going to get questions about this later.

92
00:05:06,603 --> 00:05:06,823
But.

93
00:05:08,230 --> 00:05:32,222
Early access is a preamble to shipping. Yes, some of the things you're doing are putting the game in front of people, and now you're dealing with player responses, and you have to deal with tech support, and you have to handle a whole bunch of issues, but you're still in this creative development mode. You're not really focusing very much on the business angle of things. And early access often tends to suffer when you focus on polishing your game.

94
00:05:34,660 --> 00:05:37,202
Players tend not to like that because you're not giving them

95
00:05:37,202 --> 00:05:38,943
this drip feed of new content all the time.

96
00:05:38,943 --> 00:05:40,624
You're just making that content look slightly better,

97
00:05:40,624 --> 00:05:42,646
and the menus have less bugs and stuff like that.

98
00:05:42,646 --> 00:05:43,647
That's not really fun.

99
00:05:43,647 --> 00:05:46,109
And even if you do early access, you're

100
00:05:46,109 --> 00:05:48,811
still going to do some kind of full launch later.

101
00:05:48,811 --> 00:05:50,692
That is the point of shipping in a project like that.

102
00:05:53,113 --> 00:05:54,494
So shipping is a process.

103
00:05:54,494 --> 00:05:57,054
It starts well before release day.

104
00:05:57,054 --> 00:06:01,355
You start thinking about how you make this game ready to release

105
00:06:01,355 --> 00:06:04,396
instead of what you can add and what new cool things you can change

106
00:06:04,396 --> 00:06:05,756
and how you can make this better or whatever.

107
00:06:05,756 --> 00:06:09,817
You're literally just like, what is the product we can put out there?

108
00:06:09,817 --> 00:06:12,597
And often this is the point at which development

109
00:06:12,597 --> 00:06:15,738
stops being fun for a lot of indies.

110
00:06:15,738 --> 00:06:18,799
Because, you know, face it, feature cuts aren't joyful.

111
00:06:18,799 --> 00:06:21,099
Maybe they are, but generally they're not.

112
00:06:22,852 --> 00:06:27,815
The game, once the game gets to players, that's sort of just the tip of the iceberg.

113
00:06:27,815 --> 00:06:29,797
So shipping continues after release.

114
00:06:29,797 --> 00:06:30,777
Now you have commitments.

115
00:06:30,777 --> 00:06:32,979
You've got to keep this game going.

116
00:06:32,979 --> 00:06:36,602
You have players that have paid you money for what you've been putting out there.

117
00:06:36,602 --> 00:06:39,524
And also, shipping seems to be difficult for everybody,

118
00:06:39,524 --> 00:06:42,806
or at least difficult for the developers I spoke to.

119
00:06:44,944 --> 00:06:49,246
These are the morale level responses in the questionnaire for both a team and individual

120
00:06:49,246 --> 00:06:56,289
perspective on your morale at the start of a project, halfway through, two months before

121
00:06:56,289 --> 00:07:00,711
shipping, date of shipping, two months after, and then like putting the project to bed.

122
00:07:02,230 --> 00:07:03,911
There's a definite downward trend.

123
00:07:03,911 --> 00:07:06,812
And I mean, it's difficult to compare a six month game project

124
00:07:06,812 --> 00:07:08,733
to a five year project.

125
00:07:08,733 --> 00:07:10,194
So we had relative cycles.

126
00:07:10,194 --> 00:07:12,975
There's a definite downward trend in morale.

127
00:07:12,975 --> 00:07:16,777
Although being in a team does seem to have a stabilizing influence,

128
00:07:16,777 --> 00:07:19,078
seeing as individual morale tended to be more negative

129
00:07:19,078 --> 00:07:21,759
than the perceived enthusiasm of the teams that people were part of.

130
00:07:21,759 --> 00:07:24,740
So people who were having really negative experiences

131
00:07:24,740 --> 00:07:26,701
said their teams were more positive than they were.

132
00:07:26,701 --> 00:07:28,442
So teams tended to lift people up.

133
00:07:28,442 --> 00:07:30,643
And also, sometimes you would have people with like.

134
00:07:30,883 --> 00:07:35,466
wildly varying levels of morale at different times in the project and their teams were always a

135
00:07:35,466 --> 00:07:42,131
lot more stable, apparently. The thing about shipping is that no team survives. Even if being

136
00:07:42,131 --> 00:07:48,916
in a team helps and the same people stick together, their roles will have changed drastically

137
00:07:48,916 --> 00:07:50,817
because shipping is a different thing.

138
00:07:53,122 --> 00:07:55,847
And this is the part that kills studios.

139
00:07:55,847 --> 00:07:57,329
Either you embrace these changes

140
00:07:57,329 --> 00:07:59,733
that your team is gonna have to go through

141
00:07:59,733 --> 00:08:01,076
and you survive or you don't.

142
00:08:03,493 --> 00:08:08,496
So the reasons teams change is because a team is going to have to suddenly start performing

143
00:08:08,496 --> 00:08:11,818
really different tasks to what they've been doing for most of the cycle of development

144
00:08:11,818 --> 00:08:17,202
before. These graphs, I don't know how readable they are, show the relative experience levels

145
00:08:17,202 --> 00:08:22,665
from the questionnaire in the skill categories that we identified via the interviews. So we

146
00:08:22,665 --> 00:08:26,748
have programming, you know the classics, programming, content development, game design,

147
00:08:26,748 --> 00:08:32,272
testing and QA, project management and human resources, community management, PR and

148
00:08:32,272 --> 00:08:32,732
marketing.

149
00:08:33,392 --> 00:08:40,058
business development and tech support. I don't think it's a surprise that there's a serious

150
00:08:40,058 --> 00:08:46,163
skewing towards the front of that list. Most of us are developers, we focus on the

151
00:08:46,163 --> 00:08:51,808
development side, but, and this is even more obvious in teams that have never shipped a

152
00:08:51,808 --> 00:08:56,973
game before. The numbers of answers where people said they had absolutely no experience

153
00:08:56,973 --> 00:09:01,196
in the bottom half there, kind of interesting, and a little bit scary.

154
00:09:04,017 --> 00:09:08,539
And the skills that have the least experience in this graph

155
00:09:08,539 --> 00:09:11,620
are the ones that are only really necessary

156
00:09:11,620 --> 00:09:13,620
once normal development stops.

157
00:09:13,620 --> 00:09:15,841
Once you stop building your content,

158
00:09:15,841 --> 00:09:17,862
then you have to focus on your PR and marketing

159
00:09:17,862 --> 00:09:20,182
and your business development and your tech support.

160
00:09:20,182 --> 00:09:23,743
And if a team hasn't recognized that these responsibilities are

161
00:09:23,743 --> 00:09:27,084
going to change as the project moves towards a shipping

162
00:09:27,084 --> 00:09:31,446
conclusion, that's going to cause a lot of problems.

163
00:09:34,522 --> 00:09:40,586
One of the things that happens is that development becomes support.

164
00:09:40,586 --> 00:09:42,787
So, you know, hands up everyone that loves bug hunts.

165
00:09:42,787 --> 00:09:43,687
Yeah!

166
00:09:43,687 --> 00:09:47,750
Okay, you're all going to be super popular later,

167
00:09:47,750 --> 00:09:51,392
so just everybody sitting around them remember who did that.

168
00:09:51,392 --> 00:09:55,335
You have customers now,

169
00:09:55,335 --> 00:09:58,036
and you owe them a fully functioning product,

170
00:09:58,036 --> 00:10:01,098
otherwise, you know, Steam refunds and everybody dies.

171
00:10:02,311 --> 00:10:04,152
you have to keep that going.

172
00:10:04,152 --> 00:10:05,892
If you don't support, your game suffers in sales.

173
00:10:05,892 --> 00:10:06,973
Your reputation goes down.

174
00:10:06,973 --> 00:10:08,533
Your visibility goes down.

175
00:10:08,533 --> 00:10:11,174
Obviously, that's a terrible thing.

176
00:10:11,174 --> 00:10:13,795
So support switches programming tasks

177
00:10:13,795 --> 00:10:16,536
into this bug finding and killing mode

178
00:10:16,536 --> 00:10:18,657
from the fun development mode.

179
00:10:18,657 --> 00:10:21,458
And not just for a little while.

180
00:10:21,458 --> 00:10:23,759
It goes into that mode for the rest

181
00:10:23,759 --> 00:10:25,340
of the lifetime of that game.

182
00:10:25,340 --> 00:10:28,841
And testing is really, really difficult to keep up.

183
00:10:31,042 --> 00:10:38,665
So in interviews, everybody mentioned the importance of testing. Every change you make needs to be tested absolutely exhaustively before you can release a patch.

184
00:10:38,665 --> 00:10:43,147
Otherwise, all you're doing is making more testing work for yourself and more patching work for yourself.

185
00:10:43,147 --> 00:10:52,412
And yeah, you think you've tested before. Once you release a game, testing is a completely different procedure.

186
00:10:52,412 --> 00:10:55,893
And there's a major difference between experienced and new to shipping teams.

187
00:10:55,893 --> 00:11:00,035
Like you could tell instantly who had done what based on how they approached testing.

188
00:11:01,289 --> 00:11:04,552
And this isn't like saying experienced teams have less

189
00:11:04,552 --> 00:11:05,453
bugs.

190
00:11:05,453 --> 00:11:06,775
Sometimes they have more.

191
00:11:06,775 --> 00:11:09,057
It's literally just that experienced teams have a very,

192
00:11:09,057 --> 00:11:11,780
very, very different approach to testing

193
00:11:11,780 --> 00:11:13,181
than inexperienced teams.

194
00:11:13,181 --> 00:11:17,745
And support means talking to pretty horrible people.

195
00:11:17,745 --> 00:11:21,049
Like you're generally speaking to the angriest players

196
00:11:21,049 --> 00:11:23,171
in your player base, which is not

197
00:11:23,171 --> 00:11:24,292
the best thing in the world.

198
00:11:25,389 --> 00:11:28,010
Design starts becoming public relations.

199
00:11:28,010 --> 00:11:34,054
And in a way, design becomes basically apologizing for things.

200
00:11:34,054 --> 00:11:35,635
You're no longer solving interesting problems.

201
00:11:35,635 --> 00:11:39,137
You're not designing the huge fun things that the game was built around.

202
00:11:39,137 --> 00:11:42,820
And in fact, you can pretty much never change those again.

203
00:11:42,820 --> 00:11:44,421
You're stuck with them.

204
00:11:44,421 --> 00:11:47,523
So you end up justifying the old solutions that you came up with.

205
00:11:47,523 --> 00:11:48,884
Sometimes.

206
00:11:52,666 --> 00:11:55,709
That's through support emails where you try and explain stuff

207
00:11:55,709 --> 00:11:59,052
to people, or literally through Band-Aids in code,

208
00:11:59,052 --> 00:12:00,373
or in your design, or in your UI.

209
00:12:00,373 --> 00:12:02,855
Things that you need to support a decision

210
00:12:02,855 --> 00:12:04,336
you made in the past.

211
00:12:04,336 --> 00:12:05,778
And maybe you have a better idea now,

212
00:12:05,778 --> 00:12:07,259
but changing it is probably going

213
00:12:07,259 --> 00:12:08,740
to impact the game in a much larger way

214
00:12:08,740 --> 00:12:09,621
than you would like to.

215
00:12:09,621 --> 00:12:13,805
This is a bit like thousands of the worst customer emails ever.

216
00:12:13,805 --> 00:12:16,287
All the memes where people are like, make it green.

217
00:12:16,287 --> 00:12:17,008
Change that.

218
00:12:17,877 --> 00:12:18,417
It's not good fun.

219
00:12:18,417 --> 00:12:23,119
And copywriting versus design documentation management

220
00:12:23,119 --> 00:12:24,380
is just not the same.

221
00:12:24,380 --> 00:12:26,600
It's a completely different skill.

222
00:12:26,600 --> 00:12:29,621
And you have to produce a lot of PR emails and marketing copy.

223
00:12:29,621 --> 00:12:32,162
And basically, that's just finding 15,000 different ways

224
00:12:32,162 --> 00:12:34,943
to say the same thing as opposed to finding ways

225
00:12:34,943 --> 00:12:38,165
to communicate about development stuff to the rest of your team.

226
00:12:40,413 --> 00:12:42,977
And marketing loses immediacy.

227
00:12:42,977 --> 00:12:45,261
So you're never going to be a new game again.

228
00:12:45,261 --> 00:12:48,427
So press care about you a hell of a lot less.

229
00:12:48,427 --> 00:12:50,730
So once your game comes out, yay, press attention.

230
00:12:50,730 --> 00:12:52,253
Once your game is out for a long time,

231
00:12:52,253 --> 00:12:53,415
try getting more press attention.

232
00:12:55,880 --> 00:12:58,062
And everything is work to create that press attention.

233
00:12:58,062 --> 00:12:59,503
You have to come up with new stories.

234
00:12:59,503 --> 00:13:02,045
You have to come up with new ways to try and get people interested.

235
00:13:02,045 --> 00:13:02,826
It's tricky.

236
00:13:02,826 --> 00:13:08,671
And a launch spike makes all your other long-term marketing

237
00:13:08,671 --> 00:13:09,471
look kind of bad.

238
00:13:09,471 --> 00:13:13,315
The very necessary marketing work you do need to do

239
00:13:13,315 --> 00:13:16,137
feels less and less effective, because you're comparing your spikes

240
00:13:16,137 --> 00:13:19,280
to your baseline, unless you're a perfectionist.

241
00:13:20,020 --> 00:13:22,362
And this is where the actual skill of marketing comes in.

242
00:13:22,362 --> 00:13:25,663
Up until this point, you could get away with regular development updates

243
00:13:25,663 --> 00:13:28,545
and, you know, pretending to be a marketing campaign.

244
00:13:28,545 --> 00:13:33,808
But here, this point is where marketing stops being a side effect of other work

245
00:13:33,808 --> 00:13:35,128
and it becomes a job all on its own.

246
00:13:35,128 --> 00:13:36,609
That's a different set of skills.

247
00:13:36,609 --> 00:13:37,470
And, obviously, this causes problems.

248
00:13:42,137 --> 00:13:49,941
As the demands on a team change and people start doing jobs they're not used to or may not even understand 90% of the time, obviously things go wrong.

249
00:13:49,941 --> 00:14:00,686
So, caveat briefly here. If your game flops, you probably don't have to deal with the things I'm about to explain, but you have a completely different set of problems.

250
00:14:00,686 --> 00:14:01,667
You're like, yay!

251
00:14:01,667 --> 00:14:07,389
One of the biggest things people complained about was a feeling of a lack of creativity.

252
00:14:08,180 --> 00:14:14,602
Creative coders and designers often chafe against the boringness of support tasks, and support can

253
00:14:14,602 --> 00:14:23,385
just feel really stagnant. People want to work on the next game or new prototypes or the next thing,

254
00:14:23,385 --> 00:14:28,187
whatever it is, and it's difficult to abandon something, especially once you've shipped it and

255
00:14:28,187 --> 00:14:33,889
it's earning income for your team. And burnout often just adds up. Very few people know how to

256
00:14:33,889 --> 00:14:35,049
deal with burnout effectively.

257
00:14:36,421 --> 00:14:45,528
If you crunch super hard before launch, obviously that makes everything worse. The pressure that you built up doesn't get a chance to abate in constructive ways. Everybody is still kind of angry at each other.

258
00:14:45,528 --> 00:14:54,934
And the pressure of making a ship date can often sweep issues under the rug. So like, teams kind of just tend to ignore things that have gone wrong, hoping that like, once we ship, we'll fix it. It'll be fine.

259
00:14:54,934 --> 00:15:02,100
We'll all go away in hot tub and everybody will love each other again. And those things do come back to bite you later.

260
00:15:03,519 --> 00:15:06,562
And post-launch depression definitely exists.

261
00:15:06,562 --> 00:15:08,544
I wish you could see some of the comments we got about this.

262
00:15:08,544 --> 00:15:12,688
Some people are lucky, and they don't experience it personally.

263
00:15:12,688 --> 00:15:14,690
But when you're looking at it from a studio perspective,

264
00:15:14,690 --> 00:15:17,272
and you have more than one person in your team,

265
00:15:17,272 --> 00:15:18,633
it's definitely real.

266
00:15:18,633 --> 00:15:22,136
And you just release something that carries expectations.

267
00:15:22,136 --> 00:15:24,298
Those expectations are sometimes different,

268
00:15:24,298 --> 00:15:25,740
and often they're not met.

269
00:15:26,360 --> 00:15:37,866
And the resulting lull after development can be pretty depressing, especially if you're not actually in a lull and you're scrambling to do things that you didn't know how to do before that are different to what you did while you were working on the game.

270
00:15:37,866 --> 00:15:50,352
And finally, there are people. Chances are, if your job involves staring at a screen all day, you might not be a people person. And support often means really, really angry people.

271
00:15:51,710 --> 00:15:54,331
And dealing with that is never that much fun.

272
00:15:54,331 --> 00:15:56,312
We used to have a saying, love and tolerate

273
00:15:56,312 --> 00:15:58,953
the shit out of people.

274
00:15:58,953 --> 00:16:00,554
And that is often tricky.

275
00:16:00,554 --> 00:16:03,595
And people write things about you and your work.

276
00:16:03,595 --> 00:16:07,357
Reviews and opinions can definitely impact team morale.

277
00:16:07,357 --> 00:16:10,118
And everybody's reading them, even if they say they're not.

278
00:16:10,118 --> 00:16:12,139
It's like, oh, just ignore what's going on.

279
00:16:12,139 --> 00:16:14,520
Sneakily, off to Reddit, see what people say.

280
00:16:14,520 --> 00:16:15,981
And they never say nice things.

281
00:16:15,981 --> 00:16:17,881
Or when they do, you never notice.

282
00:16:20,135 --> 00:16:24,637
And all of these stuff kind of snowball and hit small teams much harder.

283
00:16:24,637 --> 00:16:28,799
If your team was built to do development work, it'll have development skills.

284
00:16:28,799 --> 00:16:33,361
And when shipping happens and your skill needs change, as they do,

285
00:16:34,503 --> 00:16:39,129
it will have to scramble to meet the needs. If you don't hire new people, this is like

286
00:16:39,129 --> 00:16:44,856
super harsh. And less people to man the ramparts means if something breaks, you have less options

287
00:16:44,856 --> 00:16:48,801
for people to go away on holiday, to recoup, to do anything different because somebody

288
00:16:48,801 --> 00:16:53,827
has to be there in case things hit the fan. And when you do start a new game,

289
00:16:55,228 --> 00:16:59,670
Working on it will never be the same as previously when you didn't have something to support.

290
00:16:59,670 --> 00:17:04,632
So now any new game you make has some kind of thing in the background that always needs

291
00:17:04,632 --> 00:17:08,793
your attention. You basically have a baby and it needs its diapers changed and it needs

292
00:17:08,793 --> 00:17:13,235
to be taken to school and it needs to have sleepovers with its friends and all sorts

293
00:17:13,235 --> 00:17:16,496
of things like that. That is the weirdest analogy for bundling I've ever thought of.

294
00:17:20,622 --> 00:17:24,243
But the biggest issue with all of this is that people expect things to be very, very

295
00:17:24,243 --> 00:17:28,625
different when they ship a game. So shipping is kind of this inflection point in a studio's

296
00:17:28,625 --> 00:17:33,546
lifetime. And it definitely is, but not for the reasons that people think. The reason

297
00:17:33,546 --> 00:17:37,507
skill changes are so damaging is because the skill change is unexpected and people were

298
00:17:37,507 --> 00:17:42,229
literally hoping for this massive amount of relief. This is a graph of the most common

299
00:17:42,229 --> 00:17:46,430
expectations that respondents had about shipping their games. People who'd never shipped a

300
00:17:46,430 --> 00:17:48,711
game before on the left and multi-shippers on the right.

301
00:17:50,542 --> 00:17:55,404
By the time a game ships, teams really are carrying a lot of assumptions about what shipping means.

302
00:17:55,404 --> 00:17:57,466
Often it's pretty cathartic.

303
00:17:57,466 --> 00:18:03,009
And there's a big skewing towards people wanting to be done with a project after they ship.

304
00:18:04,336 --> 00:18:07,998
You can see that in the number of people who are talking about moving on to new projects.

305
00:18:07,998 --> 00:18:12,301
The sense of closure was a really big one.

306
00:18:12,301 --> 00:18:16,083
And also, freedom to leave or start over or join a new team.

307
00:18:16,083 --> 00:18:18,124
Those are all about getting out of the current situation.

308
00:18:18,124 --> 00:18:22,907
So it's kind of like a certain level of unhappiness with what's currently going on.

309
00:18:22,907 --> 00:18:27,770
And the fact that community management and tech support

310
00:18:27,770 --> 00:18:31,011
isn't like at 100% is really weird.

311
00:18:31,011 --> 00:18:33,453
Who doesn't expect to do tech support when they ship a game?

312
00:18:34,389 --> 00:18:36,611
And if you do, there.

313
00:18:36,611 --> 00:18:41,176
So experienced developers ship games easier.

314
00:18:41,176 --> 00:18:44,379
And here's what those I studied do to mitigate the issues

315
00:18:44,379 --> 00:18:45,560
that I just talked about.

316
00:18:45,560 --> 00:18:50,164
They seriously engage in hardcore expectation management.

317
00:18:50,164 --> 00:18:51,506
I know that sounds like marketing speak,

318
00:18:51,506 --> 00:18:53,908
and it kind of is, but expectation management

319
00:18:53,908 --> 00:18:54,308
is a thing.

320
00:18:55,398 --> 00:18:59,222
Just being aware of what shipping entails and being realistic about that

321
00:18:59,222 --> 00:19:02,385
makes life a lot easier. You don't get blindsided by the same problems.

322
00:19:02,385 --> 00:19:06,709
There are new problems, but they're kind of less big if they're not on top of the other ones as well.

323
00:19:06,709 --> 00:19:10,112
And they track perceptions of success.

324
00:19:10,112 --> 00:19:13,595
This is the thing that I think really kind of took me a while to understand,

325
00:19:13,595 --> 00:19:16,798
is that different people in your team have different goals.

326
00:19:16,798 --> 00:19:19,360
They have different ideas of success.

327
00:19:19,360 --> 00:19:22,303
And those change massively per person.

328
00:19:22,483 --> 00:19:26,145
are going to be like I want the art to be absolutely amazing, other people care

329
00:19:26,145 --> 00:19:30,246
about making sure that your players are super happy, other people only care about

330
00:19:30,246 --> 00:19:34,368
like finances or review scores or whatever and it's totally cool to track

331
00:19:34,368 --> 00:19:39,051
all of those but as somebody running a studio or somebody as part of a team

332
00:19:39,051 --> 00:19:42,632
you need to kind of be aware of what other people care about as success in

333
00:19:42,632 --> 00:19:43,032
your team.

334
00:19:43,893 --> 00:19:48,979
And you need to make sure that you, as a team, define your own success.

335
00:19:48,979 --> 00:19:51,382
So that you can look back after you've shipped your game,

336
00:19:51,382 --> 00:19:53,184
or while you're shipping your game, and say, hey,

337
00:19:53,184 --> 00:19:54,386
we're hitting this success factor.

338
00:19:54,386 --> 00:19:55,007
We're hitting this.

339
00:19:55,007 --> 00:19:56,008
We're doing this.

340
00:19:56,008 --> 00:19:59,412
We can remind ourselves, because everybody always

341
00:19:59,412 --> 00:20:02,816
expects their game to do better than it does, no matter how well it does.

342
00:20:04,242 --> 00:20:06,503
Everybody always expects it to do better.

343
00:20:06,503 --> 00:20:09,064
As long as you have those milestones and those ideas

344
00:20:09,064 --> 00:20:12,185
of this is what success means to us, you can remind yourself.

345
00:20:12,185 --> 00:20:14,165
And that keeps people a lot more grounded

346
00:20:14,165 --> 00:20:15,666
and keeps people a lot happier.

347
00:20:15,666 --> 00:20:19,827
And they also plan for what happens

348
00:20:19,827 --> 00:20:22,108
after they ship their game.

349
00:20:22,108 --> 00:20:23,388
And they plan realistically.

350
00:20:23,388 --> 00:20:24,528
Like I said before, a lot of people

351
00:20:24,528 --> 00:20:26,009
assume that, hey, I'm going to ship my game

352
00:20:26,009 --> 00:20:28,030
and we'll be able to hang out as friends again,

353
00:20:28,030 --> 00:20:29,690
and life will be good, and we'll be happy,

354
00:20:29,690 --> 00:20:32,371
and sunflowers, roses, and pineapples.

355
00:20:33,773 --> 00:20:35,554
I don't know where the pineapples came from.

356
00:20:35,554 --> 00:20:35,994
Cool.

357
00:20:35,994 --> 00:20:40,016
But experienced developers don't see shipping

358
00:20:40,016 --> 00:20:42,417
as this big cliff where everything stops,

359
00:20:42,417 --> 00:20:43,218
and they're like, oh, relief.

360
00:20:43,218 --> 00:20:43,978
They plan ahead.

361
00:20:43,978 --> 00:20:47,380
So they plan as though they're going to need to ship again,

362
00:20:47,380 --> 00:20:49,121
and again, and again.

363
00:20:49,121 --> 00:20:51,722
They want to ship more than one game,

364
00:20:51,722 --> 00:20:53,323
so they need to keep that planning going.

365
00:20:53,323 --> 00:20:57,144
They also tend to have some pretty good systems

366
00:20:57,144 --> 00:20:58,585
around support and testing.

367
00:20:59,537 --> 00:21:06,739
A good support ticketing system will lower your load or the impact of any kind of support load

368
00:21:06,739 --> 00:21:11,441
immensely. And a good system will let team members work together to fix issues and tag each other

369
00:21:11,441 --> 00:21:15,202
and all sorts of things. And there's loads of systems out there. I'm not going to do a laundry

370
00:21:15,202 --> 00:21:18,783
list of the things you should use. Just try them. See which ones work for your team.

371
00:21:18,783 --> 00:21:26,205
And they make life a lot easier. And again, testing.

372
00:21:27,881 --> 00:21:33,022
And how testing was handled across teams was a major differentiator in levels of team morale

373
00:21:33,022 --> 00:21:36,963
and happiness and how well people felt they were doing with their next games as well.

374
00:21:36,963 --> 00:21:40,564
Teams that liked shipping had super robust testing in QA.

375
00:21:40,564 --> 00:21:43,825
Internally, externally, paid, it didn't matter.

376
00:21:43,825 --> 00:21:48,046
And these are pretty small indie teams that do paid external QA.

377
00:21:48,046 --> 00:21:52,927
But they tested for bugs and issues all the time.

378
00:21:52,927 --> 00:21:56,308
Teams that had a hard time shipping were blindsided by testing all the time.

379
00:21:57,500 --> 00:22:02,101
And they only set up things towards the end of a long process of shipping,

380
00:22:02,101 --> 00:22:04,822
when they were already annoyed, and they were already tired,

381
00:22:04,822 --> 00:22:07,263
and they already felt like this shouldn't be a thing that they're

382
00:22:07,263 --> 00:22:09,164
actually doing.

383
00:22:09,164 --> 00:22:11,024
And business is important.

384
00:22:11,024 --> 00:22:14,445
This is where the business part of the games industry

385
00:22:14,445 --> 00:22:17,366
gets the most real for your studio.

386
00:22:17,366 --> 00:22:17,446
So.

387
00:22:18,488 --> 00:22:23,013
you have to know where the money, if any, if you make some, is going and how.

388
00:22:23,013 --> 00:22:26,677
If you don't know how people are going to get money, how your investors are going to get paid,

389
00:22:26,677 --> 00:22:31,162
what your bonus cycles are, everything. If you don't have that lined up,

390
00:22:31,162 --> 00:22:34,286
and before you actually start making money,

391
00:22:34,286 --> 00:22:37,690
negotiations when dollars hit the fan are going to be absolutely terrible.

392
00:22:39,093 --> 00:22:41,275
And you really need proper contracts.

393
00:22:41,275 --> 00:22:45,558
Contracts give you the security of knowing

394
00:22:45,558 --> 00:22:50,362
what everybody's job is, what people's responsibilities are.

395
00:22:50,362 --> 00:22:51,723
You have to know those up front.

396
00:22:51,723 --> 00:22:53,424
That's what contracts allow you to do.

397
00:22:53,424 --> 00:22:56,066
If you're not sure whose job it is to make sure

398
00:22:56,066 --> 00:22:59,328
the servers are running, if you don't

399
00:22:59,328 --> 00:23:01,250
know who's responsible for all your tech support

400
00:23:01,250 --> 00:23:02,310
and responsible for the marketing,

401
00:23:02,310 --> 00:23:02,951
that's going to be a problem.

402
00:23:06,920 --> 00:23:09,723
And also, you kind of have to be aware that now that you're

403
00:23:09,723 --> 00:23:12,105
thinking in a business mode of your game,

404
00:23:12,105 --> 00:23:14,307
things might well go wrong.

405
00:23:14,307 --> 00:23:16,749
And this is the time when that's most likely to happen.

406
00:23:16,749 --> 00:23:19,111
Due to all the other stresses we had, or we mentioned,

407
00:23:19,111 --> 00:23:20,752
and the things that might go wrong,

408
00:23:20,752 --> 00:23:24,075
and the way that the team might be thinking about stuff,

409
00:23:24,075 --> 00:23:25,637
this is when shit hits the fan.

410
00:23:25,637 --> 00:23:28,639
And it's a time of really, really huge change.

411
00:23:28,639 --> 00:23:31,101
So make sure that if things do change,

412
00:23:31,101 --> 00:23:32,523
you're not just going to shut down and die,

413
00:23:32,523 --> 00:23:34,704
and everybody's going to hate each other.

414
00:23:34,704 --> 00:23:34,985
And.

415
00:23:36,010 --> 00:23:41,513
I don't know how obvious this is, but other people and companies are suddenly going to do their

416
00:23:41,513 --> 00:23:47,537
dondest to earn money from you. And that means everything from like G2A spam emails and

417
00:23:47,537 --> 00:23:54,562
you know, streamers asking for thousands of keys to people literally just trying to like

418
00:23:55,022 --> 00:23:57,243
scam you and get you into weird bundles and whatever.

419
00:23:57,243 --> 00:24:00,544
Sometimes these things are fair and they're good opportunities.

420
00:24:00,544 --> 00:24:02,045
Sometimes they're completely unfair and they're

421
00:24:02,045 --> 00:24:03,786
terrible opportunities.

422
00:24:03,786 --> 00:24:05,506
You've got to be prepared to be able to handle that.

423
00:24:05,506 --> 00:24:07,407
Don't just take every opportunity that you see.

424
00:24:07,407 --> 00:24:09,308
Don't just be like, yeah, we're going to bundle right now.

425
00:24:09,308 --> 00:24:11,128
It's going to be the best idea.

426
00:24:11,128 --> 00:24:12,909
Chances are it's not going to solve whatever problem is

427
00:24:12,909 --> 00:24:14,190
preventing your game from succeeding.

428
00:24:16,853 --> 00:24:18,854
Experienced developers tend to think in terms of teams,

429
00:24:18,854 --> 00:24:22,416
mostly because teams can do so much more than people

430
00:24:22,416 --> 00:24:22,936
on their own.

431
00:24:22,936 --> 00:24:25,198
Even solo developers often have people

432
00:24:25,198 --> 00:24:26,178
that they're working with.

433
00:24:26,178 --> 00:24:27,118
They have contractors.

434
00:24:27,118 --> 00:24:32,281
They have acquaintances that often rock up and help them

435
00:24:32,281 --> 00:24:35,783
out, and they feed them, or whatever their agreement is.

436
00:24:35,783 --> 00:24:37,403
We had very, very few respondents

437
00:24:37,403 --> 00:24:39,645
who only had, like, it's me working on my game.

438
00:24:39,645 --> 00:24:41,105
I'm some kind of crazy superstar.

439
00:24:43,007 --> 00:24:44,587
And teams are an exponential multiplier

440
00:24:44,587 --> 00:24:46,468
on the amount of work that goes into a game

441
00:24:46,468 --> 00:24:49,269
and the amount of the outcome that the effort has.

442
00:24:49,269 --> 00:24:52,511
So make sure that the team that just made this cool thing,

443
00:24:52,511 --> 00:24:54,212
this game that you're thinking about shipping

444
00:24:54,212 --> 00:24:56,032
or that you're near to shipping now,

445
00:24:56,032 --> 00:24:57,953
make sure that that team can still survive and ship

446
00:24:57,953 --> 00:25:00,054
another thing, because chances are you're pretty

447
00:25:00,054 --> 00:25:01,055
good at working together now.

448
00:25:01,055 --> 00:25:04,616
Sometimes that means you need to sort of take a backseat

449
00:25:04,616 --> 00:25:07,698
from the individual perspective and think of things as a team

450
00:25:07,698 --> 00:25:09,438
instead of just like, I'm annoyed about this.

451
00:25:11,002 --> 00:25:12,763
And also, everyone interviewed mentioned

452
00:25:12,763 --> 00:25:15,304
how team communication was really, really important.

453
00:25:15,304 --> 00:25:17,605
And it was really interesting hearing

454
00:25:17,605 --> 00:25:20,126
how different developers were talking about their teams

455
00:25:20,126 --> 00:25:21,987
and talking about how their team interaction worked.

456
00:25:21,987 --> 00:25:25,649
And this isn't just from the perspective of friendliness,

457
00:25:25,649 --> 00:25:27,350
but from a trust perspective.

458
00:25:27,350 --> 00:25:29,291
A team that trusts each other can critique each other,

459
00:25:29,291 --> 00:25:30,792
and they will always work better together.

460
00:25:33,297 --> 00:25:36,719
And don't let things build up.

461
00:25:36,719 --> 00:25:41,382
Handle your problems early, as soon as they appear.

462
00:25:41,382 --> 00:25:44,645
A lot of times, especially while you're crunching or you're

463
00:25:44,645 --> 00:25:46,846
chipping and things are bad, you'll

464
00:25:46,846 --> 00:25:49,007
let these things build up and sweep them

465
00:25:49,007 --> 00:25:51,529
under the rug, like I said before.

466
00:25:52,773 --> 00:25:55,253
that's going to come back and bite you later on.

467
00:25:55,253 --> 00:25:59,114
And if these things are recurring,

468
00:25:59,114 --> 00:26:01,475
consider making pretty large changes to your team

469
00:26:01,475 --> 00:26:03,255
or to the team structure itself to make sure

470
00:26:03,255 --> 00:26:05,056
that they don't keep coming back.

471
00:26:05,056 --> 00:26:06,716
If you've taken steps to try and solve something

472
00:26:06,716 --> 00:26:09,057
and the real reason is something else,

473
00:26:09,057 --> 00:26:10,957
don't assume that doing the same thing again

474
00:26:10,957 --> 00:26:12,117
is going to have an impact.

475
00:26:12,117 --> 00:26:13,758
And these can be difficult conversations.

476
00:26:13,758 --> 00:26:16,538
But everybody said they will always

477
00:26:16,538 --> 00:26:18,619
be way more difficult if you leave them later.

478
00:26:18,619 --> 00:26:21,940
They don't get easier if you leave people alone.

479
00:26:23,011 --> 00:26:30,258
And sometimes you need to be aware that your team is going to grow. In fact, all the time you need to be aware that your team is going to grow.

480
00:26:30,258 --> 00:26:36,424
You're going to be working with different people. You're going to be working with contact people in terms of distribution, people in terms of marketing, etc.

481
00:26:36,424 --> 00:26:41,528
So your team is going to get larger. How you communicate and how you handle that...

482
00:26:41,789 --> 00:26:44,771
is a pretty good indicator of shipping success.

483
00:26:44,771 --> 00:26:49,195
Teams that were OK with embracing more people

484
00:26:49,195 --> 00:26:50,837
and were welcoming to those people

485
00:26:50,837 --> 00:26:53,840
were much more likely to succeed and to stay around

486
00:26:53,840 --> 00:26:55,101
after their game finished.

487
00:26:55,101 --> 00:26:56,802
So what lessons can we take from this sort of stuff

488
00:26:56,802 --> 00:27:02,127
that I've been talking about in terms of what

489
00:27:02,127 --> 00:27:05,130
can we do explicitly to make shipping easier

490
00:27:05,130 --> 00:27:06,051
for all of our studios?

491
00:27:09,529 --> 00:27:13,172
I hope you've noticed that I talk about skills a lot in this talk.

492
00:27:13,172 --> 00:27:22,999
And mostly that's because the skills that people require to ship a game are very, very different to what development needs generally are.

493
00:27:22,999 --> 00:27:27,742
So you can get away with building a game with none of these skills for ages. That's cool.

494
00:27:28,307 --> 00:27:31,870
But when you start shipping and you need these skills,

495
00:27:31,870 --> 00:27:34,592
you have to find them, or hire them,

496
00:27:34,592 --> 00:27:36,593
or build them inside your team.

497
00:27:36,593 --> 00:27:37,774
Whatever you need to do, you need

498
00:27:37,774 --> 00:27:38,855
to start thinking about, cool, we

499
00:27:38,855 --> 00:27:41,137
need people that can handle PR.

500
00:27:41,137 --> 00:27:42,638
We need people that can handle HR

501
00:27:42,638 --> 00:27:43,839
and deal with the burnout factor.

502
00:27:43,839 --> 00:27:48,243
That shipping is an entirely different job,

503
00:27:48,243 --> 00:27:49,424
and that needs a different team.

504
00:27:49,424 --> 00:27:52,706
And perspective on these things is everything.

505
00:27:52,706 --> 00:27:54,548
I mean, there are detail-oriented programmers

506
00:27:54,548 --> 00:27:54,928
out there.

507
00:27:55,662 --> 00:28:00,927
the people with their hand up earlier, who don't want to necessarily be working on gameplay

508
00:28:00,927 --> 00:28:05,471
code. They're great at handling bugs, and you can sort of think of it as people who would

509
00:28:05,471 --> 00:28:10,796
rather race cars or people who would tune them up. There's a big difference in perspective

510
00:28:10,796 --> 00:28:15,801
between those things, and those people see cars as completely different things, but we're

511
00:28:15,801 --> 00:28:17,162
like, yeah, it's a car, okay.

512
00:28:18,832 --> 00:28:20,875
That perspective is really important.

513
00:28:20,875 --> 00:28:22,818
If you can find somebody who has a different perspective

514
00:28:22,818 --> 00:28:25,623
on the sorts of skills and the problems

515
00:28:25,623 --> 00:28:27,926
that your team is having, life is better.

516
00:28:28,848 --> 00:28:32,030
And it's your job to get these two kinds of programmers,

517
00:28:32,030 --> 00:28:34,171
and by extension, these two kinds of people working

518
00:28:34,171 --> 00:28:37,052
on everything, HR, et cetera, to play together well.

519
00:28:37,052 --> 00:28:38,894
I mean, that's why this is a team sport.

520
00:28:38,894 --> 00:28:42,155
There are people out there who will positively

521
00:28:42,155 --> 00:28:45,697
love every sort of interaction that your team seems to hate.

522
00:28:45,697 --> 00:28:47,859
And if your team hates something,

523
00:28:47,859 --> 00:28:51,581
it's actually an opportunity to do something crazy well.

524
00:28:51,581 --> 00:28:53,322
It's an opportunity to succeed, because chances

525
00:28:53,322 --> 00:28:55,083
are if you hate it, other people are going to hate it, too.

526
00:28:55,083 --> 00:28:57,204
And therefore, their game is not going to do very well.

527
00:28:57,804 --> 00:29:00,207
or you can do something better than their game isn't doing.

528
00:29:00,207 --> 00:29:05,793
And finding the right skills or the person is,

529
00:29:05,793 --> 00:29:08,295
or the right person for a specific job like that

530
00:29:08,295 --> 00:29:10,838
is often this rocket fuel motivation that takes your team

531
00:29:10,838 --> 00:29:12,200
to another level of building stuff.

532
00:29:12,200 --> 00:29:16,704
Instead of being super drained by the act of shipping,

533
00:29:16,704 --> 00:29:17,906
that can energize everyone.

534
00:29:20,381 --> 00:29:23,984
And yeah, you kind of have to allow people to change.

535
00:29:23,984 --> 00:29:25,665
As you go through a long development cycle,

536
00:29:25,665 --> 00:29:27,446
people's needs are going to change.

537
00:29:27,446 --> 00:29:29,888
People's approaches to what they enjoy or what they dislike

538
00:29:29,888 --> 00:29:31,349
are going to change.

539
00:29:31,349 --> 00:29:34,431
Sometimes people will say, yeah, sure, I'll try this task.

540
00:29:34,431 --> 00:29:38,414
I'll try being the tech support person or being a bug ninja.

541
00:29:38,414 --> 00:29:39,635
Maybe they don't like it.

542
00:29:39,635 --> 00:29:39,915
That's OK.

543
00:29:39,915 --> 00:29:43,257
Maybe their needs have changed so much that they no longer

544
00:29:43,257 --> 00:29:45,559
want to be a part of the project, and they leave.

545
00:29:45,559 --> 00:29:46,620
That's OK, too.

546
00:29:46,620 --> 00:29:47,380
These things happen.

547
00:29:49,642 --> 00:29:52,105
And business, again, like I said,

548
00:29:52,105 --> 00:29:54,488
is what shipping is all about.

549
00:29:54,488 --> 00:29:56,871
Generally, people who had a biz dev perspective

550
00:29:56,871 --> 00:29:58,914
really enjoyed shipping.

551
00:29:58,914 --> 00:30:01,096
Often, this is where publishers were most useful to indie

552
00:30:01,096 --> 00:30:04,020
studios, because they provided a business development angle,

553
00:30:04,020 --> 00:30:07,124
and studio publishers lived to ship.

554
00:30:09,835 --> 00:30:12,837
And from a business perspective, your studio is a garden.

555
00:30:12,837 --> 00:30:14,939
So it puts out what you plant in it.

556
00:30:14,939 --> 00:30:17,241
The people who've shipped 20 plus games

557
00:30:17,241 --> 00:30:19,442
talk about projects in very different ways

558
00:30:19,442 --> 00:30:22,204
to people who've never shipped a game before.

559
00:30:22,204 --> 00:30:25,306
The super shippers, they're positive, and yeah,

560
00:30:25,306 --> 00:30:27,268
they're nervous, and they're anxious about success,

561
00:30:27,268 --> 00:30:29,709
and they're worried about what their game might earn.

562
00:30:29,709 --> 00:30:31,491
But they believe in what they're doing.

563
00:30:31,491 --> 00:30:34,253
And they can tell you exactly why what they're doing

564
00:30:34,253 --> 00:30:36,054
is a good idea, realistically.

565
00:30:36,054 --> 00:30:38,736
And they will talk about things you have never thought of.

566
00:30:41,347 --> 00:30:43,571
And, you know, again, crunch is bad.

567
00:30:43,571 --> 00:30:44,613
Crunch is bad.

568
00:30:50,845 --> 00:30:52,006
OK.

569
00:30:52,006 --> 00:30:55,089
Many people I spoke to missed their own launch parties.

570
00:30:55,089 --> 00:30:55,670
Yo.

571
00:30:55,670 --> 00:31:00,975
Because they were developing until the final moment of release

572
00:31:00,975 --> 00:31:02,317
and then carrying on after that.

573
00:31:02,317 --> 00:31:03,538
It's terrifying.

574
00:31:03,538 --> 00:31:07,162
And while crunching is probably inevitable if you're not

575
00:31:07,162 --> 00:31:11,206
a very experienced team, it means you failed at management.

576
00:31:11,206 --> 00:31:13,128
Just crunch is bad.

577
00:31:14,335 --> 00:31:14,655
don't do it.

578
00:31:14,655 --> 00:31:17,236
And there's very little to commend Crunch.

579
00:31:17,236 --> 00:31:20,217
Most people said it was way better to push back their release

580
00:31:20,217 --> 00:31:23,799
date and release much later than to Crunch for months

581
00:31:23,799 --> 00:31:26,840
to hit something that they thought was crazy important.

582
00:31:26,840 --> 00:31:30,922
Crunch changes perspectives from producing quality

583
00:31:30,922 --> 00:31:31,542
to producing output.

584
00:31:31,542 --> 00:31:33,023
And that's a bad thing.

585
00:31:33,023 --> 00:31:35,284
You're never going to ship something when you're just

586
00:31:35,284 --> 00:31:35,824
trying to produce output.

587
00:31:38,478 --> 00:31:40,959
Burnout, when coupled with crunch, is even worse.

588
00:31:40,959 --> 00:31:44,140
So one of the tricks is to manage developer burnout

589
00:31:44,140 --> 00:31:45,481
upfront.

590
00:31:45,481 --> 00:31:47,922
Some studios had multiple teams and, obviously,

591
00:31:47,922 --> 00:31:50,583
workers with different kind of skill loadouts.

592
00:31:50,583 --> 00:31:51,803
Think of different characters in an RPG.

593
00:31:51,803 --> 00:31:56,245
And they would cycle people on and off of their projects

594
00:31:56,245 --> 00:31:57,465
because of it.

595
00:31:57,465 --> 00:32:00,186
Others would mandate time off after shipping.

596
00:32:00,186 --> 00:32:02,127
Everyone I spoke to, literally everyone,

597
00:32:02,127 --> 00:32:04,748
gave at least two weeks of paid leave

598
00:32:04,748 --> 00:32:06,648
after a game shipped at different times.

599
00:32:08,109 --> 00:32:10,891
Most did more.

600
00:32:10,891 --> 00:32:14,973
And you don't want to kind of force people to come back to work.

601
00:32:14,973 --> 00:32:19,396
It's much better to wait until people are literally going crazy because they haven't

602
00:32:19,396 --> 00:32:23,938
built something in like a few weeks than to try and force everybody to sit down and like

603
00:32:23,938 --> 00:32:25,479
yeah, come up with the next prototype, come on, do it.

604
00:32:25,479 --> 00:32:26,800
And so the next thing is to think in terms of the long term.

605
00:32:35,568 --> 00:32:39,612
We asked a lot of questions about where people got mentorship from and the sorts of questions they asked.

606
00:32:39,612 --> 00:32:46,138
And there was an interesting skew towards the business angle that people approach mentors for,

607
00:32:46,138 --> 00:32:48,821
at least in the experienced studios.

608
00:32:48,821 --> 00:32:51,964
The inexperienced studios were all like, how do I program?

609
00:32:51,964 --> 00:32:53,225
What does art work?

610
00:32:53,225 --> 00:32:56,308
And that was a bit telling.

611
00:32:57,211 --> 00:32:59,112
So experience doesn't need to be yours.

612
00:32:59,112 --> 00:33:03,594
This is a conference covered in huge amounts of experience.

613
00:33:03,594 --> 00:33:05,115
Go and ask people who have shipped games.

614
00:33:05,115 --> 00:33:08,317
If you're worried about, oh, my project is x long.

615
00:33:08,317 --> 00:33:09,598
I don't know if it's going to work.

616
00:33:09,598 --> 00:33:11,979
I'm not sure how we're going to survive.

617
00:33:11,979 --> 00:33:13,600
Everybody hates everyone else now.

618
00:33:13,600 --> 00:33:14,260
How do we deal with this?

619
00:33:14,260 --> 00:33:17,542
Lots of people here have dealt with the same problem.

620
00:33:17,542 --> 00:33:20,463
And they'll be able to tell you their personal solutions.

621
00:33:21,316 --> 00:33:25,499
And in terms of the long term, publishers are a really good solution.

622
00:33:25,499 --> 00:33:32,284
If you can't necessarily hire people to take over the skill burden of shipping games,

623
00:33:32,284 --> 00:33:34,246
publishers live for that.

624
00:33:34,246 --> 00:33:39,450
Interviewing a publisher and interviewing a game developer and talking about shipping was like,

625
00:33:39,450 --> 00:33:41,031
I wasn't talking about the same thing.

626
00:33:41,031 --> 00:33:44,213
The one person I was talking about being ill for three months,

627
00:33:44,213 --> 00:33:46,115
and the other person I was talking about cake.

628
00:33:46,115 --> 00:33:46,715
It was just like...

629
00:33:48,130 --> 00:33:50,612
And where developers are like, oh, I really

630
00:33:50,612 --> 00:33:52,854
like being able to do the stuff that I was doing before,

631
00:33:52,854 --> 00:33:54,656
publishers are like, shipping is great.

632
00:33:54,656 --> 00:33:56,297
We need more ideas to ship this thing.

633
00:33:56,297 --> 00:33:56,557
Come on.

634
00:33:56,557 --> 00:33:59,880
It's pretty interesting.

635
00:33:59,880 --> 00:34:02,742
But again, with publishers, make sure they're always

636
00:34:02,742 --> 00:34:05,044
providing value to your team and value to your game.

637
00:34:05,044 --> 00:34:06,785
You don't want to just sign with a publisher

638
00:34:06,785 --> 00:34:08,187
because you're hoping, like, yeah,

639
00:34:08,187 --> 00:34:10,549
they're not going to hate this as much as we are.

640
00:34:10,549 --> 00:34:12,370
Chances are, if they don't find something to love,

641
00:34:12,370 --> 00:34:13,631
if they don't find a way to add value,

642
00:34:13,631 --> 00:34:14,612
it's not going to be worth it for you.

643
00:34:15,818 --> 00:34:18,399
And budget for time after you ship.

644
00:34:18,399 --> 00:34:21,841
Make sure that you're not like, hey, we're going to ship this game,

645
00:34:21,841 --> 00:34:25,402
and then immediately we'll go on to the next work for hire project,

646
00:34:25,402 --> 00:34:27,964
and we'll hope that we make enough revenue share while this is happening,

647
00:34:27,964 --> 00:34:30,265
and then life will be great.

648
00:34:30,265 --> 00:34:31,886
You're going to need it.

649
00:34:31,886 --> 00:34:35,067
I mean, if you're broke, how will you support the studio?

650
00:34:35,067 --> 00:34:37,208
That's a question you need to be able to answer.

651
00:34:38,059 --> 00:34:42,961
How will you find another client if you've been pushing really hard for three weeks or

652
00:34:42,961 --> 00:34:46,363
pushing really hard for five years to finish your game?

653
00:34:46,363 --> 00:34:47,003
Deal flow is tricky.

654
00:34:47,003 --> 00:34:49,204
What do you do if the game doesn't earn?

655
00:34:49,204 --> 00:34:50,544
Where is your income coming from?

656
00:34:50,544 --> 00:34:54,686
These are all questions you need to have and shipping is never going to be a magic bullet

657
00:34:54,686 --> 00:34:55,567
to solve those problems.

658
00:34:55,567 --> 00:34:59,328
Like, oh yeah, we'll put this game out there and everybody will make a million monies.

659
00:34:59,328 --> 00:35:02,810
No, there's like five people in the history of ever that that's happened to.

660
00:35:04,563 --> 00:35:09,545
And think of your plans as being at least a year long.

661
00:35:09,545 --> 00:35:14,147
So try to plan for the six-month plan, a year plan,

662
00:35:14,147 --> 00:35:15,947
and maybe an 18-month plan if you can.

663
00:35:15,947 --> 00:35:17,248
They don't have to be super detailed.

664
00:35:17,248 --> 00:35:21,389
Being asked, so what's the next game,

665
00:35:21,389 --> 00:35:23,210
is often the most annoying question

666
00:35:23,210 --> 00:35:25,611
that you'll get at dev meetups and when

667
00:35:25,611 --> 00:35:26,331
you're talking to press.

668
00:35:26,331 --> 00:35:27,892
They're like, what are you doing next?

669
00:35:27,892 --> 00:35:29,912
And that sucks.

670
00:35:29,912 --> 00:35:31,593
But if you don't have an answer, it kind of

671
00:35:31,593 --> 00:35:32,573
means you don't have a plan.

672
00:35:34,017 --> 00:35:37,201
So if you have a little bit of a plan, answering that's really easy.

673
00:35:37,201 --> 00:35:39,164
And it doesn't have to be super accurate, just, you know,

674
00:35:39,164 --> 00:35:40,545
hey, yeah, we're going to do this next,

675
00:35:40,545 --> 00:35:42,889
or we're spending this long prototyping.

676
00:35:42,889 --> 00:35:48,997
But be careful of putting the burden of running your studio on prototypes.

677
00:35:48,997 --> 00:35:50,899
So when you do prototype, have goals.

678
00:35:52,162 --> 00:35:53,682
How many prototypes are you going to do?

679
00:35:53,682 --> 00:35:55,363
How long is each prototype going to last?

680
00:35:55,363 --> 00:35:56,844
How long is the entire prototyping session

681
00:35:56,844 --> 00:35:57,544
going to last?

682
00:35:57,544 --> 00:35:59,285
What new skills do you want to learn?

683
00:35:59,285 --> 00:36:02,346
Who do you want to try in different positions on the team?

684
00:36:02,346 --> 00:36:03,887
What new people do you want to bring in and try

685
00:36:03,887 --> 00:36:05,168
on the prototypes?

686
00:36:05,168 --> 00:36:07,309
Goals for prototyping are crazy important,

687
00:36:07,309 --> 00:36:09,330
and that requires a longer term plan.

688
00:36:09,330 --> 00:36:11,671
Prototyping on its own is never going

689
00:36:11,671 --> 00:36:13,251
to solve any of your issues.

690
00:36:13,251 --> 00:36:18,674
And then the most important thing is to look back and learn.

691
00:36:19,735 --> 00:36:23,097
You need to re-evaluate when every time you finish a game,

692
00:36:23,097 --> 00:36:25,659
or every time you get a game to the point where you're,

693
00:36:25,659 --> 00:36:26,599
oh, the GIF's working.

694
00:36:26,599 --> 00:36:26,900
Yeah.

695
00:36:26,900 --> 00:36:29,741
Every time you get a game to the point

696
00:36:29,741 --> 00:36:32,303
where you're thinking about shipping it,

697
00:36:32,303 --> 00:36:34,384
look back and go, OK, what could we do better?

698
00:36:34,384 --> 00:36:35,565
How can we do this differently?

699
00:36:36,471 --> 00:36:38,633
What problems could we solve?

700
00:36:38,633 --> 00:36:40,815
If your PR was bad on your previous game,

701
00:36:40,815 --> 00:36:42,637
do something about it.

702
00:36:42,637 --> 00:36:45,319
If you crunched and everyone hates each other,

703
00:36:45,319 --> 00:36:46,320
avoid it next time.

704
00:36:46,320 --> 00:36:47,461
Figure out your management problems.

705
00:36:47,461 --> 00:36:51,005
The reality is that even if you've

706
00:36:51,005 --> 00:36:53,627
shipped a lot of games before, and this surprised me,

707
00:36:54,348 --> 00:36:59,789
Every developer I spoke to always had things that they wanted to learn from about their previous game.

708
00:36:59,789 --> 00:37:04,491
They were like, ah, we shipped this and this didn't work and we shipped and this didn't work and then previously we tried this thing

709
00:37:04,491 --> 00:37:10,132
and blah. And one of the reasons for that is that the market conditions change.

710
00:37:10,132 --> 00:37:13,593
When business hits your game, when you start trying to make money off of this thing,

711
00:37:16,152 --> 00:37:18,412
you're never going to be shipping the same game that you

712
00:37:18,412 --> 00:37:20,113
or shipping into the same environment

713
00:37:20,113 --> 00:37:22,514
that you started building your game in.

714
00:37:22,514 --> 00:37:24,614
So your predictions are going to be wrong.

715
00:37:24,614 --> 00:37:26,235
You kind of need to learn how to deal with that,

716
00:37:26,235 --> 00:37:26,695
and that's a skill.

717
00:37:26,695 --> 00:37:28,115
You've got to practice that.

718
00:37:28,115 --> 00:37:33,297
And if you're already reasonably good at dealing

719
00:37:33,297 --> 00:37:34,517
with the problems you had last ship,

720
00:37:34,517 --> 00:37:37,879
then now the new problems are going to be much smaller,

721
00:37:37,879 --> 00:37:39,359
and they're going to feel much less overwhelming.

722
00:37:40,803 --> 00:37:46,007
Oh, and there's just one more small thing before I wrap up,

723
00:37:46,007 --> 00:37:46,888
and we can do questions.

724
00:37:46,888 --> 00:37:50,751
And this is pretty universal.

725
00:37:50,751 --> 00:37:51,152
Don't live together.

726
00:37:57,867 --> 00:38:02,634
Being in the same space constantly while trying to ship a game is a multiplier for every single

727
00:38:02,634 --> 00:38:05,218
stress I've mentioned and every single problem that developers have.

728
00:38:05,218 --> 00:38:10,607
It creates an environment in which crunch is much, much easier to get into because you

729
00:38:10,607 --> 00:38:11,588
never really stop working.

730
00:38:13,692 --> 00:38:18,858
and it offers few outlets for the relaxation necessary for people to kind of turn off work

731
00:38:18,858 --> 00:38:21,321
and calm down and go do other things.

732
00:38:21,321 --> 00:38:26,887
You might all love each other and be the best of friends and have the best time, but the

733
00:38:26,887 --> 00:38:30,011
teams that live together had the hardest time.

734
00:38:30,732 --> 00:38:35,334
And hey, this is not necessarily a cause and effect thing.

735
00:38:35,334 --> 00:38:39,917
It might be that teams that live together for budgetary reasons

736
00:38:39,917 --> 00:38:41,978
also had the worst approaches to management,

737
00:38:41,978 --> 00:38:42,738
and et cetera, et cetera, et cetera.

738
00:38:42,738 --> 00:38:44,179
But even teams that were living together

739
00:38:44,179 --> 00:38:46,520
because it was convenient or because they thought

740
00:38:46,520 --> 00:38:48,141
it was the best way that they could make games

741
00:38:48,141 --> 00:38:48,681
still had a bad time.

742
00:38:48,681 --> 00:38:49,101
So questions.

743
00:38:49,101 --> 00:38:50,802
And yeah, feel free to ask stuff about early access if you need to.

744
00:39:07,172 --> 00:39:12,274
I also really wish that I could take all the interviews that I did and make them podcasts,

745
00:39:12,274 --> 00:39:14,395
but that would violate everybody's privacy.

746
00:39:14,395 --> 00:39:16,215
There's a huge amount of learning in those things.

747
00:39:16,215 --> 00:39:23,458
I strongly recommend that if you have questions about the business of running a studio or

748
00:39:23,458 --> 00:39:26,879
what it's like to deal with the problems you're currently having, reach out to a developer

749
00:39:26,879 --> 00:39:29,320
that you think has already solved those.

750
00:39:29,320 --> 00:39:30,680
Chances are they'll respond.

751
00:39:32,802 --> 00:39:42,850
So I feel like everybody has kind of an assumption about what the term crunch means and I never hear a formal definition. Would you mind describing your definition?

752
00:39:42,850 --> 00:39:45,392
Wow, okay, I'm being asked for a formal definition of crunch.

753
00:39:48,691 --> 00:39:52,653
In the questionnaire, I asked people what flavor of crunch

754
00:39:52,653 --> 00:39:56,534
they'd experienced, mostly because a definition of crunch

755
00:39:56,534 --> 00:39:58,255
is a tricky thing.

756
00:39:58,255 --> 00:40:01,376
I think a lot of people use time at work,

757
00:40:01,376 --> 00:40:04,157
so anything above whatever your current work environment

758
00:40:04,157 --> 00:40:06,738
standard hours are.

759
00:40:06,738 --> 00:40:09,880
And other people use amount of time

760
00:40:09,880 --> 00:40:11,921
taken from other activities, which

761
00:40:11,921 --> 00:40:13,441
is what I personally prefer.

762
00:40:13,441 --> 00:40:16,923
So if you're taking time from family time, that's crunch.

763
00:40:17,803 --> 00:40:19,865
If you're taking time as a team, you know,

764
00:40:19,865 --> 00:40:21,666
and there's a difference between mandated crunch,

765
00:40:21,666 --> 00:40:23,927
where it's like a producer is on everybody's ass

766
00:40:23,927 --> 00:40:26,468
and saying like, you have to be in that X time in the office

767
00:40:26,468 --> 00:40:29,150
or everybody's fired,

768
00:40:29,150 --> 00:40:31,251
versus people choosing to crunch on their own

769
00:40:31,251 --> 00:40:33,932
because they feel they have a goal

770
00:40:33,932 --> 00:40:35,773
or they're like, oh, I'm slightly behind on this thing,

771
00:40:35,773 --> 00:40:37,034
I'm gonna work on this a little bit harder.

772
00:40:39,245 --> 00:40:45,170
It's the things you're taking time from that you most often don't notice. A lot of people only

773
00:40:45,170 --> 00:40:52,216
start thinking about crunch as crunch when they're taking time away from sleep. But there are

774
00:40:52,216 --> 00:40:55,319
things that you're taking things away from before that point. So, yeah.

775
00:40:55,319 --> 00:41:01,043
I just wanted to say, excellent talk. It's been one of my favorites so far.

776
00:41:03,714 --> 00:41:07,756
curious to know either your personal opinion or the opinions of the people you've

777
00:41:07,756 --> 00:41:15,979
interviewed in regards to answering support e-mails. Specifically in terms of honesty, like

778
00:41:15,979 --> 00:41:22,361
how honest do they recommend being? I've seen it go both ways. I've seen people be like, oh,

779
00:41:22,361 --> 00:41:26,003
thanks, I really feel like I understand what you're going through as a developer more and I've

780
00:41:26,003 --> 00:41:29,764
also seen it backfire where somebody's been like, oh, you're not fixing the net code?

781
00:41:30,527 --> 00:41:32,389
You're abandoning the community.

782
00:41:32,389 --> 00:41:33,809
I don't want anything to do with you.

783
00:41:33,809 --> 00:41:36,831
I'm going to scream as loud as possible about it.

784
00:41:36,831 --> 00:41:41,895
So general strategies for responding to support emails.

785
00:41:41,895 --> 00:41:44,897
I think those change according to the team

786
00:41:44,897 --> 00:41:46,498
and according to the skill sets you have.

787
00:41:46,498 --> 00:41:50,420
If you have somebody that's good at writing on your team,

788
00:41:50,420 --> 00:41:53,342
then you can afford to be a little bit more.

789
00:41:54,203 --> 00:42:00,368
responsive. If you have somebody that's really good at community management and they know how to talk to your players and they're an established voice,

790
00:42:00,368 --> 00:42:07,734
because the things where people like often listen and really respond well is when they're being responded to by somebody that they expect to respond to them.

791
00:42:07,734 --> 00:42:14,899
So there's a way that the studio communicates or there's a way that ex-tech support person communicates with people.

792
00:42:16,013 --> 00:42:16,854
This can vary.

793
00:42:16,854 --> 00:42:19,356
I mean, if you're funny, or you think you're funny,

794
00:42:19,356 --> 00:42:21,457
and you have a cool response.

795
00:42:21,457 --> 00:42:24,280
I mean, we have this massively sarcastic form email

796
00:42:24,280 --> 00:42:26,021
when people ask us when something's coming out

797
00:42:26,021 --> 00:42:27,062
on the phone.

798
00:42:27,062 --> 00:42:29,244
And we're like, this is the worst phone ever,

799
00:42:29,244 --> 00:42:32,106
and this is your search replaced for x, x, x, x, x,

800
00:42:32,106 --> 00:42:33,447
for whatever phone they've mentioned.

801
00:42:33,447 --> 00:42:34,608
It's like, this phone is terrible.

802
00:42:34,608 --> 00:42:35,509
It's the worst.

803
00:42:35,509 --> 00:42:36,310
Everything is bad.

804
00:42:36,310 --> 00:42:36,950
We hate it.

805
00:42:36,950 --> 00:42:38,571
And then it goes in this weird tirade

806
00:42:38,571 --> 00:42:41,334
about movies in the 80s, and then comes back.

807
00:42:41,334 --> 00:42:43,856
And it's really stupid.

808
00:42:43,856 --> 00:42:44,576
But people love it.

809
00:42:45,487 --> 00:42:48,089
And they love it because that's sort of how we communicate

810
00:42:48,089 --> 00:42:49,069
in the game already.

811
00:42:49,069 --> 00:42:51,811
And therefore, that makes sense.

812
00:42:51,811 --> 00:42:55,132
Generally, if you're unsure, ask someone.

813
00:42:55,132 --> 00:42:56,453
And ask someone outside of your team.

814
00:42:56,453 --> 00:43:00,776
And these are things that you can build strategies for.

815
00:43:00,776 --> 00:43:03,937
So as robotic as it sounds, have a flow chart.

816
00:43:03,937 --> 00:43:05,598
Like, is Steve here?

817
00:43:05,598 --> 00:43:06,299
Yes.

818
00:43:06,299 --> 00:43:08,300
Steve should answer the mail.

819
00:43:08,300 --> 00:43:09,960
Is Steve not here?

820
00:43:09,960 --> 00:43:10,161
No.

821
00:43:10,161 --> 00:43:11,381
Are we currently angry?

822
00:43:11,381 --> 00:43:12,002
Yes.

823
00:43:12,002 --> 00:43:14,543
Send the email to Steve.

824
00:43:15,683 --> 00:43:17,864
build processes for this sort of stuff.

825
00:43:17,864 --> 00:43:21,765
And it differs according to your team.

826
00:43:21,765 --> 00:43:22,205
Hey, Danny.

827
00:43:22,205 --> 00:43:26,066
You emphasize testing a lot in your talk.

828
00:43:26,066 --> 00:43:28,987
And you mentioned that regardless

829
00:43:28,987 --> 00:43:30,848
of the size of your team.

830
00:43:31,407 --> 00:43:33,508
like experienced teams tend to have,

831
00:43:33,508 --> 00:43:36,329
whether it's a paid QA or internal QA,

832
00:43:36,329 --> 00:43:39,670
a very robust QA process.

833
00:43:39,670 --> 00:43:41,390
And I was wondering if you could give more details

834
00:43:41,390 --> 00:43:43,431
about what worked for certain teams,

835
00:43:43,431 --> 00:43:45,551
or if you saw any patterns that emerged.

836
00:43:45,551 --> 00:43:49,693
Different teams had, okay, so the question is

837
00:43:49,693 --> 00:43:52,934
if there were patterns in QA responses,

838
00:43:52,934 --> 00:43:54,634
because I was talking about it a lot,

839
00:43:54,634 --> 00:43:56,335
and how teams tended to test.

840
00:43:57,395 --> 00:44:02,257
It wasn't so much the teams had specific ways of testing that were common to everybody.

841
00:44:02,257 --> 00:44:09,840
Some teams had days of the week where no new development happened and they only did testing.

842
00:44:09,840 --> 00:44:13,462
Other teams had internal QA people that were constantly testing.

843
00:44:13,462 --> 00:44:16,523
So, like, there were always a couple of builds behind,

844
00:44:16,523 --> 00:44:19,804
and if a build was not okayed for release by this person, it didn't go out.

845
00:44:19,804 --> 00:44:19,885
Okay.

846
00:44:22,887 --> 00:44:25,810
And obviously, that person was plugged into their bug finding

847
00:44:25,810 --> 00:44:27,853
and bug system and all the rest of it.

848
00:44:27,853 --> 00:44:33,700
Testing is often an interaction between how good your bug

849
00:44:33,700 --> 00:44:38,226
notation is and how many cheat keys you have

850
00:44:38,226 --> 00:44:39,488
in your game for your developers.

851
00:44:42,032 --> 00:44:44,234
So if you have really, really good bug notation

852
00:44:44,234 --> 00:44:47,957
and your bug system has no repetition

853
00:44:47,957 --> 00:44:51,440
and everything is assigned to the correct person or whatever,

854
00:44:51,440 --> 00:44:52,881
that's great, step one.

855
00:44:52,881 --> 00:44:55,584
Step two, if that person, when they're fixing the bug,

856
00:44:55,584 --> 00:44:58,526
is using cheat keys that players are not necessarily going

857
00:44:58,526 --> 00:45:01,549
to use, then you often have issues

858
00:45:01,549 --> 00:45:03,030
where that bug is marked as fixed

859
00:45:03,030 --> 00:45:05,352
and it's not actually properly tested.

860
00:45:05,352 --> 00:45:08,775
So having that kind of semi-pedantic angle.

861
00:45:09,555 --> 00:45:12,559
to making sure your testing is as close to what players are

862
00:45:12,559 --> 00:45:14,060
going to do in your game as possible,

863
00:45:14,060 --> 00:45:15,822
that's really important.

864
00:45:15,822 --> 00:45:18,124
And then there's also kind of like an approach to testing

865
00:45:18,124 --> 00:45:21,388
that relies on marking systems as dirty.

866
00:45:21,388 --> 00:45:24,391
So if you have a very compartmentalized game,

867
00:45:24,391 --> 00:45:24,891
then

868
00:45:25,912 --> 00:45:28,074
OK, you change your collision detection a little bit.

869
00:45:28,074 --> 00:45:30,475
That makes everything pretty dirty,

870
00:45:30,475 --> 00:45:32,456
because if you have an endless runner,

871
00:45:32,456 --> 00:45:35,838
collision detection interacts with everything in the game.

872
00:45:35,838 --> 00:45:37,980
But if you change an animation system,

873
00:45:37,980 --> 00:45:40,601
then that doesn't really mark everything else as dirty.

874
00:45:40,601 --> 00:45:42,202
So you don't need to retest everything.

875
00:45:42,202 --> 00:45:43,723
You only need to test those animations

876
00:45:43,723 --> 00:45:45,384
and what they look like for the player,

877
00:45:45,384 --> 00:45:47,965
because they're not going to suddenly make your scores

878
00:45:47,965 --> 00:45:48,366
change.

879
00:45:48,366 --> 00:45:50,127
They're not going to make players clip through walls

880
00:45:50,127 --> 00:45:52,128
unless your animation system is really weird.

881
00:45:53,069 --> 00:45:57,351
So if you make a roguelike, every time you make a tiny change, or a procedural game,

882
00:45:57,351 --> 00:46:00,874
every time you make a tiny change, everything is marked as dirty and you have to retest

883
00:46:00,874 --> 00:46:02,075
the entire thing from scratch.

884
00:46:02,075 --> 00:46:03,095
So don't do those games.

885
00:46:03,095 --> 00:46:03,435
They're bad.

886
00:46:03,435 --> 00:46:05,977
Awesome, thank you.

887
00:46:07,998 --> 00:46:13,899
Hey, Danny. I was just wondering if in interviews or experience, any of your advice would be

888
00:46:13,899 --> 00:46:17,480
different when dealing specifically with contractors, people who aren't necessarily planning on

889
00:46:17,480 --> 00:46:21,861
sticking with the team after a project is done. You know, you're in production and you

890
00:46:21,861 --> 00:46:25,482
can't really support like full-time whatever, so you're bringing out a bunch of people who

891
00:46:25,482 --> 00:46:30,823
in their mindset is the game is done, I'm leaving. Is that any different? Like do you

892
00:46:30,823 --> 00:46:31,903
treat them differently? I don't know.

893
00:46:31,943 --> 00:46:34,105
There are some interesting approaches here.

894
00:46:34,105 --> 00:46:35,567
A lot of people recommend, in terms

895
00:46:35,567 --> 00:46:37,808
of dealing with shipping, focusing

896
00:46:37,808 --> 00:46:40,271
on a more Hollywood model, which is all contractors

897
00:46:40,271 --> 00:46:41,932
and bringing in people for very specific things.

898
00:46:41,932 --> 00:46:44,154
If you're bringing in contractors,

899
00:46:44,154 --> 00:46:47,517
often what happens is they leave when the game is done.

900
00:46:47,517 --> 00:46:49,098
And unless you're really prescient

901
00:46:49,098 --> 00:46:51,861
and you're aware that the skill needs of your game

902
00:46:51,861 --> 00:46:54,863
are going to change, you don't have them for tech support.

903
00:46:55,497 --> 00:46:59,640
So tech support falls on a different person, which is fine if that person is okay with it.

904
00:46:59,640 --> 00:47:08,968
If that person is you, and all of these skill changes suddenly end up falling on you because you were running a team and now all your contractors are gone, that's going to be terrible.

905
00:47:08,968 --> 00:47:11,471
There were a lot of stories where people were telling me things like that.

906
00:47:11,471 --> 00:47:13,572
They were like, yeah, everybody left when the game was done.

907
00:47:13,572 --> 00:47:16,915
I'm like, well, did you hire them for when the game was finished?

908
00:47:16,915 --> 00:47:18,637
Or did you hire them just to finish the game?

909
00:47:18,637 --> 00:47:22,660
And people are like, oh, I never thought about that part.

910
00:47:23,489 --> 00:47:25,733
And also, why not hire contractors

911
00:47:25,733 --> 00:47:27,415
to help you with shipping?

912
00:47:27,415 --> 00:47:30,860
Hire a contractor that's really good at community management.

913
00:47:30,860 --> 00:47:33,043
They should pay for themselves.

914
00:47:33,043 --> 00:47:35,387
Hire a contractor that's really good at bug finding.

915
00:47:35,387 --> 00:47:37,049
They should pay for themselves.

916
00:47:37,049 --> 00:47:38,712
So if you're only contracting people,

917
00:47:38,712 --> 00:47:39,433
you should pay for yourself.

918
00:47:40,229 --> 00:47:45,032
your contracting loadout doesn't go away after you ship.

919
00:47:45,032 --> 00:47:46,093
It just changes.

920
00:47:46,093 --> 00:47:48,034
So you might need more people.

921
00:47:48,034 --> 00:47:51,336
And maybe you only need them part time.

922
00:47:51,336 --> 00:47:57,580
But focus on getting people to do the jobs and the skills

923
00:47:57,580 --> 00:47:58,301
that shipping needs.

924
00:47:58,301 --> 00:47:59,161
Thanks.

925
00:47:59,161 --> 00:48:00,642
Hi.

926
00:48:00,642 --> 00:48:02,904
How early in the development process

927
00:48:02,904 --> 00:48:04,125
are you thinking about testing?

928
00:48:06,038 --> 00:48:08,100
Hm, how early should you test?

929
00:48:08,100 --> 00:48:08,820
Well.

930
00:48:08,820 --> 00:48:10,601
Well, planning for testing, too.

931
00:48:10,601 --> 00:48:10,762
OK.

932
00:48:10,762 --> 00:48:17,446
I kind of think relatively early.

933
00:48:17,446 --> 00:48:20,488
I'm a big proponent of fast prototyping.

934
00:48:20,488 --> 00:48:22,249
So fast prototyping is essentially

935
00:48:22,249 --> 00:48:26,912
undirected testing really early in a project cycle.

936
00:48:26,912 --> 00:48:29,954
It's not like, oh, hey, we've built the entire game design

937
00:48:29,954 --> 00:48:33,256
document, and then thing, and whatever, and waterfall model,

938
00:48:33,256 --> 00:48:35,198
and everybody starves.

939
00:48:35,198 --> 00:48:35,318
It's.

940
00:48:36,682 --> 00:48:39,003
Once you understand your game and you understand

941
00:48:39,003 --> 00:48:41,284
what you're offering your players,

942
00:48:41,284 --> 00:48:43,265
and the things you want your players to feel,

943
00:48:43,265 --> 00:48:45,026
and the goals that players are going to have

944
00:48:45,026 --> 00:48:46,206
while they're playing the game,

945
00:48:46,206 --> 00:48:49,147
and you have methods to evaluate your general gameplay,

946
00:48:49,147 --> 00:48:52,288
that's when you should start building a testing system,

947
00:48:52,288 --> 00:48:53,229
or a testing methodology.

948
00:48:53,229 --> 00:48:55,950
And the earlier you build that in,

949
00:48:57,230 --> 00:49:03,833
less of a imposition it's going to feel on the people that have to implement it,

950
00:49:03,833 --> 00:49:07,615
who may never have thought about implementing something like this before.

951
00:49:07,615 --> 00:49:13,658
So if you suddenly only start focusing about testing after your game ships,

952
00:49:13,658 --> 00:49:19,540
and you have just released patch number 5 in day 2 of your game being on Steam,

953
00:49:19,540 --> 00:49:24,303
and everybody is really angry with you because now the same bug that was fixed

954
00:49:24,303 --> 00:49:26,083
previously is back, but it's worse,

955
00:49:27,427 --> 00:49:30,509
people are going to be upset with your testing methodology.

956
00:49:30,509 --> 00:49:32,470
If you have a robust testing methodology

957
00:49:32,470 --> 00:49:34,691
from super early on in development, that's great.

958
00:49:34,691 --> 00:49:36,672
If you have a system that allows you

959
00:49:36,672 --> 00:49:38,814
to automate some of your testing because you've

960
00:49:38,814 --> 00:49:41,215
been building that into your game continuously,

961
00:49:41,215 --> 00:49:43,016
that's going to save a huge amount of time.

962
00:49:43,016 --> 00:49:46,339
So I would say start as early as you have some kind of metric.

963
00:49:46,339 --> 00:49:46,919
Cool, thanks.

964
00:49:51,946 --> 00:49:57,870
Hi, this is sort of a question about the end. You've been supporting a game for two years and

965
00:49:57,870 --> 00:50:03,474
now you're going to really stop committing resources to that and move on and it's been two

966
00:50:03,474 --> 00:50:09,158
years and really we're done with it. Did you get any feedback from people about like how to

967
00:50:09,158 --> 00:50:14,862
handle the e-mails like why haven't you patched your game in six months? Well, we're done with

968
00:50:14,862 --> 00:50:19,585
that now and we've moved on. Any ideas about how to handle that?

969
00:50:19,887 --> 00:50:21,888
like end of the relationship.

970
00:50:21,888 --> 00:50:23,550
So how to handle when a game is done

971
00:50:23,550 --> 00:50:26,952
and you're no longer necessarily working on it actively.

972
00:50:26,952 --> 00:50:29,334
Again, that depends on the team and it depends on the game.

973
00:50:29,334 --> 00:50:32,057
You need to be making these decisions

974
00:50:32,057 --> 00:50:33,498
from a business perspective.

975
00:50:33,498 --> 00:50:33,938
So if.

976
00:50:35,397 --> 00:50:37,577
the cost of time of putting in more time into this game

977
00:50:37,577 --> 00:50:39,058
is not going to return.

978
00:50:39,058 --> 00:50:40,238
It's probably a bad idea.

979
00:50:40,238 --> 00:50:42,679
There's better things you could be doing with that time,

980
00:50:42,679 --> 00:50:44,440
essentially.

981
00:50:44,440 --> 00:50:46,941
If the only reason you're no longer working on this game

982
00:50:46,941 --> 00:50:49,182
is because everybody's really angry with it,

983
00:50:49,182 --> 00:50:52,623
and you're super annoyed, then chances

984
00:50:52,623 --> 00:50:55,624
are maybe there are not better things you could

985
00:50:55,624 --> 00:50:57,325
be doing with your time, and you're just

986
00:50:57,325 --> 00:51:00,046
feeling the impacts of some kind of burnout

987
00:51:00,046 --> 00:51:03,327
or some kind of other problem to do with skill mismanagement.

988
00:51:04,627 --> 00:51:09,108
So I would say that it depends on what kind of amount of work

989
00:51:09,108 --> 00:51:09,728
is required.

990
00:51:09,728 --> 00:51:12,569
And those are always business decisions.

991
00:51:12,569 --> 00:51:15,409
Sometimes you'll get somebody coming to you

992
00:51:15,409 --> 00:51:18,630
in a year's time or whatever, and they're like, hey,

993
00:51:18,630 --> 00:51:19,890
a year after you start patching a game,

994
00:51:19,890 --> 00:51:21,991
they're like, we want to localize this game

995
00:51:21,991 --> 00:51:22,971
into Swahili.

996
00:51:22,971 --> 00:51:23,911
It would be a great idea.

997
00:51:23,911 --> 00:51:25,471
None of you know where people speak Swahili, do you?

998
00:51:25,471 --> 00:51:25,551
Yeah.

999
00:51:25,551 --> 00:51:25,631
Yeah.

1000
00:51:25,631 --> 00:51:25,771
You fail.

1001
00:51:35,248 --> 00:51:37,230
they want to localize the game into a weird language

1002
00:51:37,230 --> 00:51:38,831
like Swahili or whatever.

1003
00:51:38,831 --> 00:51:42,073
And you're like, well, it's going to take me half a minute

1004
00:51:42,073 --> 00:51:43,635
to change the localization text file,

1005
00:51:43,635 --> 00:51:44,956
because I have one of those.

1006
00:51:44,956 --> 00:51:47,498
Yeah, cool, let's do it.

1007
00:51:47,498 --> 00:51:49,199
And then you re-release because of that.

1008
00:51:49,199 --> 00:51:52,782
Basically, if supporting the game

1009
00:51:52,782 --> 00:51:55,444
is damaging to your company, don't do it.

1010
00:51:55,444 --> 00:51:56,885
And if your communication around that

1011
00:51:56,885 --> 00:51:59,007
is the thing that you're not sure about, hire someone.

1012
00:51:59,682 --> 00:52:02,643
You know, there's lots of people that handle PR.

1013
00:52:02,643 --> 00:52:05,164
There's lots of people that, I mean,

1014
00:52:05,164 --> 00:52:08,545
if you go to any kind of like VC or startup environment,

1015
00:52:08,545 --> 00:52:10,245
there are people who will tell you,

1016
00:52:10,245 --> 00:52:11,465
oh yeah, don't say that to people,

1017
00:52:11,465 --> 00:52:13,026
or don't say that to people, or don't say that to people.

1018
00:52:13,026 --> 00:52:15,326
Your communication should be in the same style.

1019
00:52:15,326 --> 00:52:18,047
And I think as indies,

1020
00:52:18,047 --> 00:52:21,068
we're generally pretty open with our audiences.

1021
00:52:21,068 --> 00:52:22,829
So if you just say, hey, look,

1022
00:52:22,829 --> 00:52:24,129
we gotta work on other games.

1023
00:52:24,889 --> 00:52:29,091
Often the easiest way to tell people you're no longer supporting a thing is go,

1024
00:52:29,091 --> 00:52:30,592
oh, yeah, sorry, we're not doing this anymore.

1025
00:52:30,592 --> 00:52:32,733
Here's a screenshot of what we're currently doing.

1026
00:52:32,733 --> 00:52:35,194
And you give them a link to a prototype or whatever it is,

1027
00:52:35,194 --> 00:52:37,835
and you kind of deflect people to the new part of your forum

1028
00:52:37,835 --> 00:52:40,336
where they can interact with the current game that you're building.

1029
00:52:40,336 --> 00:52:42,857
And at that point, people are usually pretty happy,

1030
00:52:42,857 --> 00:52:44,338
because they're like, oh, you're doing something new.

1031
00:52:44,338 --> 00:52:44,938
Well, that's cool.

1032
00:52:44,938 --> 00:52:45,058
So, yeah.

1033
00:52:45,058 --> 00:52:45,118
Rad.

1034
00:52:52,598 --> 00:52:54,339
Nobody asked about early access.

1035
00:52:54,339 --> 00:52:54,500
Yes.

1036
00:52:54,500 --> 00:52:56,221
It's brilliant.

1037
00:52:56,221 --> 00:52:58,443
That means my wording change worked.

1038
00:52:58,443 --> 00:53:00,985
I think we're pretty much done.

1039
00:53:00,985 --> 00:53:03,688
So if you'd like to head out, please

1040
00:53:03,688 --> 00:53:04,989
remember to fill out your evaluations.

1041
00:53:04,989 --> 00:53:06,790
And thank you very much for coming.

1042
00:53:06,790 --> 00:53:08,832
I hope every single one of you ships your games.

