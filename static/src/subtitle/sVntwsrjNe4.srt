1
00:00:02,650 --> 00:00:03,771
Yeah, hello everyone.

2
00:00:04,612 --> 00:00:06,393
We are Joar Jacobsson and...

3
00:00:07,154 --> 00:00:07,855
James Therrien.

4
00:00:08,015 --> 00:00:08,575
James Therrien.

5
00:00:09,736 --> 00:00:10,737
And we do RainWorld.

6
00:00:11,017 --> 00:00:14,340
I'm on creature design, creature animation,

7
00:00:15,121 --> 00:00:18,143
AI and general programming for the project and games.

8
00:00:18,303 --> 00:00:20,045
I'm doing level design and audio work

9
00:00:20,105 --> 00:00:21,526
and general narrative construction.

10
00:00:21,806 --> 00:00:23,868
And we're gonna talk about procedural animation

11
00:00:24,569 --> 00:00:25,109
in RainWorld.

12
00:00:25,890 --> 00:00:28,472
So we thought to start things off a little bit

13
00:00:28,572 --> 00:00:30,173
and set the context for you guys,

14
00:00:30,293 --> 00:00:31,254
we will play a video.

15
00:00:32,619 --> 00:00:32,985
There we go.

16
00:01:44,257 --> 00:01:47,747
So what is rainbows? Oh, thank you, thank you.

17
00:01:50,721 --> 00:01:54,584
So what is Rain World? Rain World is a survival action

18
00:01:54,624 --> 00:01:57,646
platformer where you play as that cute little white slug cat

19
00:01:57,726 --> 00:02:01,368
creature. And you're kind of existing in this large open

20
00:02:01,428 --> 00:02:06,952
world ecosystem of AI creatures. And all of the AI creatures, the

21
00:02:07,032 --> 00:02:11,135
intention for us is so they have as much agency as the player

22
00:02:11,155 --> 00:02:13,656
character. So they are moving around the world independently.

23
00:02:14,097 --> 00:02:15,878
They're hunting, they're searching for food, they're

24
00:02:15,898 --> 00:02:16,538
afraid of things.

25
00:02:17,639 --> 00:02:21,120
and all of the creatures kind of exist perpetually on screen as

26
00:02:21,180 --> 00:02:25,002
well as off screen. So you can come into a room, for instance,

27
00:02:25,062 --> 00:02:27,403
and you can see some interaction happening that's been going on

28
00:02:27,423 --> 00:02:31,925
for like 20 minutes and you just sort of stumble upon it. Yeah,

29
00:02:31,985 --> 00:02:34,546
the game play is kind of learning to navigate through

30
00:02:34,586 --> 00:02:36,887
that ecosystem, how the creatures of the world

31
00:02:36,967 --> 00:02:39,728
interact, what they want, et cetera, and sort of finding your

32
00:02:39,768 --> 00:02:43,129
way through it as sort of like an underpowered little creature.

33
00:02:43,149 --> 00:02:45,470
And of course avoiding the death ray.

34
00:02:47,492 --> 00:02:49,913
Yeah.

35
00:02:49,933 --> 00:02:53,916
So procedural animation is an important part of RainWorld.

36
00:02:54,957 --> 00:02:58,059
And procedural animation, as I will talk about it today,

37
00:02:58,319 --> 00:03:01,021
is basically animation that does not

38
00:03:01,061 --> 00:03:03,242
happen by drawing frame by frame,

39
00:03:03,282 --> 00:03:06,164
and also not by rigging a character

40
00:03:06,204 --> 00:03:07,625
and replaying an animation.

41
00:03:07,685 --> 00:03:11,007
But rather, it's interactive code informing

42
00:03:11,067 --> 00:03:12,628
how the visuals will move.

43
00:03:17,713 --> 00:03:20,134
So, let's take a look at some of these creatures.

44
00:03:20,634 --> 00:03:21,114
Definitely.

45
00:03:21,934 --> 00:03:23,835
This one here, we call the vulture.

46
00:03:23,855 --> 00:03:27,316
It's sort of like a large flying predator in RainWorld,

47
00:03:28,236 --> 00:03:29,736
which can switch between modes.

48
00:03:29,776 --> 00:03:31,997
You see it can climb like a monkey

49
00:03:32,177 --> 00:03:33,177
and then fly like a bird.

50
00:03:34,437 --> 00:03:39,159
And this is a concept that occurs quite a lot

51
00:03:39,199 --> 00:03:41,499
in RainWorld, like the dual nature creature,

52
00:03:41,699 --> 00:03:43,820
which can switch between modes, et cetera.

53
00:03:46,447 --> 00:03:49,848
The next one is the centipedes which are completely disgusting

54
00:03:49,868 --> 00:03:52,529
because you can tell they're large bug like creatures. They

55
00:03:52,549 --> 00:03:55,710
kind of work with some sort of generalized sense of clockwork.

56
00:03:55,770 --> 00:03:58,211
You can see them all sort of moving at the same time. And

57
00:03:58,231 --> 00:04:00,992
you've got this sort of cool inverse kinematics in the leg

58
00:04:01,332 --> 00:04:03,973
actions. I think they're disgusting. So let's get that

59
00:04:04,053 --> 00:04:11,316
out of here. Here we have the reindeer as it's called. It's a

60
00:04:11,336 --> 00:04:12,876
very large creature which is

61
00:04:14,114 --> 00:04:18,158
not hostile but friendly or indifferent to the character and

62
00:04:18,178 --> 00:04:22,061
you can climb in its antlers. Down at the bottom of the

63
00:04:22,101 --> 00:04:26,044
screen we have the worm grass which is very hostile but also

64
00:04:26,104 --> 00:04:30,148
securely anchored to the ground. So unless you fall down there,

65
00:04:30,668 --> 00:04:34,992
it won't be a problem. These cute little guys are called

66
00:04:35,072 --> 00:04:35,673
lantern mice.

67
00:04:36,523 --> 00:04:39,485
and they're dumb, but they're very cute.

68
00:04:39,985 --> 00:04:42,187
And you can find them in dark environments,

69
00:04:42,507 --> 00:04:45,469
and as you see, you can use them as a source

70
00:04:45,489 --> 00:04:47,811
of bio-illumination if you don't scare them off.

71
00:04:52,354 --> 00:04:54,476
And this one here is the leviathan.

72
00:04:55,696 --> 00:04:59,879
It's a huge sort of mixture of an eel,

73
00:05:00,280 --> 00:05:03,242
and a centipede, and a whale, I guess.

74
00:05:05,589 --> 00:05:08,751
which will gobble you up if you swim too deep and too

75
00:05:08,891 --> 00:05:14,676
carelessly into the waters of rain world. And these guys are

76
00:05:14,696 --> 00:05:17,498
some of my favorites. These are called miros birds. They're

77
00:05:17,518 --> 00:05:21,460
like squawking, noisy, obnoxious, half mechanical

78
00:05:21,560 --> 00:05:26,063
chickens. You can see on their legs, they have actuators on the

79
00:05:26,104 --> 00:05:31,828
legs. But they hunt in packs and make a loud racket. You're lucky

80
00:05:31,848 --> 00:05:34,670
that gifs don't have sound because it's obnoxious.

81
00:05:37,912 --> 00:05:41,275
These guys are the lizard, and that's sort of like the most

82
00:05:41,435 --> 00:05:45,539
reoccurring antagonist in Rain World. They love the taste of

83
00:05:45,839 --> 00:05:50,223
slug cat, which is the main character. The lizards come in

84
00:05:50,243 --> 00:05:53,326
different colors, so the ones here are yellow, but we also

85
00:05:53,366 --> 00:05:57,509
have the white one, for example, which can blend into its

86
00:05:57,569 --> 00:06:02,133
background like a chameleon and stay hidden. These guys hunt in

87
00:06:02,233 --> 00:06:05,136
packs, as you can see. They surround you and work

88
00:06:05,196 --> 00:06:05,856
cooperatively.

89
00:06:08,215 --> 00:06:11,118
this one is called the scavenger. It's the jewel of the

90
00:06:11,178 --> 00:06:15,361
rain world AI. It's supposed to be equal to the player character

91
00:06:15,401 --> 00:06:19,463
in every way. As far as movement, it can use tools. As

92
00:06:19,764 --> 00:06:22,826
you can see it's perfectly comfortable on poles or on flat

93
00:06:22,886 --> 00:06:26,989
ground. And yeah, they're pretty intelligent. And you can see

94
00:06:27,009 --> 00:06:30,231
they kind of look like they know what's going on. And that's

95
00:06:30,251 --> 00:06:32,493
something that we've been working hard on.

96
00:06:35,261 --> 00:06:39,643
Go for it. So why is procedural animation important to rain

97
00:06:39,663 --> 00:06:43,686
world? So we're trying to create the appearance of like a large

98
00:06:43,726 --> 00:06:47,108
natural open world ecosystem. And what procedural animation

99
00:06:47,148 --> 00:06:50,049
allows us to do is create a sense of agency and

100
00:06:50,129 --> 00:06:53,791
believability for all of the individual creatures. Because

101
00:06:53,991 --> 00:06:57,593
with procedural animation we can create a scenario where the AI

102
00:06:57,673 --> 00:07:00,435
behavior equals the behavior that you're seeing in the game.

103
00:07:01,511 --> 00:07:06,255
For instance, as you can see in some of the GIFs when a lizard

104
00:07:06,295 --> 00:07:09,278
is hunting or something like that, you can see it see you,

105
00:07:09,458 --> 00:07:13,041
you can understand its motivations. When it can't get

106
00:07:13,101 --> 00:07:16,164
directly to you, it gets visibly frustrated because it's trying

107
00:07:16,204 --> 00:07:19,066
to navigate around the environment. And that's cool

108
00:07:19,106 --> 00:07:21,949
because the player is then able to sort of project into that and

109
00:07:22,009 --> 00:07:26,693
project personality into that. So you have this situation where

110
00:07:27,013 --> 00:07:27,494
you have like

111
00:07:28,134 --> 00:07:31,396
the player will see a creature do something interesting that

112
00:07:31,616 --> 00:07:34,578
isn't necessarily a scripted behavior and the player will

113
00:07:34,658 --> 00:07:37,439
infer from what's going on. They'll say like, oh, this

114
00:07:37,479 --> 00:07:40,101
creature is mad at me. Now, that's not really the case, but

115
00:07:40,161 --> 00:07:43,242
because we have all of the ingredients visible, it makes

116
00:07:43,322 --> 00:07:47,084
this kind of like effect of personality for the individual

117
00:07:47,124 --> 00:07:48,485
creatures. And that's a lot of fun.

118
00:07:49,959 --> 00:07:52,441
It's different than if you were to have, for instance,

119
00:07:52,461 --> 00:07:55,783
like a black box scenario where you have a robot doing

120
00:07:55,864 --> 00:07:58,345
something, and you can't infer anything from its behavior

121
00:07:58,365 --> 00:08:00,767
because it just stands there, and then something happens,

122
00:08:00,807 --> 00:08:01,388
and it moves.

123
00:08:01,808 --> 00:08:05,230
With procedural animation, you have a visible cause and effect,

124
00:08:05,351 --> 00:08:06,211
which is really interesting.

125
00:08:08,733 --> 00:08:09,053
Yes.

126
00:08:09,754 --> 00:08:11,915
So a little bit about the technique.

127
00:08:13,417 --> 00:08:14,517
How do we do this?

128
00:08:16,679 --> 00:08:17,500
Let's take a look here.

129
00:08:20,060 --> 00:08:24,442
So one important aspect of how I animate these creatures

130
00:08:24,542 --> 00:08:28,824
is a separation of the physics simulation from the cosmetics.

131
00:08:32,026 --> 00:08:33,626
As you can see on the left side, that's

132
00:08:34,127 --> 00:08:38,889
a more simple simulation when it comes to the actual point

133
00:08:39,129 --> 00:08:40,030
per tentacle.

134
00:08:40,890 --> 00:08:43,091
This creature here is a tentacle creature

135
00:08:43,531 --> 00:08:46,313
that's coming out of the wall, trying to grab onto things

136
00:08:46,353 --> 00:08:46,933
and pull them back.

137
00:08:48,583 --> 00:08:51,104
Maybe I should explain a little bit what you're looking at here.

138
00:08:51,524 --> 00:08:53,945
The thin red lines, that's the pathfinding,

139
00:08:54,185 --> 00:08:57,947
where they try to find their way towards their goal

140
00:08:58,067 --> 00:08:58,707
in the terrain.

141
00:09:00,308 --> 00:09:04,269
The semi-transparent, squarey, blocky lines,

142
00:09:04,529 --> 00:09:08,731
that's sort of like the AI's understanding of the tile

143
00:09:08,771 --> 00:09:11,432
matrix, because the terrain in RainWorld is tile-based,

144
00:09:12,492 --> 00:09:16,074
making it not try to just grab through a solid wall,

145
00:09:16,274 --> 00:09:18,195
but be able to understand that it should.

146
00:09:19,582 --> 00:09:24,764
grab around it and then you have what looks like beads connected by sticks

147
00:09:24,864 --> 00:09:31,747
right and that's the actual 2D float vector physics simulation which is quite

148
00:09:31,787 --> 00:09:35,749
simple it's basically just like locking points at a certain distance so if

149
00:09:35,769 --> 00:09:38,550
they're further away from each other they are moved towards each other and

150
00:09:38,590 --> 00:09:43,592
vice versa. Why is that important? Why is it important to separate the physics and

151
00:09:43,612 --> 00:09:44,213
the cosmetics?

152
00:09:44,867 --> 00:10:03,453
Yep. That's important for two reasons. One of them is performance. As James said earlier, what we do in RainWorld is sort of like a perpetually existing world, so stuff is going on even when you cannot see it. Creatures are interacting with each other even when you cannot see it.

153
00:10:03,933 --> 00:10:06,813
Meaning that there might be many creatures active at the same time.

154
00:10:06,854 --> 00:10:07,694
Sometimes hundreds.

155
00:10:08,574 --> 00:10:09,654
Probably sometimes hundreds, yeah.

156
00:10:13,335 --> 00:10:17,717
What's important to note here is that these two systems, they

157
00:10:17,757 --> 00:10:19,618
have a one-way dependence.

158
00:10:20,099 --> 00:10:24,180
So the complex cosmetics are dependent

159
00:10:24,300 --> 00:10:25,721
on the simple physics simulation,

160
00:10:25,761 --> 00:10:26,982
but not the other way around.

161
00:10:27,482 --> 00:10:29,803
Meaning that when the creature is not on screen,

162
00:10:29,923 --> 00:10:32,684
I can do only the thing on the left-hand side.

163
00:10:32,804 --> 00:10:36,226
I don't need to do that, saving processing cycles.

164
00:10:37,066 --> 00:10:40,268
And also, so the dangly bits on the right-hand side,

165
00:10:40,708 --> 00:10:42,189
those are fairly processor intensive.

166
00:10:42,209 --> 00:10:42,749
Yeah.

167
00:10:43,566 --> 00:10:47,570
Definitely, but they don't need to happen unless you're actually

168
00:10:47,610 --> 00:10:50,673
viewing the creature, because they don't inform anything that

169
00:10:50,713 --> 00:10:54,076
has to do with how it interacts with other objects.

170
00:10:55,497 --> 00:10:57,639
Another important aspect of this is control.

171
00:10:58,640 --> 00:11:01,583
The simple simulation on the left-hand side

172
00:11:01,783 --> 00:11:04,186
is easy for me to tune and work with and get

173
00:11:04,226 --> 00:11:05,427
to behave the way I want.

174
00:11:06,147 --> 00:11:10,309
And then I can just put the cosmetic layer on top

175
00:11:10,809 --> 00:11:14,990
without having to worry about it affecting

176
00:11:15,050 --> 00:11:18,011
the working behavior I already have set up.

177
00:11:18,711 --> 00:11:22,752
So if I were to actually create a physics simulation

178
00:11:22,832 --> 00:11:26,613
which had all of these dangly little hanging tentacle bits

179
00:11:27,093 --> 00:11:32,855
that might pull at the main tentacle, for example,

180
00:11:33,155 --> 00:11:35,496
weigh it down, or it might like.

181
00:11:36,043 --> 00:11:40,907
get into a wobbly state or become otherwise unstable.

182
00:11:41,308 --> 00:11:43,529
But because the dependence is only one way,

183
00:11:43,890 --> 00:11:47,393
I can always be sure that it will behave that way,

184
00:11:47,913 --> 00:11:49,374
that I made it to behave.

185
00:11:52,537 --> 00:11:53,338
Pragmatism.

186
00:11:55,520 --> 00:11:57,041
First of all, I guess I have to say

187
00:11:57,101 --> 00:12:01,245
that I'm coming at programming from an artist's angle

188
00:12:01,265 --> 00:12:02,646
rather than the programmer's angle.

189
00:12:05,021 --> 00:12:11,013
Art is the goal and programming is the means, I guess.

190
00:12:11,975 --> 00:12:13,638
I'm a self-taught programmer.

191
00:12:14,755 --> 00:12:20,200
more or less, and sort of like everything I do and everything I learn within programming

192
00:12:20,800 --> 00:12:23,342
is always about getting to the art result.

193
00:12:23,843 --> 00:12:29,347
So I have pragmatism in the way that I know what I want it to look like, I know what I

194
00:12:29,648 --> 00:12:35,052
want it to feel like, and then the programming is just about like getting there in the best

195
00:12:35,132 --> 00:12:35,733
way possible.

196
00:12:36,313 --> 00:12:40,557
It's not about building perfect programming solutions

197
00:12:40,677 --> 00:12:43,840
that have purity of implementation.

198
00:12:43,940 --> 00:12:46,162
It's about getting to the desired result.

199
00:12:48,163 --> 00:12:49,965
Faking it is easier than making it.

200
00:12:50,045 --> 00:12:51,106
That's sort of the same thing.

201
00:12:51,266 --> 00:12:57,832
If I can choose between making a perfectly correct physics

202
00:12:57,892 --> 00:13:03,217
simulation of some complex phenomena, or just make it look

203
00:13:05,875 --> 00:13:06,956
I will go for the latter.

204
00:13:07,476 --> 00:13:08,957
So basically, you could say that it's

205
00:13:08,997 --> 00:13:11,559
like an illusionist's approach.

206
00:13:11,639 --> 00:13:13,280
It's a smoke and mirrors approach.

207
00:13:13,720 --> 00:13:17,263
If you don't have to pull a rabbit out of a hat physically,

208
00:13:17,483 --> 00:13:17,863
it's better.

209
00:13:17,923 --> 00:13:21,185
It's way harder to make a rabbit actually appear in a hat

210
00:13:21,485 --> 00:13:22,786
than just having it look like that.

211
00:13:23,667 --> 00:13:27,129
And if it's the same end result, all the better

212
00:13:27,169 --> 00:13:28,390
to go with the easier solution.

213
00:13:31,715 --> 00:13:34,197
So this is another very important aspect

214
00:13:34,377 --> 00:13:40,441
of what's going on, which is that AI is animation

215
00:13:40,722 --> 00:13:41,302
in RainWorld.

216
00:13:41,742 --> 00:13:43,884
You cannot really draw a line between the two.

217
00:13:45,665 --> 00:13:48,868
Basically, the AI has the overarching unit,

218
00:13:48,928 --> 00:13:50,189
which will make decisions.

219
00:13:50,309 --> 00:13:51,670
And those decisions are generally

220
00:13:51,690 --> 00:13:54,112
along the lines of, where should I go?

221
00:13:54,212 --> 00:13:55,032
Where should I move to?

222
00:13:55,733 --> 00:13:58,135
But then you also have the locomotion AI,

223
00:13:58,535 --> 00:14:06,662
and the locomotion AI is equally animation as it is AI,

224
00:14:06,742 --> 00:14:07,303
so to speak.

225
00:14:07,843 --> 00:14:11,426
So locomotion AI would be about where to put my limbs,

226
00:14:11,567 --> 00:14:17,011
how to orient myself, how to basically move through

227
00:14:17,031 --> 00:14:21,215
the world, and that entire thing is informed

228
00:14:21,335 --> 00:14:23,036
by the environment around the creature.

229
00:14:24,526 --> 00:14:28,158
So you might see, for example, that this vulture right here,

230
00:14:28,539 --> 00:14:30,445
at one point, it makes like a wing flap.

231
00:14:31,593 --> 00:14:32,054
There you go.

232
00:14:32,734 --> 00:14:35,695
And that's not an animation I implemented.

233
00:14:35,735 --> 00:14:39,376
I didn't tell it to do that in that specific situation

234
00:14:39,496 --> 00:14:40,597
or at that specific time.

235
00:14:41,037 --> 00:14:43,798
That's the locomotion AI that figured out

236
00:14:43,878 --> 00:14:47,639
that maybe it lost both its grasps

237
00:14:47,799 --> 00:14:50,760
or it didn't have an ideal position to grab onto.

238
00:14:50,840 --> 00:14:53,241
So instead, it's switching to the flying motion

239
00:14:53,501 --> 00:14:54,281
and then back again.

240
00:14:59,259 --> 00:15:01,242
So let's make a rain world creature. What are we going to make?

241
00:15:01,262 --> 00:15:06,969
Yeah, what are we going to make? We're going to make a rain world creature called Daddy Long Legs.

242
00:15:07,902 --> 00:15:12,367
which is disgusting. It's like this giant ball of tentacles and it's kind of like

243
00:15:12,387 --> 00:15:17,772
it's sort of an ideal rain world creature because it's really messy and like it stumbles around and

244
00:15:17,893 --> 00:15:22,938
it's like lots of tentacles. Very many tentacles. You're about to see very many tentacles. Let's

245
00:15:22,958 --> 00:15:28,684
start with one. Start with one tentacle. I think I've described it as in between spider

246
00:15:28,824 --> 00:15:31,426
and spider's web. So let's go.

247
00:15:33,408 --> 00:15:33,828
So what's that?

248
00:15:34,648 --> 00:15:35,168
What's that?

249
00:15:35,889 --> 00:15:37,809
The blob, the blobby looking thing,

250
00:15:37,869 --> 00:15:41,470
that's what's going to be the body of the spider thing.

251
00:15:42,270 --> 00:15:45,371
And then we have the little red dot, which is the goal

252
00:15:45,892 --> 00:15:47,072
it's traveling towards.

253
00:15:48,072 --> 00:15:48,832
And what's the red line?

254
00:15:49,433 --> 00:15:51,893
The red line is a line showing that those two things are

255
00:15:51,913 --> 00:15:52,253
connected.

256
00:15:56,030 --> 00:15:58,233
So basically, the AI will tell it

257
00:15:58,393 --> 00:16:00,556
where the little red gold dot will be.

258
00:16:00,576 --> 00:16:02,579
I think maybe when recording this one,

259
00:16:02,599 --> 00:16:04,422
I actually had it hooked up to the mouse.

260
00:16:04,522 --> 00:16:06,345
But later, it will be the AI.

261
00:16:06,866 --> 00:16:09,549
And then I use an A-star pathfinding algorithm

262
00:16:09,630 --> 00:16:12,494
to find my way there through the terrain.

263
00:16:13,675 --> 00:16:14,895
And at this point, it's very simple.

264
00:16:15,015 --> 00:16:17,736
It's basically like a car in a racing game, right?

265
00:16:17,816 --> 00:16:21,216
It's like a physics object that is just

266
00:16:21,356 --> 00:16:24,177
moving towards its destination at an even speed.

267
00:16:25,177 --> 00:16:26,317
But we don't want a car.

268
00:16:26,377 --> 00:16:30,518
We want something that looks like a living, organic creature,

269
00:16:30,858 --> 00:16:32,499
and preferably a gross one.

270
00:16:32,559 --> 00:16:34,299
Preferably a gross one, yeah.

271
00:16:36,240 --> 00:16:39,320
So we put some legs on it.

272
00:16:41,159 --> 00:16:43,321
you guys should remember these. It's basically the same

273
00:16:43,381 --> 00:16:45,904
tentacles as you saw in the plant that was in the wall,

274
00:16:45,964 --> 00:16:51,111
right? Yep. So this works exactly the same way. The

275
00:16:51,411 --> 00:16:53,353
squarish tentacles keep track of the

276
00:16:55,006 --> 00:16:57,127
but we're sure that they don't go through terrain.

277
00:16:57,647 --> 00:16:59,247
And then you have the physics simulation,

278
00:16:59,327 --> 00:17:02,569
which is sort of like where the tentacles actually are.

279
00:17:02,749 --> 00:17:06,930
So look at the beads and sticks, because that's

280
00:17:06,950 --> 00:17:08,851
where the tentacle is actually at.

281
00:17:09,531 --> 00:17:12,032
The other thing is more like its brain, so to speak.

282
00:17:17,314 --> 00:17:17,534
So.

283
00:17:18,913 --> 00:17:22,374
We want this creature to climb around in the environment.

284
00:17:23,035 --> 00:17:24,635
And how do we do that?

285
00:17:25,375 --> 00:17:26,235
What is climbing?

286
00:17:26,856 --> 00:17:30,557
Climbing is basically like making a decision over and over.

287
00:17:30,677 --> 00:17:34,357
And that decision is, where should I grab?

288
00:17:35,798 --> 00:17:36,518
Where should I release?

289
00:17:36,798 --> 00:17:39,479
If you're climbing a tree, you look upwards.

290
00:17:39,579 --> 00:17:42,260
And you're selecting a branch.

291
00:17:42,320 --> 00:17:43,040
And you're grabbing it.

292
00:17:43,100 --> 00:17:44,280
And you're pulling yourself up.

293
00:17:44,640 --> 00:17:45,720
And you're selecting a new one.

294
00:17:46,021 --> 00:17:47,181
And you do that over and over.

295
00:17:49,117 --> 00:17:51,099
And we want this creature to do the same thing.

296
00:17:52,079 --> 00:17:54,241
So what we're seeing here is a breakdown

297
00:17:54,541 --> 00:17:56,502
of one individual leg.

298
00:17:56,782 --> 00:18:00,224
Later we will, as promised, put many legs on this thing.

299
00:18:00,284 --> 00:18:02,286
But right now, there's only one leg.

300
00:18:05,127 --> 00:18:08,410
And the problem to solve is where to grab on.

301
00:18:09,270 --> 00:18:11,852
You also recognize the blob and the goal.

302
00:18:12,152 --> 00:18:13,793
Those are the same things as earlier.

303
00:18:14,899 --> 00:18:17,121
and the red line there is the leg.

304
00:18:17,641 --> 00:18:19,603
And then I have drawn three dots,

305
00:18:19,883 --> 00:18:22,044
and those three dots are the system

306
00:18:22,164 --> 00:18:24,126
for determining where to grab.

307
00:18:26,087 --> 00:18:29,890
So the yellow one is the ideal grab position.

308
00:18:30,490 --> 00:18:32,592
If every single position in the room

309
00:18:32,692 --> 00:18:35,834
was a valid grab position, that's where I would grab.

310
00:18:36,495 --> 00:18:38,696
However, you cannot grab onto thin air,

311
00:18:39,016 --> 00:18:41,218
so we have to figure something out to get.

312
00:18:42,410 --> 00:18:45,216
an actual valid grab position, which is on terrain.

313
00:18:46,819 --> 00:18:49,604
That's what we are using the green dots for,

314
00:18:49,644 --> 00:18:50,646
the temporary goal.

315
00:18:52,191 --> 00:18:55,232
So basically how that works is that I have a method set up

316
00:18:55,532 --> 00:18:58,614
which can grade every single coordinate on the screen

317
00:18:59,014 --> 00:19:02,075
with a score for how good a grab position is

318
00:19:02,455 --> 00:19:04,776
this specific coordinate.

319
00:19:06,877 --> 00:19:09,959
And if you're in thin air, that's an awful grab position

320
00:19:10,179 --> 00:19:11,719
because you cannot grab onto thin air.

321
00:19:12,624 --> 00:19:15,868
But if it's on terrain, that's a valid grab position.

322
00:19:16,909 --> 00:19:19,132
So say if it's in thin air, then I

323
00:19:19,192 --> 00:19:22,436
might give it like minus infinity grab points.

324
00:19:22,917 --> 00:19:25,861
But if it's on actual terrain, then I

325
00:19:25,901 --> 00:19:28,064
want it to have a higher score the closer it

326
00:19:28,164 --> 00:19:29,546
is to the ideal position.

327
00:19:30,964 --> 00:19:33,786
So, what happens is that every single frame,

328
00:19:34,506 --> 00:19:36,647
I pick a random position in the room,

329
00:19:36,907 --> 00:19:38,768
or a random position close to the creature,

330
00:19:39,688 --> 00:19:41,669
and I check the score of that one,

331
00:19:41,809 --> 00:19:45,331
and I check the score of my current temporary position,

332
00:19:45,811 --> 00:19:48,392
and if the new one is better, I switch them.

333
00:19:49,053 --> 00:19:51,254
Meaning that over the course of several frames,

334
00:19:51,494 --> 00:19:54,575
it will sort of like gravitate towards a better position.

335
00:19:56,391 --> 00:19:57,972
Why not just check every position

336
00:19:58,012 --> 00:19:59,073
and then pick the best one?

337
00:19:59,193 --> 00:20:03,596
Because that's very intense on the processor.

338
00:20:03,976 --> 00:20:05,137
This way it becomes easier.

339
00:20:05,717 --> 00:20:10,260
And you might not always get the absolute ideal position,

340
00:20:10,300 --> 00:20:12,582
but you will get a good-ish one.

341
00:20:13,482 --> 00:20:17,985
And I actually think that that little bit of randomness to it

342
00:20:18,686 --> 00:20:21,528
adds some character to the animations.

343
00:20:21,628 --> 00:20:23,249
That's not necessarily a bad thing.

344
00:20:25,008 --> 00:20:30,071
And then we have the blue dot, which is the actual current goal position.

345
00:20:30,691 --> 00:20:33,653
So that's where the tentacle is moving towards.

346
00:20:33,673 --> 00:20:36,815
So how does this become a grabbing motion?

347
00:20:36,935 --> 00:20:42,239
Basically the body is moving upwards and the leg is moving towards the blue dot.

348
00:20:42,779 --> 00:20:45,521
And when it gets there, it latches on.

349
00:20:46,792 --> 00:20:48,654
And then the body continues moving,

350
00:20:48,934 --> 00:20:51,396
and when the leg is too far behind it,

351
00:20:51,716 --> 00:20:55,700
it releases and checks where is the current green dot,

352
00:20:55,740 --> 00:20:58,282
where is the current temporary goal position.

353
00:20:59,123 --> 00:21:01,104
And it goes there, it grabs on,

354
00:21:02,045 --> 00:21:04,387
the body continues, it releases,

355
00:21:04,667 --> 00:21:07,250
and you have the climbing, basically.

356
00:21:07,390 --> 00:21:08,290
Let's see it in action.

357
00:21:08,651 --> 00:21:09,992
Let's see it in action, here we go.

358
00:21:13,107 --> 00:21:15,368
So there's nothing on here you haven't seen yet,

359
00:21:15,548 --> 00:21:17,850
but there's quite a lot of stuff on here.

360
00:21:18,870 --> 00:21:21,472
So I might explain a little bit.

361
00:21:21,672 --> 00:21:26,635
There's the tentacles and the AI tentacles and the pathfinding.

362
00:21:27,055 --> 00:21:28,516
And then you see the yellow dots,

363
00:21:28,696 --> 00:21:30,357
which are the ideal grab positions.

364
00:21:30,958 --> 00:21:33,639
So if you're climbing in a specific direction,

365
00:21:33,699 --> 00:21:36,641
you will want to put your limbs forward in that direction,

366
00:21:36,701 --> 00:21:36,961
right?

367
00:21:37,602 --> 00:21:40,564
That's why they are sort of like in front of the creature

368
00:21:40,904 --> 00:21:41,564
towards it.

369
00:21:42,465 --> 00:21:44,607
general vector.

370
00:21:45,027 --> 00:21:47,489
How does it, it looks like it's heavy.

371
00:21:47,970 --> 00:21:49,030
How does that happen?

372
00:21:49,551 --> 00:21:51,673
Yeah, that's another interesting thing,

373
00:21:51,713 --> 00:21:53,654
and that's a callback to faking it,

374
00:21:53,734 --> 00:21:55,075
it's easier than making it.

375
00:21:56,997 --> 00:22:01,921
Because instead of doing actual rope physics simulations

376
00:22:02,041 --> 00:22:04,844
on all of these tentacles with elasticity, et cetera,

377
00:22:05,324 --> 00:22:09,027
which would be way harder than I could handle,

378
00:22:09,047 --> 00:22:11,209
it's way above my level.

379
00:22:12,270 --> 00:22:20,592
I do something that's much simpler, which is that in every single frame I count the number of tentacles that are contacting terrain.

380
00:22:22,093 --> 00:22:28,754
And the fewer tentacles that are contacting terrain, the more the body is affected by gravity.

381
00:22:29,254 --> 00:22:33,235
And the more tentacles that are contacting terrain, the...

382
00:22:34,079 --> 00:22:37,300
faster the body is allowed to move towards its goal.

383
00:22:37,980 --> 00:22:41,181
So in sort of like the free fall case,

384
00:22:41,261 --> 00:22:44,601
where you don't have any grasps at all on the terrain,

385
00:22:45,122 --> 00:22:47,162
you will have 100% gravity,

386
00:22:48,542 --> 00:22:50,663
0% like moving towards where you want to go,

387
00:22:50,723 --> 00:22:51,383
you just fall.

388
00:22:52,143 --> 00:22:53,443
And in the opposite case,

389
00:22:53,483 --> 00:22:54,984
where every tentacle is grabbing,

390
00:22:55,304 --> 00:22:56,884
gravity won't be an issue at all,

391
00:22:57,344 --> 00:22:59,385
and instead you get a very efficient movement.

392
00:23:00,278 --> 00:23:03,319
However, in the actual environment,

393
00:23:03,539 --> 00:23:06,320
you seldom have either of those two extremes.

394
00:23:06,380 --> 00:23:08,501
You have a few tentacles grabbing on

395
00:23:08,541 --> 00:23:11,002
and a few tentacles searching for new positions.

396
00:23:12,042 --> 00:23:18,925
And that makes it so that it's sort of occasionally weighted

397
00:23:19,085 --> 00:23:21,886
down and occasionally moving forward quickly.

398
00:23:22,847 --> 00:23:26,150
And because the eye correlates these two things,

399
00:23:26,210 --> 00:23:28,412
like you can see that when it's grabbing,

400
00:23:29,012 --> 00:23:30,414
it's able to move quickly,

401
00:23:30,574 --> 00:23:32,856
and when it's not grabbing, it's less efficient.

402
00:23:33,016 --> 00:23:35,619
It actually looks like this creature

403
00:23:35,679 --> 00:23:38,161
is supporting itself by the tentacles,

404
00:23:38,802 --> 00:23:40,043
which is not at all the case.

405
00:23:41,384 --> 00:23:42,845
It's just floating through the air.

406
00:23:45,313 --> 00:23:49,599
the illusion is created of being supported by the tentacles.

407
00:23:49,639 --> 00:23:50,580
Let's see how it looks.

408
00:23:51,461 --> 00:23:52,903
Throw some cosmetic detail.

409
00:23:53,684 --> 00:23:54,265
So here we go.

410
00:23:54,945 --> 00:23:58,150
And this is what the creature sort of looks like.

411
00:23:59,712 --> 00:24:05,075
This is the cosmetic layer, so that's the same thing as you saw with the two GIFs next to each other, right?

412
00:24:05,235 --> 00:24:10,218
Where there's like, the previous one you saw, that's what's going on logically.

413
00:24:10,639 --> 00:24:18,043
And this is the cosmetics layer, which is sort of like a paper doll just pasted on top of the logic,

414
00:24:18,284 --> 00:24:23,547
which is informed by where the physics objects are, but not necessarily entirely.

415
00:24:28,456 --> 00:24:30,838
Like the tentacles are curvy rather than jagged.

416
00:24:31,278 --> 00:24:31,978
Yeah, exactly.

417
00:24:31,998 --> 00:24:33,760
Like the previous tentacles were jagged,

418
00:24:33,820 --> 00:24:36,942
but here I just smoothed them out a little bit, et cetera.

419
00:24:37,702 --> 00:24:40,184
And there are more tentacles here, actually,

420
00:24:40,244 --> 00:24:44,206
like some dead dangly tentacles that, in fact,

421
00:24:44,367 --> 00:24:47,729
don't do anything in the game.

422
00:24:47,969 --> 00:24:50,130
They cannot interact with any other objects.

423
00:24:50,671 --> 00:24:53,753
But because they look the same as the actual tentacles,

424
00:24:53,833 --> 00:24:55,434
it's hard to tell which is which.

425
00:24:55,754 --> 00:24:56,995
So it just becomes like one.

426
00:24:58,196 --> 00:25:00,117
unit, one gross unit.

427
00:25:00,637 --> 00:25:01,558
You can see it hunt, right?

428
00:25:02,379 --> 00:25:02,759
Yeah.

429
00:25:02,859 --> 00:25:05,561
Here we go, in the game environment.

430
00:25:07,863 --> 00:25:10,525
So this creature here is blind.

431
00:25:10,925 --> 00:25:12,106
It's hunting by sound.

432
00:25:12,586 --> 00:25:14,047
So if you look when I hit the ground there,

433
00:25:14,348 --> 00:25:15,729
it's actually reacting.

434
00:25:16,429 --> 00:25:20,712
And when it hears a sound, it will send a tentacle over there

435
00:25:20,832 --> 00:25:24,135
to feel for what was doing it.

436
00:25:24,275 --> 00:25:25,376
And then it's grabbing onto me.

437
00:25:31,217 --> 00:25:36,281
So this technique comes from my specific circumstances

438
00:25:36,521 --> 00:25:37,141
quite a lot.

439
00:25:38,042 --> 00:25:41,444
I'm the artist, I'm the designer,

440
00:25:41,725 --> 00:25:42,685
and I'm the programmer.

441
00:25:43,165 --> 00:25:46,688
And that means that I can work with the technical restrictions

442
00:25:47,148 --> 00:25:50,330
and find a sweet spot that works and is also

443
00:25:51,524 --> 00:25:53,105
the result I'm going for.

444
00:25:53,625 --> 00:25:56,246
Basically, instead of having to, as a programmer,

445
00:25:56,326 --> 00:25:58,667
go over to the artist's desk and tell them

446
00:25:58,747 --> 00:26:00,627
this is not possible to implement,

447
00:26:00,808 --> 00:26:05,329
I can just like, soft, I can have like a soft approach

448
00:26:05,369 --> 00:26:09,731
where I just look for the compromise that is the best.

449
00:26:11,319 --> 00:26:18,961
Also, these creatures are fantasy creatures. No one has seen them in real life, so you don't know what they are supposed to move like.

450
00:26:19,481 --> 00:26:26,502
So, their movement being a little bit wonky is... you have to give them the benefit of the doubt, basically.

451
00:26:29,143 --> 00:26:32,664
So if you were to do a human or a horse or something like that, it would be very obvious.

452
00:26:32,684 --> 00:26:33,984
Yeah, a human or a horse would be very different.

453
00:26:37,784 --> 00:26:41,507
Yeah, no one has seen them outside of RainWorld.

454
00:26:42,888 --> 00:26:45,389
So what can other people take away from this?

455
00:26:46,410 --> 00:26:49,793
Other people not working under my extremely specific

456
00:26:49,853 --> 00:26:50,573
circumstances.

457
00:26:51,314 --> 00:26:57,458
I would say that on the spectrum between art and programming,

458
00:26:57,818 --> 00:27:00,680
there are actually many design solutions that

459
00:27:00,900 --> 00:27:02,542
might not be accessible.

460
00:27:03,507 --> 00:27:05,568
if you're an artist or a programmer only.

461
00:27:05,809 --> 00:27:07,670
Even if you're an incredibly good artist

462
00:27:07,930 --> 00:27:10,372
and an incredibly good programmer on a team,

463
00:27:10,893 --> 00:27:12,574
you might miss out on solutions

464
00:27:12,614 --> 00:27:14,996
that are in between art and programming.

465
00:27:15,616 --> 00:27:20,780
So for that reason, I would encourage artists

466
00:27:20,961 --> 00:27:23,643
to learn programming, lots of programming,

467
00:27:23,943 --> 00:27:25,965
more programming than you're comfortable with.

468
00:27:27,465 --> 00:27:29,947
It's worth it, it's not as hard as it looks.

469
00:27:30,447 --> 00:27:33,709
And I would also like to encourage programmers

470
00:27:33,889 --> 00:27:38,232
to learn art, learn what motivates artists,

471
00:27:38,472 --> 00:27:42,715
what are artists ideas, what is important to artists.

472
00:27:42,735 --> 00:27:43,655
The workflow as well.

473
00:27:44,115 --> 00:27:45,336
And the workflow definitely.

474
00:27:45,696 --> 00:27:47,357
So you can sort of like meet halfway.

475
00:27:49,058 --> 00:27:49,459
Cool.

476
00:27:50,239 --> 00:27:51,260
So that's our little chat.

477
00:27:51,700 --> 00:27:52,620
Thanks for listening.

478
00:27:52,861 --> 00:27:54,922
If you guys have any questions, please let us know.

479
00:28:08,064 --> 00:28:13,448
Is there a microphone? If not, we're going to be hanging out.

480
00:28:13,728 --> 00:28:21,134
So come grab us. Come grab us at the bar. What physics engine do

481
00:28:21,174 --> 00:28:21,815
you use underneath?

482
00:28:33,080 --> 00:28:37,446
physics engine under the simulation or did you write all

483
00:28:37,466 --> 00:28:41,632
your own physics? Yeah, it's homebrewed. It's just, yeah, a

484
00:28:41,712 --> 00:28:46,579
weird rogue sort of homemade. Cool. That's great. Thank you.

485
00:28:48,942 --> 00:28:49,423
Anybody else?

486
00:28:52,973 --> 00:28:58,776
right now it's PC, consoles, and we're going to port it as far

487
00:28:58,816 --> 00:29:01,778
and wide as possible. Because we have five years of sunk time.

488
00:29:01,878 --> 00:29:06,220
So as far as we can push it, we're going to push it. Thanks

489
00:29:06,261 --> 00:29:09,002
guys. Thank you.

