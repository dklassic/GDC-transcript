1
00:00:06,160 --> 00:00:08,301
Hi, welcome to GDC virtual talk.

2
00:00:09,281 --> 00:00:13,503
So my kids have been staying home this week, just to be safe from coronavirus.

3
00:00:14,483 --> 00:00:19,445
And what is the better time than to introduce them to Minecraft this week?

4
00:00:20,225 --> 00:00:21,665
And they've been absolutely loving it.

5
00:00:22,325 --> 00:00:27,187
Uh, so we have a, we have an iPad, we have a switch, we have a, uh, we have a

6
00:00:27,227 --> 00:00:31,188
laptop and, and they can play together and, and they've been having a great time.

7
00:00:31,468 --> 00:00:33,629
But I think like the best thing about.

8
00:00:34,912 --> 00:00:39,714
This whole experience for them is the fact that they can play together. They can play with me. They can play with each other

9
00:00:39,794 --> 00:00:41,634
They can play with their friends the neighbors

10
00:00:42,575 --> 00:00:44,416
that that is the beauty of it and that is

11
00:00:45,436 --> 00:00:48,617
the beauty of cross-platform is the fact that they can

12
00:00:49,117 --> 00:00:55,840
Focus on playing and not worrying about what platforms what kind of consoles they have and things like that

13
00:00:57,501 --> 00:00:59,062
Hi, my name is Raymond Arifianto

14
00:01:00,234 --> 00:01:01,977
I work in XLByte right now.

15
00:01:02,477 --> 00:01:05,462
I've been in the games industry for quite a few years,

16
00:01:06,343 --> 00:01:07,525
mostly in the online space.

17
00:01:07,805 --> 00:01:10,129
Online space is something I'm super passionate about.

18
00:01:10,529 --> 00:01:13,934
And one of the topics I've really, really been passionate

19
00:01:13,974 --> 00:01:15,417
about is actually cross-platform.

20
00:01:16,519 --> 00:01:19,721
I got a chance to work in cross-platform in 2014

21
00:01:19,781 --> 00:01:23,464
when I was working in Lionhead Studios.

22
00:01:23,825 --> 00:01:25,226
We were working on Fable Legends.

23
00:01:25,806 --> 00:01:28,148
We were trying to get Xbox One and Windows 10.

24
00:01:28,268 --> 00:01:30,770
And we got pretty far.

25
00:01:31,091 --> 00:01:35,054
And that's when I realized that cross-platform gaming,

26
00:01:35,474 --> 00:01:39,258
it's a topic that has been discussed for quite a bit

27
00:01:39,518 --> 00:01:41,660
in the consumer space, in the gamer space,

28
00:01:41,720 --> 00:01:43,741
but not really in the game development.

29
00:01:44,219 --> 00:01:52,684
communities. There's not a lot of articles and understanding of the basic things that is needed

30
00:01:52,924 --> 00:02:00,508
to make a cross-platform game. Now cross-platform is on the rise. There's been more and more games

31
00:02:00,588 --> 00:02:06,912
that's been shipping with cross-platform features, right? I mean like all these games that you see

32
00:02:07,452 --> 00:02:12,095
they're all having some level of cross-platform features.

33
00:02:13,083 --> 00:02:15,683
They have different scopes, they have different implementation

34
00:02:16,724 --> 00:02:19,144
But the point is that it is gaining traction

35
00:02:19,704 --> 00:02:25,446
It is more accepted in the mainstream and here's an article from Anderson Herowitz blog

36
00:02:26,966 --> 00:02:30,727
Like he's basically, the author is basically saying that like games

37
00:02:31,127 --> 00:02:35,068
Historically speaking has been siloed and segmented by different platforms

38
00:02:35,248 --> 00:02:39,149
But now with the with the rise of cross platforms

39
00:02:39,909 --> 00:02:40,109
what

40
00:02:40,559 --> 00:02:44,845
what the author is noticing is that multiplayer games,

41
00:02:45,045 --> 00:02:48,029
the growth of multiplayer games is even getting faster

42
00:02:48,069 --> 00:02:50,091
and larger because of it.

43
00:02:50,452 --> 00:02:51,172
So that's pretty cool.

44
00:02:51,453 --> 00:02:52,454
So why cross-platform?

45
00:02:53,232 --> 00:02:55,173
From the gamers perspective, it's great.

46
00:02:55,433 --> 00:02:57,074
Just like my, just like our kids,

47
00:02:57,154 --> 00:02:58,935
like they don't have to worry about what device

48
00:02:58,975 --> 00:03:00,756
they're playing, what platform we're playing.

49
00:03:00,856 --> 00:03:01,536
They can just play.

50
00:03:02,636 --> 00:03:05,258
They can just play, they can connect with their friends.

51
00:03:06,498 --> 00:03:08,139
They don't have to worry about if the friends

52
00:03:08,219 --> 00:03:10,060
is in a certain platforms and things like that.

53
00:03:10,100 --> 00:03:12,201
They can just play together and anywhere.

54
00:03:13,321 --> 00:03:16,963
Whereas for you, for us, for the game developers,

55
00:03:17,063 --> 00:03:18,003
it is great because

56
00:03:18,916 --> 00:03:22,738
instead of having your user base to be segmented

57
00:03:22,818 --> 00:03:26,260
in different platforms, now you have a large pool of players

58
00:03:26,320 --> 00:03:29,702
that you can build larger multiplayer sessions with.

59
00:03:29,942 --> 00:03:34,045
And as you and I know, fuller multiplayer sessions,

60
00:03:34,165 --> 00:03:36,226
especially in the long tail of your games,

61
00:03:36,286 --> 00:03:38,127
if your game has been out for a few years,

62
00:03:38,988 --> 00:03:40,789
that's a positive thing because you

63
00:03:41,109 --> 00:03:44,511
can build a more rich multiplayer experience

64
00:03:44,751 --> 00:03:46,412
with fuller sessions.

65
00:03:48,556 --> 00:03:54,019
Alright, so you might think, alright, that sounds really good, so let's add cross-platform to our next game.

66
00:03:55,160 --> 00:04:00,563
Well, I don't know about you, but I really love Lord of the Rings in the Fellowship of the Rings.

67
00:04:01,283 --> 00:04:05,766
If you remember, like, Consul of Elrond, they were saying this, like, let's make...

68
00:04:07,037 --> 00:04:08,838
our next game to be cross-platform enabled.

69
00:04:08,978 --> 00:04:12,338
And Boromir said, one does not simply cross-play.

70
00:04:12,438 --> 00:04:16,999
It's because he knows that making a cross-platform feature

71
00:04:17,579 --> 00:04:19,460
games is not straightforward.

72
00:04:20,840 --> 00:04:21,680
It's kind of tricky.

73
00:04:21,760 --> 00:04:27,101
So this is why I made this talk in the GDC,

74
00:04:27,181 --> 00:04:31,642
is for you who are thinking of making your next game

75
00:04:31,702 --> 00:04:33,222
to have multiplayer features.

76
00:04:35,142 --> 00:04:36,063
This is NFG.

77
00:04:37,304 --> 00:04:42,328
If you have shipped games before, you have dealt with submitting your games to the different platforms.

78
00:04:42,368 --> 00:04:44,269
You know the platform capabilities.

79
00:04:44,790 --> 00:04:49,173
So that will be a good basis for this talk. And also this is just to...

80
00:04:49,914 --> 00:04:53,577
Hopefully this can help you jumpstart your research and planning.

81
00:04:55,158 --> 00:04:55,578
So with that...

82
00:04:56,177 --> 00:04:59,320
Let's jump in. Here's nine things that you need to know about making

83
00:04:59,900 --> 00:05:03,943
cross-platform games enabled. Let's talk about terminologies.

84
00:05:04,204 --> 00:05:07,326
There's been a lot of terminologies. Everything starts with crosses, right?

85
00:05:07,967 --> 00:05:10,869
Cross-play, cross-progression, cross-buy. What are the differences?

86
00:05:11,309 --> 00:05:15,572
Cross-play is what a lot of people think about when they're thinking about

87
00:05:15,633 --> 00:05:19,576
cross-platform. It is basically getting people together

88
00:05:20,076 --> 00:05:22,138
into the same multiplayer session.

89
00:05:23,723 --> 00:05:26,964
But the players can come from varying platforms.

90
00:05:28,485 --> 00:05:31,146
So this is literally Xbox players can play with,

91
00:05:32,566 --> 00:05:34,607
PlayStation players can play with, Steam players can play

92
00:05:34,627 --> 00:05:36,947
with, Epic Games players can play with.

93
00:05:37,027 --> 00:05:41,148
Cross-progression is basically you play in one platform,

94
00:05:42,229 --> 00:05:45,930
and then you can continue your game somewhere else.

95
00:05:46,410 --> 00:05:48,630
That is loosely what the definition is.

96
00:05:49,251 --> 00:05:52,472
It applies to both single-player and multiplayer games.

97
00:05:54,075 --> 00:05:55,737
And the third one is cross-buy.

98
00:05:55,837 --> 00:05:58,420
Cross-buy is all about you're purchasing

99
00:05:58,640 --> 00:06:00,702
some stuff in one platform.

100
00:06:01,283 --> 00:06:03,105
And then you expect that those stuff

101
00:06:03,125 --> 00:06:05,507
that you bought in some other platforms

102
00:06:05,567 --> 00:06:07,829
will available for you when you start playing

103
00:06:07,869 --> 00:06:09,151
your game in another platform.

104
00:06:10,112 --> 00:06:12,494
There is a cousin for this, which is called Bopa,

105
00:06:12,514 --> 00:06:13,715
which I will also talk about.

106
00:06:13,755 --> 00:06:15,477
Bopa is the buy once, play anyway.

107
00:06:17,498 --> 00:06:19,779
So there is a I found this chart in the internet.

108
00:06:19,879 --> 00:06:23,300
Whoever wrote this chart, whoever made this chart, you guys, you are awesome.

109
00:06:23,880 --> 00:06:24,400
So thank you.

110
00:06:25,460 --> 00:06:27,161
Obviously, this list will grow.

111
00:06:27,861 --> 00:06:33,743
But I think like there's just the fact that people are really thinking about cross platform.

112
00:06:34,463 --> 00:06:36,304
So kudos to whoever did this.

113
00:06:37,424 --> 00:06:40,665
Number two, let's talk about mastering your own online domain.

114
00:06:42,385 --> 00:06:47,410
What I mean by that is that when you are shipping games in different platforms,

115
00:06:47,550 --> 00:06:53,736
there are platform capabilities, there are platform services that's available for you to use.

116
00:06:53,956 --> 00:07:02,604
And they're great, right? I mean, like Xbox Live, you have your Steamworks, they have robust capabilities.

117
00:07:02,684 --> 00:07:08,209
Now, if you want to make a cross-platform games, unfortunately, you cannot use most of those.

118
00:07:10,319 --> 00:07:18,043
because the stats in Steam is not compatible with stats in Xbox or stats in PlayStation.

119
00:07:19,584 --> 00:07:20,185
So that's why...

120
00:07:20,785 --> 00:07:26,447
it will look kind of more like this, where basically you have your set of services,

121
00:07:27,608 --> 00:07:33,869
your set of identity and stats and matchmaking and all that, and then it links behind the scene,

122
00:07:34,670 --> 00:07:40,151
it connects to the different platform services with service-to-service calls.

123
00:07:41,032 --> 00:07:46,894
So what can you use from the first party platform? You definitely have to use their identity and the

124
00:07:46,934 --> 00:07:49,855
account, and we will talk more about that. You also have to...

125
00:07:50,883 --> 00:07:56,755
connect and use their e-commerce services,

126
00:07:57,716 --> 00:08:02,466
especially if you are intending to monetize your game with in-app purchase.

127
00:08:03,142 --> 00:08:08,863
And then the third one is basically anything that the platform requires you to use.

128
00:08:09,483 --> 00:08:13,144
As an example, if you ship games in Xbox One,

129
00:08:13,264 --> 00:08:16,265
I'm sure that you know that you have to use their MPSD,

130
00:08:16,345 --> 00:08:19,426
is their multiplayer session directory,

131
00:08:19,546 --> 00:08:21,607
even though you have your own matchmaking service.

132
00:08:22,987 --> 00:08:28,388
Because they're using all that information that you put in the MPSD to power

133
00:08:29,299 --> 00:08:35,242
the dashboard information about whether you are in a session, whether that is joinable, and your rich presence and all that.

134
00:08:37,043 --> 00:08:39,405
Third one, you got to know your players.

135
00:08:40,846 --> 00:08:44,468
This is one example. I have a Steam account. I have an Epic account.

136
00:08:44,508 --> 00:08:51,932
I have an Xbox, PlayStation account. I have a Switch account. If I play the same game that has cross-platform capabilities,

137
00:08:52,633 --> 00:08:54,173
how does the game know it is me?

138
00:08:56,942 --> 00:09:00,284
And that is done by something that's called account linking.

139
00:09:00,604 --> 00:09:02,444
Account linking is just basically,

140
00:09:03,325 --> 00:09:07,046
you want to be able to link your common account

141
00:09:07,366 --> 00:09:11,348
with the different varying platform accounts.

142
00:09:12,368 --> 00:09:14,209
You probably already seen some of these,

143
00:09:15,229 --> 00:09:16,050
you've been using them.

144
00:09:16,090 --> 00:09:18,371
Like, you know, if you have Ubisoft, you play account,

145
00:09:18,411 --> 00:09:19,951
it's like, you can go to their website

146
00:09:20,011 --> 00:09:22,933
and that's where you actually link the different accounts.

147
00:09:23,173 --> 00:09:24,873
And then also the same thing with Epic Games.

148
00:09:26,299 --> 00:09:33,484
If you play Call of Duty, the latest Call of Duty has cross-platform capabilities, right?

149
00:09:34,184 --> 00:09:39,068
And this is one Reddit post that I saw that actually is very relevant.

150
00:09:39,428 --> 00:09:40,649
When you're looking for...

151
00:09:41,193 --> 00:09:43,734
your friends in Call of Duty, you

152
00:09:43,774 --> 00:09:45,454
have to use the Activision ID.

153
00:09:46,394 --> 00:09:47,875
Even though you're playing on Xbox,

154
00:09:48,295 --> 00:09:51,736
you cannot search your friends if they

155
00:09:51,776 --> 00:09:54,056
are playing in PlayStation with their PlayStation game attack,

156
00:09:54,096 --> 00:09:56,337
because it's not going to know about it.

157
00:09:56,397 --> 00:09:57,797
But what you can do is you can actually

158
00:09:57,877 --> 00:10:00,198
use the Activision ID to look them up.

159
00:10:03,439 --> 00:10:03,559
And

160
00:10:04,257 --> 00:10:12,341
this whole unified account system, identity and account system, is the fundamental piece

161
00:10:12,861 --> 00:10:20,185
for the rest of your cross-platform games. This is why, like just the diagram, it's basically

162
00:10:20,245 --> 00:10:25,708
it's your centralized account system that links to the other platforms.

163
00:10:26,992 --> 00:10:30,693
A couple of tips, you want to consider

164
00:10:32,153 --> 00:10:36,875
compliancy early on with the GDPR, CCPA, there will be more

165
00:10:37,835 --> 00:10:40,275
so you have to take those into consideration early on

166
00:10:40,475 --> 00:10:43,076
you don't want that to bite you at the very end

167
00:10:43,736 --> 00:10:49,718
and also there will be new platforms coming so you want to have the ability

168
00:10:49,778 --> 00:10:52,998
to add new platforms as they come in

169
00:10:55,730 --> 00:11:00,752
This is one example on how to implement account linking to Steam.

170
00:11:01,192 --> 00:11:07,695
So basically your IAM service is the one that basically exchange the token,

171
00:11:07,715 --> 00:11:11,197
the Steam token to your own token so that you can use that.

172
00:11:11,517 --> 00:11:16,840
Your client can use your token to connect to the rest of your services.

173
00:11:18,733 --> 00:11:24,097
Now you can now you have identified now you have successfully identified the players

174
00:11:25,217 --> 00:11:30,980
With account linking the next thing you do is get them to play together, right? So this is the you know time to cross play

175
00:11:32,501 --> 00:11:33,342
in order for

176
00:11:34,983 --> 00:11:39,285
You to connect those guys into the same multiplayer sessions with all their friends

177
00:11:40,246 --> 00:11:44,668
You would need to build all these things like you need to build matchmaking and session management

178
00:11:45,268 --> 00:11:46,289
stats leaderboards

179
00:11:46,329 --> 00:11:47,370
It all kind of depends on

180
00:11:48,247 --> 00:11:53,830
what your games need, but you will need these kinds of services to get them together.

181
00:11:56,191 --> 00:12:01,994
This is a typical matchmaking flow, so basically you get your identity and behind the scene that

182
00:12:02,054 --> 00:12:09,838
might actually federate to the other platforms, but then from that point on you use your matchmaking

183
00:12:09,899 --> 00:12:16,242
service to get people into the same sessions. A few notes about multiplayer and connectivity.

184
00:12:18,154 --> 00:12:23,037
If you have the option to choose if you are in the position to choose your game engine

185
00:12:23,077 --> 00:12:25,098
Make sure that the game engine that you're choosing

186
00:12:26,278 --> 00:12:34,403
Is is friendly with cross-platform what I mean by that is it has already a built-in mechanism to do client-server synchronization

187
00:12:36,584 --> 00:12:42,006
If you choose to build your own game engine absolutely you can do that, but just keep that in mind

188
00:12:44,251 --> 00:12:47,873
And when you want your clients to start connecting

189
00:12:47,893 --> 00:12:49,773
to the other players to play, I would

190
00:12:49,973 --> 00:12:52,674
suggest not going with the direct peer-to-peer route,

191
00:12:53,635 --> 00:12:56,176
especially the fact that you cannot use the built-in

192
00:12:56,236 --> 00:13:00,598
platform libraries, like, for instance, the Xbox Secure

193
00:13:00,618 --> 00:13:02,638
Device Association, Secure Device Address.

194
00:13:02,718 --> 00:13:06,880
You cannot use it if you are making a cross-platform games.

195
00:13:07,080 --> 00:13:08,541
It gets pretty hairy, especially when

196
00:13:08,561 --> 00:13:11,982
we're talking about console connecting to a PC.

197
00:13:14,867 --> 00:13:21,071
PC right and then you have to deal with the net restriction and all that so I I would I would suggest

198
00:13:21,752 --> 00:13:25,194
Go with either dedicated server or you use some kind of relay server

199
00:13:25,554 --> 00:13:28,096
assisted peer-to-peer to build your

200
00:13:29,337 --> 00:13:30,037
To build your mesh

201
00:13:31,218 --> 00:13:35,181
And and last but not least because you are now dealing with multiple

202
00:13:36,852 --> 00:13:41,913
powers, essentially, from all your clients, PC, consoles.

203
00:13:42,753 --> 00:13:46,874
You want to have the simulation to be locked at some number.

204
00:13:47,214 --> 00:13:49,155
30 frames per second is the one that everyone

205
00:13:49,575 --> 00:13:50,875
seems to be using right now.

206
00:13:52,015 --> 00:13:53,516
So use your simulation to be locked,

207
00:13:53,676 --> 00:13:57,056
but have your rendering to be whatever you want,

208
00:13:57,737 --> 00:14:00,017
60 frames per second, 120, or even unlocked.

209
00:14:02,578 --> 00:14:03,618
All right, tip number five.

210
00:14:04,098 --> 00:14:06,358
Let them continue playing on the other platform.

211
00:14:07,993 --> 00:14:14,516
I like a lot of people I'm a big fan of Witcher so I played Witcher in

212
00:14:14,596 --> 00:14:16,277
Witcher 3 in

213
00:14:16,337 --> 00:14:20,399
PlayStation I've spent hundreds of hours and then when I pick up my switch

214
00:14:21,560 --> 00:14:26,882
I have to start over right because there is no way to continue my progression in another platform

215
00:14:28,803 --> 00:14:31,424
So, you know, this is this is I found a post

216
00:14:31,541 --> 00:14:33,921
that kind of captures the same question.

217
00:14:34,902 --> 00:14:38,122
The good news is they have implemented a cross-progression,

218
00:14:38,202 --> 00:14:41,903
cross-save between Steam and GOG to Switch.

219
00:14:42,123 --> 00:14:43,324
So I think that's fantastic.

220
00:14:43,364 --> 00:14:43,804
That's great.

221
00:14:43,864 --> 00:14:45,664
That's definitely a step in the right direction.

222
00:14:46,244 --> 00:14:47,664
It didn't help me in particular

223
00:14:47,724 --> 00:14:49,465
because I was playing in PlayStation 4,

224
00:14:50,545 --> 00:14:52,486
but I think it's heading in the right direction.

225
00:14:52,766 --> 00:14:56,926
So this is the value that cross-progression gives you,

226
00:14:57,047 --> 00:14:57,387
right?

227
00:14:57,827 --> 00:14:59,927
It's a quality of life for your players.

228
00:15:00,991 --> 00:15:05,252
Now, how do you store the data itself?

229
00:15:05,312 --> 00:15:06,752
It's really up to your game.

230
00:15:06,792 --> 00:15:08,112
Do you want to store it as a blob?

231
00:15:08,152 --> 00:15:10,273
Do you want to store it as stats values?

232
00:15:10,313 --> 00:15:11,893
Do you want to store it as a string?

233
00:15:12,033 --> 00:15:13,434
It's really up to you.

234
00:15:14,054 --> 00:15:15,614
But first and foremost, you still

235
00:15:15,714 --> 00:15:20,235
need to identify that I'm playing in Switch,

236
00:15:20,415 --> 00:15:22,555
I'm playing in PlayStation, I'm playing in Steam.

237
00:15:22,596 --> 00:15:24,056
They're all actually me.

238
00:15:25,236 --> 00:15:27,817
Again, it goes back to the unified identity.

239
00:15:28,737 --> 00:15:30,457
Now, when you're talking about cross-platform...

240
00:15:31,613 --> 00:15:38,398
cross-progression which basically from one platform you do a save and then from another

241
00:15:38,418 --> 00:15:44,462
platform you do a load and then you save again you have to deal with S-pop and M-pop. S-pop is

242
00:15:44,502 --> 00:15:50,786
the single point of presence it's literally you're only allowing a single connection

243
00:15:52,487 --> 00:15:58,452
to the same account to the same logical account at any given time so you would

244
00:15:59,344 --> 00:16:04,027
One implementation will be like if you log in with one platform and then you log in from another platform

245
00:16:04,067 --> 00:16:07,430
You would log out the other platform, right? So that's that's just one

246
00:16:08,070 --> 00:16:12,973
Behavior that is expected from an S-POP. That is all of it is

247
00:16:13,133 --> 00:16:17,596
Useful to protect yourself so that you're not riding to the same location

248
00:16:17,616 --> 00:16:22,079
At any at any given time. So you're you're doing stomping at that point

249
00:16:23,640 --> 00:16:26,542
Now M-POP is is actually the other way around. M-POP is

250
00:16:27,130 --> 00:16:30,194
Allowing you to do that, allowing you to have multiple connections

251
00:16:31,416 --> 00:16:34,399
That's pointing logically to the same account. It can be done

252
00:16:34,419 --> 00:16:40,266
It just means that it's a little bit more complicated, but it's definitely doable

253
00:16:42,369 --> 00:16:44,871
The next one is you want to unify your commerce

254
00:16:47,130 --> 00:16:49,491
if you go to Minecraft and then you go to their store,

255
00:16:50,111 --> 00:16:53,093
you would see that it's a very consistent experience.

256
00:16:53,613 --> 00:16:56,574
I took the screenshot a couple of weeks ago,

257
00:16:57,295 --> 00:16:59,316
and this is the experience that you see.

258
00:16:59,756 --> 00:17:05,359
Regardless whether you use the Switch or the iPad or the Windows 10,

259
00:17:05,439 --> 00:17:08,640
it's like they're all the same consistent experience.

260
00:17:08,680 --> 00:17:12,422
Let's talk about the difference between primary store and secondary store.

261
00:17:12,502 --> 00:17:13,703
Primary store is,

262
00:17:14,445 --> 00:17:17,707
the store that you have to configure on the platform side

263
00:17:19,067 --> 00:17:21,349
that results in real money transaction.

264
00:17:22,069 --> 00:17:24,510
Whereas the secondary store is everything

265
00:17:24,530 --> 00:17:25,911
that you control within the game.

266
00:17:26,792 --> 00:17:31,054
You want to make the secondary store to be as rich as you can.

267
00:17:31,074 --> 00:17:33,215
And you want to simplify the things

268
00:17:33,255 --> 00:17:36,037
that you rely on in the primary store to the minimum.

269
00:17:36,597 --> 00:17:38,118
The reason being is the fact that you

270
00:17:39,237 --> 00:17:45,681
as you can probably guess, you have to configure the primary store in every single platform.

271
00:17:46,301 --> 00:17:50,383
And then you would go into the different regions and then the different pricing and all that.

272
00:17:50,523 --> 00:17:51,684
It gets pretty complicated.

273
00:17:51,744 --> 00:17:57,867
And also, as we will talk about it in the next chapter, sorry, in the next point,

274
00:17:58,687 --> 00:18:00,248
there's no APIs to do it.

275
00:18:00,268 --> 00:18:04,950
Like, this is a very, this is pretty much still a manual process that you need to go through

276
00:18:05,571 --> 00:18:06,891
with every single platform.

277
00:18:08,728 --> 00:18:10,829
So I would suggest keeping it simple.

278
00:18:11,549 --> 00:18:16,151
A lot of the implementations these days are using it for virtual currencies like V-Bucks

279
00:18:16,492 --> 00:18:18,192
or the Minecoins.

280
00:18:19,233 --> 00:18:20,133
That's why, right?

281
00:18:20,153 --> 00:18:24,275
That's because you want to simplify that one and then you have a richer experience in the

282
00:18:24,315 --> 00:18:25,075
secondary store.

283
00:18:26,482 --> 00:18:29,103
This is an example of fulfillment flow,

284
00:18:29,143 --> 00:18:34,625
where basically the game, you let your players from Steam

285
00:18:34,765 --> 00:18:38,046
or from PlayStation to buy the consumable or durable

286
00:18:38,347 --> 00:18:40,267
from the platform store,

287
00:18:40,828 --> 00:18:44,109
and then you use your unified commerce

288
00:18:44,409 --> 00:18:47,230
to consume on behalf of the players

289
00:18:47,370 --> 00:18:50,632
with the secure service-to-service calls.

290
00:18:52,924 --> 00:18:57,467
This is the example calls that's happening for Steam.

291
00:18:57,747 --> 00:19:00,289
That's basically your commerce service

292
00:19:00,369 --> 00:19:02,890
is the one that's going to finalize the transaction.

293
00:19:02,990 --> 00:19:04,211
It listens to the callback.

294
00:19:04,732 --> 00:19:06,853
And then your e-commerce is the one

295
00:19:06,873 --> 00:19:09,995
that basically confirms that transaction is done.

296
00:19:10,215 --> 00:19:14,138
Now I'm going to grant this user this much in the wallet

297
00:19:14,218 --> 00:19:16,059
or grants this entitlement.

298
00:19:18,760 --> 00:19:22,343
The next one is a platform certification.

299
00:19:23,937 --> 00:19:26,258
There are three things that is guaranteed in life.

300
00:19:26,399 --> 00:19:29,140
The first one is, well, especially for a game dev life,

301
00:19:30,301 --> 00:19:33,803
death, taxes, and failing a certification

302
00:19:33,823 --> 00:19:37,805
on a very unfortunate time.

303
00:19:39,766 --> 00:19:45,429
Because if you have gone through certification before,

304
00:19:45,889 --> 00:19:47,730
certification can be pretty tricky.

305
00:19:48,791 --> 00:19:50,151
It's quite a long list.

306
00:19:50,331 --> 00:19:52,873
It varies from platform to platform.

307
00:19:53,461 --> 00:20:01,186
And one thing to keep in mind about making a cross-platform game is that there are actually an extra section that talks about cross-platform games

308
00:20:02,327 --> 00:20:03,448
platform certification

309
00:20:04,388 --> 00:20:05,549
for each of the platforms

310
00:20:06,370 --> 00:20:10,473
Here's one example. This is on the left hand side you have

311
00:20:11,773 --> 00:20:14,695
This is Call of Duty by the way like on the left hand side you have

312
00:20:15,496 --> 00:20:18,838
Xbox right? Yeah Xbox and the right hand side you have PC

313
00:20:21,358 --> 00:20:25,200
The difference is very very subtle, but if you see like in the right hand side of the PC

314
00:20:25,700 --> 00:20:31,803
You actually like they will tell you if the people that you're playing with is an Xbox or in play PlayStation

315
00:20:32,323 --> 00:20:33,784
whereas in the left hand side

316
00:20:34,964 --> 00:20:42,748
The requirement states that's like either either they are playing in the same platform as you are which is Xbox or they're playing in another platform

317
00:20:43,415 --> 00:20:46,577
which at that point you cannot actually say which platforms they're from.

318
00:20:47,117 --> 00:20:49,539
So it's a subtle UI difference

319
00:20:50,160 --> 00:20:53,982
and that's something that will fail you your certification if you actually didn't catch it.

320
00:20:54,262 --> 00:20:58,185
So my recommendation is just provide yourself enough buffer

321
00:20:58,645 --> 00:21:02,928
to go through the platform certification and actually understand what is required.

322
00:21:05,530 --> 00:21:08,632
The next one is separate release and deploy.

323
00:21:09,433 --> 00:21:10,273
This is one example.

324
00:21:12,252 --> 00:21:18,135
Fortnite has this black hole event that's basically it's for their transition from season 1 to season 2

325
00:21:19,055 --> 00:21:20,076
at some point people just

326
00:21:20,836 --> 00:21:25,138
suddenly like the whole world just suddenly started like collapsing and

327
00:21:25,258 --> 00:21:28,860
Absorb into black hole and it happens in the exact same time

328
00:21:30,381 --> 00:21:30,481
and

329
00:21:30,661 --> 00:21:38,265
and I would this is a time event right and and the reason this is interesting is because they don't rely on

330
00:21:38,954 --> 00:21:41,918
this event to be activated with the title update.

331
00:21:43,940 --> 00:21:46,103
If you have gone through title update ritual,

332
00:21:46,283 --> 00:21:49,446
it is pretty involved when you are submitting a title update

333
00:21:49,667 --> 00:21:51,128
to the platforms.

334
00:21:52,090 --> 00:21:55,073
And also, when you were releasing a title update,

335
00:21:55,133 --> 00:21:56,074
a binary change,

336
00:21:56,820 --> 00:22:01,585
You cannot really synchronize it across all platforms right now. It's a very manual process

337
00:22:02,166 --> 00:22:05,128
There is account manager that needs to be involved. There's spreadsheets

338
00:22:05,148 --> 00:22:12,876
Sometimes you have to go to some portals you have to pass the certification test. So it's it's in general. It's it's very hard to synchronize

339
00:22:13,697 --> 00:22:16,499
uh the the release of a title update

340
00:22:17,420 --> 00:22:17,901
um now

341
00:22:18,485 --> 00:22:21,747
But title update is not the only way you can change,

342
00:22:21,807 --> 00:22:24,189
you can release a feature to your games.

343
00:22:25,249 --> 00:22:26,810
There is also data only patch, which

344
00:22:26,870 --> 00:22:28,452
is like sometimes you will see that it

345
00:22:28,472 --> 00:22:30,273
starts downloading assets.

346
00:22:31,694 --> 00:22:32,775
So that's really useful.

347
00:22:33,275 --> 00:22:35,236
But also, we're going to be talking about server-side

348
00:22:35,256 --> 00:22:35,616
toggles.

349
00:22:37,041 --> 00:22:38,121
So what is server-side toggles?

350
00:22:38,161 --> 00:22:45,545
Server-side toggles are basically server variables

351
00:22:46,125 --> 00:22:47,746
that you define on the server side

352
00:22:47,866 --> 00:22:50,927
and then have the games, game clients, and game servers

353
00:22:50,967 --> 00:22:54,129
to react to the changes to the server variables.

354
00:22:56,129 --> 00:22:59,251
If you have that capability in your game, what you can do

355
00:22:59,331 --> 00:23:01,912
is you can deploy the title update earlier.

356
00:23:01,992 --> 00:23:06,314
So you deploy your title, your binary changes to your game.

357
00:23:07,034 --> 00:23:09,536
and your binary changes will now understand

358
00:23:09,556 --> 00:23:12,518
these extra server variables ahead of time.

359
00:23:13,818 --> 00:23:16,280
Then when you are actually ready to activate

360
00:23:16,320 --> 00:23:19,002
the time events or other changes,

361
00:23:19,082 --> 00:23:23,565
you can just change the server side variables or feature toggles.

362
00:23:25,990 --> 00:23:31,680
What is it used for? It's used for scheduled events, it's useful for game balancing data,

363
00:23:32,180 --> 00:23:36,728
it's useful for kill switching certain things, or even enabling certain features.

364
00:23:39,005 --> 00:23:42,246
This is a diagram of how it would look like.

365
00:23:42,286 --> 00:23:43,326
It should be pretty straightforward.

366
00:23:43,346 --> 00:23:46,327
You have the server variables that

367
00:23:46,387 --> 00:23:53,569
is served from your services, have your game clients

368
00:23:53,609 --> 00:23:58,130
and have your game servers to be ready to react to it.

369
00:23:58,750 --> 00:24:01,830
Push notification is a nice thing to have.

370
00:24:02,391 --> 00:24:04,691
But in theory, you don't really need push notification.

371
00:24:04,731 --> 00:24:07,112
Technically, you can poll, but polling.

372
00:24:08,528 --> 00:24:14,631
And then you have live designers and producers or developers who configure those server variables

373
00:24:15,151 --> 00:24:21,574
So what that means is that if they need to tweak something if they need to kill switch something if they need to activate

374
00:24:21,594 --> 00:24:25,356
Certain events they can just go through from the server variables, right?

375
00:24:27,037 --> 00:24:32,999
All right, so we're at the last tip right now. This tip is is this is an uncharted territory

376
00:24:33,019 --> 00:24:34,260
So I want to be clear about that

377
00:24:35,400 --> 00:24:37,021
It is by ones play anywhere

378
00:24:37,461 --> 00:24:37,541
I'll

379
00:24:38,530 --> 00:24:41,272
What it enables you to do is basically,

380
00:24:42,753 --> 00:24:48,756
it lets your consumers to buy your game in one platform

381
00:24:49,496 --> 00:24:52,618
and have it available for him or her

382
00:24:52,718 --> 00:24:56,560
to play anywhere else in any other platform.

383
00:25:00,380 --> 00:25:02,341
Alright, so why do we care about it?

384
00:25:02,381 --> 00:25:03,942
Like from players it's great, right?

385
00:25:03,982 --> 00:25:06,203
I mean like from players it's basically, it's literally

386
00:25:06,223 --> 00:25:08,184
they don't have to worry or think about

387
00:25:08,344 --> 00:25:10,505
what platforms I need to buy

388
00:25:10,525 --> 00:25:11,925
this particular game for

389
00:25:13,206 --> 00:25:14,106
I can just buy the game

390
00:25:14,186 --> 00:25:16,407
and I don't have to worry about it because I can just go to another

391
00:25:16,447 --> 00:25:17,748
platform and I can play it there

392
00:25:18,828 --> 00:25:20,669
For you, for the game developer

393
00:25:20,789 --> 00:25:22,090
it is a goodwill

394
00:25:22,230 --> 00:25:24,031
it is mostly like to get

395
00:25:24,731 --> 00:25:25,351
to get the

396
00:25:26,627 --> 00:25:33,869
your fans to get your players to really embrace your brand, drive engagement, and if you actually

397
00:25:33,929 --> 00:25:39,550
have your own store, you can actually drive the traffic to your store this way.

398
00:25:41,871 --> 00:25:45,911
So here are three steps to enable Bopa. The first one is unified identity. Again,

399
00:25:46,432 --> 00:25:50,733
everything boils down to the unified identity. The second one is being able to kind of keep

400
00:25:50,773 --> 00:25:51,793
track of entitlements.

401
00:25:52,510 --> 00:25:57,015
And the third one is being able to call another platform's API

402
00:25:57,075 --> 00:25:58,536
to grant entitlement.

403
00:26:00,418 --> 00:26:03,140
Now, this API, the third one that I mentioned,

404
00:26:03,160 --> 00:26:06,083
the keyless entitlement, that is not widely available.

405
00:26:06,203 --> 00:26:07,865
Only a few platforms support it.

406
00:26:08,005 --> 00:26:10,427
And even that, you have to go through your account manager

407
00:26:10,447 --> 00:26:10,968
to use it.

408
00:26:11,648 --> 00:26:15,852
But I believe that this is where the industry is heading right

409
00:26:15,872 --> 00:26:16,012
now.

410
00:26:17,454 --> 00:26:18,215
That's an example.

411
00:26:19,100 --> 00:26:22,601
The first one is you buy it in your store and then you want to show up in Steam.

412
00:26:22,921 --> 00:26:24,361
So this is the flow.

413
00:26:24,841 --> 00:26:29,163
So basically you have to call, eventually you will call the grant package to Steam.

414
00:26:29,523 --> 00:26:35,965
Again, this API is not available publicly, so you need to talk to your account manager

415
00:26:36,125 --> 00:26:38,786
if you really want to enable this scenario.

416
00:26:40,306 --> 00:26:47,988
The second one is you buy the game in Steam and then the game will show up in your store.

417
00:26:49,363 --> 00:26:52,086
So this one is a little bit more straightforward.

418
00:26:52,146 --> 00:26:54,268
This one is basic, but you cannot listen

419
00:26:54,388 --> 00:26:56,850
to purchase events in Steam.

420
00:26:57,331 --> 00:26:59,272
So you have to rely on your player

421
00:26:59,472 --> 00:27:01,975
played the game once first in Steam.

422
00:27:02,675 --> 00:27:04,277
Maybe at that point, you're also gonna trigger

423
00:27:04,297 --> 00:27:05,818
the account linking, for instance.

424
00:27:05,918 --> 00:27:07,500
And then at that point, you know that's like,

425
00:27:07,520 --> 00:27:09,021
all right, this player has logged in.

426
00:27:09,381 --> 00:27:10,722
He has the entitlement in Steam.

427
00:27:11,083 --> 00:27:13,185
I'm gonna give him an entitlement in my store.

428
00:27:15,400 --> 00:27:16,581
So, key takeaways.

429
00:27:17,781 --> 00:27:19,902
Should we or should we not do cross-platform?

430
00:27:20,402 --> 00:27:25,904
I think cross-platform is ideal for developers

431
00:27:26,524 --> 00:27:28,865
who want to make several cross-platform games

432
00:27:29,225 --> 00:27:32,686
in the future, or if you want to make a game that you are going

433
00:27:32,746 --> 00:27:36,867
to maintain for a long time, that has a long life service

434
00:27:37,027 --> 00:27:37,388
plan.

435
00:27:40,148 --> 00:27:40,709
Why is that?

436
00:27:40,989 --> 00:27:41,349
Because.

437
00:27:42,292 --> 00:27:47,058
Building a cross-platform games is not trivial.

438
00:27:47,719 --> 00:27:49,301
You need time and you need effort

439
00:27:49,361 --> 00:27:51,744
and also you need investment

440
00:27:52,284 --> 00:27:56,189
to actually have the proper infrastructure to support it,

441
00:27:56,329 --> 00:27:58,552
like all those services that we've been talking about.

442
00:28:00,033 --> 00:28:03,054
Where do you start? Just like the concept of game engine,

443
00:28:03,874 --> 00:28:06,115
like Unity, UE4, and all that.

444
00:28:06,235 --> 00:28:08,536
Basically, it gives you a jumpstart.

445
00:28:09,336 --> 00:28:10,857
Can you build your own game engine?

446
00:28:10,977 --> 00:28:13,077
Absolutely, but you don't have to.

447
00:28:13,337 --> 00:28:16,018
There are definitely some solutions out there that will

448
00:28:16,058 --> 00:28:19,400
give you a jumpstart to enable this,

449
00:28:19,500 --> 00:28:23,561
and some of those are actually cross-platform ready also.

450
00:28:25,734 --> 00:28:27,035
Which one are you gonna use?

451
00:28:27,736 --> 00:28:29,598
Just like when you're evaluating game engines,

452
00:28:30,218 --> 00:28:33,442
there are pros and cons that you need to evaluate.

453
00:28:33,942 --> 00:28:36,325
There is no one solution that fits everyone,

454
00:28:36,425 --> 00:28:39,989
so you definitely need to check out what you need,

455
00:28:40,690 --> 00:28:42,471
what is important for you.

456
00:28:42,692 --> 00:28:45,995
So I listed about seven, and I'm sure there are more too.

457
00:28:46,015 --> 00:28:47,317
It kind of depends on what you need.

458
00:28:49,703 --> 00:28:51,925
If you would like to learn more about this topic,

459
00:28:51,985 --> 00:28:55,587
about the backend as a service solutions out there

460
00:28:56,168 --> 00:29:00,631
for online game dev, check out the Discord channel.

461
00:29:01,692 --> 00:29:05,495
And so last question is, where is this industry heading?

462
00:29:05,935 --> 00:29:06,916
This is my opinion.

463
00:29:07,096 --> 00:29:10,418
My opinion is platforms are taking the backseat.

464
00:29:10,659 --> 00:29:12,760
There will always be new platforms coming in.

465
00:29:13,060 --> 00:29:16,403
But I think that platforms are taking the backseat.

466
00:29:17,326 --> 00:29:20,870
And it is really about the player experience

467
00:29:20,910 --> 00:29:24,113
is the one that's going to take the central stage.

468
00:29:24,733 --> 00:29:28,917
Just like my kids, they don't really care about platforms.

469
00:29:29,718 --> 00:29:32,720
All they care about is having a good time and playing together.

470
00:29:33,361 --> 00:29:36,324
And I think that is where the industry is going.

471
00:29:37,765 --> 00:29:40,107
So if you listen to my talk.

472
00:29:42,302 --> 00:29:43,022
Thank you so much.

473
00:29:43,543 --> 00:29:44,684
That is my email address.

474
00:29:44,844 --> 00:29:46,706
I would love to hear more from you,

475
00:29:47,287 --> 00:29:49,569
especially if you have any thoughts, or any comments,

476
00:29:49,629 --> 00:29:53,393
or any questions about my talk, or any cross-platform

477
00:29:53,433 --> 00:29:55,515
in general, or about online game development.

478
00:29:57,370 --> 00:29:59,371
like, you know, I would love to hear from you.

479
00:30:00,973 --> 00:30:03,655
It's a bummer that I don't get to see you in March,

480
00:30:03,795 --> 00:30:07,178
but hopefully GDC 2020 summer is happening

481
00:30:07,658 --> 00:30:08,739
and I get to see you then.

482
00:30:09,380 --> 00:30:12,562
Until then, the company I work for, XLByte,

483
00:30:12,602 --> 00:30:16,145
we actually have an online event going on in March 16 to 20.

484
00:30:16,705 --> 00:30:18,267
So check out our website.

485
00:30:18,567 --> 00:30:22,650
Hopefully, I will see you in the online event that we have.

486
00:30:22,730 --> 00:30:25,372
We're going to be talking about cross-platform and other things

487
00:30:25,432 --> 00:30:25,573
too.

488
00:30:26,493 --> 00:30:33,138
and a special thanks to Mark and Ed who have reviewed my deck and gave me a lot of good feedback

489
00:30:33,158 --> 00:30:38,262
So thank you for that and also the rest of the GDC crew. I know it's not been easy

490
00:30:38,582 --> 00:30:42,264
So thank you so much for coordinating this and making it still

491
00:30:43,145 --> 00:30:47,068
Still happening and for you. Thank you so much. Bye

492
00:30:47,088 --> 00:30:51,331
All right, right, so what do you like about Minecraft?

493
00:30:51,847 --> 00:30:57,408
Well, I like it because I can play with my dad and my friends and sometimes my little sister.

