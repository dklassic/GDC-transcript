1
00:00:05,671 --> 00:00:10,754
Alright, I think I'm gonna get started now. Before we begin, the usual reminders, please

2
00:00:10,794 --> 00:00:15,877
silence your cell phones, and they're doing the pass scanning thing, oh, wow, they're doing the

3
00:00:15,917 --> 00:00:20,160
pass scanning thing, so between each session, make sure that you get your pass scanned so that

4
00:00:20,740 --> 00:00:25,563
when you do your evaluations, you get one for each of the sessions in the talk. So, alright,

5
00:00:25,903 --> 00:00:28,205
hi, thank you for being here, I'm David Pittman.

6
00:00:29,029 --> 00:00:32,811
I'm going to be talking about procedural level generation today, and I'm just very

7
00:00:32,852 --> 00:00:35,573
briefly going to introduce myself. It's my first time speaking here at Level

8
00:00:35,593 --> 00:00:39,216
Design in a Day, and my background is a little bit different. I was not a level

9
00:00:39,256 --> 00:00:44,119
designer before. I used to work in big budget games, especially at 2K Marin,

10
00:00:44,139 --> 00:00:49,082
where I was an AI programmer on Bioshock 2, and for a time I was the lead AI

11
00:00:49,122 --> 00:00:54,945
programmer on what eventually became the Bureau XCOM Declassified. I kind of got

12
00:00:54,965 --> 00:00:55,926
burnt out on that game.

13
00:00:57,315 --> 00:00:59,756
About two years ago I had the opportunity to do something new.

14
00:00:59,776 --> 00:01:04,637
I co-founded Minor Key Games with my twin brother, and now I do a little bit of everything.

15
00:01:04,697 --> 00:01:10,499
I do programming, design, bad art, audio, business and marketing, pretty much anything

16
00:01:10,519 --> 00:01:12,640
that has to happen to ship a game, I do it now.

17
00:01:18,240 --> 00:01:20,582
So about two years ago, I made this game called Eldritch.

18
00:01:21,102 --> 00:01:22,504
And when I was working on it, I actually

19
00:01:22,544 --> 00:01:25,306
had a kind of difficult time explaining to friends and family

20
00:01:25,346 --> 00:01:26,107
what I was making.

21
00:01:26,147 --> 00:01:27,948
It wasn't like a particularly innovative game.

22
00:01:28,009 --> 00:01:30,331
It was just a hybrid of genres that people didn't really

23
00:01:31,492 --> 00:01:33,133
visualize the way that I was thinking of it.

24
00:01:33,173 --> 00:01:34,134
It was kind of hard to describe.

25
00:01:34,687 --> 00:01:40,590
I tended to talk about it in terms of my influences in immersive simulations and roguelikes, but

26
00:01:40,610 --> 00:01:45,733
what I was really trying to say is if you take first-person combat and magic and stealth

27
00:01:46,313 --> 00:01:51,516
and you mix it with procedural levels and permanent player death and dress it up in

28
00:01:51,556 --> 00:01:56,139
Lovecraftian fiction and make it on a shoestring budget, you get something that looks like

29
00:01:56,219 --> 00:01:56,539
Eldritch.

30
00:01:59,263 --> 00:02:01,386
So Minor Key Games is a two-person company.

31
00:02:01,447 --> 00:02:02,929
It's myself and my twin brother Kyle.

32
00:02:03,270 --> 00:02:05,012
We actually work on individual projects, though.

33
00:02:05,073 --> 00:02:06,835
I made Aldrich completely by myself

34
00:02:07,056 --> 00:02:08,819
in a span of slightly less than eight months,

35
00:02:09,320 --> 00:02:10,642
which I don't track hours.

36
00:02:10,682 --> 00:02:11,623
I think that's silly,

37
00:02:11,663 --> 00:02:12,926
especially for independent developers.

38
00:02:13,617 --> 00:02:16,440
Back of the envelope calculation puts that around 1,500 person

39
00:02:16,460 --> 00:02:17,921
hours of work to make this game.

40
00:02:18,522 --> 00:02:19,863
That number didn't mean a lot to me.

41
00:02:20,584 --> 00:02:22,225
So I thought about what would it be

42
00:02:22,405 --> 00:02:24,307
for a conservative big budget game that

43
00:02:24,327 --> 00:02:26,929
would be maybe 100 people working for two years

44
00:02:27,270 --> 00:02:28,190
and not crunching.

45
00:02:28,250 --> 00:02:30,392
That would be like 400,000 person hours.

46
00:02:30,813 --> 00:02:33,395
So this was like a fraction of a percent of the work.

47
00:02:33,955 --> 00:02:36,256
of a large game, and I'm not saying that to brag,

48
00:02:36,296 --> 00:02:38,017
like the game has a ton of rough edges,

49
00:02:38,137 --> 00:02:39,778
but it's just, I had a very fast,

50
00:02:40,078 --> 00:02:42,079
or a very short time span to make this game,

51
00:02:42,119 --> 00:02:43,239
and I had to work very fast.

52
00:02:43,319 --> 00:02:44,420
And so that's going to be something

53
00:02:44,860 --> 00:02:46,021
that comes up throughout this talk,

54
00:02:46,161 --> 00:02:47,901
is trying to find the simplest thing

55
00:02:47,941 --> 00:02:49,922
that could possibly work, and that was actually

56
00:02:50,002 --> 00:02:52,543
why I chose to do procedural level generation for this game.

57
00:02:53,804 --> 00:02:56,885
Despite the kind of rushed development of Eldritch,

58
00:02:57,265 --> 00:02:58,686
it was fairly well received.

59
00:02:58,986 --> 00:03:01,127
I've cherry-picked the ratings I show here,

60
00:03:01,187 --> 00:03:02,688
because it's my talk and I can do that.

61
00:03:03,479 --> 00:03:08,421
But, you know, 9 out of 10 people who wrote a review on Steam liked the game, so that was pretty cool.

62
00:03:08,721 --> 00:03:11,602
And it made a tenfold return on investment, which was also really nice.

63
00:03:11,962 --> 00:03:15,223
And it didn't do that by selling millions of units or millions of dollars.

64
00:03:15,263 --> 00:03:20,225
It was not that successful, but the development was so lean that it was fairly easy to recoup the cost.

65
00:03:23,590 --> 00:03:26,312
So I want to talk about specifically

66
00:03:26,332 --> 00:03:28,574
what I was trying to accomplish with the levels in Eldritch.

67
00:03:28,614 --> 00:03:30,135
But first I want to talk about why

68
00:03:30,155 --> 00:03:33,738
I used procedural level design for this game

69
00:03:33,758 --> 00:03:35,219
and why anyone might use it.

70
00:03:36,600 --> 00:03:38,561
So the first reason is probably the most familiar

71
00:03:38,701 --> 00:03:41,804
is if the game calls for an element of perennial discovery,

72
00:03:41,844 --> 00:03:44,966
the way that roguelike games do, every time you play a roguelike.

73
00:03:45,356 --> 00:03:47,278
or some strategy games like Civilization,

74
00:03:47,338 --> 00:03:48,799
users randomize maps to great effect.

75
00:03:49,479 --> 00:03:51,081
The player can't go into the game

76
00:03:51,121 --> 00:03:52,502
knowing what that level's going to look like.

77
00:03:52,522 --> 00:03:54,784
They can learn the systems, but they can't learn the space.

78
00:03:55,244 --> 00:03:56,665
And so the game design in that case

79
00:03:56,705 --> 00:03:59,347
actually dictates that you need a generator

80
00:03:59,668 --> 00:04:01,109
so that the levels are different every time.

81
00:04:02,930 --> 00:04:04,351
Project constraints are another big one,

82
00:04:04,371 --> 00:04:05,753
and I think this is the reason that there's

83
00:04:06,553 --> 00:04:09,676
kind of the current in vogue, rogue-like scene

84
00:04:09,716 --> 00:04:11,778
amongst independent developers, myself included.

85
00:04:14,006 --> 00:04:20,650
So as an individual developer, I didn't have time in eight months to make even like five to six hours of gameplay.

86
00:04:20,970 --> 00:04:23,471
If I were building the maps by hand, I was trying to do everything else too.

87
00:04:23,532 --> 00:04:27,454
Make enemy AIs, build the physics for the game, like I wrote my own engine for this game.

88
00:04:27,514 --> 00:04:30,015
I just wouldn't have had time to do levels.

89
00:04:30,475 --> 00:04:34,958
If you're familiar with the project management triangle of cost, time, and scope,

90
00:04:35,158 --> 00:04:40,621
where as one of these things changes, the other two have to push and pull to accommodate it.

91
00:04:41,992 --> 00:04:45,313
As an individual developer, cost and time are the same thing.

92
00:04:45,354 --> 00:04:50,036
Like this triangle basically flattens into a line between how much money do I have and

93
00:04:50,096 --> 00:04:51,877
how big is the scope of the game going to be.

94
00:04:52,217 --> 00:04:55,599
I had to keep the scope of the game small because I was going to run out of money.

95
00:04:55,639 --> 00:04:57,600
I couldn't have continued to do that as a full-time job.

96
00:05:04,744 --> 00:05:07,546
Another reason to consider procedural level design is

97
00:05:08,060 --> 00:05:10,042
if it plays to your team's strengths.

98
00:05:10,222 --> 00:05:11,563
My background was as a programmer.

99
00:05:12,003 --> 00:05:16,025
I was able to get very fast at developing procedural levels.

100
00:05:16,786 --> 00:05:18,687
I had done this sort of thing just as a hobby before.

101
00:05:18,727 --> 00:05:19,848
And so when I went to make this game,

102
00:05:19,868 --> 00:05:21,749
it was natural for me to want to do this.

103
00:05:21,809 --> 00:05:23,830
Whereas if I were trying to make levels by hand,

104
00:05:24,330 --> 00:05:25,731
I'm not an experienced level designer.

105
00:05:25,751 --> 00:05:27,032
I would have been kind of fumbling at it.

106
00:05:27,072 --> 00:05:28,353
I would have been much slower about it.

107
00:05:30,326 --> 00:05:33,588
procedural levels also kind of enable content reuse in a really good way.

108
00:05:33,708 --> 00:05:37,592
Everything I made for this game kind of just ended up in the mix to where if I

109
00:05:37,912 --> 00:05:41,515
if I built a module I made some new art like it just ended up showing up

110
00:05:41,615 --> 00:05:45,478
everywhere in the game you would see it regularly you would play you know the

111
00:05:45,498 --> 00:05:48,901
structure of a roguelike is such that you die you play a level over and over

112
00:05:48,921 --> 00:05:52,684
you know a variation on the same level and so you saw all the content in

113
00:05:52,764 --> 00:05:55,006
Eldritch a lot there wasn't the kind of in

114
00:05:56,981 --> 00:06:00,344
big budget games especially, there's a lot of money spent on set piece things

115
00:06:00,704 --> 00:06:06,427
that you might only see one time in 10 or 12 hours of play. There's multiple ways

116
00:06:06,447 --> 00:06:10,290
to use procedural level generation. The one that we're familiar with, the one that

117
00:06:10,350 --> 00:06:13,252
I use for Eldritch, is generating levels at runtime, but you could also generate

118
00:06:13,752 --> 00:06:16,474
levels offline and then work on them by, you know...

119
00:06:17,321 --> 00:06:22,466
I can imagine this is a good way to, as an indie developer,

120
00:06:22,747 --> 00:06:24,048
create a game that's a bigger scope

121
00:06:24,088 --> 00:06:25,729
than what it looks like your team could support.

122
00:06:26,050 --> 00:06:28,092
Generate a large terrain randomly

123
00:06:28,152 --> 00:06:30,714
and then fill in key points of interest by hand.

124
00:06:30,854 --> 00:06:31,715
You could do something like that.

125
00:06:32,216 --> 00:06:33,897
You don't also have to make a whole game

126
00:06:33,917 --> 00:06:36,219
that's based on random levels.

127
00:06:36,320 --> 00:06:38,442
You could supplement a 10-hour campaign.

128
00:06:39,222 --> 00:06:42,587
that's built by hand and then if the player wants to do more after that,

129
00:06:42,627 --> 00:06:46,532
like there's an endless amount of generated levels so they could play after that.

130
00:06:46,592 --> 00:06:48,174
I actually don't know of any games that have done that,

131
00:06:48,194 --> 00:06:49,816
but it seems like it would be a really cool thing.

132
00:06:52,308 --> 00:06:54,849
The last point I want to make is that procedural level

133
00:06:54,890 --> 00:06:56,611
generation is design.

134
00:06:56,891 --> 00:06:58,512
I think there's a tendency to regard it

135
00:06:59,072 --> 00:07:01,934
as the domain of engineering, but I can imagine

136
00:07:01,954 --> 00:07:04,216
kind of like a hypothetical programmer

137
00:07:04,256 --> 00:07:06,117
who doesn't have any design sensibility.

138
00:07:06,497 --> 00:07:09,079
That person couldn't write a good algorithm

139
00:07:09,099 --> 00:07:11,520
to generate levels because they don't know

140
00:07:11,600 --> 00:07:13,462
how to evaluate the output of the system.

141
00:07:13,522 --> 00:07:15,003
Like you have to know what's a good level.

142
00:07:15,363 --> 00:07:16,844
In a way it's almost like, you know,

143
00:07:16,884 --> 00:07:18,004
if you're a lead level designer,

144
00:07:18,045 --> 00:07:19,666
you may not be the one building levels,

145
00:07:20,046 --> 00:07:21,527
but you have to be able to tell the rest of your team,

146
00:07:21,887 --> 00:07:22,107
you know.

147
00:07:22,841 --> 00:07:26,044
here's what the levels for this game are going to be like and be able to recognize if something

148
00:07:26,545 --> 00:07:30,809
isn't fitting what the game needs. That's kind of the same thing that working on procedural

149
00:07:31,069 --> 00:07:40,499
levels is, is that the uh, excuse me, fight in the cold. You need to be able to develop

150
00:07:40,979 --> 00:07:44,603
a set of rules that will produce good levels.

151
00:07:46,297 --> 00:07:49,220
by knowing how to, by knowing what a good level is.

152
00:07:49,260 --> 00:07:50,941
And that's why I think this is important

153
00:07:50,961 --> 00:07:52,783
to talk about at level design in a day,

154
00:07:52,803 --> 00:07:55,685
is because, you know, this is a room full of people

155
00:07:55,725 --> 00:07:57,867
who have internalized what is a good level.

156
00:07:57,927 --> 00:08:00,329
You have expert knowledge, you are used to building levels.

157
00:08:00,650 --> 00:08:02,671
You know, I'm kind of fumbling around in the dark,

158
00:08:02,711 --> 00:08:05,033
like I'm not an experienced level designer,

159
00:08:05,053 --> 00:08:07,816
but I hope to share, you know, what I learned along the way

160
00:08:07,856 --> 00:08:11,339
and show how I did, you know, take some design sensibility

161
00:08:11,399 --> 00:08:13,080
and shape what I made with Eldritch.

162
00:08:19,585 --> 00:08:22,486
So the specific goals I had for levels in Eldritch,

163
00:08:23,006 --> 00:08:25,287
I was not trying to create like the sprawling,

164
00:08:25,727 --> 00:08:27,527
random terrain of something like Minecraft.

165
00:08:27,567 --> 00:08:30,948
I wanted to do compact levels that had a clear start,

166
00:08:30,988 --> 00:08:34,169
a clear end, they took two to five minutes to go through.

167
00:08:34,189 --> 00:08:36,249
I wanted the spaces to look,

168
00:08:37,509 --> 00:08:38,690
I put handcrafted on the slide,

169
00:08:38,710 --> 00:08:39,510
that's actually not a good word.

170
00:08:39,790 --> 00:08:41,990
I wanted them to be synthetic worlds,

171
00:08:42,030 --> 00:08:43,231
look like they were constructed.

172
00:08:43,251 --> 00:08:46,972
I wanted to have ancient sunken cities and not just like.

173
00:08:47,613 --> 00:08:52,196
terrain and cave systems. I couldn't use noise, I had to do things that were

174
00:08:53,637 --> 00:08:58,601
hand-built, you know. I wanted the effect to be of continuous space instead of

175
00:08:58,641 --> 00:09:01,563
room-to-room. There's a few other contemporary first-person roguelikes on

176
00:09:01,583 --> 00:09:05,106
the market. They tend to be more like arena shooters. You get locked into a

177
00:09:05,166 --> 00:09:08,628
room, you fight monsters, the door opens, you move to the next room, and that's great.

178
00:09:08,688 --> 00:09:11,170
Like, I really enjoy a lot of those games, but that wasn't what I was trying to make

179
00:09:11,190 --> 00:09:11,690
with Eldritch.

180
00:09:13,251 --> 00:09:18,236
And the last goal that I had here was I wanted the worlds to be semi-coherent, which is a kind of strange goal.

181
00:09:18,737 --> 00:09:23,362
Normally you would want worlds to be coherent, you want like a kind of internal logic and consistency.

182
00:09:24,182 --> 00:09:31,390
But I was looking at Lovecraft reference, I was reading Lovecraft stories and that was sort of the inspiration for the world.

183
00:09:31,430 --> 00:09:35,254
And one of these things that comes up in a lot of his writing, he describes environments in detail.

184
00:09:35,658 --> 00:09:38,300
But there's a kind of sense of alien wrongness

185
00:09:39,061 --> 00:09:40,302
to the worlds that he describes.

186
00:09:40,322 --> 00:09:41,823
This is from Call of Cthulhu.

187
00:09:42,223 --> 00:09:44,745
He talked of his dreams in a strangely poetic fashion,

188
00:09:44,785 --> 00:09:46,346
making me see with terrible vividness

189
00:09:46,687 --> 00:09:49,989
the damp, cyclopean city of slimy greenstone whose geometry,

190
00:09:50,009 --> 00:09:51,571
he oddly said, was all wrong.

191
00:09:51,951 --> 00:09:53,452
It's a recurring element in Lovecraft.

192
00:09:53,592 --> 00:09:54,993
And one of the things, I mean, sometimes it

193
00:09:55,033 --> 00:09:57,295
takes the form of non-Euclidean geometry

194
00:09:57,335 --> 00:09:59,697
and actually three-dimensional space kind of being

195
00:10:00,038 --> 00:10:01,919
warped in a way that our minds can't comprehend.

196
00:10:03,080 --> 00:10:05,002
In Eldritch, I wasn't interested in doing that sort of thing.

197
00:10:05,381 --> 00:10:11,284
but I wanted the idea that the worlds are not logical, not consistent, something's wrong about them.

198
00:10:11,444 --> 00:10:13,666
And that's something that I don't actually think I was very successful at,

199
00:10:13,706 --> 00:10:18,088
but I wanted to put it out there, I mean, that's kind of what GDC is about, talk about your mistakes as well.

200
00:10:19,649 --> 00:10:24,472
I would also look to art reference, things that were specifically based on Lovecraft's writing,

201
00:10:24,512 --> 00:10:28,254
as well as, you know, just pieces of art that I've seen and think, you know,

202
00:10:28,394 --> 00:10:32,356
look, this is Giovanni Battista Paranesi's Carcieri wood etchings,

203
00:10:32,696 --> 00:10:34,557
it looks like a video game environment, right?

204
00:10:37,170 --> 00:10:39,372
And the stuff I was getting from the art references

205
00:10:39,392 --> 00:10:42,975
were like, I want to have right angles,

206
00:10:43,035 --> 00:10:45,977
big Cyclopean masonry, really complex layouts.

207
00:10:45,997 --> 00:10:48,779
Like if you look at Carceri, you see these staircases,

208
00:10:48,819 --> 00:10:51,081
you've got catwalks, you've got people all over the place,

209
00:10:51,361 --> 00:10:52,542
but the connectivity of the space

210
00:10:52,602 --> 00:10:54,183
isn't really clear at first glance.

211
00:10:54,343 --> 00:10:55,164
That was kind of what I wanted.

212
00:10:55,744 --> 00:10:58,006
I wanted a sense of verticality that's not common

213
00:10:58,146 --> 00:10:59,867
in first-person shooters, and that ended up

214
00:11:00,648 --> 00:11:02,249
kind of coming back to bite me later.

215
00:11:02,269 --> 00:11:02,929
I'll talk about that.

216
00:11:03,681 --> 00:11:12,989
And I mean, it's not about the structure and the layout specifically, but I wanted to use light and fog to create a sense of atmosphere that makes these relatively small levels feel bigger than they are.

217
00:11:14,863 --> 00:11:16,885
And the results, in the best case, are something like this.

218
00:11:17,065 --> 00:11:19,268
We've got, like if you know what you're looking for here,

219
00:11:19,288 --> 00:11:20,970
you can kind of see the edges.

220
00:11:21,010 --> 00:11:22,712
We've got on the right side of the screen,

221
00:11:22,752 --> 00:11:24,354
we've got like green grass,

222
00:11:24,394 --> 00:11:25,915
and then there's a kind of clear divide

223
00:11:25,975 --> 00:11:28,098
into a module that's made out of stone.

224
00:11:28,758 --> 00:11:30,721
But it's continuous space, it's not room to room.

225
00:11:31,061 --> 00:11:33,023
We've got things that look familiar.

226
00:11:33,043 --> 00:11:35,666
We've got ladders, we've got sconces with lights.

227
00:11:36,813 --> 00:11:38,114
But it's only semi-coherent.

228
00:11:38,154 --> 00:11:40,416
Like, we've got a ladder that goes up to a stone catwalk.

229
00:11:40,456 --> 00:11:41,897
It's not really clear what that's for.

230
00:11:42,777 --> 00:11:44,418
That was kind of the best I could

231
00:11:44,438 --> 00:11:46,880
do in the time that I had for that sense of alien wrongness.

232
00:11:47,060 --> 00:11:48,121
I don't think it was successful.

233
00:11:48,641 --> 00:11:50,323
But these are the kind of levels that we get from Eldritch.

234
00:11:53,229 --> 00:11:56,271
So to give you an overview of how the levels were generated,

235
00:11:56,552 --> 00:11:57,993
there's kind of three steps.

236
00:11:58,493 --> 00:12:01,095
We start by building three-dimensional maze,

237
00:12:01,135 --> 00:12:02,396
just kind of in the abstract.

238
00:12:02,416 --> 00:12:04,237
And I'm visualizing here in two dimensions

239
00:12:04,277 --> 00:12:05,818
because that's way easier to put on a slide.

240
00:12:05,858 --> 00:12:08,000
But if you imagine, you've got a box,

241
00:12:08,160 --> 00:12:10,562
it's sliced up along every axis evenly.

242
00:12:10,842 --> 00:12:13,844
Or like if you ever had like the clear plastic maze toys

243
00:12:13,864 --> 00:12:15,065
that you have to get ball bearing through,

244
00:12:15,105 --> 00:12:16,166
you can visualize it like that.

245
00:12:17,563 --> 00:12:20,505
So we build the maze and it defines the high level structure

246
00:12:21,166 --> 00:12:22,927
of a level but it doesn't have any geometry,

247
00:12:22,947 --> 00:12:24,188
it doesn't have any environment art.

248
00:12:24,708 --> 00:12:26,890
Then we populate it with a modular kit of rooms.

249
00:12:27,070 --> 00:12:29,332
And this is the sort of thing that you might even be doing

250
00:12:29,392 --> 00:12:30,873
as a level designer now if you have like,

251
00:12:31,373 --> 00:12:32,574
you know, modular environment art

252
00:12:32,594 --> 00:12:33,815
and you can snap pieces together.

253
00:12:33,835 --> 00:12:35,656
It's basically exactly the same concept

254
00:12:36,117 --> 00:12:38,298
and then we generate entities, enemies, and items.

255
00:12:41,168 --> 00:12:42,329
I just want to give credit where it's due.

256
00:12:42,409 --> 00:12:45,190
Also, this is not like a particularly revolutionary idea.

257
00:12:45,491 --> 00:12:48,533
I was inspired in large part by the Spelunky generator.

258
00:12:50,594 --> 00:12:54,216
So, Derek Yu, who made Spelunky, has written a bit about it,

259
00:12:54,396 --> 00:12:57,358
but Darius Kazamy kind of separately implemented

260
00:12:57,378 --> 00:13:00,020
the whole game in JavaScript, I believe,

261
00:13:00,100 --> 00:13:01,901
and has made like an interactive version

262
00:13:01,921 --> 00:13:04,283
of Spelunky's generator that you can play with

263
00:13:04,343 --> 00:13:04,883
on the website.

264
00:13:04,923 --> 00:13:05,424
It's really cool.

265
00:13:05,444 --> 00:13:06,664
Like, check that out if you get a chance.

266
00:13:08,826 --> 00:13:10,847
So, the first step, we have to generate this maze.

267
00:13:12,439 --> 00:13:15,481
And you might wonder why we start with a maze.

268
00:13:15,521 --> 00:13:17,082
Because if I'm playing a game and I say,

269
00:13:17,102 --> 00:13:18,863
yeah it was really cool, it had some good things,

270
00:13:18,903 --> 00:13:20,484
some bad things, I played this one level

271
00:13:20,504 --> 00:13:21,444
and it was kind of maze-like,

272
00:13:22,045 --> 00:13:24,026
do you think I meant that that was a good level or not?

273
00:13:24,126 --> 00:13:26,107
Like, maze has connotations about,

274
00:13:26,727 --> 00:13:29,949
I probably meant that that was difficult to navigate,

275
00:13:29,969 --> 00:13:31,330
I wasn't sure where I was going,

276
00:13:31,390 --> 00:13:34,032
maybe I got lost, maybe it all looked the same.

277
00:13:34,732 --> 00:13:37,874
Mazes to me say, I don't know where I was going

278
00:13:37,894 --> 00:13:40,355
and the environment was all kind of homogeneous.

279
00:13:41,769 --> 00:13:45,432
So why would I start with a maze then, if there are those negative connotations?

280
00:13:45,812 --> 00:13:48,995
Well, for a roguelike game, not knowing where you're going, that's actually a good thing.

281
00:13:49,015 --> 00:13:55,260
That's part of the central mechanic of a roguelike, is there isn't like explicit wayfinding.

282
00:13:55,280 --> 00:13:58,222
Like there's not a designer who's trying to guide the player to the exit.

283
00:13:58,522 --> 00:14:00,904
Part of a roguelike is you have to find the exit.

284
00:14:03,826 --> 00:14:06,708
So that part I was just okay with, and I actually wanted to have...

285
00:14:07,200 --> 00:14:11,523
really twisty confusing levels because it did come back to that kind of Lovecraftian alien wrongness.

286
00:14:11,563 --> 00:14:14,586
If you have like a confusing level and you get lost in it, that's actually kind of cool.

287
00:14:14,626 --> 00:14:16,668
That's part of the Lovecraft experience.

288
00:14:17,969 --> 00:14:21,712
But what I didn't want was the idea that the environments are all very homogeneous,

289
00:14:21,752 --> 00:14:24,494
like every part of a level looks like every other part.

290
00:14:25,375 --> 00:14:29,838
That is not a good experience. That helps you get lost if you don't have visual landmarks

291
00:14:29,898 --> 00:14:32,180
and things that make each moment of a level memorable.

292
00:14:32,240 --> 00:14:36,624
So I want the structure of a maze, but not the visual sameness of a maze.

293
00:14:39,478 --> 00:14:41,199
So there's a lot of ways that you can generate mazes.

294
00:14:41,239 --> 00:14:42,700
I think the extent of research that I did

295
00:14:42,740 --> 00:14:45,441
was to go to the Wikipedia page for maze generation

296
00:14:45,621 --> 00:14:47,702
and pick the first thing that looked like I could use it.

297
00:14:48,002 --> 00:14:50,103
I ended up with something called Prim's Algorithm.

298
00:14:51,763 --> 00:14:52,344
Nels liked it.

299
00:14:53,004 --> 00:14:54,665
I ended up with something called Prim's Algorithm.

300
00:14:55,814 --> 00:14:57,295
which the steps are described there,

301
00:14:57,335 --> 00:14:58,576
but we're just gonna go through it visually.

302
00:14:59,096 --> 00:15:00,858
Basically, you start with the maze,

303
00:15:00,938 --> 00:15:02,699
and it's all closed off to begin with.

304
00:15:03,380 --> 00:15:04,721
Basically, it's a bunch of rooms,

305
00:15:04,781 --> 00:15:05,821
they have walls between them,

306
00:15:06,262 --> 00:15:07,723
and we call them closed,

307
00:15:07,863 --> 00:15:09,504
and then we're going to pick one at random.

308
00:15:09,524 --> 00:15:10,505
We're gonna start in the lower left.

309
00:15:10,525 --> 00:15:11,226
We're gonna say, all right,

310
00:15:11,286 --> 00:15:14,368
that's the first room in our open set of the maze.

311
00:15:15,309 --> 00:15:17,411
And then we just randomly expand to any neighbor

312
00:15:17,751 --> 00:15:19,793
of that cell, so maybe we go up from there.

313
00:15:20,613 --> 00:15:21,714
Then on the next step,

314
00:15:21,834 --> 00:15:23,896
we're going to pick randomly from the open rooms.

315
00:15:24,707 --> 00:15:27,470
and expand to any closed neighbor of that.

316
00:15:28,030 --> 00:15:30,753
So we go that way, and we keep doing this and keep growing

317
00:15:31,014 --> 00:15:32,735
until either we've done enough passes

318
00:15:32,755 --> 00:15:33,736
that we're happy with the maze,

319
00:15:33,997 --> 00:15:35,358
or eventually we fill all the space.

320
00:15:38,365 --> 00:15:40,686
So if we consider the structure of this maze,

321
00:15:40,706 --> 00:15:43,448
like it's a decent maze, it looks balanced

322
00:15:43,528 --> 00:15:45,249
like a maze should be, and as much as a maze

323
00:15:45,269 --> 00:15:47,670
can have balance, but there's no loops in it.

324
00:15:48,130 --> 00:15:49,711
That's kind of a property of the algorithm,

325
00:15:49,751 --> 00:15:53,273
like because we open a path from an open node

326
00:15:53,313 --> 00:15:55,514
to a closed node, we can never join two open nodes

327
00:15:55,554 --> 00:15:56,535
together and create loops.

328
00:15:56,835 --> 00:15:58,516
There's also no open space in it.

329
00:15:58,956 --> 00:16:00,917
And those are things that I ended up

330
00:16:01,017 --> 00:16:02,038
trying to find ways to fix.

331
00:16:02,398 --> 00:16:04,419
So I made a few modifications to Prim's algorithm.

332
00:16:05,703 --> 00:16:08,685
There's two random factors in Prim's algorithm.

333
00:16:08,705 --> 00:16:11,086
There's randomly pick a node to expand from

334
00:16:11,126 --> 00:16:13,067
and randomly pick the node that you're going to expand to.

335
00:16:13,987 --> 00:16:16,809
So I biased which node that I'm picking to expand from

336
00:16:17,449 --> 00:16:22,631
based on trying to expand from the most recent visited room

337
00:16:22,811 --> 00:16:23,752
if I crank that knob up.

338
00:16:23,812 --> 00:16:26,493
This wasn't like a constant, I do it all the time.

339
00:16:26,533 --> 00:16:28,374
This was a control that I had

340
00:16:28,394 --> 00:16:29,675
to try to differentiate worlds.

341
00:16:30,035 --> 00:16:31,075
If I turn that knob up,

342
00:16:31,744 --> 00:16:37,029
Basically, I get like the generator kind of just expands through the space until it terminates in the dead end or it has nowhere

343
00:16:37,050 --> 00:16:41,614
Left to go and so you get long twisty mazes that end up being kind of claustrophobic to explore

344
00:16:41,654 --> 00:16:42,855
They don't have a lot of branches in them

345
00:16:43,115 --> 00:16:48,941
If I turn that knob back down I get branches from anywhere in the maze and it's more open space lots of junctions less

346
00:16:49,361 --> 00:16:50,402
twisty claustrophobic

347
00:16:51,163 --> 00:16:51,483
spaces

348
00:16:52,515 --> 00:16:55,396
So the other random factor is which room we're expanding to,

349
00:16:55,556 --> 00:16:57,597
and I apply that toward expanding

350
00:16:57,637 --> 00:16:58,658
on the horizontal plane.

351
00:16:58,698 --> 00:17:00,819
Because remember, we're doing this maze

352
00:17:00,859 --> 00:17:01,820
in three-dimensional space.

353
00:17:02,120 --> 00:17:02,860
It doesn't look like this.

354
00:17:02,880 --> 00:17:06,202
It looks like kind of you've got three levels of this stacked up.

355
00:17:06,802 --> 00:17:09,103
In addition to opening paths north, south, east, or west,

356
00:17:09,123 --> 00:17:10,484
we can open paths up and down.

357
00:17:11,765 --> 00:17:14,186
people are used to walking in the ground plane,

358
00:17:14,466 --> 00:17:17,187
and where, you know, even as first-person game players,

359
00:17:17,227 --> 00:17:19,268
we're trained to navigate in that plane,

360
00:17:19,628 --> 00:17:22,009
and vertical traversal ends up being really difficult.

361
00:17:22,149 --> 00:17:23,330
Even in a game like Eldritch,

362
00:17:23,390 --> 00:17:25,851
where there were a lot of powers and abilities

363
00:17:25,911 --> 00:17:28,112
to try to give you vertical traversal,

364
00:17:28,512 --> 00:17:29,813
it just wasn't a lot of fun to do.

365
00:17:31,002 --> 00:17:35,163
So I biased the maze expansion to always explore

366
00:17:35,223 --> 00:17:37,524
the ground plane, and only when it terminated

367
00:17:37,584 --> 00:17:38,544
and it couldn't go anywhere else,

368
00:17:38,805 --> 00:17:40,045
then I would make a path up or down

369
00:17:40,085 --> 00:17:43,086
and continue to explore kind of the next story of the maze.

370
00:17:44,886 --> 00:17:47,087
And the last modification I made to Prim's algorithm,

371
00:17:47,707 --> 00:17:49,748
it's not actually even part of the algorithm per se,

372
00:17:49,768 --> 00:17:52,148
but after we've run all these steps

373
00:17:52,208 --> 00:17:53,309
and we've generated the maze,

374
00:17:53,609 --> 00:17:55,729
I just randomly knocked down a bunch more walls.

375
00:17:55,970 --> 00:17:58,290
And what that gives us is, we look at this

376
00:17:58,310 --> 00:17:59,831
and we wanted to have loops in here.

377
00:17:59,891 --> 00:18:00,431
I wanted to have...

378
00:18:00,891 --> 00:18:05,675
some long lines of sites and open courtyards, and the maze generation by itself wasn't producing any of that.

379
00:18:06,116 --> 00:18:09,879
But if I just start knocking out walls, I get this sort of thing.

380
00:18:10,359 --> 00:18:13,222
And I could have done a really intelligent system here of like,

381
00:18:13,883 --> 00:18:17,626
you know, try to identify a long loop and find like the wall that I can knock down

382
00:18:17,966 --> 00:18:21,850
to make the most interesting kind of level. It turned out in a maze this small.

383
00:18:22,933 --> 00:18:28,135
knocking down any random wall gets me exactly what I want and never has any bad side effects.

384
00:18:28,955 --> 00:18:32,876
So it was like, again, the simplest thing that could possibly work.

385
00:18:33,636 --> 00:18:37,137
And yeah, it took me like five minutes to write and it makes a huge difference.

386
00:18:37,157 --> 00:18:42,839
This is actually the modification to Prims that makes the most difference in a level because if I turn this all the way up,

387
00:18:43,620 --> 00:18:47,081
like I get wide, wide open spaces. If I turn it down I get like

388
00:18:48,181 --> 00:18:52,984
claustrophobic levels and it's the difference in like it starts from the

389
00:18:53,024 --> 00:19:00,589
same maze algorithm but you end up you know in a picture like sorry I gotta go

390
00:19:00,609 --> 00:19:05,293
way back so in a picture like this it's a very open space we've got like

391
00:19:05,633 --> 00:19:10,056
connectivity all between here a maze by itself could never produce this right

392
00:19:10,476 --> 00:19:10,776
because

393
00:19:12,400 --> 00:19:14,262
There would be walls occluding all this.

394
00:19:14,522 --> 00:19:16,824
So yeah, this ends up being the most useful factor

395
00:19:17,124 --> 00:19:18,425
of the three modifications I made.

396
00:19:19,206 --> 00:19:19,446
Sorry.

397
00:19:25,692 --> 00:19:27,974
So everything that I was talking about

398
00:19:27,994 --> 00:19:29,215
with the maze generation so far,

399
00:19:29,295 --> 00:19:33,399
I'm kind of talking about regarding all space

400
00:19:33,459 --> 00:19:34,440
kind of as equivalent.

401
00:19:35,918 --> 00:19:41,944
But in the level in Eldritch, there's other things in the level besides just corridors and corners.

402
00:19:42,504 --> 00:19:45,687
There's the entrance and exit to the level are kind of unique features.

403
00:19:45,747 --> 00:19:50,231
There's shops, there's bank vaults to rob, shrines to acquire powers at.

404
00:19:50,631 --> 00:19:54,915
And each of those is going to have to have environment art and a module made for it.

405
00:19:55,736 --> 00:19:57,357
And that has to fit somewhere into the maze.

406
00:19:58,098 --> 00:19:59,759
Shops you always enter from one side.

407
00:20:01,998 --> 00:20:06,560
I would sometimes tend to put them in corners, the exit of the maze, it always had to go

408
00:20:06,600 --> 00:20:09,941
somewhere specific, like the entrance had to go on the top of the maze, the exit had

409
00:20:09,961 --> 00:20:10,742
to go on the bottom.

410
00:20:11,222 --> 00:20:14,443
So I had these special rooms and they had to go certain places in the maze.

411
00:20:14,803 --> 00:20:19,966
And the first way that I wanted to do this was to generate the maze and then search it

412
00:20:20,126 --> 00:20:21,726
for where I could put these features.

413
00:20:22,407 --> 00:20:23,707
The problem is because...

414
00:20:24,710 --> 00:20:28,153
like the geometry of the exit, the geometry of a shop, any of those kind of things,

415
00:20:28,373 --> 00:20:30,394
it had to fit somewhere specific in the maze.

416
00:20:30,815 --> 00:20:34,117
And there wasn't always a guarantee from generating a random maze

417
00:20:34,597 --> 00:20:36,599
that I would have a place that could go.

418
00:20:36,679 --> 00:20:41,222
For example, I want to put a shop into a dead end, because it has one entrance.

419
00:20:41,582 --> 00:20:43,644
In this example, there's only one place that could go.

420
00:20:43,664 --> 00:20:47,106
In the top right corner, that's the only dead end in the maze.

421
00:20:47,166 --> 00:20:49,988
Like, if I kept cranking that open tuning knob way up...

422
00:20:50,904 --> 00:20:52,405
there wouldn't be anywhere to put a shop.

423
00:20:52,505 --> 00:20:54,406
And then even though I need that,

424
00:20:54,446 --> 00:20:56,208
like for balance and for tuning purposes,

425
00:20:56,608 --> 00:20:57,609
it just couldn't fit anywhere.

426
00:20:57,629 --> 00:20:58,550
So what I found I could do,

427
00:20:58,570 --> 00:21:01,412
I don't search the maze for a fit for these rooms.

428
00:21:02,544 --> 00:21:05,086
I actually seed the maze with the rooms that I need,

429
00:21:05,126 --> 00:21:07,607
and I prescribe, like, this room with this structure

430
00:21:07,627 --> 00:21:08,888
has to go here in the maze.

431
00:21:09,349 --> 00:21:09,949
So it looks like this.

432
00:21:10,009 --> 00:21:12,491
It starts even before we run Prim's algorithm.

433
00:21:12,771 --> 00:21:14,772
We've got the maze and it's all closed off.

434
00:21:15,392 --> 00:21:16,913
And we say, all right, here's gonna be a shop,

435
00:21:16,993 --> 00:21:17,914
here's gonna be an exit.

436
00:21:18,434 --> 00:21:20,476
And we open up, not just those rooms,

437
00:21:20,496 --> 00:21:21,556
but also their neighbors.

438
00:21:21,957 --> 00:21:24,438
And then I lock the rooms that actually have

439
00:21:24,458 --> 00:21:26,159
those features in them, the shop and the exit,

440
00:21:26,380 --> 00:21:28,561
and I say, when I'm doing the maze expansion,

441
00:21:28,661 --> 00:21:31,223
nothing else can ever touch those walls.

442
00:21:32,649 --> 00:21:35,811
So I run the maze expansion and it goes from the neighboring rooms that I opened

443
00:21:35,831 --> 00:21:37,152
and we get the whole maze built out here.

444
00:21:37,512 --> 00:21:41,394
And I've got that guarantee that nothing is going to knock down the walls of the shop.

445
00:21:43,496 --> 00:21:47,298
Even if I crank up the open up the world tuning knob all the way

446
00:21:47,318 --> 00:21:49,019
and knock down all the rest of the walls,

447
00:21:49,299 --> 00:21:53,442
the generator is going to guarantee this shop is always going to have this structure.

448
00:21:56,904 --> 00:21:59,566
So now we've got this kind of abstract maze.

449
00:22:00,408 --> 00:22:01,569
filling three-dimensional space,

450
00:22:01,609 --> 00:22:03,209
but it doesn't have any environment art,

451
00:22:03,249 --> 00:22:04,589
it doesn't have any geometry yet.

452
00:22:05,989 --> 00:22:07,870
I use a modular approach to this,

453
00:22:08,210 --> 00:22:10,330
like you may have heard, talked about last year for Skyrim.

454
00:22:10,810 --> 00:22:13,011
I build small chunks of the world,

455
00:22:13,071 --> 00:22:15,311
and each cell in the maze is going to get filled in

456
00:22:15,771 --> 00:22:16,711
with one of those chunks.

457
00:22:18,312 --> 00:22:19,732
Eldritch uses a voxel engine.

458
00:22:20,032 --> 00:22:24,213
Each module is 12 meters by 12 meters by eight meters high,

459
00:22:24,593 --> 00:22:26,253
and I just build them kind of like the way you would do

460
00:22:26,313 --> 00:22:28,193
if you're in creative mode in Minecraft.

461
00:22:28,233 --> 00:22:29,193
I have an in-game editor.

462
00:22:29,751 --> 00:22:30,732
I put voxels down.

463
00:22:32,513 --> 00:22:36,236
The challenge is that every module has to connect with any other module.

464
00:22:36,676 --> 00:22:40,779
I don't have any guarantees about, like, which ones are going to be picked adjacent to which

465
00:22:40,839 --> 00:22:41,099
others.

466
00:22:42,080 --> 00:22:47,283
And, with, you know, 12 meters on a face, there's kind of a lot of ways, there's a lot

467
00:22:47,303 --> 00:22:48,424
of space where they could join.

468
00:22:48,444 --> 00:22:51,547
This was another case where I just did the simplest thing that could possibly work.

469
00:22:51,607 --> 00:22:56,070
I made a safe region on the exterior face of each module, and that's what's highlighted

470
00:22:56,110 --> 00:22:57,130
in yellow in these images.

471
00:22:57,891 --> 00:23:01,314
So any module that has, that intends to connect

472
00:23:01,594 --> 00:23:04,737
on that face, it has to have that space be open.

473
00:23:04,977 --> 00:23:06,558
And so, like in the image on the left,

474
00:23:06,979 --> 00:23:08,740
this module connects in both directions.

475
00:23:08,860 --> 00:23:11,102
One face is completely open, the other is walled off,

476
00:23:11,363 --> 00:23:13,064
except for that safe region that ensures

477
00:23:13,084 --> 00:23:14,846
that those two faces could join together.

478
00:23:15,126 --> 00:23:16,947
It will always be traversable by the player

479
00:23:17,067 --> 00:23:18,088
or by enemy AIs.

480
00:23:20,991 --> 00:23:22,552
I could get some kind of fun effects

481
00:23:22,572 --> 00:23:24,314
by playing around with opening up.

482
00:23:25,431 --> 00:23:28,477
geometry on the exterior face outside of the safe region.

483
00:23:29,019 --> 00:23:31,063
In this example, like this, sorry this picture

484
00:23:31,083 --> 00:23:33,428
is kind of hard to see, but we've got a corridor,

485
00:23:33,568 --> 00:23:35,031
so we're looking at the module from the outside

486
00:23:35,051 --> 00:23:35,933
and we've got a corridor.

487
00:23:36,846 --> 00:23:38,388
that goes inside in the safe region,

488
00:23:38,408 --> 00:23:40,630
but we've also got kind of an opening up here in the top

489
00:23:40,971 --> 00:23:41,992
outside the safe region.

490
00:23:42,392 --> 00:23:43,634
And what happens is that we get kind of

491
00:23:43,674 --> 00:23:46,637
just serendipitous effects by when this module

492
00:23:46,657 --> 00:23:47,938
meets up with other modules,

493
00:23:48,619 --> 00:23:51,803
it just kind of reinterprets what that opening looks like.

494
00:23:52,323 --> 00:23:54,266
So the typical, like the most common case

495
00:23:54,346 --> 00:23:55,827
is that it just looks like a balcony

496
00:23:56,248 --> 00:23:58,390
opening up onto the adjacent module.

497
00:23:59,621 --> 00:24:01,682
But sometimes there's some geometry in the adjacent module.

498
00:24:01,702 --> 00:24:03,344
It looks like this is part of a feature,

499
00:24:03,804 --> 00:24:05,886
you know, that the two rooms shared

500
00:24:05,906 --> 00:24:07,006
that's kind of crumbling away.

501
00:24:08,520 --> 00:24:13,444
Sometimes we get, because the voxel grid is so low resolution, they're one meter cube voxels,

502
00:24:13,744 --> 00:24:16,546
we just get a lot of features that serendipitously join here.

503
00:24:16,606 --> 00:24:21,430
So in this, the adjacent module had like an upstairs level and it just looks like it connects to that opening.

504
00:24:21,950 --> 00:24:25,273
And actually this really hides like the boundary between the two modules really well.

505
00:24:25,313 --> 00:24:27,034
Like this just looks like one space.

506
00:24:27,074 --> 00:24:29,696
You wouldn't look at this and assume that it was two separate modules.

507
00:24:31,329 --> 00:24:36,013
And then sometimes because this opening is outside the safe space, it just ends up running into a wall.

508
00:24:36,714 --> 00:24:40,677
And the player, you know, they approach this from the other side, they open the door and they're like

509
00:24:41,418 --> 00:24:43,200
looking at a dead end, it's just a wall there.

510
00:24:43,260 --> 00:24:47,203
And I was like, well that's not good, you know, I want the levels to be semi-coherent

511
00:24:47,223 --> 00:24:48,685
but that just seems like a bad use of space.

512
00:24:49,025 --> 00:24:53,048
And then I realized, I can just put some loot on the ground there and then it looks like a loot closet

513
00:24:53,088 --> 00:24:54,770
and it looks completely intentional.

514
00:24:55,571 --> 00:24:57,852
So, yeah, I was just, this was the sort of thing,

515
00:24:57,872 --> 00:24:59,253
and I didn't do this too much in the game

516
00:24:59,273 --> 00:25:00,453
because it didn't tend to feel,

517
00:25:01,754 --> 00:25:03,615
like players started to perceive this pattern

518
00:25:03,875 --> 00:25:05,036
and it started to break down,

519
00:25:05,256 --> 00:25:06,517
but once in a while it was kind of nice

520
00:25:06,537 --> 00:25:08,338
to get these kind of serendipitous results.

521
00:25:10,619 --> 00:25:13,400
So, in the maze there's six directions

522
00:25:13,761 --> 00:25:16,282
that any room can exit, north, south, east, west,

523
00:25:16,382 --> 00:25:16,862
up and down.

524
00:25:17,783 --> 00:25:20,384
That means that there's 64 different combinations

525
00:25:21,165 --> 00:25:23,206
of ways that rooms can be configured.

526
00:25:25,141 --> 00:25:26,201
2 to the power of 6, 64.

527
00:25:27,662 --> 00:25:30,623
That means that ostensibly we would have to build a module

528
00:25:30,643 --> 00:25:32,363
to fit in each of the 64 configurations.

529
00:25:32,383 --> 00:25:34,124
But of course, we think that wouldn't make sense.

530
00:25:34,164 --> 00:25:35,404
Like a room with an exit to the north,

531
00:25:35,704 --> 00:25:38,385
it's the same as a room with an exit to the south,

532
00:25:38,465 --> 00:25:39,205
just rotated.

533
00:25:39,505 --> 00:25:41,406
So the generator will do the rotation for me.

534
00:25:41,446 --> 00:25:43,966
So if we have a tile, it's got exits to the north, south,

535
00:25:44,006 --> 00:25:44,347
and east.

536
00:25:45,582 --> 00:25:51,924
The generator can rotate that about the vertical axis like we would expect and give us a module that will fit into the other rooms.

537
00:25:52,424 --> 00:25:54,885
This is just what you would expect if you've worked with modules before.

538
00:25:54,965 --> 00:25:57,766
It's just like laying down the tiles in the city building game.

539
00:25:58,546 --> 00:26:02,388
But the other thing that we can do that you couldn't do with physical tiles is we can also mirror this.

540
00:26:03,108 --> 00:26:06,909
And so when I do this, I get a north, south, and west exit,

541
00:26:06,969 --> 00:26:09,269
which we already had in the first row from rotation,

542
00:26:09,389 --> 00:26:10,809
so mirroring isn't necessary,

543
00:26:10,909 --> 00:26:14,450
like it doesn't fill any void in the level generator,

544
00:26:14,830 --> 00:26:18,070
but it does kind of reuse the modules in an interesting way

545
00:26:18,110 --> 00:26:19,151
because if you rotate a room,

546
00:26:19,351 --> 00:26:20,611
like the player doesn't perceive that.

547
00:26:21,651 --> 00:26:23,611
If we took this room and rotated it 90 degrees,

548
00:26:23,931 --> 00:26:24,992
it just feels like the same room,

549
00:26:25,012 --> 00:26:26,312
we're just facing a different direction.

550
00:26:26,352 --> 00:26:28,892
And when you mirror it, you do get the flipped image,

551
00:26:28,912 --> 00:26:30,233
and the player actually perceives that

552
00:26:30,313 --> 00:26:31,333
as a different kind of room.

553
00:26:32,299 --> 00:26:34,143
It did have the constraints that I couldn't ever like,

554
00:26:34,845 --> 00:26:37,231
I couldn't try to spell something out on the voxels

555
00:26:37,271 --> 00:26:38,434
because then I would get the mirror image

556
00:26:38,474 --> 00:26:39,537
and the word would get reversed.

557
00:26:42,825 --> 00:26:44,946
So by using those transforms,

558
00:26:44,986 --> 00:26:47,107
we get 24 configurations in the maze

559
00:26:47,127 --> 00:26:49,428
that we have to build modules for instead of 64.

560
00:26:50,189 --> 00:26:52,149
And I can imagine if I were building

561
00:26:52,169 --> 00:26:54,430
like a six degrees of freedom descent style shooter,

562
00:26:54,450 --> 00:26:56,031
I could even reduce that set more

563
00:26:56,071 --> 00:26:57,092
because you could take like a room

564
00:26:57,132 --> 00:26:58,832
that has an exit to the north and rotate it up.

565
00:26:59,132 --> 00:27:02,154
But since Eldritch has an up vector and gravity,

566
00:27:02,194 --> 00:27:02,774
I couldn't do that.

567
00:27:04,814 --> 00:27:06,997
So 24 configurations to build modules for,

568
00:27:07,037 --> 00:27:08,118
that doesn't sound too bad,

569
00:27:08,399 --> 00:27:10,862
but we don't want the maze to be homogeneous.

570
00:27:10,942 --> 00:27:13,666
We don't want, for example, every T-junction

571
00:27:13,706 --> 00:27:15,629
to look like every other T-junction.

572
00:27:16,089 --> 00:27:17,711
So I need to build multiple modules.

573
00:27:18,300 --> 00:27:20,121
for each of these 24 configurations,

574
00:27:20,221 --> 00:27:21,922
and that starts to sound like a bit more work.

575
00:27:22,662 --> 00:27:24,644
I also don't know immediately,

576
00:27:24,664 --> 00:27:27,405
how many modules do I need?

577
00:27:27,425 --> 00:27:29,467
I want to avoid repetition in the level,

578
00:27:29,487 --> 00:27:31,228
I want to have a number of modules

579
00:27:31,248 --> 00:27:34,730
so I can plug in to any similar configuration in the maze,

580
00:27:35,610 --> 00:27:36,291
but how many?

581
00:27:36,831 --> 00:27:40,273
So I wrote a little tool that generates a maze 10,000 times

582
00:27:40,353 --> 00:27:41,814
and just dumps a spreadsheet of like,

583
00:27:42,534 --> 00:27:44,896
here's how many times I had a dead end room,

584
00:27:44,956 --> 00:27:47,898
here's how many times I had an L junction or a T junction.

585
00:27:49,141 --> 00:27:51,623
and then it sorts those by their frequency.

586
00:27:51,703 --> 00:27:53,785
And so that doesn't give me an absolute metric

587
00:27:53,806 --> 00:27:55,187
of how many modules I need to build,

588
00:27:55,227 --> 00:27:56,929
but it gives me a comparative metric

589
00:27:57,289 --> 00:28:00,692
of L junctions appear three times as often as T junctions.

590
00:28:01,153 --> 00:28:03,635
I should build three times as many L junction modules

591
00:28:03,995 --> 00:28:06,278
so that there's a bigger set to pull from

592
00:28:06,318 --> 00:28:08,199
because you'll see those more often in the maze.

593
00:28:11,668 --> 00:28:15,772
So, I ended up just, I mean, this scales really well.

594
00:28:15,832 --> 00:28:18,335
I could build, like even today, I could go back in

595
00:28:18,455 --> 00:28:20,016
to Aldrich and build more modules,

596
00:28:20,377 --> 00:28:22,739
and it just gets thrown into the mix,

597
00:28:22,819 --> 00:28:24,721
and when I generate a level, sometimes you'll see those,

598
00:28:24,761 --> 00:28:25,302
sometimes you won't.

599
00:28:25,682 --> 00:28:28,785
I just had to, you know, kind of decide arbitrarily

600
00:28:28,825 --> 00:28:29,806
where I was going to cut that off

601
00:28:29,846 --> 00:28:31,028
and how much work I was going to do.

602
00:28:31,388 --> 00:28:33,650
What I did was, in the statistical report,

603
00:28:33,690 --> 00:28:34,951
if an L-junction shows up.

604
00:28:35,499 --> 00:28:38,842
eight times in a level. I built eight variations of that module. It just seemed

605
00:28:38,862 --> 00:28:43,946
like a good number to do. And so between all the the modules that will go into

606
00:28:43,966 --> 00:28:48,771
the maze and modules that had specific features like shops and entrances and

607
00:28:48,851 --> 00:28:52,954
exits and shrines, I ended up with about 60 modules that I had to build for each

608
00:28:53,014 --> 00:28:57,077
world of the game. And in the first version of Eldritch that I shipped, I think

609
00:28:57,097 --> 00:28:59,520
there were about 300 modules across the course of the game.

610
00:29:04,166 --> 00:29:05,887
So one of the things I wanted to do

611
00:29:05,907 --> 00:29:08,608
was have each world in the game represent

612
00:29:09,768 --> 00:29:12,950
kind of one story from Lovecraft's Ouvra.

613
00:29:14,090 --> 00:29:16,591
The first world of the game was loosely based

614
00:29:16,611 --> 00:29:17,752
on the Shadow over Innsmouth.

615
00:29:17,792 --> 00:29:20,473
And it's supposed to represent kind of a cave system

616
00:29:20,533 --> 00:29:22,974
and sunken ruins beneath a New England town.

617
00:29:23,014 --> 00:29:24,775
And the way that I wanted to do that was to represent it

618
00:29:25,095 --> 00:29:27,996
like the town with red brick and steel beams,

619
00:29:28,277 --> 00:29:30,678
and then have a kind of cave system beneath that.

620
00:29:31,845 --> 00:29:33,246
and then sunken ruins at the bottom.

621
00:29:34,287 --> 00:29:35,728
And so I just started building modules

622
00:29:35,748 --> 00:29:37,189
that had each of those themes in them,

623
00:29:37,669 --> 00:29:40,471
and it ended up being very visually noisy.

624
00:29:40,491 --> 00:29:42,152
It felt chaotic.

625
00:29:42,633 --> 00:29:44,854
I wanted levels that were semi-coherent,

626
00:29:44,894 --> 00:29:46,115
but this just felt noisy.

627
00:29:46,135 --> 00:29:49,838
It was beyond not making sense to just not looking good.

628
00:29:51,147 --> 00:29:55,631
So the first thing I thought I could do was, well, I'll just split each of those themes out into its own modular set.

629
00:29:55,912 --> 00:29:59,555
I'll have, first you'll go through the warehouse level, then you'll go through the caves level,

630
00:29:59,575 --> 00:30:01,917
and then you'll go through the ruins level.

631
00:30:02,758 --> 00:30:05,360
The problem is that would triple the amount of modules I needed to build.

632
00:30:05,400 --> 00:30:07,202
Each of those would have to be a complete set.

633
00:30:09,514 --> 00:30:16,143
My solution here was, I just explicitly declared each module that I was building as part of one of those themes.

634
00:30:16,564 --> 00:30:22,532
And then when I generate a level, the generator elects one of the themes from the set to be the dominant theme.

635
00:30:22,612 --> 00:30:24,835
So it says, like, maybe this is going to be a warehouse level.

636
00:30:25,396 --> 00:30:27,979
And it prefers to use warehouse modules when they're available.

637
00:30:28,359 --> 00:30:29,700
But if, for example, I'm building...

638
00:30:30,842 --> 00:30:32,303
The maze has some room in it,

639
00:30:32,523 --> 00:30:34,486
and I don't have a warehouse module that fits that room,

640
00:30:34,746 --> 00:30:37,589
it just falls back to using whatever else that can fit in there.

641
00:30:38,049 --> 00:30:39,831
And so then I go from, like, the scene on the left,

642
00:30:39,871 --> 00:30:41,753
if I do, like, the color coding pass over it...

643
00:30:41,974 --> 00:30:48,799
Like the bright green parts here are the ruins level, and then the dark blue is caves, and the red part is warehouses.

644
00:30:48,879 --> 00:30:55,565
And the image on the left is what it looked like before, where it's just, you've got all these themes all in the player's view right here, and it's just kind of visually noisy.

645
00:30:55,925 --> 00:31:02,030
After doing this themes pass, I ended up with levels like what you see on the right, where everything that you can see in here is from the ruins theme.

646
00:31:02,611 --> 00:31:05,653
And then, you know, maybe at some part in the level, I don't have a...

647
00:31:06,614 --> 00:31:09,940
ruins module that fits in there and so it falls back to using caves or warehouses

648
00:31:10,000 --> 00:31:13,665
and at that point it looks okay it's like sure I buy that maybe you know this

649
00:31:13,846 --> 00:31:17,471
the sunken ruin touches into a cave system somewhere that that looks fine

650
00:31:17,712 --> 00:31:19,494
but it's not so visually noisy

651
00:31:23,230 --> 00:31:24,971
So most of the modules I've been talking about

652
00:31:25,011 --> 00:31:27,092
are just things that populate anywhere in the maze,

653
00:31:27,112 --> 00:31:28,973
but I also needed to have the modules for future rooms,

654
00:31:29,713 --> 00:31:32,135
entrances and exits, shops, shrines, all these things.

655
00:31:32,795 --> 00:31:34,536
This is basically the complement

656
00:31:34,636 --> 00:31:36,397
of the prescribed rooms in the maze,

657
00:31:36,417 --> 00:31:38,579
the things where the geometry had to be locked down.

658
00:31:38,639 --> 00:31:40,460
In fact, in the data, it's all the same thing.

659
00:31:40,500 --> 00:31:42,761
Like this is the definition for a bank vault

660
00:31:42,801 --> 00:31:43,641
in the first world.

661
00:31:43,942 --> 00:31:46,543
The first six lines describe where in the maze

662
00:31:46,603 --> 00:31:48,104
it's going to go, and then at the bottom it says,

663
00:31:48,424 --> 00:31:50,065
these are the modules that it can use there.

664
00:31:51,182 --> 00:31:57,203
And I used this for a lot of things, not just the shops and things, but also to add points

665
00:31:57,523 --> 00:32:04,945
of really rare visual interest, things that would be key landmarks both visually and experientially.

666
00:32:04,965 --> 00:32:10,126
The image on the left here is from the second world of the game, and it's kind of hard to

667
00:32:10,166 --> 00:32:13,306
see probably, but it's a throne room, and it's being guarded by these two statues.

668
00:32:13,346 --> 00:32:16,407
They're like weeping angels from Doctor Who, if you're familiar with that.

669
00:32:16,427 --> 00:32:17,907
They come to life when you look away from them.

670
00:32:18,607 --> 00:32:23,031
There's no other way to get to the throne room except to go past these guys, so it becomes a very dangerous challenge.

671
00:32:23,331 --> 00:32:26,934
This is the sort of thing, it's memorable when you see this, it stands out, it's, you know,

672
00:32:27,234 --> 00:32:30,657
a really cool encounter that's a little different than just fighting enemies in the rest of the game.

673
00:32:31,318 --> 00:32:35,061
But I didn't want to use these too much, I didn't want to have them show up all the time, so

674
00:32:35,381 --> 00:32:39,024
at most you get one of these per level, there's not even, you know, guaranteed to be one.

675
00:32:39,344 --> 00:32:42,727
But just let me do something, you know, once in a while, just mix something fun in, just a little,

676
00:32:43,208 --> 00:32:46,510
you know, kind of unique, bespoke encounter that gets mixed into the level somewhere.

677
00:32:47,460 --> 00:32:53,304
I also used them, feature rooms, to do things like the image on the right, it's a ziggurat

678
00:32:53,344 --> 00:32:57,747
at the end of the first world, and it's bigger than any feature that the maze could generate

679
00:32:57,807 --> 00:33:01,529
on its own, because it's actually built out of eight modules, kind of arranged into a

680
00:33:01,869 --> 00:33:07,393
giant cube, so you would never see a feature this large just in a typically generated level

681
00:33:07,433 --> 00:33:07,833
in the game.

682
00:33:07,853 --> 00:33:10,695
It can only happen kind of when I build it as a bespoke thing.

683
00:33:13,434 --> 00:33:15,497
So now we have, we've built the maze,

684
00:33:15,517 --> 00:33:17,640
we've populated it with the modules,

685
00:33:18,561 --> 00:33:20,463
and we need to spawn some objects into it,

686
00:33:20,484 --> 00:33:21,825
some enemies to fight, some loot.

687
00:33:22,827 --> 00:33:24,289
You know, the goals that I had for this,

688
00:33:24,369 --> 00:33:25,791
first are kind of the things that you would expect,

689
00:33:26,131 --> 00:33:28,875
building levels by hand, you have to challenge the player

690
00:33:28,895 --> 00:33:30,477
with enemies and traps, you have to give them

691
00:33:30,637 --> 00:33:31,558
incentive to explore.

692
00:33:32,159 --> 00:33:33,039
by having loot to pick up.

693
00:33:33,620 --> 00:33:35,481
For a procedural game, there were additional goals.

694
00:33:35,621 --> 00:33:38,262
I have to actually place these in sensible locations,

695
00:33:38,582 --> 00:33:41,264
or the generator has to place them in sensible locations.

696
00:33:41,664 --> 00:33:43,785
And I also had to control the group population.

697
00:33:44,266 --> 00:33:45,887
I didn't want to leave it up to chance

698
00:33:46,087 --> 00:33:47,648
how many enemies are in a level.

699
00:33:47,988 --> 00:33:49,249
I wanted to be able to ramp that up

700
00:33:49,329 --> 00:33:50,049
over the course of the game.

701
00:33:50,089 --> 00:33:52,330
So like the first world, there's a dozen enemies,

702
00:33:52,350 --> 00:33:54,192
and at the end, within the same space,

703
00:33:54,212 --> 00:33:55,032
there might be two dozen.

704
00:33:55,072 --> 00:33:56,333
I needed to be able to control that.

705
00:33:58,150 --> 00:34:02,874
I'd never even considered trying to write an algorithm to place entities.

706
00:34:02,974 --> 00:34:05,016
Like, there's just so many rules.

707
00:34:05,056 --> 00:34:09,660
Like, if I'm trying to place a light in the world, we all kind of have assumptions from

708
00:34:09,720 --> 00:34:12,262
being people about where a light fixture might go.

709
00:34:12,462 --> 00:34:15,505
But trying to codify that into a rule set would be really, really difficult.

710
00:34:16,065 --> 00:34:19,908
So I knew that I wanted to place entities by hand, but I didn't want to say, like, everywhere

711
00:34:19,928 --> 00:34:22,330
that this one module shows up, there's always going to be...

712
00:34:23,171 --> 00:34:24,912
this kind of trap or this kind of enemy.

713
00:34:24,932 --> 00:34:29,956
And I think this sort of thing is used in games

714
00:34:29,996 --> 00:34:32,438
with hand-built levels as well as procedural games.

715
00:34:32,478 --> 00:34:34,779
What I did was to just kind of abstract the concept

716
00:34:34,859 --> 00:34:37,721
of putting an entity into the world one step away

717
00:34:37,741 --> 00:34:39,803
so that when I generate the level,

718
00:34:40,283 --> 00:34:41,644
there's a rule set that runs that says like,

719
00:34:41,684 --> 00:34:44,006
all right, here's a thing, as a designer,

720
00:34:44,066 --> 00:34:47,508
I put a spawner into the world and there's an opportunity

721
00:34:47,548 --> 00:34:49,129
for something to spawn there, but then there's a rule set

722
00:34:49,149 --> 00:34:49,870
that's going to run and say,

723
00:34:50,449 --> 00:34:51,932
do I actually want to spawn something right now?

724
00:34:51,952 --> 00:34:53,134
And if so, what's it going to be?

725
00:34:53,475 --> 00:34:54,898
So the most basic version of this is like

726
00:34:55,639 --> 00:34:57,864
a spawner that says, it always spawns

727
00:34:57,944 --> 00:34:58,906
and it's always this one thing.

728
00:34:58,966 --> 00:35:00,549
And we use that like for the player spawner

729
00:35:00,569 --> 00:35:01,872
because you always need a player.

730
00:35:03,267 --> 00:35:05,069
I could do spawners that had a random chance.

731
00:35:05,429 --> 00:35:06,570
I did this a lot for traps.

732
00:35:06,750 --> 00:35:10,513
I would just cover a module with spikes on the ground

733
00:35:10,533 --> 00:35:12,114
or trip wires criss-crossing it,

734
00:35:12,434 --> 00:35:13,675
but then it gives them a one in two

735
00:35:13,715 --> 00:35:15,056
or one in three chance to spawn.

736
00:35:15,376 --> 00:35:19,119
So the specific arrangement of the traps in that room

737
00:35:19,319 --> 00:35:21,001
will be a little bit different every time it runs.

738
00:35:22,662 --> 00:35:23,783
What's more interesting that I could do

739
00:35:23,903 --> 00:35:26,865
is to actually randomize what entity was spawned there.

740
00:35:27,065 --> 00:35:29,627
This is an example of when you've broken into a bank vault.

741
00:35:30,699 --> 00:35:33,901
there's a bunch of coins to gather up from behind the gates

742
00:35:34,281 --> 00:35:37,222
and it has a 75% chance of spawning at all

743
00:35:37,302 --> 00:35:39,844
and then if it does spawn, it's got a three to two chance

744
00:35:39,864 --> 00:35:41,344
to spawn a big pile of coins,

745
00:35:41,364 --> 00:35:43,765
which is actually a separate entity than just a single coin.

746
00:35:44,086 --> 00:35:45,887
I used this also for enemies.

747
00:35:45,907 --> 00:35:48,448
I would just place a generic enemy AI spawner

748
00:35:48,788 --> 00:35:50,029
and then it had a table of like,

749
00:35:50,289 --> 00:35:52,330
here's all the enemies that can actually be for this level

750
00:35:52,610 --> 00:35:53,610
and they're weighted by like,

751
00:35:54,311 --> 00:35:56,151
we want a whole bunch of kind of grunt enemies

752
00:35:56,171 --> 00:35:57,792
but we only want one really tough guy,

753
00:35:57,812 --> 00:35:58,933
so I could do that kind of thing.

754
00:36:01,115 --> 00:36:02,656
Then I needed to control the population.

755
00:36:02,676 --> 00:36:05,898
I called this resolve groups, which is a kind of bad name.

756
00:36:05,918 --> 00:36:07,499
But basically, the idea was I gather up

757
00:36:08,160 --> 00:36:10,742
all of the spawners that are tagged a certain thing,

758
00:36:10,762 --> 00:36:12,183
like all the enemy AI spawners.

759
00:36:12,683 --> 00:36:13,644
And then I run some rules.

760
00:36:13,884 --> 00:36:15,245
I call the set of those.

761
00:36:15,365 --> 00:36:18,287
And I'm able to resolve that into a subset of things

762
00:36:18,347 --> 00:36:19,408
I actually want to spawn.

763
00:36:20,089 --> 00:36:24,992
I used that for enemy AIs, for a few really rare items like healing fountains that, they

764
00:36:25,032 --> 00:36:26,773
not only heal you but increase your max health.

765
00:36:26,913 --> 00:36:30,556
Things I really needed to control the number of those that appear throughout, over the

766
00:36:30,576 --> 00:36:31,477
course of the entire game.

767
00:36:32,539 --> 00:36:34,200
And this also let me run some additional rules

768
00:36:34,240 --> 00:36:36,381
while I was doing it, like for enemies,

769
00:36:36,421 --> 00:36:38,623
I want to enforce a minimum distance from the player spawn.

770
00:36:38,643 --> 00:36:40,844
It was a really terrible experience early on in the game

771
00:36:40,864 --> 00:36:42,525
when like, you would, you know,

772
00:36:42,565 --> 00:36:45,066
I never put an enemy AI spawner in the same module

773
00:36:45,087 --> 00:36:47,248
as the player spawn, but it could end up like adjacent

774
00:36:47,308 --> 00:36:48,809
to something that had three enemies in it,

775
00:36:49,069 --> 00:36:50,910
and suddenly, you know, you've got monsters in your face

776
00:36:50,950 --> 00:36:52,031
and you've just entered the level.

777
00:36:52,371 --> 00:36:53,752
So I just put a minimum spawn on there,

778
00:36:53,772 --> 00:36:56,333
so when it's resolving that big set of spawners

779
00:36:56,373 --> 00:36:58,634
into the small subset that it's actually going to use,

780
00:36:58,915 --> 00:37:00,916
it just gets rid of anything that's near the player anyway.

781
00:37:04,385 --> 00:37:06,627
Spawner placement was something I didn't think a lot about

782
00:37:07,347 --> 00:37:08,908
until very late in development.

783
00:37:10,269 --> 00:37:12,330
When I started, I was building modules

784
00:37:12,370 --> 00:37:14,672
and I'd put enemies in them and I'd put some traps down,

785
00:37:14,692 --> 00:37:15,952
I'd put some loot, I was just kind of putting

786
00:37:16,252 --> 00:37:17,673
a little bit of everything everywhere.

787
00:37:18,474 --> 00:37:22,816
And as the game progressed and as I play tested it

788
00:37:22,856 --> 00:37:25,438
and felt more comfortable understanding what the game was,

789
00:37:25,938 --> 00:37:28,000
I realized that the placement of items

790
00:37:28,040 --> 00:37:30,261
was actually really key to guiding players through the level

791
00:37:30,421 --> 00:37:32,242
even in a randomly generated level.

792
00:37:34,012 --> 00:37:35,233
Players are really good at perceiving

793
00:37:35,914 --> 00:37:37,495
repeated patterns in games.

794
00:37:38,216 --> 00:37:40,158
It's really easy when you've played the game a few times

795
00:37:40,198 --> 00:37:42,801
to say, oh, I recognize that that room is a dead end.

796
00:37:42,941 --> 00:37:44,162
It's not going to get me to the exit.

797
00:37:44,483 --> 00:37:47,486
I should just not go that way, because I'm doing fine.

798
00:37:47,526 --> 00:37:48,887
I just want to get to the end of the game right now.

799
00:37:50,285 --> 00:37:55,850
Instead, what I started doing was, I didn't put loot, like, along any room that would have junctions.

800
00:37:55,890 --> 00:37:58,813
I started not putting loot in there and just putting it in dead-ends.

801
00:37:59,153 --> 00:38:02,736
So that when you're going through the game, you do some combat, you're running low on items,

802
00:38:03,036 --> 00:38:05,679
you see a dead-end, and you know that it's not the way to the exit,

803
00:38:05,939 --> 00:38:07,700
but you also know there's going to be loot there.

804
00:38:07,740 --> 00:38:10,423
You know, that's where you can go and replenish your bullets, replenish your money.

805
00:38:12,791 --> 00:38:14,511
Traps I ended up moving into hallways,

806
00:38:14,631 --> 00:38:16,672
and I use hallways kind of liberally here

807
00:38:16,692 --> 00:38:18,352
to mean any module that has two exits,

808
00:38:18,372 --> 00:38:19,692
whether it's literally a hallway,

809
00:38:20,032 --> 00:38:22,033
or an L-shaped corner, or a vertical mineshaft.

810
00:38:22,313 --> 00:38:24,253
Anything where the player's experience

811
00:38:24,293 --> 00:38:25,913
is really just to traverse the space,

812
00:38:25,933 --> 00:38:27,493
there's not another choice to be made there.

813
00:38:27,774 --> 00:38:28,914
That was a good place to put traps,

814
00:38:28,954 --> 00:38:31,474
just make that traversal a little bit more interesting.

815
00:38:32,654 --> 00:38:33,875
I also put traps in dead ends,

816
00:38:34,015 --> 00:38:35,155
it's kind of to guard the loot,

817
00:38:35,195 --> 00:38:36,315
that was a really good place for them.

818
00:38:37,455 --> 00:38:39,455
And then enemies, I wanted enemies

819
00:38:39,496 --> 00:38:41,476
to kind of congregate around junctions.

820
00:38:42,291 --> 00:38:44,592
There was no really good way to ensure that,

821
00:38:44,632 --> 00:38:46,792
because enemies in Eldritch, they wander randomly.

822
00:38:46,832 --> 00:38:48,473
It kind of didn't matter where I spawned them.

823
00:38:48,493 --> 00:38:50,214
They were going to wander all over the level,

824
00:38:50,694 --> 00:38:52,494
wander into the traps, get themselves killed.

825
00:38:53,055 --> 00:38:56,156
But the target experience I had, and it didn't quite work out,

826
00:38:56,356 --> 00:38:58,876
was to have enemies at junctions where the player could choose

827
00:38:58,976 --> 00:39:02,498
to circumvent an encounter or sneak past it

828
00:39:02,518 --> 00:39:05,339
and have some options, and use the fact

829
00:39:05,359 --> 00:39:06,999
that there's multiple ways into the space

830
00:39:07,479 --> 00:39:08,560
as part of that encounter.

831
00:39:10,729 --> 00:39:15,473
Like I said, this is stuff that I didn't start thinking about until really late in Eldritch's development.

832
00:39:15,853 --> 00:39:19,517
And it's kind of, this is what I want to leave you with, and this is the key takeaway, is

833
00:39:20,497 --> 00:39:23,000
this stuff made the game way, way better,

834
00:39:23,020 --> 00:39:27,404
and this stuff is not, like, mutually exclusive from random level generation.

835
00:39:28,995 --> 00:39:34,898
the kind of rules that as level designers you've internalized, you have your expert knowledge of what makes a good level and how to build that.

836
00:39:35,458 --> 00:39:38,639
If I had had that, I would have known to do this sort of stuff much earlier in the game.

837
00:39:38,659 --> 00:39:42,981
I would have been thinking about these kind of things earlier instead of having to kind of stumble through it.

838
00:39:43,781 --> 00:39:45,242
So that's what I want to leave you with is...

839
00:39:46,770 --> 00:39:50,452
I hope that as level designers you can be super excited the way that I am about procedural

840
00:39:50,472 --> 00:39:55,415
level design, but bring the expert knowledge that you have that people like I don't have

841
00:39:56,196 --> 00:40:00,098
into it and find ways to do generated levels better than what we've seen before.

842
00:40:00,538 --> 00:40:05,201
Make generated levels that are better than Eldritch because you know what makes a good

843
00:40:05,241 --> 00:40:07,422
level and because you've got that experience and that practice.

844
00:40:09,323 --> 00:40:10,163
I think I actually...

845
00:40:10,747 --> 00:40:12,407
plays through this a lot faster than I intended.

846
00:40:12,447 --> 00:40:15,028
So that's my talk, thank you for coming and listening

847
00:40:15,128 --> 00:40:16,689
and we definitely have time for questions

848
00:40:16,729 --> 00:40:17,229
if you've got any.

849
00:40:17,249 --> 00:40:25,592
So yeah, go ahead and use the mics

850
00:40:25,652 --> 00:40:27,613
if you have any questions for David, line him up.

851
00:40:28,769 --> 00:40:33,632
this is going to roll right into the lunchtime portfolio review. So anybody who wants to ask

852
00:40:33,652 --> 00:40:37,794
questions for David, we want to prioritize those questions and then as those taper off, we're

853
00:40:37,814 --> 00:40:42,737
going to go into the portfolio review. For anybody who is leaving and coming back for lunch

854
00:40:42,837 --> 00:40:46,880
or trying to drop in early, what we're going to do is we're going to go through anybody who

855
00:40:46,940 --> 00:40:51,182
has portfolios that they want to get critiques on and if those don't take us all the way

856
00:40:51,222 --> 00:40:55,945
through to the beginning of the talk, uh, Brennan's talk at what time did we do? Sorry?

857
00:40:58,982 --> 00:41:01,763
145. So the next talk begins at 145. We'll do portfolio for you

858
00:41:01,783 --> 00:41:04,645
until then. If we run out of portfolios we'll do an open Q&A

859
00:41:04,745 --> 00:41:06,565
with anyone who wants to talk to the speakers until that point.

860
00:41:12,943 --> 00:41:16,945
I'm kind of in the same boat where I started out with programming knowledge and then I started

861
00:41:16,985 --> 00:41:21,927
going towards the design. So I understood some of your constraints. One thing that you mentioned

862
00:41:21,967 --> 00:41:24,808
that I haven't explored and I was curious about was you said you had problems with the

863
00:41:24,848 --> 00:41:28,429
verticality. Like you had some things and I was wondering if you could expand on some of the

864
00:41:28,489 --> 00:41:32,750
experiences you had trying to implement more verticality and what the negatives of that were.

865
00:41:33,451 --> 00:41:37,352
Sure yeah the question is about verticality in the levels and if I could expand on

866
00:41:37,852 --> 00:41:41,113
you know some of the experiences I had with that building Eldridge.

867
00:41:42,364 --> 00:41:45,607
One of the things I just kind of skipped over in the slide, let me see if I can get back there.

868
00:41:46,287 --> 00:41:46,988
The...

869
00:41:47,429 --> 00:41:49,791
When I was talking about like the safe regions in levels,

870
00:41:50,451 --> 00:41:53,374
the image on the right here is actually the safe region for vertical traversal.

871
00:41:53,454 --> 00:41:57,218
It had to be wider than the one for for lateral traversal just because...

872
00:41:59,055 --> 00:42:01,177
like what it takes to move vertically,

873
00:42:01,197 --> 00:42:02,918
you know, move up specifically,

874
00:42:02,958 --> 00:42:04,299
like falling is really easy in games,

875
00:42:04,339 --> 00:42:05,760
but to move vertically, you know,

876
00:42:05,800 --> 00:42:07,681
Elder Tech actually has a pretty sophisticated

877
00:42:07,721 --> 00:42:09,102
movement suite, like you can mantle up

878
00:42:09,162 --> 00:42:11,163
onto two meter high objects,

879
00:42:11,203 --> 00:42:12,464
you have powers that can just boost you

880
00:42:12,484 --> 00:42:13,365
into the air and things.

881
00:42:14,049 --> 00:42:16,830
a rope gun so you can just shoot ropes into the ceiling and climb up them.

882
00:42:17,190 --> 00:42:21,191
It has a lot of ways to move vertically, but I couldn't count on the player to have any

883
00:42:21,231 --> 00:42:22,452
of those at any given time.

884
00:42:22,852 --> 00:42:26,133
So I always had, you know, when I would make a module that's supposed to connect upward,

885
00:42:26,153 --> 00:42:31,675
I would have to build like kind of these really ugly elaborate staircases up, and it ended

886
00:42:31,735 --> 00:42:35,536
up being kind of like all the worst rooms in the game are the ones where you're trying

887
00:42:35,556 --> 00:42:40,558
to move up because there's no space left for anything interesting to happen there once

888
00:42:40,598 --> 00:42:41,198
I've got it in.

889
00:42:41,538 --> 00:42:42,659
If I could have done something where like I...

890
00:42:43,812 --> 00:42:48,977
If I could have guaranteed that the player never had to move up and you just fell between levels,

891
00:42:49,177 --> 00:42:52,940
then it would actually be a lot easier to do that because, like I said, falling is really easy.

892
00:42:53,981 --> 00:42:54,301
Thank you.

893
00:42:58,004 --> 00:42:59,865
Thank you very much, it was really interesting.

894
00:43:00,446 --> 00:43:06,771
Now, I was just curious, I see that you build a lot of tools and do a lot of tweaking,

895
00:43:06,971 --> 00:43:12,316
I just want to know how long did it take you from taking it to the first part

896
00:43:12,356 --> 00:43:13,437
until you felt that...

897
00:43:13,914 --> 00:43:17,416
your tools were already generating really good levels.

898
00:43:19,077 --> 00:43:20,357
Right, so the question is how long did it take,

899
00:43:21,018 --> 00:43:24,219
I guess between the first pass version of this

900
00:43:24,259 --> 00:43:27,601
and when it was, when the levels were good

901
00:43:27,621 --> 00:43:29,182
or when the tools were good, which are you asking?

902
00:43:29,222 --> 00:43:31,043
When the levels were good, where you felt like,

903
00:43:31,543 --> 00:43:33,864
okay, I'm not touching it anymore, it's good.

904
00:43:37,459 --> 00:43:38,660
I'm not sure I can really say.

905
00:43:38,700 --> 00:43:40,722
The development of the game was so accelerated,

906
00:43:40,782 --> 00:43:43,624
and even up until the very end, I was still changing things.

907
00:43:45,345 --> 00:43:47,187
I also built the levels chronologically,

908
00:43:47,207 --> 00:43:48,748
which is kind of not a best practice.

909
00:43:48,808 --> 00:43:51,090
So the first world in the game was the first one that I built.

910
00:43:51,130 --> 00:43:53,532
And I think you can maybe see that in the game,

911
00:43:53,572 --> 00:43:57,115
of the first world is a lot more experimentation.

912
00:43:57,155 --> 00:43:59,557
And by the end of the game, I had figured some of that stuff

913
00:43:59,617 --> 00:43:59,757
out.

914
00:43:59,837 --> 00:44:01,839
But the tools actually didn't change too much.

915
00:44:02,119 --> 00:44:03,921
It was just, like I said on that last slide,

916
00:44:03,941 --> 00:44:05,162
it was figuring out what worked.

917
00:44:05,565 --> 00:44:07,846
to make a good level and how to guide the player

918
00:44:07,926 --> 00:44:08,826
in a random space.

919
00:44:10,547 --> 00:44:10,847
Thank you.

920
00:44:14,148 --> 00:44:15,129
Hello, thank you very much.

921
00:44:16,389 --> 00:44:18,310
I would like to hear any comments or tips

922
00:44:18,450 --> 00:44:22,911
for non-scripted people and the downfalls of using

923
00:44:23,472 --> 00:44:25,672
or scripting the procedural system

924
00:44:26,113 --> 00:44:29,754
rather than using a dedicated software for generating that.

925
00:44:31,034 --> 00:44:32,135
Thank you.

926
00:44:32,595 --> 00:44:33,595
Was that a question?

927
00:44:34,239 --> 00:44:40,481
Okay, say for example Houdini, who is a dedicated software for procedural generator levels.

928
00:44:41,262 --> 00:44:46,644
What are the downfalls of actually coding your procedural stuff and using a 3D package?

929
00:44:46,684 --> 00:44:48,184
Right, right, right, I'm sorry I misunderstood.

930
00:44:48,624 --> 00:44:52,506
What's the advantage of using an existing solution for procedural systems instead of

931
00:44:52,526 --> 00:44:53,006
writing my own?

932
00:44:54,746 --> 00:44:59,608
So I actually haven't evaluated, like, I mean I didn't even know that sort of thing existed.

933
00:44:59,668 --> 00:45:01,469
I think in the case of Eldritch...

934
00:45:02,420 --> 00:45:05,841
It's kind of the same problem I have coming from AI programming of like so much of

935
00:45:06,421 --> 00:45:10,602
procedural level generation is kind of innate to what the game is. I don't know

936
00:45:10,642 --> 00:45:14,103
if there's a solution out there that would suffice for exactly what I was

937
00:45:14,123 --> 00:45:18,745
trying to make. And also I mean honestly this stuff like I probably spent about

938
00:45:18,805 --> 00:45:23,106
two weeks working on the tech and two weeks building the levels like a

939
00:45:23,186 --> 00:45:26,207
relatively small portion of the time I spent making this game was actually

940
00:45:26,307 --> 00:45:28,527
spent on this stuff. It didn't take that long to get

941
00:45:29,739 --> 00:45:32,680
to where I was able to start generating levels on this.

942
00:45:33,400 --> 00:45:34,701
If I were trying to do procedural levels

943
00:45:34,761 --> 00:45:37,402
on a big budget game and there were much bigger requirements,

944
00:45:37,522 --> 00:45:39,502
I probably would consider using something like that.

945
00:45:39,582 --> 00:45:40,462
But I don't know.

946
00:45:40,502 --> 00:45:41,123
I haven't tried that.

947
00:45:41,143 --> 00:45:44,504
All right.

948
00:45:44,784 --> 00:45:45,004
Hello.

949
00:45:45,044 --> 00:45:45,984
Thanks for giving your talk.

950
00:45:47,325 --> 00:45:50,285
Sort of more of just a overall development question.

951
00:45:51,006 --> 00:45:52,786
You said you built your own game engine for this game.

952
00:45:54,167 --> 00:45:55,307
How difficult was that?

953
00:45:56,447 --> 00:45:57,327
Do you think it was worth it?

954
00:45:57,407 --> 00:45:59,068
Do you think that it gave you tools you needed

955
00:45:59,089 --> 00:46:00,530
that you wouldn't have had otherwise?

956
00:46:00,550 --> 00:46:01,750
Or do you think you might have saved time

957
00:46:01,830 --> 00:46:03,091
using an existing game engine?

958
00:46:03,472 --> 00:46:05,893
So the question is, was it worth building

959
00:46:05,933 --> 00:46:06,974
my own engine for this game?

960
00:46:08,095 --> 00:46:11,097
So, I sort of misspoke.

961
00:46:11,417 --> 00:46:13,478
I didn't build the engine during the eight months

962
00:46:13,559 --> 00:46:16,180
I was building Eldritch, like that would have been impossible.

963
00:46:17,481 --> 00:46:20,243
I've just kind of been as a hobby building an engine since.

964
00:46:22,796 --> 00:46:26,597
eight or nine years ago, and so it's something that at this point is pretty mature and something

965
00:46:26,617 --> 00:46:29,058
that I'm, like I work very efficiently in.

966
00:46:29,398 --> 00:46:33,980
It's kind of like if I had my own licensed engine, like that's just how comfortable I

967
00:46:34,120 --> 00:46:36,101
am in it and how capable I am in it.

968
00:46:36,581 --> 00:46:39,442
So I wouldn't necessarily recommend it to everyone.

969
00:46:39,502 --> 00:46:44,084
For me it was kind of like, you know, I'm more efficient using my own code than I would

970
00:46:44,104 --> 00:46:48,325
be like if I were using something like Unity or Unreal, but I wouldn't recommend it probably

971
00:46:48,365 --> 00:46:48,885
to anyone else.

972
00:46:49,730 --> 00:46:53,192
I don't know if you have enough experience with Unity or Unreal, but if you want to do

973
00:46:53,332 --> 00:46:57,194
something like this in an existing engine, would you have any recommendations?

974
00:46:57,214 --> 00:46:59,395
Good question.

975
00:47:02,564 --> 00:47:06,367
I think there are tools on the asset store for Unity.

976
00:47:06,387 --> 00:47:10,190
I know that some people have done procedural levels,

977
00:47:10,230 --> 00:47:12,992
like in even going back to the original Unreal Engine,

978
00:47:13,092 --> 00:47:14,072
it's sort of different because it

979
00:47:14,112 --> 00:47:17,275
tends to make assumptions about how AI paths are built

980
00:47:17,375 --> 00:47:17,855
and things.

981
00:47:17,975 --> 00:47:20,157
It assumes that the world is static and not

982
00:47:20,177 --> 00:47:21,618
pieced together at runtime.

983
00:47:22,539 --> 00:47:23,659
But yeah, I'm sorry.

984
00:47:23,699 --> 00:47:25,961
I can't really speak to existing solutions.

985
00:47:26,401 --> 00:47:26,582
It's OK.

986
00:47:27,162 --> 00:47:27,462
Thank you.

987
00:47:27,722 --> 00:47:28,203
Yeah, thanks.

988
00:47:29,801 --> 00:47:36,166
If you were going to make a sequel to Eldritch, how would you modify your algorithm going forward knowing what you now know having made Eldritch?

989
00:47:36,706 --> 00:47:39,148
Good question. That may be something I'm actually thinking about.

990
00:47:41,149 --> 00:47:47,094
So one of the things I wanted to do on Eldritch, and I kind of just got rid of it because of trying to do everything as simple as possible,

991
00:47:47,154 --> 00:47:49,315
but I wanted to have modules that were different sizes.

992
00:47:49,756 --> 00:47:53,819
One of the key constraints here is that every module is just 12 meters by 12 meters.

993
00:47:54,019 --> 00:47:55,280
That's not a lot of room to work with.

994
00:47:55,997 --> 00:47:59,921
And I had planned to have support where,

995
00:48:00,381 --> 00:48:01,863
if I could search the maze for a fit,

996
00:48:02,183 --> 00:48:04,025
and I could say, well, here's a space where I could put in

997
00:48:04,065 --> 00:48:05,246
a whole big mine shaft, and then I

998
00:48:05,266 --> 00:48:07,909
could design that as a sort of unique feature.

999
00:48:08,970 --> 00:48:10,672
That would be cool in that it would give me

1000
00:48:10,692 --> 00:48:13,334
a lot more visual variety and sort of cohesion to the levels.

1001
00:48:13,655 --> 00:48:15,517
And if I weren't doing the Lovecraftian thing,

1002
00:48:15,557 --> 00:48:17,198
I think that's something I would almost definitely have to do.

1003
00:48:18,589 --> 00:48:19,929
It was just kind of a trade-off that I had to make

1004
00:48:20,149 --> 00:48:21,490
on this game to get it done fast.

1005
00:48:21,510 --> 00:48:22,830
But yeah, if I were doing that in the future,

1006
00:48:22,850 --> 00:48:25,211
I think I would want to have the ability to make modules

1007
00:48:25,231 --> 00:48:26,991
that were different sizes that could still join,

1008
00:48:27,431 --> 00:48:30,052
you know, it would still be on the same grid as the maze,

1009
00:48:30,092 --> 00:48:31,332
I think, because that's, you know,

1010
00:48:31,372 --> 00:48:32,592
that's just a nice feature to have.

1011
00:48:32,972 --> 00:48:35,233
But yeah, the ability to do modules

1012
00:48:35,253 --> 00:48:36,573
that were different sizes would be a big one.

1013
00:48:37,233 --> 00:48:37,994
Thanks. Thanks.

1014
00:48:40,654 --> 00:48:41,014
Thank you.

1015
00:48:42,295 --> 00:48:43,415
Thank you for the talk.

1016
00:48:44,575 --> 00:48:47,716
I was wondering about the overall pacing in your game.

1017
00:48:49,899 --> 00:48:52,667
How were you able to shape that? Did you do playtests?

1018
00:48:54,501 --> 00:48:58,703
Yeah, so the question is about pacing in the game and how was I able to get it to a shippable state.

1019
00:48:59,503 --> 00:49:01,584
I did do a lot of playtests over the course of development.

1020
00:49:01,704 --> 00:49:05,025
It was also a game where one of my key values was like,

1021
00:49:05,845 --> 00:49:09,987
you know, I love immersive sims like Deus Ex, Dishonored, the sort of things I mentioned at first.

1022
00:49:10,767 --> 00:49:13,808
And so I wanted to have this sort of value of like play it your own way.

1023
00:49:13,868 --> 00:49:18,610
You can kind of build up any set of powers and weapons and always have a solution to the map.

1024
00:49:19,626 --> 00:49:23,067
Which meant I couldn't really control pacing at all.

1025
00:49:23,387 --> 00:49:26,769
I just kind of had to throw a bunch of features in

1026
00:49:26,889 --> 00:49:28,670
and hope that the experience was good.

1027
00:49:28,690 --> 00:49:30,350
It ended up being kind of a system soup.

1028
00:49:30,390 --> 00:49:31,751
It doesn't have great pacing.

1029
00:49:32,071 --> 00:49:33,171
The only pacing I could do was like,

1030
00:49:33,792 --> 00:49:34,392
you know, like I said,

1031
00:49:34,412 --> 00:49:36,593
ramp up the number of enemies over the course of the game.

1032
00:49:37,093 --> 00:49:39,134
You know, in between levels I could say,

1033
00:49:39,194 --> 00:49:40,374
and I could give like, you know,

1034
00:49:42,055 --> 00:49:43,595
scheduled item drops and say like,

1035
00:49:44,056 --> 00:49:44,956
in the first world of the game,

1036
00:49:44,976 --> 00:49:46,497
you're not gonna get the most sophisticated powers.

1037
00:49:46,537 --> 00:49:47,957
You'll kind of, you'll get there eventually.

1038
00:49:48,467 --> 00:49:51,830
But yeah, like within a level, I really had no control for like, encounter pacing.

1039
00:49:51,850 --> 00:49:54,072
It was just kind of like, stuff's gonna happen and I hope it's cool.

1040
00:49:55,153 --> 00:49:55,774
Thank you.

1041
00:49:55,794 --> 00:49:56,274
Cool, thank you.

1042
00:49:57,556 --> 00:49:58,196
I think that's everything.

1043
00:49:58,216 --> 00:49:59,057
Alright, thank you for your time.

1044
00:49:59,978 --> 00:50:00,118
Woo!

1045
00:50:00,158 --> 00:50:00,638
Thank you.

1046
00:50:00,658 --> 00:50:00,799
Success.

1047
00:50:00,819 --> 00:50:01,039
Thank you.

1048
00:50:01,079 --> 00:50:01,379
Thank you.

1049
00:50:01,399 --> 00:50:01,639
Thank you.

1050
00:50:01,679 --> 00:50:01,900
Thank you.

1051
00:50:01,920 --> 00:50:02,160
Thank you.

1052
00:50:02,180 --> 00:50:02,360
Thank you.

1053
00:50:02,380 --> 00:50:02,560
Thank you.

1054
00:50:02,600 --> 00:50:02,860
Thank you.

1055
00:50:02,880 --> 00:50:03,161
Thank you.

1056
00:50:03,181 --> 00:50:03,501
Thank you.

1057
00:50:03,521 --> 00:50:03,881
Thank you.

1058
00:50:03,901 --> 00:50:04,142
Thank you.

1059
00:50:04,182 --> 00:50:04,442
Thank you.

1060
00:50:04,502 --> 00:50:04,862
Thank you.

1061
00:50:04,922 --> 00:50:05,123
Thank you.

1062
00:50:05,143 --> 00:50:05,403
Thank you.

