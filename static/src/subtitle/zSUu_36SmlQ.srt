1
00:00:05,013 --> 00:00:08,835
Okay, alright, thanks for coming to this presentation.

2
00:00:08,835 --> 00:00:11,857
So, the way this is gonna work is basically

3
00:00:11,857 --> 00:00:13,798
I'm gonna talk for about 25 minutes

4
00:00:13,798 --> 00:00:15,759
about the level design in Trainyard,

5
00:00:15,759 --> 00:00:19,341
and then Semyon from ZeptoLab is gonna talk

6
00:00:19,341 --> 00:00:21,042
for about 25 minutes about Cut the Rope,

7
00:00:21,042 --> 00:00:22,683
and then afterwards we're gonna open it up

8
00:00:22,683 --> 00:00:23,283
for some questions.

9
00:00:23,283 --> 00:00:25,645
Because this is the last session,

10
00:00:25,645 --> 00:00:27,766
we'll have a bit more time for questions if there are some.

11
00:00:29,471 --> 00:00:32,093
All right, so this is a level design post-mortem.

12
00:00:32,093 --> 00:00:34,474
And really, what I'm going to be doing

13
00:00:34,474 --> 00:00:37,896
is just kind of giving my level design philosophy I followed

14
00:00:37,896 --> 00:00:39,097
when creating Trainyard.

15
00:00:39,097 --> 00:00:44,321
So my name is Matt Ricks, and I live kind of outside of Toronto.

16
00:00:44,321 --> 00:00:45,822
So that's me.

17
00:00:45,822 --> 00:00:48,403
But really what I want to talk about is Trainyard.

18
00:00:48,403 --> 00:00:51,605
So to give you the super brief story of the game, in 2010,

19
00:00:51,605 --> 00:00:55,748
I was working at an advertising agency as a Flash developer.

20
00:00:55,748 --> 00:00:57,509
And I was getting really sick of my job.

21
00:00:58,083 --> 00:01:01,104
and I've always loved games, but I'd never actually made one.

22
00:01:01,104 --> 00:01:04,485
And so I decided to make a game in my spare time.

23
00:01:04,485 --> 00:01:08,606
So every day on the train to work and whenever I could find time,

24
00:01:08,606 --> 00:01:10,246
I would work on this game.

25
00:01:10,246 --> 00:01:15,427
And over the course of a year, I did all the parts and finished it all up

26
00:01:15,427 --> 00:01:17,047
and released it on the App Store.

27
00:01:17,047 --> 00:01:21,008
And so it came out, and at first it didn't really do that well.

28
00:01:21,008 --> 00:01:26,649
So for a few months, everyone seemed to love it, but the sales weren't very high.

29
00:01:27,302 --> 00:01:33,106
And then I released Trainyard Express, which is the free version, and the game got a whole ton of buzz.

30
00:01:33,106 --> 00:01:38,330
And through a variety of different things, it climbed all the way up the App Store to number two,

31
00:01:38,330 --> 00:01:41,172
actually behind Only Cut the Rope.

32
00:01:41,172 --> 00:01:43,293
And it stayed there for a few months in October of 2010.

33
00:01:43,293 --> 00:01:45,155
And since then, it's kind of dropped down.

34
00:01:45,155 --> 00:01:49,278
I don't know if anyone was in Phil Hassey's talk a couple days ago,

35
00:01:49,278 --> 00:01:52,941
but I really liked how he gave out some real sales numbers.

36
00:01:54,252 --> 00:02:00,576
Trainyard is priced at 99 cents and to date it's been bought over 800,000 times

37
00:02:00,576 --> 00:02:05,659
and the free version, Trainyard Express, has been downloaded over 4.2 million times.

38
00:02:05,659 --> 00:02:11,863
So for something I made in my spare time and for pretty much the first game I've ever made, it's been pretty amazing, really.

39
00:02:11,863 --> 00:02:16,065
So that's the story of the game, but now let's talk about the actual gameplay.

40
00:02:16,823 --> 00:02:20,346
Trainyard is a logical puzzle game.

41
00:02:20,346 --> 00:02:22,968
The only thing you do is draw tracks for the trains to follow.

42
00:02:22,968 --> 00:02:24,989
That's it. So the way it works,

43
00:02:24,989 --> 00:02:27,811
on the left there's a blue station, on the right there's a yellow station.

44
00:02:27,811 --> 00:02:30,793
The trains are going to come out and follow those tracks

45
00:02:30,793 --> 00:02:32,254
and combine to form a green train.

46
00:02:32,754 --> 00:02:37,000
So color theory plays a huge role in the game, and the timing and mixing of trains,

47
00:02:37,000 --> 00:02:40,585
whether they either crash or don't crash, plays into it.

48
00:02:40,585 --> 00:02:42,628
Now again, the only thing you do is draw tracks.

49
00:02:42,628 --> 00:02:44,631
There are no points, there are no scores.

50
00:02:44,631 --> 00:02:46,974
Literally the only thing that matters is solving puzzles.

51
00:02:48,420 --> 00:02:53,121
So that's the basics of how the game works, but again, this is about level design.

52
00:02:53,121 --> 00:02:55,321
So level design, to me, is all about teaching.

53
00:02:55,321 --> 00:03:01,482
You can almost look at each level as a lesson and the overall flow of the game as a course.

54
00:03:01,482 --> 00:03:04,143
You're teaching the player how your mechanics work.

55
00:03:04,143 --> 00:03:08,343
You're trying to get to a point where you've taught the player how to become a master at your game,

56
00:03:08,343 --> 00:03:09,564
how to be an expert at your game.

57
00:03:09,564 --> 00:03:15,125
And so that was what I was always trying to do throughout the course of level design in Trainyard.

58
00:03:15,977 --> 00:03:21,359
And as a teacher, your most important consideration is really knowing who your students are.

59
00:03:21,359 --> 00:03:26,721
So in the case of Trainyard, despite the fact that it's kind of like a hardcore logical puzzle game,

60
00:03:26,721 --> 00:03:31,343
I was aiming it at the very casual App Store audience.

61
00:03:31,343 --> 00:03:34,465
And so that had a number of implications for my level design.

62
00:03:35,687 --> 00:03:42,509
I think there's this sort of perception out there that casual players are somehow less intelligent or dumber than average players.

63
00:03:42,509 --> 00:03:45,250
And I don't think that's actually the case at all.

64
00:03:45,250 --> 00:03:49,492
I simply think it's the fact that they haven't been playing games their whole lives,

65
00:03:49,492 --> 00:03:54,713
and so they're missing out on all this experience and this whole vocabulary of games that most of us just take for granted.

66
00:03:55,265 --> 00:03:58,706
And so because of the fact that they don't have that vocabulary,

67
00:03:58,706 --> 00:04:00,647
I needed to take the level design in Trainyard

68
00:04:00,647 --> 00:04:02,588
and start it from a much more base level

69
00:04:02,588 --> 00:04:05,909
to make sure that they really understood all the core concepts.

70
00:04:05,909 --> 00:04:09,711
If you're making a game that's targeted at actual, like, hardcore gamers,

71
00:04:09,711 --> 00:04:14,273
you can skip a lot of the steps that I made sure to include in Trainyard.

72
00:04:14,273 --> 00:04:16,934
Alright, so, as a StarCraft player,

73
00:04:16,934 --> 00:04:19,775
I like to break everything down into micro and macro.

74
00:04:19,775 --> 00:04:22,036
So, in the case of Trainyard, I see microâ€”

75
00:04:22,036 --> 00:04:23,457
sorry, in the case of level design,

76
00:04:24,018 --> 00:04:29,280
I see micro as being the specifics, the individual design of actual single puzzles.

77
00:04:29,280 --> 00:04:36,001
And then macro being the overall flow of the game, the way all the levels fit together and kind of the difficulty curve of the game.

78
00:04:36,001 --> 00:04:38,602
So first I want to talk about macro.

79
00:04:38,602 --> 00:04:42,683
One of the most important things I was trying to do was to add elements progressively,

80
00:04:42,683 --> 00:04:46,384
making sure that I was only teaching one single thing at any given time.

81
00:04:47,558 --> 00:04:50,180
So an element could be something like a gameplay mechanic,

82
00:04:50,180 --> 00:04:52,162
it could be some sort of technique,

83
00:04:52,162 --> 00:04:55,225
some sort of way of using the current elements in the game,

84
00:04:55,225 --> 00:04:57,467
or it could be almost some new form of practice

85
00:04:57,467 --> 00:04:59,169
to teach the player how to use the elements

86
00:04:59,169 --> 00:05:01,190
that they already know.

87
00:05:01,190 --> 00:05:04,193
And along with that, I also wanted to treat

88
00:05:04,193 --> 00:05:06,455
combinations of elements as if they were a new element.

89
00:05:06,455 --> 00:05:08,057
And I'll have these diagrams

90
00:05:08,057 --> 00:05:09,318
that hopefully make that more clear.

91
00:05:10,419 --> 00:05:14,561
So in traditional gamer-focused games,

92
00:05:14,561 --> 00:05:15,962
you have this sort of approach

93
00:05:15,962 --> 00:05:17,363
to teaching elements a lot of the time.

94
00:05:17,363 --> 00:05:18,143
So you teach element A,

95
00:05:18,143 --> 00:05:20,204
and the next level you have element A,

96
00:05:20,204 --> 00:05:21,785
and then you introduce element B,

97
00:05:21,785 --> 00:05:23,306
and the next level you have A, B,

98
00:05:23,306 --> 00:05:24,647
and then you introduce element C.

99
00:05:24,647 --> 00:05:26,248
And there you go, you've got your levels.

100
00:05:26,933 --> 00:05:29,434
But in Trainyard, because of the casual audience,

101
00:05:29,434 --> 00:05:32,256
I wanted to break it really down to a more granular level.

102
00:05:32,256 --> 00:05:34,857
So I would teach A, and then teach B in isolation,

103
00:05:34,857 --> 00:05:37,918
and then teach A and B together, and then teach C in isolation,

104
00:05:37,918 --> 00:05:41,340
and then give them an example with A and C, and B and C,

105
00:05:41,340 --> 00:05:45,382
and finally come to the end when there's A, B, and C.

106
00:05:45,382 --> 00:05:47,803
Now, obviously mathematically looking at this,

107
00:05:47,803 --> 00:05:50,905
a couple more elements and you're ending up with thousands of puzzles.

108
00:05:50,905 --> 00:05:52,886
So it's not practical to do this, but at least...

109
00:05:53,522 --> 00:05:57,344
taking this sort of approach to level design, really breaking it down to the granular parts

110
00:05:57,344 --> 00:06:03,287
and making sure the players actually understand all the nitty gritty things you're trying

111
00:06:03,287 --> 00:06:04,528
to teach them.

112
00:06:04,528 --> 00:06:13,793
Okay, so instructions are a big thing in game, and George Fan had a fantastic talk this morning

113
00:06:13,793 --> 00:06:17,155
about this in Plants vs. Zombies, and I kind of have a few similar

114
00:06:18,061 --> 00:06:22,424
takes on it here. So, in early versions of Trainyard, there was kind of a wall of text

115
00:06:22,424 --> 00:06:25,866
teaching how to play the game, and that was totally ineffective. No one really reads text.

116
00:06:25,866 --> 00:06:30,769
And so I was trying to figure out what approach to take, and I ended up looking at things like this.

117
00:06:30,769 --> 00:06:36,672
So this is the, an IKEA, like page from an IKEA manual, and I think we can all agree that most

118
00:06:36,672 --> 00:06:42,816
of our games are probably easier to do than assembling a piece of IKEA furniture. And so,

119
00:06:42,816 --> 00:06:44,217
I figured if this works for them,

120
00:06:44,688 --> 00:06:45,828
This will probably work for games.

121
00:06:45,828 --> 00:06:49,109
And I discovered that, in fact, games like Angry Birds,

122
00:06:49,109 --> 00:06:51,009
there's a picture, there's no text there,

123
00:06:51,009 --> 00:06:52,830
and yet you can understand how to play

124
00:06:52,830 --> 00:06:56,211
this relatively complex physics game with a single picture.

125
00:06:56,211 --> 00:06:57,551
So it's really, really powerful.

126
00:06:57,551 --> 00:07:00,311
And there's actually a couple other benefits to this.

127
00:07:00,311 --> 00:07:01,832
Well, there's one big benefit,

128
00:07:01,832 --> 00:07:04,773
and it's that localization becomes less important

129
00:07:04,773 --> 00:07:06,893
because all of a sudden, anyone from any culture

130
00:07:06,893 --> 00:07:08,853
can understand how to play your game

131
00:07:08,853 --> 00:07:10,394
just from seeing a single picture.

132
00:07:10,394 --> 00:07:13,074
So there's one, there's something I like to call

133
00:07:13,074 --> 00:07:14,075
the Wingdings Test.

134
00:07:14,516 --> 00:07:16,957
which is where you take a game,

135
00:07:16,957 --> 00:07:19,797
replace all the font files in the game with wingdings,

136
00:07:19,797 --> 00:07:21,518
and then give the game to someone

137
00:07:21,518 --> 00:07:22,618
who's never played it before.

138
00:07:22,618 --> 00:07:23,498
And if they can understand it

139
00:07:23,498 --> 00:07:25,258
with all that nonsense text there,

140
00:07:25,258 --> 00:07:26,399
then you know that you've got a game

141
00:07:26,399 --> 00:07:28,099
that is no longer dependent on text at all.

142
00:07:28,099 --> 00:07:32,160
And that's actually a really fun test to do.

143
00:07:32,160 --> 00:07:34,801
All right, so with Trainyard,

144
00:07:34,801 --> 00:07:37,321
it's much more complex than a game like Angry Birds.

145
00:07:37,321 --> 00:07:39,402
I couldn't just simply show them a picture

146
00:07:39,402 --> 00:07:41,102
and have them understand how the game works.

147
00:07:41,764 --> 00:07:47,310
And the best way to show someone how a game works is to show it actually being played.

148
00:07:47,310 --> 00:07:51,454
On iOS, file size is a premium because of kind of the 3G download limits,

149
00:07:51,454 --> 00:07:55,378
and so I needed to do something else, and what I ended up doing was this sort of system.

150
00:07:56,052 --> 00:08:00,915
So, this is the tutorial, just like one screen from the tutorial system,

151
00:08:00,915 --> 00:08:04,977
and it runs on top of the actual game itself, and it's kind of...

152
00:08:04,977 --> 00:08:08,658
I spent like two months of my development time just making this tutorial system alone.

153
00:08:08,658 --> 00:08:13,701
It's really robust, XML-driven, very adaptable,

154
00:08:13,701 --> 00:08:15,662
and it's running on top of the real game engine,

155
00:08:15,662 --> 00:08:19,043
so there's this super ugly hand you can see on the right screen.

156
00:08:19,043 --> 00:08:21,144
That hand fires real touch events into the game

157
00:08:21,144 --> 00:08:24,046
and does exactly what a player does when their finger touches the screen.

158
00:08:24,860 --> 00:08:29,461
And you can see that I've used text there, but the text is only there to add some context and some terminology.

159
00:08:29,461 --> 00:08:31,822
It's definitely not necessary to understand the game at all.

160
00:08:31,822 --> 00:08:35,983
And they can actually watch the game being played and see all the techniques being done.

161
00:08:35,983 --> 00:08:42,004
Only teaching the player what they need to know.

162
00:08:42,004 --> 00:08:43,985
George also touched on this this morning, but...

163
00:08:45,621 --> 00:08:50,745
frontloading everything that you can do in your game all at once is not a good way to teach the player.

164
00:08:50,745 --> 00:08:56,250
They don't know, if you're getting all these instructions right up front, or all these tutorials,

165
00:08:56,250 --> 00:08:58,932
how do they know which thing they're actually going to need to know right now?

166
00:08:58,932 --> 00:09:02,015
There's no way of them choosing, so they just choose one thing to focus on,

167
00:09:02,015 --> 00:09:06,259
and it could be the totally wrong element that they actually don't need to know at all.

168
00:09:06,259 --> 00:09:09,081
Something else that can happen is that...

169
00:09:09,579 --> 00:09:13,302
you teach them everything up front, and then you have this whole game for hours and hours and hours,

170
00:09:13,302 --> 00:09:16,825
and all of a sudden they get to some super hard level in the game,

171
00:09:16,825 --> 00:09:20,708
and you have this element that you only taught them at the beginning of the game,

172
00:09:20,708 --> 00:09:22,610
and they've long since forgotten it.

173
00:09:22,610 --> 00:09:27,074
So, the easiest way to solve this is just to split your tutorials out over the course of the game.

174
00:09:27,852 --> 00:09:30,493
and uh... in the case of train yard when you started up

175
00:09:30,493 --> 00:09:34,134
the first tutorial is literally teaching the player to drag their finger across

176
00:09:34,134 --> 00:09:35,075
the screen and that's it

177
00:09:35,075 --> 00:09:37,696
and then they have a few puzzles to let them practice that

178
00:09:37,696 --> 00:09:41,037
and there's another tutorial and it teaches them how to drag their finger in

179
00:09:41,037 --> 00:09:41,837
a corner shape

180
00:09:41,837 --> 00:09:44,478
then there's a few more puzzles to let them practice

181
00:09:44,478 --> 00:09:47,919
the last tutorial doesn't come to over seventy puzzles into the game like

182
00:09:47,919 --> 00:09:48,960
three-quarters through

183
00:09:48,960 --> 00:09:52,861
and uh... and so they've been playing for five or six hours but it spreads it

184
00:09:52,861 --> 00:09:54,322
all out so that they know

185
00:09:54,322 --> 00:09:55,962
what they need to know at a given time

186
00:09:58,574 --> 00:10:00,696
This seems similar, but it's actually kind of different.

187
00:10:00,696 --> 00:10:02,678
So you can teach players things through tutorials,

188
00:10:02,678 --> 00:10:04,640
or you can teach things through gameplay.

189
00:10:04,640 --> 00:10:06,762
But it's important that players have an opportunity

190
00:10:06,762 --> 00:10:09,585
to actually practice those things and try them more than once.

191
00:10:09,585 --> 00:10:11,587
If you teach someone in a tutorial,

192
00:10:11,587 --> 00:10:13,830
and you have a level that uses that tutorial,

193
00:10:13,830 --> 00:10:14,611
or uses that skill,

194
00:10:14,611 --> 00:10:17,854
but then you never come back to it for the rest of the game,

195
00:10:18,325 --> 00:10:20,426
And then all of a sudden, I see a lot of games do this.

196
00:10:20,426 --> 00:10:22,427
They'll teach something right up front,

197
00:10:22,427 --> 00:10:23,728
and then you get to the end of the game,

198
00:10:23,728 --> 00:10:25,609
and all of a sudden there's this ultra hard puzzle

199
00:10:25,609 --> 00:10:27,730
at the end of the game, and it uses that element,

200
00:10:27,730 --> 00:10:28,870
and you haven't actually seen it

201
00:10:28,870 --> 00:10:31,051
for hours and hours and hours.

202
00:10:31,051 --> 00:10:33,172
So I think it's important to come back to things

203
00:10:33,172 --> 00:10:34,193
over the course of the game.

204
00:10:34,193 --> 00:10:36,214
Make sure you're giving them a chance to practice things,

205
00:10:36,214 --> 00:10:37,794
not just when you teach them,

206
00:10:37,794 --> 00:10:40,536
but come back to them over the course of the game

207
00:10:40,536 --> 00:10:41,116
again and again.

208
00:10:41,116 --> 00:10:41,676
So this...

209
00:10:46,928 --> 00:10:53,634
is just an abstraction of the sort of difficulty curve I was trying to follow when I created Trainyard.

210
00:10:53,634 --> 00:10:59,519
So you have this ramping up in difficulty, and then every few levels you drop it off and give them kind of a break.

211
00:10:59,519 --> 00:11:04,984
And this is just, having a constant ramp in difficulty can be incredibly overwhelming for a player.

212
00:11:04,984 --> 00:11:07,086
You never really get that chance to relax.

213
00:11:07,768 --> 00:11:09,729
And so these dips, it's giving them a chance

214
00:11:09,729 --> 00:11:10,849
to kind of chill out and do something

215
00:11:10,849 --> 00:11:13,530
and feel good about solving something that's easier.

216
00:11:13,530 --> 00:11:15,991
They feel kind of content that they actually

217
00:11:15,991 --> 00:11:18,012
have some skill and some mastery over the game.

218
00:11:18,012 --> 00:11:20,413
And like I was talking about in that previous slide,

219
00:11:20,413 --> 00:11:23,194
these kind of dips in the difficulty curve

220
00:11:23,194 --> 00:11:24,635
give you a great chance to go back

221
00:11:24,635 --> 00:11:27,116
to some earlier mechanics, some simpler mechanics,

222
00:11:27,116 --> 00:11:29,237
and make sure they still really understand them

223
00:11:29,237 --> 00:11:30,918
and have an opportunity to practice them.

224
00:11:30,918 --> 00:11:34,559
So level unlocking is one of the things in Trainyard

225
00:11:34,559 --> 00:11:36,780
that's probably one of the things I'm least proud of.

226
00:11:38,109 --> 00:11:39,890
So the way it works is kind of confusing to explain,

227
00:11:39,890 --> 00:11:41,791
which is pretty much a given fact

228
00:11:41,791 --> 00:11:44,092
that it's actually too confusing in general.

229
00:11:44,092 --> 00:11:47,134
But, so each puzzle is assigned a number of stars

230
00:11:47,134 --> 00:11:48,375
based on how difficult it is.

231
00:11:48,375 --> 00:11:49,896
So an easy puzzle, one or two,

232
00:11:49,896 --> 00:11:51,977
a medium puzzle, four or five,

233
00:11:51,977 --> 00:11:53,558
a hard puzzle, nine or 10, whatever.

234
00:11:53,558 --> 00:11:56,399
And then when they solve those puzzles,

235
00:11:56,399 --> 00:11:58,320
they're given that number of stars,

236
00:11:58,320 --> 00:12:00,101
and then with certain number of stars,

237
00:12:00,101 --> 00:12:01,962
it unlocks the next section of puzzles.

238
00:12:02,659 --> 00:12:06,441
And yesterday I was actually talking to Semyon about this, and Cut the Rope has something very similar,

239
00:12:06,441 --> 00:12:09,963
but the difference is that in Cut the Rope every puzzle is worth three stars,

240
00:12:09,963 --> 00:12:11,843
and in Trainyard they're worth variable amounts.

241
00:12:11,843 --> 00:12:14,004
And I think some players, it wasn't a huge deal,

242
00:12:14,004 --> 00:12:18,887
but I think some players really got confused by the fact that they didn't really understand where these stars were coming from.

243
00:12:18,887 --> 00:12:21,888
And that could actually just be an issue in my communication of it,

244
00:12:21,888 --> 00:12:25,230
more than an actual problem in the game design itself.

245
00:12:27,033 --> 00:12:30,034
So something that happened a lot, because I had this unlocking mechanism,

246
00:12:30,034 --> 00:12:34,435
I would get a lot of emails from players that said, you know,

247
00:12:34,435 --> 00:12:36,115
I got a new iPad, I got a new iPhone,

248
00:12:36,115 --> 00:12:39,776
and for some reason iTunes screwed up my data and I can't get it,

249
00:12:39,776 --> 00:12:41,957
and so I have to start over from the beginning,

250
00:12:41,957 --> 00:12:44,937
and I really don't want to have to play all these easy puzzles again.

251
00:12:44,937 --> 00:12:47,318
And at first I was kind of like, I don't know what to do,

252
00:12:47,318 --> 00:12:50,839
you know, the easy puzzles are easy, just go through them I guess.

253
00:12:50,839 --> 00:12:51,699
And then I realized...

254
00:12:52,275 --> 00:12:53,575
there was a really easy solution.

255
00:12:53,575 --> 00:12:55,816
And it was just to put a button on the options screen

256
00:12:55,816 --> 00:12:57,057
that when you press it,

257
00:12:57,057 --> 00:12:59,478
it allows you to unlock all the puzzles.

258
00:12:59,478 --> 00:13:00,859
It says, are you sure you want to do this?

259
00:13:00,859 --> 00:13:03,660
And if you do, you just have the whole game available to you.

260
00:13:03,660 --> 00:13:06,782
It's really like a cheat code from an old school game,

261
00:13:06,782 --> 00:13:08,143
except instead of making a cheat code,

262
00:13:08,143 --> 00:13:10,184
some obscure thing, it's just right there in options

263
00:13:10,184 --> 00:13:10,984
if you want to do it.

264
00:13:11,765 --> 00:13:15,489
And this solved so many problems with syncing and all that,

265
00:13:15,489 --> 00:13:17,872
and it took me probably an hour to code in,

266
00:13:17,872 --> 00:13:19,013
or not even that much.

267
00:13:19,013 --> 00:13:22,456
It was a huge amount of effort

268
00:13:22,456 --> 00:13:24,358
for the amount of actual results I got.

269
00:13:24,358 --> 00:13:25,619
It was really awesome.

270
00:13:25,619 --> 00:13:29,624
Something else that worked really well

271
00:13:29,624 --> 00:13:31,846
was having a main game and then bonus levels.

272
00:13:32,677 --> 00:13:37,341
So in Trainyard, there are a hundred main puzzles in the game that kind of constitute the main game.

273
00:13:37,341 --> 00:13:41,004
And what happens is when you finish those hundred puzzles, a screen pops up and it says,

274
00:13:41,004 --> 00:13:45,068
Congratulations, you beat the game. And then you can post it on Twitter and Facebook.

275
00:13:45,068 --> 00:13:47,850
And then right down below that, there's a little button that says,

276
00:13:47,850 --> 00:13:50,292
Want more puzzles? Play the bonus puzzles.

277
00:13:50,292 --> 00:13:53,095
And to me, the real game is in the bonus puzzles.

278
00:13:53,095 --> 00:13:57,138
There's 60 more puzzles, and they take way more time and way more effort,

279
00:13:57,138 --> 00:13:59,861
and they're much more interesting puzzles.

280
00:13:59,861 --> 00:14:00,041
But...

281
00:14:00,594 --> 00:14:06,118
A lot of, the reason I did this was because I knew a lot of casual players, and this is exactly what ended up happening,

282
00:14:06,118 --> 00:14:10,301
a lot of casual players would get to that screen where I said, you beat the game,

283
00:14:10,301 --> 00:14:14,284
and they would kind of close train yard and be completely content with how far they got.

284
00:14:14,284 --> 00:14:19,888
And so, those players left the game really happy, and if I ever make like a train yard two or something, they'll be big fans of it.

285
00:14:19,888 --> 00:14:25,152
And then the hardcore players, who are the ones who are better at the game than I am anyway,

286
00:14:25,152 --> 00:14:29,095
they would go into the bonus levels and have a blast playing all these super hard levels.

287
00:14:30,443 --> 00:14:34,086
So this worked pretty well, except there was one issue that I didn't really consider,

288
00:14:34,086 --> 00:14:37,328
and it was this kind of mystery demographic.

289
00:14:37,328 --> 00:14:40,871
So there's the casual players and the hardcore players,

290
00:14:40,871 --> 00:14:44,033
but what I didn't realize is there was also this demographic,

291
00:14:44,033 --> 00:14:47,315
which I kind of realized afterwards that I fall into this demographic myself,

292
00:14:47,315 --> 00:14:49,857
and it's the players who just want to complete everything.

293
00:14:49,857 --> 00:14:52,279
They're not necessarily the best players at the game,

294
00:14:52,279 --> 00:14:54,401
but they want to complete everything you throw at them anyway.

295
00:14:55,536 --> 00:15:00,681
And so, what was happening is that the casual players were happy, the hardcore players were happy,

296
00:15:00,681 --> 00:15:06,386
but I made one kind of fatal mistake, and that was that every puzzle I made,

297
00:15:06,386 --> 00:15:10,510
I put, not every puzzle, but every kind of hard puzzle I made, I put it in the game.

298
00:15:10,510 --> 00:15:16,355
So I had some puzzles where I had spent like 5, 6, 7, 8 hours solving them, and finally solved them.

299
00:15:16,355 --> 00:15:22,440
And there were these like insanely hard puzzles that I put at the very end of the bonus puzzles.

300
00:15:22,902 --> 00:15:28,732
And so these completionist players would go through all the bonus puzzles and then get to these insanely hard puzzles

301
00:15:28,732 --> 00:15:33,520
and just get frustrated and quit, because they're literally puzzles that I myself struggled with.

302
00:15:33,520 --> 00:15:36,885
And the hardcore players would still solve them anyway.

303
00:15:37,518 --> 00:15:42,779
I came to an easy solution, and it's basically just don't put those puzzles in the game at all.

304
00:15:42,779 --> 00:15:45,079
The casual player will be happy, completionist player happy,

305
00:15:45,079 --> 00:15:48,500
and the hardcore player, they won't be happy no matter what you do.

306
00:15:48,500 --> 00:15:50,580
So, what's the point, really?

307
00:15:50,580 --> 00:15:53,901
No, but I actually found another solution to the hardcore player,

308
00:15:53,901 --> 00:15:55,961
and that is creating a level editor.

309
00:15:55,961 --> 00:16:00,282
And so, I did that much later on, and that was actually a huge success,

310
00:16:00,282 --> 00:16:05,023
and all the hardcore players are happy, so now everyone's happy, and it's all good times.

311
00:16:06,254 --> 00:16:12,217
Alright, so now moving on to micro, the specifics of individual puzzles.

312
00:16:12,217 --> 00:16:14,499
Each level needs to have a purpose.

313
00:16:14,499 --> 00:16:18,921
So when I was, anytime I would kind of have a blank slate there in front of me,

314
00:16:18,921 --> 00:16:21,582
I would know what I wanted to accomplish with that puzzle

315
00:16:21,582 --> 00:16:23,443
before I put any pieces on the board.

316
00:16:24,197 --> 00:16:29,140
So, kind of like what I was talking about earlier, a purpose could be like teaching some sort of element,

317
00:16:29,140 --> 00:16:34,002
some sort of mechanic, giving them practice, or it could be some sort of theme,

318
00:16:34,002 --> 00:16:37,344
some sort of idea I wanted to evoke through the design of the puzzle.

319
00:16:37,344 --> 00:16:40,005
So there's a lot of different approaches that can be done there,

320
00:16:40,005 --> 00:16:44,588
but the important thing is that you know what you're going to do before the actual creation of it.

321
00:16:46,148 --> 00:16:49,670
And visually, I really like to aim for symmetry and balance.

322
00:16:49,670 --> 00:16:52,631
I want everything in the puzzles to look intentional, to be...

323
00:16:52,631 --> 00:16:54,911
Well, let me just show you an example.

324
00:16:54,911 --> 00:16:59,873
So, this is a puzzle called Magic Carpet, for some reason.

325
00:16:59,873 --> 00:17:04,274
And, so you can see there's kind of a diagonal symmetry there with the rainbow effect.

326
00:17:04,274 --> 00:17:04,334
And...

327
00:17:06,503 --> 00:17:10,044
Really the reason I do this and the reason I have that kind of symmetry and balance there

328
00:17:10,044 --> 00:17:14,045
is that I want everything, every puzzle I make, I want it to look handcrafted.

329
00:17:14,045 --> 00:17:18,526
I want it to look like someone spent a lot of time and effort actually making this puzzle.

330
00:17:18,526 --> 00:17:21,447
I don't want it to look procedurally generated like some sort of algorithm

331
00:17:21,447 --> 00:17:24,168
just spit out another puzzle for the player to play.

332
00:17:24,168 --> 00:17:28,009
I really want it to be just like human.

333
00:17:28,009 --> 00:17:32,210
And so that's why I go with that.

334
00:17:32,210 --> 00:17:34,451
Now, yeah, I'll show another example for this.

335
00:17:37,313 --> 00:17:40,935
So this is one of the player made puzzles.

336
00:17:40,935 --> 00:17:42,335
Kind of all my examples of bad puzzles

337
00:17:42,335 --> 00:17:43,255
are from player made puzzles.

338
00:17:43,255 --> 00:17:46,356
So this doesn't really have that symmetry,

339
00:17:46,356 --> 00:17:48,637
it doesn't really have that balance to it.

340
00:17:48,637 --> 00:17:51,578
But the thing that really bugs me about it

341
00:17:51,578 --> 00:17:54,598
is that rock in the middle of the screen.

342
00:17:54,598 --> 00:17:57,239
Rocks in train yards serve one basic purpose

343
00:17:57,239 --> 00:17:59,580
and that's to limit where you can draw tracks.

344
00:17:59,580 --> 00:18:03,141
And it limits your solution space for the puzzle.

345
00:18:03,586 --> 00:18:10,113
It can be an incredibly powerful way of making the player think in certain ways and use certain techniques.

346
00:18:10,113 --> 00:18:13,456
But in this case, it just kind of gets in their way.

347
00:18:13,456 --> 00:18:15,479
It doesn't make the puzzle any more interesting.

348
00:18:15,479 --> 00:18:18,141
It doesn't make the puzzle require any more cleverness.

349
00:18:18,141 --> 00:18:20,023
It just makes the puzzle take longer to solve.

350
00:18:20,800 --> 00:18:25,184
And one of the benefits of Trainyard, or one of the greatest things about the gameplay mechanics

351
00:18:25,184 --> 00:18:29,247
is the fact that there are many possible solutions for every single puzzle,

352
00:18:29,247 --> 00:18:34,490
but all of a sudden this rock just kind of gets in there and restricts their solution base,

353
00:18:34,490 --> 00:18:39,154
but doesn't make the puzzle any more fun or anything.

354
00:18:39,154 --> 00:18:42,256
So, really not a big fan of just arbitrary elements thrown everywhere.

355
00:18:42,256 --> 00:18:46,859
Using themes. So, this is a puzzle called Cooksville Creek, and it is...

356
00:18:47,905 --> 00:18:49,806
meant to evoke the feeling of a river.

357
00:18:49,806 --> 00:18:51,927
Now unfortunately I don't have a video of it in action, but

358
00:18:51,927 --> 00:18:54,829
if you can imagine, a blue train will flow from the top

359
00:18:54,829 --> 00:18:57,750
down to the bottom, and then split into four blue trains,

360
00:18:57,750 --> 00:19:01,733
and then flow to the left side, and to the right side,

361
00:19:01,733 --> 00:19:04,174
and across the bottom, and finally up to the top right.

362
00:19:04,174 --> 00:19:06,195
Now you don't really have to visualize in your mind,

363
00:19:06,195 --> 00:19:09,417
but the important thing is that it has this kind of blue flow throughout,

364
00:19:09,417 --> 00:19:11,798
and I was trying to evoke the feeling of a river.

365
00:19:11,798 --> 00:19:12,879
And there's no real...

366
00:19:13,650 --> 00:19:16,552
perfect reason for that. The only thing is I just wanted to look

367
00:19:16,552 --> 00:19:20,235
handcrafted. I wanted to look like someone took the time and effort to make

368
00:19:20,235 --> 00:19:21,076
something

369
00:19:21,076 --> 00:19:22,016
interesting.

370
00:19:22,016 --> 00:19:29,282
So this... don't overwhelm the player. So this is another player-made puzzle

371
00:19:29,282 --> 00:19:32,405
and anyone who's playing Train Yard instantly is going like, what is that?

372
00:19:32,405 --> 00:19:34,226
Because it's...

373
00:19:34,226 --> 00:19:37,088
there's like 60 trains there and 60 goals and it's just an overwhelming

374
00:19:37,088 --> 00:19:38,029
amount of information.

375
00:19:38,862 --> 00:19:41,584
And the way I kind of like to look at this is that each player,

376
00:19:41,584 --> 00:19:43,925
almost think of it like a computer or something,

377
00:19:43,925 --> 00:19:46,286
every single player of a game has a certain amount of memory,

378
00:19:46,286 --> 00:19:50,709
a certain amount of state that they can hold in their brain at any given time.

379
00:19:50,709 --> 00:19:53,831
And if you're starting with too many elements on the board,

380
00:19:53,831 --> 00:19:57,593
it could be the easiest puzzle in the world to actually do the solution of,

381
00:19:57,593 --> 00:19:59,834
but if you're starting with too many elements on the board,

382
00:19:59,834 --> 00:20:03,096
they're just going to get overwhelmed and confused with the amount of information.

383
00:20:03,873 --> 00:20:08,318
And so whenever possible, I like to use the absolute minimum number of elements I can

384
00:20:08,318 --> 00:20:11,502
to get whatever purpose I'm trying to achieve across.

385
00:20:11,502 --> 00:20:13,985
There's no point in throwing more things in just because I can.

386
00:20:13,985 --> 00:20:17,730
I really want to keep everything to the absolute minimum necessary.

387
00:20:20,654 --> 00:20:25,479
When beta testing or when watching someone else play the game, if you ever hear someone say,

388
00:20:25,479 --> 00:20:30,785
I don't know how I just solved that puzzle, or if you're watching someone and they start devolving into trial and error,

389
00:20:30,785 --> 00:20:36,852
to me, like, a bit of trial and error, like educated trial and error is fine, but when they, it's just straight up trial and error.

390
00:20:37,012 --> 00:20:40,553
That's like the ultimate bad thing for a puzzle game,

391
00:20:40,553 --> 00:20:43,294
because they might as well not be able to solve the puzzle at all.

392
00:20:43,294 --> 00:20:47,096
And so, that either means there's some problem with your core gameplay mechanics,

393
00:20:47,096 --> 00:20:50,537
or much more likely that your difficulty curve up to that point

394
00:20:50,537 --> 00:20:52,758
and your levels up to that point aren't teaching the player

395
00:20:52,758 --> 00:20:55,579
the skills they actually need to know to solve that puzzle.

396
00:20:55,579 --> 00:20:57,839
So that's a huge problem, at least in my mind,

397
00:20:57,839 --> 00:21:00,480
that's a huge problem that needs to be solved somehow.

398
00:21:02,044 --> 00:21:05,767
So having a level editor, so this is the train yard level,

399
00:21:05,767 --> 00:21:09,009
it's like this super ugly Adobe Flex thing,

400
00:21:09,009 --> 00:21:11,471
but it works for creating puzzles.

401
00:21:11,471 --> 00:21:13,052
And it's visual, which is great,

402
00:21:13,052 --> 00:21:15,954
but the most important thing you can have in a level editor,

403
00:21:15,954 --> 00:21:18,295
at least in my mind, is some form of versioning.

404
00:21:18,295 --> 00:21:20,297
You need a way that you can quickly clone

405
00:21:20,297 --> 00:21:22,518
and duplicate puzzles and try out experiments,

406
00:21:22,518 --> 00:21:24,559
and if they don't work, you can go back

407
00:21:24,559 --> 00:21:25,800
to whatever you were doing before.

408
00:21:27,134 --> 00:21:31,917
And another thing that's really important is being able to switch between solving the puzzle

409
00:21:31,917 --> 00:21:36,380
and creating the puzzle as quickly as possible, or a level if you're making a level-based game, whatever.

410
00:21:36,380 --> 00:21:39,182
You need some way that you can quickly swap between them.

411
00:21:39,182 --> 00:21:43,764
If you're waiting for compile times or something like that, it's going to drastically impact

412
00:21:43,764 --> 00:21:49,348
the amount of experimentation and iteration that you're actually willing to do.

413
00:21:49,348 --> 00:21:52,690
And finally, I want to talk about making players happy.

414
00:21:52,690 --> 00:21:56,192
So when you're creating a puzzle game...

415
00:21:57,560 --> 00:22:02,507
Players love, or human beings in general, love solving puzzles. We love figuring things out.

416
00:22:02,507 --> 00:22:09,217
So there's no reason to go overkill with experience points and all kinds of blinky things on screen all the time.

417
00:22:09,217 --> 00:22:14,224
You don't need to do that, because players love the fact that they're solving things and figuring things out.

418
00:22:14,878 --> 00:22:20,962
The only thing I really tried to do is when the player's already feeling that kind of internal joy

419
00:22:20,962 --> 00:22:23,063
from solving something, I like to amplify it.

420
00:22:23,063 --> 00:22:29,367
So, in Trainyard, when you solve a puzzle, that's when I go crazy with particle effects and sound effects and all that sort of stuff

421
00:22:29,367 --> 00:22:31,948
to really kind of lock in the feeling the player is having.

422
00:22:31,948 --> 00:22:32,288
And finally...

423
00:22:35,067 --> 00:22:36,348
discovery of untaught mechanics.

424
00:22:36,348 --> 00:22:38,950
So a lot of this has just been about teaching things

425
00:22:38,950 --> 00:22:41,893
kind of explicitly, but the most powerful thing

426
00:22:41,893 --> 00:22:44,635
you can do as a level designer is give the opportunity

427
00:22:44,635 --> 00:22:46,257
to the player to figure things out themselves.

428
00:22:46,257 --> 00:22:48,599
So this is that puzzle color theory

429
00:22:48,599 --> 00:22:50,781
from the start of the game.

430
00:22:50,781 --> 00:22:52,722
And color theory is interesting

431
00:22:52,722 --> 00:22:55,205
because it comes 20 levels into the game

432
00:22:55,205 --> 00:22:57,807
and up to this point, I haven't ever told the player

433
00:22:57,807 --> 00:22:59,208
that colors can mix together.

434
00:22:59,208 --> 00:23:01,710
I haven't shown them that that's possible at all.

435
00:23:02,340 --> 00:23:06,923
And so I put them in this situation where they can do nothing else but discover this mechanic.

436
00:23:06,923 --> 00:23:10,406
And I think that's the key thing, is that if you're making gamer-focused games,

437
00:23:10,406 --> 00:23:15,711
it's pretty easy to kind of assume they have some knowledge and can figure things out.

438
00:23:15,711 --> 00:23:19,313
But for casual players, they can get frustrated really quickly

439
00:23:19,313 --> 00:23:23,037
and think that there's just some knowledge that they're missing to solve a puzzle.

440
00:23:23,037 --> 00:23:26,459
So you need to kind of give them the minimum amount of informationâ€”

441
00:23:26,459 --> 00:23:28,181
not information, but a minimum amount of room to work in.

442
00:23:28,181 --> 00:23:30,803
It's almost like you don't want to give them too much rope.

443
00:23:31,469 --> 00:23:33,950
And so that's what I was trying to do here.

444
00:23:33,950 --> 00:23:38,012
And this specific puzzle, I've heard so much feedback

445
00:23:38,012 --> 00:23:40,373
from people about how this kind of,

446
00:23:40,373 --> 00:23:42,334
this was the moment where the game changed for them,

447
00:23:42,334 --> 00:23:45,195
when they discovered this for themselves.

448
00:23:45,195 --> 00:23:48,236
All right, so wrapping up,

449
00:23:48,236 --> 00:23:51,358
that's basically all I have to say.

450
00:23:51,358 --> 00:23:53,919
Now I hope some people can find this useful,

451
00:23:53,919 --> 00:23:56,600
not just for puzzle games, but for any kind of level games.

452
00:23:56,600 --> 00:23:58,901
Yeah, so that's about it.

453
00:23:58,901 --> 00:24:00,402
Thanks for listening, and that's my stuff.

454
00:24:01,105 --> 00:24:01,946
Now Semyon's going to come up.

455
00:24:01,946 --> 00:24:10,654
SEMYON ZAPTALAT

456
00:24:10,654 --> 00:24:15,358
Alright, so hello everyone. My name is Semyon. I'm a creative director and co-founder of Zaptalat.

457
00:24:15,358 --> 00:24:21,223
And I will continue Matt's talk on the level design from the perspective of our game Cut the Rope.

458
00:24:22,131 --> 00:24:28,934
And I will also share some sources of information that we rely on when we're trying to analyze

459
00:24:28,934 --> 00:24:33,737
what are the things that we did right and what could be better.

460
00:24:33,737 --> 00:24:39,780
And it will take another 25 minutes, I mean my part overall, and then Matt and I will

461
00:24:39,780 --> 00:24:42,141
answer your questions.

462
00:24:42,141 --> 00:24:47,604
So in case you haven't heard about Cut the Rope, it's a pretty popular game which was

463
00:24:47,604 --> 00:24:49,525
initially released for mobile platforms.

464
00:24:50,090 --> 00:24:52,991
And it happened around one and a half year ago.

465
00:24:52,991 --> 00:24:56,253
And it's built around really simple principle

466
00:24:56,253 --> 00:24:58,914
of delivering object from point A to point B

467
00:24:58,914 --> 00:25:02,036
by cutting the ropes in some specific order

468
00:25:02,036 --> 00:25:04,197
and with the right timing.

469
00:25:04,197 --> 00:25:06,398
And you can see how the game evolved

470
00:25:06,398 --> 00:25:10,140
from the very early draft to the final look.

471
00:25:10,140 --> 00:25:13,422
And you can see that point B ended up

472
00:25:13,422 --> 00:25:16,163
being this green creature called Om Nom.

473
00:25:16,163 --> 00:25:16,603
And

474
00:25:17,650 --> 00:25:21,532
Because the game was originally intended for mobile devices,

475
00:25:21,532 --> 00:25:25,455
it uses a really short session approach with the levels.

476
00:25:25,455 --> 00:25:27,937
So many levels, or even most of them,

477
00:25:27,937 --> 00:25:30,378
can be really completed in several seconds.

478
00:25:30,378 --> 00:25:35,882
So game can be really considered a snack of gaming.

479
00:25:35,882 --> 00:25:38,064
And those snacks are the levels.

480
00:25:38,064 --> 00:25:40,866
And our job as designers, as level designers,

481
00:25:40,866 --> 00:25:43,527
to make sure that those snacks are tasty.

482
00:25:43,527 --> 00:25:44,888
So in order to do that.

483
00:25:45,636 --> 00:25:48,417
We set three goals from the very beginning.

484
00:25:48,417 --> 00:25:54,581
And first goal is that we want players to feel smart.

485
00:25:54,581 --> 00:25:57,602
It doesn't mean that they aren't,

486
00:25:57,602 --> 00:25:59,263
but we want to remind them about it.

487
00:25:59,263 --> 00:26:02,064
That's the kind of purpose of our game overall.

488
00:26:02,064 --> 00:26:05,206
The second goal is that we want to appear

489
00:26:05,206 --> 00:26:09,168
to a really wide audience of the player,

490
00:26:09,168 --> 00:26:10,989
from hardcore to the very casual,

491
00:26:10,989 --> 00:26:12,390
like the one you can see in the picture.

492
00:26:13,397 --> 00:26:18,740
And the third goal is that we want players to feel hungry for more.

493
00:26:18,740 --> 00:26:21,901
And that's essential for us to keep the game high in the charts.

494
00:26:21,901 --> 00:26:24,643
All right, so we defined the goals.

495
00:26:24,643 --> 00:26:30,366
Now we needed some set of principles we would use while creating the levels.

496
00:26:30,366 --> 00:26:35,148
And there are seven of them, and I will now go through all seven.

497
00:26:35,148 --> 00:26:38,110
So the first one is the positive reinforcement.

498
00:26:38,110 --> 00:26:42,412
And it's not a big surprise that it works much better than the negative one.

499
00:26:43,169 --> 00:26:45,110
And in this example, if you play the game,

500
00:26:45,110 --> 00:26:49,911
you know that you can move that blue holder on this blue rail.

501
00:26:49,911 --> 00:26:51,991
And if you, on the first picture,

502
00:26:51,991 --> 00:26:55,892
if you move it really fast to the right side,

503
00:26:55,892 --> 00:26:57,933
the rope will pull the candy up, and it

504
00:26:57,933 --> 00:27:00,553
will do this kind of jump and end up

505
00:27:00,553 --> 00:27:03,274
in the mouth of the little green monster.

506
00:27:03,274 --> 00:27:06,135
So in the first example, we're kind of

507
00:27:06,135 --> 00:27:10,156
forcing player to do this trick by placing the spikes there.

508
00:27:11,081 --> 00:27:14,863
However, the better way of doing it would be placing the stars there.

509
00:27:14,863 --> 00:27:18,985
So, first, it would be a positive motivation for the player.

510
00:27:18,985 --> 00:27:24,708
It would encourage him or her to do this trick rather than forcing.

511
00:27:24,708 --> 00:27:31,651
And what's even better is that then the player will have an option of not collecting the star at all.

512
00:27:31,651 --> 00:27:36,093
And that really helps us with the goal of appealing to the wide audience.

513
00:27:36,093 --> 00:27:39,115
Because, you know, many kids don't really care about the stars.

514
00:27:39,655 --> 00:27:42,618
All they want to do is to see Omnom happy.

515
00:27:42,618 --> 00:27:49,385
So it's good to have several options for different kind of audience.

516
00:27:49,385 --> 00:27:55,892
And what's even greater about the stars is that it's really a self-manageable difficulty

517
00:27:55,892 --> 00:27:57,073
within your game.

518
00:27:57,073 --> 00:28:01,878
It's up to player to decide how hard the game should be for him.

519
00:28:02,058 --> 00:28:07,463
whether he wants to collect all the stars or just complete the levels.

520
00:28:07,463 --> 00:28:15,991
And also all of those kind of players will feel satisfaction because they set the goal for themselves and they achieved it.

521
00:28:15,991 --> 00:28:26,460
And to give even more value to the stars, we've introduced this functionality of the level boxes being unlocked by some specific amount of stars.

522
00:28:27,061 --> 00:28:33,543
And we made sure that those values are not too high, so unless the player is skipping

523
00:28:33,543 --> 00:28:37,104
too many levels, he'll be able to collect the necessary amount of the stars.

524
00:28:37,104 --> 00:28:42,366
And by the way, skipping the levels is another cool thing that we got out of the system.

525
00:28:42,366 --> 00:28:49,428
We basically let players skip any amount of the levels he wants, of course, unless he

526
00:28:49,428 --> 00:28:50,048
hits the next.

527
00:28:50,590 --> 00:28:56,251
the next level box, which helps to minimize the frustration of being stuck at some particular

528
00:28:56,251 --> 00:28:56,592
level.

529
00:28:56,592 --> 00:29:06,073
So, the next principle is that when a player launches the level, he should already be able

530
00:29:06,073 --> 00:29:06,994
to plan the solution.

531
00:29:06,994 --> 00:29:14,955
And what's overall the beauty of the physics-based games is that players already know the biggest

532
00:29:14,955 --> 00:29:15,755
bunch of the rules.

533
00:29:16,259 --> 00:29:17,580
from the real physical world.

534
00:29:17,580 --> 00:29:19,802
And that's the reason why even small kids can

535
00:29:19,802 --> 00:29:20,762
play these kind of games.

536
00:29:20,762 --> 00:29:22,924
Because they don't know the math.

537
00:29:22,924 --> 00:29:25,185
They don't know the physics.

538
00:29:25,185 --> 00:29:28,648
But they know how these things work around them, right?

539
00:29:28,648 --> 00:29:31,610
So the only additional thing that we basically

540
00:29:31,610 --> 00:29:34,492
need to explain to the player is cutting the ropes.

541
00:29:34,492 --> 00:29:36,613
And they already get it from the title of the game.

542
00:29:36,613 --> 00:29:38,034
So that's pretty cool.

543
00:29:38,034 --> 00:29:40,356
But here's the tricky part.

544
00:29:41,038 --> 00:29:49,986
Even though our physics engine is pretty cool and we're proud of it, of course it's not as complex, as not detailed, not as detailed as a real life.

545
00:29:49,986 --> 00:29:58,313
So it is possible to trigger some events within the levels which wouldn't look natural or would look unexpected to the player.

546
00:29:58,313 --> 00:30:01,616
So our job is to make sure that such things don't happen.

547
00:30:02,197 --> 00:30:06,241
And as a proof, you can see this picture taken actually from the YouTube video

548
00:30:06,241 --> 00:30:11,025
where apparently one of the game fans have replicated several levels from the game,

549
00:30:11,025 --> 00:30:13,547
like in the real world, and it seems to work.

550
00:30:13,547 --> 00:30:14,889
You can check the video on YouTube.

551
00:30:14,889 --> 00:30:19,993
And just to give you a bit more details on this principle,

552
00:30:19,993 --> 00:30:21,315
here's another example where.

553
00:30:22,679 --> 00:30:27,402
Basically, it's not only about the physical behavior of the object, it's also about how

554
00:30:27,402 --> 00:30:30,323
we put the object within the level.

555
00:30:30,323 --> 00:30:32,945
And in this example, the candy floats up in a bubble.

556
00:30:33,547 --> 00:30:36,307
And on the first picture, it's not very clear whether it will

557
00:30:36,307 --> 00:30:39,408
squeeze between those spikes or not.

558
00:30:39,408 --> 00:30:42,870
So the better way of doing it would be either moving the

559
00:30:42,870 --> 00:30:46,271
spikes further away so that it will be absolutely clear that

560
00:30:46,271 --> 00:30:50,232
the candy will pass, or moving them really close to each

561
00:30:50,232 --> 00:30:53,153
other, or maybe even uniting them so it will clearly

562
00:30:53,153 --> 00:30:55,514
communicate that the candy won't pass.

563
00:30:55,514 --> 00:30:59,395
We can go as far as placing a little gamble there, but it

564
00:30:59,395 --> 00:31:00,535
might be a bit of an overkill.

565
00:31:03,915 --> 00:31:07,297
And here's the principle that Matt also talked about.

566
00:31:07,297 --> 00:31:10,718
Basically, it's not only about that the solution

567
00:31:10,718 --> 00:31:12,198
should feel logical.

568
00:31:12,198 --> 00:31:15,900
It's also that the wrong way of solving the level

569
00:31:15,900 --> 00:31:17,380
should feel wrong.

570
00:31:17,380 --> 00:31:21,702
And we've seen many times when we were doing play testing,

571
00:31:21,702 --> 00:31:24,263
when some player was playing some level

572
00:31:24,263 --> 00:31:26,704
and trying some wrong way of solving it

573
00:31:26,704 --> 00:31:28,924
over and over and over again.

574
00:31:28,924 --> 00:31:31,405
And wasn't even considering the option

575
00:31:31,405 --> 00:31:33,006
or the alternative ways of solving it.

576
00:31:33,490 --> 00:31:41,216
And that happened because that wrong way of solving wasn't communicating clear enough that, you know, it's wrong way.

577
00:31:41,216 --> 00:31:44,739
It had a feeling that I almost did it last time, so I'll give it another try.

578
00:31:44,739 --> 00:31:52,185
So it should communicate something like, you tried that, good job, didn't work, try something else.

579
00:31:52,185 --> 00:32:00,172
And in a way, it limited about, it a bit limited our game with the amount of solutions every level has.

580
00:32:00,780 --> 00:32:02,820
So it's not really a sandbox approach.

581
00:32:02,820 --> 00:32:07,182
There are usually just one or a few ways of solving the levels.

582
00:32:07,182 --> 00:32:10,102
And there are some good and bad things about it.

583
00:32:10,102 --> 00:32:12,083
And the good is that we can really

584
00:32:12,083 --> 00:32:14,044
control the experience of the player.

585
00:32:14,044 --> 00:32:17,324
All right, and here's another thing

586
00:32:17,324 --> 00:32:20,485
is that no game is perfect, including Cut the Rope,

587
00:32:20,485 --> 00:32:21,206
of course.

588
00:32:21,206 --> 00:32:24,366
And it is possible to trigger some.

589
00:32:25,219 --> 00:32:32,483
visual glitches, some technical bugs, some controlling issues by placing some elements

590
00:32:32,483 --> 00:32:37,606
in some not really smart way. So we need to make sure that it doesn't happen. And in this example,

591
00:32:37,606 --> 00:32:41,208
again, with the blue rope holder, if the rope is really short,

592
00:32:41,830 --> 00:32:47,097
and player wants to cut it, he can accidentally move the blue holder instead of cutting it.

593
00:32:47,097 --> 00:32:53,585
And that's a bad experience. So at some point we agreed that we would set some minimum amount

594
00:32:53,585 --> 00:32:58,731
of ropes attached to such holder and we won't use any shorter ropes. And it already solved

595
00:32:58,731 --> 00:33:00,554
this kind of problems in many levels.

596
00:33:01,174 --> 00:33:06,078
Another thing is that as we have a reset button on the top right corner of the screen,

597
00:33:06,078 --> 00:33:14,565
we don't want the player to do any actions like popping the bubble or pressing some air cushions within the level,

598
00:33:14,565 --> 00:33:21,610
because he can occasionally press the reset button and that's again not a good game experience.

599
00:33:21,610 --> 00:33:24,152
So we're trying to make sure it doesn't happen.

600
00:33:28,318 --> 00:33:34,684
Another thing that Matt talked about is that, well, of course, everyone knows that the tutorial

601
00:33:34,684 --> 00:33:39,809
is a very important part, and I agree with Matt that images are working even better than

602
00:33:39,809 --> 00:33:40,409
text.

603
00:33:40,409 --> 00:33:46,375
But another important thing here is that we realize that if we're just...

604
00:33:47,175 --> 00:33:52,318
like trying to explain something to the player, but there's still a space for

605
00:33:52,318 --> 00:33:57,181
completing the level without using that principle or using that gameplay element that we're showing.

606
00:33:57,181 --> 00:34:01,344
And sometimes, sometimes players will just skip it and...

607
00:34:02,344 --> 00:34:06,866
And then they'll get frustrated later when they'll need this knowledge.

608
00:34:06,866 --> 00:34:10,147
So basically people need a reason to learn.

609
00:34:10,147 --> 00:34:14,809
And in our case, a reason is usually that they can't complete the level

610
00:34:14,809 --> 00:34:17,510
until they try what we want them to try.

611
00:34:17,510 --> 00:34:20,711
And in most cases, they don't really need to read the text.

612
00:34:20,711 --> 00:34:24,152
They can just play around with the object and they'll find out how it works.

613
00:34:26,500 --> 00:34:29,122
And here is the most important principle.

614
00:34:29,122 --> 00:34:32,644
And you'll see the proof for that principle in our game,

615
00:34:32,644 --> 00:34:34,986
in our levels quite a lot.

616
00:34:34,986 --> 00:34:37,628
It's OK to ignore any of the principles.

617
00:34:37,628 --> 00:34:42,211
And the only requirement here is that there

618
00:34:42,211 --> 00:34:43,752
should be a reason for that.

619
00:34:43,752 --> 00:34:45,493
And in our case, the reason is usually

620
00:34:46,234 --> 00:34:50,235
some cool combinations, or combinations of objects, or some cool idea.

621
00:34:50,235 --> 00:34:53,857
And the benefits of having it, the, the coolness factor of it,

622
00:34:53,857 --> 00:34:59,300
is much higher than the, than the harm that it causes by violating some of

623
00:34:59,300 --> 00:35:03,922
those principles. So it's okay. We, we think it's okay to, to break the rules,

624
00:35:03,922 --> 00:35:09,244
and in many cases it works for good. So that's it for the principles.

625
00:35:09,244 --> 00:35:14,927
I also wanted to share some some things that we do with the level ordering.

626
00:35:15,537 --> 00:35:21,121
And this spreadsheet might look a bit complicated, but we kind of got used to it.

627
00:35:21,121 --> 00:35:25,843
So it's really a good visual tool for us to see how the levels are going.

628
00:35:25,843 --> 00:35:30,986
It basically has the list of the levels, the list of the gameplay objects, like elements,

629
00:35:30,986 --> 00:35:40,732
and we can see which objects, which object is used in which level, how the unlocking rate looks.

630
00:35:41,212 --> 00:35:46,856
By this grey area you can see the tutorial levels, you can vary the arcade and puzzle kind of levels.

631
00:35:46,856 --> 00:35:49,038
So it's pretty cool.

632
00:35:49,038 --> 00:35:55,342
And we're also usually trying to make the last level not the hardest one.

633
00:35:55,342 --> 00:36:01,147
I mean the last in the level box, which is basically like each 25, each one of those have 25 levels.

634
00:36:01,983 --> 00:36:05,585
The hardest level is usually the one before the last one.

635
00:36:05,585 --> 00:36:08,907
And the purpose of the last one is,

636
00:36:08,907 --> 00:36:10,327
it's sort of directed to the goal

637
00:36:10,327 --> 00:36:12,769
of keeping players hungry for more.

638
00:36:12,769 --> 00:36:14,790
It's usually not very hard,

639
00:36:14,790 --> 00:36:17,631
to avoid causing any frustrations,

640
00:36:17,631 --> 00:36:18,572
but it's really inventive.

641
00:36:18,572 --> 00:36:20,993
We're trying to keep some really cool idea

642
00:36:20,993 --> 00:36:23,174
to the last level within the box.

643
00:36:23,174 --> 00:36:27,076
And it should basically communicate to the player

644
00:36:27,076 --> 00:36:29,338
that the best part is still waiting ahead,

645
00:36:29,338 --> 00:36:31,879
and that we haven't run out of ideas.

646
00:36:33,437 --> 00:36:38,300
And another thing that proves that we haven't run out of ideas are the new gameplay elements that we add.

647
00:36:38,300 --> 00:36:47,865
And from the very beginning, with every update we set quite high bar of expectations by adding new gameplay elements with every update.

648
00:36:47,865 --> 00:36:57,351
And we weren't sure how many of those would be able to come out, but so far we've been quite cool inventing those.

649
00:36:58,637 --> 00:37:02,000
And our process of coming out with those gameplay elements,

650
00:37:02,000 --> 00:37:04,181
that's really changed the mechanics, by the way,

651
00:37:04,181 --> 00:37:05,962
in many cases.

652
00:37:05,962 --> 00:37:08,944
Well, the process is quite traditional.

653
00:37:08,944 --> 00:37:11,606
We brainstorm, we pick the ideas we like most.

654
00:37:12,100 --> 00:37:20,283
We try drafting the levels on the paper to understand whether we will be able to create

655
00:37:20,283 --> 00:37:21,903
some cool set of levels based on that.

656
00:37:21,903 --> 00:37:29,125
Then we prototype it and tweak the parameters, start creating the levels and put the final

657
00:37:29,125 --> 00:37:29,425
art.

658
00:37:30,177 --> 00:37:36,101
And from the very beginning, the logic for adding new elements for us was to add more

659
00:37:36,101 --> 00:37:37,702
directional freedom to the candy.

660
00:37:37,702 --> 00:37:42,945
So there was a gravity affecting, obviously pulling the candy down, so we needed something

661
00:37:42,945 --> 00:37:44,066
that would move it up.

662
00:37:44,066 --> 00:37:46,127
So here goes a bubble.

663
00:37:46,127 --> 00:37:49,149
And then we need some horizontal freedom as well.

664
00:37:49,149 --> 00:37:50,470
And we add the air cushions.

665
00:37:50,953 --> 00:37:56,116
And what's also cool about them and what we're trying to keep with all the elements that we add,

666
00:37:56,116 --> 00:38:01,300
is that those are intuitive and fun to interact with. So it's fun to pop the bubbles,

667
00:38:01,300 --> 00:38:08,784
it's fun to click on the air cushions because they make farting sounds, and stuff like this,

668
00:38:08,784 --> 00:38:13,227
it's really cool, it's important to keep the game entertaining.

669
00:38:13,227 --> 00:38:14,388
All right, so...

670
00:38:16,492 --> 00:38:23,776
Another, so adding new stuff is cool, but we also have a luxury to learn from, like,

671
00:38:23,776 --> 00:38:31,501
each time we add new stuff and do new update, we can and we should learn and analyze what

672
00:38:31,501 --> 00:38:33,002
we did right, what we did wrong.

673
00:38:33,002 --> 00:38:38,685
And not only we can use this knowledge to, you know, while adding new stuff, we can also

674
00:38:38,685 --> 00:38:43,828
look at the existing stuff and maybe tweak it a bit, maybe improve it, maybe change it.

675
00:38:44,236 --> 00:38:50,103
There's some controversy about changing the levels in the game after they're being released.

676
00:38:50,103 --> 00:38:59,195
We feel it's okay to do it if it doesn't harm the scores of the players and if we're not going too wild with that.

677
00:38:59,195 --> 00:39:01,658
So, to understand what needs to be changed...

678
00:39:02,553 --> 00:39:04,974
We're using several sources of information.

679
00:39:04,974 --> 00:39:07,775
And one of them, of course, being user reviews.

680
00:39:07,775 --> 00:39:11,676
This is a great channel to receive the feedback overall.

681
00:39:11,676 --> 00:39:15,656
And you can quite often see also the feedback about the levels.

682
00:39:15,656 --> 00:39:18,377
Like this one saying that the level 9 in one of them

683
00:39:18,377 --> 00:39:19,957
boxes is impossible.

684
00:39:19,957 --> 00:39:21,078
Why would you do this to me?

685
00:39:21,078 --> 00:39:24,658
And if we see several of those, there's

686
00:39:24,658 --> 00:39:27,339
obviously something wrong with that level.

687
00:39:29,443 --> 00:39:34,945
Another great thing is to have players as fans on your Facebook page.

688
00:39:34,945 --> 00:39:44,349
Not only it brings some marketing possibilities, but also it's a great way to communicate, to talk to your players.

689
00:39:44,349 --> 00:39:52,793
And we're also from time to time asking some things that help us to make decisions on how we move forward and how we maybe improve the existing stuff.

690
00:39:54,803 --> 00:39:58,804
Surprisingly, Game Center can be also used as a statistics tool.

691
00:39:58,804 --> 00:40:02,145
So we keep leaderboards for each one of the level boxes

692
00:40:02,145 --> 00:40:03,285
in the game.

693
00:40:03,285 --> 00:40:05,725
And we can see, in this case, the amount

694
00:40:05,725 --> 00:40:08,886
of weekly submitted scores for each of the level box.

695
00:40:08,886 --> 00:40:12,887
So this way, we can see that obviously not all players

696
00:40:12,887 --> 00:40:16,268
reach the very latest levels of the game.

697
00:40:16,268 --> 00:40:17,388
We have plenty of those.

698
00:40:17,388 --> 00:40:19,529
We've been updating for one and a half year.

699
00:40:19,529 --> 00:40:23,329
But still, we want as many players as possible

700
00:40:23,329 --> 00:40:23,990
to get to the end.

701
00:40:24,586 --> 00:40:32,888
So at some point we rearranged the level boxes a bit, we tweaked some levels, and we were able to

702
00:40:32,888 --> 00:40:37,950
improve the percentage of the players that reach the end of the game by 5%.

703
00:40:37,950 --> 00:40:42,591
It might sound like not a big number, but considering the audience of the game, it's huge.

704
00:40:44,902 --> 00:40:49,906
And there's, of course, more complicated, more complex and

705
00:40:49,906 --> 00:40:53,229
advanced ways of getting data, getting statistics, like

706
00:40:53,229 --> 00:40:57,213
Flurry. And for level designers, the most important

707
00:40:57,213 --> 00:41:01,137
metrics are failing rate and skipping rate.

708
00:41:01,817 --> 00:41:04,138
which we track for every level in the game.

709
00:41:04,138 --> 00:41:08,441
And basically, failing rate is the amount

710
00:41:08,441 --> 00:41:11,483
when players see the sad face of unknown.

711
00:41:11,483 --> 00:41:14,585
When the candy gets broken, when it falls out of the screen,

712
00:41:14,585 --> 00:41:15,385
these kind of things.

713
00:41:15,385 --> 00:41:17,967
So if this parameter is high, usually it

714
00:41:17,967 --> 00:41:19,388
means that players get the understand

715
00:41:19,388 --> 00:41:22,590
how to solve the level, but they can't execute it well.

716
00:41:22,590 --> 00:41:26,432
So it means that probably we need to simplify

717
00:41:26,432 --> 00:41:28,153
the arcade part of the level.

718
00:41:29,144 --> 00:41:36,771
If the skipping rate is too high, then probably players can manage the difficulty, the timing

719
00:41:36,771 --> 00:41:41,235
challenge of the level, but they just don't understand the puzzle component of it.

720
00:41:41,235 --> 00:41:49,603
So then we maybe should simplify it a bit or add some tip to the level that would help

721
00:41:49,603 --> 00:41:51,505
players to understand how to solve it.

722
00:41:52,294 --> 00:41:56,897
So, it's really a tough balance really.

723
00:41:56,897 --> 00:42:02,020
On the one side we want as many players as possible to reach the very latest levels in

724
00:42:02,020 --> 00:42:05,582
the game and then impatiently waiting for updates.

725
00:42:05,582 --> 00:42:09,264
At the same time we of course want to keep some challenges in the game.

726
00:42:09,264 --> 00:42:17,730
So it's a really hard balance and we're trying to keep it and we're trying to learn and that's

727
00:42:17,730 --> 00:42:19,411
one of our biggest challenges.

728
00:42:19,411 --> 00:42:19,571
So...

729
00:42:21,097 --> 00:42:29,302
The results that we got so far as level designers, we created more than 900 levels and less than

730
00:42:29,302 --> 00:42:33,884
half of them ended up in our games, obviously because we're trying to create more levels

731
00:42:33,884 --> 00:42:39,008
that we need and then we pick the very best of them and we put them in our games.

732
00:42:39,008 --> 00:42:43,510
And we are proud to constantly invent new things, new gameplay elements, and there have

733
00:42:43,510 --> 00:42:46,352
been already more than 22 of them added to the game.

734
00:42:47,180 --> 00:42:49,501
But the most important achievement, of course,

735
00:42:49,501 --> 00:42:51,682
and it directly serves the goal that I've

736
00:42:51,682 --> 00:42:56,404
highlighted in the beginning, is that players want more.

737
00:42:56,404 --> 00:42:58,845
And that pretty much fits the expectations

738
00:42:58,845 --> 00:43:01,106
of this little green guy.

739
00:43:01,106 --> 00:43:02,887
All right, thank you very much.

740
00:43:02,887 --> 00:43:04,688
Michael and I will get to answer questions.

741
00:43:04,688 --> 00:43:05,148
Thank you very much.

742
00:43:05,148 --> 00:43:11,051
Is there a microphone?

743
00:43:17,306 --> 00:43:28,593
I have one question. So in the updates of Color Road, you said it's data-driven, so did you change any existing data levels?

744
00:43:28,593 --> 00:43:41,522
And how did you change that so that it doesn't affect the balance of the game or the existing saved data of the player?

745
00:43:41,522 --> 00:43:45,284
Well, we're making sure that on the technical side there's no problems happening.

746
00:43:45,874 --> 00:43:53,921
Sometimes we, like, there's some bugs of course coming up and we're like trying to fix them as fast as possible.

747
00:43:53,921 --> 00:43:59,565
But basically it's more of a technical challenge. It can be solved pretty easily.

748
00:43:59,565 --> 00:44:06,330
From the design perspective, the most important thing is that players wouldn't really get upset about this kind of change.

749
00:44:06,330 --> 00:44:13,236
And from our experience, they don't. They notice that maybe something has changed, but they're okay with it.

750
00:44:13,236 --> 00:44:13,516
Thank you.

751
00:44:16,180 --> 00:44:18,621
I'd like to ask, how just...

752
00:44:18,621 --> 00:44:19,221
Sorry.

753
00:44:19,221 --> 00:44:21,242
Yeah, go for it.

754
00:44:21,242 --> 00:44:21,442
Sorry.

755
00:44:21,442 --> 00:44:24,983
How you just came to the ideas of your games?

756
00:44:24,983 --> 00:44:26,984
I mean, this train, this rope,

757
00:44:26,984 --> 00:44:31,205
and actually about the rope, I'm not sure who is this guy.

758
00:44:31,205 --> 00:44:31,425
Sure.

759
00:44:31,425 --> 00:44:35,847
Sorry, how did we come up with the ideas for the game?

760
00:44:35,847 --> 00:44:38,568
So, yeah, that's a funny thing.

761
00:44:39,254 --> 00:44:42,295
I came up for the idea for Trainyard while I was riding a train to work.

762
00:44:42,295 --> 00:44:44,315
And so I was just like, wait a second, this would, yeah,

763
00:44:44,315 --> 00:44:49,396
I really wanted to do something where there was something with paint.

764
00:44:49,396 --> 00:44:54,037
I mean, there's no real paint in the game, but the idea of colors mixing together.

765
00:44:54,037 --> 00:44:58,598
And then it really felt like I was almost discovering the play mechanics

766
00:44:58,598 --> 00:45:00,118
rather than inventing them.

767
00:45:00,118 --> 00:45:02,499
It was just like, once I started looking, I was like, wow,

768
00:45:02,499 --> 00:45:05,359
there's like a whole lot of really interesting possibilities here.

769
00:45:05,941 --> 00:45:12,906
Yeah, and for Cut the Rope, we basically had the physics engine, the rope engine, already in place.

770
00:45:12,906 --> 00:45:18,449
It was done for our previous game, but it never was used there. So then we started brainstorming

771
00:45:18,449 --> 00:45:24,253
about what can be the gameplay we can build around that rope physics. And it was really

772
00:45:24,253 --> 00:45:29,237
a good starting point. We made several prototypes around the rope and one of them was the best,

773
00:45:29,237 --> 00:45:30,678
and it ended up being the game.

774
00:45:31,953 --> 00:45:33,593
And this green thing?

775
00:45:33,593 --> 00:45:35,854
Oh, the green thing.

776
00:45:35,854 --> 00:45:39,275
It's just a product of many, many doodles, you know,

777
00:45:39,275 --> 00:45:40,235
and experimenting.

778
00:45:40,235 --> 00:45:44,796
And he really plays a big role in the success of the game,

779
00:45:44,796 --> 00:45:49,458
I believe, because he's kind of like a baby monster.

780
00:45:49,958 --> 00:45:54,001
in a way he encourages the parental feelings.

781
00:45:54,001 --> 00:45:58,965
So each level is not about getting some amount of score,

782
00:45:58,965 --> 00:46:04,789
but rather it's satisfying the needs of this little green cute creature.

783
00:46:04,789 --> 00:46:09,732
So the emotional goal is much bigger than any competitive goal.

784
00:46:09,732 --> 00:46:12,675
Thank you very much.

785
00:46:12,675 --> 00:46:13,195
Thanks.

786
00:46:14,157 --> 00:46:16,700
Hi, I have a pretty picky question for Matt.

787
00:46:16,700 --> 00:46:17,180
Oh boy.

788
00:46:17,180 --> 00:46:21,324
I love train yard, but I noticed the color mixing trains

789
00:46:21,324 --> 00:46:23,526
don't follow the primary colors of light.

790
00:46:23,526 --> 00:46:25,628
And I just wondered if that was a deliberate decision

791
00:46:25,628 --> 00:46:26,348
on your part.

792
00:46:26,348 --> 00:46:28,871
Well, yeah, I've had a few people complain

793
00:46:28,871 --> 00:46:31,934
about whether I should be using subtractive or additive color

794
00:46:31,934 --> 00:46:32,514
systems.

795
00:46:34,605 --> 00:46:38,368
I mean the basic thing is just that people seem to understand

796
00:46:38,368 --> 00:46:41,550
subtractive color systems more than additives, so that

797
00:46:41,550 --> 00:46:44,892
people seem to really understand the fact that blue plus yellow makes green

798
00:46:44,892 --> 00:46:48,175
rather than using like magenta and whatever so it's

799
00:46:48,175 --> 00:46:52,357
yeah I mean that was really the reason people just seem to really associate

800
00:46:52,357 --> 00:46:53,638
with it and I think part of it was just

801
00:46:53,638 --> 00:46:56,760
because of the fact that the game was really originally

802
00:46:57,323 --> 00:47:00,764
was supposed to be about like these cars of paint and there was like a

803
00:47:00,764 --> 00:47:04,485
almost like a paint crash on the middle of the railroad where these colors were mixing together.

804
00:47:04,485 --> 00:47:05,806
Yeah. Great, thanks.

805
00:47:05,806 --> 00:47:13,748
So Matt, you mentioned that you'd created some levels that took you like up to eight hours to

806
00:47:13,748 --> 00:47:18,709
solve. I'm wondering how do you go about making a puzzle that's hard for you yourself to solve,

807
00:47:18,709 --> 00:47:23,791
but not impossible? Like how do you know that you've created something that's still solvable?

808
00:47:24,256 --> 00:47:26,017
while still challenging yourself?

809
00:47:26,017 --> 00:47:29,118
So the problem with Trainyard is that there's no way for me to really know

810
00:47:29,118 --> 00:47:30,759
whether something's solvable at all.

811
00:47:30,759 --> 00:47:35,061
So I would just literally just sit there and have kind of a...

812
00:47:35,061 --> 00:47:37,683
Basically, my first step is just to work it out mathematically,

813
00:47:37,683 --> 00:47:40,164
whether the colors add up and the number of trains add up.

814
00:47:40,164 --> 00:47:43,126
And then just make this puzzle and try and solve it,

815
00:47:43,126 --> 00:47:45,727
and try and solve it, and try and solve it.

816
00:47:45,727 --> 00:47:49,869
And I have a few, like a pile of puzzles that I've never been able to solve

817
00:47:49,869 --> 00:47:51,230
that are in my pile of like...

818
00:47:51,737 --> 00:47:54,700
Moby Dick puzzles that one day I will conquer.

819
00:47:54,700 --> 00:47:58,023
But yeah, it's just really a process where I try to solve them,

820
00:47:58,023 --> 00:48:00,406
and sometimes I can't, and sometimes I can.

821
00:48:00,406 --> 00:48:07,453
How much time does a single puzzle take for a level designer to make?

822
00:48:07,453 --> 00:48:11,237
And how many level designers were working on the later levels of Cut the Rope?

823
00:48:12,686 --> 00:48:21,908
It usually takes, I would say, several hours, like maybe two hours for the first iteration

824
00:48:21,908 --> 00:48:23,789
of the puzzle.

825
00:48:23,789 --> 00:48:29,670
And then, of course, when we have the full set of the puzzle for the level box, then

826
00:48:29,670 --> 00:48:34,631
we all play them, we do play testing, and then more iterations add.

827
00:48:34,631 --> 00:48:40,432
So it's like an iterational process and it's not that much related to some particular level,

828
00:48:40,432 --> 00:48:42,533
it's rather looking at the levels as a whole.

829
00:48:43,333 --> 00:48:48,936
And how many people work in the later levels of Cut the Rope?

830
00:48:48,936 --> 00:48:55,200
So we have, I think, three level designers at the moment working on the levels for our

831
00:48:55,200 --> 00:48:55,440
game.

832
00:48:55,440 --> 00:48:57,081
Alright, thanks.

833
00:48:57,081 --> 00:48:57,621
Thank you.

834
00:48:57,621 --> 00:48:58,942
Awesome, yeah.

835
00:48:58,942 --> 00:49:07,426
Samyan, when I saw, when you showed your spreadsheet, I saw you had a difficulty rating on a scale

836
00:49:07,426 --> 00:49:08,167
of 1 to 10.

837
00:49:08,167 --> 00:49:09,928
In a pre-release state before you have...

838
00:49:10,990 --> 00:49:15,051
like high volumes of playtesting, how do you get a reliable measure of difficulty?

839
00:49:15,715 --> 00:49:17,096
There is no reliable measure.

840
00:49:17,096 --> 00:49:18,757
It's a gut feeling, really.

841
00:49:18,757 --> 00:49:23,861
And we were asking different people to play the levels

842
00:49:23,861 --> 00:49:26,783
and then put the difficulty number that they felt,

843
00:49:26,783 --> 00:49:27,844
how difficult it is.

844
00:49:27,844 --> 00:49:29,805
And then we were trying to calculate the average.

845
00:49:29,805 --> 00:49:31,186
But then, you know, you can't really.

846
00:49:31,186 --> 00:49:34,969
The trickiest part is then you can measure the difficulty

847
00:49:34,969 --> 00:49:36,910
of the arcade gameplay.

848
00:49:36,910 --> 00:49:38,932
But with the puzzle, you have no idea.

849
00:49:38,932 --> 00:49:42,875
Like one person can come out with some solution right away,

850
00:49:42,875 --> 00:49:45,477
and some will spend like several hours completing it.

851
00:49:46,137 --> 00:49:46,497
Thank you.

852
00:49:46,497 --> 00:49:47,657
Thanks.

853
00:49:47,657 --> 00:49:50,538
This is for Trainyard.

854
00:49:50,538 --> 00:49:52,598
How do you determine the grid size

855
00:49:52,598 --> 00:49:54,859
and how does that affect designing your levels?

856
00:49:54,859 --> 00:49:57,079
That's a good question.

857
00:49:57,079 --> 00:49:58,820
So the story of Trainyard is actually

858
00:49:58,820 --> 00:50:00,560
that it started out as a Flash game

859
00:50:00,560 --> 00:50:02,861
and originally it had an eight by eight grid

860
00:50:02,861 --> 00:50:05,822
and then I never released the Flash game.

861
00:50:05,822 --> 00:50:07,402
It was just like a prototype basically.

862
00:50:07,402 --> 00:50:10,363
And then when I put it on iPhone,

863
00:50:10,363 --> 00:50:11,523
eight by eight wasn't working

864
00:50:11,523 --> 00:50:14,204
and I really liked the kind of...

865
00:50:15,124 --> 00:50:20,489
not quite balanced of having that middle row with seven, like I really like that for some reason.

866
00:50:20,489 --> 00:50:26,675
And yeah, so basically seven worked really well with being something that your finger can actually

867
00:50:26,675 --> 00:50:30,138
go through the puzzle really. Was there a second part of the question or that was the...

868
00:50:30,138 --> 00:50:33,081
Well actually I guess, wouldn't you make it...

869
00:50:33,951 --> 00:50:38,856
bigger on the iPad, like maybe more grids, a bigger puzzle, or, I mean, or you thought about doing that?

870
00:50:38,856 --> 00:50:45,302
In theory, yeah. Like, the way the game works, adding even one row would exponentially increase the amount of possibilities,

871
00:50:45,302 --> 00:50:51,048
which is a great thing, and I'm, at some point I may consider making a version that has more rows.

872
00:50:51,048 --> 00:50:54,212
But yeah, it completely, like the amount of possibilities...

873
00:50:54,890 --> 00:50:59,714
With the 7x7 grid, right now there are over 40,000 player-made puzzles,

874
00:50:59,714 --> 00:51:02,497
and there's still, like, things that surprise me every day.

875
00:51:02,497 --> 00:51:07,401
So it's pretty crazy how much possibility there is there, really.

876
00:51:07,401 --> 00:51:10,825
Hi, I was wondering what your total, sort of, development time was,

877
00:51:10,825 --> 00:51:13,527
and if your total budget was what these cost.

878
00:51:15,872 --> 00:51:21,276
It's a bit tricky to say what the development time for Cut the Rope because the physics

879
00:51:21,276 --> 00:51:24,859
engine and the rope engine were developed as a part of a previous project.

880
00:51:24,859 --> 00:51:30,143
But approximately it's around maybe four or five months I would say.

881
00:51:30,143 --> 00:51:32,525
But that was only the initial game.

882
00:51:32,525 --> 00:51:37,168
Since it was released like one and a half year ago we've been constantly working on

883
00:51:37,168 --> 00:51:37,248
it.

884
00:51:37,248 --> 00:51:41,531
So you can say that like four months and one and a half year.

885
00:51:42,800 --> 00:51:47,225
And as for the budget, working on Cut the Rope,

886
00:51:47,225 --> 00:51:49,628
we pretty much didn't have any budget.

887
00:51:49,628 --> 00:51:54,073
It was just a bunch of guys working from home back then

888
00:51:54,073 --> 00:51:55,855
and just doing what they like.

889
00:51:55,855 --> 00:51:59,620
I think that's it.

890
00:51:59,620 --> 00:52:00,140
All right.

891
00:52:00,140 --> 00:52:00,461
All right.

892
00:52:00,461 --> 00:52:01,262
Thank you.

893
00:52:01,262 --> 00:52:02,023
Thank you very much.

