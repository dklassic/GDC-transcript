1
00:00:05,948 --> 00:00:08,250
All right, I think we're about ready to get started.

2
00:00:08,250 --> 00:00:10,872
Hi, my name is Anthony Newman.

3
00:00:10,872 --> 00:00:14,415
Welcome to my talk about the melee system of The Last of Us.

4
00:00:14,415 --> 00:00:15,596
Thanks so much for coming.

5
00:00:15,596 --> 00:00:19,899
We're going to talk about some of the techniques and decisions

6
00:00:19,899 --> 00:00:22,241
that went into creating the hand-to-hand fighting

7
00:00:22,241 --> 00:00:23,161
system of The Last of Us.

8
00:00:23,161 --> 00:00:24,883
It's going to be a pretty broad talk.

9
00:00:24,883 --> 00:00:27,625
We're going to be talking about some aesthetic stuff,

10
00:00:27,625 --> 00:00:29,927
some mechanical design, and then getting

11
00:00:29,927 --> 00:00:32,128
into the nitty gritty of some script syntax.

12
00:00:32,128 --> 00:00:33,890
So let's get started.

13
00:00:34,969 --> 00:00:38,370
First, fair warning, this talk is rated M for mature.

14
00:00:38,370 --> 00:00:40,331
There is quite a bit of violence.

15
00:00:40,331 --> 00:00:43,212
Melee system is a system of choreographed violence,

16
00:00:43,212 --> 00:00:45,613
so it's kind of unavoidable when talking about it.

17
00:00:45,613 --> 00:00:46,653
So fair warning.

18
00:00:46,653 --> 00:00:50,114
Also, spoiler alert, if you haven't played

19
00:00:50,114 --> 00:00:51,435
later sections of The Last of Us,

20
00:00:51,435 --> 00:00:52,935
I'm gonna be showing some of that stuff off,

21
00:00:52,935 --> 00:00:53,956
so fair warning.

22
00:00:53,956 --> 00:00:57,937
So before we talk about how we did it,

23
00:00:57,937 --> 00:00:59,037
let's take a look at what we did.

24
00:00:59,037 --> 00:01:00,378
Let's look at what we shipped.

25
00:01:01,953 --> 00:01:07,498
So we had melee for two playable characters being Joel and Ellie.

26
00:01:07,498 --> 00:01:11,321
We had three different ally types, so Bill with his machete,

27
00:01:11,321 --> 00:01:12,842
Ellie with her switchblade,

28
00:01:12,842 --> 00:01:15,264
and then Tess, Tommy, and Henry

29
00:01:15,264 --> 00:01:17,626
with just their fists.

30
00:01:17,626 --> 00:01:23,191
We had five enemy types being humans and the four infected classes,

31
00:01:23,191 --> 00:01:23,872
seven weapons.

32
00:01:24,872 --> 00:01:29,313
And all this added up to nearly a thousand individual melee moves.

33
00:01:29,313 --> 00:01:31,454
And that was just for single player.

34
00:01:31,454 --> 00:01:35,256
We had a totally separate melee system for multiplayer PvP.

35
00:01:35,256 --> 00:01:40,378
And all this never exceeded a 4 megabyte memory footprint.

36
00:01:40,378 --> 00:01:46,640
So this is just a graph visualization of the melee system.

37
00:01:46,640 --> 00:01:48,261
This is just single player.

38
00:01:48,261 --> 00:01:51,282
So as you can see, it's pretty large.

39
00:01:51,282 --> 00:01:52,402
There's a lot of moves.

40
00:01:52,402 --> 00:01:53,183
It's pretty complex.

41
00:01:54,659 --> 00:01:57,759
So in Naughty Dog we always try to do more with less.

42
00:01:57,759 --> 00:02:00,560
We try to get a lot done with a really lean and mean team.

43
00:02:00,560 --> 00:02:04,100
So let's take a look at who we had working on Melee.

44
00:02:04,100 --> 00:02:07,161
So we had one designer, yours truly.

45
00:02:07,161 --> 00:02:12,002
We had two animators, this is Lee Davis who specialized on the technical

46
00:02:12,002 --> 00:02:14,182
side of animations.

47
00:02:14,182 --> 00:02:17,803
And this is Ryan McGeary who specialized more on the cinematic side, so facial

48
00:02:17,803 --> 00:02:19,343
animations, the more cinematic moves.

49
00:02:21,183 --> 00:02:26,804
We had one programmer, Ian Jones, who has the brain of ten ordinary programmers.

50
00:02:26,804 --> 00:02:33,486
And he also did a lot of work on player control, so aiming, movement, crouch, stuff like that.

51
00:02:33,486 --> 00:02:36,287
So we really only used like a third of his time.

52
00:02:36,287 --> 00:02:40,008
So that was the team.

53
00:02:40,008 --> 00:02:42,509
About three and a third people to make the system.

54
00:02:42,509 --> 00:02:44,970
So let's take a look at our overall direction.

55
00:02:44,970 --> 00:02:47,430
We had two goals that we were trying to hit.

56
00:02:48,262 --> 00:02:52,704
First we wanted to support the tone we were trying to establish with The Last of Us

57
00:02:52,704 --> 00:02:55,525
and build on the world we were trying to create.

58
00:02:55,525 --> 00:02:58,987
We wanted melee gameplay that was brutal and visceral

59
00:02:58,987 --> 00:03:03,570
and conveyed the high stakes, survival at all costs, world of the game.

60
00:03:05,015 --> 00:03:08,779
Secondly, we wanted melee to take on a greater role in combat.

61
00:03:08,779 --> 00:03:12,484
In the world of The Last of Us, people aren't making bullets anymore, so ammo is

62
00:03:12,484 --> 00:03:15,707
much more scarce, and so melee becomes a lot more important.

63
00:03:15,707 --> 00:03:20,112
Also, with the infected classes, who obviously don't use guns,

64
00:03:20,112 --> 00:03:22,094
melee becomes a lot more important for them as well.

65
00:03:23,426 --> 00:03:26,588
So, there's really two stories I want to tell today.

66
00:03:26,588 --> 00:03:29,571
The first is the story of design.

67
00:03:29,571 --> 00:03:32,032
How do we create satisfying mechanics?

68
00:03:32,032 --> 00:03:34,975
How do we hit the aesthetic tone that we're going for?

69
00:03:34,975 --> 00:03:38,477
The second story is implementation.

70
00:03:38,477 --> 00:03:39,458
How are we going to ship this?

71
00:03:39,458 --> 00:03:41,059
How are we going to get it to fit into memory?

72
00:03:41,059 --> 00:03:42,360
How are we going to actually do this?

73
00:03:42,360 --> 00:03:45,362
So let's take a look at design first.

74
00:03:46,237 --> 00:03:52,769
So when we're talking about design, it's not just about mechanics, it's also about the look and the feel of the combat.

75
00:03:52,769 --> 00:03:58,420
What's the tone that you're trying to hit? How do you convey an emotion through your combat?

76
00:04:00,118 --> 00:04:03,780
So in Naughty Dog, the game's story is the spine of all our decisions.

77
00:04:03,780 --> 00:04:07,981
And that doesn't just mean the plot, like the narrative of the story,

78
00:04:07,981 --> 00:04:11,162
it's also the tone and the genre that the story is trying to establish.

79
00:04:11,162 --> 00:04:16,003
The Last of Us is a story of human struggle in a harsh, cruel world.

80
00:04:16,643 --> 00:04:21,225
The setting is just a backdrop to a story about humanity.

81
00:04:21,225 --> 00:04:25,487
The pandemic isn't what's important, the infected aren't what's important.

82
00:04:25,487 --> 00:04:30,268
What's important is how human beings react into these harsh situations.

83
00:04:30,268 --> 00:04:36,650
To emphasize this harsh, cruel world, melee has to be brutal.

84
00:04:36,650 --> 00:04:41,792
The world has to be high stakes and that's what really brings out the human struggles

85
00:04:41,792 --> 00:04:44,953
of these characters is the pressure of these high stakes situations.

86
00:04:45,863 --> 00:04:50,927
So how do we do that? One of the first ways is through creating a sense of impact.

87
00:04:50,927 --> 00:04:55,411
If you want people to get invested enough in your combat to feel an emotion,

88
00:04:55,411 --> 00:04:59,394
they have to believe it, they have to feel it.

89
00:04:59,394 --> 00:05:01,015
So let's take a look at some techniques that we used for that.

90
00:05:01,015 --> 00:05:06,600
So we started out by looking at a lot of MMA reference. So this is arguably some of the

91
00:05:06,600 --> 00:05:09,662
hardest impacts out there, these MMA knockouts.

92
00:05:10,325 --> 00:05:14,226
And there's something interesting you'll notice about what's physically happening here,

93
00:05:14,226 --> 00:05:18,447
which is that most of the velocity of the impact is expressed through the person's head.

94
00:05:18,447 --> 00:05:23,049
Their actual body moves very little comparatively.

95
00:05:23,049 --> 00:05:27,410
And this serves, ironically, to make the impact feel much harder,

96
00:05:27,410 --> 00:05:29,711
but it also makes the people feel heavier.

97
00:05:29,711 --> 00:05:33,172
You know, it gives them a sense of weight that makes them seem more believable.

98
00:05:34,302 --> 00:05:40,504
There's a problem with using real world reference all the time, which is that real life is incredibly

99
00:05:40,504 --> 00:05:41,245
confusing.

100
00:05:41,245 --> 00:05:47,667
If you've ever watched YouTube videos of street fights or MMA fights, often it devolves into

101
00:05:47,667 --> 00:05:50,488
this chaos that's not really going to work for a game.

102
00:05:50,488 --> 00:05:54,449
So how do you make a fight readable and have a sense of impact at the same time?

103
00:05:55,861 --> 00:05:58,462
So this is kind of what we settled on.

104
00:05:58,462 --> 00:06:05,364
Notice the really long pauses on the wind-up and on the follow-through of the punches.

105
00:06:05,364 --> 00:06:10,266
This is what makes these punches seem distinct and readable.

106
00:06:10,266 --> 00:06:15,948
The actual swing itself is only like two or three frames, and that makes it feel really

107
00:06:15,948 --> 00:06:17,329
fast and impactful.

108
00:06:17,975 --> 00:06:21,955
And then again you can kind of see from the enemy's reaction, we were kind of following

109
00:06:21,955 --> 00:06:27,217
from the MMA reference of moving the head and the upper shoulders way more than the

110
00:06:27,217 --> 00:06:30,657
rest of his body, kind of trying to make him feel a bit heavier.

111
00:06:30,657 --> 00:06:36,498
Another way of creating a sense of impact is with sudden and drastic changes in momentum.

112
00:06:36,498 --> 00:06:36,839
In these clips...

113
00:06:36,839 --> 00:06:42,620
Can we lower it down just a bit?

114
00:06:43,437 --> 00:06:48,267
In these clips you can see there isn't a lot of bounce from the head when it hits the surface.

115
00:06:48,267 --> 00:06:50,532
Let's take a look at this in slow motion.

116
00:06:54,457 --> 00:07:00,141
So what's happening here is that the kinetic energy of the guy's head moving towards the wall or the counter

117
00:07:00,141 --> 00:07:05,786
isn't going anywhere. The only place it's going is internally as trauma.

118
00:07:05,786 --> 00:07:09,669
All of that energy is transferred completely into his cells.

119
00:07:09,669 --> 00:07:13,872
And you don't think about this consciously, but if you're looking at it, you kind of feel it.

120
00:07:13,872 --> 00:07:17,274
You understand it, that that is hurting.

121
00:07:17,274 --> 00:07:21,477
If he was bouncing off of the surface, it would look like WWF or something,

122
00:07:21,477 --> 00:07:23,719
and it wouldn't be as believable of an impact.

123
00:07:26,382 --> 00:07:30,084
So earlier I brought up humanity as a concept that's important to the game's story.

124
00:07:30,084 --> 00:07:34,946
This is true, but humanity is also something that makes everything in the game much more

125
00:07:34,946 --> 00:07:37,988
affecting. It really punches up all the action that you're seeing.

126
00:07:37,988 --> 00:07:41,569
The humanity that's expressed through the characters

127
00:07:41,569 --> 00:07:43,130
makes you empathize with them.

128
00:07:43,130 --> 00:07:47,092
And when you empathize, you feel what is happening to them along with them.

129
00:07:47,092 --> 00:07:49,774
And that makes the actions seem a lot more impactful and real.

130
00:07:50,694 --> 00:07:58,593
So we wanted our fights to come off as life or death struggles between real human characters driven by self-preservation.

131
00:07:58,593 --> 00:07:59,755
So how did we do that?

132
00:08:00,609 --> 00:08:04,432
One major way we expressed humanity was through facial animations.

133
00:08:04,432 --> 00:08:08,014
So we choreographed the combat systems so that there were a lot of opportunities for

134
00:08:08,014 --> 00:08:08,835
the camera to get up close

135
00:08:08,835 --> 00:08:11,777
to see the faces of these characters

136
00:08:11,777 --> 00:08:14,979
as they kind of expressed their humanities.

137
00:08:14,979 --> 00:08:19,682
I personally think this does way more than any amount of blood or gore

138
00:08:19,682 --> 00:08:22,284
to make your combat seem impactful.

139
00:08:22,284 --> 00:08:24,445
And it went a long way into

140
00:08:24,445 --> 00:08:28,328
helping us establish the tone we were trying to go for with the melee combat.

141
00:08:36,190 --> 00:08:39,095
so our next look and feel concept is motivation

142
00:08:39,095 --> 00:08:43,581
and i'm not talking about acting like what's my motivation

143
00:08:43,581 --> 00:08:47,006
uh... what i mean is make sure that characters have a physical motivation

144
00:08:47,006 --> 00:08:48,588
for everything that's happening to them

145
00:08:49,140 --> 00:08:52,581
So you'll find as you're creating a melee combat system,

146
00:08:52,581 --> 00:08:56,842
there's a lot of stuff you want your characters to do to support a mechanic

147
00:08:56,842 --> 00:08:58,062
or to make the game more fun.

148
00:08:58,062 --> 00:09:00,043
You'll need them to be in a particular pose,

149
00:09:00,043 --> 00:09:04,024
or you'll need them to be a little bit to the right or to move them around.

150
00:09:04,024 --> 00:09:07,805
What I'd suggest is to always make sure there's

151
00:09:07,805 --> 00:09:11,666
some kind of physical reason for them to be doing the things that they're doing,

152
00:09:11,666 --> 00:09:14,807
some kind of physical excuse that motivates

153
00:09:14,807 --> 00:09:15,647
what they're doing in the game.

154
00:09:15,647 --> 00:09:16,948
Let's take a look at what I'm talking about.

155
00:09:17,788 --> 00:09:20,089
So this is kind of a counter example of what not to do.

156
00:09:20,089 --> 00:09:23,030
Here we have Ellie jumping up to stab a guy.

157
00:09:23,030 --> 00:09:24,311
I love this move.

158
00:09:24,311 --> 00:09:25,952
It's one of my favorites.

159
00:09:25,952 --> 00:09:28,533
But something just isn't quite right here.

160
00:09:28,533 --> 00:09:29,413
It's something subtle.

161
00:09:29,413 --> 00:09:32,295
Let's take a look at it a little slower, and we'll see what I'm talking about.

162
00:09:35,247 --> 00:09:36,328
uh... so

163
00:09:36,328 --> 00:09:39,813
what's happening you'll notice that the guy is standing up to get stabbed

164
00:09:39,813 --> 00:09:44,500
and that's kind of ridiculous why is he like presenting his neck to you

165
00:09:44,500 --> 00:09:46,683
uh... in order to be killed that doesn't really make a lot of sense

166
00:09:46,683 --> 00:09:50,488
so this is what i'm talking about there's no motivation for him to be

167
00:09:50,488 --> 00:09:50,909
doing this

168
00:09:51,470 --> 00:09:57,091
This was kind of a necessary evil because this move could either be done from a brick stun, which has the guy doubled over,

169
00:09:57,091 --> 00:10:01,152
or it could be done as a stealth kill, in which case the guy would be standing up.

170
00:10:01,152 --> 00:10:06,973
So there was kind of no way around this. Ideally we would have had a different animation that could have handled this a little bit better,

171
00:10:06,973 --> 00:10:08,914
but it was a necessary evil to ship the game.

172
00:10:08,914 --> 00:10:11,114
Let's take a look at a better example.

173
00:10:15,115 --> 00:10:19,597
So here's an example of moving a character with motivation.

174
00:10:19,597 --> 00:10:25,920
As you can tell here, the enemy is standing facing ninety degrees away from Joel.

175
00:10:25,920 --> 00:10:27,741
If we slow it down,

176
00:10:27,741 --> 00:10:30,542
you'll notice that the pop is pretty significant

177
00:10:30,542 --> 00:10:32,903
when he pops into the first pose of the reaction animation.

178
00:10:33,563 --> 00:10:39,251
The thing is that your eye hides it because he's being motivated by the axe through his neck.

179
00:10:39,251 --> 00:10:43,997
So there's something that gives a physical reason for him to pop into that pose.

180
00:10:43,997 --> 00:10:47,081
And when you look at it full speed, you don't notice the pop at all.

181
00:10:50,202 --> 00:10:53,665
uh... so this is Joel slamming a guy into the wall

182
00:10:53,665 --> 00:10:58,269
and we really like these wall moves, we wanted them to happen as frequently as possible

183
00:10:58,269 --> 00:11:04,294
so we were very generous with the amount of distance that you could be away from the wall with the guy

184
00:11:04,294 --> 00:11:07,416
in order for this move to trigger

185
00:11:07,416 --> 00:11:08,537
we look at it from the side

186
00:11:09,773 --> 00:11:12,696
you'll see how long that distance actually is.

187
00:11:12,696 --> 00:11:16,119
That's a pretty gnarly lurk, like he's going pretty far.

188
00:11:16,119 --> 00:11:21,925
The thing is that it's hidden by the fact that Joel is pushing the guy forward, that Joel is like moving along with him.

189
00:11:21,925 --> 00:11:25,108
And so your eye interpolates that as it's happening.

190
00:11:25,108 --> 00:11:27,190
So again, from the player's perspective,

191
00:11:27,190 --> 00:11:30,173
it looks fine, and you don't notice that it's happening.

192
00:11:32,591 --> 00:11:36,796
So of course, something important to consider is how we're going to frame this action to the player.

193
00:11:36,796 --> 00:11:38,878
So let's talk about cameras for a little bit.

194
00:11:38,878 --> 00:11:42,863
The base melee camera in The Last of Us is a systemic camera

195
00:11:42,863 --> 00:11:45,306
that can'ts off to one side

196
00:11:45,306 --> 00:11:49,771
and tries to frame both the attacker and the defender by looking at the midpoint

197
00:11:49,771 --> 00:11:51,813
and keeping the defender on screen.

198
00:11:51,813 --> 00:11:53,275
So let's take a look at what that looks like.

199
00:11:55,238 --> 00:12:00,042
You see as I punch the guy the camera moves kind of off to the side framing both characters.

200
00:12:00,042 --> 00:12:04,125
As I move around it kind of centers a little bit more on Joel into my normal navigational camera.

201
00:12:04,125 --> 00:12:11,110
When the camera starts off on the wrong side of the action it slowly orbits around until it's in the correct spot.

202
00:12:11,110 --> 00:12:15,973
So this was the way we found to frame the action consistently

203
00:12:15,973 --> 00:12:18,515
without doing a lot of hand placement of cameras.

204
00:12:18,515 --> 00:12:22,318
And it was something we found was the smoothest way to frame the action.

205
00:12:25,505 --> 00:12:33,589
So for special moves like finishers or grapples, we used animated cameras for emphasis and a greater cinematic feel.

206
00:12:33,589 --> 00:12:39,992
That's kind of an old technique, they've been doing it since God of War, maybe earlier, but it's great and it works.

207
00:12:39,992 --> 00:12:48,336
For even more impact, we used cut cameras, but we only used them for deaths, and I'll talk about why.

208
00:12:54,933 --> 00:13:06,021
So the great thing about deaths is it's shocking. The camera cut is really shocking, which synergizes well with the shock of being killed.

209
00:13:06,021 --> 00:13:08,123
So there's a great synergy there.

210
00:13:08,123 --> 00:13:12,566
The other thing that's awesome is that cutting the camera is very disorienting.

211
00:13:12,566 --> 00:13:18,070
But the great thing about using it for deaths is it doesn't matter that the player is disoriented because they're dead.

212
00:13:18,870 --> 00:13:25,913
So cut cameras are a great thing to kind of really emphasize and punch up a death moment.

213
00:13:25,913 --> 00:13:32,215
As a bit of trivia, the clickers and the camera cut were inspired by the chainsaw guy from

214
00:13:32,215 --> 00:13:37,357
Resident Evil 4, which also had a camera cut, which really made him a memorable enemy.

215
00:13:39,339 --> 00:13:44,342
One last and just stupid simple technique is camera shake.

216
00:13:44,342 --> 00:13:45,943
I know it's easy.

217
00:13:45,943 --> 00:13:49,765
I know almost every game with Melee in it has it.

218
00:13:49,765 --> 00:13:51,025
But there's a reason.

219
00:13:51,025 --> 00:13:51,946
It is awesome.

220
00:13:51,946 --> 00:13:53,127
You should use it.

221
00:13:53,127 --> 00:13:54,507
Camera shake is great.

222
00:13:54,507 --> 00:13:58,770
So here is the same combo from before.

223
00:13:58,770 --> 00:14:00,050
Just seems a little flat.

224
00:14:00,050 --> 00:14:00,951
Something's not right.

225
00:14:00,951 --> 00:14:01,811
Something's not amped up.

226
00:14:02,691 --> 00:14:05,173
but just a touch of camera shake on all the impacts

227
00:14:05,173 --> 00:14:08,915
and suddenly it just feels way more impactful and way more real.

228
00:14:08,915 --> 00:14:10,556
So, camera shake is great.

229
00:14:10,556 --> 00:14:13,959
So that's the visual element of the design.

230
00:14:13,959 --> 00:14:17,301
Let's talk for a little bit about mechanics,

231
00:14:17,301 --> 00:14:19,022
about the design of the actual gameplay.

232
00:14:20,609 --> 00:14:24,211
So the story of the development of the game's melee mechanics

233
00:14:24,211 --> 00:14:27,953
had a lot to do with me overcoming some ego issues.

234
00:14:27,953 --> 00:14:31,035
Like any game designer, I wanted my part of the game to be

235
00:14:31,035 --> 00:14:33,296
amazing, to be rich,

236
00:14:33,296 --> 00:14:34,897
deep, and complex.

237
00:14:34,897 --> 00:14:37,539
I wanted some rock, paper, scissors gameplay.

238
00:14:37,539 --> 00:14:40,581
I wanted some Yomi in there.

239
00:14:40,581 --> 00:14:43,022
You know, I wanted it to be complex and interesting.

240
00:14:43,942 --> 00:14:46,184
I wanted Melee to be able to stand on its own.

241
00:14:46,184 --> 00:14:49,726
I wanted there to be encounters where it was just Melee, and that the combat was satisfying

242
00:14:49,726 --> 00:14:51,667
enough and complex enough that it would carry.

243
00:14:51,667 --> 00:14:55,149
For most of the development on the game, we iterated on block, counter, and evade.

244
00:15:04,467 --> 00:15:09,951
We had so many different varieties of these mechanics. We had timed counters, we had evades

245
00:15:09,951 --> 00:15:13,814
where we had to evade a particular direction to avoid different attacks.

246
00:15:13,814 --> 00:15:16,056
A lot of different versions of this idea.

247
00:15:16,056 --> 00:15:19,178
This was based on the assumption that

248
00:15:19,178 --> 00:15:22,841
you know a core element of any melee gameplay is the critical strategic

249
00:15:22,841 --> 00:15:24,002
choice between

250
00:15:24,002 --> 00:15:27,344
attacking and defending. I mean that's something that you just have to have in

251
00:15:27,344 --> 00:15:28,245
any melee system.

252
00:15:28,245 --> 00:15:29,306
Don't you?

253
00:15:30,631 --> 00:15:36,255
This is some footage from a pre-alpha build of The Last of Us.

254
00:15:36,255 --> 00:15:41,058
One of the first things that's most apparent is how far away the camera is.

255
00:15:41,058 --> 00:15:46,342
There's a lot more switching between different enemies as you're fighting.

256
00:15:46,342 --> 00:15:51,325
And you'll notice that I'm able to evade attacks. This is when we still had an evade mechanic in the game.

257
00:15:51,625 --> 00:15:58,108
You also see guys getting into this goofy stance, and that was the way to telegraph to the player that someone was about to do an evade.

258
00:15:58,108 --> 00:16:03,510
And so there was this rock, paper, scissor gameplay, where you were then supposed to grab him instead of punching him.

259
00:16:03,510 --> 00:16:09,772
The grab gameplay was also a lot deeper. You could throw guys around, you could grab them and headbutt them,

260
00:16:09,772 --> 00:16:13,714
which would stun them, and then open them up for an even bigger grab.

261
00:16:13,714 --> 00:16:15,035
There was a lot of complexity there.

262
00:16:15,035 --> 00:16:18,396
Let's take a look at what it was like to fight the infected.

263
00:16:19,936 --> 00:16:22,142
So this was an early build of the tilted building.

264
00:16:22,142 --> 00:16:25,452
And you'll see I can evade these clickers, which probably would

265
00:16:25,452 --> 00:16:26,977
have been nice in the shift game.

266
00:16:28,522 --> 00:16:32,265
and you can see we also had this like goofy kill move

267
00:16:32,265 --> 00:16:36,890
uh... that was our way of making the clickers which were supposed to be

268
00:16:36,890 --> 00:16:42,355
scary so much more challenging because it took a really really long time to kill them

269
00:16:42,355 --> 00:16:43,416
uh... so obviously all this looks

270
00:16:43,416 --> 00:16:47,741
pretty gnarly uh... but maybe we could have polished it you know maybe we could have just iterated

271
00:16:47,741 --> 00:16:48,701
a little more

272
00:16:48,701 --> 00:16:50,844
and figured out a way to make evade work

273
00:16:51,744 --> 00:16:56,146
But there were some intrinsic problems with block and evade

274
00:16:56,146 --> 00:16:57,546
that we just couldn't get around.

275
00:16:57,546 --> 00:17:02,068
The first, it was really difficult for us to find any kind of meaningful challenge.

276
00:17:02,068 --> 00:17:05,129
So we were very limited on buttons because we're a shooter.

277
00:17:05,129 --> 00:17:08,511
So if there was going to be a defense button, it could only be one button.

278
00:17:08,991 --> 00:17:13,174
And so the way you would think to add some challenge to it is with timing.

279
00:17:13,174 --> 00:17:17,877
The problem that we ran into is that the timing was either trivially easy, in which case why

280
00:17:17,877 --> 00:17:20,678
have it at all, or it was impossibly difficult.

281
00:17:20,678 --> 00:17:23,660
There was no middle ground that we were able to find in our focus tests.

282
00:17:23,660 --> 00:17:25,481
So that was one problem.

283
00:17:26,670 --> 00:17:31,213
The other thing is that blocking fights against the camera system that we're trying to put into the game.

284
00:17:31,213 --> 00:17:34,735
So we wanted the camera to be close and over Joel's shoulder

285
00:17:34,735 --> 00:17:37,116
because that gives you this feeling of intensity,

286
00:17:37,116 --> 00:17:40,439
this feeling of, you know, again, empathizing with the humanity of the character.

287
00:17:40,439 --> 00:17:44,821
If you can block someone, you're going to want to see them.

288
00:17:44,821 --> 00:17:50,505
An attack from off-screen is unacceptable if you had the opportunity to defend against it.

289
00:17:50,505 --> 00:17:52,686
If you don't, then it doesn't matter that you couldn't see them

290
00:17:52,686 --> 00:17:54,327
because there was nothing that you could do about it anyways.

291
00:17:55,208 --> 00:17:58,649
So that's why in these builds you saw the camera was so far away.

292
00:17:58,649 --> 00:18:01,290
It was because people wanted to see these enemies.

293
00:18:01,290 --> 00:18:07,152
The other thing about that choice between offense and defense is most of the time in single player games

294
00:18:07,152 --> 00:18:10,333
that relies on one versus many fighting.

295
00:18:10,333 --> 00:18:13,495
So if you look at God of War, Devil May Cry, these types of games

296
00:18:13,495 --> 00:18:20,357
they center around the player fighting a lot of different enemies and figuring out when to attack one person versus defend another person.

297
00:18:20,697 --> 00:18:24,162
The thing is that combat in The Last of Us doesn't really support that.

298
00:18:24,162 --> 00:18:26,886
Because of the way the stealth works and the shooting works,

299
00:18:26,886 --> 00:18:31,272
you very rarely get these one-on-many fights like Batman or something like that.

300
00:18:31,272 --> 00:18:34,136
You're most of the time fighting one person, maybe two.

301
00:18:34,136 --> 00:18:35,858
So that also didn't work.

302
00:18:37,450 --> 00:18:41,853
Finally, blocking waters down the sense of consequence that we were aiming for in the game.

303
00:18:41,853 --> 00:18:44,515
You know, you saw with the clicker enemies,

304
00:18:44,515 --> 00:18:49,539
you know, the consequence of being nabbed by a clicker is way more significant if you can't block him.

305
00:18:49,539 --> 00:18:54,923
You know, if you're able to defend attacks, that kind of waters down the sense of

306
00:18:54,923 --> 00:18:57,905
you messed up, now the game is hurting you.

307
00:18:57,905 --> 00:18:59,546
So, it watered that down.

308
00:19:00,785 --> 00:19:07,968
So finally we cut the Gordian knot and we cut block. This was like kind of a really tricky decision to come to.

309
00:19:07,968 --> 00:19:14,351
It really required us to throw out a lot of our assumptions about what we were doing with the melee system.

310
00:19:14,351 --> 00:19:17,452
But it was the best design decision we made.

311
00:19:17,452 --> 00:19:23,535
The thing is that that choice between offense and defense is critical to a melee game.

312
00:19:23,535 --> 00:19:28,557
But The Last of Us is not a melee game. It's a shooting, crafting, stealthing, and melee game.

313
00:19:29,572 --> 00:19:35,779
So, and just as kind of an idea how Naughty Dog works, we cut block four months before ship.

314
00:19:35,779 --> 00:19:39,303
So we kind of totally changed our game mechanics pretty late in the game.

315
00:19:39,303 --> 00:19:45,330
So if you don't have offense and defense, how do you create at least some kind of a sense of complexity?

316
00:19:45,330 --> 00:19:48,934
How do you make it so that the player doesn't feel like they're just mashing buttons?

317
00:19:51,568 --> 00:19:55,451
We're restricted on buttons because we're a shooter.

318
00:19:55,451 --> 00:19:59,435
So we didn't have a lot of opportunities for different kinds of inputs in order for you

319
00:19:59,435 --> 00:20:01,857
to vary your attacks or anything.

320
00:20:01,857 --> 00:20:04,240
So one potential solution to that was timing attacks.

321
00:20:04,240 --> 00:20:07,563
This is a mechanic that's in Ninja Gaiden and Devil May Cry

322
00:20:07,563 --> 00:20:10,525
where you can attack, attack, pause, and attack.

323
00:20:10,525 --> 00:20:14,369
And that gives you a different kind of combo or some different move.

324
00:20:15,210 --> 00:20:19,832
Another idea we looked into was charge up attacks where you like hold down square

325
00:20:19,832 --> 00:20:21,313
to get a, to unleash a bigger move.

326
00:20:21,313 --> 00:20:24,975
So there's this implicit like risk reward thing that happens there which is kind of cool.

327
00:20:25,710 --> 00:20:34,112
Maybe we could do something with strategic placement, so no new buttons but lining up enemies in certain ways or throwing guys into each other or something like that.

328
00:20:34,112 --> 00:20:35,713
Maybe we could get something there.

329
00:20:35,713 --> 00:20:39,474
The thing is for The Last of Us, these ideas are terrible.

330
00:20:39,474 --> 00:20:54,377
None of this worked and the reason why is they were all just too complex for the player to keep in their head along with all the other things they need to worry about from stealth to listen mode to crafting to all the other complexities that form the whole of Last of Us combat.

331
00:20:55,757 --> 00:20:59,218
So how were we able to find good complexities, some depth that actually worked?

332
00:20:59,218 --> 00:21:03,339
So the first rule of thumb was to avoid any new inputs.

333
00:21:03,339 --> 00:21:10,421
So any mechanic that we were trying to put in, we would have to avoid any kind of complex or intricate input.

334
00:21:10,421 --> 00:21:12,822
A great way of doing that was using context.

335
00:21:12,822 --> 00:21:17,003
So what kind of weapon you're holding, what kind of enemy class that you're fighting against.

336
00:21:17,003 --> 00:21:20,784
That was a great source of some depth and it was very easy for people to understand.

337
00:21:21,829 --> 00:21:26,651
Another great thing to do is to handshake with other systems. So melee is a subsystem of the

338
00:21:26,651 --> 00:21:32,114
last of us and a great source of depth was handshaking with other subsystems. So for example,

339
00:21:32,114 --> 00:21:39,637
the shiv and the modded 2x4 interacted with the crafting system. You could grab guys and take

340
00:21:39,637 --> 00:21:44,579
them as a human shield which would then interact with the gunplay system. So those worked out very well.

341
00:21:46,092 --> 00:21:48,694
Another thing to do is to try to create predictive strategy.

342
00:21:48,694 --> 00:21:53,599
So what this means is some kind of mechanic that doesn't confer an immediate

343
00:21:53,599 --> 00:21:57,562
advantage, but confers some advantage a little bit further down the line. So an

344
00:21:57,562 --> 00:22:00,004
example from fighting games would be launchers.

345
00:22:00,004 --> 00:22:03,247
It's not the launcher that's important, it's the juggle moves that you do after.

346
00:22:03,247 --> 00:22:08,031
And so setting up this kind of future advantage is something I find players

347
00:22:08,031 --> 00:22:09,732
really like and makes them feel clever.

348
00:22:10,699 --> 00:22:15,762
And finally don't hog mind share. Make sure that whatever mechanics you're putting in

349
00:22:15,762 --> 00:22:19,083
are something the player can keep in their head reasonably while they're dealing with

350
00:22:19,083 --> 00:22:20,944
all the other stuff they have to deal with in the game.

351
00:22:20,944 --> 00:22:28,088
So let's take a look at an example. So the brick was an example of this in action. So

352
00:22:28,088 --> 00:22:33,311
it creates a predictive strategy. It allows you to grab enemies. Sets up more powerful

353
00:22:33,311 --> 00:22:36,972
moves. You can instantly kill a clicker if you have a 2x4.

354
00:22:38,447 --> 00:22:42,750
uh... so it links up with the scavenging and stealth systems of the game

355
00:22:42,750 --> 00:22:44,471
uh... because you can throw it as a distraction

356
00:22:44,471 --> 00:22:47,973
uh... you hunt in your environment to find them

357
00:22:47,973 --> 00:22:49,734
uh... it requires no new buttons

358
00:22:49,734 --> 00:22:52,336
uh... you throw it just like any other throwable

359
00:22:52,336 --> 00:22:55,618
and it doesn't require much from the player to understand how to use it

360
00:22:55,618 --> 00:22:58,099
so yeah that was the brick

361
00:23:00,697 --> 00:23:07,361
So, just in general, there were a ton of different mechanics beyond what I've mentioned that

362
00:23:07,361 --> 00:23:09,163
we tried to put in the game.

363
00:23:09,163 --> 00:23:14,306
And we had to be really comfortable with cutting them in the name of simplicity and elegance.

364
00:23:14,306 --> 00:23:20,771
You're always going to have some idea that's your pet idea and just be really comfortable

365
00:23:20,771 --> 00:23:25,054
with cutting that and letting go of it in the name of making the game simpler and more

366
00:23:25,054 --> 00:23:25,494
accessible.

367
00:23:26,255 --> 00:23:32,920
Always think big picture. If you're working on a subsystem, remember that you are not the system.

368
00:23:32,920 --> 00:23:37,464
Try to harmonize, try to make your thing fit into the larger whole,

369
00:23:37,464 --> 00:23:41,167
ideally synergizing with the rest of the game.

370
00:23:41,167 --> 00:23:45,050
So how does melee fit into multiplayer? Let's just take a look at a quick clip.

371
00:23:45,050 --> 00:23:50,114
This guy is stunned by a smoke bomb.

372
00:23:50,114 --> 00:23:53,817
He's chipped in the neck.

373
00:23:55,784 --> 00:24:09,154
trying to flee, get nabbed by a modded 2x4, crawling away, my friend is on fire, and then

374
00:24:09,154 --> 00:24:09,835
I get executed.

375
00:24:13,698 --> 00:24:18,499
So as you can see, Melee ended up giving our PvP combat a very unique feel.

376
00:24:18,499 --> 00:24:22,680
It really helped to separate us from other third-person shooters in multiplayer.

377
00:24:22,680 --> 00:24:25,241
But we had to selectively adapt our mechanics.

378
00:24:25,241 --> 00:24:30,282
For example, there's no hostage taking, there's no human shield, because that's really not

379
00:24:30,282 --> 00:24:31,782
fun for the other guy in multiplayer.

380
00:24:31,782 --> 00:24:33,603
It's no fun to be dragged around.

381
00:24:34,143 --> 00:24:39,764
There's also no bricks because you can't fool a player as easily as you can fool an enemy AI.

382
00:24:39,764 --> 00:24:43,425
So instead of using bricks to stun, we use the smoke bomb.

383
00:24:43,425 --> 00:24:44,506
Changes like that.

384
00:24:44,506 --> 00:24:49,307
One of the biggest changes was that when you punch someone, instead of playing a nice full body animation,

385
00:24:49,307 --> 00:24:50,927
they play just a flinch.

386
00:24:50,927 --> 00:24:52,148
Let's take a look at what that looked like.

387
00:24:58,076 --> 00:25:03,060
So we did that to allow the person on the receiving end to move around.

388
00:25:03,060 --> 00:25:06,822
Again, to keep things fun and fast paced for both players,

389
00:25:06,822 --> 00:25:08,924
instead of just the person doing the attacking.

390
00:25:08,924 --> 00:25:10,685
So obviously there's a downside to this.

391
00:25:10,685 --> 00:25:12,106
It doesn't look fantastic.

392
00:25:12,106 --> 00:25:14,428
And it doesn't look as good as our normal melee combat.

393
00:25:14,428 --> 00:25:16,849
This is especially apparent when two people are

394
00:25:16,849 --> 00:25:21,252
punching each other at the same time, which looks gnarly.

395
00:25:21,252 --> 00:25:23,154
And I'm very sorry about this.

396
00:25:23,154 --> 00:25:25,656
But it was a necessary evil to make PVP fun.

397
00:25:25,656 --> 00:25:27,237
It was just kind of an unavoidable thing.

398
00:25:28,800 --> 00:25:31,266
Overall, though, we lose a lot of the cinematic feel.

399
00:25:31,266 --> 00:25:34,313
We lose a lot of the tone we were trying to create with the game.

400
00:25:34,313 --> 00:25:36,399
So how do we bring some of that back into multiplayer?

401
00:25:37,412 --> 00:25:40,313
So the answer is the fatal moves.

402
00:25:40,313 --> 00:25:43,675
So again because, can we turn it down just a little bit?

403
00:25:43,675 --> 00:25:50,739
Again because the person on the receiving end is being killed, it doesn't matter so

404
00:25:50,739 --> 00:25:55,341
much that they can't move because they're dead anyways and it doesn't matter.

405
00:25:55,341 --> 00:25:59,964
Also a lot of these moves were a little bit longer and it allowed us to bring in the camera

406
00:25:59,964 --> 00:26:04,346
a little bit close and kind of regain some of the intensity that we lost in multiplayer.

407
00:26:07,368 --> 00:26:10,508
Okay, so that's design. Let's talk about how we actually did it.

408
00:26:10,508 --> 00:26:16,690
So obviously in console development, memory is crazy important.

409
00:26:16,690 --> 00:26:20,230
Even though we've got a ton of memory on next-gen consoles, believe me it's going to

410
00:26:20,230 --> 00:26:23,411
dry up really quickly, so you'll always have to worry about memory.

411
00:26:23,411 --> 00:26:27,792
The memory footprint for the melee system in The Last of Us was four megabytes.

412
00:26:27,792 --> 00:26:32,613
This is the same footprint that Drake had for his melee moves in the Uncharted series.

413
00:26:33,093 --> 00:26:38,842
The thing is that Joel has all these weapons, there's the infected, he's got the human shield,

414
00:26:38,842 --> 00:26:43,490
there's just so many more mechanics in Melee, so we had to be really strategic about how

415
00:26:43,490 --> 00:26:45,313
we used our memory.

416
00:26:46,318 --> 00:26:51,361
I could go on and on about memory management, but these are the basic top level strategies that we used.

417
00:26:51,361 --> 00:26:53,582
The first is modular loading.

418
00:26:53,582 --> 00:26:57,884
So this is basically breaking up all of your assets into tiny chunks

419
00:26:57,884 --> 00:27:00,405
and then only loading exactly what you need at any given time.

420
00:27:00,405 --> 00:27:07,788
This is how Naughty Dog in general is able to make their games without any load screens in them

421
00:27:07,788 --> 00:27:12,330
because we are able to kind of be very meticulous about only loading exactly what we need.

422
00:27:13,251 --> 00:27:19,738
So these were all the animation bundles in the melee system.

423
00:27:19,738 --> 00:27:21,560
And there's some pretty logical divides here.

424
00:27:21,560 --> 00:27:24,924
You might be able to see there's the Ellie versus David fight in there.

425
00:27:24,924 --> 00:27:26,366
There's horse melee.

426
00:27:26,366 --> 00:27:27,527
So that makes sense.

427
00:27:27,527 --> 00:27:31,031
You can kind of split things based on where they are in the game, and that's a little

428
00:27:31,031 --> 00:27:31,412
bit easier.

429
00:27:32,715 --> 00:27:36,337
Something that's a little bit more subtle is this division.

430
00:27:36,337 --> 00:27:39,979
So, AnimJoelMelee is what Joel could do just by himself.

431
00:27:39,979 --> 00:27:43,361
So if he's alone in a level and he has a pipe,

432
00:27:43,361 --> 00:27:45,982
it's him swinging it through the air.

433
00:27:45,982 --> 00:27:49,423
It's basically so that you have animations to play when you press square

434
00:27:49,423 --> 00:27:50,224
even if no one's around.

435
00:27:51,089 --> 00:27:59,437
AnimMeleeCommon is anything that requires both Joel and someone else. It doesn't matter if it's an infected or a human, just some other enemy.

436
00:27:59,437 --> 00:28:04,942
So this is Joel swinging the pipe through the air and it stops on a body when it hits it.

437
00:28:04,942 --> 00:28:07,925
And then AnimNPCMelee is anything that...

438
00:28:08,165 --> 00:28:10,448
require both droll and an enemy.

439
00:28:10,448 --> 00:28:15,513
So when the enemy reacts to the pipe swing, that's an anim NPC melee.

440
00:28:15,513 --> 00:28:18,596
So at the start of the swing, I'm an anim droll melee.

441
00:28:18,596 --> 00:28:22,040
On the impact, on droll's side, I'm an anim melee common.

442
00:28:22,040 --> 00:28:24,602
And then the reaction is an anim NPC melee.

443
00:28:25,223 --> 00:28:26,564
So why do we do this?

444
00:28:26,564 --> 00:28:30,366
We do this because in areas where you're transitioning from human combat into

445
00:28:30,366 --> 00:28:31,127
infected combat,

446
00:28:31,127 --> 00:28:35,630
it absolutely ensures that we're not doubling up on any memory

447
00:28:35,630 --> 00:28:38,652
if there's an overlap between those two sections when both types of characters

448
00:28:38,652 --> 00:28:39,333
need to be loaded.

449
00:28:39,333 --> 00:28:42,695
So these are the kinds of strategies we had to do to fit in memory.

450
00:28:43,577 --> 00:28:50,218
Another interesting memory thing is we had both male and female infected in the game.

451
00:28:50,218 --> 00:28:55,599
And they required different animations because their skeletons were slightly different.

452
00:28:55,599 --> 00:29:02,601
And so not only did we have different animation bundles for the female and male versions,

453
00:29:02,601 --> 00:29:07,162
but we had them split out into four for female clicker, male clicker, female runner, male

454
00:29:07,162 --> 00:29:11,983
runner. So that way if you're in a fight with male runners and female clickers, you only

455
00:29:11,983 --> 00:29:13,463
load exactly what you need again.

456
00:29:16,025 --> 00:29:37,717
We also used animation streaming. The Last of Us leaned really heavily on streaming. The game had a reputation for destroying older PS3s. And Melee was no different. We leaned really heavily on it. The stealth kill, the machete moves, the grapples, anything that was longer than 80 frames was a candidate for streaming and this was a huge win for memory.

457
00:29:38,819 --> 00:29:41,381
We were also very strategic about our sample rates.

458
00:29:41,381 --> 00:29:45,224
So most of the animations in the game are sampled at 10 frames a second,

459
00:29:45,224 --> 00:29:48,286
except for certain hero combos that you saw very frequently like

460
00:29:48,286 --> 00:29:50,688
the fist combo and the pipe combo,

461
00:29:50,688 --> 00:29:52,970
and those were sampled at 15 frames a second.

462
00:29:52,970 --> 00:29:56,653
The great thing about streaming is once you're already streaming the animation,

463
00:29:56,653 --> 00:29:57,974
it doesn't matter how big it is,

464
00:29:57,974 --> 00:30:00,896
and so we were able to sample those at 30 frames a second,

465
00:30:00,896 --> 00:30:02,377
which made those moves look a lot better.

466
00:30:02,377 --> 00:30:06,040
So let's talk about the implementation of our cameras for a second.

467
00:30:07,977 --> 00:30:13,321
So for a lot of moves with animated cameras, if the camera didn't trigger, the move would look absolutely terrible.

468
00:30:13,321 --> 00:30:16,984
So when you're slamming a guy into a wall, if the camera doesn't work,

469
00:30:16,984 --> 00:30:22,829
then the normal in-game camera gets pushed up by collision, and it'll be in the character's faces, and it'll look awful.

470
00:30:22,829 --> 00:30:27,233
So, and we also needed to make sure that the camera was never behind collision,

471
00:30:27,233 --> 00:30:31,316
because then you'd see back-faced polygons, and again, would look awful.

472
00:30:32,599 --> 00:30:34,681
So what we had was a system of fail-safe cameras.

473
00:30:34,681 --> 00:30:36,722
So this is the clicker kill

474
00:30:36,722 --> 00:30:40,506
and those little locators around them are

475
00:30:40,506 --> 00:30:43,949
possible camera locations and you can see the system has chosen the one on the

476
00:30:43,949 --> 00:30:44,870
far right.

477
00:30:44,870 --> 00:30:48,694
So if any of those points are behind collision, it'll have a backup and it'll have a

478
00:30:48,694 --> 00:30:51,116
backup to the backup and there are seven in this move.

479
00:30:51,116 --> 00:30:53,979
So that was our way of ensuring that these animated cameras would fire

480
00:30:53,979 --> 00:30:55,420
and make the move look good.

481
00:30:57,641 --> 00:31:01,004
So there are a lot of areas in the game that are very dark.

482
00:31:01,004 --> 00:31:04,907
And so it was kind of a tricky issue to make sure that melee was visible when you were

483
00:31:04,907 --> 00:31:06,128
in these sections.

484
00:31:06,128 --> 00:31:10,731
So we had this special flashlight that we used to make sure that things were visible.

485
00:31:10,731 --> 00:31:13,093
So here we can see the normal flashlight.

486
00:31:13,093 --> 00:31:16,036
You can see that it's coming from Joel's right shoulder.

487
00:31:16,036 --> 00:31:17,777
It's one of those clip-on flashlights.

488
00:31:17,777 --> 00:31:18,898
And it's facing away from him.

489
00:31:19,779 --> 00:31:26,004
So when he gets killed by the clicker, something magical happens where now somehow this flashlight

490
00:31:26,004 --> 00:31:29,406
is in his face and like how is that happening?

491
00:31:29,406 --> 00:31:35,691
So for moves like this we would hand author a point for the flashlight to be and we would

492
00:31:35,691 --> 00:31:39,674
turn off his shoulder flashlight and turn on this fake melee flashlight.

493
00:31:40,572 --> 00:31:44,474
and it doesn't cast shadows so it was pretty cheap.

494
00:31:44,474 --> 00:31:49,696
And so this was our, you know, kind of hand-done solution for hero moves like this one.

495
00:31:49,696 --> 00:31:52,518
But for more generic moves like this grapple,

496
00:31:52,518 --> 00:31:55,539
we would just position it behind the actual camera,

497
00:31:55,539 --> 00:31:56,720
wherever the game camera was.

498
00:31:56,720 --> 00:32:01,923
Because if the camera can see it and the light can see it,

499
00:32:01,923 --> 00:32:03,604
odds are you can see it because they're going to line up.

500
00:32:03,604 --> 00:32:05,424
So if we take a look at what this looks like in game...

501
00:32:07,920 --> 00:32:16,688
You can see that the transitions between the normal flashlight and the melee flashlight are relatively seamless

502
00:32:16,688 --> 00:32:22,433
and you can consistently see the action.

503
00:32:22,433 --> 00:32:27,338
So getting two animations to play in sync together is obviously a really important part of making our combat look good.

504
00:32:27,338 --> 00:32:30,781
So let's take a look at some techniques for that.

505
00:32:31,213 --> 00:32:38,315
So our system from Uncharted was basically, it was kind of just like any other scripted animation that two characters would play together.

506
00:32:38,315 --> 00:32:43,777
It was, each move was authored as a pair of animations that would play around a single point.

507
00:32:43,777 --> 00:32:49,039
And that point was placed in the world, and those characters would play those same animations together,

508
00:32:49,039 --> 00:32:50,820
and that was how we did our syncing.

509
00:32:50,820 --> 00:32:56,241
Every melee move was built as a pair of animations, a pair that were always meant to go together.

510
00:32:57,269 --> 00:32:58,571
uh... so

511
00:32:58,571 --> 00:33:01,815
for a lot of reasons we kind of broke away from this system uh... so as i'm

512
00:33:01,815 --> 00:33:03,978
punching this infected or this human

513
00:33:03,978 --> 00:33:07,302
they're playing different reaction animations and in the uncharted paradigm

514
00:33:07,302 --> 00:33:09,745
those would have been two distinct pairs of animation

515
00:33:09,745 --> 00:33:13,170
if the guy was facing away from me that would have been another pair of animations

516
00:33:13,971 --> 00:33:19,736
So what we switched to instead is a system where I do attacks and I trigger reactions on the enemy.

517
00:33:19,736 --> 00:33:22,658
And those reactions play independently from me.

518
00:33:22,658 --> 00:33:29,683
And so what that meant was we had to move away from a system where both people know about one common point.

519
00:33:29,683 --> 00:33:31,365
What we moved to instead...

520
00:33:32,389 --> 00:33:37,451
was a system where each character knows where they expect the other character to be.

521
00:33:37,451 --> 00:33:42,072
And so what this did was it created like kind of a system of interlocking joints

522
00:33:42,072 --> 00:33:44,893
where the attacker would place himself

523
00:33:44,893 --> 00:33:47,094
relative to where they expect the defender to be

524
00:33:47,094 --> 00:33:49,955
and the defender would place himself relative to where they expect the attacker to be.

525
00:33:49,955 --> 00:33:52,216
So it would kind of join them together and sync up nicely.

526
00:33:52,216 --> 00:33:56,277
There were a lot of other benefits that we didn't expect

527
00:33:56,277 --> 00:33:59,198
from splitting up and kind of unsyncing these moves.

528
00:34:00,668 --> 00:34:03,710
The first was it allowed us to create some new mechanics.

529
00:34:03,710 --> 00:34:07,573
So again I was talking about flinching before and we were able to bring that to single player as well

530
00:34:07,573 --> 00:34:08,874
to create the runners.

531
00:34:08,874 --> 00:34:12,776
So this was useful in establishing them as kind of a lighter melee class. You're allowed to

532
00:34:12,776 --> 00:34:15,558
keep moving around, you're allowed to punch them back while they're still punching you.

533
00:34:15,558 --> 00:34:18,800
And this wouldn't have been possible in the Uncharted paradigm.

534
00:34:18,800 --> 00:34:20,881
The runner is

535
00:34:20,881 --> 00:34:23,923
playing animations, but I'm not actually playing animations, I'm playing these kind of

536
00:34:23,923 --> 00:34:25,344
flinches

537
00:34:25,344 --> 00:34:27,005
which was enabled by this new system.

538
00:34:29,635 --> 00:34:33,337
it also created some solutions to the problem of uneven terrain which had

539
00:34:33,337 --> 00:34:34,378
always been a problem for us

540
00:34:34,378 --> 00:34:39,561
uh... so you can see here that there's a like a vertical range to the expected

541
00:34:39,561 --> 00:34:41,002
location of the defender

542
00:34:41,002 --> 00:34:42,382
and what that allowed us to do

543
00:34:43,678 --> 00:34:47,361
in situations like this where an enemy would be standing on top of one meter cover

544
00:34:47,361 --> 00:34:52,465
uh... it would allow us to still be able to do damage to that enemy

545
00:34:52,465 --> 00:34:56,628
uh... in our old uncharted paradigm we would try to offer synced animations for

546
00:34:56,628 --> 00:34:58,809
every possible situation that could happen

547
00:34:58,809 --> 00:35:01,111
uh... which just wasn't feasible in the last of us

548
00:35:01,111 --> 00:35:04,513
this doesn't look as fantastic as the rest of our combat but it's kind of a

549
00:35:04,513 --> 00:35:08,536
necessary solution to you know fill in the gaps when we couldn't afford to make

550
00:35:08,536 --> 00:35:10,297
uh... a synced animation for everything

551
00:35:11,655 --> 00:35:14,297
You can see what this looks like going downhill.

552
00:35:14,297 --> 00:35:17,719
So again there's like a vertical range here and this guy is able to play

553
00:35:17,719 --> 00:35:19,580
independent reactions for me

554
00:35:19,580 --> 00:35:21,782
which really helped to generalize our combat

555
00:35:21,782 --> 00:35:25,084
and make it work on weird terrain and in a lot more situations.

556
00:35:25,084 --> 00:35:30,067
So the whole system was implemented in script.

557
00:35:30,067 --> 00:35:33,029
So for some of you this is going to be the most interesting part of the talk

558
00:35:33,029 --> 00:35:34,870
and for the rest of you it'll be over soon.

559
00:35:36,902 --> 00:35:43,124
So scripting is awesome. I started out as a gameplay scripter on Uncharted 2. I did the

560
00:35:43,124 --> 00:35:46,565
Wounded Cameraman sequence and a lot of the other puzzles. So I'm super into

561
00:35:46,565 --> 00:35:52,087
scripting. I think it's great and I really love doing it. The great part about script

562
00:35:52,087 --> 00:35:58,729
is that it moves work onto designers. Programmer time is absolutely precious.

563
00:35:58,729 --> 00:36:01,370
Whereas designer time is essentially worthless.

564
00:36:04,675 --> 00:36:09,442
So, I mean, really, like, are you going to ask a designer to hand optimize your assembly code,

565
00:36:09,442 --> 00:36:14,008
to move more stuff onto the SPUs, to win back precious milliseconds until you're rendering,

566
00:36:14,008 --> 00:36:16,651
like your rendering engine is running in frame?

567
00:36:16,651 --> 00:36:17,452
You're not going to do that.

568
00:36:17,452 --> 00:36:19,014
You need programmers for that.

569
00:36:19,014 --> 00:36:22,659
You can move work, less intense technical work, onto your designers.

570
00:36:24,643 --> 00:36:27,204
Script also gives you faster iteration.

571
00:36:27,204 --> 00:36:31,646
So there's the classic benefit of not having to recompile the whole executable.

572
00:36:31,646 --> 00:36:35,828
But what's great about script is it removes the barrier between inspiration

573
00:36:35,828 --> 00:36:36,748
and implementation.

574
00:36:36,748 --> 00:36:40,650
The person with all the crazy ideas is the one actually putting them into the game

575
00:36:40,650 --> 00:36:42,410
and there's kind of an emotional thing here where

576
00:36:42,410 --> 00:36:46,632
you've got your ego attached to these ideas and you really want to get them in the game.

577
00:36:46,632 --> 00:36:49,533
And you're the one doing it so odds are they will get in the game instead of

578
00:36:49,533 --> 00:36:52,134
having to convince the programmer please

579
00:36:52,134 --> 00:36:53,215
please get my feature in.

580
00:36:55,148 --> 00:36:59,833
And finally, all true gangsters know, you've got to keep it text-based.

581
00:36:59,833 --> 00:37:03,116
Making a graphical scripting interface is tempting,

582
00:37:03,116 --> 00:37:05,358
but it's going to take a ton of your tools programmer's time,

583
00:37:05,358 --> 00:37:08,881
and it's just never going to be as fast or as flexible

584
00:37:08,881 --> 00:37:10,923
as a text-based scripting system.

585
00:37:10,923 --> 00:37:13,726
So let's take a look, let's compare workflows

586
00:37:13,726 --> 00:37:15,728
between graphical and text-based interfaces.

587
00:37:17,086 --> 00:37:20,329
So here we have a graphical scripting interface.

588
00:37:20,329 --> 00:37:24,172
As you can see it's pretty slow, there's a lot of mouse movement.

589
00:37:24,172 --> 00:37:25,273
And it's just not that fast.

590
00:37:25,273 --> 00:37:27,555
I'm pretty sure this is Kismet.

591
00:37:27,555 --> 00:37:32,480
But in a text-based interface,

592
00:37:32,480 --> 00:37:41,327
it's just way faster, you get a huge speed increase.

593
00:37:41,327 --> 00:37:44,530
So let's talk a little bit about the overall architecture of the script.

594
00:37:47,039 --> 00:37:52,242
So it all starts with attack lists. Because Uncharted only had one button for melee,

595
00:37:52,242 --> 00:37:56,385
we wanted a lot of variety. We wanted something cool to happen every time you press the button.

596
00:37:56,385 --> 00:38:00,588
So the structure is built around lists. Like every time you press square,

597
00:38:00,588 --> 00:38:02,309
there are all these things that could happen.

598
00:38:02,669 --> 00:38:06,011
So in the Last of Us, when you press square, this is what happens.

599
00:38:06,011 --> 00:38:10,715
There's a massive master list, and it contains these sub-lists,

600
00:38:10,715 --> 00:38:14,397
like playable LE attacks, and when you're a playable LE, you use those.

601
00:38:14,397 --> 00:38:17,939
Level-specific attacks, so if you're in some level, like when Joel is wounded,

602
00:38:17,939 --> 00:38:19,641
he has a different set of attacks there.

603
00:38:19,641 --> 00:38:21,081
And finally, Joel's basic attacks.

604
00:38:22,607 --> 00:38:26,030
A couple levels further down, these are the players pipe attacks

605
00:38:26,030 --> 00:38:29,853
and you'll see at the top there's something that says func, that's the start func

606
00:38:29,853 --> 00:38:34,738
and basically what that is, is a boolean function where if it returns true

607
00:38:34,738 --> 00:38:38,621
everything in the list is allowed to happen. So in this case it's checking to see if

608
00:38:38,621 --> 00:38:39,882
the player has a pipe

609
00:38:39,882 --> 00:38:41,664
and now all these moves are allowed.

610
00:38:41,664 --> 00:38:45,287
Now let's get down to the actual melee move level.

611
00:38:45,287 --> 00:38:45,507
uh... so

612
00:38:47,961 --> 00:38:52,084
A melee move at its core is an animation, either one or two animations.

613
00:38:52,084 --> 00:38:57,508
In this case, this is a synced move, so there's an attacker and a defender move in this animation.

614
00:38:57,508 --> 00:39:03,292
Each move has a priority, so if multiple moves are valid, this is how the system chooses

615
00:39:03,292 --> 00:39:04,153
which one should fire.

616
00:39:04,153 --> 00:39:07,275
So this is based on which move is the most desirable.

617
00:39:07,275 --> 00:39:11,699
So hits are more desirable than misses, finishers are better than hits, wall moves are better

618
00:39:11,699 --> 00:39:13,080
than finishers, that kind of thing.

619
00:39:14,398 --> 00:39:18,461
And finally, each move has a start func, just like the lists.

620
00:39:18,461 --> 00:39:21,403
And this is again a function that if it's true, the move is allowed to fire.

621
00:39:21,403 --> 00:39:26,467
So this move is a synced move, so the characters have to be close enough together for it to be valid.

622
00:39:26,467 --> 00:39:30,470
So this is a range check to make sure that they're within four meters of each other.

623
00:39:30,470 --> 00:39:33,052
And finally, the event list.

624
00:39:33,052 --> 00:39:38,676
This is the meat of the move. This is what actually happens over the course of the melee move.

625
00:39:38,676 --> 00:39:43,740
So in this case, this move is very simple. All it does is deal five damage on frame zero.

626
00:39:47,237 --> 00:39:51,243
So that's the basic structure of the melee moves themselves. What about the AI and

627
00:39:51,243 --> 00:39:52,284
their melee behaviors?

628
00:39:53,907 --> 00:39:57,788
So, when the AI decides to go into melee, they have a list of behaviors.

629
00:39:57,788 --> 00:40:01,048
You can see at the top there's an array of behaviors.

630
00:40:01,048 --> 00:40:04,649
I'm only showing one here, but they choose from a list, just like a player chooses from

631
00:40:04,649 --> 00:40:05,329
a list of attacks.

632
00:40:05,329 --> 00:40:08,630
And what a behavior basically is, is dirt simple.

633
00:40:08,630 --> 00:40:13,891
It's an enemy running at the player and trying an attack list, and as soon as one of those

634
00:40:13,891 --> 00:40:16,512
attacks is valid, it fires.

635
00:40:16,512 --> 00:40:20,593
So here you'll see there's a priority, just like with the moves, and this is where I'm

636
00:40:20,593 --> 00:40:23,273
specifying the list of attacks the NPC is allowed to use.

637
00:40:24,074 --> 00:40:29,636
There's a start func just like lists and attacks, but there's also an abort func which tells

638
00:40:29,636 --> 00:40:31,897
the NPC, hey, you shouldn't be doing this anymore.

639
00:40:31,897 --> 00:40:36,058
Either someone else is attacking the player or the situation has changed in some way that

640
00:40:36,058 --> 00:40:37,719
you should stop doing what you're doing.

641
00:40:37,719 --> 00:40:40,000
Let's take a look at an example of how all this works.

642
00:40:41,932 --> 00:40:46,594
So when you get grappled by enemies, your allies will try to come to your rescue.

643
00:40:46,594 --> 00:40:49,235
Here we have Ellie rescuing Joel from a human enemy.

644
00:40:49,235 --> 00:40:53,296
This is a great way to give a player a feeling of attachment to these characters.

645
00:40:53,296 --> 00:40:55,477
Let's take a look at how this works under the hood.

646
00:40:57,194 --> 00:41:00,936
uh... so this is Ellie's rescue behavior

647
00:41:00,936 --> 00:41:04,138
uh... the AI scripting is exactly the same for friendly characters as it is for

648
00:41:04,138 --> 00:41:05,239
enemies

649
00:41:05,239 --> 00:41:08,601
here's the start func so basically what this is doing is it's checking to see

650
00:41:08,601 --> 00:41:13,664
hey is the player being grappled is he in one of these grapple like those

651
00:41:13,664 --> 00:41:15,044
grapples that i can rescue him from

652
00:41:15,928 --> 00:41:19,194
uh... there's also a kind of story consideration here where

653
00:41:19,194 --> 00:41:20,816
when you're still with Tess

654
00:41:20,816 --> 00:41:23,601
it doesn't make sense for Ellie to be rescuing you because she's kind of new

655
00:41:23,601 --> 00:41:24,923
she's unsure of herself

656
00:41:24,923 --> 00:41:26,466
but once Tess dies

657
00:41:26,466 --> 00:41:28,789
now Ellie is able to use these behaviors

658
00:41:30,242 --> 00:41:32,765
So down here there's the abort func.

659
00:41:32,765 --> 00:41:35,948
First there's like a sanity check like if too much time has passed something's

660
00:41:35,948 --> 00:41:38,331
probably wrong so you should abort.

661
00:41:38,331 --> 00:41:42,535
And if the player has escaped from the move by themselves then this behavior is

662
00:41:42,535 --> 00:41:43,837
no longer valid.

663
00:41:43,837 --> 00:41:48,121
At the bottom you can see the attack list ID which is telling Ellie which

664
00:41:48,121 --> 00:41:49,422
rescue moves she's allowed to use.

665
00:41:50,528 --> 00:41:51,869
uh... this is one of those moves

666
00:41:51,869 --> 00:41:56,712
uh... this is uh... an off-screen version of Ellie's rescue move

667
00:41:56,712 --> 00:41:59,854
uh... you'll notice something interesting about the start funk which is that

668
00:41:59,854 --> 00:42:01,075
there's no range check

669
00:42:01,075 --> 00:42:05,538
uh... so the reason for this is we want this move to happen as much as possible

670
00:42:05,538 --> 00:42:06,599
and

671
00:42:06,599 --> 00:42:09,180
if she's off screen if you can't see where she is

672
00:42:09,180 --> 00:42:11,602
we can cheat her over to the rescue

673
00:42:11,602 --> 00:42:15,264
uh... so there's no range check as soon as she decides to use this behavior if

674
00:42:15,264 --> 00:42:15,804
she's off screen

675
00:42:15,804 --> 00:42:18,086
she can come in from ten twenty meters away

676
00:42:19,611 --> 00:42:24,400
To make this work we also had a blend time of zero so that she just pops into the move

677
00:42:24,400 --> 00:42:25,462
and doesn't lurp across the map.

678
00:42:25,462 --> 00:42:31,913
Our other allies had this behavior as well which I think really made them seem dynamic

679
00:42:31,913 --> 00:42:33,656
and added a nice feel to our combat.

680
00:42:35,741 --> 00:42:39,804
So we script in a proprietary version of Lisp, which is a language that allows you to

681
00:42:39,804 --> 00:42:44,289
really easily establish syntaxes, which are basically like big code macros.

682
00:42:44,289 --> 00:42:46,891
This allows us to templatize our melee moves.

683
00:42:46,891 --> 00:42:52,577
Since there are lots of moves that fall into distinct categories, hits, misses, finishers,

684
00:42:52,577 --> 00:42:56,640
you can establish kind of a taxonomy and edit these moves as groups.

685
00:42:56,640 --> 00:42:58,042
So let's take a look at how this works.

686
00:42:58,542 --> 00:43:00,543
This is a defined syntax

687
00:43:00,543 --> 00:43:04,145
and you can see inside it there's a fight move definition in there

688
00:43:04,145 --> 00:43:09,327
and the way the syntax works is at the top you specify what the inputs of the move are

689
00:43:09,327 --> 00:43:11,669
like this is what's going to make each move unique

690
00:43:11,669 --> 00:43:15,791
so in this case it's a very simple move all it has that's unique is a name

691
00:43:15,791 --> 00:43:17,351
an attack animation and a defense animation

692
00:43:17,351 --> 00:43:23,594
and you can see how these values are then copied and pasted essentially

693
00:43:23,594 --> 00:43:25,055
into the move definition.

694
00:43:25,812 --> 00:43:28,736
this is what that syntax looks like at the end of the day as you can see it's very

695
00:43:28,736 --> 00:43:30,279
compressed it looks very nice

696
00:43:30,279 --> 00:43:33,163
uh... and this is kind of the comparison

697
00:43:33,163 --> 00:43:36,628
you can see how i specify the input in the on the lower right

698
00:43:36,628 --> 00:43:40,353
and then that gets copied into the move using the syntax

699
00:43:40,353 --> 00:43:42,556
and this isn't just about

700
00:43:43,189 --> 00:43:47,672
more readable code or less typing. What's great about this is it allows you to make sweeping

701
00:43:47,672 --> 00:43:52,175
changes across your system very, very easily. If you have a bug, you can fix it in one place

702
00:43:52,175 --> 00:43:57,518
instead of a thousand. So let's say I went to this talk and I was like, wow, camera shake is

703
00:43:57,518 --> 00:44:03,641
really great, I should add it to my moves. And so all I would have to do is add it to the

704
00:44:03,641 --> 00:44:07,944
template and then when I compiled my code, now it's everywhere. Now every simple fight

705
00:44:07,944 --> 00:44:08,865
move will have camera shake.

706
00:44:10,760 --> 00:44:14,101
I know this stuff is pretty dry, but it was crucial to getting the game done.

707
00:44:14,101 --> 00:44:18,383
It was like a really essential technique in managing all the moves and all the behaviors

708
00:44:18,383 --> 00:44:19,563
that we had.

709
00:44:19,563 --> 00:44:21,084
It was really, really essential.

710
00:44:21,084 --> 00:44:27,146
So something we got a lot out of is uniting our melee scripts with our normal scripting

711
00:44:27,146 --> 00:44:27,627
language.

712
00:44:27,627 --> 00:44:31,848
So obviously Naughty Dog is pretty famous for our one-off custom crafted setups.

713
00:44:31,848 --> 00:44:34,089
So we have a lot of power in our scripting system.

714
00:44:34,089 --> 00:44:37,791
And we got a lot of mileage out of hooking the melee system into that power.

715
00:44:37,791 --> 00:44:39,332
So let's take a look at some examples.

716
00:44:40,848 --> 00:44:46,699
So when you shiv a guy and your shiv breaks, the blade of the shiv will actually be embedded

717
00:44:46,699 --> 00:44:47,621
in the guy's neck.

718
00:44:47,621 --> 00:44:49,204
This is my job.

719
00:44:51,799 --> 00:44:53,720
So let's take a look at how that works.

720
00:44:53,720 --> 00:44:57,002
So this is a script event which is a special melee event that allows us to hook

721
00:44:57,002 --> 00:44:58,983
into the rest of the game's scripting system.

722
00:44:58,983 --> 00:45:04,206
And basically the embed weapon function is a wrapper function

723
00:45:04,206 --> 00:45:07,307
that uses the same functionality that allows us to

724
00:45:07,307 --> 00:45:09,529
put flashlights in our character's hands or

725
00:45:09,529 --> 00:45:11,410
put Joel's gas mask on his head.

726
00:45:11,410 --> 00:45:14,971
And so yeah, it was just a really simple thing to do that added a really nice detail.

727
00:45:16,276 --> 00:45:19,618
Some of you may remember this climactic moment from our E3 demo

728
00:45:19,618 --> 00:45:26,082
and Evan Wells wanted me to make this move as easy to perform as possible

729
00:45:26,082 --> 00:45:28,103
to make it almost automatic.

730
00:45:28,103 --> 00:45:31,825
So let's take a look at how this works in the ship game.

731
00:45:31,825 --> 00:45:34,186
So when you knock a guy down to a knee

732
00:45:34,186 --> 00:45:37,789
when you aim your gun you'll automatically aim at his head.

733
00:45:37,789 --> 00:45:42,371
When you aim at him it transitions him into this begging for your life animation

734
00:45:42,371 --> 00:45:43,992
and then you kill him.

735
00:45:47,268 --> 00:45:52,870
So this NPC knee recover is the move the enemy is in when they get knocked to a knee.

736
00:45:52,870 --> 00:45:55,631
And you'll see there's this event here, allow auto-aim,

737
00:45:55,631 --> 00:46:01,274
and this is something we needed for easy mode to help easy mode players get through certain scripted sequences,

738
00:46:01,274 --> 00:46:04,735
like the snare sequence gives you auto-aim.

739
00:46:04,735 --> 00:46:09,257
This part detects when the player is aiming at the head joint of the defender,

740
00:46:09,257 --> 00:46:13,719
and then transitions them into the begging for their life animation.

741
00:46:13,719 --> 00:46:14,840
And then you kill them.

742
00:46:16,259 --> 00:46:19,686
uh... so here's another cool detail uh... when jules

743
00:46:19,686 --> 00:46:21,208
melee weapon breaks

744
00:46:21,208 --> 00:46:21,970
uh... he'll

745
00:46:21,970 --> 00:46:25,857
throw it down to the ground and if you see it in slow motion you can kind of see it a little better

746
00:46:30,195 --> 00:46:33,038
So there you go, kind of seamlessly throwing the handle down to the ground.

747
00:46:33,038 --> 00:46:35,521
So the crazy thing here is that

748
00:46:35,521 --> 00:46:38,644
because it's happening while he's moving around, you're not in melee anymore.

749
00:46:38,644 --> 00:46:40,106
So I can't do that animation

750
00:46:40,106 --> 00:46:45,572
as part of the melee system. It can't be a melee event because you're not in melee anymore.

751
00:46:45,572 --> 00:46:47,975
So the way this works is there's this attacker end funk.

752
00:46:48,736 --> 00:46:51,837
uh... and what this means is if the attacker has left the move for any

753
00:46:51,837 --> 00:46:53,657
reason if they've been shot

754
00:46:53,657 --> 00:46:56,318
if the moves over naturally if someone else hits them

755
00:46:56,318 --> 00:46:59,558
this is like a guaranteed thing to fire so it's like an on exit or something

756
00:46:59,558 --> 00:47:02,759
uh... and what this does is it actually spawns a script process

757
00:47:02,759 --> 00:47:05,500
uh... that handles the throwing a weapon down so it's like a

758
00:47:05,500 --> 00:47:06,940
uh... fadeaway pass

759
00:47:06,940 --> 00:47:09,881
uh... to the rest of the scripting system outside of the melee system

760
00:47:11,226 --> 00:47:13,267
So here's that script, the drop weapon script.

761
00:47:13,267 --> 00:47:16,029
It's really simple, all it does

762
00:47:16,029 --> 00:47:18,490
is it plays a gesture of the player throwing the weapon down,

763
00:47:18,490 --> 00:47:22,612
it breaks the weapon which causes it to physicalize and fall to the ground,

764
00:47:22,612 --> 00:47:26,734
and then it just cleans itself up. All it does is just remove the script

765
00:47:26,734 --> 00:47:27,595
process when it's done.

766
00:47:27,595 --> 00:47:30,236
So let's take a look at one more example.

767
00:47:30,236 --> 00:47:31,857
This is from multiplayer.

768
00:47:33,123 --> 00:47:39,165
So all of these animations are the same and there's nothing implicitly about firing these different weapons

769
00:47:39,165 --> 00:47:46,127
that gives them any different behavior. They're hand scripted to make all these different things happen.

770
00:47:46,127 --> 00:47:47,687
So here I'm popping the head off.

771
00:47:47,687 --> 00:47:51,448
In this one I had to script the body charring and the flames on the ground.

772
00:47:51,448 --> 00:48:01,071
And then finally there was a move I really was hoping we could get into the game but this weapon just didn't make it into the game. It was just a prototype.

773
00:48:01,071 --> 00:48:01,971
It's a grenade launcher.

774
00:48:05,663 --> 00:48:06,123
Sorry, mom.

775
00:48:06,123 --> 00:48:10,666
So let's take a look at that last grenade launcher one.

776
00:48:10,666 --> 00:48:14,228
So basically what it does is, again, pretty simple.

777
00:48:14,228 --> 00:48:17,070
It spawns an explosion at the defender.

778
00:48:17,070 --> 00:48:18,370
And this is a special explosion that

779
00:48:18,370 --> 00:48:19,811
doesn't do any damage to the player,

780
00:48:19,811 --> 00:48:20,992
because that would suck.

781
00:48:20,992 --> 00:48:25,655
And then it uses my favorite functions, the dismemberment

782
00:48:25,655 --> 00:48:28,817
functions, to kind of destroy all the limbs

783
00:48:28,817 --> 00:48:30,458
and the head of the defender.

784
00:48:32,360 --> 00:48:36,423
So just a couple of things about what I was talking about in terms of script.

785
00:48:36,423 --> 00:48:39,686
Those kinds of small details are exactly what I'm talking about when I

786
00:48:39,686 --> 00:48:43,369
say that it's great to move this work onto the designer.

787
00:48:43,369 --> 00:48:47,192
Programmers don't have time for stuff like that, like embedding a shiv in a guy's neck.

788
00:48:47,192 --> 00:48:50,235
It's like a small detail and they have way more important things to do.

789
00:48:50,235 --> 00:48:52,597
They've got to worry about the level heap and that kind of stuff.

790
00:48:53,017 --> 00:48:58,539
So, moving on to the designers allows you to get these kind of cool ideas into the game

791
00:48:58,539 --> 00:49:02,801
cheaply and it allows you to kind of add a lot of personality into your melee system.

792
00:49:02,801 --> 00:49:08,343
So if you take away anything from this talk, just remember to design for the overall package.

793
00:49:08,343 --> 00:49:11,565
Make sure your mechanics harmonize with the rest of the game.

794
00:49:11,565 --> 00:49:16,087
Don't be like an amateur drummer playing too loud and drowning out the rest of the band.

795
00:49:16,087 --> 00:49:20,288
Find a way to level yourself off and harmonize with the rest of the systems in the game.

796
00:49:21,249 --> 00:49:26,354
Design good complexity. Design complexity that doesn't consume too much mind share.

797
00:49:26,354 --> 00:49:31,419
Try to create elegant and simple mechanics that still give you great gameplay.

798
00:49:31,419 --> 00:49:35,444
I highly recommend implementing your system in scripts and having a designer implement it.

799
00:49:35,444 --> 00:49:36,285
I think it's the way to go.

800
00:49:37,185 --> 00:49:40,926
And seriously, camera shake is awesome if you're making a melee game, put it in there.

801
00:49:40,926 --> 00:49:44,947
So finally, I just wanted to throw out some thanks.

802
00:49:44,947 --> 00:49:46,427
I wanted to thank a couple people.

803
00:49:46,427 --> 00:49:51,008
This is Chris Robbins and Ruben Langdon, our awesome stunt actors.

804
00:49:51,008 --> 00:49:53,969
We worked with quite a few stunt actors, but these guys were with us from the beginning

805
00:49:53,969 --> 00:49:56,749
and they really helped to shape the melee system.

806
00:49:56,749 --> 00:50:02,631
Chris was the attacker and Joel, and Ruben was the defender and the infected.

807
00:50:02,631 --> 00:50:03,951
And these guys were great.

808
00:50:04,231 --> 00:50:09,313
I wanted to thank the rest of the Melee team, Lee Davis, Ian Jones, and Ryan McGeary.

809
00:50:09,313 --> 00:50:15,395
I also wanted to thank Ikki Ikram, who hooked me up with all these awesome portraits.

810
00:50:15,395 --> 00:50:18,716
I think this is him from Movember.

811
00:50:18,716 --> 00:50:21,997
And finally, I wanted to thank my fearless leaders, Bruce Straley and Neil Druckmann,

812
00:50:21,997 --> 00:50:23,738
for all their guidance and support.

813
00:50:23,738 --> 00:50:27,059
These guys are a blast to work with and inspire me every day.

814
00:50:27,059 --> 00:50:27,439
They're great.

815
00:50:28,644 --> 00:50:30,245
Finally, there's some other Naughty Dog talks.

816
00:50:30,245 --> 00:50:36,109
You should go see Rob Ruppel talk about art direction at 3 o'clock, Max Decoff talking

817
00:50:36,109 --> 00:50:42,372
about Ellie and AI, Buddy AI and The Last of Us at 4 o'clock, and Vivian Ding talking

818
00:50:42,372 --> 00:50:45,014
about in-game and cinematic lighting at 5.30.

819
00:50:45,014 --> 00:50:52,918
You can hit me up on Twitter, I'm at BadData underscore, and yeah, that's my talk.

820
00:50:52,918 --> 00:50:55,560
Thank you all for coming and enjoy the rest of the conference.

821
00:51:02,648 --> 00:51:09,932
I think we got a couple minutes for questions. Maybe like five minutes or something for questions.

822
00:51:09,932 --> 00:51:13,033
Just going to let that run.

823
00:51:13,033 --> 00:51:13,754
I'll ask a question.

824
00:51:13,754 --> 00:51:15,215
Oh hey, yeah, how's it going?

825
00:51:15,215 --> 00:51:23,199
So, with your, with the really intimate synchronized animations and, you know, the

826
00:51:23,199 --> 00:51:30,303
interacting with the environment and the walls, what was your guys approach to making sure it was safe?

827
00:51:30,884 --> 00:51:33,121
so that people weren't split by doorways or...

828
00:51:34,117 --> 00:51:38,118
you know, I'm not sure I know what you mean. For example in the choke out, what did you guys do

829
00:51:38,118 --> 00:51:44,039
to make sure that the general space that the two characters were in was safe before you

830
00:51:44,039 --> 00:51:49,241
actually allowed the animations to play? Yeah, so what we did is there's, I don't know if

831
00:51:49,241 --> 00:51:53,502
you've been to any of our other talks, you know we have this, I mean it's a common thing,

832
00:51:53,502 --> 00:51:58,124
nav mesh, right? So we've got nav mesh on the ground and instead of using collision which had

833
00:51:58,124 --> 00:52:03,665
all kinds of problems, people would just slide themselves away from the borders of the nav

834
00:52:03,665 --> 00:52:03,785
mesh.

835
00:52:04,225 --> 00:52:09,947
And if we had moves that had like a really large area, like the choke out, exactly like you're talking about,

836
00:52:09,947 --> 00:52:15,909
we would just raise that tolerance, you know, so we would give the player and the enemy a wider berth,

837
00:52:15,909 --> 00:52:18,029
so they would slide a little bit further away from it.

838
00:52:18,029 --> 00:52:22,571
So in some situations it's not ideal, you get a little bit of a slide, but most of the time you don't notice.

839
00:52:22,571 --> 00:52:22,831
Thanks.

840
00:52:24,860 --> 00:52:26,521
Go for it.

841
00:52:26,521 --> 00:52:30,684
How do you sync the loading of animations with the script that

842
00:52:30,684 --> 00:52:31,164
fired them?

843
00:52:31,164 --> 00:52:34,666
Like if the screen is firing an animation or triggering it

844
00:52:34,666 --> 00:52:37,948
and it's not loaded yet, or is it the script that loads?

845
00:52:37,948 --> 00:52:38,369
No.

846
00:52:38,369 --> 00:52:40,150
Everything is manually loaded.

847
00:52:40,150 --> 00:52:42,211
It's like a really full-time job for, well,

848
00:52:42,211 --> 00:52:43,372
it's not a full-time job, but it's

849
00:52:43,372 --> 00:52:45,213
the responsibility of the level designers.

850
00:52:45,213 --> 00:52:48,035
It's like a really intricate balancing act of loading stuff.

851
00:52:48,035 --> 00:52:49,435
And they would just have to know,

852
00:52:49,435 --> 00:52:52,057
if I have these characters in this level,

853
00:52:52,057 --> 00:52:54,318
I'm going to need to load these exact Melee bundles.

854
00:52:54,559 --> 00:52:55,319
Okay, thanks.

855
00:52:55,319 --> 00:52:56,339
Yeah.

856
00:52:56,339 --> 00:52:56,399
Hi.

857
00:52:56,399 --> 00:53:02,622
Could you talk about the process that brought you from this really complicated system and

858
00:53:02,622 --> 00:53:06,724
how you ended up being like, there are, in cases, you know, you're just mashing the button

859
00:53:06,724 --> 00:53:08,185
to make the thing happen.

860
00:53:08,185 --> 00:53:12,807
From a design perspective, what happened at your company to help you realize that that

861
00:53:12,807 --> 00:53:13,887
was the right thing to do, you know?

862
00:53:13,887 --> 00:53:14,748
Like how do you get there?

863
00:53:14,748 --> 00:53:15,088
So, yeah.

864
00:53:15,088 --> 00:53:17,169
I mean...

865
00:53:18,947 --> 00:53:23,730
so really what happened is we were about to put the game in the hands of the

866
00:53:23,730 --> 00:53:27,132
press like people from outside of Naughty Dog were going to play the game and talk

867
00:53:27,132 --> 00:53:28,733
about it to other people

868
00:53:28,733 --> 00:53:30,193
uh... and this just

869
00:53:30,193 --> 00:53:33,775
changed everything like it was like okay no more screwing around like let's make

870
00:53:33,775 --> 00:53:35,076
this happen

871
00:53:35,076 --> 00:53:35,877
uh... and it really uh...

872
00:53:37,077 --> 00:53:41,261
it kind of cut the BS, you know what I mean? It really forced me to make decisions that

873
00:53:41,261 --> 00:53:43,443
actually worked and actually made the game work well.

874
00:53:43,443 --> 00:53:47,186
And that was kind of the thing that pushed me to kind of get over like all the things

875
00:53:47,186 --> 00:53:49,268
that I was too attached to.

876
00:53:49,268 --> 00:53:51,870
Of, you know, I want the system to work this way or something like that.

877
00:53:51,870 --> 00:53:55,393
And it was kind of a teachable moment for me to really kind of

878
00:53:55,393 --> 00:53:57,976
let my ego go off to the side and do what's best for the game.

879
00:53:57,976 --> 00:53:58,897
Anyone else? We've got like two more minutes.

880
00:54:07,545 --> 00:54:10,127
Awesome. Well, thank you guys so much for coming. I really appreciate it.

