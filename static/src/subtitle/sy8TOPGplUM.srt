1
00:00:06,312 --> 00:00:08,313
Hey guys, thank you so much for coming

2
00:00:08,353 --> 00:00:10,035
to our VFX presentation.

3
00:00:10,875 --> 00:00:13,397
Ford and I are looking forward to showing you guys

4
00:00:13,417 --> 00:00:15,098
some of the recent work that we have been doing

5
00:00:15,298 --> 00:00:16,478
over at ILMxLAB.

6
00:00:19,640 --> 00:00:20,621
A little bit about myself.

7
00:00:21,441 --> 00:00:22,602
I'm Martin Lalan Romero.

8
00:00:23,863 --> 00:00:26,405
I have been working in VFX over at ILMxLAB

9
00:00:26,445 --> 00:00:27,365
for about two years.

10
00:00:30,387 --> 00:00:31,428
Mostly in VR projects.

11
00:00:34,277 --> 00:00:37,860
It has been interesting and rewarding for me to be able

12
00:00:37,900 --> 00:00:41,343
to bring in my experience from console and mobile games

13
00:00:41,383 --> 00:00:42,204
to this new media.

14
00:00:43,545 --> 00:00:45,547
And so I'm glad that I get to share with you guys some

15
00:00:45,587 --> 00:00:48,389
of our experiences developing these VR projects.

16
00:00:51,792 --> 00:00:54,974
Before I go any further, I want to thank Mark Teer

17
00:00:55,895 --> 00:00:57,716
and our GDC team who made it possible

18
00:00:57,737 --> 00:00:58,797
for us to be here today.

19
00:00:58,817 --> 00:01:00,719
So please, let's put our hands together for them.

20
00:01:02,420 --> 00:01:02,841
Thank you guys.

21
00:01:12,593 --> 00:01:16,895
We at ILMxLAB are very fortunate to have worked on this new kind of experience

22
00:01:16,915 --> 00:01:21,097
in collaboration with the VOID. And so I'm glad that I get to share with you guys

23
00:01:21,197 --> 00:01:24,659
a video with some of the things that we have worked on lately.

24
00:02:06,249 --> 00:02:06,789
So random.

25
00:02:11,311 --> 00:02:16,753
At ILMxLAB, we focus and pioneer real-time rendered interactive immersive stories on a

26
00:02:16,793 --> 00:02:21,695
variety of platforms, including virtual reality, mixed reality, and more.

27
00:02:23,015 --> 00:02:29,418
ILMxLAB is best known for a few major immersive projects today, including Carne y Arena, directed

28
00:02:29,438 --> 00:02:34,020
by Alejandro Gonzalez-SeÃ±orito, in partnership with Legendary Entertainment.

29
00:02:35,088 --> 00:02:36,529
Reflections, the real-time render,

30
00:02:37,110 --> 00:02:39,731
retro cinematic demonstration created by Epic Games

31
00:02:40,512 --> 00:02:42,453
in collaboration with ILMxLAB

32
00:02:42,793 --> 00:02:45,054
and NVIDIA presented here at GDC last year.

33
00:02:47,135 --> 00:02:49,757
Star Wars, Secrets of the Empire, and Ralph Breaks VR

34
00:02:50,397 --> 00:02:52,539
are critical acclaimed hyper-reality projects

35
00:02:54,039 --> 00:02:55,320
in collaboration with Devoid,

36
00:02:55,360 --> 00:02:56,761
which we're here to talk about today.

37
00:02:57,862 --> 00:03:01,644
And also Vader Immortal along with other projects.

38
00:03:06,729 --> 00:03:08,950
So now, what is a hyperreality experience?

39
00:03:09,370 --> 00:03:11,811
How is this different than any other VR experience?

40
00:03:13,592 --> 00:03:13,972
Excuse me.

41
00:03:14,832 --> 00:03:16,853
Let's start with a brief explanation of the experience

42
00:03:16,873 --> 00:03:18,474
for those of you who haven't tried it yet.

43
00:03:19,454 --> 00:03:20,975
Which, by the way, how many people here

44
00:03:21,015 --> 00:03:22,976
have gone through any of the Void experiences?

45
00:03:24,276 --> 00:03:24,996
All right, quite a few.

46
00:03:28,698 --> 00:03:30,919
A group of four guests put on a VR helmet

47
00:03:30,959 --> 00:03:32,780
with built-in audio and communications.

48
00:03:34,283 --> 00:03:37,264
and a haptic vest with a backpack with a laptop computer.

49
00:03:40,444 --> 00:03:43,805
What each guest sees is generated 90 frames per second

50
00:03:43,925 --> 00:03:45,526
stereo on their backpacks.

51
00:03:48,367 --> 00:03:51,768
They walk around a compact stage with walls they can touch,

52
00:03:52,648 --> 00:03:55,028
but these walls are then displayed in virtual reality,

53
00:03:55,629 --> 00:03:57,589
looking like the Star Wars Secrets of the Empire

54
00:03:57,989 --> 00:03:59,670
and Ralph Breaks VR environments.

55
00:04:05,167 --> 00:04:09,150
The boy uses various tricks to make them feel like they're moving through a much larger space

56
00:04:10,130 --> 00:04:14,693
by using by adding things like multi-sensory elements.

57
00:04:15,354 --> 00:04:15,814
What is that?

58
00:04:17,395 --> 00:04:21,118
Things like heat, wind, and environment sense throughout the journey

59
00:04:21,158 --> 00:04:23,859
so that the user really gets a truly immersive experience.

60
00:04:25,941 --> 00:04:29,863
As an artist, I highly recommend any of you to go ahead and check it out.

61
00:04:31,655 --> 00:04:34,477
I'm not just saying that because I worked on these projects,

62
00:04:34,897 --> 00:04:36,599
but it's an awesome experience that speaks

63
00:04:37,219 --> 00:04:40,742
to the innovation possible within virtual reality.

64
00:04:42,683 --> 00:04:43,984
Now, for those of you who haven't seen

65
00:04:44,004 --> 00:04:45,245
the Rocket Ralph Breaks VR trailer, here you go.

66
00:04:45,265 --> 00:04:45,506
Over here!

67
00:04:45,526 --> 00:04:45,706
Over here!

68
00:04:46,306 --> 00:04:46,506
Over here!

69
00:04:46,526 --> 00:04:46,727
Over here!

70
00:04:46,747 --> 00:04:46,947
Over here!

71
00:04:46,967 --> 00:04:47,187
Over here!

72
00:04:47,207 --> 00:04:47,507
Over here!

73
00:04:47,527 --> 00:04:47,747
Over here!

74
00:04:47,767 --> 00:04:49,769
Over here!

75
00:04:49,789 --> 00:04:52,291
Over here!

76
00:04:52,311 --> 00:04:56,614
Over here!

77
00:04:57,975 --> 00:04:58,156
Over here!

78
00:04:58,176 --> 00:04:58,356
Over here!

79
00:04:58,376 --> 00:04:58,556
Over here!

80
00:05:05,033 --> 00:05:05,794
Aren't they precious?

81
00:05:05,814 --> 00:05:06,394
Surprise!

82
00:05:06,434 --> 00:05:11,816
We're taking you into the internet.

83
00:05:12,476 --> 00:05:14,057
There it is, Gamer Street.

84
00:05:14,477 --> 00:05:17,158
Welcome to Dunder Dome.

85
00:05:17,218 --> 00:05:23,960
Just start pushing everything you can see.

86
00:05:24,161 --> 00:05:25,361
Hurry, guys!

87
00:05:25,421 --> 00:05:25,741
Don't panic.

88
00:05:26,341 --> 00:05:26,802
Hey, anybody?

89
00:05:35,860 --> 00:05:36,800
Virus located.

90
00:05:37,080 --> 00:05:38,121
Ah! Creepy eyeball!

91
00:05:38,461 --> 00:05:38,621
Ah!

92
00:05:38,721 --> 00:05:38,962
Ralph!

93
00:05:40,082 --> 00:05:42,263
Ah! Get off me, you stupid kitty buddy!

94
00:05:42,323 --> 00:05:44,445
Prepare for immediate termination.

95
00:05:45,825 --> 00:05:47,366
Uh-oh! Security drones!

96
00:05:47,666 --> 00:05:49,748
We gotta go help him!

97
00:05:49,768 --> 00:05:49,948
Let's go!

98
00:06:07,865 --> 00:06:11,746
So I'm gonna talk a little bit about production tips

99
00:06:11,806 --> 00:06:13,546
and some of the workflow that we utilize

100
00:06:13,606 --> 00:06:14,466
in some of these projects.

101
00:06:15,467 --> 00:06:17,747
The first example has to do with proceduralism,

102
00:06:18,127 --> 00:06:20,548
repetitive tasks, and being more productive.

103
00:06:21,608 --> 00:06:22,448
What do I mean by that?

104
00:06:24,048 --> 00:06:26,669
Well, we use a production visual effects software

105
00:06:27,969 --> 00:06:31,049
to do things like generating 2D and 3D assets,

106
00:06:32,970 --> 00:06:36,570
look dev, and for all kinds of visual effects prototypes.

107
00:06:38,544 --> 00:06:39,965
The reason why is because of its nature,

108
00:06:40,005 --> 00:06:41,745
which allows us to work faster

109
00:06:41,765 --> 00:06:45,507
by reusing non-destructive systems or tools over and over,

110
00:06:46,107 --> 00:06:48,128
yet being able to add more content to these tools

111
00:06:48,168 --> 00:06:48,808
whenever needed.

112
00:06:50,229 --> 00:06:53,390
Obviously, it takes time to write a tool,

113
00:06:53,430 --> 00:06:54,471
but once you create it,

114
00:06:54,531 --> 00:06:56,492
it will save you hours of repetitive tasks.

115
00:06:59,733 --> 00:07:00,613
And the experience.

116
00:07:01,534 --> 00:07:02,794
We engage players on a level

117
00:07:02,814 --> 00:07:04,535
by having them press a series of buttons

118
00:07:05,756 --> 00:07:06,336
that surround.

119
00:07:07,940 --> 00:07:10,222
these circuit lines around the buttons.

120
00:07:10,962 --> 00:07:12,203
Of course, there's a progression

121
00:07:12,844 --> 00:07:14,905
where there are different states of success

122
00:07:14,985 --> 00:07:17,547
visually displayed by how much the circuits light up

123
00:07:18,888 --> 00:07:20,169
to advance in the experience.

124
00:07:21,590 --> 00:07:24,592
These circuit lines were an essential part of gameplay

125
00:07:24,632 --> 00:07:25,673
by ramping from zero to 100%

126
00:07:25,733 --> 00:07:29,535
at a choreographed sequence of events.

127
00:07:31,777 --> 00:07:33,838
We then use a material inside of the Unreal Engine

128
00:07:33,858 --> 00:07:36,320
with a parameter that will be controlled via code.

129
00:07:37,998 --> 00:07:41,859
As you can see, we're dealing with multiple circuit lines.

130
00:07:41,899 --> 00:07:45,119
We were dealing with about between eight to 10 per button.

131
00:07:45,279 --> 00:07:48,460
So there was a lot of states that we needed to call

132
00:07:49,080 --> 00:07:50,041
on each one of those buttons.

133
00:07:52,261 --> 00:07:53,901
The design team came out with a concept

134
00:07:53,921 --> 00:07:55,622
that at a glance was straightforward

135
00:07:55,702 --> 00:07:58,082
to do this pretty much in any 3D package.

136
00:07:58,762 --> 00:08:01,423
And it could have been done something like this.

137
00:08:02,183 --> 00:08:04,644
You trace some curves, you strew some geometry

138
00:08:04,684 --> 00:08:05,404
out of those curves.

139
00:08:06,291 --> 00:08:08,493
You modify the UVs for each one of those

140
00:08:08,533 --> 00:08:10,494
depending on what the progression was

141
00:08:10,514 --> 00:08:11,295
going to be like.

142
00:08:12,876 --> 00:08:14,858
You select each one of the pieces of geometry,

143
00:08:15,298 --> 00:08:18,561
rename them, export them all out, and you are done.

144
00:08:19,502 --> 00:08:21,903
But the problem with this is that that will only cover one

145
00:08:21,964 --> 00:08:23,845
set of circuit lines.

146
00:08:24,265 --> 00:08:27,308
As you can see, we're dealing with 11, and we had 11 on one

147
00:08:27,348 --> 00:08:29,009
side, 11 on the other side.

148
00:08:29,510 --> 00:08:31,331
And we were trying different things, so the

149
00:08:31,351 --> 00:08:32,432
design was changing.

150
00:08:36,062 --> 00:08:38,544
At this point, the design evolved, as it often does,

151
00:08:39,905 --> 00:08:42,907
and this simple task will have become

152
00:08:43,188 --> 00:08:45,149
extremely repetitive and laborious.

153
00:08:47,431 --> 00:08:50,674
That's when we turned to proceduralism.

154
00:08:51,455 --> 00:08:53,356
We started out by creating the core elements

155
00:08:54,037 --> 00:08:55,658
that would generate the circuit lines,

156
00:08:55,778 --> 00:08:57,220
keeping in mind the variable time

157
00:08:57,700 --> 00:09:00,442
that was required for each one of the buttons,

158
00:09:00,682 --> 00:09:02,464
so the necessary parameters were created.

159
00:09:06,892 --> 00:09:10,093
As you can see in the images, we took our spaghetti nodes

160
00:09:10,333 --> 00:09:11,473
and put them into a neat bundle.

161
00:09:12,293 --> 00:09:16,594
This kept things clean, and it allows us to input curves,

162
00:09:17,334 --> 00:09:20,255
generate then geometry with custom IDVs,

163
00:09:20,855 --> 00:09:22,755
control the position, the scale, the taper,

164
00:09:23,375 --> 00:09:24,975
and whatever parameters we needed.

165
00:09:28,716 --> 00:09:30,276
If we wanted to manipulate curves,

166
00:09:30,796 --> 00:09:32,877
circuit lines individually, we could do that too.

167
00:09:32,937 --> 00:09:35,597
We have full control over the tool.

168
00:09:38,556 --> 00:09:45,859
Here we can see the network that makes up all of the generated circuit lines.

169
00:09:46,759 --> 00:09:52,181
We can easily drive multiple nodes that share the same attribute with one controller.

170
00:09:54,962 --> 00:09:57,883
So at this point the task has been pretty much simplified.

171
00:09:59,624 --> 00:10:01,425
So if the design theme was to change,

172
00:10:01,825 --> 00:10:03,146
the only thing that we will have to do

173
00:10:03,207 --> 00:10:04,267
was to redraw the curves,

174
00:10:04,728 --> 00:10:06,389
but everything else will be generated,

175
00:10:06,449 --> 00:10:08,551
which was the theme that we were looking for.

176
00:10:10,453 --> 00:10:13,155
I was inspired to bring this into the presentation today

177
00:10:14,756 --> 00:10:16,538
based on one of the topics that emerged

178
00:10:17,319 --> 00:10:19,861
from our panel discussion last year,

179
00:10:21,182 --> 00:10:22,943
Pathways to Real-Time Visual Effects,

180
00:10:23,203 --> 00:10:24,645
moderated by Fred Hooper.

181
00:10:25,522 --> 00:10:30,647
One of the topics was about how VFX artists are able to problem solve and do a little bit of everything

182
00:10:30,667 --> 00:10:33,830
and the job to get our tasks done.

183
00:10:34,951 --> 00:10:41,096
So the challenges presented by the circuit lines seem to be a valuable share for this discussion.

184
00:10:45,743 --> 00:10:47,624
All right, let's continue with the slides.

185
00:10:47,644 --> 00:10:52,348
So now we see both sides, the left and the right side

186
00:10:52,368 --> 00:10:54,971
of all the circuit lines with the buttons all completed.

187
00:10:54,991 --> 00:10:57,913
So all the geometry can be generated in no time,

188
00:10:57,953 --> 00:10:58,974
thanks to our little tool.

189
00:11:02,577 --> 00:11:04,438
Now let's talk about the exporting part.

190
00:11:04,679 --> 00:11:06,680
When I said that each one of those lines

191
00:11:07,241 --> 00:11:08,802
was going to be called through code,

192
00:11:09,162 --> 00:11:10,744
I mean each one of those circuit lines.

193
00:11:12,507 --> 00:11:15,129
You couldn't just select a whole bundle of pieces

194
00:11:15,189 --> 00:11:17,530
and export them out and try to control those in Unreal.

195
00:11:17,590 --> 00:11:18,751
That wouldn't just happen.

196
00:11:19,772 --> 00:11:23,254
Unless you can probably get a hell of the ID number

197
00:11:23,294 --> 00:11:25,316
for the polygons, but that was too crazy.

198
00:11:25,336 --> 00:11:28,158
So what we did is we used a Python node

199
00:11:28,238 --> 00:11:29,959
right inside of our workflow nodes

200
00:11:30,760 --> 00:11:33,582
that will export all the shapes with the proper names

201
00:11:34,122 --> 00:11:36,124
needed to be plugged in inside of the Unreal Engine,

202
00:11:36,204 --> 00:11:36,984
which was super cool.

203
00:11:38,035 --> 00:11:40,396
We just click the execute button in the Python node

204
00:11:40,416 --> 00:11:43,477
and it will export all of the shapes as FBX

205
00:11:43,718 --> 00:11:45,378
to a specific directory.

206
00:11:47,659 --> 00:11:48,819
What was good about this process?

207
00:11:50,060 --> 00:11:53,761
One, we needed to provide the necessary shapes

208
00:11:54,041 --> 00:11:56,262
to the design team so they could test them right away.

209
00:11:57,803 --> 00:12:00,444
Doing this manually will have taken a long time

210
00:12:01,044 --> 00:12:03,425
and it will have wasted a lot of development time,

211
00:12:04,125 --> 00:12:06,366
so we ended up just creating a tool for it.

212
00:12:06,906 --> 00:12:07,026
Two.

213
00:12:08,123 --> 00:12:11,766
For each design iteration, not much of the laborious parts

214
00:12:12,066 --> 00:12:15,488
were automated, so this left us to redraw in the curves.

215
00:12:16,008 --> 00:12:17,509
Oddly enough, it was kind of relaxing.

216
00:12:17,910 --> 00:12:19,991
You would just have to retrace the curve, and you were done.

217
00:12:20,471 --> 00:12:23,033
Because it would keep the UV position, the taper, scale,

218
00:12:23,173 --> 00:12:24,494
everything else would just be the same.

219
00:12:26,095 --> 00:12:26,335
Three.

220
00:12:28,016 --> 00:12:30,478
Now we have a tool that generates shapes based on curves,

221
00:12:30,618 --> 00:12:33,399
but also has an iExporter function built in,

222
00:12:34,580 --> 00:12:36,661
which is the main reason why we spend the time working on it.

223
00:12:38,907 --> 00:12:42,448
The fun of being in the feds is that there is always new,

224
00:12:42,628 --> 00:12:47,069
tricky tasks in production, and it's interesting to see

225
00:12:47,169 --> 00:12:49,830
how some of these things get accomplished.

226
00:12:51,950 --> 00:12:55,351
All right, let's move on to talking about Star Wars,

227
00:12:55,371 --> 00:12:57,872
Secrets of the Empire, and some of the VFX

228
00:12:57,892 --> 00:12:59,972
that we did there, so let's go ahead and watch the trailer.

229
00:13:03,793 --> 00:13:04,854
This is Mon Mothma.

230
00:13:07,394 --> 00:13:08,255
I have an assignment.

231
00:13:11,067 --> 00:13:13,670
The Rebellion needs you and we don't have much time.

232
00:13:13,690 --> 00:13:16,874
You must work together.

233
00:13:18,275 --> 00:13:19,196
You must not fail.

234
00:13:19,256 --> 00:13:30,810
In disguise, your team's mission is to recover Imperial intelligence critical to our survival.

235
00:13:38,418 --> 00:13:38,999
You're with me.

236
00:13:39,039 --> 00:13:41,120
The rest of you, get on that skiff.

237
00:13:41,421 --> 00:13:45,163
Do your best to act Imperial.

238
00:13:45,343 --> 00:13:45,904
No!

239
00:13:46,684 --> 00:13:48,225
What the?

240
00:13:48,766 --> 00:13:50,787
Looks like you'll have to fight your way out.

241
00:14:02,976 --> 00:14:03,636
What is that?

242
00:14:05,417 --> 00:14:07,599
This could be a threat to our entire existence.

243
00:14:15,020 --> 00:14:18,623
For the next few slides, I wanna cover

244
00:14:18,723 --> 00:14:20,084
this technique that has been used

245
00:14:21,125 --> 00:14:23,287
for a couple of years now, vertex animation,

246
00:14:23,667 --> 00:14:26,389
specifically the fluid and the soft bodies type.

247
00:14:27,690 --> 00:14:29,372
As we all know, the vertex animation technique

248
00:14:31,313 --> 00:14:32,574
is a pretty good technique to use,

249
00:14:32,614 --> 00:14:33,855
but it can get really expensive,

250
00:14:34,315 --> 00:14:36,037
specifically while working on VR.

251
00:14:37,278 --> 00:14:39,279
At ILMxLAB, we have a pipeline in place

252
00:14:40,460 --> 00:14:42,462
that catches data that...

253
00:14:43,430 --> 00:14:45,392
that we can then bring inside of the Unreal Engine.

254
00:14:45,752 --> 00:14:47,193
Something similar to what the Houdini

255
00:14:48,013 --> 00:14:51,236
game development tools team from SideFX has created.

256
00:14:54,918 --> 00:14:56,179
The first example has to do with

257
00:14:56,199 --> 00:14:58,921
the lava flea monster and particles.

258
00:14:59,321 --> 00:15:03,404
We wanted to have many of these interactions

259
00:15:03,484 --> 00:15:05,605
between objects, animated objects,

260
00:15:06,366 --> 00:15:08,407
and particles and effects.

261
00:15:09,938 --> 00:15:11,379
This was a great opportunity for us

262
00:15:11,419 --> 00:15:13,079
to use the vertex animation technique.

263
00:15:13,159 --> 00:15:15,961
In this case, we're using the fluid type.

264
00:15:17,081 --> 00:15:18,582
Which, by the way, if you really wanna know more

265
00:15:18,622 --> 00:15:20,723
about the different techniques of,

266
00:15:21,224 --> 00:15:23,825
the different types that go inside of vertex animation,

267
00:15:24,445 --> 00:15:26,666
I would recommend looking at Louis Kroll.

268
00:15:26,726 --> 00:15:29,428
He has a lot of videos on Vimeo and also on YouTube.

269
00:15:35,389 --> 00:15:39,811
Here we see the same interaction of the lava flea and the particles, but now the particles

270
00:15:40,132 --> 00:15:41,853
have been converted to measure.

271
00:15:41,913 --> 00:15:44,415
So we get the physics working correctly.

272
00:15:44,455 --> 00:15:47,196
We have the weight and the size of all the particles and everything.

273
00:15:47,497 --> 00:15:48,958
So we're ready to export this out.

274
00:15:50,199 --> 00:15:50,719
Which by the way.

275
00:15:51,707 --> 00:15:54,549
Particles you can also bring in particles, which is another

276
00:15:55,629 --> 00:15:56,910
vertex animation technique

277
00:15:56,930 --> 00:16:04,135
but in this case we needed the measures because we wanted it that you know, the trunkier pieces to behave and to have the look of

278
00:16:04,916 --> 00:16:06,537
Something like lava is splashing around

279
00:16:12,401 --> 00:16:18,286
And here we see this is the final image of the lava flea interacting with the particles and it's all real-time at this point

280
00:16:18,306 --> 00:16:19,386
We're playing this back

281
00:16:20,688 --> 00:16:23,149
And we can trigger the vertex animation

282
00:16:23,370 --> 00:16:25,290
via Blueprint or Sequencer.

283
00:16:33,514 --> 00:16:35,334
Here we see a couple of examples

284
00:16:35,394 --> 00:16:37,575
of deformation and destruction elements

285
00:16:38,395 --> 00:16:41,417
where we utilize the soft bodies technique.

286
00:16:42,837 --> 00:16:45,038
If you have vehicles, you can create this beautiful

287
00:16:45,058 --> 00:16:47,819
like crumpling kind of types of effects.

288
00:16:48,279 --> 00:16:49,440
In this case, we have this platform

289
00:16:49,480 --> 00:16:50,080
and we're just...

290
00:16:51,345 --> 00:16:51,946
destroying them.

291
00:16:57,294 --> 00:17:05,387
Here's another example of the technique. However, you can go crazy with this type of technique like anything else.

292
00:17:06,581 --> 00:17:08,902
If you single this out, if you go into your

293
00:17:09,102 --> 00:17:11,464
development folder and then work and create

294
00:17:11,484 --> 00:17:14,085
a bunch of the stuff, it's gonna work just fine.

295
00:17:14,505 --> 00:17:17,327
But I would suggest testing these things

296
00:17:17,367 --> 00:17:19,048
with the assets that you're gonna utilize

297
00:17:19,108 --> 00:17:20,028
in a full-blown level.

298
00:17:20,409 --> 00:17:24,291
That's when you can start counting how many polys,

299
00:17:24,331 --> 00:17:26,092
how many milliseconds this is taking.

300
00:17:26,712 --> 00:17:29,214
We're working in VR, so we get about 11 milliseconds

301
00:17:29,774 --> 00:17:30,614
all the time, so.

302
00:17:31,515 --> 00:17:35,177
Getting one of these is, you know, you need to know exactly how many frames you have,

303
00:17:35,337 --> 00:17:38,618
how many polys that mesh is going to have to keep everything in control,

304
00:17:38,658 --> 00:17:42,360
otherwise you won't be able to get that in your experience.

305
00:17:43,961 --> 00:17:44,942
Why vertex animation?

306
00:17:46,483 --> 00:17:49,764
Because you get a nice interaction behavior of elements without pain.

307
00:17:50,858 --> 00:17:52,138
for something like collision, which

308
00:17:52,218 --> 00:17:55,180
is the case of the lava flea monster and the particles.

309
00:17:55,340 --> 00:17:57,701
We didn't want to pay for that collision interaction inside

310
00:17:57,721 --> 00:17:58,101
of Unreal.

311
00:17:58,121 --> 00:18:00,102
Doing that with every one of the characters

312
00:18:00,122 --> 00:18:01,082
would have been crazy.

313
00:18:01,102 --> 00:18:02,803
It just would never happened.

314
00:18:04,364 --> 00:18:05,784
There is also the fact that you can

315
00:18:06,205 --> 00:18:09,626
bake complex visual behaviors and import them

316
00:18:09,666 --> 00:18:12,507
into a real-time engine that otherwise

317
00:18:12,547 --> 00:18:14,948
would be impossible to do, at least in a production setting.

318
00:18:23,744 --> 00:18:25,365
Now for the next few slides, I wanna cover

319
00:18:26,645 --> 00:18:34,607
how we did the netizens and the vehicle density

320
00:18:34,787 --> 00:18:36,688
inside of Ralph Breaks VR.

321
00:18:38,328 --> 00:18:41,389
For the close-up vehicles, we utilized 3D models

322
00:18:41,569 --> 00:18:42,789
as well as vertex animation.

323
00:18:43,450 --> 00:18:46,531
And for the vehicles, far away we relied

324
00:18:46,791 --> 00:18:49,911
on particle billboards and also imposters.

325
00:18:56,498 --> 00:19:00,400
In the slides, you can see the different layers of vehicles.

326
00:19:00,440 --> 00:19:03,942
We had a lot of, there was a lot of vehicles in the label,

327
00:19:04,122 --> 00:19:06,623
right, and the internet area, we couldn't just rely

328
00:19:06,663 --> 00:19:10,405
on one type of technique to sell the high volume

329
00:19:10,425 --> 00:19:14,787
of traffic and netizens as seen in the film.

330
00:19:15,227 --> 00:19:17,788
So, like I said before, we utilized different techniques

331
00:19:17,808 --> 00:19:22,090
to be able to have something close to what the movie had,

332
00:19:22,250 --> 00:19:24,111
but also a good performance.

333
00:19:29,827 --> 00:19:32,627
For the vertex animation technique

334
00:19:32,647 --> 00:19:34,767
of the net essence material, we added controllers

335
00:19:34,808 --> 00:19:38,468
so that we could mask out the different parts of the body

336
00:19:38,988 --> 00:19:41,529
to be able to randomize and change the color of the skin,

337
00:19:41,949 --> 00:19:45,790
hair, skirt, pants, by using dynamic parameters

338
00:19:45,850 --> 00:19:46,650
inside of Cascade.

339
00:19:47,310 --> 00:19:49,270
This gave us a good amount of randomization,

340
00:19:49,930 --> 00:19:53,331
as shown in the videos, and we were able

341
00:19:53,371 --> 00:19:56,372
to get a pretty close look to the movie version.

342
00:19:59,550 --> 00:20:02,733
So for the high density of vehicles and the netizens,

343
00:20:03,353 --> 00:20:09,619
we realized early on that we needed different techniques

344
00:20:09,659 --> 00:20:12,041
to be able to sell this moment.

345
00:20:14,503 --> 00:20:17,045
We learned that vertex animation, excuse me.

346
00:20:18,578 --> 00:20:21,320
We learned that vertex animation and impostors

347
00:20:21,520 --> 00:20:23,061
are really good techniques to use,

348
00:20:23,701 --> 00:20:26,363
but the problem with that is you get only so much control

349
00:20:26,883 --> 00:20:27,563
on these objects.

350
00:20:28,224 --> 00:20:32,806
To create new objects that you could manipulate

351
00:20:32,906 --> 00:20:35,867
or send through path and things like that,

352
00:20:35,968 --> 00:20:38,409
we needed to pretty much come up with a new system

353
00:20:38,489 --> 00:20:38,989
to do that.

354
00:20:40,890 --> 00:20:43,652
We were able to mimic the density shown in the film

355
00:20:44,112 --> 00:20:46,693
by using all the techniques mentioned before.

356
00:20:47,832 --> 00:20:50,215
At the end of the day, it's all smoke and mirrors.

357
00:20:51,477 --> 00:20:54,680
As VFX artists, we do what we have to do to get our job done.

358
00:20:55,902 --> 00:20:58,285
These projects that I worked on were really fun,

359
00:20:58,345 --> 00:21:01,048
and I'm so excited to be part of the team.

360
00:21:01,468 --> 00:21:04,492
And I cannot wait to show you guys the projects

361
00:21:04,512 --> 00:21:05,413
that we're working on right now.

362
00:21:05,994 --> 00:21:06,595
Thank you so much.

363
00:21:07,075 --> 00:21:08,116
That's it for my part of the talk.

364
00:21:19,892 --> 00:21:20,392
Any questions?

365
00:21:20,412 --> 00:21:34,975
Hey, thank you for the talk.

366
00:21:35,515 --> 00:21:38,956
I want to ask, can you trigger a different part of your

367
00:21:39,076 --> 00:21:42,517
bait vertex animation based on your gameplay interaction?

368
00:21:43,726 --> 00:21:44,167
Yes, you can.

369
00:21:44,627 --> 00:21:44,787
Yeah.

370
00:21:45,127 --> 00:21:46,348
You can set it up in the material.

371
00:21:47,870 --> 00:21:50,392
The material that comes, actually,

372
00:21:50,412 --> 00:21:53,815
if you look at the material that the guys from the game

373
00:21:53,835 --> 00:21:56,216
development tools has created, there's

374
00:21:56,257 --> 00:21:59,279
a portion at the end where it has something like the frame.

375
00:21:59,319 --> 00:22:01,301
You can actually modify that parameter,

376
00:22:01,661 --> 00:22:04,183
and you can tell it which frame you want it to start at.

377
00:22:05,184 --> 00:22:07,306
So you can trigger it at different frames.

378
00:22:08,346 --> 00:22:08,527
Thank you.

379
00:22:12,958 --> 00:22:16,921
So my team and I, we were recently using imposters in VR.

380
00:22:17,141 --> 00:22:20,003
We were using imposters because we wanted to bring in Houdini

381
00:22:20,023 --> 00:22:21,444
effects into our game.

382
00:22:22,484 --> 00:22:23,945
The problem that we found with VR

383
00:22:24,105 --> 00:22:27,448
was that because it's two different cameras,

384
00:22:27,908 --> 00:22:30,870
we had to get the sprite sheet to be like 8K.

385
00:22:31,010 --> 00:22:33,252
So it ended up taking a massive amount of computing

386
00:22:33,272 --> 00:22:35,733
in order to get it so that it displayed

387
00:22:35,753 --> 00:22:36,994
two different images to the eyes.

388
00:22:37,775 --> 00:22:40,236
What did you do in order in like?

389
00:22:40,777 --> 00:22:42,298
for in order to use the imposters,

390
00:22:42,338 --> 00:22:44,040
did you end up using a massive sprite sheet

391
00:22:44,120 --> 00:22:45,502
or did you find another alternative?

392
00:22:46,763 --> 00:22:49,686
We actually didn't have that problem

393
00:22:49,886 --> 00:22:52,008
because the vehicles were really far,

394
00:22:52,749 --> 00:22:54,171
so we didn't really encounter that.

395
00:22:54,731 --> 00:22:56,333
We didn't have to do anything, actually.

396
00:22:56,413 --> 00:22:59,476
It was pretty much straight out of the box.

397
00:22:59,516 --> 00:23:00,777
We just followed the instructions.

398
00:23:03,015 --> 00:23:05,016
Unreal, the Unreal documentation for impostors,

399
00:23:05,436 --> 00:23:08,917
we generated the impostors right inside of the Unreal Engine 4

400
00:23:09,077 --> 00:23:11,778
and didn't really deal with that problem.

401
00:23:11,798 --> 00:23:12,759
So I don't know.

402
00:23:13,559 --> 00:23:13,839
Thank you.

403
00:23:14,119 --> 00:23:14,300
Yeah.

404
00:23:19,042 --> 00:23:19,562
Anybody else?

405
00:23:22,323 --> 00:23:22,643
All right, then.

406
00:23:22,943 --> 00:23:23,363
Thank you, guys.

