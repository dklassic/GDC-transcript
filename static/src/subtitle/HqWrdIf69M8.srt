1
00:00:03,621 --> 00:00:15,311
Good afternoon. My name is Oliver Franzke and I'm here today with Marc Cook to talk about some of the lessons we learned from remastering the classic LucasArts adventure games Day of the Tentacle and Grim Fandango.

2
00:00:16,192 --> 00:00:23,598
And we're going to be talking about the general philosophy we used when working on these projects as well as the kind of the process we were following.

3
00:00:24,199 --> 00:00:27,102
And of course there will be lots of like unique challenges we're facing.

4
00:00:27,122 --> 00:00:32,768
You know when working on these games and just in case it's been moving out 20

5
00:00:32,808 --> 00:00:37,112
years since you've seen the appendix of an angle. Here's just a super quick

6
00:00:37,193 --> 00:00:37,793
reminder.

7
00:00:37,813 --> 00:00:40,696
When those the U.S.

8
00:00:54,614 --> 00:00:57,435
All right so not fancy but just want to give you an impression of what we're

9
00:00:57,455 --> 00:01:00,097
going to be talking about now before we're going to get into the middle of

10
00:01:00,117 --> 00:01:04,620
the talk just a few words about us as the speakers as a set. My name is

11
00:01:04,680 --> 00:01:08,442
Oliver and I was the lead programmer on that the technical be mustered.

12
00:01:09,143 --> 00:01:12,245
And for the last 7 years I've been working for Double Fine Productions

13
00:01:12,925 --> 00:01:18,229
in the role of the lead programmer on various projects like, for example, Broken Age and most recently Full Throttle Remastered.

14
00:01:19,070 --> 00:01:26,476
Before Double Fine, I actually used to work for LucasArts, where I was part of the team that brought you the Monkey Island Special Editions.

15
00:01:27,116 --> 00:01:30,957
So for me as a lifelong adventure game fan as well as a program. It was a

16
00:01:30,977 --> 00:01:35,918
really cool opportunity to kind of you know help to bring these

17
00:01:35,958 --> 00:01:40,059
games to a whole new generation of of players as well as like hardware and to

18
00:01:40,099 --> 00:01:44,039
make them accessible again and this also allowed me to kind of see how the

19
00:01:44,079 --> 00:01:47,940
adventure game John rest of the evolved over the years as well as kind of the

20
00:01:48,000 --> 00:01:50,901
development process behind these games.

21
00:01:53,279 --> 00:01:55,059
And hello everybody, my name is Mark Cook,

22
00:01:55,400 --> 00:01:57,921
and I am the CEO of a studio here in San Francisco

23
00:01:57,961 --> 00:01:59,982
called Shiny Shoe that I founded five years ago.

24
00:02:00,883 --> 00:02:02,824
And like Oliver, I've worked on a bunch of different games

25
00:02:02,844 --> 00:02:05,225
throughout my career, but recently we've been working

26
00:02:05,265 --> 00:02:07,746
with Double Fine on all of these Tim Schafer designed

27
00:02:08,487 --> 00:02:10,008
classic adventure game remasters.

28
00:02:10,468 --> 00:02:12,489
So Grim Fandango, Day of the Tentacle,

29
00:02:12,569 --> 00:02:14,190
and now we have Full Throttle in production.

30
00:02:15,230 --> 00:02:17,171
But today I'm here to talk about Grim Fandango.

31
00:02:17,711 --> 00:02:20,352
And if you look closely at my little game list here,

32
00:02:20,472 --> 00:02:22,093
you'll see that it pops up twice.

33
00:02:22,873 --> 00:02:25,154
And that's because not only did I work on the remaster

34
00:02:25,514 --> 00:02:27,715
as both a producer and as an engineer,

35
00:02:28,355 --> 00:02:31,577
I also was an intern at LucasArts in 1997

36
00:02:32,277 --> 00:02:33,217
and worked on the original,

37
00:02:33,497 --> 00:02:35,898
writing code that I'm certain was thrown in the garbage can

38
00:02:35,918 --> 00:02:36,999
the second I left for the summer.

39
00:02:37,719 --> 00:02:40,180
But that does give me a little bit of extra perspective

40
00:02:40,940 --> 00:02:42,821
about kind of some of the challenges that we had

41
00:02:42,881 --> 00:02:44,001
during the remastering process.

42
00:02:44,904 --> 00:02:46,045
So I'm gonna hand it back to Oliver,

43
00:02:46,085 --> 00:02:47,868
who's gonna go over our philosophy

44
00:02:48,029 --> 00:02:50,312
of what we think goes into making a good remaster,

45
00:02:50,673 --> 00:02:51,895
which is really the kind of thread

46
00:02:51,935 --> 00:02:53,938
that ties the two games together,

47
00:02:54,099 --> 00:02:56,022
and then Oliver's gonna talk about Day of the Tentacle.

48
00:02:56,062 --> 00:02:56,903
So take it away.

49
00:02:56,923 --> 00:02:58,125
All right, thanks, Mark.

50
00:02:59,122 --> 00:03:03,164
Well the most important point I want to make here is that everyone on the

51
00:03:03,204 --> 00:03:06,745
remaster team really was a huge fan of these classic games, you know we all

52
00:03:06,785 --> 00:03:09,747
played them and we were younger and you know you like the writing and the

53
00:03:09,787 --> 00:03:14,069
humor and the puzzles and out some we really didn't see any reason to change

54
00:03:14,109 --> 00:03:18,491
that what we did want to change was to you know how easy it is to play these

55
00:03:18,531 --> 00:03:22,393
games and most specifically to make them available on platforms that they

56
00:03:22,433 --> 00:03:25,995
previously went on like you know contemporary consoles or mobile devices.

57
00:03:27,496 --> 00:03:30,918
While doing that it was important to us to stay true to the original artistic

58
00:03:30,958 --> 00:03:35,101
intent so that the games would end up releasing would be something that we

59
00:03:35,121 --> 00:03:39,884
would be proud of but also the development team would be happy with.

60
00:03:40,305 --> 00:03:43,387
Now of course we're talking about remastered versions so we want to

61
00:03:43,407 --> 00:03:45,428
improve the fidelity wherever it was possible.

62
00:03:46,909 --> 00:03:50,530
Now doing this you know while staying kind of close to the original art style,

63
00:03:51,030 --> 00:03:54,951
but still using you know the hardware that we have and its capabilities to

64
00:03:55,351 --> 00:03:58,192
create a kind of a beautiful modern version of the same game.

65
00:03:59,052 --> 00:04:02,633
Now there are some features that really didn't hold up very well over the 20

66
00:04:02,953 --> 00:04:06,294
years and we wanted to modernize those delicately so that

67
00:04:06,714 --> 00:04:10,236
you know the game conforms to modern standards, but still the original

68
00:04:10,256 --> 00:04:11,176
gameplay is preserved.

69
00:04:11,816 --> 00:04:15,597
And of course it's not a big surprise when the original games ship back in the

70
00:04:15,757 --> 00:04:19,679
90's, they ship with bugs. And we want to take the opportunity we had with these

71
00:04:19,759 --> 00:04:23,260
remastered versions to fix as many of these bugs as possible to create a much

72
00:04:23,320 --> 00:04:28,422
more polished experience. And of course lastly we want to do something for

73
00:04:28,822 --> 00:04:31,643
hardcore fans of these games. I'm sure there are many people here who

74
00:04:31,663 --> 00:04:34,704
played these games a whole bunch of times, know all the puzzles inside out,

75
00:04:35,265 --> 00:04:39,486
and for you we wanted to add features like the developer commentary

76
00:04:39,666 --> 00:04:40,686
or the concept art gallery.

77
00:04:41,087 --> 00:04:43,328
So that's something extra to explore.

78
00:04:44,529 --> 00:04:46,750
And I want to point out that this is not just

79
00:04:46,830 --> 00:04:50,072
a kind of theoretical framework we made up here for GDC

80
00:04:50,132 --> 00:04:53,274
because we needed something for the talk as a takeaway point.

81
00:04:53,634 --> 00:04:55,575
But we really believe that this is a set of rules

82
00:04:55,615 --> 00:04:58,157
that helps you to take a good classic game, or even

83
00:04:58,177 --> 00:04:59,678
a great classic game, and turn it

84
00:04:59,738 --> 00:05:01,439
into a very strong remastered version.

85
00:05:02,159 --> 00:05:06,523
And thankfully, both players as well as the press seem to agree with us and we

86
00:05:06,543 --> 00:05:11,687
got a lot of positive feedback from players and the press and both

87
00:05:11,927 --> 00:05:15,750
tentacle and going to combine move more than 5 million units which made them

88
00:05:15,990 --> 00:05:20,113
actually more successful than the original versions. So that was kind of a

89
00:05:20,373 --> 00:05:21,094
real big honor.

90
00:05:21,935 --> 00:05:25,618
But now let's see how this applies to you know real project and the next 20

91
00:05:25,998 --> 00:05:30,922
minutes or so I'm going to talk about how we got from this to that.

92
00:05:31,891 --> 00:05:35,857
Now the original version of the tentacle was released in 1993 and was

93
00:05:35,957 --> 00:05:40,303
called that by industry legends. Tim Schaefer and Dave Grothman and in

94
00:05:40,343 --> 00:05:43,948
this sequel to make mention you return to the mention this but not

95
00:05:43,988 --> 00:05:47,593
live in a hoagie to investigate and stop a tentacle invasion.

96
00:05:48,354 --> 00:05:51,315
And this came off and come up if you ask people what their favorite venture

97
00:05:51,335 --> 00:05:54,076
game is you know people just you know a lot of doubt style and the

98
00:05:54,117 --> 00:05:57,278
human to kind of historical context so it

99
00:05:57,298 --> 00:06:00,300
really was you know made this a prime candidate for a master

100
00:06:00,320 --> 00:06:03,421
version and the most of it was released last

101
00:06:03,461 --> 00:06:06,263
year. So you can now play the tentacle

102
00:06:06,303 --> 00:06:09,304
remastered on places for and be the you know desktop

103
00:06:09,324 --> 00:06:11,726
platforms as well as I was mobile devices.

104
00:06:12,772 --> 00:06:17,357
And with all of these remastering projects, our process really starts with game archaeology.

105
00:06:17,697 --> 00:06:25,125
And what I mean by that is we essentially have to go through and identify and sort through lots of files associated with the original project.

106
00:06:25,745 --> 00:06:30,911
Or if you want, we have to excavate gaming artifacts, which is a much more cool way of presenting the same thing.

107
00:06:31,491 --> 00:06:34,912
Now in this case is meant to the team could go up to skyrocket ranch North of

108
00:06:34,932 --> 00:06:39,414
San Francisco to look at the physical archives to scan some of these original

109
00:06:39,454 --> 00:06:44,436
concept of paintings for the concept of gallery of course for me as a programmer

110
00:06:44,776 --> 00:06:48,517
what's much more interesting is the digital game archaeology now the way the

111
00:06:48,617 --> 00:06:52,819
archiving process worked in the 90's that looks out was that at the end of a

112
00:06:52,859 --> 00:06:56,120
project the argument he would come up with make an image of all of the

113
00:06:56,220 --> 00:06:57,060
developers computers.

114
00:06:57,720 --> 00:07:01,542
and this is what we got back from the occupying team. So the first that really

115
00:07:01,582 --> 00:07:05,864
was to go through dislike long list of files said that often like

116
00:07:06,325 --> 00:07:09,626
conflicting or complimentary and sometimes uh...

117
00:07:10,087 --> 00:07:13,568
redundant to come up with some kind of master list that would uniformed of

118
00:07:13,988 --> 00:07:16,190
foundation for uh... the remastered version.

119
00:07:17,384 --> 00:07:19,966
Now for the remainder, I'm sure you're not very interested in

120
00:07:20,566 --> 00:07:22,408
various documents and design documents.

121
00:07:22,968 --> 00:07:24,689
So for the remainder of the discussion of data tentacle,

122
00:07:24,829 --> 00:07:29,372
I'll focus on the source code needed to compile data

123
00:07:29,392 --> 00:07:31,414
tentacle, the original version, as well as the original

124
00:07:31,454 --> 00:07:32,394
binary pack files.

125
00:07:33,235 --> 00:07:37,496
And before I'm going to show you how we use that to create the remastered version,

126
00:07:38,016 --> 00:07:41,618
I want to take you on a brief historical detour to talk about the engine

127
00:07:41,638 --> 00:07:44,759
used to create the original version with.

128
00:07:45,759 --> 00:07:49,161
Now probably many of you know that the technical was created with an engine

129
00:07:49,181 --> 00:07:49,661
called Scum.

130
00:07:50,600 --> 00:07:54,362
Now scum is an abbreviation that stands for script creation utility for

131
00:07:54,402 --> 00:07:58,403
maniac mention so as the name gives away it was a piece of technology

132
00:07:58,443 --> 00:08:01,904
developed in the mid to late 80's at LucasArts for the cult classic

133
00:08:01,944 --> 00:08:06,806
adventure game maniac mention and in many ways come really was a

134
00:08:06,866 --> 00:08:10,647
revolutionary piece of technology and I'll go into that a little bit more in

135
00:08:10,727 --> 00:08:14,569
just one 2nd, but of course what's much more important is that scum

136
00:08:14,809 --> 00:08:16,349
powered a lot of great games.

137
00:08:17,010 --> 00:08:20,692
So here you can see all the 12 games made a look is also a course of 10

138
00:08:21,013 --> 00:08:25,235
years. And the I consider all of these kind of classics. Now I'm really

139
00:08:25,276 --> 00:08:28,978
curious who you in the audience has played at least 2 of these games

140
00:08:29,058 --> 00:08:29,759
please raise your hand.

141
00:08:30,399 --> 00:08:34,662
Wow nice nice all right wait wait that's one more who in the audience

142
00:08:34,682 --> 00:08:39,445
has played every single one of these games. Wow fantastic well then

143
00:08:39,706 --> 00:08:39,986
awesome.

144
00:08:42,207 --> 00:08:45,628
Now one thing you notice is that Grim Fandango is not in this list and that's

145
00:08:45,668 --> 00:08:50,490
not because I want to be mean to Mark. Actually Mark will later cover why Grim

146
00:08:50,550 --> 00:08:55,351
is not in this list. Now as me as an adventure game fan as well as programmer

147
00:08:55,471 --> 00:08:59,233
the first question I ask myself is you know what made SCUMM so special like why

148
00:08:59,273 --> 00:09:03,814
was it used for so many fantastic games and what we figured out pretty quickly

149
00:09:03,894 --> 00:09:07,715
was that SCUMM really was the first major reusable game engine.

150
00:09:08,729 --> 00:09:11,511
because you have to bear in mind in the mid to late 80's it was still pretty

151
00:09:11,531 --> 00:09:15,454
common to write your entire game, including the gameplay, in C or even

152
00:09:15,495 --> 00:09:19,678
assembly. Now with SCUMM the developers went a completely different direction by

153
00:09:19,738 --> 00:09:24,222
moving all of the gameplay logic into a high-level domain-specific language that

154
00:09:24,242 --> 00:09:24,863
they called SCUMM.

155
00:09:25,644 --> 00:09:28,787
So in other words being mentioned introduced scripting or at least

156
00:09:28,847 --> 00:09:32,451
popular scripting in the games industry. Now of course scripting but then had

157
00:09:32,491 --> 00:09:36,094
the same benefits that it has now that's much faster and easier to you

158
00:09:36,114 --> 00:09:40,399
know right script and iterate on that and I really believe that this like

159
00:09:40,459 --> 00:09:42,501
improved turnaround time really kind of.

160
00:09:43,082 --> 00:09:46,624
empowered the development team and like you know help them to be more creative

161
00:09:46,644 --> 00:09:50,727
because they could try it various ideas a quickly like you know check this out

162
00:09:50,787 --> 00:09:53,289
and if didn't work he could just move on to something else.

163
00:09:55,110 --> 00:09:58,773
Now the whole bunch of other things that's come really you know have mind

164
00:09:58,793 --> 00:10:01,835
blowing features and I'm going to be teasing you because I don't have time to

165
00:10:01,875 --> 00:10:04,577
talk about it, but if you're interested in that please find me off to the

166
00:10:04,617 --> 00:10:07,559
presentation and I can talk about some of those.

167
00:10:08,600 --> 00:10:11,722
Now one thing I do want to mention those just like today,

168
00:10:11,882 --> 00:10:15,184
the actual gameplay scripts, the text version wasn't used when you know

169
00:10:15,204 --> 00:10:19,046
running these games instead they were turned into a by code representation

170
00:10:19,086 --> 00:10:23,929
that was then executed by the speed and engine layer now in addition to you

171
00:10:23,949 --> 00:10:28,191
know running the gameplay scripts. Sputum also did other engine the things

172
00:10:28,251 --> 00:10:31,153
like you know create a frame but for and it was already an input and memory

173
00:10:31,213 --> 00:10:32,534
and father on but not.

174
00:10:33,234 --> 00:10:47,139
Now one thing that's kind of important here is that Sputum was very portable and that was despite the fact that a lot of the code in Sputum was actually implemented in assembly so that it would run fast enough on, you know, a Commodore 64 and other platforms.

175
00:10:47,639 --> 00:10:59,323
But due to a design decision made from the very first version of SCUMM, that was that every single function in Sputum had to have a C implementation. It made this very, very portable.

176
00:11:00,103 --> 00:11:04,547
activity helped us with the this the remastered version because all we need

177
00:11:04,567 --> 00:11:09,691
to do is to get to see code and you know make it compiling this one compilers of

178
00:11:09,751 --> 00:11:12,533
course you know there were some changes yet to make because compilers had

179
00:11:12,553 --> 00:11:17,096
changed over the years. But you know we had the game compiling pretty quickly.

180
00:11:18,011 --> 00:11:21,213
Now like a sudden beginning one of the goals was to stay true to the original

181
00:11:21,253 --> 00:11:24,335
version and we want to go further we actually want to run the original

182
00:11:24,355 --> 00:11:28,778
gameplay scripts this division of that against the original game play against

183
00:11:28,798 --> 00:11:32,581
the original engine in other words we want to run the game in the sandbox so

184
00:11:32,621 --> 00:11:36,063
as far as they have attended those concern it is still running on a dust

185
00:11:36,083 --> 00:11:36,464
computer in 1993.

186
00:11:38,085 --> 00:11:42,008
and then our remastering framework essentially just wraps around that so

187
00:11:42,109 --> 00:11:44,931
every frame we look at the internal state that's come has and then

188
00:11:45,011 --> 00:11:50,036
reinterpret that using the remastered content so for example in this case we

189
00:11:50,116 --> 00:11:52,798
asked the game you know which environment I and well it's the office

190
00:11:53,339 --> 00:11:56,122
so we're going to look up the textures associated with the office background

191
00:11:56,222 --> 00:11:58,904
and draw those instead of the original image

192
00:11:59,605 --> 00:12:02,788
same for characters you know which kind of visible and when what's animation

193
00:12:02,808 --> 00:12:03,028
state.

194
00:12:03,894 --> 00:12:08,117
you know we find it out and then we use them high resolution of a master

195
00:12:08,257 --> 00:12:12,439
animation sprites instead of the original sprites

196
00:12:13,080 --> 00:12:16,922
and of course you know the same applies to audio. Now this design has one

197
00:12:17,062 --> 00:12:19,644
major benefit and that is that the original game still produces a

198
00:12:19,664 --> 00:12:23,186
completely valid frame buffer which means we can very easily you know

199
00:12:23,226 --> 00:12:26,168
blend between the remastered version and the classic version.

200
00:12:26,668 --> 00:12:29,150
Now here's a specific example how that looks in the game.

201
00:12:30,772 --> 00:12:34,996
And this really very quickly became a fan favorite, you know people love like

202
00:12:35,056 --> 00:12:39,040
toggling back and forth between these 2 versions and kind of comparing them and

203
00:12:39,100 --> 00:12:42,384
as a program I kind of find it a little bit amusing because all we do is blend

204
00:12:42,404 --> 00:12:45,587
between 2 textures and do some translation. But it just shows you that

205
00:12:45,627 --> 00:12:49,931
sometimes you know the simplest feature really can can add a lot of value to

206
00:12:49,991 --> 00:12:50,692
your to your game.

207
00:12:52,204 --> 00:12:56,767
Now I mention that we draw from us a content rather than the original one,

208
00:12:56,807 --> 00:13:00,850
but so far have any talked about where that comes from and despite what some

209
00:13:00,870 --> 00:13:04,513
people on the Internet might claim the remastered does not credit to some kind

210
00:13:04,533 --> 00:13:08,936
of automatic process upscaling filter or something like that people on team will

211
00:13:08,956 --> 00:13:11,238
get very angry if you are some that.

212
00:13:12,599 --> 00:13:16,322
Every single image in all of the our most of games has been hand crafted by

213
00:13:16,362 --> 00:13:19,885
an artist and this process really starts this content extraction so in other

214
00:13:19,905 --> 00:13:24,910
words we run some code on the original a binary pack files to extract and all

215
00:13:24,930 --> 00:13:29,674
the images associated with the different backgrounds and the animation sprites

216
00:13:30,114 --> 00:13:33,317
and other things like you know audio and you know compiled by code and stuff

217
00:13:33,337 --> 00:13:33,657
like that.

218
00:13:34,498 --> 00:13:38,961
and because this will be the foundation, the starting point for the art team for

219
00:13:39,001 --> 00:13:44,345
their remastering process. At this point, we also do apply content upscale.

220
00:13:44,866 --> 00:13:49,449
So here's a quick comparison between the pixel density of the original version on

221
00:13:49,469 --> 00:13:53,372
the left and the remastered version on the right. So you can see there are quite a

222
00:13:53,412 --> 00:13:55,093
lot more pixels that we can play with.

223
00:13:55,933 --> 00:14:00,154
you know this is really you know what we wanted to do as I said we wanted to you

224
00:14:00,174 --> 00:14:04,435
know improve the fidelity but not you know TV a too much from the outside we

225
00:14:04,475 --> 00:14:08,536
wanted to stay true to that original version. But just you know make it more

226
00:14:08,556 --> 00:14:09,136
high resolution.

227
00:14:09,957 --> 00:14:12,997
Now we can finally start actually looking at how you know these assets

228
00:14:13,017 --> 00:14:17,078
were remastered for environments. These were painted in Photoshop and we had an

229
00:14:17,158 --> 00:14:21,579
automatic import process that would take these extracted upscaled images and

230
00:14:21,639 --> 00:14:22,800
turn them into a Photoshop file.

231
00:14:23,740 --> 00:14:27,181
Now you can see on the right inside the the scene layout is actually very well

232
00:14:27,221 --> 00:14:31,383
defined and using for the shop folders and layers and naming conventions there

233
00:14:31,883 --> 00:14:34,284
and this would later become helpful for the exporter.

234
00:14:35,184 --> 00:14:39,366
Now once we have this we can hand it off to an artist and they will go and paint

235
00:14:39,486 --> 00:14:39,646
over.

236
00:14:40,607 --> 00:14:44,068
the original version and once the happy with what they have for just want to see

237
00:14:44,108 --> 00:14:47,409
how the current version looks in the game they can run an automatic export

238
00:14:47,449 --> 00:14:51,131
process that will then use the matter information stored in the same

239
00:14:51,171 --> 00:14:54,732
structure to export all the remastered high resolution sprites

240
00:14:55,833 --> 00:14:59,774
at this point office can also add additional images that might be necessary

241
00:14:59,814 --> 00:15:03,275
like for example, the outlines for the object

242
00:15:03,295 --> 00:15:07,537
highlighting feature is one of these examples or particles rights. Although

243
00:15:07,577 --> 00:15:09,158
we didn't really use them all of them.

244
00:15:10,596 --> 00:15:14,899
Now before going to talk about how what tool the use and come to pipeline behind

245
00:15:15,079 --> 00:15:18,441
the most of the animation data and one of a briefly talk about how scum

246
00:15:18,501 --> 00:15:22,744
represented animations internally characters were represented to data

247
00:15:22,764 --> 00:15:26,807
structure called actor and actor really was just a packet of values that had

248
00:15:26,867 --> 00:15:30,909
like position and scale and which environment they win, but also contain

249
00:15:30,929 --> 00:15:31,890
the point to a costume.

250
00:15:32,630 --> 00:15:34,952
So just like a real actor, you know, performing in a play,

251
00:15:34,992 --> 00:15:36,754
before you step onto the stage, you're

252
00:15:36,774 --> 00:15:37,674
going to put on a costume.

253
00:15:38,195 --> 00:15:39,936
And through the course of a play,

254
00:15:39,976 --> 00:15:41,657
you might actually wear different costumes.

255
00:15:42,318 --> 00:15:44,740
And so this kind of similarity to a stage play,

256
00:15:44,780 --> 00:15:46,621
you'll actually see multiple times

257
00:15:47,061 --> 00:15:48,062
throughout the design of SCUMM.

258
00:15:48,855 --> 00:15:52,398
Now a costume internally really just kind of contains all the animation data

259
00:15:52,478 --> 00:15:54,960
necessary for a cut scene or a certain game play action.

260
00:15:55,640 --> 00:16:00,144
So internally it's a tree structure that can have one or more animations.

261
00:16:01,065 --> 00:16:03,427
Each one of these animations can have

262
00:16:04,748 --> 00:16:09,071
one or more animation instances called chores and I'm going to get back to those in just one second.

263
00:16:09,672 --> 00:16:13,475
And then finally each chore or animation instance can have one or more animation layers

264
00:16:14,536 --> 00:16:16,317
that were historically called limbs.

265
00:16:17,178 --> 00:16:21,319
And this layout structure was used mostly to make it much easier to

266
00:16:21,599 --> 00:16:25,060
all for those animations back then, but also to save like memory

267
00:16:25,920 --> 00:16:29,260
runtime memory as well as you know performance to have optimal performance

268
00:16:29,701 --> 00:16:32,781
because for talking to make sure you can see here really only love and said is

269
00:16:32,821 --> 00:16:36,662
moving so the game represented this animation was one animation later had

270
00:16:36,702 --> 00:16:40,483
just one Sprite like a static body and then one initially to just contain the

271
00:16:40,503 --> 00:16:43,283
head that would just to kind of various bombing animations and what not.

272
00:16:44,323 --> 00:16:48,106
Now getting back to the nation instance, this is essentially represents as an

273
00:16:48,186 --> 00:16:53,250
animation within a specific context so an example you can see here for walk

274
00:16:53,290 --> 00:16:56,493
animation, the different shores would represent a different directions because

275
00:16:56,513 --> 00:16:59,656
he would need to display different sprites obviously you know depending on

276
00:16:59,696 --> 00:17:01,197
which direction you would walk in.

277
00:17:02,356 --> 00:17:05,857
Now the point I want to make you is that the nation that is actually pretty

278
00:17:05,957 --> 00:17:10,359
complex and we need to represent this for throughout the mastering process.

279
00:17:10,999 --> 00:17:14,301
But not only that been a day of the tentacle which we ship the 93 was

280
00:17:14,481 --> 00:17:20,003
considered to have a very fluid. Animation style. And this meant

281
00:17:20,183 --> 00:17:23,024
in technical terms there are lots and lots of unique animation sprites that

282
00:17:23,044 --> 00:17:27,286
had to be remastered so you can see all the nearly 8,000 unique animation

283
00:17:27,306 --> 00:17:31,268
sprites that had to be painted or repainted of course all like scale down.

284
00:17:33,349 --> 00:17:35,810
And we knew right from the beginning that we wouldn't be able to handle this internally.

285
00:17:35,890 --> 00:17:40,592
Like, our art department was actually pretty small, and they were all busy just remastering the environments.

286
00:17:41,412 --> 00:17:44,354
And so, this really drove our decision when it came to the tool.

287
00:17:45,034 --> 00:17:50,616
Now, since costumes represent 2D animations, we quickly decided to use Flash, which seemed like a very obvious choice.

288
00:17:52,177 --> 00:17:56,979
So just similar to to the environments, we have an automatic import process that

289
00:17:57,039 --> 00:18:01,000
takes all of these extracted upscaled images and brings them into flash. So

290
00:18:01,020 --> 00:18:04,522
there's one flash file for each costume and you can see there's actually the

291
00:18:04,582 --> 00:18:08,163
animation structures represented in this flash file. Layers are kind of

292
00:18:08,203 --> 00:18:12,164
represented vertically through folders and layers and animations, animation

293
00:18:12,204 --> 00:18:15,666
instances are represented through frame sequences horizontally.

294
00:18:16,266 --> 00:18:19,407
And this layout allowed the animators to kind of scrub through the animation very quickly

295
00:18:19,447 --> 00:18:23,647
and also toggle on and off layers to kind of compare the current version against the classic.

296
00:18:24,167 --> 00:18:26,848
So as I said, we sent those off to the outsourcing company.

297
00:18:27,468 --> 00:18:32,109
They then painted over those and created like handcrafted representations.

298
00:18:32,729 --> 00:18:36,850
And once they were happy with that, they sent it back to us and we ran an automatic export process

299
00:18:36,890 --> 00:18:41,431
that, similar to the environments, would extract out all the remastered sprites.

300
00:18:42,531 --> 00:18:46,658
And so again this is a environments and animations are like 2 very specific

301
00:18:46,738 --> 00:18:52,048
examples how we improved the fidelity and the remastered version while staying true to the original intent.

302
00:18:52,749 --> 00:18:55,373
And staying true to the original version was also important in this room.

303
00:18:56,279 --> 00:18:59,741
because as rumor has it when the original team was working on the tentacle

304
00:19:00,261 --> 00:19:04,103
one given came by one day and notice that one environment and at the

305
00:19:04,123 --> 00:19:07,445
tentacles actually as big as the entire game of maniac mention

306
00:19:08,306 --> 00:19:11,047
and so you continue to want to be funny if you could just play make mention

307
00:19:11,067 --> 00:19:14,829
within the tentacle and of course if game developers we always do the most

308
00:19:14,869 --> 00:19:20,132
important thing first so of course this feature was added and you can actually

309
00:19:20,172 --> 00:19:22,713
play make mention in the original version of the tentacle now.

310
00:19:23,294 --> 00:19:26,695
The way it was done back then was pretty interesting because when the

311
00:19:26,735 --> 00:19:29,657
player interacted with the computer and we had ads room,

312
00:19:31,198 --> 00:19:34,240
the game would essentially suspend the execution of the Day of the Tentacle

313
00:19:34,400 --> 00:19:38,262
process and then launch the Maniac Mansion executable. Now the player would

314
00:19:38,282 --> 00:19:42,144
interact with the Maniac Mansion executable until the player was done with that

315
00:19:42,304 --> 00:19:45,145
and then it would resume execution of the Day of the Tentacle executable,

316
00:19:45,586 --> 00:19:47,987
restore the state and you would continue playing Day of the Tentacle.

317
00:19:48,607 --> 00:19:52,572
Now I still have to admire like this is a pretty nifty easy way to like

318
00:19:52,712 --> 00:19:56,496
essentially embed a completely different game in your own game. But

319
00:19:56,556 --> 00:19:59,820
for the remastered version we really didn't want to go down this route

320
00:19:59,880 --> 00:20:04,044
because doing this process he's like that was did not seem like a very

321
00:20:04,104 --> 00:20:06,587
smart way, especially on consoles and embedded devices.

322
00:20:07,248 --> 00:20:13,074
So instead. We chose the second most painful way by using or including the

323
00:20:13,114 --> 00:20:16,678
entire source code for many mention in the game in addition to the entire

324
00:20:16,738 --> 00:20:20,783
source code needed for the technical now admittedly they both use the same

325
00:20:20,823 --> 00:20:26,168
engine. But different versions and while they are some similarities between

326
00:20:26,188 --> 00:20:28,551
those 2 versions that were actually pretty significantly different.

327
00:20:29,892 --> 00:20:32,075
Of course, you know, SCUMM is a scene assembly code base,

328
00:20:32,095 --> 00:20:34,797
so that means there's a lot of kind of global state.

329
00:20:35,878 --> 00:20:37,560
And even sometimes these functions,

330
00:20:37,600 --> 00:20:38,321
they have the same name,

331
00:20:38,341 --> 00:20:40,323
they might have a very different implementation internally.

332
00:20:41,124 --> 00:20:43,126
Of course, we all know the technical term

333
00:20:43,206 --> 00:20:46,669
for this situation, which is of course that.

334
00:20:49,272 --> 00:20:54,276
So we solved this by painstakingly detaching these namespaces and making

335
00:20:54,316 --> 00:21:00,241
sure that Maniac Mansion uses unique namespace. And this took us a while to

336
00:21:00,281 --> 00:21:03,784
make sure that we didn't access random memory and whatnot. But it does work. And

337
00:21:03,904 --> 00:21:07,187
in the remastered version you can actually play the original unremastered

338
00:21:07,207 --> 00:21:11,891
version of Maniac Mansion. So I'm actually quite proud of that.

339
00:21:12,554 --> 00:21:16,537
Now I want to shift gears a little bit because I want to talk about strategies

340
00:21:16,577 --> 00:21:18,798
we used to modify the classic game.

341
00:21:20,619 --> 00:21:23,962
And as I kind of hinted at in the beginning this is supposed to fix box

342
00:21:24,022 --> 00:21:27,824
that people could run into back in the 90's that we wanted to fix as well as

343
00:21:27,924 --> 00:21:31,266
issues that really only became apparent in the remastered version.

344
00:21:32,647 --> 00:21:35,367
And I don't unfortunately don't have time to go into the reasons behind it,

345
00:21:35,487 --> 00:21:39,808
but while we had a text representation of the gameplay scripts we were not

346
00:21:39,928 --> 00:21:44,709
able to recompile those so in other words we had to deal with the the binary

347
00:21:44,749 --> 00:21:48,350
byte code that was included in the pack files and this left us with 2 options

348
00:21:48,410 --> 00:21:52,770
to modify the original game now the solution used most often was state

349
00:21:52,790 --> 00:21:56,791
mutation in other words of the allowed to remastering frame but not only to

350
00:21:56,851 --> 00:21:58,992
look at the internal state and re interpret that.

351
00:21:59,832 --> 00:22:05,156
But to actually push values back into the original scum sandbox and therefore

352
00:22:05,196 --> 00:22:06,838
change, you know, the behavior.

353
00:22:07,759 --> 00:22:11,342
Now, another approach we used, but not quite as often, is bytecode patching.

354
00:22:11,382 --> 00:22:15,465
In other words, we would change the compiled gameplay scripts before they

355
00:22:15,525 --> 00:22:19,448
would be executed by the scum interpreter, and therefore changing the behavior.

356
00:22:20,009 --> 00:22:24,372
Now, I'm going to show you, essentially, examples in this kind of combination.

357
00:22:24,472 --> 00:22:27,034
Although, in reality, every possible combination

358
00:22:27,815 --> 00:22:28,436
can be used.

359
00:22:29,578 --> 00:22:32,342
Now, the first bug I want to discuss is this one.

360
00:22:32,823 --> 00:22:33,664
Now, in this puzzle...

361
00:22:34,265 --> 00:22:35,366
Sorry, there will be some spoilers.

362
00:22:35,466 --> 00:22:36,788
Unfortunately, if you don't want to hear spoilers,

363
00:22:36,848 --> 00:22:38,150
you know, you want to cover your ears now.

364
00:22:39,552 --> 00:22:41,956
In this puzzle, you have to catch these T's

365
00:22:41,996 --> 00:22:43,478
that are moving away from you with Bernard.

366
00:22:43,979 --> 00:22:48,703
But there's a back that if you leave the room and kind of too quickly the game

367
00:22:48,763 --> 00:22:53,788
actually ends up in an able state. So you can see at the top of the

368
00:22:53,828 --> 00:22:57,932
incorrect behavior and actually pointing this man out at the teeth, but again

369
00:22:57,972 --> 00:22:59,894
reports, I'm pointing integrating.

370
00:23:00,794 --> 00:23:04,437
What is supposed to happen is what you can see at the bottom where the game

371
00:23:04,477 --> 00:23:08,139
actually correctly reports that you can interact with the trapped teeth.

372
00:23:09,060 --> 00:23:12,062
And this is important because this is an object that's needed for the critical

373
00:23:12,102 --> 00:23:15,104
path of the game and if you can't pick it up, you cannot finish the game.

374
00:23:15,849 --> 00:23:19,751
Now by looking at the original again they scripts for this puzzle we quickly

375
00:23:19,791 --> 00:23:20,651
figure out what's going on.

376
00:23:21,412 --> 00:23:25,054
So every frame all these teeth are kind of moving away from you to gain a century

377
00:23:25,094 --> 00:23:28,835
checks, you know well not that close enough to at the grading in the floor

378
00:23:29,236 --> 00:23:32,617
and if that's the case than again was had a variable called teeth caught a

379
00:23:32,657 --> 00:23:32,897
true.

380
00:23:33,798 --> 00:23:36,919
then it will stop an animation that's supposed to move these teeth from

381
00:23:36,939 --> 00:23:40,460
wherever they are to the center of the grading that will wait for that and

382
00:23:40,540 --> 00:23:43,921
once that is done it will set a touchable flag meaning that the player

383
00:23:43,941 --> 00:23:45,781
can now interact with this object again.

384
00:23:46,441 --> 00:23:49,342
Now as a program I won't take long to realize that there's a race condition

385
00:23:49,382 --> 00:23:53,263
here because of script execution is terminated for whatever reason like for

386
00:23:53,323 --> 00:23:57,244
example leaving the room. The touchable flag will never be set and

387
00:23:57,264 --> 00:23:58,845
therefore you can never pick up this object.

388
00:23:59,715 --> 00:24:03,035
Now this may seem like a pretty bad issue, but it was surprisingly easy to

389
00:24:03,095 --> 00:24:07,956
fix because all we need to do is find identified a specific instance. So if

390
00:24:07,976 --> 00:24:11,737
you in a convention room this burnout that he's called able said is set to

391
00:24:11,777 --> 00:24:17,298
true but a touchable flag set defaults then we found this issue and changing

392
00:24:17,338 --> 00:24:21,299
it was easy because the touchable flag is just a bit in a long bit array in

393
00:24:21,319 --> 00:24:25,239
the speed and engine so be just essentially over a debate and therefore

394
00:24:25,539 --> 00:24:27,440
the game, you know could be could be played.

395
00:24:28,824 --> 00:24:32,325
Now the second bug I want to discuss is one that we fixed using bytecode

396
00:24:32,346 --> 00:24:35,487
patching and that was an issue that only really appeared in the remastered version.

397
00:24:37,047 --> 00:24:41,089
And it had to do with the intro cutscene. Now if you take a look at the top right corner,

398
00:24:41,469 --> 00:24:44,210
you'll see there's a bird just kind of hanging out statically. That's wrong.

399
00:24:44,710 --> 00:24:48,592
And then it starts moving and then eventually they'll just kind of all disappear at the end.

400
00:24:49,512 --> 00:24:53,174
Now I'm going to focus for the remainder of the discussion, I'm going to focus on just this bird's disappearing.

401
00:24:53,994 --> 00:24:57,215
Now again looking at the original game play scripts. We quickly figure out what's

402
00:24:57,235 --> 00:25:01,237
going on essentially what the game does every frame a checks whether or not the

403
00:25:01,377 --> 00:25:05,858
exposition of put to which is the burden top left corner you can still see is

404
00:25:05,958 --> 00:25:13,761
smaller than the center of the camera minus 175 pixels. 175 pixels. Well this

405
00:25:13,801 --> 00:25:16,782
behavior comes pretty obvious when you over once you overlay the original 4

406
00:25:17,042 --> 00:25:18,803
by 3 aspect ratio on top of this.

407
00:25:19,523 --> 00:25:23,246
So what the gameplay program a bit back then is essentially call against the

408
00:25:23,286 --> 00:25:27,670
original 4 by 3 a few for us them obviously you know the person could

409
00:25:27,730 --> 00:25:31,654
know that we're going to be most of the game is a 60 by 9 aspect ratio later on.

410
00:25:32,955 --> 00:25:36,559
So we need to fix that we have extra pixels of that you know left and right

411
00:25:36,819 --> 00:25:37,459
side of the screen.

412
00:25:38,280 --> 00:25:42,404
So the problem is the 175 is not available so we can't use state mutation

413
00:25:42,464 --> 00:25:43,325
like a showed you earlier.

414
00:25:44,426 --> 00:25:45,906
There would be other ways to solve this problem.

415
00:25:45,946 --> 00:25:48,748
For example, we could change the implementation

416
00:25:48,788 --> 00:25:51,189
of the comparison operator or the subtraction

417
00:25:51,609 --> 00:25:53,530
to essentially trying to fool the engine

418
00:25:53,550 --> 00:25:55,051
into believing that the state is different.

419
00:25:55,531 --> 00:25:58,372
But that seemed pretty hacky for a bug like this.

420
00:25:59,233 --> 00:26:01,194
So we really wanted to change 175.

421
00:26:01,854 --> 00:26:03,936
Now, thankfully, this is a little value,

422
00:26:04,256 --> 00:26:06,357
which means it's actually stored in the bytecode.

423
00:26:07,278 --> 00:26:08,718
Now, here's the bytecode for the code sample

424
00:26:08,738 --> 00:26:09,419
that I just showed you.

425
00:26:09,519 --> 00:26:12,521
So what we need to do is we need to find 175, which

426
00:26:12,561 --> 00:26:13,801
means it's time for a hex quiz.

427
00:26:16,312 --> 00:26:21,016
Now in case you've been looking at this spot, you absolutely right. This is the

428
00:26:21,156 --> 00:26:25,180
175 looking for if we change it to something bigger for example in 250

429
00:26:25,700 --> 00:26:28,923
indeed the birds will continue to fly to the left and you know this bug was

430
00:26:28,963 --> 00:26:29,284
solved.

431
00:26:30,665 --> 00:26:33,327
And you know solving an issue like this was by could patching was pretty

432
00:26:33,347 --> 00:26:35,970
gratifying for me as a programmer because it make you feel like a real

433
00:26:36,010 --> 00:26:38,792
bad hacker you could go in like you know modify the bytecode.

434
00:26:40,041 --> 00:26:42,282
All right, so this is all the time I have

435
00:26:42,342 --> 00:26:43,743
to talk about the identical.

436
00:26:44,283 --> 00:26:45,924
I hope you found this interesting.

437
00:26:45,944 --> 00:26:47,665
And now I'm going to hand it off to Mark, who's

438
00:26:47,685 --> 00:26:49,306
going to talk to you about Grim Fandango.

439
00:26:49,746 --> 00:26:50,467
And you'll see there are actually

440
00:26:50,487 --> 00:26:52,948
a lot of similarities, but also a lot of unique challenges

441
00:26:52,968 --> 00:26:54,369
that we have faced with this project.

442
00:26:54,709 --> 00:26:55,650
So there you go.

443
00:26:55,990 --> 00:26:56,390
Thanks, Oliver.

444
00:27:03,872 --> 00:27:05,533
So we're going to take a trip from 1993

445
00:27:05,593 --> 00:27:08,575
when Day of the Tentacle was released,

446
00:27:09,695 --> 00:27:12,337
all the way up to 1998 when Grim Fandango came out.

447
00:27:12,417 --> 00:27:15,039
And we're going to do a very abridged kind of evolution

448
00:27:15,079 --> 00:27:17,460
of technology and design that changed in the industry

449
00:27:17,480 --> 00:27:18,001
during this time.

450
00:27:18,921 --> 00:27:23,244
So the next major evolution of the Sputum SCUMM engine

451
00:27:23,264 --> 00:27:26,126
was full throttle, which incorporated full motion

452
00:27:26,166 --> 00:27:28,507
video as its kind of technological advancement.

453
00:27:30,429 --> 00:27:34,050
which came from the rebel assault game and the insane technology is what is

454
00:27:34,090 --> 00:27:37,511
called and so that was like one step in the direction but then between full

455
00:27:37,531 --> 00:27:41,913
throttle and grim Fandango came quite a big change in the game industry

456
00:27:42,133 --> 00:27:45,415
and I I think anybody who was a gamer at the time or a game developer probably

457
00:27:45,495 --> 00:27:49,817
remembers what was going on and that was the rise of real-time 3D.

458
00:27:50,457 --> 00:27:54,158
So Mario 64 was released, Tomb Raider was released, Resident Evil,

459
00:27:55,179 --> 00:27:58,220
desktop PC graphic accelerators were starting to become a thing.

460
00:27:59,748 --> 00:28:04,851
And these definitely had an influence on the design of Grim Fandango and on engine changes

461
00:28:05,011 --> 00:28:06,171
that took place in that game.

462
00:28:08,333 --> 00:28:11,594
I'm going to guess that probably everybody here is familiar with Grim Fandango due to

463
00:28:11,634 --> 00:28:15,536
the number of hands that went up for Day of the Tentacle and Scum games, but just briefly

464
00:28:15,576 --> 00:28:18,258
in case you don't know what it is, it's an adventure game.

465
00:28:18,538 --> 00:28:22,360
It's a story about Manny Calavera, who is the character standing in the middle, dresses

466
00:28:22,420 --> 00:28:22,620
death.

467
00:28:23,661 --> 00:28:25,562
And he's a travel agent in the land of the dead.

468
00:28:25,782 --> 00:28:28,844
And what travel agents there do is help people transition

469
00:28:29,024 --> 00:28:31,425
into the afterlife who are recently deceased.

470
00:28:32,286 --> 00:28:35,007
And kind of the quality of your transport to the afterlife

471
00:28:35,047 --> 00:28:37,609
depends on how good of a person you were in the flesh world.

472
00:28:37,669 --> 00:28:40,230
So if you were a bad person, you get shipped up in a crate.

473
00:28:40,991 --> 00:28:42,131
If you're a good person, you get a ticket

474
00:28:42,191 --> 00:28:43,252
on the number nine train.

475
00:28:44,143 --> 00:28:45,965
And like all great adventure games of the era,

476
00:28:46,025 --> 00:28:48,167
gameplay involves navigating through the land of the dead,

477
00:28:48,287 --> 00:28:50,549
talking to characters, solving puzzles,

478
00:28:50,629 --> 00:28:52,110
managing your inventory, and so on.

479
00:28:52,831 --> 00:28:54,653
And it was very well-reviewed at release,

480
00:28:54,713 --> 00:28:57,055
and many people consider it a cult classic

481
00:28:57,095 --> 00:28:58,977
or just a classic, and so it's definitely primed

482
00:28:58,997 --> 00:28:59,658
for remastering.

483
00:29:02,612 --> 00:29:05,995
But the original team decided that they did not want to use

484
00:29:06,395 --> 00:29:10,219
the sputum slash scum engine because they wanted to add

485
00:29:10,299 --> 00:29:11,520
real-time 3D to the game.

486
00:29:12,381 --> 00:29:14,323
And that was an interesting decision, I thought.

487
00:29:14,383 --> 00:29:17,205
And because I had been an intern at LucasArts and

488
00:29:17,325 --> 00:29:20,348
because I had talked to the lead programmer, Brett

489
00:29:20,608 --> 00:29:24,352
Mogilevsky, before, I wanted to ask him more about that.

490
00:29:24,452 --> 00:29:26,594
So I've got some details on why that happened.

491
00:29:27,937 --> 00:29:30,098
Yeah, they created this new engine called the Grime engine.

492
00:29:30,598 --> 00:29:33,479
And the Grime engine supported pre-rendered backgrounds

493
00:29:33,579 --> 00:29:35,640
at 640 by 480 with 16-bit color

494
00:29:36,900 --> 00:29:39,781
and real-time 3D characters composited on top.

495
00:29:41,142 --> 00:29:43,202
And it was the first adventure game at LucasArts

496
00:29:43,242 --> 00:29:43,983
to use real-time 3D.

497
00:29:45,629 --> 00:29:49,151
Now like the Sputum engine, its engine core was pretty

498
00:29:49,251 --> 00:29:50,631
darn game agnostic.

499
00:29:50,851 --> 00:29:53,973
It was written in C. It handled typical engine things

500
00:29:54,053 --> 00:29:57,334
like memory management, resource management, animation,

501
00:29:57,595 --> 00:29:58,035
and so on.

502
00:29:58,575 --> 00:30:00,836
And it really didn't know very much about what an

503
00:30:00,876 --> 00:30:01,736
adventure game was.

504
00:30:02,097 --> 00:30:02,857
So very modern.

505
00:30:03,877 --> 00:30:06,739
But given that, you must imagine that there had to be

506
00:30:06,799 --> 00:30:08,239
some kind of scripting language to actually

507
00:30:08,439 --> 00:30:09,100
implement the game.

508
00:30:09,460 --> 00:30:10,060
And you would be right.

509
00:30:11,451 --> 00:30:14,373
And given that there's this domain specific language that had proven

510
00:30:14,413 --> 00:30:17,796
itself over many years and had shipped in many successful games, you might

511
00:30:17,836 --> 00:30:19,237
think that they would use Scum.

512
00:30:20,418 --> 00:30:21,539
Well, that's where you would be wrong.

513
00:30:22,460 --> 00:30:23,321
They switched to Lua.

514
00:30:24,122 --> 00:30:27,624
And I believe this was primarily driven by Brett, and if you want to ask

515
00:30:27,644 --> 00:30:29,086
about more details, he's actually here now.

516
00:30:31,107 --> 00:30:34,429
But yeah, this was interesting historically, I think,

517
00:30:34,489 --> 00:30:36,350
as Brett told me that there was a lot of

518
00:30:36,690 --> 00:30:38,731
kind of internal contention to make this switch

519
00:30:38,791 --> 00:30:41,032
both to a new engine and to a new scripting language

520
00:30:41,553 --> 00:30:43,374
because some teams at LucasArts had tried

521
00:30:43,454 --> 00:30:45,795
to make the switch in the past and it hadn't worked out.

522
00:30:46,455 --> 00:30:49,557
But Brett said he had a good dose of naive conviction

523
00:30:50,397 --> 00:30:51,898
and was able to convince stakeholders

524
00:30:51,958 --> 00:30:53,719
and switch over to the new technology.

525
00:30:55,590 --> 00:30:58,033
And so that affected our approach in the remastered engine.

526
00:30:58,413 --> 00:31:00,395
And there are some similarities to what was done

527
00:31:00,435 --> 00:31:02,117
in Day of the Tentacle and some differences.

528
00:31:03,038 --> 00:31:04,320
We started out very similarly.

529
00:31:04,580 --> 00:31:06,542
We took the Grime engine, we had the full source

530
00:31:06,903 --> 00:31:08,365
for both the C code and the Lua code.

531
00:31:09,187 --> 00:31:13,749
and we got a compiling on a modern platform and so most of that was stubbing

532
00:31:13,829 --> 00:31:16,991
out a handful of things that you know we're old windows technologies that

533
00:31:17,011 --> 00:31:21,173
didn't make sense anymore initially and also fixing some compiler issues a

534
00:31:21,413 --> 00:31:24,735
similar to day the technical there were some you know undefined behavior and

535
00:31:24,775 --> 00:31:28,657
compilers to change so but it didn't really take that long to get up and

536
00:31:28,697 --> 00:31:28,897
running.

537
00:31:30,707 --> 00:31:34,127
The major difference between what we did with day of the tentacle and with

538
00:31:34,167 --> 00:31:38,328
Grim Fandango was instead of trying to mostly sandbox the original engine.

539
00:31:38,708 --> 00:31:40,709
We made a lot of modifications to it directly

540
00:31:41,429 --> 00:31:42,649
and there's a couple reasons for that.

541
00:31:43,389 --> 00:31:47,450
But we added things like a modern renderer to it and we added the ability

542
00:31:47,490 --> 00:31:51,071
for it to emit draw calls both to the original software renderer as well as to

543
00:31:51,111 --> 00:31:54,352
our modern renderer to support things like toggling between the 2 render

544
00:31:54,372 --> 00:31:55,912
modes like Oliver showed in Day of the Tentacle.

545
00:31:58,177 --> 00:32:02,038
We added, you know, we threw away all the direct calls to Windows

546
00:32:02,279 --> 00:32:04,199
because it had only shipped on Windows in the past,

547
00:32:04,779 --> 00:32:08,741
and added modern interfaces to interact with the seven platforms we shipped on.

548
00:32:08,841 --> 00:32:14,142
We shipped on PS4, PS Vita, Windows, Mac OS, Linux, iOS, and Android.

549
00:32:15,868 --> 00:32:17,248
And here's where the big difference was.

550
00:32:17,749 --> 00:32:20,390
When we added 64-bit support, fixed bugs,

551
00:32:20,610 --> 00:32:23,431
and added new features, we did that by modifying Grime

552
00:32:23,511 --> 00:32:25,312
directly, including the Lua code,

553
00:32:25,792 --> 00:32:28,273
unlike the tentacle project where we didn't really

554
00:32:28,333 --> 00:32:29,693
touch the original SCUMM code.

555
00:32:30,774 --> 00:32:31,894
And part of the reason for that was

556
00:32:31,934 --> 00:32:34,956
that there were vastly more bugs in Grim Fandango.

557
00:32:37,527 --> 00:32:41,690
But you know that we also changed I think more about the

558
00:32:41,730 --> 00:32:45,052
core gameplay in a way that couldn't be modified the state

559
00:32:45,072 --> 00:32:47,273
inspection only so that was another one of the reasons why

560
00:32:47,333 --> 00:32:48,674
we needed to modify directly.

561
00:32:51,896 --> 00:32:54,558
So like Oliver laid out in our philosophy one of the key

562
00:32:54,578 --> 00:32:57,640
components is improving fidelity and staying true to the

563
00:32:57,760 --> 00:32:58,921
original artistic intent.

564
00:32:59,761 --> 00:33:01,542
So this is an image from the classic game.

565
00:33:02,582 --> 00:33:07,004
And although I think it still looks cool, there are some things that are starting to look a little bit old about it.

566
00:33:07,944 --> 00:33:11,686
Manny's face, for example, the texture looks a bit low resolution. There's

567
00:33:12,386 --> 00:33:14,927
you know, some stair-stepping and so on within his face.

568
00:33:16,188 --> 00:33:19,769
Also the edge of his head on the 3D model is pretty aliased.

569
00:33:20,229 --> 00:33:22,150
There's stair-stepping up and down both sides there as well.

570
00:33:23,522 --> 00:33:29,926
His shadow is a bit of a rectangle and we felt that we could improve all of these

571
00:33:29,966 --> 00:33:33,388
things in the remaster and I think it's important, especially for a game like

572
00:33:33,408 --> 00:33:36,950
Grim Fandango where a lot of people are going to be familiar with it to have an

573
00:33:36,990 --> 00:33:40,612
immediate visual impact when people put up the game and immediately see

574
00:33:40,652 --> 00:33:45,574
something that that's striking. So this is ultimately what we ended up with in

575
00:33:45,614 --> 00:33:50,397
the remaster and we're going to go into detail about how we accomplish this.

576
00:33:52,885 --> 00:33:55,449
So at a high level in the remastered render,

577
00:33:55,790 --> 00:33:57,393
one of the most important things we wanted to add

578
00:33:57,773 --> 00:33:58,975
was deferred shading.

579
00:33:59,897 --> 00:34:01,259
And the reason for that was.

580
00:34:02,749 --> 00:34:06,332
Old 3 D games typically had very primitive lighting and

581
00:34:06,392 --> 00:34:08,113
Grim Fandango was no exception.

582
00:34:08,893 --> 00:34:11,935
And we really wanted to try to ground the characters into the

583
00:34:11,976 --> 00:34:13,116
pre-rendered scenes better.

584
00:34:14,037 --> 00:34:16,278
The existing pre-rendered environments had really cool

585
00:34:16,319 --> 00:34:17,299
lighting, it was really beautiful.

586
00:34:17,379 --> 00:34:20,361
But the characters felt a bit like they didn't quite fit, or

587
00:34:20,441 --> 00:34:22,963
any of the real time 3 D, which included some objects

588
00:34:23,003 --> 00:34:23,283
as well.

589
00:34:24,677 --> 00:34:26,558
And so by implementing differentiating,

590
00:34:26,578 --> 00:34:29,079
we kind of gave our artists leeway

591
00:34:29,139 --> 00:34:30,760
to add a ton of lights into the scene,

592
00:34:31,000 --> 00:34:32,621
like a new lighting rig for the remaster

593
00:34:32,661 --> 00:34:33,962
to try to really make the characters feel

594
00:34:33,982 --> 00:34:35,802
like they fit better into the scenes.

595
00:34:37,643 --> 00:34:40,265
We added shadow maps to try to improve the shadow quality.

596
00:34:40,825 --> 00:34:42,125
You can see some of that there on the left.

597
00:34:43,886 --> 00:34:46,668
Of course, we had to implement arbitrary high-resolution support.

598
00:34:47,308 --> 00:34:49,809
Grim Fandango was originally 640 by 480 only,

599
00:34:50,129 --> 00:34:52,050
so on all the different platforms we shipped on,

600
00:34:52,070 --> 00:34:53,591
we had a whole bunch of resolutions we had to hit.

601
00:34:55,749 --> 00:35:00,774
We implemented FXAA to improve edge quality on most platforms.

602
00:35:00,794 --> 00:35:04,057
We had plenty of GPU cycles left over, so this was kind of an easy win.

603
00:35:06,150 --> 00:35:08,691
But critically, I'm going to keep reiterating this,

604
00:35:09,331 --> 00:35:12,753
we tried our hardest not to go crazy with graphics features

605
00:35:12,813 --> 00:35:14,554
and just throw all kinds of things at the game

606
00:35:14,614 --> 00:35:16,395
that didn't really feel like it would have made sense

607
00:35:16,435 --> 00:35:17,895
within the context of the original.

608
00:35:18,375 --> 00:35:21,657
We wanted to do a better representation

609
00:35:22,177 --> 00:35:24,098
using modern technology of what we think

610
00:35:24,158 --> 00:35:25,299
the original team would have done

611
00:35:25,319 --> 00:35:27,240
if they had access to the same tools.

612
00:35:30,914 --> 00:35:33,055
And here's a side-by-side comparison of the two.

613
00:35:33,896 --> 00:35:37,138
On the left is the original game, and on the right is the

614
00:35:37,158 --> 00:35:37,598
remaster.

615
00:35:38,939 --> 00:35:41,320
And I don't know how well you can see it exactly, but I hope

616
00:35:41,340 --> 00:35:43,702
you can tell that it's higher resolution on the right.

617
00:35:44,222 --> 00:35:46,304
The lighting hopefully feels like it fits better within the

618
00:35:46,344 --> 00:35:46,564
scene.

619
00:35:46,604 --> 00:35:47,965
The shadows are definitely very different.

620
00:35:49,906 --> 00:35:52,308
But there is one kind of big elephant in the room between

621
00:35:52,348 --> 00:35:53,929
those two side-by-side videos.

622
00:35:54,769 --> 00:35:57,351
And that is the backgrounds are exactly the same.

623
00:35:59,717 --> 00:36:04,361
And that's because of a roadblock we hit in the archival process and the archeology process.

624
00:36:05,662 --> 00:36:09,965
So the backgrounds were, the pre-rendered backgrounds were authored in 3D in a program

625
00:36:09,985 --> 00:36:10,706
called Softimage.

626
00:36:11,366 --> 00:36:13,828
And that's where they were modeled, that's where materials were applied.

627
00:36:15,129 --> 00:36:18,612
I believe that's where they were rendered out of as well, and all the lighting rigs

628
00:36:18,652 --> 00:36:19,052
were set up.

629
00:36:19,933 --> 00:36:21,735
But we had none of that data.

630
00:36:22,895 --> 00:36:23,296
None at all.

631
00:36:23,336 --> 00:36:25,377
And as far as I know, it doesn't exist anywhere.

632
00:36:26,433 --> 00:36:30,054
So Brett if you know where it is I wish we had gotten access to

633
00:36:30,094 --> 00:36:32,115
it because I mean at at a minimum it would have been

634
00:36:32,235 --> 00:36:35,115
awesome to just like open that data backup and re render those

635
00:36:35,155 --> 00:36:37,656
scenes using like a modern ray tracer or something.

636
00:36:39,416 --> 00:36:42,057
But given our budget and timeline we couldn't totally

637
00:36:42,157 --> 00:36:44,918
recreate this data from scratch that it was just not an option.

638
00:36:45,618 --> 00:36:49,039
So we did what we could but we were left in kind of a similar

639
00:36:49,099 --> 00:36:51,939
position of did the technical all of the remastering came

640
00:36:52,019 --> 00:36:54,720
from extracting assets from the game that had shipped initially

641
00:36:56,520 --> 00:37:01,844
And then we that kind of causes to have to come up with some creative ways to to be able to to improve the fidelity.

642
00:37:04,246 --> 00:37:21,739
So one of the easiest wins that we thought we could do immediately was improve the texture quality. So we wrote a little tool that would extract all the textures from the original game blow them up to much higher resolution often going to like 1024 by 1024 maps. And so here's an example of that.

643
00:37:22,715 --> 00:37:26,297
This is many space. It's the same face texture we saw earlier

644
00:37:27,958 --> 00:37:31,121
and you can kind of see why you know the

645
00:37:31,381 --> 00:37:34,263
texture looks a little bit faceted and and

646
00:37:34,503 --> 00:37:37,385
it's not very high resolution. So what it's many close the camera

647
00:37:37,585 --> 00:37:41,768
it's going to look low res and so we had these off to the artist and.

648
00:37:43,003 --> 00:37:47,965
This is the result for that texture and I'll admit that this doesn't look super

649
00:37:48,005 --> 00:37:51,527
exciting really because it's just literally a higher resolution version of

650
00:37:51,567 --> 00:37:56,549
the exact same image. But that's again coming back to the sticking to the

651
00:37:56,609 --> 00:38:00,211
original intent. We didn't want to make many look different or shiny or

652
00:38:00,271 --> 00:38:04,232
anything like that we just wanted it to be a higher resolution many but still

653
00:38:04,592 --> 00:38:06,573
totally keeping the original art style intact.

654
00:38:08,940 --> 00:38:12,443
But when we're dealing with this kind of low resolution source

655
00:38:12,483 --> 00:38:14,986
data, there are some interesting things that can happen.

656
00:38:15,706 --> 00:38:17,849
And I want to show you an example from this texture.

657
00:38:18,850 --> 00:38:20,872
So this is a tiny texture that was

658
00:38:20,992 --> 00:38:22,233
used on an object in the game.

659
00:38:22,914 --> 00:38:25,416
And after it went through our process and got blown up,

660
00:38:26,257 --> 00:38:26,958
it looked like this.

661
00:38:27,598 --> 00:38:29,941
And this is what was handed to an artist on our team

662
00:38:30,982 --> 00:38:32,643
who was tasked with remastering this texture.

663
00:38:33,509 --> 00:38:35,491
And they weren't told what the context of this was.

664
00:38:36,251 --> 00:38:38,033
They were just handed this and asked to paint it over.

665
00:38:38,073 --> 00:38:39,915
And this is what we ended up with.

666
00:38:41,377 --> 00:38:42,658
And this says Golo Flake.

667
00:38:44,440 --> 00:38:46,482
This texture is not supposed to say Golo Flake.

668
00:38:47,383 --> 00:38:48,905
And unfortunately, this slipped through the cracks,

669
00:38:48,965 --> 00:38:50,106
and we ended up shipping this.

670
00:38:50,647 --> 00:38:53,189
And here's some of the fan response.

671
00:38:56,647 --> 00:39:01,509
Yeah, fans weren't happy, so we did, and we're sorry about that, but we were able to fix

672
00:39:01,529 --> 00:39:02,689
this in a patch, thankfully.

673
00:39:03,910 --> 00:39:07,612
And we were so tickled by kind of the response and the silliness of it that we put a bottle

674
00:39:07,632 --> 00:39:09,812
of Golo flakes in all of the remastered games.

675
00:39:09,852 --> 00:39:13,534
So there's one in Day of the Tentacle, and we're sneaking one into full throttle as well.

676
00:39:14,214 --> 00:39:17,736
All right, let's talk lighting.

677
00:39:18,356 --> 00:39:22,918
So like I said earlier, lighting in early 3D games was often very primitive in comparison

678
00:39:22,958 --> 00:39:23,878
to what we have today.

679
00:39:25,606 --> 00:39:27,568
So we're still facing a major problem that we wanted to

680
00:39:27,608 --> 00:39:30,570
remaster the lighting of the real-time 3D, but we had no

681
00:39:30,670 --> 00:39:31,811
source data for the backgrounds.

682
00:39:32,352 --> 00:39:35,775
We had no reference, really, to create a

683
00:39:35,835 --> 00:39:36,695
real-time lighting rig.

684
00:39:37,756 --> 00:39:40,098
So our challenge was, how can we create an artist-friendly

685
00:39:40,158 --> 00:39:42,741
authoring pipeline to author lights for the remaster?

686
00:39:44,022 --> 00:39:46,063
So what we did have, though, is the extracted data.

687
00:39:46,404 --> 00:39:50,047
We had 640 by 480 color maps at 16-bit color for the

688
00:39:50,327 --> 00:39:51,128
pre-rendered backgrounds.

689
00:39:52,835 --> 00:39:57,358
And we had 640 by 40 Z bit maps as the original team called

690
00:39:57,378 --> 00:40:01,060
them which were essentially pre calculated depth buffers and

691
00:40:01,161 --> 00:40:04,743
in the original game these were used for occlusion mostly so

692
00:40:04,863 --> 00:40:07,885
that the real time 3 D would like if many was standing

693
00:40:08,285 --> 00:40:10,887
behind the chair on the lower left that it would include the

694
00:40:10,947 --> 00:40:13,229
the pixels rendered through the real time render.

695
00:40:14,662 --> 00:40:16,663
But what we did was we took these 2 maps.

696
00:40:17,864 --> 00:40:19,004
Oh, we had one other thing, I should say.

697
00:40:19,064 --> 00:40:22,026
We also had the camera position and the orientation for where

698
00:40:22,046 --> 00:40:22,707
this was rendered from.

699
00:40:23,988 --> 00:40:25,969
And so I want to give a shout out to a guy named Brandon

700
00:40:25,989 --> 00:40:28,451
Dillon, who is an engineer at Double Fine and came up with

701
00:40:28,491 --> 00:40:28,911
this idea.

702
00:40:29,331 --> 00:40:33,013
But what we did was we took every single pixel of the Zbit

703
00:40:33,054 --> 00:40:37,196
map, one by one, created a quad in Maya, and then mapped one

704
00:40:37,256 --> 00:40:39,478
pixel of the color map onto that.

705
00:40:40,460 --> 00:40:43,161
kind of doing like a reverse projection of that so

706
00:40:43,841 --> 00:40:46,562
if you're thinking like what would that look like and you're thinking this is

707
00:40:46,582 --> 00:40:48,963
going to look like some crazy mess of quads

708
00:40:49,583 --> 00:40:50,583
uh... just floating in space

709
00:40:51,724 --> 00:40:52,864
that kinda does look like that

710
00:40:54,104 --> 00:40:54,565
there it is

711
00:40:55,005 --> 00:40:56,465
so this is Manny's office

712
00:40:57,485 --> 00:41:00,546
and this is a composite it's not just from one camera angle I believe there

713
00:41:00,566 --> 00:41:01,026
were four

714
00:41:01,046 --> 00:41:03,347
uh... pre-rendered cameras in this scene

715
00:41:03,987 --> 00:41:07,368
and this is the sea of little quads for all four of those

716
00:41:08,525 --> 00:41:10,907
And although you know clearly we're not going to be exporting

717
00:41:10,927 --> 00:41:14,750
this back into some kind of game format. This was enough

718
00:41:14,890 --> 00:41:18,473
reference material for our team to be able to place lights.

719
00:41:19,234 --> 00:41:21,936
I mean as I look at it and I hope it's it's obvious you can

720
00:41:22,036 --> 00:41:24,478
kind of see like where the walls are where the desks are

721
00:41:24,498 --> 00:41:25,879
with the windows are and so on.

722
00:41:28,301 --> 00:41:30,843
And here's that same scene again with some of our

723
00:41:30,883 --> 00:41:32,384
remastered lights in there.

724
00:41:33,558 --> 00:41:38,121
And to try to to match what was authored in the original backgrounds, we had to

725
00:41:38,241 --> 00:41:42,363
add a number of different light types to try to to kind of capture the mood.

726
00:41:43,944 --> 00:41:48,426
So we had directional lights that could be bounded within a box or a cylinder.

727
00:41:48,666 --> 00:41:51,468
Sometimes it was a little bit hard to tell exactly what was going on in the

728
00:41:51,488 --> 00:41:55,650
original lighting rig, so this helped control that and allow us to try to

729
00:41:55,690 --> 00:41:56,451
match it more closely.

730
00:41:57,791 --> 00:42:00,233
Of course, supported point lights, spotlights.

731
00:42:01,909 --> 00:42:04,831
Something we call the gradient light which is essentially a

732
00:42:05,031 --> 00:42:07,993
ambient but also has a height component so that we could try

733
00:42:08,013 --> 00:42:10,574
to often darken the characters towards the bottom of the

734
00:42:10,614 --> 00:42:12,415
ground to make them feel more grounded in the scene.

735
00:42:14,216 --> 00:42:16,137
And finally we added a little bit of light animation,

736
00:42:16,377 --> 00:42:19,299
although this was really sparingly used in the remaster.

737
00:42:20,460 --> 00:42:22,581
It was just kind of like a nice little thing we could put in a

738
00:42:22,701 --> 00:42:24,242
little bit of extra polish here and there.

739
00:42:24,962 --> 00:42:27,103
We didn't go crazy with it, we only put it in places

740
00:42:27,284 --> 00:42:28,704
where it felt like it would have made sense

741
00:42:28,724 --> 00:42:30,225
within the context of the original game.

742
00:42:33,580 --> 00:42:34,600
All right, let's look at shadows.

743
00:42:35,741 --> 00:42:39,104
This is the original game, and Manny's got his boxy shadow

744
00:42:39,144 --> 00:42:39,564
underneath him.

745
00:42:40,905 --> 00:42:44,387
And although it certainly helps ground him within the scene,

746
00:42:44,848 --> 00:42:46,549
we thought that we could improve this as well.

747
00:42:49,531 --> 00:42:51,512
So like I said before, we added shadow maps,

748
00:42:51,913 --> 00:42:55,595
and we took those z-bit maps and used them

749
00:42:56,476 --> 00:42:59,158
as a way to have a depth buffer available to us

750
00:42:59,198 --> 00:43:01,119
for when we're rendering from the light's perspective.

751
00:43:03,229 --> 00:43:06,270
In addition to that we added a feature we called light blockers

752
00:43:06,450 --> 00:43:09,071
which was essentially geometry that would be rendered

753
00:43:09,111 --> 00:43:11,551
when you are rendering from the light's perspective

754
00:43:11,971 --> 00:43:13,992
that would block light and create shadow

755
00:43:14,832 --> 00:43:17,373
and that was used for 2 things, one to try to make the shadows

756
00:43:17,453 --> 00:43:19,453
match more closely to where the shadows

757
00:43:19,513 --> 00:43:20,774
were in the pre-rendered environments.

758
00:43:21,814 --> 00:43:23,674
But it was also used in a handful of places

759
00:43:23,734 --> 00:43:27,395
to try to add some extra cool shadow fidelity

760
00:43:27,435 --> 00:43:30,076
that wasn't really there to kind of really,

761
00:43:30,096 --> 00:43:32,076
I don't know, add a little bit of extra polish.

762
00:43:34,160 --> 00:43:37,481
And here's what it looks like in the remaster for the scene.

763
00:43:41,622 --> 00:43:44,083
All right, let's change gears and talk about controls.

764
00:43:44,423 --> 00:43:46,563
This is one of the places where we really wanted

765
00:43:46,583 --> 00:43:48,364
to try to modernize delicately.

766
00:43:49,985 --> 00:43:51,825
The original game shipped with something

767
00:43:52,305 --> 00:43:55,266
that is now notoriously known as tank controls.

768
00:43:56,226 --> 00:43:57,667
That was the default control mechanism.

769
00:43:59,334 --> 00:44:01,535
And I think there are some good reasons for why

770
00:44:01,935 --> 00:44:03,456
Grim Fandango shipped with tank controls.

771
00:44:04,096 --> 00:44:06,978
But most gamers these days don't really

772
00:44:07,018 --> 00:44:08,279
like tank controls that much.

773
00:44:08,359 --> 00:44:10,580
So we felt that this was an area where we really

774
00:44:10,620 --> 00:44:14,401
needed to make a change to change the default in the game.

775
00:44:14,582 --> 00:44:17,363
So this is what it looks like in the original.

776
00:44:18,684 --> 00:44:19,384
Make little tank sounds.

777
00:44:19,424 --> 00:44:20,424
Chugga, chugga, chugga, chugga, chugga.

778
00:44:21,165 --> 00:44:21,965
And you can move forward.

779
00:44:26,895 --> 00:44:29,497
makes it out of his office and got turned to go down the hallway.

780
00:44:29,517 --> 00:44:32,739
It's a little bit unintuitive for people.

781
00:44:37,141 --> 00:44:41,323
So like I said the original game shipped with 10 controls as its default,

782
00:44:41,644 --> 00:44:45,346
but I had forgotten this, but it also had an optional camera relative control

783
00:44:45,366 --> 00:44:45,586
scheme.

784
00:44:47,157 --> 00:44:49,319
And you know when I saw that I was like oh whoa,

785
00:44:49,499 --> 00:44:50,259
I totally forgot about this.

786
00:44:50,279 --> 00:44:52,101
It's like let's just turn this on and see what happens.

787
00:44:53,002 --> 00:44:55,203
And it had some serious problems that we had to address

788
00:44:55,263 --> 00:44:56,264
to make this the default,

789
00:44:56,284 --> 00:44:57,725
which of course is what we wanted to do.

790
00:44:58,266 --> 00:44:59,527
And I'll show those in just a moment.

791
00:45:00,188 --> 00:45:01,789
But as a brief side note,

792
00:45:01,809 --> 00:45:02,830
I thought it was amusing that,

793
00:45:03,130 --> 00:45:05,492
this is the function signatures from the Lua code.

794
00:45:05,832 --> 00:45:07,433
You can see where the inspirations came from.

795
00:45:08,354 --> 00:45:10,696
So tank controls were called Tomb Raider control.

796
00:45:11,537 --> 00:45:15,900
because the early Tomb Raider games had 10 controls and Mario style control was the

797
00:45:15,920 --> 00:45:19,642
name of the camera relative, clearly from the inspiration from Mario 64 I think.

798
00:45:19,662 --> 00:45:25,026
So I'm going to show three videos in a row here

799
00:45:25,686 --> 00:45:28,648
and I need you to trust me that all of them were recorded on the PC

800
00:45:29,309 --> 00:45:32,271
and I am only going to do one thing. I'm going to

801
00:45:32,611 --> 00:45:34,352
put my finger on the up arrow and just hold it

802
00:45:35,213 --> 00:45:37,574
and then we're going to see what happens with the controls.

803
00:45:38,775 --> 00:45:39,816
This is the first major problem.

804
00:45:41,095 --> 00:45:42,636
in the original camera relative controls.

805
00:45:48,419 --> 00:45:51,901
So you can see many bouncing back and forth across this camera transition.

806
00:45:53,262 --> 00:45:57,984
And I think anybody who has worked as an engineer on a 3 D 3rd person game

807
00:45:58,025 --> 00:45:58,925
probably knows what's happening.

808
00:45:59,846 --> 00:46:04,007
As soon as the camera changes and in this case it's almost perfectly rotating around

809
00:46:04,087 --> 00:46:10,069
the up axis by a 180 degrees. The frame of reference for how your controls are calculated

810
00:46:10,269 --> 00:46:15,151
flips and so many is popping back and forth across this camera transition because.

811
00:46:15,931 --> 00:46:18,212
he's just bouncing back and forth and

812
00:46:18,232 --> 00:46:21,474
yeah, your controls are flipping and it just it feels

813
00:46:22,115 --> 00:46:26,077
very bad frankly for for a player and so I

814
00:46:26,097 --> 00:46:28,938
think this is one of the good reasons why the game was shipped with 10

815
00:46:29,159 --> 00:46:31,500
controls because it didn't suffer from this

816
00:46:32,541 --> 00:46:35,862
and I don't know what genius programmer

817
00:46:35,902 --> 00:46:37,303
designer came up with this between 1998.

818
00:46:39,104 --> 00:46:41,446
when grim finding it was released and

819
00:46:41,866 --> 00:46:44,808
sometime later, but the solution to this is to

820
00:46:44,869 --> 00:46:47,891
maintain the previous cameras orientation as

821
00:46:47,931 --> 00:46:50,553
the frame of reference for your controls until some later

822
00:46:50,613 --> 00:46:53,555
point for example, when the player completely let's go of the controls or

823
00:46:53,655 --> 00:46:56,477
has modified the controls enough to indicate

824
00:46:56,517 --> 00:46:59,519
that they've recognized the camera has changed and they're changing their

825
00:46:59,559 --> 00:47:01,761
intent. So that's what we did for the remaster.

826
00:47:04,263 --> 00:47:05,123
Here's the second problem.

827
00:47:09,975 --> 00:47:13,478
Many doesn't slide against walls very well in the original camera relative

828
00:47:13,498 --> 00:47:13,858
controls.

829
00:47:15,719 --> 00:47:16,800
Eventually gets where he's gone.

830
00:47:16,820 --> 00:47:19,402
All right, he made it out.

831
00:47:21,163 --> 00:47:23,724
I don't have time to really go into the details as to why that's happening,

832
00:47:23,784 --> 00:47:28,147
but clearly something wasn't working right with with how he slid against a

833
00:47:28,247 --> 00:47:31,249
walk boxes as they were called which kind of define the the walkable space.

834
00:47:34,090 --> 00:47:37,211
And you know most modern games do this a bit differently and

835
00:47:37,231 --> 00:47:40,372
although it's not really realistic what games typically

836
00:47:40,392 --> 00:47:43,153
do is just slide characters along walls to kind of make it

837
00:47:43,213 --> 00:47:45,554
easier to navigate and fumble your way through environments.

838
00:47:46,954 --> 00:47:50,135
So that's what we did so typically if you're moving

839
00:47:50,195 --> 00:47:52,736
against a wall directly perpendicular you won't really

840
00:47:52,776 --> 00:47:54,797
make any progress, but if you're coming at an angle,

841
00:47:54,937 --> 00:47:57,578
you'll scale the players velocity by the angle of

842
00:47:57,618 --> 00:48:00,999
incidents and then kind of slide them along to make it so

843
00:48:01,019 --> 00:48:02,439
they can move smoothly through the environment.

844
00:48:04,698 --> 00:48:07,579
And so here's a video of both of those things in the remaster.

845
00:48:08,059 --> 00:48:09,940
And while it's not that flashy, I

846
00:48:09,960 --> 00:48:12,701
think this was really a big improvement and quality

847
00:48:12,721 --> 00:48:14,081
of life improvement for the remaster.

848
00:48:18,043 --> 00:48:20,643
So he makes it across the transition, slides along,

849
00:48:21,164 --> 00:48:21,964
makes it out of the office.

850
00:48:24,385 --> 00:48:26,766
So that became the default control scheme for gamepad

851
00:48:26,886 --> 00:48:27,386
and keyboard.

852
00:48:30,907 --> 00:48:32,128
But one thing that was surprising

853
00:48:33,212 --> 00:48:36,794
perhaps in retrospect is that grim Fandango had no mouse

854
00:48:36,814 --> 00:48:40,876
controls every other adventure game the Lucas arts had

855
00:48:40,936 --> 00:48:43,317
produced up until that point had had mouse controls.

856
00:48:44,438 --> 00:48:46,499
And since we knew also that we're going to be shipping on

857
00:48:46,539 --> 00:48:49,320
Vita and on mobile platforms who wanted to add touch.

858
00:48:50,641 --> 00:48:53,782
So we're really blessed to run into this guy named Tobias

859
00:48:53,862 --> 00:48:57,904
faff who was a grim Fandango superfan and was essentially

860
00:48:57,984 --> 00:48:59,905
modding mouse controls into the original game.

861
00:49:01,022 --> 00:49:04,325
And he was doing that right around the time when we started the remaster and

862
00:49:04,365 --> 00:49:07,307
we asked him if he wanted to join the team and he graciously said yes and

863
00:49:07,627 --> 00:49:08,628
help us get this into the game.

864
00:49:09,848 --> 00:49:12,510
But when you're adding a totally new control scheme to a game like this,

865
00:49:13,291 --> 00:49:14,992
you can't just enable the mouse.

866
00:49:15,052 --> 00:49:16,273
I mean, there's a lot of work you gotta do.

867
00:49:16,393 --> 00:49:19,275
And one of the things you have to do is give the player a way to interact with

868
00:49:19,295 --> 00:49:19,635
the world.

869
00:49:21,016 --> 00:49:22,037
So we added a verb skull.

870
00:49:23,276 --> 00:49:26,058
This is something that Tim Schafer requested we do specifically

871
00:49:26,759 --> 00:49:30,321
and the verb skull was something that Tim put into full throttle

872
00:49:30,601 --> 00:49:33,163
initially as a new way to interact with the world

873
00:49:33,663 --> 00:49:35,625
in that game. Whereas the previous

874
00:49:36,165 --> 00:49:38,727
Scum and Sputum games had all pretty much used a verb bar

875
00:49:39,468 --> 00:49:42,350
that was, I guess Tim felt was starting to feel pretty archaic so

876
00:49:42,490 --> 00:49:46,733
in full throttle you click on things and this flaming skull tattoo pops up and you

877
00:49:46,773 --> 00:49:48,854
can select different verbs to interact with objects in the world.

878
00:49:49,731 --> 00:49:53,982
And so since Manny's a skeleton, Tim thought that he deserved his own verb skull as well.

879
00:49:54,563 --> 00:49:55,205
So it worked really well.

880
00:49:57,687 --> 00:50:01,288
But I will say that we kind of knew this going into it,

881
00:50:01,328 --> 00:50:03,329
but I want to warn you in case you do a remaster

882
00:50:03,369 --> 00:50:05,990
that if you're going to put a totally new control scheme

883
00:50:06,010 --> 00:50:08,051
into an existing game, you should expect to run

884
00:50:08,091 --> 00:50:10,172
into a lot of special case problems.

885
00:50:10,892 --> 00:50:13,213
These were just all over the place in Grim Fandango.

886
00:50:13,893 --> 00:50:15,974
And it's not a problem with the original game.

887
00:50:16,014 --> 00:50:17,455
It's just things that had to be solved

888
00:50:17,575 --> 00:50:19,996
to add mouse controls or touch controls.

889
00:50:20,036 --> 00:50:21,877
So, for example, this is Manny's inventory,

890
00:50:22,397 --> 00:50:25,298
which previously had no UI on the screen at all.

891
00:50:25,438 --> 00:50:26,999
You could interact with it with the keyboard.

892
00:50:27,599 --> 00:50:30,761
But we had to add a bunch of things on screen to to do all the different types

893
00:50:30,781 --> 00:50:33,922
of interactions and navigation that were necessary.

894
00:50:38,345 --> 00:50:40,386
So I want to show one classic bug fix

895
00:50:41,666 --> 00:50:44,368
that is interesting more for historical purposes and gameplay

896
00:50:44,388 --> 00:50:47,769
purposes than it is technically admittedly. But this is an image

897
00:50:47,889 --> 00:50:51,211
from kind of in the middle of the game and this is from

898
00:50:51,251 --> 00:50:54,633
the original and that's many on the left and a character named domino in the middle.

899
00:50:56,195 --> 00:50:59,016
And there's a bug in this scene where many is supposed to be able to come in

900
00:50:59,377 --> 00:51:02,878
and talk to domino and be able to have a dialogue tree with him that

901
00:51:03,398 --> 00:51:05,819
kind of gives you critical story information and

902
00:51:06,560 --> 00:51:08,760
you know there's a bunch of deal recorded for this

903
00:51:09,561 --> 00:51:11,502
and it's it's really an important scene

904
00:51:12,402 --> 00:51:13,743
but unfortunately in the original game

905
00:51:14,583 --> 00:51:18,264
many put me to depend on what players do but almost everybody when they get here

906
00:51:18,825 --> 00:51:19,725
can't talk to domino

907
00:51:20,965 --> 00:51:21,746
and I'm gonna show you why.

908
00:51:25,395 --> 00:51:28,698
So here's a script called dlg underscore domino dot lua.

909
00:51:29,639 --> 00:51:31,720
And these are the first two lines of code in that file.

910
00:51:32,341 --> 00:51:34,923
So there's a comment that says avoid loading this file twice.

911
00:51:35,904 --> 00:51:37,545
And there's a function called checkFirstTime.

912
00:51:38,125 --> 00:51:41,548
And then there's a string called dlg domino dot lua that

913
00:51:41,708 --> 00:51:42,128
is passed in.

914
00:51:42,849 --> 00:51:45,471
And checkFirstTime is something akin to a C-style

915
00:51:45,551 --> 00:51:46,332
pound include guard.

916
00:51:47,359 --> 00:51:50,840
and will prevent the Lou interpreter from loading this

917
00:51:50,920 --> 00:51:51,721
file twice.

918
00:51:52,841 --> 00:51:54,942
I actually don't know why this was here,

919
00:51:55,142 --> 00:51:57,743
because it is valid to reload the same Lou

920
00:51:57,783 --> 00:51:59,644
and replace functions that had already been defined.

921
00:51:59,764 --> 00:52:01,805
In fact, that's how patching worked in Grim Fandango.

922
00:52:03,085 --> 00:52:03,805
But it was there.

923
00:52:04,586 --> 00:52:06,306
And so this was from the script that

924
00:52:06,326 --> 00:52:07,607
controlled the dialogue with Domino

925
00:52:07,627 --> 00:52:08,527
at the beginning of the game.

926
00:52:10,868 --> 00:52:13,129
Here's DLG Dom 2.Lua from the same scene.

927
00:52:14,768 --> 00:52:17,511
look familiar. Yeah, cut and paste air.

928
00:52:18,251 --> 00:52:21,094
So this was thankfully very easy to fix, but I thought it was kind of

929
00:52:21,374 --> 00:52:23,336
interesting in a historical context that

930
00:52:23,356 --> 00:52:28,060
uh... this was able to we were able to add content that kind of had been hidden

931
00:52:28,760 --> 00:52:29,921
for a long time from players

932
00:52:30,682 --> 00:52:33,844
and in addition to a ton of other things that we're able to address but I thought

933
00:52:33,864 --> 00:52:36,326
this was the most interesting because of the extra content.

934
00:52:39,767 --> 00:52:44,629
So to recap we went through our philosophy and kind of showed how it was

935
00:52:44,689 --> 00:52:48,251
implemented in both games we've stayed true to the artistic intent in both day

936
00:52:48,291 --> 00:52:54,233
the tentacle and grim Fandango not going crazy, even though we sometimes had some

937
00:52:54,293 --> 00:52:54,834
temptation.

938
00:52:56,414 --> 00:53:00,036
We improve fidelity where we could with higher resolution.

939
00:53:01,537 --> 00:53:02,197
Better lighting

940
00:53:02,217 --> 00:53:04,998
improve textures and so on.

941
00:53:06,285 --> 00:53:09,047
We modernize delicately we showed you the controls in

942
00:53:09,067 --> 00:53:11,308
Grim Fandango. We didn't talk about this, but in Day of the

943
00:53:11,348 --> 00:53:13,650
Tentacle we also change the default controls to to make it

944
00:53:13,670 --> 00:53:14,170
more intuitive.

945
00:53:16,132 --> 00:53:17,633
We fixed original game bugs

946
00:53:18,433 --> 00:53:19,774
and showed examples in both games.

947
00:53:20,755 --> 00:53:22,616
And and although we didn't get a chance to talk about

948
00:53:22,636 --> 00:53:24,798
this really. Yeah, the extra extras were kind

949
00:53:24,818 --> 00:53:27,139
of like taking inspiration from the criterion

950
00:53:27,179 --> 00:53:29,281
collection. So from film, it's like, you

951
00:53:29,301 --> 00:53:31,422
know, people who are really familiar with this material to try

952
00:53:31,442 --> 00:53:33,624
to give them something something median,

953
00:53:33,644 --> 00:53:34,665
valuable to chew on.

954
00:53:37,473 --> 00:53:39,834
So Oliver and I both want to say thanks to Sony,

955
00:53:39,914 --> 00:53:42,675
Disney and Lucasfilm for helping make these remasters happen.

956
00:53:43,776 --> 00:53:45,596
Thanks to Tim Schafer and Brett Mogilevski

957
00:53:45,676 --> 00:53:47,537
for helping us prepare for the talk.

958
00:53:48,097 --> 00:53:49,858
Thank you, of course, to the classic game teams,

959
00:53:50,098 --> 00:53:51,919
to the remastered game teams at Double Fine,

960
00:53:51,979 --> 00:53:53,420
Shiny Shoe and Super Genius.

961
00:53:53,840 --> 00:53:55,520
And thank you to Two Player Productions

962
00:53:55,621 --> 00:53:57,281
for help on some of the videos.

963
00:53:58,522 --> 00:53:59,302
And thank you all for coming.

964
00:54:09,256 --> 00:54:11,137
I think we have time for a few questions.

965
00:54:11,617 --> 00:54:11,857
Yes.

966
00:54:12,918 --> 00:54:14,979
And then we're going to go to the wrap up room

967
00:54:15,079 --> 00:54:15,939
just outside of the room.

968
00:54:16,079 --> 00:54:18,761
So either you can find us here and we go there together,

969
00:54:18,801 --> 00:54:20,221
or you just go there and we'll find you there.

970
00:54:21,582 --> 00:54:22,923
Maybe somewhat a strange question.

971
00:54:23,223 --> 00:54:25,744
Now you're armed with all this experience of remastering,

972
00:54:26,164 --> 00:54:27,605
are you planning to make new games?

973
00:54:28,185 --> 00:54:33,548
Or is the adventure market completely dead now?

974
00:54:35,349 --> 00:54:36,189
We cannot talk about that.

975
00:54:39,795 --> 00:54:43,219
Hey, so regarding the backgrounds in the Scum Game remasters,

976
00:54:44,260 --> 00:54:45,561
it's my impression that the backgrounds

977
00:54:45,581 --> 00:54:47,723
were originally hand-drawn and scanned.

978
00:54:49,185 --> 00:54:52,488
Did you experiment with trying to recover

979
00:54:52,568 --> 00:54:54,710
either the original drawings or the original scans

980
00:54:54,930 --> 00:54:56,092
and use those, I guess,

981
00:54:56,212 --> 00:54:57,973
or since you didn't end up shipping with it,

982
00:54:58,654 --> 00:54:59,775
what ended up being the blocker

983
00:54:59,795 --> 00:55:01,517
that made you upscale and retouch?

984
00:55:01,897 --> 00:55:06,901
Yeah, we didn't really investigate that and I think what probably would have

985
00:55:06,941 --> 00:55:12,145
happened is we would have found a you know 60% of those and then the remaining

986
00:55:13,006 --> 00:55:16,429
40% would have been lost somewhere throughout the archiving process and you

987
00:55:16,449 --> 00:55:19,271
know for us it was really hard to say because we want to be consistent and

988
00:55:19,291 --> 00:55:22,333
then we would have the issue like RL we have some of them we can rescan them but

989
00:55:22,373 --> 00:55:26,056
how we how do we recreate the other ones at the same style that Peter Chan and

990
00:55:26,076 --> 00:55:28,097
some of the artists like create them originally so.

991
00:55:29,058 --> 00:55:34,020
The answer is no, because we kind of knew that there were some holes in the archiving process,

992
00:55:34,080 --> 00:55:35,460
specifically the physical one.

993
00:55:36,281 --> 00:55:36,561
Thank you.

994
00:55:38,702 --> 00:55:45,844
Hi, were there any technical reasons for not increasing the frame rate of individual animations in Dave's Tentacle?

995
00:55:46,725 --> 00:55:47,165
You can take that.

996
00:55:48,402 --> 00:55:51,825
Any technical reasons know this was again trying to stick to the original

997
00:55:51,865 --> 00:55:55,487
artistic intent. We actually did some experiments early on with increasing the

998
00:55:55,507 --> 00:55:56,928
frame rate. I think the 30 that's right.

999
00:55:56,948 --> 00:56:02,291
Yeah, but decided that that was moving in a direction that made the game feel

1000
00:56:02,411 --> 00:56:03,112
too different

1001
00:56:04,693 --> 00:56:07,414
from what they were trying to accomplish originally so we decided against it for

1002
00:56:07,535 --> 00:56:08,235
artistic reasons.

1003
00:56:08,255 --> 00:56:10,036
So hi, I'm Brett.

1004
00:56:18,392 --> 00:56:20,332
I am the lead programmer of Grim Fandango, by the way.

1005
00:56:20,352 --> 00:56:24,314
This is the crew shirt, by the way, the team shirt, the

1006
00:56:24,354 --> 00:56:24,814
GLaDOS shirt.

1007
00:56:24,874 --> 00:56:28,135
So I have a question about the animation in Grim Fandango.

1008
00:56:28,215 --> 00:56:31,956
We had awful data loss from soft image animation to the

1009
00:56:32,096 --> 00:56:34,337
real-time game engine, because at the time, the only math we

1010
00:56:34,357 --> 00:56:36,198
could really afford to do was linear interpolation.

1011
00:56:36,798 --> 00:56:39,459
So did you do anything to improve the actual keyframe

1012
00:56:39,499 --> 00:56:42,320
interpolation in Grim Fandango Remastered, or to stick it?

1013
00:56:42,440 --> 00:56:45,201
Just because it was too, I mean, was there a reason to

1014
00:56:45,221 --> 00:56:45,581
stick with it?

1015
00:56:47,283 --> 00:56:48,224
We did not, no.

1016
00:56:48,664 --> 00:56:51,887
Yeah, I mean, we would have loved to have done something

1017
00:56:51,927 --> 00:56:54,329
more with all of the 3D data, but not having access to the

1018
00:56:54,369 --> 00:56:55,990
source material kind of.

1019
00:56:57,070 --> 00:57:00,973
put us on a path where we decided to try to make as many improvements as we could

1020
00:57:01,013 --> 00:57:03,094
within the context of everything outside of that

1021
00:57:03,914 --> 00:57:07,616
but not push harder on trying to replace the models or the animations.

1022
00:57:07,856 --> 00:57:10,358
Yeah, keyframe animations should be valid data.

1023
00:57:11,338 --> 00:57:14,440
I would love to see this presentation actually end up as add-ons to the game

1024
00:57:14,480 --> 00:57:18,182
at some point, like this is actually really good information. So thanks a lot for doing it.

1025
00:57:18,462 --> 00:57:21,346
I also want to say the bug about pushing forward and having him go back and forth.

1026
00:57:21,806 --> 00:57:23,148
I swear to God we fixed that.

1027
00:57:24,350 --> 00:57:26,512
I swear to God that game did not shift like that.

1028
00:57:26,612 --> 00:57:29,275
And when you saw it, when you held it down, I'm like, yeah, and he keeps going in that

1029
00:57:29,295 --> 00:57:29,596
direction.

1030
00:57:29,616 --> 00:57:31,138
And then like you said, he did.

1031
00:57:31,158 --> 00:57:31,858
I was astounded.

1032
00:57:31,919 --> 00:57:32,079
So...

1033
00:57:33,440 --> 00:57:34,482
What added to your bug tracker?

1034
00:57:35,342 --> 00:57:40,926
Yeah, I don't know. I'm trying to figure out who's responsible. I think it's Kevin. Thank you.

1035
00:57:41,226 --> 00:57:43,808
So in some other remastered games

1036
00:57:44,648 --> 00:57:49,011
you know they've talked about like recovering like you know a bunch of the different types of assets and

1037
00:57:49,511 --> 00:57:51,873
interesting stories around even audio like recovering old

1038
00:57:52,553 --> 00:57:57,478
voice, like you have stuff that's like from the original game data wise but in some

1039
00:57:57,938 --> 00:58:01,862
remastered games they've actually taken those and tried to enhance them, either remastering,

1040
00:58:02,683 --> 00:58:09,549
either the music, even digging into like the old technology at which these audio files were

1041
00:58:09,649 --> 00:58:14,934
recorded on which is like, you know, pretty ancient stuff for that. I was just kind of

1042
00:58:14,954 --> 00:58:16,376
curious if you could touch on that at all.

1043
00:58:17,345 --> 00:58:23,427
Yeah, I can so actually the guy who worked on all that stuff is sitting right here if you want to talk to him, but yeah, there was

1044
00:58:24,467 --> 00:58:44,875
we were using I'm use which in both games which is the original LucasArts technology that supported all kinds of dynamic music and in the remaster all sorts of things happen yet there was extraction from the original debt tapes correct me if I'm getting anything wrong Trevor for like the V o 2 because we didn't want to use the compressed material in the games that it shipped

1045
00:58:46,724 --> 00:58:49,606
For Grim Fandango at least, there was live,

1046
00:58:50,386 --> 00:58:51,126
okay we're running out of time,

1047
00:58:51,146 --> 00:58:54,228
but there was a live band recorded, extra music

1048
00:58:54,288 --> 00:58:55,929
to really try to improve the fidelity

1049
00:58:55,989 --> 00:58:58,930
and Peter McConnell, the original audio director

1050
00:58:58,970 --> 00:59:00,231
was involved in all that, so yeah,

1051
00:59:00,291 --> 00:59:01,091
there was a lot of stuff.

1052
00:59:01,632 --> 00:59:03,232
Unfortunately we couldn't fit it into this talk,

1053
00:59:03,292 --> 00:59:05,574
but yeah, if you wanna talk more after, we're available.

1054
00:59:06,534 --> 00:59:08,675
So yeah, I'm sorry, but we're out of time

1055
00:59:09,415 --> 00:59:11,415
because we just tried to jam in as much information

1056
00:59:11,435 --> 00:59:12,335
as we could and talk.

1057
00:59:12,615 --> 00:59:13,936
So thank you again, everyone, for coming.

1058
00:59:14,116 --> 00:59:16,676
And you can find us outside.

1059
00:59:27,078 --> 00:59:29,138
Trouble with that sort of thing, and because we

1060
00:59:29,158 --> 00:59:31,119
don't localize graphics, that is something

1061
00:59:31,139 --> 00:59:32,539
we have to worry about because we can't change it

1062
00:59:32,579 --> 00:59:33,279
for another language.

1063
00:59:33,919 --> 00:59:35,380
And I'm sorry, the second question

1064
00:59:36,826 --> 00:59:37,626
The web portal, yeah.

1065
00:59:37,666 --> 00:59:39,568
So I don't know a lot of the details,

1066
00:59:39,628 --> 00:59:41,469
because again, that's stuff that engineers implemented.

1067
00:59:41,509 --> 00:59:45,151
What I'm told is it redirects based on the locale

1068
00:59:45,171 --> 00:59:45,771
from your IP.

1069
00:59:45,832 --> 00:59:48,513
So if you don't, I believe there's a cookie that gets set.

1070
00:59:48,653 --> 00:59:50,795
And if you're a first time user and you don't have anything,

1071
00:59:50,815 --> 00:59:52,576
it tries to figure out where you are in the world

1072
00:59:52,616 --> 00:59:55,898
based on either IP or browser settings or something

1073
00:59:55,918 --> 00:59:57,399
like that to initialize it.

1074
00:59:57,959 --> 00:59:58,099
Cool.

1075
00:59:58,119 --> 00:59:58,619
Thank you.

1076
01:00:00,741 --> 01:00:00,901
Yeah.

1077
01:00:02,238 --> 01:00:03,939
My name is Jidaika Kawai from Japan.

1078
01:00:03,999 --> 01:00:06,440
And I just want to, you know, considering

1079
01:00:06,460 --> 01:00:10,302
a lot of developers and publishers in the States

1080
01:00:10,742 --> 01:00:13,663
are kind of ignorant about localization.

1081
01:00:13,723 --> 01:00:18,406
And usually localization happens in the end of the production.

1082
01:00:19,026 --> 01:00:21,847
And considering that, it seems like there

1083
01:00:21,867 --> 01:00:23,868
was a huge leap from 2012 to 2015.

1084
01:00:24,288 --> 01:00:27,230
And can you tell me what exactly happened

1085
01:00:27,590 --> 01:00:28,650
to change that mindset?

1086
01:00:29,077 --> 01:00:31,238
Yeah, well, I mean, I think at Bungie, a big piece of it

1087
01:00:31,278 --> 01:00:32,278
was they went independent.

1088
01:00:32,338 --> 01:00:33,599
So the last game that they'd published,

1089
01:00:33,639 --> 01:00:34,779
they were still a part of Microsoft.

1090
01:00:35,240 --> 01:00:36,620
And being internal at Microsoft, they

1091
01:00:36,660 --> 01:00:39,141
had Microsoft's localization team to work with.

1092
01:00:39,581 --> 01:00:41,542
Localization had never really been something

1093
01:00:41,562 --> 01:00:42,762
they needed to worry about internally.

1094
01:00:42,802 --> 01:00:45,223
It was something where, towards the end of a project, someone

1095
01:00:45,263 --> 01:00:47,944
who had another job would just be tasked with, OK,

1096
01:00:48,504 --> 01:00:50,585
get the strings together to do a localization handoff,

1097
01:00:50,625 --> 01:00:52,366
get those assets implemented back into the game.

1098
01:00:52,686 --> 01:00:55,267
But there wasn't a need to have dedicated internal people.

1099
01:00:55,707 --> 01:00:57,588
So it was a combination of that, I think, and also just

1100
01:00:58,082 --> 01:01:02,324
building this new IP and wanting to do things right and build a global brand.

1101
01:01:02,664 --> 01:01:05,865
They wanted to make sure that we were taking a good approach to localization.

1102
01:01:06,645 --> 01:01:11,427
Was it just for this game or was it just as a Bungie company itself?

1103
01:01:12,047 --> 01:01:16,688
It's hard for me to say because I came on after they'd already decided to start building a localization team internally.

1104
01:01:17,649 --> 01:01:19,329
Yeah, half answer but...

1105
01:01:19,837 --> 01:01:20,018
Sorry.

1106
01:01:20,238 --> 01:01:21,460
All right, thanks.

1107
01:01:21,620 --> 01:01:22,080
Yep, thank you.

1108
01:01:22,421 --> 01:01:26,026
I'm sorry, I apologize, but it's now time to end the session.

1109
01:01:26,306 --> 01:01:28,810
There is a wrap-up room in cell 300.

1110
01:01:29,251 --> 01:01:31,434
You're welcome to ask additional questions there.

1111
01:01:31,454 --> 01:01:33,196
All right, thank you.

