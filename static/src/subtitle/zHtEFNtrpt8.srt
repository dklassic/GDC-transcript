1
00:00:05,849 --> 00:00:09,731
So my name is George Ng, and I'm the Chief Technology Officer at GGWP.

2
00:00:09,731 --> 00:00:13,894
The topic is supplying methods from other domains to identify gamer behaviors.

3
00:00:13,894 --> 00:00:18,176
So while I've been a gamer, I'm relatively new to any professional application to gaming.

4
00:00:18,176 --> 00:00:22,999
I've been a data scientist in a wide variety of domains, including defense and intelligence,

5
00:00:22,999 --> 00:00:27,102
financial services and healthcare, and professional sports.

6
00:00:27,102 --> 00:00:32,785
I've also taught game theory at UC Irvine and American University, and machine learning at UC Berkeley.

7
00:00:33,484 --> 00:00:34,506
A bit more about GGWP.

8
00:00:34,506 --> 00:00:38,573
GGWP aims to help reduce toxic and disruptive behaviors

9
00:00:38,573 --> 00:00:39,274
in games.

10
00:00:39,274 --> 00:00:42,720
More specifically, we use machine learning

11
00:00:42,720 --> 00:00:44,183
to identify gamer behaviors.

12
00:00:44,183 --> 00:00:46,186
I can share some examples of the type of work

13
00:00:46,186 --> 00:00:47,468
throughout our presentation.

14
00:00:52,738 --> 00:00:56,339
Now it goes without saying that context matters,

15
00:00:56,339 --> 00:00:58,260
not just in identifying particular expressions

16
00:00:58,260 --> 00:01:00,040
or events that may be of interest,

17
00:01:00,040 --> 00:01:02,461
but to try to factor in context in a scalable way

18
00:01:02,461 --> 00:01:06,882
where possible.

19
00:01:06,882 --> 00:01:09,983
A quick recap.

20
00:01:09,983 --> 00:01:12,204
Most of you are familiar with the Fair Play Alliance

21
00:01:12,204 --> 00:01:13,704
Disruptive Conduct Framework.

22
00:01:14,484 --> 00:01:19,925
We have four areas expression, delivery channel, impact and root cause.

23
00:01:19,925 --> 00:01:22,226
Expression is basically what form does it take.

24
00:01:22,226 --> 00:01:26,407
And here we look at detecting behaviors and I walked through an example to start.

25
00:01:26,407 --> 00:01:31,608
The delivery channel, where does it happen in and around online games?

26
00:01:31,608 --> 00:01:33,609
We won't cover that here.

27
00:01:33,609 --> 00:01:37,290
Impact, who is affected by it and in what ways, what are the consequences?

28
00:01:37,290 --> 00:01:39,550
We'll talk a little bit more about this.

29
00:01:39,550 --> 00:01:44,152
And root cause, why does it happen and what does it express?

30
00:01:45,544 --> 00:01:49,466
So we start with looking at expression.

31
00:01:49,466 --> 00:01:53,149
And I'll give you a little bit of background

32
00:01:53,149 --> 00:01:56,231
in terms of how we think about building models.

33
00:01:56,231 --> 00:01:59,714
So there's top-down, which starts with hypothesis.

34
00:01:59,714 --> 00:02:03,116
And on the left, you see a data scientist Venn diagram.

35
00:02:03,116 --> 00:02:05,558
So first, I'll describe each component in it

36
00:02:05,558 --> 00:02:06,558
and why it's relevant.

37
00:02:07,403 --> 00:02:13,386
So in order to have a hypothesis requires domain expertise, and having the right mathematical

38
00:02:13,386 --> 00:02:18,888
background is helpful to translate a hypothesis into an appropriate test. So when dealing with

39
00:02:18,888 --> 00:02:25,671
large data sets and running things at scale, this requires engineering expertise. In gaming,

40
00:02:25,671 --> 00:02:31,914
obviously, because of machine capture, there's the potential for a lot of data. So let's look

41
00:02:31,914 --> 00:02:36,536
at some specific examples from ministry. So suppose I'm trying to identify hackers.

42
00:02:37,591 --> 00:02:43,115
Domain matters because it's helpful to understand how hacking works and to understand the motivation

43
00:02:43,115 --> 00:02:50,980
of hackers. Is it a financially motivated attack like with the crime syndicate? Is it a nation-state

44
00:02:50,980 --> 00:02:55,823
trying to demonstrate strength? Is the goal entertainment like with script kiddies?

45
00:02:55,823 --> 00:03:00,246
So cheating can be seen as a specific type of hacking that modifies the game.

46
00:03:00,246 --> 00:03:05,369
The point here is that the initial intuition gives us guidance on how to ultimately scope

47
00:03:05,369 --> 00:03:06,190
a research question.

48
00:03:06,979 --> 00:03:10,181
So what would relevant proxy data be for my question?

49
00:03:10,181 --> 00:03:15,225
How do I translate my question into data, in other words?

50
00:03:15,225 --> 00:03:18,287
Does that target data require additional collection?

51
00:03:18,287 --> 00:03:21,590
Does it require pre-processing, aggregation, normalization

52
00:03:21,590 --> 00:03:23,031
in some form?

53
00:03:23,031 --> 00:03:25,192
And ultimately, the statistical modeling

54
00:03:25,192 --> 00:03:27,774
helps inform how do we evaluate a hypothesis.

55
00:03:27,774 --> 00:03:30,896
The other approach we look at here

56
00:03:30,896 --> 00:03:34,319
is bottom-up modeling, which basically is data mining

57
00:03:34,319 --> 00:03:35,580
or searching for patterns within data.

58
00:03:36,828 --> 00:03:39,553
Oftentimes we don't know exactly what we're looking for.

59
00:03:39,553 --> 00:03:42,759
Even when we have a specific hypothesis,

60
00:03:42,759 --> 00:03:44,883
we can easily misjudge the distribution.

61
00:03:45,787 --> 00:03:51,112
behaviors. So for example, just because we know there's shooters out there, we may not be aware

62
00:03:51,112 --> 00:03:55,976
of the different proportions, right? Most games you'll know aimbots because people are very

63
00:03:55,976 --> 00:04:03,723
sensitive to it, but maybe some other types are a little bit like things that just reduce gun recoil

64
00:04:03,723 --> 00:04:10,329
are less easy to detect initially because players don't report them as much. In general,

65
00:04:11,067 --> 00:04:16,131
Bottom-up modeling is often used to identify the baseline in an environment.

66
00:04:16,131 --> 00:04:22,436
Common applications are like identifying cheats and fraud.

67
00:04:22,436 --> 00:04:26,519
In these cases, we first define normal to be able to

68
00:04:26,519 --> 00:04:32,664
use anomaly detection algorithms to then identify abnormally bad.

69
00:04:32,664 --> 00:04:36,187
We use both top-down and bottom-up modeling in our work,

70
00:04:36,187 --> 00:04:39,429
and I'll use it here to illustrate a single event detection example.

71
00:04:44,222 --> 00:04:49,906
So suppose we want to build a model that detects players wrongfully not reviving down teammates.

72
00:04:49,906 --> 00:04:53,828
Well, one definition of wrong is that the player did not perform some action

73
00:04:53,828 --> 00:05:00,272
that the designers intended, or that others perform regularly, or that improves game

74
00:05:00,272 --> 00:05:05,576
outcomes in some way. So let's use the second definition. So we're looking at normalcy.

75
00:05:05,576 --> 00:05:10,859
We first perform some basic data analysis, and we show the results in these charts.

76
00:05:11,378 --> 00:05:18,561
So the left chart illustrates, so on the y-axis you see the distance to the enemy,

77
00:05:18,561 --> 00:05:24,343
and on the x-axis you see the distance to the downed teammate. We also capture how much time

78
00:05:24,343 --> 00:05:29,505
is left to look at a revive, and we break this up into six different charts. Blue dots represent

79
00:05:29,505 --> 00:05:34,207
revives that happened, and red dots represent cases where the teammate was not revived.

80
00:05:34,207 --> 00:05:39,228
So for the top row, we have a short time left to revive. We only see successful revives when the

81
00:05:39,228 --> 00:05:41,029
teammate is very close to the downed teammate.

82
00:05:41,835 --> 00:05:46,778
When there's more time left on the bottom row, we can see that the upper left quadrants

83
00:05:46,778 --> 00:05:48,300
on the chart tend to be mostly blue.

84
00:05:48,300 --> 00:05:53,183
And what that means is that the player is relatively closer to the nearest teammate

85
00:05:53,183 --> 00:05:57,466
or relatively farther away from the opponent, which is what we'd expect.

86
00:05:57,466 --> 00:06:01,689
Note also that we do see much more variation when the time to revive increases substantially,

87
00:06:01,689 --> 00:06:03,151
which also is what we'd expect.

88
00:06:04,099 --> 00:06:06,662
The right chart summarizes information

89
00:06:06,662 --> 00:06:08,023
by showing the average probability

90
00:06:08,023 --> 00:06:10,746
revived based on the distance to down teammate.

91
00:06:10,746 --> 00:06:13,949
The different colored lines illustrate our way

92
00:06:13,949 --> 00:06:15,631
of factoring enemy distance here.

93
00:06:15,631 --> 00:06:18,494
This view really highlights the correlation between distance

94
00:06:18,494 --> 00:06:21,237
to a teammate and probability revived.

95
00:06:21,237 --> 00:06:24,100
Even a very simplistic model clearly has some signal.

96
00:06:24,100 --> 00:06:26,602
But I think we can do a little bit better here.

97
00:06:28,720 --> 00:06:38,225
So we've confirmed our initial hypothesis that it's possible to predict reviving likelihood.

98
00:06:38,225 --> 00:06:45,268
Here we further show that example by using concentric circles around the player to illustrate

99
00:06:45,268 --> 00:06:49,971
the probability of revive based on distance. And this overlay on a map I think really helps

100
00:06:49,971 --> 00:06:50,871
highlight this.

101
00:06:52,882 --> 00:06:55,243
We acknowledge that this is far from a perfect model.

102
00:06:55,243 --> 00:06:58,485
The distance doesn't factor in actual walking distance

103
00:06:58,485 --> 00:07:02,147
and sight lines and doesn't do well in buildings.

104
00:07:02,147 --> 00:07:06,170
But again, even this baseline model does reasonably well.

105
00:07:06,170 --> 00:07:07,891
We can also look at other.

106
00:07:08,852 --> 00:07:13,255
potential characteristics that might be relevant. So if we look on the right,

107
00:07:13,255 --> 00:07:17,859
we see things like health of player and downed teammate, the number of previous revives,

108
00:07:17,859 --> 00:07:22,984
and time available, which is related to the number of previous times revived,

109
00:07:22,984 --> 00:07:27,307
and other teammate position, right? It makes sense that, you know, unless someone's covering

110
00:07:27,307 --> 00:07:33,032
an angle or taking fire, that the closest teammate would be more likely to make the revive.

111
00:07:33,032 --> 00:07:36,135
And finally, since it's a battle royale, we factor in circle position as well.

112
00:07:36,908 --> 00:07:39,330
In other words, if a team is far from the ring,

113
00:07:39,330 --> 00:07:41,312
it's more likely to not make sense

114
00:07:41,312 --> 00:07:43,094
to revive in that situation.

115
00:07:43,094 --> 00:07:47,057
We build a richer model by using these attributes.

116
00:07:47,057 --> 00:07:49,058
And we use an ensemble tree that captures these elements

117
00:07:49,058 --> 00:07:51,981
to determine the probability of a revive.

118
00:07:51,981 --> 00:07:54,483
We then take the residuals from this model

119
00:07:54,483 --> 00:07:57,065
to identify likely cases when teammates should have revived

120
00:07:57,065 --> 00:07:57,445
but did not.

121
00:07:57,445 --> 00:08:00,027
Or in other words, when the model

122
00:08:00,027 --> 00:08:02,269
predicts the high probability of revive

123
00:08:02,269 --> 00:08:04,391
and the player did not revive, then we'll

124
00:08:04,391 --> 00:08:05,692
actually detect these incidents.

125
00:08:11,300 --> 00:08:14,362
So next, I want to get a little bit deeper into context.

126
00:08:14,362 --> 00:08:16,804
So when we look at root causes, we also

127
00:08:16,804 --> 00:08:19,025
want to understand other relevant factors that

128
00:08:19,025 --> 00:08:21,527
could be tied to the event, such as the type of player

129
00:08:21,527 --> 00:08:26,731
or the personas, expectations based on game experience,

130
00:08:26,731 --> 00:08:29,492
now showing example of skill level,

131
00:08:29,492 --> 00:08:31,574
initiation, and triggering.

132
00:08:31,574 --> 00:08:34,816
So within the scope of a match, or potentially

133
00:08:34,816 --> 00:08:36,137
across multiple matches, if there's

134
00:08:36,137 --> 00:08:38,399
history between players, like who started it,

135
00:08:38,399 --> 00:08:39,800
did someone get provoked?

136
00:08:39,860 --> 00:08:42,620
And then finally, the social factors and social environment.

137
00:08:42,620 --> 00:08:45,641
And what I mean here is just expectations

138
00:08:45,641 --> 00:08:47,882
when playing with friends is very different.

139
00:08:47,882 --> 00:08:49,882
If you're playing with a club, clan, or group,

140
00:08:49,882 --> 00:08:52,683
a full premade versus a partial premade and solo queue

141
00:08:52,683 --> 00:08:56,164
are all very different environments.

142
00:08:56,164 --> 00:08:58,804
So next, I'll illustrate some of these examples from games

143
00:08:58,804 --> 00:08:58,944
as well.

144
00:08:58,944 --> 00:09:02,425
So first thing I want to look at is personas.

145
00:09:06,552 --> 00:09:11,394
So the chart here shows different types of players as clustered by features such as damage and kills

146
00:09:11,394 --> 00:09:16,436
per second, average walk and loot speed. Depending on the game, we can also look at things like

147
00:09:16,436 --> 00:09:21,798
character selection, items and ability usage, health and ammo sharing, etc. Some of these just

148
00:09:21,798 --> 00:09:26,661
highlight skill differences. Others show differences about how a player likes to play the game.

149
00:09:26,661 --> 00:09:32,183
So using the non-revive example, does our view change really if the player tends to play support

150
00:09:32,183 --> 00:09:32,563
roles?

151
00:09:33,750 --> 00:09:34,571
It can, right?

152
00:09:34,571 --> 00:09:39,076
The expectation would be that this player would be more likely to revive in most cases.

153
00:09:39,076 --> 00:09:42,100
So we do want to come up with positive attributes as well.

154
00:09:42,100 --> 00:09:46,044
We want to make sure that we're just not rewarding certain types of play styles, unless it's

155
00:09:46,044 --> 00:09:49,789
good game design to reward those play styles for some reason.

156
00:09:50,761 --> 00:09:57,046
But ultimately, we do think that the persona could be a consideration, right?

157
00:09:57,046 --> 00:10:02,851
Different personas get triggered differently, different personas react to situations differently.

158
00:10:02,851 --> 00:10:07,474
So we want to factor in these elements where possible.

159
00:10:07,474 --> 00:10:08,595
So what about expectations?

160
00:10:08,595 --> 00:10:15,961
Players often go into games with some expectation in how their teammates will and should play.

161
00:10:15,961 --> 00:10:19,484
Something that appears to be simply suboptimal strategy.

162
00:10:20,832 --> 00:10:27,356
or not following the meta at low ranks could really be viewed as griefing in higher ranks.

163
00:10:27,356 --> 00:10:32,779
So how do we consider that difference? So the chart shows friendly fire proportions by rank

164
00:10:32,779 --> 00:10:39,583
and ability. Higher ranks as you go down. Unsurprisingly, more of the friendly fire

165
00:10:39,583 --> 00:10:40,824
occurs in lower ranks.

166
00:10:41,923 --> 00:10:48,170
There's some exceptions with Raze's Showstopper and, you know, Sova's Hunter's Fury, which

167
00:10:48,170 --> 00:10:52,315
if you play the game, it makes a bit of sense given the spread and impact of one.

168
00:10:52,315 --> 00:10:56,320
And Hunter's Fury, of course, goes across the entire map, basically.

169
00:10:56,320 --> 00:10:58,883
We factor in ranking experience where possible.

170
00:10:59,895 --> 00:11:01,936
when we try to determine deliberateness.

171
00:11:01,936 --> 00:11:05,858
How that translates is usually we look at low-rank situations

172
00:11:05,858 --> 00:11:07,839
very differently.

173
00:11:07,839 --> 00:11:10,380
Things require a certain level of experience

174
00:11:10,380 --> 00:11:13,402
at the game before you can see something as being deliberate.

175
00:11:13,402 --> 00:11:14,863
And this is supported when we look

176
00:11:14,863 --> 00:11:17,164
at the distribution of play behaviors and strategies

177
00:11:17,164 --> 00:11:19,946
and even character choice by rank.

178
00:11:19,946 --> 00:11:26,349
So what about initiation and responses?

179
00:11:26,349 --> 00:11:28,370
Well, we believe that this is very relevant.

180
00:11:29,308 --> 00:11:31,469
and can help inform severity.

181
00:11:31,469 --> 00:11:35,452
Obviously, being triggered is different than being unprovoked.

182
00:11:35,452 --> 00:11:38,534
Here we provide some examples from the League of Legends

183
00:11:38,534 --> 00:11:39,835
Tribunal.

184
00:11:39,835 --> 00:11:43,697
These are from reports, so we expect more toxicity

185
00:11:43,697 --> 00:11:45,979
than average.

186
00:11:45,979 --> 00:11:48,601
Some interesting summary statistics to share.

187
00:11:48,601 --> 00:11:51,102
When we use simple models, such as just

188
00:11:51,102 --> 00:11:54,985
block list detection and word embeddings derived from them,

189
00:11:55,953 --> 00:12:00,096
We see that 35% of all players made some potentially offensive

190
00:12:00,096 --> 00:12:01,997
statement, and over 90% of these matches

191
00:12:01,997 --> 00:12:06,160
have more than one player making toxic statements.

192
00:12:06,160 --> 00:12:09,963
We also tagged some examples of what our models flagged.

193
00:12:09,963 --> 00:12:12,204
Even using our more conservative models

194
00:12:12,204 --> 00:12:14,106
that does leverage some game-specific language,

195
00:12:14,106 --> 00:12:15,927
still finds that over 50% of matches

196
00:12:15,927 --> 00:12:18,589
have more than one player making toxic statements.

197
00:12:18,589 --> 00:12:20,910
So not as high, but still very high.

198
00:12:22,933 --> 00:12:27,957
Also to qualify things, I should note that not all statements are equally offensive, of course.

199
00:12:27,957 --> 00:12:35,083
There's general toxicity, which we're generously tagging here, but you can further filter to identity hate.

200
00:12:35,083 --> 00:12:41,189
You can look at targeted versus non-targeted. There's a lot of things that are criticizing gameplay.

201
00:12:41,189 --> 00:12:47,014
We also look at conversation level stuff, both negative, like with bullying, and positive, with mentoring and encouraging players.

202
00:12:48,182 --> 00:12:52,104
Not surprisingly, this gets harder and harder, right?

203
00:12:52,104 --> 00:12:55,706
It can be problematic to sift through the sarcastic,

204
00:12:55,706 --> 00:12:58,328
you know, good jobs and unsolicited advice

205
00:12:58,328 --> 00:13:02,051
that isn't well received often in League.

206
00:13:02,051 --> 00:13:03,471
Going back to the main theme here,

207
00:13:03,471 --> 00:13:04,932
we note that nearly 20% of these cases

208
00:13:04,932 --> 00:13:08,755
had a player other than the offender appear to start things.

209
00:13:08,755 --> 00:13:10,616
We try to consider the context like this

210
00:13:10,616 --> 00:13:13,138
when evaluating severity of these different events.

211
00:13:17,397 --> 00:13:22,621
So related to different triggers, there's environmental ones as well.

212
00:13:22,621 --> 00:13:25,262
You know, think about the term rage quitting, for example.

213
00:13:25,262 --> 00:13:30,886
Players are often triggered by losing, especially in these competitive PvP games.

214
00:13:30,886 --> 00:13:33,407
The table shows Valorant Friendly Fire by score difference.

215
00:13:33,407 --> 00:13:38,771
It's clear that when players become less concerned

216
00:13:38,771 --> 00:13:42,113
with avoiding Friendly Fire once the score difference is large,

217
00:13:42,113 --> 00:13:46,455
in particular when a team is losing by a lot, we see evidence of higher Friendly Fire rates.

218
00:13:47,112 --> 00:13:54,954
In our case, while we see this as like regular behavior, we don't adjust the severity for the

219
00:13:54,954 --> 00:14:01,696
different cases. We decide not to lower it or increase it. Indirectly, we do factor this in

220
00:14:01,696 --> 00:14:06,178
in win probability models, which I'll describe later. We do try to capture still because it can

221
00:14:06,178 --> 00:14:11,079
still be relevant information to help inform game design. For example, should a game consider

222
00:14:11,079 --> 00:14:13,500
allowing surrender even earlier in lopsided contests?

223
00:14:18,459 --> 00:14:25,002
So another contextual factor is social ones, right?

224
00:14:25,002 --> 00:14:27,804
We rarely consider events where an offender and victim

225
00:14:27,804 --> 00:14:30,546
are part of the same full stack pre-made.

226
00:14:30,546 --> 00:14:33,948
We also factor in requeuing and adding to a friends list

227
00:14:33,948 --> 00:14:36,149
where possible.

228
00:14:36,149 --> 00:14:38,150
Essentially the standards for behavior change

229
00:14:38,150 --> 00:14:40,371
when you're playing with close contacts.

230
00:14:40,371 --> 00:14:41,672
There's enough of a relationship

231
00:14:41,672 --> 00:14:43,813
where the parties chose to play with each other.

232
00:14:44,899 --> 00:14:47,340
So in the requeuing case, even if it was with solos,

233
00:14:47,340 --> 00:14:49,682
the potential victim chose to requeue with the defending

234
00:14:49,682 --> 00:14:53,265
player, which provides some evidence that either the event

235
00:14:53,265 --> 00:14:56,467
wasn't so severe or the victim thought

236
00:14:56,467 --> 00:15:02,172
it was worth being carried, so they were willing to requeue.

237
00:15:02,172 --> 00:15:05,114
We evaluate these events differently,

238
00:15:05,114 --> 00:15:06,575
in particular when we have a group playing

239
00:15:06,575 --> 00:15:08,216
with other groups or solos.

240
00:15:09,280 --> 00:15:14,284
Sometimes these cases can be even more serious and take on a bullying-like quality,

241
00:15:14,284 --> 00:15:22,511
where groups gang up on solos. Going into this anecdotally, we had cases where people told us

242
00:15:22,511 --> 00:15:28,236
about the reported player actually being the victim. But even in our own analysis, once you're

243
00:15:28,236 --> 00:15:35,102
able to look at report data in conjunction with gameplay data, we've observed some of these cases

244
00:15:35,102 --> 00:15:37,864
where the reported player is actually the victim of group harassment.

245
00:15:39,291 --> 00:15:44,715
This chart shows that for both ranked and unranked cases,

246
00:15:44,715 --> 00:15:47,137
PUBG players that are part of premade

247
00:15:47,137 --> 00:15:48,678
stay way closer together,

248
00:15:48,678 --> 00:15:52,721
maybe even too much based on optimal strategy.

249
00:15:52,721 --> 00:15:54,262
In casual games in particular,

250
00:15:54,262 --> 00:15:56,564
solo players stray more than 100% further

251
00:15:56,564 --> 00:15:57,865
from their teammates on average.

252
00:15:57,865 --> 00:16:05,690
Another event severity consideration

253
00:16:05,690 --> 00:16:07,052
should be the impact to the victim.

254
00:16:07,975 --> 00:16:11,217
There are special cases, maybe you put cheating there,

255
00:16:11,217 --> 00:16:13,898
certainly you put things like predatory behavior there,

256
00:16:13,898 --> 00:16:16,619
that are beyond the scope of games.

257
00:16:16,619 --> 00:16:21,641
But for competitive games, a primary consideration

258
00:16:21,641 --> 00:16:23,882
is just the focus on rank achievement.

259
00:16:23,882 --> 00:16:27,044
And in these cases, the timing of the event and impact on win

260
00:16:27,044 --> 00:16:30,725
percentage matter a lot.

261
00:16:30,725 --> 00:16:34,487
So we look at a few examples that highlight this.

262
00:16:34,487 --> 00:16:36,368
So the game state matters substantially.

263
00:16:37,553 --> 00:16:42,575
You know, griefing in general is bad, so friendly fire can be bad.

264
00:16:42,575 --> 00:16:46,838
On the chart on the left, what you see is an example of a case where the enemy's already

265
00:16:46,838 --> 00:16:47,238
cleared.

266
00:16:47,238 --> 00:16:48,839
You only see red dots left, which is one team.

267
00:16:48,839 --> 00:16:51,060
They are the defending team.

268
00:16:51,060 --> 00:16:55,002
You can see a green dot representing a spike in a game of Valorant.

269
00:16:55,002 --> 00:16:57,483
This means that the attacking team has been already cleared.

270
00:16:57,483 --> 00:17:02,486
Because the enemy has already been eliminated, friendly fire this time is very unlikely to

271
00:17:02,486 --> 00:17:03,987
cause the team to lose.

272
00:17:03,987 --> 00:17:05,848
And in this case, and in most cases, it does not.

273
00:17:06,642 --> 00:17:14,464
If you look on the chart on the bottom right, we can further see friendly fire by round.

274
00:17:14,464 --> 00:17:20,606
Note that the highest friendly fire rate occurs in round 12. Round 12 is the last round prior to

275
00:17:20,606 --> 00:17:28,168
sides change, so you don't get to keep your weapons or abilities or economy. And note that

276
00:17:28,168 --> 00:17:32,649
this example occurred in round 12, so in this case the victim didn't even have to rebuy shields and

277
00:17:32,649 --> 00:17:33,590
weapons.

278
00:17:34,050 --> 00:17:37,312
We should still make the argument that the victim's death impacted his or her KD ratio,

279
00:17:37,312 --> 00:17:42,934
so maybe it's not zero impact, but you can see that it's lower impact than other potentially

280
00:17:42,934 --> 00:17:50,978
similar cases. So because we feel that in competitive games the change in the victim's

281
00:17:50,978 --> 00:17:57,161
win percentage is important, we decided to build a win probability model for these different games.

282
00:17:57,821 --> 00:18:04,524
And the expected win percentage then will fluctuate throughout these games.

283
00:18:04,524 --> 00:18:10,327
If we go back to the previous example again, in that case there is a greater than 99% chance

284
00:18:10,327 --> 00:18:11,588
that that team would win.

285
00:18:11,588 --> 00:18:14,969
This doesn't change at all, even with the friendly fire.

286
00:18:14,969 --> 00:18:18,351
There's four teammates left, you kill one, it's very likely that one of you still manages

287
00:18:18,351 --> 00:18:20,292
to defuse.

288
00:18:20,292 --> 00:18:23,373
This change is zero when the kill happens in transition time.

289
00:18:24,355 --> 00:18:33,099
So again, it's just more evidence that the enemy cleared case is lower severity.

290
00:18:33,099 --> 00:18:37,842
I built similar models to this for the NBA and major league teams

291
00:18:37,842 --> 00:18:44,205
to evaluate the value of different plays. For example, in the NBA, I wanted to evaluate

292
00:18:44,205 --> 00:18:49,588
the impact of a pass that didn't directly lead to a score, so a swing pass.

293
00:18:50,474 --> 00:18:57,316
And here we can compare the expected points for that possession based on spacing, location of the team and opponents and skill sets

294
00:18:57,316 --> 00:18:59,837
on that possession

295
00:18:59,837 --> 00:19:07,700
after the pass and prior to that pass. And that difference will be the value rewarded or taken away from that player.

296
00:19:07,700 --> 00:19:13,362
So games like PUBG are a bit more complicated than a sporting event because there are many teams.

297
00:19:13,362 --> 00:19:16,443
So in all these battle royales

298
00:19:16,443 --> 00:19:19,624
the most obvious change or impact is just

299
00:19:20,502 --> 00:19:23,224
the number of players and teams remaining.

300
00:19:23,224 --> 00:19:26,466
So the chart below shows a team that ultimately wins,

301
00:19:26,466 --> 00:19:29,087
and it shows their probability of winning across time

302
00:19:29,087 --> 00:19:30,648
throughout the game.

303
00:19:30,648 --> 00:19:32,329
So even though the team is skilled,

304
00:19:32,329 --> 00:19:33,650
the initial probability is very low

305
00:19:33,650 --> 00:19:37,332
due to the sheer number of squads in the game.

306
00:19:37,332 --> 00:19:41,154
Notice that each time the team engages and does positively,

307
00:19:41,154 --> 00:19:42,695
their probability increases quickly.

308
00:19:42,695 --> 00:19:45,857
And if they engage and do poorly,

309
00:19:45,857 --> 00:19:47,278
their probability decreases.

310
00:19:48,237 --> 00:19:53,301
So until the team is eliminated, their probability should slowly climb over the course of the game,

311
00:19:53,301 --> 00:19:57,464
basically because they're surviving and not being eliminated.

312
00:19:57,464 --> 00:20:03,328
We build a model that also factors in the type of squad, so premades generally have a bump because

313
00:20:03,328 --> 00:20:07,871
they have better communication, although some games only match premades with premades, so it

314
00:20:07,871 --> 00:20:08,631
can be a moot point.

315
00:20:11,362 --> 00:20:14,063
Pre-game skill and in-game performance.

316
00:20:14,063 --> 00:20:17,764
The in-game performance idea usually is around momentum.

317
00:20:17,764 --> 00:20:20,265
So the concept of readiness to engage in battle royale

318
00:20:20,265 --> 00:20:21,146
is there.

319
00:20:21,146 --> 00:20:23,486
I think there's a more explicit one here.

320
00:20:23,486 --> 00:20:25,947
When you defeat or kill off other teams,

321
00:20:25,947 --> 00:20:27,388
you're often the ones to collect their loot.

322
00:20:27,388 --> 00:20:32,409
Also, we look at things like team health and equipment

323
00:20:32,409 --> 00:20:35,170
and distance from the circle.

324
00:20:35,170 --> 00:20:38,411
So let's go back to our non-revive example for a second.

325
00:20:39,308 --> 00:20:43,350
What would happen if the teammate decided not to revive his teammate?

326
00:20:43,350 --> 00:20:46,931
What was the impact to that win percentage?

327
00:20:46,931 --> 00:20:49,812
So we can see that depending on the game state,

328
00:20:49,812 --> 00:20:52,673
that not revive could have made a big difference.

329
00:20:52,673 --> 00:20:57,615
So maybe we would want to use that as a severity consideration as well.

330
00:21:09,601 --> 00:21:14,165
So once we create the models, the more important question

331
00:21:14,165 --> 00:21:15,886
is, how do we actually use them?

332
00:21:15,886 --> 00:21:17,127
And how do we interpret these outputs?

333
00:21:17,127 --> 00:21:21,331
While the models will have the benefit of greater consistency

334
00:21:21,331 --> 00:21:25,374
and lower costs as compared to any form of manual review

335
00:21:25,374 --> 00:21:28,237
or moderation, all ML models will

336
00:21:28,237 --> 00:21:30,879
suffer from some inaccuracy with both false positives

337
00:21:30,879 --> 00:21:32,580
and false negatives.

338
00:21:32,580 --> 00:21:34,562
It's important to consider the ramifications

339
00:21:34,562 --> 00:21:35,322
of applying each model.

340
00:21:36,068 --> 00:21:40,329
Thoughts positives are going to be more impactful in different situations.

341
00:21:40,329 --> 00:21:45,371
For instance, for many consumer recommendation systems, the damage of recommending the wrong

342
00:21:45,371 --> 00:21:46,291
movie is fairly trivial.

343
00:21:46,291 --> 00:21:50,412
You can just stop the movie, you can watch something else, right?

344
00:21:50,412 --> 00:21:54,673
What about some financial service applications that I've worked on?

345
00:21:54,673 --> 00:21:55,893
Well, what about credit card holds?

346
00:21:55,893 --> 00:22:01,594
If you charge your credit card outside of your location, they'll often get blocked,

347
00:22:01,594 --> 00:22:01,774
right?

348
00:22:01,774 --> 00:22:05,435
So you have to inform the credit card company that they're traveling.

349
00:22:06,247 --> 00:22:08,168
But the adverse impact is pretty small.

350
00:22:08,168 --> 00:22:11,148
So a false positive just means that, you know,

351
00:22:11,148 --> 00:22:13,549
someone has to send a text to validate

352
00:22:13,549 --> 00:22:14,529
or make a call to validate

353
00:22:14,529 --> 00:22:16,209
that they're actually using the card

354
00:22:16,209 --> 00:22:17,349
and then it gets reactivated.

355
00:22:17,349 --> 00:22:18,390
What about loans?

356
00:22:18,390 --> 00:22:22,010
You know, the amount matters a lot.

357
00:22:22,010 --> 00:22:24,111
What if it's something large like a mortgage?

358
00:22:24,111 --> 00:22:27,271
What if someone wrongly gets denied a mortgage

359
00:22:27,271 --> 00:22:29,692
and then is unable to purchase a house?

360
00:22:29,692 --> 00:22:32,672
You can see the ramifications of that

361
00:22:32,672 --> 00:22:35,053
on someone's quality of life.

362
00:22:36,788 --> 00:22:41,611
I've had the unique experience of working in a wide range of environments where models

363
00:22:41,611 --> 00:22:43,012
were applied with different stakes.

364
00:22:43,012 --> 00:22:49,076
The highest stakes were around threat identification, where a false positive could have led to a

365
00:22:49,076 --> 00:22:52,759
wrongful arrest or even possibly wrongfully taking someone's life.

366
00:22:52,759 --> 00:22:58,983
So in these situations, obviously, false positives have to be taken very seriously.

367
00:22:58,983 --> 00:23:05,448
And at best, models are just the components in form, a manual analysis decision.

368
00:23:06,417 --> 00:23:09,798
So in general, what does this mean? What should we do?

369
00:23:09,798 --> 00:23:14,699
Well, in theory, we always want to build the best algorithms or best models.

370
00:23:14,699 --> 00:23:18,800
In practice, there are things like development costs and ongoing maintenance costs.

371
00:23:18,800 --> 00:23:24,221
For gaming, there may be further adverse game performance impact to store more events, right?

372
00:23:24,221 --> 00:23:28,822
In general, we're more willing to take on these costs when the stakes are high.

373
00:23:28,822 --> 00:23:33,583
So, if there are...

374
00:23:34,804 --> 00:23:41,874
If there's greater value in accuracy, we want to be conservative and minimize these false positives.

375
00:23:41,874 --> 00:23:46,600
In these cases, we need to accept that we will have more false negatives because of this trade-off.

376
00:23:46,600 --> 00:23:51,286
So how does this apply to gaming specifically?

377
00:23:52,033 --> 00:23:56,136
I think we can be greedy when applying warnings or other interventions that have little adverse

378
00:23:56,136 --> 00:23:56,776
impact to players.

379
00:23:56,776 --> 00:24:00,679
They can even appear to be general warnings, non-targeted warnings.

380
00:24:00,679 --> 00:24:05,141
An example, during load times, a reminder to show mission statements and player grades

381
00:24:05,141 --> 00:24:07,023
have been found to be effective.

382
00:24:07,023 --> 00:24:11,365
We have to be more careful when applying penalties rather than warnings because of potential

383
00:24:11,365 --> 00:24:12,366
false positives.

384
00:24:12,972 --> 00:24:15,514
There are many ways to implement this.

385
00:24:15,514 --> 00:24:17,575
For example, we can apply access restrictions for

386
00:24:17,575 --> 00:24:20,557
different durations and different channels based on

387
00:24:20,557 --> 00:24:22,539
different severity levels listed here in

388
00:24:22,539 --> 00:24:25,481
these charts as illustrative examples.

389
00:24:25,481 --> 00:24:28,103
In general, higher severity again means that we should

390
00:24:28,103 --> 00:24:29,163
be more conservative when

391
00:24:29,163 --> 00:24:30,764
classifying events and players as bad.

392
00:24:30,764 --> 00:24:33,386
The most serious punishment in a game is

393
00:24:33,386 --> 00:24:36,288
generally to ban a player from all channels.

394
00:24:36,288 --> 00:24:38,750
We should note that a seasoned player who has spent

395
00:24:38,750 --> 00:24:41,772
a decent amount of money and time in a game,

396
00:24:42,545 --> 00:24:45,927
will be much more impacted by a ban than a relatively new account.

397
00:24:45,927 --> 00:24:48,809
There isn't a single solution for everyone.

398
00:24:48,809 --> 00:24:52,232
We should consider the tradeoffs by thinking carefully about each application

399
00:24:52,232 --> 00:24:56,916
and the type of players that would benefit and be adversely impacted by any proposed change.

400
00:24:56,916 --> 00:25:06,243
One partial solution that we considered is looking at reputation scores.

401
00:25:06,243 --> 00:25:11,206
So what if we're concerned with uncertainty of any single modeled event or report?

402
00:25:11,933 --> 00:25:17,237
Could we create a more complete view and look at players across time and across multiple

403
00:25:17,237 --> 00:25:17,337
games?

404
00:25:17,337 --> 00:25:22,901
So one solution is to create this holistic reputation score that would factor in inputs

405
00:25:22,901 --> 00:25:24,442
from multiple sources and events.

406
00:25:24,442 --> 00:25:30,046
This reputation score would be more complete and consistent since it considers different

407
00:25:30,046 --> 00:25:35,529
sources so it wouldn't suffer any biases from a single event and would have more of the

408
00:25:35,529 --> 00:25:37,591
advantages of large samples.

409
00:25:38,340 --> 00:25:40,461
you could factor in chat, audio, gameplay,

410
00:25:40,461 --> 00:25:42,903
and different types of group events together.

411
00:25:42,903 --> 00:25:47,207
While there still could be individual issues,

412
00:25:47,207 --> 00:25:51,230
such as faulty reports, again, the larger sample size

413
00:25:51,230 --> 00:25:54,393
helps the system be right more on average.

414
00:25:54,393 --> 00:25:58,256
And while we could create numerous subscores

415
00:25:58,256 --> 00:26:02,520
and components from this, at the top level,

416
00:26:02,520 --> 00:26:06,283
I think it's important to have a single number, which makes it

417
00:26:06,283 --> 00:26:07,604
easier to interpret and use.

418
00:26:08,371 --> 00:26:14,865
This is ideal for factoring different types of events weighed by many different severity levels.

419
00:26:14,865 --> 00:26:18,793
And that simplicity matters because it helps people use this in some way.

420
00:26:20,067 --> 00:26:26,231
Right. There's a reason why things like FICO score, while a lot of modelers believe they

421
00:26:26,231 --> 00:26:31,734
can build a better one, are so widely adopted because it's simple and interpretable.

422
00:26:31,734 --> 00:26:37,638
This isn't a solo approach. It's a complementary piece and should be used with other tools,

423
00:26:37,638 --> 00:26:42,401
such as stronger penalties that should be enforced on more extreme behaviors.

424
00:26:42,401 --> 00:26:47,004
But this gives a pretty good overall view of a player that can be used in things like matchmaking

425
00:26:47,004 --> 00:26:47,824
and aggregate.

426
00:26:48,425 --> 00:26:55,750
can be used to provide a view of the overall game health.

427
00:26:55,750 --> 00:27:02,015
So speaking of overall game health, here we look at a sample of more than 40 games that have been

428
00:27:02,015 --> 00:27:09,461
released for more than two years, so we can evaluate retention in a more apples-to-apples type way.

429
00:27:09,998 --> 00:27:12,899
Here we're trying to evaluate the impact of toxicity in general.

430
00:27:12,899 --> 00:27:17,740
There's a lot of studies that try to look at this, but it's impossible to find a definitive one.

431
00:27:17,740 --> 00:27:20,561
So we're continuously trying to refine ours.

432
00:27:20,561 --> 00:27:26,223
We use Reddit because, you know, while we have some game data, we certainly don't have it for like every game.

433
00:27:26,223 --> 00:27:31,804
And for the study, we use some custom detection algorithms on subreddit posts and comments.

434
00:27:31,804 --> 00:27:33,625
And we use this as a proxy for toxicity.

435
00:27:34,648 --> 00:27:39,512
And then we group games into three different buckets of toxicity to examine the player

436
00:27:39,512 --> 00:27:45,275
retention impact for each group over different one-year periods. So when we compare to high

437
00:27:45,275 --> 00:27:52,420
toxicity, which not surprisingly has the worst retention, we find that medium toxicity games

438
00:27:52,420 --> 00:27:58,904
have about 10% higher retention and low toxicity games have more than 16% higher retention

439
00:27:58,904 --> 00:28:00,946
than comparable high toxicity games.

440
00:28:01,737 --> 00:28:03,998
This is significant when we consider the number of players

441
00:28:03,998 --> 00:28:06,419
for some of these games and the revenue impact

442
00:28:06,419 --> 00:28:09,420
of even a few percentage points can have,

443
00:28:09,420 --> 00:28:11,501
given games of this scale.

444
00:28:11,501 --> 00:28:13,522
This impact can further be amplified

445
00:28:13,522 --> 00:28:15,122
when we think about it across time,

446
00:28:15,122 --> 00:28:18,263
as retention rates can be compounded,

447
00:28:18,263 --> 00:28:20,224
as some of these issues with retention

448
00:28:20,224 --> 00:28:25,066
aren't addressed by game teams.

449
00:28:25,066 --> 00:28:26,846
And finally, just to recap.

450
00:28:27,346 --> 00:28:31,087
Given the proliferation and richness of data available in games,

451
00:28:31,087 --> 00:28:35,369
and the vast number of reports that the popular games need to deal with,

452
00:28:35,369 --> 00:28:39,670
it makes sense to automate event detection.

453
00:28:39,670 --> 00:28:42,591
Teams should also account for contextual factors where possible,

454
00:28:42,591 --> 00:28:46,552
and we showed some illustrative examples of things that we look for.

455
00:28:46,552 --> 00:28:48,693
And obviously, we're just getting started as well.

456
00:28:48,693 --> 00:28:52,754
We recognize that there's a lot more that we can do here.

457
00:28:52,754 --> 00:28:54,415
And finally, companies should...

458
00:28:54,843 --> 00:29:01,649
consider the potential penalties and tie them to the models that they are using. So they should

459
00:29:01,649 --> 00:29:08,835
consider the penalties that they plan to impose and optimize models to best support these use

460
00:29:08,835 --> 00:29:13,859
cases. If you stuck with me until then, again, thank you for your time.

