1
00:00:05,898 --> 00:00:07,561
Thank you, everyone.

2
00:00:07,561 --> 00:00:09,786
So as he said, my name's Evan Losey.

3
00:00:09,786 --> 00:00:12,953
I'm currently a lead game designer at Scopely.

4
00:00:12,953 --> 00:00:15,438
And this is It's About Time, system design

5
00:00:15,438 --> 00:00:16,480
for a mobile free-to-play.

6
00:00:17,368 --> 00:00:19,610
As a bit of additional background about me,

7
00:00:19,610 --> 00:00:22,191
as he said, I've been working in system design for years.

8
00:00:22,191 --> 00:00:24,312
But when I first started in mobile,

9
00:00:24,312 --> 00:00:27,493
I was designing features and content for TapZoo.

10
00:00:27,493 --> 00:00:31,415
So TapZoo was a city builder game where you build, well,

11
00:00:31,415 --> 00:00:31,615
a zoo.

12
00:00:31,615 --> 00:00:35,858
And after a while, we needed to keep expanding the economy

13
00:00:35,858 --> 00:00:37,138
and tuning of the game.

14
00:00:37,138 --> 00:00:39,839
So we needed someone to branch out into system design.

15
00:00:40,460 --> 00:00:45,142
My first foray into systems design was actually more of a player than as a designer.

16
00:00:45,142 --> 00:00:48,283
I had been building models for my death knight in World of Warcraft,

17
00:00:48,283 --> 00:00:51,985
trying to figure out the optimal rotations and stats and all that,

18
00:00:51,985 --> 00:00:55,586
which is about as good of a primer as I was able to get.

19
00:00:55,586 --> 00:01:01,188
See, that's when I realized there are a lot of resources on content and features for designers out there.

20
00:01:01,188 --> 00:01:04,090
There was not a whole lot on getting started with systems.

21
00:01:05,543 --> 00:01:09,385
So through a lot of research and iteration and trial and error,

22
00:01:09,385 --> 00:01:11,726
I've got a much better handle on it now.

23
00:01:11,726 --> 00:01:15,528
Still, I remember that experience quite well.

24
00:01:15,528 --> 00:01:19,409
So what I want to do is provide a solid framework for designers

25
00:01:19,409 --> 00:01:21,590
that are just starting out to jumpstart

26
00:01:21,590 --> 00:01:24,591
the process of making economies and game tuning,

27
00:01:24,591 --> 00:01:27,293
as well as hopefully provide a new angle for some

28
00:01:27,293 --> 00:01:29,413
of the more advanced designers in the audience.

29
00:01:30,623 --> 00:01:35,188
So today, I'm going to start with a brief overview of what system design really means

30
00:01:35,188 --> 00:01:39,833
in this space and the context and how to go about balancing these systems.

31
00:01:39,833 --> 00:01:44,337
After that, we'll talk about how to apply this both on economies as well as tuned features.

32
00:01:44,337 --> 00:01:49,062
I'll be using battle systems as an example for those features, but battle can be a pretty

33
00:01:49,062 --> 00:01:51,184
abstract concept as you'll see in a bit.

34
00:01:52,260 --> 00:01:55,904
So what is systems design?

35
00:01:55,904 --> 00:01:59,028
Systems design is essentially how all the rules in the game

36
00:01:59,028 --> 00:01:59,608
interact.

37
00:01:59,608 --> 00:02:03,573
Every number in the game should be chosen for a reason,

38
00:02:03,573 --> 00:02:05,655
even if that reason is aesthetic or arbitrary.

39
00:02:05,655 --> 00:02:08,839
And the way these numbers interact

40
00:02:08,839 --> 00:02:11,302
is where the player experience really lives.

41
00:02:12,307 --> 00:02:15,692
It's not enough to have a laundry list of features in the game.

42
00:02:15,692 --> 00:02:19,557
Your entire game can live or die on seemingly tiny decisions.

43
00:02:19,557 --> 00:02:24,423
Enemies that take one more hit or needing to grind a dungeon one more time,

44
00:02:24,423 --> 00:02:28,348
that can be the moment when players quit your game and don't come back.

45
00:02:28,949 --> 00:02:30,431
The opposite is also true.

46
00:02:30,431 --> 00:02:32,433
If you make things just a little bit too easy,

47
00:02:32,433 --> 00:02:36,216
players get bored and leave before the next big moment happens.

48
00:02:36,216 --> 00:02:38,719
You want players in that perfect position of balance,

49
00:02:38,719 --> 00:02:41,301
where they're winning by the skin of their teeth

50
00:02:41,301 --> 00:02:44,304
and they're always just about to progress a little bit further.

51
00:02:45,164 --> 00:02:47,607
The question then is, where do you start?

52
00:02:47,607 --> 00:02:51,651
How do you put that first number in the game?

53
00:02:51,651 --> 00:02:54,414
Well, free-to-play games can seem like a whole lot

54
00:02:54,414 --> 00:02:57,216
of arbitrary numbers, and sometimes they are.

55
00:02:57,216 --> 00:02:59,299
And that's the first secret.

56
00:02:59,299 --> 00:03:00,480
It's actually perfectly OK.

57
00:03:01,752 --> 00:03:06,436
Every system starts somewhere and you can't tune to something that doesn't exist.

58
00:03:06,436 --> 00:03:10,339
So we're going to pick the most important and visible numbers to players and try to

59
00:03:10,339 --> 00:03:12,880
make them look and feel good.

60
00:03:12,880 --> 00:03:17,524
Put yourself in the mind of a player in your game and ask yourself how something feels.

61
00:03:17,524 --> 00:03:22,848
You upgrade your sword and you get a plus .025 attack, which rounds down to zero in

62
00:03:22,848 --> 00:03:23,568
your UI.

63
00:03:23,568 --> 00:03:25,590
That's not the best experience.

64
00:03:26,330 --> 00:03:28,973
So, some things are a little bit harder than that, though.

65
00:03:28,973 --> 00:03:33,156
A lot of design questions come from even those arbitrary decisions.

66
00:03:33,156 --> 00:03:33,717
Take scale.

67
00:03:33,717 --> 00:03:37,660
How valuable should the max level of something in your game

68
00:03:37,660 --> 00:03:39,662
be compared to the first level?

69
00:03:39,662 --> 00:03:41,123
If this is a competitive game,

70
00:03:41,123 --> 00:03:46,588
all the hard work might put you at a total of 150% of what the first level is.

71
00:03:46,588 --> 00:03:51,192
But in an RPG, where you expect to easily beat anyone five levels under you,

72
00:03:51,192 --> 00:03:54,554
you might get to a thousand X for your final power from where something begins.

73
00:03:55,398 --> 00:03:58,080
There are no hard and fast answers.

74
00:03:58,080 --> 00:04:00,322
It depends on the game you're making.

75
00:04:00,322 --> 00:04:02,865
Either way, big, even, or round numbers

76
00:04:02,865 --> 00:04:05,127
are kind of easiest for players to understand

77
00:04:05,127 --> 00:04:07,589
and conceptualize, so we're gonna stick with them

78
00:04:07,589 --> 00:04:09,291
wherever we can.

79
00:04:09,291 --> 00:04:11,633
So how might a model working this way look

80
00:04:11,633 --> 00:04:13,014
when it's complete?

81
00:04:13,014 --> 00:04:14,315
Don't try to copy this down, by the way.

82
00:04:15,007 --> 00:04:19,009
This is an example of a town hall in a city builder.

83
00:04:19,009 --> 00:04:21,310
It has costs at each level and capacity,

84
00:04:21,310 --> 00:04:24,091
and each level unlocks subsequent levels

85
00:04:24,091 --> 00:04:26,612
of production buildings that have their own costs

86
00:04:26,612 --> 00:04:28,073
and resource rates.

87
00:04:28,073 --> 00:04:29,414
If you look at the finished product,

88
00:04:29,414 --> 00:04:31,635
you can reverse engineer some things,

89
00:04:31,635 --> 00:04:33,976
but the truth is, systems like this

90
00:04:33,976 --> 00:04:36,577
are balanced around a number that doesn't even appear

91
00:04:36,577 --> 00:04:37,618
anywhere on this sheet.

92
00:04:38,198 --> 00:04:42,563
time. You can take something like a steadily increasing resource production rate, which

93
00:04:42,563 --> 00:04:47,188
is the rightmost column, and you can derive all of the other costs and capacities from

94
00:04:47,188 --> 00:04:48,730
there and how long it takes.

95
00:04:49,822 --> 00:04:51,363
We have other things on here too.

96
00:04:51,363 --> 00:04:54,385
Upgrade time is actually unrelated to the other numbers.

97
00:04:54,385 --> 00:04:56,886
This might still be tied to aspects of your game,

98
00:04:56,886 --> 00:04:58,907
such as how long you want it to take

99
00:04:58,907 --> 00:05:01,948
to upgrade your entire base from one level to the next,

100
00:05:01,948 --> 00:05:03,269
but it's an unconnected loop

101
00:05:03,269 --> 00:05:04,909
from your production and your building costs.

102
00:05:04,909 --> 00:05:07,471
Each sub-loop in your game may need

103
00:05:07,471 --> 00:05:10,812
its own starting system of time and values.

104
00:05:10,812 --> 00:05:12,833
So, where do you start?

105
00:05:12,833 --> 00:05:16,855
The one resource that all players possess, time.

106
00:05:17,774 --> 00:05:21,178
minutes spent, rounds of battles, days to acquire.

107
00:05:21,178 --> 00:05:24,021
Even things like number of battles and drop rates

108
00:05:24,021 --> 00:05:25,863
all come back to time.

109
00:05:25,863 --> 00:05:28,446
This can be energy limits, when loot is reset,

110
00:05:28,446 --> 00:05:30,548
or even the physical time that it takes

111
00:05:30,548 --> 00:05:32,230
to clear a stage in a game.

112
00:05:32,230 --> 00:05:35,333
So we have to make sure we respect that resource.

113
00:05:35,333 --> 00:05:37,195
Balance your game around time.

114
00:05:38,256 --> 00:05:41,219
Just like difficulty, pacing is key.

115
00:05:41,219 --> 00:05:44,102
It will take playtesting to get this right.

116
00:05:44,102 --> 00:05:46,785
So remember, in all of these tools we're talking about,

117
00:05:46,785 --> 00:05:50,649
they're just the first step, and iteration is very important.

118
00:05:50,649 --> 00:05:55,954
So since this is free to play, we need to talk about monetization somewhere, right?

119
00:05:55,954 --> 00:05:59,358
Well, the best monetization methods essentially sell time.

120
00:06:00,039 --> 00:06:05,442
You get a pack of cards every day from daily quests and you can purchase more of them to have it happen more frequently.

121
00:06:05,442 --> 00:06:10,344
I always advocate for not locking things to only spenders.

122
00:06:10,344 --> 00:06:16,067
You can actually be incredibly straightforward with players of your games with how much value they're getting for a dollar.

123
00:06:16,067 --> 00:06:19,709
You get this every day, you can buy it, and you're buying a day's worth of work.

124
00:06:19,709 --> 00:06:25,513
People really will respond to just explicitly communicating these things to them.

125
00:06:26,627 --> 00:06:29,009
So, that's the high-level approach.

126
00:06:29,009 --> 00:06:31,451
Let's get into some of the specifics.

127
00:06:31,451 --> 00:06:34,674
First, we need our starting point.

128
00:06:34,674 --> 00:06:37,256
I've tried different ones from time to time,

129
00:06:37,256 --> 00:06:40,479
but I keep coming back to player level.

130
00:06:40,479 --> 00:06:43,262
Level is extremely familiar and effective

131
00:06:43,262 --> 00:06:45,483
as a marker for where players are in a game.

132
00:06:45,483 --> 00:06:47,485
They'll tell each other, oh, I'm level eight,

133
00:06:47,485 --> 00:06:50,147
you're level 12, they sort of know how that relates.

134
00:06:50,768 --> 00:06:54,832
We'll need a few more number scales for each loop in the game,

135
00:06:54,832 --> 00:06:57,875
but this is a great one to start with every time.

136
00:06:57,875 --> 00:07:03,201
It also advances one at a time, which makes for a prettier x-axis.

137
00:07:03,201 --> 00:07:05,463
Next, think about a time scale for this.

138
00:07:05,866 --> 00:07:08,288
This is dependent on the kind of game you're making

139
00:07:08,288 --> 00:07:10,050
and some other factors, but in general,

140
00:07:10,050 --> 00:07:14,054
think how long should each piece of your game last?

141
00:07:14,054 --> 00:07:17,297
An RPG might take a year to get to max level,

142
00:07:17,297 --> 00:07:19,680
and you might stay there for another couple years

143
00:07:19,680 --> 00:07:21,882
engaged in endgame activities.

144
00:07:21,882 --> 00:07:24,365
An arcade game or an incremental with a prestige

145
00:07:24,365 --> 00:07:26,787
might take only a day or two to get to the final level.

146
00:07:27,914 --> 00:07:30,276
it's okay to make some of these decisions

147
00:07:30,276 --> 00:07:33,599
based on what it feels like or other arbitrary things.

148
00:07:33,599 --> 00:07:35,241
Everything starts somewhere.

149
00:07:35,241 --> 00:07:37,283
So let's start with this first one.

150
00:07:37,283 --> 00:07:39,304
And for those curious, I will have a link

151
00:07:39,304 --> 00:07:41,606
to all the spreadsheets I'm showing at the end.

152
00:07:41,606 --> 00:07:43,448
So again, don't try to write down.

153
00:07:44,174 --> 00:07:46,596
So this is a table of player level, 1 to 10,

154
00:07:46,596 --> 00:07:49,738
and about how long I want it to take to reach each level.

155
00:07:49,738 --> 00:07:52,119
The convention I'm using here is that I

156
00:07:52,119 --> 00:07:55,462
enter things in the white cells and calculate over in the gray.

157
00:07:55,462 --> 00:07:57,823
But this is probably a pretty straightforward one.

158
00:07:57,823 --> 00:07:58,924
It's addition.

159
00:07:58,924 --> 00:08:01,005
So where do we go to after this?

160
00:08:02,363 --> 00:08:07,488
We want to actually divvy up the progression by player level.

161
00:08:07,488 --> 00:08:10,611
I, as a designer, decide how strong you should

162
00:08:10,611 --> 00:08:12,794
be at each point of the game.

163
00:08:12,794 --> 00:08:15,957
It's worth noting that this is only an average, right?

164
00:08:15,957 --> 00:08:19,300
Players experience the highs and lows of drop chances and luck,

165
00:08:19,300 --> 00:08:22,403
but it's perfectly fine to do your high level balance purely

166
00:08:22,403 --> 00:08:23,444
on expected value.

167
00:08:23,444 --> 00:08:25,866
What is the average of what players learn as they

168
00:08:25,866 --> 00:08:26,687
go through these things?

169
00:08:27,127 --> 00:08:32,589
Still, the more specific you can make each level of power in your decisions, the easier

170
00:08:32,589 --> 00:08:33,749
it's going to be later.

171
00:08:33,749 --> 00:08:39,271
The key principle here is that there was a cost associated with acquiring content.

172
00:08:39,271 --> 00:08:45,433
It could be the currency needed to buy packs or the resources needed to upgrade your town

173
00:08:45,433 --> 00:08:45,573
hall.

174
00:08:45,573 --> 00:08:49,174
Then, how do players get these resources?

175
00:08:49,174 --> 00:08:50,654
They take actions within the game.

176
00:08:51,475 --> 00:08:54,497
For the card game with packs, this might be games one.

177
00:08:54,497 --> 00:08:57,580
For a city builder, it's mines harvested every day.

178
00:08:57,580 --> 00:08:59,941
For our purposes, what we need to know

179
00:08:59,941 --> 00:09:02,864
is just how many of each action

180
00:09:02,864 --> 00:09:04,505
is the player going to do in a day.

181
00:09:04,505 --> 00:09:07,828
Our starting point will be any actual limitations,

182
00:09:07,828 --> 00:09:10,249
such as an energy mechanic that tells the number

183
00:09:10,249 --> 00:09:11,711
of sessions you can actually engage in.

184
00:09:12,331 --> 00:09:14,012
but there might also be behavioral things,

185
00:09:14,012 --> 00:09:16,494
just how often do players actually come in and play around.

186
00:09:16,494 --> 00:09:20,677
You'll have to estimate those, but as you get real data from play tests,

187
00:09:20,677 --> 00:09:23,719
you can refine those, put them back into the model, and keep going,

188
00:09:23,719 --> 00:09:25,660
and you'll get better and better numbers.

189
00:09:25,660 --> 00:09:29,243
So now that we have this idea, let's go back to our model.

190
00:09:29,977 --> 00:09:33,679
Here, I'm building out the example to cover a simple city builder.

191
00:09:33,679 --> 00:09:37,621
So I'm specifying how many buildings I want the player to own.

192
00:09:37,621 --> 00:09:40,923
I'm also assuming that each one can be leveled only as high as the player

193
00:09:40,923 --> 00:09:41,303
level.

194
00:09:41,303 --> 00:09:44,765
This is a pretty normal limitation to town halls and games like this.

195
00:09:45,671 --> 00:09:49,513
My upgrade costs are actually formulaic, but again, arbitrary.

196
00:09:49,513 --> 00:09:53,795
Each one is just 250% the previous rounded to the nearest five.

197
00:09:53,795 --> 00:09:56,116
And I'd probably keep rounding by bigger and bigger numbers

198
00:09:56,116 --> 00:09:58,758
just because I want it to look pretty in the game.

199
00:09:58,758 --> 00:10:01,539
But this is where your calculations really start.

200
00:10:01,539 --> 00:10:05,641
I know how much I want the buildings to cost at each level

201
00:10:05,641 --> 00:10:07,342
and how many I want the player to have.

202
00:10:07,822 --> 00:10:09,864
and I know how long it's gonna take me to get there.

203
00:10:09,864 --> 00:10:13,426
That means the cost per level is just number of buildings

204
00:10:13,426 --> 00:10:14,626
times the cost of each one.

205
00:10:14,626 --> 00:10:16,828
That's how much it's gonna cost the player

206
00:10:16,828 --> 00:10:21,250
to get to the level of power I want at that player level.

207
00:10:21,250 --> 00:10:23,392
And if each building was costing a different amount,

208
00:10:23,392 --> 00:10:25,032
you could have a different look up in there,

209
00:10:25,032 --> 00:10:26,834
but sort of keeping things simple

210
00:10:26,834 --> 00:10:28,374
for the explanation on the screen.

211
00:10:28,374 --> 00:10:31,456
But still, we're not quite done yet.

212
00:10:31,456 --> 00:10:35,339
Although, here's the biggest secret of system design.

213
00:10:36,247 --> 00:10:38,328
That's actually all you need.

214
00:10:38,328 --> 00:10:41,069
You can build a complete economy just off of figuring out

215
00:10:41,069 --> 00:10:42,910
how much time and where you want players

216
00:10:42,910 --> 00:10:44,671
and some of those arbitrary costs.

217
00:10:44,671 --> 00:10:46,492
Try not to let any of your product managers

218
00:10:46,492 --> 00:10:48,633
know it's actually that easy.

219
00:10:48,633 --> 00:10:51,754
But once you know how much you need per level

220
00:10:51,754 --> 00:10:54,476
and the number of days, you know how much players

221
00:10:54,476 --> 00:10:56,137
need to gain every day.

222
00:10:56,137 --> 00:10:58,698
When you know actions per day, you

223
00:10:58,698 --> 00:11:00,879
know how much each action should pay out.

224
00:11:01,788 --> 00:11:04,071
You can give your rewards a drop rate.

225
00:11:04,071 --> 00:11:05,894
If you want them to have a chance of dropping

226
00:11:05,894 --> 00:11:07,916
instead of always being awarded every action,

227
00:11:07,916 --> 00:11:10,060
this gives you a true payout per action.

228
00:11:10,060 --> 00:11:12,623
You may not want to use this with a currency like coins,

229
00:11:12,623 --> 00:11:14,506
but if you're doing, say, rare materials

230
00:11:14,506 --> 00:11:16,208
to upgrade a character, this is how you get to

231
00:11:16,208 --> 00:11:18,451
how much should actually drop from a single instance.

232
00:11:19,232 --> 00:11:23,035
Finally, add some variance, say 5 or 10% up or down,

233
00:11:23,035 --> 00:11:24,717
so the game is a little more exciting.

234
00:11:24,717 --> 00:11:27,879
And suddenly, you actually have a game.

235
00:11:27,879 --> 00:11:30,241
You know, that's how the experience actually

236
00:11:30,241 --> 00:11:31,302
plays out to players.

237
00:11:31,302 --> 00:11:32,964
So let's go back and see how this

238
00:11:32,964 --> 00:11:34,085
looks in the expanded model.

239
00:11:35,285 --> 00:11:37,766
The one new column is the result of those calculations.

240
00:11:37,766 --> 00:11:41,208
It's the amount we need per level divided by total harvests

241
00:11:41,208 --> 00:11:43,089
per building per day and the total number of buildings.

242
00:11:43,089 --> 00:11:45,690
This is the simpler version with no variance

243
00:11:45,690 --> 00:11:47,271
at all in drop amounts.

244
00:11:47,271 --> 00:11:50,272
But still, a player who plays four sessions a day,

245
00:11:50,272 --> 00:11:52,913
which is a pretty good player for most mobile games,

246
00:11:52,913 --> 00:11:54,734
is going to earn enough to get to the level

247
00:11:54,734 --> 00:11:56,335
that I want them at each day.

248
00:11:56,995 --> 00:12:04,623
This is maybe a simple example, but you can actually follow the same process for more resources and build more and more complex loops on top of this.

249
00:12:04,623 --> 00:12:10,589
The trick is to keep coming back to how long it should take a player to progress.

250
00:12:10,589 --> 00:12:18,297
If a player needs resource X from action A and resource Y from action B, you can track the amounts of each one needed and be done per day.

251
00:12:19,358 --> 00:12:23,060
And if you want both actions to drop the same resource,

252
00:12:23,060 --> 00:12:24,461
you can have variables that control

253
00:12:24,461 --> 00:12:26,342
how much total one comes from each point.

254
00:12:26,342 --> 00:12:29,423
The math is really gonna work itself out either way,

255
00:12:29,423 --> 00:12:30,704
and you can sort of customize

256
00:12:30,704 --> 00:12:32,045
what feels important to players.

257
00:12:32,045 --> 00:12:36,607
So when developing those more complex systems,

258
00:12:36,607 --> 00:12:39,628
there's a lot of considerations to keep in mind,

259
00:12:39,628 --> 00:12:41,750
and here's just a few of them.

260
00:12:41,750 --> 00:12:43,951
How fast can you make content?

261
00:12:44,827 --> 00:12:48,850
If it takes a month to make a character for your game, you can't have players earn them

262
00:12:48,850 --> 00:12:51,072
every week or they'll outpace you.

263
00:12:51,072 --> 00:12:56,336
It should always take longer to earn or earn an upgrade to viability than it does to create

264
00:12:56,336 --> 00:12:56,937
it.

265
00:12:56,937 --> 00:13:00,640
Players shouldn't actually be able to get everything in your game.

266
00:13:00,640 --> 00:13:01,641
Choice is fun.

267
00:13:03,041 --> 00:13:08,382
Next, how fast can players respond to events and live operations and things like that in

268
00:13:08,382 --> 00:13:09,162
your game?

269
00:13:09,162 --> 00:13:13,743
If you expect to add a new character on Monday and have people use it on Friday, it can't

270
00:13:13,743 --> 00:13:16,484
take three weeks to upgrade it to viability.

271
00:13:16,484 --> 00:13:21,465
Likewise, if you want to have a resource that only drops from dungeons that appear on Tuesday,

272
00:13:21,465 --> 00:13:25,565
you need it to take at least a week to maximize the character or players are going to feel

273
00:13:25,565 --> 00:13:27,546
a shortage in a way that they can't address.

274
00:13:28,347 --> 00:13:31,963
You always want to be asking yourself, does this make sense?

275
00:13:31,963 --> 00:13:32,948
Gut check your work.

276
00:13:33,747 --> 00:13:36,088
You know, you hit level 10 after a week,

277
00:13:36,088 --> 00:13:37,269
you have a dozen buildings,

278
00:13:37,269 --> 00:13:39,590
you buy the next one every day or two,

279
00:13:39,590 --> 00:13:41,251
kind of feels like it could work.

280
00:13:41,251 --> 00:13:43,212
But if you hit, you know, that point after a week

281
00:13:43,212 --> 00:13:45,733
and suddenly it takes another week to get to the next level,

282
00:13:45,733 --> 00:13:47,114
it seems wrong.

283
00:13:47,114 --> 00:13:50,736
And if something seems wrong on paper in your spreadsheet,

284
00:13:50,736 --> 00:13:53,917
it's probably gonna feel worse in your actual game.

285
00:13:53,917 --> 00:13:56,298
You can solve all of your problems in this design step,

286
00:13:56,298 --> 00:13:58,139
but the more you do, the better.

287
00:13:58,139 --> 00:14:00,200
It's always quicker to try to solve them here.

288
00:14:01,678 --> 00:14:04,900
So that example is for a pretty simple city builder,

289
00:14:04,900 --> 00:14:06,861
but it works for any type of game.

290
00:14:06,861 --> 00:14:10,343
Just keep in mind that you're balancing around player time

291
00:14:10,343 --> 00:14:11,724
and actions per day.

292
00:14:11,724 --> 00:14:13,945
The more restrictive your game is

293
00:14:13,945 --> 00:14:16,086
in actions that earn rewards,

294
00:14:16,086 --> 00:14:18,728
the easier it is to predict how many actions a player does.

295
00:14:18,728 --> 00:14:21,189
So a game with energy where you know the refresh rates,

296
00:14:21,189 --> 00:14:22,250
you can do that,

297
00:14:22,250 --> 00:14:24,251
but you don't have to actually limit play

298
00:14:24,251 --> 00:14:26,072
to get to predictability.

299
00:14:26,072 --> 00:14:28,633
Games might have chess slots or daily quests

300
00:14:28,633 --> 00:14:29,914
that give you most of your rewards

301
00:14:29,914 --> 00:14:31,475
and you can get a really good sense of it.

302
00:14:33,181 --> 00:14:36,709
So here's an example of inputs for an RPG battler.

303
00:14:36,709 --> 00:14:39,355
At each level, the player has a total number of characters

304
00:14:39,355 --> 00:14:40,938
that have a level and a rank.

305
00:14:41,517 --> 00:14:44,078
But most players don't have all their characters upgraded

306
00:14:44,078 --> 00:14:46,379
to the same power, so we've broken it down

307
00:14:46,379 --> 00:14:47,779
to A team and B team.

308
00:14:47,779 --> 00:14:49,840
But I don't want to actually hand-tune everything

309
00:14:49,840 --> 00:14:53,181
in the game, so B team is just a percentage of the A team's

310
00:14:53,181 --> 00:14:54,062
power.

311
00:14:54,062 --> 00:14:57,403
And you can see how these more complex systems can all

312
00:14:57,403 --> 00:14:59,324
come back to the same thing.

313
00:14:59,324 --> 00:15:01,424
I can figure out how many character pieces they

314
00:15:01,424 --> 00:15:04,045
need to unlock new characters, how much gold they need

315
00:15:04,045 --> 00:15:06,566
to spend, how many materials they need, and so on.

316
00:15:07,427 --> 00:15:11,372
One of the tricks as you get more complicated is that, like the character shards in this

317
00:15:11,372 --> 00:15:13,835
sheet, it's not actually a smooth line.

318
00:15:13,835 --> 00:15:18,741
Your gold and coins and soft currencies may be, but materials are going to end up a little

319
00:15:18,741 --> 00:15:19,742
more staggered.

320
00:15:19,742 --> 00:15:22,245
Smooth them out before you put them in the actual game.

321
00:15:22,245 --> 00:15:23,006
It's important.

322
00:15:23,607 --> 00:15:28,830
that players never gain a level or upgrade a building and get a worse payout than before.

323
00:15:28,830 --> 00:15:31,492
And that's true whether the loss is actual or perceived.

324
00:15:31,492 --> 00:15:35,195
Even if something technically pays out better but a number goes down, players are going

325
00:15:35,195 --> 00:15:38,657
to feel like it was a bad idea to upgrade, which is never a good spot.

326
00:15:39,451 --> 00:15:42,932
A model for daily quests in a card game would work the same way.

327
00:15:42,932 --> 00:15:47,014
How many packs do you want players to earn a day, or days per pack?

328
00:15:47,014 --> 00:15:48,515
How many quests do you have per day?

329
00:15:48,515 --> 00:15:50,115
That's an average payout.

330
00:15:50,115 --> 00:15:54,077
You can get different tiers of difficulty by saying how often you want each one to show

331
00:15:54,077 --> 00:15:56,538
up and sort of the relative value between them.

332
00:15:56,538 --> 00:16:01,300
The important part is to just sort of keep the average value and use that to predict

333
00:16:01,300 --> 00:16:03,401
player resources.

334
00:16:03,401 --> 00:16:07,263
So once you have your system, what you do with it, you iterate.

335
00:16:08,150 --> 00:16:10,992
It takes time to get to a system that's balanced,

336
00:16:10,992 --> 00:16:13,554
and the problem is when you're actually at perfect balance,

337
00:16:13,554 --> 00:16:15,316
it can be kind of boring.

338
00:16:15,316 --> 00:16:18,438
You want to try intentionally increasing or decreasing

339
00:16:18,438 --> 00:16:21,580
payouts of resources at certain levels or points in your game,

340
00:16:21,580 --> 00:16:23,602
so the player's always a little short of something

341
00:16:23,602 --> 00:16:25,023
and wants to work to get it.

342
00:16:25,743 --> 00:16:30,925
This is especially effective if you can tie it in with a new feature that unlocks as the player levels up.

343
00:16:30,925 --> 00:16:36,647
If your player needs a new resource at level 8, and there's a new game mode at level 8 that pays out that resource,

344
00:16:36,647 --> 00:16:40,988
you can get people consistently engaged with progressing in your game and opening up new things.

345
00:16:40,988 --> 00:16:49,010
Also, remember that designers love complexity with fiddly systems and dozens of resources, but most players don't.

346
00:16:50,361 --> 00:16:53,244
Everything should be understandable for the player.

347
00:16:53,244 --> 00:16:56,088
Few resources or things that belong to resource groups

348
00:16:56,088 --> 00:16:58,671
that drop from the same locations and are understandable

349
00:16:58,671 --> 00:17:00,273
is really what helps someone latch on

350
00:17:00,273 --> 00:17:01,915
and figure out what's going on in your game.

351
00:17:01,915 --> 00:17:05,319
A good economy is one that gets out of the way

352
00:17:05,319 --> 00:17:07,922
of the player a bit and sort of just exists.

353
00:17:07,922 --> 00:17:09,604
You know, if you've done your job right,

354
00:17:09,604 --> 00:17:11,086
it's a little bit like you were never there at all.

355
00:17:12,366 --> 00:17:14,867
So these principles can apply to things

356
00:17:14,867 --> 00:17:16,367
beyond traditional economies.

357
00:17:16,367 --> 00:17:18,407
I'm gonna use battle as the example today,

358
00:17:18,407 --> 00:17:21,748
but battle is really just any measured competition

359
00:17:21,748 --> 00:17:26,149
between two players or between a player and a defined force.

360
00:17:26,149 --> 00:17:28,690
So a fleet of ships that are attacking one another

361
00:17:28,690 --> 00:17:29,450
is a battle.

362
00:17:29,450 --> 00:17:31,390
You can have lots of stats for each unit,

363
00:17:31,390 --> 00:17:33,491
range, speed, health, so on.

364
00:17:33,491 --> 00:17:37,152
But so is a fashion showdown between who has the best outfit

365
00:17:37,152 --> 00:17:39,252
where you care about your popularity and style.

366
00:17:39,252 --> 00:17:42,093
And yes, I did work on both of these games.

367
00:17:43,014 --> 00:17:47,402
So, any system where your stats and points matter is a battle if you look at it in that

368
00:17:47,402 --> 00:17:47,943
respect.

369
00:17:47,943 --> 00:17:51,289
And so don't be afraid to apply these principles to pretty much anything.

370
00:17:52,475 --> 00:17:57,598
So any of these complex interactions can be configured through the same general process

371
00:17:57,598 --> 00:17:58,618
as an economy.

372
00:17:58,618 --> 00:18:03,521
You start from a defined, if arbitrary, data points, and you fill out just enough of them

373
00:18:03,521 --> 00:18:05,902
to be able to determine the rest of the numbers.

374
00:18:05,902 --> 00:18:08,744
And then you calculate the rest of the numbers.

375
00:18:08,744 --> 00:18:13,807
You can balance things in the game, whether it's units, weapons, abilities, cards, whatever,

376
00:18:13,807 --> 00:18:14,667
around each other.

377
00:18:15,488 --> 00:18:22,235
Consider how long the object or item is relevant in the interaction, which is your effective combat time.

378
00:18:22,235 --> 00:18:28,222
This could be rounds or real time, but it's all about considering the relevant life of an object.

379
00:18:28,222 --> 00:18:34,368
Depending on the game and process, you can use these to either balance the attributes and items themselves, or the costs of them.

380
00:18:35,340 --> 00:18:38,602
So let's start with a more traditional example.

381
00:18:38,602 --> 00:18:40,122
Two units in an RTS.

382
00:18:40,122 --> 00:18:43,744
We've got one melee unit that can only attack

383
00:18:43,744 --> 00:18:45,665
right next to it, and one ranged unit.

384
00:18:45,665 --> 00:18:49,086
So the melee unit has to be stronger

385
00:18:49,086 --> 00:18:50,827
than the ranged one, right?

386
00:18:50,827 --> 00:18:50,947
Why?

387
00:18:50,947 --> 00:18:54,168
Effective time in battle.

388
00:18:54,168 --> 00:18:57,629
The melee unit has to walk over to the ranged one

389
00:18:57,629 --> 00:18:59,270
and it's getting shot at the whole time.

390
00:19:00,055 --> 00:19:03,836
So balanced units are balanced with respect to time in this regard.

391
00:19:03,836 --> 00:19:07,477
In an RTS, this is mitigated by speed and range.

392
00:19:07,477 --> 00:19:12,218
In a turn-based RPG, we're going to consider effective health and hits to kill

393
00:19:12,218 --> 00:19:14,379
to determine their time in battle.

394
00:19:14,379 --> 00:19:18,140
And for the record, perfect balance in this context means that the units fight to a draw.

395
00:19:18,140 --> 00:19:23,702
This is again a starting point, but two units should basically meet and

396
00:19:23,702 --> 00:19:26,063
mutually annihilate each other to be balanced in this regard.

397
00:19:27,430 --> 00:19:30,492
So here's an example for our melee and ranged units.

398
00:19:30,492 --> 00:19:32,973
The melee unit is faster,

399
00:19:32,973 --> 00:19:34,454
and they each have the same health.

400
00:19:34,454 --> 00:19:36,736
So that's the arbitrary point that I've kind of picked here.

401
00:19:36,736 --> 00:19:39,977
Assuming the ranged unit starts firing as soon as it can,

402
00:19:39,977 --> 00:19:41,798
the melee unit with these numbers

403
00:19:41,798 --> 00:19:44,240
essentially soaks one hit on its way over.

404
00:19:44,240 --> 00:19:46,221
So it needs to kill the ranged unit

405
00:19:46,221 --> 00:19:48,082
in one less hit than the other way around.

406
00:19:48,582 --> 00:19:51,343
That means that if the ranged unit's dealing 20 damage,

407
00:19:51,343 --> 00:19:53,064
it kills the melee in five shots,

408
00:19:53,064 --> 00:19:56,166
and the melee unit deals 25, so it can kill it in four,

409
00:19:56,166 --> 00:19:58,747
and they can basically get rid of each other.

410
00:19:58,747 --> 00:20:01,288
It can be hard to keep a lot of these numbers in your head,

411
00:20:01,288 --> 00:20:03,449
so consider making a sim of these battles

412
00:20:03,449 --> 00:20:04,750
right in your spreadsheet.

413
00:20:04,750 --> 00:20:06,670
You can show what's happening each round

414
00:20:06,670 --> 00:20:08,991
or each second in combat, and get a better view

415
00:20:08,991 --> 00:20:11,613
on what's happening, as well as double-check your numbers.

416
00:20:11,613 --> 00:20:15,394
So this same logic can be applied

417
00:20:15,394 --> 00:20:17,055
to other types of mechanics as well.

418
00:20:18,086 --> 00:20:21,127
Take two tanks in an RPG battle game.

419
00:20:21,127 --> 00:20:23,828
One of them has defense, which reduces the amount of damage

420
00:20:23,828 --> 00:20:25,669
taken every hit, and the other one just

421
00:20:25,669 --> 00:20:27,609
has a large health pool.

422
00:20:27,609 --> 00:20:29,810
So we can pick which attributes we just define,

423
00:20:29,810 --> 00:20:32,631
such as the health and defense, and then calculate damage

424
00:20:32,631 --> 00:20:34,111
to make sure the unit's balanced out.

425
00:20:34,111 --> 00:20:36,692
This works in other directions, too,

426
00:20:36,692 --> 00:20:38,773
such as deciding that third tank has 50 damage

427
00:20:38,773 --> 00:20:41,874
and then trying to calculate what should its health be

428
00:20:41,874 --> 00:20:43,355
in order to make it fair.

429
00:20:43,355 --> 00:20:45,716
Don't be afraid to use two different methods, even

430
00:20:45,716 --> 00:20:46,876
within the same game.

431
00:20:47,739 --> 00:20:53,287
You want to figure out the fantasy of every character you're making and balance around that most important part.

432
00:20:53,287 --> 00:20:58,495
Does one character feel like they should be faster than anything else in your game to make it feel right?

433
00:20:58,495 --> 00:21:01,279
Then do that, and then bring something else down in order to compensate.

434
00:21:03,415 --> 00:21:05,176
What about calculating cost?

435
00:21:05,176 --> 00:21:07,457
So let's take a card game where you need to know

436
00:21:07,457 --> 00:21:11,158
how powerful each individual card is in order to balance it.

437
00:21:11,158 --> 00:21:13,659
Ask yourself, how long is the card in play?

438
00:21:13,659 --> 00:21:15,899
How many turns of value does it provide?

439
00:21:15,899 --> 00:21:18,640
Establish a baseline and then balance things around that.

440
00:21:19,020 --> 00:21:22,862
Let's say that one mana is two damage in your game.

441
00:21:22,862 --> 00:21:25,463
If you've got a card that's going to last about five turns

442
00:21:25,463 --> 00:21:27,524
and deal damage per turn, you could say,

443
00:21:27,524 --> 00:21:30,326
oh, it's about two and a half mana in a perfect balance.

444
00:21:30,326 --> 00:21:32,547
You know, now you have your starting point.

445
00:21:32,547 --> 00:21:34,428
You're going to tweak and iterate from there,

446
00:21:34,428 --> 00:21:36,549
discounting futures and immediate impact and so on,

447
00:21:36,549 --> 00:21:39,730
but it's always important to have that baseline.

448
00:21:39,730 --> 00:21:42,952
How much better is one keyword ability on a card?

449
00:21:42,952 --> 00:21:44,752
Well, you can look at how often it matters

450
00:21:44,752 --> 00:21:46,994
and turns the tide and the total effect

451
00:21:46,994 --> 00:21:47,994
it's going to have on a game.

452
00:21:49,049 --> 00:21:50,891
No matter what kind of game you're making,

453
00:21:50,891 --> 00:21:52,634
you can start with these time measures,

454
00:21:52,634 --> 00:21:54,737
especially duration and frequency,

455
00:21:54,737 --> 00:21:56,600
and use it to assign costs.

456
00:21:57,888 --> 00:22:01,571
So remember that all of these are just starting points.

457
00:22:01,571 --> 00:22:05,013
Perfect balance is, again, still pretty boring.

458
00:22:05,013 --> 00:22:08,316
Get your two fair items balanced and then start adjusting.

459
00:22:08,316 --> 00:22:10,898
Give a unit a negative to some attribute

460
00:22:10,898 --> 00:22:13,400
because of how effective its ability is.

461
00:22:13,400 --> 00:22:15,481
Add in some type advantages to make sure

462
00:22:15,481 --> 00:22:16,982
that units have comparative advantages

463
00:22:16,982 --> 00:22:19,284
just the way they work in your head.

464
00:22:19,284 --> 00:22:22,406
And how do you know how valuable a particular aspect

465
00:22:22,406 --> 00:22:24,428
like an ability is?

466
00:22:24,428 --> 00:22:24,848
You test it.

467
00:22:25,613 --> 00:22:28,255
So one way I like to do this is take two equal units,

468
00:22:28,255 --> 00:22:30,496
one with the ability, one without.

469
00:22:30,496 --> 00:22:32,978
The one with the ability should win every time,

470
00:22:32,978 --> 00:22:36,120
whether it's in a prototype or just in your Excel sim.

471
00:22:36,120 --> 00:22:38,541
You can do the same with other attributes like damage.

472
00:22:38,541 --> 00:22:40,622
You know, just increase the health

473
00:22:40,622 --> 00:22:42,603
on the one without the ability

474
00:22:42,603 --> 00:22:44,024
until that one starts winning.

475
00:22:44,024 --> 00:22:46,105
Do the same with all the other attributes

476
00:22:46,105 --> 00:22:48,146
and you've got a value for your ability

477
00:22:48,146 --> 00:22:50,408
in terms of the other stats and cost of your game.

478
00:22:52,050 --> 00:22:56,054
this first balance is always harder than the rest of them,

479
00:22:56,054 --> 00:22:58,416
but once you've figured out how much this ability

480
00:22:58,416 --> 00:22:59,977
should cost you in terms of attributes,

481
00:22:59,977 --> 00:23:01,899
you have a baseline to try to figure out

482
00:23:01,899 --> 00:23:04,161
everything else you're gonna design after that.

483
00:23:04,161 --> 00:23:06,102
So how much health you'd have to sacrifice

484
00:23:06,102 --> 00:23:08,464
to make a shield keyword fair, for example.

485
00:23:08,464 --> 00:23:12,508
So in summary, free-to-play economies

486
00:23:12,508 --> 00:23:15,410
are based around time,

487
00:23:15,410 --> 00:23:18,693
especially the acquisition rate of content.

488
00:23:19,340 --> 00:23:23,004
Create a scale that looks good and makes sense.

489
00:23:23,004 --> 00:23:27,327
Define how long it should take to get to each point

490
00:23:27,327 --> 00:23:31,051
and get your payouts per day.

491
00:23:31,051 --> 00:23:32,272
You can handle battles

492
00:23:32,272 --> 00:23:34,554
and other system interactions similarly.

493
00:23:34,554 --> 00:23:36,255
You get an arbitrary starting point

494
00:23:36,255 --> 00:23:38,297
and look at the effective time of each item,

495
00:23:38,297 --> 00:23:41,440
whether it's actions per session, turn, or seconds of play.

496
00:23:42,185 --> 00:23:45,366
And most importantly, once everything is balanced,

497
00:23:45,366 --> 00:23:47,348
break it until it's actually fun.

498
00:23:47,348 --> 00:23:50,229
Equal balance is your starting point, not your destination.

499
00:23:50,229 --> 00:23:53,271
It's the little details and small advantages

500
00:23:53,271 --> 00:23:54,732
that make something really compelling.

501
00:23:55,945 --> 00:23:58,768
So I hope this talk helps some of you out there.

502
00:23:58,768 --> 00:24:00,109
If you're looking for a copy of the slides

503
00:24:00,109 --> 00:24:01,830
or the math used in the examples,

504
00:24:01,830 --> 00:24:04,593
you can follow these links and I'll tweet them out after.

505
00:24:04,593 --> 00:24:06,154
Please, if you have any questions,

506
00:24:06,154 --> 00:24:08,036
you can go ahead and ask now.

507
00:24:08,036 --> 00:24:09,317
And if you have anything afterwards,

508
00:24:09,317 --> 00:24:11,338
you can always contact me at my email

509
00:24:11,338 --> 00:24:12,660
or we have a wrap-up room after.

510
00:24:12,660 --> 00:24:14,481
Also, GDC wants to remind me to tell you

511
00:24:14,481 --> 00:24:16,443
to please fill out your session evaluations.

512
00:24:16,443 --> 00:24:17,524
We really do appreciate it.

513
00:24:17,524 --> 00:24:18,625
So thank you so much for your time.

514
00:24:34,414 --> 00:24:34,714
Hello.

515
00:24:34,714 --> 00:24:35,155
Hi, thanks.

516
00:24:35,155 --> 00:24:37,076
That was really insightful.

517
00:24:37,076 --> 00:24:41,459
I had a question about if you have a currency that players

518
00:24:41,459 --> 00:24:44,381
can use to spend on multiple things, some of which

519
00:24:44,381 --> 00:24:45,862
might power them up like upgrades

520
00:24:45,862 --> 00:24:48,044
and some which might be purely cosmetic,

521
00:24:48,044 --> 00:24:51,046
how do you estimate or predict and balance

522
00:24:51,046 --> 00:24:53,828
for where they're going to allocate that currency?

523
00:24:53,828 --> 00:24:55,769
That's a great question.

524
00:24:55,769 --> 00:24:57,891
It's when you have a currency that's

525
00:24:57,891 --> 00:24:58,911
used for more than one thing.

526
00:25:00,880 --> 00:25:04,386
Yeah, since when you have a currency that's used for more than one thing,

527
00:25:04,386 --> 00:25:06,409
how do you balance them with, you know, a total,

528
00:25:06,409 --> 00:25:09,294
especially if you have one that's cosmetic and one that's mechanic?

529
00:25:10,550 --> 00:25:12,910
When you're doing the system total,

530
00:25:12,910 --> 00:25:14,651
you can basically sum them all up to see

531
00:25:14,651 --> 00:25:15,811
what is the total need.

532
00:25:15,811 --> 00:25:17,531
Let's say you can buy cosmetics,

533
00:25:17,531 --> 00:25:19,972
you can buy new characters and skins with gold.

534
00:25:19,972 --> 00:25:22,972
You can sum up the total amount and divvy it out.

535
00:25:22,972 --> 00:25:26,353
I also try to only consider the mechanic amount,

536
00:25:26,353 --> 00:25:29,473
where we're saying I want players to earn this much gold

537
00:25:29,473 --> 00:25:31,774
for the mechanic benefit of the game,

538
00:25:31,774 --> 00:25:33,334
so that's how much you wanna pay them,

539
00:25:33,334 --> 00:25:35,295
and sort of give cosmetics as an extra.

540
00:25:35,895 --> 00:25:40,358
Yes, there will be some players who don't spend anything on cosmetics and just purchase

541
00:25:40,358 --> 00:25:43,061
more power, but that's usually okay.

542
00:25:43,061 --> 00:25:45,943
Any other questions?

543
00:25:45,943 --> 00:25:48,205
Excellent.

544
00:25:48,205 --> 00:25:50,427
Great.

545
00:25:50,427 --> 00:25:55,751
Well, thank you all so much for coming today, and I hope you enjoy the rest of your GDC.

546
00:25:55,751 --> 00:25:56,171
Good hunting.

