1
00:00:01,647 --> 00:00:05,012
Ladies and gentlemen, PCG Shotgun.

2
00:00:05,492 --> 00:00:06,093
Let's welcome them.

3
00:00:06,314 --> 00:00:06,494
Thanks.

4
00:00:13,473 --> 00:00:16,155
So when Dave told us that he wanted us to come up and speak

5
00:00:16,655 --> 00:00:19,416
for 60 minutes about procedurally generated shotguns,

6
00:00:20,097 --> 00:00:21,697
I didn't really think we'd have enough time

7
00:00:21,817 --> 00:00:23,138
to fill all the content in.

8
00:00:23,838 --> 00:00:25,579
So we're gonna go, each person's gonna talk about

9
00:00:25,619 --> 00:00:26,800
different types of shotguns

10
00:00:27,120 --> 00:00:28,461
and how to procedurally generate them.

11
00:00:28,541 --> 00:00:30,622
So I hope you guys all know what you were prepared for

12
00:00:30,662 --> 00:00:33,603
when you came here and take lots of notes.

13
00:00:34,443 --> 00:00:37,185
So I'm gonna introduce our first speaker, Mitu,

14
00:00:37,605 --> 00:00:39,506
and Mitu's gonna take it from there.

15
00:00:39,526 --> 00:00:40,966
I guess I will. Go for it.

16
00:00:41,187 --> 00:00:42,270
All right, thanks Tyler.

17
00:00:42,290 --> 00:00:46,363
Hi everyone, so, where are my slides?

18
00:00:47,366 --> 00:00:47,767
Are they here?

19
00:00:48,398 --> 00:00:48,779
Here they are.

20
00:00:49,219 --> 00:00:49,839
Okay, cool.

21
00:00:50,520 --> 00:00:51,560
Hi, okay, so,

22
00:00:51,580 --> 00:00:53,261
hi, I'm Mitu.

23
00:00:53,721 --> 00:00:55,722
So, I do a few things.

24
00:00:56,042 --> 00:00:58,183
I make games as the tiniest shark.

25
00:00:58,223 --> 00:01:00,584
I'm a member of faculty at the NYU Game Center.

26
00:01:01,265 --> 00:01:03,706
I'm also Chief Creative Officer at Spirit AI.

27
00:01:04,466 --> 00:01:06,868
So this is actually the second of three talks I'm giving

28
00:01:06,988 --> 00:01:09,609
in the, just the AI Summit this year.

29
00:01:10,349 --> 00:01:13,451
So some of you may have seen my talk yesterday on Reactive.

30
00:01:13,811 --> 00:01:15,953
Storytelling through agent-driven design.

31
00:01:17,114 --> 00:01:19,296
And I'm going to talk about some of the work

32
00:01:19,376 --> 00:01:20,817
that I've been involved with lately,

33
00:01:20,857 --> 00:01:22,078
sort of touching on some elements of that,

34
00:01:22,118 --> 00:01:23,800
so apologies if you saw that talk.

35
00:01:24,520 --> 00:01:26,522
But also, I'm also doing other work

36
00:01:26,562 --> 00:01:29,345
kind of at the opposite end of that spectrum.

37
00:01:30,346 --> 00:01:32,467
So, and I've been thinking about this as a spectrum,

38
00:01:32,507 --> 00:01:35,310
actually, so this idea of agent-driven stories

39
00:01:35,390 --> 00:01:36,891
versus story-driven agents.

40
00:01:37,852 --> 00:01:42,195
So, there are quite a few of us on this panel talking about various kinds of procedural

41
00:01:42,215 --> 00:01:46,378
generation of characters, and so I think part of the reason I'm going first is to frame

42
00:01:46,418 --> 00:01:51,821
that work with some definitions and some tips for sort of working at both ends of that spectrum.

43
00:01:53,082 --> 00:01:55,023
So, firstly, sort of why should we even tell?

44
00:01:55,444 --> 00:01:58,645
those kinds of procedural character-based narratives.

45
00:01:59,045 --> 00:02:02,026
The boring but true answer is replayability,

46
00:02:02,126 --> 00:02:03,347
longevity, et cetera.

47
00:02:04,187 --> 00:02:06,448
The more interesting answer is that I think

48
00:02:06,588 --> 00:02:08,869
all procedural systems are kind of driven by a philosophy.

49
00:02:09,469 --> 00:02:12,250
It's an opportunity to discover a certain knowledge space.

50
00:02:13,991 --> 00:02:16,915
And there's lots of opportunity for very thoughtful,

51
00:02:16,975 --> 00:02:18,557
very nuanced stories to be told.

52
00:02:19,198 --> 00:02:21,762
So procedural narratives can allow us to explore

53
00:02:21,922 --> 00:02:25,066
and unpack the philosophy of an entire story space

54
00:02:25,467 --> 00:02:26,989
rather than just one story, of course.

55
00:02:27,930 --> 00:02:29,812
So let's go ahead and start with some definitions.

56
00:02:30,793 --> 00:02:38,497
So what I'm calling agent-driven stories are those which are based around simulating the interactions of lots of agents,

57
00:02:39,098 --> 00:02:43,840
which can tell us something about that particular world, through having the player interact with them, etc.

58
00:02:44,280 --> 00:02:49,843
And the way that stories are told in that particular world is through a mechanism of noticing, really.

59
00:02:49,903 --> 00:02:50,844
So that's kind of the mechanic.

60
00:02:51,504 --> 00:02:53,845
sort of noticing how agents are set up

61
00:02:54,025 --> 00:02:55,365
in opposition to each other,

62
00:02:55,665 --> 00:02:57,306
which ones are different from the others

63
00:02:57,466 --> 00:02:59,927
and why those particular properties

64
00:03:00,867 --> 00:03:04,188
might matter in the context of that particular world.

65
00:03:04,648 --> 00:03:07,329
So agent-driven stories rely on lots of agents.

66
00:03:07,929 --> 00:03:09,350
The storytelling comes from noticing.

67
00:03:10,150 --> 00:03:11,350
So these agents are supposed to be moving,

68
00:03:11,370 --> 00:03:12,951
they're not animating for some reason, but that's fine.

69
00:03:13,031 --> 00:03:14,951
Let's imagine all these agents moving

70
00:03:15,011 --> 00:03:16,012
and they're all moving differently.

71
00:03:17,052 --> 00:03:19,273
So I wanna talk about some Proc Gen considerations

72
00:03:19,313 --> 00:03:19,773
given those.

73
00:03:20,094 --> 00:03:23,127
sort of psychological strengths, right, the sort of mechanics of noticing.

74
00:03:24,948 --> 00:03:28,029
On the other hand, there are also what I'd call

75
00:03:28,089 --> 00:03:30,549
story-driven agents.

76
00:03:30,569 --> 00:03:32,190
So those are agents which have been crafted

77
00:03:32,230 --> 00:03:34,350
to know a lot about a particular story space.

78
00:03:35,350 --> 00:03:36,971
The way that you learn about the story space

79
00:03:37,211 --> 00:03:39,711
is by interacting with that particular agent

80
00:03:39,751 --> 00:03:41,452
through some kind of dialogue

81
00:03:41,492 --> 00:03:43,272
or even some other set of interactions

82
00:03:43,592 --> 00:03:45,373
which act upon that particular agent.

83
00:03:45,633 --> 00:03:47,353
Again, my animations are not working.

84
00:03:47,393 --> 00:03:49,414
Imagine one of those agents is like super huge

85
00:03:49,454 --> 00:03:50,814
all of a sudden because that's the agent

86
00:03:50,854 --> 00:03:52,414
that you're really interrogating.

87
00:03:54,275 --> 00:03:57,597
Okay, so that's kind of the spectrum of types of character AI.

88
00:03:58,617 --> 00:04:02,839
So those of you who saw my talk yesterday on telling reactive stories in an agent-driven world,

89
00:04:03,540 --> 00:04:08,883
I sort of talked about what I'm doing at this end of the spectrum,

90
00:04:08,903 --> 00:04:10,604
the agent-driven stories end of the spectrum,

91
00:04:11,924 --> 00:04:16,927
as the tiniest shark, which is where I'm working on a game which is called Little Invasion Tales.

92
00:04:18,173 --> 00:04:24,619
So Little Invasion Tales is a small city building and citizen management game all about defending your citizens from alien attacks.

93
00:04:25,760 --> 00:04:30,924
I've also previously worked on a game called Redshirt, which was a kind of bleakly Machiavellian social networking simulator.

94
00:04:32,065 --> 00:04:39,712
So and that world was really set up through the mechanics of noticing, right? So noticing that characters behave differently

95
00:04:40,813 --> 00:04:41,113
because

96
00:04:42,114 --> 00:04:44,315
We don't really understand people, right?

97
00:04:44,355 --> 00:04:45,435
Like nobody really does.

98
00:04:46,496 --> 00:04:48,697
We don't have a complete model of human behavior

99
00:04:48,757 --> 00:04:50,358
and the best we can do is express

100
00:04:50,678 --> 00:04:52,419
a particular point of view.

101
00:04:53,180 --> 00:04:57,002
So the limits that we impose on a sort of system

102
00:04:57,022 --> 00:04:58,763
that we create are expressive.

103
00:04:58,783 --> 00:04:59,663
They have something to say.

104
00:04:59,683 --> 00:05:01,444
And we need to be cognizant

105
00:05:01,504 --> 00:05:02,765
about what we're actually saying.

106
00:05:03,545 --> 00:05:05,426
We need to be conscientiously reductive

107
00:05:05,506 --> 00:05:07,748
when we're designing character-based games.

108
00:05:08,588 --> 00:05:13,472
So, for example, in Red Shirt, the space created was kind of about using people as pawns.

109
00:05:13,973 --> 00:05:18,617
And so a lot of the attributes that characters had were kind of, you know, in that sort of

110
00:05:19,117 --> 00:05:19,878
negative space.

111
00:05:19,898 --> 00:05:22,800
So they had things like vanity, fickleness, bigotry, etc.

112
00:05:23,461 --> 00:05:24,722
That was like the world.

113
00:05:24,902 --> 00:05:29,286
And those were the attributes which set up characters in opposition to each other.

114
00:05:31,009 --> 00:05:34,111
Then, on this side of the spectrum at Spirit AI,

115
00:05:34,411 --> 00:05:35,632
we're building tools in middleware

116
00:05:35,712 --> 00:05:38,333
to help people write story-driven agents.

117
00:05:39,654 --> 00:05:42,775
So, M Short just gave a talk in the Narrative Summit

118
00:05:42,815 --> 00:05:44,636
more about what we're doing, so I'm not gonna go into it,

119
00:05:45,037 --> 00:05:48,378
but we basically made an SDK and a set of tools

120
00:05:48,418 --> 00:05:49,619
for helping you create characters

121
00:05:49,639 --> 00:05:50,900
which are more deeply expressive.

122
00:05:51,600 --> 00:05:53,121
One particular demo we have is about

123
00:05:53,781 --> 00:05:56,383
interacting with a robot who you're interrogating,

124
00:05:56,863 --> 00:05:58,624
and the system is able to sort of improvise

125
00:05:58,684 --> 00:05:59,865
off scripted dialogue.

126
00:06:00,105 --> 00:06:02,408
that you've defined for it, and it has an agenda.

127
00:06:03,349 --> 00:06:05,992
So it uses sort of a space of knowledge,

128
00:06:06,012 --> 00:06:09,015
like a knowledge space that it has about its own world

129
00:06:09,075 --> 00:06:11,678
and uses that to let you interact with it.

130
00:06:12,824 --> 00:06:17,488
So I think that those types of two sort of procedural character-based narratives

131
00:06:18,029 --> 00:06:20,811
affect writers and designers in different ways.

132
00:06:21,912 --> 00:06:27,577
So I think that one of the opportunities we have is to sort of bring writers more into the fold

133
00:06:28,198 --> 00:06:32,942
of sort of creating these sort of story-driven agents.

134
00:06:34,163 --> 00:06:36,865
So with story-driven agents, the shift moves more towards writers.

135
00:06:38,507 --> 00:06:44,792
So and one of the real things I want to sort of impress is how do we as humans if we're making character AI or

136
00:06:44,832 --> 00:06:46,113
Just in general as humans

137
00:06:46,193 --> 00:06:49,816
How do we find out more about each other and our agendas like you know as real humans?

138
00:06:50,156 --> 00:06:55,580
Generally, we do it by talking to each other right we sort of ask each other things we converse about our opinions

139
00:06:56,280 --> 00:06:57,101
Even when that's difficult

140
00:06:58,374 --> 00:06:59,454
in recent times especially.

141
00:07:00,514 --> 00:07:02,855
So language is super important to humans.

142
00:07:03,975 --> 00:07:05,136
And with Little Invasion Tales,

143
00:07:05,196 --> 00:07:07,377
I've tried combining instances of language

144
00:07:07,817 --> 00:07:09,537
into an agent-driven story,

145
00:07:10,117 --> 00:07:11,958
which is basically the talk I gave yesterday.

146
00:07:13,058 --> 00:07:14,979
One of the missions that I'm trying to accomplish

147
00:07:14,999 --> 00:07:17,200
with Little Invasion Tales is bringing

148
00:07:17,540 --> 00:07:20,341
sort of a wider audience into the fold

149
00:07:20,361 --> 00:07:22,621
of understanding procedural narrative

150
00:07:22,821 --> 00:07:23,842
and kind of what happens,

151
00:07:23,882 --> 00:07:24,682
like the fact that we,

152
00:07:25,122 --> 00:07:29,645
look at agents interacting and we have an implicit narrative that arises

153
00:07:30,585 --> 00:07:35,227
out of noticing those interactions, but actually making that explicit

154
00:07:35,267 --> 00:07:39,169
through text and voiceover. So using language to help us notice.

155
00:07:41,270 --> 00:07:45,252
And so, also related to that point, so this is, you know, I've already touched

156
00:07:45,272 --> 00:07:49,875
on how Redshirt worked. And also,

157
00:07:51,559 --> 00:07:54,000
Procedural characters sort of need to be expressive

158
00:07:54,040 --> 00:07:54,660
about their world.

159
00:07:54,700 --> 00:07:56,861
So again, in Little Invasion Tales,

160
00:07:57,421 --> 00:07:59,562
they're expressive about their particular world

161
00:07:59,622 --> 00:08:00,702
through talking to each other.

162
00:08:01,803 --> 00:08:06,825
So the system in Little Invasion Tales

163
00:08:07,665 --> 00:08:09,946
for passing knowledge between characters

164
00:08:10,426 --> 00:08:13,687
is one that's inspired by the system in Left 4 Dead.

165
00:08:15,248 --> 00:08:17,428
So it's basically like a query system

166
00:08:17,808 --> 00:08:20,810
and characters can share knowledge between each other

167
00:08:21,330 --> 00:08:24,411
but also be able to trigger all kinds of actions as well.

168
00:08:26,492 --> 00:08:28,793
But also I want to point to besides language,

169
00:08:29,153 --> 00:08:30,294
what are some other solutions,

170
00:08:30,334 --> 00:08:32,295
particularly if you're at the end of the spectrum

171
00:08:32,315 --> 00:08:34,816
where you're making agent-driven stories.

172
00:08:35,776 --> 00:08:39,178
So one of my go-to solutions to try and hit that sweet spot,

173
00:08:39,658 --> 00:08:41,699
which I've enacted across both Redshire

174
00:08:41,959 --> 00:08:43,300
and Little Invasion Tales,

175
00:08:43,960 --> 00:08:45,261
is letting the player just...

176
00:08:45,841 --> 00:08:47,282
see the process of character creation,

177
00:08:47,322 --> 00:08:50,323
like using character creation to help us notice, right?

178
00:08:51,623 --> 00:08:53,584
Letting the player fiddle with sort of sliders

179
00:08:53,624 --> 00:08:55,364
and variables so that they can understand

180
00:08:55,404 --> 00:08:56,605
what the underlying model is.

181
00:08:57,405 --> 00:08:59,806
So character creation is a form of communication.

182
00:09:00,626 --> 00:09:03,747
This is the character creator from Little Invasion Tales.

183
00:09:04,767 --> 00:09:09,089
So the last thing I want to say is that I'm really interested in what we can come up with

184
00:09:09,129 --> 00:09:11,130
when we bring both sides of the spectrum together.

185
00:09:11,470 --> 00:09:18,152
What kinds of procedural, character-driven narratives might be possible then, right?

186
00:09:18,172 --> 00:09:22,534
So again, my animations are not working, but let's just imagine these floating and becoming

187
00:09:22,794 --> 00:09:25,255
one and other things that the animation is supposed to do.

188
00:09:25,275 --> 00:09:26,275
So yeah, imagining.

189
00:09:32,093 --> 00:09:36,156
what would happen if we had a system where we had lots of agents

190
00:09:37,237 --> 00:09:41,060
interacting in the world, interacting with each other according to the

191
00:09:41,080 --> 00:09:45,003
underlying social model, but then you could interrogate some of them, right?

192
00:09:45,364 --> 00:09:48,446
So you'd have a few of them which you could interrogate more deeply

193
00:09:49,227 --> 00:09:52,950
and find out actually what is their agenda within this world, so using

194
00:09:53,230 --> 00:09:56,072
the mechanics of noticing and using the mechanics of language.

195
00:09:58,202 --> 00:09:59,763
So, yes, there we go.

196
00:10:00,083 --> 00:10:03,485
So the little agent which is supposed to be animating is saying,

197
00:10:03,525 --> 00:10:07,126
see how I act in relation to my world, talk to me about what my agenda might really be.

198
00:10:08,387 --> 00:10:11,928
So that's it. So that's my sort of set of definitions.

199
00:10:12,448 --> 00:10:18,511
You can see what we're doing at Spirit on the sort of language-based interaction in North Hall from tomorrow.

200
00:10:18,691 --> 00:10:18,931
Thank you.

201
00:10:33,219 --> 00:10:39,367
Hello everyone. I'm Tanya Short and I'm going to give you some tips for maximizing the impact

202
00:10:39,507 --> 00:10:43,692
of your generated personalities. I actually hadn't heard Mitu's talk before just now,

203
00:10:43,732 --> 00:10:45,615
but I think you'll see some interesting parallels.

204
00:10:46,976 --> 00:10:50,618
So yeah, if you're generating personalities in your game,

205
00:10:50,878 --> 00:10:52,739
you're first going to need to pick a reasoning,

206
00:10:52,759 --> 00:10:55,881
a motivation, and then a behavior,

207
00:10:55,921 --> 00:10:58,643
which is what a character does and why they do it.

208
00:10:59,284 --> 00:11:01,785
So now you have a generated personality, congratulations.

209
00:11:02,466 --> 00:11:04,127
But is it an interesting personality?

210
00:11:04,627 --> 00:11:07,409
Does the player understand what that personality is?

211
00:11:07,929 --> 00:11:09,990
Are the connections between the reasoning

212
00:11:10,070 --> 00:11:12,492
and the behavior actually satisfying to discover?

213
00:11:13,172 --> 00:11:13,753
That's the goal.

214
00:11:15,061 --> 00:11:18,042
Normally we would assume that reasoning drives behavior,

215
00:11:18,142 --> 00:11:20,282
because that's how we experience our world.

216
00:11:20,902 --> 00:11:24,983
Not only does science actually have a few factoids and studies

217
00:11:25,043 --> 00:11:27,043
that disprove that, but you might

218
00:11:27,083 --> 00:11:29,004
want to consider the opposite for your game.

219
00:11:29,604 --> 00:11:32,304
In Moon Hunters, for example, the player's behavior,

220
00:11:32,544 --> 00:11:34,645
such as being nice to everyone, was then

221
00:11:34,705 --> 00:11:36,825
measured and determined what personality

222
00:11:36,885 --> 00:11:39,566
trait was assigned to them, such as compassionate.

223
00:11:40,986 --> 00:11:43,488
sort of retroactively explaining their behavior

224
00:11:44,048 --> 00:11:45,149
through their motivation.

225
00:11:46,449 --> 00:11:47,690
And from the player perspective,

226
00:11:47,710 --> 00:11:50,712
they can encounter each of them,

227
00:11:50,912 --> 00:11:53,834
or both simultaneously, depending on how you frame it.

228
00:11:54,474 --> 00:11:56,815
Even if your engine is starting with reasoning

229
00:11:56,956 --> 00:11:58,096
and then going into behavior,

230
00:11:58,496 --> 00:12:00,958
it might make sense for the player to see it the opposite,

231
00:12:01,098 --> 00:12:01,999
see it at the same time,

232
00:12:02,399 --> 00:12:04,020
because to understand the simulation,

233
00:12:04,180 --> 00:12:06,861
the player has to understand both the cause and the effect,

234
00:12:07,302 --> 00:12:10,063
even if a given action is both a cause and an effect.

235
00:12:11,809 --> 00:12:17,052
In human-authored media, it's common to start with the behavior and never show the reasoning.

236
00:12:17,513 --> 00:12:22,256
It's common to advise show, don't tell, which means displaying a behavior and allowing the

237
00:12:22,316 --> 00:12:27,260
audience to interpret the personality according to their own internal lens.

238
00:12:27,760 --> 00:12:28,681
This is more natural.

239
00:12:28,861 --> 00:12:31,343
This is how we encounter real people in real life.

240
00:12:32,223 --> 00:12:36,126
Getting to know someone is about interpreting their behavior or their reasoning from their

241
00:12:36,146 --> 00:12:36,486
behavior.

242
00:12:38,178 --> 00:12:41,620
But most procedural personality games up until now

243
00:12:41,800 --> 00:12:42,860
have gone the other way.

244
00:12:43,521 --> 00:12:46,983
They tend to tell the audience about their personality traits

245
00:12:47,443 --> 00:12:50,825
and their reasoning, and then later on display the behavior,

246
00:12:51,025 --> 00:12:53,626
at which point it's the player's gameplay to notice.

247
00:12:54,487 --> 00:12:58,528
and interpret what the algorithm is actually doing

248
00:12:58,588 --> 00:12:59,348
with that reasoning.

249
00:13:00,048 --> 00:13:02,429
The advantage of this approach is that AI systems

250
00:13:02,529 --> 00:13:04,250
become core to the gameplay.

251
00:13:04,750 --> 00:13:08,531
Noticing is the gameplay of understanding the systems.

252
00:13:09,151 --> 00:13:11,171
And this is great when you're worried

253
00:13:11,191 --> 00:13:13,432
that maybe your behavior will seem rather random

254
00:13:13,812 --> 00:13:15,393
because now the players have built

255
00:13:15,453 --> 00:13:16,573
their own model of reasoning.

256
00:13:17,593 --> 00:13:21,054
However, that can result in a lot of information

257
00:13:21,094 --> 00:13:21,534
for the player.

258
00:13:23,015 --> 00:13:27,240
Many procedural personality systems, such as our beloved Dwarf Fortress,

259
00:13:27,900 --> 00:13:29,142
and games I have worked on as well,

260
00:13:30,743 --> 00:13:31,885
tend to expose a lot.

261
00:13:32,385 --> 00:13:36,069
And as our audiences become more accustomed to procedural content,

262
00:13:36,529 --> 00:13:39,913
maybe we won't need to expose as much to convince them it's not random.

263
00:13:41,314 --> 00:13:45,035
But part of the problem is that compared to other procedural content,

264
00:13:45,415 --> 00:13:47,316
procedural personalities are very subtle,

265
00:13:47,536 --> 00:13:50,817
because in real life, even, personalities are very subtle.

266
00:13:51,237 --> 00:13:54,258
They are abstract, they are invisible, they're fourth-dimensional,

267
00:13:54,418 --> 00:13:55,639
they take place over time.

268
00:13:56,139 --> 00:13:58,760
And even if you lean on well-known archetypes,

269
00:13:59,480 --> 00:14:02,441
people will still need to pay attention to see the pattern.

270
00:14:02,881 --> 00:14:06,042
You can't rely on instinct the way you can with physical attributes,

271
00:14:06,102 --> 00:14:07,983
like hair color or height or gender.

272
00:14:09,974 --> 00:14:15,516
I was stunned when I joined the Age of Conan system design team because I had played the

273
00:14:15,536 --> 00:14:16,197
game for a month.

274
00:14:17,137 --> 00:14:20,719
And after playing for a month, I joined the team and I looked at their scripting engine

275
00:14:20,759 --> 00:14:26,982
and I found a beautiful, modular, elegant version of a Maslovian hierarchy of needs

276
00:14:27,563 --> 00:14:30,664
for these monsters that I had been slaying and observed no such thing.

277
00:14:31,945 --> 00:14:34,526
Every single character first would seek safety,

278
00:14:35,227 --> 00:14:37,548
and then seek shelter, and then seek food,

279
00:14:37,748 --> 00:14:39,649
and companionship, and self-actualization.

280
00:14:39,929 --> 00:14:40,170
Yes.

281
00:14:41,490 --> 00:14:44,152
Even though the internal design team's motto

282
00:14:44,192 --> 00:14:47,033
was combat, combat, combat, and correspondingly,

283
00:14:47,214 --> 00:14:48,974
most of the players just killed everything.

284
00:14:50,435 --> 00:14:53,197
But the real problem here was that there was no way

285
00:14:53,257 --> 00:14:55,398
as a player I would expect that to be the case,

286
00:14:55,938 --> 00:14:57,899
and there was no sign to the contrary.

287
00:14:57,979 --> 00:14:59,520
There was no reason for me to expect

288
00:14:59,600 --> 00:15:00,501
that reasoning was going on.

289
00:15:00,801 --> 00:15:01,842
and there's no communication.

290
00:15:02,362 --> 00:15:03,743
So they had this beautiful system,

291
00:15:03,783 --> 00:15:07,005
which I used a lot for designing boss fights and things.

292
00:15:08,146 --> 00:15:11,188
But this living, breathing world aspiration

293
00:15:11,348 --> 00:15:14,710
kind of took them into this wasteful use of energy

294
00:15:14,790 --> 00:15:16,071
for years, developing a system

295
00:15:16,171 --> 00:15:17,331
that didn't need to be there.

296
00:15:18,885 --> 00:15:21,705
So if you do hide information about your personality systems,

297
00:15:21,845 --> 00:15:23,806
it can really help to be obvious about it.

298
00:15:24,506 --> 00:15:26,106
As in Civ 6, which came out recently,

299
00:15:26,386 --> 00:15:28,667
you can see some coy hints about what's hidden.

300
00:15:28,907 --> 00:15:30,507
When something's hidden, it's very obvious.

301
00:15:30,967 --> 00:15:34,248
This encourages further experimentation and exploration

302
00:15:34,428 --> 00:15:35,428
by intriguing the player.

303
00:15:36,288 --> 00:15:37,889
And that's part of why we're being really up front

304
00:15:38,009 --> 00:15:39,729
about hidden villager personalities

305
00:15:39,809 --> 00:15:42,790
in The Shrouded Isle, which is a game coming up published

306
00:15:42,850 --> 00:15:43,730
by Kit Fox Games.

307
00:15:45,570 --> 00:15:47,511
The discovery of those personality traits.

308
00:15:48,031 --> 00:15:51,394
becomes a player goal, which is then very satisfying to,

309
00:15:51,414 --> 00:15:53,416
or intrinsically satisfying to discover,

310
00:15:53,676 --> 00:15:55,058
as if you're getting to know someone in real life.

311
00:15:56,894 --> 00:16:00,476
So in addition to not hiding your whole systems,

312
00:16:00,596 --> 00:16:03,058
you might want to look at what kinds of personalities

313
00:16:03,078 --> 00:16:06,680
you're generating, because in games like Crusader Kings II

314
00:16:06,801 --> 00:16:09,543
or others, more extreme personalities

315
00:16:09,643 --> 00:16:10,883
are easier to notice.

316
00:16:11,744 --> 00:16:14,406
When you have subtle traits like irritable,

317
00:16:14,946 --> 00:16:17,448
not only is it harder to see, but it's also

318
00:16:17,568 --> 00:16:19,269
harder for the character to express

319
00:16:19,390 --> 00:16:20,911
through your various gameplay systems.

320
00:16:21,511 --> 00:16:26,974
For example, Roth, it's easy to imagine what a Roth person might do on a battlefield or

321
00:16:27,014 --> 00:16:29,155
in political negotiations, but irritable?

322
00:16:29,455 --> 00:16:31,676
Does that really have a meaningful gameplay impact?

323
00:16:32,016 --> 00:16:32,516
Probably not.

324
00:16:34,077 --> 00:16:38,880
And finally, when you pick traits, even if you're going extreme, extreme passivity might

325
00:16:38,980 --> 00:16:39,980
still be hard to see.

326
00:16:41,539 --> 00:16:44,980
You might notice that in The Sims, it's not just that shyness, for example,

327
00:16:45,380 --> 00:16:47,060
makes someone avoid conversation.

328
00:16:47,761 --> 00:16:50,161
Avoidance is just really hard to see.

329
00:16:50,221 --> 00:16:55,062
So instead, having specific behaviors for each extreme is important.

330
00:16:55,782 --> 00:16:58,263
Even in real life, of course, when people are shy,

331
00:16:58,563 --> 00:17:00,143
they don't actually cover their face

332
00:17:00,644 --> 00:17:03,244
and maybe withdraw awkwardly from every conversation.

333
00:17:03,404 --> 00:17:06,205
But if you don't do that, it just looks like a lack of behavior

334
00:17:06,425 --> 00:17:08,065
rather than an active behavior.

335
00:17:09,622 --> 00:17:12,025
Arguably the most successful personality type

336
00:17:12,126 --> 00:17:14,730
in King of Dragon Pass was the trickster archetype.

337
00:17:15,070 --> 00:17:17,714
And I believe that that's because they clearly stood out

338
00:17:18,195 --> 00:17:20,759
among an otherwise reasonable panel of people.

339
00:17:21,400 --> 00:17:24,505
They were the one that really caught your eye

340
00:17:24,625 --> 00:17:25,166
when you were playing.

341
00:17:26,730 --> 00:17:29,211
In short, it's a risk to hide almost everything

342
00:17:29,291 --> 00:17:31,611
in procedural personalities,

343
00:17:31,651 --> 00:17:33,352
because there's no good reason for players to assume

344
00:17:33,372 --> 00:17:34,492
that there's any complexity there.

345
00:17:35,113 --> 00:17:37,073
Of course, if you go too far in the extreme,

346
00:17:37,253 --> 00:17:38,814
everything becomes a bit silly.

347
00:17:38,834 --> 00:17:41,535
But even if you don't get silly,

348
00:17:41,615 --> 00:17:44,136
players might still be laughing because...

349
00:17:45,076 --> 00:17:45,877
Well, it's natural.

350
00:17:46,537 --> 00:17:48,079
Authored characters have the advantage

351
00:17:48,179 --> 00:17:50,021
of immediately reading as human.

352
00:17:50,501 --> 00:17:52,303
All gameplay systems in authored games

353
00:17:52,343 --> 00:17:55,326
tend to support the notion that this character's personality is

354
00:17:55,566 --> 00:17:57,628
natural and it's expressive.

355
00:17:58,248 --> 00:17:59,770
Whereas in a procedural game.

356
00:18:00,971 --> 00:18:04,012
you tend to have overtly intellectual gameplay.

357
00:18:04,212 --> 00:18:07,795
You tend to be having system-driven gameplay

358
00:18:07,835 --> 00:18:11,297
in which the players are actively exploring the logic,

359
00:18:11,557 --> 00:18:13,618
not leaning back and submissively

360
00:18:14,779 --> 00:18:17,000
suspending their disbelief and becoming immersed.

361
00:18:17,540 --> 00:18:19,581
Your characters are symbols of people

362
00:18:19,822 --> 00:18:20,582
in this kind of gameplay.

363
00:18:20,602 --> 00:18:22,123
They're not real people

364
00:18:22,143 --> 00:18:23,784
and they're not even like authored people.

365
00:18:24,284 --> 00:18:27,186
Exploring procedural systems and the chaos of simulations

366
00:18:27,366 --> 00:18:29,447
is kind of the opposite of immersion.

367
00:18:30,764 --> 00:18:33,466
I mean, even if you do achieve immersion and portray drama,

368
00:18:33,786 --> 00:18:36,447
the player has to internalize all of your systems

369
00:18:36,667 --> 00:18:38,108
in order to reach that point where

370
00:18:38,128 --> 00:18:41,070
they can look past all the numbers and the spectrums

371
00:18:41,110 --> 00:18:44,072
and whatever and see humanity, which takes time.

372
00:18:44,912 --> 00:18:47,033
And during that time, chaos and surprise

373
00:18:47,113 --> 00:18:50,795
is almost guaranteed in system-driven worlds, which

374
00:18:50,835 --> 00:18:52,336
makes comedy even easier.

375
00:18:53,077 --> 00:18:55,058
So when you're designing your player experience,

376
00:18:55,098 --> 00:18:56,819
just keep in mind that things will

377
00:18:56,859 --> 00:18:58,480
be a little bit funny anyway.

378
00:19:00,439 --> 00:19:06,122
A third tip for maximizing your impact of procedural personalities is that if the same

379
00:19:06,222 --> 00:19:11,044
event produces two contrasting reactions in characters, it's much more economical.

380
00:19:11,064 --> 00:19:15,727
You can learn much faster about both characters than if you're relying on each of them acting

381
00:19:15,827 --> 00:19:16,527
independently.

382
00:19:17,608 --> 00:19:22,670
So in this example, if a character dies and one character laughs and the other one cries,

383
00:19:23,051 --> 00:19:26,913
you're learning something about both of them without needing to set two different contexts.

384
00:19:28,007 --> 00:19:30,950
And in fact, as in redshirt, you can more quickly process

385
00:19:31,050 --> 00:19:32,672
a whole crowd of reactions.

386
00:19:32,712 --> 00:19:34,193
If you have a crowd of 10 people,

387
00:19:34,674 --> 00:19:36,756
imagine trying to keep track of each of those 10,

388
00:19:36,876 --> 00:19:38,458
each doing their own separate activity,

389
00:19:38,958 --> 00:19:41,761
versus five of them crying and five of them laughing,

390
00:19:41,901 --> 00:19:44,543
which tells you not only about each one,

391
00:19:44,604 --> 00:19:46,085
but also their relationship to each other.

392
00:19:47,366 --> 00:19:49,387
And finally, I recommend changing

393
00:19:49,427 --> 00:19:51,209
your procedural personalities over time

394
00:19:51,249 --> 00:19:53,370
rather than setting them static at the beginning.

395
00:19:53,790 --> 00:19:54,771
Because people change.

396
00:19:55,272 --> 00:19:55,972
That's natural.

397
00:19:56,112 --> 00:19:57,673
They change for so many different reasons

398
00:19:58,274 --> 00:20:00,855
that players will justify almost any transformation.

399
00:20:00,935 --> 00:20:02,757
We've told them enough kinds of stories.

400
00:20:03,137 --> 00:20:06,159
We're used to seeing people get stronger over adversity,

401
00:20:06,239 --> 00:20:08,581
or weaker in adversity, or getting stranger.

402
00:20:09,662 --> 00:20:12,303
So as long as the player is given a before, a trigger,

403
00:20:12,363 --> 00:20:12,884
and an after.

404
00:20:13,445 --> 00:20:16,394
it's probably enough fuel for them to build their own pattern

405
00:20:16,635 --> 00:20:18,982
of why the change happened and what it means to them.

406
00:20:20,826 --> 00:20:24,068
I just want to take a moment to note that when I reached out to David Dunham, a designer

407
00:20:24,108 --> 00:20:30,071
of King of Dragon Pass, he actually explicitly warned that these risks can be overcome.

408
00:20:30,291 --> 00:20:33,973
And it's true, there have been procedural personalities that have been subtle and dramatic,

409
00:20:34,453 --> 00:20:35,014
and they're great.

410
00:20:36,154 --> 00:20:40,877
But the reason I give these risks is not that they're bad, it's that we want to engage with

411
00:20:40,897 --> 00:20:44,419
these risks intentionally rather than discover them halfway through production.

412
00:20:44,459 --> 00:20:46,019
So I recommend being...

413
00:20:47,740 --> 00:20:52,125
careful with your subtlety and otherwise maximizing the impact of your procedural personalities.

414
00:20:52,525 --> 00:20:52,785
Thank you.

415
00:21:02,601 --> 00:21:10,365
Okay, so I'm Tarn Adams, the co-creator of Dwarf Fortress with my brother, and I'm going

416
00:21:10,405 --> 00:21:15,628
to talk about, I mean, I was invited on an AI procedural generation panel and I came

417
00:21:15,668 --> 00:21:17,209
up with the most naive thing you could do.

418
00:21:17,249 --> 00:21:22,272
I have AIs making stuff, so this is a discussion about that.

419
00:21:23,132 --> 00:21:23,933
So here we have...

420
00:21:25,456 --> 00:21:27,918
just naively, we have procedural generation.

421
00:21:28,439 --> 00:21:30,941
You have some sort of algorithm that's going to make something.

422
00:21:31,362 --> 00:21:32,203
You have an input.

423
00:21:32,283 --> 00:21:33,764
You have a random number generator.

424
00:21:34,665 --> 00:21:38,689
And rarely in practice does it actually turn out that way.

425
00:21:38,769 --> 00:21:40,891
We massage our results.

426
00:21:41,551 --> 00:21:43,233
We add a lot of algorithms.

427
00:21:44,094 --> 00:21:46,116
You can put your sort of personal touch into it.

428
00:21:46,536 --> 00:21:47,577
And it can get out of control.

429
00:21:47,617 --> 00:21:48,938
Sometimes you have to throw things away.

430
00:21:49,579 --> 00:21:51,241
But in the end, you have.

431
00:21:51,721 --> 00:21:55,589
A lot of levers once you've made your final sort of algorithm when you're thinking about

432
00:21:55,669 --> 00:21:57,332
generating any type of content.

433
00:21:57,974 --> 00:22:00,416
And it's great to have all of those levers available,

434
00:22:00,476 --> 00:22:02,958
because when you have an AI making something,

435
00:22:03,418 --> 00:22:06,220
you can just swap in personality traits

436
00:22:06,340 --> 00:22:07,561
for your initial state.

437
00:22:07,621 --> 00:22:10,463
You can bias your random number generation

438
00:22:10,583 --> 00:22:14,466
with these traits to sort of restrict the output

439
00:22:14,646 --> 00:22:18,629
into what could be created by this agent.

440
00:22:19,490 --> 00:22:23,733
You can think in isolation of an agent creating things

441
00:22:23,973 --> 00:22:26,454
as just a restriction of a general algorithm,

442
00:22:26,715 --> 00:22:27,155
although in.

443
00:22:28,137 --> 00:22:30,539
in practice you'll find that they do much more.

444
00:22:31,280 --> 00:22:34,562
What am I talking about here? Making anything really. I mean you could have

445
00:22:34,602 --> 00:22:37,605
simple crafted items you could think of like Diablo type stuff or furniture.

446
00:22:38,417 --> 00:22:43,799
Visual artwork, and you don't need to actually generate very good assets, but

447
00:22:44,499 --> 00:22:47,540
anything really, location maps, stories.

448
00:22:47,580 --> 00:22:51,721
You could think of AI behavior itself as being a result of a procedural

449
00:22:51,741 --> 00:22:54,722
generation algorithm, if you want to be reductive about it.

450
00:22:54,802 --> 00:22:57,762
But really anything, anything you want in this talk.

451
00:22:57,822 --> 00:22:58,823
And they, they think about.

452
00:23:00,244 --> 00:23:03,806
the knowledge of the world, what things have happened,

453
00:23:04,867 --> 00:23:07,228
what sort of locations there are, also their relationships to people.

454
00:23:07,248 --> 00:23:10,449
You can put anything at all, their personal beliefs

455
00:23:10,689 --> 00:23:13,591
into these objects they create,

456
00:23:13,791 --> 00:23:16,912
but coming from Dwarf Fortress, you might think I'm talking about like, generate your

457
00:23:16,933 --> 00:23:20,034
whole world and then you can make a game too, or whatever, right?

458
00:23:20,334 --> 00:23:22,455
That's not what I'm saying here with...

459
00:23:23,015 --> 00:23:26,277
With events, these could be handcrafted.

460
00:23:26,337 --> 00:23:28,277
This could just be one small generator

461
00:23:28,337 --> 00:23:30,218
that exists in a completely handcrafted game.

462
00:23:30,698 --> 00:23:32,059
You just have to systematize things.

463
00:23:32,699 --> 00:23:34,540
So, and specifically with events,

464
00:23:35,520 --> 00:23:36,961
when I'm talking about things that happen,

465
00:23:36,981 --> 00:23:38,381
those could be things that the player does.

466
00:23:38,961 --> 00:23:40,762
We're talking about in-play generation, after all.

467
00:23:41,449 --> 00:23:44,171
and we have the AI agents running around doing things.

468
00:23:44,591 --> 00:23:47,094
But you can take your, if you have an IP or something,

469
00:23:47,134 --> 00:23:48,495
or just some back story that you've written,

470
00:23:48,515 --> 00:23:50,977
you have your books and video logs and so forth,

471
00:23:51,017 --> 00:23:53,879
but along with those, you can create a skeleton,

472
00:23:54,000 --> 00:23:59,024
just a skeleton of what happened in a systematic way,

473
00:23:59,104 --> 00:24:00,785
homogenous with these player events,

474
00:24:00,826 --> 00:24:02,207
so that they can all relate to each other.

475
00:24:02,227 --> 00:24:07,111
You can use the same functions to generate objects.

476
00:24:08,732 --> 00:24:11,715
that tie the player events in with backstory events and so forth.

477
00:24:11,855 --> 00:24:16,138
And you can systematize larger groupings if you want to reduce something down to just,

478
00:24:16,859 --> 00:24:19,942
say, the biography of this person even though it contains many events.

479
00:24:21,338 --> 00:24:27,320
So, more importantly, I guess for things like emergent narrative, you can also take your

480
00:24:27,400 --> 00:24:28,801
outputs and turn them into inputs.

481
00:24:29,201 --> 00:24:30,881
You can think about things that other people have made.

482
00:24:30,921 --> 00:24:32,622
Your agents can think about things that the player made.

483
00:24:33,222 --> 00:24:34,263
They can think about their own stuff.

484
00:24:34,283 --> 00:24:35,563
They can think about other people's stuff.

485
00:24:36,543 --> 00:24:38,264
And so let's do some examples.

486
00:24:39,658 --> 00:24:42,520
So simple example is the player is elected mayor of a city.

487
00:24:43,081 --> 00:24:45,803
You know, this is any game where that could happen.

488
00:24:46,003 --> 00:24:47,084
Someone could make a statue, you know,

489
00:24:47,104 --> 00:24:47,905
a commemorative statue.

490
00:24:47,925 --> 00:24:49,606
It's a very simple AI thing.

491
00:24:49,646 --> 00:24:52,709
You'd need to say that the AI doing this, of course,

492
00:24:52,729 --> 00:24:53,870
this is their profession or something,

493
00:24:53,890 --> 00:24:54,751
they know how to make statues.

494
00:24:55,309 --> 00:24:57,091
but they know that this event happened, they created it.

495
00:24:57,271 --> 00:24:59,253
Or they could try and systemize something,

496
00:24:59,453 --> 00:25:02,335
systematize something a little more personal to them,

497
00:25:02,635 --> 00:25:04,837
like their belief in the value of friendship.

498
00:25:04,937 --> 00:25:05,958
They could write a book about it.

499
00:25:05,998 --> 00:25:08,060
That doesn't mean like generating the text of the book

500
00:25:08,080 --> 00:25:10,082
or anything, they just create this in-game object

501
00:25:10,562 --> 00:25:12,544
that stores data.

502
00:25:13,224 --> 00:25:15,546
This is kind of the, one of the biggest takeaway of the talk

503
00:25:15,586 --> 00:25:17,308
is the more data you store in your objects,

504
00:25:17,348 --> 00:25:19,930
the more little gears you have to bump against each other

505
00:25:20,030 --> 00:25:21,311
to make emergent narrative.

506
00:25:21,331 --> 00:25:23,113
So you actually store the data inside the,

507
00:25:23,793 --> 00:25:25,133
book, and then it can be used.

508
00:25:26,033 --> 00:25:31,994
People, like most naively, could create copies of objects. People would understand that they're making a copy of a

509
00:25:33,115 --> 00:25:39,476
sort of a statue of the player if they're just making knockoffs for some reason. Or they could be reviewing the book.

510
00:25:39,536 --> 00:25:43,056
They can talk about it. They can think about who is the author of this book because that's stored in the book.

511
00:25:43,076 --> 00:25:45,417
They can think about what do I think of the value of friendship?

512
00:25:45,717 --> 00:25:49,738
What do I think of the writing style? Because those things are stored in the book object.

513
00:25:50,767 --> 00:25:52,708
And it also allows you to do exposition.

514
00:25:52,868 --> 00:25:56,729
If you have data in the objects that your agents have made,

515
00:25:57,430 --> 00:26:00,371
then you can speak to other events that have happened.

516
00:26:00,411 --> 00:26:05,013
It's sort of a way to indirectly propagate information

517
00:26:05,053 --> 00:26:06,834
by scattering things around the world.

518
00:26:07,875 --> 00:26:13,197
It's difficult to get the player to suck in this data stream,

519
00:26:13,237 --> 00:26:15,138
right, of there's so many things going on.

520
00:26:15,878 --> 00:26:17,319
It's the exposition problem kind of.

521
00:26:18,383 --> 00:26:21,305
Both of the previous speakers have gone into a little bit.

522
00:26:21,745 --> 00:26:25,047
And this is just carrying a little data in your objects

523
00:26:25,067 --> 00:26:25,527
lets you do that.

524
00:26:25,548 --> 00:26:29,090
It also lets you have reactions to the objects

525
00:26:29,110 --> 00:26:30,811
that make the world seem more alive.

526
00:26:30,851 --> 00:26:33,813
So if someone doesn't like the player,

527
00:26:34,254 --> 00:26:36,235
they can see that the player is related to that object.

528
00:26:36,255 --> 00:26:37,616
They don't need to care about this mayor thing,

529
00:26:37,636 --> 00:26:40,078
but just the fact that that piece of data is in there

530
00:26:40,898 --> 00:26:42,499
allows a reaction.

531
00:26:42,719 --> 00:26:44,701
And the same thing if you don't like the...

532
00:26:45,239 --> 00:26:48,401
value of friendship, you could burn all the books and hunt down the author.

533
00:26:49,783 --> 00:26:55,508
But more subtly, you could just learn the basic existence of that event, so you can

534
00:26:55,548 --> 00:26:58,130
propagate knowledge through these indirect objects.

535
00:26:58,770 --> 00:27:01,293
And you can also change people's minds.

536
00:27:02,013 --> 00:27:04,295
This is, it's kind of the sort of...

537
00:27:07,018 --> 00:27:11,882
I don't know if it's the holy grail of personality, but it's, like Tanya said, changes gold, making

538
00:27:12,222 --> 00:27:16,405
things that actually seem like a character arc, where someone would pick up this book

539
00:27:16,705 --> 00:27:19,307
and learn the value of friendship, finally.

540
00:27:20,488 --> 00:27:21,428
Could be something that happens.

541
00:27:21,468 --> 00:27:25,231
I mean, in Dwarf Fortress, we have people propagating books around and sort of pushing

542
00:27:25,291 --> 00:27:28,473
philosophies one way or another, just like this.

543
00:27:29,834 --> 00:27:32,156
So for the last bit here, we have...

544
00:27:35,751 --> 00:27:36,731
The game, there's the game.

545
00:27:36,751 --> 00:27:38,772
Your player has done things in order, right?

546
00:27:38,792 --> 00:27:40,733
I mean, it's simple, you have these events,

547
00:27:40,813 --> 00:27:43,954
they're systematized, their location,

548
00:27:44,814 --> 00:27:48,295
what the player did, if there was someone else involved.

549
00:27:49,676 --> 00:27:52,476
We also store reasons and circumstances

550
00:27:52,576 --> 00:27:54,097
to the extent that we know them at all,

551
00:27:54,817 --> 00:27:56,738
so that people can think a little more deeply

552
00:27:57,038 --> 00:27:58,278
about the game objects.

553
00:27:59,354 --> 00:28:03,636
And as I said before, you can have your historical objects stored the same way.

554
00:28:04,456 --> 00:28:09,158
This is not necessarily a procedural history, but just if you're doing some kind of comic

555
00:28:09,198 --> 00:28:12,440
book game and you have 20 back issues, you could make a systematized version of them

556
00:28:13,800 --> 00:28:16,882
and be able to refer back to them and have sort of...

557
00:28:18,482 --> 00:28:20,124
content emerge from that.

558
00:28:21,405 --> 00:28:25,449
The same goes with future events can be stored the same way.

559
00:28:25,469 --> 00:28:28,652
So you have some kind of psychic prediction or prophecy that's supposed to be met.

560
00:28:29,393 --> 00:28:34,117
And then when the AI crafters come along thinking about these things, they can start to

561
00:28:35,118 --> 00:28:36,719
do stuff that's

562
00:28:37,660 --> 00:28:42,285
almost literary, right, at this point. I mean, it's not going to be high art or anything.

563
00:28:42,648 --> 00:28:45,071
But you can start to draw allusions to past events,

564
00:28:45,611 --> 00:28:48,493
and you can start to use literary tools,

565
00:28:48,554 --> 00:28:51,696
like substituting, say, the player,

566
00:28:51,736 --> 00:28:53,958
whatever happened there to the poor red thing

567
00:28:54,018 --> 00:28:55,780
that didn't seem to make it to the end of the game,

568
00:28:56,720 --> 00:28:57,561
in event B.

569
00:28:58,442 --> 00:29:00,524
Could be something similar that happened in history,

570
00:29:00,724 --> 00:29:02,305
and then when someone makes a statue,

571
00:29:02,646 --> 00:29:05,048
they could sub out the antagonist

572
00:29:05,108 --> 00:29:06,509
with the antagonist from the past,

573
00:29:06,549 --> 00:29:07,289
but show the player.

574
00:29:08,288 --> 00:29:13,610
the player defeating the antagonist from the past, and then the exposition, they'd kind

575
00:29:13,650 --> 00:29:18,772
of either explain what they did, or at least what they were getting at, so the player doesn't

576
00:29:18,792 --> 00:29:23,193
have to guess that these things have these values, they can just be told about them.

577
00:29:24,234 --> 00:29:28,015
Unless, I mean, there's something to be said for not telling them everything.

578
00:29:29,376 --> 00:29:31,736
In any case, we have finally...

579
00:29:33,030 --> 00:29:38,356
you can introduce your conceptual objects into this sort of thinking.

580
00:29:38,476 --> 00:29:44,723
So in Dwarf Fortress, we have, say, 40 intellectual values

581
00:29:44,983 --> 00:29:49,809
that people have in different degrees numerically.

582
00:29:50,549 --> 00:29:52,171
And you could give.

583
00:29:53,312 --> 00:29:57,394
the basic events, like this, say, this reconciliation that maybe happened at the end here,

584
00:29:58,095 --> 00:30:00,496
could have friendship tagged with that simple event.

585
00:30:00,556 --> 00:30:03,697
Just a simple table of events linked to conceptual types.

586
00:30:04,298 --> 00:30:06,119
And that's, I mean, it's basically a symbol, right?

587
00:30:06,159 --> 00:30:10,541
So we have this book of friendship, then, doesn't need to have text.

588
00:30:10,601 --> 00:30:16,944
It could just have a simple set of friendship-related events that the person wrote about the player.

589
00:30:18,016 --> 00:30:26,463
and they just need to describe them somewhere, say that the player was involved, and somehow

590
00:30:26,523 --> 00:30:30,687
involve the, in the exposition, say that the symbol of friendship was involved, and that's

591
00:30:30,747 --> 00:30:31,627
an allegory, right?

592
00:30:31,707 --> 00:30:38,573
So you can do any sort of artistic literary type you can think of.

593
00:30:39,234 --> 00:30:40,997
can be involved with fairly simple systems.

594
00:30:41,037 --> 00:30:43,882
I mean, there's not too many objects here,

595
00:30:44,423 --> 00:30:46,607
but you just, kind of what it says on the tin

596
00:30:46,647 --> 00:30:48,730
when you go to Wikipedia and read about allegory, right?

597
00:30:50,580 --> 00:30:56,625
some just simple concepts that you link together to produce these things.

598
00:30:57,546 --> 00:31:00,348
And you don't have to produce the text, right?

599
00:31:00,368 --> 00:31:01,729
I mean, that's the thing.

600
00:31:01,749 --> 00:31:06,753
You just need to produce a description, allow the person to say what's going on, and then

601
00:31:06,873 --> 00:31:08,895
allow people to react to it and be changed.

602
00:31:09,095 --> 00:31:10,436
So this book of friendship...

603
00:31:11,137 --> 00:31:15,059
might actually describe events of this, these fictional events that the player didn't actually do

604
00:31:15,720 --> 00:31:19,902
and then someone could come up to you and thank you for teaching them about the value of friendship

605
00:31:19,942 --> 00:31:21,904
and you wouldn't know what was going on until you found the book.

606
00:31:22,944 --> 00:31:24,125
So, yeah, that's it. Thanks.

607
00:31:25,566 --> 00:31:25,746
APPLAUSE

608
00:31:34,472 --> 00:31:38,034
All right, who here likes math? It's about to get really gritty, so buckle up.

609
00:31:39,354 --> 00:31:42,476
My name is Zach Aikman. I'm the technical director at 17-Bit.

610
00:31:42,976 --> 00:31:46,998
If you haven't heard of us, 17-Bit is a medium-sized indie studio based in Kyoto, Japan,

611
00:31:47,418 --> 00:31:48,738
with a satellite office in Seattle.

612
00:31:49,399 --> 00:31:52,240
Our first game was a turn-based strategy game called Skulls of the Shogun.

613
00:31:53,140 --> 00:31:57,342
But more recently, we released a 2D space shooter called Galaxy on PlayStation 4 and PC,

614
00:31:57,462 --> 00:32:01,164
and right now we're working on adapting that game into a mobile version to be released later this year.

615
00:32:02,104 --> 00:32:05,368
As lead engineer on Galaxy, I was responsible for developing a number of different systems,

616
00:32:05,428 --> 00:32:08,552
but the one that I had the most fun with, and the one that I'm going to be talking about today,

617
00:32:08,612 --> 00:32:10,555
was the system for generating procedural levels.

618
00:32:11,296 --> 00:32:15,661
We made the decision halfway through development to switch from handcrafted dungeons to procedural

619
00:32:15,681 --> 00:32:20,126
content to put more of an emphasis on the parts of the game that really shined, namely combat.

620
00:32:21,553 --> 00:32:23,434
And so just to help put this talk in context,

621
00:32:24,034 --> 00:32:25,575
here's a top-down view of a level

622
00:32:25,735 --> 00:32:27,456
in Galaxy's early prototyping days.

623
00:32:28,036 --> 00:32:29,597
All the rocks, camera boundaries,

624
00:32:29,697 --> 00:32:31,497
the decorative objects, enemy squads,

625
00:32:31,818 --> 00:32:32,998
all that stuff was hand-placed.

626
00:32:33,538 --> 00:32:35,179
And we realized that this was not gonna be

627
00:32:35,219 --> 00:32:37,580
a feasible approach for generating a lot of content

628
00:32:37,600 --> 00:32:38,421
with a team of our size.

629
00:32:39,760 --> 00:32:43,643
And in this animated GIF of how levels were being built procedurally near the end of the project,

630
00:32:44,984 --> 00:32:48,467
explaining everything that goes into this would be pretty exhaustive talk,

631
00:32:48,888 --> 00:32:51,750
not one that we have time for today, but I want to touch on some of the main points

632
00:32:52,210 --> 00:32:53,491
and the takeaways that we learned from them.

633
00:32:55,900 --> 00:32:59,243
I'm going to go out on a limb and assume that most of you are somewhat familiar, or at least

634
00:32:59,724 --> 00:33:04,228
vaguely familiar, with cellular automata, popularized by Conway's Game of Life.

635
00:33:05,229 --> 00:33:09,373
Using a simple set of rules that gets iteratively applied to each cell based on the state of

636
00:33:09,413 --> 00:33:13,117
its neighbors, you can generate incredibly complex, self-sustaining patterns.

637
00:33:13,777 --> 00:33:18,342
Here we see two examples of cellular automata, one very simple and one very complex.

638
00:33:20,654 --> 00:33:23,676
But with the right rule set, cellular automata can also be used to generate

639
00:33:24,256 --> 00:33:25,957
very organic looking cave-like structures.

640
00:33:26,497 --> 00:33:28,998
As soon as I saw this image I knew that cellular automata

641
00:33:29,358 --> 00:33:32,159
were going to be used in Galaxy's Dungeon duration in some form.

642
00:33:32,880 --> 00:33:35,861
But obviously there's more to building levels than just generating geometry.

643
00:33:36,301 --> 00:33:39,403
A cavern of this size would pose serious problems when it comes to placing

644
00:33:39,443 --> 00:33:40,083
points of interest

645
00:33:40,483 --> 00:33:41,724
and guiding the player through the level.

646
00:33:42,724 --> 00:33:46,406
So instead we opted to use cellular automata to generate chunks of a level

647
00:33:46,466 --> 00:33:48,707
and then stitch those together into a contiguous path.

648
00:33:49,562 --> 00:33:54,427
This first animation shows a room-sized automata being refined from its initial seed into the

649
00:33:54,467 --> 00:33:56,690
cave-like structure over the course of several iterations.

650
00:33:57,330 --> 00:34:01,034
And the second animation shows how we were able to control the spaciousness of a room

651
00:34:01,475 --> 00:34:05,078
by simply seeding the starting pattern with more or less living cells.

652
00:34:07,367 --> 00:34:09,969
So in the end, we wound up using cellular automata patterns

653
00:34:10,049 --> 00:34:11,570
as a basis for room creation.

654
00:34:12,791 --> 00:34:14,472
The generated rooms were then overlaid

655
00:34:14,492 --> 00:34:16,254
with additional layers of metadata

656
00:34:16,354 --> 00:34:17,495
using a custom tool that we built.

657
00:34:18,195 --> 00:34:19,516
Designers could place spawn points,

658
00:34:19,817 --> 00:34:22,639
squad patrol routes, deco and lighting data, et cetera,

659
00:34:22,679 --> 00:34:24,881
to be applied to the cavern after it was generated.

660
00:34:27,222 --> 00:34:29,544
And initially, we tried storing the seeds for the automata

661
00:34:29,584 --> 00:34:30,945
and generating the caverns at runtime.

662
00:34:31,586 --> 00:34:33,047
It seemed like the most cost-effective way

663
00:34:33,087 --> 00:34:34,348
of storing a whole lot of room data

664
00:34:34,388 --> 00:34:35,749
with just a handful of seed values.

665
00:34:36,757 --> 00:34:39,560
But this turned out to be an inefficient and unnecessary step.

666
00:34:40,140 --> 00:34:42,722
What we gained in storage space we lost in processing time,

667
00:34:42,802 --> 00:34:44,664
because it can be kind of expensive to run, you know,

668
00:34:44,704 --> 00:34:48,887
ten iterations in every single room on a grid that's, you know,

669
00:34:48,928 --> 00:34:49,028
64 by 64.

670
00:34:49,488 --> 00:34:50,329
It really starts to add up.

671
00:34:51,029 --> 00:34:53,611
So a better approach was to instead store a run length

672
00:34:53,671 --> 00:34:55,533
encoded version of the generated pattern.

673
00:34:56,354 --> 00:34:57,855
Run length encoding is especially efficient

674
00:34:57,895 --> 00:35:00,677
at storing exactly these types of images, which have little

675
00:35:00,697 --> 00:35:02,659
to no variation in the interior of the cell.

676
00:35:04,418 --> 00:35:05,739
So once we had these cavern cells,

677
00:35:05,780 --> 00:35:07,341
we still needed a way to stitch them together

678
00:35:07,401 --> 00:35:08,403
into a cohesive level.

679
00:35:09,124 --> 00:35:10,565
And we knew that we wanted levels to occupy

680
00:35:10,585 --> 00:35:12,387
a certain amount of rectangular space in the game.

681
00:35:13,188 --> 00:35:14,770
And we also had to fix the cell size

682
00:35:14,810 --> 00:35:16,232
that worked well for the amount of content

683
00:35:16,272 --> 00:35:17,974
that we were trying to place inside of each room.

684
00:35:19,007 --> 00:35:20,828
And furthermore, the cellular automata chunks

685
00:35:20,888 --> 00:35:23,309
had been engineered to accommodate orthogonal exits

686
00:35:23,489 --> 00:35:24,629
for north, east, south, and west,

687
00:35:24,989 --> 00:35:26,410
and we didn't want to deal with diagonal exits

688
00:35:26,550 --> 00:35:29,671
or some sort of hexagonal connections between cells.

689
00:35:30,571 --> 00:35:32,632
So we experimented with a number of different approaches

690
00:35:32,732 --> 00:35:34,373
for building level layouts within a fixed region,

691
00:35:34,533 --> 00:35:37,054
including BSP trees, minimum spanning trees,

692
00:35:37,094 --> 00:35:38,354
and other well-known algorithms.

693
00:35:38,934 --> 00:35:41,397
that you'll use a lot in Proc Gen stuff.

694
00:35:41,897 --> 00:35:42,838
But nothing really seemed to fit

695
00:35:42,878 --> 00:35:43,979
with our unique constraints,

696
00:35:44,179 --> 00:35:46,862
so I attempted a slightly less orthodox solution

697
00:35:46,922 --> 00:35:49,184
that doesn't exist in the Proc Gen toolkit.

698
00:35:50,325 --> 00:35:52,227
My coworker has suggested Z-order curves

699
00:35:52,287 --> 00:35:54,309
as a potential solution for connecting

700
00:35:54,369 --> 00:35:56,031
the interior rooms of a generated dungeon.

701
00:35:56,671 --> 00:35:58,591
And zero-order curves are functions that map

702
00:35:58,791 --> 00:36:00,692
multi-dimensional data to one dimension

703
00:36:01,112 --> 00:36:03,172
while preserving the locality of those data points.

704
00:36:03,692 --> 00:36:05,493
So as you trace through that curve,

705
00:36:06,353 --> 00:36:09,374
all the rooms that it connects are nearby each other,

706
00:36:09,754 --> 00:36:12,234
but you can sort of walk the path using a single index

707
00:36:12,274 --> 00:36:13,874
instead of worrying about two-dimensional coordinates.

708
00:36:14,755 --> 00:36:16,575
But they're also recursive, as you can see in this image.

709
00:36:16,635 --> 00:36:19,395
The higher-order curves are composed of lower-order curves,

710
00:36:19,736 --> 00:36:21,456
which makes them scalable to grids of any size.

711
00:36:22,965 --> 00:36:25,066
And zero to curves were too jaggy for our use,

712
00:36:25,787 --> 00:36:27,248
but being clued into their existence

713
00:36:27,288 --> 00:36:29,130
led me to find another kind of space filling curve

714
00:36:29,530 --> 00:36:31,311
that was much more amenable to our constraint

715
00:36:31,411 --> 00:36:32,873
of connecting rooms orthogonally.

716
00:36:33,633 --> 00:36:36,255
Hilbert curves maintain the mapping of 2D to 1D space

717
00:36:36,275 --> 00:36:38,457
that we were after, but do so orthogonally,

718
00:36:38,617 --> 00:36:40,539
allowing us to connect rooms with north, south,

719
00:36:40,799 --> 00:36:41,640
east, and west exits.

720
00:36:43,221 --> 00:36:45,903
So imagining that we want to fill a four by four grid

721
00:36:45,923 --> 00:36:47,825
with dungeon cells, this is a Hilbert curve

722
00:36:47,865 --> 00:36:48,445
that could be used.

723
00:36:49,249 --> 00:36:51,711
The h value represents the distance along the path

724
00:36:51,911 --> 00:36:53,833
starting in the top left and ending at the top right.

725
00:36:53,853 --> 00:36:56,055
And then that can be used to control things

726
00:36:56,095 --> 00:36:56,915
like difficulty ramps,

727
00:36:57,136 --> 00:36:59,057
the probability of finding treasure within a room,

728
00:36:59,117 --> 00:37:01,440
you can increase that probability as the h value goes up,

729
00:37:02,260 --> 00:37:03,121
all sorts of things like that.

730
00:37:03,601 --> 00:37:05,924
And the math for converting Hilbert curve indices

731
00:37:05,964 --> 00:37:08,426
into 2D coordinates is extremely simple and pretty fast,

732
00:37:08,566 --> 00:37:10,087
which means that you can use them interchangeably

733
00:37:10,688 --> 00:37:11,088
very easily.

734
00:37:12,150 --> 00:37:15,751
But the most glaring problem with this approach is that all Hilbert curves look the same.

735
00:37:16,331 --> 00:37:20,232
Even if you rotate the curve, players are going to pick up on the pattern after just

736
00:37:20,272 --> 00:37:20,832
a few playthroughs.

737
00:37:21,632 --> 00:37:25,994
So our solution to the problem was to generate a higher order Hilbert curve than was actually

738
00:37:26,034 --> 00:37:28,895
needed and then use a sampling kernel of the desired size.

739
00:37:29,375 --> 00:37:33,936
So by sliding this kernel around and sampling the path, you can get different layouts from

740
00:37:33,996 --> 00:37:35,396
the more complex Hilbert curve.

741
00:37:36,317 --> 00:37:37,719
This really couldn't have worked out better for us.

742
00:37:37,860 --> 00:37:40,063
It was kind of the perfect approach that we stumbled upon.

743
00:37:40,724 --> 00:37:42,247
The higher order curves contain more detail

744
00:37:42,287 --> 00:37:43,249
and thus more variety.

745
00:37:43,609 --> 00:37:44,611
And if you rotate the curve,

746
00:37:44,651 --> 00:37:46,414
you can get even more combinations of paths.

747
00:37:48,395 --> 00:37:50,838
So using Hilbert Curves was a non-traditional approach

748
00:37:50,858 --> 00:37:51,999
that worked out better than we expected.

749
00:37:52,540 --> 00:37:54,001
I'd never even heard of Hilbert Curves

750
00:37:54,062 --> 00:37:55,623
being used in game development before,

751
00:37:55,643 --> 00:37:57,725
and it was really gratifying to try to implement

752
00:37:57,745 --> 00:37:59,267
a technique that I'd never seen used elsewhere

753
00:37:59,347 --> 00:38:00,288
and have it actually work.

754
00:38:01,129 --> 00:38:02,731
And I've talked about Hilbert Curves

755
00:38:02,871 --> 00:38:04,152
in other settings like GDC,

756
00:38:04,533 --> 00:38:06,195
which has led to two other games utilizing them

757
00:38:06,235 --> 00:38:07,316
for their own level building needs.

758
00:38:07,856 --> 00:38:09,978
and seeing someone else implement your algorithm

759
00:38:10,018 --> 00:38:11,560
is not only really rewarding as a developer,

760
00:38:11,600 --> 00:38:13,222
but it also leads to incremental improvements,

761
00:38:13,282 --> 00:38:15,043
which you can then fold back into your own project.

762
00:38:16,105 --> 00:38:18,227
Hilbert curves are definitely not a perfect solution,

763
00:38:18,327 --> 00:38:20,169
nor are they even a good solution for most games,

764
00:38:20,589 --> 00:38:21,730
but they fit our needs really well.

765
00:38:23,340 --> 00:38:25,242
So I wanna shift a little bit from level generation

766
00:38:25,262 --> 00:38:27,023
to talk about how we made the enemy units

767
00:38:27,143 --> 00:38:28,424
in Galaxy feel more alive.

768
00:38:29,324 --> 00:38:30,765
This is funny, because I'm gonna touch on something

769
00:38:30,785 --> 00:38:34,247
that Me Too mentioned in her talk, serendipitously, I guess.

770
00:38:34,988 --> 00:38:36,749
So frequently during combat, enemies will fire off

771
00:38:36,769 --> 00:38:39,050
little quips and exclamations, things like,

772
00:38:39,451 --> 00:38:40,751
I see him when they spot the player,

773
00:38:40,992 --> 00:38:43,133
or help, I'm under attack if they need backup.

774
00:38:43,553 --> 00:38:44,994
And we call these interjections barks.

775
00:38:46,234 --> 00:38:48,435
But getting these barks to sound organic and non-repetitive

776
00:38:48,455 --> 00:38:49,696
was a really interesting challenge,

777
00:38:50,276 --> 00:38:52,877
one that we solved by looking to Valve's Left 4 Dead series.

778
00:38:53,917 --> 00:38:56,958
So Alon Ruskin at Valve gave a fantastic presentation

779
00:38:56,998 --> 00:38:59,960
at GDC 2012 about the contextual dialogue system

780
00:39:00,040 --> 00:39:01,340
that they built for Left 4 Dead series.

781
00:39:02,160 --> 00:39:04,321
I'm not going to rehash the entire talk,

782
00:39:04,741 --> 00:39:06,882
but I can't recommend it highly enough.

783
00:39:06,942 --> 00:39:08,563
It's a really interesting, really detailed,

784
00:39:08,923 --> 00:39:10,904
and very easy to follow explanation

785
00:39:10,924 --> 00:39:12,484
of how they laid out their dialogue system.

786
00:39:13,385 --> 00:39:19,429
But the gist of the approach is that your engine maintains a global state of world facts that are constantly updated as the game state changes.

787
00:39:20,249 --> 00:39:26,453
Facts are really nothing more than key value pairs that track things like how many enemies have been killed or how long has the session been active.

788
00:39:27,814 --> 00:39:32,477
Additionally, many other local states are stored containing facts unique to a particular entity in your game.

789
00:39:33,097 --> 00:39:36,740
For the player, this might include things like how many bullets are left or how much damage has been taken.

790
00:39:38,221 --> 00:39:40,702
And your writers will then author all dialogue triggers

791
00:39:40,902 --> 00:39:42,463
as piles of rules or queries.

792
00:39:43,023 --> 00:39:44,344
And these rules can be as specific

793
00:39:44,464 --> 00:39:45,745
or as generic as you'd like.

794
00:39:46,745 --> 00:39:48,586
For example, if the level has been active

795
00:39:48,606 --> 00:39:49,407
for more than five minutes

796
00:39:49,647 --> 00:39:50,968
and the player has less than five health

797
00:39:51,388 --> 00:39:52,869
and an upgrade item is nearby,

798
00:39:53,269 --> 00:39:55,230
then play the dialogue line just in time.

799
00:39:56,050 --> 00:39:57,671
And the contextual system will always try

800
00:39:57,691 --> 00:40:00,052
to find the query with the most number of rules matched,

801
00:40:00,152 --> 00:40:01,253
which allows you to write dialogue

802
00:40:01,273 --> 00:40:03,954
that's as specific or as generic as you need it to be.

803
00:40:04,935 --> 00:40:09,458
Alon goes into much more detail in his talk on how to best store these facts and rules

804
00:40:09,518 --> 00:40:12,960
and how to optimize your query functions and other interesting topics like that that really

805
00:40:13,000 --> 00:40:13,961
matter about the implementation.

806
00:40:14,661 --> 00:40:17,824
So again, I'd encourage you to check out his talk or his slides if you're interested in

807
00:40:17,864 --> 00:40:18,384
those details.

808
00:40:20,009 --> 00:40:21,649
But despite the versatility of this approach,

809
00:40:21,889 --> 00:40:23,629
our implementation suffered from a few problems

810
00:40:23,649 --> 00:40:25,310
that I wish we had been better about addressing,

811
00:40:25,330 --> 00:40:27,230
and I'm hoping I can pass on some of those lessons to you.

812
00:40:28,231 --> 00:40:30,371
One is that the sheer number of rules and facts

813
00:40:30,431 --> 00:40:31,431
that you can generate can lead

814
00:40:31,451 --> 00:40:32,912
to an overwhelming amount of content.

815
00:40:33,552 --> 00:40:34,532
I think in Left 4 Dead 2,

816
00:40:34,572 --> 00:40:36,473
they said they had 10,000 lines of dialogue,

817
00:40:36,933 --> 00:40:39,793
which is no small amount of content to manage.

818
00:40:40,134 --> 00:40:41,854
And for a large team with a dedicated writer

819
00:40:41,894 --> 00:40:43,714
who's regularly working in your tools

820
00:40:43,754 --> 00:40:45,115
and is really involved in the project,

821
00:40:45,495 --> 00:40:46,335
it may not be an issue.

822
00:40:46,635 --> 00:40:47,615
But for a small team like us,

823
00:40:47,775 --> 00:40:49,336
it was more of a burden than it was worth.

824
00:40:51,487 --> 00:40:54,009
We also neglected to write an adequate system

825
00:40:54,049 --> 00:40:55,470
for bug testing rule queries.

826
00:40:56,151 --> 00:40:58,033
Many of those queries can grow to be really complex,

827
00:40:58,513 --> 00:40:59,734
and if you don't have a system in place

828
00:40:59,774 --> 00:41:01,436
that allows you to easily manipulate

829
00:41:01,856 --> 00:41:04,258
the world or entity fact state tables,

830
00:41:04,339 --> 00:41:05,760
it becomes a really tedious process

831
00:41:06,080 --> 00:41:08,142
to try and track down errant lines of dialogue.

832
00:41:09,437 --> 00:41:11,437
and this was the one that hurt us the worst, I think.

833
00:41:11,477 --> 00:41:13,378
We had a really bad content pipeline.

834
00:41:14,218 --> 00:41:16,259
Due to the way that certain game data in Galaxy

835
00:41:16,279 --> 00:41:18,620
was edited and stored, we had barks defined

836
00:41:18,660 --> 00:41:21,361
in both Excel spreadsheets and Google Drive spreadsheets.

837
00:41:21,801 --> 00:41:23,482
And rebuilding the barks data consisted of

838
00:41:23,742 --> 00:41:25,183
downloading the Google Drive spreadsheets

839
00:41:25,283 --> 00:41:28,084
and running an access database merge on multiple sheets.

840
00:41:28,924 --> 00:41:32,207
To make matters worse, the merge was handled by a Unity tool which relied on a certain

841
00:41:32,307 --> 00:41:36,371
access plugin that only ran on the 32-bit version of Unity and certain versions of Access,

842
00:41:36,791 --> 00:41:40,554
and it was an extremely brittle pipeline that could have broken at any point in time when

843
00:41:40,574 --> 00:41:41,815
we upgraded Unity or Access.

844
00:41:42,376 --> 00:41:45,619
Thankfully, it did not, and we made it through the project, but it's not something that I

845
00:41:45,639 --> 00:41:46,099
would do again.

846
00:41:48,061 --> 00:41:48,761
Thank you for listening.

847
00:41:48,801 --> 00:41:49,302
That's it for me.

848
00:41:49,322 --> 00:41:51,844
If you have any questions, shoot me an email or app the panel.

849
00:41:51,864 --> 00:41:52,325
Come grab me.

850
00:41:52,345 --> 00:41:52,585
Thanks.

851
00:41:52,805 --> 00:41:52,965
Bye.

852
00:41:57,991 --> 00:42:03,156
We've got the clicker on the top.

853
00:42:03,216 --> 00:42:03,316
Cool.

854
00:42:03,336 --> 00:42:05,438
Hey everybody, my name is Luis Krul.

855
00:42:05,678 --> 00:42:07,600
I'm a senior technical artist over at SetFX.

856
00:42:08,341 --> 00:42:09,522
We make a software called Houdini.

857
00:42:10,143 --> 00:42:12,805
And this is a pet project of mine that I'm going to be sharing in a little bit.

858
00:42:12,905 --> 00:42:16,609
So I was in game development for about ten years before joining software development.

859
00:42:17,189 --> 00:42:19,111
And I still have that itch to make games.

860
00:42:19,271 --> 00:42:22,174
So this is my kind of little love child.

861
00:42:23,377 --> 00:42:27,939
So this talk is about me and then I have a little bit of content from Antonio Liappis

862
00:42:28,459 --> 00:42:31,961
that is over at University of Malta and I'm going to talk a little bit about how we met

863
00:42:32,161 --> 00:42:34,402
and basically how that relationship evolved.

864
00:42:35,600 --> 00:42:38,884
So what we have is a little project that I came up with

865
00:42:38,964 --> 00:42:41,507
where I want a procedurally generated first person shooter

866
00:42:41,527 --> 00:42:45,551
at triple A quality and this is part of my other talk

867
00:42:45,752 --> 00:42:48,154
later today on the AI crackpot so you can see

868
00:42:48,214 --> 00:42:49,876
how weird and awful it is.

869
00:42:49,916 --> 00:42:51,838
But this is the kind of first steps towards that

870
00:42:51,958 --> 00:42:54,481
and I wanted to show kind of where we are in the process

871
00:42:54,601 --> 00:42:57,444
and I think we're gonna get really close to the realization.

872
00:42:57,805 --> 00:43:00,026
So we have a small team, we wanna be building

873
00:43:00,066 --> 00:43:02,468
triple A content, and we wanna basically have

874
00:43:02,528 --> 00:43:04,429
as much proceduralism and as humanly possible,

875
00:43:04,949 --> 00:43:07,190
and it needs to be a multiplayer competitive FPS.

876
00:43:08,051 --> 00:43:09,712
And we worked in, like the team,

877
00:43:10,092 --> 00:43:12,113
everybody has kind of that frame of mind

878
00:43:12,153 --> 00:43:13,354
and that experience, so that's why,

879
00:43:13,854 --> 00:43:15,956
if we're gonna put proceduralism into some game,

880
00:43:16,436 --> 00:43:18,037
that's the kind of, that's our jam,

881
00:43:18,077 --> 00:43:19,458
so it's like, that's our muscle memory

882
00:43:19,478 --> 00:43:20,358
and that's what we know how to do.

883
00:43:21,614 --> 00:43:25,937
Um, so the way I like to think about proceduralism and AI is like in TechCart,

884
00:43:25,957 --> 00:43:30,139
we have proceduralism as this little black box of inputs that basically the

885
00:43:30,199 --> 00:43:33,281
artists will drive and they'll, they'll kind of draw little volumes and everything.

886
00:43:33,581 --> 00:43:37,283
But if you shove AI into that, now we basically have something that can just

887
00:43:37,443 --> 00:43:39,385
pump out content really, really, really fast.

888
00:43:39,405 --> 00:43:41,106
So that's where we want to get to.

889
00:43:41,126 --> 00:43:47,889
Um, so I started to think about this project and then I went to, uh.

890
00:43:48,801 --> 00:43:51,702
a conference. There's like a ton of academics and they're all talking about procedurally

891
00:43:51,742 --> 00:43:54,764
generated and all these cool ideas. And I was like, let me just shoot a blind email

892
00:43:54,844 --> 00:43:58,866
out into the ether and then see what shakes out. So I basically shot out to procedurally

893
00:43:58,906 --> 00:44:02,748
generated Google groups and was like, hey man, we can run this project. Anyone interested

894
00:44:02,768 --> 00:44:06,430
in helping me out? This is what I'm kind of going for. And then Antonio actually came

895
00:44:06,470 --> 00:44:09,511
back and he was like, hey, I have this thing called the sentient sketchbook and we can

896
00:44:09,531 --> 00:44:15,014
just make maps. And then it's a web-based API and then it basically just starts by randomly

897
00:44:15,054 --> 00:44:15,374
basing.

898
00:44:16,975 --> 00:44:21,679
nodes around and then continuously evolving based on constraints and all of that is kind of data driven

899
00:44:22,119 --> 00:44:26,223
and it works really well. So I started kind of playing with it a little bit and seeing what how

900
00:44:26,243 --> 00:44:31,967
far I could get to it. And so here's a little bit of the the kind of process to where you have like

901
00:44:31,987 --> 00:44:36,571
the random initial seed and then you kind of start evolving based on rules and constraints that I

902
00:44:36,591 --> 00:44:42,616
define as an artist. The web API had a little bit of less what than what we needed so he was just

903
00:44:42,676 --> 00:44:45,278
super nice and was like tell me what you need because I was like he.

904
00:44:46,159 --> 00:44:48,840
kind of craved that actual AAA side of things,

905
00:44:48,880 --> 00:44:51,080
and he was like, I want to see this academic stuff

906
00:44:51,100 --> 00:44:53,521
being used in context, and I wanted to use academic,

907
00:44:53,541 --> 00:44:54,521
so we kind of met in the middle,

908
00:44:54,581 --> 00:44:55,661
and he actually started giving me

909
00:44:55,702 --> 00:44:58,402
kind of custom executables that I could use.

910
00:44:58,722 --> 00:44:59,903
And we made some modifications,

911
00:44:59,923 --> 00:45:01,923
so the first one is the ability to have second floors

912
00:45:02,683 --> 00:45:04,684
to our maps, which is kind of something unique

913
00:45:04,784 --> 00:45:06,624
in procedural content generation.

914
00:45:07,685 --> 00:45:09,705
He gave us something I'm gonna talk a little bit about

915
00:45:09,745 --> 00:45:11,766
later, which is like further evaluation of the data,

916
00:45:11,786 --> 00:45:13,586
so I can tell where choke points are,

917
00:45:13,646 --> 00:45:15,226
where dead ends are, where cross ends are.

918
00:45:16,187 --> 00:45:18,228
and then being able to lock down the entrances,

919
00:45:18,268 --> 00:45:20,109
which is really crucial for me,

920
00:45:20,349 --> 00:45:21,810
and I'm gonna talk a little bit about that later.

921
00:45:22,210 --> 00:45:23,411
And then just being able to,

922
00:45:23,491 --> 00:45:24,952
like procedural systems tend to,

923
00:45:25,432 --> 00:45:26,833
and he talked a little bit about it,

924
00:45:26,993 --> 00:45:29,115
where you just, the walls kinda creep in

925
00:45:29,155 --> 00:45:31,016
and it'll try to fill up as much space as possible

926
00:45:31,036 --> 00:45:31,836
and it's very maze-like,

927
00:45:31,876 --> 00:45:33,077
so that's the opposite of what you want

928
00:45:33,097 --> 00:45:33,917
on a first-person shooter.

929
00:45:33,937 --> 00:45:35,278
You want these big, nice, open areas

930
00:45:35,318 --> 00:45:37,299
that you can kinda run around and kinda connect together.

931
00:45:38,140 --> 00:45:39,961
So he basically added another constraint,

932
00:45:40,021 --> 00:45:41,362
which is I can control the degree

933
00:45:41,462 --> 00:45:42,903
of how many walls get placed.

934
00:45:44,160 --> 00:45:46,100
So the output data that I get from the system

935
00:45:46,200 --> 00:45:48,881
is ASCII so much like the Dwarf Fortress stuff.

936
00:45:49,281 --> 00:45:52,322
So basically we have a little text

937
00:45:52,502 --> 00:45:54,403
that is E is for entrances,

938
00:45:54,483 --> 00:45:57,044
I get basically stairs or jump pads in my case,

939
00:45:57,444 --> 00:45:58,964
and then spawn points, weapons,

940
00:45:59,224 --> 00:46:00,905
I can specify a lot of things

941
00:46:01,545 --> 00:46:03,266
on basically where I want things to spawn

942
00:46:03,306 --> 00:46:05,806
and how many of each I get.

943
00:46:07,114 --> 00:46:10,035
So that basically I have a little Java wrapper,

944
00:46:10,055 --> 00:46:11,916
I have a Python wrapper to a Java executable

945
00:46:12,216 --> 00:46:13,977
that just have a bunch of parameters I can create.

946
00:46:14,017 --> 00:46:15,798
Ideally we can kind of extrapolate this up

947
00:46:15,838 --> 00:46:18,200
and then make more rules and kind of build this out.

948
00:46:18,580 --> 00:46:20,661
And then basically I can just make as many maps

949
00:46:20,741 --> 00:46:21,322
as I want to.

950
00:46:22,182 --> 00:46:25,424
And yeah, the additional output data is.

951
00:46:26,877 --> 00:46:28,598
I have the original map and then he can also,

952
00:46:28,798 --> 00:46:32,061
as well with the maps, I can get choke points,

953
00:46:32,081 --> 00:46:32,962
dead ends, and crossroads.

954
00:46:32,982 --> 00:46:35,104
I'm not using this currently, but for like,

955
00:46:35,264 --> 00:46:37,526
as you people want to kind of start using this,

956
00:46:37,546 --> 00:46:38,887
this is super kind of crucial data

957
00:46:39,888 --> 00:46:40,788
that you might be able to use.

958
00:46:42,192 --> 00:46:43,293
So making sense of the data.

959
00:46:43,333 --> 00:46:45,676
So first, like the ASCII stuff is really hard to read.

960
00:46:45,696 --> 00:46:48,599
So first I wanted to translate the ASCII data into 3D.

961
00:46:48,979 --> 00:46:50,281
So I just kind of built a grid

962
00:46:50,381 --> 00:46:51,462
and then I just color coded it

963
00:46:51,482 --> 00:46:52,664
so I could see what the hell is going on.

964
00:46:52,684 --> 00:46:54,446
So now I can see the entrances of everywhere

965
00:46:54,806 --> 00:46:56,628
and then the blues is where the jump pads are gonna be

966
00:46:56,668 --> 00:46:58,490
so we can go from one map to the other one.

967
00:46:58,871 --> 00:47:00,753
And then the reds is where the weapons are gonna spawn

968
00:47:01,033 --> 00:47:02,134
and then the greens are where you're gonna be

969
00:47:02,154 --> 00:47:02,675
the spawn points.

970
00:47:04,248 --> 00:47:06,750
But then I can make really cool single rooms,

971
00:47:06,950 --> 00:47:08,251
but then we get to the point again,

972
00:47:08,271 --> 00:47:09,612
that's like how do you stitch this together?

973
00:47:09,832 --> 00:47:11,874
And then the traditional methods again fell short

974
00:47:11,914 --> 00:47:13,335
because they're really built for dungeons

975
00:47:13,956 --> 00:47:15,517
to where you kind of have the spidery vein

976
00:47:15,557 --> 00:47:16,217
of things growing.

977
00:47:16,838 --> 00:47:18,279
We talked about like adding teleporters

978
00:47:18,319 --> 00:47:20,341
to the end of the rooms to kind of connect it together

979
00:47:20,381 --> 00:47:21,161
to try to get a flow.

980
00:47:21,682 --> 00:47:23,043
But where we landed is actually,

981
00:47:23,403 --> 00:47:25,325
just let the designers come up with the top-down map,

982
00:47:25,725 --> 00:47:27,346
and it takes them like five minutes to build it,

983
00:47:27,746 --> 00:47:29,468
and then they can just explicitly say

984
00:47:29,508 --> 00:47:31,009
where the entrances of each rooms are,

985
00:47:31,069 --> 00:47:33,231
what sizes they are, how it all connects together.

986
00:47:34,332 --> 00:47:36,473
And then I can take each of those individual rooms

987
00:47:36,513 --> 00:47:37,573
and then run through the system.

988
00:47:37,613 --> 00:47:38,933
So it's kind of a backwards approach

989
00:47:38,953 --> 00:47:40,074
to procedural content generation,

990
00:47:40,354 --> 00:47:41,914
which is actually working out really well for us.

991
00:47:42,474 --> 00:47:45,595
So traditionally, people will pre-make the rooms itself

992
00:47:45,835 --> 00:47:47,595
and then kind of procedurally stitch them together.

993
00:47:47,695 --> 00:47:49,936
We're doing the opposite, to where we're pre-making

994
00:47:50,016 --> 00:47:51,616
the kind of high-level flow of the map

995
00:47:51,696 --> 00:47:53,077
and where we want the rooms to be,

996
00:47:53,117 --> 00:47:54,277
how we want the exits to go.

997
00:47:54,717 --> 00:47:56,977
And then the inside content, it doesn't really matter for us

998
00:47:57,057 --> 00:47:59,798
it's like, that's where the flavor's gonna come in.

999
00:48:01,618 --> 00:48:03,479
So the way it works is I take that.

1000
00:48:04,877 --> 00:48:07,238
a top-down map, I bring it into Houdini,

1001
00:48:07,338 --> 00:48:09,460
I just parse the data, and then I can isolate

1002
00:48:09,500 --> 00:48:11,341
where the exits are, I can kind of get a little bit

1003
00:48:11,381 --> 00:48:13,402
of a height variation, I can calculate the dimensions,

1004
00:48:13,742 --> 00:48:15,023
and know where all the door placements are.

1005
00:48:15,603 --> 00:48:17,885
I can then run that through the generator

1006
00:48:18,225 --> 00:48:20,547
that I can then get as many variations as I need,

1007
00:48:21,027 --> 00:48:23,729
then now they're all color-coded, I get the rooms back,

1008
00:48:23,749 --> 00:48:26,010
and then I just kind of do some basic extrusions,

1009
00:48:26,270 --> 00:48:29,332
and then I isolate the rooms, I Boolean them together,

1010
00:48:29,632 --> 00:48:31,133
and then I actually place the game objects.

1011
00:48:32,465 --> 00:48:33,306
And these are the results.

1012
00:48:33,326 --> 00:48:35,687
So right now we're at the kind of white stage map

1013
00:48:35,707 --> 00:48:37,388
and we're kind of taking production as we would

1014
00:48:37,548 --> 00:48:38,929
in a regular game development.

1015
00:48:38,949 --> 00:48:40,250
So first you have like a white box

1016
00:48:40,290 --> 00:48:41,471
and then we're gonna start arting out.

1017
00:48:41,771 --> 00:48:42,832
The whole thing is gonna be procedural

1018
00:48:42,872 --> 00:48:44,092
but we wanted these safety spots

1019
00:48:44,413 --> 00:48:45,994
to just kind of reality check where we are

1020
00:48:46,014 --> 00:48:47,514
and be like, okay, does this feel fun?

1021
00:48:47,955 --> 00:48:49,075
And before going all the way,

1022
00:48:49,135 --> 00:48:50,376
just like you would in a regular game,

1023
00:48:50,977 --> 00:48:53,158
just does the system works before I kind of make

1024
00:48:53,438 --> 00:48:54,939
all terrain and everything procedural

1025
00:48:54,959 --> 00:48:57,140
and everything looks beautiful, is the game fun?

1026
00:48:57,941 --> 00:48:59,822
So we actually got to the point now that.

1027
00:49:00,462 --> 00:49:03,085
It's actually pretty fun to play, and you can kind of get it in Unreal.

1028
00:49:03,746 --> 00:49:06,468
And we had some bots in there, and it actually feels like a real game,

1029
00:49:06,989 --> 00:49:09,432
which is something that I'm super excited about.

1030
00:49:09,812 --> 00:49:11,874
And actually the designer that I'm working with,

1031
00:49:12,515 --> 00:49:14,357
at first he was kind of like, yeah, okay, procedural,

1032
00:49:14,377 --> 00:49:18,020
like I want complete control, and now after seeing this stuff, he's like, okay.

1033
00:49:18,761 --> 00:49:20,102
I can see with the force from the tree,

1034
00:49:20,122 --> 00:49:22,003
and I think this is possible, and I think we can do this.

1035
00:49:22,804 --> 00:49:25,026
So I'll be again at 1 p.m.

1036
00:49:25,046 --> 00:49:26,587
I'm gonna talk about the kind of massive vision

1037
00:49:26,627 --> 00:49:27,608
of what this project could be,

1038
00:49:28,128 --> 00:49:30,009
but I just wanted to share the kind of interim step

1039
00:49:30,069 --> 00:49:33,112
of where I am, and yeah, that's all I got.

1040
00:49:42,379 --> 00:49:44,120
So I'm gonna go deep dive on a very small topic.

1041
00:49:45,492 --> 00:49:48,654
So everything that is procedural is pseudo.

1042
00:49:49,314 --> 00:49:51,135
And I want to talk a little bit about how

1043
00:49:51,155 --> 00:49:53,797
pseudo-random generation, you need to treat it

1044
00:49:53,837 --> 00:49:54,957
as your friend and not your enemy.

1045
00:49:56,018 --> 00:49:58,079
So everyone, show of hands, everyone knows

1046
00:49:58,139 --> 00:50:00,060
what pseudo-random generation is, right?

1047
00:50:00,420 --> 00:50:01,120
So here's the question.

1048
00:50:01,300 --> 00:50:02,241
Raise your hand if you've used

1049
00:50:02,301 --> 00:50:03,942
an actual random number generator.

1050
00:50:04,642 --> 00:50:05,923
Actual random, not pseudo.

1051
00:50:05,943 --> 00:50:07,343
Ah, and the hands shrink.

1052
00:50:07,443 --> 00:50:09,284
So the thing about computers is,

1053
00:50:09,424 --> 00:50:11,485
we can't actually make true random generation.

1054
00:50:11,525 --> 00:50:12,286
We have to use pseudo.

1055
00:50:13,047 --> 00:50:14,448
But you can use pseudo to your advantage.

1056
00:50:14,849 --> 00:50:17,712
You can create experiences that use the pseudo nature

1057
00:50:17,812 --> 00:50:20,254
of random generation to ensure that these experiences

1058
00:50:20,294 --> 00:50:22,437
that people get that have some sort of random entity

1059
00:50:22,897 --> 00:50:24,960
in it can be reused, reutilized,

1060
00:50:25,320 --> 00:50:28,323
and kind of taken advantage of as your players and designers.

1061
00:50:29,843 --> 00:50:31,285
So I don't know if you guys have recently heard,

1062
00:50:31,345 --> 00:50:33,808
in 2014 there was a group of Russian hackers

1063
00:50:33,908 --> 00:50:35,450
who went on to a whole group

1064
00:50:35,470 --> 00:50:37,353
of these Novomatic casino machines.

1065
00:50:38,054 --> 00:50:40,357
And they were able to record data of those machines,

1066
00:50:40,437 --> 00:50:41,959
watch them play multiple rounds.

1067
00:50:42,519 --> 00:50:43,360
And through doing so,

1068
00:50:43,401 --> 00:50:45,443
they could actually figure out what the current seed was

1069
00:50:45,563 --> 00:50:47,346
and know when the next big win was gonna be.

1070
00:50:47,686 --> 00:50:50,128
So there's this current big rush of casino companies

1071
00:50:50,148 --> 00:50:52,029
all over the world getting rid of all these old machines

1072
00:50:52,049 --> 00:50:53,510
because their pseudo-rando generators

1073
00:50:53,890 --> 00:50:56,052
were just too pseudo and not random enough.

1074
00:50:56,913 --> 00:50:59,194
In games, we don't really care so much about that.

1075
00:50:59,494 --> 00:51:01,276
I mean, if someone can figure out potentially

1076
00:51:01,316 --> 00:51:03,097
what a seed is, if they could reverse engineer,

1077
00:51:03,177 --> 00:51:04,418
hey, this is a seed that causes

1078
00:51:04,458 --> 00:51:05,599
this interesting experience,

1079
00:51:06,039 --> 00:51:07,480
that can be a positive thing for a player.

1080
00:51:07,500 --> 00:51:09,622
It's something where they can intentionally choose a seed

1081
00:51:09,642 --> 00:51:11,543
or kind of direct the seed generation

1082
00:51:12,003 --> 00:51:15,025
to make something interesting and experience for them.

1083
00:51:15,972 --> 00:51:19,195
So I would guess probably many people in many situations,

1084
00:51:19,275 --> 00:51:22,298
they use the wonderful trick of setting your OS time

1085
00:51:22,438 --> 00:51:23,359
as your random seed.

1086
00:51:23,760 --> 00:51:25,862
Can I see a show of hands of who has done that?

1087
00:51:26,582 --> 00:51:29,085
Yeah, okay, so that's the quick, easy, dirty trick.

1088
00:51:29,165 --> 00:51:31,087
It ensures that it's somewhat random

1089
00:51:31,147 --> 00:51:32,528
and you're not gonna get the same seed.

1090
00:51:32,968 --> 00:51:34,629
And that's great for something if you just need

1091
00:51:34,669 --> 00:51:36,250
a quick, dirty, random result.

1092
00:51:36,911 --> 00:51:38,372
But there's a lot of times when you actually wanna do

1093
00:51:38,412 --> 00:51:40,613
a random seed that has value for the player,

1094
00:51:40,653 --> 00:51:42,735
can be reutilized, or the player can choose

1095
00:51:42,775 --> 00:51:43,555
which seed they want.

1096
00:51:44,576 --> 00:51:45,877
So there's a couple different options here.

1097
00:51:46,737 --> 00:51:48,799
One of the most common is let the user input a seed.

1098
00:51:49,079 --> 00:51:51,481
So this is something like Dwarf Fortress, like Minecraft.

1099
00:51:51,601 --> 00:51:53,062
Put in a number, put in a string,

1100
00:51:53,122 --> 00:51:55,143
I convert it to a number, and that's the seed we use.

1101
00:51:55,584 --> 00:51:57,866
This is great because it allows you to share it with someone else.

1102
00:51:57,906 --> 00:52:00,888
Hey, you know, check out seed PCG shotgun on Minecraft.

1103
00:52:01,209 --> 00:52:04,291
I was gonna share a photo of that and it's actually a really boring start spot.

1104
00:52:04,351 --> 00:52:05,773
So like, sorry.

1105
00:52:06,693 --> 00:52:09,176
But the idea is like you can take a really cool,

1106
00:52:09,236 --> 00:52:12,499
hey, you know, put in my name and see what happens and let's run around in that world.

1107
00:52:12,839 --> 00:52:14,881
And it becomes a shareable random experience

1108
00:52:15,201 --> 00:52:17,683
because you can recreate that exact random generator

1109
00:52:18,044 --> 00:52:19,125
and pass it on to someone else.

1110
00:52:20,217 --> 00:52:23,940
Also, if you do this, you don't actually have to tell them about their input.

1111
00:52:24,240 --> 00:52:28,463
You don't have to say, hey, I'm going to share a seed, write it in, and this is what it is.

1112
00:52:29,464 --> 00:52:33,467
I'd love to see some games, and I don't know if there's any examples of this, so please

1113
00:52:33,567 --> 00:52:36,569
find me afterwards, where you actually use something like the character creation.

1114
00:52:37,090 --> 00:52:41,151
to determine the random seed. So if someone puts in their profile name, that becomes the

1115
00:52:41,191 --> 00:52:44,992
seed generator. It's the same thing as I just showed with the Minecraft seeds or with Dwarf

1116
00:52:45,012 --> 00:52:49,694
Fortress except you're not implicitly or explicitly saying to them, hey, this is your random

1117
00:52:49,714 --> 00:52:53,835
seed. What makes this really interesting is it essentially creates a cheat code base

1118
00:52:54,535 --> 00:52:57,117
for your player base that they can discover as they play.

1119
00:52:57,157 --> 00:52:59,538
Like, yo, I just found that if you put in the name

1120
00:52:59,878 --> 00:53:02,539
Yossarian, it creates this really awesome level

1121
00:53:02,619 --> 00:53:04,300
and it's this very special space

1122
00:53:04,360 --> 00:53:06,561
and the first room has the best gun in the game.

1123
00:53:07,342 --> 00:53:09,023
It creates this really interesting conversation

1124
00:53:09,063 --> 00:53:11,364
among your players because they're looking for seeds

1125
00:53:11,384 --> 00:53:12,745
and they're trying to discover seeds

1126
00:53:12,825 --> 00:53:15,206
through this input system that are really interesting.

1127
00:53:16,046 --> 00:53:18,047
I'd also love to see within this loading screens.

1128
00:53:18,187 --> 00:53:20,548
You have a lot of now we can do interactive loading screens

1129
00:53:20,588 --> 00:53:21,489
again without being sued.

1130
00:53:21,909 --> 00:53:24,150
So do something interactive with your loading screen.

1131
00:53:24,511 --> 00:53:27,913
and take that input and make it become a random seed generator

1132
00:53:28,073 --> 00:53:30,995
for any content that you have coming after that loading scene.

1133
00:53:32,757 --> 00:53:34,998
You can also take a seed and break it into its sub-elements.

1134
00:53:35,299 --> 00:53:38,081
So if you have this 12-digit number, you can take that 12-digit number

1135
00:53:38,421 --> 00:53:41,924
and each number can actually be a specific chunk to place into a level map.

1136
00:53:41,944 --> 00:53:43,505
So like Luis's example.

1137
00:53:43,925 --> 00:53:45,086
Each one of those rooms could be like,

1138
00:53:45,166 --> 00:53:47,768
okay, we're using room format 1, room format 2,

1139
00:53:48,128 --> 00:53:50,490
and you actually take the seed number and switch it out like that.

1140
00:53:50,830 --> 00:53:54,713
What's really nice about that is then you can treat your seed as a flexible number or

1141
00:53:54,853 --> 00:53:55,593
flexible string.

1142
00:53:55,993 --> 00:53:59,435
So rather than it just being this big long number that you don't do anything with, you

1143
00:53:59,455 --> 00:54:00,696
can make small adjustments to it.

1144
00:54:00,736 --> 00:54:04,879
You can take this, switch two of the digits, and you still have the general layout that's

1145
00:54:04,899 --> 00:54:08,941
been defined, again using like Luis's example of like a hand-generated flow.

1146
00:54:10,042 --> 00:54:11,883
But now you have two different formats have changed.

1147
00:54:12,303 --> 00:54:14,505
And then within the internal elements

1148
00:54:14,545 --> 00:54:15,446
of each of these rooms,

1149
00:54:15,966 --> 00:54:17,868
you still have a lot of individual things

1150
00:54:17,908 --> 00:54:19,729
that are using this seed to decide

1151
00:54:19,789 --> 00:54:21,791
what items drop, what characters are there.

1152
00:54:22,311 --> 00:54:24,052
So you can get some bit of consistency

1153
00:54:24,132 --> 00:54:25,593
across the full experience,

1154
00:54:25,994 --> 00:54:28,556
but then have small shifts to the random generation

1155
00:54:28,596 --> 00:54:31,058
without completely regenerating the whole system.

1156
00:54:32,286 --> 00:54:34,388
Now, you can also, this is quite popular,

1157
00:54:34,448 --> 00:54:35,789
is taking seeds from many values.

1158
00:54:36,910 --> 00:54:38,831
A lot of games such as No Man's Sky,

1159
00:54:39,332 --> 00:54:41,713
you're generating a galactic space,

1160
00:54:41,754 --> 00:54:42,814
you know, a whole galaxy.

1161
00:54:43,155 --> 00:54:45,777
In order to do that, you need a lot of seeds.

1162
00:54:46,057 --> 00:54:48,339
And the best way to do that is to take XYZ data.

1163
00:54:48,739 --> 00:54:50,220
Take your X, take your Y, take your Z,

1164
00:54:50,240 --> 00:54:51,161
concatenate them together.

1165
00:54:51,181 --> 00:54:53,002
That's a unique random seed

1166
00:54:53,022 --> 00:54:54,764
that will only be available for that item.

1167
00:54:55,084 --> 00:54:56,905
So when you generate a planet, you generate a star,

1168
00:54:56,925 --> 00:54:59,727
you can use location data, you can use color data.

1169
00:54:59,767 --> 00:55:02,869
Someone color picks or it's randomly generated colors,

1170
00:55:03,510 --> 00:55:05,831
you use the RGB data to create a seed

1171
00:55:05,951 --> 00:55:07,092
through those multiple pieces.

1172
00:55:09,310 --> 00:55:10,591
You can also use a user ID.

1173
00:55:10,831 --> 00:55:14,413
So many of us, if you're developing anything for mobile,

1174
00:55:14,473 --> 00:55:18,175
developing anything for PC, possibly with console,

1175
00:55:18,195 --> 00:55:21,557
I'm not sure how, but if you can get a specific user data ID,

1176
00:55:21,817 --> 00:55:23,478
something that's unique to the user,

1177
00:55:24,019 --> 00:55:25,800
you can then use that as a random seed.

1178
00:55:25,920 --> 00:55:29,422
Create something where there's a random data for them

1179
00:55:29,462 --> 00:55:31,183
that is actually not random for them.

1180
00:55:31,523 --> 00:55:35,405
It becomes a static experience for that specific player.

1181
00:55:37,106 --> 00:55:40,227
So this is again like a UDID, a MAC address,

1182
00:55:40,307 --> 00:55:41,807
any type of information that you can pull

1183
00:55:41,827 --> 00:55:42,907
that's unique to that player.

1184
00:55:43,488 --> 00:55:44,788
Assign that as a random seed,

1185
00:55:45,048 --> 00:55:45,948
and that actually becomes a seed

1186
00:55:45,968 --> 00:55:47,289
that's no longer random for them.

1187
00:55:47,769 --> 00:55:49,609
So if they have a first level that's generated,

1188
00:55:49,649 --> 00:55:51,270
they always get that same first level,

1189
00:55:51,570 --> 00:55:53,431
but they're the only one who ever gets that first level.

1190
00:55:53,471 --> 00:55:55,611
No one else will experience that level or that space

1191
00:55:55,651 --> 00:55:58,172
or that specific combination of random generation

1192
00:55:58,232 --> 00:55:59,252
because it's locked to them.

1193
00:56:00,413 --> 00:56:01,893
And that brings me to my last point

1194
00:56:01,953 --> 00:56:03,674
is the idea of a lifetime seed.

1195
00:56:03,974 --> 00:56:04,114
So.

1196
00:56:05,155 --> 00:56:06,616
We've all experienced random generation,

1197
00:56:06,656 --> 00:56:08,297
we've all played games with random generation.

1198
00:56:08,838 --> 00:56:09,718
Every time you play a game,

1199
00:56:09,758 --> 00:56:11,099
every time you go through that replay,

1200
00:56:11,379 --> 00:56:12,660
it's a new random experience.

1201
00:56:13,080 --> 00:56:14,921
But using something like the user ID seed

1202
00:56:14,981 --> 00:56:17,283
or a lock seed to each individual player

1203
00:56:17,923 --> 00:56:20,645
ensures that even though we have randomness

1204
00:56:20,765 --> 00:56:22,426
across each of our experiences,

1205
00:56:22,986 --> 00:56:24,907
those experiences are unique to us

1206
00:56:25,388 --> 00:56:27,589
and we will always experience those same results.

1207
00:56:28,250 --> 00:56:30,632
This, again, will create a wonderful community involvement

1208
00:56:30,652 --> 00:56:32,454
where I can talk about my experience,

1209
00:56:32,534 --> 00:56:34,036
I can talk about, hey, you know,

1210
00:56:34,116 --> 00:56:36,878
the purple potion in this roguelike always kills me.

1211
00:56:37,319 --> 00:56:39,081
You say the purple potion always gives you health,

1212
00:56:39,421 --> 00:56:40,522
but it always gives you health.

1213
00:56:40,642 --> 00:56:42,644
Every time you replay, you don't have to drink that potion

1214
00:56:42,684 --> 00:56:44,026
and wonder what it's gonna do this time.

1215
00:56:44,506 --> 00:56:45,467
It is specific to you.

1216
00:56:46,068 --> 00:56:48,670
And I'd love to see games do this with map generation,

1217
00:56:48,811 --> 00:56:49,972
with character generation,

1218
00:56:50,012 --> 00:56:51,453
with anything with a procedural system,

1219
00:56:51,974 --> 00:56:54,697
because then you create consistency across the replays,

1220
00:56:54,737 --> 00:56:56,478
across those experiences,

1221
00:56:56,999 --> 00:56:58,821
and it gives the community an opportunity

1222
00:56:58,841 --> 00:57:00,703
to kind of talk about their specific seed

1223
00:57:00,743 --> 00:57:02,564
or kind of their specific space that they have,

1224
00:57:03,165 --> 00:57:04,807
and they get the feel ownership to it.

1225
00:57:04,887 --> 00:57:05,607
It's unique to them.

1226
00:57:06,108 --> 00:57:09,412
they know that that one random dwarf or that one random character in red shirt

1227
00:57:09,512 --> 00:57:12,777
always shows up for them every time, but no one else gets that character.

1228
00:57:12,917 --> 00:57:17,123
So it gives them more authorship and more ownership to the random generation

1229
00:57:17,343 --> 00:57:19,646
instead of feeling like full random craziness.

1230
00:57:20,407 --> 00:57:21,428
And that's it for me.

1231
00:57:22,089 --> 00:57:24,012
So thank you, everyone.

1232
00:57:30,728 --> 00:57:32,869
So we have two or three minutes.

1233
00:57:32,889 --> 00:57:34,729
We're going to do a little fun activity here.

1234
00:57:35,270 --> 00:57:36,790
Each one of us is going to go through and kind of talk

1235
00:57:36,850 --> 00:57:38,470
about a game that we absolutely love,

1236
00:57:38,510 --> 00:57:40,811
but would love to see have more procedural generation.

1237
00:57:41,611 --> 00:57:43,051
Does anyone want to volunteer to start?

1238
00:57:45,212 --> 00:57:49,193
I would love to see a procedural layer of any kind

1239
00:57:49,433 --> 00:57:50,793
added to Princess Maker 2.

1240
00:57:55,249 --> 00:58:00,970
I always wanted to see Xevious with procedural levels, because it has like the weird little

1241
00:58:01,070 --> 00:58:04,512
eagle you find on the ground, like a little bit through there, and you're like, what is

1242
00:58:04,532 --> 00:58:05,232
this doing there?

1243
00:58:05,312 --> 00:58:11,474
But it would be more like a cultural exploration of a randomized civilization that I guess

1244
00:58:11,494 --> 00:58:13,735
you're also blowing up at the same time, which is kind of sad.

1245
00:58:16,494 --> 00:58:19,755
I'm really a big fan of music games, so Rez would be my top choice.

1246
00:58:19,795 --> 00:58:23,336
Like, Rez has some procedural elements to it, but it's more music-generative,

1247
00:58:24,036 --> 00:58:28,198
reactive and generative, but like more procedural instruments or synthesizers

1248
00:58:28,578 --> 00:58:31,599
or patterns and things like that. I think it's rich for that kind of thing.

1249
00:58:32,939 --> 00:58:37,580
I'd love to see a game like Oregon Trail have procedurally generated characters or personalities.

1250
00:58:38,000 --> 00:58:41,341
Like, start from here, get to here, long travel experience,

1251
00:58:41,401 --> 00:58:43,982
but with actual more personality that's procedurally generated.

1252
00:58:45,006 --> 00:58:49,009
I'd love to see Mega Man being done procedurally, to where the weapons are procedurally generated

1253
00:58:49,049 --> 00:58:51,530
on the bosses, and then the levels are procedurally generated as well.

1254
00:58:51,550 --> 00:58:57,074
So I'm going to cheat slightly, and I'm going to point to a game that I'd love to bring

1255
00:58:57,094 --> 00:59:00,116
together those sides of the spectrum that I defined, right?

1256
00:59:00,156 --> 00:59:06,461
Like a version of Papers, Please, where you have these procedurally generated characters

1257
00:59:06,501 --> 00:59:10,083
coming up to you, and then obviously you're looking at their documentation, etc., but

1258
00:59:10,103 --> 00:59:10,443
then you can...

1259
00:59:10,844 --> 00:59:14,326
interrogate them further and find out more about their sort of motivations

1260
00:59:16,347 --> 00:59:20,490
and have, I can imagine that being a game where sort of you know the

1261
00:59:20,590 --> 00:59:23,112
context of the world is set up through noticing the differences between the

1262
00:59:23,152 --> 00:59:27,715
different characters but going deeper on that so I think that'd be. Awesome and

1263
00:59:27,835 --> 00:59:31,378
that does it for us for time I guess some of us will be in the wrap-up room

1264
00:59:31,418 --> 00:59:33,579
and Dave will say some words so thank you guys.

