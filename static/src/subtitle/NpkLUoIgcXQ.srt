1
00:00:05,989 --> 00:00:09,266
Alright, I'm Peter Ingstad and welcome to the Kingdoms and Castles Postmortem.

2
00:00:12,820 --> 00:00:15,762
I'm co-founder at Lion's Shield, programmer, designer mostly,

3
00:00:15,762 --> 00:00:16,963
but I do a little bit of art.

4
00:00:16,963 --> 00:00:18,744
And I've worked on a bunch of different types

5
00:00:18,744 --> 00:00:19,824
of games over the years.

6
00:00:19,824 --> 00:00:22,626
The latest game I've worked on is Kingdoms and Castles.

7
00:00:22,626 --> 00:00:24,628
It's a medieval city building game

8
00:00:24,628 --> 00:00:26,109
where you grow your kingdom and defend it

9
00:00:26,109 --> 00:00:27,009
against Vikings and dragons.

10
00:00:27,009 --> 00:00:28,550
And the cool thing about the game

11
00:00:28,550 --> 00:00:31,612
is that every single person is individually simulated.

12
00:00:31,612 --> 00:00:34,354
So if the game says you have 5,000 people,

13
00:00:34,354 --> 00:00:36,756
you can account for all 5,000 people doing something

14
00:00:36,756 --> 00:00:37,456
somewhere in the world.

15
00:00:38,358 --> 00:00:41,099
It was made by myself and Michael Peddicord

16
00:00:41,099 --> 00:00:44,019
as the main developers, and we had a few contractors,

17
00:00:44,019 --> 00:00:46,320
Jason Taylor for music, Steve Green on sound effects,

18
00:00:46,320 --> 00:00:48,401
and also Chad Freeman on sound effects.

19
00:00:48,401 --> 00:00:52,422
It took about a year and a half of time to make,

20
00:00:52,422 --> 00:00:54,562
and a note here is that all the timelines in this talk

21
00:00:54,562 --> 00:00:58,324
are compressed as if we had worked a 35-hour week on it,

22
00:00:58,324 --> 00:01:00,744
but in reality, we average closer to 10 hours a week

23
00:01:00,744 --> 00:01:03,105
due to other jobs, and I'm also a stay-at-home dad.

24
00:01:03,105 --> 00:01:06,566
It was built on Unity with some handy plugins.

25
00:01:07,372 --> 00:01:08,313
And it went really well.

26
00:01:08,313 --> 00:01:12,055
We've sold about 650,000 copies so far.

27
00:01:12,055 --> 00:01:15,417
And it has been one of the most fun development

28
00:01:15,417 --> 00:01:16,718
experiences I've been a part of.

29
00:01:16,718 --> 00:01:20,960
And really, it was all about using our time as efficiently

30
00:01:20,960 --> 00:01:21,520
as possible.

31
00:01:21,520 --> 00:01:24,522
So let's dig into some of the interesting parts of its

32
00:01:24,522 --> 00:01:25,363
development.

33
00:01:26,273 --> 00:01:29,056
We focused very heavily on market fit testing.

34
00:01:29,056 --> 00:01:33,179
And for us, that meant we wanted to find out,

35
00:01:33,179 --> 00:01:35,400
are people interested in this game idea at all?

36
00:01:35,400 --> 00:01:37,602
How many people are interested?

37
00:01:37,602 --> 00:01:41,245
And how big should we make the game?

38
00:01:41,245 --> 00:01:43,507
And why are we so interested in market fit testing?

39
00:01:43,507 --> 00:01:46,569
Let's rewind five years to my first indie game,

40
00:01:46,569 --> 00:01:48,731
Cannon Brawl.

41
00:01:48,731 --> 00:01:53,675
It's a 2D action strategy artillery RTS hybrid.

42
00:01:54,083 --> 00:01:55,544
It's got a single-player campaign

43
00:01:55,544 --> 00:01:57,325
and a competitive multiplayer mode.

44
00:01:57,325 --> 00:01:59,406
And it had about the same team size,

45
00:01:59,406 --> 00:02:01,848
myself and Teresa Terringer.

46
00:02:01,848 --> 00:02:03,749
And it took us about twice as long to make.

47
00:02:03,749 --> 00:02:06,450
And they're both good games.

48
00:02:06,450 --> 00:02:08,751
And in fact, Cannonball has a higher Steam user score

49
00:02:08,751 --> 00:02:09,972
than Kingdoms and Castles.

50
00:02:09,972 --> 00:02:11,953
But Kingdoms and Castles sold a lot more.

51
00:02:11,953 --> 00:02:14,854
And it turned out that Cannonball

52
00:02:14,854 --> 00:02:15,895
had closer to a niche audience.

53
00:02:15,895 --> 00:02:17,856
And ideally, we would have discovered that early

54
00:02:17,856 --> 00:02:21,698
and scoped the game to match that audience size.

55
00:02:21,698 --> 00:02:23,379
And this is where the market fit testing comes in.

56
00:02:24,080 --> 00:02:26,922
And interestingly, during CannonBrawl's development,

57
00:02:26,922 --> 00:02:30,526
we did do things that would be considered market fit testing,

58
00:02:30,526 --> 00:02:33,649
but we didn't take that data to scope the game.

59
00:02:33,649 --> 00:02:35,690
So, for example, during CannonBrawl,

60
00:02:35,690 --> 00:02:39,374
I made a bunch of YouTube devlog videos,

61
00:02:39,374 --> 00:02:43,357
and they had 100 views, but that never grew.

62
00:02:43,357 --> 00:02:44,819
We made it through Steam Greenlight,

63
00:02:44,819 --> 00:02:46,300
but I would have preferred more yeses.

64
00:02:47,587 --> 00:02:49,867
And we did an early access launch,

65
00:02:49,867 --> 00:02:52,429
which got into the Steam Top 20, which is pretty good,

66
00:02:52,429 --> 00:02:56,450
but then sales declined in a pretty typical curve.

67
00:02:56,450 --> 00:02:59,151
And each one of those green arrows is a content update.

68
00:02:59,151 --> 00:03:01,452
So, we did all these kind of juicy content updates,

69
00:03:01,452 --> 00:03:03,893
but it didn't seem to change anything.

70
00:03:03,893 --> 00:03:07,234
And we had approached this kind of with the mindset of,

71
00:03:07,234 --> 00:03:09,895
I hope this update or a YouTube dev log or whatever

72
00:03:09,895 --> 00:03:11,256
is really going to help the game catch on.

73
00:03:11,256 --> 00:03:14,097
And it's true that each one of these will,

74
00:03:14,097 --> 00:03:15,298
it is a marketing opportunity

75
00:03:15,298 --> 00:03:16,938
can help you grow the audience for your game.

76
00:03:17,995 --> 00:03:21,117
Also informing you how big that market is.

77
00:03:21,117 --> 00:03:25,820
And so really with the response that we were getting,

78
00:03:25,820 --> 00:03:28,682
the market was saying, well, I'm only about this big.

79
00:03:28,682 --> 00:03:30,863
So investing a lot of development time here

80
00:03:30,863 --> 00:03:32,744
is going to be a risk.

81
00:03:32,744 --> 00:03:35,366
So by the time we realized this, it's time to launch the game.

82
00:03:35,366 --> 00:03:38,388
And the launch ends up being a little smaller than early access.

83
00:03:38,388 --> 00:03:40,809
And I think at that point, we had basically

84
00:03:40,809 --> 00:03:42,651
captured the market interested in the game.

85
00:03:43,543 --> 00:03:45,285
So overall, Cannonball sold modestly,

86
00:03:45,285 --> 00:03:47,188
but it wasn't enough for me to stay indie

87
00:03:47,188 --> 00:03:48,830
because I was looking to start a family.

88
00:03:48,830 --> 00:03:51,213
So I ended up getting another job.

89
00:03:51,213 --> 00:03:54,198
And looking back on it now, it would have been wiser

90
00:03:54,198 --> 00:03:55,740
to scope that game down a little bit,

91
00:03:55,740 --> 00:03:57,963
given the response we were getting from the dev logs

92
00:03:57,963 --> 00:03:59,425
and Greenlight and Early Access.

93
00:04:01,273 --> 00:04:05,778
So back to kingdoms and castles, this time we're going to mark a test early, continuously,

94
00:04:05,778 --> 00:04:06,359
and intentionally.

95
00:04:06,359 --> 00:04:13,026
And we're going to use this data to find out if we should make the game at all, and how

96
00:04:13,026 --> 00:04:13,807
big to make it.

97
00:04:13,807 --> 00:04:18,192
Should it be a quick three-month project, or a five-year magnum opus?

98
00:04:19,353 --> 00:04:21,775
and we're going to use a whole bunch of different things

99
00:04:21,775 --> 00:04:22,916
to figure it out.

100
00:04:22,916 --> 00:04:25,599
So first, should we make the game at all?

101
00:04:25,599 --> 00:04:27,941
We used Twitter.

102
00:04:27,941 --> 00:04:31,664
And our thought was, if we can get something retweeted

103
00:04:31,664 --> 00:04:34,327
25 times, we're going to count that as a success.

104
00:04:34,327 --> 00:04:37,449
And we chose that number because at that point,

105
00:04:37,449 --> 00:04:39,291
25 times was an enormous amount for me.

106
00:04:40,399 --> 00:04:44,404
So our first tweet got 11, which was not a success,

107
00:04:44,404 --> 00:04:45,104
but encouraging.

108
00:04:45,104 --> 00:04:46,666
And we kept trying.

109
00:04:46,666 --> 00:04:48,368
This was early, so it was pretty fast.

110
00:04:48,368 --> 00:04:52,433
And pretty quickly, we got there with this GIF of the

111
00:04:52,433 --> 00:04:53,654
tree growth system.

112
00:04:53,654 --> 00:04:54,255
That got 25.

113
00:04:54,255 --> 00:04:56,697
And then we had another success after that with the

114
00:04:56,697 --> 00:04:57,038
cloud system.

115
00:04:57,038 --> 00:04:59,881
So something in the look here is starting to

116
00:04:59,881 --> 00:05:01,142
resonate with people.

117
00:05:02,171 --> 00:05:05,754
And I've seen other people on Twitter kind of do this too,

118
00:05:05,754 --> 00:05:10,498
like each of these is just an art asset or a little mock-up,

119
00:05:10,498 --> 00:05:11,478
but it's resonating.

120
00:05:11,478 --> 00:05:13,980
So if these people were interested

121
00:05:13,980 --> 00:05:15,802
in making a game out of these,

122
00:05:15,802 --> 00:05:17,723
they'd be worth taking to the next level.

123
00:05:17,723 --> 00:05:19,545
And so the next step for us

124
00:05:19,545 --> 00:05:22,607
was to make a Steam Greenlight Ideas page,

125
00:05:22,607 --> 00:05:24,448
which is like a mock Steam store page

126
00:05:24,448 --> 00:05:27,471
with screenshots and a trailer, and people leave comments,

127
00:05:27,471 --> 00:05:29,993
and the ideas get ranked, but then nothing happens after that.

128
00:05:30,839 --> 00:05:35,145
And so we came up with our success criteria, which was

129
00:05:35,145 --> 00:05:39,011
get into the top 100 ideas and generate 50 comments by

130
00:05:39,011 --> 00:05:41,916
looking at other ideas in the top 100, and how many comments

131
00:05:41,916 --> 00:05:44,159
they got, and also if they were successful when they

132
00:05:44,159 --> 00:05:45,621
eventually launched on Steam.

133
00:05:46,322 --> 00:05:53,348
And we're using these success criteria as a way to be honest with ourselves and force us to course correct early if the idea isn't resonating.

134
00:05:53,348 --> 00:05:58,492
For example, say we miss the top 100 and we get 20 comments, half of which are neutral or negative.

135
00:05:58,492 --> 00:06:03,615
We don't want to fall into this, like, oh, well, 10 of them were good, like, let's keep going on that same track.

136
00:06:03,615 --> 00:06:10,861
We instead want a bar to measure by that will tell us, no, go back to the drawing board and figure out why this isn't resonating.

137
00:06:12,219 --> 00:06:14,240
So at this point, the game is about three months in,

138
00:06:14,240 --> 00:06:17,761
and it is not playable, but we have built enough of it

139
00:06:17,761 --> 00:06:20,482
that we can get the idea across in screenshots and a trailer.

140
00:06:20,482 --> 00:06:23,883
So that ends up going pretty well.

141
00:06:23,883 --> 00:06:25,144
We get into the top 100 ideas,

142
00:06:25,144 --> 00:06:26,744
and we generate a lot of comments,

143
00:06:26,744 --> 00:06:29,906
and they are mostly very positive.

144
00:06:29,906 --> 00:06:33,447
And so judging by the engagement on Twitter

145
00:06:33,447 --> 00:06:36,228
and how well this concept page went,

146
00:06:36,228 --> 00:06:38,009
we can now answer the question, should we make this game?

147
00:06:38,009 --> 00:06:39,349
And we are going to make it.

148
00:06:40,613 --> 00:06:42,875
Another benefit of doing this market fit testing

149
00:06:42,875 --> 00:06:44,917
was that you can course correct early.

150
00:06:44,917 --> 00:06:47,760
One of the things we learned during the Greenlight concept page

151
00:06:47,760 --> 00:06:49,882
was that we were getting a lot of comparisons to Stonehearth,

152
00:06:49,882 --> 00:06:53,305
and that's because we both had a pretty similar

153
00:06:53,305 --> 00:06:55,106
voxel art style going on.

154
00:06:55,106 --> 00:06:58,830
So we redid all of the assets in a low poly style,

155
00:06:58,830 --> 00:07:00,111
and because we learned this so early,

156
00:07:00,111 --> 00:07:01,752
there weren't that many assets to redo,

157
00:07:01,752 --> 00:07:03,193
so it was a quick change to make.

158
00:07:05,059 --> 00:07:06,860
So now we're definitely committing to making the game,

159
00:07:06,860 --> 00:07:08,601
but we need to find out how big to make it.

160
00:07:08,601 --> 00:07:09,722
Is this a three-month thing?

161
00:07:09,722 --> 00:07:12,843
Should we quit our jobs and hire people kind of thing?

162
00:07:12,843 --> 00:07:14,404
And to find that out,

163
00:07:14,404 --> 00:07:17,246
we're going to run a crowdfunding campaign

164
00:07:17,246 --> 00:07:19,707
and then do a real deal Steam Greenlight run.

165
00:07:19,707 --> 00:07:22,189
And at this point, we're willing to risk six months,

166
00:07:22,189 --> 00:07:23,950
six more months of development time to prepare

167
00:07:23,950 --> 00:07:27,392
given how well the concept page and Twitter did.

168
00:07:27,392 --> 00:07:27,772
And...

169
00:07:29,762 --> 00:07:33,444
So by the time we launch the crowdfunding campaign, the game is playable,

170
00:07:33,444 --> 00:07:38,847
and so if we just barely squeak by our funding goal, we can still ship something.

171
00:07:40,190 --> 00:07:43,030
But the crowdfunding goes better than we thought.

172
00:07:43,030 --> 00:07:46,231
It's not enough to quit our jobs and staff up a lot,

173
00:07:46,231 --> 00:07:48,292
but now we know how much time to invest

174
00:07:48,292 --> 00:07:49,392
and how big to make this game.

175
00:07:49,392 --> 00:07:52,373
We were looking at making some big simulation changes

176
00:07:52,373 --> 00:07:54,513
and adding buildings and a military system,

177
00:07:54,513 --> 00:07:57,014
and we now know that we have the time and budget to do that.

178
00:07:57,014 --> 00:07:59,835
And if crowdfunding had not gone as well,

179
00:07:59,835 --> 00:08:01,355
we could have just cut that.

180
00:08:03,858 --> 00:08:06,300
So, 10 months later, it's time to launch,

181
00:08:06,300 --> 00:08:08,241
and it ends up going really well.

182
00:08:08,241 --> 00:08:10,863
The game breaks into the top five on Steam,

183
00:08:10,863 --> 00:08:12,664
eventually peaks at number three.

184
00:08:12,664 --> 00:08:16,587
We were unable to unseat PUBG, unfortunately.

185
00:08:16,587 --> 00:08:19,189
So, this market fit testing process

186
00:08:19,189 --> 00:08:22,751
helped us avoid sinking lots of time into something

187
00:08:22,751 --> 00:08:25,773
that we weren't sure if enough people would buy.

188
00:08:25,773 --> 00:08:28,335
And the launch was also our last market test,

189
00:08:28,335 --> 00:08:30,436
which was, do we continue expanding the game?

190
00:08:30,436 --> 00:08:31,797
And for us, the answer was yes,

191
00:08:31,797 --> 00:08:33,218
and we're still updating it today.

192
00:08:34,533 --> 00:08:36,795
So let's move on now to a concept I think helped it

193
00:08:36,795 --> 00:08:38,476
succeed in the market fit test,

194
00:08:38,476 --> 00:08:41,598
which was that it has a very clear player fantasy.

195
00:08:41,598 --> 00:08:44,300
And for this talk, I'm going to give a special definition

196
00:08:44,300 --> 00:08:46,201
for player fantasy, which is the ability of the player

197
00:08:46,201 --> 00:08:47,602
to imagine what the game is like

198
00:08:47,602 --> 00:08:48,722
before having played it at all.

199
00:08:48,722 --> 00:08:52,945
And this is communicated through most often trailers,

200
00:08:52,945 --> 00:08:54,726
screenshots, the verbal description.

201
00:08:54,726 --> 00:08:57,988
And your player fantasy, I think, can be anything,

202
00:08:57,988 --> 00:08:59,789
but it just has to be very clear what it is.

203
00:09:00,402 --> 00:09:05,444
So for example, Assassin's Creed, the player fantasy would be you're a cool assassin in ancient times,

204
00:09:05,444 --> 00:09:08,365
and it's like communicated in the title of the game.

205
00:09:08,365 --> 00:09:15,288
The screenshots show a guy exploring an ancient city, probably about to jump down and assassinate some people.

206
00:09:15,288 --> 00:09:20,350
For Rocket League, the player fantasy is you're a rocket-powered car playing soccer,

207
00:09:20,350 --> 00:09:24,011
and that's very obvious, very clear from the screenshot and even the title.

208
00:09:24,878 --> 00:09:26,319
And papers, please.

209
00:09:26,319 --> 00:09:30,362
You're a border control agent in a dystopian country.

210
00:09:30,362 --> 00:09:32,044
And you can see from the screenshot,

211
00:09:32,044 --> 00:09:34,506
you're going to approve or deny this guy's passport.

212
00:09:34,506 --> 00:09:38,409
Like, it's clear that you are kind of a customs agent here,

213
00:09:38,409 --> 00:09:38,930
kind of person.

214
00:09:40,082 --> 00:09:42,425
So going back to Cannon Brawl, the player fantasy here

215
00:09:42,425 --> 00:09:44,747
is not super clear.

216
00:09:44,747 --> 00:09:47,389
And I think the best I could come up with

217
00:09:47,389 --> 00:09:50,372
was you fly an airship, which can attack buildings

218
00:09:50,372 --> 00:09:52,495
and defense structures, and you use

219
00:09:52,495 --> 00:09:55,057
these to defeat your opponent, manage your economy,

220
00:09:55,057 --> 00:09:57,519
and it all takes place on a destructible battlefield.

221
00:09:57,519 --> 00:09:59,361
But that's really just a description

222
00:09:59,361 --> 00:10:01,884
of the game's mechanics, and it doesn't spark player

223
00:10:01,884 --> 00:10:04,026
imagination very well before they've tried it.

224
00:10:05,378 --> 00:10:06,939
And at the time we were coming up with Cannonball,

225
00:10:06,939 --> 00:10:09,160
it came from this very technical design place,

226
00:10:09,160 --> 00:10:10,701
which was we're going to take an RTS game

227
00:10:10,701 --> 00:10:12,102
and blend it with an artillery game.

228
00:10:12,102 --> 00:10:16,224
And that results in a really fun and interesting game.

229
00:10:16,224 --> 00:10:18,905
But if I'm a player looking at this on the Steam store,

230
00:10:18,905 --> 00:10:21,307
it's not very clear what I'm going to get,

231
00:10:21,307 --> 00:10:22,787
and I'm going to have a hard time imagining

232
00:10:22,787 --> 00:10:24,768
how compelling this game is going to be,

233
00:10:24,768 --> 00:10:27,570
especially if the next game in my queue

234
00:10:27,570 --> 00:10:29,991
is something that's very clear.

235
00:10:29,991 --> 00:10:31,452
I probably might go with that one.

236
00:10:32,496 --> 00:10:36,399
So with Kingdoms and Castles, we wanted to make the player fantasy simple and very clear.

237
00:10:36,399 --> 00:10:39,521
And so that is Build and Manage a Medieval City.

238
00:10:39,521 --> 00:10:43,304
And the title is a little generic, but it sums up the game very explicitly.

239
00:10:44,617 --> 00:10:48,819
The trailer we made sure shows you building a town

240
00:10:48,819 --> 00:10:50,339
at different sizes over time,

241
00:10:50,339 --> 00:10:53,981
and the screenshots show very clearly a medieval city

242
00:10:53,981 --> 00:10:56,903
and also specifically from camera angles and distances

243
00:10:56,903 --> 00:10:59,544
that you're familiar with in other city-building games.

244
00:10:59,544 --> 00:11:03,406
So when the player fantasy is clear,

245
00:11:03,406 --> 00:11:05,627
it's easier to imagine all the fun stories

246
00:11:05,627 --> 00:11:07,448
and good times you might have when you play this game,

247
00:11:07,448 --> 00:11:10,450
and that makes the game's appeal easier to communicate

248
00:11:10,450 --> 00:11:11,450
and the game easier to share.

249
00:11:13,148 --> 00:11:15,411
So at this point, we've got a game that we think resonates

250
00:11:15,411 --> 00:11:16,712
and we can scope it appropriately,

251
00:11:16,712 --> 00:11:19,696
and the player fantasy is properly communicated.

252
00:11:19,696 --> 00:11:23,420
And now we need to make it as efficiently as possible.

253
00:11:23,420 --> 00:11:26,564
So we lean very heavily on existing metaphors to save time.

254
00:11:28,143 --> 00:11:31,886
Going back to Cannonball again, this game instead invents

255
00:11:31,886 --> 00:11:34,168
and repurposes a lot of existing metaphors.

256
00:11:34,168 --> 00:11:36,549
And we had to spend a lot of time getting that

257
00:11:36,549 --> 00:11:38,531
to communicate properly to the player.

258
00:11:38,531 --> 00:11:40,993
So, for example, in Cannonball we have this magical shield tower.

259
00:11:40,993 --> 00:11:44,456
And there's not a lot of real world examples of a shield tower

260
00:11:44,456 --> 00:11:47,098
or there's not a lot of magical shield tower in fiction,

261
00:11:47,098 --> 00:11:49,519
except maybe in the context of sci-fi with a force field.

262
00:11:50,080 --> 00:11:51,601
But our shield tower is directional,

263
00:11:51,601 --> 00:11:52,942
comes out in an arc.

264
00:11:52,942 --> 00:11:56,325
It can be moved, but only before it is activated.

265
00:11:56,325 --> 00:11:58,527
It needs to be reactivated, but only after a cool down.

266
00:11:58,527 --> 00:12:00,268
It can be upgraded, shots break through

267
00:12:00,268 --> 00:12:02,610
relative to their strength and the shield tower strength.

268
00:12:02,610 --> 00:12:03,851
There is a lot to it,

269
00:12:03,851 --> 00:12:05,613
and we needed to make a tutorial level

270
00:12:05,613 --> 00:12:06,814
specific to teach this game,

271
00:12:06,814 --> 00:12:08,455
and we also had to spend a lot of time

272
00:12:08,455 --> 00:12:10,697
on all the different UI pieces to communicate all of it.

273
00:12:12,359 --> 00:12:15,143
And Cannonball is made up of a lot of these.

274
00:12:15,143 --> 00:12:17,046
For example, you have a headquarters

275
00:12:17,046 --> 00:12:19,590
where you dock your airship with to pull a building out of.

276
00:12:19,590 --> 00:12:21,693
And people, you don't expect a building

277
00:12:21,693 --> 00:12:23,956
to make new separate buildings.

278
00:12:23,956 --> 00:12:26,600
That's not a real world thing that happens.

279
00:12:27,200 --> 00:12:30,241
The airship carries the buildings across the map and places them.

280
00:12:30,241 --> 00:12:32,962
That's also not something you expect airships to be able to do.

281
00:12:32,962 --> 00:12:34,863
So every time we were doing this,

282
00:12:34,863 --> 00:12:37,684
we had to teach that and that took time.

283
00:12:37,684 --> 00:12:40,865
The buildings themselves like this little bomb thing here on the right,

284
00:12:40,865 --> 00:12:43,326
it shoots out a robot bomb that when it lands,

285
00:12:43,326 --> 00:12:45,947
walks to another building and explodes.

286
00:12:45,947 --> 00:12:48,988
It's just a lot of stuff we had to teach because it was

287
00:12:48,988 --> 00:12:52,609
newish or we were repurposing something that already existed.

288
00:12:52,609 --> 00:12:53,850
Then that required a lot of effort.

289
00:12:55,796 --> 00:12:58,358
So, Kingdoms and Castles relies heavily

290
00:12:58,358 --> 00:12:59,779
on existing cultural knowledge.

291
00:12:59,779 --> 00:13:01,820
Like, everyone knows what a farm and a road and a house do

292
00:13:01,820 --> 00:13:04,141
and what to expect from those.

293
00:13:04,141 --> 00:13:07,123
And so, people were able to figure out

294
00:13:07,123 --> 00:13:10,005
how to play the game without a tutorial,

295
00:13:10,005 --> 00:13:11,846
just by poking around, and we were able to get away

296
00:13:11,846 --> 00:13:13,888
with shipping without one, which saved a lot of time.

297
00:13:13,888 --> 00:13:16,710
And a lot of games use stuff like zombies or giant spiders,

298
00:13:16,710 --> 00:13:18,030
which are kind of tired,

299
00:13:18,030 --> 00:13:21,913
but that game is saving a lot of time by using something

300
00:13:21,913 --> 00:13:23,574
it doesn't need to teach you how it works.

301
00:13:24,739 --> 00:13:28,766
And the trade-off is that if you lean super heavily on existing design,

302
00:13:28,766 --> 00:13:31,391
then you're losing a chance at novelty or innovation.

303
00:13:31,391 --> 00:13:34,676
And Cannonball is for sure more innovative than Kingdoms and Castles.

304
00:13:36,050 --> 00:13:40,715
So the question is like, when should I innovate or invent design?

305
00:13:40,715 --> 00:13:46,161
And for me, now, that's if it's absolutely core to the game experience.

306
00:13:46,161 --> 00:13:50,385
So another game I worked on, Seven Billion Humans with Tomorrow Corporation, in this

307
00:13:50,385 --> 00:13:54,409
one we invented a programming language, a multi-agent runtime, and then all the programming

308
00:13:54,409 --> 00:13:55,070
puzzles.

309
00:13:55,738 --> 00:14:00,981
And this took a lot of time to invent and iterate and get this properly communicating and working.

310
00:14:00,981 --> 00:14:03,002
But without it, the game would not exist at all.

311
00:14:03,002 --> 00:14:07,004
So, like, that invented design was the game.

312
00:14:07,004 --> 00:14:11,366
So for me, like, if it is absolutely a core pillar to the game,

313
00:14:11,366 --> 00:14:14,327
or if I have time, then I invent.

314
00:14:14,327 --> 00:14:16,848
Otherwise, I lean heavily on existing design.

315
00:14:18,435 --> 00:14:21,558
So another way we save time was with the art style,

316
00:14:21,558 --> 00:14:23,300
and it is a very simple, low-poly style,

317
00:14:23,300 --> 00:14:26,743
and I could go from zero to in-game finished Asset

318
00:14:26,743 --> 00:14:27,624
in usually about two hours,

319
00:14:27,624 --> 00:14:30,907
and that is because everything was made out

320
00:14:30,907 --> 00:14:32,549
of simple primitives.

321
00:14:32,549 --> 00:14:35,552
So like if I have a building and I want to revise it,

322
00:14:35,552 --> 00:14:38,434
I just duplicate and rotate primitives.

323
00:14:38,434 --> 00:14:40,156
It takes, it is super fast.

324
00:14:40,156 --> 00:14:41,337
And if I want to make new buildings,

325
00:14:41,337 --> 00:14:43,459
I can just take old ones and kitbash them together.

326
00:14:45,288 --> 00:14:48,651
We kind of cut some corners with the UV

327
00:14:48,651 --> 00:14:51,934
where we just take the UVs for a particular shape

328
00:14:51,934 --> 00:14:53,696
and then drag them onto a palette Texture,

329
00:14:53,696 --> 00:14:56,499
and every building in the game uses the same palette Texture,

330
00:14:56,499 --> 00:14:59,722
so I do not have to spend time properly on UV wrapping anything.

331
00:14:59,722 --> 00:15:02,264
I actually do not know how to properly UV wrap anything.

332
00:15:02,264 --> 00:15:05,808
And if I want to change a color for something,

333
00:15:05,808 --> 00:15:06,949
I can change it once in the Texture,

334
00:15:06,949 --> 00:15:08,130
and it changes for everything in the game.

335
00:15:08,947 --> 00:15:12,749
So that, the simple shapes and flat texturing

336
00:15:12,749 --> 00:15:14,490
gets us to the left,

337
00:15:14,490 --> 00:15:16,411
and then Unity stock shadows, SSAO plug-in,

338
00:15:16,411 --> 00:15:18,692
color correction, and some slightly customized fog

339
00:15:18,692 --> 00:15:19,853
carry us the rest of the way.

340
00:15:19,853 --> 00:15:23,214
And the other benefit of this kind of simple,

341
00:15:23,214 --> 00:15:24,875
abstract art style is you can get away

342
00:15:24,875 --> 00:15:27,457
with some goofy behavior,

343
00:15:27,457 --> 00:15:29,598
like these farmer guys down there,

344
00:15:29,598 --> 00:15:30,698
they look like little pegs,

345
00:15:30,698 --> 00:15:32,920
and they are very clearly clipping through the wheat.

346
00:15:33,880 --> 00:15:35,401
and the farmer guys

347
00:15:35,401 --> 00:15:37,821
would actually clip through everything in the game.

348
00:15:37,821 --> 00:15:40,322
But if they had heads and arms and legs

349
00:15:40,322 --> 00:15:42,883
and the wheat looked like actual real-world wheat,

350
00:15:42,883 --> 00:15:45,624
you would have more of an expectation

351
00:15:45,624 --> 00:15:47,364
that they would walk properly down the rows

352
00:15:47,364 --> 00:15:48,164
and bend over to pick it up,

353
00:15:48,164 --> 00:15:50,645
and all that would have added time

354
00:15:50,645 --> 00:15:52,125
and gameplay code and design.

355
00:15:52,125 --> 00:15:54,186
The more realistic your assets look,

356
00:15:54,186 --> 00:15:54,886
the more realistic,

357
00:15:54,886 --> 00:15:58,327
the higher expectations players have for their behavior.

358
00:15:59,483 --> 00:16:03,147
And of course, the trade-off is that you end up with a game that looks very abstract.

359
00:16:03,147 --> 00:16:06,410
So if you're making something like Inside that gets a lot of value out of the

360
00:16:06,410 --> 00:16:08,833
really high-fidelity animation and interaction,

361
00:16:08,833 --> 00:16:12,677
you'd want to lean into that instead of what we did, which was the opposite.

362
00:16:12,677 --> 00:16:13,978
So beyond the concrete work on the game...

363
00:16:14,927 --> 00:16:17,729
Our studio culture was another big part of making the most of our time.

364
00:16:17,729 --> 00:16:21,813
And the biggest thing for us is that we don't crunch specifically to get more done.

365
00:16:21,813 --> 00:16:27,538
Because we found that when we crunch, we get sleep deprived, we burn out, then fights more

366
00:16:27,538 --> 00:16:32,163
easily escalate, we introduce more bugs, we make worse decisions, which leaves us less

367
00:16:32,163 --> 00:16:35,846
time to get work done, and then we feel like we have to crunch more, and that spirals downward.

368
00:16:36,547 --> 00:16:39,628
So instead, we want to stay well-rested,

369
00:16:39,628 --> 00:16:42,848
and that helps us resolve arguments constructively,

370
00:16:42,848 --> 00:16:44,889
introduce less bugs, make better decisions,

371
00:16:44,889 --> 00:16:47,170
which gives us more time to get work done

372
00:16:47,170 --> 00:16:48,950
and more time to rest.

373
00:16:48,950 --> 00:16:50,951
And the big way we found that crunch hurts

374
00:16:50,951 --> 00:16:52,931
is in evaluating decisions.

375
00:16:52,931 --> 00:16:55,812
And so we can frame decisions in two ways.

376
00:16:55,812 --> 00:16:56,853
One is a tactical decision,

377
00:16:56,853 --> 00:17:00,194
which is like maybe our skill tree needs three more skills,

378
00:17:00,194 --> 00:17:03,034
and a strategic decision,

379
00:17:03,034 --> 00:17:05,315
which is maybe we don't need skill trees at all.

380
00:17:05,315 --> 00:17:06,255
Maybe we should cut them.

381
00:17:07,489 --> 00:17:11,473
And so we'll do a little thought experiment

382
00:17:11,473 --> 00:17:13,054
in the context of kingdoms and castles.

383
00:17:13,054 --> 00:17:17,378
So in this thought experiment, let's imagine we're crunching.

384
00:17:17,378 --> 00:17:19,861
And we see another game.

385
00:17:19,861 --> 00:17:21,322
And their UI looks really good.

386
00:17:21,322 --> 00:17:24,985
This is Northgard on the left there and our UI on the right.

387
00:17:24,985 --> 00:17:26,627
And ours looks a little basic.

388
00:17:26,627 --> 00:17:28,569
And we might think that, well.

389
00:17:29,718 --> 00:17:31,339
they're basically a peer of ours.

390
00:17:31,339 --> 00:17:33,740
Let's bring our UI up to par. We'll just put in an hour

391
00:17:33,740 --> 00:17:37,121
or two extra a day to really make this game great.

392
00:17:37,121 --> 00:17:39,642
But there are some big issues with this decision

393
00:17:39,642 --> 00:17:42,764
that we're not able to properly evaluate,

394
00:17:42,764 --> 00:17:44,605
and we're going to pay for that later.

395
00:17:44,605 --> 00:17:47,646
So when we're crunching, we don't have the mental space

396
00:17:47,646 --> 00:17:50,928
to properly zoom out and consider things from a high level.

397
00:17:50,928 --> 00:17:53,229
We're only taking this next little tactical step.

398
00:17:53,229 --> 00:17:55,030
First, I'll redo this UI piece,

399
00:17:55,030 --> 00:17:56,530
then I'll redo this piece of art

400
00:17:56,530 --> 00:17:59,191
and change this piece of code around.

401
00:18:00,291 --> 00:18:04,493
And when you're crunching, it's much easier to think this way,

402
00:18:04,493 --> 00:18:05,754
because these decisions are easier to make

403
00:18:05,754 --> 00:18:09,436
than evaluating things from a very high level.

404
00:18:09,436 --> 00:18:11,557
But the problem is, it can turn out that 20 steps

405
00:18:11,557 --> 00:18:14,199
down this tactical decision tree,

406
00:18:14,199 --> 00:18:17,180
there's some big pitfalls, like maybe now disagreements

407
00:18:17,180 --> 00:18:19,842
with your team get very heated and very unproductive,

408
00:18:19,842 --> 00:18:23,524
and now maybe we realize that all the new UI

409
00:18:23,524 --> 00:18:26,025
is going to take a lot longer to do

410
00:18:26,025 --> 00:18:28,146
to execute it at this new high-quality bar.

411
00:18:29,147 --> 00:18:31,688
And also, because we're spending so much time doing this,

412
00:18:31,688 --> 00:18:35,370
maybe we're putting off reworking core design problems,

413
00:18:35,370 --> 00:18:38,071
or we're not even going to be able to see problems

414
00:18:38,071 --> 00:18:39,132
that we don't know exist yet,

415
00:18:39,132 --> 00:18:41,153
because we just don't have any mental space to think about it.

416
00:18:41,153 --> 00:18:44,234
And the final result can be, you know,

417
00:18:44,234 --> 00:18:45,975
there's three months left to ship,

418
00:18:45,975 --> 00:18:47,796
and you've got a really polished UI,

419
00:18:47,796 --> 00:18:51,617
but big pieces of the game are not coming together right,

420
00:18:51,617 --> 00:18:53,979
and we've got to make huge course corrections

421
00:18:53,979 --> 00:18:55,139
and end up throwing out work.

422
00:18:56,455 --> 00:19:01,639
And so the only thing to do is make these big changes and work ends up being wasted

423
00:19:01,639 --> 00:19:05,922
and go back to where you started on the decision tree and do a different path.

424
00:19:05,922 --> 00:19:10,065
And we think maybe well this is just how game development is, like how do we know this pit

425
00:19:10,065 --> 00:19:11,526
is here until we've fallen into it.

426
00:19:12,381 --> 00:19:14,623
But if we go back to the same scenario,

427
00:19:14,623 --> 00:19:15,744
and this time we're not crunching,

428
00:19:15,744 --> 00:19:18,807
we do have a lot of mental space to think strategically.

429
00:19:18,807 --> 00:19:20,449
We might come to a different conclusion,

430
00:19:20,449 --> 00:19:22,751
which is we're not gonna redo our UI.

431
00:19:22,751 --> 00:19:26,795
Yeah, it looks not great, but it's functional.

432
00:19:26,795 --> 00:19:29,658
It gets everything it needs to get across,

433
00:19:29,658 --> 00:19:30,939
and players are gonna get more value

434
00:19:30,939 --> 00:19:33,382
if we solve this other different problem.

435
00:19:33,382 --> 00:19:36,285
Maybe we have a mid-game decision lull we need to fix.

436
00:19:37,538 --> 00:19:44,182
And in this case, we do have the mental energy to climb all the way up and foresee all the pitfalls that we just talked about.

437
00:19:44,182 --> 00:19:48,164
And we can make better, better big decisions more often.

438
00:19:48,164 --> 00:19:55,689
And there won't be any more of these big come to Jesus moments where a big course correction will save or maybe not save the game.

439
00:19:55,689 --> 00:20:01,772
We'll have the mental space to discover these problems and fix them before they become a big issue.

440
00:20:03,144 --> 00:20:06,686
And then the question is, well, we just have so much to do

441
00:20:06,686 --> 00:20:07,987
and only so much budget and time,

442
00:20:07,987 --> 00:20:10,248
we have to crunch to get it all done.

443
00:20:10,248 --> 00:20:12,630
But I think that itself is a tactical decision,

444
00:20:12,630 --> 00:20:15,652
and the strategic decision in our case

445
00:20:15,652 --> 00:20:17,993
was to just cut early and all the time.

446
00:20:17,993 --> 00:20:20,715
So this is a screenshot of our to-do list,

447
00:20:20,715 --> 00:20:22,776
and most of these are big features

448
00:20:22,776 --> 00:20:24,637
that we did not ship the game with.

449
00:20:24,637 --> 00:20:27,439
And just every day, we reprioritized this list

450
00:20:27,439 --> 00:20:29,600
to make sure that we were working on only

451
00:20:29,600 --> 00:20:31,881
the most absolutely necessary thing to ship the game.

452
00:20:33,084 --> 00:20:33,944
in the time that we had.

453
00:20:33,944 --> 00:20:35,945
And we could have crunched to try and get as much done

454
00:20:35,945 --> 00:20:38,447
as possible, but then we would have run into all the

455
00:20:38,447 --> 00:20:39,347
problems we just talked about.

456
00:20:39,347 --> 00:20:43,450
So, and I think the other thing with crunch is that

457
00:20:43,450 --> 00:20:45,991
there's this conscious and sometimes subconscious attitude

458
00:20:45,991 --> 00:20:49,373
that we have to suffer for art, and that ends up

459
00:20:49,373 --> 00:20:51,435
meaning work ourselves to the bone.

460
00:20:51,435 --> 00:20:53,936
And then crunch also is sometimes romanticized

461
00:20:53,936 --> 00:20:56,678
as like a battlefield bonding experience.

462
00:20:56,678 --> 00:20:58,939
But this is kind of crazy because battlefields

463
00:20:58,939 --> 00:21:00,140
are a bad place to be.

464
00:21:00,140 --> 00:21:00,240
So.

465
00:21:01,710 --> 00:21:07,334
I like to reframe the suffer for art to instead mean just overcome interesting art design

466
00:21:07,334 --> 00:21:08,354
and code problems.

467
00:21:08,354 --> 00:21:11,677
Because we can definitely do that without the downward spiral of crunch.

468
00:21:11,677 --> 00:21:17,200
And there's a lot of really great and successful games made now without crunch.

469
00:21:17,200 --> 00:21:19,602
So let's make all of them that way.

470
00:21:21,387 --> 00:21:25,189
So we'll move on to how we marketed the game.

471
00:21:25,189 --> 00:21:28,350
Our marketing was mostly not separate from

472
00:21:28,350 --> 00:21:30,231
making the game itself.

473
00:21:30,231 --> 00:21:32,892
We didn't send tons of emails to press or YouTube.

474
00:21:32,892 --> 00:21:35,433
We didn't go to any trade shows.

475
00:21:35,433 --> 00:21:38,535
We just didn't have time to do any of that because we both

476
00:21:38,535 --> 00:21:39,215
had other jobs.

477
00:21:40,348 --> 00:21:42,910
I have taken care of my daughter.

478
00:21:42,910 --> 00:21:45,932
So really, it was mostly about going

479
00:21:45,932 --> 00:21:48,554
through the Market Fit testing process,

480
00:21:48,554 --> 00:21:49,875
maximizing the game's appeal,

481
00:21:49,875 --> 00:21:52,056
and each time we did a new Market Fit test,

482
00:21:52,056 --> 00:21:55,439
that was a way to show it to more and more eyeballs

483
00:21:55,439 --> 00:21:57,300
and have a higher and higher chance

484
00:21:57,300 --> 00:21:59,121
of some kind of serendipitous event.

485
00:21:59,121 --> 00:22:01,923
I will mention that Fig did help with some marketing,

486
00:22:01,923 --> 00:22:04,165
especially around the crowdfunding campaign.

487
00:22:04,165 --> 00:22:07,567
They were able to convert some of their newsletter subscribers

488
00:22:07,567 --> 00:22:08,107
to backers.

489
00:22:08,915 --> 00:22:13,236
They ran some Facebook ads, and they helped with some press

490
00:22:13,236 --> 00:22:15,197
releases around the campaign and launch.

491
00:22:15,197 --> 00:22:17,298
But by far, the biggest thing for us was that the game

492
00:22:17,298 --> 00:22:19,199
became organically popular on YouTube.

493
00:22:19,199 --> 00:22:24,481
So the way that happened was we gave out one free alpha

494
00:22:24,481 --> 00:22:27,562
key to a YouTuber after the crowdfunding campaign ended.

495
00:22:27,562 --> 00:22:30,263
And he made a video, and then other YouTubers saw it and

496
00:22:30,263 --> 00:22:31,864
wanted to try it too.

497
00:22:31,864 --> 00:22:33,745
And it bubbled up and down the YouTuber hierarchy.

498
00:22:33,745 --> 00:22:36,125
And each time we did an alpha update, we got

499
00:22:36,125 --> 00:22:37,146
another bump in videos.

500
00:22:37,566 --> 00:22:40,368
And the key was that when viewers are watching the video,

501
00:22:40,368 --> 00:22:43,050
they need a way to act on their interest.

502
00:22:43,050 --> 00:22:44,631
And in our case, we had all three of these.

503
00:22:44,631 --> 00:22:46,833
They could sign up for our newsletter,

504
00:22:46,833 --> 00:22:49,214
wish listed on Steam, or buy into the alpha

505
00:22:49,214 --> 00:22:52,256
as part of a late crowdfunding backer option.

506
00:22:52,256 --> 00:22:54,098
When we were working on Cannonball,

507
00:22:54,098 --> 00:22:56,559
we had TotalBiscuit do a video early on.

508
00:22:56,559 --> 00:23:00,482
But we didn't have a really good way for people to follow

509
00:23:00,482 --> 00:23:01,603
or track the game at that point.

510
00:23:01,603 --> 00:23:02,984
And that was kind of a missed opportunity.

511
00:23:02,984 --> 00:23:06,026
One question is, why was this?

512
00:23:07,356 --> 00:23:09,939
How did this become popular, organically popular on YouTube?

513
00:23:09,939 --> 00:23:11,280
And one answer is luck.

514
00:23:11,280 --> 00:23:16,165
There are some other factors that the game is very clear

515
00:23:16,165 --> 00:23:17,386
what it is from a thumbnail.

516
00:23:17,386 --> 00:23:20,109
Like it looks like a city building game from a thumbnail.

517
00:23:20,109 --> 00:23:24,112
So if you're browsing and you see your YouTuber has made

518
00:23:24,112 --> 00:23:26,735
a video like this and you like city building games,

519
00:23:26,735 --> 00:23:27,776
you're probably going to watch it.

520
00:23:27,776 --> 00:23:29,898
When you do watch it, there's a lot in there

521
00:23:29,898 --> 00:23:31,159
that you want to try for themselves.

522
00:23:31,400 --> 00:23:32,800
oh, why are they building their tavern here?

523
00:23:32,800 --> 00:23:34,901
I would have built it over here in my residential district.

524
00:23:34,901 --> 00:23:38,182
And it's easy to make into a long series of videos

525
00:23:38,182 --> 00:23:39,882
because growing a kingdom

526
00:23:39,882 --> 00:23:41,743
and kind of a sandbox building environment

527
00:23:41,743 --> 00:23:45,484
can take as long or as short a time as you want.

528
00:23:45,484 --> 00:23:48,105
And we also found that there's a specific

529
00:23:48,105 --> 00:23:52,826
indie strategy simulation set of YouTubers

530
00:23:52,826 --> 00:23:54,526
that play only those games, and this,

531
00:23:54,526 --> 00:23:57,227
our game fit really well in there

532
00:23:57,227 --> 00:23:58,868
into what they were looking for.

533
00:23:59,914 --> 00:24:00,976
which we did not know ahead of time.

534
00:24:00,976 --> 00:24:05,163
And really, this slide is just taking from the Slime Rancher

535
00:24:05,163 --> 00:24:08,869
GDC 2017 talk about how to make a game appealing for YouTube.

536
00:24:08,869 --> 00:24:11,674
So we tried what they said and found that it worked for us.

537
00:24:13,319 --> 00:24:16,522
So last we'll talk about the games community.

538
00:24:16,522 --> 00:24:22,328
And that was mostly Discord, which we started from day zero.

539
00:24:22,328 --> 00:24:24,550
And now we have about 1,000 active members

540
00:24:24,550 --> 00:24:25,551
on at any given time.

541
00:24:25,551 --> 00:24:28,715
And we mainly just link to it everywhere

542
00:24:28,715 --> 00:24:31,798
in our Steam description, in Steam announcements.

543
00:24:32,645 --> 00:24:34,165
crowdfunding updates on Twitter.

544
00:24:34,165 --> 00:24:38,046
The main benefit is that you're able to

545
00:24:38,046 --> 00:24:41,427
drill down into issues in real-time chat with people.

546
00:24:41,427 --> 00:24:43,308
So it helps you get past

547
00:24:43,308 --> 00:24:45,628
the feedback problem where people say,

548
00:24:45,628 --> 00:24:47,789
oh, this game is broken, and then that's it.

549
00:24:47,789 --> 00:24:49,809
Instead, if they say that,

550
00:24:49,809 --> 00:24:51,630
you can start asking questions right away like,

551
00:24:51,630 --> 00:24:53,470
okay, what specifically is broken?

552
00:24:53,470 --> 00:24:55,871
How does that work? In this example,

553
00:24:56,551 --> 00:24:58,392
This guy had a city of 5,000 people,

554
00:24:58,392 --> 00:25:00,834
and we had just introduced a graveyard mechanic,

555
00:25:00,834 --> 00:25:02,095
and it was causing this problem

556
00:25:02,095 --> 00:25:03,976
where he had to build graveyards constantly,

557
00:25:03,976 --> 00:25:05,777
and it was taking over his city.

558
00:25:05,777 --> 00:25:08,579
So, like, in chat, we were able to figure that out,

559
00:25:08,579 --> 00:25:11,561
and then he sent us his save game through Discord,

560
00:25:11,561 --> 00:25:13,462
and we were able to fix it that day.

561
00:25:13,462 --> 00:25:17,305
Same thing for bug and crash reports.

562
00:25:17,305 --> 00:25:19,746
Like, a lot of people don't have formal QA training,

563
00:25:19,746 --> 00:25:22,128
so trying to get repro steps out is really difficult.

564
00:25:22,128 --> 00:25:24,509
But if someone says,

565
00:25:25,964 --> 00:25:27,686
Oh, the game crashed.

566
00:25:27,686 --> 00:25:29,448
You can ask them, like,

567
00:25:29,448 --> 00:25:30,789
what happened before it crashed,

568
00:25:30,789 --> 00:25:32,871
like right then and there,

569
00:25:32,871 --> 00:25:33,752
and then spin that off into

570
00:25:33,752 --> 00:25:35,233
a private chat and really dig in.

571
00:25:35,233 --> 00:25:37,555
On this one, the repro steps or something crazy

572
00:25:37,555 --> 00:25:40,558
like pick 10 maps and on the 11th map,

573
00:25:40,558 --> 00:25:42,540
like then the game will hang.

574
00:25:42,540 --> 00:25:45,183
We're only able to figure this out by chatting with

575
00:25:45,183 --> 00:25:48,326
this guy for like 30 minutes in a private chat.

576
00:25:50,502 --> 00:25:52,342
It's also worth thinking about when you do,

577
00:25:52,342 --> 00:25:53,703
if you are going to do a Discord,

578
00:25:53,703 --> 00:25:55,523
the design of your channels.

579
00:25:55,523 --> 00:25:58,144
So we made a hands-off ideas channel because everyone

580
00:25:58,144 --> 00:26:00,945
has a lot of ideas about where the game should go,

581
00:26:00,945 --> 00:26:05,046
and it's nice to have an unbiased view

582
00:26:05,046 --> 00:26:07,446
on where people think it should go.

583
00:26:07,446 --> 00:26:09,207
Our main policy with the ideas channels

584
00:26:09,207 --> 00:26:10,527
is that we don't comment on any ideas.

585
00:26:13,822 --> 00:26:18,965
This is also because, say, if someone wants to add the killer bunny from Monty Python,

586
00:26:18,965 --> 00:26:22,046
they have a place where they can get that off their chest and feel heard,

587
00:26:22,046 --> 00:26:25,628
but then we also don't have to have an argument about that with them,

588
00:26:25,628 --> 00:26:27,670
about whether that makes sense to add to the game or not.

589
00:26:29,127 --> 00:26:34,052
We also used to have a random channel and all kinds of weird,

590
00:26:34,052 --> 00:26:38,937
scary random stuff ended up in there and I was moderating that every day.

591
00:26:38,937 --> 00:26:43,442
So I changed it instead to something called cool finds and stuff.

592
00:26:43,442 --> 00:26:45,404
It's not perfect, I still have to moderate it,

593
00:26:45,404 --> 00:26:49,689
but a lot less and then we also get a lot more cool finds and stuff.

594
00:26:51,744 --> 00:26:54,507
Somebody posted this Lego scene they were making.

595
00:26:54,507 --> 00:26:56,048
Somebody else was making something in Maya

596
00:26:56,048 --> 00:26:57,349
that they're just posting for fun.

597
00:26:57,349 --> 00:27:03,435
Also, somebody is a big baked goods fan on our channel.

598
00:27:03,435 --> 00:27:06,518
So, I'll close out the talk with a disclaimer,

599
00:27:06,518 --> 00:27:09,880
which is none of this is any kind of recipe for success.

600
00:27:09,880 --> 00:27:12,243
This is kind of how we robbed the bank in 2017,

601
00:27:12,243 --> 00:27:14,465
but now it's all changed.

602
00:27:14,465 --> 00:27:17,187
For example, Steam Greenlight doesn't exist anymore,

603
00:27:17,187 --> 00:27:18,888
so we would have to do that part differently.

604
00:27:19,897 --> 00:27:23,418
You can't count out luck in any aspect of our success.

605
00:27:23,418 --> 00:27:29,381
Just a quick example is that Steam changed their visibility algorithm in October 2018,

606
00:27:29,381 --> 00:27:31,002
which hurt our daily sales.

607
00:27:31,002 --> 00:27:33,483
We had launched well before that.

608
00:27:33,483 --> 00:27:36,924
If we had launched after that, would that have helped or hurt our visibility?

609
00:27:36,924 --> 00:27:40,466
It's impossible to say and totally outside our control.

610
00:27:40,466 --> 00:27:42,687
And then you can't count out privilege.

611
00:27:42,687 --> 00:27:46,289
We're very fortunate to have the opportunities and support network over the years that helped

612
00:27:46,289 --> 00:27:47,249
us get to where we are.

613
00:27:48,414 --> 00:27:51,896
So that's it for the talk. Thanks, everyone, for coming.

614
00:27:51,896 --> 00:28:04,962
Okay. We have time for two questions.

615
00:28:04,962 --> 00:28:07,744
Oh, great. At the beginning, you were talking

616
00:28:07,744 --> 00:28:10,865
about how you were using Twitter

617
00:28:10,865 --> 00:28:15,728
to evaluate your very first ideas and visuals on the game.

618
00:28:16,371 --> 00:28:18,234
How many sort of iterations did you have,

619
00:28:18,234 --> 00:28:21,098
and how many were you planning to try before just sort

620
00:28:21,098 --> 00:28:24,905
of tossing the idea entirely and thinking of some other game?

621
00:28:24,905 --> 00:28:25,485
Let's see.

622
00:28:25,485 --> 00:28:27,929
I mean, we iterated.

623
00:28:29,388 --> 00:28:31,170
I mean, that very first screenshot

624
00:28:31,170 --> 00:28:33,872
looked quite a bit different from the final result.

625
00:28:33,872 --> 00:28:37,035
We did iterate a bunch. Because it was so early,

626
00:28:37,035 --> 00:28:39,418
we were just kind of trying to get a feel of,

627
00:28:39,418 --> 00:28:43,141
like, if we do a voxel or low-poly city-building game,

628
00:28:43,141 --> 00:28:43,982
does anyone care at all?

629
00:28:43,982 --> 00:28:47,726
So, like, if, say, we had posted

630
00:28:47,726 --> 00:28:50,228
and been trying for maybe a month,

631
00:28:50,228 --> 00:28:51,970
and it just wasn't growing, then we would say,

632
00:28:51,970 --> 00:28:53,311
okay, time to try something else.

633
00:28:57,644 --> 00:29:02,626
I understand the need to make money, but when your thing on Twitter wasn't getting enough

634
00:29:02,626 --> 00:29:05,086
hits or whatever, how happy were you with the final product?

635
00:29:05,086 --> 00:29:09,508
Like, oh, I really wanted that feature versus, you know, obviously you need to make money

636
00:29:09,508 --> 00:29:13,509
to put food on the table, but how happy were you with that final release when you're like,

637
00:29:13,509 --> 00:29:15,070
oh, these five features have been really cool.

638
00:29:15,070 --> 00:29:17,530
I really wish people would have liked them more, something like that.

639
00:29:17,856 --> 00:29:20,438
What we released with I was happy with.

640
00:29:20,438 --> 00:29:23,781
Like it was basically the vision we had for the game.

641
00:29:23,781 --> 00:29:27,464
Not like if we had worked on it 10 more months,

642
00:29:27,464 --> 00:29:28,505
which we did post launch,

643
00:29:28,505 --> 00:29:30,366
it would have been everything we wanted,

644
00:29:30,366 --> 00:29:34,790
but we had a really solid core in when we did launch

645
00:29:34,790 --> 00:29:36,931
that I think that I was happy with.

646
00:29:36,931 --> 00:29:37,632
Thank you.

647
00:29:37,632 --> 00:29:43,417
All right.

648
00:29:43,417 --> 00:29:45,418
Oh, one more.

649
00:29:50,097 --> 00:29:53,739
So you talked a lot about, or not a lot, but at the end,

650
00:29:53,739 --> 00:29:56,261
about having to manage the community and talk with them.

651
00:29:56,261 --> 00:29:59,383
How much did that kind of detract from your production

652
00:29:59,383 --> 00:29:59,864
process?

653
00:29:59,864 --> 00:30:02,866
Because that's one of the issues I've been running into

654
00:30:02,866 --> 00:30:06,328
is just the more I have to interface with the community,

655
00:30:06,328 --> 00:30:09,671
the less mental space I have to focus on production.

656
00:30:09,671 --> 00:30:11,432
So I'm just kind of curious how you manage that.

657
00:30:12,394 --> 00:30:15,957
On Discord, I tend to check in once a day,

658
00:30:15,957 --> 00:30:17,619
and it's mostly settled down.

659
00:30:17,619 --> 00:30:24,104
And it's kind of more of like when we launch a beta version

660
00:30:24,104 --> 00:30:25,626
of our update, then I'm very involved

661
00:30:25,626 --> 00:30:28,928
because I need that to fix whatever issues

662
00:30:28,928 --> 00:30:30,249
we have with the update.

663
00:30:30,249 --> 00:30:33,392
But otherwise, we just kind of let it sit

664
00:30:33,392 --> 00:30:35,073
and just chime in here and there.

665
00:30:35,073 --> 00:30:38,216
The main community issue that I've run into

666
00:30:38,216 --> 00:30:39,777
is how to deal with the Steam forums.

667
00:30:40,649 --> 00:30:44,690
Because that feels like a garden that you

668
00:30:44,690 --> 00:30:46,451
need to be weeding a lot.

669
00:30:46,451 --> 00:30:49,371
And if you're not, then when you come back,

670
00:30:49,371 --> 00:30:51,312
it feels overwhelming.

671
00:30:51,312 --> 00:30:56,233
So with the Steam forums, I tend to check in kind of once a week.

672
00:30:56,233 --> 00:30:58,954
That way I have mental space to work on the game.

673
00:30:58,954 --> 00:31:01,074
And then for that one day during the week,

674
00:31:01,074 --> 00:31:03,795
I go in there and pull weeds and tend flowers and stuff.

675
00:31:03,795 --> 00:31:04,995
OK, cool.

676
00:31:04,995 --> 00:31:05,415
Thank you.

677
00:31:09,700 --> 00:31:13,143
Hi. You opened your talk talking about how you have,

678
00:31:13,143 --> 00:31:14,804
you can simulate up to like 5,000 actors.

679
00:31:14,804 --> 00:31:21,229
How are you able to measure the importance of what your audience,

680
00:31:21,229 --> 00:31:23,351
or the weight of importance

681
00:31:23,351 --> 00:31:29,836
that your audience places on that kind of simulation?

682
00:31:29,836 --> 00:31:33,219
I mean, there's no clear answer, but when we,

683
00:31:36,400 --> 00:31:40,121
I'd say it's important because each one of those people

684
00:31:40,121 --> 00:31:43,822
is simulated, kind of everything in the game depends on that.

685
00:31:43,822 --> 00:31:46,262
So like if I want to build a house,

686
00:31:46,262 --> 00:31:49,343
I need five simulated builders to physically go out

687
00:31:49,343 --> 00:31:51,983
and get the resources one by one and bring them back.

688
00:31:51,983 --> 00:31:54,024
So depending on how far those resources are away,

689
00:31:54,024 --> 00:31:55,804
like where did you put your stockpiles,

690
00:31:55,804 --> 00:31:57,885
where do you have your woodcutter guys,

691
00:31:57,885 --> 00:32:01,566
that directly impacts the time it takes to build that house.

692
00:32:01,566 --> 00:32:04,186
And so kind of the whole game is built around that.

693
00:32:04,827 --> 00:32:10,995
So I don't know if we have a good measure for how specifically important that is to people,

694
00:32:10,995 --> 00:32:13,618
but without it, kind of the core of the game goes away a little bit.

695
00:32:13,618 --> 00:32:14,620
Okay, thank you.

696
00:32:16,815 --> 00:32:20,679
So my question is also about the optimization process.

697
00:32:20,679 --> 00:32:28,705
So basically, because you simulate each character

698
00:32:28,705 --> 00:32:31,227
independently, would that be too slow when

699
00:32:31,227 --> 00:32:33,169
you have too many characters?

700
00:32:33,169 --> 00:32:33,930
Yes.

701
00:32:33,930 --> 00:32:36,212
And what kind of optimization techniques

702
00:32:36,212 --> 00:32:38,454
do you use to tackle that?

703
00:32:38,454 --> 00:32:40,876
So for the villagers.

704
00:32:42,087 --> 00:32:45,549
The main optimization is that they're very simple.

705
00:32:45,549 --> 00:32:47,991
Like they're not animated meshes in any way.

706
00:32:47,991 --> 00:32:52,795
They're just little static cube peg guys that hop around.

707
00:32:52,795 --> 00:32:55,997
And then for other things, we had a military system

708
00:32:55,997 --> 00:32:57,358
that also has thousands of little people.

709
00:32:57,358 --> 00:33:01,962
And for that we used instance rendering

710
00:33:01,962 --> 00:33:04,684
and just stored giant arrays of positions of all the guys

711
00:33:04,684 --> 00:33:07,646
and then send that off in a single instance draw call

712
00:33:07,646 --> 00:33:09,167
to make that work.

713
00:33:09,915 --> 00:33:13,897
So the main cost, computational cost, is from rendering?

714
00:33:13,897 --> 00:33:16,978
The main, well, a big part of it is from rendering,

715
00:33:16,978 --> 00:33:20,780
but a bigger part is from pathfinding for all those.

716
00:33:20,780 --> 00:33:24,481
For that part, like pathfinding, that part,

717
00:33:24,481 --> 00:33:27,703
what kind of technique do you use to optimize?

718
00:33:27,703 --> 00:33:30,344
So we have a deferred pathfinding system,

719
00:33:30,344 --> 00:33:33,405
where each frame you send pathfinding requests

720
00:33:33,405 --> 00:33:35,206
to a six-thread pool,

721
00:33:35,206 --> 00:33:38,688
and then they burn through those as fast as they can.

722
00:33:40,017 --> 00:33:40,963
All right, we gotta wrap up.

723
00:33:40,963 --> 00:33:41,647
Thanks for coming.

