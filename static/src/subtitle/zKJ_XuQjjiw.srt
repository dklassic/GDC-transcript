1
00:00:03,913 --> 00:00:06,636
Okay, good morning everyone, thank you all for turning up.

2
00:00:07,216 --> 00:00:07,897
Morning, Kurt.

3
00:00:09,058 --> 00:00:10,139
Appreciate it's Friday morning,

4
00:00:10,159 --> 00:00:12,242
it's not necessarily the easiest one to attend,

5
00:00:12,262 --> 00:00:13,062
so thank you for coming.

6
00:00:14,344 --> 00:00:18,228
You know by now all the house rules, right?

7
00:00:18,848 --> 00:00:20,650
Make sure your phones don't go off, no, no, no, no, no.

8
00:00:20,871 --> 00:00:23,493
Okay, I'll exit over there.

9
00:00:24,755 --> 00:00:26,877
Fine, okay, so I'm Paul Weir.

10
00:00:28,017 --> 00:00:31,942
I'm a composer, sound designer, basically do any audio production.

11
00:00:31,962 --> 00:00:34,844
If you're going to give me some cash, I'm quite happy to do anything.

12
00:00:34,865 --> 00:00:37,687
I've been around for quite a long time now.

13
00:00:38,268 --> 00:00:44,034
I'm the audio director of Hello Games, as well as being an audio director for Microsoft.

14
00:00:45,215 --> 00:00:50,258
So essentially I'm freelance with two jobs, which is quite nice to be in that position

15
00:00:51,359 --> 00:00:55,942
But today I'm going to talk a little bit about the process of sound designing No Man's Sky

16
00:00:56,943 --> 00:00:59,525
And the music creation process we went through as well

17
00:00:59,545 --> 00:01:04,968
I'm going to talk a little bit about some of the tools that we created and hopefully show them to you

18
00:01:06,509 --> 00:01:08,891
Some stuff will almost certainly crash. I'm going to warn you now

19
00:01:09,251 --> 00:01:13,334
There's gonna be a little bit of having to rig up things. So just bear with me. I'll get that in early

20
00:01:15,221 --> 00:01:20,007
I just again, a quick show of hands, I hate doing this, but

21
00:01:20,508 --> 00:01:22,230
are you familiar with the game No Man's Sky?

22
00:01:24,172 --> 00:01:24,612
Stick it up.

23
00:01:24,833 --> 00:01:25,754
So not everyone, that's fine.

24
00:01:25,774 --> 00:01:26,875
Most people, OK, fine.

25
00:01:28,057 --> 00:01:31,341
So No Man's Sky is a procedurally driven

26
00:01:31,881 --> 00:01:32,622
science fiction.

27
00:01:33,530 --> 00:01:35,151
an action adventure game.

28
00:01:36,632 --> 00:01:38,933
It crosses several different genres.

29
00:01:38,973 --> 00:01:40,793
You can treat it as pure exploration.

30
00:01:40,833 --> 00:01:42,794
You can treat it as an ambient experience if you want.

31
00:01:43,715 --> 00:01:48,077
Or you can treat it more as a kind of proactive trade,

32
00:01:48,477 --> 00:01:50,217
almost a little bit like a lease in some ways.

33
00:01:51,558 --> 00:01:53,419
There's no real story structure to it.

34
00:01:53,999 --> 00:01:55,059
It's very open-ended.

35
00:01:55,079 --> 00:01:57,641
And we have some light narrative on top.

36
00:01:57,701 --> 00:01:59,541
So there's no real voiceover.

37
00:01:59,581 --> 00:02:01,882
We got a little bit of voice, but it's mostly

38
00:02:01,902 --> 00:02:02,623
about the experience.

39
00:02:04,378 --> 00:02:08,141
Hello Games, if you don't already know, is a small company. We're still a small company.

40
00:02:08,682 --> 00:02:11,584
So, throughout development, there's probably between about 12...

41
00:02:11,704 --> 00:02:15,928
The main part of development, when I was involved, about 12 to 15 people

42
00:02:16,328 --> 00:02:19,451
for the entire development team, which is obviously still quite small.

43
00:02:20,773 --> 00:02:23,615
So, the audio department, there's obviously me, and that was it.

44
00:02:24,656 --> 00:02:27,519
But I had a lot of help from other people, so I just wanted...

45
00:02:28,119 --> 00:02:31,260
First of all, just give some thanks to some people who are involved, because it's important.

46
00:02:31,300 --> 00:02:34,481
Sometimes, like, I'm seen as the audio person for No Man's Sky,

47
00:02:35,541 --> 00:02:38,381
but we had Harry Denham, who is a programmer at Hello Games,

48
00:02:38,962 --> 00:02:43,263
who isn't an audio programmer, but, bless him, helped me with all my audio issues,

49
00:02:43,523 --> 00:02:45,063
with the wires integration, things like that.

50
00:02:45,823 --> 00:02:49,964
Super fantastic, super useful to have a coder who's on the side of audio.

51
00:02:50,544 --> 00:02:53,465
Even if you're not the audio coder, someone looking out after you.

52
00:02:53,505 --> 00:02:54,125
It's really lovely.

53
00:02:55,706 --> 00:02:58,170
And I've got a DSP programmer called Sandy White.

54
00:02:58,731 --> 00:03:01,875
So if you're British and old, like I am,

55
00:03:02,756 --> 00:03:04,559
Sandy wrote Ant Attack back in the 80s,

56
00:03:04,599 --> 00:03:07,003
I was at X-Spectrum, super bright guy.

57
00:03:07,849 --> 00:03:09,329
If you've ever been to any of my talks before,

58
00:03:09,489 --> 00:03:10,570
I've talked about him in the past,

59
00:03:10,590 --> 00:03:13,610
because he often does kind of my tricky DSP problems.

60
00:03:15,231 --> 00:03:16,451
And right at the end of development,

61
00:03:16,751 --> 00:03:19,952
I also had a freelance audio co-editor called Andy Hutchings

62
00:03:20,712 --> 00:03:23,972
to help profile-wise and get our performance up to scratch.

63
00:03:24,393 --> 00:03:25,593
So it's just important,

64
00:03:25,613 --> 00:03:28,333
because I don't want to make it look like I did everything.

65
00:03:28,353 --> 00:03:32,114
I did all the creative content and technical design,

66
00:03:32,154 --> 00:03:34,195
but obviously I had help with my friends.

67
00:03:36,147 --> 00:03:39,870
So I'm going to show you a short video now, which is just a series of clips,

68
00:03:41,632 --> 00:03:43,493
different examples of sound design from the game,

69
00:03:44,654 --> 00:03:47,796
just to kind of show the range that you find in the game.

70
00:05:33,482 --> 00:05:35,803
And so the obvious challenge with a game like this

71
00:05:36,183 --> 00:05:39,125
is both its scope and the simple fact

72
00:05:39,145 --> 00:05:42,488
that I don't know what a planet is before it's created.

73
00:05:43,108 --> 00:05:44,309
And if you've been to any of the talks

74
00:05:44,329 --> 00:05:47,051
from Hello Games guys, it's the same problem.

75
00:05:47,351 --> 00:05:48,492
How do you generate a landscape

76
00:05:48,512 --> 00:05:49,672
with all the features of a landscape

77
00:05:49,693 --> 00:05:51,574
without knowing in advance what the elements

78
00:05:51,594 --> 00:05:53,435
of the landscape are, what the landscape is?

79
00:05:54,676 --> 00:05:56,117
So we had to develop certain tools

80
00:05:56,257 --> 00:05:59,039
in order to understand the environment around us.

81
00:05:59,419 --> 00:06:00,480
Now in a normal game,

82
00:06:01,300 --> 00:06:02,821
if I take an example of.

83
00:06:04,757 --> 00:06:06,098
things like maybe a building.

84
00:06:06,798 --> 00:06:08,499
In a normal game you've got a building geometry,

85
00:06:08,519 --> 00:06:10,120
you know where a building's gonna be in advance,

86
00:06:10,740 --> 00:06:12,901
you can pre-bake things like obstruction occlusion,

87
00:06:14,101 --> 00:06:15,882
or you can add extra geometry to cope with that.

88
00:06:16,142 --> 00:06:18,483
But we don't have any of that, so I don't know anything

89
00:06:18,983 --> 00:06:20,584
until the engine reports back to me.

90
00:06:21,084 --> 00:06:23,425
So we had to build in Wwise a lot of systems

91
00:06:23,805 --> 00:06:26,827
which are very heavily state-driven and switch-driven

92
00:06:27,227 --> 00:06:29,248
in order to make decisions in real time.

93
00:06:29,648 --> 00:06:31,168
So that's some of which I'm gonna show you

94
00:06:31,208 --> 00:06:32,489
some of those little tools there.

95
00:06:33,492 --> 00:06:36,056
This next slide is going to be nothing new to many of you,

96
00:06:37,317 --> 00:06:41,262
but I think for our game in particular, it was really important that we moved away

97
00:06:41,442 --> 00:06:44,807
from simple one-on-one event-driven audio.

98
00:06:45,267 --> 00:06:47,250
So, something happens in the game, it triggers a sound.

99
00:06:47,610 --> 00:06:51,856
Now, obviously we still do that, right? It was the UI sounds that were where we do that.

100
00:06:52,617 --> 00:06:56,139
and there's certain set animations that don't change, so we'll do that for that.

101
00:06:56,159 --> 00:06:59,441
But wherever possible, I'm trying to boil down

102
00:07:00,601 --> 00:07:03,303
all the audio behaviors and all the actual audio content

103
00:07:03,703 --> 00:07:05,824
into as few actual trigger events as possible.

104
00:07:07,265 --> 00:07:10,607
So a good example of that, which I'll show you next, is how we handle ambient sounds.

105
00:07:11,812 --> 00:07:14,174
So that goes to system-driven.

106
00:07:14,894 --> 00:07:17,696
If you can do it, because you do need data coming back

107
00:07:17,736 --> 00:07:19,918
from the game, it has to be a two-way relationship,

108
00:07:20,939 --> 00:07:23,200
makes it very flexible, makes it very extensible.

109
00:07:23,861 --> 00:07:26,683
So for example, biomes.

110
00:07:27,603 --> 00:07:30,005
Every planet type has its own kind of atmosphere,

111
00:07:30,045 --> 00:07:30,986
its own characteristic.

112
00:07:31,146 --> 00:07:34,348
So you might have like a jungle planet or a frozen planet.

113
00:07:34,888 --> 00:07:37,370
So if we introduced a whole new planet type,

114
00:07:37,951 --> 00:07:40,054
I don't need a programmer to do anything for me.

115
00:07:40,174 --> 00:07:43,178
Literally, a programmer just tells me what the name of that planet type is.

116
00:07:43,819 --> 00:07:48,766
I go off and do all my audio, and in Wwise, just allocate that as a new state, and it

117
00:07:48,806 --> 00:07:49,247
pops in.

118
00:07:50,008 --> 00:07:51,110
Same for ship engines.

119
00:07:51,450 --> 00:07:52,271
We have a new ship engine.

120
00:07:53,064 --> 00:07:56,988
don't need any coding support, just add it straight in as a new state

121
00:07:57,008 --> 00:07:58,810
submit, it's going to be switched, like that.

122
00:07:59,610 --> 00:07:59,991
And it's there.

123
00:08:00,391 --> 00:08:02,193
So it gives me, as a sound designer,

124
00:08:02,713 --> 00:08:04,435
a lot of flexibility and a lot of control.

125
00:08:05,176 --> 00:08:06,157
I'm not trying to sell Wwise.

126
00:08:06,177 --> 00:08:08,319
Wwise was a good solution for us.

127
00:08:08,719 --> 00:08:10,040
There are other solutions available.

128
00:08:12,042 --> 00:08:13,704
So I was going to show you...

129
00:08:15,566 --> 00:08:16,687
I'll get to an example in a second.

130
00:08:18,289 --> 00:08:23,954
As a sound designer, though, there are certain key things I wanted to achieve right from the beginning.

131
00:08:24,815 --> 00:08:33,143
And I always had in mind the sensation of being in a spaceship, but parked on a planet and having the rain on the cockpit window.

132
00:08:34,244 --> 00:08:35,085
Which is very emotive.

133
00:08:35,865 --> 00:08:42,208
And for a science fiction game, what I've tried to do as much as possible is to have very relatable sounds.

134
00:08:42,829 --> 00:08:49,052
Like, sure, the sci-fi sounds, absolutely, the ship's a sci-fi, but wherever possible on the planets, make it familiar.

135
00:08:50,112 --> 00:08:55,715
Like wind, water, birds, are all very emotive sounds, all stochastic sounds.

136
00:08:56,315 --> 00:09:01,418
And through evolution, you know, we've learned to associate them with peace and with calmness.

137
00:09:02,258 --> 00:09:03,199
And there's a certain kind of...

138
00:09:04,039 --> 00:09:08,861
feeling we get with them. I think some of the nicest feedback I had was on Twitter with

139
00:09:08,881 --> 00:09:12,823
someone saying that when he was in the ship and it was raining, it kind of reminds him

140
00:09:12,863 --> 00:09:18,665
of being on his dad's farm in America in a pickup truck and just sitting there waiting

141
00:09:18,685 --> 00:09:22,327
for the storm to pass. That's lovely, that's an emotive moment.

142
00:09:23,087 --> 00:09:25,888
I'm trying to manufacture those little emotive moments

143
00:09:26,888 --> 00:09:28,048
but I can't plan for that.

144
00:09:28,709 --> 00:09:30,649
I can only build the systems that will allow for that.

145
00:09:30,989 --> 00:09:33,850
I don't have a key event where I know that's going to happen.

146
00:09:37,190 --> 00:09:39,851
So I was going to show you how we handle events.

147
00:09:41,271 --> 00:09:42,151
So this is a good example.

148
00:09:43,852 --> 00:09:45,192
I can attempt to show it to you in Wwise.

149
00:09:45,452 --> 00:09:47,153
When I do that, you'll see how ambitious I am.

150
00:09:49,181 --> 00:09:52,282
So we have one wise event with this name

151
00:09:52,922 --> 00:09:54,703
that handles all our global ambiences,

152
00:09:55,223 --> 00:09:57,804
all our local ambiences, the weather effects,

153
00:09:58,704 --> 00:10:00,144
whether there are creatures or not.

154
00:10:00,164 --> 00:10:03,585
So it's a combination of, for biomes,

155
00:10:03,785 --> 00:10:04,946
it's gonna be state.

156
00:10:05,857 --> 00:10:10,279
So you can only ever exist in one planet at a time, so that's a global ambience.

157
00:10:11,460 --> 00:10:13,561
For localised ambiences, it's a switch.

158
00:10:14,141 --> 00:10:15,522
So for example, you could be in a forest.

159
00:10:16,262 --> 00:10:21,085
And we have to work out, through raycasting, which I'll show you, what a forest is, because...

160
00:10:21,645 --> 00:10:23,746
There's nothing in the game to say I'm a forest.

161
00:10:24,547 --> 00:10:25,207
Same for water.

162
00:10:25,707 --> 00:10:29,529
Like, again, in a normal game, you would have some kind of

163
00:10:29,589 --> 00:10:31,030
emitters placed on the water.

164
00:10:31,050 --> 00:10:33,711
And water's generated, or you know where the water is.

165
00:10:34,131 --> 00:10:37,152
So you place some geometry, and you hear my sound emitters,

166
00:10:37,272 --> 00:10:38,013
and it's on top of water.

167
00:10:38,093 --> 00:10:38,833
I can't do that.

168
00:10:39,613 --> 00:10:41,014
I don't know where there's going to be water.

169
00:10:41,434 --> 00:10:43,555
So again, we're having to calculate stuff all in real

170
00:10:43,595 --> 00:10:43,795
time.

171
00:10:45,523 --> 00:10:48,585
And then the rain, it ended up being a bit of a joke.

172
00:10:48,665 --> 00:10:50,066
I keep telling Sean Murray,

173
00:10:50,106 --> 00:10:51,767
but we've basically built a rain simulator

174
00:10:52,367 --> 00:10:53,888
because I can't get enough rain into the game.

175
00:10:53,908 --> 00:10:55,568
I just love rain sounds.

176
00:10:56,769 --> 00:10:59,931
So we started off with just the rain is on or off.

177
00:11:00,812 --> 00:11:03,594
But as we've updated the game, we have things like,

178
00:11:03,834 --> 00:11:04,734
are you near a building?

179
00:11:04,774 --> 00:11:06,856
In which case, play some rain on building.

180
00:11:07,336 --> 00:11:08,276
Are you near some trees?

181
00:11:08,296 --> 00:11:09,197
So play that.

182
00:11:09,697 --> 00:11:10,658
So it's all additive.

183
00:11:10,818 --> 00:11:11,778
They're all multiple layers.

184
00:11:12,899 --> 00:11:15,360
I'll show you a video in a second of what happens when

185
00:11:15,381 --> 00:11:16,901
it's raining and you go into a building.

186
00:11:17,322 --> 00:11:18,262
I'll talk over it a little bit.

187
00:11:18,622 --> 00:11:21,664
But I'll explain how we're using systems, states, and

188
00:11:21,684 --> 00:11:24,526
then real-time controllers to kind of mix different

189
00:11:24,566 --> 00:11:25,406
elements in and out.

190
00:11:26,547 --> 00:11:28,888
And it's fine if, as a player, you don't notice this.

191
00:11:29,689 --> 00:11:30,209
And that's kind of.

192
00:11:31,434 --> 00:11:35,658
I think as a game, it's one of the curious things about this particular game.

193
00:11:36,779 --> 00:11:39,221
Many of the games I've worked on, you want those big moments, right?

194
00:11:39,501 --> 00:11:42,163
Especially as a sound designer, like, you know, we've got fairly big egos.

195
00:11:42,703 --> 00:11:45,526
So you kind of want to get into a key event and you want to fire off,

196
00:11:45,546 --> 00:11:47,507
you want to make it sound really awesome and go, wow.

197
00:11:48,248 --> 00:11:49,569
We don't really have those moments.

198
00:11:50,009 --> 00:11:52,271
We've just got long stretches of gameplay.

199
00:11:53,532 --> 00:11:54,713
It's up to a player what they do.

200
00:11:55,736 --> 00:11:56,376
I quite like that.

201
00:11:56,776 --> 00:11:59,318
So what I've tried to do is add all these little subtle

202
00:11:59,338 --> 00:12:01,439
layers that maybe you pick up and maybe you won't.

203
00:12:02,139 --> 00:12:04,040
But it kind of combines into a bigger thing

204
00:12:04,480 --> 00:12:08,582
where it makes it more of a believable environment.

205
00:12:09,522 --> 00:12:11,223
Not realistic, I'm not interested in realism,

206
00:12:12,163 --> 00:12:13,844
but I want to give you a sense of presence

207
00:12:14,504 --> 00:12:16,905
in that planet or that space.

208
00:12:19,526 --> 00:12:22,328
So let me show you this video about rain.

209
00:12:23,483 --> 00:12:24,083
So I love rain.

210
00:12:25,524 --> 00:12:28,465
So what you'll see is raining outside, I go inside.

211
00:12:30,005 --> 00:12:31,426
I'll talk over it a little bit, as I say,

212
00:12:31,486 --> 00:12:32,526
to explain what's happening.

213
00:12:38,208 --> 00:12:40,389
So as we go inside, the indoor rain will play.

214
00:12:47,932 --> 00:12:49,052
And that's room dependent.

215
00:12:49,872 --> 00:12:52,373
But we're now also detecting whether you're close to a window.

216
00:12:55,611 --> 00:12:57,793
Just back here that little kind of rain against the window.

217
00:13:06,040 --> 00:13:10,443
And as I go up here because it's room dependent then that we're gonna have

218
00:13:10,483 --> 00:13:12,565
rain on glass because that's a glass surface.

219
00:13:16,268 --> 00:13:17,909
These are all different rains loops.

220
00:13:29,012 --> 00:13:30,273
So spectacularly unexciting.

221
00:13:30,573 --> 00:13:33,076
You know, you don't have to cut, it's vain, thank you.

222
00:13:33,837 --> 00:13:34,778
Wait till the end, it's fine.

223
00:13:35,599 --> 00:13:39,303
And really it's not, you know, it's not showy,

224
00:13:39,364 --> 00:13:40,445
it's just what it is.

225
00:13:41,626 --> 00:13:44,469
But again, I don't know that there's a window there.

226
00:13:44,710 --> 00:13:45,571
Like, we don't know.

227
00:13:46,327 --> 00:13:48,409
So we have to keep detecting, am I near glass?

228
00:13:48,990 --> 00:13:49,850
Is the glass a window?

229
00:13:49,930 --> 00:13:53,073
In which case, then start to ramp up that particular sound.

230
00:13:53,974 --> 00:13:56,696
We also do this little thing, which I quite liked.

231
00:13:56,716 --> 00:13:59,158
We did it early on, is when you change states,

232
00:13:59,178 --> 00:14:00,860
so when you come from indoors to outdoors,

233
00:14:01,100 --> 00:14:04,222
we boost all the ambiences by 6 dB, just for a few seconds,

234
00:14:04,643 --> 00:14:06,064
just to give you that kind of sense of rush,

235
00:14:06,324 --> 00:14:07,725
same as when you come out of the ship.

236
00:14:08,726 --> 00:14:10,948
And it's a difficult game to mix,

237
00:14:11,008 --> 00:14:12,650
as you can imagine with all these different elements.

238
00:14:16,070 --> 00:14:19,954
So how we do that, ray casting is really important for us.

239
00:14:20,815 --> 00:14:23,398
So again, like ray casting is commonly done

240
00:14:23,678 --> 00:14:25,180
for various different audio purposes.

241
00:14:25,520 --> 00:14:27,122
We're using it to detect the environment.

242
00:14:27,803 --> 00:14:30,906
So we have beams that go up to detect enclosure

243
00:14:31,226 --> 00:14:33,148
or enclosedness, that's not a word,

244
00:14:33,449 --> 00:14:34,330
but you understand what I'm saying,

245
00:14:34,850 --> 00:14:36,252
which is how covered am I?

246
00:14:37,293 --> 00:14:38,094
And then we don't know that.

247
00:14:38,785 --> 00:14:40,707
So, that's an analog value.

248
00:14:41,367 --> 00:14:42,648
So if you're partially covered,

249
00:14:43,088 --> 00:14:45,089
I will start to change some of the sound design.

250
00:14:45,549 --> 00:14:47,711
We'll have some kind of little rumbles coming in.

251
00:14:48,291 --> 00:14:50,933
We'll start to have a low-pass filter on some of the sounds.

252
00:14:51,653 --> 00:14:52,794
But after a period of time,

253
00:14:52,874 --> 00:14:56,396
if a raycasting system goes, I'm 100% enclosed,

254
00:14:56,956 --> 00:14:58,737
therefore the logic is I must be in a cave.

255
00:14:59,478 --> 00:15:01,099
So if I'm in a cave, we'll change state.

256
00:15:01,479 --> 00:15:02,720
And that will obviously affect the ambiences,

257
00:15:02,740 --> 00:15:04,521
it will affect the veins, it will affect all of the mix

258
00:15:04,641 --> 00:15:06,302
and filtering of external sounds.

259
00:15:07,742 --> 00:15:10,904
Same for water, so we have to detect, am I close to water?

260
00:15:11,684 --> 00:15:14,786
Is there anything obstructing me from the water?

261
00:15:16,828 --> 00:15:19,209
And then we've got beams that go straight down

262
00:15:19,229 --> 00:15:21,791
to detect footsteps as well,

263
00:15:22,371 --> 00:15:23,732
whether you're in contact with the ground,

264
00:15:23,752 --> 00:15:25,533
because that's a bloody hard problem.

265
00:15:25,994 --> 00:15:28,635
If you worked on games before, even normal games,

266
00:15:28,696 --> 00:15:30,457
it's actually sometimes quite hard to detect,

267
00:15:30,617 --> 00:15:32,158
am I in contact with the ground?

268
00:15:32,878 --> 00:15:34,179
When you've got a surface

269
00:15:34,199 --> 00:15:35,880
which is continually changing over time.

270
00:15:36,441 --> 00:15:37,721
It's a real issue.

271
00:15:38,802 --> 00:15:41,082
And then we've got another beam which heads towards the sun,

272
00:15:41,322 --> 00:15:42,703
and I've absolutely no idea why we've got that.

273
00:15:43,563 --> 00:15:44,823
Programmer put it in for some reason.

274
00:15:47,684 --> 00:15:48,605
And similar for the water.

275
00:15:49,445 --> 00:15:52,866
So we use a dynamic emitter system for water.

276
00:15:53,807 --> 00:15:55,408
Again, wise handles for this kind of thing.

277
00:15:56,369 --> 00:15:58,411
So we don't want loads of sound emitters

278
00:15:59,212 --> 00:16:00,133
stretched across the water.

279
00:16:00,593 --> 00:16:03,996
And if you watch it live, it's quite cute,

280
00:16:04,016 --> 00:16:05,998
because these little emitters kind of dance around

281
00:16:06,258 --> 00:16:07,400
and kind of follow you around.

282
00:16:07,965 --> 00:16:11,407
So we're always tracking your position so that you hear the fact that there's water.

283
00:16:11,427 --> 00:16:16,390
But if you go into like a free cam and go near the water, you won't hear the water.

284
00:16:16,830 --> 00:16:19,352
Because it doesn't know that the camera is near the water.

285
00:16:20,012 --> 00:16:22,214
So we're always kind of just building stuff around you

286
00:16:22,894 --> 00:16:27,077
to give you a perception of things that are happening when it's, you know, in a sense it's all a lie.

287
00:16:28,458 --> 00:16:29,719
But also we get lots of stuff for free.

288
00:16:30,459 --> 00:16:30,619
So...

289
00:16:31,616 --> 00:16:35,401
you come into the water, if you walk out of the water, you're going to have wet footsteps.

290
00:16:36,503 --> 00:16:38,345
Because we have that data in the system.

291
00:16:38,926 --> 00:16:40,448
So because we've gone so state-based,

292
00:16:40,889 --> 00:16:43,332
and getting all this data back, we can get loads of stuff for free.

293
00:16:44,133 --> 00:16:45,715
I don't need any more support for that.

294
00:16:46,356 --> 00:16:48,819
A good example, a really simple example, is storms.

295
00:16:49,730 --> 00:16:50,711
Again, nice weather effects.

296
00:16:52,171 --> 00:16:54,993
Behind the scenes, technically, the storm sounds

297
00:16:55,033 --> 00:16:55,793
are playing all the time.

298
00:16:56,113 --> 00:16:58,675
But they're on a slider to go, is it really stormy?

299
00:16:59,095 --> 00:17:00,315
If it's not, pull it to zero.

300
00:17:00,776 --> 00:17:03,337
So all this audio is just as virtual voices.

301
00:17:04,837 --> 00:17:06,758
But we know if you're indoors or if you're outdoors.

302
00:17:07,419 --> 00:17:10,260
So recently, I was like, OK, well, I know you're indoors.

303
00:17:10,280 --> 00:17:11,801
Let's just have indoor storm sounds.

304
00:17:12,081 --> 00:17:13,962
Like, don't need anyone to do that for me.

305
00:17:14,182 --> 00:17:15,102
I just need to put the audio in.

306
00:17:16,003 --> 00:17:18,104
We are lucky in that.

307
00:17:20,044 --> 00:17:24,871
We stream a little bit of textures occasionally, but pretty well all the streaming is for audio.

308
00:17:24,991 --> 00:17:26,373
Like, 90% of the stream is for audio.

309
00:17:26,934 --> 00:17:31,941
So I don't have any limitations on how big my file sizes need to be, which is splendid.

310
00:17:33,183 --> 00:17:37,148
So, you know, we don't need to have a 30 second rain loop, I can just have a 3 minute rain loop.

311
00:17:37,829 --> 00:17:39,330
And up until now, no one complains.

312
00:17:39,951 --> 00:17:41,972
At some point, some code is going to tell me off

313
00:17:41,992 --> 00:17:42,393
for doing that.

314
00:17:43,714 --> 00:17:46,056
So again, Sean Murray often says, like, the game, the

315
00:17:46,096 --> 00:17:49,479
actual game install is like 500 meg for the game and all

316
00:17:49,499 --> 00:17:49,959
the assets.

317
00:17:50,640 --> 00:17:53,242
And originally, it was 1 and 1 half gig for audio, which is

318
00:17:53,482 --> 00:17:53,883
compressed.

319
00:17:55,204 --> 00:17:56,745
It's kind of grown and grown and grown.

320
00:17:57,146 --> 00:18:00,689
It's really nice to say, we've got a game where 2 thirds, 3

321
00:18:00,909 --> 00:18:03,912
quarters of it is just audio, which is.

322
00:18:04,978 --> 00:18:07,320
a win for audio people. I'm very happy about that.

323
00:18:10,642 --> 00:18:13,664
Okay, so if we move on to the idea of procedural generation

324
00:18:15,125 --> 00:18:16,726
and as it relates to audio.

325
00:18:19,408 --> 00:18:23,011
You're probably familiar with the discussions that have been going on

326
00:18:23,031 --> 00:18:24,472
with people talking about procedural audio.

327
00:18:25,567 --> 00:18:28,950
I'm going to try and show you some examples of how we do that.

328
00:18:29,050 --> 00:18:33,454
But just first of all, just talk very, very briefly on what is procedural generation content.

329
00:18:34,355 --> 00:18:36,237
Just in case you're not familiar, I won't spend much time on it.

330
00:18:38,255 --> 00:18:43,360
So you can define it as any kind of algorithmically created content, so any computer generated content

331
00:18:44,240 --> 00:18:49,945
based on some logic system. So very common to use it for things like textures,

332
00:18:50,645 --> 00:18:56,070
for things like landscape generation. And it's super useful where there's an issue of scale.

333
00:18:56,790 --> 00:19:00,914
So hand crafting landscapes is hard and time consuming, so if you can get the computer to do

334
00:19:00,954 --> 00:19:02,055
it that's so much the better.

335
00:19:03,076 --> 00:19:03,818
And it's not either or.

336
00:19:04,420 --> 00:19:08,613
So usually you would have some procedural content, but then

337
00:19:08,673 --> 00:19:10,358
fully authored content alongside it.

338
00:19:13,947 --> 00:19:15,769
Some of the difficulties though with procedural content,

339
00:19:17,090 --> 00:19:19,472
and it's quite common to do level design

340
00:19:19,912 --> 00:19:20,613
procedurally as well,

341
00:19:21,113 --> 00:19:23,215
is to give a sense of this kind of meaningfulness,

342
00:19:23,355 --> 00:19:25,817
like it feels like it's handcrafted.

343
00:19:26,938 --> 00:19:29,361
An audio equivalent would be, and we'll come back to this,

344
00:19:30,201 --> 00:19:31,082
one of my big issues,

345
00:19:31,983 --> 00:19:33,564
is that if you have procedural audio,

346
00:19:34,065 --> 00:19:38,068
the perception of it has to be as good as traditional audio.

347
00:19:39,137 --> 00:19:44,622
It's no good if you compromise and go, well it's procedural and it sounds a bit shit, but it doesn't matter because it's procedural.

348
00:19:44,943 --> 00:19:48,186
That's not acceptable. As a sound designer, I can't accept that.

349
00:19:49,627 --> 00:19:53,912
It's easier visually, you can get away with it. It's harder in terms of audio.

350
00:19:55,053 --> 00:19:59,297
So there's this problem of does it feel guided, does it feel crafted, when it's not.

351
00:20:01,268 --> 00:20:04,349
And also this really interesting issue that we kept coming up against in the game,

352
00:20:04,969 --> 00:20:08,851
which is you can generate variety, you can generate infinite variety,

353
00:20:09,331 --> 00:20:11,032
but as humans we don't perceive that.

354
00:20:11,232 --> 00:20:14,934
We perceive this kind of sense it never really changes, ironically,

355
00:20:15,294 --> 00:20:16,194
because it's always changing.

356
00:20:16,995 --> 00:20:19,075
So to illustrate that would be, say, sky colours.

357
00:20:19,876 --> 00:20:22,937
If you have all the colours of a rainbow possible for the sky,

358
00:20:23,724 --> 00:20:27,186
Very quickly you go, oh, it's just a pink sky planet.

359
00:20:27,566 --> 00:20:28,907
It looks all the same to the others.

360
00:20:29,207 --> 00:20:31,108
It's not the same, but it feels the same,

361
00:20:31,448 --> 00:20:33,169
because you're seeing all the graduations.

362
00:20:33,849 --> 00:20:36,931
So even though that's possible, in fact, what you end up doing

363
00:20:37,131 --> 00:20:38,231
is kind of chunking it up.

364
00:20:38,572 --> 00:20:39,772
It's almost like quantizing it.

365
00:20:40,232 --> 00:20:42,233
You go, OK, I'm not going to give you all the shades.

366
00:20:42,474 --> 00:20:43,974
I'm going to give you specific shades.

367
00:20:44,455 --> 00:20:45,695
We could generate all, but we're not.

368
00:20:46,295 --> 00:20:49,556
And that was also relevant for some of the audio technology that I'll show you.

369
00:20:50,097 --> 00:20:53,778
Yes, it's possible to do wide range, but you don't pick up what you want to use.

370
00:20:54,138 --> 00:20:56,719
Ah, I haven't heard that before. That's different. I notice that's different.

371
00:21:03,521 --> 00:21:08,003
So a good example of that, I talked about procedural generation.

372
00:21:09,663 --> 00:21:13,766
Landscape generation, so the textures are photo textures,

373
00:21:13,946 --> 00:21:17,188
but the landscape is mathematically calculated,

374
00:21:17,208 --> 00:21:17,968
that's Terragent.

375
00:21:21,110 --> 00:21:22,351
And then we get into the tricky problem,

376
00:21:22,391 --> 00:21:24,292
talking about audio, what is procedural audio?

377
00:21:24,313 --> 00:21:27,855
Right, and I'm not saying that I've got the definition,

378
00:21:27,915 --> 00:21:29,856
I've got a definition, I'm not saying it's the definition,

379
00:21:30,396 --> 00:21:32,858
but as I've done it, I'm gonna say it's the definition,

380
00:21:32,878 --> 00:21:34,239
because I'm allowed to do that here.

381
00:21:35,461 --> 00:21:40,302
But there's this real ambiguity, like what actually is procedural audio? What does that mean?

382
00:21:42,543 --> 00:21:51,485
I have no end of students giving me their master's thesis and essays and wanting to interview about procedural audio, which is fantastic.

383
00:21:52,625 --> 00:21:55,606
But no one seems clear, like what the hell is it?

384
00:21:56,686 --> 00:21:59,027
So it could be, for example, physical modelling of sounds.

385
00:22:00,082 --> 00:22:02,023
So that could be a good explanation.

386
00:22:02,283 --> 00:22:05,225
So it's mathematically creating sounds.

387
00:22:05,265 --> 00:22:06,725
And that would seem to fit quite well.

388
00:22:07,306 --> 00:22:12,689
So a really simple example of that would be this violin sound, or cello.

389
00:22:32,515 --> 00:22:35,778
And that's just reactor with a physical modeled stringed instrument.

390
00:22:36,158 --> 00:22:39,241
We're really trying to play it on my keyboard and kind of failing.

391
00:22:40,422 --> 00:22:43,785
But yeah, there's no samples, there's no recording, it's all mathematically calculated.

392
00:22:43,885 --> 00:22:47,608
And stringed instruments and wind instruments work relatively well like that.

393
00:22:49,349 --> 00:22:51,351
Procedural audio could involve granular synthesis.

394
00:22:51,651 --> 00:22:53,453
We talked yesterday on that subject.

395
00:22:55,134 --> 00:22:58,898
Or, I've often seen it as really any form of synthesis could be procedural audio.

396
00:23:00,250 --> 00:23:03,693
or even I've seen people talk about just using DSP effects.

397
00:23:05,254 --> 00:23:06,255
So the problem I have with that

398
00:23:06,515 --> 00:23:08,697
is it can't just be DSP effects, right?

399
00:23:08,957 --> 00:23:11,398
Because we've used reverbs and filters and distortions,

400
00:23:11,939 --> 00:23:13,800
you know, literally for decades, right?

401
00:23:14,461 --> 00:23:15,902
So if you're gonna say that's procedural audio,

402
00:23:15,922 --> 00:23:17,863
then just basically everything's procedural audio

403
00:23:17,923 --> 00:23:18,584
and it's pointless.

404
00:23:20,165 --> 00:23:23,609
I object to real-time synthesis because from the 80s,

405
00:23:24,230 --> 00:23:26,873
late 70s, early 80s, that's what games were doing.

406
00:23:26,893 --> 00:23:30,337
Arcade games had a little Yamaha chip,

407
00:23:30,757 --> 00:23:33,100
and we're creating the sound live using synthesis.

408
00:23:33,641 --> 00:23:36,504
So yeah, okay, maybe that's procedural audio,

409
00:23:36,524 --> 00:23:38,887
but it needs to be more than that, right?

410
00:23:40,412 --> 00:23:43,053
And granular synthesis, again it's not a new idea,

411
00:23:43,073 --> 00:23:45,014
been around in games for at least a decade,

412
00:23:45,434 --> 00:23:47,155
often used for car racing games,

413
00:23:47,835 --> 00:23:50,416
if you play Quantum Break from a time dilation audio effect

414
00:23:50,516 --> 00:23:52,797
is a granular synthesis effect, it's very nice.

415
00:23:53,577 --> 00:23:56,578
And if we use physical modeling,

416
00:23:57,439 --> 00:23:58,879
is that in itself just enough?

417
00:24:00,540 --> 00:24:02,921
Does it mean just I'm modeling a sound and that's it,

418
00:24:02,981 --> 00:24:03,681
that is procedural?

419
00:24:08,855 --> 00:24:12,997
So my question is, if it is just that, and everyone's talking about it, where is it?

420
00:24:14,317 --> 00:24:15,638
Where are the games that are doing it?

421
00:24:15,658 --> 00:24:19,140
And I think there are certain issues.

422
00:24:20,040 --> 00:24:21,521
I'll get to a definition of what I think it is.

423
00:24:23,122 --> 00:24:24,963
But if you're going to make some new audio technology...

424
00:24:26,020 --> 00:24:28,082
It's hard. It's hard to justify the cost.

425
00:24:28,322 --> 00:24:30,404
I think it's a very good thing to do, and I think you should do it.

426
00:24:30,925 --> 00:24:32,587
But it's a difficult argument, right?

427
00:24:32,807 --> 00:24:34,348
Because everyone's comfortable with their tools,

428
00:24:34,749 --> 00:24:37,852
we have a job to do, we've got lots of sounds to make in a very short amount of time,

429
00:24:37,892 --> 00:24:39,113
with very little money, right?

430
00:24:39,254 --> 00:24:40,255
So we need to get on with it.

431
00:24:40,515 --> 00:24:41,616
And to have to say,

432
00:24:41,856 --> 00:24:43,418
excuse me, I can't do anything for the next six months

433
00:24:43,458 --> 00:24:44,980
because I need a programmer to build this for me,

434
00:24:45,040 --> 00:24:46,721
is a very hard argument to make.

435
00:24:47,856 --> 00:24:49,676
But it's also very much a multidisciplinary problem.

436
00:24:50,297 --> 00:24:54,478
So you need sound designers or audio directors who are either

437
00:24:54,498 --> 00:24:57,238
programmers themselves, and I'm not a programmer, or very

438
00:24:57,299 --> 00:25:00,259
technically literate, and are able to define a problem for a

439
00:25:00,339 --> 00:25:02,380
programmer to solve in a way that is coherent and a

440
00:25:02,420 --> 00:25:03,480
programmer can understand.

441
00:25:04,300 --> 00:25:05,901
And many audio directors I know are very good.

442
00:25:06,201 --> 00:25:07,241
Not everyone is very good at that.

443
00:25:07,861 --> 00:25:10,142
Some people struggle to communicate in an effective

444
00:25:10,182 --> 00:25:10,802
way with coders.

445
00:25:12,457 --> 00:25:14,137
There aren't any commercial tools yet.

446
00:25:14,558 --> 00:25:17,759
There are some very, very nearly out of market,

447
00:25:18,159 --> 00:25:20,260
but there's still a lack of off-the-shelf tools

448
00:25:20,300 --> 00:25:20,900
to build things.

449
00:25:21,401 --> 00:25:24,002
Yes, you could use Pure Data or Max MSP,

450
00:25:24,622 --> 00:25:25,563
Flowstone is another one,

451
00:25:26,663 --> 00:25:28,824
but they're difficult to implement in games.

452
00:25:29,084 --> 00:25:30,365
They're not really game ready.

453
00:25:32,866 --> 00:25:35,827
And of the existing procedural audio that I've heard,

454
00:25:35,847 --> 00:25:39,769
they tend to pick off a really obvious simple examples.

455
00:25:40,209 --> 00:25:41,470
I'm not criticizing for that.

456
00:25:42,393 --> 00:25:45,599
But it does tend to be things like wind and rain and sounds like that.

457
00:25:46,260 --> 00:25:51,950
Now, as a sound designer, I object to that on a moral basis,

458
00:25:52,792 --> 00:25:54,414
because it's almost like an...

459
00:25:56,608 --> 00:26:02,533
It's treating sounds as a function rather than a creative, emotive element.

460
00:26:03,273 --> 00:26:05,495
So I've already talked about rain, but wind?

461
00:26:05,996 --> 00:26:07,537
There's a thousand different types of wind.

462
00:26:07,917 --> 00:26:11,801
It could be the gentle wind in the trees, which is reassuring.

463
00:26:12,421 --> 00:26:15,484
It could be the winter wind through a crack in the door.

464
00:26:15,924 --> 00:26:18,406
It could be the spooky winds that you get in a horror film, right?

465
00:26:19,107 --> 00:26:20,708
It has a character, has a life to it.

466
00:26:21,108 --> 00:26:21,889
And that's what we do.

467
00:26:22,089 --> 00:26:23,611
We go off and record these sounds.

468
00:26:24,091 --> 00:26:26,912
and we go, all right, that's going to make me feel a certain thing.

469
00:26:27,472 --> 00:26:31,233
And so to have wind that is essentially filtered white noise, and I'm doing them into service,

470
00:26:31,853 --> 00:26:32,893
but you get the point,

471
00:26:34,154 --> 00:26:37,115
is saying, okay, there's wind, right, we've solved that, let's move on.

472
00:26:37,995 --> 00:26:42,096
There's a bit of noise, and we add a filter to it, and that can be our lane, and we'll move on.

473
00:26:42,796 --> 00:26:45,397
And there's a place for that, but it's not where I want to go.

474
00:26:49,718 --> 00:26:52,379
So what I'm saying is that procedural audio

475
00:26:53,277 --> 00:26:55,358
to make it different, to make it procedural,

476
00:26:55,698 --> 00:26:57,659
it has to be driven by the game, right?

477
00:26:57,979 --> 00:26:59,820
So there's something where it's not just,

478
00:27:00,260 --> 00:27:01,440
here's a sound, play a sound.

479
00:27:02,000 --> 00:27:03,361
It's, what are you doing, game?

480
00:27:03,781 --> 00:27:05,522
I'm gonna react to that in some way,

481
00:27:05,722 --> 00:27:07,402
and that's gonna be reflected in the sounds

482
00:27:07,422 --> 00:27:08,083
that I'm producing.

483
00:27:09,783 --> 00:27:11,404
In order to do that, it has to use some form

484
00:27:11,424 --> 00:27:12,884
of real-time generated sound.

485
00:27:13,424 --> 00:27:16,586
So maybe it could be recording with multiple layers of DSP,

486
00:27:17,186 --> 00:27:18,706
or maybe it could be real-time synthesis.

487
00:27:19,947 --> 00:27:22,007
And what you're trying to do is avoid a sense of repetition.

488
00:27:22,027 --> 00:27:22,628
Again.

489
00:27:23,440 --> 00:27:25,941
I'm not looking for realism, but I am looking for something to be believable.

490
00:27:26,962 --> 00:27:31,363
And one of the huge benefits, if you're generating all this in real time, is you can avoid repetition.

491
00:27:34,024 --> 00:27:37,966
And finally, I really like the idea of making use of emergent properties,

492
00:27:38,626 --> 00:27:42,628
so that you end up with all these inputs coming into your sound generation,

493
00:27:42,688 --> 00:27:45,049
and it starts to do things you don't necessarily expect it to do.

494
00:27:45,489 --> 00:27:47,069
It becomes a bit chaotic.

495
00:27:49,498 --> 00:27:52,800
That's hard sometimes because we want absolute control

496
00:27:52,840 --> 00:27:53,741
over how things sound.

497
00:27:55,442 --> 00:27:57,303
But it's also really freeing to go,

498
00:27:57,663 --> 00:27:59,104
actually I don't always know what it's gonna do.

499
00:27:59,724 --> 00:28:01,365
And like for our game,

500
00:28:02,406 --> 00:28:05,548
we agreed that sometimes it may sound really awful.

501
00:28:06,508 --> 00:28:08,209
It may do something that sounds a bit broken,

502
00:28:08,570 --> 00:28:10,591
but that was an acceptable trade-off

503
00:28:11,051 --> 00:28:13,312
in order to give us the range and flexibility.

504
00:28:15,494 --> 00:28:17,835
So I'm gonna attempt to sum that up in a definition.

505
00:28:19,448 --> 00:28:26,995
So I would say that procedural audio is the creation of sound in real time using synthesis techniques such as physical modelling with deep links into game systems.

506
00:28:28,837 --> 00:28:31,920
Welcome to discuss that later, I'll take some questions on that.

507
00:28:32,141 --> 00:28:35,804
But that's my attempt to at least define what I think procedural audio is.

508
00:28:38,807 --> 00:28:42,891
So let's move on to an example of that and what we try to do for the game.

509
00:28:44,629 --> 00:28:49,190
So we built a system in order to synthesize the vocals of the creatures.

510
00:28:50,351 --> 00:28:53,972
And that was a very, very early decision because I knew that was going to be a problem.

511
00:28:55,052 --> 00:28:59,413
Doing creature sounds is tricky in normal times,

512
00:28:59,894 --> 00:29:04,555
but to do it for such a massive variety of different types of creatures,

513
00:29:04,595 --> 00:29:08,736
different sizes, different appearances, I knew that was going to be hard.

514
00:29:09,476 --> 00:29:12,777
Sure, we could use recordings, but we'd have to use a huge library of recordings.

515
00:29:14,572 --> 00:29:18,476
So literally from the beginning when I was involved, I was like, let's attempt to synthesize it.

516
00:29:18,776 --> 00:29:22,220
Because synthesizing a vocal tract is a known problem, right?

517
00:29:22,500 --> 00:29:26,144
It's done in medical science, you know, we wouldn't be the first ones to do it.

518
00:29:26,604 --> 00:29:27,745
So that in itself is reassuring.

519
00:29:27,785 --> 00:29:29,427
I'm not trying to cover new ground.

520
00:29:29,467 --> 00:29:30,729
I'm trying to take what's already there.

521
00:29:32,731 --> 00:29:32,831
And

522
00:29:33,808 --> 00:29:38,932
We ended up building it as a Wwise plug-in, which has its pros and cons.

523
00:29:39,853 --> 00:29:45,857
Wwise is getting better, but it's still a little bit limited in its synthesis capabilities

524
00:29:45,898 --> 00:29:47,459
and building a synthesizer plug-in.

525
00:29:47,779 --> 00:29:50,561
It's much better with just processors, audio effects.

526
00:29:51,362 --> 00:29:52,443
Anyway, we're all at working.

527
00:29:54,303 --> 00:29:57,345
But we also quickly realized, and this is a key part

528
00:29:57,365 --> 00:30:00,166
to procedural audio, that it's not just synthesis,

529
00:30:00,386 --> 00:30:02,447
that there has to be a performance aspect to it.

530
00:30:02,928 --> 00:30:04,809
Something has to drive the synthesizer.

531
00:30:05,929 --> 00:30:07,810
And if it's an engine sound, it could simply be

532
00:30:08,331 --> 00:30:09,131
how fast am I going?

533
00:30:09,511 --> 00:30:10,912
But if it's something like creature vocals,

534
00:30:11,392 --> 00:30:12,733
where's that performance going to come from?

535
00:30:14,314 --> 00:30:15,915
So you can try and mechanize it,

536
00:30:16,315 --> 00:30:17,976
which is one of the things we did, and I'll talk about it.

537
00:30:18,757 --> 00:30:20,658
Or you approach it from a different angle.

538
00:30:22,214 --> 00:30:25,096
So in the game, if you've played it, all the creature sounds

539
00:30:25,576 --> 00:30:29,479
are created using Valkalien, including all the bird sounds

540
00:30:29,499 --> 00:30:32,461
and the ambience in the background, which I've never

541
00:30:32,501 --> 00:30:32,842
mentioned.

542
00:30:33,502 --> 00:30:35,003
And I think they're rather nice.

543
00:30:35,463 --> 00:30:38,626
And that does give us flexibility to go, it's

544
00:30:38,706 --> 00:30:39,186
nighttime.

545
00:30:39,706 --> 00:30:40,647
Change what the birds are doing.

546
00:30:41,165 --> 00:30:43,166
Like, literally change your vocal tracts.

547
00:30:43,586 --> 00:30:44,627
Birds don't have vocal tracts.

548
00:30:44,867 --> 00:30:46,348
But change the sound that birds are making,

549
00:30:46,368 --> 00:30:47,929
depending on the time of day.

550
00:30:48,930 --> 00:30:49,710
Make them tweet less,

551
00:30:49,770 --> 00:30:51,291
make them sound like different creatures.

552
00:30:51,912 --> 00:30:53,093
It gives us all that flexibility.

553
00:30:58,097 --> 00:31:00,539
So RockAlien sits within Wwise, and I'll show you the

554
00:31:00,559 --> 00:31:01,760
structure of how that works.

555
00:31:02,380 --> 00:31:05,063
It has to be low latency, it has to be really low CPU,

556
00:31:05,123 --> 00:31:07,805
because it has to run on PS4 after multiple instances.

557
00:31:09,186 --> 00:31:10,207
And it's a game.

558
00:31:11,669 --> 00:31:12,369
It's a console game.

559
00:31:12,710 --> 00:31:13,991
It has to be super reliable.

560
00:31:14,491 --> 00:31:17,314
And that, as we know, developing code, particularly

561
00:31:17,554 --> 00:31:21,898
chaotic DSP code, that is also 100% reliable, as close as we

562
00:31:21,938 --> 00:31:24,020
can get it, is a difficult challenge.

563
00:31:24,460 --> 00:31:25,481
So it involves lots of testing.

564
00:31:27,115 --> 00:31:29,598
And when we're building it, one option is to go

565
00:31:29,638 --> 00:31:31,840
with digital waveguides, which is a known technique

566
00:31:31,880 --> 00:31:34,342
where you pre-compute resonant frequencies,

567
00:31:34,462 --> 00:31:36,163
like in a pipe, it's typically used for that.

568
00:31:36,984 --> 00:31:39,006
That's problematic because the patents

569
00:31:39,046 --> 00:31:39,967
are a little bit ambiguous.

570
00:31:41,148 --> 00:31:42,429
I think Yamaha owned the patents,

571
00:31:42,449 --> 00:31:44,231
and it's not clear if they're still applicable or not.

572
00:31:44,611 --> 00:31:45,812
So we decided not to go that route.

573
00:31:49,956 --> 00:31:53,098
So what in the end VocAlien is, is essentially a pipe.

574
00:31:54,157 --> 00:31:56,678
and the pipe has a reed at one end.

575
00:31:57,958 --> 00:32:00,899
There's no traditional sound generator in it.

576
00:32:01,359 --> 00:32:04,280
So there's no sine waves, there's no noise generators.

577
00:32:04,760 --> 00:32:07,940
It in itself is not generating the sound.

578
00:32:08,821 --> 00:32:11,241
It's much like feedback from a microphone.

579
00:32:11,841 --> 00:32:14,702
You wouldn't say, where's the sound generator in feedback?

580
00:32:15,822 --> 00:32:17,883
So it's a bit like swinging a pipe around your head,

581
00:32:18,663 --> 00:32:20,023
and it whistles at you.

582
00:32:20,503 --> 00:32:22,064
So essentially what we've got is a feedback loop

583
00:32:22,144 --> 00:32:23,764
with resonant points within the pipe.

584
00:32:24,544 --> 00:32:29,045
But because we've got the reed at one end, then the air is travelling backwards and forwards

585
00:32:29,065 --> 00:32:32,166
through the pipe as the reed pushes it back in and out.

586
00:32:32,546 --> 00:32:35,467
So there's a whole feedback, literally a feedback loop in it.

587
00:32:35,947 --> 00:32:40,389
And if you stimulate it enough, you'll start to get these, literally these points of noise,

588
00:32:41,069 --> 00:32:45,370
which ways, where you start to use really sharp filters, you can shape into what sounds

589
00:32:45,410 --> 00:32:52,212
like, sounds like essentially sounds, added with a kind of mouth element at the end, which

590
00:32:52,232 --> 00:32:53,252
is your phoneme filtering.

591
00:32:54,359 --> 00:32:57,064
So if you're familiar with phonemes, it's all the aya, wawa, right?

592
00:32:57,244 --> 00:32:58,146
Just moving of your mouth.

593
00:32:58,166 --> 00:32:59,448
It's just a filter, right?

594
00:33:00,610 --> 00:33:02,453
And phoneme filtering is very well understood.

595
00:33:03,034 --> 00:33:06,680
So we could apply all the typical phonemes, in fact, invented a couple of new phonemes

596
00:33:06,700 --> 00:33:07,923
because we're alien creatures.

597
00:33:09,419 --> 00:33:12,041
But it's also super important to have a sense of movement.

598
00:33:13,421 --> 00:33:15,323
So not to create a pipe that's just static,

599
00:33:15,683 --> 00:33:16,784
that sounds really artificial.

600
00:33:17,644 --> 00:33:20,846
And so our system has to be, also has to be chaotic.

601
00:33:22,187 --> 00:33:24,248
So we've built into it the fact that

602
00:33:24,548 --> 00:33:25,809
things are always gonna be jiggling around,

603
00:33:25,969 --> 00:33:27,350
like values are gonna be jiggling around.

604
00:33:28,110 --> 00:33:31,492
And that is the hardest point of anything we've developed.

605
00:33:32,213 --> 00:33:34,814
It's not creating the code, it's not the implementation,

606
00:33:35,355 --> 00:33:37,176
it's the fine-tuning of those algorithms.

607
00:33:38,356 --> 00:33:40,637
You literally have to sit there, Sandy sat there,

608
00:33:41,038 --> 00:33:43,599
literally fiddling with numbers to get those points

609
00:33:43,659 --> 00:33:47,461
where it sounded acceptable and it had a wide enough range,

610
00:33:48,342 --> 00:33:50,823
but it didn't suddenly explode and just create bursts

611
00:33:50,843 --> 00:33:53,765
of noise at you, or howls of sine waves and things like that,

612
00:33:53,805 --> 00:33:55,746
which it did during development.

613
00:33:58,187 --> 00:33:59,868
I am going to attempt to show you this live.

614
00:34:01,089 --> 00:34:01,829
It should work.

615
00:34:03,809 --> 00:34:06,571
it's a high probability something's gonna crash, okay?

616
00:34:07,172 --> 00:34:08,412
So I'll show you an image first,

617
00:34:08,473 --> 00:34:09,713
but you have to give me 30 seconds

618
00:34:09,854 --> 00:34:10,774
while I fire everything up,

619
00:34:10,974 --> 00:34:12,636
because if I keep it fired up, it will crash.

620
00:34:13,937 --> 00:34:15,438
And you'll get the idea, okay.

621
00:34:16,358 --> 00:34:18,340
So Valkalien sits and whirs,

622
00:34:18,980 --> 00:34:20,381
that's where all the DSP stuff happens.

623
00:34:21,367 --> 00:34:22,788
But, how do we control it?

624
00:34:23,528 --> 00:34:25,230
And it's really tricky to control it.

625
00:34:25,290 --> 00:34:27,212
Effectively, we've created a wind instrument.

626
00:34:28,353 --> 00:34:31,335
So we used an off-the-shelf MIDI control system

627
00:34:31,495 --> 00:34:33,397
and built our own MIDI control service

628
00:34:33,417 --> 00:34:34,318
that sits on the iPad.

629
00:34:35,298 --> 00:34:36,399
So it is a synthesizer,

630
00:34:36,880 --> 00:34:38,361
and this is the MIDI control surface,

631
00:34:39,322 --> 00:34:40,823
which I will attempt to get up.

632
00:34:41,584 --> 00:34:43,205
And there's actually multiple tabs

633
00:34:43,225 --> 00:34:44,046
that you can see at the top,

634
00:34:44,306 --> 00:34:45,367
but that's the main page.

635
00:34:46,168 --> 00:34:47,609
And just to very quickly run through it,

636
00:34:48,637 --> 00:34:50,437
This enables me to, for example,

637
00:34:50,477 --> 00:34:51,557
change the length of a pipe.

638
00:34:52,378 --> 00:34:53,318
We're actually not one pipe,

639
00:34:53,338 --> 00:34:55,539
we're four different pipes stuck together, right?

640
00:34:55,579 --> 00:34:56,879
To create added complexity.

641
00:34:57,659 --> 00:34:59,100
It allows me to add some filters.

642
00:35:00,240 --> 00:35:03,161
We've got these abstract terms of harshness and screech.

643
00:35:03,821 --> 00:35:05,861
And that's kind of like the roughness of it.

644
00:35:06,021 --> 00:35:07,402
It's like the energy going into it,

645
00:35:07,462 --> 00:35:08,542
how rough that energy is.

646
00:35:08,782 --> 00:35:09,903
So if you keep all those low,

647
00:35:10,263 --> 00:35:11,843
you'll get a very kind of pure sound.

648
00:35:13,343 --> 00:35:15,904
We have, so I said we haven't got traditional synthesizers,

649
00:35:15,924 --> 00:35:17,405
we have just got some noise generators.

650
00:35:17,964 --> 00:35:20,405
but they're effectively used as frequency modulators.

651
00:35:21,126 --> 00:35:22,906
So again, it gives it kind of this shakiness,

652
00:35:22,926 --> 00:35:24,347
this roughness you wouldn't otherwise get.

653
00:35:25,207 --> 00:35:27,589
And then traditional volume envelopes, attack,

654
00:35:27,709 --> 00:35:29,550
so how long the sound comes in, release.

655
00:35:29,570 --> 00:35:34,432
And then the really fun stuff is all those presets,

656
00:35:34,992 --> 00:35:37,033
the format filtering, which is your phonemes,

657
00:35:37,453 --> 00:35:40,034
and the energy, so bottom right there.

658
00:35:40,855 --> 00:35:43,036
So that, we usually play this

659
00:35:43,296 --> 00:35:44,697
without attaching to a gyroscope,

660
00:35:44,957 --> 00:35:45,957
which is why we went for the iPad.

661
00:35:46,912 --> 00:35:48,673
So you can, as I say, you remove the iPad,

662
00:35:48,713 --> 00:35:50,214
you can change what the sound does.

663
00:35:53,095 --> 00:35:54,515
I would say one of the really clever things

664
00:35:54,535 --> 00:35:57,497
that Sandy did was preset morphing.

665
00:35:58,037 --> 00:35:59,137
So again, if you've used React,

666
00:35:59,157 --> 00:36:00,618
it's the same kind of principle.

667
00:36:01,338 --> 00:36:04,940
Each of those 26 slots can be a different creature sound,

668
00:36:05,340 --> 00:36:07,761
but we will interpolate between each of those sounds.

669
00:36:08,841 --> 00:36:10,742
So we could use it, and we do use it,

670
00:36:11,102 --> 00:36:14,683
to say a creature is happy, it's just burbling away,

671
00:36:14,703 --> 00:36:15,884
it's giving little wails.

672
00:36:16,702 --> 00:36:20,484
through to the other extreme where you're shooting it and it's dying

673
00:36:20,744 --> 00:36:23,986
and it's screaming at you. So they're different setups

674
00:36:24,546 --> 00:36:27,968
but we can slide that morph slider

675
00:36:28,289 --> 00:36:31,671
and you'll hear that as the performance and we capture all that as well

676
00:36:31,811 --> 00:36:36,113
so I'll show you how we capture it. And then at the Wwise side, you won't be able to read this

677
00:36:36,293 --> 00:36:39,475
oh actually maybe you can. This is what we see in Wwise

678
00:36:39,676 --> 00:36:41,196
which effectively like the meta controls

679
00:36:41,914 --> 00:36:46,995
So it's like, how big can this sound ever get in terms of frequency range, how small can it be?

680
00:36:47,615 --> 00:36:51,836
So we're just kind of bounding it a little bit, just to give it a little bit of control.

681
00:36:52,757 --> 00:36:57,378
And it is, you know, this could be done much, much better, right? It's just a bit of a mess.

682
00:36:58,498 --> 00:37:02,559
We need to evolve that. So let's attempt to get this running.

683
00:37:10,973 --> 00:37:15,797
Well, I will say that if it crashes, it's not Wyser's fault.

684
00:37:16,137 --> 00:37:17,738
It's not even our DSP.

685
00:37:17,979 --> 00:37:20,160
It's because we have to do this flaky Windows things of

686
00:37:20,200 --> 00:37:23,563
getting MIDI into the PC and routing it internally.

687
00:37:23,863 --> 00:37:25,084
And all the MIDI is bidirectional.

688
00:37:25,425 --> 00:37:27,586
And it's really like Windows really didn't like that.

689
00:37:28,127 --> 00:37:31,710
So if you look at it in one way, it will kind of fall over.

690
00:37:36,734 --> 00:37:37,615
Never do live demos.

691
00:37:39,206 --> 00:37:42,348
What I can do though is, it's not as impressive as seeing a control surface,

692
00:37:42,469 --> 00:37:45,011
I'll get this working after the session, I'm not going to waste your time

693
00:37:45,331 --> 00:37:48,053
and you can come and see me and you can have a play, it's fun, it's like playing an instrument.

694
00:37:48,934 --> 00:37:50,795
What I will show you though is...

695
00:37:56,039 --> 00:37:57,400
It's less impressive through here

696
00:37:57,841 --> 00:37:59,582
because I can't perform it, so you're getting

697
00:38:00,142 --> 00:38:02,284
one static sound. This is it running live.

698
00:38:02,444 --> 00:38:06,788
Obviously you're performing it as an instrument.

699
00:38:07,619 --> 00:38:09,465
What we end up doing is capturing that as MIDI.

700
00:38:10,710 --> 00:38:13,752
So each emote state, and we have about 10 emote states

701
00:38:14,032 --> 00:38:17,253
from idling through to little growls, through to dying.

702
00:38:18,113 --> 00:38:19,934
Each of those is a set of MIDI performances.

703
00:38:20,554 --> 00:38:22,835
So I said before, but the problem of how do you perform

704
00:38:22,895 --> 00:38:24,356
it, well it's performed because I perform it.

705
00:38:25,136 --> 00:38:26,437
So it's performance capture.

706
00:38:27,317 --> 00:38:29,238
But we don't literally use the MIDI.

707
00:38:29,538 --> 00:38:30,899
So we jitter the MIDI a lot.

708
00:38:30,939 --> 00:38:32,099
We shake the values around.

709
00:38:32,139 --> 00:38:34,840
We do things like change the speed and things like that.

710
00:38:35,260 --> 00:38:37,241
So we load the MIDI file into Wwise on here.

711
00:38:38,517 --> 00:38:42,359
So what you're hearing straight from wires is just as a static preset

712
00:38:43,279 --> 00:38:44,820
When I perform it when you play it in the game

713
00:38:45,241 --> 00:38:47,782
What you're also bringing in is that performance capture element

714
00:38:48,182 --> 00:38:53,785
Which is moving those morph targets and moving kind of the energy in it and it becomes more more lifelike

715
00:38:54,085 --> 00:38:55,566
Not always quite where I'd like it to be

716
00:38:55,986 --> 00:38:59,689
This is my cat which sounds a bit like a fart

717
00:39:01,810 --> 00:39:02,990
And I've got this slide on size

718
00:39:07,769 --> 00:39:12,592
But even just triggering it straight with no performance data in it at all,

719
00:39:13,533 --> 00:39:14,574
it will always sound a little bit different.

720
00:39:14,674 --> 00:39:16,315
I can try and apply the performance data.

721
00:39:20,378 --> 00:39:22,519
That's because he's very small, so if I bring him back down a bit.

722
00:39:25,861 --> 00:39:33,667
So you get it sounds, so that's pulling in all that different bits of data.

723
00:39:34,647 --> 00:39:36,348
And if you're that way inclined as well.

724
00:39:40,075 --> 00:39:41,216
I can show you on profiler.

725
00:39:41,656 --> 00:39:45,439
It's quite jibbing.

726
00:39:46,340 --> 00:39:47,761
But it's using less than 2%

727
00:39:47,801 --> 00:39:48,321
it's about 1.5%

728
00:39:48,381 --> 00:39:49,021
per voice on a PC.

729
00:39:49,041 --> 00:39:50,202
Just as good on PS4.

730
00:40:06,194 --> 00:40:10,328
Okay, so that's the structure of how we work.

731
00:40:10,769 --> 00:40:11,833
We've got the control surface.

732
00:40:12,983 --> 00:40:13,424
Not working.

733
00:40:14,624 --> 00:40:16,985
That bidirectionally communicates with Ys,

734
00:40:17,666 --> 00:40:21,387
so that if I change a preset on here,

735
00:40:21,627 --> 00:40:22,888
that sends information to Ys,

736
00:40:23,108 --> 00:40:24,629
but also change value in Ys, that goes back.

737
00:40:25,949 --> 00:40:28,230
We need it hooked up into some kind of door,

738
00:40:28,390 --> 00:40:30,911
or sequencer, in order to capture MIDI performance

739
00:40:30,952 --> 00:40:31,412
to bring it in.

740
00:40:32,392 --> 00:40:35,153
Then on the game side, we've got those MIDI files,

741
00:40:36,054 --> 00:40:37,614
and optimizing MIDI files for games

742
00:40:37,634 --> 00:40:39,455
is actually surprisingly tricky as well,

743
00:40:39,475 --> 00:40:40,616
because we can't take in pure MIDI.

744
00:40:41,796 --> 00:40:44,717
running into Rock Alien and then the game is sending all the RTPCs

745
00:40:45,137 --> 00:40:48,918
to go, or some of them switches, to go, what creature type am I?

746
00:40:49,218 --> 00:40:53,360
So we have about a dozen rough archetypes of creature. Am I a crab-like creature?

747
00:40:53,520 --> 00:40:57,641
Which can be very different. Am I a rodent-style creature? But the sizes will vary

748
00:40:57,761 --> 00:41:01,022
from minuscule through to, you know, a dinosaur size.

749
00:41:02,082 --> 00:41:04,683
So therefore we've got the RTPCs there, the controllers to go,

750
00:41:05,363 --> 00:41:09,445
what size am I? And also what's the ratio between my head and my body?

751
00:41:10,524 --> 00:41:13,505
So that changes how nasally the sound's gonna be.

752
00:41:13,925 --> 00:41:15,386
So there all the values are coming in.

753
00:41:18,186 --> 00:41:21,387
When we were thinking about how do we perform it,

754
00:41:22,948 --> 00:41:24,528
so initially we thought about using Perlin noise

755
00:41:24,588 --> 00:41:26,849
because it gives us Perlin noise already,

756
00:41:27,289 --> 00:41:29,110
but that's a very kind of regular noise shape

757
00:41:29,410 --> 00:41:30,430
and it sounds very artificial.

758
00:41:30,450 --> 00:41:32,791
It's interesting, if you see it landscape generation,

759
00:41:33,251 --> 00:41:34,751
people who know about Perlin noise will pick it up.

760
00:41:34,991 --> 00:41:36,012
But otherwise it looks okay.

761
00:41:36,592 --> 00:41:38,512
But when you hear it, you can immediately detect

762
00:41:38,572 --> 00:41:40,193
that it was regularities and it doesn't work so well.

763
00:41:42,962 --> 00:41:48,347
And also it's hard to kind of create a sense of this little, the jitters that you want

764
00:41:48,367 --> 00:41:49,548
to hear, that you're expecting.

765
00:41:49,588 --> 00:41:50,629
You don't really get that in Perlin.

766
00:41:53,132 --> 00:41:57,516
So I've kind of covered this in a little bit of time, so we'll move on a little bit.

767
00:41:58,848 --> 00:42:00,829
But certainly a potential moving forward,

768
00:42:01,069 --> 00:42:02,510
and because it's a super trendy subject,

769
00:42:02,570 --> 00:42:03,791
and so obviously I have to have a slide on it,

770
00:42:04,171 --> 00:42:05,492
would be some kind of machine learning.

771
00:42:05,732 --> 00:42:07,133
That would be much more optimal,

772
00:42:07,674 --> 00:42:09,074
so that we can train it to go,

773
00:42:09,395 --> 00:42:11,376
this is what a creature dying sounds like,

774
00:42:11,776 --> 00:42:12,977
this is the kind of thing I always do.

775
00:42:12,997 --> 00:42:14,398
I always shake it in this way,

776
00:42:14,478 --> 00:42:15,999
I always throw these sliders this way,

777
00:42:16,339 --> 00:42:17,240
and now derive from that,

778
00:42:17,260 --> 00:42:18,360
you can do it through Markov chains,

779
00:42:18,681 --> 00:42:20,662
derive from that a typical performance,

780
00:42:21,082 --> 00:42:21,702
and then let it run.

781
00:42:21,923 --> 00:42:23,063
That'd be much more efficient,

782
00:42:23,243 --> 00:42:24,424
we'll use less memory,

783
00:42:24,524 --> 00:42:26,025
and give us more variability.

784
00:42:30,154 --> 00:42:34,397
So to be critical, and I will be critical of what we've done in the game,

785
00:42:35,837 --> 00:42:38,819
my performance capture in the game isn't always great.

786
00:42:39,299 --> 00:42:43,462
Like, I play the game and it makes me cringe sometimes at what the creatures sound like.

787
00:42:44,342 --> 00:42:48,305
So hopefully in a future update I'm going to squash all that and redo all the performances.

788
00:42:49,105 --> 00:42:50,586
Because it is like learning an instrument.

789
00:42:51,326 --> 00:42:53,087
And when you're finishing off a game, obviously it's chaos,

790
00:42:53,107 --> 00:42:55,168
and you need to get everything done and everything in and working,

791
00:42:55,188 --> 00:42:57,990
and we didn't spend enough time on that performance.

792
00:42:59,108 --> 00:43:00,829
and it was also incredibly cumbersome.

793
00:43:01,289 --> 00:43:03,030
Now we've improved all that,

794
00:43:03,050 --> 00:43:05,410
so the whole pipeline is much smoother now.

795
00:43:06,931 --> 00:43:07,891
And it's not, you know,

796
00:43:09,091 --> 00:43:10,732
the synthesis element is not that bad,

797
00:43:11,152 --> 00:43:11,772
but as you've seen, like,

798
00:43:11,792 --> 00:43:13,472
there's all this surrounding cloud of things

799
00:43:13,492 --> 00:43:14,373
that needs to be plugged in.

800
00:43:15,013 --> 00:43:16,113
That's not trivial.

801
00:43:16,633 --> 00:43:19,054
That takes time to learn, to kind of iterate on.

802
00:43:21,575 --> 00:43:22,315
I'm gonna skip over this,

803
00:43:22,335 --> 00:43:24,596
because I want to talk a little bit about music as well.

804
00:43:24,616 --> 00:43:26,016
Okay.

805
00:43:28,055 --> 00:43:30,616
So for those of you who've ever come across what I've done before,

806
00:43:31,157 --> 00:43:35,578
you'll know I'll often build generative music systems for games or be involved in them.

807
00:43:37,059 --> 00:43:41,201
Essentially, they're glorified random file players with a little bit of logic stuck on top.

808
00:43:41,801 --> 00:43:48,084
I like doing that stuff. I do a lot of commercial-style installations for things like shopping malls, airports.

809
00:43:49,004 --> 00:43:50,865
I've just done one for a cruise liner.

810
00:43:51,445 --> 00:43:53,746
Unfortunately, I don't get to go on a cruise liner. That would be nice.

811
00:43:55,369 --> 00:43:59,521
So we thought, this is a perfect opportunity to again build a system for the game.

812
00:43:59,541 --> 00:44:01,026
Why wouldn't you in a game like this?

813
00:44:02,488 --> 00:44:04,169
And we had a band called 65 Days of Static,

814
00:44:04,870 --> 00:44:06,031
who wrote the music.

815
00:44:06,051 --> 00:44:08,793
Sean Murray's a big fan of the band,

816
00:44:09,273 --> 00:44:10,995
and from the beginning wanted to get them involved.

817
00:44:11,875 --> 00:44:14,137
And we were kind of really adamant that as a band,

818
00:44:14,477 --> 00:44:17,340
I did not want to interfere creatively with their process.

819
00:44:17,920 --> 00:44:19,321
So we always said, write an album.

820
00:44:19,541 --> 00:44:21,403
Like, just write us an album,

821
00:44:21,803 --> 00:44:23,705
and we're not gonna start telling you how to do that,

822
00:44:23,725 --> 00:44:24,966
because you know how to do that,

823
00:44:24,986 --> 00:44:26,407
because you're the band, right?

824
00:44:27,388 --> 00:44:29,770
So we let them go off and write a very traditional album.

825
00:44:30,986 --> 00:44:34,853
but in the knowledge that we were going to come back to it later and just rip it all apart.

826
00:44:35,761 --> 00:44:37,142
So it wasn't a question of saying,

827
00:44:37,502 --> 00:44:38,843
just give us the stems and we'll do it.

828
00:44:38,863 --> 00:44:40,825
It was like, no, no, no, go right back,

829
00:44:41,505 --> 00:44:43,687
do us more performances, take out bits,

830
00:44:43,747 --> 00:44:46,549
give us more drum loops, perform new guitar riffs,

831
00:44:46,829 --> 00:44:49,331
create new stuff based almost like kind of

832
00:44:49,692 --> 00:44:51,553
remixing your original tracks.

833
00:44:51,993 --> 00:44:54,015
So in the game, you don't get the album.

834
00:44:54,855 --> 00:44:57,798
The game soundtrack is bits of what appear on the album.

835
00:44:58,078 --> 00:45:00,480
It's lots of bits that aren't on the album,

836
00:45:01,000 --> 00:45:03,622
but it feels relatively cohesive.

837
00:45:04,863 --> 00:45:05,423
That's our album.

838
00:45:06,917 --> 00:45:11,241
So again I've got another little video which shows you some of their music so you get a sense of their style.

839
00:45:11,781 --> 00:45:15,504
Most of this music is not generative, it's just pre-rendered sections that we have in the game.

840
00:46:46,030 --> 00:46:48,573
And this is what I was saying about working with a band,

841
00:46:48,593 --> 00:46:52,057
you know, just write the album, but keep all the bits.

842
00:46:54,060 --> 00:46:56,783
So we built the system after they'd written the album,

843
00:46:57,304 --> 00:46:58,946
but we just had in mind how we were going to work.

844
00:47:00,759 --> 00:47:02,040
So our music system is called Pulse,

845
00:47:02,580 --> 00:47:03,561
and I will briefly show you that.

846
00:47:04,302 --> 00:47:07,245
And really what it does is it takes individual WAVs,

847
00:47:07,786 --> 00:47:09,227
individual elements, and bundles them together

848
00:47:09,247 --> 00:47:10,449
into what we'll call an instrument.

849
00:47:11,870 --> 00:47:13,812
And we have sets of soundscapes.

850
00:47:13,872 --> 00:47:15,714
So we have planet soundscapes, space,

851
00:47:16,955 --> 00:47:19,238
wanted, which is combat, and the map,

852
00:47:19,318 --> 00:47:21,500
and just some of the special cases we have as well.

853
00:47:23,515 --> 00:47:27,524
uh... uh... currently this sixteen soundscapes versus sixteen sets of

854
00:47:27,564 --> 00:47:29,227
soundscapes so that works out about

855
00:47:29,628 --> 00:47:31,332
almost fifty actual soundscapes in the game

856
00:47:31,352 --> 00:47:33,036
uh... got more to come

857
00:47:34,607 --> 00:47:35,947
And all this sits in Wwise as well.

858
00:47:36,587 --> 00:47:41,968
So our tool is ugly, but it's very functional, which is what

859
00:47:42,008 --> 00:47:42,848
you need in game design.

860
00:47:42,868 --> 00:47:43,829
I'm not going to make a pretty tool.

861
00:47:43,949 --> 00:47:44,529
It's a waste of time.

862
00:47:45,609 --> 00:47:46,949
And so we have instruments.

863
00:47:47,929 --> 00:47:50,450
We have a little audio editor as well, in case you ever want

864
00:47:50,470 --> 00:47:50,790
to use it.

865
00:47:51,170 --> 00:47:54,071
So someone could create a stem, literally a stem, and

866
00:47:54,111 --> 00:47:56,591
we'll automatically edit it and trim it all up, chop it

867
00:47:56,611 --> 00:47:58,552
all up, and stick it in to our system.

868
00:48:00,280 --> 00:48:05,262
But really the key bit is we have this canvas on which we place these groups of sounds

869
00:48:06,202 --> 00:48:09,163
and the X and Y coordinates are just controllers.

870
00:48:10,283 --> 00:48:12,684
The controllers are dependent on what's happening in the game.

871
00:48:13,365 --> 00:48:15,685
So this is like, it looks complicated, it's not so complicated.

872
00:48:15,886 --> 00:48:19,667
This is the map music, which is actually what I did, and it's all directional.

873
00:48:20,227 --> 00:48:23,188
So literally it's directional, it's in space depending on which way you're facing.

874
00:48:23,893 --> 00:48:26,614
different elements of music will come in and out, different drones will come in and out.

875
00:48:27,275 --> 00:48:29,556
If you're moving or not moving, that also affects the mix.

876
00:48:30,536 --> 00:48:34,599
But if you're on a planet, it's different. On a planet, it's how close you are to a building.

877
00:48:35,239 --> 00:48:38,701
Or if you've been walking for an amount of time and nothing's happened to you,

878
00:48:39,281 --> 00:48:43,183
we'll start to raise the level of interest, just to add something to that environment.

879
00:48:43,984 --> 00:48:48,046
So that's how we compose all the music in the game. Now, I should be able to...

880
00:48:55,662 --> 00:49:02,249
So that's pulse up there. What I am going to vainly attempt is to run the game.

881
00:49:02,269 --> 00:49:09,916
Again, dangerous, especially for so little time.

882
00:49:20,997 --> 00:49:26,840
And this music it plays, again that's randomised, it's rendered, but we've got like 50 different

883
00:49:26,980 --> 00:49:30,823
options and it will just randomly choose. Same when the game starts, it will randomly choose

884
00:49:30,883 --> 00:49:40,369
a piece of music. You have to wait for the loading sequence. Blah blah, blah blah.

885
00:49:40,949 --> 00:49:46,953
And it's doing all this jittering because that's all the universe generation process

886
00:49:47,473 --> 00:49:49,755
is what it's doing. It's not loading, it's generating all the maths.

887
00:49:51,328 --> 00:49:55,090
So I think it's quite clever we're able to render a Starscape at the same time.

888
00:49:55,471 --> 00:49:58,893
And this is the engine running, this is not artificial, this is the game itself running.

889
00:50:07,278 --> 00:50:13,062
So we have, like most games, we've got our own editor tools, we've got some music systems.

890
00:50:18,092 --> 00:50:21,413
I have to wait for this piece of music to finish before it kicks in the soundscape.

891
00:50:21,433 --> 00:50:22,313
Fine.

892
00:50:23,274 --> 00:50:27,796
But what you can say is I can choose from here what soundscape set we're going to play,

893
00:50:28,476 --> 00:50:32,338
where we are, and then I can manipulate where we're sitting within that.

894
00:50:33,598 --> 00:50:37,700
So once this finishes, and this will relate to...

895
00:50:38,581 --> 00:50:39,301
Don't worry, it's still running.

896
00:50:40,621 --> 00:50:40,922
To this.

897
00:50:41,042 --> 00:50:42,342
So if I go to variation six...

898
00:50:44,823 --> 00:50:45,404
On planet.

899
00:50:46,404 --> 00:50:47,885
So it will start to play this soundscape.

900
00:50:52,328 --> 00:50:52,988
I was kidding off now.

901
00:50:53,288 --> 00:50:54,829
And we have a little bit of debug information,

902
00:50:54,869 --> 00:50:56,390
what's playing, how many voices are playing.

903
00:50:56,410 --> 00:51:01,492
There it goes. ♪♪♪

904
00:51:01,572 --> 00:51:08,475
Hopefully if I increase the interest level. ♪♪♪

905
00:51:14,998 --> 00:51:18,640
I think actually that was a high interest level.

906
00:51:25,298 --> 00:51:29,302
Let's try a different one.

907
00:51:29,402 --> 00:51:32,385
So we could have one, two waves, we could have 60, 70, 100 variations of each class of sound.

908
00:51:41,585 --> 00:51:44,006
And when you start the game, we just create a random playlist

909
00:51:44,186 --> 00:51:46,347
and it will just randomly shuffle all the different soundscapes.

910
00:51:46,427 --> 00:51:49,049
It's not based on what type of planet it is, it's just a random playlist.

911
00:51:49,609 --> 00:51:51,470
But we'll also look at how long that's playing for.

912
00:51:51,990 --> 00:51:54,852
So if you've been on a planet and it's played for more than, I think it's about 15 minutes,

913
00:51:55,612 --> 00:51:58,114
then we'll wait for the next sunrise or sunset

914
00:51:58,614 --> 00:52:01,215
and then start to kind of change the soundscape based on that.

915
00:52:01,716 --> 00:52:04,017
Or if you go into space and come back down, change planet,

916
00:52:04,257 --> 00:52:06,638
we'll go, okay, we've played long enough, we'll just change the music.

917
00:52:09,460 --> 00:52:10,580
I'll play it once and maybe...

918
00:52:23,622 --> 00:52:25,703
Drums are tricky if you've ever built any of these systems.

919
00:52:26,023 --> 00:52:29,664
Like having a loop of different drum loops that actually stay in time.

920
00:52:30,464 --> 00:52:32,384
When your game engine is maybe dropping frames,

921
00:52:32,704 --> 00:52:34,865
so often we have to run on our own threads.

922
00:52:35,465 --> 00:52:36,725
We have to be really super careful.

923
00:52:37,045 --> 00:52:40,306
Actually it does work really well until the game completely explodes.

924
00:52:58,315 --> 00:52:58,616
OK.

925
00:52:59,916 --> 00:53:02,758
So to conclude, because we're limited on time,

926
00:53:04,699 --> 00:53:07,640
No Man's Sky did offer a really interesting opportunity,

927
00:53:07,660 --> 00:53:10,242
almost a unique opportunity, to kind of play

928
00:53:10,262 --> 00:53:12,283
the idea of randomness in sound.

929
00:53:12,803 --> 00:53:14,564
I gave some examples I could have shown you,

930
00:53:14,584 --> 00:53:15,845
but I shouldn't limit on time.

931
00:53:17,365 --> 00:53:19,667
And I, personally, as a sound design composer,

932
00:53:19,807 --> 00:53:23,428
I really enjoy ceding control for computer

933
00:53:23,709 --> 00:53:26,830
and just letting it run, giving it rules and letting it run.

934
00:53:28,096 --> 00:53:32,199
I think there's a really wonderful potential in procedural audio,

935
00:53:32,779 --> 00:53:35,882
but I don't think we're at the point where either the tools are there,

936
00:53:36,562 --> 00:53:41,326
or that we really realize what that whole process, the whole pipeline is.

937
00:53:41,346 --> 00:53:43,908
I think that process needs to mature a lot.

938
00:53:46,192 --> 00:53:48,933
It's easy for me to say because I had the opportunity to do this,

939
00:53:49,613 --> 00:53:53,134
but it is wonderful to be able to develop your own auto technology.

940
00:53:53,715 --> 00:53:54,775
I said at the start, that's hard.

941
00:53:55,995 --> 00:53:58,536
But if you're able to do that, if you can convince your producer,

942
00:53:58,856 --> 00:54:01,677
if you can have a DSP programmer for a few months or even longer,

943
00:54:02,098 --> 00:54:05,539
I think it's an important part of our jobs as game auto people

944
00:54:06,119 --> 00:54:09,560
to not just accept what's there, but to be able to build new things if we can.

945
00:54:11,306 --> 00:54:13,727
And I often get asked if our tools would be commercially

946
00:54:13,747 --> 00:54:14,127
available.

947
00:54:14,187 --> 00:54:14,848
You wouldn't want them.

948
00:54:15,948 --> 00:54:17,729
We wouldn't want to support it.

949
00:54:18,230 --> 00:54:22,272
And the fact is, an awful lot of this, in a nice way, is

950
00:54:22,292 --> 00:54:22,912
smoke and mirrors.

951
00:54:23,912 --> 00:54:25,393
It's not as complicated as it looks.

952
00:54:25,573 --> 00:54:26,434
I've shown you what it is.

953
00:54:26,494 --> 00:54:27,234
You can do it yourself.

954
00:54:27,674 --> 00:54:29,035
There are lots of bits to do.

955
00:54:29,475 --> 00:54:30,936
But it's really not that hard.

956
00:54:30,976 --> 00:54:33,117
It's just more understanding the process.

957
00:54:33,337 --> 00:54:38,460
The actual coding, I'm not saying it's simple, but it's

958
00:54:38,520 --> 00:54:39,320
not a massive hurdle.

959
00:54:40,601 --> 00:54:44,144
So I better end there, in fact I won't take questions because you are late,

960
00:54:45,265 --> 00:54:49,289
sorry, but I will hang out outside, I'd be very very pleased to talk to you.

961
00:54:49,810 --> 00:54:51,611
So thank you all for coming, it's lovely to see you, thank you.

