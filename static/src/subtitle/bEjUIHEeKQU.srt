1
00:00:05,847 --> 00:00:07,429
Hi there, my name is Mark Burrows.

2
00:00:07,429 --> 00:00:08,730
And I'm Grant Haxt.

3
00:00:08,730 --> 00:00:11,172
We're designers at Naughty Dog.

4
00:00:11,172 --> 00:00:13,074
This is Swiping on the Six Strings,

5
00:00:13,074 --> 00:00:15,897
Crafting an Interactive Guitar in The Last of Us Part Two.

6
00:00:15,897 --> 00:00:19,441
So before we begin, we wanna issue a spoiler alert

7
00:00:19,441 --> 00:00:21,182
for The Last of Us Part Two.

8
00:00:21,182 --> 00:00:23,404
We imagine you're here because you've either played the game

9
00:00:23,404 --> 00:00:25,467
or you don't mind being spoiled, but fair warning.

10
00:00:26,957 --> 00:00:28,878
So from the very beginning of development,

11
00:00:28,878 --> 00:00:31,599
we knew that the guitar was going to be a key part

12
00:00:31,599 --> 00:00:33,180
of the game's narrative.

13
00:00:33,180 --> 00:00:35,102
Joel's love for the guitar was introduced

14
00:00:35,102 --> 00:00:36,402
in the first Last of Us,

15
00:00:36,402 --> 00:00:39,484
including a promise to teach Ellie how to play.

16
00:00:39,484 --> 00:00:41,926
Even in the very first story pitch for part two,

17
00:00:41,926 --> 00:00:44,667
this game was bookended with the instrument,

18
00:00:44,667 --> 00:00:47,769
beginning with Joel playing the guitar for Ellie,

19
00:00:47,769 --> 00:00:50,871
and ending, and gifting her with her guitar,

20
00:00:50,871 --> 00:00:53,793
and ending with Ellie struggling to play on her own journey,

21
00:00:53,793 --> 00:00:55,774
her missing fingers embodying the cost.

22
00:00:56,877 --> 00:01:00,039
The guitar symbolized the bond between Joel and Ellie.

23
00:01:00,039 --> 00:01:01,940
It's a symbol of life, tranquility, and hope.

24
00:01:01,940 --> 00:01:04,361
And in that same vein, it was important

25
00:01:04,361 --> 00:01:08,143
to our creative director, Neil, from the very beginning

26
00:01:08,143 --> 00:01:10,784
to use Future Days by Pearl Jam as our musical throughline.

27
00:01:10,784 --> 00:01:13,526
Alongside that, one of the very first cinematics

28
00:01:13,526 --> 00:01:15,667
we shot for the game was one of Ashley Johnson,

29
00:01:15,667 --> 00:01:18,368
who plays Ellie, singing a contemplative cover

30
00:01:18,368 --> 00:01:19,309
of Aja's Take on Me.

31
00:01:20,025 --> 00:01:25,492
Beyond that, the acoustic guitar is important tonally to the world of The Last of Us,

32
00:01:25,492 --> 00:01:30,398
from Gustavo's evocative guitar-infused score to Joel's Texan country singer roots.

33
00:01:30,398 --> 00:01:34,823
The guitar then was a narrative and tonal linchpin from the beginning.

34
00:01:36,560 --> 00:01:39,721
So the question was, can we put this on the stick?

35
00:01:39,721 --> 00:01:41,581
It's sort of a mantra that we use at Naughty Dog,

36
00:01:41,581 --> 00:01:44,322
especially one by one of our game directors, Kurt Margenau.

37
00:01:44,322 --> 00:01:47,583
We could have simply left every instance of the guitar

38
00:01:47,583 --> 00:01:49,564
in non-interactable cinematics.

39
00:01:49,564 --> 00:01:51,965
This would let us control the emotional impact,

40
00:01:51,965 --> 00:01:53,365
pacing and focus of these moments,

41
00:01:53,365 --> 00:01:54,886
since the player cannot interrupt them

42
00:01:54,886 --> 00:01:56,086
with incongruous behavior.

43
00:01:56,086 --> 00:01:59,307
After all, if the player can't smash random chords

44
00:01:59,307 --> 00:02:00,228
at a frenzied pace,

45
00:02:00,228 --> 00:02:01,848
they can't ruin a beautiful moment of Joel

46
00:02:01,848 --> 00:02:04,469
playing a deeply personal rendition of Future Days to Ellie.

47
00:02:05,318 --> 00:02:07,820
But then again, guitar is fun.

48
00:02:07,820 --> 00:02:10,822
We knew from video games like Guitar Hero

49
00:02:10,822 --> 00:02:12,423
that playing a guitar in a video game

50
00:02:12,423 --> 00:02:14,965
can be a really engaging experience.

51
00:02:14,965 --> 00:02:16,487
We could make a mini game

52
00:02:16,487 --> 00:02:18,308
that was at least enjoyable to play.

53
00:02:18,308 --> 00:02:21,070
So the question we had to ask ourselves was,

54
00:02:21,070 --> 00:02:24,032
could we make an interactive guitar in our game

55
00:02:24,032 --> 00:02:26,034
that fit our needs for this story?

56
00:02:26,034 --> 00:02:29,216
Well, we do have an intriguing narrative arc

57
00:02:29,216 --> 00:02:30,237
that we could play along with.

58
00:02:30,998 --> 00:02:34,622
Joel plays a song at the start of the game to introduce Ellie to the guitar,

59
00:02:34,622 --> 00:02:38,425
and then Ellie slowly masters the guitar over the course of the game.

60
00:02:38,425 --> 00:02:41,488
But then her missing fingers at the end of the game undercut that ability

61
00:02:41,488 --> 00:02:43,350
and sever this connection with Joel.

62
00:02:43,350 --> 00:02:48,855
This teach, master, subvert structure reminded us of the parallel design

63
00:02:48,855 --> 00:02:51,217
formula in games like Super Mario 3D World,

64
00:02:51,217 --> 00:02:53,439
where it's used for level-specific mechanics.

65
00:02:54,272 --> 00:02:56,576
If we set up our system to align with this progression,

66
00:02:56,576 --> 00:02:58,879
there'd be a direct link between that concept

67
00:02:58,879 --> 00:03:01,102
and the narrative journey of Ellie in the game.

68
00:03:01,102 --> 00:03:04,567
Furthermore, putting the player in control of the music,

69
00:03:04,567 --> 00:03:06,169
just as Ellie is in control in game,

70
00:03:06,169 --> 00:03:08,392
would immerse the player more deeply

71
00:03:08,392 --> 00:03:09,694
than just watching and listening.

72
00:03:10,472 --> 00:03:14,895
And when Ellie is playing, she's recalling one of her fondest memories of Joel.

73
00:03:14,895 --> 00:03:18,456
If done right, an interactive guitar could be used to bring the emotional experience

74
00:03:18,456 --> 00:03:22,559
of Ellie and the player in line by having the player try to remember the song

75
00:03:22,559 --> 00:03:24,220
that they originally played as Joel.

76
00:03:24,943 --> 00:03:28,165
So how does the tone of Last of Us affect this minigame?

77
00:03:28,165 --> 00:03:30,546
Well, our world is realistic and grounded,

78
00:03:30,546 --> 00:03:33,047
so our guitar minigame probably can't have fireworks

79
00:03:33,047 --> 00:03:34,427
and smoke machines.

80
00:03:34,427 --> 00:03:37,028
These are also going to be some of the most important

81
00:03:37,028 --> 00:03:38,789
and character-driven moments in the game.

82
00:03:38,789 --> 00:03:41,650
We need the player to feel nostalgic and wistful.

83
00:03:41,650 --> 00:03:43,911
So this can't be sex, drugs, and rock and roll.

84
00:03:43,911 --> 00:03:47,112
We also need the player to feel like they're practicing.

85
00:03:47,112 --> 00:03:48,273
We're not providing the fantasy

86
00:03:48,273 --> 00:03:50,594
of having the mastery of a rock god.

87
00:03:50,594 --> 00:03:53,175
So we can't just plop in guitar hero as is.

88
00:03:54,233 --> 00:03:56,996
All right, at this point, we think it's worth trying,

89
00:03:56,996 --> 00:03:58,937
but before we start prototyping,

90
00:03:58,937 --> 00:04:01,319
we need to define some of our constraints.

91
00:04:01,319 --> 00:04:03,641
The first and most obvious thing to point out

92
00:04:03,641 --> 00:04:05,743
is that we will not be shipping this game

93
00:04:05,743 --> 00:04:06,944
with a peripheral controller.

94
00:04:06,944 --> 00:04:09,446
Much of the fun of Guitar Hero was holding something

95
00:04:09,446 --> 00:04:10,306
that felt like a guitar

96
00:04:10,306 --> 00:04:12,849
and having the feeling of playing one in a rock band.

97
00:04:12,849 --> 00:04:15,270
A lot of that enjoyment disappears

98
00:04:15,270 --> 00:04:16,612
when you put that functionality

99
00:04:16,612 --> 00:04:18,573
onto the buttons and analog sticks of a controller.

100
00:04:18,573 --> 00:04:21,796
It's much harder to rock out in the squirrel stance.

101
00:04:22,877 --> 00:04:27,900
So we know that we won't be simulating the feeling of holding a real guitar.

102
00:04:27,900 --> 00:04:29,341
So what do we have to work with?

103
00:04:29,341 --> 00:04:34,725
Well, a PlayStation controller has four face buttons, four shoulder buttons, a

104
00:04:34,725 --> 00:04:38,288
D pad, two analog sticks, and three buttons we can't touch because they're

105
00:04:38,288 --> 00:04:41,550
used for metagame functions like pausing, sharing, and leaving the game.

106
00:04:41,550 --> 00:04:45,433
None of these necessarily have a great correspondence or

107
00:04:45,433 --> 00:04:47,334
affordance to playing a guitar.

108
00:04:47,334 --> 00:04:49,115
But there is a touch pad.

109
00:04:50,157 --> 00:05:01,368
This is where I kind of need to step in and say that I've had a personal obsession with trying to make something of the touch pad in one of our games I've done prototypes of painting scrolling around UI maps choosing dialogue options.

110
00:05:01,368 --> 00:05:03,330
None of these have seen the light of day, but

111
00:05:04,065 --> 00:05:07,907
They have been attempts to utilize the most malign input on the PS4 controller.

112
00:05:07,907 --> 00:05:11,928
Now, as anyone that is listening is no doubt familiar with in their use of

113
00:05:11,928 --> 00:05:15,690
smartphones, the touchpad has universal affordance with swiping.

114
00:05:15,690 --> 00:05:21,072
We can use that swiping action to correlate to the strumming of a guitar, right?

115
00:05:21,072 --> 00:05:23,413
It feels like there's an immediate affordance there.

116
00:05:23,413 --> 00:05:24,373
So let's explore that.

117
00:05:26,549 --> 00:05:30,230
Now, before we start going crazy trying out strumming options in our prototype,

118
00:05:30,230 --> 00:05:34,472
we should determine some pitfalls and mechanics we want to avoid.

119
00:05:34,472 --> 00:05:39,054
We should steer clear of anything that goes against our narrative and tonal needs.

120
00:05:39,054 --> 00:05:41,615
We might not be able to avoid all these things in the end, but we need to

121
00:05:41,615 --> 00:05:44,516
understand which mechanics might conflict with our game.

122
00:05:44,516 --> 00:05:48,337
This will help us focus our prototyping and not waste time exploring dead ends.

123
00:05:48,959 --> 00:05:54,965
First of all, let's say no quick time events. For designers, QTEs are great because they provide a

124
00:05:54,965 --> 00:06:00,429
cool unique result with a simple player interaction. Press square and see your character skewer the

125
00:06:00,429 --> 00:06:04,953
eyes out of a big baddie. However, for a player, they can tell that their participation is not

126
00:06:04,953 --> 00:06:08,977
commensurate with the result. It can feel like you're unpausing a pre-canned animation rather

127
00:06:08,977 --> 00:06:11,279
than performing the action yourself as the player.

128
00:06:12,000 --> 00:06:16,404
This can result in the reduction of immersion. As they watch their character perform some

129
00:06:16,404 --> 00:06:20,028
interesting maneuver they feel they have no control over. Instead of bringing the player

130
00:06:20,028 --> 00:06:24,533
into the action, they're further removed and made aware of the gap between the characters

131
00:06:24,533 --> 00:06:29,678
and their own actions. So we should strive for a one-to-one correspondence between the player's

132
00:06:29,678 --> 00:06:35,604
input and the output of the guitar. No QTEs, no playing complicated series of notes from one strum.

133
00:06:36,493 --> 00:06:41,996
The other issue with QTEs is that they're usually testing the player's reaction time.

134
00:06:41,996 --> 00:06:46,158
And timing in this case is not actually that important for Ellie and her guitar playing.

135
00:06:46,158 --> 00:06:50,541
So we probably want to avoid making any kind of rhythm game.

136
00:06:50,541 --> 00:06:53,302
Ellie is just learning how to play the guitar.

137
00:06:53,302 --> 00:06:55,763
These are introspective moments.

138
00:06:55,763 --> 00:06:58,905
Both Ellie and the player should be able to play at their own pace.

139
00:06:59,966 --> 00:07:05,482
Additionally, the final moments of the game are about Ellie's inability to play the notes due to her missing fingers.

140
00:07:05,482 --> 00:07:07,568
Not that she can't keep in rhythm.

141
00:07:08,132 --> 00:07:15,597
If we want that moment to land, we need the player to feel like they can't meet the same metric they've repeatedly met throughout the game.

142
00:07:15,597 --> 00:07:19,300
And so that game-wide metric should be about notes, not about rhythm.

143
00:07:19,300 --> 00:07:20,340
What else should we try to avoid?

144
00:07:20,340 --> 00:07:27,485
Well, the guitar is meant to be a personal connection between Ellie and Joel, who is dead once Ellie has the guitar.

145
00:07:27,485 --> 00:07:30,247
So we should not be playing along with something else.

146
00:07:30,247 --> 00:07:32,248
That means no Dina on the drums.

147
00:07:32,248 --> 00:07:37,171
But neither should that mean having a metronome the player hears or even Ellie humming.

148
00:07:37,532 --> 00:07:42,153
Maybe at most we can have Ellie's head bop up and down to the beat, but there should be nothing

149
00:07:42,153 --> 00:07:47,255
audible that the player might feel forced to play in time with. This goes back to our avoidance of

150
00:07:47,255 --> 00:07:53,177
time pressure and sense of practicing, but it also limits our options on how to tell the player what

151
00:07:53,177 --> 00:07:55,958
they should be doing since there's nothing to play to.

152
00:07:56,730 --> 00:08:00,555
Also, if possible, we should let the player noodle around if they can.

153
00:08:00,555 --> 00:08:04,139
If a player is meant to play a B major and then switch to a G sharp minor,

154
00:08:04,139 --> 00:08:08,363
we shouldn't fail them because they're strumming on the B chord for a little bit longer.

155
00:08:08,363 --> 00:08:12,929
After all, again, this should feel like you're practicing. You're allowed to make mistakes.

156
00:08:12,929 --> 00:08:17,173
So in that vein, let's not have any incredibly strict fail states. Yeah.

157
00:08:18,711 --> 00:08:22,813
So we know the boundaries of the space we're working in, in terms of controller,

158
00:08:22,813 --> 00:08:25,535
mechanical, narrative, and tonal restrictions.

159
00:08:25,535 --> 00:08:30,337
We know vaguely what we want the emotional experience to be, since we know the beats

160
00:08:30,337 --> 00:08:34,160
were meant to convey in the cinematics we've already recorded that feature the

161
00:08:34,160 --> 00:08:36,681
guitar, and we have some goals we've set out.

162
00:08:36,681 --> 00:08:38,842
One, try using the touch pad for strumming.

163
00:08:38,842 --> 00:08:41,163
Two, make it feel like practicing a song.

164
00:08:41,163 --> 00:08:44,925
And three, try to make an interesting experience that doesn't

165
00:08:44,925 --> 00:08:47,747
rely on rhythm or time pressure.

166
00:08:47,747 --> 00:08:47,947
So.

167
00:08:48,247 --> 00:08:51,430
What are some unknowns that we should look to solve in our first prototype?

168
00:08:51,430 --> 00:08:54,833
Well, currently we don't have a way to play different notes and chords.

169
00:08:54,833 --> 00:08:57,856
We still have all of those buttons and analog sticks available.

170
00:08:57,856 --> 00:08:59,898
We should try to find something that is

171
00:08:59,898 --> 00:09:02,280
comfortable and easy to use alongside the touchpad.

172
00:09:02,280 --> 00:09:06,684
We want to make we want to tell the player when transitioning between two chords is

173
00:09:06,684 --> 00:09:07,325
right or wrong.

174
00:09:07,325 --> 00:09:11,148
So we need to explore how to convey what chord they should play next

175
00:09:11,148 --> 00:09:13,250
and how to tell them when they mess up.

176
00:09:14,254 --> 00:09:17,697
This should feel similar to playing a real guitar

177
00:09:17,697 --> 00:09:19,338
for someone experienced with a guitar,

178
00:09:19,338 --> 00:09:23,361
but it should also be easy enough for anyone to play.

179
00:09:23,361 --> 00:09:26,444
So we have our constraints, our goal for the mini game,

180
00:09:26,444 --> 00:09:28,405
and some unknowns we want to explore

181
00:09:28,405 --> 00:09:29,406
to help us get to our goals.

182
00:09:30,143 --> 00:09:31,543
Let's start prototyping.

183
00:09:31,543 --> 00:09:32,344
All right.

184
00:09:32,344 --> 00:09:35,585
First thing let's get something, anything into the game.

185
00:09:35,585 --> 00:09:38,306
Let's start with just the one song that we have.

186
00:09:38,306 --> 00:09:40,987
We have Ashley playing take on me from a recorded cinematic.

187
00:09:40,987 --> 00:09:43,328
So we have something that will show up in the final game

188
00:09:43,328 --> 00:09:44,689
that we can use as a target.

189
00:09:44,689 --> 00:09:46,550
Let's grab some temp notes.

190
00:09:46,550 --> 00:09:50,732
I think Grant recorded some MIDI notes from his phone for this step.

191
00:09:50,732 --> 00:09:54,813
We'll place those notes and divide the touch pad into six string regions.

192
00:09:56,084 --> 00:10:03,168
The player can strum through those to play a chord or touch one region at a time in order to play one note.

193
00:10:03,168 --> 00:10:08,752
At this point, just playing the desired note when a region is pressed will be enough.

194
00:10:08,752 --> 00:10:11,193
We can worry about how it sounds later on.

195
00:10:11,193 --> 00:10:16,656
Now in Take On Me, there are five chords that are played in the verse and chorus.

196
00:10:16,656 --> 00:10:21,519
For now, we just have to have the player choose a chord to play from a list of five.

197
00:10:22,658 --> 00:10:29,062
If we put them in a list connected to face buttons, however, players will have to either check or remember how the buttons are paired to the courts.

198
00:10:29,062 --> 00:10:31,904
There's a mental leap players have to overcome.

199
00:10:31,904 --> 00:10:42,890
Even when the player, when the buttons are placed on screen with their corresponding chords for people unfamiliar with the layout, they have to check where a button is creating diversion of that player's attention.

200
00:10:44,157 --> 00:10:48,140
So the simplest affordance is probably going to be a wheel menu on the analog stick.

201
00:10:48,140 --> 00:10:52,024
The player can deflect in a corresponding direction without having to look down.

202
00:10:52,024 --> 00:10:56,468
And in fact, the only way to properly confirm an input is on the screen,

203
00:10:56,468 --> 00:10:59,050
meaning their attention remains in one place.

204
00:10:59,050 --> 00:11:03,194
They can also highlight a selection without committing to it like a button press would.

205
00:11:03,194 --> 00:11:04,255
Let's start there.

206
00:11:05,301 --> 00:11:13,907
Now, when you're learning a song on the guitar, you first learn the chord progression, and then you speed up faster and faster until you can play in tempo.

207
00:11:13,907 --> 00:11:18,109
Let's focus on that first half where the chord progression is key.

208
00:11:18,109 --> 00:11:23,333
For now, I will place a yellow square near the edge of the next chord to tell the player what to play next.

209
00:11:23,333 --> 00:11:28,076
When the player strums with a chord selected, it will either flash green for correct or red for wrong.

210
00:11:28,076 --> 00:11:31,938
This feedback is going to be important for letting the player know when they are making progress.

211
00:11:32,568 --> 00:11:34,810
So here's one of our first prototypes.

212
00:11:34,810 --> 00:11:39,035
The UI was made with debug lines and it's pretty messy, but it

213
00:11:39,035 --> 00:11:40,877
was easy to make changes quickly.

214
00:11:40,877 --> 00:11:46,103
So it allowed me to make things like the divisions of the wheel.

215
00:11:46,103 --> 00:11:49,847
Uh, what text was in each wedge, the colors of the wedges.

216
00:11:49,847 --> 00:11:50,307
It kind of worked.

217
00:11:50,307 --> 00:11:51,168
Let's take a look.

218
00:11:58,957 --> 00:12:00,018
All right.

219
00:12:00,018 --> 00:12:00,858
I think this is working.

220
00:12:00,858 --> 00:12:05,400
You can see there's a lot there that stayed in the final version as a player.

221
00:12:05,400 --> 00:12:08,662
I feel like I'm consciously choosing the chord, even though I don't necessarily

222
00:12:08,662 --> 00:12:12,404
know what the connections are between the chords, I can follow the yellow square.

223
00:12:12,404 --> 00:12:16,766
If I want to make progress and red tells me if I'm making an error, but even

224
00:12:16,766 --> 00:12:21,168
when I make an error, I can hear the chord that I chose and even kind of dance

225
00:12:21,168 --> 00:12:22,749
around and play chords in any order.

226
00:12:22,749 --> 00:12:25,510
They like, it actually sounds pretty good.

227
00:12:25,510 --> 00:12:26,451
No matter what I do.

228
00:12:27,588 --> 00:12:31,930
All right, well, let's take a look at our main song in the game, Future Days.

229
00:12:31,930 --> 00:12:34,771
This one's going to be a little different as Future Days is in a

230
00:12:34,771 --> 00:12:36,452
different key and has different needs.

231
00:12:36,452 --> 00:12:41,995
We're probably going to focus on playing six notes in the melody.

232
00:12:41,995 --> 00:12:45,617
In the key of C, maybe we can show the player the notes instead of

233
00:12:45,617 --> 00:12:47,138
the chords this time for this song.

234
00:12:47,138 --> 00:12:47,618
Okay.

235
00:12:47,618 --> 00:12:51,340
Well, that's a very different wheel for Future Days with very different needs.

236
00:12:51,340 --> 00:12:55,722
We can still make it work with six slices, but we're going to have to think

237
00:12:55,722 --> 00:12:57,363
differently about how we use them.

238
00:12:58,158 --> 00:12:59,378
All right, hold on.

239
00:12:59,378 --> 00:13:00,799
Let's back up a little bit more.

240
00:13:00,799 --> 00:13:03,740
How many wheels are we going to need for the entire game?

241
00:13:03,740 --> 00:13:06,440
What other songs do we expect to play in this game?

242
00:13:06,440 --> 00:13:08,721
Mind you, at this point in the project,

243
00:13:08,721 --> 00:13:10,061
we're pretty early going.

244
00:13:10,061 --> 00:13:11,702
So the answer is still up in the air.

245
00:13:11,702 --> 00:13:14,423
We ended up needing one more song for the narrative,

246
00:13:14,423 --> 00:13:15,323
but at the time,

247
00:13:15,323 --> 00:13:18,164
it could have possibly been a lot more songs on the guitar.

248
00:13:18,164 --> 00:13:20,125
Maybe in our next prototype,

249
00:13:20,125 --> 00:13:23,406
we should wonder if we can future-proof this system,

250
00:13:23,406 --> 00:13:24,206
try to handle any song

251
00:13:24,206 --> 00:13:26,707
that could possibly end up in the ship game.

252
00:13:28,178 --> 00:13:30,720
But as we started discussing this next prototype,

253
00:13:30,720 --> 00:13:33,001
we quickly realized we weren't talking,

254
00:13:33,001 --> 00:13:37,023
what we were talking about wasn't the inclusion of any song,

255
00:13:37,023 --> 00:13:42,286
but rather for the ability for the player to play anything.

256
00:13:42,286 --> 00:13:44,867
Now that's pretty exciting.

257
00:13:44,867 --> 00:13:47,668
To make it work though, we needed some music theory.

258
00:13:48,695 --> 00:13:52,517
Before we could answer how many wheels we'd need to let a player play anything,

259
00:13:52,517 --> 00:13:55,658
we needed to think through the basic structure of a wheel itself.

260
00:13:55,658 --> 00:13:58,679
As we said, through iteration on future days and take on me, we

261
00:13:58,679 --> 00:14:02,800
settled on a wheel with six slices that felt good for our interface.

262
00:14:02,800 --> 00:14:07,101
If we wanted to translate that to a free play or practice mode, though,

263
00:14:07,101 --> 00:14:09,882
that would beg the question, which chords should make up a wheel?

264
00:14:09,882 --> 00:14:13,983
Well, chatting with Mark about it, got my gears turning about a different

265
00:14:13,983 --> 00:14:17,285
wheel concept from Western music theory, the circle of fifths.

266
00:14:17,866 --> 00:14:22,007
This might look familiar to you if you've got a music background, but if not, no worries at all.

267
00:14:22,007 --> 00:14:27,548
We'll go through it a little. In short, the circle of fifths is a musical organization tool that

268
00:14:27,548 --> 00:14:32,729
places closely related musical keys near to one another. Major keys are around the outer ring and

269
00:14:32,729 --> 00:14:36,990
minor keys are around the inner, and the more notes the keys have in common, the closer they

270
00:14:36,990 --> 00:14:42,192
are on the wheel. Adjacent slices have only a single note different in their major scales,

271
00:14:42,192 --> 00:14:46,793
and each major key is directly outside of its relative minor key, which has the same key

272
00:14:46,793 --> 00:14:47,213
signature.

273
00:14:48,382 --> 00:14:52,323
Now I know that was kind of technical, but one thing that's basically boils down

274
00:14:52,323 --> 00:14:56,344
to is that chords close together on this wheel sound good together,

275
00:14:56,344 --> 00:15:00,445
generally a little more easily consonant and used together in more songs than

276
00:15:00,445 --> 00:15:04,706
chords that are further away. That means when we're picking our six chords,

277
00:15:04,706 --> 00:15:09,107
we could take say three adjacent major chords and their three relative minor

278
00:15:09,107 --> 00:15:13,448
chords. And we'd get a wheel that generally sounds great with itself.

279
00:15:14,245 --> 00:15:16,286
and would allow the player to play a lot of songs

280
00:15:16,286 --> 00:15:19,567
just based off the chord relations of one wheel.

281
00:15:19,567 --> 00:15:20,948
If we generalize it a little bit

282
00:15:20,948 --> 00:15:24,169
and pick the chord at the top of the wheel as the key,

283
00:15:24,169 --> 00:15:26,030
in this case, C,

284
00:15:26,030 --> 00:15:29,031
that gives us a template of chords that look like this.

285
00:15:29,031 --> 00:15:31,712
We have our one chord at the top, the key of the wheel,

286
00:15:31,712 --> 00:15:33,592
and the other chords that fill out the wheel

287
00:15:33,592 --> 00:15:35,713
are the major four and five chords

288
00:15:35,713 --> 00:15:38,094
and the minor two, three, and six chords.

289
00:15:39,027 --> 00:15:46,151
Now there's a lot more we could dig into there, but effectively what we get from constructing one wheel this way is two major benefits.

290
00:15:46,151 --> 00:15:59,498
First, anyone familiar with guitar or this kind of theory in general has a relatively easy to understand structure for the layout of the chords, whether they know the circle of fifths itself or are just familiar with one chord, four chord, five chord, etc.

291
00:16:00,675 --> 00:16:04,839
But second, for anyone that doesn't know anything about music or theory,

292
00:16:04,839 --> 00:16:09,904
we have a wheel that sounds internally pleasant and consistent with the sorts of

293
00:16:09,904 --> 00:16:14,748
pop or rock songs that Ellie has been playing, learning, and even writing.

294
00:16:14,748 --> 00:16:16,890
For example, check out this clip.

295
00:16:16,890 --> 00:16:22,015
Even as I play random chords around this wheel, because of the chords we chose,

296
00:16:22,015 --> 00:16:22,796
it still sounds good.

297
00:16:43,396 --> 00:16:45,016
That's not bad.

298
00:16:45,016 --> 00:16:48,937
Small tangent, Ellie mentions to Dina early on in the game

299
00:16:48,937 --> 00:16:50,597
that she's written some original music

300
00:16:50,597 --> 00:16:52,418
since learning the guitar.

301
00:16:52,418 --> 00:16:54,038
Beyond being both fun for the player

302
00:16:54,038 --> 00:16:55,778
in creating this introspective tone,

303
00:16:55,778 --> 00:16:58,659
this free play wheel provided a wonderful

304
00:16:58,659 --> 00:17:00,459
and somewhat accidental opportunity

305
00:17:00,459 --> 00:17:03,520
for the player to role play as Ellie, the songwriter,

306
00:17:03,520 --> 00:17:05,780
experimenting with chords and progressions

307
00:17:05,780 --> 00:17:07,581
at their own pace.

308
00:17:07,581 --> 00:17:10,081
So now that we know what one wheel looks like,

309
00:17:10,081 --> 00:17:12,582
how many wheels do we need to cover everything?

310
00:17:13,490 --> 00:17:17,052
Well, the brute force method, if you will, if you will,

311
00:17:17,052 --> 00:17:20,994
would be to have 12 wheels, one for each key.

312
00:17:20,994 --> 00:17:23,095
Problem there is that we have a ton of overlap,

313
00:17:23,095 --> 00:17:24,736
not to mention how impractical it'd be

314
00:17:24,736 --> 00:17:28,018
for the player to need to scrub through all 12 keys,

315
00:17:28,018 --> 00:17:29,939
or the cognitive load of remembering

316
00:17:29,939 --> 00:17:32,260
which chords lived on which of those wheels.

317
00:17:32,260 --> 00:17:35,282
If there are 24 chords, 12 major and 12 minor,

318
00:17:35,282 --> 00:17:36,983
technically at a minimum,

319
00:17:36,983 --> 00:17:39,844
we'd only need four wheels of six chords.

320
00:17:40,572 --> 00:17:42,533
That's a pretty good start, but there's one more wrinkle.

321
00:17:42,533 --> 00:17:46,515
We want to make sure FreePlay still lets players play the real-world songs

322
00:17:46,515 --> 00:17:48,897
that appear in the narrative of our game.

323
00:17:48,897 --> 00:17:50,818
How do we do there?

324
00:17:50,818 --> 00:17:53,920
Well, we have Ellie's version of Future Days, which she plays in C, check.

325
00:17:53,920 --> 00:17:57,102
Similarly, there's a small beat where Ellie performs the intro to the song

326
00:17:57,102 --> 00:18:00,825
Ecstasy by Crooked Still, a key part of the dance flashback in Jackson,

327
00:18:00,825 --> 00:18:02,025
which is in A minor.

328
00:18:02,025 --> 00:18:02,586
Still covered.

329
00:18:03,272 --> 00:18:07,574
We have Joel's deep, gravelly rendition of Future Days,

330
00:18:07,574 --> 00:18:10,695
which he plays in E flat, still in the clear.

331
00:18:10,695 --> 00:18:13,757
And then, uh-oh, Ellie sings Take On Me in the key of B.

332
00:18:13,757 --> 00:18:16,898
And if we want players to be able to recreate that song,

333
00:18:16,898 --> 00:18:17,639
we'd need a B wheel.

334
00:18:17,639 --> 00:18:19,480
So for total coverage

335
00:18:19,480 --> 00:18:21,841
and working within existing song constraints,

336
00:18:21,841 --> 00:18:25,242
we grabbed five wheels of six with some small overlap.

337
00:18:25,242 --> 00:18:30,885
Those wheels are in the keys of A, B, C, D flat, and E flat.

338
00:18:31,540 --> 00:18:34,347
Might not be a perfectly sensible collection musically,

339
00:18:34,347 --> 00:18:37,996
but there is an elegance to having an alphabetical set of wheels

340
00:18:37,996 --> 00:18:39,440
with some flats in there.

341
00:18:40,383 --> 00:18:42,324
So we have five wheels of six chords.

342
00:18:42,324 --> 00:18:45,347
Players can play every major and every minor chord,

343
00:18:45,347 --> 00:18:48,029
and they can play future days and take on me

344
00:18:48,029 --> 00:18:49,090
if they want to in a single wheel.

345
00:18:49,090 --> 00:18:52,232
Since the player's thumbs are occupied

346
00:18:52,232 --> 00:18:55,034
by selecting a chord and strumming on the touchpad,

347
00:18:55,034 --> 00:18:58,637
we grabbed L1 and R1 on the controller as sensible options

348
00:18:58,637 --> 00:19:01,019
to cycle through the five wheels with their index fingers.

349
00:19:01,019 --> 00:19:02,320
There were probably other ways

350
00:19:02,320 --> 00:19:03,942
we could have arranged all of this.

351
00:19:04,160 --> 00:19:04,920
But this is what we chose.

352
00:19:04,920 --> 00:19:08,282
As you might expect, though, this did have a few side effects.

353
00:19:08,282 --> 00:19:10,644
First of all, in a lucky happenstance,

354
00:19:10,644 --> 00:19:14,446
any possible chord you could want to play is, at most,

355
00:19:14,446 --> 00:19:17,708
two taps away on the L1-R1 wheel selection cycle,

356
00:19:17,708 --> 00:19:20,890
since the selection loops around from end to beginning.

357
00:19:20,890 --> 00:19:22,691
That also would have been the case

358
00:19:22,691 --> 00:19:24,152
if we'd thinned it to just four wheels.

359
00:19:24,152 --> 00:19:26,913
So in that respect, R5 was just as good as four.

360
00:19:27,544 --> 00:19:31,026
Second of all, we have some missing keys. A lot of guitarists might say,

361
00:19:31,026 --> 00:19:35,650
why'd you give me a weird key like Db and not a normal guitar key like G, D, or E?

362
00:19:35,650 --> 00:19:41,353
Well, like we said, since there are classic guitar keys that have a lot of overlap with one another,

363
00:19:41,353 --> 00:19:45,736
we decided to sacrifice those keys having their own wheel in favor of minimizing the number of

364
00:19:45,736 --> 00:19:49,959
wheels in total and trusting that players that really wanted to play in those keys

365
00:19:49,959 --> 00:19:53,501
would at least be able to cycle easily enough to find the chords they needed.

366
00:19:54,400 --> 00:19:57,741
Finally, we elected to include just major and minor chords.

367
00:19:57,741 --> 00:20:01,562
That means no crunchy chords, seventh chords, diminished chords, anything

368
00:20:01,562 --> 00:20:02,802
complicated.

369
00:20:02,802 --> 00:20:06,163
This was also on purpose while it technically restricts the flexibility

370
00:20:06,163 --> 00:20:07,543
of what songs you can play.

371
00:20:07,543 --> 00:20:11,264
Those kinds of chords are, especially for this genre, more niche and are

372
00:20:11,264 --> 00:20:15,105
complex enough that they'd run the risk of sounding dissonant or out of place,

373
00:20:15,105 --> 00:20:17,206
especially in the hands of a novice.

374
00:20:17,206 --> 00:20:21,307
We always tried to think of that balance flexibility for the experienced, but

375
00:20:21,307 --> 00:20:23,748
forgiving, accessible, and encouraging for the novice.

376
00:20:24,347 --> 00:20:28,448
By the way, there's a secret mode where you can play by the fret rather than by the chord.

377
00:20:28,448 --> 00:20:33,390
You can access that by pressing L3 and R3 with photo mode turned off.

378
00:20:33,390 --> 00:20:35,972
Try it to play some guitar solos from your favorite songs.

379
00:20:37,425 --> 00:20:39,786
Well, now that we have a prototype for playing one song

380
00:20:39,786 --> 00:20:41,768
and we have a prototype for playing any song,

381
00:20:41,768 --> 00:20:44,890
let's dive into the nitty gritty of what we shipped with.

382
00:20:44,890 --> 00:20:46,711
This is gonna be a high level discussion

383
00:20:46,711 --> 00:20:48,252
of the elements of the final design.

384
00:20:48,252 --> 00:20:51,434
Frankly, we could drill into each one of these deeper,

385
00:20:51,434 --> 00:20:54,196
especially with all the interdepartmental work

386
00:20:54,196 --> 00:20:56,958
that it took, but we only have 30 minutes.

387
00:20:58,491 --> 00:21:02,614
First, feel. What is the experience of playing this guitar?

388
00:21:02,614 --> 00:21:05,376
Well, there are some issues we had to solve on the touchpad.

389
00:21:05,376 --> 00:21:09,219
It's fairly small and awkwardly placed on the controller.

390
00:21:09,219 --> 00:21:12,521
It can only register two inputs on the surface at a time.

391
00:21:12,521 --> 00:21:14,382
There are no clear delineations

392
00:21:14,382 --> 00:21:17,044
between the regions where the strings are,

393
00:21:17,044 --> 00:21:18,765
so it can be hard to predict which string or strings

394
00:21:18,765 --> 00:21:20,927
you'll play when you tap or strum.

395
00:21:21,752 --> 00:21:26,777
The sides of the touchpad, especially the top, curve off and have unexpected detection on them,

396
00:21:26,777 --> 00:21:30,020
since they don't lie flat plane with the rest of the touchpad.

397
00:21:30,020 --> 00:21:34,645
And we can only detect a finger position once per frame.

398
00:21:34,645 --> 00:21:38,608
Those limitations are actually pretty huge, and we had to work with and around them.

399
00:21:39,575 --> 00:21:42,456
Well, most people know how a guitar is held, so the natural

400
00:21:42,456 --> 00:21:45,857
affordance for strumming felt like it should be up and down

401
00:21:45,857 --> 00:21:49,098
along the touchpad. However, this creates thin regions, it's

402
00:21:49,098 --> 00:21:52,799
good for strumming through a whole chord, but it's bad if you

403
00:21:52,799 --> 00:21:56,180
want to play one note at a time. For this reason, we had an

404
00:21:56,180 --> 00:21:59,261
option to swap the axis of the touchpad from vertical to

405
00:21:59,261 --> 00:22:01,842
horizontal to allow for more space per string.

406
00:22:02,967 --> 00:22:08,731
Now, since you can only check your finger position once per frame, we need to be careful about quick strumming.

407
00:22:08,731 --> 00:22:13,654
If on one frame your finger was in the B region, and in the next frame it's in the A region,

408
00:22:13,654 --> 00:22:15,855
I'm going to have to assume that you swiped from B to A,

409
00:22:15,855 --> 00:22:20,298
meaning I need to trigger the G and D, the strings in between, as well.

410
00:22:21,166 --> 00:22:24,887
But what happens if you tap the same note quickly over and over again?

411
00:22:24,887 --> 00:22:27,788
Well, the notes are going to play immediately on the frame

412
00:22:27,788 --> 00:22:31,669
the touchpad has registered, but a new note on the same string is not going to

413
00:22:31,669 --> 00:22:36,311
play until that region has been fully exited and returned to, and even then

414
00:22:36,311 --> 00:22:40,492
there's a slight delay before a new note will play from that string.

415
00:22:40,492 --> 00:22:44,994
This is to prevent only the beginning of the sound from firing too quickly,

416
00:22:44,994 --> 00:22:46,134
creating artificial sounds.

417
00:22:46,534 --> 00:22:51,415
Effectively, we had to let the note ring just a little bit before we killed it and started again.

418
00:22:51,415 --> 00:22:56,457
Finally, we added some dead space around the borders of the touchpad, so that your fingers

419
00:22:56,457 --> 00:23:01,478
didn't have to slide over the top of the curve of the touchpad to count as a high E. In practice,

420
00:23:01,478 --> 00:23:05,359
this felt more natural when played. So if that's how the player plays the guitar,

421
00:23:05,359 --> 00:23:08,340
next up is how Ellie plays the guitar.

422
00:23:08,830 --> 00:23:12,331
Our Rockstar animation team helped us get hand partials

423
00:23:12,331 --> 00:23:14,712
for the 24 different chord shapes we needed,

424
00:23:14,712 --> 00:23:16,692
as well as a few extras for Ellie's messed up fingers.

425
00:23:16,692 --> 00:23:21,333
Here in the top video is a look at a few of them.

426
00:23:21,333 --> 00:23:24,254
You can see that we blend between these

427
00:23:24,254 --> 00:23:25,854
based on player joystick direction,

428
00:23:25,854 --> 00:23:27,735
which is their chord selection.

429
00:23:27,735 --> 00:23:30,435
We did play around with unique transition atoms

430
00:23:30,435 --> 00:23:32,716
between these, but the number of permutations

431
00:23:32,716 --> 00:23:34,156
became just untenable,

432
00:23:34,156 --> 00:23:36,137
and we were able to get it looking smooth enough

433
00:23:36,137 --> 00:23:38,617
just by blending between fixed chord poses.

434
00:23:39,431 --> 00:23:43,734
Shifting to Ellie's other hand, we have multiple gestures for both strumming and picking.

435
00:23:43,734 --> 00:23:48,178
You can see here in the lower video, she has a full strum when we determine that the player

436
00:23:48,178 --> 00:23:54,183
has strummed across multiple strings, but she also has individual plucks on her thumb,

437
00:23:54,183 --> 00:23:58,146
finger, forefinger, and middle finger to cover plucks on each individual string.

438
00:23:58,851 --> 00:24:02,295
Finally, you can see we have animations that trigger on the strings themselves,

439
00:24:02,295 --> 00:24:07,161
both physically on the guitar and more abstractly in the UI element, so the player

440
00:24:07,161 --> 00:24:11,366
has extra reinforcement about which particular strings are ringing out at any given time.

441
00:24:12,790 --> 00:24:15,052
Finally, the sound. How does the guitar play?

442
00:24:15,052 --> 00:24:18,535
Well, coming back to the needs of the game narrative,

443
00:24:18,535 --> 00:24:20,877
we actually have four playable guitars

444
00:24:20,877 --> 00:24:21,958
over the course of the game.

445
00:24:21,958 --> 00:24:24,360
We have Joel's guitar for Ellie at the beginning,

446
00:24:24,360 --> 00:24:26,622
the optional guitar in the Seattle Music Shop,

447
00:24:26,622 --> 00:24:28,724
the guitar backstage in the theater,

448
00:24:28,724 --> 00:24:31,787
and a return to Ellie's guitar in the farmhouse at the end.

449
00:24:31,787 --> 00:24:35,850
Huge thanks to our legendary music and audio teams

450
00:24:35,850 --> 00:24:37,071
for recording and mixing

451
00:24:37,071 --> 00:24:38,573
everything we're about to talk about.

452
00:24:39,463 --> 00:24:47,947
There were 30 notes in total with a couple of extra ones to accommodate those messy buzzed notes when Ellie's missing her fingers at the end of the game.

453
00:24:47,947 --> 00:24:49,247
That was an interesting challenge.

454
00:24:49,247 --> 00:24:59,752
We really wanted to sell the loss Ellie experienced with terrible sounding buzz notes, but we had to balance that so you could still recognize future days being played so that the symbolism would land.

455
00:25:00,728 --> 00:25:04,350
Not only that, but we had multiple takes for each note, what are called round

456
00:25:04,350 --> 00:25:08,792
Robins and sampling, this is to avoid the robotic unnatural sound from

457
00:25:08,792 --> 00:25:13,353
re triggering a single audio file over and over again, instead having a bucket

458
00:25:13,353 --> 00:25:17,155
of samples for each note helps repetition sound a lot more natural.

459
00:25:17,155 --> 00:25:20,236
That also meant setting up cross fading on repeated notes to

460
00:25:20,236 --> 00:25:22,517
avoid any hitching between samples.

461
00:25:22,517 --> 00:25:26,199
And finally, we have a bunch of muting and slide sounds to fill those

462
00:25:26,199 --> 00:25:29,040
transitions and add that extra sweet layer of fidelity.

463
00:25:30,300 --> 00:25:34,283
So how was the guitar received and what are our takeaways?

464
00:25:34,283 --> 00:25:36,905
Well, excitingly, players really loved it

465
00:25:36,905 --> 00:25:38,065
and engaged with it a lot.

466
00:25:38,065 --> 00:25:41,988
In the midst of all of the exciting

467
00:25:41,988 --> 00:25:44,930
and impassioned discourse around this game,

468
00:25:44,930 --> 00:25:47,712
it was really fulfilling to see several articles written up

469
00:25:47,712 --> 00:25:49,594
about the guitar mini game specifically,

470
00:25:49,594 --> 00:25:51,475
and several reviewers cited it

471
00:25:51,475 --> 00:25:53,397
as one of the game's most memorable moments.

472
00:25:53,820 --> 00:25:58,081
More than that, players started doing exactly what we hope they do, covering songs,

473
00:25:58,081 --> 00:26:01,722
both casually on streams and quite seriously in full produced videos.

474
00:26:01,722 --> 00:26:03,403
If you're interested, search around.

475
00:26:03,403 --> 00:26:06,964
There's various videos on YouTube and Twitch of people playing different songs,

476
00:26:06,964 --> 00:26:11,525
some covers and even some originals with a couple articles compiling some of the best together.

477
00:26:11,525 --> 00:26:18,467
And one of the most exciting and unexpected outcomes, some players were inspired by the system

478
00:26:18,467 --> 00:26:23,468
and the emotional resonance of the guitar throughout the game to pick up and learn the guitar for real.

479
00:26:23,999 --> 00:26:29,561
A number of people pointed out that grabbing guitar tabs online could translate to making in-game covers,

480
00:26:29,561 --> 00:26:33,882
and the system functions somewhat as a learning tool in its own right.

481
00:26:33,882 --> 00:26:36,863
Ellie uses mostly the correct finger shapes.

482
00:26:36,863 --> 00:26:39,124
Awkwardly voiced D chord assign.

483
00:26:39,124 --> 00:26:43,506
And that musically-minded organization of wheels that we talked about earlier

484
00:26:43,506 --> 00:26:48,507
helps inform newcomers which chords work well together and which might be good to learn next.

485
00:26:50,396 --> 00:26:57,562
So that reception was super humbling, very exciting, and really validated the lesson that we learned in the process of designing and iterating on this system.

486
00:26:57,562 --> 00:27:05,468
If we think about a spectrum of ways you could approach design, whether it's creative system like this or different mechanic in general,

487
00:27:05,468 --> 00:27:11,713
on one side is blue sky prototyping. Just start dreaming and making, think outside the box, don't get bogged down in constraints and

488
00:27:12,094 --> 00:27:14,736
until you have a lot of ideas that you've tried.

489
00:27:14,736 --> 00:27:15,937
The problem with this is that

490
00:27:15,937 --> 00:27:17,678
this can be resource intensive

491
00:27:17,678 --> 00:27:21,120
and it can waste a lot of time as you reinvent the wheel.

492
00:27:21,120 --> 00:27:23,862
On the other end, there's rigid documentation,

493
00:27:23,862 --> 00:27:27,485
planning every single little detail out ahead of time

494
00:27:27,485 --> 00:27:29,547
and wrestling to the point where you have a complete

495
00:27:29,547 --> 00:27:31,248
and comprehensive design in theory

496
00:27:31,248 --> 00:27:33,429
before you put anything into the game.

497
00:27:33,429 --> 00:27:35,011
This creates a strong goal,

498
00:27:35,011 --> 00:27:38,813
but the end result might not end up working in the game

499
00:27:38,813 --> 00:27:40,415
the way you imagined it did on paper.

500
00:27:41,210 --> 00:27:45,179
With this guitar, we found it super valuable to strike somewhere in the middle

501
00:27:45,179 --> 00:27:46,803
with something we'll call scaffolding.

502
00:27:47,619 --> 00:27:52,220
In this process, we have a pre-prototype phase where we call out any external constraints,

503
00:27:52,220 --> 00:27:58,122
like the controller we're shipping with, define any internal constraints, like the narrative and

504
00:27:58,122 --> 00:28:02,824
emotional tone we want to strike and the kinds of musical mechanics that would support or undermine

505
00:28:02,824 --> 00:28:08,666
that tone, and define what our goals are for the prototype. In this case, testing chord selection

506
00:28:08,666 --> 00:28:11,726
and the player experience of succeeding or failing on the guitar.

507
00:28:12,372 --> 00:28:14,315
Then you can jump into prototyping.

508
00:28:14,315 --> 00:28:19,543
You have an initial framework, so you can dive straight in and start

509
00:28:19,543 --> 00:28:22,508
searching for solutions to the goals you define in pre-prototyping.

510
00:28:22,508 --> 00:28:24,431
Focus on that core experience for now.

511
00:28:24,431 --> 00:28:26,534
Don't go hog wild just yet.

512
00:28:26,534 --> 00:28:27,516
But.

513
00:28:27,771 --> 00:28:30,033
Once you have your first prototype, you can go into iteration.

514
00:28:30,033 --> 00:28:33,956
This is where the scaffolding comes off and you can begin to build the whole

515
00:28:33,956 --> 00:28:38,320
building based on what you learned in prototyping, revisit those initial

516
00:28:38,320 --> 00:28:42,184
constraints, even stay open-minded to other possibilities you might not have

517
00:28:42,184 --> 00:28:45,987
initially thought of, but that's still fit within and support your initial

518
00:28:45,987 --> 00:28:47,809
constraints and goals.

519
00:28:47,809 --> 00:28:51,852
Explore how to make those possibilities into accessible and understandable reality.

520
00:28:52,413 --> 00:28:58,019
Then test the boundaries of those constraints and surprise yourself. We went from a goal to

521
00:28:58,019 --> 00:29:03,606
play two specific story songs to a full-fledged guitar practice mode because we were open to new

522
00:29:03,606 --> 00:29:08,632
ideas as long as they stay true to the narrative and emotional goals of Ellie's journey and her

523
00:29:08,632 --> 00:29:09,613
relationship with Joel.

524
00:29:10,337 --> 00:29:14,879
With this, there's a concreteness and a specificity to the plan ahead of time,

525
00:29:14,879 --> 00:29:19,700
helping drive scope and vision, the scaffolding, but also a flexibility to

526
00:29:19,700 --> 00:29:24,342
adapt and grow your design as you prototype when new ideas or considerations

527
00:29:24,342 --> 00:29:28,624
come into play, like a free play mode, for example, in the design process,

528
00:29:28,624 --> 00:29:33,345
at least in our process, pre-planning and adapting aren't a dichotomy.

529
00:29:33,345 --> 00:29:37,227
They're both essential parts of creating a great holistic system.

530
00:29:38,974 --> 00:29:39,756
Thank you so much.

531
00:29:39,756 --> 00:29:41,098
I hope you enjoyed this.

532
00:29:41,098 --> 00:29:43,182
Many thanks again to our incredible coworkers.

533
00:29:43,182 --> 00:29:46,449
Without a system like this would definitely not have been possible.

534
00:29:46,449 --> 00:29:48,533
And thank you all so much for listening.

535
00:29:48,533 --> 00:29:51,098
We hope you have a wonderful rest of your GDC.

