1
00:00:00,589 --> 00:00:05,513
Ladies and gentlemen, please welcome to the stage GDC advisory board member, Chris Hecker.

2
00:00:05,533 --> 00:00:22,988
I'm going to make this mercifully short. Yes. I've known John for, I don't even know, 10

3
00:00:23,449 --> 00:00:27,933
or 11 years and I've been on the GDC advisory board for eight or

4
00:00:28,670 --> 00:00:32,712
seven or eight years and we've been trying to get him on the advisory board to speak

5
00:00:32,732 --> 00:00:36,113
at the conference for almost as long as I've known him and certainly as long as I've been

6
00:00:36,133 --> 00:00:40,735
on the advisory board and finally this is the year. So ladies and gentlemen, we're going

7
00:00:40,755 --> 00:00:42,815
to show a short video and then John Carmack. Thanks.

8
00:01:07,480 --> 00:01:14,407
My job has always been finding the right balance between evolving hardware requirements, user experience, and the development process.

9
00:01:14,587 --> 00:01:16,388
The sweet spot in the solution space.

10
00:01:17,990 --> 00:01:23,175
Our earliest titles were notable for the use of hardware level graphics techniques that were rarely seen on the PC,

11
00:01:23,515 --> 00:01:26,217
but they were also developed almost exclusively in C,

12
00:01:26,457 --> 00:01:30,361
at a time when game developers still held assembly language development as a point of pride.

13
00:01:33,224 --> 00:01:36,746
A horde of technologies and methods have emerged and been explored since then.

14
00:01:37,266 --> 00:01:43,451
EGA graphics, floating point calculations, DOS extenders, cross-platform development and portability,

15
00:01:43,891 --> 00:01:49,515
offline processing, networking, and now a half dozen generations of 3D accelerators.

16
00:01:52,697 --> 00:01:58,261
The drive has always been to produce something exciting for both the developers to work with and the users to experience.

17
00:01:58,921 --> 00:02:01,503
Identifying the things that matter and focusing on them.

18
00:02:40,903 --> 00:02:44,945
Okay, this year they hit on the winning strategy of convincing my wife that this was something

19
00:02:44,965 --> 00:02:47,146
I needed to do and letting her work out the details.

20
00:02:49,202 --> 00:02:53,505
So I am going to talk about some topical development issues, but first I'd like everyone to just

21
00:02:53,665 --> 00:02:58,347
step back a little bit from the kind of daily labors that we go through and just be amazed

22
00:02:58,387 --> 00:03:03,170
at the progress that we've seen here. If you go back and look, my first computer was a

23
00:03:03,390 --> 00:03:08,673
VIC-20, 4K of RAM, 1 megahertz processor. The first commercial program that I sold was

24
00:03:08,713 --> 00:03:11,375
developed on an Apple IIc, 128K of RAM, 8K of video memory.

25
00:03:14,903 --> 00:03:19,847
And if we look at that to what we've got today, there's a factor of a million difference in

26
00:03:19,887 --> 00:03:20,988
power between that.

27
00:03:21,448 --> 00:03:25,351
I mean, we had, you know, the Apple IIs could do maybe half a kiloflop with the best code

28
00:03:25,411 --> 00:03:26,392
possible on there.

29
00:03:27,172 --> 00:03:31,536
And now we're looking at, you know, hundreds of gigaflops of processing power on our systems.

30
00:03:32,276 --> 00:03:37,981
And it's easy to kind of lose, to just not be aware of just how tremendous that really

31
00:03:38,041 --> 00:03:38,121
is.

32
00:03:38,181 --> 00:03:41,664
I mean, a factor of a million, that's almost like a euphemism for impossible.

33
00:03:42,024 --> 00:03:44,246
Somebody says it needs to be a million times faster.

34
00:03:45,454 --> 00:03:47,075
And we look at what we've gotten from there.

35
00:03:47,936 --> 00:03:52,958
The early computer games were very much things that people had to be into that specific thing.

36
00:03:52,998 --> 00:03:56,941
You had to have a huge suspension of disbelief to be able to sit down and enjoy the early

37
00:03:56,981 --> 00:04:01,503
games, while now we have things that can just reach right out and grip people that are just

38
00:04:01,843 --> 00:04:06,706
normal people that are used to a film or television type experience, and we can give them quality

39
00:04:06,766 --> 00:04:08,207
like that with the games.

40
00:04:09,408 --> 00:04:11,869
So it's an interesting question to sit back and say, well,

41
00:04:12,579 --> 00:04:16,862
If we continue to have progress like this, what are we going to do with another factor

42
00:04:16,902 --> 00:04:21,586
of a million? And while it's likely we're not going to see necessarily all the same

43
00:04:22,227 --> 00:04:28,112
progression levels there, we probably won't see terahertz processors 10 or 12 years from

44
00:04:28,152 --> 00:04:33,097
now, but we're certain to see massive strides in most of the other levels and certainly

45
00:04:33,117 --> 00:04:39,182
increased parallelism to make up for limits in scalar clock rates. So if we look at what

46
00:04:39,222 --> 00:04:39,903
we've got now...

47
00:04:40,764 --> 00:04:43,766
There's a lot of things that are actually pretty close to being done.

48
00:04:43,786 --> 00:04:48,768
The resolution that we look at on monitors today, which a lot of games are actually starting

49
00:04:48,808 --> 00:04:54,471
to render natively to, is equivalent to film resolution when we're looking at 2 megapixels

50
00:04:54,531 --> 00:04:54,951
or so.

51
00:04:56,252 --> 00:05:01,014
We've just recently made the step to floating point pixel formats, which gives us the entire

52
00:05:01,054 --> 00:05:03,335
dynamic range that the human eye can perceive.

53
00:05:04,336 --> 00:05:07,817
The frame rates that we see on some games when you're looking at 120 hertz rendering

54
00:05:09,087 --> 00:05:13,430
That's as fast as you can basically use for presenting anything to anyone.

55
00:05:14,110 --> 00:05:18,353
So a lot of these things are tantalizingly close to being able to be written off as this

56
00:05:18,433 --> 00:05:19,074
is completed.

57
00:05:19,094 --> 00:05:23,937
Now, there's a bunch of things, obviously, that still separate what we render from reality.

58
00:05:24,958 --> 00:05:28,941
There was an old saying many years ago in computer graphics that reality is 80 million

59
00:05:28,981 --> 00:05:30,002
polygons a second.

60
00:05:30,182 --> 00:05:33,204
That's clearly not the case because here we are today.

61
00:05:33,264 --> 00:05:36,186
We can render 80 million polygons a second in many cases.

62
00:05:36,556 --> 00:05:41,537
and we're still a long ways from what anyone would really term photorealistic. But the

63
00:05:41,577 --> 00:05:46,418
things that we can actually look at improving here, we're probably a factor of 100 off from

64
00:05:46,438 --> 00:05:53,060
the real world in terms of real world clutter, object complexity. A typical crowd scene in

65
00:05:53,080 --> 00:05:57,341
a game might have a couple dozen people where you look at an auditorium where there might

66
00:05:57,361 --> 00:06:02,122
be thousands of people and you get down to all the little tiny things that we're used

67
00:06:02,142 --> 00:06:06,103
to sort of abstracting in games where a cluttered desk in a game might have.

68
00:06:06,434 --> 00:06:11,157
a couple sheets of paper, a coffee cup, a keyboard and a monitor where if you look at

69
00:06:11,537 --> 00:06:15,879
most people's offices, there's going to be a couple thousand discrete little items there.

70
00:06:16,300 --> 00:06:22,043
So there's a clear path that we'll take there on increasing the complexity of the worlds.

71
00:06:22,383 --> 00:06:26,965
There will be probably, you know, another factor of ten that we just crank up in terms

72
00:06:27,005 --> 00:06:30,567
of the normal things that we do today in games that we want to go ahead and bring up to those

73
00:06:30,647 --> 00:06:32,448
done levels where we're doing everything.

74
00:06:32,939 --> 00:06:38,883
very high resolutions, very high frame rates, very high color depths. But, you know, another

75
00:06:39,404 --> 00:06:44,928
factor of 100 or so will probably come in in terms of what we'll do with extremely high

76
00:06:44,968 --> 00:06:49,272
quality surface rendering, going ahead and doing a good job at all of the analytically

77
00:06:49,332 --> 00:06:55,317
intractable problems like soft shadowing and motion blur and doing really good reflections

78
00:06:55,377 --> 00:07:01,702
throughout the world without necessarily simplifying assumptions. But it's still ‑‑

79
00:07:02,389 --> 00:07:06,131
On the graphic side of things, you look at it and a factor of a million is basically

80
00:07:06,171 --> 00:07:09,113
doing at 60 hertz what takes four and a half hours to do now.

81
00:07:09,674 --> 00:07:14,477
And of course four and a half hours has always been sort of what a rendered frame takes no

82
00:07:14,517 --> 00:07:16,199
matter what computing power that you've got.

83
00:07:16,619 --> 00:07:19,881
It will be interesting to see if people are able to suck that up in the offline side of

84
00:07:19,921 --> 00:07:20,502
things there.

85
00:07:21,382 --> 00:07:26,746
But still it means that we can quite credibly with no huge leaps of imagination or breakthrough

86
00:07:26,786 --> 00:07:30,089
technologies expect to eventually be rendering.

87
00:07:31,019 --> 00:07:38,989
Lord of the Rings rendered quality, CG graphics and games, a decade or more from now. But

88
00:07:39,029 --> 00:07:42,594
there are a lot of kind of subtle issues that are seen there when you look at the offline

89
00:07:42,674 --> 00:07:48,281
rendering world, which gaming will have to put a little bit more cleverness into. That's

90
00:07:48,321 --> 00:07:50,283
like in, say, Lord of the Rings.

91
00:07:50,846 --> 00:07:55,047
Every frame is basically gone through and tweaked dynamically with an artist's eye,

92
00:07:55,307 --> 00:07:59,488
and that's something that we aren't able to do in a realtime situation because we've got

93
00:07:59,508 --> 00:08:00,848
more flexibility than that.

94
00:08:01,808 --> 00:08:08,189
But the problems that a lot of gaming has related to the offline stuff is very much

95
00:08:08,350 --> 00:08:13,511
one of being able to give the player the freedom to move around there and losing the ability

96
00:08:13,551 --> 00:08:15,711
to completely control the experience there.

97
00:08:15,731 --> 00:08:18,272
Really different types of games will be...

98
00:08:19,163 --> 00:08:22,926
done quicker than others. When you've got a third person constrained view, you're going

99
00:08:22,946 --> 00:08:28,590
to be able to put most of that level of detail and sophistication and the games will look

100
00:08:28,630 --> 00:08:32,954
like a movie. Third person rendered games where you have a director's perspective moving

101
00:08:33,014 --> 00:08:39,298
in there. I have very little doubt that that will be solved to the quality level of looking

102
00:08:39,338 --> 00:08:39,959
like a movie.

103
00:08:41,394 --> 00:08:45,816
First person games where you've got complete freedom are a little bit harder or a lot harder

104
00:08:45,836 --> 00:08:46,536
in some ways.

105
00:08:48,457 --> 00:08:52,698
The actual fidelity that you'd like to render on there for an immersive experience is something

106
00:08:52,738 --> 00:08:57,860
that requires a little bit more in the way of advances in I.O. devices where, you know,

107
00:08:57,920 --> 00:09:01,741
interestingly, the resolutions that we're at right now, if we had the proper display

108
00:09:01,781 --> 00:09:06,963
technologies, they're actually perfectly acceptable to render reality if we had retinal scanning

109
00:09:07,003 --> 00:09:08,143
and direct retinal imaging.

110
00:09:08,728 --> 00:09:12,710
If we have to use something as crude as a cave imager for the entire thing, we might

111
00:09:12,750 --> 00:09:17,393
need another factor of 50 in terms of pixel rates to go ahead and give the complete level

112
00:09:17,433 --> 00:09:19,013
of look around at anything immersion.

113
00:09:20,174 --> 00:09:24,176
But some of the things that make it even more difficult are when we start looking at the

114
00:09:24,216 --> 00:09:28,258
ability of people to look at whatever they want rather than whatever the camera view

115
00:09:28,318 --> 00:09:32,600
wants, which brings you up to the whole issues of things that are tweaked and massaged in

116
00:09:32,620 --> 00:09:37,622
the offline rendering world that need to somehow come across automatically and convincingly.

117
00:09:38,867 --> 00:09:44,649
And that leads up to a couple of the problems which really aren't so much nearly done in

118
00:09:45,469 --> 00:09:47,490
what we'll do in computer games.

119
00:09:47,610 --> 00:09:50,270
Another one that basically could be done right now is audio.

120
00:09:50,410 --> 00:09:55,492
If anybody wanted to spend all the resources that we have today in terms of using the GPUs

121
00:09:55,532 --> 00:09:58,913
for it and all the floating point processing power, audio could be done.

122
00:09:59,253 --> 00:10:04,354
We could go ahead and have all the head modeling, all the radiosity style sound transfer through

123
00:10:04,394 --> 00:10:05,934
very complex environments.

124
00:10:05,954 --> 00:10:06,855
We certainly have the...

125
00:10:07,499 --> 00:10:12,442
the sample rate and the bit depth for all of that. But it just doesn't really pay off

126
00:10:12,482 --> 00:10:16,724
in the current generation of things to devote that much effort to it. But given a couple

127
00:10:17,565 --> 00:10:21,127
more turns of the processor generations, audio will just be done.

128
00:10:22,007 --> 00:10:27,811
Now, the things that aren't done, physics simulation, which ties in with that hand tweaking

129
00:10:27,911 --> 00:10:32,393
of all the rendered views where we're much, much closer to being able to render exactly

130
00:10:32,453 --> 00:10:35,735
what we want than we are to being able to simulate exactly what we want.

131
00:10:37,497 --> 00:10:42,061
In many cases, physics is still one of those things where everybody's got a physics engine

132
00:10:42,121 --> 00:10:48,066
now and they all sort of kind of work in many cases, but everybody knows pretty much what

133
00:10:48,106 --> 00:10:53,110
you do to go ahead and break your ‑‑ break most physics engines. And we're still doing

134
00:10:53,150 --> 00:10:58,574
basically trivial things. It's cool to have a couple boxes bounce around and knock off

135
00:10:58,594 --> 00:11:04,038
of each other and land in different orientations and to ragdoll a character. But when we start

136
00:11:04,078 --> 00:11:06,260
looking at things that people will be experimenting with.

137
00:11:07,364 --> 00:11:12,647
in current and future game generations. There will be simulations of weather, simulations

138
00:11:12,707 --> 00:11:18,511
of liquids, simulations of dust motes going through the air and transferring through the

139
00:11:18,551 --> 00:11:25,755
environments. And all of these are interesting, challenging problems that we can get some

140
00:11:25,815 --> 00:11:26,636
mileage out of.

141
00:11:29,635 --> 00:11:33,476
Kind of interestingly with something that's happened in the game industry over the last

142
00:11:33,516 --> 00:11:38,338
decade in that a lot of things that were academic pursuits are actually really relevant to what

143
00:11:38,378 --> 00:11:39,158
we're doing now.

144
00:11:39,919 --> 00:11:45,441
Ten years ago, gaming had nothing whatsoever to do with what people would do academically

145
00:11:45,521 --> 00:11:47,562
with simulation or graphics.

146
00:11:48,022 --> 00:11:51,243
What you were doing was basically all implementation level things.

147
00:11:52,104 --> 00:11:56,245
The trickery was in figuring out how to do something clever and make some implementation

148
00:11:56,305 --> 00:11:56,485
thing.

149
00:11:56,966 --> 00:12:00,788
you know, a small integral factor faster than what would be the straightforward algorithm

150
00:12:00,868 --> 00:12:07,072
for it. But now with the power that we've got and the fact that not everything is nailed

151
00:12:07,112 --> 00:12:11,294
down so hard in terms of exactly what fractions of the CPU need to go to these things and

152
00:12:11,334 --> 00:12:15,436
what are left over for other things, we've seen it certainly in the last five years,

153
00:12:16,057 --> 00:12:21,360
you know, a huge amount of beneficial crossover from the academic graphics research world

154
00:12:21,540 --> 00:12:25,722
into computer graphics, because now what people do for, you know, for

155
00:12:26,152 --> 00:12:31,034
a college thesis or something has direct applicability to what you can use in a computer

156
00:12:31,074 --> 00:12:37,117
game. So physics rendering is something that's still going through a lot of that, and that's

157
00:12:37,157 --> 00:12:41,259
not my specialty, but it's one of those areas that you can clearly look at and say, this

158
00:12:41,319 --> 00:12:46,481
is going to be a very exciting area of research that will be important as we start more or

159
00:12:46,521 --> 00:12:49,082
less polishing off many of the graphics side of things.

160
00:12:51,799 --> 00:12:56,324
That also brings up the largest issue, which is what you do with AI level things.

161
00:12:56,364 --> 00:13:02,070
And of course that's a field that goes much beyond gaming or entertainment even into really

162
00:13:02,110 --> 00:13:05,474
large kind of world scale important issues on there.

163
00:13:06,035 --> 00:13:10,620
But when we come down to it, as we start rendering all of these completely perfect worlds that

164
00:13:10,640 --> 00:13:12,361
are just looking absolutely fabulous.

165
00:13:12,839 --> 00:13:18,142
The process of making everything else look as good as the rendering involves many things

166
00:13:18,182 --> 00:13:22,805
that are difficult physics simulations and then many things that are just AI complete

167
00:13:22,885 --> 00:13:23,445
problems.

168
00:13:24,246 --> 00:13:29,189
And it's going to be really interesting to see how those things are addressed.

169
00:13:29,429 --> 00:13:34,452
One of the major ‑‑ one of my major strategies at id has always been if you're not going

170
00:13:34,492 --> 00:13:38,754
to try and solve something really well, try and dodge the issue as completely as possible.

171
00:13:40,012 --> 00:13:42,593
which is why we don't have a lot of character interaction,

172
00:13:42,813 --> 00:13:44,974
because character interaction is hard,

173
00:13:45,654 --> 00:13:48,075
and if you start making characters look really,

174
00:13:48,135 --> 00:13:53,357
really good, but they still act like cardboard cutouts,

175
00:13:53,617 --> 00:13:55,638
it's an open question whether that's actually

176
00:13:55,658 --> 00:13:56,999
a good direction to pursue.

177
00:13:58,219 --> 00:14:02,121
So AI is one of those things that in games industry

178
00:14:02,181 --> 00:14:05,842
is still addressed completely as a set of techniques

179
00:14:05,902 --> 00:14:08,363
and tricks, and you're working at it specifically for

180
00:14:09,452 --> 00:14:13,195
a limited set of outputs. But we're going to be demanding more and more out of that.

181
00:14:13,235 --> 00:14:18,739
And when we start looking at what we really expect to see in a game, if people just sit

182
00:14:18,779 --> 00:14:24,084
back in kind of blue sky, they want to have some, like I say, a fantasy environment where

183
00:14:24,104 --> 00:14:29,028
you go in and you've got all of the people there and they're acting like people. That's

184
00:14:29,148 --> 00:14:32,510
a really tough problem. Now, it's interesting in that

185
00:14:33,373 --> 00:14:37,715
I believe personally that as the direction of research goes, game environments are a

186
00:14:37,735 --> 00:14:42,377
really wonderful place to actually conduct AI research because it gives you a simulated

187
00:14:42,437 --> 00:14:46,359
environment where you don't have to worry about sensors and actuators and you can still

188
00:14:46,419 --> 00:14:48,941
work on kind of the core computational problem there.

189
00:14:50,061 --> 00:14:55,864
So there's some hopeful bits that there may be interesting research elements going on

190
00:14:55,924 --> 00:15:00,126
there, but it always has to be kind of tied in with the fact that in the end we are making

191
00:15:00,166 --> 00:15:02,187
a product that's supposed to entertain people.

192
00:15:03,455 --> 00:15:08,178
The choices that you make in technical directions, if you want to be successful, you have to

193
00:15:08,198 --> 00:15:13,261
kind of keep your eyes on the value rather than necessarily in some ways what you consider

194
00:15:13,281 --> 00:15:14,742
the quality of what you're doing.

195
00:15:16,183 --> 00:15:23,187
And AI in many cases, there's some interesting aspects to the gaming world on there where

196
00:15:23,507 --> 00:15:27,410
a lot of what people look at as AI like bot programming and things like that.

197
00:15:30,055 --> 00:15:34,036
are issues where you're addressing a very domain specific element of the game, and that's

198
00:15:34,096 --> 00:15:39,457
been good mileage. We've gotten good value out of the effort that goes into that. But

199
00:15:39,537 --> 00:15:43,498
when we start looking at harder and harder problems on there, it does become closer to

200
00:15:43,538 --> 00:15:50,099
a pure research topic. And I'm probably not going to be one of the people at the forefront

201
00:15:50,139 --> 00:15:53,819
of that technology, but it's going to be an incredibly important area that we look at

202
00:15:53,939 --> 00:15:58,520
over the next decade of game development on there. And there is always the possibility

203
00:15:58,540 --> 00:15:58,620
that

204
00:15:58,640 --> 00:15:59,200
Transcribed by https://otter.ai

205
00:15:59,855 --> 00:16:05,576
some real fundamentally important wide-reaching results may be obtained by the efforts of

206
00:16:05,616 --> 00:16:10,757
people to make a game in there, to make something come out the way they want to have characters

207
00:16:10,797 --> 00:16:11,577
interacting there.

208
00:16:12,177 --> 00:16:17,439
That is one of the big problems still yet to be done in computer science, and I certainly

209
00:16:17,479 --> 00:16:18,779
believe it's a solvable one.

210
00:16:19,839 --> 00:16:25,940
But tying that into the actual process of sitting down and making the games there is

211
00:16:27,061 --> 00:16:28,581
always been interesting to have.

212
00:16:29,169 --> 00:16:33,213
A goal with a project that you're working on, trying to do something new at each time,

213
00:16:33,233 --> 00:16:37,337
you know, to try and kind of meter out the time that you've got for developing something

214
00:16:37,397 --> 00:16:42,282
new and interesting to actually tie in with producing a product that's going to pay for

215
00:16:42,322 --> 00:16:44,784
your company to continue to be able to do games in the future.

216
00:16:46,466 --> 00:16:52,091
And that's one of the other major topics that I want to go over is the extensive

217
00:16:52,594 --> 00:16:57,298
stretching of the game development cycle and some of the problems that I think I see with

218
00:16:58,639 --> 00:17:01,862
our development cycles and to some degree with the industry as a whole.

219
00:17:03,383 --> 00:17:07,266
We've been obviously Doom 3 hasn't shipped yet.

220
00:17:07,566 --> 00:17:11,009
We're going into our fourth year of development on that.

221
00:17:11,370 --> 00:17:12,290
It's really close.

222
00:17:12,731 --> 00:17:16,374
But there's some interesting things that I can look at on here where I can remember clearly.

223
00:17:16,959 --> 00:17:21,742
in previous projects thinking, okay, we're down to the wire, we're pushing everything

224
00:17:21,802 --> 00:17:26,806
through. I've done a good job on all of this, but wouldn't it be nice if I could sit back

225
00:17:27,166 --> 00:17:33,450
and really clean up the code, perfect the interfaces and just do a wonderful nice craftsman

226
00:17:33,490 --> 00:17:40,074
job on that? And interestingly, this project, I've had the time to basically do that. And

227
00:17:40,114 --> 00:17:43,477
I've come to the conclusion that it sort of sucks to be in that position where

228
00:17:45,488 --> 00:17:50,012
There's a small level of ‑‑ you know, there's a level of craftsman satisfaction

229
00:17:50,032 --> 00:17:55,497
that you get from trying to do what you do at an extreme level of quality. And one thing

230
00:17:55,517 --> 00:18:01,202
that I found is that's not really my primary motivation. I do take some enjoyment in it

231
00:18:01,342 --> 00:18:06,126
when you go ahead and, you know, work and polish and improve something. But in the end,

232
00:18:06,666 --> 00:18:12,872
that's not what's really providing the value to your end users. And that has really become

233
00:18:13,112 --> 00:18:14,053
clear to me. And it's been ‑‑

234
00:18:14,890 --> 00:18:18,831
It's been something that's driven all of my developments over the years in that you want

235
00:18:18,871 --> 00:18:22,813
to pick out the things that are really important and you need to be able to categorize and

236
00:18:22,853 --> 00:18:29,715
say this is perhaps has value but isn't the best use of the time on there. And that's

237
00:18:29,975 --> 00:18:33,797
gone back through, you know, every project we've ever done has had those kind of decision

238
00:18:33,857 --> 00:18:37,998
points on there where is this going to be the thing that we focus on? Is this going

239
00:18:38,039 --> 00:18:42,800
to be key? And when you get little bits of time and you can sit back and do that, you

240
00:18:43,488 --> 00:18:50,789
do a really nice polishing job. It's kind of nice, but it's not the point of maximum

241
00:18:50,829 --> 00:18:56,030
leverage. And I found that I get the most satisfaction out of the development work when

242
00:18:56,070 --> 00:19:01,351
I can tell that the work that I'm doing has, you know, major leverage on the final product.

243
00:19:02,291 --> 00:19:06,272
And there's a lot of things that have changed, you know, with the industry that to some degrees

244
00:19:06,332 --> 00:19:11,393
have kind of lessened the ability of that to happen. You know, in the early days you

245
00:19:11,413 --> 00:19:11,793
would have...

246
00:19:12,269 --> 00:19:18,755
a company that would have a couple of programmers working on a project, and there would be a

247
00:19:18,795 --> 00:19:24,220
good chance that a single programmer would basically know everything about what's going

248
00:19:24,280 --> 00:19:31,246
on in a project. And up until recently, every aspect of a game that came out of ID was something

249
00:19:31,306 --> 00:19:36,030
that I had originally written, and then we would have one or two other programmers that

250
00:19:36,110 --> 00:19:39,693
would pick up the foundation and go ahead and work from there.

251
00:19:40,777 --> 00:19:44,959
The last game with Quake 3 was the first game that had a major chunk that was something

252
00:19:44,979 --> 00:19:47,481
that I didn't write, which was the bot AI logic.

253
00:19:48,422 --> 00:19:54,185
And in Doom, it's the first game that we started off intending to have multiple developers

254
00:19:54,265 --> 00:19:55,986
developing completely independent areas.

255
00:19:56,506 --> 00:20:01,289
And it's necessary at some point to do that if we follow the current design trends that

256
00:20:01,329 --> 00:20:06,032
we're doing with games, because at some point you just reach a level where one person can't

257
00:20:06,112 --> 00:20:10,075
possibly do all the things that you decided are critically important for your product.

258
00:20:10,442 --> 00:20:15,845
You have to split things up. But there's a big cliff right there when you go from one

259
00:20:15,885 --> 00:20:20,288
person being able to deal with and manage and go over and change and fix anything in

260
00:20:20,328 --> 00:20:26,632
the product to a point where you have three or four or more developers that may not actually

261
00:20:26,672 --> 00:20:31,655
know what's going on in everybody else's code. It's been unnerving for me sometimes to realize

262
00:20:31,715 --> 00:20:35,678
that there are source files in Doom that I've never even opened.

263
00:20:37,546 --> 00:20:40,648
On the one hand, I can kind of berate myself a little bit and say I should be doing more

264
00:20:40,688 --> 00:20:45,932
comprehensive code reviews over everything, but it does just mean there's a finite level

265
00:20:45,992 --> 00:20:49,714
where there's just only so much that one person can deal with at one time.

266
00:20:51,195 --> 00:20:57,119
And there's, again, it's necessary if we continue to have the kind of feature lists that we

267
00:20:57,159 --> 00:20:57,419
have.

268
00:20:57,499 --> 00:21:02,162
If we have to do everything we've always done before and then do many more things, everything

269
00:21:02,182 --> 00:21:03,543
that all the competitors are doing.

270
00:21:04,816 --> 00:21:09,577
But to some degree I feel that we might be falling into a kind

271
00:21:09,597 --> 00:21:12,998
of trap, kind of a mainframe trap where you looked at the old

272
00:21:13,038 --> 00:21:15,818
computer vendors that would look at things and say, well, this is

273
00:21:15,858 --> 00:21:18,899
the serious work. This is, you know, our group of competitors.

274
00:21:19,239 --> 00:21:23,020
We have large products that have decades-long, you know,

275
00:21:23,100 --> 00:21:27,401
histories or legacies with them. And we need to keep maintaining

276
00:21:27,441 --> 00:21:31,802
this level of support. And while I don't have specific

277
00:21:32,623 --> 00:21:36,684
know, visions for how this can go, it does still strike me that

278
00:21:36,824 --> 00:21:40,524
there's the possibility for things that are not yet another

279
00:21:40,824 --> 00:21:43,405
first person shooter, third person action game, you know,

280
00:21:43,425 --> 00:21:47,406
RPG, whatever, that there are game possibilities that are not

281
00:21:47,506 --> 00:21:51,427
just working directly off of the existing paradigms, you know,

282
00:21:51,447 --> 00:21:56,388
the genres that we've got now. And certainly id's major claim

283
00:21:56,428 --> 00:21:59,708
to fame probably is that we, you know, we invented a genre with

284
00:21:59,728 --> 00:22:00,748
the first person shooter.

285
00:22:01,360 --> 00:22:04,362
And to some degree, we're still trapped by that success.

286
00:22:04,902 --> 00:22:09,986
I don't expect anyone to cry over our woes on this.

287
00:22:10,186 --> 00:22:12,568
We're very happy to be successful with this.

288
00:22:13,068 --> 00:22:19,452
But there are subtle issues there that prevent us from doing radically different things.

289
00:22:19,873 --> 00:22:26,397
Just the concept of having dozens of employees that have certain skill sets kind of determines

290
00:22:26,778 --> 00:22:28,879
where we go in the development process on there.

291
00:22:28,919 --> 00:22:29,720
We can't just say...

292
00:22:30,245 --> 00:22:34,407
oh, I've decided we're going to do a strategy game with some interesting and clever objective,

293
00:22:34,767 --> 00:22:37,268
and we really don't need all these level designers.

294
00:22:38,709 --> 00:22:45,072
So there's, you know, there's an aspect of the established game companies having sort

295
00:22:45,092 --> 00:22:49,734
of a mainframe bias on there, and I have high hopes that there's still many of the creative

296
00:22:49,794 --> 00:22:54,956
small development teams that, you know, can be working on more of an innovative new approach

297
00:22:55,036 --> 00:22:55,356
in there.

298
00:22:57,639 --> 00:23:02,482
There are factors of efficiency there when I can still look back kind of wistfully at

299
00:23:02,502 --> 00:23:06,825
the time when there were six of us sitting in a room working all night to get the project

300
00:23:06,865 --> 00:23:11,788
done rather than having a project manager and multiple kind of departments working on

301
00:23:11,808 --> 00:23:12,769
the different things there.

302
00:23:13,630 --> 00:23:18,453
And on the one hand, there's no question that what we're doing now really is superior in

303
00:23:18,533 --> 00:23:19,153
every way.

304
00:23:19,293 --> 00:23:23,636
I mean, I'm not going to go longing for the good old days of the extremely simple games.

305
00:23:23,856 --> 00:23:25,658
What we're doing now is just better.

306
00:23:27,433 --> 00:23:33,434
It's better at a much larger cost. And the development process there I do think still

307
00:23:33,754 --> 00:23:38,435
is open for, you know, that six‑person team doing something really innovative, but it's

308
00:23:38,455 --> 00:23:43,356
not going to be a first‑person shooter or any of the established genres, because it's

309
00:23:43,416 --> 00:23:48,157
just taking incredibly massive amounts of development time and effort to do this.

310
00:23:49,197 --> 00:23:54,758
And the time ties in on a really depressing level with the technical requirements and

311
00:23:54,798 --> 00:23:55,758
strategy on there.

312
00:23:57,515 --> 00:24:01,656
The new Doom game was based on strategic decisions that I made over four years ago.

313
00:24:01,716 --> 00:24:07,037
They've turned out good in that the hardware has pretty much evolved the way I expected,

314
00:24:07,137 --> 00:24:12,038
although, you know, to be sure, I have sort of a Heisenberg uncertainty principle effect

315
00:24:12,158 --> 00:24:16,299
on the hardware industry where the strategic decisions that I make do influence, you know,

316
00:24:16,339 --> 00:24:18,479
upcoming generations of hardware.

317
00:24:19,079 --> 00:24:22,700
So it may not be completely strategic brilliance on my part.

318
00:24:24,540 --> 00:24:26,361
But the decisions looked good.

319
00:24:26,913 --> 00:24:32,057
But I looked at this and we were rendering the same pictures that we do now effectively

320
00:24:32,077 --> 00:24:37,862
I am over three years ago, you know, on a G force one class hardware and here we haven't

321
00:24:37,902 --> 00:24:43,707
shipped the title yet and we've had three, you know, three generations of hardware that

322
00:24:43,767 --> 00:24:48,131
could have used this technology that we haven't been able to get out and actually really take

323
00:24:48,191 --> 00:24:49,372
maximum advantage of.

324
00:24:50,764 --> 00:24:56,146
And right now we're looking at starting new research for the current generation of hardware

325
00:24:56,186 --> 00:24:59,888
with floating point pixel formats, doing all the interesting rendering things that we're

326
00:24:59,908 --> 00:25:01,069
looking forward to on there.

327
00:25:01,930 --> 00:25:07,613
But I'm looking at this and saying, well, we ship Doom really soon now.

328
00:25:08,273 --> 00:25:10,454
Generally we'd like to go ahead and have the next title.

329
00:25:10,774 --> 00:25:14,236
It's going to be much shorter development time, which usually means that we have to

330
00:25:14,396 --> 00:25:16,597
not get really aggressive at developing new things.

331
00:25:17,725 --> 00:25:22,246
We basically took Doom and spiffed up the technology a little bit for the couple of

332
00:25:22,286 --> 00:25:26,066
things that we can now count for in the changing market share.

333
00:25:27,046 --> 00:25:31,647
That means that a brand-new level of technology, if I do the kind of level of clean rewrite

334
00:25:31,667 --> 00:25:37,008
that I did with Doom, might not even be started being worked with for two years from now.

335
00:25:37,368 --> 00:25:40,269
And then it could take two or three years to develop a new title.

336
00:25:40,309 --> 00:25:43,449
I mean, if we're lucky, it could be another four-year title after that.

337
00:25:45,022 --> 00:25:50,605
That's looking at six years from concept, you know, to actual deployment on there.

338
00:25:50,625 --> 00:25:55,688
And then of course there's the kind of legacy tailing on there where we'll have licensees

339
00:25:55,708 --> 00:25:58,349
that are using that through two generations of product after that.

340
00:25:58,709 --> 00:26:04,032
That's requiring to some degree looking ahead almost a decade on the hardware technology.

341
00:26:04,773 --> 00:26:07,674
And certainly you can't be appropriate at that point.

342
00:26:07,714 --> 00:26:13,197
You might be scalable on some level there, but it's sort of like running, you know, you

343
00:26:13,237 --> 00:26:13,557
can run.

344
00:26:14,273 --> 00:26:18,896
quake on a modern processor, but it doesn't take advantage of what you can really do like

345
00:26:18,956 --> 00:26:25,100
it would with a current game on Doom 3. So that's one of my big trouble spots on there

346
00:26:25,160 --> 00:26:29,664
about I want to bring new technology out kind of as rapidly as possible. I mean, the new

347
00:26:29,704 --> 00:26:33,426
stuff is great. The things that we can do with the cards that are just coming out. I

348
00:26:33,446 --> 00:26:38,009
mean, I just got an NV40 into my dev system, and it's spectacular.

349
00:26:39,181 --> 00:26:43,083
The power that we can get with that to really go ahead and utilize all the floating point

350
00:26:43,103 --> 00:26:47,066
calculations that we want to use, the new generations of things that I want to do in

351
00:26:47,086 --> 00:26:47,646
the rendering.

352
00:26:48,707 --> 00:26:54,290
And it's really disappointing to think that at the absolute best possible case, if we

353
00:26:54,310 --> 00:27:00,334
decided to kind of, you know, go for it and do a real high end product for the next one,

354
00:27:00,734 --> 00:27:05,857
it would be two and a half years, best case, before we could have something like this that

355
00:27:05,917 --> 00:27:07,478
actually gets into people's hands.

356
00:27:08,795 --> 00:27:13,897
And I don't really know what to do about that. An idea that I floated early on in Doom's

357
00:27:13,937 --> 00:27:19,380
development that I wish we had followed up on was to go ahead and do a product that's

358
00:27:19,660 --> 00:27:24,862
specifically a rendering showcase. And a lot of people accuse id products of being that

359
00:27:24,962 --> 00:27:29,544
anyways, but that's not the case. We do look at all the aspects of the game that we want

360
00:27:29,564 --> 00:27:33,686
to improve there. And certainly rendering has not been the thing holding up Doom 3's

361
00:27:33,706 --> 00:27:37,288
development. It's all the other aspects of the game that we're improving on there.

362
00:27:38,547 --> 00:27:44,010
So, you know, I have some hope for tiny little specialty products and things like that. What

363
00:27:44,050 --> 00:27:49,074
I had pitched the idea early on was basically doing kind of a Quake II remix and taking

364
00:27:49,094 --> 00:27:54,037
a game and not changing the game, you know, not going in and trying to redo everything,

365
00:27:54,478 --> 00:27:59,221
but build new media sets for it and use the new technology and get it out there knowing

366
00:27:59,241 --> 00:28:03,424
that you're targeting a small section of the market just so people can go ahead and get

367
00:28:03,464 --> 00:28:06,746
some value out of the newest generation of graphics technologies.

368
00:28:07,012 --> 00:28:11,613
get people experienced with it and kind of start the cycle a little bit faster, where

369
00:28:11,693 --> 00:28:15,674
everybody always wants to see the second generation title with a new technology once everyone

370
00:28:15,854 --> 00:28:20,275
has learned the ropes for it and is ready to apply all the lessons that they learned

371
00:28:20,355 --> 00:28:23,776
there. It would be great if we could shorten the development cycles on there rather than

372
00:28:23,816 --> 00:28:28,237
having three or four year development cycles so you wait six or seven years to see the

373
00:28:28,277 --> 00:28:31,858
second generation technology. If we could bootstrap that somewhat earlier.

374
00:28:33,100 --> 00:28:38,522
But even the idea of just kind of re‑skinning an old game, you know, brings with it the

375
00:28:38,562 --> 00:28:43,103
problems that as we're doing this newer and newer graphics technology, the media creation

376
00:28:43,143 --> 00:28:47,004
demands have just gotten worse and worse on there.

377
00:28:47,224 --> 00:28:50,865
Certainly we've got more levels of maps that are higher resolution that we're applying

378
00:28:50,885 --> 00:28:51,505
to everything.

379
00:28:51,885 --> 00:28:53,345
But what we also see is that

380
00:28:53,846 --> 00:28:57,889
things that were acceptable in the earlier games. I mean, you go back, Wolfenstein was

381
00:28:57,909 --> 00:29:02,132
blocks. You had a texture on it that was tied to the same thing on each side. It took 30

382
00:29:02,573 --> 00:29:06,035
minutes to make a map. There were shipping maps in there that were done in less than

383
00:29:06,075 --> 00:29:10,579
an hour. Somebody scrubbed something out, play tested it for a while, said this is fun

384
00:29:10,639 --> 00:29:18,284
and it's in, you know, Spear of Destiny. And, hey, they worked. They were fun. But when

385
00:29:18,305 --> 00:29:20,126
we look at things now where it's taking

386
00:29:20,664 --> 00:29:26,769
man month to deliver a level to even kind of the beginning of the play test stage on

387
00:29:26,809 --> 00:29:33,156
there. It becomes a real problem and I worry about the interactions between the media creation

388
00:29:33,176 --> 00:29:37,440
and the actual game content side because we go back again to the Wolfenstein maps and

389
00:29:37,900 --> 00:29:41,924
if somebody goes into a room and this is not much fun here, you just scrub out a couple

390
00:29:41,964 --> 00:29:45,107
more tiles to connect it in and make a cycle to some of the other areas.

391
00:29:45,732 --> 00:29:50,174
And if you go in and you spend your couple months and you build an area in a current

392
00:29:50,214 --> 00:29:55,476
game generation and you say, well, this play isn't working out all that well, that same

393
00:29:55,737 --> 00:29:59,618
knocking a hallway into another room can take a week.

394
00:30:00,158 --> 00:30:04,380
It can take a week to go ahead and rebuild a room that then looks good, that connects

395
00:30:04,440 --> 00:30:07,922
in a different way and has slightly different flow and relights the different area.

396
00:30:07,942 --> 00:30:07,982
So ‑‑

397
00:30:09,702 --> 00:30:15,144
That's a concern, and it's certainly something that's taking, makes the kind of final end

398
00:30:15,184 --> 00:30:19,106
of the game development process take a lot longer, and I'm afraid that it has the possibility

399
00:30:19,286 --> 00:30:24,969
of actually making the games less fun on a pure kind of game development symbolic level,

400
00:30:25,789 --> 00:30:29,851
which you hopefully more than counteract by the kind of increased richness there, or you

401
00:30:29,871 --> 00:30:33,772
just kind of bite the bullet and take the time and get really late and slip and actually

402
00:30:33,812 --> 00:30:36,873
deliver something where you have had the time to go do those two-week fixes.

403
00:30:37,905 --> 00:30:40,207
every time you find a game development problem on there.

404
00:30:41,508 --> 00:30:46,992
And each time we've kind of done a technology, there have been things that I thought would

405
00:30:47,053 --> 00:30:54,158
help this process, like the level of interactivity that we have in Doom's content creation is

406
00:30:54,919 --> 00:30:56,200
one of the really amazing things.

407
00:30:57,402 --> 00:31:02,825
that we have over there. When we have other developers in looking at the technology, looking

408
00:31:02,865 --> 00:31:07,287
at the game is one thing. You can always kind of set piece a scene, especially if you don't

409
00:31:07,327 --> 00:31:12,130
let them touch it that looks great. But what usually leaves kind of the biggest impression

410
00:31:12,150 --> 00:31:17,332
is when our level designers kind of go ahead and bring up the editor, which is now integrated

411
00:31:17,372 --> 00:31:19,493
with the game, stretch out a rendering window.

412
00:31:19,993 --> 00:31:23,794
and everything is looking right with shadows in the bump mapping and they grab a light

413
00:31:23,874 --> 00:31:27,835
and drag it around and all the shadows and lighting and everything changes in real time.

414
00:31:28,576 --> 00:31:35,438
And contrasting this with the previous generation where we had usually a 30‑minute cycle to

415
00:31:35,478 --> 00:31:40,120
go ahead and send something through the visibility and the lighting process before you could

416
00:31:40,160 --> 00:31:44,001
actually look at it in the game. So at the start of this development I'm thinking, okay,

417
00:31:44,021 --> 00:31:48,302
we've got a little more work to do here, but this level of interactivity is so much better

418
00:31:48,662 --> 00:31:49,623
that it's going to

419
00:31:50,096 --> 00:31:54,939
you know, shrink our development time on there somewhat. And it hasn't worked out that way.

420
00:31:54,979 --> 00:31:58,881
And it's sort of like, I believe, the offline rendering world where you get more capabilities

421
00:31:58,941 --> 00:32:03,563
or the ability to do something faster and people will spend more time going ahead and

422
00:32:03,603 --> 00:32:08,946
trying to make it absolutely perfect. And it's, you know, the demand for the interactivity

423
00:32:08,966 --> 00:32:13,989
there has been kind of amusing where at first when I brought it up, we had our normal kind

424
00:32:14,009 --> 00:32:18,711
of level editor and you would hit enter to go ahead and render a scene. And it would

425
00:32:18,732 --> 00:32:19,892
bring up the scene exactly.

426
00:32:20,322 --> 00:32:23,183
you know, as the game renders it with the bump mapping and the

427
00:32:23,203 --> 00:32:26,144
shadows and all that. So that was pretty cool. Then we got a

428
00:32:26,164 --> 00:32:28,764
little bit faster computers in there and everybody is like,

429
00:32:28,804 --> 00:32:31,925
well, we'd like to be able to go ahead and stretch geometry and

430
00:32:31,965 --> 00:32:35,126
move around in this. So, okay, we put in continuous render mode

431
00:32:35,206 --> 00:32:37,506
on there. Then people want to see the particle systems

432
00:32:37,546 --> 00:32:41,627
dynamically acting in there. And you add that in. And it finally

433
00:32:41,667 --> 00:32:43,088
got to the point where I'm ‑‑

434
00:32:44,487 --> 00:32:47,129
They were complaining about the fact that to change a light's

435
00:32:47,189 --> 00:32:50,631
color, you would have to bring up a color picker dialog, click

436
00:32:50,691 --> 00:32:53,734
on that and then close it. And now we've got like continuous

437
00:32:53,774 --> 00:32:57,876
color dragging in a live color window on there. And all of this

438
00:32:57,956 --> 00:33:01,199
is great and we have a lot of really wonderful scenes in

439
00:33:01,239 --> 00:33:06,242
there, but it hasn't shortened the content creation time. So we

440
00:33:06,322 --> 00:33:08,924
are looking at it a little bit more from a higher level

441
00:33:08,964 --> 00:33:11,826
strategy and strategic view now where

442
00:33:12,500 --> 00:33:15,420
There is going to be some attempt to start, you know,

443
00:33:15,621 --> 00:33:19,141
building libraries of media and sharing to some degree. There

444
00:33:19,201 --> 00:33:22,802
are some media assets that we've shared with Raven, you know,

445
00:33:22,842 --> 00:33:25,743
working on Quake 4, and we've got some things we've shared

446
00:33:25,783 --> 00:33:31,505
with other licensees, and we are hoping that our next title will

447
00:33:31,525 --> 00:33:34,905
be able to reuse at least some of Doom's assets. So that's one

448
00:33:34,925 --> 00:33:37,586
of those things where that sort of gives us a constriction on

449
00:33:37,686 --> 00:33:41,567
our possible game designs there. It's going to be some

450
00:33:42,040 --> 00:33:47,703
near future, either present day or near future thing where we can reuse the fire extinguishers

451
00:33:47,763 --> 00:33:52,205
and waste baskets and some of those things like that in the game, which is another one

452
00:33:52,225 --> 00:33:56,127
of those kind of to some degree hamstrung by our own directions on there.

453
00:33:56,147 --> 00:34:02,789
Now, you know, we ‑‑ I still keep looking at things where there may be some possibilities

454
00:34:03,010 --> 00:34:06,591
of technical solutions to this, but I'm beginning to fear that ‑‑

455
00:34:08,035 --> 00:34:11,317
no matter what kinds of new technology I can bring in to help bring some of these things

456
00:34:11,377 --> 00:34:17,640
a little bit easier, that it's not actually going to help. That even if we get, say, some

457
00:34:17,680 --> 00:34:23,483
forms of real world data capture to go ahead and grab materials from real radiometric light

458
00:34:23,523 --> 00:34:29,566
values and doing some interesting things like that, that the next project is going to take

459
00:34:29,646 --> 00:34:35,289
yet more man hours per media element. And the decision that we wind up coming to is

460
00:34:35,329 --> 00:34:37,310
that the games are going to have to get

461
00:34:37,764 --> 00:34:41,366
less diverse to maintain an increase in quality on there.

462
00:34:42,126 --> 00:34:47,169
And that's always been something that I, even before it kind of reached critical levels

463
00:34:47,209 --> 00:34:52,032
like it is now, it always seemed clear to me that a lot of game designs where you have

464
00:34:52,572 --> 00:34:56,114
four completely different environments, you know, you want to have world one, world two,

465
00:34:56,154 --> 00:35:00,857
world three, world four, it always seemed to me like four times the work for, you know,

466
00:35:01,177 --> 00:35:05,519
one times the profit on there, that if you want to make a game, you know, pick a single

467
00:35:07,150 --> 00:35:14,154
and try and make that as lush as possible. But we've sort of got, especially like first‑person

468
00:35:14,174 --> 00:35:19,276
shooters sort of have an ANSI standard 30 levels to them or thereabouts. And that's

469
00:35:19,296 --> 00:35:26,279
a lot of acreage to just kind of fill out there. And I think that we're trying to learn

470
00:35:26,339 --> 00:35:31,942
some lessons from genres that people have been forced to, you know, for outside development

471
00:35:31,982 --> 00:35:34,163
reasons like cartridge console games.

472
00:35:35,150 --> 00:35:39,913
Ultra 64 is where you're limited by the total amount of cartridge ROM that you can have

473
00:35:39,993 --> 00:35:40,333
on there.

474
00:35:40,713 --> 00:35:42,414
You're forced for various reasons there.

475
00:35:42,454 --> 00:35:46,036
Even if you've got a hundred person development team, you can't create too much effort.

476
00:35:46,056 --> 00:35:48,837
So you change your game design styles based around that.

477
00:35:49,557 --> 00:35:54,760
And even in the kind of high end game development space where you may have large budgets, large

478
00:35:54,820 --> 00:36:00,742
teams, just to get things done in reasonable amounts of time, we're going to have to start

479
00:36:00,782 --> 00:36:02,663
making some of those decisions as well.

480
00:36:03,677 --> 00:36:08,678
Because it's easy to have kind of vast, expansive worlds if you're basically painting with a

481
00:36:08,718 --> 00:36:09,798
very broad brush.

482
00:36:10,338 --> 00:36:14,319
But now that we've given people the capability of going down and painting with extremely

483
00:36:14,399 --> 00:36:20,140
fine brushes on lots of different levels, it's ‑‑ it can take an arbitrary amount

484
00:36:20,180 --> 00:36:20,680
of time.

485
00:36:21,620 --> 00:36:27,121
And as we approach the level of fidelity that you can get with movies, the problem becomes,

486
00:36:27,141 --> 00:36:31,142
you know, almost insurmountable, where movie development right now

487
00:36:31,675 --> 00:36:36,898
will employ hundreds and hundreds of people building some of these issues, and these are

488
00:36:36,998 --> 00:36:42,241
sets. They have no backs. You can't just turn around at some scene in a movie and then go

489
00:36:42,281 --> 00:36:46,843
and like jump up onto a ledge and explore down the hallway, because that stuff hasn't

490
00:36:46,864 --> 00:36:52,186
even been created by those hundreds and hundreds of people. And when we can draw pictures that

491
00:36:52,206 --> 00:36:58,650
look just as good as what we're doing currently in movies today, people are going to expect

492
00:36:58,770 --> 00:37:00,591
sets built to that level of detail.

493
00:37:01,001 --> 00:37:06,243
but then they want their 30 levels of adventure there, or even worse when you go into large

494
00:37:06,303 --> 00:37:11,204
scale online games where you want to have a considerable size of a world there. And

495
00:37:11,244 --> 00:37:20,347
these are real problems. It's possible that there may be opportunities for kind of stock

496
00:37:20,427 --> 00:37:24,748
books of different data, and certainly this has been tried. There's a few companies that

497
00:37:25,148 --> 00:37:26,849
sell stock models for different things.

498
00:37:28,635 --> 00:37:33,559
with gaming, as long as we keep revving these technologies like this, the actual requirements

499
00:37:33,599 --> 00:37:38,863
for the media keep evolving, and that has kind of double edged problems there where

500
00:37:39,203 --> 00:37:43,407
on the one hand you have to keep retraining your own artists, and if you want to get something

501
00:37:43,447 --> 00:37:46,789
done fast, maybe you have to throw a whole lot of artists on it and you have a whole

502
00:37:46,830 --> 00:37:52,094
lot of people early on at the learning curve there. But if you want to get it done fast,

503
00:37:52,154 --> 00:37:56,137
you kind of throw ‑‑ you lose the benefits of, you know, of people ‑‑

504
00:37:57,046 --> 00:38:00,807
You want your learning curve to occupy a relatively small fraction of your development time.

505
00:38:01,468 --> 00:38:06,209
And if the learning curve is relatively short, you can go ahead and you spend several months

506
00:38:06,249 --> 00:38:08,810
learning and then two years developing or something.

507
00:38:09,230 --> 00:38:13,472
But as things get more and more complex, that takes longer for people to not necessarily

508
00:38:13,512 --> 00:38:18,554
like understand how it operates, but to kind of find their ‑‑ find the artistic groove

509
00:38:18,614 --> 00:38:20,915
on how they're going to use the technology effectively.

510
00:38:21,435 --> 00:38:25,416
And that could still wind up taking a good chunk of the entire project there.

511
00:38:27,052 --> 00:38:31,934
And the fact that it continues to change, that the skill set is necessary for a Quake

512
00:38:31,974 --> 00:38:37,536
generation game versus a Doom 3 generation game, means that you can't necessarily just

513
00:38:37,596 --> 00:38:42,378
have what the movie industry has is a huge pool of people where you can just go out and

514
00:38:42,438 --> 00:38:49,541
say we need 100 carpenters. We can't just go out and say we need 100 Doom 3 modelers

515
00:38:49,581 --> 00:38:54,143
or texture creators because the skill set isn't specifically there. It takes months

516
00:38:54,183 --> 00:38:55,943
to go ahead and build any level of that.

517
00:38:57,609 --> 00:39:01,993
And I have some hope that the next generation of rendering

518
00:39:02,053 --> 00:39:06,477
technology will be a more general purpose tool where it

519
00:39:06,537 --> 00:39:09,480
won't be the kind of notchy changes in features that we've

520
00:39:09,520 --> 00:39:15,405
seen up until now. And that's something that I do think is

521
00:39:15,445 --> 00:39:18,748
fairly important where previously all the generations

522
00:39:18,788 --> 00:39:20,529
of things that we've done, including Dune 3,

523
00:39:21,383 --> 00:39:27,525
are based on notchy sets of hardware features where, okay, we added cube maps or we added

524
00:39:27,585 --> 00:39:32,826
dot 3 blending or something like that. And the relationship between a game engine and

525
00:39:32,906 --> 00:39:37,608
an offline rendering tool, you know, for people that actually work with them, they're completely

526
00:39:37,668 --> 00:39:42,209
different things. There's some overlap in terms of what you wind up producing on the

527
00:39:42,289 --> 00:39:46,851
output, but they're just not approached the same way in a content creation or a capabilities

528
00:39:46,891 --> 00:39:47,291
fashion.

529
00:39:48,435 --> 00:39:54,879
But the next generation does look good for being something that will be more general

530
00:39:54,939 --> 00:39:55,419
purpose.

531
00:39:56,360 --> 00:39:59,922
It will be something where you can kind of program it as much as you want because we

532
00:39:59,942 --> 00:40:04,184
have our floating point pixel formats and we have our dependent texture reads and we've

533
00:40:04,204 --> 00:40:05,325
got longer programs.

534
00:40:05,365 --> 00:40:07,967
And effectively we can decompose anything we need into this.

535
00:40:08,327 --> 00:40:11,969
And the next level of technology will probably be taking advantage of this.

536
00:40:12,849 --> 00:40:17,092
This may mean that as we look five years from now.

537
00:40:17,601 --> 00:40:23,204
that the skill sets required for content creation do become more uniform across the industry

538
00:40:23,264 --> 00:40:26,366
and across the industry boundaries into the offline rendering world.

539
00:40:27,406 --> 00:40:32,329
And this will probably be a good thing in terms of, you know, allowing people to move

540
00:40:32,349 --> 00:40:38,172
to different projects more readily and allowing companies, if they choose, to bring on kind

541
00:40:38,212 --> 00:40:43,735
of waves of developers if necessary, where, you know, nowadays, especially, you know,

542
00:40:43,795 --> 00:40:43,895
it's

543
00:40:44,355 --> 00:40:49,457
throwing developers at a project that's behind schedule just very rarely is a good thing.

544
00:40:49,617 --> 00:40:53,098
You can bring on twice ‑‑ you can double your art staff and not actually get that much

545
00:40:53,178 --> 00:40:57,920
more done if you have to train them in doing brand new different things in ways that they

546
00:40:57,960 --> 00:41:05,142
haven't seen before. So being able to, you know, to leverage broader bases of, you know,

547
00:41:05,182 --> 00:41:10,084
people to work on there is good. And we will probably be seeing actual data sharing between,

548
00:41:11,989 --> 00:41:14,510
television motion picture rendering and what actually goes

549
00:41:14,610 --> 00:41:17,211
on in games. There's a little bit of that that can go on right

550
00:41:17,271 --> 00:41:20,732
now. Certainly things are stolen for cut scenes and all. But

551
00:41:20,752 --> 00:41:23,273
occasionally you'll still find some model that was used,

552
00:41:23,413 --> 00:41:27,034
scrunched up really small on a motion picture screen is

553
00:41:27,074 --> 00:41:29,235
actually something that can be rendered as part of a game right

554
00:41:29,295 --> 00:41:33,297
now. On the material side of things, that's going to be

555
00:41:33,337 --> 00:41:34,777
coming fairly

556
00:41:35,669 --> 00:41:40,210
fairly soon in terms of game development. Next generation technology should be able

557
00:41:40,230 --> 00:41:45,991
to go ahead and do most of the surface models that are used in rendering right now. The

558
00:41:46,011 --> 00:41:50,453
resolutions will come down just to fit reasonably on there, but it will still be a pretty direct

559
00:41:50,533 --> 00:41:55,734
path on there. It's a little less clear when the geometry is going to start using exactly

560
00:41:55,774 --> 00:41:59,475
the same kind of tools and techniques that they use there.

561
00:42:00,957 --> 00:42:06,001
You know, I've historically not been the biggest supporter of, you know, hardware curved surfaces

562
00:42:06,061 --> 00:42:07,142
for various reasons.

563
00:42:07,743 --> 00:42:12,426
You know, it hasn't fit in what I consider the best, you know, the best value for the

564
00:42:12,506 --> 00:42:13,327
effort on there.

565
00:42:14,188 --> 00:42:17,790
But that may also be coming in the relatively near future.

566
00:42:17,810 --> 00:42:22,134
And then you start using the same models to go ahead and first do your television show,

567
00:42:22,934 --> 00:42:25,797
have your weekly animation or whatever, and make your game out of it.

568
00:42:26,477 --> 00:42:27,878
But in some way,

569
00:42:28,321 --> 00:42:34,464
these types of strategic directions are, you know, it's not ‑‑ it's certainly not

570
00:42:34,525 --> 00:42:39,047
what game development used to be about. I mean, now we're talking like a Hollywood studio

571
00:42:39,107 --> 00:42:43,249
about being able to manage, you know, huge numbers of people to be able to cross promote

572
00:42:43,289 --> 00:42:48,793
over different product lines. And there's definitely, you know, an aspect where I can

573
00:42:48,833 --> 00:42:50,153
look back wistfully at the ‑‑

574
00:42:50,686 --> 00:42:54,149
the early game development where you just got some people together that wanted to make

575
00:42:54,189 --> 00:42:58,212
a really fun game, built something that was cool and people played it and had fun.

576
00:42:58,232 --> 00:43:07,120
I do still hope that there are people out here that are going to be following that path

577
00:43:07,160 --> 00:43:09,663
that can still bring the kind of new elements in.

578
00:43:09,683 --> 00:43:13,526
I don't think that it's a closed off completely industry.

579
00:43:13,586 --> 00:43:17,189
I do think that innovative and really exciting new things.

580
00:43:18,359 --> 00:43:24,484
do have a place and can still be successful. That's something that, you know, I know that

581
00:43:24,844 --> 00:43:30,128
my position isn't something that's really shared by too many people here. But the, you

582
00:43:30,808 --> 00:43:34,671
know, when I hear developers moaning and complaining about different things about whether they

583
00:43:34,691 --> 00:43:40,575
can't get a publisher or getting contracts for different things, I very rarely comment

584
00:43:40,615 --> 00:43:45,919
on those situations because, you know, my position is somewhat unique with regard to

585
00:43:45,959 --> 00:43:47,260
all of that. But...

586
00:43:48,279 --> 00:43:53,142
You know, I do think that there's still exciting things that can be done on the small level.

587
00:43:53,983 --> 00:43:58,886
And there will be things that won't be coming from id software because in those ways we

588
00:43:59,046 --> 00:44:01,508
are kind of a prisoner of our own success there.

589
00:44:02,008 --> 00:44:07,031
We have our way of doing things and it will continue to grow the company larger, to do

590
00:44:07,091 --> 00:44:11,314
larger and larger projects, you know, to go ahead and cross license and cross promote

591
00:44:11,374 --> 00:44:11,915
and all that.

592
00:44:12,155 --> 00:44:15,797
And that's, you know, that's sort of our lot in life there.

593
00:44:16,241 --> 00:44:21,883
There are going to be exciting things yet to come on the large scale, but I do still

594
00:44:22,004 --> 00:44:28,526
hope that there will be a place for that programmer artist combination to go off and do something

595
00:44:28,546 --> 00:44:29,987
really kind of interesting.

596
00:44:30,007 --> 00:44:34,609
Because the capabilities that we're getting, on the one hand it sucks up more and more

597
00:44:34,649 --> 00:44:40,472
resources, but on the other hand, it does give raw capabilities to smaller and smaller

598
00:44:40,532 --> 00:44:41,312
numbers of people.

599
00:44:41,792 --> 00:44:43,873
When we look at the graphics rendering capabilities...

600
00:44:44,963 --> 00:44:49,845
that we've got right now that are coming out soon, you can put what would have been ‑‑

601
00:44:50,806 --> 00:44:54,788
as soon as the technology matures a little bit with the current generation of cards for

602
00:44:54,828 --> 00:44:59,330
doing sophisticated offline rendering with the current hardware accelerated floating

603
00:44:59,350 --> 00:45:05,733
point pixel format stuff, you will have a render farm in a person's desktop computer.

604
00:45:06,433 --> 00:45:10,275
And the capabilities that that will give people is pretty exciting when you start thinking

605
00:45:10,315 --> 00:45:10,555
about it.

606
00:45:10,885 --> 00:45:15,028
Well, one artistic vision could now go ahead and do something that previously would only

607
00:45:15,048 --> 00:45:19,011
have been possible to render if you had a Pixar‑sized render farm.

608
00:45:19,531 --> 00:45:23,534
If you wanted to take ‑‑ if you wanted to do a 60‑second short or something, if

609
00:45:23,794 --> 00:45:28,458
it took you four and a half hours per frame, you just don't get too many cycles through

610
00:45:29,018 --> 00:45:34,462
the creative process on there. But, you know, it's not long at all until

611
00:45:34,482 --> 00:45:38,545
we have, if not real‑time rendering like we expect in the game engine.

612
00:45:38,937 --> 00:45:44,359
very, very fast hardware accelerated rendering of things like that. And I think that's going

613
00:45:44,379 --> 00:45:49,341
to be an interesting kind of artistic outlet. And that's always been one of my major kind

614
00:45:49,381 --> 00:45:55,044
of motivations and rewards on there is kind of seeing what I do as a canvas that the artists

615
00:45:55,104 --> 00:46:00,146
and the creative people actually work on. And each generation of game rendering technology

616
00:46:00,226 --> 00:46:04,688
and the game interactions and just all the things that make up the game engine, I am

617
00:46:05,302 --> 00:46:09,823
The best moments for me have been when I look in someone's office and see something really

618
00:46:09,923 --> 00:46:13,884
wonderfully cool that they couldn't possibly have done before that's now possible.

619
00:46:14,864 --> 00:46:17,224
And that is not slowing down at all.

620
00:46:17,904 --> 00:46:23,466
This generation will see kind of cinematic director's visions of things that you couldn't

621
00:46:23,506 --> 00:46:28,727
do before, where in previous games you would have some things that had sort of a director's

622
00:46:28,787 --> 00:46:30,047
style to it that would have

623
00:46:30,387 --> 00:46:35,071
some interesting things with camera angles and so on. And the way you could crop scenes

624
00:46:35,131 --> 00:46:41,716
and set them up. But you really couldn't apply the tools and craft of a director or a real

625
00:46:41,776 --> 00:46:47,281
set layout person. But with the current generation of technology, if you look through like a

626
00:46:47,321 --> 00:46:51,085
book on film lighting, just every tool that they've got there, everything that they do

627
00:46:51,165 --> 00:46:56,389
with barn doors and cookies and shutters and how you go ahead and do key lights and fill

628
00:46:56,429 --> 00:46:58,371
that stuff comes out directly now.

629
00:46:59,133 --> 00:47:03,935
And over the course of a few years, as people get to experience, experiment with that and

630
00:47:03,975 --> 00:47:09,696
kind of find their personal style with it, that's going to be very exciting to see.

631
00:47:10,577 --> 00:47:15,418
And the next generation will take that to the level of surface quality rendering that

632
00:47:15,558 --> 00:47:20,600
is movie quality on there, especially if people are willing to sacrifice a little bit of frame

633
00:47:20,620 --> 00:47:22,721
rate or do things in a not quite realtime frame rate, but if they want to generate really

634
00:47:22,741 --> 00:47:23,141
fabulous images.

635
00:47:23,201 --> 00:47:24,301
It's something that is going to be very exciting.

636
00:47:24,321 --> 00:47:25,102
So, thank you for letting me do that.

637
00:47:25,122 --> 00:47:25,562
I'll see you next time.

638
00:47:25,582 --> 00:47:25,682
Bye.

639
00:47:25,702 --> 00:47:25,762
Bye.

640
00:47:25,782 --> 00:47:25,842
Bye.

641
00:47:25,862 --> 00:47:25,922
Bye.

642
00:47:25,962 --> 00:47:26,042
Bye.

643
00:47:26,062 --> 00:47:26,122
Bye.

644
00:47:26,142 --> 00:47:26,242
Bye.

645
00:47:26,282 --> 00:47:26,342
Bye.

646
00:47:26,382 --> 00:47:26,442
Bye.

647
00:47:26,462 --> 00:47:26,522
Bye.

648
00:47:26,542 --> 00:47:26,602
Bye.

649
00:47:26,622 --> 00:47:26,702
Bye.

650
00:47:26,722 --> 00:47:26,782
Bye.

651
00:47:26,802 --> 00:47:26,862
Bye.

652
00:47:26,882 --> 00:47:26,942
Bye.

653
00:47:27,022 --> 00:47:27,162
Bye.

654
00:47:27,222 --> 00:47:27,342
Bye.

655
00:47:27,362 --> 00:47:27,443
Bye.

656
00:47:27,463 --> 00:47:27,543
Bye.

657
00:47:27,563 --> 00:47:27,703
Bye.

658
00:47:27,763 --> 00:47:27,943
Bye.

659
00:47:27,963 --> 00:47:28,063
Bye.

660
00:47:28,083 --> 00:47:28,143
Bye.

661
00:47:28,163 --> 00:47:28,243
Bye.

662
00:47:28,263 --> 00:47:28,323
Bye.

663
00:47:28,871 --> 00:47:33,012
I ‑‑ you know, it's a canvas and paintbrush set, really the likes of which no one's ever

664
00:47:33,072 --> 00:47:36,793
seen before, and that's going to be, you know, really something to watch.

665
00:47:37,614 --> 00:47:42,635
So the next ‑‑ I've got a pretty clear idea of where things are going for the next

666
00:47:42,715 --> 00:47:43,455
five years.

667
00:47:43,816 --> 00:47:48,197
Things are, you know, kind of ‑‑ there's a path out there and there's a lot of inertia

668
00:47:48,397 --> 00:47:54,839
kind of covering what things evolve in the electronics industry, but I would not hazard

669
00:47:55,039 --> 00:47:57,400
to guess too much about what things are going to look like.

670
00:47:57,850 --> 00:48:05,777
five years past that. If you go back again to the very, very early days, working on my

671
00:48:05,837 --> 00:48:11,323
Apple IIc or something, and somebody said, okay, a million times more power, I wouldn't

672
00:48:11,363 --> 00:48:16,167
have had the visions of bump mapping and stencil shadows and all that. I would have been happy

673
00:48:16,187 --> 00:48:17,929
to be rendering Tron in a video game.

674
00:48:19,540 --> 00:48:24,083
So we look at it today and we can say, well, we want to have characters that look like

675
00:48:24,143 --> 00:48:24,883
Lord of the Rings.

676
00:48:26,064 --> 00:48:28,425
We want to have that moving around in a game.

677
00:48:29,426 --> 00:48:31,147
And we'll get that.

678
00:48:31,307 --> 00:48:35,169
I have no doubt whatsoever that we'll be seeing that.

679
00:48:35,810 --> 00:48:41,253
But there may be other things that are just more ‑‑ that may be even more important.

680
00:48:41,293 --> 00:48:43,974
Like what we see in terms of online communications and everything.

681
00:48:44,014 --> 00:48:44,555
The fact that ‑‑

682
00:48:44,948 --> 00:48:48,448
while bandwidth and latency haven't improved all that much, the number of players that

683
00:48:48,488 --> 00:48:53,589
you have access to has improved by, you know, that factor of a million. You've gone from

684
00:48:54,150 --> 00:48:58,130
playing with your brother or something to having the whole world of online gamers open

685
00:48:58,170 --> 00:49:02,911
to you. And there may be, you know, aspects like that that turn out to be far more important

686
00:49:02,971 --> 00:49:09,072
to where games go than the actual raw audiovisual technologies. So I think we're just about

687
00:49:09,112 --> 00:49:11,953
out of time here. So I do have ten minutes left to take questions.

688
00:49:17,143 --> 00:49:23,725
if you have questions, and I will come over to you and you will ask the question. Yes.

689
00:49:29,206 --> 00:49:33,988
John, what are your expectations from the next generation of the consoles versus the

690
00:49:34,048 --> 00:49:38,549
PC capabilities? What are you expecting from the PlayStation 3 and from the Xbox 2?

691
00:49:39,989 --> 00:49:42,690
Okay. Console games. You know, I'm not

692
00:49:44,042 --> 00:49:46,784
I'm not intimately involved in most of the console development.

693
00:49:49,025 --> 00:49:51,667
It's not a business model that I like all that much.

694
00:49:51,687 --> 00:49:55,650
You know, I don't make a point to go out and get disclosed really early on it.

695
00:49:56,271 --> 00:50:01,775
I would say that I'm a little bit bothered by the next generation push towards, again,

696
00:50:01,795 --> 00:50:05,798
multiple processors, which I thought most people would have learned the lessons from

697
00:50:05,818 --> 00:50:07,279
the previous generation where

698
00:50:07,686 --> 00:50:11,027
If you take a console that has one fast processor, one fast

699
00:50:11,067 --> 00:50:13,647
graphics accelerator, everybody loves to work on it.

700
00:50:13,707 --> 00:50:14,708
It's nice to program.

701
00:50:14,768 --> 00:50:18,349
If you take a console that has multiple processors that add up

702
00:50:18,389 --> 00:50:22,690
to some wonderful figure of power, it rarely gets utilized

703
00:50:22,710 --> 00:50:25,650
as much, and it hinders development time.

704
00:50:25,710 --> 00:50:28,731
And I'm a little bit surprised that that's kind of come back

705
00:50:28,831 --> 00:50:31,972
as another development strategy for that.

706
00:50:37,833 --> 00:50:42,897
Since you see team sizes and costs in video game development rising, do you ever think

707
00:50:42,937 --> 00:50:47,621
they'll reach a critical mass where the industry can no longer support teams of that sizes

708
00:50:47,661 --> 00:50:48,982
and production costs that high?

709
00:50:50,884 --> 00:50:54,707
I don't really see a specific end in sight right now.

710
00:50:55,728 --> 00:51:03,174
I do expect that the major top flight titles will be increasing in budget, and there will

711
00:51:03,194 --> 00:51:06,737
probably be more attempt to go ahead and directly tie with movies to get more in.

712
00:51:07,938 --> 00:51:15,462
more kind of return for the investment there. But if we looked, again, five years into the

713
00:51:15,502 --> 00:51:21,925
future, I would not be shocked to see $100 million game development budgets looking that

714
00:51:21,985 --> 00:51:27,168
high there. And I do think that's a problem that we should be concerned about, but I'm

715
00:51:27,208 --> 00:51:32,290
sort of at a loss as to, you know, what to do about it, because if we're given this capability

716
00:51:32,550 --> 00:51:33,771
and you have the choice of either

717
00:51:35,540 --> 00:51:38,241
exploit the capability as much as you possibly can because your

718
00:51:38,261 --> 00:51:41,641
competitors are doing it. That's going to require more and more

719
00:51:42,282 --> 00:51:46,462
media resources. And it's a serious issue.

720
00:51:46,482 --> 00:51:46,562
Yeah.

721
00:51:51,343 --> 00:51:54,224
So it actually relates to the comfortable thing. I mean, I

722
00:51:54,264 --> 00:51:55,944
think everyone would agree with you that it's way easier to

723
00:51:55,984 --> 00:51:58,384
program for a fast CPU and a graphics card. But, hey, they

724
00:51:58,404 --> 00:52:01,705
didn't pay attention. So given that the next consoles are all

725
00:52:01,745 --> 00:52:03,785
multiprocessing, how would you architect?

726
00:52:04,515 --> 00:52:07,316
in broad strokes obviously an engine to work on that.

727
00:52:07,916 --> 00:52:08,676
Since it's a pain.

728
00:52:09,276 --> 00:52:12,638
Well, the most straightforward thing is to go ahead and try to

729
00:52:12,698 --> 00:52:16,119
find ‑‑ it's hardest when you've got a small granular

730
00:52:16,159 --> 00:52:19,260
number of processors. I mean, talking two to four processors

731
00:52:19,660 --> 00:52:22,561
is something that makes it really difficult to split

732
00:52:22,601 --> 00:52:25,142
things up. Because you could go ahead and say, all right, let's

733
00:52:25,442 --> 00:52:28,624
amp up the audio and use fully one processor to just make

734
00:52:28,744 --> 00:52:31,585
audio done. That's not a bad thing to go ahead and do there.

735
00:52:32,119 --> 00:52:35,802
When you want to try and really accelerate, say, rendering there, you're going to pick ‑‑

736
00:52:36,962 --> 00:52:42,326
there's no really optimal way to split rendering over two or three processors. We split into

737
00:52:42,366 --> 00:52:47,169
a front end, back end where you do kind of like CPU‑based things, all the animation

738
00:52:47,189 --> 00:52:51,772
and deformation separated from the actual rendering. And that can get you kind of sort

739
00:52:51,812 --> 00:52:56,155
of to a 50% split. But when you start looking at numbers, like if you want to split four

740
00:52:56,215 --> 00:52:59,117
processors across graphics, it turns out that ‑‑

741
00:52:59,558 --> 00:53:04,821
just about the best way to do that is to section the screen. And you get some benefit from

742
00:53:04,881 --> 00:53:10,864
that, but it's not a 4X improvement over there. You can also like try to ‑‑ if you're

743
00:53:10,884 --> 00:53:14,727
running at very high frame rates, you can pipeline full frames, which is a pretty good

744
00:53:14,767 --> 00:53:19,930
thing. So that's an interesting possibility where if you want to go ahead and use kind

745
00:53:19,970 --> 00:53:24,752
of sub sampled aspects in there with ‑‑ if you want to do your soft shadowing, your

746
00:53:24,792 --> 00:53:25,353
motion blur.

747
00:53:25,778 --> 00:53:30,421
your order independent translucencies, all the analytically intractable things by rendering

748
00:53:30,481 --> 00:53:34,764
many more frames than your frame rate and doing a final compositing pass on there.

749
00:53:35,144 --> 00:53:38,987
That would be a reasonably good way to try and use four processors for something.

750
00:53:39,467 --> 00:53:44,570
But it becomes much worse than when you've got four CPUs and a single graphics resource

751
00:53:44,630 --> 00:53:46,832
where you wind up queuing up all of those things.

752
00:53:46,872 --> 00:53:51,375
And I'm not thrilled with those directions.

753
00:53:51,535 --> 00:53:52,195
And I think that we've

754
00:53:52,627 --> 00:53:55,207
We've got several generations showing that this was just not

755
00:53:55,247 --> 00:53:57,728
a great thing, which is why I'm, again, kind of surprised

756
00:53:57,808 --> 00:53:59,869
that it's in vogue again.

757
00:53:59,889 --> 00:54:02,890
More questions?

758
00:54:07,452 --> 00:54:09,872
Given what you said about the future of game development

759
00:54:09,992 --> 00:54:11,533
and the interest that universities

760
00:54:11,573 --> 00:54:13,814
seem to be having in game development

761
00:54:14,994 --> 00:54:17,635
as a new discipline, how would you

762
00:54:17,675 --> 00:54:22,437
like to see the education of future game developers proceed?

763
00:54:24,912 --> 00:54:32,135
I've always been a little bit skeptical about, you know, game development courses at universities,

764
00:54:33,256 --> 00:54:37,318
largely because the field has been so dynamic where it's difficult to make a curriculum

765
00:54:37,358 --> 00:54:43,161
for something that's changing this rapidly. I can't say I've done any detailed surveys

766
00:54:43,621 --> 00:54:49,064
of the teams doing this, but it is difficult to, you know, if somebody went through a four

767
00:54:49,104 --> 00:54:54,567
year university program and they had a syllabus for game development on there that was made

768
00:54:55,955 --> 00:54:58,517
it could have been made at the time we were doing Wolfenstein.

769
00:54:59,578 --> 00:55:03,621
Somebody makes a syllabus, runs one generation of students through it, comes back, and it's

770
00:55:03,661 --> 00:55:06,924
just to the point of being almost not relevant on there.

771
00:55:09,126 --> 00:55:13,449
Probably you get more from ‑‑ there's valid stuff to be done in the current computer

772
00:55:13,469 --> 00:55:14,410
science curriculums.

773
00:55:14,550 --> 00:55:19,594
Graphics research now is directly relevant to the game design side of things, or to the

774
00:55:19,614 --> 00:55:21,315
game engine side of things.

775
00:55:22,076 --> 00:55:24,138
There are probably kind of ‑‑

776
00:55:24,962 --> 00:55:31,626
meta courses that are useful in terms of game design and development, but those are the

777
00:55:31,666 --> 00:55:37,909
kind of, you know, soft academic things that I'm always a little bit leery of and I'm hesitant

778
00:55:38,329 --> 00:55:44,112
to place a lot of value on somebody that's gone and gotten a degree in game design versus

779
00:55:44,172 --> 00:55:49,035
someone that personally as a person hiring people at a company, what you've actually

780
00:55:49,095 --> 00:55:51,876
done is far more important to me than what you've been taught.

781
00:55:54,899 --> 00:55:59,562
As we go on, again, maybe in this following generation where things do stabilize a little

782
00:55:59,582 --> 00:56:04,546
bit more in terms of general tool, there may be a little bit more opportunity for it to

783
00:56:04,586 --> 00:56:06,868
be kind of codified into a syllabus there.

784
00:56:07,428 --> 00:56:13,653
But at this point, I am ‑‑ well, I guess it's kind of like breaking in a new graphics

785
00:56:13,693 --> 00:56:17,956
technology where the first generation isn't necessarily so much to actually be used.

786
00:56:18,016 --> 00:56:21,259
It's sort of kind of bootstrap the process where you eventually move into something that

787
00:56:21,299 --> 00:56:22,780
really is valuable later on.

788
00:56:24,451 --> 00:56:27,693
going to be a little bit of a tough situation there, but it will eventually kind of work

789
00:56:27,733 --> 00:56:28,314
itself out.

790
00:56:34,418 --> 00:56:37,660
I was intrigued by your statement that there are still exciting things that can be done

791
00:56:37,720 --> 00:56:38,601
on a small scale.

792
00:56:38,661 --> 00:56:40,202
Can you elaborate on that a little bit?

793
00:56:41,903 --> 00:56:47,407
Well that's kind of one of the things where if I could say exactly what they were, I'd

794
00:56:47,447 --> 00:56:49,349
probably just go have some people go do that.

795
00:56:52,126 --> 00:56:56,708
You know, I just don't want to fall into the trap of kind of the hubris of thinking that

796
00:56:56,968 --> 00:57:00,669
what we're doing is the be all, end all of the development.

797
00:57:00,709 --> 00:57:06,251
And I certainly hope that there is the equivalent of, you know, a microcomputer revolution that

798
00:57:06,311 --> 00:57:09,872
has all of us that are going to be, you know, we're the establishment.

799
00:57:09,892 --> 00:57:14,774
You know, we're the big corporate developers effectively, which is weird for, you know,

800
00:57:15,114 --> 00:57:19,475
for it, a company start, like many game companies effectively started in a back room.

801
00:57:20,015 --> 00:57:21,376
But I'm ‑‑

802
00:57:22,627 --> 00:57:26,330
You know, I think that there's a degree of blindness to the possibilities when you're

803
00:57:26,350 --> 00:57:30,313
immersed in something that you do kind of for a living all the time there.

804
00:57:31,394 --> 00:57:35,597
And yes, I suppose there's a remote possibility that there's really not anything clever and

805
00:57:35,637 --> 00:57:40,982
innovative to be done on the small scale, but I'm not willing to take that as gospel

806
00:57:41,042 --> 00:57:41,562
right now.

807
00:57:42,003 --> 00:57:46,646
And I definitely encourage people to continue looking at the small things.

808
00:57:47,169 --> 00:57:50,972
the small game development things, and actually some of the new markets that people have found.

809
00:57:51,072 --> 00:57:57,377
It's great to see some people doing reasonably well on things like downloadable games. It's

810
00:57:57,417 --> 00:58:00,900
interesting that the numbers that some people are doing there are better than the numbers

811
00:58:00,940 --> 00:58:05,263
that id Software was doing as a shareware developer in our early time that bootstrapped

812
00:58:05,303 --> 00:58:10,607
the rest of our development. So that's a hopeful sign. There are people there that are in exactly

813
00:58:10,668 --> 00:58:14,110
analogous situations to what id Software was 12 years ago.

814
00:58:14,513 --> 00:58:18,896
in terms of the scope of the projects, the funding, and the rewards for the development

815
00:58:18,936 --> 00:58:24,080
there. So I think there's probably a pretty damn good chance that there may be some of

816
00:58:24,120 --> 00:58:29,543
those that can follow a similar kind of curve of growth and expansion into what they can

817
00:58:29,583 --> 00:58:29,804
do.

818
00:58:29,824 --> 00:58:32,305
Question?

819
00:58:32,325 --> 00:58:40,471
I'm curious as to your opinions and or predictions for the future of games as art as opposed

820
00:58:40,491 --> 00:58:41,792
to just simply entertainment.

821
00:58:42,653 --> 00:58:43,293
Could you say that again?

822
00:58:44,816 --> 00:58:50,461
I'm curious as to your opinions and or predictions for the future of gaming as art as opposed

823
00:58:50,481 --> 00:58:51,522
to just entertainment.

824
00:58:52,322 --> 00:58:52,703
Okay.

825
00:58:53,263 --> 00:58:58,207
I do have a pretty direct opinion on this in that I don't look at what I do as art.

826
00:58:58,788 --> 00:59:03,151
I am making a product for people and my job is to give them something entertaining.

827
00:59:03,432 --> 00:59:09,677
It may be a self‑selected group that thinks more similarly to what I do, but I don't think

828
00:59:09,737 --> 00:59:12,940
that looking at it as art is a particularly ‑‑

829
00:59:13,842 --> 00:59:19,285
positive direction to go at. And again, it comes back to what I was saying about how

830
00:59:19,646 --> 00:59:25,769
you can do quality and you can do value. And if you want to be a successful company, you

831
00:59:25,789 --> 00:59:30,872
want to focus on value. Because you can do something that may be extremely artistic,

832
00:59:30,973 --> 00:59:37,536
that may be the work of a master craftsman and is extremely high quality, but if it's

833
00:59:37,576 --> 00:59:41,799
not providing value to the people that are actually going to buy the game, I am

834
00:59:42,469 --> 00:59:47,013
it's not the best thing to actually be working on. And there's certainly a place for art,

835
00:59:47,313 --> 00:59:53,839
just as there is in any media, but I don't think it's correct to look for, expect or

836
00:59:53,899 --> 00:59:59,644
even try to make something that's expected to be a mainstream AAA title a work of art.

837
01:00:00,024 --> 01:00:03,247
I think it's kind of following the wrong path there.

838
01:00:15,831 --> 01:00:19,855
You mentioned after you ship Doom 3 you're going to do a quicker rev, just polish up

839
01:00:19,895 --> 01:00:22,137
the graphics a little bit and push another title out.

840
01:00:23,538 --> 01:00:27,922
Where do you see Armadillo's X Prize relative to that second rev?

841
01:00:27,942 --> 01:00:29,003
Which one is going to come first?

842
01:00:30,084 --> 01:00:32,447
Say again, didn't catch that.

843
01:00:32,607 --> 01:00:37,952
Your second game, right after Doom 3, the little quick rev, and Armadillo's X Prize,

844
01:00:37,972 --> 01:00:38,993
which one is going to ship first?

845
01:00:40,058 --> 01:00:42,419
Okay. Yeah, well, I could talk for another hour about all the

846
01:00:42,459 --> 01:00:45,540
rocketry and aerospace stuff, but we're hot firing the

847
01:00:45,560 --> 01:00:48,401
vehicle, all four engines on Saturday. If that goes well,

848
01:00:48,441 --> 01:00:53,103
we're lifting off on a test flight the week after that. If

849
01:00:53,143 --> 01:00:56,864
things continue to go well over the next year or so, we'll be

850
01:00:56,884 --> 01:01:01,246
flying big vehicles very high with people on them, and

851
01:01:02,126 --> 01:01:03,986
eventually heading off horizontally for orbit.

852
01:01:12,747 --> 01:01:16,571
All right, thank you very much.

