1
00:00:04,837 --> 00:00:06,117
effects for stylized games.

2
00:00:08,778 --> 00:00:13,900
The format is micro talks, so there are about 11 minutes each, there will be four speakers,

3
00:00:14,240 --> 00:00:15,661
hopefully time at the end for questions.

4
00:00:16,941 --> 00:00:22,223
The idea is that there's four completely different projects from different companies, all with

5
00:00:22,263 --> 00:00:28,085
different visual styles and goals, and hopefully I'll come away with different approaches to

6
00:00:28,405 --> 00:00:29,166
stylized effects.

7
00:00:30,726 --> 00:00:31,867
So why are we here?

8
00:00:34,007 --> 00:00:38,110
A lot of times effects teams for games can be short-staffed and you've got a lot of work

9
00:00:38,150 --> 00:00:45,635
to do, so you're often left to do a lot of the art direction on your own, and you don't

10
00:00:45,755 --> 00:00:49,177
usually get a lot of concept art and iteration in that way for effects.

11
00:00:53,056 --> 00:00:58,198
So, games with a more realistic style often is a lot clearer to understand where you're

12
00:00:58,218 --> 00:00:58,898
supposed to get to.

13
00:00:59,858 --> 00:01:06,040
With unique art styles, it's a little bit harder to find the path to the final result.

14
00:01:08,561 --> 00:01:13,842
So we've got myself, Jeremy Mitchell from Double Fine, Shin from Motiga, Bill Kladis

15
00:01:13,862 --> 00:01:16,303
from Epic, and Brianna from Volition.

16
00:01:17,863 --> 00:01:18,543
So me.

17
00:01:19,668 --> 00:01:20,509
My name is Jeremy Mitchell.

18
00:01:20,629 --> 00:01:22,410
I'm a senior VFX artist at Double Fine.

19
00:01:22,430 --> 00:01:25,033
I've been making games for 10 years or so.

20
00:01:25,774 --> 00:01:26,995
Here's some games I worked on.

21
00:01:27,015 --> 00:01:30,618
And today I'm gonna talk about Headlander,

22
00:01:31,319 --> 00:01:34,061
which is a side-scrolling action game from Double Fine.

23
00:01:35,343 --> 00:01:36,764
And just so you know what it's about,

24
00:01:36,824 --> 00:01:38,886
I'll play this little clip from a trailer.

25
00:01:39,667 --> 00:01:41,368
It's not a whole trailer, just a short clip.

26
00:01:44,685 --> 00:01:48,227
Just been revived, but they're just ahead.

27
00:01:48,767 --> 00:01:51,988
Living in a helmet that is a scientific miracle.

28
00:01:52,729 --> 00:01:56,130
With this helmet, our hero can thrust through the air,

29
00:01:57,331 --> 00:01:59,252
remove those pesky heads,

30
00:02:00,412 --> 00:02:03,894
and duck into their neck holes and take the wheel.

31
00:02:04,014 --> 00:02:05,235
Headlander!

32
00:02:05,335 --> 00:02:10,177
Yeah, that's good. Okay.

33
00:02:11,686 --> 00:02:13,808
So, as you can tell, Headlander has a pretty unique

34
00:02:13,868 --> 00:02:16,410
visual style, it's based heavily on themes

35
00:02:16,470 --> 00:02:18,051
from 70s sci-fi movies.

36
00:02:19,052 --> 00:02:20,954
So, the goal of the game was to capture

37
00:02:20,994 --> 00:02:22,135
the look and feel of these movies.

38
00:02:23,115 --> 00:02:25,297
So, the point of this short talk is about

39
00:02:25,958 --> 00:02:27,619
my approach and thought process

40
00:02:27,859 --> 00:02:29,721
when trying to do effects for this game.

41
00:02:31,182 --> 00:02:33,624
So, since we wanted to look like they were plucked

42
00:02:33,644 --> 00:02:35,265
straight out of a 70s sci-fi film,

43
00:02:35,585 --> 00:02:37,267
we looked at a bunch of classic films,

44
00:02:37,927 --> 00:02:38,668
like the ones you see here.

45
00:02:39,574 --> 00:02:41,115
to reference themes and ideas

46
00:02:41,155 --> 00:02:42,737
for just the overall design of the game.

47
00:02:43,177 --> 00:02:46,720
And for environment art and the general art in the game,

48
00:02:47,220 --> 00:02:48,682
it was pretty clear that you'd use

49
00:02:49,442 --> 00:02:52,645
70s sci-fi sort of design inspiration,

50
00:02:52,765 --> 00:02:54,046
but for effects it was a little harder

51
00:02:54,066 --> 00:02:55,387
to tell exactly where we should go.

52
00:02:57,689 --> 00:02:58,510
So when I was watching these,

53
00:02:58,550 --> 00:03:01,352
I noticed a few key points about effects in these films.

54
00:03:02,193 --> 00:03:04,955
The first is that there's two types of

55
00:03:06,688 --> 00:03:08,350
sort of styles for VFX.

56
00:03:09,091 --> 00:03:12,254
The first is sort of standard Hollywood practical effects.

57
00:03:12,394 --> 00:03:13,635
These are things that are shot on set,

58
00:03:14,596 --> 00:03:16,998
filmed with real lighting in the real world.

59
00:03:18,219 --> 00:03:21,663
And there are generally 2D hand animated.

60
00:03:22,617 --> 00:03:26,078
rotoscope effects that are done through film process after the fact.

61
00:03:26,838 --> 00:03:30,739
And these generally tend to sit on top of the frame and not integrated well with the

62
00:03:30,780 --> 00:03:31,180
background.

63
00:03:31,840 --> 00:03:33,681
And there are a few artifacts that give this away.

64
00:03:34,761 --> 00:03:41,923
So you can see here, this shot from 1979's Black Hole, these laser hits, not integrated

65
00:03:41,943 --> 00:03:42,704
with the background at all.

66
00:03:42,724 --> 00:03:47,045
You can see these little sparks that come off of them, they're clearly hand animated.

67
00:03:47,577 --> 00:03:49,619
But then there's these blue flashes that are definitely

68
00:03:50,940 --> 00:03:52,181
shot on set, practically.

69
00:03:53,042 --> 00:03:55,705
So the things that give it away are like a lower frame rate,

70
00:03:55,725 --> 00:03:57,606
the lack of.

71
00:03:58,294 --> 00:03:59,614
lighting influence on the environment,

72
00:03:59,835 --> 00:04:03,297
and often the hand animated effects will drift

73
00:04:03,517 --> 00:04:05,338
or stick to the camera in strange ways,

74
00:04:06,639 --> 00:04:09,581
which is an interesting point for a 2D side-scroller game

75
00:04:09,621 --> 00:04:12,003
where you kind of want the gameplay-centric effects

76
00:04:12,083 --> 00:04:14,884
to be separated from the background.

77
00:04:15,125 --> 00:04:18,487
So the idea was to extract these sort of artifacts

78
00:04:18,727 --> 00:04:20,828
and wield them for stylistic direction.

79
00:04:24,009 --> 00:04:26,631
So this was sort of a loose rule set going forward

80
00:04:26,651 --> 00:04:29,173
is that any effects that would be real world,

81
00:04:29,914 --> 00:04:32,596
if it were a film, would just be done with traditional

82
00:04:32,616 --> 00:04:34,477
like fluid sims and textures and all that,

83
00:04:35,078 --> 00:04:35,818
nothing unique there.

84
00:04:36,739 --> 00:04:38,360
But to keep the film metaphor alive,

85
00:04:38,400 --> 00:04:40,982
anything that would have been done in post

86
00:04:41,123 --> 00:04:44,785
with sort of a chemical process or hand animation,

87
00:04:45,306 --> 00:04:47,668
I would try to play up the cheap 2D effect

88
00:04:48,829 --> 00:04:50,770
to capture some of that vintage artifacts.

89
00:04:52,144 --> 00:04:56,906
So I'm not really going to talk about explosions or any of the traditional VFX stuff because that's

90
00:04:58,027 --> 00:05:03,130
Well trodden ground, but I'll move on to something more exciting in my opinion, which is bad animation

91
00:05:04,871 --> 00:05:07,833
So when I first got started I did a handful of like

92
00:05:08,653 --> 00:05:09,814
somewhat detailed like

93
00:05:10,454 --> 00:05:11,375
hand-drawn animations

94
00:05:12,295 --> 00:05:15,777
The problem with this is I'm not an animator. This is probably the best stuff I've ever done

95
00:05:15,797 --> 00:05:16,138
so I

96
00:05:20,889 --> 00:05:22,930
It was kind of an uphill battle and I didn't think

97
00:05:23,110 --> 00:05:26,733
that I would be able to do hand animated assets

98
00:05:26,773 --> 00:05:28,294
for the entire game for every effect.

99
00:05:29,175 --> 00:05:31,156
But I liked the look of it so I wanted to figure out

100
00:05:31,176 --> 00:05:34,859
some kind of solution to get to that point faster.

101
00:05:34,879 --> 00:05:40,844
Here's a few more examples of it.

102
00:05:43,866 --> 00:05:45,347
So when I was looking up reference for this stuff

103
00:05:45,587 --> 00:05:47,629
I found this video from 1983.

104
00:05:47,729 --> 00:05:47,989
It was a...

105
00:05:50,541 --> 00:05:52,882
the making of the HBO intro sequence.

106
00:05:53,423 --> 00:05:56,485
And they had this really cool dynamic

107
00:05:56,525 --> 00:05:57,785
like starburst effect you see there.

108
00:05:58,766 --> 00:06:00,327
And when I'm looking at it, I would have assumed

109
00:06:00,347 --> 00:06:02,688
that was just hand animated like every single dot.

110
00:06:03,709 --> 00:06:05,310
But it was actually, as you can see here,

111
00:06:05,330 --> 00:06:09,533
it was just two transparent screens run across each other

112
00:06:09,553 --> 00:06:11,074
to create this sort of slit scan effect.

113
00:06:11,674 --> 00:06:12,634
It's like super cheap.

114
00:06:12,895 --> 00:06:14,636
And the thing that I learned from this was that

115
00:06:15,036 --> 00:06:16,157
when approaching these sort of effects,

116
00:06:16,277 --> 00:06:17,678
even the experts cheated

117
00:06:17,998 --> 00:06:19,799
and that you should try to do the same thing.

118
00:06:22,115 --> 00:06:23,496
So this was the first effect I did.

119
00:06:25,237 --> 00:06:26,638
Probably one of the first things I made for the game.

120
00:06:27,379 --> 00:06:29,340
It's sort of like our Star Trek transporter.

121
00:06:32,362 --> 00:06:35,004
You'll see it probably hundreds of times in the game.

122
00:06:35,064 --> 00:06:35,865
It's all over the place.

123
00:06:37,466 --> 00:06:44,151
And it's actually just like this little cheap 32 pixel small frame animation.

124
00:06:45,092 --> 00:06:45,833
And it worked pretty well.

125
00:06:48,330 --> 00:06:53,692
My thought process with this whole thing was that I would establish a rudimentary structure

126
00:06:54,433 --> 00:06:58,475
with these tiny animations that I could do quickly and then just slather it in post effects.

127
00:07:00,156 --> 00:07:03,797
So this was pretty much how I did most of the effects on the game.

128
00:07:03,917 --> 00:07:07,339
Here's a charged slide attack done the same way.

129
00:07:07,359 --> 00:07:11,961
You can see it's just a handful of tiny frames covered in channel splitting and blur and

130
00:07:12,181 --> 00:07:12,661
all that stuff.

131
00:07:14,729 --> 00:07:16,270
Here's another example of a similar thing.

132
00:07:17,230 --> 00:07:21,451
Using just a couple of assets mixed together, it looks a lot more complicated than it is.

133
00:07:21,471 --> 00:07:28,653
So another thing I did a lot of was screen space effects, which plays into the sort of

134
00:07:28,813 --> 00:07:31,654
film post-process sort of stuff.

135
00:07:32,554 --> 00:07:34,954
This was a reference from a Foxy Brown 1974 film.

136
00:07:34,974 --> 00:07:35,735
It's not exactly sci-fi, but...

137
00:07:39,598 --> 00:07:42,881
This sort of cut out silhouette effect was used a lot

138
00:07:43,041 --> 00:07:44,542
in the 70s.

139
00:07:45,984 --> 00:07:48,406
So we tried to do something similar.

140
00:07:48,706 --> 00:07:51,368
This was a mock up done in After Effects

141
00:07:51,408 --> 00:07:53,390
and then here's a version of it in the game.

142
00:07:53,410 --> 00:08:00,717
Yeah, so the point of this one was that

143
00:08:01,677 --> 00:08:03,419
clearly the effects stand out from the background

144
00:08:03,519 --> 00:08:06,021
but it totally sells the 70s aesthetic.

145
00:08:09,151 --> 00:08:11,152
Another example is these shield effects.

146
00:08:11,592 --> 00:08:16,694
So when the character's powered up with the shield, this is what happens.

147
00:08:17,075 --> 00:08:22,657
So originally I'd done it with a pretty traditional sort of mesh with a fancy video game shader

148
00:08:22,737 --> 00:08:25,298
on it, but it never seemed to really fit in the world.

149
00:08:26,459 --> 00:08:27,919
Didn't really get that separation of like...

150
00:08:29,766 --> 00:08:31,727
fake effects versus real effects that I talked about earlier.

151
00:08:32,027 --> 00:08:36,610
So, if this were done on a film, this would have been like sort

152
00:08:36,630 --> 00:08:38,651
of hand rotoscoped every single frame,

153
00:08:39,151 --> 00:08:42,774
run through some multi-chemical bath process and lit

154
00:08:42,794 --> 00:08:44,535
from the back and all this crazy stuff.

155
00:08:44,555 --> 00:08:48,057
But in video games, we just render to a separate buffer,

156
00:08:48,077 --> 00:08:50,138
run a ramp shader on it, and it's done.

157
00:08:51,859 --> 00:08:54,981
Similar, there's another example of a crazy guy.

158
00:08:58,343 --> 00:09:02,769
use it here as well, this was a terminal that you need to disable the shield before you

159
00:09:02,789 --> 00:09:03,210
can use it.

160
00:09:03,330 --> 00:09:09,097
And originally I had a very complex, crazy mesh with a shader on it and this was just

161
00:09:09,157 --> 00:09:12,701
a bunch of spheres and you set them to render to that buffer and then you get this weird

162
00:09:13,122 --> 00:09:15,225
sort of cheap post-process effect.

163
00:09:17,635 --> 00:09:18,455
I use it all over the place.

164
00:09:19,035 --> 00:09:21,476
This was some particles, I could just tell the particles

165
00:09:21,496 --> 00:09:24,277
to render into that buffer, and it did a lot of crazy stuff.

166
00:09:24,937 --> 00:09:27,398
Use it in the intro sequence, just absolutely everywhere

167
00:09:27,418 --> 00:09:28,959
in the game, because it looks really cool.

168
00:09:30,039 --> 00:09:32,180
So final thoughts for my section of this.

169
00:09:33,360 --> 00:09:38,362
Not every game, obviously, can be intentionally cheap, right?

170
00:09:39,163 --> 00:09:41,723
And not every game is set in 1970s science fiction.

171
00:09:42,744 --> 00:09:45,765
But the key point is that you should approach your work

172
00:09:47,578 --> 00:09:50,899
from every direction and you should not be afraid

173
00:09:50,919 --> 00:09:52,919
to try completely different workflows

174
00:09:53,899 --> 00:09:55,060
than you're used to.

175
00:09:56,280 --> 00:09:59,261
Because the effects that work for one game

176
00:10:00,201 --> 00:10:02,562
probably don't work perfectly for another game

177
00:10:02,582 --> 00:10:03,222
that you're working on.

178
00:10:04,222 --> 00:10:06,683
So you should try to distill your art direction

179
00:10:07,003 --> 00:10:10,524
and inject that directly into the creation process

180
00:10:10,684 --> 00:10:12,604
and you might be surprised with what you do.

181
00:10:13,805 --> 00:10:14,945
So, there you go.

182
00:10:15,725 --> 00:10:16,385
Shannon is up next.

183
00:10:23,405 --> 00:10:25,807
Hi, I'm Shen Ming Spurgeon.

184
00:10:26,187 --> 00:10:29,670
I'm a senior effects artist at Motega in Bellevue, Washington.

185
00:10:30,471 --> 00:10:33,273
And I'm here to talk about the way we think about our effects

186
00:10:33,393 --> 00:10:36,095
and the process we have when we are creating our effects.

187
00:10:38,352 --> 00:10:41,735
Gigantic is a MOBA, and a third-person shooter

188
00:10:41,755 --> 00:10:43,617
with five-on-five PVP action.

189
00:10:44,718 --> 00:10:46,639
Players choose from a huge roster of characters,

190
00:10:47,040 --> 00:10:49,142
and those characters have lots of unique weapons

191
00:10:49,222 --> 00:10:52,945
and abilities, and you're fighting against the enemy team

192
00:10:53,025 --> 00:10:54,727
to take down their guardian.

193
00:10:56,208 --> 00:10:57,369
So you'll power up your guardian

194
00:10:58,130 --> 00:10:59,792
by using creatures that you summon,

195
00:11:00,332 --> 00:11:02,935
and hopefully you'll just kill the other guardian.

196
00:11:06,242 --> 00:11:09,605
We believe in, for character design,

197
00:11:09,625 --> 00:11:12,988
we believe that personality takes precedence over realism.

198
00:11:14,589 --> 00:11:16,170
So we think about what is that character about?

199
00:11:16,430 --> 00:11:17,511
How do we describe that character?

200
00:11:19,617 --> 00:11:26,122
one or two words or maybe a sentence. Uh, the character up here is HK206. Uh, his design

201
00:11:26,202 --> 00:11:32,447
says robot, firepower, clunky. Uh, in our game HK is a jittery bucket of bolts and he

202
00:11:32,487 --> 00:11:35,289
roams around shooting missiles and spraying bullets everywhere.

203
00:11:36,342 --> 00:11:40,064
We have another principle that we also adhere to for characters,

204
00:11:40,244 --> 00:11:44,185
and that's shapes being the first priority,

205
00:11:44,426 --> 00:11:45,886
and then we look at anatomy second.

206
00:11:46,486 --> 00:11:51,428
So Uncle Sven here, he's very inaccurate as far as anatomy goes.

207
00:11:52,209 --> 00:11:55,030
He's basically a water balloon that walks around.

208
00:11:57,090 --> 00:12:01,073
And so his big shapes take priority over realistic anatomy.

209
00:12:01,794 --> 00:12:04,576
And if a character has thin stick-like arms, for example,

210
00:12:04,676 --> 00:12:06,077
we keep the shapes in mind,

211
00:12:06,117 --> 00:12:07,938
and we try to fill the anatomy into them later.

212
00:12:08,378 --> 00:12:11,100
So strong shapes are gonna define that character.

213
00:12:11,740 --> 00:12:13,482
So how does this fit into effects?

214
00:12:15,483 --> 00:12:18,145
So on the right, we have what we do,

215
00:12:18,385 --> 00:12:19,326
and then on the left.

216
00:12:20,823 --> 00:12:22,323
Yes, no, that's incorrect.

217
00:12:22,824 --> 00:12:23,324
Other way around.

218
00:12:24,905 --> 00:12:26,125
We have one realistic fire here,

219
00:12:26,545 --> 00:12:27,826
or one realistic explosion here,

220
00:12:27,846 --> 00:12:29,006
and another stylized one.

221
00:12:29,987 --> 00:12:32,928
The unrealistic one is obviously gonna work a lot better,

222
00:12:33,748 --> 00:12:35,309
just because it fits in with the characters more.

223
00:12:35,649 --> 00:12:37,109
But the principles are important

224
00:12:37,129 --> 00:12:38,670
because we need to make sure that feeling

225
00:12:38,730 --> 00:12:40,571
carries over to our effects.

226
00:12:41,371 --> 00:12:44,813
A realistic explosion is also not gonna

227
00:12:45,113 --> 00:12:46,513
be very dimensional for

228
00:12:48,734 --> 00:12:50,957
for our work just because it's going to be on a billboard.

229
00:12:51,818 --> 00:12:54,942
So how do I simplify this explosion or a muzzle flash?

230
00:12:56,043 --> 00:12:58,065
One of the things that we do is pay attention to those shapes

231
00:12:58,446 --> 00:13:00,048
and the choices we make, and we try

232
00:13:00,088 --> 00:13:03,291
to imbue some sense of personality into the effect.

233
00:13:04,252 --> 00:13:05,894
But that doesn't mean we don't fill in the gaps

234
00:13:05,975 --> 00:13:07,436
with exaggerated realism.

235
00:13:09,315 --> 00:13:12,177
So this diagram represents who the stakeholders are

236
00:13:12,877 --> 00:13:14,298
when it comes to creating characters.

237
00:13:14,979 --> 00:13:16,379
Some studios structure their teams

238
00:13:16,619 --> 00:13:18,641
where only certain people are influencing the visual

239
00:13:18,741 --> 00:13:19,921
and gameplay direction of the game,

240
00:13:20,882 --> 00:13:23,003
and that only allows people to experience

241
00:13:23,023 --> 00:13:24,684
a very particular vision.

242
00:13:25,825 --> 00:13:30,747
For us, we start to incorporate a lot of the employees,

243
00:13:30,847 --> 00:13:31,748
even down to QA.

244
00:13:32,909 --> 00:13:34,369
You'll see that we don't have an art director.

245
00:13:35,631 --> 00:13:38,512
And that's been a fairly positive experience for me.

246
00:13:38,692 --> 00:13:40,373
It's new, but just different.

247
00:13:41,433 --> 00:13:46,515
The limitations force us to seek out information

248
00:13:46,575 --> 00:13:48,536
rather than letting it just come to us.

249
00:13:49,336 --> 00:13:51,457
And so, at the end of the day,

250
00:13:51,637 --> 00:13:53,538
from concept to playing the character in game,

251
00:13:53,638 --> 00:13:55,619
we're left with a character that we feel

252
00:13:55,639 --> 00:13:57,940
is the right move for our roster.

253
00:13:59,120 --> 00:13:59,760
And that's it.

254
00:14:00,401 --> 00:14:02,241
That's how you make a bunch of stylized characters

255
00:14:02,341 --> 00:14:04,182
and effects in The End.

256
00:14:05,161 --> 00:14:05,901
So super easy.

257
00:14:07,102 --> 00:14:07,682
No, I'm just kidding.

258
00:14:11,364 --> 00:14:12,424
So actually, I'm not done.

259
00:14:14,485 --> 00:14:16,886
What happens is now I have to figure out what I'm doing.

260
00:14:17,947 --> 00:14:20,008
I have to get the character, see its animations,

261
00:14:20,488 --> 00:14:21,308
figure out who she is.

262
00:14:21,889 --> 00:14:22,569
This is Beckett.

263
00:14:22,789 --> 00:14:26,151
She's our professional adventurer.

264
00:14:26,411 --> 00:14:27,831
She's mobile.

265
00:14:28,072 --> 00:14:29,772
She's got a jet pack, and she's armed to the teeth.

266
00:14:29,812 --> 00:14:32,214
And I need to figure out what her visual effects are

267
00:14:32,234 --> 00:14:32,714
going to look like.

268
00:14:33,595 --> 00:14:36,157
So I explore what her personality is.

269
00:14:36,477 --> 00:14:37,498
Is she fun-loving?

270
00:14:37,558 --> 00:14:38,418
Is she scholarly?

271
00:14:38,458 --> 00:14:39,379
Is she a bit of a gearhead?

272
00:14:40,500 --> 00:14:42,521
What sort of role does she fill in the game?

273
00:14:42,581 --> 00:14:43,461
Is she offensive?

274
00:14:43,621 --> 00:14:44,342
Is she a defender?

275
00:14:44,422 --> 00:14:46,063
Does she work paired up with another person?

276
00:14:47,023 --> 00:14:49,285
These are all things that slowly develop the effects

277
00:14:50,025 --> 00:14:52,107
because it's not just making a muzzle flash

278
00:14:52,127 --> 00:14:52,827
and calling it good.

279
00:14:54,568 --> 00:14:56,549
So what kind of weapons does she have?

280
00:14:57,530 --> 00:15:00,251
For her specifically, she has guns that transform

281
00:15:00,331 --> 00:15:00,411
and...

282
00:15:01,928 --> 00:15:03,389
a jetpack that she flies around with.

283
00:15:03,509 --> 00:15:05,430
But we've also got to figure out like,

284
00:15:05,470 --> 00:15:09,492
how does magic, how does that look for magic

285
00:15:09,552 --> 00:15:11,654
fit in with more ballistic effects?

286
00:15:11,894 --> 00:15:14,675
So on the left we have HK's fortified minigun.

287
00:15:15,135 --> 00:15:16,936
And on the right we've got Charnok's meteor.

288
00:15:18,017 --> 00:15:19,858
In Gigantic, our characters need to feel unique

289
00:15:20,138 --> 00:15:21,759
from one another, and their weapons

290
00:15:21,819 --> 00:15:24,340
and mode of transportation also need to feel intentional,

291
00:15:24,420 --> 00:15:25,881
as if they've always belonged to them.

292
00:15:28,233 --> 00:15:30,254
On the right again, we've got HK's grenade

293
00:15:30,855 --> 00:15:32,576
and Beckett's grenade.

294
00:15:32,896 --> 00:15:35,758
And I really wanted the two to be distinct from one another.

295
00:15:37,059 --> 00:15:39,040
While existing in the same world,

296
00:15:39,441 --> 00:15:40,662
they need to feel again, unique.

297
00:15:41,642 --> 00:15:45,645
So I made her grenade to be more of a gas explosion type

298
00:15:45,685 --> 00:15:47,766
instead of a concussion or shrapnel grenade.

299
00:15:50,208 --> 00:15:52,450
What you're also seeing for Beckett is an older version.

300
00:15:52,510 --> 00:15:54,971
So we'll dive into what it looks like soon.

301
00:15:57,539 --> 00:15:59,781
So we've asked who Beckett is, we've considered her weapons,

302
00:16:00,181 --> 00:16:02,162
and now I've got to think about what that visual language

303
00:16:02,202 --> 00:16:05,785
looks like, and does it share anything with anybody else?

304
00:16:06,225 --> 00:16:08,767
Is it whimsical, is it dark?

305
00:16:10,288 --> 00:16:13,030
I need to ask these questions of myself

306
00:16:13,271 --> 00:16:16,633
so that I can get to that point of making them for her.

307
00:16:17,714 --> 00:16:18,975
So let's dive into the tools.

308
00:16:19,455 --> 00:16:20,035
We use Unreal 3.

309
00:16:22,634 --> 00:16:24,995
You guys might have heard of it, but Unreal 4 is out now.

310
00:16:26,176 --> 00:16:30,558
We also use Photoshop for textures, 3D Studio Max for mesh creation, and then Rayfire for

311
00:16:30,598 --> 00:16:32,359
any destructible stuff that we need to do.

312
00:16:33,900 --> 00:16:35,801
So these are the high-level goals that I try to keep.

313
00:16:37,703 --> 00:16:43,766
I wanted to avoid drawing anything, so that was going to be really time-consuming.

314
00:16:45,282 --> 00:16:47,484
and also doing any sort of 2D effects

315
00:16:48,486 --> 00:16:50,628
was also gonna be limited to camera-facing billboards.

316
00:16:51,369 --> 00:16:54,913
So I removed all that and tried to focus on

317
00:16:55,294 --> 00:16:57,957
like using just meshes,

318
00:16:58,157 --> 00:16:59,419
because you can observe those from 360 degrees.

319
00:16:59,439 --> 00:16:59,619
Let's see.

320
00:17:04,398 --> 00:17:06,900
We have a lot of characters and we need to make sure

321
00:17:06,940 --> 00:17:08,442
that the characters fit the character,

322
00:17:09,002 --> 00:17:12,066
but they also need to not take away from gameplay.

323
00:17:12,366 --> 00:17:15,369
When you start making a bunch of unique effects

324
00:17:15,429 --> 00:17:17,991
for like 16 plus characters,

325
00:17:18,152 --> 00:17:19,613
you start to get a lot of effects noise

326
00:17:19,653 --> 00:17:21,915
and you need to make sure that gameplay

327
00:17:21,975 --> 00:17:23,036
is not impacted by that.

328
00:17:25,039 --> 00:17:28,082
On a personal note, my own goal is to create an effect

329
00:17:28,102 --> 00:17:29,383
that I wanna see over and over again.

330
00:17:29,403 --> 00:17:32,606
Audio artists have to think about what sounds

331
00:17:33,967 --> 00:17:35,569
will be like over and over again,

332
00:17:35,629 --> 00:17:37,030
and sometimes that can get grating,

333
00:17:37,730 --> 00:17:39,352
and effects is the same way.

334
00:17:39,572 --> 00:17:42,795
You don't wanna see something silly over and over again

335
00:17:42,815 --> 00:17:43,736
if it doesn't feel right.

336
00:17:46,199 --> 00:17:49,142
These are the restrictions that I've had to enforce on myself.

337
00:17:50,103 --> 00:17:54,787
So again, it can't just be specifically sprites because that's not going to work when I run

338
00:17:54,828 --> 00:17:55,568
around in circles.

339
00:17:57,170 --> 00:18:02,295
I need the effect to work on uneven terrain, so I need to think about the environmental

340
00:18:02,335 --> 00:18:03,316
considerations for that.

341
00:18:04,275 --> 00:18:06,977
and possibly even have it disappear quickly

342
00:18:07,197 --> 00:18:09,118
or just sink into the ground.

343
00:18:10,419 --> 00:18:12,720
And lastly, performance is the big thing.

344
00:18:12,920 --> 00:18:15,782
That's really going to determine how much I put into this.

345
00:18:16,682 --> 00:18:19,844
Because we have the potential to have two beckets in a match,

346
00:18:20,825 --> 00:18:22,746
that's going to double the cost of meshes

347
00:18:22,766 --> 00:18:24,047
that are being utilized.

348
00:18:25,147 --> 00:18:27,749
And because Unreal 3 is a forward rendering engine,

349
00:18:28,329 --> 00:18:32,111
meshes can be really expensive. Surprise.

350
00:18:34,621 --> 00:18:38,002
So we're gonna go on to how am I gonna turn this into 3D?

351
00:18:38,282 --> 00:18:41,263
This still is from the Jinx video that Riot made,

352
00:18:42,204 --> 00:18:44,764
and it looks super cool, super stylized,

353
00:18:45,145 --> 00:18:48,526
and this is just like one of the many references I pulled

354
00:18:49,786 --> 00:18:51,147
to make this explosion.

355
00:18:52,227 --> 00:18:53,327
And so I need to think about

356
00:18:54,508 --> 00:18:55,988
where I'm getting my information from,

357
00:18:56,108 --> 00:18:58,009
and then what do I want it to be in our game?

358
00:18:59,369 --> 00:18:59,710
I look at

359
00:19:01,061 --> 00:19:02,823
the assets that I also have available to me,

360
00:19:03,043 --> 00:19:03,784
what I can reuse.

361
00:19:04,024 --> 00:19:05,485
So I've got like sparks and flashes.

362
00:19:06,646 --> 00:19:09,448
But ultimately I want this effect to be a visual landmark.

363
00:19:09,528 --> 00:19:11,130
So when a teammate sees this explosion,

364
00:19:11,290 --> 00:19:12,471
they can determine whether or not

365
00:19:12,511 --> 00:19:13,772
they wanna go to that team fight.

366
00:19:17,355 --> 00:19:19,536
So when you're doing your research,

367
00:19:19,716 --> 00:19:23,239
take note of the shapes that you're gonna be working with.

368
00:19:24,540 --> 00:19:27,303
Because that will help you simplify what you're doing

369
00:19:28,083 --> 00:19:29,504
when it comes to making geometry in 3D.

370
00:19:31,850 --> 00:19:33,832
These are all my prototype meshes that I'd worked on.

371
00:19:35,834 --> 00:19:37,114
Some of them are simple, some of them,

372
00:19:37,895 --> 00:19:38,736
actually they're all simple.

373
00:19:38,996 --> 00:19:40,077
They're all just geospheres.

374
00:19:40,737 --> 00:19:43,459
And each mesh represents some variation on the visual

375
00:19:43,479 --> 00:19:45,361
that I was trying to achieve.

376
00:19:46,442 --> 00:19:48,964
Ultimately I learned that volumetric meshes

377
00:19:49,344 --> 00:19:50,865
were just the best way to go.

378
00:19:52,727 --> 00:19:54,528
They give the dimension that I need to the effect

379
00:19:54,608 --> 00:19:58,291
and they can also be vertex painted so I can do cool stuff.

380
00:19:59,290 --> 00:20:03,316
So the one on the far right is vertex painted and I'll show you what that looks like with the material.

381
00:20:05,815 --> 00:20:08,937
It's a mask material and it uses a myriad of different textures

382
00:20:08,977 --> 00:20:10,678
to give the unique erosion look.

383
00:20:11,739 --> 00:20:14,601
The color for the mesh comes from a parametric vector

384
00:20:14,701 --> 00:20:18,623
in the material instance, and the material's erosion

385
00:20:18,923 --> 00:20:21,245
comes from the color over life module in Cascade.

386
00:20:21,265 --> 00:20:25,227
I use the mesh vert color node in the material

387
00:20:25,467 --> 00:20:27,348
so that I can separate that color information,

388
00:20:28,249 --> 00:20:31,731
basically allowing me to use it like another dynamic parameter

389
00:20:31,931 --> 00:20:33,732
just with the color over life.

390
00:20:35,353 --> 00:20:38,656
I can't take all the time to explain how the material works,

391
00:20:39,336 --> 00:20:41,919
but I'm gonna burn through some GIFs that show

392
00:20:42,699 --> 00:20:44,521
what that color over life module does.

393
00:20:45,442 --> 00:20:49,785
So on the left we've got the zero, everything's zeroed out,

394
00:20:49,886 --> 00:20:52,288
but then when you go from zero to five on the red,

395
00:20:52,528 --> 00:20:54,009
it makes the color black point in,

396
00:20:55,791 --> 00:20:59,254
and the green channel, when going from zero to five,

397
00:20:59,274 --> 00:21:02,196
will make the material black point out.

398
00:21:04,276 --> 00:21:07,518
And then with all three in use,

399
00:21:07,878 --> 00:21:10,499
the blue will make both channels black point out,

400
00:21:10,599 --> 00:21:12,480
but then the red and the green will be black pointing in,

401
00:21:12,820 --> 00:21:14,801
blooming it, and then black pointing out eventually.

402
00:21:16,963 --> 00:21:19,104
So on the left, we've got a wireframe

403
00:21:19,284 --> 00:21:20,905
of the meshes isolated.

404
00:21:22,282 --> 00:21:25,583
So all that orange and gray stuff are those meshes.

405
00:21:25,843 --> 00:21:28,464
And this is just to demonstrate that there's nothing

406
00:21:28,524 --> 00:21:29,985
being done to the meshes themselves.

407
00:21:30,125 --> 00:21:34,266
It's just spinning and scaling over time,

408
00:21:34,566 --> 00:21:36,987
and then adding in the velocity-oriented

409
00:21:37,027 --> 00:21:37,888
bells and whistles later.

410
00:21:41,209 --> 00:21:42,970
So the final asset looks like this.

411
00:21:44,210 --> 00:21:48,312
And it used to have that giant pillar, but I changed that.

412
00:21:48,512 --> 00:21:51,893
I wanted it to be more of a concussive radial.

413
00:21:53,081 --> 00:21:54,082
have that look to it.

414
00:21:56,564 --> 00:21:58,926
So the material in particular has allowed me

415
00:21:58,946 --> 00:22:00,808
to focus on the effects art style,

416
00:22:01,008 --> 00:22:04,891
and it's given us a lot of versatility

417
00:22:05,011 --> 00:22:06,392
with just that material alone.

418
00:22:06,512 --> 00:22:08,414
We can drop it on a mesh,

419
00:22:08,594 --> 00:22:10,575
and it pretty much works out of the box.

420
00:22:12,517 --> 00:22:14,038
I'm able to reuse that material

421
00:22:14,679 --> 00:22:16,961
and the mesh that I made originally

422
00:22:17,521 --> 00:22:19,102
for this airstrike that Beckett has.

423
00:22:21,203 --> 00:22:24,960
Again, the intent was to let people know if they wanted to go and help or not.

424
00:22:27,000 --> 00:22:29,182
And then this is one of our guardians rampaging through the map.

425
00:22:29,882 --> 00:22:34,626
The smoke cloud from his exiting and entering is made up of two different meshes, but this

426
00:22:34,686 --> 00:22:38,649
is just another example of what that material can do and how versatile it is.

427
00:22:39,089 --> 00:22:45,494
It's a different use of it, and we've taken that material and just duplicated it, adding

428
00:22:45,534 --> 00:22:48,136
a few extra components that are unique to that smoke.

429
00:22:48,636 --> 00:22:51,218
But ultimately it's still the same material.

430
00:22:52,339 --> 00:22:56,542
We utilize this material in melee swipes as well

431
00:22:57,082 --> 00:22:59,804
and a few other uses like ribbons.

432
00:23:00,384 --> 00:23:03,327
So it's got a lot of versatility

433
00:23:03,627 --> 00:23:07,329
and I wish I'd showed more examples of that

434
00:23:07,389 --> 00:23:08,590
but that gives you another reason

435
00:23:08,630 --> 00:23:09,651
to just go and play the game.

436
00:23:11,693 --> 00:23:14,475
So in conclusion, here are some rules

437
00:23:14,515 --> 00:23:15,836
that I think are pretty important.

438
00:23:16,616 --> 00:23:19,278
The first one feels obvious but it's,

439
00:23:20,254 --> 00:23:21,034
sometimes ignored.

440
00:23:21,734 --> 00:23:23,295
Some games keep doing the same thing

441
00:23:23,315 --> 00:23:24,476
that they did in the last title,

442
00:23:24,736 --> 00:23:25,776
mixing and matching effects,

443
00:23:26,117 --> 00:23:27,898
and sometimes that just doesn't integrate well

444
00:23:27,918 --> 00:23:29,198
with characters or environment.

445
00:23:29,659 --> 00:23:30,619
So you gotta ask yourself,

446
00:23:31,440 --> 00:23:34,121
does the environment effects need to be more obvious

447
00:23:34,161 --> 00:23:35,962
than the character or vice versa?

448
00:23:37,423 --> 00:23:39,484
And think about the rules that you're establishing.

449
00:23:39,744 --> 00:23:41,365
Should we have transparent materials?

450
00:23:41,485 --> 00:23:43,346
Should we have just opaque materials?

451
00:23:47,133 --> 00:23:48,414
You'll wanna define your shapes,

452
00:23:49,114 --> 00:23:52,236
break down your effect into as many simple shapes

453
00:23:52,276 --> 00:23:55,037
as possible, that'll help you know

454
00:23:55,057 --> 00:23:56,518
where your visual noise is coming from,

455
00:23:56,778 --> 00:23:59,839
and it'll also help you focus on your solutions

456
00:24:00,800 --> 00:24:02,401
just by performance needs.

457
00:24:03,901 --> 00:24:05,702
You wanna take some time to immerse yourself

458
00:24:05,742 --> 00:24:07,523
in as much stylized imagery as possible.

459
00:24:08,463 --> 00:24:10,344
The more you consume, the more you'll have to pull from,

460
00:24:10,364 --> 00:24:11,945
and it just gets you more excited.

461
00:24:12,985 --> 00:24:14,906
This is an official endorsement of Pinterest.

462
00:24:15,895 --> 00:24:17,903
So please use that.

463
00:24:19,008 --> 00:24:20,153
Always get feedback from people.

464
00:24:22,408 --> 00:24:25,029
It's easy as an artist to hide yourself

465
00:24:25,229 --> 00:24:26,869
and just silo your work sometimes.

466
00:24:27,910 --> 00:24:29,450
But you definitely need that feedback.

467
00:24:29,510 --> 00:24:30,650
And you also need the feedback

468
00:24:31,030 --> 00:24:32,350
outside of the effects department.

469
00:24:33,311 --> 00:24:35,171
Because the effects department's always gonna look

470
00:24:35,211 --> 00:24:37,511
for very nitpicky things, which is good.

471
00:24:37,791 --> 00:24:41,192
But you also need to know if people outside

472
00:24:41,212 --> 00:24:43,293
of your department are understanding the work as well.

473
00:24:43,453 --> 00:24:45,193
So talk to QA, talk to engineers,

474
00:24:45,653 --> 00:24:47,413
talk to people who don't do the same thing as you.

475
00:24:48,234 --> 00:24:50,855
And lastly, just push the effect towards weird stuff.

476
00:24:51,175 --> 00:24:52,736
Just get weird with it, make it bigger

477
00:24:52,776 --> 00:24:53,737
than you think it should be.

478
00:24:54,397 --> 00:24:57,399
You'll end up with results that you'll be really surprised by.

479
00:24:57,419 --> 00:24:58,859
So that's it.

480
00:24:59,079 --> 00:24:59,340
Thanks.

481
00:25:02,101 --> 00:25:03,002
Next is Bill.

482
00:25:03,182 --> 00:25:14,208
Hi, everybody.

483
00:25:14,748 --> 00:25:15,188
That's loud.

484
00:25:18,636 --> 00:25:19,697
So thank you for coming.

485
00:25:19,737 --> 00:25:20,637
My name is Bill Kladdis.

486
00:25:20,797 --> 00:25:22,838
I'm a senior visual effects artist at Epic Games.

487
00:25:23,218 --> 00:25:26,060
And today, I am here to talk to you about Fortnite.

488
00:25:26,240 --> 00:25:27,140
Well, what is Fortnite?

489
00:25:27,200 --> 00:25:30,462
It's Epic's upcoming survival sandbox game.

490
00:25:30,662 --> 00:25:33,464
We're going to team up with other players to loot, craft

491
00:25:33,524 --> 00:25:36,986
weapons and traps, build forts, and defend against

492
00:25:37,426 --> 00:25:38,627
monsters of the storm.

493
00:25:38,847 --> 00:25:40,808
So the image on the right here that you can see is 100% in

494
00:25:40,828 --> 00:25:40,968
Engine.

495
00:25:42,449 --> 00:25:44,512
and it helps establish our visual style for the game.

496
00:25:44,672 --> 00:25:47,916
It's bright, it's colorful, and in the styles

497
00:25:47,956 --> 00:25:50,019
that's kind of inspired by big studios

498
00:25:50,059 --> 00:25:51,762
such as Pixar or DreamWorks.

499
00:25:53,945 --> 00:25:55,387
So what is the art direction

500
00:25:55,487 --> 00:25:57,049
for the effects inside of Fortnite?

501
00:25:57,429 --> 00:25:58,751
If I had to try to map it out.

502
00:25:59,986 --> 00:26:01,167
somewhere against the gradient.

503
00:26:01,247 --> 00:26:05,428
I'd put a little bit in between anime and like a Pixar film,

504
00:26:05,468 --> 00:26:07,629
right, a little more of a bias towards Pixar.

505
00:26:09,129 --> 00:26:10,510
We have contrasting elements, right,

506
00:26:10,530 --> 00:26:13,371
so we have things like smooth shading and fluid movement

507
00:26:13,391 --> 00:26:16,412
for things like smoke or the storm or stuff like that,

508
00:26:16,432 --> 00:26:18,773
but then we have like really hard edges and staccato timing

509
00:26:18,793 --> 00:26:21,533
like you would see in anime for like damaging

510
00:26:21,573 --> 00:26:22,594
and impactful effects.

511
00:26:23,154 --> 00:26:24,675
And it's all, you know, they're bold,

512
00:26:24,735 --> 00:26:26,715
but they're not like overdone and they're not,

513
00:26:26,915 --> 00:26:28,636
you know, in terms of color and value.

514
00:26:30,847 --> 00:26:32,808
So we can see a small taste of the different effects

515
00:26:32,848 --> 00:26:34,188
that embody this range and contrast

516
00:26:34,208 --> 00:26:35,289
that we have inside of Fortnite.

517
00:26:36,009 --> 00:26:37,609
And the focus of this talk, I apologize,

518
00:26:37,629 --> 00:26:38,790
it's gonna be a little more technical,

519
00:26:39,350 --> 00:26:41,490
but we're gonna be talking more about like mesh particles

520
00:26:41,530 --> 00:26:44,151
and materials techniques and how we use them

521
00:26:44,191 --> 00:26:45,652
to achieve this style within Fortnite.

522
00:26:45,672 --> 00:26:47,432
And you might be saying, you know, well meshes,

523
00:26:47,472 --> 00:26:48,773
why talk about meshes specifically?

524
00:26:48,793 --> 00:26:50,533
Because they're not new, we've been able to spawn them

525
00:26:50,553 --> 00:26:51,674
for a long time within particles.

526
00:26:52,254 --> 00:26:54,154
But we've got some new tricks and new abilities

527
00:26:54,174 --> 00:26:55,515
that we can do to make them even better.

528
00:26:55,655 --> 00:26:57,035
Some of the things that we can talk about are,

529
00:26:57,916 --> 00:27:00,037
The advantages are that they have superior volume and shading

530
00:27:00,297 --> 00:27:01,999
over traditional quads or sprites.

531
00:27:02,679 --> 00:27:05,061
They allow us to break away from flipbooks

532
00:27:05,262 --> 00:27:08,264
as the standard for what I call intra-particle movement,

533
00:27:08,304 --> 00:27:11,447
and that means movement within an actual single particle or sprite.

534
00:27:12,527 --> 00:27:15,190
And in a stylized art environment such as ours,

535
00:27:15,410 --> 00:27:17,692
we can actually have some significant performance advantages

536
00:27:18,412 --> 00:27:20,514
in certain situations, which we'll talk about shortly.

537
00:27:20,734 --> 00:27:23,476
So, like I said, we're just going to do some brief technical

538
00:27:23,957 --> 00:27:25,918
high-level overviews of some of the stuff that we've done.

539
00:27:27,222 --> 00:27:30,844
So to start, we need to talk about the vertex animation tool

540
00:27:30,864 --> 00:27:32,205
because we use this a lot inside of Fortnite.

541
00:27:32,605 --> 00:27:34,526
And in a nutshell, this allows us to animate

542
00:27:35,467 --> 00:27:38,248
with traditional rigs, deformers, fluid sims,

543
00:27:38,288 --> 00:27:40,389
you name it, and bake down that data into textures.

544
00:27:40,849 --> 00:27:43,871
So on the left, you can see what I've made inside of Maya,

545
00:27:43,891 --> 00:27:46,152
which we're going to talk about here in a quick process.

546
00:27:46,792 --> 00:27:49,474
And then on the right, we can see it used inside of Cascade.

547
00:27:49,514 --> 00:27:51,235
So that's not a skeletal mesh.

548
00:27:51,295 --> 00:27:53,336
That's a static mesh, and the movement

549
00:27:53,396 --> 00:27:54,736
is being updated through the material.

550
00:27:56,815 --> 00:27:58,077
So how does it work?

551
00:27:58,297 --> 00:27:58,878
Is it magic?

552
00:27:59,699 --> 00:28:01,221
It feels like it when I get to use it

553
00:28:01,241 --> 00:28:02,443
because it's really empowering.

554
00:28:02,984 --> 00:28:04,646
This was a tool that was made by John Lindquist.

555
00:28:04,806 --> 00:28:07,350
He's a technical artist on our team on Fortnite.

556
00:28:07,971 --> 00:28:09,393
And it uses two primary methods,

557
00:28:09,453 --> 00:28:11,316
and method one is the one we use the most

558
00:28:11,416 --> 00:28:12,698
is the texture-based method.

559
00:28:13,358 --> 00:28:17,939
So it takes either an animation or a frame by frame snapshot of meshes,

560
00:28:18,420 --> 00:28:21,440
and it bakes down the delta, basically, which is the difference

561
00:28:21,560 --> 00:28:24,581
between the positions of the vertices in world space,

562
00:28:24,701 --> 00:28:25,701
and then their vert normals.

563
00:28:26,101 --> 00:28:27,362
And it bakes it down to these two textures here.

564
00:28:27,382 --> 00:28:28,862
I'm going to move the laser pointer so you can see.

565
00:28:28,882 --> 00:28:31,482
This is the vertex position, and this is the vertex normal.

566
00:28:31,502 --> 00:28:32,943
It looks like a weird kind of barcode.

567
00:28:33,503 --> 00:28:36,944
And then it uses world position offset in the material and the normal input,

568
00:28:37,004 --> 00:28:38,524
and it just pans those frame by frame.

569
00:28:38,544 --> 00:28:39,444
You can see that right here.

570
00:28:39,904 --> 00:28:41,185
And it's updating the mesh as we go.

571
00:28:41,945 --> 00:28:43,286
So it's all done through a material function.

572
00:28:43,466 --> 00:28:46,388
We can get explicit control through a dynamic parameter

573
00:28:46,408 --> 00:28:49,950
inside of Cascade, a scalar, multiply against time,

574
00:28:49,990 --> 00:28:50,730
however you want to do it.

575
00:28:50,910 --> 00:28:52,251
There's some really key advantages.

576
00:28:52,871 --> 00:28:54,693
There's smooth interpolation between frames.

577
00:28:54,753 --> 00:28:56,554
So when you slow-mo it or time dilate it,

578
00:28:57,334 --> 00:28:59,255
this isn't shown well in this example here,

579
00:28:59,375 --> 00:29:01,257
obviously, because it's going frame by frame in Maya.

580
00:29:01,837 --> 00:29:03,898
But if you do it slow-mo in Engine,

581
00:29:03,918 --> 00:29:05,699
it'll actually smoothly interpolate between those.

582
00:29:05,719 --> 00:29:07,420
And there's a lot of wiggle room that you can do.

583
00:29:07,440 --> 00:29:08,361
Eventually it'll break down.

584
00:29:08,875 --> 00:29:12,298
But we don't get that staccato frame by frame

585
00:29:12,318 --> 00:29:13,138
with regular flipbooks.

586
00:29:13,499 --> 00:29:14,760
But there's disadvantages, right?

587
00:29:15,480 --> 00:29:18,522
We're bringing in two texture calls, and memory,

588
00:29:18,602 --> 00:29:20,343
and material instruction count, and all that stuff.

589
00:29:20,724 --> 00:29:22,525
Last thing is that it's a single mesh,

590
00:29:22,565 --> 00:29:24,026
so that means the topology has to stay the same.

591
00:29:24,066 --> 00:29:25,587
So where I'm putting the laser pointer here,

592
00:29:25,607 --> 00:29:26,948
this is actually the first frame,

593
00:29:27,248 --> 00:29:29,270
and then it's being updated frame by frame after that.

594
00:29:29,390 --> 00:29:30,751
So we can't change topology.

595
00:29:32,058 --> 00:29:33,299
Excuse me, so how does this work?

596
00:29:33,379 --> 00:29:35,601
Well, first we need to establish what we're trying to make

597
00:29:35,641 --> 00:29:38,262
and I've put together, or I grabbed a piece of reference

598
00:29:38,702 --> 00:29:40,524
for a like, I'll call it a smoke swish.

599
00:29:40,564 --> 00:29:42,485
This is something that like when a character quickly runs,

600
00:29:42,865 --> 00:29:44,426
they leave like a swishing trail behind them.

601
00:29:44,966 --> 00:29:46,927
So what I've learned is that working backwards

602
00:29:47,007 --> 00:29:49,069
actually is really powerful and it's a good place to start.

603
00:29:49,489 --> 00:29:51,630
So to start with that, that means we need a model

604
00:29:51,970 --> 00:29:53,851
and I've modeled the final shape

605
00:29:53,871 --> 00:29:54,972
that we're going to animate in.

606
00:29:55,032 --> 00:29:55,973
So on the left here.

607
00:29:56,573 --> 00:30:01,016
I made a hysterically embarrassing layout

608
00:30:01,136 --> 00:30:02,597
of different spheres stretched out,

609
00:30:02,657 --> 00:30:04,799
and then I just brought it inside of ZBrush.

610
00:30:04,819 --> 00:30:05,499
And I used two things.

611
00:30:05,539 --> 00:30:06,980
I used Dynamesh and ZRemesher.

612
00:30:07,000 --> 00:30:08,221
If you don't know what those are,

613
00:30:08,261 --> 00:30:10,163
Dynamesh is kind of just like a Boolean operation.

614
00:30:10,203 --> 00:30:11,944
It just combines it all into one mesh,

615
00:30:11,984 --> 00:30:13,065
removes the stuff on the inside,

616
00:30:13,085 --> 00:30:14,085
so you have like a solid whole.

617
00:30:14,646 --> 00:30:17,628
And then ZRemesher does magic,

618
00:30:17,648 --> 00:30:19,009
because I have no idea how it does this,

619
00:30:19,029 --> 00:30:21,150
but it gives you this awesome layout of quads.

620
00:30:21,530 --> 00:30:24,212
that are really easily deformed and it'll move nicely

621
00:30:24,252 --> 00:30:25,553
when you deform it against a skeleton.

622
00:30:26,094 --> 00:30:27,655
So it gives us a slider, we can adjust

623
00:30:28,175 --> 00:30:30,177
how much density you want.

624
00:30:31,057 --> 00:30:32,498
In this case, this is probably pretty low

625
00:30:32,558 --> 00:30:34,980
in terms of ZBrush standard polys, that's only 1,030 hertz.

626
00:30:37,125 --> 00:30:38,246
Then we need to be able to move it.

627
00:30:38,326 --> 00:30:40,207
So I say, you know, model like it's 2D

628
00:30:40,267 --> 00:30:42,508
and animate it like it's 2D and even rig it like it's 2D.

629
00:30:43,109 --> 00:30:45,850
So we wanna make rigs that support the intended motion

630
00:30:45,930 --> 00:30:47,992
and final movement, or final shape, excuse me.

631
00:30:48,472 --> 00:30:51,454
So this has a very precise level of movement, right?

632
00:30:51,494 --> 00:30:53,055
The swoosh that curls around.

633
00:30:53,355 --> 00:30:54,615
Trying to do this with a fluid sim,

634
00:30:54,696 --> 00:30:56,316
I'm not gonna say is impossible by any means.

635
00:30:56,437 --> 00:30:58,438
I think it would be difficult to arc control, right?

636
00:30:58,678 --> 00:31:01,141
If your art director says I want it to curl a little more,

637
00:31:01,201 --> 00:31:02,422
a little less, or something like that,

638
00:31:02,943 --> 00:31:04,184
I think it would be very hard to do that.

639
00:31:04,244 --> 00:31:06,607
So doing this manually by hand is really the choice,

640
00:31:06,647 --> 00:31:07,668
especially for us on Fortnite.

641
00:31:08,904 --> 00:31:10,386
So what I did is I just made a spline

642
00:31:10,907 --> 00:31:13,850
and constrained those joints on the rig to the spline.

643
00:31:13,870 --> 00:31:15,953
So you can see upcoming here when it loops,

644
00:31:15,993 --> 00:31:18,235
you can see as I move the joints right there,

645
00:31:18,296 --> 00:31:20,418
they're actually constrained to that spline

646
00:31:20,438 --> 00:31:21,620
and it gives us the curling motion.

647
00:31:21,960 --> 00:31:23,382
And make sure you utilize everything, right?

648
00:31:23,422 --> 00:31:26,065
Like I'm showing here, like scale, rotate, squash,

649
00:31:26,105 --> 00:31:28,608
you know, secondary deformers and things like that.

650
00:31:29,865 --> 00:31:31,986
So, we need to bring it inside of the engine,

651
00:31:32,426 --> 00:31:34,628
and we need to be able to draw material on it.

652
00:31:34,768 --> 00:31:38,050
So, what techniques can we do to self-style

653
00:31:38,230 --> 00:31:39,331
and preserve performance, right?

654
00:31:39,371 --> 00:31:41,092
Because anybody that's an effects artist in here

655
00:31:41,112 --> 00:31:43,533
knows that we can break performance the easiest.

656
00:31:44,154 --> 00:31:47,355
So, we're aiming for a stylized smoke, right?

657
00:31:47,396 --> 00:31:48,456
This means simple shading,

658
00:31:49,257 --> 00:31:51,798
a three-color self-shaded highlight,

659
00:31:51,818 --> 00:31:52,819
which we'll talk about shortly,

660
00:31:53,259 --> 00:31:55,280
and like a hard erosion edge that you see in anime,

661
00:31:55,300 --> 00:31:56,781
where it kind of curls away from itself.

662
00:31:57,382 --> 00:32:00,504
So masked materials inside of Unreal 4 are an excellent choice.

663
00:32:00,564 --> 00:32:04,228
So on the left, you can see that's the master smoke material

664
00:32:04,268 --> 00:32:04,988
shader that we use.

665
00:32:05,369 --> 00:32:06,429
And on the right, it's the same shader,

666
00:32:06,449 --> 00:32:08,231
but it's made into lit translucency.

667
00:32:08,291 --> 00:32:10,173
And ignore the fact that it's a little darker.

668
00:32:10,713 --> 00:32:13,576
I think just with some value pushes, you can get them to match.

669
00:32:13,616 --> 00:32:14,817
But you can see some clear advantages.

670
00:32:14,857 --> 00:32:18,019
The one on the left just has so much more volume and body

671
00:32:18,059 --> 00:32:18,780
because of its shading.

672
00:32:18,820 --> 00:32:20,521
It's casting much nicer shadows.

673
00:32:21,262 --> 00:32:23,624
And the way it's eroding is a lot cleaner, too, for our style.

674
00:32:24,624 --> 00:32:28,068
But take it a next step and look at inside a shader complexity

675
00:32:28,088 --> 00:32:29,570
mode, and you can really see how this shines.

676
00:32:30,451 --> 00:32:31,552
Deferred rendering is our friend.

677
00:32:31,592 --> 00:32:33,855
As Shen mentioned, meshes can get expensive quick,

678
00:32:33,895 --> 00:32:35,657
especially in Unreal 3, because it's a forward renderer.

679
00:32:35,997 --> 00:32:37,399
We're now using a deferred renderer.

680
00:32:37,419 --> 00:32:38,400
It looks like it stopped.

681
00:32:38,560 --> 00:32:41,063
Let me see if I can get that to play.

682
00:32:41,683 --> 00:32:43,384
There we go.

683
00:32:43,464 --> 00:32:45,105
Since it's a deferred render, all we're really doing

684
00:32:45,145 --> 00:32:48,287
is the camera casts down and hits the first surface,

685
00:32:48,447 --> 00:32:49,487
and it doesn't need to go past that.

686
00:32:49,507 --> 00:32:50,708
There's no sorting, it doesn't have to

687
00:32:50,748 --> 00:32:51,569
draw anything behind it.

688
00:32:52,009 --> 00:32:52,869
So it's really clean, right?

689
00:32:52,889 --> 00:32:54,670
There's still a one-bit depth test cost,

690
00:32:54,710 --> 00:32:56,211
but it's kind of minimal in comparison.

691
00:32:59,453 --> 00:33:01,374
So in addition to that, we want to make sure

692
00:33:01,394 --> 00:33:03,696
that the material feels kind of grounded inside of this.

693
00:33:03,976 --> 00:33:07,118
So we have, Fortnite is dynamically lit, right?

694
00:33:07,138 --> 00:33:08,839
There's no light maps or anything like that.

695
00:33:09,949 --> 00:33:14,515
And we want to make sure that it kind of reacts to time of day changes and that means shading and color.

696
00:33:15,316 --> 00:33:18,140
So the time of day manager is something that's like in blueprints and code.

697
00:33:18,180 --> 00:33:21,664
It's writing to what we have, what's called a material parameter collection.

698
00:33:21,684 --> 00:33:26,971
If you don't know what that is, material parameter collection is this like laundry list of vectors and scalars, right?

699
00:33:27,011 --> 00:33:28,533
And anybody can write to it and then...

700
00:33:29,134 --> 00:33:32,216
The cool thing is, tons of materials can all read from one point.

701
00:33:32,256 --> 00:33:36,319
So you update that one value and all the materials on the fly update with that value.

702
00:33:36,399 --> 00:33:39,122
So the time of day manager is writing the time of day and the light vector.

703
00:33:39,442 --> 00:33:43,925
Light vector is just, if you imagine my hand, this is just the way the direction of the light that's moving,

704
00:33:43,945 --> 00:33:45,046
which is going to be the sun or the moon.

705
00:33:45,947 --> 00:33:50,831
So all we have to do is take that light vector and do a dot product between that and the vertex normal,

706
00:33:51,191 --> 00:33:53,012
and we get the results on the left here.

707
00:33:53,052 --> 00:33:54,333
Let me turn the laser pointer back on.

708
00:33:55,334 --> 00:33:56,895
So you get the result on the left here.

709
00:33:57,880 --> 00:33:59,861
And you can see as the time of day changes,

710
00:33:59,921 --> 00:34:01,082
that highlight changes with it.

711
00:34:01,503 --> 00:34:03,384
We can just do some simple math to round it out

712
00:34:03,544 --> 00:34:05,226
to three steps.

713
00:34:06,747 --> 00:34:09,069
And then in addition to that, we can take a standard Fresnel

714
00:34:09,509 --> 00:34:11,631
and dot between this and a standard Fresnel.

715
00:34:11,691 --> 00:34:13,373
And what this allows us to do is it gives us

716
00:34:13,393 --> 00:34:15,274
highlights that are a little more biased towards the camera.

717
00:34:16,115 --> 00:34:18,158
Excuse me, so what that means is sometimes

718
00:34:18,178 --> 00:34:19,781
you might get highlights that are behind the mesh

719
00:34:19,821 --> 00:34:21,924
because the vector is coming towards you, right,

720
00:34:21,944 --> 00:34:22,925
so you can't see anything anymore.

721
00:34:23,246 --> 00:34:25,389
And it kind of makes the meshes feel flat.

722
00:34:25,669 --> 00:34:28,193
So if you mix, I put a value here of .55,

723
00:34:28,253 --> 00:34:29,955
it's roughly halfway, you get a little bit

724
00:34:29,995 --> 00:34:32,038
of that push forward so that you always see a highlight

725
00:34:32,078 --> 00:34:32,780
no matter where you are.

726
00:34:34,431 --> 00:34:37,291
In addition, we can do artist-derived highlight colors.

727
00:34:37,392 --> 00:34:40,372
So if you look here in the examples in the back,

728
00:34:40,452 --> 00:34:41,792
this guy, this guy, and this guy,

729
00:34:42,092 --> 00:34:44,133
those are all using the same exact three colors,

730
00:34:44,193 --> 00:34:45,333
no matter what the time of day is.

731
00:34:45,673 --> 00:34:46,813
It does change a little bit.

732
00:34:46,853 --> 00:34:47,773
You can see, especially at night,

733
00:34:47,793 --> 00:34:49,954
there's a much more blue shift towards it.

734
00:34:50,494 --> 00:34:51,994
But if we use our own functions to be able

735
00:34:52,014 --> 00:34:53,715
to change those colors based on the time of day,

736
00:34:54,055 --> 00:34:56,135
you can see this example here and this one.

737
00:34:56,515 --> 00:34:57,635
And this one, you can see you can get

738
00:34:57,695 --> 00:34:59,436
much more artist-friendly control,

739
00:34:59,536 --> 00:35:01,276
and you can give it a lot more style and feel

740
00:35:01,736 --> 00:35:03,957
to make it feel romantic or anything like that.

741
00:35:05,883 --> 00:35:08,525
So how do we get our materials to disappear?

742
00:35:08,605 --> 00:35:10,827
I've seen other games do stylized smoke like this,

743
00:35:10,867 --> 00:35:13,048
and they just simply shrink it to a point,

744
00:35:13,068 --> 00:35:14,229
and scale the particle away.

745
00:35:14,549 --> 00:35:15,570
I'm not really a big fan of that.

746
00:35:15,610 --> 00:35:17,692
I want it to kind of neatly disappear and end the style,

747
00:35:17,732 --> 00:35:19,513
right, that anime style of smoke eroding.

748
00:35:20,114 --> 00:35:21,295
So we have mass materials.

749
00:35:21,315 --> 00:35:23,136
We've got the one bit opacity that we talked about it,

750
00:35:23,176 --> 00:35:25,097
and we're stylized, so we can capitalize on this.

751
00:35:25,678 --> 00:35:27,399
So all we do is we just take a standard Fresnel,

752
00:35:28,040 --> 00:35:29,300
And then we're just going to bias against this.

753
00:35:29,540 --> 00:35:31,801
Bias just means adding, or if you want to subtract,

754
00:35:31,841 --> 00:35:32,962
you add a negative number.

755
00:35:33,442 --> 00:35:36,203
So on the right here, we're just doing an example of biasing

756
00:35:36,243 --> 00:35:37,204
from 1 to negative 1.

757
00:35:37,524 --> 00:35:39,084
And this gets fed into Opacity Mask.

758
00:35:39,104 --> 00:35:41,645
So you can see that the mesh is eroding away neatly

759
00:35:41,946 --> 00:35:42,626
based on the normals.

760
00:35:42,646 --> 00:35:44,567
And it'll change based on the camera angle.

761
00:35:44,627 --> 00:35:45,647
So you get unique results.

762
00:35:46,227 --> 00:35:48,028
based on angle or particle rotation.

763
00:35:48,228 --> 00:35:50,129
So all that put together, you can see our little

764
00:35:50,469 --> 00:35:51,429
small smoke swirl.

765
00:35:51,889 --> 00:35:54,630
When she runs, she's got a big trail of mesh particles

766
00:35:54,650 --> 00:35:57,191
and traditional particles, and there's a big swish

767
00:35:57,211 --> 00:35:58,451
that kind of gets lost from this angle.

768
00:35:58,891 --> 00:36:00,712
But when she starts running, you can see the swish,

769
00:36:00,732 --> 00:36:01,532
it's a little bigger, so.

770
00:36:02,813 --> 00:36:03,093
Cool.

771
00:36:03,693 --> 00:36:06,994
So how can we get even more out of our materials and meshes?

772
00:36:07,034 --> 00:36:09,975
And the answer is explosions.

773
00:36:10,949 --> 00:36:13,671
So the master smoke material inside of Fortnite

774
00:36:13,691 --> 00:36:17,613
has a static switch to enable heat for explosions, right?

775
00:36:17,693 --> 00:36:19,635
So I use the term heat and explosion,

776
00:36:20,115 --> 00:36:21,136
or I'm sorry, heat and density.

777
00:36:21,176 --> 00:36:23,638
Heat would be like the emissive part of a material.

778
00:36:23,958 --> 00:36:26,340
Density's gonna be the smoke after the fuel is spent, right?

779
00:36:27,360 --> 00:36:29,002
So we can use these same techniques applied

780
00:36:29,422 --> 00:36:30,923
for a secondary transition.

781
00:36:31,003 --> 00:36:32,204
Oh, it looks like the video stopped playing.

782
00:36:34,338 --> 00:36:35,259
PowerPoint doesn't like me.

783
00:36:36,619 --> 00:36:38,079
So to get that transition from the hot

784
00:36:38,119 --> 00:36:39,420
to the dark parts of the smoke,

785
00:36:39,780 --> 00:36:41,480
we can use the same techniques, right?

786
00:36:41,500 --> 00:36:43,721
We can take a Fresnel, invert the Fresnel,

787
00:36:44,261 --> 00:36:46,321
round it off, and then just bias against that

788
00:36:46,341 --> 00:36:47,262
so we can get our transition.

789
00:36:48,202 --> 00:36:50,943
We can use our same three color cell shading highlight

790
00:36:51,023 --> 00:36:52,583
for the emissive part,

791
00:36:53,003 --> 00:36:54,443
but we can use an artist drive light vector,

792
00:36:54,463 --> 00:36:56,124
because it doesn't really need to accept light direction,

793
00:36:56,164 --> 00:36:57,744
right, explosions, they emit,

794
00:36:57,804 --> 00:36:59,445
they are emissive by definition, so.

795
00:37:01,435 --> 00:37:04,036
So with explosions, they're complex, right?

796
00:37:04,056 --> 00:37:06,538
There's a lot of motion, movement, undulation,

797
00:37:06,578 --> 00:37:07,758
all sorts of things and shapes.

798
00:37:07,778 --> 00:37:09,579
And we can do this hand animated.

799
00:37:09,599 --> 00:37:10,599
In fact, that's how I started

800
00:37:10,619 --> 00:37:11,900
with a hand animated mushroom cloud.

801
00:37:12,460 --> 00:37:14,961
But if we really wanna get that sense of believability,

802
00:37:15,021 --> 00:37:17,802
that sense of Pixar reel is what I call it, right?

803
00:37:18,162 --> 00:37:20,443
We can use our existing tools

804
00:37:20,644 --> 00:37:22,824
and combine that with fluid sims.

805
00:37:23,707 --> 00:37:24,808
and the vertex animation tools.

806
00:37:24,888 --> 00:37:26,709
So again, we can capitalize on our existing smoke

807
00:37:26,749 --> 00:37:29,751
and material explosion style that we've talked about,

808
00:37:29,831 --> 00:37:33,874
like volumes with meshes, erosion, and retopology.

809
00:37:35,015 --> 00:37:36,736
We can take that fluid sim that I showed you

810
00:37:36,756 --> 00:37:37,557
in the previous slide

811
00:37:38,277 --> 00:37:39,938
and convert that to a series of meshes.

812
00:37:40,079 --> 00:37:42,160
So we take, again, working backwards,

813
00:37:42,200 --> 00:37:43,401
we take the last frame.

814
00:37:44,822 --> 00:37:45,603
turn this on one more time.

815
00:37:45,683 --> 00:37:48,325
We take the last frame right here of the fluid

816
00:37:48,385 --> 00:37:49,065
and convert it to mesh.

817
00:37:49,085 --> 00:37:51,687
You can see it's really nasty in terms of density

818
00:37:51,707 --> 00:37:52,608
and topology, right?

819
00:37:52,668 --> 00:37:53,529
It's not going to be usable.

820
00:37:53,909 --> 00:37:57,071
We can bring it into ZBrush and re-topologize it.

821
00:37:57,692 --> 00:37:59,473
We do lose a little bit of detail here.

822
00:37:59,593 --> 00:38:01,455
I think it's kind of like a serendipitous thing, though,

823
00:38:01,475 --> 00:38:04,317
for something like Fortnite, because with our stylized

824
00:38:04,677 --> 00:38:06,618
material that I've showed you, it kind of like rounds

825
00:38:06,678 --> 00:38:07,799
things out and it looks a little smoother.

826
00:38:08,902 --> 00:38:10,864
and then now we can just work backwards

827
00:38:10,924 --> 00:38:11,966
to be able to get this to animate.

828
00:38:12,046 --> 00:38:14,028
So this guy right here that I'm highlighting

829
00:38:14,129 --> 00:38:14,910
is the last frame.

830
00:38:15,150 --> 00:38:16,672
What we do is something called a shrink wrap,

831
00:38:17,393 --> 00:38:18,795
which just projects all the vertices in

832
00:38:18,815 --> 00:38:22,259
and we collide with the frame previous in the explosion.

833
00:38:22,539 --> 00:38:24,442
Then we just go back to that and then, you know,

834
00:38:24,462 --> 00:38:26,004
project in and we just go frame by frame.

835
00:38:26,905 --> 00:38:30,187
We can automate it somewhat, but it doesn't really look that great in all areas.

836
00:38:30,207 --> 00:38:33,069
So that means that we have to do some hand painting to fix certain areas.

837
00:38:33,609 --> 00:38:37,532
So it's a little bit of busy work, but once you get it in, you get the end results.

838
00:38:37,792 --> 00:38:40,593
This is just showing it in like a debug loop, right?

839
00:38:40,613 --> 00:38:41,994
So you can see it going from start to end.

840
00:38:42,575 --> 00:38:46,457
And then inside the airstrike, you can see it used as a core, obviously used with a bunch

841
00:38:46,477 --> 00:38:47,798
of other traditional particles, right?

842
00:38:48,158 --> 00:38:53,001
But you can see it being used with like some trails and some camera shake and some stylized

843
00:38:53,041 --> 00:38:53,922
flares and stuff like that.

844
00:38:53,962 --> 00:38:54,062
So.

845
00:38:55,127 --> 00:38:55,889
That's work in progress.

846
00:38:55,929 --> 00:38:57,052
We're going to make it even cooler.

847
00:38:59,500 --> 00:39:01,921
Before we leave the vertex animation tool, however,

848
00:39:02,181 --> 00:39:03,082
there is a second method.

849
00:39:03,122 --> 00:39:04,903
I told you we primarily use the texture method,

850
00:39:04,923 --> 00:39:06,483
but there is the model sequence method,

851
00:39:06,863 --> 00:39:08,084
which basically allows us to take

852
00:39:08,224 --> 00:39:10,325
any arbitrary amount of meshes with varying topology

853
00:39:10,345 --> 00:39:12,366
and just flip through them like a flip book.

854
00:39:12,406 --> 00:39:13,786
So there's some key advantages there, right?

855
00:39:13,826 --> 00:39:15,827
We don't need continuous topology, like I said.

856
00:39:16,608 --> 00:39:18,088
We can have any arbitrary amount of frames.

857
00:39:18,488 --> 00:39:20,209
Good for complex shapes and things like that.

858
00:39:20,989 --> 00:39:23,831
There's no textures, no expensive material function.

859
00:39:23,871 --> 00:39:25,811
There is a material function, but it's a lot cheaper.

860
00:39:26,412 --> 00:39:29,635
But some key disadvantages are these mesh assets

861
00:39:29,676 --> 00:39:31,558
get really big really fast, so you can end up

862
00:39:31,578 --> 00:39:34,141
with a 10 meg static mesh if you're not crazy.

863
00:39:34,161 --> 00:39:35,622
And there's no interpolation between frames

864
00:39:35,642 --> 00:39:36,283
or anything like that.

865
00:39:37,044 --> 00:39:40,889
And good luck UVing 70 frames of meshes.

866
00:39:41,309 --> 00:39:41,850
Yeah, so.

867
00:39:42,876 --> 00:39:45,077
The takeaways matches are excellent, right?

868
00:39:45,097 --> 00:39:46,458
They provide excellent volume and shading.

869
00:39:46,558 --> 00:39:48,059
They allow us to do 3D movement

870
00:39:48,519 --> 00:39:51,801
and use in conjunction with Blueprints and Unreal Engine 4.

871
00:39:51,841 --> 00:39:54,723
They are an exceptionally powerful tool

872
00:39:54,783 --> 00:39:57,624
for VFX and tech art. That's all for me.

873
00:39:57,644 --> 00:39:59,205
We're going to have Brianna Lundsie come up next.

874
00:39:59,265 --> 00:39:59,525
Thank you.

875
00:40:07,690 --> 00:40:09,551
That was a pretty Unreal talk, Bill.

876
00:40:15,037 --> 00:40:20,180
Hi everyone, my name is Brianna Lindsey and I'm a senior VFX artist at Deep Silver Volition.

877
00:40:21,661 --> 00:40:26,925
If you're not familiar with Deep Silver Volition, it's been known for developing a lot of titles

878
00:40:26,965 --> 00:40:33,410
over the last 20 years, from Saints Row to the Red Faction series, and our most recent

879
00:40:33,450 --> 00:40:37,913
IP is called Agents of Mayhem, and I'll be talking to you about the VFX of Agents of

880
00:40:37,953 --> 00:40:38,493
Mayhem today.

881
00:40:40,435 --> 00:40:42,495
So Agents of Mayhem, just as a little introduction,

882
00:40:42,636 --> 00:40:44,996
it's a 3D third-person open-world game.

883
00:40:45,657 --> 00:40:47,497
And Agents of Mayhem's art style is heavily

884
00:40:47,557 --> 00:40:48,918
influenced by 80s cartoons.

885
00:40:49,798 --> 00:40:52,039
We define our art style as 80s cartoon nostalgia,

886
00:40:52,299 --> 00:40:54,400
drawing largely from classical cartoon animation

887
00:40:54,420 --> 00:40:55,140
for inspiration.

888
00:40:55,980 --> 00:40:57,961
And for us in real-time effects, this

889
00:40:58,001 --> 00:40:59,681
presents a unique challenge.

890
00:40:59,861 --> 00:41:02,442
How do we render these retro style effects

891
00:41:02,482 --> 00:41:03,483
in a fully 3D world?

892
00:41:05,269 --> 00:41:07,710
For the overall artistic vision of Agents of Mayhem,

893
00:41:07,830 --> 00:41:10,671
the art director broke down the vision

894
00:41:10,692 --> 00:41:12,973
into three visual pillars for us artists to interpret.

895
00:41:13,573 --> 00:41:15,194
I'm going to talk to you about these three pillars.

896
00:41:15,514 --> 00:41:17,515
My talk focuses a lot more on art direction

897
00:41:17,535 --> 00:41:18,736
than the technical side.

898
00:41:19,436 --> 00:41:21,157
And I'm going to talk to you about how we approach

899
00:41:21,177 --> 00:41:23,278
to applying these pillars to our VFX.

900
00:41:23,798 --> 00:41:25,499
And I'm going to talk about where we failed

901
00:41:25,519 --> 00:41:27,320
and where we succeeded in applying this direction.

902
00:41:28,020 --> 00:41:30,241
Our pillars are simplified.

903
00:41:31,112 --> 00:41:32,892
Here, meaning feeling clean and bold,

904
00:41:33,212 --> 00:41:34,932
yet still belonging in the cartoon world

905
00:41:34,973 --> 00:41:35,733
of Agents of Mayhem.

906
00:41:36,393 --> 00:41:38,893
We focus heavily on silhouette, gameplay messaging,

907
00:41:38,933 --> 00:41:40,814
and readability for our simplified effects.

908
00:41:42,554 --> 00:41:42,954
Vibrant.

909
00:41:43,595 --> 00:41:45,775
Here, meaning colorful, intensive, and snappy.

910
00:41:46,335 --> 00:41:48,516
We focus heavily on color, timing,

911
00:41:48,576 --> 00:41:50,876
and layers of complexity to get vibrancy across

912
00:41:50,916 --> 00:41:51,316
in our VFX.

913
00:41:52,847 --> 00:41:54,108
And lastly, theatrical.

914
00:41:54,769 --> 00:41:56,971
Here, meaning over the top and dramatic.

915
00:41:57,392 --> 00:41:59,254
Think wow moments and showstoppers

916
00:41:59,274 --> 00:42:00,495
when it comes to our VFX.

917
00:42:01,036 --> 00:42:02,617
With good staging, camera work,

918
00:42:02,818 --> 00:42:05,100
cinematic destruction, and presentation.

919
00:42:07,092 --> 00:42:09,253
So our art directors, they gave us this poster

920
00:42:09,313 --> 00:42:11,113
of a breakfast sandwich to help us visualize

921
00:42:11,134 --> 00:42:12,534
and break down our artistic pillars.

922
00:42:13,214 --> 00:42:15,555
You know, it kind of fits into that whole cartoon theme.

923
00:42:16,495 --> 00:42:17,936
Having a good understanding of these pillars

924
00:42:17,976 --> 00:42:21,257
helped us to apply and deliver these real-time effects

925
00:42:21,277 --> 00:42:22,837
that fit into the gameplay needs

926
00:42:22,877 --> 00:42:24,538
and artistic expectations of the IP.

927
00:42:25,758 --> 00:42:27,999
So when we first rolled onto Agents of Mayhem,

928
00:42:28,039 --> 00:42:30,160
we asked ourselves what do 80s cartoons look like?

929
00:42:30,780 --> 00:42:32,240
And how do we tap into that nostalgia?

930
00:42:32,260 --> 00:42:34,161
In order to understand this,

931
00:42:34,221 --> 00:42:36,442
we ended up watching a lot of older shows for reference.

932
00:42:36,949 --> 00:42:39,021
so we can better understand our source influences.

933
00:42:39,958 --> 00:42:41,880
Artistically, G.I. Joe was one of the many pieces

934
00:42:41,920 --> 00:42:43,080
of source material we looked at.

935
00:42:43,340 --> 00:42:45,862
And one of the key takeaways for me was that in order to get

936
00:42:45,882 --> 00:42:48,083
that retro cartoon look, we had to start thinking

937
00:42:48,103 --> 00:42:49,444
about how the VFX were constructed

938
00:42:49,464 --> 00:42:50,604
in these classical cartoon shows.

939
00:42:51,365 --> 00:42:53,526
The VFX in all of these examples were not done digitally,

940
00:42:53,566 --> 00:42:55,667
but they were painted on animation cells by hand,

941
00:42:56,148 --> 00:42:58,069
meaning that there wasn't any opacity thing going

942
00:42:58,149 --> 00:42:59,049
on in the effects work.

943
00:42:59,429 --> 00:43:02,411
All of these shapes had to resolve and kind of break apart

944
00:43:02,591 --> 00:43:03,392
in terms of their shapes.

945
00:43:04,192 --> 00:43:06,293
And these G.I. Joe references play heavily

946
00:43:06,333 --> 00:43:07,674
into the first pillar, simplified.

947
00:43:10,100 --> 00:43:13,341
So, as we get into simplified, I want to talk about one of the things we struggled with

948
00:43:13,381 --> 00:43:16,182
the most when it first came to making simplified and readable effects.

949
00:43:17,263 --> 00:43:17,503
Blood.

950
00:43:18,803 --> 00:43:23,945
So, with blood, how do you make blood something that isn't a staple of these classical, stylized,

951
00:43:24,045 --> 00:43:27,506
retro cartoons fit into your open world city games with a shooting mechanic?

952
00:43:28,417 --> 00:43:29,018
It's kind of hard.

953
00:43:29,478 --> 00:43:31,901
So early on in the project, we tried using fluid simulations

954
00:43:31,941 --> 00:43:32,482
and flip books.

955
00:43:33,243 --> 00:43:35,846
And I think we kind of did this just because this was

956
00:43:36,066 --> 00:43:38,349
something that we were used to when it came to generating

957
00:43:38,609 --> 00:43:41,793
liquids, but it didn't really give us a result that worked

958
00:43:41,833 --> 00:43:42,734
well with our art style.

959
00:43:44,488 --> 00:43:46,329
So this resulted in blood that we considered

960
00:43:46,349 --> 00:43:47,129
to be out of style.

961
00:43:47,629 --> 00:43:48,809
Our blood looked like it didn't belong

962
00:43:48,829 --> 00:43:49,590
in the rest of the world.

963
00:43:50,290 --> 00:43:51,710
It felt way too noisy and it didn't hit

964
00:43:51,730 --> 00:43:52,510
our artistic pillars.

965
00:43:53,130 --> 00:43:54,831
We felt it was unsuccessful in meeting

966
00:43:54,851 --> 00:43:56,711
our artistic expectations as well as messaging

967
00:43:56,731 --> 00:43:57,751
effectively for gameplay.

968
00:43:58,431 --> 00:43:59,712
It didn't read very well from far away

969
00:43:59,752 --> 00:44:00,852
and it lacked the silhouette needed

970
00:44:00,872 --> 00:44:01,872
for a simplified effect.

971
00:44:02,472 --> 00:44:03,412
So we had to go back and think about

972
00:44:03,432 --> 00:44:05,093
what made good-looking stylized blood.

973
00:44:05,113 --> 00:44:08,793
80s cartoon effects are hand-painted,

974
00:44:09,394 --> 00:44:11,014
meaning that they have a more simplified look to them.

975
00:44:11,852 --> 00:44:13,412
So going back to our GI Joe example,

976
00:44:13,453 --> 00:44:17,393
we re-approached this idea process to our VFX.

977
00:44:18,013 --> 00:44:19,214
And to achieve this kind of look,

978
00:44:19,254 --> 00:44:21,594
we decided to hand paint our blood material textures

979
00:44:22,094 --> 00:44:24,194
instead of using flip books and heavily utilize

980
00:44:24,314 --> 00:44:25,955
alpha crush in our particle materials

981
00:44:25,975 --> 00:44:27,175
to get that retro look we desired.

982
00:44:27,895 --> 00:44:28,995
And when I say alpha crush,

983
00:44:29,015 --> 00:44:30,656
that's just the word we use at Volition

984
00:44:30,676 --> 00:44:32,776
to mean alpha erosion or alpha clip.

985
00:44:33,476 --> 00:44:34,876
It's the same sort of technique that,

986
00:44:35,357 --> 00:44:37,397
you know, I know that Bill mentioned it in his talk too.

987
00:44:38,057 --> 00:44:38,977
Same idea, different word.

988
00:44:40,545 --> 00:44:42,146
This is our blood alpha crush material

989
00:44:42,186 --> 00:44:43,767
in our in-house material editor.

990
00:44:44,567 --> 00:44:46,448
Importantly, with the way the tool set works,

991
00:44:47,429 --> 00:44:50,891
the scalar values over here are externalized

992
00:44:50,911 --> 00:44:52,012
into our particle system.

993
00:44:52,692 --> 00:44:56,875
And we can kind of control, we have a finet control

994
00:44:56,955 --> 00:44:58,476
over how much crush is out and where.

995
00:44:59,817 --> 00:45:02,959
So what you see here, it's a really simple shader.

996
00:45:02,999 --> 00:45:04,299
You know, we take the camera world position.

997
00:45:05,060 --> 00:45:08,181
and the world position where the blood is playing.

998
00:45:08,741 --> 00:45:10,602
We get the distance between those two,

999
00:45:10,622 --> 00:45:14,043
and then we just divide that by the distance

1000
00:45:14,063 --> 00:45:15,223
we want that to happen at.

1001
00:45:15,323 --> 00:45:17,104
So this is about 15 meters away.

1002
00:45:17,964 --> 00:45:20,145
And doing this with an interpolate between the...

1003
00:45:21,652 --> 00:45:23,333
the near alpha crush and the far alpha crush,

1004
00:45:23,353 --> 00:45:24,634
it means that I can control

1005
00:45:24,654 --> 00:45:27,977
how much is crushing out at a distance,

1006
00:45:28,017 --> 00:45:32,341
which means that I can have the blood look more,

1007
00:45:32,361 --> 00:45:34,663
I can get a bolder shape at a distance.

1008
00:45:35,224 --> 00:45:36,585
And that was really important for us

1009
00:45:36,625 --> 00:45:38,787
to get readable effects that read well far away

1010
00:45:39,027 --> 00:45:39,568
in the gameplay.

1011
00:45:40,966 --> 00:45:42,807
And this is kind of the final example of that.

1012
00:45:43,128 --> 00:45:45,289
So what we see here is one of our agents of mayhem.

1013
00:45:45,329 --> 00:45:47,491
His name is Hollywood, and he's shooting a bad guy

1014
00:45:47,511 --> 00:45:48,231
called a Hell Trooper.

1015
00:45:48,571 --> 00:45:50,193
And you can see the heavy use of Alpha Crush

1016
00:45:50,233 --> 00:45:50,993
on his muzzle flash.

1017
00:45:51,033 --> 00:45:52,794
So those are all just hand-painted textures,

1018
00:45:54,135 --> 00:45:56,257
as well as on the blood impact, which is also hand-painted.

1019
00:45:56,797 --> 00:45:59,379
And just like you'd see in these older stylized cartoons,

1020
00:45:59,980 --> 00:46:02,521
the textures kind of break apart rapidly and in succession.

1021
00:46:03,382 --> 00:46:05,423
And this later attempt at creating a stylized effect

1022
00:46:05,463 --> 00:46:07,325
was a lot more successful than our earlier attempts,

1023
00:46:07,365 --> 00:46:08,606
which relied heavily on flip books.

1024
00:46:09,772 --> 00:46:10,953
So our next pillar is vibrant.

1025
00:46:11,613 --> 00:46:12,254
So what does that mean?

1026
00:46:12,454 --> 00:46:13,996
What do we mean when we talk about vibrant effects?

1027
00:46:14,636 --> 00:46:16,458
And what does that look like in a stylized cartoon?

1028
00:46:16,898 --> 00:46:18,320
And how can we get a similar feeling

1029
00:46:18,340 --> 00:46:19,421
across in Agents of Mayhem?

1030
00:46:20,082 --> 00:46:21,443
We went back to our source material again

1031
00:46:21,643 --> 00:46:23,245
and looked at classical 80s cartoons

1032
00:46:23,265 --> 00:46:25,246
to find examples of vibrant cartoon animation.

1033
00:46:25,907 --> 00:46:27,809
And some of the commonalities we found with vibrancy

1034
00:46:27,849 --> 00:46:30,411
was that the animation had a strong, snappy sense of timing,

1035
00:46:30,892 --> 00:46:32,193
layers of depth and complexity,

1036
00:46:32,293 --> 00:46:34,235
as well as saturated and contrasted colors

1037
00:46:34,255 --> 00:46:34,996
to help draw the eye.

1038
00:46:36,721 --> 00:46:38,743
So with vibrant effects, color was one of the things

1039
00:46:38,783 --> 00:46:39,443
we focused on.

1040
00:46:39,783 --> 00:46:42,325
We intentionally used bold color palettes with our VFX

1041
00:46:42,365 --> 00:46:43,166
and Agents of Mayhem.

1042
00:46:43,947 --> 00:46:45,488
This is an example of one of our agents.

1043
00:46:45,528 --> 00:46:47,750
Her name is Fortune, firing off her cannonball ability.

1044
00:46:48,510 --> 00:46:50,932
We kept a lot of her effects in a more saturated range.

1045
00:46:51,252 --> 00:46:53,034
Generally speaking, we tried to keep the saturation

1046
00:46:53,074 --> 00:46:55,576
and emissive levels high for all of our agent abilities

1047
00:46:56,236 --> 00:46:57,857
to get them to pop out from the environment.

1048
00:46:58,598 --> 00:47:01,440
And this also helped to maintain the bright and vibrant tone

1049
00:47:01,480 --> 00:47:02,421
of our reference material.

1050
00:47:04,663 --> 00:47:06,924
So layering was another thing that we focused on

1051
00:47:07,524 --> 00:47:09,505
in constructing our vibrant effects for Agents of Mayhem.

1052
00:47:10,326 --> 00:47:12,467
And when I say layering, what I mean is breaking down

1053
00:47:12,527 --> 00:47:15,388
the explosion or particle system into smaller,

1054
00:47:16,028 --> 00:47:17,809
more digestible layers for you as the artist.

1055
00:47:18,550 --> 00:47:20,771
One of your layers might be your initial blast wave

1056
00:47:20,811 --> 00:47:23,532
that goes off when your explosion is first taking place.

1057
00:47:24,252 --> 00:47:27,334
It might be the fireball and the smoky after effect.

1058
00:47:27,973 --> 00:47:31,035
It might be, you know, like a secondary layer of sparks

1059
00:47:31,075 --> 00:47:33,255
that kind of happens after the effect goes off.

1060
00:47:33,996 --> 00:47:36,516
Or it might be energy that kind of comes in

1061
00:47:36,596 --> 00:47:39,017
as the effect is still building up and charging up.

1062
00:47:39,598 --> 00:47:40,958
And thinking about your effects in layers

1063
00:47:40,998 --> 00:47:43,959
is a great way for you as an artist to build your effect,

1064
00:47:43,999 --> 00:47:45,339
and also a great way for you as an artist

1065
00:47:45,460 --> 00:47:46,500
to deconstruct reference.

1066
00:47:47,300 --> 00:47:49,421
And layering feeds directly into timing.

1067
00:47:50,690 --> 00:47:52,911
So when you combine all these layers together, you get this.

1068
00:47:53,712 --> 00:47:56,053
And this doesn't look very good, and it doesn't really

1069
00:47:56,093 --> 00:47:58,114
meet our artistic expectations for vibrancy.

1070
00:47:58,674 --> 00:48:00,615
It could look a lot better with a timing pass.

1071
00:48:00,775 --> 00:48:02,256
And by timing pass, I mean thinking

1072
00:48:02,296 --> 00:48:04,957
about your animation principles, your 12 animation principles,

1073
00:48:05,037 --> 00:48:06,758
especially some of your principles

1074
00:48:06,798 --> 00:48:10,039
like anticipation or secondary action.

1075
00:48:10,840 --> 00:48:12,100
Our medium is a medium of motion,

1076
00:48:12,140 --> 00:48:13,401
so you need to be thinking about these things

1077
00:48:13,421 --> 00:48:14,461
when you're building your effects.

1078
00:48:15,429 --> 00:48:17,852
So before a timing pass, this kind of looked a little more jumbled,

1079
00:48:18,212 --> 00:48:19,534
but with some variation of start points,

1080
00:48:19,554 --> 00:48:23,358
you can kind of feel like energy is coming in and building up and then discharging,

1081
00:48:24,079 --> 00:48:25,761
and it draws your eye a lot more effectively.

1082
00:48:27,123 --> 00:48:28,885
Timing not only makes your effect more readable,

1083
00:48:28,945 --> 00:48:32,749
but it also delivers a more vibrant and impactful effect for the player.

1084
00:48:33,470 --> 00:48:36,574
And it also fits in with the vibrancy and snappiness of a retro cartoon reference.

1085
00:48:37,945 --> 00:48:39,225
So our last pillar is theatrical.

1086
00:48:39,945 --> 00:48:41,606
What does theatrical mean for us

1087
00:48:41,686 --> 00:48:43,486
in this 80s cartoon nostalgia game?

1088
00:48:44,206 --> 00:48:46,007
Is it the moment when Lion-O appears

1089
00:48:46,067 --> 00:48:47,367
in a magical teleporting pyramid?

1090
00:48:48,328 --> 00:48:50,848
Or is it the moment when the Autobots ship is attacked?

1091
00:48:51,689 --> 00:48:54,089
For us in VFX, it's all of those things.

1092
00:48:54,209 --> 00:48:56,550
Theatrical brings a dramatic element to the game.

1093
00:48:57,130 --> 00:48:58,871
We had to stay true to that in our visual effects.

1094
00:48:59,291 --> 00:49:00,951
We tried to carry over these dramatic moments

1095
00:49:01,011 --> 00:49:01,871
into Agents of Mayhem.

1096
00:49:03,010 --> 00:49:05,652
So why do we need theatrical moments in our stylized game?

1097
00:49:06,912 --> 00:49:09,294
We need theatrical moments, we felt it necessary

1098
00:49:09,534 --> 00:49:11,115
to deliver big moments to drive the narrative.

1099
00:49:11,875 --> 00:49:13,136
Much like in a stylized cartoon show,

1100
00:49:13,156 --> 00:49:15,597
this helps to finalize the moment when the players succeed.

1101
00:49:16,618 --> 00:49:18,579
Theatrical moments also help the player feel rewarded

1102
00:49:18,619 --> 00:49:20,320
and accomplished when they complete a mission.

1103
00:49:21,260 --> 00:49:23,981
And lastly, well, it's just fun to blow up stuff,

1104
00:49:24,182 --> 00:49:26,363
and it definitely fits in with the spirit of our reference.

1105
00:49:28,010 --> 00:49:29,971
So this was our first attempt at kind of delivering

1106
00:49:30,011 --> 00:49:31,132
a big scale cinematic.

1107
00:49:32,714 --> 00:49:34,675
And it required some additional passes and iteration.

1108
00:49:35,416 --> 00:49:38,258
This is a large spaceship, which we called a Hell Barge

1109
00:49:38,278 --> 00:49:39,179
for Agents of Mayhem.

1110
00:49:39,880 --> 00:49:42,302
We had difficulty lighting such a large set piece

1111
00:49:42,342 --> 00:49:44,043
and getting it to load in memory in real time.

1112
00:49:44,724 --> 00:49:46,205
Our first attempts didn't succeed in achieving

1113
00:49:46,225 --> 00:49:48,087
the quality we wanted, and it was certainly causing

1114
00:49:48,167 --> 00:49:49,648
massive performance problems for us.

1115
00:49:50,309 --> 00:49:52,250
The ship was the size of about 40 to 50 blocks,

1116
00:49:52,751 --> 00:49:54,312
so it was a huge technical problem

1117
00:49:54,772 --> 00:49:55,833
to get it loading in real time.

1118
00:49:55,853 --> 00:49:56,134
We had to...

1119
00:49:57,075 --> 00:50:01,117
take a second to re-approach it and to achieve the performance

1120
00:50:01,137 --> 00:50:02,918
and quality bars that we had set for ourselves.

1121
00:50:04,760 --> 00:50:06,100
So we decided to do some iteration.

1122
00:50:06,481 --> 00:50:08,082
We did another pass on the camera cuts

1123
00:50:08,142 --> 00:50:09,783
and simulated the destruction in RayFire,

1124
00:50:10,263 --> 00:50:13,365
which is the 3ds Max destruction plug-in we use at Volition.

1125
00:50:14,205 --> 00:50:15,926
Once we got the RayFire simulation loading

1126
00:50:15,946 --> 00:50:18,148
in the editor, we layered in particle effects

1127
00:50:18,248 --> 00:50:20,429
and used scripts to call them in our custom timeline tool.

1128
00:50:21,350 --> 00:50:23,171
The camera work and explosions had to be scripted,

1129
00:50:23,551 --> 00:50:25,472
using place keyframes to get them to go off

1130
00:50:25,492 --> 00:50:26,113
at the correct time.

1131
00:50:27,795 --> 00:50:28,876
This was our final result.

1132
00:50:29,517 --> 00:50:32,220
Eventually, we had to video capture the real-time effects

1133
00:50:32,240 --> 00:50:33,081
going off in Engine,

1134
00:50:33,561 --> 00:50:35,303
and then break it into a pre-rendered cinematic,

1135
00:50:36,044 --> 00:50:37,646
mostly due to performance constraints and memory.

1136
00:50:38,327 --> 00:50:39,568
It was way too expensive for us

1137
00:50:39,588 --> 00:50:40,630
to have this loaded in the world,

1138
00:50:40,650 --> 00:50:43,112
because this was just a unique one-off asset

1139
00:50:43,133 --> 00:50:43,893
for the cinematic,

1140
00:50:44,895 --> 00:50:47,458
and it definitely pushed us over our memory limit.

1141
00:50:48,203 --> 00:50:49,603
since we had to make a video of it anyway

1142
00:50:49,643 --> 00:50:50,544
for performance reasons.

1143
00:50:51,404 --> 00:50:53,285
This gave us a second chance to do

1144
00:50:53,665 --> 00:50:54,826
an After Effects pass on it

1145
00:50:55,206 --> 00:50:57,046
and layer in some additional electricity and glares.

1146
00:50:57,807 --> 00:50:59,848
Our final result was a lot better than our first attempts

1147
00:51:00,108 --> 00:51:02,329
at delivering theatrical destruction-focused moments.

1148
00:51:06,090 --> 00:51:08,111
So what did we learn from creating

1149
00:51:08,131 --> 00:51:11,012
an 80s cartoon nostalgia-style effects for Agents of Mayhem?

1150
00:51:12,153 --> 00:51:13,073
First, start with breaking down

1151
00:51:13,093 --> 00:51:14,194
your artistic source material.

1152
00:51:14,614 --> 00:51:15,674
Reference is gonna help you derive

1153
00:51:15,694 --> 00:51:16,815
a stronger vision for your game.

1154
00:51:17,728 --> 00:51:19,590
Your first iterations might not be very good,

1155
00:51:19,950 --> 00:51:21,291
and it might take you some time to figure out

1156
00:51:21,331 --> 00:51:23,273
how your VFX fit in with the rest of your art style.

1157
00:51:23,974 --> 00:51:24,594
If it doesn't look right,

1158
00:51:24,614 --> 00:51:26,015
don't be afraid to try something different.

1159
00:51:27,177 --> 00:51:28,618
And lastly, stick to your fundamentals.

1160
00:51:29,018 --> 00:51:31,941
Timing, layering, color, and a dramatic presentation

1161
00:51:31,981 --> 00:51:33,222
are going to make your game's art style

1162
00:51:33,242 --> 00:51:33,983
a lot more memorable.

1163
00:51:35,409 --> 00:51:37,650
And we should be ready for questions pretty soon.

1164
00:51:38,111 --> 00:51:40,092
Before we wrap up, I did want to put in a plug

1165
00:51:40,252 --> 00:51:42,814
for my coworker, James Taylor.

1166
00:51:42,834 --> 00:51:45,116
He's doing a talk in this room a half an hour

1167
00:51:45,216 --> 00:51:46,857
after this talk is over at 3.30.

1168
00:51:47,358 --> 00:51:50,160
He'll be talking about PBR and surfacing shaders

1169
00:51:50,200 --> 00:51:52,321
for stylized games like Agents of Mayhem.

1170
00:51:52,882 --> 00:51:53,783
And I hope you can make it.

1171
00:51:55,264 --> 00:51:55,484
Thanks.

1172
00:52:07,577 --> 00:52:10,819
If you have questions, feel free to come up to the microphones and ask.

1173
00:52:10,839 --> 00:52:15,082
I mean, we're totally ready for any questions you might have about stylized effects.

1174
00:52:17,522 --> 00:52:17,762
Hi.

1175
00:52:18,423 --> 00:52:21,984
This is for Bill.

1176
00:52:22,244 --> 00:52:24,345
You talked about sometimes creating the final frame

1177
00:52:24,365 --> 00:52:25,365
and working backwards.

1178
00:52:25,445 --> 00:52:27,466
And one of your examples was you did a fluid sim

1179
00:52:27,506 --> 00:52:30,507
of a big explosion, and then you somehow backwards

1180
00:52:30,587 --> 00:52:33,948
morphed that smoothly into a small core ball,

1181
00:52:34,348 --> 00:52:36,129
I assume in-engine with the material?

1182
00:52:36,749 --> 00:52:37,789
Or how did that actually work?

1183
00:52:37,809 --> 00:52:40,610
How did you reverse final frame to first frame

1184
00:52:41,050 --> 00:52:41,710
for that explosion?

1185
00:52:41,730 --> 00:52:42,231
Yeah.

1186
00:52:42,291 --> 00:52:45,172
Is this working?

1187
00:52:45,252 --> 00:52:46,672
In fact, we've got to turn it off.

1188
00:52:46,692 --> 00:52:46,732
Oh.

1189
00:52:47,219 --> 00:52:48,240
There you go, you can hear me now.

1190
00:52:49,141 --> 00:52:50,222
It's done in Maya.

1191
00:52:50,282 --> 00:52:51,823
I think Max has the same process.

1192
00:52:52,944 --> 00:52:56,668
You take all the frames that are baked from the fluid sim,

1193
00:52:57,348 --> 00:53:00,491
and that gives you your shapes, like your targets, right?

1194
00:53:00,511 --> 00:53:02,453
So you have sculpts of every frame of the animation.

1195
00:53:03,073 --> 00:53:05,916
And then in this specific example,

1196
00:53:06,056 --> 00:53:07,817
you have a big explosion at the end, right?

1197
00:53:07,877 --> 00:53:08,818
It's always expanding.

1198
00:53:09,318 --> 00:53:14,259
outwards. So then you can take that final frame and that shrink wrap that I was talking

1199
00:53:14,299 --> 00:53:19,220
about is projecting inwards and it's colliding with the previous frame. Does that make sense?

1200
00:53:20,020 --> 00:53:25,141
So frame 50 collides with frame 49 and it kind of adheres to the previous frame. And

1201
00:53:25,161 --> 00:53:30,742
you can duplicate that and go from 49 to 48 and you just keep shrinking in and it's like

1202
00:53:30,882 --> 00:53:35,243
– it's literally like a shrink wrap, right? Like you put a dryer to it and it shrinks

1203
00:53:35,283 --> 00:53:37,323
around it. Does that make sense? Does that answer your question?

1204
00:53:37,560 --> 00:53:40,441
And then are you exporting that into that texture vertex data?

1205
00:53:40,461 --> 00:53:44,062
Yeah, so I'm constantly shrink wrapping the same mesh,

1206
00:53:44,082 --> 00:53:46,143
because it keeps the same topology, and then duplicating it,

1207
00:53:46,243 --> 00:53:48,083
and then shrink wrapping it again.

1208
00:53:48,163 --> 00:53:50,804
So you end up with the same mesh in a sequence,

1209
00:53:51,184 --> 00:53:52,445
and then you bake that to the textures.

1210
00:53:52,845 --> 00:53:53,045
I see.

1211
00:53:53,065 --> 00:53:53,605
Does that make sense?

1212
00:53:53,745 --> 00:53:54,645
Yeah, that's great, thank you.

1213
00:53:54,845 --> 00:53:55,065
Thank you.

1214
00:54:02,397 --> 00:54:03,179
No more questions?

1215
00:54:03,379 --> 00:54:03,579
Cool.

1216
00:54:05,142 --> 00:54:05,523
Thanks a lot.

1217
00:54:06,023 --> 00:54:07,266
If you have any other questions, we'll be around

1218
00:54:07,386 --> 00:54:09,609
outside, so thanks, guys.

1219
00:54:09,790 --> 00:54:10,391
Yeah, thank you, everyone.

