1
00:00:06,723 --> 00:00:12,526
Alright, good afternoon and welcome. Quick reminder, as usual, please silence your cell

2
00:00:12,546 --> 00:00:16,328
phones. If you could please fill out the evaluation emails at the end, I'd very much

3
00:00:16,348 --> 00:00:20,831
appreciate that. Thank you all for coming. I realize it's, you know, 4 in the afternoon on

4
00:00:20,871 --> 00:00:24,753
Thursday. Hope you've all had your coffee. I'll try to keep things moving along at a

5
00:00:24,773 --> 00:00:30,375
brisk pace. So my name is Matthew Gallant and I work on combat design at Naughty Dog. To

6
00:00:30,395 --> 00:00:34,037
give you a little background about me, I'm from Montreal. I've worked in the game industry

7
00:00:34,057 --> 00:00:34,558
for about 7 years.

8
00:00:35,492 --> 00:00:40,935
and these are some of the games I've helped ship. I've worked on the combat design for

9
00:00:40,995 --> 00:00:45,657
the campaign mode in Starhawk. I did the combat design for the infected encounters in The

10
00:00:45,697 --> 00:00:50,639
Last of Us. And most recently, I was in charge of core combat design for Uncharted 4, Thief's

11
00:00:50,719 --> 00:00:55,401
End. So my talk today is going to go over what we learned during this game's development.

12
00:00:56,170 --> 00:00:57,832
In particular, I'm going to try to give you

13
00:00:57,852 --> 00:01:01,254
a sense of ideas roughly in the order that we tried them,

14
00:01:01,675 --> 00:01:04,197
with all the intermediate steps, like warts and all,

15
00:01:04,637 --> 00:01:06,459
to give you a sense of our own learning curve

16
00:01:06,499 --> 00:01:07,960
as we develop combat for the game.

17
00:01:09,021 --> 00:01:10,642
Today, I'm going to be discussing my own work,

18
00:01:11,122 --> 00:01:13,324
but also the hard work of everyone on the combat design

19
00:01:13,364 --> 00:01:14,545
and AI engineering teams.

20
00:01:14,945 --> 00:01:16,867
So I want to give a quick shout out to my teammates.

21
00:01:17,387 --> 00:01:18,748
I'm really glad to have an opportunity

22
00:01:18,908 --> 00:01:21,350
to shine a light on all of their hard work.

23
00:01:21,370 --> 00:01:22,932
Shout out as well to our effects artist, Nikki,

24
00:01:22,992 --> 00:01:24,253
who took this cool group photo.

25
00:01:25,405 --> 00:01:27,146
So this talk's going to be in two parts.

26
00:01:27,806 --> 00:01:29,186
In the first part, I'm going to start

27
00:01:29,226 --> 00:01:31,087
by talking about combat design in the first three

28
00:01:31,107 --> 00:01:31,787
Uncharted games.

29
00:01:32,687 --> 00:01:35,488
Then I'm going to move on to our design goals for Uncharted 4.

30
00:01:35,548 --> 00:01:37,809
What did we want to try that was new and different?

31
00:01:39,129 --> 00:01:41,650
I'm going to talk about our fundamental AI technology.

32
00:01:41,750 --> 00:01:43,950
What did we already have and what

33
00:01:43,970 --> 00:01:46,111
we were kind of building off to try to achieve those goals?

34
00:01:46,971 --> 00:01:48,152
And then I'm going to talk about some things

35
00:01:48,192 --> 00:01:50,252
we tried early in development that didn't work.

36
00:01:51,452 --> 00:01:53,753
Then in part two, I'm going to talk about the solutions

37
00:01:53,793 --> 00:01:54,673
we actually shipped with.

38
00:01:55,665 --> 00:01:59,406
I'm going to talk about some evergreen AI techniques, some things we've done for a few

39
00:01:59,426 --> 00:02:05,027
games now that have just always been really useful for us. Some limitations of our current

40
00:02:05,087 --> 00:02:09,128
system, things we'd like to improve on in the future. And then I'm going to close with some

41
00:02:09,188 --> 00:02:16,109
conclusions and takeaways. So Uncharted 4 is the fourth game in a series, obviously. So

42
00:02:16,129 --> 00:02:19,710
that meant we started development with certain assumptions regarding approaches to combat

43
00:02:19,730 --> 00:02:21,210
design that had worked well in the past.

44
00:02:22,105 --> 00:02:24,367
we inherited the engine from The Last of Us,

45
00:02:24,648 --> 00:02:26,469
which had just been overhauled to take advantage

46
00:02:26,509 --> 00:02:27,690
of the power of the PS4.

47
00:02:28,831 --> 00:02:30,252
So in the first three Uncharted games,

48
00:02:30,593 --> 00:02:33,295
the macro combat flow was very tightly authored.

49
00:02:33,935 --> 00:02:36,257
Designers relied heavily on zoning NPCs,

50
00:02:36,738 --> 00:02:38,079
limiting the area that they're allowed

51
00:02:38,099 --> 00:02:39,060
to move and fight from.

52
00:02:39,901 --> 00:02:41,882
So that green cylinder you see on screen,

53
00:02:42,202 --> 00:02:44,264
that's the debug display for an NPC's zone,

54
00:02:44,605 --> 00:02:46,906
and the NPC will only fight from that area.

55
00:02:47,837 --> 00:02:52,338
It was therefore up to the designer to identify key positions and strong areas in the layout,

56
00:02:52,718 --> 00:02:55,820
and to make sure that the NPCs could cover the player's progression through a fight.

57
00:02:57,220 --> 00:03:01,162
Zones also helped NPCs to spread out evenly across the entire combat front.

58
00:03:01,862 --> 00:03:05,083
Some NPCs can be zoned to the left, some to the middle, some to the right.

59
00:03:05,823 --> 00:03:09,845
This helped prevent the NPCs from clumping up, and it gave the appearance that they were

60
00:03:09,885 --> 00:03:11,085
using the space intelligently.

61
00:03:12,306 --> 00:03:14,206
So here's an example of a fight from Uncharted 2.

62
00:03:14,995 --> 00:03:19,476
I'm going to have the debug on so you'll see the NPC's zones show up as those giant cylinders

63
00:03:19,496 --> 00:03:19,936
in the world.

64
00:03:19,956 --> 00:03:21,996
Make sure that actually plays.

65
00:03:22,016 --> 00:03:22,396
Okay.

66
00:03:22,656 --> 00:03:26,857
So in this fight, there are several NPCs assigned to a zone that is centered on the player.

67
00:03:27,577 --> 00:03:30,318
And the zone actually moves around the player as they move.

68
00:03:31,238 --> 00:03:35,359
This type of zoning forces the enemies to charge the player and keeps the pressure up

69
00:03:35,439 --> 00:03:37,900
no matter where the player moves in this big room.

70
00:03:40,993 --> 00:03:44,895
Further back, we have two NPCs that are zoned to a large region around the staircase.

71
00:03:45,696 --> 00:03:46,656
They're guarding the exit.

72
00:03:47,657 --> 00:03:49,118
So this zoning does two things.

73
00:03:49,278 --> 00:03:52,420
Firstly, it helps establish a front for combat,

74
00:03:52,500 --> 00:03:54,421
kind of a consistent direction of threat.

75
00:03:55,402 --> 00:03:57,804
And secondly, it aids the player navigation

76
00:03:58,124 --> 00:04:02,046
if the last NPC they kill has them facing the exit to the next area.

77
00:04:04,868 --> 00:04:06,990
Finally, we have one sniper NPC assigned

78
00:04:07,030 --> 00:04:08,991
to a tiny zone at the top of the staircase.

79
00:04:09,680 --> 00:04:12,183
he's only allowed to fight from that specific position.

80
00:04:13,164 --> 00:04:15,446
The designer knew that this was the best sniping position,

81
00:04:15,726 --> 00:04:17,147
you know, it can see most of the map.

82
00:04:17,848 --> 00:04:19,930
So effectively, this zoning is baking

83
00:04:19,970 --> 00:04:22,172
the level designer's intention and knowledge

84
00:04:22,332 --> 00:04:23,393
into the combat scripting.

85
00:04:25,275 --> 00:04:27,197
Zone assignment doesn't always have to be static.

86
00:04:27,717 --> 00:04:30,480
Designers can also set an NPC zone dynamically in script,

87
00:04:30,920 --> 00:04:32,302
allowing them to change the zone

88
00:04:32,342 --> 00:04:33,423
based on the player's movement.

89
00:04:35,198 --> 00:04:37,519
So in this fight, the player is pinned down by a turret

90
00:04:37,759 --> 00:04:40,339
and can choose to flank it by advancing left or right.

91
00:04:43,800 --> 00:04:44,820
If the player goes left,

92
00:04:45,060 --> 00:04:47,701
then the NPC with the purple zone stays on the balcony.

93
00:04:48,281 --> 00:04:50,201
And this sets up the player to shoot him from cover.

94
00:04:53,202 --> 00:04:54,642
However, if the player goes right,

95
00:04:55,042 --> 00:04:57,743
then that same purple NPC is assigned to a different zone.

96
00:04:58,683 --> 00:05:01,023
He jumps down and takes cover on that electrical box.

97
00:05:01,664 --> 00:05:03,924
And this sets up the player for a cool propane tank kill.

98
00:05:07,909 --> 00:05:12,653
So this is a really great fight, but it shows that the combat designer had to micromanage

99
00:05:12,733 --> 00:05:15,655
exactly where the NPCs would move based on the player's movement.

100
00:05:16,236 --> 00:05:17,577
That's a lot of manual scripting.

101
00:05:19,619 --> 00:05:22,862
So we can also assign new zones to NPCs as a fight progresses.

102
00:05:24,503 --> 00:05:29,387
In this fight, the NPCs in the back are scripted to move up and advance on the player when

103
00:05:29,407 --> 00:05:30,588
the armored shotgunner dies.

104
00:05:31,809 --> 00:05:34,992
This improves the pacing of the fight and keeps the pressure on the player.

105
00:05:39,512 --> 00:05:41,773
So these tightly authored approaches to combat design

106
00:05:41,813 --> 00:05:44,134
worked really well for those previous Uncharted games.

107
00:05:44,774 --> 00:05:46,615
However, we knew we wanted to try some new things

108
00:05:46,655 --> 00:05:50,336
in Uncharted 4, and that might make us want to re-evaluate

109
00:05:50,356 --> 00:05:51,857
some of our approaches to combat design.

110
00:05:53,237 --> 00:05:57,279
Whereas the previous games were fairly linear in general,

111
00:05:57,719 --> 00:06:00,280
we wanted to explore much larger layouts in Uncharted 4.

112
00:06:01,340 --> 00:06:03,141
This is a screenshot from Madagascar,

113
00:06:03,381 --> 00:06:05,682
which had these massive vehicle-scale spaces

114
00:06:05,902 --> 00:06:07,343
that you could approach from any angle.

115
00:06:08,477 --> 00:06:10,118
It's not quite an open-world game.

116
00:06:10,218 --> 00:06:11,779
We referred to it as wide linear.

117
00:06:12,599 --> 00:06:14,180
And our scripted approach to combat design

118
00:06:14,220 --> 00:06:15,801
would struggle to account for all the ways

119
00:06:15,821 --> 00:06:17,122
that the player could approach this fight.

120
00:06:19,343 --> 00:06:20,784
Nathan Drake's climbing ability is

121
00:06:20,824 --> 00:06:22,885
one of the things that makes the Uncharted series unique.

122
00:06:23,425 --> 00:06:26,407
We really wanted to push that aspect further in Uncharted 4

123
00:06:26,687 --> 00:06:28,448
and give the player lots of opportunities

124
00:06:28,488 --> 00:06:29,628
to climb during combat.

125
00:06:30,629 --> 00:06:33,410
Of course, that meant having these vertical combat spaces

126
00:06:33,751 --> 00:06:36,492
requires NPCs that can reason well in three dimensions.

127
00:06:38,274 --> 00:06:40,056
Another new feature was skippable combat,

128
00:06:40,376 --> 00:06:42,758
which means that you can leave some combat spaces in stealth

129
00:06:43,098 --> 00:06:45,360
without killing any or all of the enemies behind you.

130
00:06:46,401 --> 00:06:48,122
This isn't a new feature in games,

131
00:06:48,442 --> 00:06:50,184
but it was kind of new to the Uncharted series.

132
00:06:51,405 --> 00:06:52,866
From a design perspective, this meant

133
00:06:52,886 --> 00:06:55,348
that we had to come up with all sorts of interesting mechanics

134
00:06:55,848 --> 00:06:58,070
so the player couldn't escape these encounters trivially.

135
00:06:58,871 --> 00:07:00,552
And from the AI perspective, this

136
00:07:00,592 --> 00:07:03,654
made it even more important to identify important positions,

137
00:07:04,135 --> 00:07:04,715
like the exit.

138
00:07:06,716 --> 00:07:08,776
We also wanted to support a full stealth loop.

139
00:07:09,497 --> 00:07:12,677
In previous Uncharted games, this usually only went one way.

140
00:07:13,337 --> 00:07:15,258
Combat started once the player broke stealth,

141
00:07:15,598 --> 00:07:17,798
and the player could never go back to fully sneaking.

142
00:07:19,119 --> 00:07:21,119
In Uncharted 4, we wanted to give the player

143
00:07:21,159 --> 00:07:23,820
the opportunity to break line of sight and regain stealth,

144
00:07:24,420 --> 00:07:26,140
forcing the enemies into search behaviors.

145
00:07:26,961 --> 00:07:28,781
Fortunately, we had some experience with this loop

146
00:07:28,801 --> 00:07:29,521
from The Last of Us.

147
00:07:31,662 --> 00:07:33,642
NPCs are fairly expensive in our engine.

148
00:07:33,922 --> 00:07:36,463
We've always had a tight limit on how many you can spawn at once.

149
00:07:37,410 --> 00:07:42,233
Next-gen hardware meant that we could double our maximum count from the PS3, going from

150
00:07:42,894 --> 00:07:49,017
8 to 16. So we wanted to take advantage of that. Of course, having this many NPCs meant

151
00:07:49,037 --> 00:07:55,081
that it was incumbent on us to give them all somewhere to go and something to do. We also

152
00:07:55,101 --> 00:07:57,902
had the minor goal of reducing the overhead for combat design.

153
00:07:58,728 --> 00:08:00,489
Hand-authoring every combat setup

154
00:08:00,529 --> 00:08:02,050
was a work-intensive process.

155
00:08:02,930 --> 00:08:04,651
And it was also fairly error-prone.

156
00:08:04,971 --> 00:08:07,333
If the player did something that the designer didn't expect,

157
00:08:07,753 --> 00:08:09,954
then the scripting might fail to respond accordingly.

158
00:08:10,835 --> 00:08:13,316
So we wondered, could we reduce the amount of scripting

159
00:08:13,376 --> 00:08:14,216
required for combat?

160
00:08:16,258 --> 00:08:18,519
So with these goals for Uncharted 4 in mind,

161
00:08:18,939 --> 00:08:21,500
I want to give you a brief summary of our existing AI tech.

162
00:08:22,121 --> 00:08:23,321
This should give you an idea of what

163
00:08:23,361 --> 00:08:25,543
we were working with to try to achieve those goals.

164
00:08:26,977 --> 00:08:28,658
So I'm going to give you the quick version,

165
00:08:28,938 --> 00:08:30,759
but if you want a really in-depth look,

166
00:08:30,859 --> 00:08:33,540
I recommend listening to Travis McIntosh's GDC talk

167
00:08:33,560 --> 00:08:33,680
from 2014.

168
00:08:35,622 --> 00:08:37,803
It's called The Last of Us Human Enemy AI.

169
00:08:38,303 --> 00:08:39,264
It's free to watch online.

170
00:08:39,284 --> 00:08:40,244
You can just Google for it.

171
00:08:40,905 --> 00:08:43,106
A lot of what I'll be saying in the next couple slides

172
00:08:43,366 --> 00:08:45,587
is really just a more in-depth, it's

173
00:08:45,607 --> 00:08:47,308
covered in much more depth in his talk.

174
00:08:47,328 --> 00:08:52,171
I see a few people photographing that, so I'll let them do that.

175
00:08:54,033 --> 00:08:57,314
So skills and behaviors are the building blocks of our AI.

176
00:08:58,354 --> 00:09:01,435
Skills are a prioritized list of high-level concepts

177
00:09:01,535 --> 00:09:03,636
like panic, combat, melee.

178
00:09:04,496 --> 00:09:06,376
Each skill determines internally whether it

179
00:09:06,416 --> 00:09:09,597
wants to be on or off, and then the highest priority skill

180
00:09:09,637 --> 00:09:10,297
takes control.

181
00:09:11,297 --> 00:09:13,398
Each skill also has a state machine inside of it.

182
00:09:13,998 --> 00:09:16,919
For instance, combat skill has an open combat state

183
00:09:17,279 --> 00:09:18,459
and a cover combat state.

184
00:09:18,999 --> 00:09:20,260
The same skill handles both.

185
00:09:22,080 --> 00:09:23,300
When a skill makes a decision.

186
00:09:23,720 --> 00:09:25,720
It pushes behaviors onto a stack.

187
00:09:26,500 --> 00:09:28,821
Behaviors are reusable low-level components,

188
00:09:28,881 --> 00:09:31,282
such as move to a point or shoot from cover.

189
00:09:32,142 --> 00:09:33,842
Behaviors are then the interface

190
00:09:33,862 --> 00:09:35,183
with the locomotion controller

191
00:09:35,423 --> 00:09:37,123
that actually moves the NPC around

192
00:09:37,243 --> 00:09:38,704
and interfaces with the animations.

193
00:09:40,364 --> 00:09:43,665
Now we'll go over the level markup we had for the NPCs.

194
00:09:44,485 --> 00:09:46,486
So here's a combat layout as the player would see it.

195
00:09:47,526 --> 00:09:48,567
And here's our nav mesh.

196
00:09:49,166 --> 00:09:51,328
NavMesh is hand placed by the level designers,

197
00:09:51,748 --> 00:09:54,751
and it defines where the NPCs can stand and run

198
00:09:54,791 --> 00:09:56,652
and just do normal traversal across.

199
00:09:57,993 --> 00:10:00,476
You can also see some special green NavMesh polys

200
00:10:00,516 --> 00:10:01,416
in the bottom left corner.

201
00:10:02,097 --> 00:10:05,099
That's Stealth Grass, a mechanic we added in Uncharted 4

202
00:10:05,179 --> 00:10:06,721
to help the player hide from enemies.

203
00:10:07,621 --> 00:10:10,164
We wanted the NPCs to be able to take the grass into account

204
00:10:10,244 --> 00:10:12,606
when navigating, either intentionally avoiding it

205
00:10:12,846 --> 00:10:15,228
or intentionally moving through it and searching it.

206
00:10:16,765 --> 00:10:23,108
Traversal action packs, or TAPs, allow the NPCs to traverse using special animations.

207
00:10:23,768 --> 00:10:28,670
These include jumping up and down, jumping across a gap, vaulting over cover, stuff like that.

208
00:10:29,470 --> 00:10:33,571
So TAP animations are authored with an intro, a loop, and an exit.

209
00:10:34,012 --> 00:10:36,813
And this allows them to be placed with flexible heights and lengths.

210
00:10:39,034 --> 00:10:43,715
NavLedges are a new markup for Uncharted 4 that indicate connectivity between climb edges.

211
00:10:44,724 --> 00:10:46,405
This is really cool new tech that

212
00:10:46,425 --> 00:10:48,587
allowed the NPCs to leverage some of the player's

213
00:10:48,627 --> 00:10:49,528
climbing animations.

214
00:10:50,869 --> 00:10:53,251
Unfortunately, it was mostly for the buddy NPCs

215
00:10:53,291 --> 00:10:54,772
to allow them to climb with the player.

216
00:10:55,413 --> 00:10:57,414
The enemy NPCs generally didn't climb

217
00:10:57,475 --> 00:11:00,097
unless we had a really compelling layout reason

218
00:11:00,137 --> 00:11:00,777
to let them do it.

219
00:11:02,539 --> 00:11:05,081
So our engine takes all of this hand-placed markup

220
00:11:05,181 --> 00:11:07,122
and automatically generates these posts.

221
00:11:07,863 --> 00:11:09,765
Posts are discrete points in the world

222
00:11:09,805 --> 00:11:11,406
that the AI are going to evaluate.

223
00:11:12,207 --> 00:11:13,528
They're going to use to evaluate.

224
00:11:13,988 --> 00:11:14,168
Sorry.

225
00:11:14,880 --> 00:11:19,361
they are going to evaluate to determine where they want to fight from. So in this

226
00:11:19,381 --> 00:11:25,504
screenshot you can see several different types of posts. Green is an open post. Orange is a

227
00:11:25,584 --> 00:11:30,826
cover post. There's a couple of them kind of back on the right. Teal is a perch post. You can

228
00:11:30,846 --> 00:11:36,568
see those on the edges of the cliffs. And purple is a climb post. Those climb posts are

229
00:11:36,608 --> 00:11:42,450
mostly for the buddies. So skills use post selectors to choose the best position to

230
00:11:42,490 --> 00:11:42,850
fight from.

231
00:11:43,601 --> 00:11:48,743
Post selectors basically give a score to each post based on various criteria. Then they

232
00:11:48,783 --> 00:11:53,905
select the post with the best score. These criteria can include can the post see the

233
00:11:53,945 --> 00:11:58,927
player, what's the NPC's path distance to the post, is the post in the NPC's zone, etc.

234
00:12:00,007 --> 00:12:05,170
Some selectors reject posts entirely, others are more fine grained and they give the post

235
00:12:05,230 --> 00:12:09,451
a score between zero and one. And then all those scores get multiplied together to create

236
00:12:09,491 --> 00:12:13,293
the final value. So here's an example of post selection in action.

237
00:12:15,022 --> 00:12:21,025
So here's an NPC, he's in cover, he's shooting at the player, and then he decides he wants to

238
00:12:21,065 --> 00:12:27,809
advance on the player. So why did he pick that position to advance to? So if we zoom in here,

239
00:12:27,829 --> 00:12:32,311
the text is probably still too small to read, but these posts are all green because they're

240
00:12:32,351 --> 00:12:37,414
scored very highly for the, uh, advance skill. Like they're close to the NPC, they've got

241
00:12:37,454 --> 00:12:42,076
the target lined up just as they want it. Uh, actually the reason that leftmost post won

242
00:12:42,176 --> 00:12:44,217
out and was actually selected.

243
00:12:44,708 --> 00:12:48,812
is that this NPC is a rifleman, and riflemen like to be a little further away from the target.

244
00:12:49,152 --> 00:12:53,356
So that left most post was the chosen post and was the most ideal of this kind of set of

245
00:12:53,476 --> 00:12:59,381
really good options for advancing. Then as we move over to the right here, we'll see a

246
00:12:59,401 --> 00:13:03,725
bunch of posts that were technically acceptable for the advanced skill, but they were rated

247
00:13:03,845 --> 00:13:08,949
really low. Uh, they're really close to the target, they're really far away from the NPC,

248
00:13:08,969 --> 00:13:11,471
uh, they're much closer than a rifleman would want to be.

249
00:13:12,163 --> 00:13:16,504
So these are technically acceptable posts for the advanced skill, but they won't be chosen

250
00:13:16,524 --> 00:13:22,526
because obviously there's much better candidates out there. Then as we zoom out, we can see

251
00:13:22,566 --> 00:13:28,308
some posts that were just rejected entirely. They effectively have a score of zero. So

252
00:13:28,348 --> 00:13:32,790
these include things like covers that are facing the wrong way or covers that can't see

253
00:13:32,810 --> 00:13:37,352
the target. This NPC is advancing, so we don't want to pick covers that are behind the

254
00:13:37,432 --> 00:13:38,892
NPC. He's advancing.

255
00:13:39,704 --> 00:13:44,168
So all these posts just got rejected entirely at some point in the post selection process.

256
00:13:44,428 --> 00:13:48,632
And it's actually really useful to have post selectors that are just this course. They can

257
00:13:48,652 --> 00:13:54,117
just accept or reject things. It's conceptually much easier to write them and uh they really

258
00:13:54,337 --> 00:14:00,443
kind of let you narrow down on exactly the kind of posts you want. So this NPC reaches his

259
00:14:00,483 --> 00:14:03,566
post and then he's going to keep fighting from cover and he's good to go.

260
00:14:06,727 --> 00:14:08,188
Okay, so here's the fun part.

261
00:14:08,508 --> 00:14:10,329
Here's some things we tried early in development

262
00:14:10,529 --> 00:14:11,129
that didn't work.

263
00:14:12,870 --> 00:14:15,330
So here we've got an NPC that's been assigned to a zone

264
00:14:15,370 --> 00:14:16,671
that covers this ruined building.

265
00:14:17,651 --> 00:14:19,112
It's the sort of thing we did all the time

266
00:14:19,132 --> 00:14:20,372
in the previous Uncharted games.

267
00:14:21,413 --> 00:14:23,954
It's not obvious, but this NPC's standing in the open

268
00:14:24,134 --> 00:14:26,094
because he's actually completely broken at the moment.

269
00:14:26,835 --> 00:14:27,295
Why is that?

270
00:14:29,896 --> 00:14:31,676
Well, this NPC's in combat skill,

271
00:14:32,217 --> 00:14:33,997
and combat skill does post-selection

272
00:14:34,117 --> 00:14:35,258
around the target's position.

273
00:14:35,861 --> 00:14:42,006
target being the player. However, in this massive layout, the player is really far away.

274
00:14:42,586 --> 00:14:47,750
And for performance reasons, NPCs can't do post selection across the entire layout. The

275
00:14:47,790 --> 00:14:53,114
post selector is limited to a 25 meter radius roughly centered on the target. The post

276
00:14:53,134 --> 00:14:57,518
selector checked every single post and declared them all invalid because they're outside

277
00:14:57,558 --> 00:15:03,622
of the NPC's zone. Without a post, the NPC doesn't know how to move or what to do. So

278
00:15:03,662 --> 00:15:05,043
it just defaults to just standing there.

279
00:15:06,610 --> 00:15:11,452
Now obviously this isn't a terribly difficult problem to fix from a technical perspective,

280
00:15:12,353 --> 00:15:14,794
but it does reveal a pretty fundamental design flaw.

281
00:15:15,154 --> 00:15:19,155
We have a mismatch between our scripted zoning and our systemic post-selection.

282
00:15:21,216 --> 00:15:26,618
So if we can't use zones in these large layouts, we'll need a new system to help the NPCs spread

283
00:15:26,718 --> 00:15:28,599
out and intelligently occupy space.

284
00:15:30,195 --> 00:15:32,016
We want them to spread out horizontally,

285
00:15:32,396 --> 00:15:33,737
like across the combat front.

286
00:15:34,197 --> 00:15:35,977
And we also want them to have layers of depth.

287
00:15:36,318 --> 00:15:39,379
We want NPCs at short range, mid range, long range, et cetera.

288
00:15:41,599 --> 00:15:44,160
Our first naive attempt at doing this without zones

289
00:15:44,440 --> 00:15:46,781
was to strongly enforce the desired weapon

290
00:15:46,821 --> 00:15:49,122
range in the post selector, really enforcing

291
00:15:49,162 --> 00:15:51,083
that the pistols have to be at short range,

292
00:15:51,123 --> 00:15:52,683
the rifles have to be at mid range.

293
00:15:53,604 --> 00:15:55,504
We hoped that this simplistic logic

294
00:15:55,524 --> 00:15:57,905
would be sufficient to avoid the NPCs clumping up.

295
00:15:59,770 --> 00:16:04,531
Unfortunately, trying to keep NPCs at their ideal weapon range can make them extremely

296
00:16:04,611 --> 00:16:05,131
unstable.

297
00:16:06,392 --> 00:16:11,573
The player can move very quickly in Uncharted, so the distance to the target is constantly

298
00:16:11,633 --> 00:16:12,013
changing.

299
00:16:13,434 --> 00:16:18,615
These NPCs can never settle into combat positions, because their desired weapon range is always

300
00:16:18,695 --> 00:16:19,715
telling them to reposition.

301
00:16:24,619 --> 00:16:27,200
So this naive approach was a blunt instrument.

302
00:16:27,701 --> 00:16:29,902
If we wanted to evaluate good combat positions,

303
00:16:30,242 --> 00:16:33,283
our approach would have to be much more nuanced and complex.

304
00:16:35,244 --> 00:16:36,565
So we started trying some more

305
00:16:36,585 --> 00:16:38,045
of these sophisticated approaches.

306
00:16:38,406 --> 00:16:40,046
Again, trying to move away from the idea

307
00:16:40,066 --> 00:16:42,968
of having to rely on these scripted zones all the time.

308
00:16:43,568 --> 00:16:45,029
We wanted to see if we could identify

309
00:16:45,129 --> 00:16:47,170
strong areas in the layout programmatically.

310
00:16:48,530 --> 00:16:50,671
So we tried two approaches for this evaluation,

311
00:16:51,251 --> 00:16:52,612
connectivity and vantage.

312
00:16:54,192 --> 00:16:55,933
We already have the navmesh markup

313
00:16:55,953 --> 00:16:57,314
that the AI used to navigate.

314
00:16:58,094 --> 00:17:00,556
And we can use that to generate a map of the layout's

315
00:17:00,596 --> 00:17:01,277
connectivity.

316
00:17:02,338 --> 00:17:05,019
Could we use that information to identify relevant features,

317
00:17:05,400 --> 00:17:07,501
stuff like pinch points and doorways?

318
00:17:08,722 --> 00:17:11,104
If the player is in a building, could we send an NPC

319
00:17:11,124 --> 00:17:12,585
to cover each one of the exits?

320
00:17:13,986 --> 00:17:16,268
Unfortunately, when we started running this logic

321
00:17:16,328 --> 00:17:18,469
on more of our layouts, we found that connectivity

322
00:17:18,509 --> 00:17:20,711
couldn't consistently produce useful information.

323
00:17:22,265 --> 00:17:26,928
While it could handle manmade structures pretty well, like houses, connectivity struggled

324
00:17:26,968 --> 00:17:31,011
to detect anything useful when we ran it on big organic spaces like this one.

325
00:17:32,312 --> 00:17:33,172
That slide's really dark.

326
00:17:34,633 --> 00:17:37,575
It also struggled in our wider vehicle-scale spaces.

327
00:17:38,336 --> 00:17:41,978
There just aren't enough important nodes on this spiderweb of connectivity.

328
00:17:43,319 --> 00:17:47,882
So connectivity was an interesting idea, and it might have worked pretty well in our previous

329
00:17:47,922 --> 00:17:51,724
game, The Last of Us, because its layouts were generally tighter and narrower.

330
00:17:52,522 --> 00:17:53,983
but it wasn't a good fit for Uncharted.

331
00:17:55,684 --> 00:17:58,286
Vantage was another kind of programmatic evaluation,

332
00:17:58,846 --> 00:18:01,628
and we developed it to try to fix a problem with watchtowers.

333
00:18:02,448 --> 00:18:04,449
Let's say we designed a layout with a watchtower,

334
00:18:04,910 --> 00:18:06,931
and we put a sniper up there to shoot at the player.

335
00:18:08,031 --> 00:18:10,333
If the player took cover, then the sniper NPC

336
00:18:10,353 --> 00:18:12,354
would determine, I can't see my target.

337
00:18:12,394 --> 00:18:13,234
I need to reposition.

338
00:18:14,095 --> 00:18:17,077
But in repositioning, he would jump down off the tower.

339
00:18:18,297 --> 00:18:18,818
That's terrible.

340
00:18:19,410 --> 00:18:22,651
So we needed some way to make the NPCs prefer elevated positions,

341
00:18:22,931 --> 00:18:25,472
even if those positions can't currently see the target.

342
00:18:26,433 --> 00:18:30,214
To do this, we tried to evaluate combat positions using this concept of vantage.

343
00:18:31,394 --> 00:18:34,355
So in this screenshot, you can see the player in cover on the right,

344
00:18:35,155 --> 00:18:37,456
and a strong elevated position on the left.

345
00:18:38,256 --> 00:18:40,457
How could we make NPCs like that position,

346
00:18:41,197 --> 00:18:43,118
even though it can't currently see the target?

347
00:18:44,723 --> 00:18:47,946
So to evaluate Vantage, we gathered all the NavMesh polys

348
00:18:48,066 --> 00:18:49,687
in a small radius around the player.

349
00:18:50,588 --> 00:18:51,909
The borders are a little uneven

350
00:18:52,009 --> 00:18:53,451
because of the NavMesh triangulation,

351
00:18:53,831 --> 00:18:55,813
but this orange area roughly represents

352
00:18:55,853 --> 00:18:58,555
where the player could move in about three seconds of movement.

353
00:19:00,337 --> 00:19:03,199
Vantage does a raycast to each of these positions

354
00:19:03,580 --> 00:19:06,302
and counts how many of them a given position can see.

355
00:19:07,143 --> 00:19:09,325
So in this screenshot, green raycasts are clear

356
00:19:09,785 --> 00:19:11,246
and red raycasts are blocked.

357
00:19:12,780 --> 00:19:15,021
You can see that the elevated position on the left

358
00:19:15,322 --> 00:19:18,204
has clear line of sight to more positions around the player

359
00:19:18,624 --> 00:19:21,726
versus the other lower position being tested in the top left.

360
00:19:22,727 --> 00:19:24,208
This means that the elevated position

361
00:19:24,248 --> 00:19:25,830
would have a higher vantage score,

362
00:19:26,250 --> 00:19:27,651
and the MVCs would thus prefer it.

363
00:19:29,672 --> 00:19:31,714
So we tried these two programmatic approaches

364
00:19:31,774 --> 00:19:33,575
to identifying strong layout positions,

365
00:19:34,336 --> 00:19:36,838
but they kind of both had the same fundamental problems.

366
00:19:38,279 --> 00:19:40,401
Firstly, they couldn't consistently produce

367
00:19:40,441 --> 00:19:41,681
good results in every layout.

368
00:19:42,612 --> 00:19:44,832
We have a pretty big variety of layouts in Uncharted 4.

369
00:19:45,812 --> 00:19:47,813
We could tune these algorithms to work well in one,

370
00:19:48,493 --> 00:19:50,814
but then those same tuning values would just totally fail

371
00:19:50,854 --> 00:19:51,874
in another kind of layout.

372
00:19:52,674 --> 00:19:54,995
And then we'd maybe retune there and go back and forth.

373
00:19:55,035 --> 00:19:57,256
It just never worked consistently everywhere.

374
00:19:58,856 --> 00:20:00,817
More fundamentally, we were making the mistake

375
00:20:00,857 --> 00:20:03,337
of trying to reverse engineer high-level decision-making.

376
00:20:04,178 --> 00:20:06,518
The level designer had already created a level

377
00:20:06,658 --> 00:20:07,659
with combat in mind,

378
00:20:08,279 --> 00:20:10,680
and had purposefully designed certain areas to be strong.

379
00:20:11,403 --> 00:20:15,627
We were then throwing out that knowledge to try to achieve the same results programmatically.

380
00:20:16,548 --> 00:20:20,192
Wouldn't it be smarter to bake the level designer's intention right into the layout?

381
00:20:22,054 --> 00:20:29,080
Programmatic evaluation also limited the designer's ability to make each encounter feel unique.

382
00:20:29,881 --> 00:20:34,606
If the NPCs fight the same way in every layout, then we run the risk of every encounter feeling

383
00:20:34,646 --> 00:20:35,006
the same.

384
00:20:35,960 --> 00:20:38,520
The designers need more control, more knobs,

385
00:20:38,960 --> 00:20:41,341
if they're going to craft setups that feel truly unique.

386
00:20:43,361 --> 00:20:44,942
So I'm gonna come back to all of those issues

387
00:20:44,982 --> 00:20:45,862
in the next section,

388
00:20:46,262 --> 00:20:47,943
but for now I'm going to move on to search.

389
00:20:49,483 --> 00:20:51,323
So I mentioned earlier that one of our goals

390
00:20:51,343 --> 00:20:53,544
for Uncharted 4 was to allow the player

391
00:20:53,564 --> 00:20:55,544
to re-enter stealth from combat.

392
00:20:56,405 --> 00:20:58,985
To do this, we needed to develop a new skill

393
00:20:59,205 --> 00:21:00,866
to make the NPCs search for the player

394
00:21:01,146 --> 00:21:02,106
after they'd snuck away.

395
00:21:03,888 --> 00:21:06,049
So our first version of this skill used heat

396
00:21:06,330 --> 00:21:09,272
to represent how recently an NPC had cleared an area.

397
00:21:10,012 --> 00:21:11,714
The initial heat was seeded

398
00:21:11,754 --> 00:21:13,295
from the player's last known location.

399
00:21:14,416 --> 00:21:16,277
Areas would heat up when unseen,

400
00:21:16,617 --> 00:21:18,258
and the NPCs would cool them off again

401
00:21:18,318 --> 00:21:19,659
by clearing them out with their vision.

402
00:21:20,700 --> 00:21:21,861
So you can see in this screenshot

403
00:21:21,901 --> 00:21:24,523
that pink means hot and blue means cool,

404
00:21:25,263 --> 00:21:25,924
just like real life.

405
00:21:25,944 --> 00:21:28,506
So I'm gonna let this play out for a little bit.

406
00:21:42,397 --> 00:21:47,122
So you can kind of get a sense of the loop here. The NPC picks a hot position that's nearby,

407
00:21:48,223 --> 00:21:53,568
goes and clears it out. Once they've cleared that out, they pick the next nearby hot

408
00:21:53,608 --> 00:22:00,055
position. NPC just faked us all out and went off camera. Then he decides he wants to check

409
00:22:00,075 --> 00:22:00,996
on top of that plateau.

410
00:22:03,811 --> 00:22:05,952
So the heap-based search looks pretty cool

411
00:22:05,972 --> 00:22:08,672
with the debug tools on, because from this perspective,

412
00:22:08,972 --> 00:22:11,153
it's easy to understand why the NPC

413
00:22:11,193 --> 00:22:12,613
is choosing these points to move to.

414
00:22:13,714 --> 00:22:15,874
But it's quite different when you experience this behavior

415
00:22:15,914 --> 00:22:17,234
from the player's perspective.

416
00:22:18,875 --> 00:22:21,075
So heat search has three main problems.

417
00:22:22,236 --> 00:22:24,976
In heap-based search, NPCs change directions

418
00:22:25,077 --> 00:22:26,137
in unpredictable ways.

419
00:22:26,997 --> 00:22:28,878
Without seeing that heat information,

420
00:22:29,198 --> 00:22:31,258
it's really impossible to find a pattern

421
00:22:31,298 --> 00:22:32,298
in the NPC's movement.

422
00:22:33,117 --> 00:22:35,078
There's no consistent line of motion.

423
00:22:35,598 --> 00:22:36,499
Doesn't look very human.

424
00:22:37,640 --> 00:22:40,902
And it feels really bad as the player

425
00:22:41,143 --> 00:22:42,944
when the NPC you're about to stealth kill

426
00:22:42,984 --> 00:22:44,565
just turns around and busts you.

427
00:22:45,486 --> 00:22:48,228
If the player can't predict where an NPC might move next,

428
00:22:48,708 --> 00:22:50,930
then the player can't plan their approach in stealth.

429
00:22:51,850 --> 00:22:54,673
It robs the player of the ability to do clever things.

430
00:22:56,974 --> 00:22:59,336
Secondly, heap-based search does a poor job

431
00:22:59,376 --> 00:23:00,777
of spreading out the NPCs.

432
00:23:01,537 --> 00:23:04,800
They tend to bunch up, going after the same clusters of hot nodes.

433
00:23:05,841 --> 00:23:09,764
If all the NPCs are searching in one area, then the player can just hang out in another

434
00:23:09,844 --> 00:23:11,846
area without feeling any pressure.

435
00:23:13,727 --> 00:23:18,171
Thirdly, it tends to pull the NPCs towards the nooks and crannies on the outside of the

436
00:23:18,191 --> 00:23:18,871
combat space.

437
00:23:19,792 --> 00:23:23,775
If there's a little pocket out there that can't be seen, heat's going to accumulate

438
00:23:23,835 --> 00:23:26,518
in there and eventually draw an NPC to go check it out.

439
00:23:27,568 --> 00:23:30,531
we'd much rather keep the NPCs near the center of the map,

440
00:23:30,971 --> 00:23:33,733
near the strategically important positions, like the exit.

441
00:23:35,735 --> 00:23:38,558
So all of these symptoms come from the same really

442
00:23:38,758 --> 00:23:42,061
fundamental problem, which is that we designed search skill

443
00:23:42,161 --> 00:23:45,664
based on the perspective of the NPCs searching for the player.

444
00:23:47,125 --> 00:23:49,087
Counterintuitively, that was completely wrong.

445
00:23:49,908 --> 00:23:52,130
And again, I'll explain why that is in the next section.

446
00:23:53,819 --> 00:23:59,262
So if we think about authored and systemic as two ends of a spectrum, we came into Uncharted

447
00:23:59,642 --> 00:24:03,984
4 on the far left side of that spectrum, with the design philosophy of the previous games.

448
00:24:04,725 --> 00:24:07,686
Highly authored, tightly controlled by the combat designers.

449
00:24:09,407 --> 00:24:13,129
And then in the early days of Uncharted 4's development, we swung pretty heavily in the

450
00:24:13,169 --> 00:24:17,872
other direction, trying to develop approaches that were just highly systemic and relied

451
00:24:17,992 --> 00:24:20,133
much more heavily on algorithmic evaluation.

452
00:24:21,622 --> 00:24:25,485
Ultimately, we felt that we had oversteered away from authored content.

453
00:24:26,365 --> 00:24:30,308
Our reversion to scripted combat was robbing us of an element that made the previous games

454
00:24:30,388 --> 00:24:31,049
play so well.

455
00:24:31,950 --> 00:24:36,093
We started thinking, was there a middle ground that would let us avoid the drawbacks of the

456
00:24:36,133 --> 00:24:37,114
highly scripted approach?

457
00:24:37,934 --> 00:24:39,355
Could we get the best of both worlds?

458
00:24:41,497 --> 00:24:44,519
So onward to part two of the talk, where I'll be talking about the things that actually

459
00:24:44,539 --> 00:24:44,740
worked.

460
00:24:52,001 --> 00:24:55,463
So I'm going to start by going over the new tech that we developed and actually shipped

461
00:24:55,503 --> 00:25:01,568
with. It's just one bullet point on this list, but this is the biggest section of the talk. So

462
00:25:01,588 --> 00:25:07,052
far I've talked a lot about zones. And zones are really a blunt instrument. A designer

463
00:25:07,092 --> 00:25:13,036
assigns a zone to an NPC and the NPC uses that zone to modify their post selection. Could we

464
00:25:13,056 --> 00:25:19,541
make a more nuanced version? So we developed a new concept called a hard point. It looks

465
00:25:19,561 --> 00:25:20,001
like a zone.

466
00:25:20,303 --> 00:25:24,046
but it's an object that exists in the world independently of any NPC.

467
00:25:25,146 --> 00:25:27,668
NPCs can be dynamically assigned to a hardpoint,

468
00:25:28,028 --> 00:25:29,849
and they will fight as if it's their zone.

469
00:25:30,569 --> 00:25:32,570
And I'll explain why that abstraction is so crucial.

470
00:25:34,612 --> 00:25:36,032
A hardpoint has five properties.

471
00:25:36,693 --> 00:25:38,834
It has a name that can be referenced from script,

472
00:25:39,494 --> 00:25:42,216
it has a region that limits where the NPC will fight from,

473
00:25:42,816 --> 00:25:45,858
it has a minimum and a maximum number of assigned NPCs,

474
00:25:46,698 --> 00:25:49,800
and it has an enable-disable toggle that can be controlled from script.

475
00:25:51,877 --> 00:25:54,897
So here's an example of how hardpoints were used in one of our encounters.

476
00:25:55,758 --> 00:26:00,119
The green hardpoint on the left covers the strong elevated position in the tower,

477
00:26:00,979 --> 00:26:05,480
the yellow hardpoint covers the open field that has good lines of sight to the rest of the layout,

478
00:26:06,441 --> 00:26:09,261
and the teal hardpoint in the back covers the exit door.

479
00:26:10,682 --> 00:26:14,843
It has a minimum assignment of one, because we always want to keep one NPC there

480
00:26:14,923 --> 00:26:16,903
to prevent the player from sneaking out too easily.

481
00:26:19,515 --> 00:26:21,996
So this debug shows the actual region for each hardpoint.

482
00:26:22,397 --> 00:26:24,378
I just had it off before because it's kind of hard to read.

483
00:26:25,158 --> 00:26:27,220
But this is the actual extent of each hardpoint,

484
00:26:27,520 --> 00:26:29,961
defining where the assigned NPCs are allowed to fight from.

485
00:26:33,063 --> 00:26:35,365
So in this example, these two NPCs are assigned

486
00:26:35,405 --> 00:26:37,926
to a hardpoint on the bridge with a minimum assignment

487
00:26:37,966 --> 00:26:40,208
of one and a maximum assignment of two.

488
00:26:42,769 --> 00:26:44,991
So they're happily fighting from the bridge

489
00:26:45,051 --> 00:26:46,371
and holding down this position.

490
00:26:47,544 --> 00:26:49,726
But when reinforcements spawn behind them,

491
00:26:50,026 --> 00:26:53,049
the new NPCs are going to take over that hardpoint assignment.

492
00:26:53,629 --> 00:26:57,112
And this frees up the initial two NPCs to push up on the player.

493
00:26:59,254 --> 00:27:02,036
So this reassignment happened just completely systemically,

494
00:27:02,897 --> 00:27:06,900
just by respecting the min and max counts defined by the designer.

495
00:27:06,920 --> 00:27:11,103
It would have taken much longer to achieve this kind of dynamic handoff

496
00:27:11,224 --> 00:27:12,505
with just a purely script approach.

497
00:27:14,578 --> 00:27:19,161
Picking which NPCs to assign to each hardpoint is handled by a code module called the

498
00:27:19,221 --> 00:27:24,684
hardpoint coordinator. It makes selections based on various criteria, such as distance to

499
00:27:24,744 --> 00:27:30,528
the target, weapon type. It also generally tries to avoid assigning the NPCs backwards. It

500
00:27:30,548 --> 00:27:36,092
always looks better when NPCs can move forwards to their objective. So I mentioned earlier

501
00:27:36,172 --> 00:27:40,795
how we had some goals for combat. Things like spreading out the enemies and creating

502
00:27:40,875 --> 00:27:41,715
layered combat.

503
00:27:43,409 --> 00:27:48,454
with NPCs at different ranges. I also showed what happens when an NPC's skill doesn't match

504
00:27:48,474 --> 00:27:55,420
their zone. So our solution to all three of these problems was to implement combat roles. But

505
00:27:55,440 --> 00:28:00,384
before I talk about roles in Uncharted 4, I first want to talk about the ghosts in Pac-Man.

506
00:28:01,285 --> 00:28:07,510
Bear with me. So each ghost has a different role and fundamentally these roles were designed

507
00:28:07,570 --> 00:28:10,593
to achieve the exact same kind of design goals.

508
00:28:11,970 --> 00:28:15,952
My information on the Pac-Man AI, by the way, is based on the excellent article, the Pac-Man

509
00:28:15,992 --> 00:28:21,233
Dossier by Jamie Pittman. It's on Gamasutra. So shout out to Jamie for letting me use some

510
00:28:21,273 --> 00:28:28,395
of his diagrams in my talk. So the red ghost Blinky is very simple. He just pathfinds to

511
00:28:28,435 --> 00:28:33,817
Pac-Man's current position and constantly moves towards him. Blinky chases the player

512
00:28:33,857 --> 00:28:36,258
from behind and pressures them to keep moving.

513
00:28:38,855 --> 00:28:42,355
path finds to a position two spaces ahead of the player's current heading.

514
00:28:43,316 --> 00:28:49,057
So this simple behavior creates a cool dynamic where Blinky closes in from behind and Pinky

515
00:28:49,077 --> 00:28:50,697
gets ahead of the player and cuts them off.

516
00:28:51,397 --> 00:28:54,878
It's actually really impressive to achieve that dynamic with such simple behaviors.

517
00:28:56,558 --> 00:28:58,319
Clyde is the least threatening ghost.

518
00:28:58,799 --> 00:29:02,820
When he's far away from the player, he acts like Blinky and chases to the player's current

519
00:29:02,880 --> 00:29:03,260
position.

520
00:29:04,180 --> 00:29:08,221
But when he gets too close, he pathfinds away to one of the corners of the maze.

521
00:29:09,443 --> 00:29:14,284
This makes Clyde bounce back and forth, keeping a somewhat consistent range from the player

522
00:29:14,885 --> 00:29:17,225
and effectively defending his corner of the maze.

523
00:29:19,186 --> 00:29:19,946
Finally Inky.

524
00:29:22,507 --> 00:29:23,707
Actually, I'll get back to Inky later.

525
00:29:24,308 --> 00:29:26,028
For now, let's go back to Uncharted 4.

526
00:29:30,790 --> 00:29:36,311
So the three core combat roles in Uncharted 4 are Engagers, Ambushers, and Defenders.

527
00:29:37,239 --> 00:29:39,160
These are the three layers of combat,

528
00:29:39,360 --> 00:29:41,342
an ascending order of distance from the player.

529
00:29:43,263 --> 00:29:44,544
Engagers are simple.

530
00:29:44,884 --> 00:29:47,325
They approach and attack the player's current position.

531
00:29:48,266 --> 00:29:49,507
They can move wherever they want

532
00:29:49,607 --> 00:29:52,389
and perform typical NPC combat behaviors.

533
00:29:54,370 --> 00:29:55,410
Ambushers do this.

534
00:29:59,293 --> 00:30:00,814
They pick a position to take cover,

535
00:30:01,274 --> 00:30:03,335
and then they wait for the player to move their way

536
00:30:03,616 --> 00:30:04,976
so they can pop out and surprise them.

537
00:30:06,956 --> 00:30:08,738
we dynamically generate ambush points

538
00:30:09,198 --> 00:30:11,320
20 meters away from the player along the navmesh.

539
00:30:12,161 --> 00:30:13,962
An ambusher claims one of these points

540
00:30:14,202 --> 00:30:15,544
and moves there to take cover

541
00:30:15,904 --> 00:30:18,106
with the intent of anticipating

542
00:30:18,226 --> 00:30:19,527
where the player could move next.

543
00:30:21,047 --> 00:30:23,868
The reason for this behavior is that during our play tests,

544
00:30:24,429 --> 00:30:26,530
we often notice that the player would be fighting

545
00:30:26,570 --> 00:30:28,772
in one area, they'd be having a good fight,

546
00:30:29,032 --> 00:30:31,934
things would be pretty well paced and things would be good,

547
00:30:32,454 --> 00:30:35,836
but then if things got too hot and they needed to disengage,

548
00:30:36,157 --> 00:30:37,718
they'd run to a different part of the layout

549
00:30:38,418 --> 00:30:39,659
and it would just be completely empty.

550
00:30:41,000 --> 00:30:42,901
Ambushers help the space to feel fuller

551
00:30:43,321 --> 00:30:45,002
because as the player moves around,

552
00:30:45,363 --> 00:30:47,164
these ambushers will suddenly pop up,

553
00:30:47,744 --> 00:30:49,465
pop out of cover and engage them.

554
00:30:50,162 --> 00:30:51,643
and it keeps the pressure up on the player.

555
00:30:53,764 --> 00:30:57,105
And then defenders are the NPCs that are assigned to hard points.

556
00:30:57,806 --> 00:30:59,326
They will not leave their hard points,

557
00:30:59,607 --> 00:31:01,587
but they will do their best to get line of sight

558
00:31:01,627 --> 00:31:03,768
and take cover within their assigned area.

559
00:31:05,729 --> 00:31:08,110
So how do these three roles compare to the Pac-Man AI?

560
00:31:08,911 --> 00:31:10,652
Well, Blinky is an engager,

561
00:31:11,192 --> 00:31:13,453
because engagers chase the player's current position.

562
00:31:14,293 --> 00:31:16,274
And Pinky, Pinky's like an ambusher,

563
00:31:16,534 --> 00:31:18,855
because ambushers head off the player's future position.

564
00:31:20,230 --> 00:31:24,032
Clyde is a defender, because defenders keep their distance

565
00:31:24,052 --> 00:31:26,073
from the player, and they hold down

566
00:31:26,093 --> 00:31:27,113
their corner of the maze.

567
00:31:27,834 --> 00:31:29,214
Clyde's a little bit of a stretch, truthfully,

568
00:31:29,254 --> 00:31:30,095
but it's similar.

569
00:31:31,755 --> 00:31:32,996
All right, what about Inky?

570
00:31:34,357 --> 00:31:36,537
So Inky is considered the most dangerous ghost

571
00:31:36,618 --> 00:31:38,939
due to his erratic, unpredictable behavior.

572
00:31:39,739 --> 00:31:41,720
To determine Inky's movement, create

573
00:31:41,760 --> 00:31:43,841
a line between the player's position

574
00:31:43,961 --> 00:31:44,781
and their current heading.

575
00:31:45,441 --> 00:31:48,783
Then take the red ghost Blinky and mirror Blinky's position

576
00:31:48,963 --> 00:31:49,763
across that line.

577
00:31:50,658 --> 00:31:52,840
That is the position that Inky will chase to.

578
00:31:54,681 --> 00:31:57,504
Sadly, this weird behavior has no equivalent in Uncharted 4.

579
00:32:03,989 --> 00:32:05,951
So you remember earlier how in large layouts

580
00:32:06,071 --> 00:32:08,433
we had a mismatch between our scripted zones

581
00:32:08,573 --> 00:32:09,574
and our post selectors?

582
00:32:10,955 --> 00:32:12,876
Well, having roles fixes this issue.

583
00:32:13,777 --> 00:32:16,419
Engagers want to fight at the player's current position.

584
00:32:16,860 --> 00:32:19,382
So they do their post selection centered on the player.

585
00:32:20,504 --> 00:32:24,207
Ambushers do post selection around their ambush point that they've been assigned to.

586
00:32:25,108 --> 00:32:28,731
And defenders do post selection around their hard point.

587
00:32:29,512 --> 00:32:33,856
Therefore nobody has the problem of trying to do post selection outside of where they're

588
00:32:33,876 --> 00:32:34,596
allowed to fight from.

589
00:32:36,678 --> 00:32:40,622
Earlier I mentioned that we had a code module that assigns the NPCs to the hard points.

590
00:32:41,342 --> 00:32:46,027
We have a similar code module called the encounter coordinator that's responsible for assigning

591
00:32:46,107 --> 00:32:47,188
NPCs to roles.

592
00:32:48,386 --> 00:32:55,350
assigning roles to NPCs. For instance, we have a limit on the number of engagers. An NPC can

593
00:32:55,410 --> 00:33:00,773
request to be an engager, but the coordinator gets to decide who actually gets that role. It

594
00:33:00,813 --> 00:33:06,195
selects the NPC with the best rating based on various criteria. Again, stuff like distance to

595
00:33:06,235 --> 00:33:12,879
target, line of sight, weapon, et cetera. So here's the nitty gritty of how this role

596
00:33:12,939 --> 00:33:14,079
assignment actually works.

597
00:33:15,031 --> 00:33:18,373
Let's say we have a group of 15 NPCs we need to assign out.

598
00:33:18,994 --> 00:33:21,116
Well, first we assign NPCs to each hard point,

599
00:33:21,416 --> 00:33:22,817
up to each hard point's minimum.

600
00:33:23,938 --> 00:33:24,938
That's absolutely crucial.

601
00:33:24,978 --> 00:33:28,141
We absolutely want to get the minimum for each hard point

602
00:33:28,221 --> 00:33:29,162
as the first priority.

603
00:33:30,102 --> 00:33:33,205
After that, we assign a certain number of NPCs to be engagers.

604
00:33:33,965 --> 00:33:39,606
So that number X is actually defined in a script file called the global combat params. I'll

605
00:33:39,646 --> 00:33:44,487
talk about that file more in just a minute. For now it's usually about 2 or 3. So pick 2 or 3

606
00:33:44,687 --> 00:33:50,128
of those NPCs that are close to the player and they'll be the engagers. Then we pick another

607
00:33:50,228 --> 00:33:55,749
number of NPCs to be ambushers. Again, that number Y defined in the global combat params

608
00:33:56,149 --> 00:33:59,530
usually about 2 or 3. So pick 2 or 3 NPCs to be ambushers.

609
00:34:00,931 --> 00:34:05,834
Then from the remaining NPCs, we assign them to hard points up to each hard point's maximum.

610
00:34:07,155 --> 00:34:11,939
And then if we have any NPCs remaining after all that, those NPCs default to being engagers.

611
00:34:12,939 --> 00:34:15,041
We don't actually want that step 5 to happen.

612
00:34:15,902 --> 00:34:17,783
If that happens, that's kind of a fallback.

613
00:34:17,983 --> 00:34:22,046
That means that the encounter will have more engagers than the designer was intending.

614
00:34:22,852 --> 00:34:25,774
So actually, if we ever hit that step five during development,

615
00:34:25,854 --> 00:34:28,536
a big warning appeared on screen letting the designer know

616
00:34:28,576 --> 00:34:30,918
that they had to increase the limits on their hard points

617
00:34:31,278 --> 00:34:32,479
or start adding new ones.

618
00:34:34,381 --> 00:34:36,702
So here are those global combat params I'd mentioned.

619
00:34:37,303 --> 00:34:39,044
These params are tuning values that we

620
00:34:39,064 --> 00:34:40,566
can customize per encounter.

621
00:34:41,586 --> 00:34:43,728
This allows us to have systemic combat behaviors

622
00:34:43,948 --> 00:34:46,270
while still giving the designers lots of control

623
00:34:46,290 --> 00:34:48,912
to customize each encounter and make it feel unique.

624
00:34:50,172 --> 00:34:54,335
So this slide with the source code is probably a little hard to read unless you're really

625
00:34:54,375 --> 00:34:58,018
familiar with Lisp. So I'm going to go through some of these individual combat params on a

626
00:34:58,078 --> 00:35:04,523
separate slide. So global combat params. We control things like, as I mentioned, the

627
00:35:04,783 --> 00:35:11,428
number of engagers and the number of ambushers. We also had to define a time delay to

628
00:35:11,488 --> 00:35:14,990
replace an engager. If the player shot one of the engagers and killed them,

629
00:35:15,448 --> 00:35:19,011
Do we want a new engager to be assigned immediately or do we want to have a little bit of delay

630
00:35:19,071 --> 00:35:24,736
on that? That would impact how hard the NPCs push up on the player in a given encounter. We

631
00:35:24,776 --> 00:35:29,380
also define the snuck away distance for stealth. How far away from their last position,

632
00:35:29,400 --> 00:35:33,843
not from the player's last known position do they have to move before the NPCs consider them

633
00:35:33,923 --> 00:35:39,308
to be snuck away and then lost and then they go into search behaviors. This tended to be

634
00:35:39,328 --> 00:35:42,751
something we tuned kind of per the size of the encounter space.

635
00:35:44,540 --> 00:35:47,361
We had a timer for the NPCs advancing from cover to cover.

636
00:35:48,321 --> 00:35:50,821
We had a timer for how long until an NPC was

637
00:35:50,841 --> 00:35:51,822
throwing grenades.

638
00:35:52,662 --> 00:35:55,182
We also had a timer for how long until we sent out an NPC

639
00:35:55,202 --> 00:35:55,962
to flank the player.

640
00:35:57,103 --> 00:35:59,623
We also controlled the minimum flank path rating.

641
00:36:00,243 --> 00:36:02,504
So that meant, like, how good does a flank path

642
00:36:02,524 --> 00:36:04,604
have to be before an NPC will choose to use it?

643
00:36:05,384 --> 00:36:07,344
If you reduce this threshold, the NPCs

644
00:36:07,364 --> 00:36:09,465
might choose bad flank paths, but it'll

645
00:36:09,505 --> 00:36:10,905
make them more aggressive, and they'll push up

646
00:36:10,965 --> 00:36:11,845
on the player much harder.

647
00:36:13,315 --> 00:36:15,737
And finally, we had the minimum and maximum number

648
00:36:15,757 --> 00:36:18,560
of shooters, which kind of presents an interesting design

649
00:36:18,600 --> 00:36:21,202
question about limiting the NPC's desire to shoot.

650
00:36:23,965 --> 00:36:27,227
So if you have 10 NPCs that are all allowed to fire at once,

651
00:36:27,908 --> 00:36:31,691
then 10 NPCs are 10 times more dangerous than one NPC.

652
00:36:32,392 --> 00:36:34,434
And we don't want to scale combat that way,

653
00:36:34,734 --> 00:36:37,356
because it creates combat that starts out really hard

654
00:36:37,877 --> 00:36:40,379
and then gradually gets easier with every NPC you kill.

655
00:36:41,652 --> 00:36:46,453
Instead, we want to limit the number of NPCs that can fire at the same time, usually capping

656
00:36:46,533 --> 00:36:47,714
out at about three or four.

657
00:36:50,195 --> 00:36:54,856
This gives us leeway to use more NPCs in combat without greatly scaling up the difficulty.

658
00:36:55,856 --> 00:36:59,758
However, we need to disguise the fact that some NPCs are intentionally not shooting.

659
00:37:01,358 --> 00:37:03,199
So I'm going to let this video play out for a little bit.

660
00:37:05,460 --> 00:37:06,980
I thought this video had sound, but it doesn't.

661
00:37:12,617 --> 00:37:15,338
So we tried to make the handoff between NPCs being allowed

662
00:37:15,358 --> 00:37:18,059
to shoot as smooth and as seamless as possible.

663
00:37:18,539 --> 00:37:19,619
And I think it turned out pretty well.

664
00:37:20,320 --> 00:37:21,720
So what's the logic behind this?

665
00:37:23,621 --> 00:37:25,561
So shooter is also a role,

666
00:37:26,081 --> 00:37:28,002
but it's orthogonal to the other roles.

667
00:37:28,702 --> 00:37:30,963
Engagers aren't necessarily shooters and vice versa.

668
00:37:31,903 --> 00:37:34,704
Only NPCs that have the shooter role are allowed to shoot,

669
00:37:35,184 --> 00:37:36,985
and then they give up that role when it's time

670
00:37:37,005 --> 00:37:40,086
for them to reload or if they lose line of sight, et cetera.

671
00:37:41,048 --> 00:37:43,791
This allows us to artificially limit the amount of gunfire

672
00:37:43,831 --> 00:37:46,333
towards the player without making the NPCs look bad.

673
00:37:47,834 --> 00:37:50,276
Here's a still view of that handoff in the previous video.

674
00:37:51,017 --> 00:37:53,279
The two NPCs circled in white have the shooter role

675
00:37:53,359 --> 00:37:54,400
and are allowed to aim and fire.

676
00:37:55,221 --> 00:37:57,703
And then two NPCs without the shooter role just hunker down

677
00:37:57,743 --> 00:38:00,705
and cover, waiting for an NPC to give up the shooter role,

678
00:38:00,825 --> 00:38:02,206
but they look just fine while they're waiting.

679
00:38:04,528 --> 00:38:06,730
OK, getting back to search, let's

680
00:38:06,770 --> 00:38:09,633
talk about what we shipped with for our search solution.

681
00:38:12,530 --> 00:38:17,271
So our solution for search was to have the designers mark up the levels with spline loops.

682
00:38:18,151 --> 00:38:25,492
NPCs use these spline loops as a guide in search and will flow from segment to segment

683
00:38:26,152 --> 00:38:30,933
being dynamically reassigned as they move. They're allowed to deviate a little from their

684
00:38:30,953 --> 00:38:36,574
splines if they want to check out an interesting feature or go search behind cover or look

685
00:38:36,594 --> 00:38:40,815
down the edge of a cliff, stuff like that. Otherwise they stick to the splines pretty

686
00:38:40,855 --> 00:38:41,215
closely.

687
00:38:44,549 --> 00:38:47,251
So these authored loops helped fix some of the issues

688
00:38:47,291 --> 00:38:48,252
that heat search had.

689
00:38:49,413 --> 00:38:52,035
Firstly, NPCs maintain their line of motion better,

690
00:38:52,635 --> 00:38:53,896
which makes them look more natural,

691
00:38:54,636 --> 00:38:56,478
and it also makes their motion more predictable

692
00:38:56,518 --> 00:38:58,379
for the player, enabling the player

693
00:38:58,399 --> 00:39:00,441
to confidently plan for stealth kills.

694
00:39:01,321 --> 00:39:03,043
These NPCs aren't gonna suddenly turn around

695
00:39:03,103 --> 00:39:03,723
and just bust them.

696
00:39:05,444 --> 00:39:08,126
Secondly, the NPCs stay near the spline loops.

697
00:39:08,798 --> 00:39:11,099
And because the loops are authored by a level designer,

698
00:39:11,479 --> 00:39:14,360
we can choose to only place them near the interesting parts

699
00:39:14,420 --> 00:39:15,000
of the layout.

700
00:39:15,860 --> 00:39:17,581
This avoids the problem the heat search

701
00:39:17,621 --> 00:39:21,202
had with NPCs wanting to go comb the outer edges of the layout

702
00:39:21,242 --> 00:39:22,282
where there wasn't much going on.

703
00:39:23,782 --> 00:39:27,163
And thirdly, we limit the number of NPCs assigned per spline

704
00:39:27,503 --> 00:39:28,844
so they never bunch up too much.

705
00:39:30,144 --> 00:39:32,365
Actually, having two NPCs on the same spline

706
00:39:32,405 --> 00:39:34,245
can facilitate some cool performances,

707
00:39:34,785 --> 00:39:36,786
like having the NPCs check in with each other.

708
00:39:37,337 --> 00:39:39,938
or they can pair up and search together for a little while.

709
00:39:40,318 --> 00:39:40,938
It's really useful.

710
00:39:42,639 --> 00:39:46,380
How about the NPCs that are assigned to hard points?

711
00:39:46,780 --> 00:39:47,981
How can they join in the search?

712
00:39:48,981 --> 00:39:51,182
Well, we don't want them to just abandon their hard points,

713
00:39:51,522 --> 00:39:53,382
so they're not allowed to go walk along the splines.

714
00:39:54,383 --> 00:39:56,584
Instead, we modified the concept of vantage

715
00:39:56,924 --> 00:40:00,065
to instead test what points the NPCs can look outwards from

716
00:40:00,365 --> 00:40:01,705
while staying on their hard points.

717
00:40:02,660 --> 00:40:04,361
This gives them a good behavior for search

718
00:40:04,721 --> 00:40:06,502
that doesn't pull them away from the area

719
00:40:06,542 --> 00:40:07,643
that they're supposed to be guarding.

720
00:40:10,064 --> 00:40:12,045
Finally, here is a quick grab bag

721
00:40:12,105 --> 00:40:13,726
of evergreen AI techniques,

722
00:40:14,447 --> 00:40:16,588
the stuff that we've carried with us for several games

723
00:40:16,728 --> 00:40:18,169
and they've always been really useful,

724
00:40:18,569 --> 00:40:19,990
so we just kept using them in Uncharted 4.

725
00:40:21,971 --> 00:40:23,452
So I mentioned that we had a script file

726
00:40:23,492 --> 00:40:25,012
called the global combat params.

727
00:40:25,713 --> 00:40:27,534
It was actually named this way in contrast

728
00:40:27,574 --> 00:40:29,295
to the just combat params

729
00:40:29,595 --> 00:40:31,516
that are set individually for each NPC.

730
00:40:32,640 --> 00:40:34,640
In Uncharted 4, all of our enemy types

731
00:40:34,680 --> 00:40:36,861
are actually running the same fundamental AI.

732
00:40:37,301 --> 00:40:40,542
We use the combat params to create the distinct enemy types,

733
00:40:41,042 --> 00:40:43,303
snipers, shotgunners, heavy weapons, et cetera.

734
00:40:44,683 --> 00:40:46,364
This setup is extremely useful

735
00:40:46,584 --> 00:40:48,805
because it's flexible and extensible.

736
00:40:49,605 --> 00:40:51,866
Let's say you happen to have one combat setup

737
00:40:52,066 --> 00:40:53,906
where you need a rifleman who doesn't take cover.

738
00:40:54,627 --> 00:40:56,167
You can define a new combat param

739
00:40:56,207 --> 00:40:58,128
as a child of the default rifleman

740
00:40:58,548 --> 00:41:00,688
and just toggle the Boolean that allows taking cover.

741
00:41:02,246 --> 00:41:04,806
we actually ran into a situation really late in development

742
00:41:05,167 --> 00:41:07,387
where we wanted to create an armored grenade launcher.

743
00:41:08,267 --> 00:41:09,688
We were able to do so easily

744
00:41:09,948 --> 00:41:12,508
by combining some elements of the unarmored grenade launcher

745
00:41:12,928 --> 00:41:15,489
and some elements of the regular armored NPC.

746
00:41:15,969 --> 00:41:18,569
We mashed those together and created a new combat param

747
00:41:18,589 --> 00:41:19,590
that just worked right away.

748
00:41:19,610 --> 00:41:20,350
It was great.

749
00:41:21,750 --> 00:41:23,010
We actually have a nice synergy

750
00:41:23,070 --> 00:41:24,851
between some of our classic enemy types

751
00:41:24,891 --> 00:41:25,811
from the previous games

752
00:41:26,231 --> 00:41:28,451
and our new concept of combat roles in Uncharted 4.

753
00:41:30,022 --> 00:41:33,243
We made it such that shotgun NPCs are just always engagers,

754
00:41:33,544 --> 00:41:35,284
so they're always able to push up on the player

755
00:41:35,404 --> 00:41:36,005
as they please.

756
00:41:37,685 --> 00:41:40,206
On the other hand, snipers are just always defenders.

757
00:41:41,027 --> 00:41:43,688
We set them up with a hard point, with a strong position,

758
00:41:43,948 --> 00:41:44,728
good lines of sight,

759
00:41:45,268 --> 00:41:46,649
and then they just snipe from that area.

760
00:41:47,589 --> 00:41:49,070
In a way, it's a more systemic version

761
00:41:49,110 --> 00:41:50,690
of the sniper with the tiny zone

762
00:41:50,730 --> 00:41:51,991
that you saw in that video from Uncharted 2.

763
00:41:54,882 --> 00:41:56,983
So combat in the Uncharted series is at its best

764
00:41:57,263 --> 00:41:58,504
when the players take advantage

765
00:41:58,544 --> 00:42:00,584
of all the traversal abilities available to them.

766
00:42:01,225 --> 00:42:03,326
We really want to disincentivize the player

767
00:42:03,366 --> 00:42:05,226
from just hunkering down in one place

768
00:42:05,326 --> 00:42:06,747
and playing it like a cover shooter.

769
00:42:08,107 --> 00:42:10,428
So to gently suggest that the player should keep moving,

770
00:42:10,608 --> 00:42:11,929
we have the enemies throw grenades.

771
00:42:12,749 --> 00:42:14,030
Grenades are the gentle suggestion.

772
00:42:15,090 --> 00:42:16,831
This is managed by a simple module

773
00:42:16,871 --> 00:42:17,931
called the grenade director,

774
00:42:18,391 --> 00:42:20,472
and it just tracks how long the player remains

775
00:42:20,532 --> 00:42:21,333
in a certain radius.

776
00:42:22,125 --> 00:42:27,388
If the player leaves the radius, reset the timer. But if the timer runs out, request an NPC to

777
00:42:27,408 --> 00:42:32,792
throw a grenade. Grenade thrower is a role and the NPC with the best clear arc is chosen to

778
00:42:32,832 --> 00:42:38,696
take that role. So here's how it works in practice. Player remains in the same radius for

779
00:42:38,736 --> 00:42:47,762
too long. The timer meter you see counts down. An NPC is chosen to throw a grenade. Grenade

780
00:42:47,802 --> 00:42:51,645
gets thrown. And the player is gently suggested to move.

781
00:42:54,184 --> 00:42:56,305
So flankers serve the same purpose.

782
00:42:57,045 --> 00:42:59,526
Push the player if they've stayed still in one place

783
00:42:59,566 --> 00:43:00,146
for too long.

784
00:43:00,886 --> 00:43:03,767
Flanker is just another role that an NPC can be chosen for.

785
00:43:04,328 --> 00:43:06,168
And their job is to get behind the player

786
00:43:06,228 --> 00:43:07,509
while avoiding line of sight.

787
00:43:08,369 --> 00:43:10,690
We had a very similar skill in The Last of Us.

788
00:43:11,170 --> 00:43:14,471
And for that game, we tried all sorts of complicated logic

789
00:43:14,511 --> 00:43:18,112
that involved calculating the exposure along the entire path.

790
00:43:19,243 --> 00:43:21,064
In the end, we actually had much better results

791
00:43:21,084 --> 00:43:22,505
with a much simpler algorithm,

792
00:43:22,825 --> 00:43:24,545
and we carried that approach over to Uncharted 4.

793
00:43:26,026 --> 00:43:27,546
So we used the combat vector,

794
00:43:27,726 --> 00:43:30,627
which is that weird yellow oblong polygon.

795
00:43:31,507 --> 00:43:33,268
It's oriented from the player's position,

796
00:43:33,608 --> 00:43:34,609
players at the bottom of the screen.

797
00:43:35,149 --> 00:43:36,709
So it's oriented from that position

798
00:43:36,949 --> 00:43:39,910
towards the average direction of threat of the enemies.

799
00:43:40,911 --> 00:43:42,751
So flankers use a pathfind

800
00:43:42,991 --> 00:43:45,612
that makes moving through the combat vector more expensive.

801
00:43:46,727 --> 00:43:48,368
So that's a really simple behavior,

802
00:43:48,448 --> 00:43:50,269
but we've had really great results with it

803
00:43:50,329 --> 00:43:52,071
in all sorts of different kinds of layouts.

804
00:43:52,511 --> 00:43:54,553
It's just a great all-purpose kind of behavior.

805
00:43:56,534 --> 00:43:59,717
Accuracy ramping is a tuning value that I highly recommend.

806
00:44:00,257 --> 00:44:01,818
So from the time they spot the player,

807
00:44:02,198 --> 00:44:05,021
NPCs have to ramp up to full accuracy over time

808
00:44:05,181 --> 00:44:06,021
based on their distance.

809
00:44:06,782 --> 00:44:09,284
This gives an advantage to players who wanna stay agile

810
00:44:09,304 --> 00:44:10,225
and keep repositioning.

811
00:44:10,725 --> 00:44:12,586
They'll have a chance to move from cover to cover

812
00:44:12,887 --> 00:44:14,208
without taking too much damage.

813
00:44:15,009 --> 00:44:18,450
Players who just turtle up in the same position will not receive this benefit.

814
00:44:20,431 --> 00:44:23,432
So you might recall that we had a special kind of post called a perch.

815
00:44:23,833 --> 00:44:26,874
They were the teal posts that we generated on the edges of cliffs and stuff.

816
00:44:27,534 --> 00:44:29,935
So I'm going to play this video to show why they were necessary.

817
00:44:44,580 --> 00:44:46,782
So perches are a special type of post

818
00:44:46,942 --> 00:44:49,684
that we generate on the edges of cliffs and over thin railings.

819
00:44:50,364 --> 00:44:52,825
They allow the NPCs to play custom animations that

820
00:44:52,886 --> 00:44:56,448
lean further out and help them aim around and downwards.

821
00:44:57,228 --> 00:44:59,910
We found that without them, the default aiming animations

822
00:45:00,010 --> 00:45:02,551
really struggle to deal with these complex 3D climbing

823
00:45:02,592 --> 00:45:02,992
spaces.

824
00:45:05,173 --> 00:45:06,534
And now I'd like to briefly talk about some

825
00:45:06,574 --> 00:45:08,495
of the limitations of our current systems

826
00:45:08,695 --> 00:45:10,416
and things we'd like to improve on in the future.

827
00:45:11,797 --> 00:45:13,558
So the scoring of post selectors.

828
00:45:14,223 --> 00:45:15,724
has a lot of magic numbers,

829
00:45:16,585 --> 00:45:18,847
has a lot of handwritten distance curves,

830
00:45:19,427 --> 00:45:21,468
and it takes a long time to tune these values

831
00:45:21,508 --> 00:45:22,949
in a way that works in every layout.

832
00:45:23,790 --> 00:45:25,671
And once these criteria have been tuned,

833
00:45:26,492 --> 00:45:28,213
it's really impossible to go backwards

834
00:45:28,293 --> 00:45:30,174
and discern the thought process behind them.

835
00:45:31,235 --> 00:45:32,716
I really don't have a good solution for this,

836
00:45:32,816 --> 00:45:34,537
but I wish we could develop this weighting,

837
00:45:34,557 --> 00:45:36,539
the weighting in the post selectors,

838
00:45:36,839 --> 00:45:38,980
in a more transparent, methodical way.

839
00:45:41,124 --> 00:45:43,846
The logic for generating ambush points is not very smart.

840
00:45:44,426 --> 00:45:47,068
It simply looks 20 meters away along a navmesh.

841
00:45:47,929 --> 00:45:50,230
So in this screenshot, the player's at the top of a cliff,

842
00:45:50,771 --> 00:45:53,072
and the navmesh distance doesn't take into account

843
00:45:53,152 --> 00:45:53,993
the steep drop.

844
00:45:54,673 --> 00:45:56,534
These ambush points at the base of the cliff

845
00:45:56,614 --> 00:45:58,416
are technically 20 meters away,

846
00:45:59,036 --> 00:46:01,337
but their positioning below the player isn't very useful.

847
00:46:02,718 --> 00:46:04,500
Fortunately, we had a simple workaround.

848
00:46:04,980 --> 00:46:07,522
In this encounter, we set the number of ambushers to zero

849
00:46:07,862 --> 00:46:09,223
using the global combat params.

850
00:46:10,080 --> 00:46:14,369
but in the future I'd like to develop a more, a smarter heuristic for generating ambush

851
00:46:14,409 --> 00:46:20,681
points. And finally there's a combat balance problem that we struggled with and you'll see

852
00:46:20,701 --> 00:46:21,283
it in this video.

853
00:46:28,747 --> 00:46:34,990
So the player can snipe an NPC with a pistol from about 50 meters away. This is because we

854
00:46:35,010 --> 00:46:40,653
found over and over in our playtests that players expect the guns to hit the center of the

855
00:46:40,694 --> 00:46:46,037
reticle no matter what. Unfortunately, this limits our ability to make short range weapons.

856
00:46:46,617 --> 00:46:51,560
And it makes chipping away from NPCs at long range very effective. Any time we had a really

857
00:46:52,020 --> 00:46:55,942
good, effective playtester who was playing on the higher difficulties, this is all they'd do.

858
00:46:58,372 --> 00:47:03,434
we did do a couple of things to mitigate this strategy. We added damage wobble on the camera

859
00:47:03,994 --> 00:47:09,155
and secondly we have an accuracy floor for the enemies. So even at extreme long range there's a

860
00:47:09,255 --> 00:47:14,417
limit to how low their accuracy will go. Ultimately though I still consider this to be kind of

861
00:47:14,437 --> 00:47:21,138
an OP tactic and it's one that I'd love to find a more holistic solution for. Alright, in

862
00:47:21,198 --> 00:47:21,618
conclusion.

863
00:47:22,608 --> 00:47:24,009
Through Uncharted 4's development,

864
00:47:24,350 --> 00:47:27,151
we explored both extremes of this spectrum,

865
00:47:27,511 --> 00:47:29,653
a highly authored approach to combat design

866
00:47:30,033 --> 00:47:31,134
and a highly systemic one.

867
00:47:32,314 --> 00:47:34,056
Ultimately, we landed somewhere in the middle,

868
00:47:34,476 --> 00:47:36,337
and I think that gave us the best of both worlds.

869
00:47:37,418 --> 00:47:39,919
My suggestion to you is, early in development,

870
00:47:40,099 --> 00:47:41,620
try to figure out where your game

871
00:47:41,680 --> 00:47:42,901
should land on this continuum,

872
00:47:43,702 --> 00:47:45,242
and be cautious of the extremes.

873
00:47:46,603 --> 00:47:47,764
And now here are four things

874
00:47:47,804 --> 00:47:49,365
that I hope you'll take away from this talk.

875
00:47:50,946 --> 00:47:51,767
Takeaway number one.

876
00:47:52,115 --> 00:47:54,856
don't reverse engineer high-level decision making.

877
00:47:55,796 --> 00:47:58,257
Take advantage of your level designer's knowledge.

878
00:47:59,177 --> 00:48:01,217
Unless you're making a completely procedurally

879
00:48:01,237 --> 00:48:05,058
generated game, baking designer intent into the layout

880
00:48:05,478 --> 00:48:07,718
is often better than trying to reverse engineer it

881
00:48:07,838 --> 00:48:08,498
algorithmically.

882
00:48:10,579 --> 00:48:13,539
Takeaway number two, design NPC behaviors

883
00:48:13,819 --> 00:48:15,260
from the player's perspective.

884
00:48:16,400 --> 00:48:18,060
When we made Heat Search, we were

885
00:48:18,100 --> 00:48:19,581
thinking about searching for the player

886
00:48:19,761 --> 00:48:21,241
from the NPC's perspective.

887
00:48:22,298 --> 00:48:25,119
In a sense, it's like we were designing fun for the NPC.

888
00:48:26,460 --> 00:48:28,601
It's better to start from the player's perspective.

889
00:48:29,081 --> 00:48:31,141
What experience do you want the player to have?

890
00:48:31,822 --> 00:48:33,742
What decisions do you want the player to make?

891
00:48:34,643 --> 00:48:36,603
Then design your NPC behaviors accordingly.

892
00:48:38,464 --> 00:48:42,445
Takeaway number three, author roles, then assign NPCs

893
00:48:42,465 --> 00:48:43,466
to them programmatically.

894
00:48:44,526 --> 00:48:47,527
Deciding where to draw the line between the authored content

895
00:48:47,627 --> 00:48:49,708
and the systemic behaviors can be really tricky.

896
00:48:50,834 --> 00:48:52,495
The approach that worked for us was

897
00:48:52,535 --> 00:48:55,517
to have the combat designers outline the desired roles

898
00:48:55,557 --> 00:48:57,818
for an encounter, but then allow code

899
00:48:58,098 --> 00:48:59,659
to select the NPCs that were actually

900
00:48:59,699 --> 00:49:00,840
going to fulfill those roles.

901
00:49:01,640 --> 00:49:03,701
This is a great way to handshake between these two

902
00:49:03,741 --> 00:49:04,542
parts of the system.

903
00:49:06,703 --> 00:49:10,645
And takeaway number four, if you have a large number of NPCs,

904
00:49:11,285 --> 00:49:12,926
then only a few enemies should get

905
00:49:12,946 --> 00:49:14,407
to directly engage the player.

906
00:49:15,768 --> 00:49:17,589
In that case, the outer ring NPCs

907
00:49:17,649 --> 00:49:20,130
need a goal other than also shooting the player.

908
00:49:20,865 --> 00:49:23,007
Or are they all going to look like young kids playing soccer?

909
00:49:24,088 --> 00:49:25,029
All going to be chasing the ball.

910
00:49:26,109 --> 00:49:27,931
It can be useful to think about it spatially.

911
00:49:28,792 --> 00:49:30,373
If an NPC shouldn't chase the player,

912
00:49:30,833 --> 00:49:31,914
then where should they be standing?

913
00:49:33,355 --> 00:49:33,675
That's it.

914
00:49:33,715 --> 00:49:34,296
Thank you very much.

915
00:49:45,244 --> 00:49:46,826
I have a little bit of time for questions.

916
00:49:46,886 --> 00:49:50,328
If you want to come up to the mics, I can take your questions.

917
00:49:59,940 --> 00:50:02,242
Hi, my name is Matt from Insomniac.

918
00:50:03,382 --> 00:50:06,764
I'm just curious, the one with the chipping away with a pistol,

919
00:50:07,604 --> 00:50:12,387
the obvious solution I would think of would be reduce the accuracy of the weapon.

920
00:50:12,407 --> 00:50:14,328
Like, did you try?

921
00:50:14,755 --> 00:50:19,539
Yeah, we had a kind of minimum deviation on the first shot of the pistol.

922
00:50:19,839 --> 00:50:25,082
But anytime, you know, you see the reticle, and I guess from one perspective you can think,

923
00:50:25,142 --> 00:50:28,024
well, the shot's going to land anywhere in the reticle, that's fine.

924
00:50:28,745 --> 00:50:33,288
Often from the player's perspective, that's, I had 80% of the reticle over that NPC's head,

925
00:50:33,688 --> 00:50:36,950
and I fired, and I missed. These guns feel sloppy and terrible.

926
00:50:36,970 --> 00:50:39,852
And often, actually, if NPCs...

927
00:50:40,893 --> 00:50:42,934
playtesters felt like they couldn't rely on the guns,

928
00:50:43,314 --> 00:50:44,935
they just went crazy with melee.

929
00:50:45,316 --> 00:50:46,936
They just loved meleeing because they felt,

930
00:50:46,956 --> 00:50:47,857
at least that's reliable.

931
00:50:47,877 --> 00:50:49,438
When I hit square, I know what's gonna happen.

932
00:50:50,138 --> 00:50:51,799
So ultimately, that was a concession we had to make.

933
00:50:51,859 --> 00:50:53,540
We had to make it so that the first shot,

934
00:50:53,861 --> 00:50:55,342
center of the reticle, no matter what,

935
00:50:56,202 --> 00:50:57,643
and then that kind of, unfortunately,

936
00:50:57,903 --> 00:51:00,325
had the knock-on effect of this kind of

937
00:51:00,605 --> 00:51:02,146
unfortunate long-range behavior that,

938
00:51:02,306 --> 00:51:04,307
yeah, I don't know, something we're still trying to fix.

939
00:51:04,647 --> 00:51:05,628
Okay, thank you. Thank you.

940
00:51:08,169 --> 00:51:15,136
I'm curious about what kind of iteration times all of these different approaches took before you came to the ones that really worked well

941
00:51:15,957 --> 00:51:17,018
we had kind of the

942
00:51:17,658 --> 00:51:20,861
Luxury of being able to do a fair bit of this in pre-production

943
00:51:21,413 --> 00:51:23,094
So it was before we really got ramped up,

944
00:51:23,134 --> 00:51:26,456
before we actually were making all the layouts for the game.

945
00:51:27,036 --> 00:51:29,257
It's funny, actually, in a way, when we started heading

946
00:51:29,297 --> 00:51:33,819
towards production and were making more than our couple

947
00:51:33,899 --> 00:51:35,860
of handful of test layouts we had,

948
00:51:35,880 --> 00:51:37,761
when we started seeing the real layouts the game was

949
00:51:37,781 --> 00:51:39,923
going to have, that's when actually a lot of the issues

950
00:51:40,023 --> 00:51:40,483
fell out.

951
00:51:41,043 --> 00:51:43,104
And we had to really think on our feet

952
00:51:43,164 --> 00:51:44,345
and come up with new stuff.

953
00:51:46,026 --> 00:51:49,768
So I would say, hopefully, a lot of the things I said up there,

954
00:51:49,908 --> 00:51:50,868
we tried and we didn't work.

955
00:51:51,211 --> 00:51:54,332
We didn't spin our wheels on them for more than a week or two.

956
00:51:55,813 --> 00:51:57,794
Some of them maybe longer, but that was kind of our loss.

957
00:51:58,434 --> 00:52:01,836
We had the good fortune of kind of landing upon our solution

958
00:52:01,856 --> 00:52:05,558
of hard points and roles within the early period

959
00:52:05,738 --> 00:52:06,698
of actual production.

960
00:52:06,738 --> 00:52:08,539
And that let us go forward confidently

961
00:52:08,799 --> 00:52:11,240
with all our layouts we were making during production.

962
00:52:11,260 --> 00:52:11,841
Nice.

963
00:52:12,141 --> 00:52:12,321
Thanks.

964
00:52:14,742 --> 00:52:15,362
I guess I'll go over here.

965
00:52:17,651 --> 00:52:25,256
For when buddies were involved in combat, did they take on some of the roles the enemies had for ambushing and engaging or how did you balance that?

966
00:52:26,056 --> 00:52:33,461
I didn't work as much on the buddy NPCs. Actually the biggest thing, like combat with buddies didn't turn out to be that hard.

967
00:52:33,521 --> 00:52:38,784
We kind of gave them a target, we gave them tons of melee behaviors to help the player, that's kind of something that's...

968
00:52:39,777 --> 00:52:42,698
I didn't cover it all in this talk, but as a whole other complex system is melee.

969
00:52:43,599 --> 00:52:46,900
So combat tended to be pretty decent.

970
00:52:47,621 --> 00:52:48,741
That's not a very interesting answer.

971
00:52:49,842 --> 00:52:52,683
Actually it was stealth that was a lot harder with the buddies and that was something that

972
00:52:52,763 --> 00:52:56,404
obviously we were sensitive to and we tried to push a lot harder on.

973
00:52:56,424 --> 00:53:03,387
And we worked really hard to make sure that not only did the buddies never get you busted,

974
00:53:03,487 --> 00:53:04,488
but also they never...

975
00:53:05,414 --> 00:53:10,178
as much as we could, walked in front of an enemy, or we did all sorts of interesting

976
00:53:10,939 --> 00:53:16,144
looking, we did like a future exposure map to detect where we'll be exposed and keep

977
00:53:16,164 --> 00:53:20,468
the buddies out of those. But actually their combat behaviors were very simple. Generally

978
00:53:21,108 --> 00:53:25,693
it was the biggest section of the game where you had two buddies with you was Madagascar.

979
00:53:28,826 --> 00:53:32,990
kind of fortunately that had really big spaces so it actually gave us a lot of leeway to

980
00:53:33,070 --> 00:53:37,394
account for them trying to find good positions as well. I think we would have struggled to

981
00:53:37,434 --> 00:53:42,158
have two buddies through the whole game and through some of the tighter encounters. I feel

982
00:53:42,178 --> 00:53:45,401
like I'm kind of rambling at this point. It wasn't generally that hard and they didn't use the

983
00:53:45,441 --> 00:53:46,001
same behaviors.

984
00:53:49,901 --> 00:53:55,324
For the Minimax Shooters manager, did you ever run into cases where a player just got

985
00:53:55,604 --> 00:54:00,306
really close to a certain AI that wasn't able to shoot because he couldn't get a token because

986
00:54:00,366 --> 00:54:04,447
it was being blocked by other AI that were shooting from farther that weren't as critical

987
00:54:04,487 --> 00:54:09,730
to the current engagement encounter that he was experiencing and the AI just kind of either

988
00:54:09,750 --> 00:54:14,291
stood there or ran away or maybe meleed, but it felt strange that he decided not to shoot?

989
00:54:15,312 --> 00:54:17,074
So we didn't typically run into that.

990
00:54:17,834 --> 00:54:21,556
We do do some prioritization so that closer NPCs

991
00:54:21,877 --> 00:54:24,498
get the shooter role more readily than further NPCs.

992
00:54:24,518 --> 00:54:26,760
I can't remember the exact details,

993
00:54:26,820 --> 00:54:28,140
but we may have done some things as well.

994
00:54:28,200 --> 00:54:31,362
It's like if the player directly engages with an NPC,

995
00:54:31,382 --> 00:54:33,284
we really prioritize giving up the role.

996
00:54:33,784 --> 00:54:37,426
We also kind of fudge it with giving up the token.

997
00:54:37,486 --> 00:54:39,888
Like I mentioned, you give up the token when you reload,

998
00:54:40,328 --> 00:54:40,948
but we actually.

999
00:54:41,891 --> 00:54:45,856
if you count the bullets, they're not always completely consistent about like how many

1000
00:54:45,896 --> 00:54:49,620
bullets they should do before they reload. We sometimes say, no, this, this NBC really

1001
00:54:49,640 --> 00:54:53,665
needs to shoot, just let him shoot. Don't, he technically needs to reload right now, but he

1002
00:54:53,685 --> 00:54:57,150
would look really silly if he did so. So, so we did some fudging like that and then, yeah,

1003
00:54:57,210 --> 00:54:59,633
as I said, prioritization based on distance, which really helped.

1004
00:55:02,839 --> 00:55:09,065
So something that struck me when you sort of moved from more authored to more systemic and landing in that gray area

1005
00:55:10,206 --> 00:55:15,952
Was the NPCs more or less communicating with one another they seem like they're all making sort of their own autonomous decisions

1006
00:55:15,992 --> 00:55:18,214
And like the sense of tactics sort of emerges from it

1007
00:55:19,254 --> 00:55:21,275
But there's elements like because he's suppressing,

1008
00:55:21,835 --> 00:55:23,416
should I be more likely to flank?

1009
00:55:23,696 --> 00:55:26,197
Or because this grenade thrower just got selected,

1010
00:55:26,297 --> 00:55:28,238
is this a great time to become more aggressive?

1011
00:55:28,258 --> 00:55:29,859
And the NPC's talking to one another,

1012
00:55:29,939 --> 00:55:30,739
even through a manager.

1013
00:55:31,099 --> 00:55:32,180
Did you experiment with any of that?

1014
00:55:32,580 --> 00:55:34,321
And did you get any good results?

1015
00:55:35,141 --> 00:55:37,582
We did things kind of along those lines.

1016
00:55:39,383 --> 00:55:41,824
One of the skills that I didn't go into super high detail on

1017
00:55:41,864 --> 00:55:43,845
was that advancing from cover to cover skill.

1018
00:55:44,345 --> 00:55:48,649
and that will do things like, okay, this NPC is going to be advancing from cover to cover, so

1019
00:55:48,689 --> 00:55:54,334
this other NPC should lay down suppressing fire. Or, um, I forget the other things you

1020
00:55:54,354 --> 00:55:58,938
mentioned, but like, when you talk about flankers, we only send out a flanker if there are

1021
00:55:58,978 --> 00:56:03,181
enough other NPCs doing interesting things, putting pressure on the player. We try to

1022
00:56:03,241 --> 00:56:07,045
pick a flanker who's not already doing something interesting. We try to pick someone who's

1023
00:56:07,945 --> 00:56:11,288
doing something kind of boring or sitting in cover somewhere and can't do anything better.

1024
00:56:11,308 --> 00:56:12,890
Okay, pick them to be the flanker.

1025
00:56:13,448 --> 00:56:16,571
So some of that kind of fell out from that,

1026
00:56:16,791 --> 00:56:19,313
but I'm not sure if that answers your question.

1027
00:56:20,493 --> 00:56:24,596
Hi, I was just wondering about how many engineers

1028
00:56:24,676 --> 00:56:26,498
were sort of supporting the prototyping phase

1029
00:56:26,538 --> 00:56:27,498
of these different systems?

1030
00:56:28,699 --> 00:56:30,520
Five, five or six.

1031
00:56:30,701 --> 00:56:32,922
Very, very small programming team, very lean.

1032
00:56:32,942 --> 00:56:37,065
I mean, it was kind of the people you saw on screen.

1033
00:56:39,146 --> 00:56:41,008
Part design team, part programming team.

1034
00:56:42,343 --> 00:56:48,249
really small. I think that looks like it. If anyone has any other questions feel free to

1035
00:56:48,409 --> 00:56:50,912
grab me and we can go to the wrap up room. Thank you very much for coming.

