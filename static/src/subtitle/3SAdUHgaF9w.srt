1
00:00:12,826 --> 00:00:13,867
Hi everyone, good morning.

2
00:00:14,607 --> 00:00:15,608
Thanks for joining today.

3
00:00:16,168 --> 00:00:17,229
I'm happy you can make it.

4
00:00:18,009 --> 00:00:22,752
I'm happy I can make it because my flights got crazy yesterday and I got here at 2 a.m.

5
00:00:24,293 --> 00:00:24,754
It's okay.

6
00:00:25,814 --> 00:00:26,335
It happens.

7
00:00:30,620 --> 00:00:35,664
So I guess before I start, I was asked to remind you to fill your evaluation forms.

8
00:00:36,744 --> 00:00:40,667
So you can scan your badge and it will send you a link so you can add that.

9
00:00:41,868 --> 00:00:47,351
It helps us make sure that the talks are better and also some of us get into this really cool car deck.

10
00:00:48,192 --> 00:00:50,013
So evaluate your talks.

11
00:00:51,514 --> 00:00:57,218
All right, so welcome everyone to step into your player shoes and how we made the most of Team Playtest on Skate.

12
00:00:58,561 --> 00:01:05,763
Today, I'll share with you a process that we applied to the internal template testing to make it more user-centered and to gain more relevant feedback from the team.

13
00:01:07,644 --> 00:01:09,144
So let me start by introducing myself.

14
00:01:09,504 --> 00:01:14,286
Hi, I'm Andrea Gonsalves, and I'm a senior X designer at Full Circle Electronic Arts.

15
00:01:15,286 --> 00:01:21,328
I'm originally from Portugal, so I might have a little bit of an accent, but I'm currently based in Vancouver, Canada.

16
00:01:22,708 --> 00:01:27,130
I have a background in both design and programming, and I've been working on games for over seven years now.

17
00:01:28,362 --> 00:01:30,945
I've worked in mobile, PC, and console games.

18
00:01:31,606 --> 00:01:35,510
And I've also taught, mentored, and spoke at different schools and online platforms.

19
00:01:36,852 --> 00:01:40,396
Currently, I'm working on Skate, and I've been on the team for over three years now.

20
00:01:41,597 --> 00:01:44,561
Before we jump in, I want to set some context to the talk.

21
00:01:46,365 --> 00:01:48,687
First, I want to share that we're still working on it.

22
00:01:49,108 --> 00:01:50,269
Skate is not out yet.

23
00:01:50,829 --> 00:01:56,495
So in this talk, I'm going to be focusing more on the process that we used and not so much on in-game footage.

24
00:01:57,275 --> 00:02:00,358
So if you were hoping for a sneak peek, I apologize.

25
00:02:00,658 --> 00:02:03,261
I will not be able to share anything that is not public yet.

26
00:02:04,362 --> 00:02:07,505
But you can see a lot of what we've been working on on our YouTube channel.

27
00:02:10,063 --> 00:02:15,848
The next thing I wanted to talk about is maybe you are wondering why we're talking about team playtesting at the UX Summit.

28
00:02:16,648 --> 00:02:18,329
Because it's not testing with users, right?

29
00:02:19,370 --> 00:02:25,215
So I wanted to start the talk by stating that team playtesting does not replace user testing.

30
00:02:26,436 --> 00:02:29,938
And in fact, in our team, we've been testing with players from early on.

31
00:02:30,159 --> 00:02:34,402
We have videos in our YouTube channel that you can see of Wacky Graybox World.

32
00:02:36,209 --> 00:02:41,494
But team play testing is another tool in your toolbox to ensure that you're going in the right direction with your experience.

33
00:02:42,255 --> 00:02:52,485
And we have found in our team that there are ways that you can make this process be more useful in your UX journey so that you can leverage an existing source of feedback to increase awareness of UX.

34
00:02:55,748 --> 00:02:58,892
So with that out of the way, let's look at what we'll talk about today.

35
00:03:00,114 --> 00:03:03,817
I'll start by introducing team playtesting and its strengths and weaknesses.

36
00:03:04,818 --> 00:03:10,903
Then I'll share our process, which internally we call focused team playtesting, to get the team to step into player's shoes.

37
00:03:12,304 --> 00:03:16,287
Then I'll walk through how to put this process in practice in your own teams.

38
00:03:17,308 --> 00:03:21,411
And at the end, I'll share some learnings about using it over the past years.

39
00:03:24,113 --> 00:03:28,617
So let's start by looking at team playtesting and why it's worth leveraging.

40
00:03:30,882 --> 00:03:32,763
First, let's talk about why do we test.

41
00:03:34,064 --> 00:03:38,708
The reason we test as devs is that our goal is to make a good game for players.

42
00:03:39,529 --> 00:03:43,932
And we have tons of tools to help us assess this.

43
00:03:44,858 --> 00:04:01,367
There's the team play testing, there's heuristic evaluation and expert reviews, there's quality assurance departments to make sure the game is working as we plan, and there's external research such as external usability tests with players and external freeform tests with players.

44
00:04:02,308 --> 00:04:06,350
And today we're just looking at one in particularly over all of those tools.

45
00:04:08,752 --> 00:04:09,952
So what is teamplay testing?

46
00:04:10,753 --> 00:04:14,814
I'm sure a lot of us are familiar with it, but let's define it just so we're all on the same page.

47
00:04:16,255 --> 00:04:22,557
At its core, teamplay testing means you're testing with members of the team, as opposed to people that are not in your team, like your players.

48
00:04:23,638 --> 00:04:26,679
And it's often a common practice in studios and game teams.

49
00:04:28,259 --> 00:04:31,821
It's also often recurring, such as happening weekly or monthly.

50
00:04:33,089 --> 00:04:36,091
And this team playtesting can be done with different size groups.

51
00:04:36,691 --> 00:04:45,437
So sometimes it's just two to three people that are actively working on something, but you can also be with the whole team and there's people that haven't seen any of what you're working on before.

52
00:04:46,737 --> 00:04:52,601
In my experience, in the teams that I've worked on, we always had at least a team-wide playtest that happened weekly.

53
00:04:54,793 --> 00:05:04,677
Template testing has a really key strength, and that's that it gives you quicker and lower cost iteration loops.

54
00:05:06,117 --> 00:05:07,878
This is for a few factors.

55
00:05:08,578 --> 00:05:11,199
One is that it overall usually has less logistics.

56
00:05:11,459 --> 00:05:15,541
You don't have to recruit external participants and plan extra studies.

57
00:05:16,361 --> 00:05:21,663
Developers already have access to what we call dev builds that are easier to create and access.

58
00:05:23,257 --> 00:05:31,226
And it's not just quicker to implement your design for the first time, it's also quicker to act on feedback and implement changes.

59
00:05:31,826 --> 00:05:41,978
Because of the things I mentioned, like logistics and access to the dev builds, but also because the target quality that you need to make for the dev team might not have to be as high as what you would have to do for players.

60
00:05:43,888 --> 00:05:49,370
But team play testing has a really key weakness, and that's that you're not testing with your target audience.

61
00:05:50,291 --> 00:05:53,872
Developers are a very different audience and come with their own set of biases.

62
00:05:57,074 --> 00:06:01,276
So what do we mean when we say that we're not testing with the target audience when we test the dev team?

63
00:06:02,396 --> 00:06:04,177
Usually, it means two key things.

64
00:06:05,359 --> 00:06:10,261
One is that developers are too familiar with the game and are, well, developers.

65
00:06:10,901 --> 00:06:21,866
And this means that they can see the game from a fresh perspective, which is a cognitive bias known as curse of knowledge, which makes it hard to look at something through the eyes of someone that doesn't have as much familiarity as you do.

66
00:06:23,547 --> 00:06:31,730
But developers also usually use the game in a different way than players for their workflows, where they are testing, what they are implementing and iterating on.

67
00:06:32,310 --> 00:06:34,191
Some workflows that the users will never use.

68
00:06:36,656 --> 00:06:44,698
The other thing we usually mean is that developers, and actually any player and any person, has varying amounts of personal tastes and motivations.

69
00:06:45,538 --> 00:06:50,579
They can value different features in games, be excited by different things and different genres.

70
00:06:51,760 --> 00:06:56,981
And that doesn't always align with what our audience is looking for and the game that we're trying to create.

71
00:06:58,459 --> 00:07:05,744
This is not a negative because it's awesome to get so many ideas and it's great to look at different genres.

72
00:07:06,424 --> 00:07:10,707
But you need some parameters to be able to interpret all the feedback and suggestions.

73
00:07:13,169 --> 00:07:15,670
External user testing usually solves this for us.

74
00:07:16,991 --> 00:07:20,854
When we externally test, we look for participants from the target audience.

75
00:07:21,774 --> 00:07:25,897
And sometimes we look for new players so we can specifically get a new perspective.

76
00:07:27,284 --> 00:07:35,610
And these tests can be sometimes freeform, where players play more organically, or focused, where we look at a specific part of the game and get deeper insight.

77
00:07:37,732 --> 00:07:46,659
But external testing is not always available, since sometimes there's no bandwidth or budget, and some smaller teams may not have access to these all the time.

78
00:07:50,942 --> 00:07:54,705
So, so far, I covered the benefits for iteration that come from team play testing.

79
00:07:55,509 --> 00:07:59,871
But in our team, we also saw so many benefits for the team itself.

80
00:08:01,311 --> 00:08:10,295
Full Circle is a remote studio, and this team play test became a weekly touch point for us to come together with a shared goal of making a great game.

81
00:08:11,755 --> 00:08:24,620
Over the pandemic, we had to adapt how we work, and tools like Zoom, a video conferencing app, and Miro, a digital whiteboard, became part of our day-to-day, as well as these tests, and directly impacted how we were able to conduct them.

82
00:08:27,423 --> 00:08:31,685
In this test, we share our design and intentions for different parts of the game.

83
00:08:32,485 --> 00:08:35,086
And this has helped build a shared vision among the team.

84
00:08:36,907 --> 00:08:43,850
It has also allowed us to give a chance for everyone to give input on parts of the game that they don't always work on.

85
00:08:45,611 --> 00:08:53,054
And lastly, because we're working on a multiplayer game, it actually became a fun activity where we can connect and have fun together as a team.

86
00:08:56,124 --> 00:08:58,367
Our studio is committed to diversity and inclusion.

87
00:08:58,667 --> 00:09:02,271
We want to have different perspectives in the team, and we want to listen to them.

88
00:09:02,812 --> 00:09:06,035
So this team play test became such an important practice to support this.

89
00:09:07,136 --> 00:09:11,942
But with all these different perspectives, there also came a need to interpret the feedback.

90
00:09:14,827 --> 00:09:26,893
So by now we saw that team play testing can give you a quick and low cost iteration loop, fresh eyes, and different perspectives in the team, and can help with team alignment, engagement, and creating a shared vision.

91
00:09:27,973 --> 00:09:30,895
But it has the big downside of developer biases.

92
00:09:33,196 --> 00:09:37,438
So how could we leverage the pros of team play testing while minimizing its weakness?

93
00:09:38,567 --> 00:09:44,791
Although we can never remove all the biases at play, what if we could try to find the closest to our players in our team?

94
00:09:46,753 --> 00:09:47,873
This is what we try to do.

95
00:09:49,194 --> 00:09:54,638
With our process that we call focus team playtesting, we get the team to step into the player's shoes.

96
00:09:55,619 --> 00:10:05,906
We do this by providing them with scenarios to try that are rooted in player goals, and we segment their feedback based on relevant traits that they have in similarity with players.

97
00:10:07,335 --> 00:10:15,339
And this has resulted in more meaningful feedback, which for the context of this talk means that the feedback that we saw from the team became closer to what we were seeing from players.

98
00:10:17,480 --> 00:10:19,401
And more team engagement and UX buy-in.

99
00:10:19,501 --> 00:10:24,784
So we saw more participation from the team and higher understanding of player pain points.

100
00:10:28,946 --> 00:10:34,109
So now that we covered team playtesting and talked about focusing playtesting, what does this look like?

101
00:10:36,448 --> 00:10:40,211
So for us, focused in playtesting has two key pieces.

102
00:10:41,272 --> 00:10:47,777
One is a player lens that you use to assess the game from, so that you can look at it from your player's perspective.

103
00:10:48,498 --> 00:10:55,003
And this includes scenarios that the team will try, and the user traits that you want to use to collect and weight feedback differently.

104
00:10:56,445 --> 00:11:01,769
And the other piece are the logistics around planning and running this playtest the most effectively to get relevant feedback.

105
00:11:04,895 --> 00:11:06,637
Let's talk about the player lens first.

106
00:11:07,317 --> 00:11:12,542
The player lens captures who a feature or a game is for and how it's going to be used.

107
00:11:13,223 --> 00:11:15,505
And it's composed of the scenarios and user traits.

108
00:11:17,867 --> 00:11:24,513
Scenarios represent what players will actually do and how, and is what the team will actually try in the tests.

109
00:11:26,243 --> 00:11:27,804
So what does the scenario look like?

110
00:11:28,684 --> 00:11:32,386
A scenario can be about performing a task in the game in context.

111
00:11:33,146 --> 00:11:39,829
An example where we use this was with our capture feature, a feature that allows you to capture photos and videos in the game.

112
00:11:41,049 --> 00:11:52,874
We saw that some players spend a lot of time in this feature making perfect photos and videos, but a lot of players just want to quickly go and grab a photo of something cool they just saw so they can save it and share it with others.

113
00:11:54,520 --> 00:12:02,984
So when we asked the team to test, we asked that they try using this feature in that context of just seeing something cool and wanting to quickly grab that.

114
00:12:04,284 --> 00:12:20,631
So that has taken us from asking the team to do things like just take photos and use these two features, such as camera angles, to perform a trick that you're really proud of in the game, then go to the tool, take a picture of it and save it, and continue your gameplay.

115
00:12:23,143 --> 00:12:25,908
Scenario can be about using a feature for different goals.

116
00:12:27,090 --> 00:12:31,919
We saw this with our building feature, which is a feature that allows you to place objects in the world.

117
00:12:33,038 --> 00:12:36,182
We saw some players use this feature to create skateable objects.

118
00:12:36,742 --> 00:12:40,066
And these need a lot more precision because people need to skate on them.

119
00:12:40,927 --> 00:12:44,852
But other players just use it to reach higher areas in the world and explore.

120
00:12:45,933 --> 00:12:53,042
So when we asked the team to try these tools, we asked that they try it for these two different purposes and give feedback on how well it works for either.

121
00:12:55,359 --> 00:13:01,463
A scenario can also be about placing the team in a certain situation or context that is similar to what players will experience.

122
00:13:02,584 --> 00:13:05,926
An example where we used this was testing our social experience.

123
00:13:07,107 --> 00:13:15,113
In this case, we placed the team in breakout rooms of a certain size so we could get feedback on how it feels to play our game as a party.

124
00:13:17,574 --> 00:13:19,596
And lastly, a scenario can have constraints.

125
00:13:20,598 --> 00:13:23,780
An example where we used this was also with their social experience.

126
00:13:24,621 --> 00:13:34,808
And in this case, we asked the team to not be on video conferencing and not use voice, so we could get feedback on what it feels like to play the game if you're by yourself at home.

127
00:13:38,670 --> 00:13:41,452
Now that we looked at the scenarios, let's look at user traits.

128
00:13:42,273 --> 00:13:48,457
So the user traits represent different aspects of a player that are relevant to consider for a certain design.

129
00:13:50,339 --> 00:13:54,541
An example of a trait can be the level of familiarity with a genre or feature.

130
00:13:55,602 --> 00:14:13,552
We use this one a lot, but two examples where we use this was with our capture tool for capturing photos and videos, that when we collect the feedback from the team, we ask that they give their feedback in different areas of the board that we were using, whether they were new or more experienced when using this tool.

131
00:14:14,933 --> 00:14:18,615
Another situation where we use this was with our gameplay controls.

132
00:14:19,827 --> 00:14:26,550
When we tested the controls, we asked the team to give their feedback in different areas, whether they had low, medium, or high familiarity.

133
00:14:27,671 --> 00:14:42,458
Because we're asking the team to place themselves in what user trait they think is closer to them, we gave them a proxy of how long you've been on the team is mapped to your level of familiarity.

134
00:14:44,939 --> 00:14:48,221
A user trait can be about a motivation to play the game or use a feature.

135
00:14:49,861 --> 00:14:55,405
An example where we used this was with our building tool, the tool to place objects in the world.

136
00:14:56,326 --> 00:15:00,970
We saw that some players want to make huge creations with many objects.

137
00:15:01,837 --> 00:15:05,119
while other players just want to modify something that is in the world quickly.

138
00:15:05,959 --> 00:15:09,821
And even other players are not interested in using these tools particularly.

139
00:15:10,642 --> 00:15:19,547
So when we ask the team to test these tools, we ask that they give feedback in different color sticky notes, depending on which motivation they most align on.

140
00:15:19,967 --> 00:15:23,529
So that when we look at the feedback, we can consider the player type that they relate to.

141
00:15:25,407 --> 00:15:28,530
And lastly, a user trait can be about a shared pain point.

142
00:15:29,411 --> 00:15:31,473
So we did this with our gameplay controls.

143
00:15:31,914 --> 00:15:37,079
We saw there are a few people in the team that had difficulty with the control complexity.

144
00:15:38,340 --> 00:15:48,671
So we identified those members in the team and we actually did a team play test just with those team members to get more information on the pain points and then test improvements.

145
00:15:51,414 --> 00:16:03,610
So now that we looked a little bit at the focus template testing process, I'll show you how we've used this in the past to iterate through a feature, and we mix and match testing approaches to get it from not working to a desired state.

146
00:16:04,611 --> 00:16:09,498
We did this for our capture feature, the feature that is used to create photos and videos in game.

147
00:16:11,932 --> 00:16:14,114
So we needed to do improvements to this feature.

148
00:16:14,554 --> 00:16:23,360
We saw from externally testing with players that it was not working and it was expressed through metrics that we were targeting and that were below what we wanted.

149
00:16:24,661 --> 00:16:38,110
When looking at the actual feedback of what players were saying, we saw that the feature was too complex and complicated and in one of the tests, users were overwhelmed and almost no user actually ended up using it.

150
00:16:40,287 --> 00:16:44,589
So we went back and we created a player lens to help us assess this problem from.

151
00:16:45,389 --> 00:16:56,914
And we saw with taking photos and videos, there are users that want to do complex creations and spend a lot of time in the tool, and users that just want to take a quick photo and continue playing.

152
00:16:58,335 --> 00:17:04,158
And we saw that the issue was occurring for users that wanted to quickly create, so we decided to prioritize that.

153
00:17:05,526 --> 00:17:10,549
And it kind of was supported by the research that we were seeing where players said, I just want a quick way to take a photo.

154
00:17:12,790 --> 00:17:23,937
We have another external user research test in the future for the whole game, but we didn't have any bandwidth to do any further testing milestones along the way to make sure that this feature was improving.

155
00:17:24,938 --> 00:17:26,879
So we looked at how we could do that with the team.

156
00:17:30,021 --> 00:17:33,263
We started by doing internal one-on-one tests with the team.

157
00:17:34,380 --> 00:17:42,326
We recruited participants quickly on Slack through a survey where we asked motivation that they have to create and how new they were to the team.

158
00:17:44,247 --> 00:17:53,034
Then we conducted tests over Zoom in a one-on-one scenario where we asked the team members to do tasks that were related to quickly creating.

159
00:17:54,715 --> 00:18:01,680
And after each session, we would debrief and see how well they were able to do each task and what were the problems and things we needed to improve.

160
00:18:03,854 --> 00:18:09,656
We did a total of two rounds of these one-on-one tests, each of three participants each.

161
00:18:10,076 --> 00:18:14,337
And at the end of each of those rounds, we had a new version of the design to test.

162
00:18:14,897 --> 00:18:18,698
So after the end of the internal test, we had one version.

163
00:18:20,259 --> 00:18:22,979
And at this stage, we wanted to get wider perspectives.

164
00:18:23,499 --> 00:18:25,260
So we went to the team-wide playtest.

165
00:18:26,704 --> 00:18:34,166
At this stage in development, our team-wide playtest had about 50 people, all at once, in a sort of usability test at scale.

166
00:18:37,166 --> 00:18:40,267
These days, these tests have like 100 people in them.

167
00:18:41,247 --> 00:18:54,550
I know it can maybe feel a bit overwhelming by looking at the picture, but actually when you're participating, it feels so energizing to feel like we're all playing the game at the same time, and we're all providing our opinions, and we're making the game better together.

168
00:18:57,205 --> 00:19:02,306
Because this was not a one-on-one test, we had to find ways to deliver these tasks to the team at scale.

169
00:19:03,347 --> 00:19:14,049
We used Miro, the digital whiteboard tool, to lay out the tasks that we had used in the internal one-on-one tests, a simplified version of it, so the team could do at their own pace.

170
00:19:15,870 --> 00:19:23,972
And in the board, we created two different sections for them to leave feedback as they go, and one area if they were new to the tool or more experienced.

171
00:19:25,868 --> 00:19:31,633
And after the test, I had tons of feedback and sticky notes to go through, but it was really cool.

172
00:19:31,953 --> 00:19:43,943
And I was able to find themes and see differences between what issues were affecting new participants versus more experienced participants, and was able to prioritize and decide what I would action on.

173
00:19:45,525 --> 00:19:49,948
So after this test, we had yet another version of the tool to use.

174
00:19:50,629 --> 00:19:52,831
And it was actually time to test with players again.

175
00:19:54,349 --> 00:19:58,753
So we did an external test with players at this stage, and we saw a lot of improvements.

176
00:19:59,653 --> 00:20:04,297
After these tests, we saw that players were able to accomplish all the tasks that they were meant to do with this tool.

177
00:20:05,278 --> 00:20:07,780
But we didn't quite hit all our targets.

178
00:20:08,060 --> 00:20:11,703
And in particularly, there was a usability target that we didn't hit.

179
00:20:14,505 --> 00:20:18,747
Based on feedback, we narrowed down the remaining issue to a learnability issue.

180
00:20:19,487 --> 00:20:25,370
So there was a part of the feature that players didn't understand right away, but once they use it, they found it intuitive.

181
00:20:26,811 --> 00:20:33,414
So we decided to solve this in particularly with a tutorial just to walk the player through using it for the first time.

182
00:20:35,275 --> 00:20:39,097
And we decided to test in a team-wide playtest so we could get a lot of perspectives.

183
00:20:40,831 --> 00:20:50,736
We got positive results from this internal team play test, but we also saw that we didn't have enough new people in the team to truly be confident of these results.

184
00:20:51,297 --> 00:20:53,438
So we really needed to test with external players.

185
00:20:56,460 --> 00:21:00,002
So we tested again externally and we finally hit all our metrics.

186
00:21:00,602 --> 00:21:06,165
So we achieved our targets and there were no more critical issues with this feature at this stage in development.

187
00:21:09,693 --> 00:21:16,661
So by leveraging the focus team play tests, we got internal feedback that helped us improve the solution in a way that met player needs in the end.

188
00:21:17,682 --> 00:21:24,350
And we saw the improvements happening within the team, starting to map to the improvements to our target audience more closely.

189
00:21:26,072 --> 00:21:29,957
And this was available to us when extra user testing was not possible.

190
00:21:35,868 --> 00:21:40,931
I've introduced the focused in playtesting process and we saw an example of it in practice.

191
00:21:41,772 --> 00:21:45,814
Now I'll cover an overview of what goes into planning and running one of these tests.

192
00:21:48,936 --> 00:21:52,998
In the last section, we looked at the player lens part of focused in playtesting.

193
00:21:53,619 --> 00:22:00,043
And now I'll cover the logistics, which are tightly related with how to run these most effectively.

194
00:22:00,803 --> 00:22:05,366
We'll cover the overall process, as well as some tips and tricks I want to share with you.

195
00:22:06,656 --> 00:22:10,280
My hope is that these will help you implement these with your teams.

196
00:22:10,360 --> 00:22:11,722
Maybe, who knows, next week.

197
00:22:14,685 --> 00:22:24,055
For us, running a focused team playtesting has three important stages, planning, running, and action, and key activities to do at each stage that relate to the process.

198
00:22:26,089 --> 00:22:30,753
In the planning stage, you want to create that player lens that you're going to use to assess the game from.

199
00:22:31,573 --> 00:22:34,075
And this sets the user and the context of use.

200
00:22:34,896 --> 00:22:38,038
So you're setting who it's for and how it will be used.

201
00:22:38,879 --> 00:22:43,703
In our team, usually this is done by designers, so game designer or experience designer.

202
00:22:44,343 --> 00:22:47,586
We create this based on assumptions or research that we have.

203
00:22:50,248 --> 00:22:52,970
In the planning phase, you also want to define this test format.

204
00:22:54,099 --> 00:22:59,083
So how are you going to test to approximate the context of use that players will actually be in?

205
00:23:00,024 --> 00:23:03,327
Do you need to place the team in certain constraints or contexts?

206
00:23:04,148 --> 00:23:06,510
Which tasks do you need to ask the team to perform?

207
00:23:07,250 --> 00:23:15,157
And is it better as a team play test so you get tons of perspectives, or a one-on-one scenario so you can get more deeper insights?

208
00:23:17,879 --> 00:23:19,020
Then it's time to run this test.

209
00:23:19,821 --> 00:23:26,225
There's lots that go into running a team playtesting, but the most important thing in this process, I think, is the facilitation piece.

210
00:23:27,906 --> 00:23:35,110
Here, you want to deliver clear instructions of what we're testing and why we're testing it, so people can participate.

211
00:23:36,250 --> 00:23:42,374
And then you want to make people feel they can give you honest feedback, and that their feedback and time is going to be valued.

212
00:23:44,960 --> 00:23:46,100
The last step is action.

213
00:23:46,740 --> 00:23:53,542
So, depending on the size of your team, you're gonna have tons of feedback, and you need to interpret it and define the actual improvements you wanna make.

214
00:23:54,502 --> 00:24:02,383
And here, it's really helpful to contrast the feedback that you receive from the team based on those different player types that you were seeking out.

215
00:24:04,184 --> 00:24:14,726
After this, you will have a list of improvements that you wanna make, and you will implement them, and then you can use this process, or a different process, to validate that those improvements were actually effective.

216
00:24:17,622 --> 00:24:24,065
I will cover just a bit more facilitation since I think it's an important part of getting the engagement from the team and good feedback.

217
00:24:26,606 --> 00:24:30,168
The first piece is delivering clear instructions and context.

218
00:24:31,168 --> 00:24:39,612
You wanna tell the team what we're gonna try and why, where it's at in the stage of development, and how it fits in the broader picture of the game.

219
00:24:40,633 --> 00:24:45,355
This is gonna empower them to give you feedback in relation to that and feel like they're part of the journey.

220
00:24:50,097 --> 00:24:54,160
it's really important to create an environment for honest feedback from the team.

221
00:24:54,460 --> 00:25:00,864
And this comes from having the team feel like their feedback, that they are safe and that their feedback is valued.

222
00:25:02,385 --> 00:25:12,931
This comes from really encouraging everyone's opinions, especially saying that if people feel like their opinion goes against the majority is even more important.

223
00:25:15,155 --> 00:25:18,096
and also providing inclusive ways for everyone to participate.

224
00:25:18,576 --> 00:25:26,539
So Miro has been really great for us because people can deliver their feedback by writing instead of having to speak up in front of everyone.

225
00:25:28,599 --> 00:25:36,722
And to show the impact, you always want to look back with actions and results of what you do with the feedback so people can see the outcome of their participation.

226
00:25:39,625 --> 00:25:44,186
Another thing we found helpful is asking participants to tag their feedback with names.

227
00:25:45,366 --> 00:25:58,189
This has helped us follow up if we don't understand a piece of feedback or we need a little bit more information, or also helps them understand that team member across playtest to have a better understanding of their player type and better support it.

228
00:26:00,250 --> 00:26:06,131
And lastly, and this is often a difficult one, is to always direct feedback to your collection method.

229
00:26:09,751 --> 00:26:14,773
What I mean here is that, sorry, to the collection method.

230
00:26:15,333 --> 00:26:18,914
This can be really hard in the team-wide playtest where everyone is there all at once.

231
00:26:19,534 --> 00:26:27,817
And someone may feel like something is so obvious they should just ask the group what it is, and people are going to hear their question and feel compelled to answer.

232
00:26:30,233 --> 00:26:35,218
This is hard to go around, but this actually is the feedback that you want to get.

233
00:26:35,338 --> 00:26:42,164
When someone feels like something in the feature is so obvious they should just know it, but they don't, and they feel like they need to ask the group.

234
00:26:42,665 --> 00:26:49,251
So you want to intercept, ask that they provide the feedback in your collection method, and then find a way to unblock them so they can continue with the test.

235
00:26:59,830 --> 00:27:10,496
So now that we saw the focus template testing and what it looks like and cover how you can plan and run one of these, I'll share some learnings from using this process in the past few years, and we'll wrap up.

236
00:27:13,037 --> 00:27:17,960
There was a lot to share, but I picked a few ones that I wanted to share with you today.

237
00:27:19,501 --> 00:27:22,663
One thing that we learned is that it's really important to reduce friction for the team.

238
00:27:23,723 --> 00:27:29,808
At times we wanted to ask more questions, give them more tasks, or get more granularity on their segmentation.

239
00:27:30,468 --> 00:27:37,394
But when we increased the steps and the complexity, we saw the feedback decrease and the quality of the feedback decrease.

240
00:27:39,495 --> 00:27:47,302
So we always try to be mindful that the team is seeing something for the first time and they're playing the game which takes a lot of resources.

241
00:27:48,222 --> 00:27:50,184
So we need to be mindful of their cognitive load.

242
00:27:52,932 --> 00:27:57,094
We also saw that the effectiveness of team playtesting and this process can vary.

243
00:27:57,995 --> 00:28:04,238
Although applying focused team playtesting has been better in general than when we don't apply it, it's not ideal for everything.

244
00:28:04,678 --> 00:28:08,620
And one case that we saw is when testing a tutorial or first time user experience.

245
00:28:09,400 --> 00:28:14,303
There's such a really heavy bias in the team of knowing too much about the game and being passionate.

246
00:28:14,883 --> 00:28:20,446
And it's not realistic to have a constant influx of new team members in the team to test with new perspectives.

247
00:28:23,502 --> 00:28:28,126
Another thing we saw is just how powerful first-hand experience is.

248
00:28:29,006 --> 00:28:38,594
So when the developers actually get to try the game as a player would actually do, they get a deeper understanding of the player pain points.

249
00:28:39,274 --> 00:28:42,437
And this makes them rally around fixing them.

250
00:28:42,977 --> 00:28:49,882
So instead of being a juror of something that sounds like a minor issue, they realize how frustrating and big of a deal it is.

251
00:28:50,743 --> 00:29:00,007
So this has been particularly effective on showing how sometimes simple tasks are really hard for players to do, and it's something we can forget because we use the game all the time.

252
00:29:02,668 --> 00:29:05,530
The last learning is that diversity is really key.

253
00:29:06,550 --> 00:29:11,052
You need to have diversity in the team to have access to all these different perspectives.

254
00:29:12,173 --> 00:29:17,175
This will give you more chances to find people that share different relevant traits with players.

255
00:29:22,165 --> 00:29:24,426
So how do you get your team to step into your player's shoes?

256
00:29:25,247 --> 00:29:34,271
You can do this by running more focused in-play tests, where you create a player lens, where you provide scenarios for the team to try, and get feedback based on relevant traits to the focus.

257
00:29:35,031 --> 00:29:39,874
And you plan and run these tests in a way that creates a context that players will actually be in.

258
00:29:42,315 --> 00:29:46,516
This will give you more relevant feedback and confidence that you're solving real player pain points.

259
00:29:47,416 --> 00:29:49,877
Because you set a focus, you get feedback on that focus.

260
00:29:50,457 --> 00:29:53,758
Because you give scenarios, you get feedback on things that players will actually try to do.

261
00:29:54,679 --> 00:29:58,080
And because you're segmenting, you can see which issues affect different types of users.

262
00:29:59,200 --> 00:30:02,701
This lets you weight the feedback to solve problems players will actually face.

263
00:30:05,600 --> 00:30:08,000
And it also gives you team engagement and UX buy-in.

264
00:30:08,821 --> 00:30:12,921
Because you provide a clear purpose and context, the team can give you feedback in relation to that.

265
00:30:13,722 --> 00:30:20,923
Because their feedback is more relevant, it's more likely that you're gonna apply it, and they will see the input, the outcome of their participation.

266
00:30:21,923 --> 00:30:24,043
And it's also a chance for anyone to give input.

267
00:30:24,704 --> 00:30:32,385
And we heard many times from our team members mentioning that this way they can feel that they contribute to other areas of the game they don't actively work on.

268
00:30:34,235 --> 00:30:42,697
Overall, this process has been a tool to understand and empathize with the end player experience and help rally the team around solving player needs.

269
00:30:46,277 --> 00:30:51,118
So we looked at team playtesting and how it's a useful source of feedback but can become more user-centered.

270
00:30:52,478 --> 00:30:56,599
And we saw that focused team playtests help the team try the game closer to players' perspectives.

271
00:30:57,699 --> 00:31:01,720
And that focused team playtests lead to more relevant feedback and higher team engagement.

272
00:31:04,417 --> 00:31:15,013
So after today, I hope you have the basics to invite your team to step into your player's shoes by running more focused playtests to help improve your internal feedback and increase empathy for player pain points.

273
00:31:17,506 --> 00:31:18,366
Thank you for listening.

274
00:31:20,588 --> 00:31:23,829
I wanted to share before we go for questions that Full Circle is hiring.

275
00:31:24,270 --> 00:31:31,294
So if you enjoy what you saw today and are interested with working with us, you can follow the QR code or check out our website directly.

276
00:31:32,454 --> 00:31:35,536
And with that said, I think we are out of time.

277
00:31:36,596 --> 00:31:38,938
But we can take a few questions.

278
00:31:39,598 --> 00:31:40,839
So we can take a few questions here.

279
00:31:40,959 --> 00:31:43,780
And if we have more questions, we can do it in the wrap-up room 2014.

280
00:31:46,016 --> 00:31:47,559
Please go to the mics if you have questions.

281
00:32:08,761 --> 00:32:09,441
First question there?

282
00:32:09,801 --> 00:32:10,421
Yes, hi.

283
00:32:10,781 --> 00:32:19,202
I have a quick question about, so with the way that you did the team playtesting, you had it all be happening at the same time through like a team's call or something.

284
00:32:19,702 --> 00:32:29,684
Would there be any change to the system if you're hosting this kind of playtest asynchronously where everyone's kind of doing it on their own time over like, say, an afternoon or evening that they have the time to?

285
00:32:30,504 --> 00:32:34,305
So if you were doing in person this playtest,

286
00:32:35,589 --> 00:32:40,892
or more so asynchronously, like people doing it basically on their own time when they have the chance to?

287
00:32:41,212 --> 00:32:56,339
Yeah, I think I would prepare the collection method the same way, so providing all the tasks and where things are going, where to give the feedback, and make sure that the instructions for how to test and how to deliver the feedback are very clear so people can do it on their own time.

288
00:32:56,899 --> 00:33:00,181
But I think the format works well for asynchronously as well.

289
00:33:00,581 --> 00:33:01,322
Awesome, thank you.

290
00:33:01,662 --> 00:33:01,922
Thank you.

291
00:33:04,594 --> 00:33:18,022
In a game like Skate where creativity is such a big part of it, how do you maintain a level of abstract interpretation of the level design in internal playtests where people are so familiar with the game world?

292
00:33:21,845 --> 00:33:22,625
That's a good question.

293
00:33:22,645 --> 00:33:28,728
I don't know if I have like a clear answer for that, but I would say the team is really diverse.

294
00:33:29,148 --> 00:33:32,870
So you have, we actually have people that are very aware of that.

295
00:33:33,030 --> 00:33:35,492
And there's people that don't have the same familiarity.

296
00:33:35,972 --> 00:33:48,278
So I think that's where the strength of diverse team comes because you have people that are super passionate and are going to give you like the fan feedback and you have people that are newer and can give you a perspective of someone that maybe is a potential player.

297
00:33:48,858 --> 00:33:50,479
So I would say it comes from the diversity.

298
00:33:50,879 --> 00:33:52,620
It will give you perspective from different people.

299
00:33:53,140 --> 00:33:53,701
Thank you.

300
00:33:55,001 --> 00:33:55,401
Hello.

301
00:33:56,862 --> 00:34:02,085
You guys are lucky that you have your own external playtest team that's normally supposed to do most of these playtests.

302
00:34:03,465 --> 00:34:04,326
Developers are busy.

303
00:34:04,986 --> 00:34:06,787
Every time they're playtesting, they're not developing the game.

304
00:34:06,807 --> 00:34:07,648
That's why you have that team.

305
00:34:08,888 --> 00:34:10,289
What is the ratio of

306
00:34:10,799 --> 00:34:20,813
developers playtesting versus your external team playtesting and does that change as the game matures where you want more external versus more developer it's obviously gonna be a balance of love to your perspective

307
00:34:21,636 --> 00:34:27,859
Yeah, I mean, I would say probably in the beginning, there's a little bit more internal, but you should be testing with players as soon as you can.

308
00:34:28,200 --> 00:34:30,681
But you do have access to your team a lot of the time.

309
00:34:31,221 --> 00:34:33,402
So maybe in the beginning, there's a little bit more internal.

310
00:34:34,223 --> 00:34:37,485
And later, you have access to players, which is the best target audience.

311
00:34:37,505 --> 00:34:44,809
So we still do internal because it gives you, like when we're starting out features, we can test them really quickly.

312
00:34:45,149 --> 00:34:48,851
But we start testing with players much quicker because we have all the infrastructure

313
00:34:49,791 --> 00:34:50,091
ready.

314
00:34:51,032 --> 00:35:15,247
One thing that I wanted to mention about like having developers testing the game and when they're doing it they're not developing is that there's kind of like unseen gains of having developers test the game and I kind of mentioned with like the shared vision and now they understand how the game is supposed to work and when they need to do their day-to-day decisions that you don't need like a full design spec to decide how to do one thing versus another and

315
00:35:15,707 --> 00:35:23,773
Because they participate in these sessions and they understand where we're going, they're able to make those decisions based on our best understanding of players.

316
00:35:24,133 --> 00:35:36,341
So I think you get a lot of benefits from the team culture that you create with these tests that sometimes can be forgotten because it's like, oh, the gyros are not moving.

317
00:35:36,821 --> 00:35:38,322
We're not completing them fast enough.

318
00:35:39,023 --> 00:35:39,303
Thank you.

319
00:35:41,857 --> 00:35:42,157
Hello.

320
00:35:42,858 --> 00:35:44,679
First of all, thank you for the wonderful talk.

321
00:35:45,159 --> 00:35:46,220
A lot of actionable stuff.

322
00:35:47,381 --> 00:36:07,414
A question I had, when you're doing focused playtests in a team-wide setting, how do you avoid the issue where if one person vocally focuses on one issue that the other, the rest of the team basically starts snowballing into recognizing that specific flaw and minimize the bias that people have regarding that?

323
00:36:08,430 --> 00:36:26,154
Yeah, there's definitely an issue that we had especially in the beginning when we started introducing this process and what we tried to do is set an expectation that first we want to collect things by writing so people contribute as they go in writing and then we try at the end of the session

324
00:36:26,594 --> 00:36:31,597
create like a forum for discussion so people that prefer to speak vocally can do so.

325
00:36:32,417 --> 00:36:36,579
But of course in the beginning people are going to try to talk if they're comfortable talking.

326
00:36:36,939 --> 00:36:42,362
So you want to direct, oh, we don't want to get into those issues or bias the feedback.

327
00:36:42,642 --> 00:36:44,203
But that's a great point.

328
00:36:44,563 --> 00:36:48,545
Can you write it in the board so I have that and then we can discuss more at the end.

329
00:36:49,666 --> 00:36:49,986
Thank you.

330
00:36:50,206 --> 00:36:50,486
Thank you.

331
00:36:53,393 --> 00:36:53,814
Great talk.

332
00:36:54,255 --> 00:36:55,037
I got a couple questions.

333
00:36:55,338 --> 00:37:00,028
First one is how early did you start doing focus play testing with your team?

334
00:37:01,111 --> 00:37:03,215
Was it in pre-production or were you already in full production?

335
00:37:05,305 --> 00:37:09,908
I cannot answer where we are in the process of the game, but we we started quite early.

336
00:37:10,589 --> 00:37:24,518
I think the first couple playtests Were more freeform because we had like very bare bones But I would say like half a year in we were doing focus team playtesting Especially like once we started playing with players.

337
00:37:24,698 --> 00:37:31,943
We kind of start seeing like maybe there's a bit discrepancy here that we want to get us off Okay, second question is

338
00:37:33,447 --> 00:37:39,088
Are your weekly playtests always with your full team, or did sometimes the one-on-one sessions replace those?

339
00:37:40,349 --> 00:37:44,031
In our team, the team playtest, we have one weekly.

340
00:37:44,711 --> 00:37:45,712
So it happens every week.

341
00:37:46,052 --> 00:37:50,694
And because it's scheduled, it reduces a lot of logistics of preparing and inviting everyone.

342
00:37:51,575 --> 00:37:59,659
And then different groups make their own extra playtests or one-on-one sessions when there's a need for one.

343
00:37:59,779 --> 00:38:08,583
So we have our more focused team playtesting once a week, but we also have a casual playtesting that is just for

344
00:38:08,883 --> 00:38:10,703
team, how do you initiate this process?

345
00:38:10,723 --> 00:38:17,485
Because my assumption is this team testing process can be very

346
00:38:32,629 --> 00:38:52,536
or kind of time consuming to every discipline and say, how do you convince the producers to say, how can we sleep that much time and energy on our team to do such a thing like set up those scenario and have weekly meetings, group everyone together, you know, how do we make that happen in a team?

347
00:38:53,916 --> 00:38:55,837
So, there's two scenarios here.

348
00:38:56,077 --> 00:39:00,178
I think one is a lot of teams already do internal team playtesting.

349
00:39:00,678 --> 00:39:08,401
So, that's a great opportunity to just try to sneak into that process and be like, oh, let's try this other way of running it once.

350
00:39:09,501 --> 00:39:14,164
The other part is kind of pitching for having weekly team playtests.

351
00:39:14,244 --> 00:39:20,489
And I think I would suggest kind of starting to do it by yourself and show the value that that creates.

352
00:39:20,569 --> 00:39:22,670
And then people will be more likely to invest in that.

353
00:39:23,531 --> 00:39:26,553
And then you can increase the amount of effort you put into it.

354
00:39:26,593 --> 00:39:29,755
Like maybe your first one is not focused in playtesting.

355
00:39:29,815 --> 00:39:31,336
It's just playtesting more formally.

356
00:39:31,416 --> 00:39:33,617
And then you're like, oh, maybe we should add this

357
00:39:35,238 --> 00:39:35,978
as a next step.

358
00:39:37,679 --> 00:39:41,620
I think those are kind of the main things I can think about.

359
00:39:42,320 --> 00:39:48,282
But usually if people already do internal template testing, it's easier to try something new.

360
00:39:48,742 --> 00:39:50,763
Something else I wanted to say about the cost is that

361
00:39:51,423 --> 00:39:54,725
You don't have to create this player lens and format every single time.

362
00:39:55,145 --> 00:39:59,368
Once you create it for a feature, it's really likely that you can just reuse it over playtest.

363
00:39:59,388 --> 00:40:01,469
So any changes you make, you're just trying.

364
00:40:01,869 --> 00:40:02,950
OK, we made these changes.

365
00:40:03,030 --> 00:40:07,132
Let's try it again from the player lens and see if we're getting better.

366
00:40:07,813 --> 00:40:11,315
So the cost decrease over time once it becomes something that you do often.

367
00:40:12,515 --> 00:40:13,176
Yeah, thank you.

368
00:40:13,436 --> 00:40:13,776
Thank you.

369
00:40:15,517 --> 00:40:16,277
All right, that was it.

370
00:40:16,498 --> 00:40:17,158
Thanks, everyone.

