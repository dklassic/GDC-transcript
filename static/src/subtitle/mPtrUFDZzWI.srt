1
00:00:05,797 --> 00:00:06,437
Hello, everyone.

2
00:00:06,437 --> 00:00:08,398
My name is David Huang, and I was a senior animator

3
00:00:08,398 --> 00:00:08,938
on Anthem.

4
00:00:08,938 --> 00:00:11,679
I was responsible for creating the traversal animations

5
00:00:11,679 --> 00:00:12,679
for the player character.

6
00:00:12,679 --> 00:00:14,580
And my name is Daniel Nordlander,

7
00:00:14,580 --> 00:00:17,301
and I was a senior gameplay designer on Anthem.

8
00:00:17,301 --> 00:00:20,323
I was responsible for the player character, controls, and camera.

9
00:00:20,323 --> 00:00:23,664
So during this talk, we're going to discuss

10
00:00:23,664 --> 00:00:25,885
how we created Anthem's flight mechanic,

11
00:00:25,885 --> 00:00:27,806
as that was a unique selling point of the game.

12
00:00:28,561 --> 00:00:32,245
We'll explore how creating video game characters that look and feel great to play requires

13
00:00:32,245 --> 00:00:34,827
close collaboration between design and animation.

14
00:00:34,827 --> 00:00:39,512
Even though our day-to-day work might seem totally different, with design determining

15
00:00:39,512 --> 00:00:44,697
things like physics values, movement tuning, cameras and controls, we tend to provide the

16
00:00:44,697 --> 00:00:46,339
bigger picture that animation works within.

17
00:00:47,012 --> 00:00:48,392
Our work relies heavily on one another,

18
00:00:48,392 --> 00:00:50,413
as we're both responsible for the look

19
00:00:50,413 --> 00:00:52,454
and the feel of the traversal mechanics.

20
00:00:52,454 --> 00:00:54,855
So to fully explain how we created flight in Anthem,

21
00:00:54,855 --> 00:00:55,975
we need to give the whole picture

22
00:00:55,975 --> 00:00:57,936
rather than just an animation by itself.

23
00:00:57,936 --> 00:01:00,617
It's important to take into account the design side

24
00:01:00,617 --> 00:01:02,718
and how it relates to the flight system

25
00:01:02,718 --> 00:01:05,399
to really understand how to create our animations.

26
00:01:05,399 --> 00:01:07,480
We hope to give you insight into our process,

27
00:01:07,480 --> 00:01:09,661
inspire other character designers and animators

28
00:01:09,661 --> 00:01:11,162
to use these techniques in their own work.

29
00:01:11,162 --> 00:01:13,943
To give you an idea of what the kind of game Anthem is,

30
00:01:13,943 --> 00:01:15,663
let's kick things off with a quick trailer.

31
00:01:20,682 --> 00:01:25,747
You are the chosen few, protectors of our world.

32
00:01:25,747 --> 00:01:26,848
This is your time.

33
00:01:26,848 --> 00:01:27,629
Incoming!

34
00:01:27,629 --> 00:01:30,672
Fire!

35
00:01:30,672 --> 00:01:38,660
Out there, you will fight the unimaginable.

36
00:01:48,952 --> 00:01:52,115
Feel the power of your javelin.

37
00:01:52,115 --> 00:01:55,619
It's precision.

38
00:01:55,619 --> 00:02:03,166
Rely on each other.

39
00:02:03,166 --> 00:02:05,268
Unleash your power.

40
00:02:18,726 --> 00:02:27,309
You are freelancers.

41
00:02:27,309 --> 00:02:39,472
So, in Anthem, players will fly, swim, fight, together, in a dense open world.

42
00:02:39,472 --> 00:02:42,413
So, what does that mean for the player character?

43
00:02:43,130 --> 00:02:47,254
Well, our key goals were to support a full 360 degree movement experience

44
00:02:47,254 --> 00:02:50,456
that allows for seamless transitions between movement on the ground,

45
00:02:50,456 --> 00:02:54,819
through the sky and underwater using four distinct superheroic characters.

46
00:02:54,819 --> 00:03:00,164
These characters are embodied through armored exosuits called javelins,

47
00:03:00,164 --> 00:03:03,766
which make you bigger and stronger and give you superhuman abilities.

48
00:03:03,766 --> 00:03:06,408
Each one you get into makes you a different class of superhero.

49
00:03:07,253 --> 00:03:09,776
The Colossus is a super strong tank.

50
00:03:09,776 --> 00:03:12,098
The Ranger is a versatile warrior.

51
00:03:12,098 --> 00:03:14,380
The Interceptor is a fast and agile ninja.

52
00:03:14,380 --> 00:03:18,064
And the Storm is a magic user with special powers.

53
00:03:18,064 --> 00:03:21,247
The key power that they all share is the ability to fly.

54
00:03:21,247 --> 00:03:25,091
So to give you some background to how and why the flight

55
00:03:25,091 --> 00:03:27,953
system works the way it does, let's back up a little bit and

56
00:03:27,953 --> 00:03:29,495
look at how it all started.

57
00:03:29,495 --> 00:03:30,896
What you're about to see is from an early

58
00:03:30,896 --> 00:03:31,697
prototype of the game.

59
00:03:34,806 --> 00:03:37,567
So Anthem always had exotic traversal

60
00:03:37,567 --> 00:03:39,228
as a major part of its core gameplay.

61
00:03:39,228 --> 00:03:41,289
But as you can see here,

62
00:03:41,289 --> 00:03:44,751
it was not always in the form of flight.

63
00:03:44,751 --> 00:03:45,991
Technical and design problems

64
00:03:45,991 --> 00:03:48,332
made true flight seem impossible.

65
00:03:48,332 --> 00:03:50,393
So we experimented with alternatives early on

66
00:03:50,393 --> 00:03:52,414
in the form of rocket-powered jumps,

67
00:03:52,414 --> 00:03:54,975
free-form climbing, and wingsuit-style gliding.

68
00:03:54,975 --> 00:04:00,958
So these mechanics worked really well together,

69
00:04:00,958 --> 00:04:02,979
but in the end we decided to go a different route.

70
00:04:04,672 --> 00:04:05,752
So why is that?

71
00:04:05,752 --> 00:04:10,793
Well, the mechanics gave us the verticality that we were after,

72
00:04:10,793 --> 00:04:12,074
but they didn't feel fluid enough

73
00:04:12,074 --> 00:04:15,015
and failed to satisfy the superhero fantasy, which

74
00:04:15,015 --> 00:04:16,675
is that anthem's core.

75
00:04:16,675 --> 00:04:20,016
And what's more superheroic than flight, right?

76
00:04:20,016 --> 00:04:22,997
So we realized we needed to lean more into the power fantasy

77
00:04:22,997 --> 00:04:25,298
of wearing an exosuit with jet packs.

78
00:04:25,298 --> 00:04:26,838
Why would you climb slowly up a cliff

79
00:04:26,838 --> 00:04:28,859
where you can just boost past it using your thrusters?

80
00:04:30,076 --> 00:04:32,477
We decided to implement freeform flight,

81
00:04:32,477 --> 00:04:33,777
but we knew that in order to succeed,

82
00:04:33,777 --> 00:04:36,278
we needed to solve some very specific issues.

83
00:04:36,278 --> 00:04:40,119
The first issue is if you can fly above the level,

84
00:04:40,119 --> 00:04:42,100
we have no control over what the play space is.

85
00:04:42,100 --> 00:04:44,820
You can ignore the entire level layout,

86
00:04:44,820 --> 00:04:46,441
skipping past mission objectives,

87
00:04:46,441 --> 00:04:49,342
and you have free sight lines of the entire map, which breaks

88
00:04:49,342 --> 00:04:50,442
our performance and streaming.

89
00:04:51,440 --> 00:04:53,621
The second issue is if you can fly,

90
00:04:53,621 --> 00:04:55,922
you don't really need to think about how you traverse.

91
00:04:55,922 --> 00:04:57,343
You just kind of fly in a direction

92
00:04:57,343 --> 00:04:59,264
and wait until you get there.

93
00:04:59,264 --> 00:05:01,766
There are no interesting skill checks, choices, or risks,

94
00:05:01,766 --> 00:05:03,867
which makes it boring when really it

95
00:05:03,867 --> 00:05:07,269
should feel exhilarating.

96
00:05:07,269 --> 00:05:09,531
So to address these issues, first of all,

97
00:05:09,531 --> 00:05:11,192
we added a flight ceiling above the level.

98
00:05:12,239 --> 00:05:15,120
To make it feel less limiting, we didn't make it a hard collision,

99
00:05:15,120 --> 00:05:19,141
but instead applied downwards force on players getting close to the flight ceiling

100
00:05:19,141 --> 00:05:21,361
and added presentation to make it feel like turbulence.

101
00:05:21,361 --> 00:05:26,222
Since the ceiling was hand placed, we could tailor it to our needs

102
00:05:26,222 --> 00:05:29,383
depending on the layout in that specific part of the level.

103
00:05:29,383 --> 00:05:31,764
This allowed us to get control of the play space again

104
00:05:31,764 --> 00:05:34,364
and prevent performance and streaming issues.

105
00:05:34,364 --> 00:05:38,985
It also made the player have to fly through the world rather than above it,

106
00:05:38,985 --> 00:05:41,026
preventing them from ignoring the level layout completely.

107
00:05:43,188 --> 00:05:45,449
So we also added the overheat system.

108
00:05:45,449 --> 00:05:48,570
When flying, your engine builds heat until it overheats,

109
00:05:48,570 --> 00:05:51,051
forcing you to crash land and keeping you grounded

110
00:05:51,051 --> 00:05:54,313
until the engine has cooled off again.

111
00:05:54,313 --> 00:05:56,454
So what this achieved was it gave us control

112
00:05:56,454 --> 00:05:59,555
over the ground to air ratio of a player's experience

113
00:05:59,555 --> 00:06:01,296
and gave players a reason to engage

114
00:06:01,296 --> 00:06:02,436
in ground gameplay again.

115
00:06:02,436 --> 00:06:06,138
We then layered in ways to cool off your engines

116
00:06:06,138 --> 00:06:07,378
during flight.

117
00:06:07,378 --> 00:06:10,300
For example, by flying downwards, skimming over water,

118
00:06:10,300 --> 00:06:11,420
or flying through a waterfall.

119
00:06:12,608 --> 00:06:15,110
This gave the player interesting choices while flying

120
00:06:15,110 --> 00:06:19,812
and added a layer of skill to how you choose your flight path.

121
00:06:19,812 --> 00:06:22,694
So now we had a framework for how flying worked in the game.

122
00:06:22,694 --> 00:06:24,955
The next step was to figure out how to control your javelin.

123
00:06:24,955 --> 00:06:27,356
So our biggest challenge here was

124
00:06:27,356 --> 00:06:29,757
making the transition between ground, flight,

125
00:06:29,757 --> 00:06:33,019
and underwater movement feel completely seamless.

126
00:06:33,019 --> 00:06:35,100
We started out with more traditional airplane controls,

127
00:06:35,100 --> 00:06:36,821
where the left stick on the controller

128
00:06:36,821 --> 00:06:39,583
steers your character with up and down being inverted.

129
00:06:40,563 --> 00:06:48,269
You could freely look around your character with the right stick as you flew through the world, as you can see in this video.

130
00:06:48,269 --> 00:06:53,733
So the main issue that we found with this was that the control scheme was simply too different from the ground controls.

131
00:06:53,733 --> 00:06:59,597
The transition between the two modes was jarring and players often started their flight with a nose dive into the ground.

132
00:07:02,425 --> 00:07:04,827
So we experimented a lot with different controls

133
00:07:04,827 --> 00:07:06,409
to try to solve this problem.

134
00:07:06,409 --> 00:07:07,990
At one point, we even had the trigger button

135
00:07:07,990 --> 00:07:10,072
work like a gas pedal, which felt amazing,

136
00:07:10,072 --> 00:07:12,714
but kind of makes it difficult when you're making a shooter

137
00:07:12,714 --> 00:07:15,237
since you need that button for the gun trigger.

138
00:07:15,237 --> 00:07:17,599
So we ended up with left stick controlling your speed

139
00:07:17,599 --> 00:07:19,901
while steering was done with the right stick.

140
00:07:19,901 --> 00:07:21,482
We wanted you to be able to look around

141
00:07:21,482 --> 00:07:23,263
and have the character go towards the direction

142
00:07:23,263 --> 00:07:26,346
you're looking when you press your movement stick forward,

143
00:07:26,346 --> 00:07:27,527
just like it works when you're on foot.

144
00:07:30,337 --> 00:07:33,219
So this approach made the controls a lot more simplified

145
00:07:33,219 --> 00:07:33,680
and intuitive.

146
00:07:33,680 --> 00:07:36,142
It allowed for seamless transitions

147
00:07:36,142 --> 00:07:37,563
between traversal modes.

148
00:07:37,563 --> 00:07:39,365
And instead of struggling with the controls,

149
00:07:39,365 --> 00:07:41,266
it made the players feel like superheroes.

150
00:07:41,266 --> 00:07:44,069
The main thing that we lost from this

151
00:07:44,069 --> 00:07:46,931
was the ability to freely look around the character.

152
00:07:46,931 --> 00:07:49,113
But on the other hand, this also gave us more control

153
00:07:49,113 --> 00:07:50,574
over the framing and angle,

154
00:07:50,574 --> 00:07:52,216
which became helpful when creating animations,

155
00:07:52,216 --> 00:07:54,558
as we knew exactly how the characters' movements

156
00:07:54,558 --> 00:07:55,719
would be presented to the player.

157
00:07:57,809 --> 00:07:59,330
So we had a framework for flying,

158
00:07:59,330 --> 00:08:00,771
with the controls finally figured out.

159
00:08:00,771 --> 00:08:03,653
The next issue was to make those controls translate

160
00:08:03,653 --> 00:08:06,035
to really nice movement feel.

161
00:08:06,035 --> 00:08:08,136
We started out with a more realistic physics model,

162
00:08:08,136 --> 00:08:10,778
which simulated drag and realistic velocity inheritance.

163
00:08:10,778 --> 00:08:12,939
But as is true for many games,

164
00:08:12,939 --> 00:08:15,161
we quickly realized that it's better not to worry

165
00:08:15,161 --> 00:08:16,082
too much about realism,

166
00:08:16,082 --> 00:08:18,423
and just make it feel as good as we can,

167
00:08:18,423 --> 00:08:21,105
no matter how many laws of physics we needed to break.

168
00:08:21,105 --> 00:08:22,486
And we kind of broke all of them in the end.

169
00:08:24,985 --> 00:08:26,327
So while your speed is analog, we

170
00:08:26,327 --> 00:08:28,088
did have a binary boost state that

171
00:08:28,088 --> 00:08:30,310
triggers a lot of the presentation on the character,

172
00:08:30,310 --> 00:08:33,574
such as animation post changes, effects, camera shake,

173
00:08:33,574 --> 00:08:35,475
field of view adjustments.

174
00:08:35,475 --> 00:08:36,616
So this boost state was triggered

175
00:08:36,616 --> 00:08:38,839
when moving your stick forward, so you'd immediately

176
00:08:38,839 --> 00:08:41,141
feel the kick from the boost, even though your character's

177
00:08:41,141 --> 00:08:43,863
analog speed would take a second or two to reach its max.

178
00:08:47,655 --> 00:08:49,556
So whether it was for controlling your speed,

179
00:08:49,556 --> 00:08:51,438
your side-to-side movement, or your steering,

180
00:08:51,438 --> 00:08:53,720
we had a similar setup.

181
00:08:53,720 --> 00:08:55,581
We had curves controlling desired speed

182
00:08:55,581 --> 00:08:57,102
based on your stick movement,

183
00:08:57,102 --> 00:09:00,645
acceleration and deceleration towards this desired speed.

184
00:09:00,645 --> 00:09:02,947
Modifiers making a light push on the stick

185
00:09:02,947 --> 00:09:05,229
give a slower acceleration than fully pushing it.

186
00:09:05,229 --> 00:09:07,651
We also checked for how drastically

187
00:09:07,651 --> 00:09:08,732
you tried to change direction,

188
00:09:08,732 --> 00:09:10,433
so we had more control over how it felt

189
00:09:10,433 --> 00:09:13,576
to make small adjustments versus larger movement changes.

190
00:09:14,412 --> 00:09:16,454
So all of this allowed us to get smooth movement

191
00:09:16,454 --> 00:09:22,378
that worked well for different use cases.

192
00:09:22,378 --> 00:09:24,740
We had limits in place to ensure we never went faster

193
00:09:24,740 --> 00:09:26,581
than the game could stream in the level.

194
00:09:26,581 --> 00:09:29,384
The limited speed felt okay for flying forwards,

195
00:09:29,384 --> 00:09:31,645
but when flying downwards, it felt artificially slow.

196
00:09:31,645 --> 00:09:34,487
Luckily, the streaming constraint did not apply

197
00:09:34,487 --> 00:09:36,869
to vertical movement, so we implemented a curve

198
00:09:36,869 --> 00:09:39,191
which allows you to go faster as you're flying downwards.

199
00:09:39,191 --> 00:09:43,054
You reach double speed going down versus going forwards.

200
00:09:44,078 --> 00:09:46,160
We actually tried to push it faster than that,

201
00:09:46,160 --> 00:09:47,761
but it kind of made it feel like you're hitting a wall

202
00:09:47,761 --> 00:09:51,604
as you go from a super fast dive to flying forwards again.

203
00:09:51,604 --> 00:09:53,406
So a problem with all of this is that it actually

204
00:09:53,406 --> 00:09:56,948
makes falling faster than flying straight down.

205
00:09:56,948 --> 00:09:58,910
We tried adjusting the fall speed to be slower

206
00:09:58,910 --> 00:10:00,591
to compensate, but it kind of made it feel

207
00:10:00,591 --> 00:10:02,212
like you're falling through syrup.

208
00:10:02,212 --> 00:10:04,314
So it's definitely weird physics behavior

209
00:10:04,314 --> 00:10:06,356
that falling is faster than flying down,

210
00:10:06,356 --> 00:10:08,797
but as it didn't really cause any actual exploits

211
00:10:08,797 --> 00:10:10,018
or issues in the game,

212
00:10:10,018 --> 00:10:11,600
we actually ended up shipping with this behavior.

213
00:10:14,268 --> 00:10:17,550
So now we had a framework for flying, intuitive controls,

214
00:10:17,550 --> 00:10:19,010
and nice feeling movement.

215
00:10:19,010 --> 00:10:20,791
So the next step was how to best present

216
00:10:20,791 --> 00:10:22,912
that movement with our camera.

217
00:10:22,912 --> 00:10:26,234
First of all, we used camera dampening.

218
00:10:26,234 --> 00:10:29,836
So what this does is have the camera lag behind the movement

219
00:10:29,836 --> 00:10:31,937
of the character it's tracking.

220
00:10:31,937 --> 00:10:33,658
The goal was to get a less static feel

221
00:10:33,658 --> 00:10:36,259
to the character's position in the screen space,

222
00:10:36,259 --> 00:10:38,201
get a better sense of direction, as well as

223
00:10:38,201 --> 00:10:39,861
to help you anticipate obstacles.

224
00:10:40,853 --> 00:10:44,758
The only issue is that dampening leaves the camera behind the direction you're going,

225
00:10:44,758 --> 00:10:46,400
instead of anticipating it.

226
00:10:46,400 --> 00:10:50,426
So we did some math to create a reverse dampening effect, which gives you the result you can

227
00:10:50,426 --> 00:10:51,967
see in this video.

228
00:10:51,967 --> 00:10:55,952
When turning, the camera leads in front of the player, panning slightly towards the direction

229
00:10:55,952 --> 00:10:59,016
you're steering, and offsets the character to the opposite side of the screen.

230
00:11:03,230 --> 00:11:04,830
We also did a similar calculation

231
00:11:04,830 --> 00:11:07,151
where we tied a small amount of camera roll

232
00:11:07,151 --> 00:11:09,612
based on your character's steering speed,

233
00:11:09,612 --> 00:11:12,234
so the camera tilts in the direction you're steering.

234
00:11:12,234 --> 00:11:14,014
This was done to give a better feel

235
00:11:14,014 --> 00:11:15,675
to the direction you're turning towards,

236
00:11:15,675 --> 00:11:17,196
as well as to improve the feedback

237
00:11:17,196 --> 00:11:22,738
of how strongly you were turning.

238
00:11:22,738 --> 00:11:25,379
We also tied camera framing, pitch,

239
00:11:25,379 --> 00:11:28,481
field of view, and shake to the pitch of the character.

240
00:11:29,453 --> 00:11:31,977
We used this to get more control over framing your character

241
00:11:31,977 --> 00:11:33,419
and the world as you fly through it,

242
00:11:33,419 --> 00:11:35,221
so you could easily tell what was going on

243
00:11:35,221 --> 00:11:36,022
and where you're going.

244
00:11:36,022 --> 00:11:39,206
We widened the field of view and increased the shake

245
00:11:39,206 --> 00:11:42,030
as you flew straight up and down to give a more visceral feel

246
00:11:42,030 --> 00:11:44,013
and convey the sense of speed even better.

247
00:11:45,005 --> 00:11:48,046
We also frame things differently when going up versus going down

248
00:11:48,046 --> 00:11:50,226
to better fit the needs of the player.

249
00:11:50,226 --> 00:11:52,527
When going down, you end up right behind the character,

250
00:11:52,527 --> 00:11:54,208
so you see the point you're diving towards

251
00:11:54,208 --> 00:11:55,188
and the world below you.

252
00:11:55,188 --> 00:11:57,869
But when you fly straight up, we show a lot more

253
00:11:57,869 --> 00:12:00,270
in front of the character, so the player easily

254
00:12:00,270 --> 00:12:01,890
can judge if they will collide with something

255
00:12:01,890 --> 00:12:03,751
when they decide to start flying forwards again.

256
00:12:07,262 --> 00:12:10,664
So we had a framework for flying, intuitive controls,

257
00:12:10,664 --> 00:12:12,726
nice feeling movement, and a camera

258
00:12:12,726 --> 00:12:14,487
that presented it all well.

259
00:12:14,487 --> 00:12:16,469
The final piece of the puzzle was

260
00:12:16,469 --> 00:12:17,810
to look at how we can differentiate

261
00:12:17,810 --> 00:12:21,613
all of these things based on what javelin you're wearing.

262
00:12:21,613 --> 00:12:24,475
So because Anthem is a game which is designed for co-op,

263
00:12:24,475 --> 00:12:26,097
it was very important that players

264
00:12:26,097 --> 00:12:28,018
are able to move at the same speed

265
00:12:28,018 --> 00:12:29,419
so they can stick together as a group.

266
00:12:30,368 --> 00:12:32,088
So when it came to differentiating the javelins

267
00:12:32,088 --> 00:12:34,429
and their movement field from each other,

268
00:12:34,429 --> 00:12:36,850
we could only rely on things like custom jumps,

269
00:12:36,850 --> 00:12:40,250
different steering rates, and switchback times.

270
00:12:40,250 --> 00:12:41,491
In general, we used the Ranger

271
00:12:41,491 --> 00:12:43,271
as a standard responsiveness tuning,

272
00:12:43,271 --> 00:12:45,752
and went up and down roughly 15% per suit.

273
00:12:45,752 --> 00:12:49,253
But this only got us so far.

274
00:12:49,253 --> 00:12:50,973
To truly push the movement field difference

275
00:12:50,973 --> 00:12:54,434
as far as we needed, we relied on animation to save the day,

276
00:12:54,434 --> 00:12:55,755
which brings us over to David's domain.

277
00:12:57,187 --> 00:13:00,729
Well, once we get the time values and the framework

278
00:13:00,729 --> 00:13:03,371
from the design, we can adjust the feel further

279
00:13:03,371 --> 00:13:04,272
through animation.

280
00:13:04,272 --> 00:13:06,333
To exaggerate the speed or sluggishness,

281
00:13:06,333 --> 00:13:08,175
we can clamp the values in the blend spaces

282
00:13:08,175 --> 00:13:10,776
or spring-flow in the values to dampen the motion even further.

283
00:13:11,986 --> 00:13:14,266
We separate the suits on the visual side through many ways.

284
00:13:14,266 --> 00:13:16,287
Initially, all the suits look very unique,

285
00:13:16,287 --> 00:13:18,848
as you can see from the base models and colors.

286
00:13:18,848 --> 00:13:20,308
But once the players start changing things

287
00:13:20,308 --> 00:13:21,388
with the array of paints and bit packs,

288
00:13:21,388 --> 00:13:23,569
the differences start to get pretty muddy.

289
00:13:23,569 --> 00:13:25,889
So the first thing to figure out when working on a suit

290
00:13:25,889 --> 00:13:30,130
is the main base pose, creating an easily identifiable

291
00:13:30,130 --> 00:13:32,171
and recognizable silhouette that separates it

292
00:13:32,171 --> 00:13:33,351
from the other suits at a glance.

293
00:13:34,733 --> 00:13:37,415
The Lancer is our stereotypical Rocket Man posing.

294
00:13:37,415 --> 00:13:40,518
The medium speed pose has a spread out glide style,

295
00:13:40,518 --> 00:13:43,200
and it goes into an aerodynamic facet pose,

296
00:13:43,200 --> 00:13:45,121
stretched out with its arms back at its sides

297
00:13:45,121 --> 00:13:46,482
and legs closer together.

298
00:13:46,482 --> 00:13:49,124
Since our flight has an analog speed system,

299
00:13:49,124 --> 00:13:51,005
so you're not just in one speed

300
00:13:51,005 --> 00:13:52,046
and transitioning to the next,

301
00:13:52,046 --> 00:13:55,288
where you can be feathering the input for half speeds,

302
00:13:55,288 --> 00:13:57,610
we're always constantly blending the different speed sets,

303
00:13:57,610 --> 00:13:59,031
which means we need to be aware

304
00:13:59,031 --> 00:14:01,033
of how the poses look together in the mid-range.

305
00:14:01,493 --> 00:14:04,734
so they can't be too different from each other,

306
00:14:04,734 --> 00:14:06,774
or they won't blend well.

307
00:14:06,774 --> 00:14:11,716
One of the pitfalls to try to avoid

308
00:14:11,716 --> 00:14:13,716
when creating the poses is twinning.

309
00:14:13,716 --> 00:14:15,897
It's easy to make the poses too symmetrical

310
00:14:15,897 --> 00:14:16,817
and look like a T-pose,

311
00:14:16,817 --> 00:14:19,638
basically making sure to offset any limbs slightly

312
00:14:19,638 --> 00:14:21,059
if they need to be similar.

313
00:14:21,059 --> 00:14:24,540
We also break out the poses through added layers

314
00:14:24,540 --> 00:14:25,960
being on top well,

315
00:14:25,960 --> 00:14:28,661
but it's best to try to fix this in the base pose.

316
00:14:29,881 --> 00:14:33,902
Also in the faster speed, I make sure to not collapse the arms and legs too tightly to the body.

317
00:14:33,902 --> 00:14:38,864
This gives the pose room to move and breathe and avoids clipping when the additive layers are running on top.

318
00:14:38,864 --> 00:14:43,245
For all the suits, the medium flight speed shows the most character of the poses,

319
00:14:43,245 --> 00:14:47,446
and we need to make sure that those unique parts bleed through when in the faster pose,

320
00:14:47,446 --> 00:14:50,787
since it's easy for them to fall into the straight body, arms to the side posing.

321
00:14:52,500 --> 00:14:56,664
For the Closses, I made it more upright with a bigger silhouette and less aerodynamic posing

322
00:14:56,664 --> 00:15:00,748
with its arms wider and flexed at its side, treating the Closses as though it was a big

323
00:15:00,748 --> 00:15:05,553
massive rock getting pushed forward from its jet engine, and not caring so much about aerodynamics.

324
00:15:05,553 --> 00:15:10,358
The Closses has a faceplate visor that doesn't animate and only points forward, so we needed

325
00:15:10,358 --> 00:15:14,162
the suit to be more upright to at least somewhat look like the visor area is pointing in the

326
00:15:14,162 --> 00:15:15,703
right direction, instead of looking down.

327
00:15:16,441 --> 00:15:20,884
I also made the legs closer together to bring more focus on the arms and the silhouette,

328
00:15:20,884 --> 00:15:25,226
and I bent the knee to offset the back leg plates to avoid some clipping and to vary

329
00:15:25,226 --> 00:15:26,407
up the posing from the Lancer.

330
00:15:28,022 --> 00:15:30,623
For the storm, I really leaned into the superhero posing

331
00:15:30,623 --> 00:15:32,984
that emphasized the cape and the right arm.

332
00:15:32,984 --> 00:15:34,545
I made the left arm flex outward,

333
00:15:34,545 --> 00:15:36,806
which spread out the cape better along the shoulder.

334
00:15:36,806 --> 00:15:39,527
To showcase the magic arm, I pulled the right arm out

335
00:15:39,527 --> 00:15:41,708
from the body for that clear silhouette.

336
00:15:41,708 --> 00:15:43,509
I also did a tuning pass on the cape physics

337
00:15:43,509 --> 00:15:45,230
to get the motion flowing just right,

338
00:15:45,230 --> 00:15:46,911
which was a bunch of random tuning values,

339
00:15:46,911 --> 00:15:48,772
so it was a lot of trial and error.

340
00:15:48,772 --> 00:15:51,533
To get the gun streamlined against the body when in flight,

341
00:15:51,533 --> 00:15:53,774
I added an offset atom to the weapon holster

342
00:15:53,774 --> 00:15:55,175
to keep the gun from clipping the cape.

343
00:15:56,959 --> 00:16:00,681
For the interceptor, I leaned away from the hummingbird flapping motions for the wings,

344
00:16:00,681 --> 00:16:02,401
and instead used them like fins or rudders.

345
00:16:02,401 --> 00:16:06,803
To keep the lines of the interceptor's model really clean, I always aimed for an arrow

346
00:16:06,803 --> 00:16:08,404
type of graphic in the posing.

347
00:16:08,404 --> 00:16:12,166
So the arms are always straight out with flat hands, and even in the faster pose, I made

348
00:16:12,166 --> 00:16:15,827
sure the arms were separated from the body silhouette, and not tied at its sides to still

349
00:16:15,827 --> 00:16:17,448
create that graphic.

350
00:16:17,448 --> 00:16:21,210
I also bent the left leg like the storm, but kept them streamlined for more variation.

351
00:16:23,763 --> 00:16:25,764
So the boost transitions, one of the places

352
00:16:25,764 --> 00:16:27,604
we wanted to spend some animation bandwidth

353
00:16:27,604 --> 00:16:29,965
was to sell that awesome feeling of flight transition

354
00:16:29,965 --> 00:16:32,646
from the neutral speed to the faster boost speed.

355
00:16:32,646 --> 00:16:34,167
We want you to feel that initial jolt

356
00:16:34,167 --> 00:16:35,827
as soon as you press the throttle forward

357
00:16:35,827 --> 00:16:36,908
instead of just a speed blend.

358
00:16:36,908 --> 00:16:40,129
All these boost transitions follow the same type of style.

359
00:16:40,129 --> 00:16:42,590
They open up quickly to a big anticipation pose,

360
00:16:42,590 --> 00:16:45,151
then reversing shape and tightly collapsing

361
00:16:45,151 --> 00:16:47,031
while moving forward in screen space,

362
00:16:47,031 --> 00:16:48,732
eventually opening up slightly to settle

363
00:16:48,732 --> 00:16:51,133
into that fast speed pose like an overshoot.

364
00:16:51,613 --> 00:17:00,965
Which is another reason I made sure to open up the fast B-pose more to give them room to collapse tighter in the transition for contrast between the transition and the normal fast flight.

365
00:17:00,965 --> 00:17:04,730
We also layered on top more animation and camera shake as well to sell that boost feel.

366
00:17:07,435 --> 00:17:09,898
For the base pole setup, to make the physics and blending

367
00:17:09,898 --> 00:17:11,460
into and out of flight easier, we

368
00:17:11,460 --> 00:17:13,803
kept the y-axis facing up the whole time

369
00:17:13,803 --> 00:17:15,785
and only rotating the capsule and the yaw,

370
00:17:15,785 --> 00:17:17,607
which is how every other state works in our game.

371
00:17:17,607 --> 00:17:21,071
It simplified the physics by putting more work and content

372
00:17:21,071 --> 00:17:22,152
on animation.

373
00:17:22,152 --> 00:17:24,154
So basically, the capsule and the physics model

374
00:17:24,154 --> 00:17:25,916
never rotated in the other angles,

375
00:17:25,916 --> 00:17:27,698
but just visually did it through animation.

376
00:17:28,553 --> 00:17:32,315
That means for each javelin, just the base poses for flight

377
00:17:32,315 --> 00:17:36,456
had nine animals for each slow, medium, and fast speed.

378
00:17:36,456 --> 00:17:39,337
So 27 for each suit, just to get the visual roll, pitch,

379
00:17:39,337 --> 00:17:40,537
working for the blended speeds.

380
00:17:40,537 --> 00:17:44,218
And this decision did not just affect poses,

381
00:17:44,218 --> 00:17:46,439
but every one-off motion, like the boost transitions,

382
00:17:46,439 --> 00:17:49,000
enters, and barrel rolls, had to have

383
00:17:49,000 --> 00:17:50,480
at least nine different variations as well

384
00:17:50,480 --> 00:17:51,461
for the pitch and banking.

385
00:17:52,360 --> 00:17:57,244
Even more if it needs to blend well back into the normal flight loop smoothly for the varied

386
00:17:57,244 --> 00:17:57,764
speeds.

387
00:17:57,764 --> 00:18:02,368
An example would be the boost transitions that needed 18 per suit, 9 for fast and 9

388
00:18:02,368 --> 00:18:06,672
for medium to blend out smoothly in case you had little or full input forward at the end

389
00:18:06,672 --> 00:18:09,094
of the transitions and while still being able to steer.

390
00:18:09,997 --> 00:18:12,000
Also, keeping in mind that all the additive layers

391
00:18:12,000 --> 00:18:14,283
had to work with these base poses and one-offs,

392
00:18:14,283 --> 00:18:16,906
so different variations are mainly for hip orientation

393
00:18:16,906 --> 00:18:18,288
but slight pose adjustments,

394
00:18:18,288 --> 00:18:19,849
because any big rotation changes

395
00:18:19,849 --> 00:18:21,431
might give you unexpected results.

396
00:18:21,431 --> 00:18:24,756
These are one set of speed poses in Maya

397
00:18:24,756 --> 00:18:26,097
with the trajectory pointing forward,

398
00:18:26,097 --> 00:18:27,879
so you can see the pitch and banks

399
00:18:27,879 --> 00:18:28,901
were all done just visually.

400
00:18:31,200 --> 00:18:33,701
But this is what the banking poses look like in game.

401
00:18:33,701 --> 00:18:35,542
The top row is the faster boost poses,

402
00:18:35,542 --> 00:18:38,044
and the bottom row, the medium speeds.

403
00:18:38,044 --> 00:18:39,825
You can see how the poses are just slight adjustments

404
00:18:39,825 --> 00:18:41,766
of each other and how much the camera angle

405
00:18:41,766 --> 00:18:42,967
is varied from the Maya trajectory.

406
00:18:42,967 --> 00:18:44,888
So always make sure when posing

407
00:18:44,888 --> 00:18:46,729
to work with the in-game camera in mind

408
00:18:46,729 --> 00:18:47,910
and test in-game constantly.

409
00:18:47,910 --> 00:18:50,392
What you see in Maya might not be the proper framing

410
00:18:50,392 --> 00:18:50,932
when you're playing.

411
00:18:52,996 --> 00:18:55,737
This is a representation of our layer stateful structure.

412
00:18:55,737 --> 00:18:58,778
While the main base stateflow is running or transitioning,

413
00:18:58,778 --> 00:19:00,638
we actually have all our additive poses

414
00:19:00,638 --> 00:19:03,059
nested in a layer above them that are constantly running.

415
00:19:03,059 --> 00:19:06,240
This allows us to blend the different additives on and off

416
00:19:06,240 --> 00:19:09,361
independently from the transitions for more control.

417
00:19:09,361 --> 00:19:11,502
Also, it lets the additive loops continue to play out

418
00:19:11,502 --> 00:19:13,942
rather than restarting constantly every transition

419
00:19:13,942 --> 00:19:16,743
so you're not just seeing the first same part of the loops

420
00:19:16,743 --> 00:19:17,203
all the time.

421
00:19:18,118 --> 00:19:22,280
We also have the turning additives split into two different layers so that we can offset

422
00:19:22,280 --> 00:19:27,643
and delay the turning additives on the upper body from the lower body or vice versa, which

423
00:19:27,643 --> 00:19:30,925
breaks up the linear way the additive motion would be applied on the whole body.

424
00:19:33,232 --> 00:19:34,633
We use breathing type of additives

425
00:19:34,633 --> 00:19:37,114
to break up the static poses and linear blend spaces.

426
00:19:37,114 --> 00:19:39,635
There are two main breathing animations,

427
00:19:39,635 --> 00:19:41,395
which are being layered on and blending

428
00:19:41,395 --> 00:19:42,496
to create an organic feel.

429
00:19:42,496 --> 00:19:44,257
There's a drifting type of motion

430
00:19:44,257 --> 00:19:47,198
that varies the position of the limbs in screen space

431
00:19:47,198 --> 00:19:49,358
and comes through more in the default speed.

432
00:19:49,358 --> 00:19:51,499
The second is an air current shake type of motion

433
00:19:51,499 --> 00:19:53,180
that is more pronounced in the boost,

434
00:19:53,180 --> 00:19:54,941
which gives the feeling that the suits are tensing

435
00:19:54,941 --> 00:19:56,841
the faster it goes from the air current

436
00:19:56,841 --> 00:19:58,682
and causing it to shake more and drift less.

437
00:20:00,465 --> 00:20:02,686
The turning additives are offset animations

438
00:20:02,686 --> 00:20:04,147
created from the neutral base pose.

439
00:20:04,147 --> 00:20:07,428
While we have the base poses to show the pitch and banking lean,

440
00:20:07,428 --> 00:20:09,629
we use turning additives for reactionary motion

441
00:20:09,629 --> 00:20:12,210
to make it feel more responsive to stick input.

442
00:20:12,210 --> 00:20:16,512
It's the same concept as look or lean additives for turns or runs,

443
00:20:16,512 --> 00:20:18,693
where it might take the body and the root motion

444
00:20:18,693 --> 00:20:19,473
more time to rotate,

445
00:20:19,473 --> 00:20:22,895
but the layered additives help lead the motion first

446
00:20:22,895 --> 00:20:24,335
and remove some of that delayed feeling.

447
00:20:25,657 --> 00:20:27,597
In the banking, it creates a twist and a lean

448
00:20:27,597 --> 00:20:29,018
in the movement direction.

449
00:20:29,018 --> 00:20:32,079
How big or small the additive post change created in Maya is,

450
00:20:32,079 --> 00:20:34,841
is also another way to vary up the different feel of the suits

451
00:20:34,841 --> 00:20:37,342
working in conjunction with the design tuning values.

452
00:20:37,342 --> 00:20:39,503
Where the interceptor's turning additives

453
00:20:39,503 --> 00:20:41,623
is a big motion to show responsiveness,

454
00:20:41,623 --> 00:20:44,325
a suit like the Storm's turning is more minimal and graceful.

455
00:20:46,919 --> 00:20:49,061
And for the pitch up and down, it breaks up the pose

456
00:20:49,061 --> 00:20:51,863
and by curving the bend of the body backward and forward.

457
00:20:51,863 --> 00:20:54,185
So it would just, or it would just be a flat pose

458
00:20:54,185 --> 00:20:56,748
since the up, neutral and down base poses

459
00:20:56,748 --> 00:20:59,790
don't have any spine rotation when they blend by themselves.

460
00:20:59,790 --> 00:21:03,133
All the suits have different types of steering.

461
00:21:03,133 --> 00:21:05,716
The Interceptor uses arms and wings

462
00:21:05,716 --> 00:21:07,617
in a twisting banking motion,

463
00:21:07,617 --> 00:21:11,361
where the Clossage is used more of an arm swing for steering.

464
00:21:14,806 --> 00:21:16,807
One trick to creating the additives is in Maya.

465
00:21:16,807 --> 00:21:19,309
You can have the turning additive offset poses

466
00:21:19,309 --> 00:21:21,550
in a layer above to mimic the state flow.

467
00:21:21,550 --> 00:21:23,651
Then when creating the base poses and animations,

468
00:21:23,651 --> 00:21:25,392
you can cycle through them on and off

469
00:21:25,392 --> 00:21:26,773
to check how it affects the base pose.

470
00:21:26,773 --> 00:21:30,395
Also to make sure to use FK when rotating limbs

471
00:21:30,395 --> 00:21:32,637
rather than IK when creating offset animals,

472
00:21:32,637 --> 00:21:34,378
which would result in getting random rotations

473
00:21:34,378 --> 00:21:36,539
instead of discrete, deliberate rotations

474
00:21:36,539 --> 00:21:38,260
only in certain axes that you want.

475
00:21:40,372 --> 00:21:41,673
To create the crashland state,

476
00:21:41,673 --> 00:21:43,575
it's basically just an erratic additive layer

477
00:21:43,575 --> 00:21:45,697
that is layered on top of the current flight layers.

478
00:21:45,697 --> 00:21:48,179
So you can still steer and the flight underneath

479
00:21:48,179 --> 00:21:49,180
and still work the same as before.

480
00:21:49,180 --> 00:21:52,444
This technique can be used to layer on any type of motion

481
00:21:52,444 --> 00:21:54,746
to create different status effects as well.

482
00:21:54,746 --> 00:21:56,648
For example, either turning off all the additives

483
00:21:56,648 --> 00:21:58,370
to create a freeze effect,

484
00:21:58,370 --> 00:22:00,211
or really hard shake for a shock effect.

485
00:22:02,694 --> 00:22:06,197
A great place to really sell and vary up the feel of the different flights was the one-off

486
00:22:06,197 --> 00:22:07,718
motions, like the Lancer's enter.

487
00:22:07,718 --> 00:22:12,001
Initially, we had the body really shooting forward of the trajectory and in screen space

488
00:22:12,001 --> 00:22:15,723
to show the speed, but that caused a lot of gameplay bugs with the way it would need to

489
00:22:15,723 --> 00:22:20,387
slow down and blend back to the trajectory, or flying off the screen when entering flight

490
00:22:20,387 --> 00:22:22,648
facing left or right before the camera could catch up.

491
00:22:23,555 --> 00:22:26,456
But we wanted to show the frantic power of the enter's atoms.

492
00:22:26,456 --> 00:22:29,097
We accomplished that in the motion by first dropping the body

493
00:22:29,097 --> 00:22:30,957
as though the Lancer was in free fall for a split second

494
00:22:30,957 --> 00:22:32,618
before the boosters kicked in.

495
00:22:32,618 --> 00:22:35,379
And to convey the power of it, I twisted the shoulders

496
00:22:35,379 --> 00:22:37,719
when the boosters kicked in and had the arm shooting back

497
00:22:37,719 --> 00:22:40,460
and grabbing onto the air to show it's stabilizing

498
00:22:40,460 --> 00:22:42,381
from the initial power of the motion.

499
00:22:42,381 --> 00:22:43,901
You can see the Lancer pops into a crouch pose

500
00:22:43,901 --> 00:22:46,442
right away at the start and does a big pose change

501
00:22:46,442 --> 00:22:48,563
that shoots forward into the horizontal flight pose

502
00:22:48,563 --> 00:22:49,463
within four or five frames.

503
00:22:50,244 --> 00:22:51,825
but then spends the rest of the frame time

504
00:22:51,825 --> 00:22:54,507
settling in and stabilizing to sell the motion.

505
00:22:54,507 --> 00:22:56,668
Like in fighting games, where it pops into the hip frame,

506
00:22:56,668 --> 00:22:58,350
then spends the rest of the animation time

507
00:22:58,350 --> 00:22:59,130
with overlap and settle.

508
00:22:59,130 --> 00:23:01,832
Initially, the shoulder and body twist

509
00:23:01,832 --> 00:23:03,994
was animated and built into the enters,

510
00:23:03,994 --> 00:23:06,035
but next time I'd have the twist on a layer instead,

511
00:23:06,035 --> 00:23:08,097
so it can be more varied and randomized.

512
00:23:08,097 --> 00:23:12,000
The cost in general has the same type of motion as a Lancer,

513
00:23:12,000 --> 00:23:15,402
but initially the body moves downwards more and backwards

514
00:23:15,402 --> 00:23:17,284
instead of forwards right away

515
00:23:17,284 --> 00:23:19,085
to sell that greater weight from the delay.

516
00:23:20,680 --> 00:23:22,481
You can see the comparison here where they end up

517
00:23:22,481 --> 00:23:24,481
in the same place at the same timing.

518
00:23:24,481 --> 00:23:26,742
So instead of spending the time to stabilize like the Lancer,

519
00:23:26,742 --> 00:23:28,463
it takes the Colossus longer to transition

520
00:23:28,463 --> 00:23:30,024
to that horizontal pose.

521
00:23:30,024 --> 00:23:32,085
And the arms are also delayed more to show weight,

522
00:23:32,085 --> 00:23:34,146
but the full motion is still the same amount of range,

523
00:23:34,146 --> 00:23:35,526
which helps for design.

524
00:23:35,526 --> 00:23:40,308
The Storm's Enter is a mix of the Lancers and the Colossuses.

525
00:23:40,308 --> 00:23:41,769
It has a big pop at the start,

526
00:23:41,769 --> 00:23:44,150
but then blends forward into the horizontal pose

527
00:23:44,150 --> 00:23:45,291
more slowly like the Colossus

528
00:23:45,291 --> 00:23:47,112
to have that graceful storm feel.

529
00:23:50,410 --> 00:23:52,592
For the interceptor, since I started animating the double

530
00:23:52,592 --> 00:23:54,993
and triple jumps first, I went a bit crazy

531
00:23:54,993 --> 00:23:58,116
and I knew I wanted to enter with more extreme motion

532
00:23:58,116 --> 00:23:59,737
and I wanted to show that it had more speed

533
00:23:59,737 --> 00:24:01,098
and agility than the Lancer.

534
00:24:01,098 --> 00:24:03,559
But the Lancer's enter was already as fast as it gets

535
00:24:03,559 --> 00:24:04,740
for that default motion.

536
00:24:05,320 --> 00:24:08,802
I debated about entering using a twist type of motion, but that was too similar to the

537
00:24:08,802 --> 00:24:13,323
barrel rolls, and then at first I tried using a front flip, but that caused an initial confusion

538
00:24:13,323 --> 00:24:17,545
on the button press with the double and triple jumps, not knowing what happened right away,

539
00:24:17,545 --> 00:24:21,686
whether it was a flip jump or an enter glide, so I went with a back flip.

540
00:24:21,686 --> 00:24:25,607
I need to make the visual language very clear and the motion deliberate on the button press

541
00:24:25,607 --> 00:24:26,648
to avoid any confusion.

542
00:24:28,578 --> 00:24:30,759
So saving the backlit motion for enter glide

543
00:24:30,759 --> 00:24:33,840
shows a clear, unique, big motion that you're in flight,

544
00:24:33,840 --> 00:24:36,061
which looks and feels fluid for the player camera.

545
00:24:36,061 --> 00:24:38,521
Also using a front flip for the exit anem

546
00:24:38,521 --> 00:24:40,082
blends well with the triple jump flow.

547
00:24:40,082 --> 00:24:42,182
That was one of the many lessons for me

548
00:24:42,182 --> 00:24:44,443
in understanding that flight is only one state

549
00:24:44,443 --> 00:24:45,723
in a chain of motions,

550
00:24:45,723 --> 00:24:47,984
not just thinking of it as a separate state on its own.

551
00:24:47,984 --> 00:24:50,585
Realizing how it feels to transition in and out

552
00:24:50,585 --> 00:24:52,525
with the other states was really important.

553
00:24:53,266 --> 00:24:55,829
A benefit of having one animator on the full traversal loop,

554
00:24:55,829 --> 00:24:58,513
from jump to fall, hover and flight and swim,

555
00:24:58,513 --> 00:25:01,718
gave a consistent feel and fluidity between all the states.

556
00:25:01,718 --> 00:25:05,003
The consistency can come down to stylistic animation choices,

557
00:25:05,003 --> 00:25:07,567
but can also depend on small differences of a few frames

558
00:25:07,567 --> 00:25:08,628
or blend times in transitions.

559
00:25:11,218 --> 00:25:14,720
The barrel roll was another one-off motion that we had.

560
00:25:14,720 --> 00:25:17,422
For the Lancer, I made sure the barrel roll was very slow,

561
00:25:17,422 --> 00:25:19,863
a very nonchalant, I've done it a billion times maneuver.

562
00:25:19,863 --> 00:25:23,065
I thought of it as a very low effort veteran soldier

563
00:25:23,065 --> 00:25:24,886
type of move where it's sluggish

564
00:25:24,886 --> 00:25:26,867
and doesn't tighten up too much in the roll,

565
00:25:26,867 --> 00:25:28,448
which is characteristic of the Lancer,

566
00:25:28,448 --> 00:25:30,549
but also shows a contrast with the Interceptor.

567
00:25:32,538 --> 00:25:34,539
For the Colossus, I initially was going to propose

568
00:25:34,539 --> 00:25:36,999
a slow type of barrel roll that shoots out flares,

569
00:25:36,999 --> 00:25:38,720
like a military carrier plane.

570
00:25:38,720 --> 00:25:40,521
Then we opted to lean into a shield mechanic

571
00:25:40,521 --> 00:25:42,901
and just added a shield arm override.

572
00:25:42,901 --> 00:25:47,043
The Storm's Evade is just using the Lancer's barrel roll.

573
00:25:47,043 --> 00:25:49,324
Since the storm is invisible most of the time

574
00:25:49,324 --> 00:25:50,704
with a lot of visual effects,

575
00:25:50,704 --> 00:25:52,625
I didn't feel the need to create another set,

576
00:25:52,625 --> 00:25:54,625
especially with the time we had left.

577
00:25:54,625 --> 00:25:55,886
And using a longer blend out,

578
00:25:55,886 --> 00:25:57,987
we could hide the end pose differences.

579
00:25:59,866 --> 00:26:02,167
The interceptor was basically a retarget of the Lancer,

580
00:26:02,167 --> 00:26:03,448
but I added two more spins in the row

581
00:26:03,448 --> 00:26:06,510
and tightened up the pose in the spin for a sleeker silhouette

582
00:26:06,510 --> 00:26:09,712
and also shortened the recovery time to show it being lighter

583
00:26:09,712 --> 00:26:11,433
and more agile than the Lancer.

584
00:26:11,433 --> 00:26:15,376
To save animation costs, the barrel rolls are nine atoms

585
00:26:15,376 --> 00:26:17,037
that we ended in a blended pose

586
00:26:17,037 --> 00:26:18,898
between the medium and fast speed,

587
00:26:18,898 --> 00:26:21,420
which we used the longer branch out back into flight

588
00:26:21,420 --> 00:26:22,540
instead of doing 18 or 27 atoms.

589
00:26:22,540 --> 00:26:24,902
It's such a big motion that it didn't need

590
00:26:24,902 --> 00:26:27,063
to blend perfectly back.

591
00:26:28,887 --> 00:26:29,987
So as you can see in the end,

592
00:26:29,987 --> 00:26:31,848
when creating an animation system like Flight,

593
00:26:31,848 --> 00:26:33,709
it's very different than creating one-off animations.

594
00:26:33,709 --> 00:26:36,191
There are a lot that goes into getting the feel just right,

595
00:26:36,191 --> 00:26:39,332
and only so much you can do through animation alone.

596
00:26:39,332 --> 00:26:41,574
Having to depend on things like physics values,

597
00:26:41,574 --> 00:26:44,035
tuning, cameras, controls, visual effects,

598
00:26:44,035 --> 00:26:46,036
and countless small things all add up

599
00:26:46,036 --> 00:26:47,477
to create a bigger picture.

600
00:26:47,477 --> 00:26:49,378
It's really a marriage between design and animation

601
00:26:49,378 --> 00:26:50,899
with lots of back and forth,

602
00:26:50,899 --> 00:26:52,560
and even good communication

603
00:26:52,560 --> 00:26:53,620
between the different departments.

604
00:26:54,254 --> 00:26:56,336
Yeah, we truly feel that animation and gameplay design

605
00:26:56,336 --> 00:26:57,998
are two sides of the same coin,

606
00:26:57,998 --> 00:27:01,322
especially so when creating exotic traversal abilities

607
00:27:01,322 --> 00:27:02,483
for player characters,

608
00:27:02,483 --> 00:27:04,205
which are so dependent on player input.

609
00:27:04,205 --> 00:27:06,748
One side influences the other,

610
00:27:06,748 --> 00:27:09,031
and we hope to have shown how our different parts aligned

611
00:27:09,031 --> 00:27:10,513
to create the final experience

612
00:27:10,513 --> 00:27:11,714
that we deliver to our players.

613
00:27:12,610 --> 00:27:14,451
To close things off, we just want to give a shout out

614
00:27:14,451 --> 00:27:15,992
to our amazing team over at Bioware,

615
00:27:15,992 --> 00:27:17,973
without whom we never could have realized the flying as well

616
00:27:17,973 --> 00:27:19,134
as we did.

617
00:27:19,134 --> 00:27:21,815
While we focused this talk around animation and design,

618
00:27:21,815 --> 00:27:23,717
adding the ability to fly to a game

619
00:27:23,717 --> 00:27:26,558
has huge ramifications across all disciplines

620
00:27:26,558 --> 00:27:28,359
and how they do their work.

621
00:27:28,359 --> 00:27:30,781
It required tons of collaboration and communication

622
00:27:30,781 --> 00:27:32,362
and was truly a team effort.

623
00:27:32,362 --> 00:27:35,184
These are just some of the key collaborators

624
00:27:35,184 --> 00:27:37,165
that helped us bring flying to life.

625
00:27:37,165 --> 00:27:38,626
We're honored and proud to be here today

626
00:27:38,626 --> 00:27:40,587
to represent the entire team's hard work.

627
00:27:40,587 --> 00:27:41,748
Thank you very much.

628
00:27:47,676 --> 00:28:00,829
So, I don't know, do we have time for questions?

629
00:28:00,829 --> 00:28:02,511
One, maybe two.

630
00:28:02,511 --> 00:28:03,351
One, maybe two.

631
00:28:03,351 --> 00:28:04,092
If anyone has any questions.

632
00:28:04,092 --> 00:28:07,135
There's mics over there.

633
00:28:10,775 --> 00:28:13,777
So hi, congratulations on your game.

634
00:28:13,777 --> 00:28:17,139
I also played it, fantastic flight system.

635
00:28:17,139 --> 00:28:20,661
My question is, there are games like Gravity Rush,

636
00:28:20,661 --> 00:28:24,984
don't know if you played them, they don't have a ceiling.

637
00:28:24,984 --> 00:28:28,347
And they don't impact gameplay without having a ceiling.

638
00:28:29,187 --> 00:28:37,169
What was actually the decision that you made to just cut out the open world feeling of

639
00:28:37,169 --> 00:28:38,470
flying everywhere?

640
00:28:38,470 --> 00:28:42,190
Why did you implement that in the beginning instead of just experimenting with it?

641
00:28:42,190 --> 00:28:42,651
Sure thing.

642
00:28:42,651 --> 00:28:46,471
So we actually did experiment quite a lot, and Gravity Rush was one of many reference

643
00:28:46,471 --> 00:28:48,772
games that we actually looked at on how they solved this problem.

644
00:28:48,772 --> 00:28:50,072
It's a really good game, by the way.

645
00:28:50,072 --> 00:28:51,013
I really like it.

646
00:28:51,993 --> 00:28:57,355
So the thing with that that's interesting is what they do is they tend to hide it with VFX or things like that

647
00:28:57,355 --> 00:29:01,916
that kind of blocks out the world when it's really far below you.

648
00:29:01,916 --> 00:29:06,418
So we tried some approaches there, but I think the main concern there was still that

649
00:29:06,418 --> 00:29:10,499
you didn't really have to fly through the world, you could just fly above it

650
00:29:10,499 --> 00:29:16,302
and at that point you were just kind of taking off into the distance and you sat there for a long time without really needing to interact.

651
00:29:16,622 --> 00:29:19,104
or do anything with it, and it tended to become kind of boring.

652
00:29:19,104 --> 00:29:22,226
So that was the thing. As soon as we lowered the ceiling a little bit

653
00:29:22,226 --> 00:29:24,347
and made you actually have to fly through the world,

654
00:29:24,347 --> 00:29:26,589
we found that players were way more engaged by it.

655
00:29:26,589 --> 00:29:27,670
So that's why we opted for that.

656
00:29:27,670 --> 00:29:31,112
Okay. Thank you very much. Thank you.

657
00:29:31,112 --> 00:29:32,393
Okay, if we have any more questions,

658
00:29:32,393 --> 00:29:34,074
we're going to be out by the exit over there.

659
00:29:34,074 --> 00:29:35,255
And just approach us,

660
00:29:35,255 --> 00:29:37,297
and we're going to find the breakout room together.

661
00:29:37,297 --> 00:29:38,177
Okay. Thank you. Thank you.

