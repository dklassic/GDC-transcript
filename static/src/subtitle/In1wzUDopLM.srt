1
00:00:03,115 --> 00:00:08,697
Excellent. Wow. This is a much larger turnout than I would have ever expected when I drafted

2
00:00:08,737 --> 00:00:12,999
this. So how's everyone doing? Thank you all for coming to the talk today. I'd like to take a

3
00:00:13,019 --> 00:00:18,861
quick second to remind you all, please turn off your cell phones. It's very interrupting when

4
00:00:18,881 --> 00:00:21,442
all of a sudden you hear baby got back in the middle of one of your conference

5
00:00:21,462 --> 00:00:27,244
presentations. Also, please, too, please make sure to fill out the little surveys they give

6
00:00:27,264 --> 00:00:31,125
you guys. It's one of the only ways I know how bad I screwed up my talk during GDC.

7
00:00:31,648 --> 00:00:33,468
And that's important for me to grow as a speaker.

8
00:00:33,748 --> 00:00:36,689
For those of you filtering in, we've got a couple seats here

9
00:00:36,709 --> 00:00:37,109
in the middle.

10
00:00:37,709 --> 00:00:40,430
And please look to the people in the yellow shirts, and they

11
00:00:40,450 --> 00:00:41,410
will direct you where to go.

12
00:00:42,030 --> 00:00:43,951
So with that, let's go ahead and get going, because we've

13
00:00:43,971 --> 00:00:44,751
got a lot of stuff to do.

14
00:00:45,431 --> 00:00:46,251
So hello, everybody.

15
00:00:46,391 --> 00:00:49,292
My name is Colt McAnlis, and I'm a programmer at Bonfire

16
00:00:49,332 --> 00:00:49,812
Studios.

17
00:00:50,072 --> 00:00:52,432
And when I'm not working too hard there, I'm also an

18
00:00:52,592 --> 00:00:55,613
adjunct professor at SMU Guildhall School for Video Game

19
00:00:55,633 --> 00:00:58,114
Development, where I teach various things like physics

20
00:00:58,234 --> 00:01:00,094
and multi-threading and all those fun things.

21
00:01:00,564 --> 00:01:04,046
And before it was closed down in January of this year, I was a

22
00:01:04,066 --> 00:01:07,427
graphics programmer at Microsoft Ensemble Studios. Now, for those

23
00:01:07,447 --> 00:01:10,948
of you who had seen previous Ensemble talks, you know that

24
00:01:10,968 --> 00:01:13,450
there's usually one guy stuck in a basement for about three years

25
00:01:13,830 --> 00:01:16,831
whose entire job is to work on train and whatnot. Fortunately,

26
00:01:16,851 --> 00:01:18,972
when I was hired there, they said, hey, guess what? You're

27
00:01:19,012 --> 00:01:22,974
that new guy. Which isn't all that bad. It gave us a chance to

28
00:01:23,254 --> 00:01:26,375
work on some new things and we got a chance to bring up this

29
00:01:26,435 --> 00:01:26,935
nifty talk.

30
00:01:27,444 --> 00:01:29,085
Before we get going today, I just kind of want to do a

31
00:01:29,125 --> 00:01:32,068
little survey of who's in the room so I kind of know if I

32
00:01:32,108 --> 00:01:34,810
should skip over things or whatnot. So let's start with

33
00:01:34,990 --> 00:01:38,974
artists. Please raise your hand. You get a prize after the

34
00:01:39,014 --> 00:01:41,956
show. I don't know what it is yet, but we'll get it.

35
00:01:42,196 --> 00:01:48,862
Designers? He got your prize already. Sorry. Non-artist,

36
00:01:48,942 --> 00:01:53,105
non-programmer, non-designer. So media or administration. A

37
00:01:53,125 --> 00:01:56,368
couple of you guys. Excellent. So programmers then, everybody

38
00:01:56,508 --> 00:01:57,188
else I'm imagining.

39
00:01:57,451 --> 00:01:59,152
All right, yeah.

40
00:01:59,932 --> 00:02:00,933
Why did I not expect that?

41
00:02:01,854 --> 00:02:03,595
So for those of you who are programmers,

42
00:02:03,935 --> 00:02:05,716
let's see your hands again if you've actually implemented

43
00:02:05,796 --> 00:02:07,137
a height field terrain before.

44
00:02:08,738 --> 00:02:10,479
OK, interesting subset of that.

45
00:02:10,539 --> 00:02:13,401
And for those of you who've implemented that, how many

46
00:02:13,421 --> 00:02:15,422
of you have actually made an RTS game?

47
00:02:17,443 --> 00:02:18,364
OK, interesting.

48
00:02:18,424 --> 00:02:19,084
Well, don't worry.

49
00:02:19,585 --> 00:02:21,105
Like I said, Ensemblz is closed down,

50
00:02:21,145 --> 00:02:22,026
so we're not really competitors.

51
00:02:23,747 --> 00:02:24,888
Don't tell anybody that.

52
00:02:25,618 --> 00:02:27,500
So anyhow, let's get two things.

53
00:02:27,560 --> 00:02:32,384
So we started prototyping the RTS on a console idea

54
00:02:32,424 --> 00:02:34,125
in around 2004, 2005.

55
00:02:34,806 --> 00:02:36,547
And we finally got around to the fact

56
00:02:36,587 --> 00:02:39,169
that it was far enough along that in early 2006, we said,

57
00:02:39,209 --> 00:02:41,691
hey, let's just go ahead and scrap what we were working with

58
00:02:42,171 --> 00:02:45,033
and start a brand new engine from scratch on the Xbox 360.

59
00:02:45,334 --> 00:02:47,175
Up until this point, we had our prototypes

60
00:02:47,235 --> 00:02:50,378
working on the H3 engine, working with the controller,

61
00:02:50,878 --> 00:02:52,199
had some different builds and whatnot.

62
00:02:52,479 --> 00:02:54,000
But we really said we had to hunker down.

63
00:02:54,360 --> 00:02:56,481
Now, anytime you start from scratch and you build some new

64
00:02:56,521 --> 00:02:58,423
technology, you kind of have to have some bullet points and

65
00:02:58,443 --> 00:03:01,045
some guidelines that says, here's what we're going for.

66
00:03:01,505 --> 00:03:04,427
So when we created the engine, we said, first off, we need to

67
00:03:04,447 --> 00:03:06,689
make sure that we're taking control of the hardware to

68
00:03:06,729 --> 00:03:07,449
create new visuals.

69
00:03:07,769 --> 00:03:10,051
We didn't want anyone to think that when this game shipped,

70
00:03:10,111 --> 00:03:14,054
that it was a port of any PC technology to the 360, or that

71
00:03:14,094 --> 00:03:16,616
later on they said, well, that looked OK, but you could do all

72
00:03:16,656 --> 00:03:17,516
that on the PC.

73
00:03:17,596 --> 00:03:17,756
No.

74
00:03:17,997 --> 00:03:22,120
We wanted every frame of our game to scream Xbox 360 at you.

75
00:03:22,180 --> 00:03:22,860
And I guess.

76
00:03:23,770 --> 00:03:26,313
you guys can tell us whether or not we succeeded at that, but

77
00:03:26,333 --> 00:03:29,156
at the time this is our goal. The second step was we wanted

78
00:03:29,176 --> 00:03:31,679
to make sure that we took advantage of the hardware on the

79
00:03:31,719 --> 00:03:34,222
performance side of things so that our simulation could take

80
00:03:34,262 --> 00:03:36,885
advantage of it. This meant going back and revisiting some

81
00:03:36,925 --> 00:03:39,828
things like our simulation to say, hey, you need to take path

82
00:03:39,888 --> 00:03:42,632
finding and put it on multiple cores or your animation update

83
00:03:42,652 --> 00:03:43,633
and put it on multiple cores.

84
00:03:43,918 --> 00:03:45,699
And this was kind of different because this was actually the

85
00:03:45,739 --> 00:03:49,060
first game that Ensemble Studios did that had multiple

86
00:03:49,100 --> 00:03:52,041
processors. We had done a little bit of success with it in the

87
00:03:52,081 --> 00:03:54,301
past, but never to the degree that we were working with on the

88
00:03:54,381 --> 00:03:57,582
Xbox 360. And finally, we wanted to make sure that anything we

89
00:03:57,622 --> 00:04:00,023
were contributing to this new engine and this new technology

90
00:04:00,483 --> 00:04:03,904
actually was pushing the genre forward. So the RTS space is

91
00:04:03,964 --> 00:04:07,645
actually a pretty small niche of the gaming community, and we

92
00:04:07,665 --> 00:04:09,805
wanted to make sure that no one came back and said, oh, well,

93
00:04:10,145 --> 00:04:12,607
they could only do that because they were on the 360 and it was

94
00:04:12,627 --> 00:04:15,990
the Halo IP. No, no, no, no, no. We wanted to make sure that

95
00:04:16,310 --> 00:04:18,252
sooner or later someone down the line, they would go, well,

96
00:04:18,272 --> 00:04:20,734
hey, this was a really cool thing that no one had done

97
00:04:20,754 --> 00:04:23,536
before and they did it in Halo Wars, let's go do it again.

98
00:04:24,925 --> 00:04:27,606
So I actually get this question from a lot of people.

99
00:04:27,646 --> 00:04:28,927
And when we started the prototyping,

100
00:04:29,067 --> 00:04:30,828
I got this question from management a lot.

101
00:04:31,068 --> 00:04:33,270
They said, why did you want to make new terrain?

102
00:04:33,290 --> 00:04:35,611
I mean, honestly, for most video games

103
00:04:35,671 --> 00:04:37,312
out there, first-person shooters included,

104
00:04:37,852 --> 00:04:40,294
terrain is not really a huge part of your visual space.

105
00:04:40,374 --> 00:04:42,235
But for RTSs, you have to understand

106
00:04:42,655 --> 00:04:45,637
that it's a massive part of your visual area, up to 70% to 98%,

107
00:04:46,037 --> 00:04:47,138
even 100% in a lot of times of your visual space.

108
00:04:50,118 --> 00:04:51,999
For us, we had the decision early on.

109
00:04:52,039 --> 00:04:54,900
We said, well, we can go innovate like most games do

110
00:04:54,980 --> 00:04:58,082
and focus on increasing our technology for rendering

111
00:04:58,122 --> 00:05:00,303
meshes, which a lot of RTSs will do that.

112
00:05:00,323 --> 00:05:02,103
They'll have a very low resolution terrain,

113
00:05:02,424 --> 00:05:03,744
and they'll include a lot of technology

114
00:05:03,764 --> 00:05:06,766
for getting more meshes, more particles, better

115
00:05:06,866 --> 00:05:07,806
animation, and these things.

116
00:05:08,366 --> 00:05:11,308
Or we can go for what's actually taking up most of the screen

117
00:05:11,648 --> 00:05:14,149
and innovate in that space and sort of see what that gives us

118
00:05:14,169 --> 00:05:15,390
and see where that moves us.

119
00:05:16,167 --> 00:05:18,908
On top of that, we had some issues with the prior technology.

120
00:05:19,228 --> 00:05:21,329
For those of you who had played Age of Empires III,

121
00:05:21,629 --> 00:05:24,450
you know that one of the big features of it was the cliffing system,

122
00:05:24,930 --> 00:05:28,952
which was effectively a way to hide texture stretching on our height fields.

123
00:05:29,512 --> 00:05:33,694
The cool thing about it was that it gave an amazing look for horizontal displacement

124
00:05:33,734 --> 00:05:36,215
and got rid of all those problems that you see with texture stretching.

125
00:05:36,616 --> 00:05:38,897
A downside was the content creation process.

126
00:05:39,264 --> 00:05:43,929
Effectively, how we created these things was we took meshes from 3D Studio Max, which were

127
00:05:43,969 --> 00:05:47,792
high tessellated, and then we would apply a displacement texture to them in the vertex

128
00:05:47,812 --> 00:05:51,096
shader and then kind of snap them in the terrain at various places we wanted.

129
00:05:51,976 --> 00:05:57,041
It was really an awkward process because you had artists creating these meshes in separate

130
00:05:57,201 --> 00:06:01,185
tools that then they would take back and sort of fuse into the terrain in our editor.

131
00:06:01,651 --> 00:06:04,094
and it never really kind of synced up too well.

132
00:06:04,114 --> 00:06:05,776
There was always these little things you had to work with

133
00:06:05,836 --> 00:06:07,017
because the textures didn't match

134
00:06:07,097 --> 00:06:08,539
and the resolution didn't match

135
00:06:08,819 --> 00:06:10,361
and we just didn't want to bring that over to the 360.

136
00:06:11,523 --> 00:06:12,103
On top of that,

137
00:06:12,704 --> 00:06:16,188
although the cliffing system allowed the age maps to be random

138
00:06:16,328 --> 00:06:19,332
and to have a lot of user-generated content and things like that,

139
00:06:20,353 --> 00:06:22,475
that was not the way that Halo Wars wanted to go.

140
00:06:23,150 --> 00:06:26,713
Our goal artistically was to create unique handcrafted maps.

141
00:06:26,773 --> 00:06:28,855
From the get-go, the vision was that every map

142
00:06:28,935 --> 00:06:31,857
had to leave an impression in the end user's mind.

143
00:06:32,117 --> 00:06:33,559
The problem with the cliffing system

144
00:06:33,599 --> 00:06:36,601
was that you kind of ended up with a lot of visuals that

145
00:06:36,621 --> 00:06:37,722
looked identical to each other.

146
00:06:37,762 --> 00:06:39,324
You couldn't tell one map from the other map

147
00:06:39,364 --> 00:06:41,445
if it used the same cliff and all these other prefabs.

148
00:06:41,505 --> 00:06:44,828
So we couldn't really get the unique handcrafted look

149
00:06:44,868 --> 00:06:45,789
with our prior tool set.

150
00:06:46,637 --> 00:06:52,683
So just to give everyone an idea of where we were and where we're going, this is a wireframe

151
00:06:52,743 --> 00:06:57,609
overlay of the H3 train. And I'm going to try this here. Is that even showing up up there?

152
00:06:57,629 --> 00:07:02,774
A little red dot? You guys can see that in the back? Fantastic. Okay. So let's see if this will

153
00:07:02,794 --> 00:07:02,915
work.

154
00:07:04,053 --> 00:07:05,373
This could make me crash and burn.

155
00:07:05,693 --> 00:07:08,355
So we've got, you can see this is a low resolution height

156
00:07:08,395 --> 00:07:09,135
field, OK?

157
00:07:09,375 --> 00:07:11,596
And then you can see here that we've got our inserted

158
00:07:12,016 --> 00:07:13,036
cliffing mesh pieces.

159
00:07:13,096 --> 00:07:14,377
Now, these mesh pieces themselves

160
00:07:14,417 --> 00:07:17,138
are about 8x the resolution of these pieces here.

161
00:07:17,158 --> 00:07:19,539
And you can see like these sliver polygons

162
00:07:19,559 --> 00:07:20,679
there is where we've welded.

163
00:07:20,999 --> 00:07:23,100
And you can also see here, I'm not

164
00:07:23,120 --> 00:07:24,561
sure how it shows up on the big screen,

165
00:07:24,601 --> 00:07:26,061
but you can see this little line.

166
00:07:26,522 --> 00:07:27,922
right there and on the top here,

167
00:07:28,262 --> 00:07:30,603
where the texture that's applied to these cliffing pieces

168
00:07:30,643 --> 00:07:33,504
doesn't really match up with the texturing that's actually on the terrain.

169
00:07:33,784 --> 00:07:36,805
And this is because that those texture pieces were made in a separate app,

170
00:07:37,045 --> 00:07:39,086
in a separate environment, and then sort of just welded in.

171
00:07:39,406 --> 00:07:43,388
This meant that the artist kind of always had to keep up with the process

172
00:07:43,408 --> 00:07:46,869
to make sure that no one put a cliff in or that the textures weren't off-kilter.

173
00:07:48,328 --> 00:07:50,349
So the new terrain specifications, now that we

174
00:07:50,369 --> 00:07:52,550
talked about why we wanted to create new terrain, what's our

175
00:07:52,590 --> 00:07:53,870
goal in doing so?

176
00:07:54,130 --> 00:07:55,911
So first off, we wanted to remove the cliff pieces.

177
00:07:55,971 --> 00:07:58,852
I think that was actually the only bullet point we had on the

178
00:07:58,872 --> 00:07:59,512
board at the time.

179
00:08:00,192 --> 00:08:02,213
But to do that, we had to accomplish a number of things.

180
00:08:02,733 --> 00:08:04,993
First off, we decided, well, if we're getting rid of the cliff

181
00:08:05,033 --> 00:08:07,274
pieces, we have to somehow match that resolution.

182
00:08:07,374 --> 00:08:11,355
So let's just increase the resolution of all the terrain

183
00:08:11,395 --> 00:08:11,955
by 8x.

184
00:08:11,995 --> 00:08:13,676
I mean, hell, we're on the Xbox 360.

185
00:08:14,076 --> 00:08:15,076
Why can't we do that?

186
00:08:16,577 --> 00:08:17,917
Because it matched the cliff resolution.

187
00:08:18,438 --> 00:08:20,339
At the time we were like, well, it seems like a good idea.

188
00:08:21,080 --> 00:08:22,100
We didn't know if it worked or not.

189
00:08:22,500 --> 00:08:23,981
The second thing was that we still

190
00:08:24,021 --> 00:08:26,383
needed to get that horizontal displacement that the cliff

191
00:08:26,443 --> 00:08:27,564
system allowed you to get.

192
00:08:27,584 --> 00:08:29,005
That's actually the big thing.

193
00:08:29,025 --> 00:08:30,265
When you're dealing with a height field,

194
00:08:30,546 --> 00:08:35,589
you really can only deal with sort of a shell mesh,

195
00:08:35,749 --> 00:08:38,971
sort of the sheet dropped on a bunch of objects type thing.

196
00:08:39,491 --> 00:08:42,733
But we needed to still give you that visual appeal of having

197
00:08:42,753 --> 00:08:43,934
that horizontal displacement.

198
00:08:44,300 --> 00:08:46,983
So we implemented something called a vector field train,

199
00:08:47,023 --> 00:08:48,684
which I'll cover a little bit more here in a second.

200
00:08:48,884 --> 00:08:50,246
But what it allowed us to do is actually

201
00:08:50,286 --> 00:08:52,368
get that horizontal displacement without having

202
00:08:52,428 --> 00:08:53,789
to create all these other pieces.

203
00:08:54,430 --> 00:08:56,813
So again, here is our Age of Empires III train.

204
00:08:57,473 --> 00:09:00,096
And in contrast, here is a screenshot from Halo Wars.

205
00:09:00,136 --> 00:09:01,778
Now for those of you who've played the game,

206
00:09:01,838 --> 00:09:04,240
hopefully most of you have, and that's why you're here.

207
00:09:04,844 --> 00:09:05,745
That makes me really happy.

208
00:09:06,366 --> 00:09:08,548
This is actually a screenshot from our Blood Gulch

209
00:09:08,608 --> 00:09:09,308
multiplayer map.

210
00:09:09,609 --> 00:09:11,371
Now, the immediate thing that stand out to me

211
00:09:11,391 --> 00:09:12,452
and that I kind of want to point out here

212
00:09:12,512 --> 00:09:14,874
is that the terrain looks much more organic

213
00:09:14,914 --> 00:09:15,595
in this environment.

214
00:09:15,615 --> 00:09:17,156
It looks like it actually exists.

215
00:09:17,216 --> 00:09:20,760
And the height difference from the bottom of the screen

216
00:09:20,800 --> 00:09:22,862
here to the top of the screen isn't the same

217
00:09:22,902 --> 00:09:25,204
as it is in the age three screenshot, which is more

218
00:09:25,244 --> 00:09:26,545
like a stair-stepping pattern.

219
00:09:26,585 --> 00:09:29,648
So you could really only have these linear quantized heights.

220
00:09:30,192 --> 00:09:33,395
uh... in contrast we allowed the the artist to go ahead in there and say you

221
00:09:33,415 --> 00:09:35,777
know hey well you can do whatever the hell you want to inspect the field

222
00:09:35,797 --> 00:09:37,158
trained go go scope crazy

223
00:09:37,858 --> 00:09:41,581
uh... and sue just kind of put things in perspective you can see our vertex

224
00:09:41,621 --> 00:09:43,283
density at this point and that's hot

225
00:09:43,743 --> 00:09:45,825
that's uh... a little bit more hand

226
00:09:46,745 --> 00:09:47,546
what we were uh...

227
00:09:47,846 --> 00:09:49,407
what we had our previous technologies

228
00:09:49,668 --> 00:09:51,289
and of course what screenshot would be

229
00:09:51,849 --> 00:09:52,710
okay without having a

230
00:09:52,730 --> 00:09:54,491
a warthog in some crates right

231
00:09:54,671 --> 00:09:55,332
that have scaled

232
00:09:56,413 --> 00:09:58,735
so now for a lot of you had implemented high-field train

233
00:09:59,265 --> 00:10:00,806
And you're going to know everything I'm talking about,

234
00:10:01,146 --> 00:10:03,267
but let's just get our terminology on the same page.

235
00:10:03,547 --> 00:10:05,268
So height field terrain, when I say that word,

236
00:10:05,308 --> 00:10:08,950
what I'm talking about is a uniform spacing of positions

237
00:10:09,010 --> 00:10:11,152
on a grid, where each position in space

238
00:10:11,212 --> 00:10:13,213
contains a scalar value, which represents

239
00:10:13,293 --> 00:10:16,435
vertex displacement along the y-axis at that position.

240
00:10:17,535 --> 00:10:19,056
Now, one of the big problems with this,

241
00:10:19,116 --> 00:10:21,017
though, is that when you get adjacent,

242
00:10:21,157 --> 00:10:22,458
no, that's not going to show up, is it?

243
00:10:23,078 --> 00:10:23,919
That was a great idea, Colt.

244
00:10:25,507 --> 00:10:28,189
When you get adjacent vertices that have scalar values that

245
00:10:28,229 --> 00:10:31,171
are a little too different, there's not enough UV data.

246
00:10:31,191 --> 00:10:33,133
There's not enough texel density in that area.

247
00:10:33,373 --> 00:10:35,115
And what occurs is texture stretching.

248
00:10:35,155 --> 00:10:37,957
So you get these big blotchy pixels in there.

249
00:10:38,237 --> 00:10:40,679
Now, common height field approaches to fix this

250
00:10:40,740 --> 00:10:42,521
is you slap either a cliff piece on it,

251
00:10:42,581 --> 00:10:44,343
or you slap meshes on it, and whatnot.

252
00:10:45,063 --> 00:10:46,925
But in reality, that's one of the bigger problems

253
00:10:46,945 --> 00:10:48,546
with height field terrain is you always

254
00:10:48,586 --> 00:10:50,588
have to make sure that your artists aren't

255
00:10:51,289 --> 00:10:54,111
making that difference between adjacent vertices too high.

256
00:10:54,670 --> 00:11:00,192
Now vector field terrain, in contrast, contains three scalar values per vertex that allows

257
00:11:00,232 --> 00:11:02,713
displacement along the x, y, and z-axis.

258
00:11:03,074 --> 00:11:07,436
The cool thing about this, besides the fact that we can now create the sort of overhang

259
00:11:07,476 --> 00:11:11,718
and cliffing structures that we got with our regular cliff system, is that we can now have

260
00:11:11,738 --> 00:11:16,240
the ability to kind of sweep vertices from the left over to the right when there's not

261
00:11:16,280 --> 00:11:17,780
enough UV density over there.

262
00:11:18,206 --> 00:11:21,170
and uh... this screenshot here actually shows it off pretty well

263
00:11:21,531 --> 00:11:25,896
so this is actually a picture of uh... a sculpted terrain in our system

264
00:11:26,297 --> 00:11:28,139
actually made by one of our programmers

265
00:11:28,159 --> 00:11:31,664
uh... i said hey i'm doing this talk and he said hey i have a really cool idea of

266
00:11:31,704 --> 00:11:33,467
something to sculpt for it let me go make you a picture

267
00:11:34,117 --> 00:11:35,558
And so this took him about 10 minutes

268
00:11:35,598 --> 00:11:36,619
to sculpt in our environment.

269
00:11:36,939 --> 00:11:39,181
So the first thing, obviously, again, this is not a mesh.

270
00:11:39,201 --> 00:11:40,642
This wasn't made in 3D Studio Max.

271
00:11:40,662 --> 00:11:42,263
He sat there with a brush and actually sculpted

272
00:11:42,283 --> 00:11:42,863
this whole thing out.

273
00:11:43,244 --> 00:11:45,345
The first thing is you're getting overhangs, right?

274
00:11:45,365 --> 00:11:47,207
Anyone in here who's made a height field terrain,

275
00:11:47,527 --> 00:11:48,928
the first thing your artists ask,

276
00:11:48,948 --> 00:11:50,870
or artists and designers ask for is, I need overhangs

277
00:11:50,910 --> 00:11:51,690
and I need bridges.

278
00:11:51,750 --> 00:11:53,692
Well, ta-da.

279
00:11:55,433 --> 00:11:56,754
They didn't really like it when I presented it that way.

280
00:11:56,774 --> 00:11:57,455
I was like, I better go.

281
00:11:58,407 --> 00:12:02,229
The second thing is, you really notice that, let's see if this one shows up, sweet,

282
00:12:03,109 --> 00:12:06,551
on the shadow part here, and even on the bottom here, there's really no UV stretching.

283
00:12:06,811 --> 00:12:10,073
For the amount of displacement that we have in this environment, there's no UV stretching.

284
00:12:10,313 --> 00:12:14,776
And how that's accomplished is he actually swept vertices from this low-lying area here

285
00:12:14,816 --> 00:12:16,937
that has low fidelity, not a lot of displacement,

286
00:12:17,177 --> 00:12:21,399
and he swept it up into this displaced area to sort of make a more uniform density.

287
00:12:21,748 --> 00:12:23,769
Now, when we originally wrote our tool for this system,

288
00:12:23,909 --> 00:12:25,309
you kind of had to do that by hand.

289
00:12:25,590 --> 00:12:27,470
But after a time, we said, oh, well, why don't we just

290
00:12:27,570 --> 00:12:28,571
automate that process?

291
00:12:28,611 --> 00:12:31,092
And so one of the things we did during export

292
00:12:31,112 --> 00:12:33,773
was we would find areas that had low UV density

293
00:12:34,033 --> 00:12:36,194
and sort of search around it and say, hey,

294
00:12:36,234 --> 00:12:38,375
if we can sweep some vertices into this thing

295
00:12:38,395 --> 00:12:41,537
and sort of unify the distances to increase our texel density.

296
00:12:43,197 --> 00:12:44,758
And here's another good screenshot.

297
00:12:44,778 --> 00:12:46,259
This is actually, for those of you who played the game,

298
00:12:46,279 --> 00:12:49,580
this was actually the very first pass of Scenario 1's terrain

299
00:12:49,620 --> 00:12:50,060
sculpting.

300
00:12:50,380 --> 00:12:51,121
And the reason that.

301
00:12:51,830 --> 00:12:53,570
It's a little bit different now than what's in the game, right?

302
00:12:54,371 --> 00:12:57,211
The reason I actually show this shot is this was one of the first things,

303
00:12:57,392 --> 00:12:59,712
this is one of the first screenshots that the producers actually went,

304
00:12:59,812 --> 00:13:03,714
oh my god, you guys aren't crazy, this whole terrain thing might actually work.

305
00:13:04,434 --> 00:13:08,375
The artist took an image of these horizontal terrain sheets

306
00:13:08,415 --> 00:13:10,396
which are caused by massive glaciation.

307
00:13:10,436 --> 00:13:12,737
When you get these huge glaciers that are moving through terrain,

308
00:13:12,997 --> 00:13:16,418
they cut these horizontal slabs into bedrock.

309
00:13:16,736 --> 00:13:18,957
and you can kind of see that down in here.

310
00:13:19,397 --> 00:13:21,077
And the artists were able to sculpt

311
00:13:21,177 --> 00:13:22,998
all of this horizontal displacement down here

312
00:13:23,078 --> 00:13:26,318
by hand in the editor very, very easily.

313
00:13:26,358 --> 00:13:27,699
In fact, the whole sculpting for this map

314
00:13:27,759 --> 00:13:29,259
only took them about three hours to do,

315
00:13:29,679 --> 00:13:31,340
and this was early on in our development too.

316
00:13:31,400 --> 00:13:34,420
So we hadn't put in all the fancy clip arting systems

317
00:13:34,460 --> 00:13:35,601
and everything else that we have today.

318
00:13:36,181 --> 00:13:37,441
But it was a really good technology

319
00:13:37,461 --> 00:13:39,222
and it kind of showed off some subsurface scattering

320
00:13:39,282 --> 00:13:41,362
and some ambient occlusion there as well.

321
00:13:42,042 --> 00:13:43,443
And yeah, we've come a long way

322
00:13:43,503 --> 00:13:44,603
from what we shipped with, right?

323
00:13:45,983 --> 00:13:46,083
So.

324
00:13:47,389 --> 00:13:52,412
Now that we have this concept of, hey, this is a vector field terrain and here's what we wanted to do and how we do it,

325
00:13:53,293 --> 00:13:56,895
it's kind of time to talk about the realities of innovating in these areas.

326
00:13:57,235 --> 00:14:01,918
The fact is that when you take a terrain system that you have and you up the density by eight times,

327
00:14:02,299 --> 00:14:04,460
you kind of end up with some problems that you didn't expect.

328
00:14:04,880 --> 00:14:10,063
And the rest of the talk is actually focused around how I solve what we, I solve them.

329
00:14:10,554 --> 00:14:14,296
uh... how we solve these problems and sort of went through uh... my goal here

330
00:14:14,336 --> 00:14:17,558
is to talk about what didn't work and what did work and uh... the main thing

331
00:14:17,618 --> 00:14:20,520
is see this this bottom one here content creation burden

332
00:14:21,020 --> 00:14:23,542
I'm really going to try as hard as I can to get to that,

333
00:14:23,602 --> 00:14:26,604
because some of the really cool, innovative technology we came

334
00:14:26,664 --> 00:14:29,066
up with was actually in the content creation process.

335
00:14:29,426 --> 00:14:32,128
So if I'm talking a little fast, I apologize.

336
00:14:32,408 --> 00:14:33,489
I really want to get to that data.

337
00:14:33,809 --> 00:14:35,311
And if you guys are OK with it, we

338
00:14:35,351 --> 00:14:37,852
might cut the Q&A session a little short to get there.

339
00:14:37,912 --> 00:14:39,153
So let's go ahead forward.

340
00:14:39,253 --> 00:14:40,454
So let's talk about memory first.

341
00:14:40,494 --> 00:14:43,697
So the original terrain in our original demo,

342
00:14:43,997 --> 00:14:46,118
when you up the density 8x, you actually

343
00:14:46,138 --> 00:14:46,859
ended up with a 4096 by 4096 terrain.

344
00:14:46,879 --> 00:14:46,919
So.

345
00:14:50,289 --> 00:14:51,449
4k verts by 4k verts.

346
00:14:52,389 --> 00:14:55,931
Well, the uncompressed result of this was around 400 megabytes.

347
00:14:55,971 --> 00:14:57,591
That's 200 megabytes for position

348
00:14:57,651 --> 00:14:58,872
and 200 megabytes for normal.

349
00:14:59,392 --> 00:15:01,493
Any of you who are Xbox developers

350
00:15:01,513 --> 00:15:03,774
know there's only 512 megs on the box.

351
00:15:04,714 --> 00:15:08,415
At this point, our producers were popping antacid tablets

352
00:15:08,475 --> 00:15:10,036
and trying to tell us, hey, we're not just

353
00:15:10,056 --> 00:15:11,036
shipping a terrain demo.

354
00:15:12,137 --> 00:15:13,597
And we said, don't worry, don't worry.

355
00:15:13,637 --> 00:15:15,738
We're going to work on some compression technology

356
00:15:15,758 --> 00:15:16,618
to make this whole thing work.

357
00:15:17,194 --> 00:15:19,136
Now, the first round of compression technology

358
00:15:19,176 --> 00:15:20,897
was actually fantastic.

359
00:15:21,197 --> 00:15:22,678
It took our 400 megabytes of terrain

360
00:15:22,718 --> 00:15:26,141
and compressed it down into 32 megs, which, off the cuff,

361
00:15:26,161 --> 00:15:29,684
that's around a 12x decrease, or about 16 bits per pixel.

362
00:15:30,124 --> 00:15:31,926
And the way I accomplished this was

363
00:15:32,226 --> 00:15:35,248
I took the terrain vector displacement information

364
00:15:35,268 --> 00:15:37,090
and I used a combination of wavelets

365
00:15:37,450 --> 00:15:40,392
to separate out low frequency data and data that just

366
00:15:40,452 --> 00:15:43,275
wasn't needed at all, and then stored the resulting

367
00:15:43,315 --> 00:15:45,036
information in DXT textures.

368
00:15:45,358 --> 00:15:46,899
And then I would take the DXT textures

369
00:15:46,959 --> 00:15:49,381
and in the vertex shader, sample all these textures

370
00:15:49,461 --> 00:15:51,222
and reconstruct my terrain environment.

371
00:15:51,942 --> 00:15:55,184
Well, you can't argue with the compression results there.

372
00:15:55,204 --> 00:15:56,365
That's absolutely fantastic.

373
00:15:56,625 --> 00:15:57,925
But the real problem with this is

374
00:15:57,945 --> 00:15:59,406
that it was not performance enough

375
00:15:59,446 --> 00:16:01,107
to be able to handle the resolution we were at.

376
00:16:01,467 --> 00:16:02,848
There was actually seven textures

377
00:16:02,888 --> 00:16:04,269
when you separated all the data out.

378
00:16:04,669 --> 00:16:05,950
And that meant that we were sampling

379
00:16:06,010 --> 00:16:10,012
seven textures in our vertex shader at 4K by 4K terrain.

380
00:16:10,616 --> 00:16:12,857
and it just really wasn't performing.

381
00:16:12,877 --> 00:16:15,519
So we needed another solution, to say the least.

382
00:16:16,059 --> 00:16:18,381
Now, anyone in here who's actually worked on a shipping

383
00:16:18,441 --> 00:16:21,122
product knows that there's sort of always this give and take

384
00:16:21,182 --> 00:16:24,284
between design decisions and management decisions,

385
00:16:24,304 --> 00:16:25,705
and then what your technology is doing,

386
00:16:25,745 --> 00:16:26,886
and what the industry is doing.

387
00:16:27,232 --> 00:16:29,373
And I kind of want to take a second and address this,

388
00:16:29,433 --> 00:16:31,894
because there were a couple of things that weren't technical

389
00:16:32,194 --> 00:16:35,175
that actually changed the way we had to approach our compression

390
00:16:35,215 --> 00:16:35,656
process.

391
00:16:36,036 --> 00:16:38,797
Now, the first of that was that we walked in one day,

392
00:16:38,877 --> 00:16:41,138
and our artist said, there's just too much density.

393
00:16:41,218 --> 00:16:42,239
There's too many vertices.

394
00:16:42,279 --> 00:16:44,039
We just can't manage all of these things,

395
00:16:44,880 --> 00:16:47,581
which in respect was probably a result of bad tools, which

396
00:16:47,821 --> 00:16:49,222
I wrote the original tools, so that's my fault.

397
00:16:49,602 --> 00:16:51,263
But we'll fix that later.

398
00:16:51,543 --> 00:16:53,984
But anyhow, they said, well, hey, it's just too much data.

399
00:16:54,024 --> 00:16:56,745
So we said, OK, well, how about we cut the density in half,

400
00:16:57,303 --> 00:17:00,904
but increase the tile spacing so that the train itself will occupy the same

401
00:17:00,964 --> 00:17:01,865
world space size

402
00:17:02,505 --> 00:17:04,205
uh... but won't have as many vertices so

403
00:17:04,646 --> 00:17:07,627
we went in and did this and i resized all the maps and i checked them back into

404
00:17:07,667 --> 00:17:08,027
the tree

405
00:17:08,387 --> 00:17:11,668
and the next day the artist came in and says hey we thought you were getting rid of the

406
00:17:11,688 --> 00:17:12,068
density

407
00:17:13,189 --> 00:17:14,309
we did get rid of the density

408
00:17:14,589 --> 00:17:17,150
which was kind of eye opening to us that there was so much density

409
00:17:17,510 --> 00:17:20,591
that our picky artist didn't know when half the density was missing

410
00:17:22,052 --> 00:17:24,133
So it was kind of actually a good thing we did that,

411
00:17:24,153 --> 00:17:25,234
because it showed us that we really

412
00:17:25,274 --> 00:17:28,856
didn't need 4K by 4K resolution, that 2K by 2K resolution

413
00:17:28,876 --> 00:17:29,977
was actually sufficient for us.

414
00:17:30,517 --> 00:17:32,818
The next was that we kind of came to a concept

415
00:17:32,858 --> 00:17:36,340
that the content creation process for these 2K by 2K

416
00:17:36,380 --> 00:17:37,821
trains was actually too large.

417
00:17:38,101 --> 00:17:40,923
It was taking too long for our designers to map out things.

418
00:17:41,203 --> 00:17:43,364
It was taking too long for our artists to sculpt the data

419
00:17:43,424 --> 00:17:44,224
and make it look good.

420
00:17:44,505 --> 00:17:46,326
And so we had to sort of settle in a middle ground and said,

421
00:17:46,366 --> 00:17:48,567
well, our maximum size is going to be 1280 by 1280 berts.

422
00:17:48,607 --> 00:17:49,307
And this, again, was.

423
00:17:51,637 --> 00:17:53,999
was not necessarily due to a technological limitation,

424
00:17:54,019 --> 00:17:56,501
because we've said we can address

425
00:17:56,521 --> 00:17:57,401
all these other problems.

426
00:17:57,642 --> 00:18:00,804
It was more done due to the fact that our content throughput

427
00:18:00,864 --> 00:18:01,304
process.

428
00:18:01,805 --> 00:18:03,266
So needless to say that now that we

429
00:18:03,286 --> 00:18:05,427
have a 1280 by 1280 vert terrain,

430
00:18:06,608 --> 00:18:08,530
it drastically changed our memory footprint.

431
00:18:08,950 --> 00:18:11,071
Unfortunately, we didn't figure this out

432
00:18:11,091 --> 00:18:12,893
until we had made these other memory modifications.

433
00:18:13,293 --> 00:18:14,514
But here we are anyway.

434
00:18:14,674 --> 00:18:16,756
So the final result that we ended up shipping Halo Wars

435
00:18:17,356 --> 00:18:19,858
was a 14 megabyte footprint for a 1280 by 1280 terrain.

436
00:18:21,058 --> 00:18:26,260
and that was accomplished by putting XYZ and normal displacement data into 32-bit textures

437
00:18:26,300 --> 00:18:31,723
at 11, 11, 10. And then we also added an AO and alpha texture per vertex that were stored

438
00:18:31,743 --> 00:18:35,204
in DXT 5A textures. Now for those of you who played the game, you also know that when you

439
00:18:35,224 --> 00:18:39,286
place down a UNSC command center, it'll kind of cut a hole in the train. You'll see the

440
00:18:39,326 --> 00:18:40,007
slide doors open.

441
00:18:40,366 --> 00:18:42,267
and then something will come up from the bottom.

442
00:18:43,028 --> 00:18:47,531
In order to do that, I also provided a DXT3A texture,

443
00:18:47,571 --> 00:18:48,912
which those of you who have worked on the xenon

444
00:18:48,952 --> 00:18:50,414
know that when you sample that, it comes out

445
00:18:50,474 --> 00:18:51,755
to one bit per vertex.

446
00:18:52,015 --> 00:18:52,995
With a little bit of trickery, you

447
00:18:53,016 --> 00:18:55,317
can actually turn that XYZ one bit

448
00:18:55,417 --> 00:18:57,619
into actual horizontal movement.

449
00:18:57,679 --> 00:19:01,782
So we actually used a quarter resolution

450
00:19:02,302 --> 00:19:06,105
with DXT3A texture to actually map one bit of alpha

451
00:19:06,406 --> 00:19:07,446
to map out those areas.

452
00:19:08,807 --> 00:19:09,848
In general, this works.

453
00:19:09,928 --> 00:19:10,108
Again.

454
00:19:10,505 --> 00:19:14,669
you know, the bigger thing was there wasn't a technological revolution after those decisions

455
00:19:14,709 --> 00:19:17,892
were made, it was just like, well, let's find a good middle ground.

456
00:19:18,032 --> 00:19:20,695
Now, I kind of have to put this in this talk.

457
00:19:20,735 --> 00:19:24,358
This was actually the very first screenshot we had of the terrain system.

458
00:19:24,638 --> 00:19:29,403
And this was actually sent around in early, or late 2005 when we prototyped the technology

459
00:19:29,443 --> 00:19:30,064
on the PC.

460
00:19:30,404 --> 00:19:31,785
And this was our original density.

461
00:19:32,162 --> 00:19:34,743
And you can really see how quickly we went from pretty

462
00:19:34,783 --> 00:19:37,485
cool wireframe to just sub-pixel triangles to

463
00:19:37,505 --> 00:19:38,325
complete solid.

464
00:19:38,786 --> 00:19:40,547
And we were really impressed at that time.

465
00:19:40,567 --> 00:19:42,528
Like, oh my god, we can really push that many

466
00:19:42,568 --> 00:19:43,368
vertices on the 360?

467
00:19:44,429 --> 00:19:46,270
And this was back when we had the beta hardware, too, so we

468
00:19:46,290 --> 00:19:47,131
didn't have the final hardware.

469
00:19:47,171 --> 00:19:49,712
So some of these numbers over here are a little skewed

470
00:19:49,752 --> 00:19:51,033
because it's a different hardware.

471
00:19:52,294 --> 00:19:53,334
So that was our memory.

472
00:19:53,514 --> 00:19:54,475
That was how we handled that.

473
00:19:54,595 --> 00:19:59,138
And to kind of move along with the next big issue in terrain

474
00:19:59,218 --> 00:20:00,098
is always performance.

475
00:20:00,464 --> 00:20:02,826
Now, when we created our original terrain document,

476
00:20:03,147 --> 00:20:04,468
we were still in RTS.

477
00:20:04,488 --> 00:20:07,251
We were still dealing with an RTS camera and RTS angles.

478
00:20:07,551 --> 00:20:09,733
But for some reason, almost overnight, all of a sudden,

479
00:20:09,773 --> 00:20:10,994
it turned into the fact that we needed

480
00:20:11,014 --> 00:20:12,596
to support FPS camera angles.

481
00:20:13,076 --> 00:20:14,778
And we all kind of looked at each other like, well,

482
00:20:14,798 --> 00:20:15,999
wait a minute, what for?

483
00:20:16,830 --> 00:20:23,759
The design doc called for cinematics and in-game wow moments and the ability to snap to and from these things on a trigger of a dime.

484
00:20:23,779 --> 00:20:29,146
And we all kind of looked at each other like, well that wasn't in the original design doc, what the fuck are we doing? We didn't design for those things.

485
00:20:29,507 --> 00:20:33,152
So, but necessarily we couldn't push back on it so we had to put in some support.

486
00:20:33,512 --> 00:20:34,233
And you can remember...

487
00:20:34,650 --> 00:20:36,831
Our density really didn't support a first-person angle.

488
00:20:37,071 --> 00:20:38,612
I mean, there's a great picture of it right there.

489
00:20:38,973 --> 00:20:42,155
So we had to put in some sort of LOD metric for the process.

490
00:20:42,455 --> 00:20:44,436
And specifically, we had to put in something

491
00:20:44,596 --> 00:20:47,678
that wasn't a memory burden and wasn't a performance burden,

492
00:20:47,718 --> 00:20:49,900
because we kind of already had our technology prototyped out

493
00:20:49,920 --> 00:20:51,641
to this point, and we're moving forward

494
00:20:51,661 --> 00:20:52,502
with content generation.

495
00:20:53,482 --> 00:20:55,904
So the first round of LOD solutions was actually

496
00:20:55,964 --> 00:20:56,764
geo-MIP mapping.

497
00:20:56,824 --> 00:20:59,425
Now this is different than geo-clip mapping, which

498
00:20:59,505 --> 00:21:02,567
is some research by Hugh Hop over at Microsoft Research.

499
00:21:02,587 --> 00:21:06,269
This is your standard vanilla geo-MIP mapping.

500
00:21:06,989 --> 00:21:09,191
The basic process works by taking

501
00:21:10,722 --> 00:21:14,925
index buffers in changing the stride. So, our terrain was actually one gigantic texture

502
00:21:15,205 --> 00:21:20,409
and each quad node chunk was 64 vertices by 64 vertices. So the simplest way to do LOD

503
00:21:20,689 --> 00:21:24,732
was instead of an index buffer that samples 64 by 64, you have an index buffer that samples

504
00:21:24,872 --> 00:21:25,453
32 by 32 and 16 by 16, etc, etc, etc.

505
00:21:27,813 --> 00:21:30,135
And then depending on how far the chunk is from the camera,

506
00:21:30,436 --> 00:21:33,698
you determine which resolution it should be.

507
00:21:34,038 --> 00:21:36,260
Now, in general, it was pretty quick, pretty easy to use.

508
00:21:36,460 --> 00:21:37,942
But you can see one of the big problems right here

509
00:21:38,302 --> 00:21:40,123
is that this transitionary line was

510
00:21:40,183 --> 00:21:43,406
kind of right in the middle of where the user was looking.

511
00:21:43,686 --> 00:21:46,769
And in motion, the difference between the 64 by 64

512
00:21:47,249 --> 00:21:50,372
and the 32 by 32 was an immediate pop.

513
00:21:50,432 --> 00:21:52,934
And so to fix that, we'd have to kind of push this line way

514
00:21:52,994 --> 00:21:54,075
up to the top of the screen.

515
00:21:54,375 --> 00:21:56,497
And by that point, 90% of the screen was high resolution,

516
00:21:56,517 --> 00:21:57,217
and it just didn't work.

517
00:21:57,759 --> 00:21:59,440
On top of that, geomip mapping really

518
00:21:59,480 --> 00:22:01,822
wasn't responsive to areas of low density,

519
00:22:02,463 --> 00:22:05,465
or at least where the artist really hadn't sculpted anything.

520
00:22:05,545 --> 00:22:06,326
So it's like, well, wait a minute.

521
00:22:06,346 --> 00:22:07,347
There's no displacement here.

522
00:22:07,647 --> 00:22:08,988
Why is this still high resolution?

523
00:22:09,328 --> 00:22:11,530
So the second thing I took a look at

524
00:22:11,610 --> 00:22:13,892
was restricted quadtree triangulation.

525
00:22:14,352 --> 00:22:17,995
And you can find a good talk of this by the FlightSim team

526
00:22:18,035 --> 00:22:21,297
at Microsoft, who actually put a much larger and more robust

527
00:22:21,337 --> 00:22:24,099
version of this in Microsoft Flight Simulator 10.

528
00:22:24,742 --> 00:22:27,563
Now, RQT works on a concept of taking sort of a three

529
00:22:27,603 --> 00:22:31,385
by three area of vertices and creating an average plane

530
00:22:31,405 --> 00:22:33,666
and then deciding distance from that plane.

531
00:22:33,986 --> 00:22:36,167
If a vertice is not too far away, it says, well,

532
00:22:36,187 --> 00:22:36,948
you're not displaced enough.

533
00:22:37,108 --> 00:22:37,588
Get out of here.

534
00:22:37,608 --> 00:22:39,309
And then re-triangulates the process.

535
00:22:39,669 --> 00:22:42,050
So to kind of describe what you're looking at here,

536
00:22:42,090 --> 00:22:42,950
here's a wireframe shot.

537
00:22:42,990 --> 00:22:45,571
We've got a little bit of vertex density here,

538
00:22:45,611 --> 00:22:46,672
and we've got some cliffs there.

539
00:22:46,692 --> 00:22:49,633
And we also have some sort of scars in the terrain

540
00:22:49,653 --> 00:22:50,934
and a little bit of an overhang area.

541
00:22:51,814 --> 00:22:53,775
And here's what it looks like at lower resolution.

542
00:22:55,160 --> 00:22:58,841
we pretty much got what we wanted out of this. It kept the areas that the artist had sculpted

543
00:22:58,861 --> 00:23:02,342
and got rid of the areas that the artist hadn't touched yet. And this was what we considered a

544
00:23:02,362 --> 00:23:07,323
win. The problem with this though is that we were now introducing that each quad node chunk had to

545
00:23:07,363 --> 00:23:12,545
have a unique index buffer to be able to describe how that area was represented in memory. And we

546
00:23:12,565 --> 00:23:17,566
just did not have the memory ability to be able to do that. So we're kind of like, well, it's

547
00:23:17,606 --> 00:23:20,347
great because it gave us what we wanted, but it wasn't memory efficient enough.

548
00:23:20,754 --> 00:23:23,156
At this time we had our final hardware and we were messing

549
00:23:23,176 --> 00:23:25,339
around with different things which we didn't think we had the

550
00:23:25,359 --> 00:23:30,104
ability to rely on before. And then we decided to move to the

551
00:23:30,164 --> 00:23:32,327
hardware tessellator. So for those of you who have worked

552
00:23:32,347 --> 00:23:36,031
with the 360 or attended any of the DirectX 11 talks, you're

553
00:23:36,131 --> 00:23:38,374
hearing a lot about this new hardware tessellation thing

554
00:23:38,414 --> 00:23:38,975
that's going on.

555
00:23:39,558 --> 00:23:42,539
So we were really blessed, though,

556
00:23:42,579 --> 00:23:44,960
because the gods of numerical accuracy

557
00:23:45,040 --> 00:23:48,620
like kind of opened a cloud and put down a god ray upon us,

558
00:23:49,000 --> 00:23:51,081
because we ended up in a lucky situation

559
00:23:51,121 --> 00:23:54,361
that our quad nodes were 64 vertices by 64 vertices.

560
00:23:54,702 --> 00:23:58,002
Well, a hardware tessellated patch for the 360s max

561
00:23:58,042 --> 00:24:00,523
resolution is 16 vertices by 16 vertices,

562
00:24:00,563 --> 00:24:03,583
which without any change of me, we could just

563
00:24:03,623 --> 00:24:06,544
easily do four by four patches and kind of move on and say,

564
00:24:06,564 --> 00:24:07,044
hey, it's a day.

565
00:24:08,487 --> 00:24:12,448
So how we would do this is I would compute the bounding box

566
00:24:12,628 --> 00:24:15,289
of the patches in world space at an export time,

567
00:24:15,689 --> 00:24:18,370
and then at runtime, project that bound box to screen space

568
00:24:18,510 --> 00:24:20,891
on the CPU and measure its projected area.

569
00:24:20,911 --> 00:24:23,072
Now, you guys are probably reading some papers right now,

570
00:24:23,152 --> 00:24:25,173
especially in the Shader X7 book that just came out,

571
00:24:25,433 --> 00:24:26,613
that talks about the same process,

572
00:24:26,653 --> 00:24:29,714
but doing it on the GPU instead and using StreamOut

573
00:24:29,754 --> 00:24:30,735
to write out this information.

574
00:24:31,402 --> 00:24:35,964
In our RTS, we are GPU bound more than we're CPU bound, and

575
00:24:36,044 --> 00:24:39,545
if you've got three cores and six threads to work with, it's

576
00:24:39,565 --> 00:24:41,706
much easier to offload this onto the thread pool and have

577
00:24:41,746 --> 00:24:44,527
that computation done there than it is to sort of have this

578
00:24:44,587 --> 00:24:46,468
readback process on the Xbox 360.

579
00:24:47,808 --> 00:24:50,049
The cool thing about this was that water tightness was kind

580
00:24:50,089 --> 00:24:50,970
of automatic for us.

581
00:24:51,315 --> 00:24:54,540
I mean just like with geo-mip mapping, we had the ability to just say, you know, here's

582
00:24:54,580 --> 00:24:58,445
a patch, go sample this large texture in your vertex shader, and as long as we kept the

583
00:24:58,565 --> 00:25:02,751
edges between two patches at the same density, we never had to worry about T-junctions or

584
00:25:02,791 --> 00:25:05,675
holes in our terrain, which, hey, that's perfect, that's less work that I have to do.

585
00:25:06,577 --> 00:25:07,537
So here's a good picture.

586
00:25:08,097 --> 00:25:11,619
This is actually the map that we got the whole project greenlit

587
00:25:11,659 --> 00:25:11,839
with.

588
00:25:11,899 --> 00:25:14,761
And so we're kind of up in space looking down on top of it now.

589
00:25:15,121 --> 00:25:17,182
And you can kind of see a nice canyon.

590
00:25:17,202 --> 00:25:18,923
And you can see some walls working on that as well.

591
00:25:19,803 --> 00:25:22,505
And you can see that these areas are low tessellated.

592
00:25:22,885 --> 00:25:25,466
We move a little bit closer too and kind of focus around

593
00:25:25,586 --> 00:25:26,847
where the user's cursor is here.

594
00:25:27,207 --> 00:25:32,031
Moving closer you can see that the terrain cliff walls immediately start getting more density

595
00:25:32,051 --> 00:25:37,575
because they were higher density to begin with and now their projected screen space area is much higher.

596
00:25:38,055 --> 00:25:41,938
Around the focal point here you can see that this is now increased in resolution

597
00:25:42,058 --> 00:25:45,280
all the way to where we get into the max resolution and you get these cool little

598
00:25:45,420 --> 00:25:51,184
tread tracks left by a warthog who had just run over a grunt and threw a 7-11

599
00:25:51,244 --> 00:25:54,347
and hopped on a grenade and did a backflip and all those cool things you see on YouTube.

600
00:25:55,987 --> 00:25:58,307
In general, the hardware tessellator was fantastic.

601
00:25:58,327 --> 00:26:00,268
And we shipped with it, and we loved every bit about it.

602
00:26:00,768 --> 00:26:01,988
It had some downsides in the fact

603
00:26:02,008 --> 00:26:03,469
that it was a little bit of brain dead,

604
00:26:03,809 --> 00:26:05,429
in that it just kind of tessellated.

605
00:26:05,669 --> 00:26:06,550
It would've been cool if we could

606
00:26:06,570 --> 00:26:07,470
do some other things with it.

607
00:26:07,530 --> 00:26:09,471
But I guess that's a different talk for some different

608
00:26:09,491 --> 00:26:10,231
technology people.

609
00:26:10,611 --> 00:26:11,831
One downside about it, though, was

610
00:26:11,871 --> 00:26:14,212
it sort of had the same problem that geomip mapping did,

611
00:26:14,272 --> 00:26:15,512
but at a much smaller scale.

612
00:26:15,812 --> 00:26:18,673
You still had problems with boundaries between patches,

613
00:26:18,753 --> 00:26:21,254
especially if you had a high tessellated patch here

614
00:26:21,294 --> 00:26:23,655
and a low tessellated patch here, where you had to sort of

615
00:26:24,089 --> 00:26:27,851
find a middle ground of what the edge should be between those two patches.

616
00:26:27,891 --> 00:26:30,532
And what this caused was you would get some slivers sometime,

617
00:26:30,572 --> 00:26:32,333
and I don't know if you can really pick it out.

618
00:26:33,033 --> 00:26:34,754
Oh yeah, here. So if everyone can see right here,

619
00:26:35,014 --> 00:26:37,736
you kind of have a low tessellation patch here and a high tessellation patch here,

620
00:26:37,756 --> 00:26:39,817
and you get all these little sliver triangles in the middle.

621
00:26:40,257 --> 00:26:42,639
The problem with that is that kind of creates anomalies in lighting.

622
00:26:42,859 --> 00:26:44,800
And so our artist kind of always came back to me and said,

623
00:26:44,820 --> 00:26:46,821
hey, you know, the patches are screwing up our lighting,

624
00:26:47,141 --> 00:26:48,161
why aren't you doing your job?

625
00:26:48,602 --> 00:26:50,543
And I would kind of point at the hardware and go, well, it's...

626
00:26:51,685 --> 00:26:53,326
You have a brush to fix that, dude.

627
00:26:53,366 --> 00:26:53,906
Just hit a button.

628
00:26:54,967 --> 00:26:56,728
But it was easy enough to police,

629
00:26:56,748 --> 00:26:58,730
and the artist really didn't take too much time to fix it,

630
00:26:58,790 --> 00:27:00,131
because it wasn't everywhere.

631
00:27:02,172 --> 00:27:03,353
But that's just something to be aware of,

632
00:27:03,393 --> 00:27:04,173
that when you're working with this,

633
00:27:04,213 --> 00:27:05,874
you can get these sliver polygons,

634
00:27:05,894 --> 00:27:07,275
and those sliver polygons can give you

635
00:27:07,376 --> 00:27:08,236
anomalies in your lighting.

636
00:27:09,197 --> 00:27:11,819
So LOD performance, we can now support first person camera

637
00:27:11,879 --> 00:27:12,139
angles.

638
00:27:12,179 --> 00:27:13,240
Our producers were happy.

639
00:27:13,280 --> 00:27:16,061
They were throwing confetti and parties for everyone.

640
00:27:16,742 --> 00:27:17,282
I hit the wrong button.

641
00:27:17,382 --> 00:27:17,603
Sorry.

642
00:27:18,323 --> 00:27:19,023
Nope, wrong button again.

643
00:27:19,544 --> 00:27:19,684
Whoop.

644
00:27:20,124 --> 00:27:20,484
Where am I going?

645
00:27:20,545 --> 00:27:20,765
There we go.

646
00:27:23,227 --> 00:27:25,650
Anyhow, moving to the sim.

647
00:27:25,731 --> 00:27:28,474
So it's a great idea to say, hey,

648
00:27:28,514 --> 00:27:29,776
let's make a new terrain that takes

649
00:27:29,816 --> 00:27:31,278
advantage of the Xbox 360.

650
00:27:31,939 --> 00:27:33,140
It's a different question to say, well,

651
00:27:33,321 --> 00:27:34,903
how does your game actually interact

652
00:27:34,923 --> 00:27:35,864
with this new technology?

653
00:27:36,184 --> 00:27:37,806
So for most height fields, you have the.

654
00:27:38,280 --> 00:27:41,001
You have a visual representation and a sim representation

655
00:27:41,021 --> 00:27:43,022
that are sort of coupled in one in the same.

656
00:27:43,342 --> 00:27:44,542
And they're usually low resolution,

657
00:27:44,582 --> 00:27:47,004
because the sim needs to be able to do things like height field

658
00:27:47,104 --> 00:27:49,985
calculations, ray casting, and physics and whatnot.

659
00:27:50,285 --> 00:27:51,926
Well, the problem with our vector field terrain

660
00:27:51,966 --> 00:27:55,267
was it was GPU specific, and it was compressed on top of that.

661
00:27:55,627 --> 00:27:57,508
And also, we kind of had a problem saying,

662
00:27:57,548 --> 00:28:01,670
well, what do you do to define a ray cast into the vector field

663
00:28:01,930 --> 00:28:04,951
without resorting to going to an ABT or a BSP or anything

664
00:28:04,991 --> 00:28:05,312
like that?

665
00:28:05,594 --> 00:28:07,314
and effectively just turning into polygon soup.

666
00:28:07,634 --> 00:28:09,195
Well, the solution we decided to opt for

667
00:28:09,455 --> 00:28:12,315
was actually create a lower resolution terrain, which

668
00:28:12,455 --> 00:28:15,836
was height field only, and acted like these sort of legacy

669
00:28:15,876 --> 00:28:19,057
terrain systems that Age 3 and Age of Mythology had before it.

670
00:28:19,277 --> 00:28:20,897
So that way, any systems that had come over

671
00:28:20,997 --> 00:28:23,338
from those prior systems just kind of worked automatically.

672
00:28:23,958 --> 00:28:25,458
This actually, by the way, turned out

673
00:28:25,498 --> 00:28:28,159
to be one of the best decisions we made

674
00:28:28,219 --> 00:28:29,979
in the entire freaking project.

675
00:28:31,099 --> 00:28:32,580
So to kind of cover this again.

676
00:28:33,242 --> 00:28:38,784
The solution was to create a CPU side terrain, which we called the SimRep, just so we're cool on terminology,

677
00:28:39,024 --> 00:28:42,705
which was a much lower resolution than the VisRep, which was the GPU side solution,

678
00:28:43,165 --> 00:28:47,587
and it was organized and swizzled to take advantage of the CPU caches,

679
00:28:47,887 --> 00:28:51,688
so that we could do things like physics interaction and raycasting at much higher speeds,

680
00:28:51,808 --> 00:28:56,210
which was great because we could make decisions on how to organize that data for the CPUs,

681
00:28:56,450 --> 00:29:00,571
that didn't step on the feet of how to organize that data for the GPUs, and that was absolutely fantastic.

682
00:29:01,673 --> 00:29:03,655
So how we would generate this process, which was actually

683
00:29:03,675 --> 00:29:04,576
a question a lot of people said.

684
00:29:04,596 --> 00:29:07,018
They said, well, do the designers go in and block out

685
00:29:07,038 --> 00:29:08,880
the level, and then in the low resolution,

686
00:29:08,920 --> 00:29:11,021
and the artists come in, and do they spec it out,

687
00:29:11,041 --> 00:29:11,662
and yada, yada, yada.

688
00:29:11,922 --> 00:29:12,943
And it was a big back and forth.

689
00:29:12,963 --> 00:29:14,905
And finally, I said, tell you what, I'll just automatically

690
00:29:14,965 --> 00:29:15,666
generate it for you.

691
00:29:16,006 --> 00:29:18,008
So to generate this process, effectively what I do

692
00:29:18,088 --> 00:29:19,990
is during export, I render the terrain

693
00:29:20,030 --> 00:29:21,791
from top down in the orthographic camera,

694
00:29:22,052 --> 00:29:24,634
and I render it to a render target, which the render target

695
00:29:24,654 --> 00:29:27,056
size is actually the resolution of the sim rep

696
00:29:27,076 --> 00:29:27,857
that we want to support.

697
00:29:28,484 --> 00:29:31,085
Hypothetically, I'm rendering a 4K by 4K terrain to a 256

698
00:29:31,785 --> 00:29:32,825
by 256 texture.

699
00:29:33,165 --> 00:29:34,345
And when I rasterize the terrain,

700
00:29:34,365 --> 00:29:36,946
I actually write out the world heights at that position.

701
00:29:37,366 --> 00:29:39,286
The cool thing about that is that I read it back

702
00:29:39,326 --> 00:29:40,986
on the CPU at that point, and I kind of

703
00:29:41,026 --> 00:29:43,787
have an automatic height field, which is kind of nifty.

704
00:29:44,707 --> 00:29:47,967
That you can then take it and do various GPU or CPU massaging

705
00:29:47,987 --> 00:29:49,008
and hole-filling algorithms.

706
00:29:49,248 --> 00:29:51,008
We'd also leverage this process to be

707
00:29:51,048 --> 00:29:54,269
able to go through this process and say, oh, this is too steep.

708
00:29:54,329 --> 00:29:55,189
Make it impassable.

709
00:29:55,249 --> 00:29:57,389
This isn't steep enough, et cetera, et cetera, et cetera.

710
00:29:58,622 --> 00:30:00,703
And this was actually such a successful idea

711
00:30:00,963 --> 00:30:02,683
that we had four separate versions

712
00:30:02,863 --> 00:30:04,704
of these low-res representations.

713
00:30:04,724 --> 00:30:06,825
We had one for the sim, which was what all the units used.

714
00:30:07,245 --> 00:30:09,926
We had two super low-resolution versions

715
00:30:09,986 --> 00:30:12,528
for the flight rep and the camera rep, which eventually

716
00:30:12,568 --> 00:30:16,149
actually only ended up being 8 by 8 tiles altogether.

717
00:30:16,429 --> 00:30:18,730
So that when your camera was swinging

718
00:30:18,770 --> 00:30:22,012
around the environment, it had a much more gradual height field

719
00:30:22,292 --> 00:30:24,693
to interact with, as opposed to our 4K by 4K train.

720
00:30:25,052 --> 00:30:28,455
and then the scarab had his own representation because it's a freakin' scarab

721
00:30:28,535 --> 00:30:30,657
and it can do whatever the hell it wants.

722
00:30:31,017 --> 00:30:33,820
And all these were at different densities and I think we had like two more for

723
00:30:34,340 --> 00:30:35,862
uh... our uh...

724
00:30:36,542 --> 00:30:38,884
our decal representation and another one that I can't remember.

725
00:30:42,534 --> 00:30:45,776
One other side point that designers

726
00:30:45,816 --> 00:30:48,017
decided to throw into our design document a little too late

727
00:30:48,077 --> 00:30:50,899
was that we need the ability to play on forerunner objects.

728
00:30:50,939 --> 00:30:53,441
We need the ability to play on bridges, which, again, a lot

729
00:30:53,461 --> 00:30:55,001
of you have probably heard that same thing before.

730
00:30:56,273 --> 00:30:57,693
And we said, well, hey, wait a minute.

731
00:30:57,713 --> 00:31:01,274
We have this ability to sort of generate a sim rep on the GPU.

732
00:31:01,614 --> 00:31:03,035
Why don't we leverage that technology

733
00:31:03,055 --> 00:31:06,016
to allow you to insert meshes into that process that

734
00:31:06,036 --> 00:31:07,556
could then modify the sim rep?

735
00:31:07,576 --> 00:31:08,636
And that's exactly what we did.

736
00:31:08,976 --> 00:31:10,317
So we allowed the designers and artists

737
00:31:10,337 --> 00:31:12,578
to flag meshes in the editor that could then

738
00:31:12,638 --> 00:31:16,799
be rendered during the sim rep generation process.

739
00:31:16,959 --> 00:31:19,600
And the bonus for this was that it modified the sim

740
00:31:19,680 --> 00:31:22,800
rep with these objects without screwing with the vis rep,

741
00:31:22,840 --> 00:31:24,401
and then no one had to change any of these things.

742
00:31:26,059 --> 00:31:26,959
Oh, that's what I said.

743
00:31:27,740 --> 00:31:28,080
Sorry.

744
00:31:28,100 --> 00:31:29,501
So here's a great picture of that.

745
00:31:29,782 --> 00:31:31,063
So for those of you who've played the game,

746
00:31:31,083 --> 00:31:32,844
this is a picture of one of our multiplayer maps.

747
00:31:32,904 --> 00:31:33,825
It's called Repository.

748
00:31:34,265 --> 00:31:36,847
And you can see here's a massive, big, forerunner

749
00:31:36,947 --> 00:31:37,288
object.

750
00:31:37,628 --> 00:31:39,249
It kind of drops down to infinity there.

751
00:31:39,930 --> 00:31:41,211
Here is the terrain itself.

752
00:31:41,311 --> 00:31:42,332
And this is not alphaed out.

753
00:31:42,352 --> 00:31:45,014
This is actually sculpted using the vector field displacement,

754
00:31:45,114 --> 00:31:47,256
just making nice little curves.

755
00:31:47,276 --> 00:31:48,397
Because when you swing the camera around,

756
00:31:48,677 --> 00:31:49,838
there still has to be density there.

757
00:31:50,578 --> 00:31:53,681
And this is actually the sim rep that represents that same area.

758
00:31:54,422 --> 00:31:56,063
Now you can notice that it's much lower resolution.

759
00:31:56,783 --> 00:31:59,323
It picks up the fact that the terrain drops off right here.

760
00:32:00,144 --> 00:32:01,364
And it also picks up the fact that you

761
00:32:01,404 --> 00:32:02,624
have this massive mesh in there.

762
00:32:02,984 --> 00:32:05,165
And it actually does it to a fault, which

763
00:32:05,405 --> 00:32:06,465
can be a good or bad thing.

764
00:32:06,725 --> 00:32:08,305
You can see that it's immediately picking up

765
00:32:08,366 --> 00:32:10,306
these bumpers right along here.

766
00:32:10,326 --> 00:32:12,446
I don't know if you can see that with my weak laser pointer.

767
00:32:13,707 --> 00:32:14,887
It picks up these bumpers, and it also

768
00:32:14,947 --> 00:32:18,148
picks up this little observatory tongue depressor

769
00:32:18,228 --> 00:32:20,588
looking thing, which I don't, I mean.

770
00:32:21,233 --> 00:32:24,977
I don't mind that, you can't play on it, but it's really cool that it picked it up automatically for you.

771
00:32:26,118 --> 00:32:33,103
An extension of this actually came to us very, very nicely in that our design document required you to play on the back of the Spirit of Fire,

772
00:32:33,424 --> 00:32:35,806
which is the main ship from our storyline.

773
00:32:35,846 --> 00:32:39,729
And originally we had decided, well, we'll just zoom the camera in and change the textures to...

774
00:32:40,200 --> 00:32:44,226
look like metallic and so you won't ever see the edges of the ship. We said, well, why would you do that?

775
00:32:44,987 --> 00:32:46,409
We have the ability to insert meshes.

776
00:32:46,790 --> 00:32:51,377
So we actually took the Spirit of Fire model that was given to us by Blur, who did our cinematics,

777
00:32:51,717 --> 00:32:55,963
and we had some artists actually remove polygons and make it acceptable for gameplay usage.

778
00:32:56,303 --> 00:32:59,604
Then we went ahead and put it in the editor, flagged it to be

779
00:32:59,644 --> 00:33:01,484
included in the sim rep, and voila.

780
00:33:01,884 --> 00:33:04,165
We immediately had a height field representation that the

781
00:33:04,225 --> 00:33:07,146
sim could play on, and we had a visual representation that was

782
00:33:07,186 --> 00:33:08,946
given to us that had nothing to do with terrain.

783
00:33:09,266 --> 00:33:11,427
And in fact, for these scenarios that you play on the

784
00:33:11,447 --> 00:33:14,007
back of the Spirit of Fire, we actually turn the terrain off

785
00:33:14,067 --> 00:33:14,607
entirely.

786
00:33:14,647 --> 00:33:17,108
So we get all of the memory footprint back for the terrain,

787
00:33:17,128 --> 00:33:18,488
and we don't have to do any of the processing.

788
00:33:18,889 --> 00:33:21,009
And just sort of a side comment.

789
00:33:21,712 --> 00:33:23,853
sort of a spoiler, I guess. You kind of get bombarded by some

790
00:33:23,933 --> 00:33:27,734
covenant artillery. You can see they raised the terrain way up

791
00:33:27,774 --> 00:33:29,635
in the corner there just to make sure that they have the proper

792
00:33:29,675 --> 00:33:31,956
height. I didn't realize that when I originally took the

793
00:33:31,996 --> 00:33:33,777
screenshot, but someone pointed it out while I was giving the

794
00:33:33,797 --> 00:33:35,697
presentation. They're like, hey, what is that over there?

795
00:33:35,717 --> 00:33:40,199
It's kind of just funny to see how that looks. So we now have

796
00:33:40,219 --> 00:33:43,280
the ability to allow the sim to interact with this crazy new

797
00:33:43,340 --> 00:33:46,081
terrain that this bald graphics programmer kept ranting on

798
00:33:46,121 --> 00:33:46,302
about.

799
00:33:47,818 --> 00:33:49,719
The next biggest problem, probably one of the bigger

800
00:33:49,779 --> 00:33:52,180
issues that we didn't realize would take so much problems is

801
00:33:52,260 --> 00:33:52,720
texturing.

802
00:33:53,960 --> 00:33:58,222
So for standard height fields, we do a texturing process in

803
00:33:58,242 --> 00:33:59,343
the industry called splatting.

804
00:33:59,663 --> 00:34:02,724
And this process is involved by re-rendering the geometric

805
00:34:02,744 --> 00:34:06,426
data to the frame buffer and applying combinations of alpha

806
00:34:06,446 --> 00:34:07,167
textures and

807
00:34:07,934 --> 00:34:10,157
I guess diffuse albedo normal textures and whatnot.

808
00:34:10,357 --> 00:34:12,019
And you re-render the chunk, and you bind a texture,

809
00:34:12,039 --> 00:34:13,600
and you bind an alpha, and you keep re-rendering,

810
00:34:13,640 --> 00:34:14,922
and you do this multi-pass rendering.

811
00:34:15,202 --> 00:34:17,685
And the result is that you get an alpha-blended terrain.

812
00:34:18,165 --> 00:34:19,847
The problem with this is that we just increased

813
00:34:19,887 --> 00:34:22,149
our density by 8x, and we really couldn't render

814
00:34:22,209 --> 00:34:23,771
a chunk more than one time.

815
00:34:24,172 --> 00:34:25,353
So that kind of caused some problems,

816
00:34:25,373 --> 00:34:27,695
because we were no longer able to do splatting.

817
00:34:28,056 --> 00:34:29,477
Now, another way to actually do sort of

818
00:34:29,497 --> 00:34:30,578
the same terrain process.

819
00:34:31,167 --> 00:34:33,387
is that you bind four alpha textures,

820
00:34:33,447 --> 00:34:36,028
and you bind four textures that you want to visualize,

821
00:34:36,068 --> 00:34:38,089
and you kind of sample them all at the same time,

822
00:34:38,129 --> 00:34:40,369
and you get one result, and you write that out instead.

823
00:34:40,629 --> 00:34:42,310
Well, the problem with that was that early on,

824
00:34:42,330 --> 00:34:45,191
our artists had requested to increase the number of blends

825
00:34:45,231 --> 00:34:47,471
that we allow per vertex to 12, and then

826
00:34:47,692 --> 00:34:51,093
increase the number of textures to blend to five.

827
00:34:51,233 --> 00:34:53,233
Now, a lot of you who've implemented terrain,

828
00:34:53,273 --> 00:34:55,474
you usually only have diffuse and normal.

829
00:34:55,514 --> 00:34:57,694
Maybe you've got a single-channer gloss spec

830
00:34:57,734 --> 00:34:58,355
or something like that.

831
00:34:58,748 --> 00:35:02,091
Well, we actually support diffuse, normal, three-channel

832
00:35:02,131 --> 00:35:08,137
specular, an HDR emissive, and a three-channel reflective mask.

833
00:35:08,437 --> 00:35:09,718
And originally when they came to me and said,

834
00:35:09,758 --> 00:35:12,281
we need these channels, I said, you're high.

835
00:35:12,521 --> 00:35:13,462
You don't need those channels.

836
00:35:13,522 --> 00:35:14,122
It's terrain.

837
00:35:14,863 --> 00:35:16,405
But then they came back with this information

838
00:35:16,445 --> 00:35:17,706
and said, well, hey, here's what it really

839
00:35:17,746 --> 00:35:18,507
looks like in the game.

840
00:35:18,795 --> 00:35:19,616
And I said, well, sold.

841
00:35:19,916 --> 00:35:21,717
So this was an ice map that we were working on.

842
00:35:21,957 --> 00:35:24,399
And they went ahead and made some great use

843
00:35:24,599 --> 00:35:27,120
of some fake Fresnel in here, as well as

844
00:35:27,160 --> 00:35:29,222
some fake use of subsurface scattering

845
00:35:29,642 --> 00:35:31,263
using these five texture channels.

846
00:35:32,083 --> 00:35:32,644
And I said, cool.

847
00:35:32,684 --> 00:35:33,904
Hey, well, I guess it was a good idea.

848
00:35:34,205 --> 00:35:35,345
Maybe you weren't high after all.

849
00:35:36,686 --> 00:35:37,827
I'm glad that this all worked out.

850
00:35:38,127 --> 00:35:38,867
Of course, at the end of the day,

851
00:35:38,887 --> 00:35:39,728
I'm walking out of the office.

852
00:35:39,768 --> 00:35:40,848
And one of the artists said, hey, man,

853
00:35:41,129 --> 00:35:43,530
I just checked in a map that plays a little bit more

854
00:35:43,550 --> 00:35:44,230
with the emissive.

855
00:35:44,511 --> 00:35:45,671
You know, go check it out tomorrow.

856
00:35:45,931 --> 00:35:48,173
And I get in the next day, and I find this map sitting there.

857
00:35:50,065 --> 00:35:53,047
And at this time I said, well, maybe I shouldn't have put all that information in.

858
00:35:54,488 --> 00:35:58,291
And I took this screenshot back then saying, sooner or later, I'm going to have to show somebody this.

859
00:35:58,311 --> 00:35:59,352
This is just fantastic.

860
00:35:59,872 --> 00:36:05,136
But needless to say, this was actually kind of cool to see Terrain contributing to the emissive part of the rendering equation

861
00:36:05,556 --> 00:36:09,499
instead of, without just having to be sort of the high-pass specular capping,

862
00:36:09,519 --> 00:36:12,041
where you just sort of, you know, take anything above 0.8 or something like that.

863
00:36:12,221 --> 00:36:13,382
They could actually control this.

864
00:36:13,422 --> 00:36:16,445
And for the most part, this worked out really well, and we were happy with it.

865
00:36:17,544 --> 00:36:23,490
Now the big problem with texturing here was that we allowed a 512 by 512 texture per terrain

866
00:36:23,711 --> 00:36:26,754
chunk, which meant that for our large terrain, for our 1280 by 1280, that resulted in 10k

867
00:36:26,774 --> 00:36:26,874
by 10k.

868
00:36:29,299 --> 00:36:30,700
texture across the entire train.

869
00:36:31,040 --> 00:36:32,221
When you start looking at it that way,

870
00:36:32,261 --> 00:36:34,062
it's actually easier to visualize the entire thing

871
00:36:34,103 --> 00:36:36,564
as a virtual texture, which a lot of you, I'm sure,

872
00:36:36,604 --> 00:36:37,905
have heard things like megatexturing

873
00:36:37,945 --> 00:36:39,206
or sparse virtual textures,

874
00:36:39,666 --> 00:36:41,948
depending on what paper you read, or unique texturing.

875
00:36:42,208 --> 00:36:43,749
They're all buzzwords that effectively mean

876
00:36:43,829 --> 00:36:45,491
some huge freaking texture

877
00:36:45,731 --> 00:36:47,272
that has to be paged in and out of memory

878
00:36:47,412 --> 00:36:49,533
using smaller pages and whatnot.

879
00:36:51,962 --> 00:36:55,147
Now the problem with our particular texturing system was that

880
00:36:55,468 --> 00:36:58,452
our train was actually, our data for texturing was actually too large

881
00:36:58,732 --> 00:37:02,999
to use unique texturing. Effectively in an FPS, for those of you who made first person

882
00:37:03,019 --> 00:37:06,865
shooter games, you kind of work on a rail system. I mean you're moving from portal

883
00:37:06,885 --> 00:37:08,066
to portal, from area to area.

884
00:37:08,267 --> 00:37:10,648
You sort of have this predictive nature about what's

885
00:37:10,708 --> 00:37:11,529
coming up next.

886
00:37:11,589 --> 00:37:13,910
And in which case you can say, oh, well, I

887
00:37:13,950 --> 00:37:15,291
know these portals are coming up next.

888
00:37:15,331 --> 00:37:16,772
Go ahead and preload these things

889
00:37:16,792 --> 00:37:18,053
so that I can use them when I get there.

890
00:37:18,333 --> 00:37:20,575
And RTS is very, very different in that fact

891
00:37:20,795 --> 00:37:22,956
that if you click on that mini map at the bottom of the screen,

892
00:37:23,196 --> 00:37:25,738
you can jump to anywhere you want as many times as you want.

893
00:37:26,038 --> 00:37:28,100
In which case, you're looking at completely new terrain,

894
00:37:28,140 --> 00:37:30,221
completely new units all across the board.

895
00:37:30,541 --> 00:37:32,603
Well, if we're going to be streaming unique texture data,

896
00:37:32,843 --> 00:37:34,824
we have to stream five channels for.

897
00:37:35,233 --> 00:37:40,597
you know, the 15 chunks that are visible in a given view, as well as decompress and stream

898
00:37:40,638 --> 00:37:44,541
all of our mesh textures at the same time. Well, the compression technology that we had

899
00:37:44,561 --> 00:37:48,464
at the same time was fantastic. I mean, it was amazing, but it wasn't fast enough to

900
00:37:48,484 --> 00:37:53,789
handle the texture load from the terrain as well as the meshes. So the terrain being a

901
00:37:53,809 --> 00:37:57,972
little less complex and able to solve, we said, okay, well, we'll keep using the real

902
00:37:57,992 --> 00:38:01,776
time texture decompression for the meshes, but for the terrain we'll do something a little

903
00:38:01,796 --> 00:38:02,116
bit different.

904
00:38:03,465 --> 00:38:05,246
So typically with a virtual texture page,

905
00:38:05,266 --> 00:38:08,348
you'll decompress a page into an uncompressed form

906
00:38:08,368 --> 00:38:09,808
and then use that in your rendering process.

907
00:38:09,828 --> 00:38:13,270
So you kind of have this massive texture in either off disk

908
00:38:13,471 --> 00:38:14,851
or in a compressed form in memory,

909
00:38:15,091 --> 00:38:17,053
and then you kind of grab what you want and decompress it

910
00:38:17,093 --> 00:38:18,313
and put it into a cache and whatnot.

911
00:38:18,634 --> 00:38:20,254
Well, instead, what we're going to do

912
00:38:20,455 --> 00:38:21,895
is instead of decompressing it, we're

913
00:38:21,915 --> 00:38:24,237
actually going to do the same splatting process, which

914
00:38:24,297 --> 00:38:25,497
is very common to Terrain.

915
00:38:25,758 --> 00:38:27,118
But instead of doing it in the screen buffer,

916
00:38:27,367 --> 00:38:30,408
We're going to do it in 2D space, in effectively texture

917
00:38:30,428 --> 00:38:30,669
space.

918
00:38:30,889 --> 00:38:32,149
And we're going to do it on the GPU.

919
00:38:32,229 --> 00:38:34,230
So the cool thing about this is we just render some quads.

920
00:38:34,630 --> 00:38:35,711
We create all of our data.

921
00:38:35,731 --> 00:38:37,911
And then we apply that back to the chunk in the same UV

922
00:38:37,952 --> 00:38:39,472
mapping that you would normally expect to get.

923
00:38:41,581 --> 00:38:43,582
After we would do this, we would then take those textures

924
00:38:43,622 --> 00:38:44,863
and we would put them in a cache.

925
00:38:45,023 --> 00:38:46,444
Now, to make sure that we fit in memory,

926
00:38:46,484 --> 00:38:48,405
that cache actually had to be compressed,

927
00:38:48,425 --> 00:38:51,527
because otherwise we'd have 70 to 100 megs of cache space.

928
00:38:51,567 --> 00:38:53,048
Because when you do a render target,

929
00:38:53,068 --> 00:38:57,210
you can't actually render directly to a DXTn or a DXT5

930
00:38:57,251 --> 00:38:57,871
or something like that.

931
00:38:57,891 --> 00:39:00,392
So we'd have to render to a DXT8 and then feed it back

932
00:39:00,412 --> 00:39:03,514
into the GPU and then compress it to using on the GPU.

933
00:39:03,554 --> 00:39:04,735
We had some shaders that would actually

934
00:39:04,795 --> 00:39:06,936
do the compressing the DXT5 and whatnot.

935
00:39:07,957 --> 00:39:10,238
And then each texture channel, Albedo, Diffuse.

936
00:39:10,972 --> 00:39:14,313
normal, specular, and emissive, and everything, had its own cache.

937
00:39:14,333 --> 00:39:17,334
You kind of look horizontally, you've got these stacks of caches

938
00:39:17,374 --> 00:39:21,275
where any cache page, vertically, all represented the same terrain chunk.

939
00:39:22,315 --> 00:39:24,856
Now, the cool thing about, well, I guess not the cool thing about this,

940
00:39:25,096 --> 00:39:27,597
was because of the fact that you're jumping around in your environment so much,

941
00:39:27,657 --> 00:39:30,578
managing troops, attacking this guy, dropping a bomb over here,

942
00:39:30,598 --> 00:39:32,779
going and getting these resources, fighting on this front,

943
00:39:32,999 --> 00:39:34,059
you're jumping around a lot.

944
00:39:34,099 --> 00:39:37,140
And again, an RTS is very, very different from an FPS.

945
00:39:37,920 --> 00:39:41,221
In such, the standard sort of virtual texture cache

946
00:39:41,281 --> 00:39:43,262
management routines kind of fell on its face.

947
00:39:43,682 --> 00:39:45,382
We needed a different solution because we just

948
00:39:45,402 --> 00:39:45,902
couldn't do that.

949
00:39:46,122 --> 00:39:48,683
We couldn't call create texture, new texture, load texture.

950
00:39:48,963 --> 00:39:50,163
We couldn't do that for every frame.

951
00:39:50,423 --> 00:39:51,984
So instead, we made a custom system.

952
00:39:52,304 --> 00:39:53,904
Basically, for the entire cache, we

953
00:39:53,924 --> 00:39:56,645
would just allocate one large physical chunk of memory

954
00:39:57,285 --> 00:39:57,465
on the 360.

955
00:39:58,493 --> 00:40:01,115
And then, anytime we needed to update it with different size

956
00:40:01,175 --> 00:40:02,956
textures or composite into the cache,

957
00:40:03,196 --> 00:40:05,838
we would just use the XG set texture header

958
00:40:06,118 --> 00:40:07,759
to point to that area in memory.

959
00:40:08,039 --> 00:40:09,500
So this allowed us all the benefits

960
00:40:09,560 --> 00:40:11,862
of sort of rendering to a texture atlas,

961
00:40:11,902 --> 00:40:13,523
but without all the problems with that.

962
00:40:13,763 --> 00:40:15,424
It allowed us to say, here's your handle,

963
00:40:15,504 --> 00:40:16,165
here's this handle.

964
00:40:16,705 --> 00:40:19,767
It allowed us a little bit more CPU side cache modification

965
00:40:19,807 --> 00:40:20,247
and usage.

966
00:40:21,728 --> 00:40:24,990
We also found out that MRU and LRU weren't sufficient.

967
00:40:25,498 --> 00:40:30,102
predictors for victim page elimination like they are in other sorts of systems.

968
00:40:30,462 --> 00:40:34,825
And the research that I was able to put into that actually was published in

969
00:40:34,925 --> 00:40:38,167
Efficient Cash Replacement Using the Age and Cost Metrics in Game Programming

970
00:40:38,327 --> 00:40:42,050
Gen 7. If any of you are dealing with these systems where you're paging lots

971
00:40:42,090 --> 00:40:45,692
of data in and out that can be randomly moved at any given time, I highly

972
00:40:45,732 --> 00:40:49,074
recommend you check out the age and cost metrics because it gives a better

973
00:40:49,114 --> 00:40:52,176
predictor than LRU or MRU or NRUFS.

974
00:40:54,825 --> 00:40:58,988
any one of those algorithms. So please check it out and if you have better ways to do it, please let me know.

975
00:40:59,028 --> 00:41:01,270
I'm always interested in hearing more of those things.

976
00:41:02,070 --> 00:41:04,892
Into, because I've had six slides without a picture, here's a picture.

977
00:41:05,172 --> 00:41:09,375
Now, this, first off, this is obviously temporary artwork from 2006,

978
00:41:09,716 --> 00:41:12,137
so please don't go post this on your blog and be like,

979
00:41:12,157 --> 00:41:13,458
the early origins of Halo Wars!

980
00:41:15,333 --> 00:41:16,773
This is between us and the slideshow.

981
00:41:17,073 --> 00:41:19,415
On the top here is the actual cache itself.

982
00:41:19,775 --> 00:41:21,716
Now, the reason is a lot of you people are saying, well,

983
00:41:21,736 --> 00:41:24,397
why are you using the XG set texture header and whatnot?

984
00:41:24,637 --> 00:41:26,938
Well, if you look at the bottom right-hand area here,

985
00:41:27,259 --> 00:41:30,200
these are all low-resolution 64 by 64 textures.

986
00:41:30,300 --> 00:41:33,021
And there's a ton of them that we have to move in and out,

987
00:41:33,061 --> 00:41:34,822
especially when we're swinging our camera around

988
00:41:34,862 --> 00:41:37,164
at such fast speeds in first-person shooter

989
00:41:37,184 --> 00:41:39,665
mode for cinematics and wow moments and everything

990
00:41:39,705 --> 00:41:39,985
like that.

991
00:41:41,025 --> 00:41:45,488
you know, having to either have a greedy cache of 64x64s already

992
00:41:45,588 --> 00:41:49,310
allocated, or a greedy cache of 512x512s, or expanding those

993
00:41:49,330 --> 00:41:52,111
things over time, it's just too much burden on the CPU and the

994
00:41:52,151 --> 00:41:55,113
driver. So instead, we just move around these XG set texture

995
00:41:55,133 --> 00:41:58,554
headers, and it allows our 64x64s to occupy the same space

996
00:41:58,594 --> 00:42:01,816
that a 512x512 would. So this was actually a huge win for us,

997
00:42:01,836 --> 00:42:04,217
because it gave us all the benefits of a caching system

998
00:42:04,257 --> 00:42:06,798
without the burdens of actually having extra resource handles.

999
00:42:08,091 --> 00:42:09,612
Now, I just want to talk a little bit about the

1000
00:42:09,872 --> 00:42:12,393
compression system, because it's important to say that,

1001
00:42:12,453 --> 00:42:17,475
hey, when you do a render to texture, and it does come out

1002
00:42:17,555 --> 00:42:21,096
in uncompressed format, RGBA8 or something like that, that

1003
00:42:21,116 --> 00:42:23,057
you then have to compress it in order to put it in our

1004
00:42:23,097 --> 00:42:23,918
compressed cache.

1005
00:42:23,938 --> 00:42:26,359
And like I said before, we did have some shaders that would

1006
00:42:26,379 --> 00:42:29,540
take in the uncompressed data and compress it and swizzle it

1007
00:42:29,620 --> 00:42:32,741
to the 360 swizzled format, and then write that data into

1008
00:42:32,761 --> 00:42:33,442
the cache itself.

1009
00:42:33,762 --> 00:42:36,083
And just for number comparisons here.

1010
00:42:36,665 --> 00:42:41,286
diffuse, three channel spec and three channel reflective all got their own DXT1 texture.

1011
00:42:42,187 --> 00:42:47,148
Normal was compressed to DXTN and then emissive which we use as a high dynamic range went

1012
00:42:47,188 --> 00:42:51,949
to DXT5 and you can see their memory footprints there. In reality, the cool thing was that

1013
00:42:51,969 --> 00:42:57,570
for a lot of maps that didn't use emissive or didn't use reflective maps, we could turn

1014
00:42:57,590 --> 00:43:01,431
off those caches entirely and save us some memory. So if you were playing on a map with

1015
00:43:01,471 --> 00:43:04,412
all dirt, you know, we wouldn't allocate six megs for a cache for that.

1016
00:43:05,851 --> 00:43:10,273
So now I would usually get into the content creation process,

1017
00:43:10,313 --> 00:43:12,634
but I actually kind of want to talk about something else

1018
00:43:12,774 --> 00:43:13,054
first.

1019
00:43:13,995 --> 00:43:15,035
One of the other big things that we

1020
00:43:15,055 --> 00:43:16,536
wanted to fix with the Halo Wars terrain

1021
00:43:16,816 --> 00:43:20,098
was we really wanted to fix the whole floating in space RTS

1022
00:43:20,138 --> 00:43:20,318
look.

1023
00:43:20,578 --> 00:43:22,459
So for those of you who had played Age of Empires III,

1024
00:43:22,679 --> 00:43:26,061
when you get to the edge of the map, it's just kind of black.

1025
00:43:26,081 --> 00:43:27,821
You get over there and it's just a black fall off.

1026
00:43:27,961 --> 00:43:29,462
Or if you're playing Age of Mythology,

1027
00:43:29,502 --> 00:43:31,343
you get to the edge of the map and it looks cut

1028
00:43:31,363 --> 00:43:32,964
and you kind of see the strategy.

1029
00:43:33,810 --> 00:43:35,570
the layers of the earth inside there.

1030
00:43:35,830 --> 00:43:38,311
We kind of wanted to get rid of that, as well as now

1031
00:43:38,331 --> 00:43:40,352
that we have to support a first person camera angle,

1032
00:43:40,672 --> 00:43:42,432
when you swing the camera into first person mode,

1033
00:43:42,472 --> 00:43:43,793
if there's nothing out there, it's

1034
00:43:44,193 --> 00:43:45,733
a little alarming for the user.

1035
00:43:46,134 --> 00:43:49,355
So we needed the ability to put geometry out there that

1036
00:43:50,015 --> 00:43:51,975
made it look convincing, but didn't really

1037
00:43:52,035 --> 00:43:54,576
have any impact in our content creation process,

1038
00:43:54,936 --> 00:43:56,797
or additional impact on our memory footprint,

1039
00:43:57,037 --> 00:43:58,517
or for that matter, our performance footprint.

1040
00:43:59,358 --> 00:44:01,818
Hence, what we call a terrain skirt.

1041
00:44:03,254 --> 00:44:07,062
So what we decided to do was take quad nodes, basically

1042
00:44:07,102 --> 00:44:09,306
just empty quad nodes, and sort of populate them out.

1043
00:44:09,996 --> 00:44:13,900
around the end of the map out to sort of a preset distance.

1044
00:44:14,220 --> 00:44:16,783
And then each quad node actually pointed

1045
00:44:17,183 --> 00:44:20,427
to a node on the playable map that it referenced.

1046
00:44:20,687 --> 00:44:21,968
The goal here was to actually make

1047
00:44:21,988 --> 00:44:23,310
it appear as though the train itself

1048
00:44:23,350 --> 00:44:27,234
were mirrored across the edges of the playable boundary area.

1049
00:44:27,554 --> 00:44:30,397
So this quad node over here on the end would actually say,

1050
00:44:30,457 --> 00:44:33,620
well, I'm referencing quad node 715 or whatever like that.

1051
00:44:33,921 --> 00:44:36,688
And then when we actually get that quad node visible

1052
00:44:36,708 --> 00:44:39,214
in the camera, we'd render its referenced quad

1053
00:44:39,254 --> 00:44:42,141
node at the lowest resolution with the lowest texture

1054
00:44:42,182 --> 00:44:43,164
resolution for that as well.

1055
00:44:44,077 --> 00:44:45,899
And here is how that sort of turned on.

1056
00:44:46,019 --> 00:44:49,141
So from the top down, you can see that the playable area

1057
00:44:49,341 --> 00:44:51,042
is down here in the left-hand side.

1058
00:44:51,082 --> 00:44:52,203
You can see objects and whatnot.

1059
00:44:52,483 --> 00:44:54,285
And then you can see that along the boundaries here,

1060
00:44:54,325 --> 00:44:56,366
you've got a mirrored version here, a mirrored version here,

1061
00:44:56,386 --> 00:44:57,207
and a mirrored version here.

1062
00:44:57,507 --> 00:44:59,589
You can see that these terrain details like this

1063
00:44:59,829 --> 00:45:00,990
is easily mirrored across that.

1064
00:45:01,430 --> 00:45:03,732
Basically, for those of you who understand it,

1065
00:45:04,032 --> 00:45:07,094
this is just like the mirror texture mode in texture

1066
00:45:07,114 --> 00:45:07,855
addressing and whatnot.

1067
00:45:07,915 --> 00:45:10,076
So for us, it was kind of a, well,

1068
00:45:10,116 --> 00:45:11,357
let's just do what the textures do.

1069
00:45:12,178 --> 00:45:12,298
Now.

1070
00:45:12,603 --> 00:45:15,005
From top down, this looks kind of obvious and hackish.

1071
00:45:15,285 --> 00:45:17,526
But from a first person angle, this actually comes across

1072
00:45:17,606 --> 00:45:18,346
very, very well.

1073
00:45:18,707 --> 00:45:22,188
Now this is an unaltered, undoctored screenshot.

1074
00:45:22,489 --> 00:45:24,790
An artist went in, he moved the camera, he put down some

1075
00:45:24,830 --> 00:45:27,591
wraiths there, and he hit Make Screenshot.

1076
00:45:27,912 --> 00:45:29,372
And this is kind of what came out.

1077
00:45:29,612 --> 00:45:32,734
And to show you what this actually is doing in the

1078
00:45:32,754 --> 00:45:35,235
background, the actual geometry is highlighted in

1079
00:45:35,275 --> 00:45:38,517
green, the skirt is actually highlighted in red, and the

1080
00:45:38,597 --> 00:45:39,758
sky dome is in blue.

1081
00:45:40,092 --> 00:45:41,972
Now, I'm going to switch kind of back and forth a couple of

1082
00:45:41,992 --> 00:45:43,913
times here, and I want you to focus on a couple of things.

1083
00:45:44,373 --> 00:45:48,355
First off, this area back here normally would be approximated

1084
00:45:48,395 --> 00:45:51,416
in a first-person shooter game as part of the sky dome.

1085
00:45:51,977 --> 00:45:54,038
But for us, it's actually part of the skirt.

1086
00:45:54,298 --> 00:45:56,179
So what that actually means is, since we're doing a mirror

1087
00:45:56,219 --> 00:45:59,260
mode, the camera is sitting on this little plateau here, and

1088
00:45:59,280 --> 00:46:02,141
those mountains are actually quad nodes that are behind us

1089
00:46:02,181 --> 00:46:04,142
that are being flipped onto that side out there.

1090
00:46:04,802 --> 00:46:05,723
Oops, wrong way.

1091
00:46:06,843 --> 00:46:07,523
You guys didn't see that yet.

1092
00:46:08,738 --> 00:46:12,802
The other thing too is you can actually kind of see that where the objects stop right here that this is the line

1093
00:46:13,182 --> 00:46:18,206
Sort of right here that that we're actually flipping and mirroring the train off and when you actually take a look at it

1094
00:46:18,226 --> 00:46:20,749
You can see that these geometric features here are easily

1095
00:46:21,109 --> 00:46:25,913
Reflected on the other side as well as this and this and and you know these little cliffs right here

1096
00:46:26,874 --> 00:46:29,996
But if you didn't actually know that that was a skirt you wouldn't actually you know

1097
00:46:30,036 --> 00:46:33,780
You wouldn't actually see it especially when you're flying through a canyon and seeing all these things

1098
00:46:34,187 --> 00:46:36,568
Now, just to kind of bring up another point here,

1099
00:46:36,849 --> 00:46:38,990
we kind of got a lot of slack when we finally

1100
00:46:39,030 --> 00:46:41,112
released the demo that everyone was saying, oh my god,

1101
00:46:41,132 --> 00:46:43,854
it doesn't look like the E3 2007 demo.

1102
00:46:44,134 --> 00:46:46,335
Well, the E3 2007 demo, where you're actually

1103
00:46:46,676 --> 00:46:49,418
following a pelican through a canyon flying around,

1104
00:46:49,778 --> 00:46:52,460
actually used this skirting technology extensively

1105
00:46:52,520 --> 00:46:54,802
to show that sort of horizontal view

1106
00:46:54,862 --> 00:46:56,563
and make it look like it's a much larger environment.

1107
00:46:56,623 --> 00:46:59,045
So it's not to say that it's not the same technology.

1108
00:46:59,085 --> 00:46:59,405
It is.

1109
00:46:59,465 --> 00:47:00,606
It's just a different usage of it

1110
00:47:00,646 --> 00:47:01,627
for what we actually shipped with.

1111
00:47:02,925 --> 00:47:04,726
So let's talk about some takeaway points.

1112
00:47:04,766 --> 00:47:06,527
And I think I'm doing OK on time.

1113
00:47:08,208 --> 00:47:08,428
10, 5 minutes?

1114
00:47:08,468 --> 00:47:08,808
What do I got?

1115
00:47:10,209 --> 00:47:10,690
I got 12. 12.

1116
00:47:11,250 --> 00:47:11,730
OK, cool.

1117
00:47:11,990 --> 00:47:13,551
So good, good, good, good.

1118
00:47:13,571 --> 00:47:14,792
Then we can talk about content authoring.

1119
00:47:14,852 --> 00:47:16,193
So takeaway points.

1120
00:47:16,273 --> 00:47:18,414
So first off, I want to point out that height fields are no

1121
00:47:18,434 --> 00:47:19,175
longer de facto.

1122
00:47:19,415 --> 00:47:21,176
If there's anything that you come out of this talk with, I

1123
00:47:21,196 --> 00:47:23,638
want you to know that there's something else beside height

1124
00:47:23,698 --> 00:47:25,459
fields and meshes being inserted with them.

1125
00:47:25,999 --> 00:47:28,041
In general, a vector field displacement is actually

1126
00:47:28,081 --> 00:47:30,502
pretty easy to implement in its basic form.

1127
00:47:30,862 --> 00:47:33,164
Even if you have a height field terrain and then a separate

1128
00:47:33,204 --> 00:47:35,887
channel that is the vector field displacement afterwards,

1129
00:47:36,407 --> 00:47:37,808
there's a lot of different modifications

1130
00:47:37,828 --> 00:47:38,509
that you can play with.

1131
00:47:38,729 --> 00:47:41,231
And there's really no reason to not empower your artist

1132
00:47:41,511 --> 00:47:43,673
to be able to sculpt things like that overhang

1133
00:47:43,733 --> 00:47:44,774
that a programmer did.

1134
00:47:46,235 --> 00:47:48,858
Secondly is that the tessellator hardware is really

1135
00:47:48,898 --> 00:47:49,738
the future of terrain.

1136
00:47:50,019 --> 00:47:51,780
If you've read the article in Shader X7,

1137
00:47:51,800 --> 00:47:54,382
and if you've attended any of the AMD talks, the DirectX 11

1138
00:47:54,723 --> 00:47:56,644
talks, it talks about the ability

1139
00:47:56,684 --> 00:47:58,426
to do these tessellated quads and whatnot.

1140
00:47:58,974 --> 00:48:04,798
that fits perfect for terrain. There's really no reason to not use it. Things like ByLOD or

1141
00:48:05,919 --> 00:48:10,602
SOAR or ROAM, really with the hardware being able to support those things, those are really all

1142
00:48:10,762 --> 00:48:16,826
in the past at this point. The next thing is that the separation of the SIM data and the

1143
00:48:16,866 --> 00:48:21,690
VIS data was a fantastic idea. Now, in the first person community, we see this a lot.

1144
00:48:21,770 --> 00:48:24,852
You have a visual representation and then you have a lower resolution physics or...

1145
00:48:25,317 --> 00:48:28,179
or collision representation, but in the RTS community,

1146
00:48:28,619 --> 00:48:31,541
it's not really that prominent of a feature.

1147
00:48:31,601 --> 00:48:34,503
You usually have some coupling between tile data

1148
00:48:34,563 --> 00:48:36,204
and pathing data and visual data,

1149
00:48:36,484 --> 00:48:38,286
and no one, or at least that ensemble

1150
00:48:38,326 --> 00:48:39,386
and the research that we did,

1151
00:48:39,707 --> 00:48:42,488
no one had ever taken such a drastic step like we have

1152
00:48:42,769 --> 00:48:44,350
to draw a hard line in the sand and say,

1153
00:48:44,390 --> 00:48:46,671
no, no, no, these are sim concepts

1154
00:48:46,731 --> 00:48:48,112
and these are visual concepts,

1155
00:48:48,172 --> 00:48:51,615
and we will make decisions on each separate from each other.

1156
00:48:52,094 --> 00:48:54,955
That was by far one of the coolest things that came out of this research, especially

1157
00:48:54,975 --> 00:48:58,076
when you look at scenarios 11 and 12, when you're playing on the back of the Spirit of

1158
00:48:58,116 --> 00:48:58,396
Fire.

1159
00:48:58,656 --> 00:49:02,897
We really hadn't seen any visuals like that in any other RTSs out there, which if you

1160
00:49:02,917 --> 00:49:05,817
remember the second slide, we said we want to advance the genre.

1161
00:49:06,598 --> 00:49:10,118
You really can't ask for anything more than that when you actually ship a product.

1162
00:49:11,439 --> 00:49:14,900
So since I have a captive room of people and you're all seeing the little bonfire studios

1163
00:49:14,940 --> 00:49:17,720
at the bottom there, I figure I might as well talk about this a little bit.

1164
00:49:17,989 --> 00:49:22,491
So if you read the news, you know that Bonfire Studios is made up of ex-Ensemble Studios employees.

1165
00:49:22,931 --> 00:49:28,693
And we're actually mainly comprised of the original team, the original technology team,

1166
00:49:28,993 --> 00:49:33,495
that created the renderer, created the engine, created the toolchain, and actually got the game greenlit.

1167
00:49:33,555 --> 00:49:37,957
It's the same team that's been there from the beginning of Halo Wars to the end of Halo Wars and got the whole thing shipped.

1168
00:49:38,437 --> 00:49:39,839
And we've got about 35 of us.

1169
00:49:39,879 --> 00:49:41,621
We're all from Ensemble so far.

1170
00:49:41,721 --> 00:49:43,904
And we're working on very new intellectual property.

1171
00:49:44,244 --> 00:49:46,947
And please check out bonfire-studios.com

1172
00:49:46,967 --> 00:49:48,289
if you're interested in more information there.

1173
00:49:48,930 --> 00:49:50,732
And I'm still good on time, right?

1174
00:49:50,752 --> 00:49:51,893
So I'll go ahead and say thank you.

1175
00:49:52,113 --> 00:49:52,474
10 minutes, good.

1176
00:49:52,794 --> 00:49:55,838
So thank you very much, Andrew Foster, Rich Geldritsch,

1177
00:49:55,878 --> 00:49:58,180
Sergio Ticone, Scott Winsett, and Ken Adams.

1178
00:49:58,500 --> 00:50:02,321
These guys have been crucial in getting this technology

1179
00:50:02,341 --> 00:50:03,962
together over the past four or five years.

1180
00:50:04,322 --> 00:50:06,823
So now, this isn't my last slide, if you guys don't mind.

1181
00:50:07,163 --> 00:50:09,984
I'm going to kind of try to push the Q&A session back

1182
00:50:10,024 --> 00:50:13,585
and talk about some density or some content creation process.

1183
00:50:13,625 --> 00:50:14,085
Is that OK?

1184
00:50:14,325 --> 00:50:15,565
Unless people don't.

1185
00:50:15,625 --> 00:50:16,286
Is that OK?

1186
00:50:17,246 --> 00:50:17,686
OK, cool.

1187
00:50:17,706 --> 00:50:18,366
All right, excellent.

1188
00:50:19,007 --> 00:50:19,507
Extra slides.

1189
00:50:19,687 --> 00:50:19,847
Sweet.

1190
00:50:21,246 --> 00:50:24,487
How do you actually edit a 4K by 4K freaking terrain?

1191
00:50:24,847 --> 00:50:27,669
Well, Ensemble Studios, this was the first time

1192
00:50:27,689 --> 00:50:31,250
we had made a console terrain, or a console game.

1193
00:50:31,310 --> 00:50:33,431
So we kind of had to answer problems

1194
00:50:33,471 --> 00:50:35,072
in a little different way than we were used to working with.

1195
00:50:35,432 --> 00:50:37,653
So we had our editor designed entirely on our PC,

1196
00:50:37,893 --> 00:50:38,673
and we had a game on our 360.

1197
00:50:39,534 --> 00:50:42,035
And so we had a very, very robust streaming

1198
00:50:42,095 --> 00:50:43,615
and content reloading pipeline.

1199
00:50:43,815 --> 00:50:46,237
that any changes that were picked up on the PC would

1200
00:50:46,257 --> 00:50:49,760
immediately be reloaded, sent across the network, and shown

1201
00:50:49,840 --> 00:50:50,000
on the 360.

1202
00:50:50,060 --> 00:50:52,682
This included any modifications to terrain.

1203
00:50:53,323 --> 00:50:56,025
Our editor was written entirely in C Sharp, which

1204
00:50:56,725 --> 00:50:57,746
was a fantastic idea.

1205
00:50:57,806 --> 00:50:58,947
C Sharp is a great language.

1206
00:50:59,007 --> 00:51:02,030
It allows you a lot of abilities to add controls and

1207
00:51:02,070 --> 00:51:06,473
visual elements that aren't as robust when you start talking

1208
00:51:06,513 --> 00:51:10,156
about other sort of widget languages.

1209
00:51:10,216 --> 00:51:10,736
On top of that.

1210
00:51:11,369 --> 00:51:13,330
It allowed us to say, well, this is all in C Sharp,

1211
00:51:13,370 --> 00:51:16,073
and so it can't be in C++, which actually led us

1212
00:51:16,133 --> 00:51:18,355
to one of the worst decisions that I think I've ever made

1213
00:51:18,375 --> 00:51:20,456
in my professional career, was that I actually

1214
00:51:20,516 --> 00:51:23,359
duplicated the entire rendering system on Halo Wars

1215
00:51:23,559 --> 00:51:27,262
on the PC in ManageDirectX, which

1216
00:51:27,322 --> 00:51:28,643
was a horrible, horrible idea.

1217
00:51:29,124 --> 00:51:31,586
Don't ever do that ever in your career, please.

1218
00:51:32,146 --> 00:51:35,229
It was cool that we sort of had the same renderer on the PC.

1219
00:51:36,190 --> 00:51:39,091
in C sharp, but at the same time, you just didn't have the

1220
00:51:39,131 --> 00:51:40,892
same hardware. And so we were constantly fighting with

1221
00:51:40,912 --> 00:51:44,133
people's machines not being up to spec, or weird things with

1222
00:51:44,173 --> 00:51:46,654
managed directX running out of memory for no friggin' reason.

1223
00:51:47,975 --> 00:51:49,856
So let's talk about vertex editing. Because when you

1224
00:51:49,936 --> 00:51:52,977
increase your density to the type we did, standard height

1225
00:51:53,017 --> 00:51:55,598
field brushes just don't work. I mean, height up, height down,

1226
00:51:56,078 --> 00:51:57,999
I mean, that's really all you need is standard height field

1227
00:51:58,366 --> 00:52:00,708
But for a vector field, you have to start looking at things

1228
00:52:00,768 --> 00:52:03,409
and controls like ZBrush and Mudbox,

1229
00:52:03,770 --> 00:52:06,872
things that allow you to rotate the camera and get in there

1230
00:52:06,912 --> 00:52:09,313
and actually sculpt like an artist would actually sculpt.

1231
00:52:09,554 --> 00:52:10,855
So we actually sat down with the artist

1232
00:52:10,875 --> 00:52:13,536
and looked at those programs and said, well, OK,

1233
00:52:13,576 --> 00:52:15,418
here's a control, here's displacement

1234
00:52:15,438 --> 00:52:18,660
along a camera angle, or here's displacement along a normal,

1235
00:52:18,760 --> 00:52:21,702
or here's a unifier, here's a digger, and things like that.

1236
00:52:21,902 --> 00:52:23,423
And we actually implemented pretty much 90%

1237
00:52:24,164 --> 00:52:26,505
of the functionality that these two tools had.

1238
00:52:26,934 --> 00:52:29,096
in our terrain system and allowed them to use that.

1239
00:52:29,116 --> 00:52:32,539
In addition to that, we allowed something like Adobe Photoshop

1240
00:52:32,699 --> 00:52:36,042
masking situation, which allowed you to go in and mask out areas

1241
00:52:36,142 --> 00:52:38,844
and apply different filters to them and also mask them out

1242
00:52:38,864 --> 00:52:40,966
and say, well, you know, mask out this cliff area.

1243
00:52:41,006 --> 00:52:42,327
I'm going to do all this sculpting over here,

1244
00:52:42,367 --> 00:52:43,869
and I don't want to modify this.

1245
00:52:44,149 --> 00:52:45,790
And that was actually a pretty cool process, too.

1246
00:52:46,571 --> 00:52:48,012
It allowed us to actually introduce

1247
00:52:48,052 --> 00:52:51,195
the concepts of some vertex translation widgets, which

1248
00:52:51,235 --> 00:52:52,256
are very familiar to you guys who

1249
00:52:52,276 --> 00:52:53,977
work in 3D Studio Max, being able to select

1250
00:52:54,037 --> 00:52:55,338
a bunch of vertices and move them around.

1251
00:52:55,699 --> 00:52:57,759
So here's our terrain in our editor in C sharp.

1252
00:52:58,260 --> 00:52:59,140
Here's some C sharp buttons.

1253
00:52:59,560 --> 00:53:02,461
And we have the areas selected in red here

1254
00:53:02,541 --> 00:53:03,262
that are masked out.

1255
00:53:03,742 --> 00:53:05,523
And then you can see that we just kind of created

1256
00:53:05,543 --> 00:53:07,564
a little widget that you can grab the widget and move it

1257
00:53:07,584 --> 00:53:09,044
in displacement in any way you want.

1258
00:53:09,364 --> 00:53:11,345
And all of the data just kind of moves around

1259
00:53:11,425 --> 00:53:12,806
since we're now dealing with a vector field.

1260
00:53:13,326 --> 00:53:15,127
These widgets were absolutely fantastic

1261
00:53:15,147 --> 00:53:16,928
and allowed the artist to do mass properties

1262
00:53:16,968 --> 00:53:17,548
at the same time.

1263
00:53:17,992 --> 00:53:19,453
uh... the next step though was

1264
00:53:19,733 --> 00:53:22,876
they said well we need some other things we don't just need per vertex definition

1265
00:53:22,896 --> 00:53:23,597
we actually need

1266
00:53:23,897 --> 00:53:26,060
filters we need fbm we need perlin

1267
00:53:26,080 --> 00:53:28,522
uh... we need sort of these mass generation things

1268
00:53:29,142 --> 00:53:30,684
uh... the problem with that though is that

1269
00:53:31,044 --> 00:53:34,267
perlin really doesn't look like terrain fbm really doesn't look like terrain if

1270
00:53:34,287 --> 00:53:37,130
you've ever looked at terrain it's not a noise function it's really not

1271
00:53:37,853 --> 00:53:40,476
Terrain is actually a modification of erosion properties.

1272
00:53:40,796 --> 00:53:44,921
It's the process of thousands of years of hydraulic and thermal erosion

1273
00:53:45,321 --> 00:53:47,523
moving dirt through the environment.

1274
00:53:47,583 --> 00:53:49,285
And that's the look that we really needed to get.

1275
00:53:50,426 --> 00:53:54,951
So what I did is I probably spent probably about four months of pure, whole time

1276
00:53:55,271 --> 00:53:57,954
during the development of Halo Wars, you know, kind of spread out between years,

1277
00:53:58,275 --> 00:54:00,617
working on a hydraulic erosion process.

1278
00:54:00,983 --> 00:54:05,387
Now if you got Shader X7, you probably read an article in there by Eric Benez, I hope

1279
00:54:05,407 --> 00:54:08,991
that's his name, I apologize, on how to do this whole thing in the GPU.

1280
00:54:09,251 --> 00:54:10,653
Well, I did it a different process.

1281
00:54:10,713 --> 00:54:14,516
I actually did the whole thing on the CPU using a process called path tracing.

1282
00:54:14,797 --> 00:54:18,520
Effectively, what I did was I dropped millions of raindrops on the terrain, and for each

1283
00:54:18,601 --> 00:54:22,484
raindrop I would sort of figure out the next delta, pick up some dirt, move to that next

1284
00:54:22,504 --> 00:54:24,747
delta, drop some dirt, add some water, etc., etc., etc.

1285
00:54:25,367 --> 00:54:28,851
You can find some various situations out there that kind of describe the same process.

1286
00:54:29,692 --> 00:54:31,855
The trick to this was actually getting it right.

1287
00:54:31,915 --> 00:54:32,916
Like, it's one thing to just say,

1288
00:54:32,936 --> 00:54:34,738
I'm going to move to the next element, pick up some dirt,

1289
00:54:34,958 --> 00:54:36,240
and then drop some dirt off.

1290
00:54:36,640 --> 00:54:39,363
Getting the control parameters actually correct

1291
00:54:39,403 --> 00:54:42,046
when you're sort of dealing with these sloping pieces of data

1292
00:54:42,066 --> 00:54:44,689
that can kind of accumulate and snowball and then channel.

1293
00:54:45,050 --> 00:54:46,650
And then do you hit sedentary rock?

1294
00:54:46,710 --> 00:54:47,991
Are you loose dirt?

1295
00:54:48,251 --> 00:54:49,712
Is it defined by your texture?

1296
00:54:49,732 --> 00:54:51,993
I mean, we had the concept of all these things

1297
00:54:52,033 --> 00:54:54,494
in our editor system, so that if they put down some grass,

1298
00:54:54,534 --> 00:54:55,834
it wouldn't get eroded like it would

1299
00:54:55,874 --> 00:54:57,195
with the dirt and everything.

1300
00:54:57,675 --> 00:55:00,857
uh... and so i i know a little clamp on time to win a trustee to these really

1301
00:55:00,877 --> 00:55:01,357
quick i'm sorry

1302
00:55:01,738 --> 00:55:03,899
uh... on average you can erode the entire map

1303
00:55:04,139 --> 00:55:06,841
took about twenty to thirty seconds and this was a back when you're still to

1304
00:55:06,881 --> 00:55:08,762
pay by two k terrain i i fortunately didn't

1305
00:55:09,162 --> 00:55:09,742
didn't time it

1306
00:55:10,042 --> 00:55:12,023
on the cool thing was that actually figure out a way to make this whole

1307
00:55:12,063 --> 00:55:13,124
process multi-threaded

1308
00:55:13,484 --> 00:55:15,765
uh... so if you've ever looked at the talks by world machine or some of those

1309
00:55:15,786 --> 00:55:16,166
other things

1310
00:55:16,446 --> 00:55:17,326
they talk about doing

1311
00:55:17,867 --> 00:55:21,369
uh... doing each node as a separate threaded process while we actually

1312
00:55:21,389 --> 00:55:22,109
figure out a way to

1313
00:55:22,649 --> 00:55:23,230
five minutes thank you

1314
00:55:23,725 --> 00:55:28,546
We figured out a way to actually thread the drops of these water and moving it around,

1315
00:55:28,586 --> 00:55:29,486
which allowed us to speed up.

1316
00:55:30,367 --> 00:55:35,388
So here is a picture of a chunk of terrain, and it's highlighted in red because we had

1317
00:55:35,408 --> 00:55:38,629
the ability to say, just apply this filter to this selected terrain.

1318
00:55:39,089 --> 00:55:40,710
And then here is the eroded process.

1319
00:55:41,030 --> 00:55:45,411
Now granted, it's probably not the best looking erosion, but you can imagine that, hey, having

1320
00:55:45,451 --> 00:55:49,072
the ability to just make it look eroded at all is better than a Perlin filter or anything

1321
00:55:49,132 --> 00:55:49,792
along those lines.

1322
00:55:50,192 --> 00:55:53,914
And so here's another view of this, and this is actually something else that is really, really cool.

1323
00:55:54,335 --> 00:55:56,616
Is that we allow the ability to not only erode the terrain,

1324
00:55:56,876 --> 00:55:58,877
but because we were doing the whole thing on the CPU,

1325
00:55:59,097 --> 00:56:02,039
we could then generate masking information that we pass back to the artist,

1326
00:56:02,119 --> 00:56:04,100
they can sort of put back into the information.

1327
00:56:04,460 --> 00:56:07,682
So you can see our C-sharp controller here, we had no masking,

1328
00:56:07,862 --> 00:56:11,244
or generate an erosion with a mask, or just generate the mask itself.

1329
00:56:11,645 --> 00:56:16,167
And so here is the terrain eroded with a mask that defines the eroded area,

1330
00:56:16,227 --> 00:56:19,429
and the intensity of the mask defines how much erosion actually occurred in that place.

1331
00:56:20,227 --> 00:56:24,950
And the result of that is allowed the artist to sort of apply this green texture everywhere.

1332
00:56:25,230 --> 00:56:32,115
And then when they did the erosion, they would be given a selection mask that they can apply a mass texture apply to the dirt texture.

1333
00:56:32,395 --> 00:56:35,317
And that kind of gave you these nice grooves in the terrain like that.

1334
00:56:36,018 --> 00:56:40,181
To our knowledge, no one's really implemented anything like this in any tool we were aware of.

1335
00:56:40,261 --> 00:56:43,943
So we were very, very impressed by the fact that this came out this way.

1336
00:56:44,244 --> 00:56:46,645
And again, terrain doesn't look like Berlin.

1337
00:56:46,705 --> 00:56:48,246
Terrain doesn't look like FBM.

1338
00:56:48,306 --> 00:56:49,447
Terrain looks like eroded.

1339
00:56:49,914 --> 00:56:52,619
uh... information and so this was this is actually the cornerstone for

1340
00:56:52,659 --> 00:56:53,340
everything we're doing

1341
00:56:54,642 --> 00:56:57,867
uh... texture editing actually work the same way of the the artist had

1342
00:56:58,228 --> 00:56:59,891
request for increased out the resolution

1343
00:57:00,406 --> 00:57:05,451
the concept of layers just like Adobe Photoshop, so they could take textures and swap them visually

1344
00:57:06,351 --> 00:57:10,935
in a vertical fashion. They had masking. They also had extra data channels that they could

1345
00:57:11,016 --> 00:57:16,340
add in that would be applied per texture information. And we really had to go back just like we

1346
00:57:16,360 --> 00:57:21,024
did with Mudbox and ZBrush and sort of implement all of these other tools that exist in Adobe

1347
00:57:21,044 --> 00:57:24,588
Photoshop. So at the end of the day, our terrain editor actually looked more like

1348
00:57:25,312 --> 00:57:28,256
Mudbox and 3D Studio Max and Photoshop just kind of all

1349
00:57:28,536 --> 00:57:31,060
stuffed into itself with 4K by 4K terrain.

1350
00:57:31,080 --> 00:57:32,823
And that's what we dealt with every day.

1351
00:57:33,323 --> 00:57:35,647
So again, thank you all very much for coming to my talk.

1352
00:57:35,707 --> 00:57:36,628
I appreciate you all being here.

1353
00:57:36,648 --> 00:57:38,611
This is more response than I could have ever imagined.

1354
00:57:38,691 --> 00:57:39,612
So thank you very much.

1355
00:57:47,698 --> 00:57:51,240
And so I think we have three minutes for anyone who does want to ask questions.

1356
00:57:51,861 --> 00:57:54,462
If you don't get your question asked, I'll be standing outside probably for the next

1357
00:57:54,782 --> 00:57:56,803
three days with any other information.

1358
00:57:56,863 --> 00:57:58,604
So if you do have a question, please approach the mic.

1359
00:58:07,809 --> 00:58:08,329
Hey, how you doing?

1360
00:58:08,349 --> 00:58:10,430
Good, I'm good.

1361
00:58:10,450 --> 00:58:10,851
My name is Maddie.

1362
00:58:10,871 --> 00:58:13,352
I just wanted to leave you my card and continue to do a great job.

1363
00:58:13,372 --> 00:58:14,192
Oh, thank you very much, ma'am.

1364
00:58:14,212 --> 00:58:16,293
Yeah, I'm sure you've talked to a lot of people, so I don't want to like...

1365
00:58:16,888 --> 00:58:20,250
I'm having a headache right now, but do we have a conference?

1366
00:58:20,270 --> 00:58:20,990
Unfortunately, I don't.

1367
00:58:21,311 --> 00:58:24,112
Ensemble's sort of shut down and we're sort of bonfires in the process.

1368
00:58:24,132 --> 00:58:25,914
So let me come around here, actually.

1369
00:58:29,916 --> 00:58:32,238
Right, like if you have an oak cropping, it hangs up a roof.

1370
00:58:32,898 --> 00:58:33,678
Thank you. Thank you very much.

1371
00:58:33,738 --> 00:58:34,559
Appreciate it. Thank you.

1372
00:58:35,259 --> 00:58:36,200
So, yes, ma'am.

1373
00:58:36,240 --> 00:58:40,443
How long did it take before your screen editor was going to work on your film?

1374
00:58:41,114 --> 00:58:44,876
We went from initial concept to something that the artist can actually use in about three weeks.

1375
00:58:45,377 --> 00:58:49,440
That included the C-sharp tool set, that included the specifications and everything.

1376
00:58:49,500 --> 00:58:53,503
So we went from concept to here's something, you guys go play with it in about three weeks.

1377
00:58:53,563 --> 00:58:54,383
And you continue iterating on it?

1378
00:58:54,824 --> 00:58:59,927
Oh, yes, ma'am. In fact, I say we iterated on it to about, until about July of 2008,

1379
00:59:00,408 --> 00:59:03,270
at which time we said, hey, listen, we got a ship-freaking game, we can't fix anymore.

1380
00:59:03,570 --> 00:59:04,651
So, yes, ma'am.

1381
00:59:04,691 --> 00:59:04,971
Thank you.

1382
00:59:05,131 --> 00:59:06,212
No problem, thank you.

1383
00:59:06,592 --> 00:59:07,653
Hopefully, quick question.

1384
00:59:07,693 --> 00:59:08,093
Okay, so...

1385
00:59:09,191 --> 00:59:11,713
With the, not the VisRep, but the...

1386
00:59:12,073 --> 00:59:12,533
The SimRep.

1387
00:59:12,593 --> 00:59:13,254
SimRep, right?

1388
00:59:13,674 --> 00:59:15,375
Okay, so if you're constructing it by

1389
00:59:15,876 --> 00:59:17,257
just straight projecting down,

1390
00:59:18,157 --> 00:59:19,738
and you had a scenario where,

1391
00:59:19,818 --> 00:59:22,360
let's say the terrain was being pulled,

1392
00:59:22,400 --> 00:59:24,682
so it outcropped over, like over a canyon?

1393
00:59:25,142 --> 00:59:26,043
Ah, yes, yes, yes, yes, yes.

1394
00:59:26,083 --> 00:59:28,204
How would you account for the fact that,

1395
00:59:28,224 --> 00:59:30,606
you know, things should be able to move underneath?

1396
00:59:31,306 --> 00:59:33,468
So, our simulation didn't actually allow

1397
00:59:33,508 --> 00:59:34,829
for objects to move under that,

1398
00:59:34,869 --> 00:59:37,370
because to the Sim, we were still using a height field.

1399
00:59:37,710 --> 00:59:40,512
So it had no concept of pathing under bridges or pathing under

1400
00:59:40,592 --> 00:59:40,953
objects.

1401
00:59:41,013 --> 00:59:42,554
The sim was still using, effectively,

1402
00:59:42,594 --> 00:59:44,956
the same pathing engine and AI engine

1403
00:59:44,996 --> 00:59:46,437
that Age of Empires III shipped with.

1404
00:59:47,158 --> 00:59:49,660
So we just had to make sure that our data supported

1405
00:59:49,880 --> 00:59:51,642
that legacy code path.

1406
00:59:51,722 --> 00:59:53,724
We did have to do some tricks, though, for decals.

1407
00:59:53,964 --> 00:59:55,926
So when you do have these overhanging things

1408
00:59:56,206 --> 00:59:58,468
and you move your cursor to something underneath it,

1409
00:59:59,188 --> 01:00:01,350
you had to show the decal there as opposed to on top of it.

1410
01:00:01,410 --> 01:00:03,432
And to do that, we would render from the top,

1411
01:00:03,692 --> 01:00:04,853
and then we would do a depth peel.

1412
01:00:05,294 --> 01:00:08,055
that would get rid of the front fragments that would give us sort of a bottom. And we

1413
01:00:08,075 --> 01:00:12,317
would store that as a separate texture that had height and low data. And then when you

1414
01:00:12,337 --> 01:00:16,819
would get the cursor position in the GPU, I would scale it and determine which one you

1415
01:00:16,839 --> 01:00:20,140
should use. Should I use the high value or the low value and then draw our decal there.

1416
01:00:20,380 --> 01:00:26,743
Okay. So some of it's just sort of conditioning the artist to not do crazy stuff, right?

1417
01:00:26,943 --> 01:00:28,023
Well, we wanted them to.

1418
01:00:28,123 --> 01:00:31,205
Really weird things where you could almost like...

1419
01:00:31,703 --> 01:00:33,966
have the terrain wrap over itself or build a cave?

1420
01:00:34,086 --> 01:00:36,368
Correct. Utah overhangs and things like that.

1421
01:00:36,388 --> 01:00:38,711
Well, we actually wanted our artists to do those things.

1422
01:00:38,731 --> 01:00:40,973
Unfortunately, we didn't get enough of that

1423
01:00:41,013 --> 01:00:41,814
in our shipped product.

1424
01:00:41,854 --> 01:00:42,735
We wanted them to do that.

1425
01:00:43,015 --> 01:00:44,977
The big thing was whether or not that that should have

1426
01:00:45,017 --> 01:00:47,400
an impact on our sim representation.

1427
01:00:47,740 --> 01:00:48,881
So that was the big question.

1428
01:00:48,941 --> 01:00:50,903
And early on they said we don't have time to innovate

1429
01:00:51,064 --> 01:00:52,765
on the pathing and all those other things,

1430
01:00:52,805 --> 01:00:53,946
so we'll just use a height field.

1431
01:00:54,798 --> 01:00:56,158
Okay, that makes sense.

1432
01:00:56,198 --> 01:00:56,919
Excellent, thank you.

1433
01:00:57,119 --> 01:00:57,799
Yes, sir.

1434
01:00:57,879 --> 01:00:59,360
Great, thank you.

1435
01:00:59,840 --> 01:01:01,500
I'm from Japan.

1436
01:01:01,520 --> 01:01:01,741
Yes, sir.

1437
01:01:01,961 --> 01:01:02,821
I'm a man of...

1438
01:01:02,901 --> 01:01:04,602
No, thanks.

1439
01:01:04,642 --> 01:01:07,563
Maybe, could you give me a presentation later?

1440
01:01:08,163 --> 01:01:12,125
Yeah, you can actually download the presentation on the GDC website as soon as GDC is over,

1441
01:01:12,265 --> 01:01:15,546
and I'll have a version at bonfirestudios.com as well.

1442
01:01:15,846 --> 01:01:16,626
Do I need to grab that, sir?

1443
01:01:16,886 --> 01:01:18,147
I'll just download it from the system.

1444
01:01:18,247 --> 01:01:18,527
Thank you.

1445
01:01:18,567 --> 01:01:20,308
So that should be available within the upcoming weeks.

1446
01:01:20,788 --> 01:01:21,428
Okay, thank you.

1447
01:01:21,748 --> 01:01:21,968
Thank you.

1448
01:01:22,892 --> 01:01:24,673
So this might be a really newbie-ish question.

1449
01:01:24,693 --> 01:01:25,694
No problem.

1450
01:01:25,914 --> 01:01:29,917
What would be a good place for me to look to find out about the algorithms for sort

1451
01:01:29,957 --> 01:01:36,102
of automatically pushing the verts around to balance the UV density?

1452
01:01:36,222 --> 01:01:40,926
We used a spring mass tensor system, so it's actually something from the particle dynamics

1453
01:01:41,126 --> 01:01:41,366
world.

1454
01:01:42,187 --> 01:01:43,328
So it's like a relaxation?

1455
01:01:43,488 --> 01:01:44,029
Yes, exactly.

1456
01:01:44,049 --> 01:01:44,329
Like a causing.

1457
01:01:44,349 --> 01:01:44,469
Okay.

1458
01:01:44,489 --> 01:01:44,689
Thank you.

1459
01:01:44,947 --> 01:01:49,890
Yeah, we actually implemented a sort of hacky version first, which said that if any two

1460
01:01:49,910 --> 01:01:53,932
vertices are more than x distance apart, just snap them.

1461
01:01:54,332 --> 01:01:59,315
Then we sort of moved it to the particle dynamics things, and then our analyzation process kind

1462
01:01:59,335 --> 01:02:02,757
of handled the details of saying, hey, these need to be moved over here, and here's sort

1463
01:02:02,777 --> 01:02:07,160
of an interest point that everyone needs to move to, and that moved there.

1464
01:02:07,766 --> 01:02:10,972
I've only, I mean, this talk kind of blew me away.

