1
00:00:01,702 --> 00:00:05,034
Ladies and gentlemen, PCG Shotgun.

2
00:00:05,496 --> 00:00:06,098
Let's welcome them.

3
00:00:06,319 --> 00:00:06,500
Thanks.

4
00:00:13,470 --> 00:00:16,171
So when Dave told us that he wanted us to come up and speak

5
00:00:16,651 --> 00:00:18,872
for 60 minutes about procedurally generated

6
00:00:18,912 --> 00:00:21,953
shotguns, I didn't really think we'd have enough time to

7
00:00:22,033 --> 00:00:23,133
fill all the content in.

8
00:00:23,834 --> 00:00:26,274
So each person's going to talk about different types of

9
00:00:26,314 --> 00:00:28,455
shotguns and how to procedurally generate them.

10
00:00:28,535 --> 00:00:30,636
So I hope you guys all know what you were prepared for

11
00:00:30,676 --> 00:00:31,336
when you came here.

12
00:00:32,296 --> 00:00:33,597
And take lots of notes.

13
00:00:34,437 --> 00:00:37,178
So I'm going to introduce our first speaker, Mithu.

14
00:00:37,598 --> 00:00:39,498
And Mithu's going to take it from there.

15
00:00:40,609 --> 00:00:40,990
Go for it.

16
00:00:41,010 --> 00:00:41,551
All right.

17
00:00:41,772 --> 00:00:42,313
Thanks, Tyler.

18
00:00:42,614 --> 00:00:43,216
Hi, everyone.

19
00:00:43,998 --> 00:00:46,365
So where are my slides?

20
00:00:47,367 --> 00:00:47,769
Are they here?

21
00:00:48,405 --> 00:00:48,785
Here they are.

22
00:00:49,225 --> 00:00:50,526
Okay, cool.

23
00:00:50,546 --> 00:00:53,247
Hi, okay, so, hi, I'm Mitty.

24
00:00:53,727 --> 00:00:55,727
So I do a few things.

25
00:00:56,048 --> 00:00:58,188
I make games as the Tiniest Shark.

26
00:00:58,228 --> 00:01:00,589
I'm a member of faculty at the NYU Game Center.

27
00:01:01,269 --> 00:01:03,710
I'm also Chief Creative Officer at Spirit AI.

28
00:01:04,471 --> 00:01:06,391
So this is actually the second of three talks

29
00:01:06,431 --> 00:01:09,553
I'm giving in the Just the AI Summit this year.

30
00:01:09,573 --> 00:01:13,454
So some of you may have seen my talk yesterday on Reactive.

31
00:01:13,794 --> 00:01:15,956
storytelling through agent-driven design.

32
00:01:17,117 --> 00:01:19,298
And I'm going to talk about some of the work

33
00:01:19,358 --> 00:01:20,839
that I've been involved with lately,

34
00:01:20,859 --> 00:01:22,080
sort of touching on some elements of that,

35
00:01:22,100 --> 00:01:23,802
so apologies if you saw that talk.

36
00:01:24,522 --> 00:01:26,524
But also, I'm also doing other work

37
00:01:26,544 --> 00:01:29,346
kind of at the opposite end of that spectrum.

38
00:01:30,346 --> 00:01:32,448
So, and I've been thinking about this as a spectrum,

39
00:01:32,508 --> 00:01:35,310
actually, so this idea of agent-driven stories

40
00:01:35,390 --> 00:01:36,891
versus story-driven agents.

41
00:01:37,853 --> 00:01:42,199
So, there are quite a few of us on this panel talking about various kinds of procedural

42
00:01:42,219 --> 00:01:46,385
generation of characters and so I think part of the reason I'm going first is to frame

43
00:01:46,425 --> 00:01:51,793
that work with some definitions and some tips for sort of working at both ends of that spectrum.

44
00:01:53,074 --> 00:01:58,637
So firstly, why should we even tell those kinds of procedural character-based narratives?

45
00:01:59,037 --> 00:02:03,360
The boring but true answer is replayability, longevity, etc.

46
00:02:04,200 --> 00:02:08,163
The more interesting answer is that I think all procedural systems are kind of driven

47
00:02:08,203 --> 00:02:09,143
by a philosophy, right?

48
00:02:09,483 --> 00:02:12,265
It's an opportunity to discover a certain knowledge space.

49
00:02:14,006 --> 00:02:18,551
And there's lots of opportunity for very thoughtful, very nuanced stories to be told.

50
00:02:19,191 --> 00:02:25,077
So procedural narratives can allow us to explore and unpack the philosophy of an entire story space

51
00:02:25,458 --> 00:02:29,802
rather than just one story, of course. So let's go ahead and start with some definitions.

52
00:02:30,782 --> 00:02:34,824
So what I'm calling agent-driven stories are those which are based around simulating the

53
00:02:35,224 --> 00:02:40,927
interactions of lots of agents which can sort of tell us something about that particular

54
00:02:40,967 --> 00:02:43,848
world through having the player sort of interact with them, etc.

55
00:02:44,288 --> 00:02:48,811
And the way that stories are told in that particular world is through a mechanism of

56
00:02:48,931 --> 00:02:50,831
noticing really, so that's kind of the mechanic.

57
00:02:51,512 --> 00:02:55,352
sort of noticing how agents are set up in opposition to each other,

58
00:02:55,652 --> 00:02:57,293
which ones are different from the others,

59
00:02:57,453 --> 00:02:59,913
and why those particular properties

60
00:03:00,873 --> 00:03:04,194
might matter in the context of that particular world.

61
00:03:04,634 --> 00:03:07,335
So, agent-driven stories rely on lots of agents.

62
00:03:07,915 --> 00:03:09,355
The storytelling comes from noticing.

63
00:03:10,135 --> 00:03:11,356
So, these agents are supposed to be moving,

64
00:03:11,376 --> 00:03:12,956
they're not animating for some reason, but that's fine.

65
00:03:13,016 --> 00:03:15,976
Let's imagine all these agents moving, and they're all moving differently.

66
00:03:17,057 --> 00:03:21,299
So I want to talk about some PROC GEN considerations, given those sort of psychological strengths,

67
00:03:21,359 --> 00:03:23,160
right, the sort of mechanics of noticing.

68
00:03:24,961 --> 00:03:30,563
On the other hand, there are also what I'd call story-driven agents.

69
00:03:30,583 --> 00:03:34,345
So those are agents which have been crafted to know a lot about a particular story space.

70
00:03:35,346 --> 00:03:39,728
The way that you learn about the story space is by interacting with that particular agent

71
00:03:39,748 --> 00:03:44,590
through some kind of dialogue or even some other set of interactions which act upon that

72
00:03:44,610 --> 00:03:45,331
particular agent.

73
00:03:45,971 --> 00:03:47,352
again my animations are not working.

74
00:03:47,392 --> 00:03:49,414
Imagine one of those agents is like super huge

75
00:03:49,455 --> 00:03:50,816
all of a sudden because that's the agent

76
00:03:50,836 --> 00:03:52,458
that you're really interrogating.

77
00:03:54,279 --> 00:03:56,081
Okay, so that's kind of the spectrum

78
00:03:56,201 --> 00:03:57,603
of types of character AI.

79
00:03:58,624 --> 00:04:00,446
So those of you who saw my talk yesterday

80
00:04:00,526 --> 00:04:02,868
on telling reactive stories in an agent-driven world,

81
00:04:03,549 --> 00:04:04,930
I sort of talked about what I'm doing at.

82
00:04:06,432 --> 00:04:10,619
that's sort of this end of the spectrum, the agent-driven story's end of the spectrum,

83
00:04:11,921 --> 00:04:16,929
as The Tiniest Shark, where I'm working on a game which is called Little Invasion Tales.

84
00:04:18,173 --> 00:04:24,619
So Little Invasion Tales is a small city building and citizen management game all about defending your citizens from alien attacks.

85
00:04:25,760 --> 00:04:30,924
I've also previously worked on a game called Redshirt, which was a kind of bleakly Machiavellian social networking simulator.

86
00:04:32,065 --> 00:04:39,732
So, and that world was really set up through the mechanics of noticing, right? So noticing that characters behave differently

87
00:04:40,813 --> 00:04:41,113
because

88
00:04:42,114 --> 00:04:44,315
We don't really understand people, right?

89
00:04:44,355 --> 00:04:45,435
Like, nobody really does.

90
00:04:46,496 --> 00:04:48,697
We don't have a complete model of human behavior.

91
00:04:48,757 --> 00:04:50,358
And the best we can do is express

92
00:04:50,678 --> 00:04:52,438
a particular point of view.

93
00:04:53,179 --> 00:04:57,001
So the limits that we impose on a sort of system

94
00:04:57,021 --> 00:04:58,761
that we create are expressive.

95
00:04:58,782 --> 00:04:59,662
They have something to say.

96
00:04:59,682 --> 00:05:01,443
And we need to be cognizant

97
00:05:01,503 --> 00:05:02,763
about what we're actually saying.

98
00:05:03,544 --> 00:05:05,425
We need to be conscientiously reductive

99
00:05:05,505 --> 00:05:07,746
when we're designing character-based games.

100
00:05:08,586 --> 00:05:13,469
So for example in Red Shirt the space created was kind of about using people as pawns

101
00:05:13,969 --> 00:05:15,930
and so a lot of the attributes that characters had

102
00:05:17,151 --> 00:05:19,872
were kind of in that sort of negative space.

103
00:05:19,892 --> 00:05:22,794
So they had things like vanity, fickleness, bigotry, etc.

104
00:05:23,454 --> 00:05:26,856
That was like the world and those were the attributes

105
00:05:26,956 --> 00:05:29,277
which set up characters in opposition to each other.

106
00:05:30,999 --> 00:05:35,866
Then on this side of the spectrum at Spirit AI, we're building tools in middleware to

107
00:05:35,926 --> 00:05:39,971
help people write story-driven agents.

108
00:05:39,991 --> 00:05:43,876
So M Short just gave a talk in the Narrative Summit more about what we're doing, so I'm

109
00:05:43,896 --> 00:05:44,657
not going to go into it.

110
00:05:45,058 --> 00:05:45,899
But we're basically...

111
00:05:46,780 --> 00:05:50,901
made an SDK and a set of tools for helping you create characters which are more deeply expressive.

112
00:05:51,581 --> 00:05:56,362
One particular demo we have is about interacting with a robot who you're interrogating

113
00:05:56,842 --> 00:06:01,123
and the system is able to sort of improvise off scripted dialogue that you've defined for it

114
00:06:01,463 --> 00:06:02,403
and it has an agenda.

115
00:06:03,343 --> 00:06:06,944
So it uses sort of a space of knowledge, like a knowledge space

116
00:06:07,684 --> 00:06:11,665
that it has about its own world and uses that to let you interact with it.

117
00:06:12,824 --> 00:06:17,488
So I think that those types of two sort of procedural character-based narratives

118
00:06:18,028 --> 00:06:20,810
affect writers and designers in different ways.

119
00:06:21,911 --> 00:06:24,673
So I think that one of the opportunities we have

120
00:06:24,953 --> 00:06:28,316
is to sort of bring writers more into the fold of

121
00:06:28,856 --> 00:06:32,939
sort of, you know, creating these sort of story-driven agents.

122
00:06:34,140 --> 00:06:36,882
So with story driven agents, the shift moves more towards writers.

123
00:06:38,524 --> 00:06:42,867
So and one of the things I want to sort of impress is how do we as humans,

124
00:06:43,048 --> 00:06:46,110
if we're making character A.I. or just in general as humans,

125
00:06:46,190 --> 00:06:49,834
how do we find out more about each other and our agendas like, you know, as real humans?

126
00:06:50,154 --> 00:06:52,116
Generally, we do it by talking to each other. Right.

127
00:06:52,176 --> 00:06:53,917
We sort of ask each other things.

128
00:06:53,957 --> 00:06:57,100
We converse about our opinions, even when that's difficult.

129
00:06:58,374 --> 00:06:59,454
in recent times especially.

130
00:07:00,514 --> 00:07:02,855
So language is super important to humans.

131
00:07:03,975 --> 00:07:05,136
And with Little Invasion Tales,

132
00:07:05,196 --> 00:07:07,377
I've tried combining instances of language

133
00:07:07,817 --> 00:07:09,537
into an agent-driven story,

134
00:07:10,117 --> 00:07:11,958
which is basically the talk I gave yesterday.

135
00:07:13,058 --> 00:07:14,979
One of the missions that I'm trying to accomplish

136
00:07:14,999 --> 00:07:17,200
with Little Invasion Tales is bringing

137
00:07:17,540 --> 00:07:20,341
sort of a wider audience into the fold

138
00:07:20,361 --> 00:07:22,621
of understanding procedural narrative

139
00:07:22,821 --> 00:07:23,842
and kind of what happens,

140
00:07:23,882 --> 00:07:24,682
like the fact that we,

141
00:07:25,122 --> 00:07:29,644
sort of look at agents interacting and we have like an implicit narrative that arises

142
00:07:30,584 --> 00:07:36,547
out of noticing those interactions, but actually making that explicit through text and voiceover,

143
00:07:36,607 --> 00:07:39,168
so using language to help us notice.

144
00:07:41,268 --> 00:07:45,570
And so also related to that point, so this is, you know, I've already touched on how

145
00:07:45,790 --> 00:07:46,530
redshirt worked.

146
00:07:49,031 --> 00:07:49,872
And also...

147
00:07:51,559 --> 00:07:54,662
Procedural characters need to be expressive about their world.

148
00:07:54,702 --> 00:07:56,864
So again, in Little Invasion Tales,

149
00:07:57,425 --> 00:07:59,567
they're expressive about their particular world

150
00:07:59,627 --> 00:08:00,728
through talking to each other.

151
00:08:01,809 --> 00:08:06,833
So the system in Little Invasion Tales

152
00:08:07,674 --> 00:08:09,956
for passing knowledge between characters

153
00:08:10,437 --> 00:08:13,660
is one that's inspired by the system in Left 4 Dead.

154
00:08:15,241 --> 00:08:20,552
So it's basically like a query system and characters can share knowledge between each

155
00:08:20,612 --> 00:08:24,400
other but also be able to sort of trigger all kinds of actions as well.

156
00:08:26,498 --> 00:08:30,741
But also I want to point to besides language, what are some other solutions, particularly

157
00:08:30,761 --> 00:08:34,804
if you're sort of at the end of the spectrum where you're making agent-driven stories.

158
00:08:35,764 --> 00:08:40,608
So one of my go-to solutions to try and hit that sweet spot, which I've enacted across

159
00:08:40,668 --> 00:08:46,752
both Redshire and Little Invasion Tales, is letting the player just see the process of

160
00:08:46,792 --> 00:08:50,295
character creation, like using character creation to help us notice, right?

161
00:08:51,616 --> 00:08:54,237
letting the player fiddle with sliders and variables

162
00:08:54,297 --> 00:08:56,598
so that they can understand what the underlying model is.

163
00:08:57,419 --> 00:08:59,800
So character creation is a form of communication.

164
00:09:00,621 --> 00:09:03,782
This is the character creator from Little Invasion Tales.

165
00:09:04,783 --> 00:09:08,085
So the last thing I want to say is that I'm really interested

166
00:09:08,125 --> 00:09:10,126
in what we can come up with when we bring both sides

167
00:09:10,166 --> 00:09:11,147
of the spectrum together.

168
00:09:11,467 --> 00:09:14,789
What kinds of procedural character-driven narratives

169
00:09:14,869 --> 00:09:16,290
might be possible then, right?

170
00:09:17,810 --> 00:09:19,933
So again, my animations are not working,

171
00:09:19,953 --> 00:09:22,977
but let's just imagine these floating and becoming one

172
00:09:23,197 --> 00:09:25,240
and other things that the animation is supposed to do.

173
00:09:25,260 --> 00:09:26,281
So yeah, imagining...

174
00:09:32,096 --> 00:09:36,801
what would happen if we had a system where we had lots of agents sort of

175
00:09:37,241 --> 00:09:39,123
interacting in the world, sort of, you know,

176
00:09:39,403 --> 00:09:42,086
interacting with each other according to the underlying social model,

177
00:09:42,446 --> 00:09:45,008
but then you could interrogate some of them, right?

178
00:09:45,349 --> 00:09:49,973
So you'd have a few of them which you could interrogate more deeply and find out

179
00:09:50,173 --> 00:09:52,416
actually, you know, what is their agenda within this world?

180
00:09:52,476 --> 00:09:56,059
So using the mechanics of noticing and using the mechanics of language.

181
00:09:58,205 --> 00:09:59,746
So yes, there we go.

182
00:10:00,067 --> 00:10:03,089
So the little agent which is supposed to be animating

183
00:10:03,109 --> 00:10:05,051
is saying, see how I act in relation to my world.

184
00:10:05,331 --> 00:10:07,133
Talk to me about what my agenda might really be.

185
00:10:08,394 --> 00:10:09,495
So that's it.

186
00:10:09,575 --> 00:10:11,917
So that's my set of definitions.

187
00:10:12,458 --> 00:10:14,419
You can see what we're doing at Spirit

188
00:10:14,459 --> 00:10:16,601
on the language-based interaction

189
00:10:17,302 --> 00:10:18,523
in North Hall from tomorrow.

190
00:10:18,703 --> 00:10:18,943
Thank you.

191
00:10:33,219 --> 00:10:39,365
Hello everyone. I'm Tanya Short and I'm going to give you some tips for maximizing the impact

192
00:10:39,505 --> 00:10:43,690
of your generated personalities. I actually hadn't heard Mitu's talk before just now,

193
00:10:43,730 --> 00:10:45,612
but I think you'll see some interesting parallels.

194
00:10:46,973 --> 00:10:50,634
So yeah, if you're generating personalities in your game,

195
00:10:50,895 --> 00:10:52,736
you're first going to need to pick a reasoning,

196
00:10:52,756 --> 00:10:55,877
a motivation, and then a behavior,

197
00:10:55,937 --> 00:10:58,659
which is what a character does and why they do it.

198
00:10:59,279 --> 00:11:01,800
So now you have a generated personality, congratulations.

199
00:11:02,461 --> 00:11:04,121
But is it an interesting personality?

200
00:11:04,622 --> 00:11:07,403
Does the player understand what that personality is?

201
00:11:07,923 --> 00:11:10,825
Are the connections between the reasoning and the behavior

202
00:11:10,965 --> 00:11:12,506
actually satisfying to discover?

203
00:11:13,166 --> 00:11:13,746
That's the goal.

204
00:11:15,061 --> 00:11:18,042
Normally we would assume that reasoning drives behavior,

205
00:11:18,142 --> 00:11:20,283
because that's how we experience our world.

206
00:11:20,903 --> 00:11:24,124
Not only does science actually have a few factoids

207
00:11:24,224 --> 00:11:25,824
and studies that disprove that,

208
00:11:25,944 --> 00:11:29,005
but you might want to consider the opposite for your game.

209
00:11:29,025 --> 00:11:32,306
In Moon Hunters, for example, the player's behavior,

210
00:11:32,546 --> 00:11:33,807
such as being nice to everyone,

211
00:11:34,327 --> 00:11:35,987
was then measured and determined

212
00:11:36,087 --> 00:11:37,988
what personality trait was assigned to them,

213
00:11:38,668 --> 00:11:39,608
such as compassionate,

214
00:11:40,989 --> 00:11:43,450
sort of retroactively explaining their behavior.

215
00:11:44,050 --> 00:11:45,150
through their motivation.

216
00:11:46,451 --> 00:11:47,691
And from the player perspective,

217
00:11:47,711 --> 00:11:50,712
they can encounter each of them,

218
00:11:50,893 --> 00:11:53,834
or both simultaneously, depending on how you frame it.

219
00:11:54,474 --> 00:11:56,815
Even if your engine is starting with reasoning

220
00:11:56,955 --> 00:11:58,075
and then going into behavior,

221
00:11:58,496 --> 00:12:00,937
it might make sense for the player to see it the opposite,

222
00:12:01,097 --> 00:12:01,997
see it at the same time,

223
00:12:02,397 --> 00:12:04,018
because to understand the simulation,

224
00:12:04,178 --> 00:12:06,859
the player has to understand both the cause and the effect,

225
00:12:07,279 --> 00:12:10,060
even if a given action is both a cause and an effect.

226
00:12:11,805 --> 00:12:17,048
In human-authored media, it's common to start with the behavior and never show the reasoning.

227
00:12:17,508 --> 00:12:22,270
It's common to advise show, don't tell, which means displaying a behavior and allowing the

228
00:12:22,310 --> 00:12:27,252
audience to interpret the personality according to their own internal lens.

229
00:12:27,752 --> 00:12:28,673
This is more natural.

230
00:12:28,853 --> 00:12:31,354
This is how we encounter real people in real life.

231
00:12:32,214 --> 00:12:36,116
Getting to know someone is about interpreting their behavior or their reasoning from their

232
00:12:36,136 --> 00:12:36,496
behavior.

233
00:12:38,178 --> 00:12:41,621
But most procedural personality games up until now

234
00:12:41,801 --> 00:12:42,882
have gone the other way.

235
00:12:43,543 --> 00:12:46,986
They tend to tell the audience about their personality traits

236
00:12:47,447 --> 00:12:50,850
and their reasoning, and then later on display the behavior,

237
00:12:51,030 --> 00:12:53,633
at which point it's the player's gameplay to notice.

238
00:12:54,473 --> 00:12:58,536
and interpret what the algorithm is actually doing

239
00:12:58,596 --> 00:12:59,357
with that reasoning.

240
00:13:00,038 --> 00:13:02,439
The advantage of this approach is that AI systems

241
00:13:02,539 --> 00:13:04,261
become core to the gameplay.

242
00:13:04,741 --> 00:13:08,544
Noticing is the gameplay of understanding the systems.

243
00:13:09,145 --> 00:13:11,186
And this is great when you're worried

244
00:13:11,246 --> 00:13:13,428
that maybe your behavior will seem rather random

245
00:13:13,828 --> 00:13:15,409
because now the players have built

246
00:13:15,469 --> 00:13:16,590
their own model of reasoning.

247
00:13:17,611 --> 00:13:21,074
However, that can result in a lot of information

248
00:13:21,114 --> 00:13:21,554
for the player.

249
00:13:23,015 --> 00:13:27,240
Many procedural personality systems, such as our beloved Dwarf Fortress,

250
00:13:27,901 --> 00:13:31,885
and games I have worked on as well, tend to expose a lot.

251
00:13:32,386 --> 00:13:36,070
And as our audiences become more accustomed to procedural content,

252
00:13:36,530 --> 00:13:39,914
maybe we won't need to expose as much to convince them it's not random.

253
00:13:41,315 --> 00:13:45,038
But part of the problem is that compared to other procedural content,

254
00:13:45,418 --> 00:13:47,319
procedural personalities are very subtle,

255
00:13:47,520 --> 00:13:50,822
because in real life, even, personalities are very subtle.

256
00:13:51,242 --> 00:13:54,264
They are abstract, they are invisible, they're fourth dimensional,

257
00:13:54,424 --> 00:13:55,645
they take place over time.

258
00:13:56,145 --> 00:13:58,767
And even if you lean on well-known archetypes,

259
00:13:59,488 --> 00:14:02,450
people will still need to pay attention to see the pattern.

260
00:14:02,890 --> 00:14:06,052
You can't rely on instinct the way you can with physical attributes

261
00:14:06,112 --> 00:14:07,993
like hair color or height or gender.

262
00:14:09,974 --> 00:14:15,528
I was stunned when I joined the Age of Conan system design team because I had played the

263
00:14:15,548 --> 00:14:16,170
game for a month.

264
00:14:17,150 --> 00:14:19,352
And after playing for a month, I joined the team,

265
00:14:19,472 --> 00:14:20,713
and I looked at their scripting engine,

266
00:14:20,753 --> 00:14:24,615
and I found a beautiful, modular, elegant version

267
00:14:25,115 --> 00:14:28,237
of a Maslovian hierarchy of needs for these monsters

268
00:14:28,277 --> 00:14:30,679
that I had been slaying and observed no such thing.

269
00:14:31,940 --> 00:14:34,541
Every single character first would seek safety,

270
00:14:35,242 --> 00:14:37,563
and then seek shelter, and then seek food,

271
00:14:37,763 --> 00:14:40,125
and companionship, and self-actualization, yes.

272
00:14:41,486 --> 00:14:47,030
Even though the internal design team's motto was combat, combat, combat, and correspondingly

273
00:14:47,210 --> 00:14:48,971
most of the players just killed everything.

274
00:14:50,432 --> 00:14:54,915
But the real problem here was that there was no way as a player I would expect that to

275
00:14:54,935 --> 00:14:57,877
be the case, and there was no sign to the contrary.

276
00:14:57,977 --> 00:15:01,779
There was no reason for me to expect that reasoning was going on, and there was no communication.

277
00:15:02,360 --> 00:15:07,004
So they had this beautiful system, which I used a lot for designing boss fights and things,

278
00:15:08,145 --> 00:15:12,488
but this living, breathing world aspiration kind of took them into this

279
00:15:13,269 --> 00:15:17,353
wasteful use of energy for years, developing a system that didn't need to be there.

280
00:15:18,885 --> 00:15:21,707
So if you do hide information about your personality systems,

281
00:15:21,847 --> 00:15:23,808
it can really help to be obvious about it.

282
00:15:24,509 --> 00:15:26,110
As in Civ 6, which came out recently,

283
00:15:26,370 --> 00:15:28,671
you can see some coy hints about what's hidden.

284
00:15:28,912 --> 00:15:30,513
When something's hidden, it's very obvious.

285
00:15:30,953 --> 00:15:34,275
This encourages further experimentation and exploration

286
00:15:34,435 --> 00:15:35,436
by intriguing the player.

287
00:15:36,297 --> 00:15:37,918
And that's part of why we're being really up front

288
00:15:38,038 --> 00:15:39,739
about hidden villager personalities

289
00:15:39,819 --> 00:15:42,801
in The Shrouded Isle, which is a game coming up published

290
00:15:42,861 --> 00:15:43,722
by Kid Fox Games.

291
00:15:45,583 --> 00:15:50,151
the discovery of those personality traits becomes a player goal, which is then very

292
00:15:50,411 --> 00:15:55,079
intrinsically satisfying to discover, as if you're getting to know someone in real life.

293
00:15:56,894 --> 00:16:00,476
So in addition to not hiding your whole systems,

294
00:16:00,596 --> 00:16:03,058
you might want to look at what kinds of personalities

295
00:16:03,098 --> 00:16:06,641
you're generating, because in games like Crusader Kings 2

296
00:16:06,801 --> 00:16:09,543
or others, more extreme personalities

297
00:16:09,644 --> 00:16:10,885
are easier to notice.

298
00:16:11,745 --> 00:16:14,407
When you have subtle traits like irritable,

299
00:16:14,948 --> 00:16:17,450
not only is it harder to see, but it's also

300
00:16:17,570 --> 00:16:19,271
harder for the character to express

301
00:16:19,391 --> 00:16:20,932
through your various gameplay systems.

302
00:16:21,533 --> 00:16:22,454
For example, Roth.

303
00:16:23,114 --> 00:16:28,260
It's easy to imagine what a Roth person might do on a battlefield or in political negotiations.

304
00:16:28,360 --> 00:16:29,161
But irritable?

305
00:16:29,462 --> 00:16:31,684
Does that really have a meaningful gameplay impact?

306
00:16:32,025 --> 00:16:32,525
Probably not.

307
00:16:34,067 --> 00:16:38,892
And finally, when you pick traits, even if you're going extreme, extreme passivity might

308
00:16:38,993 --> 00:16:39,994
still be hard to see.

309
00:16:41,539 --> 00:16:44,980
You might notice that in The Sims, it's not just that shyness, for example,

310
00:16:45,380 --> 00:16:47,040
makes someone avoid conversation.

311
00:16:47,761 --> 00:16:50,161
Avoidance is just really hard to see.

312
00:16:50,221 --> 00:16:55,062
So instead, having specific behaviors for each extreme is important.

313
00:16:55,782 --> 00:16:58,263
Even in real life, of course, when people are shy,

314
00:16:58,563 --> 00:17:02,224
they don't actually cover their face and maybe withdraw awkwardly

315
00:17:02,264 --> 00:17:03,244
from every conversation.

316
00:17:03,404 --> 00:17:06,205
But if you don't do that, it just looks like a lack of behavior

317
00:17:06,425 --> 00:17:08,065
rather than an active behavior.

318
00:17:09,622 --> 00:17:14,728
Arguably the most successful personality type in King of Dragon Pass was the trickster archetype.

319
00:17:15,068 --> 00:17:20,274
And I believe that that's because they clearly stood out among an otherwise reasonable panel

320
00:17:20,314 --> 00:17:20,754
of people.

321
00:17:21,395 --> 00:17:25,160
They were the one that really caught your eye when you were playing.

322
00:17:26,730 --> 00:17:31,992
In short, it's a risk to hide almost everything in procedural personalities, because there's

323
00:17:32,032 --> 00:17:34,494
no good reason for players to assume that there's any complexity there.

324
00:17:35,114 --> 00:17:40,037
Of course, if you go too far in the extreme, everything becomes a bit silly, but even if

325
00:17:40,057 --> 00:17:44,139
you don't get silly, players might still be laughing because...

326
00:17:45,059 --> 00:17:45,860
Well, it's natural.

327
00:17:45,880 --> 00:17:50,023
Authored characters have the advantage of immediately reading as human.

328
00:17:50,503 --> 00:17:54,086
All gameplay systems in authored games tend to support the notion that this character's

329
00:17:54,126 --> 00:17:59,770
personality is natural and it's expressive, whereas in a procedural game...

330
00:18:00,971 --> 00:18:04,013
you tend to have overtly intellectual gameplay.

331
00:18:04,213 --> 00:18:07,796
You tend to be having system-driven gameplay

332
00:18:07,836 --> 00:18:11,299
in which the players are actively exploring the logic,

333
00:18:11,560 --> 00:18:13,621
not leaning back and submissively

334
00:18:14,782 --> 00:18:16,984
suspending their disbelief and becoming immersed.

335
00:18:17,545 --> 00:18:19,586
Your characters are symbols of people

336
00:18:19,826 --> 00:18:20,587
in this kind of gameplay.

337
00:18:20,627 --> 00:18:22,128
They're not real people

338
00:18:22,148 --> 00:18:23,810
and they're not even like authored people.

339
00:18:24,290 --> 00:18:27,193
Exploring procedural systems and the chaos of simulations

340
00:18:27,373 --> 00:18:29,455
is kind of the opposite of immersion.

341
00:18:30,764 --> 00:18:33,466
I mean, even if you do achieve immersion and portray drama,

342
00:18:33,786 --> 00:18:36,447
the player has to internalize all of your systems

343
00:18:36,667 --> 00:18:38,108
in order to reach that point where

344
00:18:38,128 --> 00:18:41,070
they can look past all the numbers and the spectrums

345
00:18:41,110 --> 00:18:44,072
and whatever and see humanity, which takes time.

346
00:18:44,912 --> 00:18:47,033
And during that time, chaos and surprise

347
00:18:47,113 --> 00:18:50,795
is almost guaranteed in system-driven worlds, which

348
00:18:50,835 --> 00:18:52,336
makes comedy even easier.

349
00:18:53,077 --> 00:18:55,058
So when you're designing your player experience,

350
00:18:55,098 --> 00:18:56,819
just keep in mind that things will

351
00:18:56,859 --> 00:18:58,480
be a little bit funny anyway.

352
00:19:00,435 --> 00:19:06,119
A third tip for maximizing your impact of procedural personalities is that if the same

353
00:19:06,219 --> 00:19:11,042
event produces two contrasting reactions in characters, it's much more economical.

354
00:19:11,062 --> 00:19:15,725
You can learn much faster about both characters than if you're relying on each of them acting

355
00:19:15,825 --> 00:19:16,546
independently.

356
00:19:17,607 --> 00:19:22,670
So in this example, if a character dies and one character laughs and the other one cries,

357
00:19:23,050 --> 00:19:26,913
you're learning something about both of them without needing to set two different contexts.

358
00:19:28,007 --> 00:19:32,670
And in fact, as in redshirt, you can more quickly process a whole crowd of reactions.

359
00:19:32,710 --> 00:19:37,013
If you have a crowd of 10 people, imagine trying to keep track of each of those 10 each

360
00:19:37,073 --> 00:19:42,037
doing their own separate activity versus 5 of them crying and 5 of them laughing, which

361
00:19:42,097 --> 00:19:46,080
tells you not only about each one, but also their relationship to each other.

362
00:19:47,363 --> 00:19:51,987
And finally, I recommend changing your procedural personalities over time rather than setting

363
00:19:52,027 --> 00:19:53,369
them static at the beginning.

364
00:19:53,789 --> 00:19:54,790
Because people change.

365
00:19:55,270 --> 00:19:55,971
That's natural.

366
00:19:56,111 --> 00:20:00,876
They change for so many different reasons that players will justify almost any transformation.

367
00:20:00,936 --> 00:20:02,777
We've told them enough kinds of stories.

368
00:20:03,138 --> 00:20:07,702
We're used to seeing people get stronger over adversity or weaker in adversity or getting

369
00:20:07,962 --> 00:20:08,583
stranger.

370
00:20:09,664 --> 00:20:12,887
So as long as the player is given a before, a trigger, and an after.

371
00:20:13,448 --> 00:20:16,395
it's probably enough fuel for them to build their own pattern

372
00:20:16,636 --> 00:20:18,982
of why the change happened and what it means to them.

373
00:20:20,826 --> 00:20:24,069
I just want to take a moment to note that when I reached out to David Dunham, a designer

374
00:20:24,109 --> 00:20:30,074
of King of Dragon Pass, he actually explicitly warned that these risks can be overcome.

375
00:20:30,294 --> 00:20:33,977
And it's true, there have been procedural personalities that have been subtle and dramatic,

376
00:20:34,457 --> 00:20:35,018
and they're great.

377
00:20:36,158 --> 00:20:40,882
But the reason I give these risks is not that they're bad, it's that we want to engage with

378
00:20:40,902 --> 00:20:44,425
these risks intentionally rather than discover them halfway through production.

379
00:20:44,465 --> 00:20:46,027
So I recommend being...

380
00:20:47,748 --> 00:20:52,117
careful with your subtlety and otherwise maximizing the impact of your procedural personalities.

381
00:20:52,518 --> 00:20:52,779
Thank you.

382
00:21:02,598 --> 00:21:09,340
Okay, so I'm Tarn Adams, the co-creator of Dwarf Fortress with my brother,

383
00:21:09,680 --> 00:21:15,241
and I'm going to talk about, I mean, I was invited on an AI procedural generation panel

384
00:21:15,261 --> 00:21:17,202
and I came up with the most naive thing you could do.

385
00:21:17,242 --> 00:21:22,263
I have AIs making stuff, so this is a discussion about that.

386
00:21:23,123 --> 00:21:27,924
So here we have, just naively, we have procedural generation.

387
00:21:28,445 --> 00:21:30,905
You have some sort of algorithm that's going to make something.

388
00:21:31,370 --> 00:21:33,771
You have an input, you have a random number generator.

389
00:21:34,651 --> 00:21:38,672
And rarely in practice does it actually turn out that way.

390
00:21:38,752 --> 00:21:40,873
We massage our results.

391
00:21:41,553 --> 00:21:43,374
We add a lot of algorithms.

392
00:21:44,094 --> 00:21:46,735
You can put your sort of personal touch into it, and it

393
00:21:46,775 --> 00:21:47,555
can get out of control.

394
00:21:47,615 --> 00:21:48,936
Sometimes you have to throw things away.

395
00:21:49,556 --> 00:21:53,177
But in the end, you have a lot of levers once you've made

396
00:21:53,697 --> 00:21:55,598
your final sort of algorithm when you're thinking about

397
00:21:55,678 --> 00:21:57,318
generating any type of content.

398
00:21:57,988 --> 00:22:00,408
And it's great to have all of those levers available

399
00:22:00,468 --> 00:22:02,949
because when you have an AI making something,

400
00:22:03,409 --> 00:22:06,210
you can just swap in personality traits

401
00:22:06,330 --> 00:22:07,570
for your initial state.

402
00:22:07,610 --> 00:22:10,471
You can bias your random number generation

403
00:22:10,571 --> 00:22:14,472
with these traits to sort of restrict the output

404
00:22:14,632 --> 00:22:18,633
into what could be created by this agent.

405
00:22:19,473 --> 00:22:23,714
You can think in isolation of an agent creating things

406
00:22:23,974 --> 00:22:26,435
as just a restriction of a general algorithm,

407
00:22:26,715 --> 00:22:27,135
although in.

408
00:22:28,154 --> 00:22:30,536
in practice you'll find that they do much more.

409
00:22:30,556 --> 00:22:32,317
So what am I talking about here?

410
00:22:32,938 --> 00:22:33,799
Making anything really.

411
00:22:33,959 --> 00:22:35,380
I mean you could have simple crafted items,

412
00:22:35,400 --> 00:22:36,901
you could think of like Diablo type stuff,

413
00:22:36,961 --> 00:22:39,303
or furniture, visual artwork.

414
00:22:39,343 --> 00:22:41,605
I know you don't need to actually generate

415
00:22:41,685 --> 00:22:45,228
very good assets, but anything really.

416
00:22:45,288 --> 00:22:47,549
Location maps, stories.

417
00:22:47,589 --> 00:22:50,151
You could think of AI behavior itself

418
00:22:50,231 --> 00:22:53,094
as being a result of a procedural generation algorithm

419
00:22:53,514 --> 00:22:54,715
if you want to be reductive about it.

420
00:22:55,389 --> 00:22:57,770
really anything you want in this talk.

421
00:22:57,810 --> 00:23:01,490
And they think about the knowledge of the world,

422
00:23:02,571 --> 00:23:05,971
what things have happened, what sort of locations there are,

423
00:23:05,991 --> 00:23:07,212
also their relationships to people.

424
00:23:07,252 --> 00:23:10,432
You can put anything at all, their personal beliefs,

425
00:23:10,692 --> 00:23:13,593
into these objects they create.

426
00:23:13,793 --> 00:23:15,573
But, I mean, coming from Dwarf Fortress,

427
00:23:15,593 --> 00:23:16,373
you might think I'm talking about,

428
00:23:16,413 --> 00:23:17,394
like, generate your whole world,

429
00:23:17,414 --> 00:23:20,034
and then you can make a game, too, or whatever, right?

430
00:23:20,334 --> 00:23:22,455
That's not what I'm saying here with...

431
00:23:23,015 --> 00:23:28,997
with events these could be handcrafted, this could just be one small generator that exists in a

432
00:23:29,037 --> 00:23:34,079
completely handcrafted game. You just have to systematize things. So, specifically with

433
00:23:34,139 --> 00:23:38,081
events, when I'm talking about things that happen, those could be things that the player

434
00:23:38,101 --> 00:23:40,762
does. We're talking about in-play generation after all.

435
00:23:41,449 --> 00:23:44,171
and we have the AI agents running around doing things.

436
00:23:44,592 --> 00:23:47,094
But you can take your, if you have an IP or something

437
00:23:47,134 --> 00:23:48,495
or just some backstory that you've written,

438
00:23:48,735 --> 00:23:50,978
you have your books and video logs and so forth,

439
00:23:51,018 --> 00:23:53,880
but along with those, you can create a skeleton,

440
00:23:53,980 --> 00:23:59,025
just a skeleton of what happened in a systematic way,

441
00:23:59,105 --> 00:24:00,787
homogenous with these player events

442
00:24:00,827 --> 00:24:02,208
so that they can all relate to each other.

443
00:24:02,228 --> 00:24:07,113
You can use the same functions to generate objects.

444
00:24:08,242 --> 00:24:11,704
that tie the player events in with back story events and so forth.

445
00:24:11,844 --> 00:24:16,125
And you can systematize larger groupings if you want to reduce something down to just

446
00:24:16,845 --> 00:24:19,967
say the biography of this person even though it contains many events.

447
00:24:21,347 --> 00:24:25,669
So more importantly, I guess for things like emergent narrative,

448
00:24:25,849 --> 00:24:28,810
you can also take your outputs and turn them into inputs.

449
00:24:29,230 --> 00:24:30,890
You can think about things that other people have made,

450
00:24:30,931 --> 00:24:32,631
your agents can think about things that the player made,

451
00:24:33,211 --> 00:24:35,532
they can think about their own stuff, they can think about other people's stuff.

452
00:24:36,557 --> 00:24:38,278
And so let's do some examples.

453
00:24:39,658 --> 00:24:42,280
So a simple example is the player is elected mayor of a

454
00:24:42,320 --> 00:24:43,300
city.

455
00:24:43,320 --> 00:24:45,802
This is any game where that could happen.

456
00:24:46,022 --> 00:24:47,923
Someone could make a statue, a commemorative statue.

457
00:24:48,283 --> 00:24:49,604
It's a very simple AI thing.

458
00:24:49,644 --> 00:24:52,965
You'd need to say that the AI doing this, of course, this is

459
00:24:53,005 --> 00:24:53,866
their profession or something.

460
00:24:53,886 --> 00:24:54,786
They know how to make statues.

461
00:24:55,327 --> 00:24:56,567
But they know that this event happened.

462
00:24:56,587 --> 00:24:57,128
They created it.

463
00:24:57,288 --> 00:24:59,249
Or they could try and systematize something a

464
00:24:59,269 --> 00:24:59,649
little more.

465
00:25:01,615 --> 00:25:05,958
Personal to them like their belief in the value of friendship. They could write a book about it

466
00:25:05,999 --> 00:25:11,402
That doesn't mean like generating the text of the book or anything. They just create this in-game object that stores

467
00:25:12,163 --> 00:25:17,287
Data you this is the kind of the what the biggest takeaway of the talk is the more data you store in your objects

468
00:25:17,347 --> 00:25:21,309
The more little gears you have to bump against each other to make emergent narrative

469
00:25:21,329 --> 00:25:25,132
So you actually store the data inside the book and then it can be used

470
00:25:26,041 --> 00:25:29,602
People, like most naively, could create copies of objects.

471
00:25:29,642 --> 00:25:33,263
People would understand that they're making a copy of a sort

472
00:25:33,283 --> 00:25:34,923
of a statue of the player

473
00:25:35,103 --> 00:25:36,944
if they're just making knockoffs for some reason.

474
00:25:37,364 --> 00:25:39,484
Or they could be reviewing the book.

475
00:25:39,544 --> 00:25:40,424
They can talk about it.

476
00:25:40,444 --> 00:25:41,985
They can think about who is the author of this book

477
00:25:42,025 --> 00:25:43,045
because that's stored in the book.

478
00:25:43,065 --> 00:25:45,426
They can think about what do I think of the value of friendship?

479
00:25:45,726 --> 00:25:47,006
What do I think of the writing style?

480
00:25:47,046 --> 00:25:49,727
Because those things are stored in the book object.

481
00:25:50,764 --> 00:25:52,704
And it also allows you to do exposition.

482
00:25:52,864 --> 00:25:56,746
If you have data in the objects that your agents have made,

483
00:25:57,446 --> 00:26:00,367
then you can speak to other events that have happened.

484
00:26:00,407 --> 00:26:05,008
It's sort of a way to indirectly propagate information

485
00:26:05,049 --> 00:26:06,829
by scattering things around the world.

486
00:26:07,889 --> 00:26:13,191
It's difficult to get the player to suck in this data stream,

487
00:26:13,251 --> 00:26:15,132
right, there's so many things going on.

488
00:26:15,872 --> 00:26:17,313
It's the exposition problem kind of.

489
00:26:18,382 --> 00:26:21,324
Both of the previous speakers have gone into a little bit.

490
00:26:21,744 --> 00:26:25,046
And this is just carrying a little data in your objects

491
00:26:25,066 --> 00:26:25,527
lets you do that.

492
00:26:25,547 --> 00:26:29,089
It also lets you have reactions to the objects

493
00:26:29,129 --> 00:26:30,810
that make the world seem more alive.

494
00:26:30,850 --> 00:26:33,811
So if someone doesn't like the player,

495
00:26:34,252 --> 00:26:36,233
they can see that the player is related to that object.

496
00:26:36,253 --> 00:26:37,614
They don't need to care about this mayor thing,

497
00:26:37,634 --> 00:26:40,075
but just the fact that that piece of data is in there

498
00:26:40,896 --> 00:26:42,496
allows a reaction.

499
00:26:42,737 --> 00:26:44,678
And the same thing if you don't like the...

500
00:26:45,259 --> 00:26:48,401
value of friendship, you could burn all the books and hunt down the author.

501
00:26:49,781 --> 00:26:55,505
But more subtly, you could just learn the basic existence of that event, so you can

502
00:26:55,545 --> 00:26:58,127
propagate knowledge through these indirect objects.

503
00:26:58,767 --> 00:27:01,889
And you can also change people's minds.

504
00:27:02,010 --> 00:27:09,174
This is, it's kind of the sort of, I don't know if it's the holy grail of personality,

505
00:27:09,194 --> 00:27:12,196
but that's, like Tanya said, change is gold, making things that actually seem like a character

506
00:27:12,236 --> 00:27:12,296
arc.

507
00:27:12,316 --> 00:27:13,297
And that's what I'm going to talk about today.

508
00:27:13,317 --> 00:27:13,897
And I hope you enjoyed it.

509
00:27:13,917 --> 00:27:14,458
And I'll see you next time.

510
00:27:14,478 --> 00:27:14,538
Bye.

511
00:27:15,033 --> 00:27:19,297
where someone would pick up this book and learn the value of friendship finally.

512
00:27:19,317 --> 00:27:21,419
It could be something that happens.

513
00:27:21,459 --> 00:27:25,822
I mean, in Dwarf Fortress we have people propagating books around and sort of pushing philosophies

514
00:27:25,942 --> 00:27:28,465
one way or another just like this.

515
00:27:29,826 --> 00:27:32,108
So for the last bit here, we have...

516
00:27:35,759 --> 00:27:36,759
The game, there's the game.

517
00:27:37,119 --> 00:27:38,760
Your player has done things in order, right?

518
00:27:38,800 --> 00:27:39,920
I mean, it's simple.

519
00:27:39,960 --> 00:27:40,740
You have these events.

520
00:27:40,820 --> 00:27:41,701
They're systematized.

521
00:27:41,761 --> 00:27:46,762
Their location, what the player did, if there was

522
00:27:46,842 --> 00:27:48,303
someone else involved.

523
00:27:49,683 --> 00:27:53,145
We also store reasons and circumstances to the extent

524
00:27:53,185 --> 00:27:56,166
that we know them at all so that people can think a little

525
00:27:56,206 --> 00:27:58,287
more deeply about the game objects.

526
00:27:59,351 --> 00:28:05,076
And as I said before, you can have your historical objects stored the same way. This is not

527
00:28:05,376 --> 00:28:09,639
necessarily a procedural history, but just if you're doing some kind of comic book game and

528
00:28:09,659 --> 00:28:14,683
you have 20 back issues, you could make a systematized version of them and be able to

529
00:28:14,723 --> 00:28:23,850
refer back to them and have sort of content emerge from that. The same goes with future

530
00:28:24,231 --> 00:28:27,133
events can be stored the same way. So you can have some kind of psychic prediction or

531
00:28:27,193 --> 00:28:28,634
prophecy that's supposed to be met.

532
00:28:29,391 --> 00:28:31,612
And then when the AI crafters come along,

533
00:28:31,672 --> 00:28:32,752
thinking about these things,

534
00:28:33,272 --> 00:28:38,834
they can start to do stuff that's almost literary,

535
00:28:39,194 --> 00:28:40,154
right, at this point.

536
00:28:40,174 --> 00:28:42,295
I mean, it's not gonna be high art or anything,

537
00:28:42,655 --> 00:28:45,075
but you can start to draw allusions to past events,

538
00:28:45,616 --> 00:28:48,496
and you can start to use literary tools,

539
00:28:48,536 --> 00:28:51,697
like substituting, say, the player,

540
00:28:51,717 --> 00:28:53,958
whatever happened there to the poor red thing

541
00:28:53,998 --> 00:28:55,718
that didn't seem to make it to the end of the game.

542
00:28:56,708 --> 00:28:59,349
in event B could be something similar

543
00:28:59,489 --> 00:29:00,509
that happened in history,

544
00:29:00,709 --> 00:29:02,290
and then when someone makes a statue,

545
00:29:02,630 --> 00:29:05,011
they could sub out the antagonist

546
00:29:05,091 --> 00:29:06,491
with the antagonist from the past,

547
00:29:06,531 --> 00:29:10,593
but show the player defeating the antagonist from the past,

548
00:29:11,133 --> 00:29:13,094
and then the exposition,

549
00:29:13,134 --> 00:29:15,655
they'd kind of either explain what they did

550
00:29:15,695 --> 00:29:17,455
or at least what they were getting at,

551
00:29:17,495 --> 00:29:19,316
so the player doesn't have to guess

552
00:29:19,376 --> 00:29:21,997
that these things have these value,

553
00:29:22,037 --> 00:29:23,137
they can just be told about them.

554
00:29:24,233 --> 00:29:28,176
Unless, I mean, there's something to be said for not telling them everything.

555
00:29:29,377 --> 00:29:37,864
In any case, we have finally, you can introduce your conceptual objects into this sort of

556
00:29:37,924 --> 00:29:38,365
thinking.

557
00:29:38,485 --> 00:29:47,813
So, in Dwarf Fortress we have, say, 40 intellectual values that people have in different sort

558
00:29:47,853 --> 00:29:49,814
of degrees numerically.

559
00:29:50,555 --> 00:29:52,176
And you could give.

560
00:29:53,310 --> 00:29:56,011
the basic events, like this, say this reconciliation

561
00:29:56,051 --> 00:29:57,391
that maybe happened at the end here,

562
00:29:58,091 --> 00:30:00,492
could have friendship tagged with that simple event.

563
00:30:00,552 --> 00:30:03,692
Just a simple table of events linked to conceptual types.

564
00:30:04,293 --> 00:30:06,113
And that's, I mean, it's basically a symbol, right?

565
00:30:06,153 --> 00:30:09,013
So we have this book of friendship then,

566
00:30:09,374 --> 00:30:11,214
doesn't need to have text, it could just have

567
00:30:11,314 --> 00:30:14,995
a simple set of friendship-related events

568
00:30:15,095 --> 00:30:16,935
that the person wrote about the player.

569
00:30:19,597 --> 00:30:22,779
They just need to describe them somewhere,

570
00:30:22,959 --> 00:30:24,340
say that the player was involved,

571
00:30:24,900 --> 00:30:28,822
and somehow involve the, in the exposition,

572
00:30:28,842 --> 00:30:30,423
say that the symbol of friendship was involved,

573
00:30:30,443 --> 00:30:31,623
and that's an allegory, right?

574
00:30:31,723 --> 00:30:37,827
So you can do any sort of artistic literary type

575
00:30:37,847 --> 00:30:39,948
you can think of can be involved

576
00:30:39,968 --> 00:30:41,008
with fairly simple systems.

577
00:30:41,048 --> 00:30:43,910
I mean, there's not too many objects here,

578
00:30:44,410 --> 00:30:46,611
but you just, kind of what it says on the tin

579
00:30:46,651 --> 00:30:48,732
when you go to Wikipedia and read about allegory, right?

580
00:30:49,265 --> 00:30:55,752
There's some just simple concepts that you link together

581
00:30:55,772 --> 00:30:56,613
to produce these things.

582
00:30:57,554 --> 00:31:00,397
And you don't have to produce the text, right?

583
00:31:00,417 --> 00:31:01,739
I mean, that's the thing.

584
00:31:01,759 --> 00:31:03,381
You just need to produce a description,

585
00:31:03,401 --> 00:31:05,663
allow the person to say what's going on.

586
00:31:06,385 --> 00:31:08,886
and then allow people to react to it and be changed.

587
00:31:09,086 --> 00:31:12,948
So this book of friendship might actually describe events of this,

588
00:31:13,108 --> 00:31:15,049
these fictional events that the player didn't actually do,

589
00:31:15,729 --> 00:31:18,250
and then someone could come up to you and thank you

590
00:31:18,330 --> 00:31:19,891
for teaching them about the value of friendship

591
00:31:19,951 --> 00:31:21,892
and you wouldn't know what was going on until you found the book.

592
00:31:22,952 --> 00:31:24,033
So, yeah, that's it.

593
00:31:34,473 --> 00:31:38,054
Alright, who here likes math? It's about to get really gritty, so buckle up.

594
00:31:39,354 --> 00:31:42,495
My name is Zach Aikman, I'm the technical director at 17-bit.

595
00:31:42,975 --> 00:31:47,017
If you haven't heard of us, 17-bit is a medium-sized indie studio based in Kyoto, Japan,

596
00:31:47,417 --> 00:31:48,757
with a satellite office in Seattle.

597
00:31:49,417 --> 00:31:52,238
Our first game is a turn-based strategy game called Skulls of the Shogun.

598
00:31:53,138 --> 00:31:57,340
But more recently we released a 2D space shooter called Galaxy on PlayStation 4 and PC,

599
00:31:57,460 --> 00:32:01,161
and right now we're working on adapting that game into a mobile version to be released later this year.

600
00:32:02,092 --> 00:32:05,375
As lead engineer on Galaxy, I was responsible for developing a number of different systems,

601
00:32:05,435 --> 00:32:08,558
but the one that I had the most fun with, and the one that I'm going to be talking about today,

602
00:32:08,618 --> 00:32:10,540
was the system for generating procedural levels.

603
00:32:11,300 --> 00:32:16,065
We made the decision halfway through development to switch from handcrafted dungeons to procedural content

604
00:32:16,485 --> 00:32:20,169
to put more of an emphasis on the parts of the game that really shined, namely combat.

605
00:32:21,570 --> 00:32:23,452
And so just to help put this talk in context,

606
00:32:24,052 --> 00:32:27,435
here's a top-down view of a level in Galaxy's early prototyping days.

607
00:32:28,037 --> 00:32:29,598
all the rocks, the camera boundaries,

608
00:32:29,678 --> 00:32:31,478
the decorative objects, enemy squads,

609
00:32:31,818 --> 00:32:32,999
all that stuff was hand placed.

610
00:32:33,519 --> 00:32:35,179
And we realized that this was not gonna be

611
00:32:35,219 --> 00:32:37,580
a feasible approach for generating a lot of content

612
00:32:37,600 --> 00:32:38,460
with a team of our size.

613
00:32:39,760 --> 00:32:41,641
And in this animated GIF about how levels

614
00:32:41,661 --> 00:32:43,641
were being built procedurally near the end of the project,

615
00:32:45,002 --> 00:32:46,182
explaining everything that goes into this

616
00:32:46,222 --> 00:32:48,463
would be pretty exhaustive talk,

617
00:32:48,883 --> 00:32:50,003
not one that we have time for today,

618
00:32:50,123 --> 00:32:51,744
but I wanna touch on some of the main points

619
00:32:52,204 --> 00:32:53,484
and the takeaways that we learned from them.

620
00:32:55,900 --> 00:32:59,222
I'm going to go out on a limb and assume that most of you are somewhat familiar, or at least

621
00:32:59,722 --> 00:33:04,225
vaguely familiar, with cellular automata, popularized by Conway's Game of Life.

622
00:33:05,225 --> 00:33:09,388
Using a simple set of rules that gets iteratively applied to each cell based on the state of

623
00:33:09,408 --> 00:33:13,130
its neighbors, you can generate incredibly complex, self-sustaining patterns.

624
00:33:13,770 --> 00:33:18,333
Here we see two examples of cellular automata, one very simple and one very complex.

625
00:33:20,854 --> 00:33:23,677
With the right rule set, cellular automata can also be used to generate

626
00:33:24,257 --> 00:33:25,958
very organic looking cave-like structures.

627
00:33:26,499 --> 00:33:29,001
As soon as I saw this image I knew that cellular automata

628
00:33:29,361 --> 00:33:32,183
were going to be used in Galaxy's Dungeon duration in some form.

629
00:33:32,884 --> 00:33:35,866
But obviously there's more to building levels than just generating geometry.

630
00:33:36,307 --> 00:33:39,409
A cavern of this size would pose serious problems when it comes to placing

631
00:33:39,449 --> 00:33:40,089
points of interest

632
00:33:40,490 --> 00:33:41,731
and guiding the player through the level.

633
00:33:42,732 --> 00:33:46,414
So instead we opted to use cellular automata to generate chunks of a level

634
00:33:46,474 --> 00:33:48,716
and then stitch those together into a contiguous path.

635
00:33:49,579 --> 00:33:54,422
This first animation shows a room-sized automata being refined from its initial seed into the

636
00:33:54,462 --> 00:33:56,684
cave-like structure over the course of several iterations.

637
00:33:57,344 --> 00:34:01,047
And the second animation shows how we were able to control the spaciousness of a room

638
00:34:01,467 --> 00:34:05,090
by simply seeding the starting pattern with more or less living cells.

639
00:34:07,391 --> 00:34:11,534
So in the end, we wound up using cellular automata patterns as a basis for room creation.

640
00:34:12,782 --> 00:34:17,503
The generated rooms were then overlaid with additional layers of metadata using a custom tool that we built.

641
00:34:18,183 --> 00:34:24,864
Designers could place spawn points, squad patrol routes, deco and lighting data, etc. to be applied to the cavern after it was generated.

642
00:34:27,365 --> 00:34:30,926
Initially we tried storing the seeds for the automata and generating the caverns at runtime.

643
00:34:31,586 --> 00:34:35,727
It seemed like the most cost-effective way of storing a whole lot of room data with just a handful of seed values.

644
00:34:36,768 --> 00:34:39,569
But this turned out to be an inefficient and unnecessary step.

645
00:34:40,130 --> 00:34:43,451
What we gained in storage space we lost in processing time, because it can be kind of

646
00:34:43,491 --> 00:34:49,014
expensive to run 10 iterations in every single room on a grid that's 64 by 64.

647
00:34:49,114 --> 00:34:50,335
It really starts to add up.

648
00:34:51,035 --> 00:34:55,177
So a better approach was to instead store a run-length encoded version of the generated

649
00:34:55,217 --> 00:34:55,517
pattern.

650
00:34:56,338 --> 00:34:59,900
Run-length encoding is especially efficient at storing exactly these types of images,

651
00:34:59,980 --> 00:35:02,641
which have little to no variation in the interior of the cell.

652
00:35:04,418 --> 00:35:05,738
So once we had these cavern cells,

653
00:35:05,778 --> 00:35:07,338
we still needed a way to stitch them together

654
00:35:07,398 --> 00:35:08,399
into a cohesive level.

655
00:35:09,119 --> 00:35:10,559
And we knew that we wanted levels to occupy

656
00:35:10,579 --> 00:35:12,380
a certain amount of rectangular space in the game.

657
00:35:13,180 --> 00:35:14,760
And we also had to fix the cell size

658
00:35:14,800 --> 00:35:16,220
that worked well for the amount of content

659
00:35:16,260 --> 00:35:18,001
that we were trying to place inside of each room.

660
00:35:19,001 --> 00:35:20,841
And furthermore, the cellular automata chunks

661
00:35:20,901 --> 00:35:23,302
had been engineered to accommodate orthogonal exits

662
00:35:23,482 --> 00:35:24,622
for north, east, south, and west.

663
00:35:24,982 --> 00:35:26,423
And we didn't want to deal with diagonal exits

664
00:35:26,563 --> 00:35:29,663
or some sort of hexagonal connections between cells.

665
00:35:30,564 --> 00:35:32,625
So we experimented with a number of different approaches

666
00:35:32,745 --> 00:35:34,386
for building level layouts within a fixed region,

667
00:35:34,526 --> 00:35:37,027
including BSP trees, minimum spanning trees,

668
00:35:37,107 --> 00:35:38,388
and other well-known algorithms

669
00:35:38,928 --> 00:35:41,389
that you'll use a lot in Proc Gen stuff.

670
00:35:41,910 --> 00:35:42,850
But nothing really seemed to fit

671
00:35:42,870 --> 00:35:43,971
with our unique constraints,

672
00:35:44,191 --> 00:35:46,872
so I attempted a slightly less orthodox solution

673
00:35:46,932 --> 00:35:49,173
that doesn't exist in the Proc Gen toolkit.

674
00:35:50,314 --> 00:35:52,235
My coworker suggested Z-order curves

675
00:35:52,295 --> 00:35:54,316
as a potential solution for connecting

676
00:35:54,356 --> 00:35:56,037
the interior rooms of a generated dungeon.

677
00:35:56,677 --> 00:36:00,699
And Z-order curves are functions that map multi-dimensional data to one dimension

678
00:36:01,120 --> 00:36:03,161
while preserving the locality of those data points.

679
00:36:03,681 --> 00:36:05,502
So as you trace through that curve,

680
00:36:06,362 --> 00:36:09,384
all the rooms that it connects are nearby each other,

681
00:36:09,744 --> 00:36:12,245
but you can sort of walk the path using a single index

682
00:36:12,285 --> 00:36:13,886
instead of worrying about two-dimensional coordinates.

683
00:36:14,766 --> 00:36:16,587
But they're also recursive, as you can see in this image.

684
00:36:16,647 --> 00:36:19,409
The higher-order curves are composed of lower-order curves,

685
00:36:19,729 --> 00:36:21,470
which makes them scalable to grids of any size.

686
00:36:23,145 --> 00:36:25,065
Zero-to-curves were too jaggy for our use,

687
00:36:25,785 --> 00:36:27,246
but being clued into their existence

688
00:36:27,286 --> 00:36:29,126
led me to find another kind of space-filling curve

689
00:36:29,526 --> 00:36:31,307
that was much more amenable to our constraint

690
00:36:31,407 --> 00:36:32,887
of connecting rooms orthogonally.

691
00:36:33,628 --> 00:36:36,248
Hilbert curves maintain the mapping of 2D to 1D space

692
00:36:36,268 --> 00:36:38,449
that we were after, but do so orthogonally,

693
00:36:38,609 --> 00:36:40,529
allowing us to connect rooms with north, south,

694
00:36:40,789 --> 00:36:41,630
east, and west exits.

695
00:36:43,210 --> 00:36:45,891
So imagining that we want to fill a four-by-four grid

696
00:36:45,911 --> 00:36:47,811
with dungeon cells, this is a Hilbert curve

697
00:36:47,851 --> 00:36:48,432
that could be used.

698
00:36:49,248 --> 00:36:51,730
The H value represents the distance along the path,

699
00:36:51,910 --> 00:36:53,831
starting in the top left and ending at the top right.

700
00:36:53,851 --> 00:36:56,052
And that can be used to control things

701
00:36:56,092 --> 00:36:56,912
like difficulty ramps,

702
00:36:57,132 --> 00:36:59,053
the probability of finding treasure within a room,

703
00:36:59,093 --> 00:37:01,434
you can increase that probability as the H value goes up,

704
00:37:02,254 --> 00:37:03,115
all sorts of things like that.

705
00:37:03,595 --> 00:37:05,916
And the math for converting Hilbert curve indices

706
00:37:05,956 --> 00:37:08,417
into 2D coordinates is extremely simple and pretty fast,

707
00:37:08,557 --> 00:37:10,078
which means that you can use them interchangeably

708
00:37:10,678 --> 00:37:11,118
very easily.

709
00:37:12,159 --> 00:37:13,679
But the most glaring problem with this approach

710
00:37:13,699 --> 00:37:15,700
is that all Hilbert curves look the same.

711
00:37:16,333 --> 00:37:20,838
Even if you rotate the curve, players are going to pick up on the pattern after just a few playthroughs.

712
00:37:21,619 --> 00:37:25,103
So our solution to the problem was to generate a higher order Hilbert curve

713
00:37:25,364 --> 00:37:28,888
than was actually needed, and then use a sampling kernel of the desired size.

714
00:37:29,389 --> 00:37:33,293
So by sliding this kernel around and sampling the path, you can get different layouts

715
00:37:33,754 --> 00:37:35,416
from the more complex Hilbert curve.

716
00:37:36,317 --> 00:37:37,718
This really couldn't have worked out better for us.

717
00:37:37,858 --> 00:37:40,060
It was kind of the perfect approach that we stumbled upon.

718
00:37:40,720 --> 00:37:42,241
The higher order curves contain more detail

719
00:37:42,281 --> 00:37:43,242
and thus more variety.

720
00:37:43,602 --> 00:37:44,603
And if you rotate the curve,

721
00:37:44,643 --> 00:37:46,405
you can get even more combinations of paths.

722
00:37:48,375 --> 00:37:50,836
So using Hilbert curves was a non-traditional approach

723
00:37:50,856 --> 00:37:51,997
that worked out better than we expected.

724
00:37:52,537 --> 00:37:53,997
I'd never even heard of Hilbert curves

725
00:37:54,057 --> 00:37:55,618
being used in game development before,

726
00:37:55,638 --> 00:37:57,719
and it was really gratifying to try to implement

727
00:37:57,739 --> 00:37:59,259
a technique that I'd never seen used elsewhere

728
00:37:59,339 --> 00:38:00,279
and have it actually work.

729
00:38:01,120 --> 00:38:02,720
And I've talked about Hilbert curves

730
00:38:02,880 --> 00:38:04,141
in other settings like GDC,

731
00:38:04,521 --> 00:38:06,182
which has led to two other games utilizing them

732
00:38:06,222 --> 00:38:07,322
for their own level building needs.

733
00:38:07,862 --> 00:38:09,983
And seeing someone else implement your algorithm

734
00:38:10,023 --> 00:38:11,563
is not only really rewarding as a developer,

735
00:38:11,603 --> 00:38:13,224
but it also leads to incremental improvements,

736
00:38:13,284 --> 00:38:15,005
which you can then fold back into your own project.

737
00:38:16,106 --> 00:38:21,733
Hilbert curves are definitely not a perfect solution, nor are they even a good solution for most games, but they fit our needs really well.

738
00:38:23,340 --> 00:38:25,221
So I want to shift a little bit from level generation

739
00:38:25,261 --> 00:38:27,022
to talk about how we made the enemy units

740
00:38:27,142 --> 00:38:28,422
in Galaxy feel more alive.

741
00:38:29,323 --> 00:38:30,763
This is funny because I'm going to touch on something

742
00:38:30,783 --> 00:38:34,245
that Me Too mentioned in her talk, serendipitously, I guess.

743
00:38:34,985 --> 00:38:36,746
So frequently during combat, enemies will fire off

744
00:38:36,766 --> 00:38:39,047
little quips and exclamations, things like,

745
00:38:39,447 --> 00:38:40,727
I see him when they spot the player,

746
00:38:40,987 --> 00:38:43,128
or help, I'm under attack if they need backup.

747
00:38:43,548 --> 00:38:45,009
And we call these interjections barks.

748
00:38:46,229 --> 00:38:47,690
But getting these barks to sound organic

749
00:38:47,750 --> 00:38:49,711
and non-repetitive is a really interesting challenge,

750
00:38:50,271 --> 00:38:52,172
one that we solved by looking to Valve's

751
00:38:52,212 --> 00:38:52,872
Left 4 Dead series.

752
00:38:53,921 --> 00:38:56,942
So, Alon Ruskin at Valve gave a fantastic presentation

753
00:38:56,982 --> 00:38:59,963
at GDC 2012 about the contextual dialogue system

754
00:39:00,043 --> 00:39:01,323
that they built for Left 4 Dead series.

755
00:39:02,163 --> 00:39:04,324
I'm not going to rehash the entire talk,

756
00:39:04,744 --> 00:39:06,885
but I can't recommend it highly enough.

757
00:39:06,925 --> 00:39:08,565
It's a really interesting, really detailed,

758
00:39:08,925 --> 00:39:10,886
and very easy to follow explanation

759
00:39:10,926 --> 00:39:12,486
of how they laid out their dialogue system.

760
00:39:13,387 --> 00:39:19,431
But the gist of the approach is that your engine maintains a global state of world facts that are constantly updated as the game state changes.

761
00:39:20,252 --> 00:39:26,436
Facts are really nothing more than key value pairs that track things like how many enemies have been killed or how long has the session been active.

762
00:39:27,837 --> 00:39:32,500
Additionally, many other local states are stored containing facts unique to a particular entity in your game.

763
00:39:33,100 --> 00:39:36,743
For the player, this might include things like how many bullets are left or how much damage has been taken.

764
00:39:38,221 --> 00:39:40,703
And your writers will then author all dialogue triggers

765
00:39:40,903 --> 00:39:42,465
as piles of rules or queries.

766
00:39:43,025 --> 00:39:44,346
And these rules can be as specific

767
00:39:44,486 --> 00:39:45,747
or as generic as you'd like.

768
00:39:46,748 --> 00:39:48,570
For example, if the level has been active

769
00:39:48,610 --> 00:39:49,390
for more than five minutes,

770
00:39:49,651 --> 00:39:50,972
and the player has less than five health,

771
00:39:51,392 --> 00:39:52,873
and an upgrade item is nearby,

772
00:39:53,274 --> 00:39:55,235
then play the dialogue line just in time.

773
00:39:56,056 --> 00:39:57,677
And the contextual system will always try

774
00:39:57,697 --> 00:40:00,059
to find the query with the most number of rules matched,

775
00:40:00,159 --> 00:40:01,260
which allows you to write dialogue

776
00:40:01,280 --> 00:40:03,962
that's as specific or as generic as you need it to be.

777
00:40:04,932 --> 00:40:09,457
Alon goes into much more detail in his talk on how to best store these facts and rules

778
00:40:09,517 --> 00:40:12,961
and how to optimize your query functions and other interesting topics like that that really

779
00:40:13,001 --> 00:40:13,962
matter about the implementation.

780
00:40:14,663 --> 00:40:17,826
So again, I'd encourage you to check out his talk or his slides if you're interested in

781
00:40:17,886 --> 00:40:18,387
those details.

782
00:40:20,012 --> 00:40:21,652
But despite the versatility of this approach,

783
00:40:21,892 --> 00:40:23,633
our implementation suffered from a few problems

784
00:40:23,653 --> 00:40:25,313
that I wish we had been better about addressing,

785
00:40:25,333 --> 00:40:27,233
and I'm hoping I can pass on some of those lessons to you.

786
00:40:28,234 --> 00:40:30,374
One is that the sheer number of rules and facts

787
00:40:30,434 --> 00:40:31,555
that you can generate can lead to

788
00:40:31,575 --> 00:40:32,915
an overwhelming amount of content.

789
00:40:33,555 --> 00:40:34,535
I think in Left 4 Dead 2,

790
00:40:34,575 --> 00:40:36,476
they said they had 10,000 lines of dialogue,

791
00:40:36,916 --> 00:40:39,797
which is no small amount of content to manage.

792
00:40:40,137 --> 00:40:41,857
And for a large team with a dedicated writer

793
00:40:41,897 --> 00:40:43,718
who's regularly working in your tools

794
00:40:43,758 --> 00:40:45,118
and is really involved in the project,

795
00:40:45,498 --> 00:40:46,318
it may not be an issue.

796
00:40:46,638 --> 00:40:47,619
But for a small team like us,

797
00:40:47,779 --> 00:40:49,319
it was more of a burden than it was worth.

798
00:40:51,490 --> 00:40:55,473
We also neglected to write an adequate system for bug testing rule queries.

799
00:40:56,153 --> 00:40:59,476
Many of those queries can grow to be really complex, and if you don't have a system in

800
00:40:59,496 --> 00:41:04,399
place that allows you to easily manipulate the world or entity fact state tables, it

801
00:41:04,419 --> 00:41:08,142
becomes a really tedious process to try and track down errant lines of dialogue.

802
00:41:09,437 --> 00:41:11,438
And this was the one that hurt us the worst, I think.

803
00:41:11,478 --> 00:41:13,378
We had a really bad content pipeline.

804
00:41:14,219 --> 00:41:17,340
Due to the way that certain game data in Galaxy was edited and stored,

805
00:41:17,380 --> 00:41:19,701
we had barks to find in both Excel spreadsheets

806
00:41:20,282 --> 00:41:21,362
and Google Drive spreadsheets.

807
00:41:21,802 --> 00:41:23,483
And rebuilding the barks data consisted of

808
00:41:23,743 --> 00:41:25,184
downloading the Google Drive spreadsheets

809
00:41:25,284 --> 00:41:28,085
and running an access database merge on multiple sheets.

810
00:41:28,932 --> 00:41:32,213
To make matters worse, the merge was handled by a Unity tool which relied on a certain

811
00:41:32,313 --> 00:41:36,355
access plugin that only ran on the 32-bit version of Unity and certain versions of Access,

812
00:41:36,796 --> 00:41:40,558
and it was an extremely brittle pipeline that could have broken at any point in time when

813
00:41:40,578 --> 00:41:41,798
we upgraded Unity or Access.

814
00:41:42,359 --> 00:41:45,620
Thankfully it did not, and we made it through the project, but it's not something that I

815
00:41:45,640 --> 00:41:46,100
would do again.

816
00:41:48,041 --> 00:41:48,762
Thank you for listening.

817
00:41:48,802 --> 00:41:49,302
That's it for me.

818
00:41:49,322 --> 00:41:51,783
If you have any questions, shoot me an email or opt in to the panel.

819
00:41:51,803 --> 00:41:52,324
I can grab you.

820
00:41:52,344 --> 00:41:52,584
Thanks.

821
00:41:52,804 --> 00:41:52,984
Thanks.

822
00:41:57,996 --> 00:42:03,160
We've got the clicker on the top.

823
00:42:03,220 --> 00:42:03,320
Cool.

824
00:42:03,340 --> 00:42:05,442
Hey everybody. My name is Luis Kruel.

825
00:42:05,683 --> 00:42:07,604
I'm a senior technical artist over at SetFX.

826
00:42:08,345 --> 00:42:09,526
We make a software called Houdini.

827
00:42:10,127 --> 00:42:12,809
And this is a pet project of mine that I'm going to be sharing in a little bit.

828
00:42:12,909 --> 00:42:16,613
So I was in game development for about 10 years before joining software development.

829
00:42:17,193 --> 00:42:19,135
And I still have that itch to make games.

830
00:42:19,255 --> 00:42:22,158
So this is my kind of little love child.

831
00:42:23,374 --> 00:42:27,939
So this talk is about me and then I have a little bit of content from Antonio Liappis

832
00:42:28,480 --> 00:42:31,963
that is over at University of Malta and I'm going to talk a little bit about how we met

833
00:42:32,163 --> 00:42:34,446
and basically how that relationship evolved.

834
00:42:35,607 --> 00:42:40,632
So what we have is a little project that I came up with where I want a procedurally generated

835
00:42:40,732 --> 00:42:43,535
first person shooter at triple A quality and

836
00:42:44,191 --> 00:42:46,292
This is part of my other talk later today

837
00:42:46,432 --> 00:42:48,773
on the AI crackpot, so you can see how weird

838
00:42:49,093 --> 00:42:51,814
and awful it is, but this is the first steps towards that,

839
00:42:51,934 --> 00:42:54,475
and I wanted to show where we are in the process,

840
00:42:54,595 --> 00:42:56,096
and I think we're gonna get really close

841
00:42:56,116 --> 00:42:57,476
to that realization.

842
00:42:57,796 --> 00:43:00,017
So we have a small team, we wanna be building

843
00:43:00,197 --> 00:43:02,458
AAA content, and we wanna basically have

844
00:43:02,518 --> 00:43:04,419
as much proceduralism and as humanly possible,

845
00:43:04,939 --> 00:43:07,140
and it needs to be a multiplayer competitive FPS.

846
00:43:08,040 --> 00:43:12,883
And we worked in like the team, everybody has kind of that frame of mind and that experience.

847
00:43:12,903 --> 00:43:18,026
So that's why if we're going to put proceduralism into some game, that's the kind of, that's our jam.

848
00:43:18,066 --> 00:43:20,348
So it's like, that's our muscle memory and that's what we know how to do.

849
00:43:22,035 --> 00:43:26,197
So the way I like to think about proceduralism and AI is like in TechCart we have

850
00:43:26,237 --> 00:43:31,001
proceduralism as this little black box of inputs that basically the artist will drive

851
00:43:31,061 --> 00:43:33,282
and they'll kind of draw little volumes and everything.

852
00:43:33,582 --> 00:43:37,705
But if you shove AI into that, now we basically have something that can just pump

853
00:43:37,765 --> 00:43:39,386
out content really, really, really fast.

854
00:43:39,426 --> 00:43:41,128
So that's where we want to get to.

855
00:43:42,528 --> 00:43:47,872
So I started to think about this project and then I went to a.

856
00:43:48,798 --> 00:43:51,700
a conference, there's like a ton of academics and they're all talking about procedurally

857
00:43:51,740 --> 00:43:55,182
generated and all these cool ideas and I was like let me just shoot a blind email out into

858
00:43:55,222 --> 00:43:59,325
the ether and then see what shakes out. So I basically shot out to procedurally generated

859
00:43:59,385 --> 00:44:03,068
Google groups and was like hey man we can run this project, anyone interested in helping

860
00:44:03,088 --> 00:44:06,871
me out? This is what I'm kind of going for. And then Antonio actually came back and he

861
00:44:06,891 --> 00:44:10,093
was like hey I have this thing called this ancient sketchbook and we can just make maps.

862
00:44:10,593 --> 00:44:15,377
And then it's a web based API and then it basically just starts by randomly pasting

863
00:44:16,978 --> 00:44:22,901
nodes around and then continuously evolving based on constraints and all of that is kind of data driven and it works really well.

864
00:44:23,241 --> 00:44:27,022
So I started kind of playing with it a little bit and seeing what how far I could get to it.

865
00:44:28,763 --> 00:44:33,145
And so here's a little bit of the kind of process to where you have like the random initial seed

866
00:44:33,625 --> 00:44:37,487
and then you kind of start evolving based on rules and constraints that I define as an artist.

867
00:44:38,228 --> 00:44:43,370
The web API had a little bit of less what than what we needed so he was just super nice and

868
00:44:43,390 --> 00:44:45,271
was like tell me what you need because I was like he.

869
00:44:46,170 --> 00:44:48,851
kind of craved that actual AAA side of things.

870
00:44:48,871 --> 00:44:51,072
And he was like, I want to see this academic stuff

871
00:44:51,092 --> 00:44:53,513
being used in context, and I wanted to use academics.

872
00:44:53,533 --> 00:44:54,994
So we kind of met in the middle, and he actually

873
00:44:55,034 --> 00:44:56,794
started giving me kind of custom executables

874
00:44:57,335 --> 00:44:58,415
that I could use.

875
00:44:58,735 --> 00:44:59,916
And we made some modifications.

876
00:44:59,936 --> 00:45:01,917
So the first one is the ability to have second floors

877
00:45:02,697 --> 00:45:04,698
to our maps, which is kind of something unique

878
00:45:04,778 --> 00:45:06,619
in procedural content generation.

879
00:45:07,679 --> 00:45:09,720
He gave us something I'm gonna talk a little bit about

880
00:45:09,760 --> 00:45:11,781
later, which is like further evaluation of the data

881
00:45:11,801 --> 00:45:13,602
so I can tell where choke points are,

882
00:45:13,642 --> 00:45:15,223
where dead ends are, where cross ends are.

883
00:45:16,183 --> 00:45:18,225
and then being able to lock down the entrances,

884
00:45:18,265 --> 00:45:20,126
which is really crucial for me,

885
00:45:20,346 --> 00:45:21,807
and I'm gonna talk a little bit about that later.

886
00:45:22,208 --> 00:45:23,429
And then just being able to,

887
00:45:23,489 --> 00:45:24,950
like procedural systems tend to,

888
00:45:25,430 --> 00:45:26,831
and he talked a little bit about it,

889
00:45:26,991 --> 00:45:29,113
where you just, the walls kind of creep in,

890
00:45:29,153 --> 00:45:31,014
and it'll try to fill up as much space as possible,

891
00:45:31,034 --> 00:45:31,855
and it's very maze-like,

892
00:45:31,875 --> 00:45:33,076
so that's the opposite of what you want

893
00:45:33,096 --> 00:45:33,916
on a first-person shooter.

894
00:45:33,936 --> 00:45:35,277
You want these big, nice, open areas

895
00:45:35,317 --> 00:45:36,338
that you can kind of run around

896
00:45:36,358 --> 00:45:37,299
and kind of connect together.

897
00:45:38,139 --> 00:45:39,961
So he basically added another constraint,

898
00:45:40,021 --> 00:45:41,362
which is I can control the degree

899
00:45:41,462 --> 00:45:42,903
of how many walls get placed.

900
00:45:44,163 --> 00:45:46,104
So the output data that I get from the system

901
00:45:46,204 --> 00:45:48,865
is ASCII so much like the Dwarf Fortress stuff.

902
00:45:49,286 --> 00:45:52,327
So basically we have a little text

903
00:45:52,487 --> 00:45:54,408
that is E is for entrances,

904
00:45:54,468 --> 00:45:57,050
I get basically stairs or jump pads in my case,

905
00:45:57,450 --> 00:45:58,971
and then spawn points, weapons.

906
00:45:59,231 --> 00:46:00,912
I can specify a lot of things

907
00:46:01,552 --> 00:46:03,253
on basically where I want things to spawn

908
00:46:03,293 --> 00:46:05,854
and how many of each I get.

909
00:46:07,135 --> 00:46:08,556
So that basically I have a little Java.

910
00:46:10,044 --> 00:46:11,927
I have a Python wrapper to a Java executable

911
00:46:12,208 --> 00:46:13,990
that just have a bunch of parameters I can create.

912
00:46:14,030 --> 00:46:15,793
Ideally, we can kind of extrapolate this up

913
00:46:15,833 --> 00:46:18,196
and then make more rules and kind of build this out.

914
00:46:18,597 --> 00:46:19,939
And then basically I can just make

915
00:46:19,999 --> 00:46:21,321
as many maps as I want to.

916
00:46:22,202 --> 00:46:25,447
And yeah, the addition output data is.

917
00:46:26,894 --> 00:46:31,739
I have the original map and then he can also as well with the maps I can get uh that choke

918
00:46:31,779 --> 00:46:35,883
points, dead ends and crossroads. I'm not using this currently but for like as you people

919
00:46:35,903 --> 00:46:40,388
want to kind of start using this, this is super kind of crucial data um that you might be

920
00:46:40,428 --> 00:46:40,808
able to use.

921
00:46:42,185 --> 00:46:46,207
So making sense of the data. So first like the ASCII stuff is really hard to read. So first I

922
00:46:46,307 --> 00:46:50,788
wanted to translate the ASCII data into 3D. So I just kind of built a grid and then I just

923
00:46:50,828 --> 00:46:54,029
color coded it so I could see what the hell is going on. So now I can see the entrances of

924
00:46:54,089 --> 00:46:57,991
everywhere and then the blues is where the jump pads are going to be so we can go from one map to

925
00:46:58,011 --> 00:47:01,492
the other one. And then the reds is where the weapons are going to spawn and then the greens

926
00:47:01,532 --> 00:47:02,652
are going to be the spawn points.

927
00:47:04,248 --> 00:47:06,750
But then I can make really cool single rooms,

928
00:47:06,950 --> 00:47:08,251
but then we get to the point again,

929
00:47:08,271 --> 00:47:09,611
that's like how do you stitch this together?

930
00:47:09,832 --> 00:47:11,873
And then the traditional methods again fell short

931
00:47:11,913 --> 00:47:13,334
because they're really built for dungeons

932
00:47:13,954 --> 00:47:15,515
to where you kind of have the spidery vein

933
00:47:15,555 --> 00:47:16,216
of things growing.

934
00:47:16,836 --> 00:47:18,277
We talked about like adding teleporters

935
00:47:18,317 --> 00:47:20,318
to the end of the rooms to kind of connect it together

936
00:47:20,338 --> 00:47:21,159
to try to get a flow.

937
00:47:21,679 --> 00:47:24,221
But where we landed is actually just let the designers

938
00:47:24,261 --> 00:47:25,321
come up with the top-down map,

939
00:47:25,722 --> 00:47:27,343
and it takes them like five minutes to build it,

940
00:47:27,743 --> 00:47:29,464
and then they can just explicitly say

941
00:47:29,504 --> 00:47:31,005
where the entrances of each rooms are,

942
00:47:31,065 --> 00:47:33,226
what sizes they are, how it all connects together.

943
00:47:34,332 --> 00:47:36,473
And then I can take each of those individual rooms

944
00:47:36,513 --> 00:47:37,573
and then run through the system.

945
00:47:37,613 --> 00:47:38,933
So it's kind of a backwards approach

946
00:47:38,953 --> 00:47:40,074
to procedural content generation,

947
00:47:40,354 --> 00:47:41,914
which is actually working out really well for us.

948
00:47:42,474 --> 00:47:45,595
So traditionally, people will pre-make the rooms itself

949
00:47:45,835 --> 00:47:47,596
and then kind of procedurally stitch them together.

950
00:47:47,696 --> 00:47:49,937
We're doing the opposite, to where we're pre-making

951
00:47:50,017 --> 00:47:51,617
the kind of high-level flow of the map

952
00:47:51,697 --> 00:47:53,077
and where we want the rooms to be,

953
00:47:53,117 --> 00:47:54,278
how we want the exits to go.

954
00:47:54,718 --> 00:47:56,978
And then the inside content, it doesn't really matter for us.

955
00:47:57,058 --> 00:47:59,799
It's like, that's where the flavor's gonna come in.

956
00:48:01,620 --> 00:48:03,480
So the way it works is I take that,

957
00:48:04,874 --> 00:48:09,757
a top down map, I bring it into Houdini, I just parse the data and then I can isolate where the

958
00:48:09,797 --> 00:48:13,399
exits are, I can kind of get a little bit of a height variation, I can calculate the dimensions

959
00:48:13,759 --> 00:48:18,583
and know where all the door placements are. I can then run that through the generator that I can

960
00:48:18,623 --> 00:48:23,806
then get as many variations as I need, then now they're all color coded, I get the rooms back and

961
00:48:23,826 --> 00:48:28,929
then I just kind of do some basic extrusions and then I isolate the rooms, I boolean them

962
00:48:28,969 --> 00:48:31,131
together and then I actually place the game objects.

963
00:48:32,462 --> 00:48:33,303
And these are the results.

964
00:48:33,323 --> 00:48:35,685
So right now we're at the kind of white stage map

965
00:48:35,725 --> 00:48:37,386
and we're kind of taking production as we would

966
00:48:37,546 --> 00:48:38,927
in a regular game development.

967
00:48:38,947 --> 00:48:40,248
So first you have like a white box

968
00:48:40,288 --> 00:48:41,469
and then we're gonna start arting out.

969
00:48:41,769 --> 00:48:42,830
The whole thing is gonna be procedural

970
00:48:42,870 --> 00:48:44,091
but we wanted these safety spots

971
00:48:44,431 --> 00:48:45,992
to just kind of reality check where we are

972
00:48:46,012 --> 00:48:47,513
and be like okay, does this feel fun?

973
00:48:48,073 --> 00:48:49,074
Before going all the way,

974
00:48:49,134 --> 00:48:50,375
just like you would in a regular game,

975
00:48:50,976 --> 00:48:53,157
just does the system works before I kind of make

976
00:48:53,437 --> 00:48:54,938
all terrain and everything procedural

977
00:48:54,978 --> 00:48:55,979
and everything looks beautiful,

978
00:48:56,319 --> 00:48:57,140
is the game fun?

979
00:48:57,940 --> 00:48:59,842
So we actually got to the point now that

980
00:49:00,462 --> 00:49:03,085
It's actually pretty fun to play and you can kind of get it in Unreal.

981
00:49:03,745 --> 00:49:06,467
And we had some bots in there and it actually feels like a real game,

982
00:49:06,988 --> 00:49:09,430
which is something that I'm super excited about.

983
00:49:09,810 --> 00:49:11,872
And actually the designer that I'm working with,

984
00:49:12,513 --> 00:49:14,354
at first he was kind of like, yeah, okay, procedural,

985
00:49:14,374 --> 00:49:16,096
like I want complete control.

986
00:49:16,136 --> 00:49:18,017
And now after seeing this stuff, he's like, okay.

987
00:49:18,758 --> 00:49:20,118
I can see with the force from the tree.

988
00:49:20,198 --> 00:49:21,999
I think this is possible and I think we can do this.

989
00:49:22,799 --> 00:49:25,040
So I'll be, again, at 1 p.m.

990
00:49:25,060 --> 00:49:26,581
I'm gonna talk about the kind of massive vision

991
00:49:26,621 --> 00:49:27,601
of what this project could be,

992
00:49:28,121 --> 00:49:29,462
but I just wanted to share the kind of interim step

993
00:49:29,482 --> 00:49:29,762
of where I am.

994
00:49:29,782 --> 00:49:30,402
And yeah, that's all I got.

995
00:49:30,422 --> 00:49:31,203
Thank you.

996
00:49:31,223 --> 00:49:31,403
Thank you.

997
00:49:31,423 --> 00:49:31,643
Thank you.

998
00:49:31,663 --> 00:49:32,003
Thank you.

999
00:49:32,023 --> 00:49:32,523
Thank you.

1000
00:49:32,583 --> 00:49:32,823
Thank you.

1001
00:49:32,843 --> 00:49:33,023
Thank you.

1002
00:49:33,043 --> 00:49:41,827
Thank you.

1003
00:49:41,847 --> 00:49:42,347
Thank you.

1004
00:49:42,367 --> 00:49:42,547
Thank you.

1005
00:49:42,567 --> 00:49:42,747
Thank you.

1006
00:49:42,767 --> 00:49:43,007
Thank you.

1007
00:49:43,027 --> 00:49:43,207
Thank you.

1008
00:49:43,227 --> 00:49:43,407
Thank you.

1009
00:49:43,427 --> 00:49:43,627
Thank you.

1010
00:49:43,647 --> 00:49:44,008
Thank you.

1011
00:49:44,028 --> 00:49:44,268
Thank you.

1012
00:49:45,499 --> 00:49:48,645
So everything that is procedural is pseudo.

1013
00:49:48,665 --> 00:49:51,169
And I want to talk a little bit about how

1014
00:49:51,189 --> 00:49:53,793
pseudo random generation, you need to treat it

1015
00:49:53,853 --> 00:49:54,955
as your friend and not your enemy.

1016
00:49:56,007 --> 00:49:58,268
So everyone, show of hands, everyone knows what

1017
00:49:58,308 --> 00:50:00,049
pseudo random generation is, right?

1018
00:50:00,409 --> 00:50:01,110
So here's the question.

1019
00:50:01,310 --> 00:50:02,871
Raise your hand if you've used an actual

1020
00:50:02,931 --> 00:50:03,932
random number generator.

1021
00:50:04,632 --> 00:50:05,933
Actual random, not pseudo.

1022
00:50:05,953 --> 00:50:07,334
Oh, and the hands shrink.

1023
00:50:07,434 --> 00:50:10,155
So the thing about computers is we can't actually

1024
00:50:10,195 --> 00:50:12,337
make true random generation, we have to use pseudo.

1025
00:50:13,057 --> 00:50:14,458
But you can use pseudo to your advantage.

1026
00:50:14,858 --> 00:50:17,700
You can create experiences that use the pseudo nature

1027
00:50:17,820 --> 00:50:20,261
of random generation to ensure that these experiences

1028
00:50:20,301 --> 00:50:22,383
that people get that have some sort of random entity

1029
00:50:22,883 --> 00:50:24,964
and it can be reused, reutilized,

1030
00:50:25,304 --> 00:50:28,325
and kind of taken advantage of as your players and designers.

1031
00:50:29,845 --> 00:50:31,286
So I don't know if you guys have recently heard,

1032
00:50:31,346 --> 00:50:33,807
in 2014 there was a group of Russian hackers

1033
00:50:33,907 --> 00:50:35,448
who went on to a whole group

1034
00:50:35,468 --> 00:50:37,348
of these Novomatic casino machines,

1035
00:50:38,049 --> 00:50:40,349
and they were able to record data of those machines,

1036
00:50:40,430 --> 00:50:41,950
watch them play multiple rounds,

1037
00:50:42,510 --> 00:50:44,291
and through doing so, they could actually figure out

1038
00:50:44,331 --> 00:50:45,451
what the current seed was

1039
00:50:45,551 --> 00:50:47,332
and know when the next big win was gonna be.

1040
00:50:47,672 --> 00:50:50,134
So there's this current big rush of casino companies

1041
00:50:50,154 --> 00:50:52,035
all over the world getting rid of all these old machines

1042
00:50:52,055 --> 00:50:55,097
because their pseudo-rando generators were just too pseudo

1043
00:50:55,137 --> 00:50:56,057
and not random enough.

1044
00:50:56,918 --> 00:50:59,199
In games, we don't really care so much about that.

1045
00:50:59,479 --> 00:51:01,280
I mean, if someone can figure out potentially

1046
00:51:01,320 --> 00:51:03,102
what a seed is, if they could reverse engineer,

1047
00:51:03,162 --> 00:51:04,402
hey, this is a seed that causes

1048
00:51:04,442 --> 00:51:05,603
this interesting experience,

1049
00:51:06,023 --> 00:51:07,464
that can be a positive thing for a player.

1050
00:51:07,504 --> 00:51:09,605
It's something where they can intentionally choose a seed

1051
00:51:09,645 --> 00:51:11,547
or kind of direct the seed generation

1052
00:51:12,007 --> 00:51:15,009
to make something interesting and experience for them.

1053
00:51:15,972 --> 00:51:19,214
So I would guess probably many people in many situations,

1054
00:51:19,274 --> 00:51:22,296
they use the wonderful trick of setting your OS time

1055
00:51:22,436 --> 00:51:23,357
as your random seed.

1056
00:51:23,757 --> 00:51:25,838
Can I see a show of hands of who has done that?

1057
00:51:26,579 --> 00:51:29,060
Yeah, okay, so that's the quick, easy, dirty trick.

1058
00:51:29,140 --> 00:51:31,102
It ensures that it's somewhat random

1059
00:51:31,142 --> 00:51:32,563
and you're not gonna get the same seed.

1060
00:51:32,983 --> 00:51:34,644
And that's great for something if you just need

1061
00:51:34,664 --> 00:51:36,265
a quick, dirty, random result.

1062
00:51:36,926 --> 00:51:38,387
But there's a lot of times when you actually wanna do

1063
00:51:38,427 --> 00:51:40,568
a random seed that has value for the player

1064
00:51:40,588 --> 00:51:42,750
or can be reutilized or the player can choose

1065
00:51:42,790 --> 00:51:43,530
which seed they want.

1066
00:51:44,571 --> 00:51:45,872
So there's a couple different options here.

1067
00:51:46,713 --> 00:51:48,795
One of the most common is let the user input a seed.

1068
00:51:49,075 --> 00:51:51,477
So this is something like Dwarf Fortress, like Minecraft.

1069
00:51:51,597 --> 00:51:53,058
Put in a number, put in a string,

1070
00:51:53,118 --> 00:51:55,160
I convert it to a number and that's the seed we use.

1071
00:51:55,601 --> 00:51:56,862
This is great because it allows you

1072
00:51:56,882 --> 00:51:57,883
to share it with someone else.

1073
00:51:57,923 --> 00:52:00,885
Hey, you know, check out seed PCG shotgun on Minecraft.

1074
00:52:01,226 --> 00:52:02,146
I was gonna share a photo of that

1075
00:52:02,166 --> 00:52:04,308
and it's actually a really boring start spot.

1076
00:52:04,368 --> 00:52:04,829
So like.

1077
00:52:05,469 --> 00:52:05,750
Sorry.

1078
00:52:06,691 --> 00:52:09,173
But the idea is you can take a really cool,

1079
00:52:09,234 --> 00:52:11,376
hey, put in my name and see what happens

1080
00:52:11,416 --> 00:52:12,457
and let's run around in that world.

1081
00:52:12,477 --> 00:52:14,860
And it becomes a shareable random experience

1082
00:52:15,200 --> 00:52:17,683
because you can recreate that exact random generator

1083
00:52:18,044 --> 00:52:19,125
and pass it on to someone else.

1084
00:52:20,220 --> 00:52:22,141
Also, if you do this, you don't actually have to tell them

1085
00:52:22,681 --> 00:52:23,921
about their input.

1086
00:52:24,242 --> 00:52:26,503
You don't have to say, hey, I'm gonna share a seed,

1087
00:52:26,923 --> 00:52:28,464
write it in, and this is what it is.

1088
00:52:29,464 --> 00:52:31,585
I'd love to see some games, and I don't know

1089
00:52:31,625 --> 00:52:33,826
if there's any examples of this, so please find me

1090
00:52:33,866 --> 00:52:35,767
afterwards, where you actually use something like

1091
00:52:35,807 --> 00:52:38,648
the character creation to determine the random seed.

1092
00:52:38,728 --> 00:52:40,109
So someone puts in their profile name,

1093
00:52:40,549 --> 00:52:41,890
that becomes the seed generator.

1094
00:52:42,290 --> 00:52:44,371
It's the same thing as I just showed with the Minecraft

1095
00:52:44,391 --> 00:52:47,332
seeds or with Dwarf Fortress, except you're not explicitly

1096
00:52:47,372 --> 00:52:48,173
saying to them, hey,

1097
00:52:48,913 --> 00:52:49,933
this is your random seed.

1098
00:52:50,494 --> 00:52:52,335
What makes this really interesting is it essentially

1099
00:52:52,395 --> 00:52:55,577
creates a cheat code base for your player base

1100
00:52:55,597 --> 00:52:57,118
that they can discover as they play.

1101
00:52:57,158 --> 00:52:59,539
Like yo, I just found that if you put in the name

1102
00:52:59,880 --> 00:53:02,541
Yossarian, it creates this really awesome level

1103
00:53:02,621 --> 00:53:04,302
and like it's this very special space

1104
00:53:04,362 --> 00:53:06,564
and the first room has like the best gun in the game.

1105
00:53:07,364 --> 00:53:09,025
It creates this really interesting conversation

1106
00:53:09,065 --> 00:53:11,367
among your players because they're looking for seeds

1107
00:53:11,407 --> 00:53:12,747
and they're trying to discover seeds

1108
00:53:12,847 --> 00:53:15,169
through this input system that are really interesting.

1109
00:53:16,029 --> 00:53:18,050
I'd also love to see within this like loading screens.

1110
00:53:18,190 --> 00:53:20,532
You have a lot of now we can do interactive loading screens

1111
00:53:20,572 --> 00:53:21,472
again without being sued.

1112
00:53:21,892 --> 00:53:24,194
So do something interactive with your loading screen

1113
00:53:24,514 --> 00:53:27,415
and take that input and make it become a random seed

1114
00:53:27,475 --> 00:53:29,737
generator for any content that you have

1115
00:53:29,777 --> 00:53:30,957
coming after that loading screen.

1116
00:53:32,747 --> 00:53:35,010
You can also take a seed and break it into its sub elements.

1117
00:53:35,311 --> 00:53:36,672
So if you have this 12 digit number,

1118
00:53:36,692 --> 00:53:38,074
you can take that 12 digit number

1119
00:53:38,415 --> 00:53:40,497
and each number can actually be a specific chunk

1120
00:53:40,537 --> 00:53:41,919
to place into like a level map.

1121
00:53:41,939 --> 00:53:44,663
So like Luis's example, each one of those rooms

1122
00:53:44,703 --> 00:53:46,946
could be like, okay, we're using room format one,

1123
00:53:47,006 --> 00:53:49,509
room format two, and you actually take the seed number

1124
00:53:49,589 --> 00:53:50,510
and switch it out like that.

1125
00:53:50,830 --> 00:53:54,673
What's really nice about that is then you can treat your seed as a flexible number,

1126
00:53:54,693 --> 00:53:55,613
or flexible string.

1127
00:53:55,993 --> 00:53:58,895
So rather than it just being this big long number that you don't do anything with,

1128
00:53:59,355 --> 00:54:00,696
you can make small adjustments to it.

1129
00:54:00,736 --> 00:54:02,777
You can take this, switch two of the digits,

1130
00:54:03,258 --> 00:54:05,499
and you still have the general layout that's been defined,

1131
00:54:05,859 --> 00:54:08,941
again using like Luis's example of like a hand-generated flow.

1132
00:54:10,042 --> 00:54:11,903
but now you have two different formats have changed.

1133
00:54:12,303 --> 00:54:14,504
And then within the internal elements

1134
00:54:14,564 --> 00:54:15,445
of each of these rooms,

1135
00:54:15,965 --> 00:54:17,866
you still have a lot of individual things

1136
00:54:17,906 --> 00:54:19,728
that are using this seed to decide

1137
00:54:19,788 --> 00:54:21,789
what items drop, what characters are there.

1138
00:54:22,309 --> 00:54:24,070
So you can get some bit of consistency

1139
00:54:24,130 --> 00:54:25,591
across the full experience,

1140
00:54:25,991 --> 00:54:28,553
but then have small shifts to the random generation

1141
00:54:28,593 --> 00:54:31,055
without completely regenerating the whole system.

1142
00:54:32,283 --> 00:54:34,384
You can also, this is quite popular,

1143
00:54:34,444 --> 00:54:35,784
is taking seeds from many values.

1144
00:54:36,905 --> 00:54:38,846
A lot of games such as No Man's Sky,

1145
00:54:39,326 --> 00:54:41,727
you're generating a galactic space,

1146
00:54:41,767 --> 00:54:42,808
you know, a whole galaxy.

1147
00:54:43,148 --> 00:54:45,769
In order to do that, you need a lot of seeds.

1148
00:54:46,069 --> 00:54:48,330
And the best way to do that is to take XYZ data.

1149
00:54:48,731 --> 00:54:50,211
Take your X, take your Y, take your Z,

1150
00:54:50,231 --> 00:54:51,172
concatenate them together.

1151
00:54:51,492 --> 00:54:52,993
That's a unique random seed

1152
00:54:53,013 --> 00:54:54,773
that will only be available for that item.

1153
00:54:55,074 --> 00:54:58,457
So when you generate a planet, you generate a star, you can use location data, you can

1154
00:54:58,597 --> 00:54:59,738
use color data.

1155
00:54:59,758 --> 00:55:02,881
Someone color picks or, you know, it's randomly generated colors.

1156
00:55:03,522 --> 00:55:07,106
You use the RGB data to create a seed through those multiple pieces.

1157
00:55:09,307 --> 00:55:10,588
You can also use a user ID.

1158
00:55:10,828 --> 00:55:14,410
So many of us, if you're developing anything for mobile,

1159
00:55:14,470 --> 00:55:18,172
developing anything for PC, possibly with console,

1160
00:55:18,192 --> 00:55:21,554
I'm not sure how, but if you can get a specific user data ID,

1161
00:55:21,814 --> 00:55:23,475
something that's unique to the user,

1162
00:55:24,015 --> 00:55:25,796
you can then use that as a random seed.

1163
00:55:25,917 --> 00:55:29,418
Create something where there's a random data for them

1164
00:55:29,458 --> 00:55:31,179
that is actually not random for them.

1165
00:55:31,520 --> 00:55:35,422
It becomes a static experience for that specific player.

1166
00:55:37,123 --> 00:55:40,245
So this is again like a UDID, a MAC address,

1167
00:55:40,305 --> 00:55:41,806
any type of information that you can pull

1168
00:55:41,826 --> 00:55:42,906
that's unique to that player.

1169
00:55:43,487 --> 00:55:44,808
Assign that as a random seed,

1170
00:55:45,048 --> 00:55:45,968
and that actually becomes a seed

1171
00:55:45,988 --> 00:55:47,289
that's no longer random for them.

1172
00:55:47,770 --> 00:55:49,611
So if they have a first level that's generated,

1173
00:55:49,651 --> 00:55:51,272
they always get that same first level,

1174
00:55:51,572 --> 00:55:53,433
but they're the only one who ever gets that first level.

1175
00:55:53,493 --> 00:55:55,614
No one else will experience that level or that space

1176
00:55:55,654 --> 00:55:58,176
or that specific combination of random generation

1177
00:55:58,236 --> 00:55:59,277
because it's locked to them.

1178
00:56:00,417 --> 00:56:01,898
And that brings me to my last point

1179
00:56:01,958 --> 00:56:03,680
is the idea of a lifetime seed.

1180
00:56:03,980 --> 00:56:04,120
So.

1181
00:56:05,149 --> 00:56:06,631
We've all experienced random generation,

1182
00:56:06,651 --> 00:56:08,292
we've all played games with random generation.

1183
00:56:08,833 --> 00:56:09,714
Every time you play a game,

1184
00:56:09,754 --> 00:56:11,095
every time you go through that replay,

1185
00:56:11,376 --> 00:56:12,657
it's a new random experience.

1186
00:56:13,097 --> 00:56:14,919
But using something like the user ID seed

1187
00:56:14,979 --> 00:56:17,302
or a lock seed to each individual player

1188
00:56:17,922 --> 00:56:20,645
ensures that even though we have randomness

1189
00:56:20,765 --> 00:56:22,427
across each of our experiences,

1190
00:56:22,988 --> 00:56:24,910
those experiences are unique to us

1191
00:56:25,390 --> 00:56:27,592
and we will always experience those same results.

1192
00:56:28,233 --> 00:56:32,456
This again will create a wonderful community involvement where I can talk about my experience,

1193
00:56:32,537 --> 00:56:36,860
I can talk about, hey, you know, the purple potion in this roguelike always kills me.

1194
00:56:37,321 --> 00:56:40,503
You say the purple potion always gives you health, but it always gives you health.

1195
00:56:40,623 --> 00:56:43,426
Every time you replay, you don't have to drink that potion and wonder what it's going to

1196
00:56:43,466 --> 00:56:44,026
do this time.

1197
00:56:44,487 --> 00:56:45,467
It is specific to you.

1198
00:56:46,068 --> 00:56:48,690
And I'd love to see games do this with map generation,

1199
00:56:48,811 --> 00:56:49,972
with character generation,

1200
00:56:49,992 --> 00:56:51,453
with anything with a procedural system,

1201
00:56:51,974 --> 00:56:54,697
because then you create consistency across the replays,

1202
00:56:54,737 --> 00:56:56,478
across those experiences,

1203
00:56:56,999 --> 00:56:58,821
and it gives the community an opportunity

1204
00:56:58,841 --> 00:57:00,703
to kind of talk about their specific seed

1205
00:57:00,743 --> 00:57:02,564
or kind of their specific space that they have,

1206
00:57:03,165 --> 00:57:04,807
and they get to feel ownership to it.

1207
00:57:04,887 --> 00:57:05,607
It's unique to them.

1208
00:57:06,108 --> 00:57:10,150
they know that that one random dwarf or that one random character in red shirt always shows up

1209
00:57:10,170 --> 00:57:14,753
for them every time but no one else gets that character. So it gives them more authorship and

1210
00:57:14,773 --> 00:57:20,537
more ownership to the random generation instead of feeling like full random craziness. And

1211
00:57:20,557 --> 00:57:23,999
that's it for me. So thank you everyone.

1212
00:57:30,732 --> 00:57:32,874
So we have two or three minutes.

1213
00:57:32,894 --> 00:57:34,735
We're going to do a little fun activity here.

1214
00:57:35,276 --> 00:57:36,797
Each one of us is going to go through and kind of talk

1215
00:57:36,857 --> 00:57:38,459
about a game that we absolutely love,

1216
00:57:38,519 --> 00:57:40,821
but would love to see have more procedural generation.

1217
00:57:41,622 --> 00:57:43,043
Does anyone want to volunteer to start?

1218
00:57:45,225 --> 00:57:49,189
I would love to see a procedural layer of any kind

1219
00:57:49,449 --> 00:57:50,810
added to Princess Maker 2.

1220
00:57:55,265 --> 00:58:00,967
I always wanted to see Xevious with procedural levels, because it has like the weird little

1221
00:58:01,067 --> 00:58:04,508
eagle you find on the ground, like a little bit through there, and you're like, what is

1222
00:58:04,548 --> 00:58:05,248
this doing there?

1223
00:58:05,308 --> 00:58:11,470
But it would be more like a cultural exploration of a randomized civilization that I guess

1224
00:58:11,510 --> 00:58:13,730
you're also blowing up at the same time, which is kind of sad.

1225
00:58:16,491 --> 00:58:19,752
I'm really a big fan of music games, so Rez would be my top choice.

1226
00:58:19,792 --> 00:58:23,334
Like, Rez has some procedural elements to it, but it's like, it's more music-generative...

1227
00:58:24,034 --> 00:58:28,216
Reactive and generative, but like, more, you know, procedural instruments or synthesizers

1228
00:58:28,576 --> 00:58:29,616
or patterns and things like that.

1229
00:58:29,656 --> 00:58:31,597
Like, I think it's rich for that kind of thing.

1230
00:58:32,918 --> 00:58:37,580
I'd love to see a game like Oregon Trail have procedurally generated characters or personalities.

1231
00:58:38,000 --> 00:58:41,341
Like, start from here, get to here, long travel experience,

1232
00:58:41,401 --> 00:58:43,982
but with actual more personality that's procedurally generated.

1233
00:58:45,003 --> 00:58:49,017
I'd love to see Mega Man being done procedurally to where the weapons are procedurally generated

1234
00:58:49,057 --> 00:58:51,485
on the bosses and then the levels are procedurally generated as well.

1235
00:58:52,861 --> 00:59:00,125
So I'm going to cheat slightly and I'm going to point to a game that I'd love to sort of bring together those sides of the spectrum that I defined, right?

1236
00:59:00,165 --> 00:59:09,951
Like, so, like a version of Papers, Please, where you have these like procedurally generated characters coming up to you and then obviously you're looking at their documentation, etc.

1237
00:59:09,991 --> 00:59:14,694
But then you can interrogate them further and find out more about their sort of motivations, their...

1238
00:59:16,355 --> 00:59:19,118
and have, I can imagine that being a game where

1239
00:59:19,378 --> 00:59:21,421
sort of, you know, the context of the world is set up

1240
00:59:21,441 --> 00:59:22,622
through noticing the differences

1241
00:59:22,682 --> 00:59:23,824
between the different characters,

1242
00:59:24,124 --> 00:59:26,166
but going deeper on that, so I think that'd be.

1243
00:59:26,847 --> 00:59:29,290
Awesome, and that does it for us for time.

1244
00:59:29,670 --> 00:59:31,392
I guess some of us will be in the wrap-up room

1245
00:59:31,412 --> 00:59:32,894
and Dave will say some words, so.

1246
00:59:33,214 --> 00:59:33,575
Thank you guys.

