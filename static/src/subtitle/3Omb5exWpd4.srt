1
00:00:11,491 --> 00:00:12,111
A quick intro.

2
00:00:13,532 --> 00:00:14,253
My name is Ian Caffino.

3
00:00:14,653 --> 00:00:19,336
I am one of the co-founders of Afterburner Studios, and on Dreamscaper, I was responsible

4
00:00:19,416 --> 00:00:24,939
for design, animation, VFX and UI, among the hundred other things that you have to deal

5
00:00:24,959 --> 00:00:25,859
with as an indie.

6
00:00:26,900 --> 00:00:28,461
So I've been in games for about 10 years now.

7
00:00:28,861 --> 00:00:30,783
Before that, I had a background in graphic design,

8
00:00:31,083 --> 00:00:31,984
motion graphics, and film.

9
00:00:32,725 --> 00:00:34,726
I shipped AAA titles, a AA title,

10
00:00:34,786 --> 00:00:37,489
and now a successful combat-focused indie game.

11
00:00:37,849 --> 00:00:38,790
So how did I get here?

12
00:00:40,511 --> 00:00:42,993
Almost four years ago now, back in the summer of 2018,

13
00:00:43,254 --> 00:00:44,715
I took a big gamble.

14
00:00:45,455 --> 00:00:47,717
I left my job in more traditional development

15
00:00:48,178 --> 00:00:50,640
and started a studio with two friends, Paul Svoboda

16
00:00:50,940 --> 00:00:51,521
and Robert Taylor.

17
00:00:52,822 --> 00:00:54,563
This is us at DreamHack in 2019.

18
00:00:56,302 --> 00:01:01,805
So fast forward and after three years of development and many iterative releases,

19
00:01:02,305 --> 00:01:07,468
we launched Dreamscaper 1.0 on August 5th, 2021 on both PC and Switch.

20
00:01:08,569 --> 00:01:11,931
So you may have also seen it pop up last month on Xbox and Game Pass,

21
00:01:11,951 --> 00:01:12,931
which is really exciting for us.

22
00:01:13,652 --> 00:01:16,853
Since launch, we've had over a quarter of a million players,

23
00:01:16,953 --> 00:01:18,574
which sounds insane to say.

24
00:01:19,115 --> 00:01:24,237
And today it sits at a 91% positive rating on Steam with over 1,800 reviews,

25
00:01:24,637 --> 00:01:25,198
which is very cool.

26
00:01:27,940 --> 00:01:29,980
So quickly, for those who are less familiar with the game,

27
00:01:30,501 --> 00:01:31,781
Dreamscaper is an action roguelike

28
00:01:31,961 --> 00:01:33,762
with a waking, dreaming gameplay cycle.

29
00:01:34,462 --> 00:01:36,343
By day, you experience Cassidy's waking life,

30
00:01:36,943 --> 00:01:38,964
exploring Redhaven, meeting new people,

31
00:01:39,044 --> 00:01:39,904
forming relationships.

32
00:01:40,524 --> 00:01:42,385
By night, you face off against Cassidy's nightmares

33
00:01:42,805 --> 00:01:44,026
in a roguelike dream loop.

34
00:01:44,726 --> 00:01:47,108
So what you're seeing here is a snippet of combat,

35
00:01:47,788 --> 00:01:49,770
something you might encounter.

36
00:01:49,810 --> 00:01:50,911
It's typical in the middle of a run.

37
00:01:51,231 --> 00:01:54,033
I wanted to make sure to leave it unbroken so you guys can get

38
00:01:54,053 --> 00:01:57,436
a sense of what it's like to kind of clear a room of enemies

39
00:01:57,476 --> 00:01:58,817
and the flow and pacing of combat.

40
00:02:08,224 --> 00:02:09,585
So this talk is going to be broken up

41
00:02:10,005 --> 00:02:13,928
into three sections, design, feel, and keys to success.

42
00:02:14,889 --> 00:02:17,030
I want this to be an actionable crash course for everyone.

43
00:02:17,090 --> 00:02:19,190
So here's what I hope you get out of the talk.

44
00:02:20,591 --> 00:02:23,192
In design, an understanding of some of the key areas

45
00:02:23,212 --> 00:02:26,253
to focus on when making a combat system as a developer

46
00:02:26,293 --> 00:02:27,173
with limited resources.

47
00:02:28,553 --> 00:02:30,234
In feel, some of the best practices

48
00:02:30,434 --> 00:02:33,615
for creating visceral and satisfying combat that helped

49
00:02:33,675 --> 00:02:34,575
us refine our game feel.

50
00:02:36,076 --> 00:02:38,296
And finally, in keys to success, personal takeaways

51
00:02:38,317 --> 00:02:40,017
that I had that might help maximize

52
00:02:40,077 --> 00:02:41,317
efficiency on a small team.

53
00:02:42,758 --> 00:02:44,298
All right, let's jump in.

54
00:02:46,651 --> 00:02:49,272
I'd like to start by going over some design considerations

55
00:02:49,732 --> 00:02:51,953
that can help establish a solid foundation

56
00:02:52,053 --> 00:02:53,554
for you to build your combat system from.

57
00:02:54,194 --> 00:02:56,375
First up is establishing strong pillars.

58
00:02:56,715 --> 00:02:57,996
So, as you're all familiar with,

59
00:02:58,416 --> 00:02:59,997
it's incredibly important to define

60
00:03:00,057 --> 00:03:01,478
what your player experience will feel like

61
00:03:02,478 --> 00:03:05,580
and translate that into an actionable target to aim for.

62
00:03:06,380 --> 00:03:08,021
So I want to focus on how you can create

63
00:03:08,341 --> 00:03:10,482
the most effective pillars for combat.

64
00:03:12,022 --> 00:03:13,682
So find the right level of specificity.

65
00:03:14,423 --> 00:03:16,964
The player should feel powerful is a pretty traditional goal.

66
00:03:17,364 --> 00:03:19,465
So how can you adapt that and evolve it

67
00:03:19,705 --> 00:03:21,406
for the player experience that you want?

68
00:03:22,166 --> 00:03:23,127
When you're creating your pillars,

69
00:03:23,287 --> 00:03:25,148
drill down one level of specificity.

70
00:03:25,268 --> 00:03:29,070
So the player should feel powerful can become,

71
00:03:29,570 --> 00:03:30,950
the player should feel highly skilled,

72
00:03:31,251 --> 00:03:32,611
or the player should feel godlike.

73
00:03:33,011 --> 00:03:35,392
The player should feel like an assassin or a commander.

74
00:03:36,250 --> 00:03:39,152
So you can already see how under the umbrella of power fantasy,

75
00:03:39,352 --> 00:03:41,334
there's a massive area to work with it.

76
00:03:42,114 --> 00:03:44,836
Both a commander and an assassin are very powerful figures,

77
00:03:44,896 --> 00:03:47,618
but they exhibit that power in very different ways.

78
00:03:49,139 --> 00:03:52,382
So a pillar that is too general will create misalignment,

79
00:03:52,582 --> 00:03:54,744
as a target area will be too wide.

80
00:03:55,104 --> 00:03:57,085
Inversely, a pillar that is too specific

81
00:03:57,686 --> 00:03:59,287
won't leave a lot of room for flexibility.

82
00:04:00,448 --> 00:04:03,170
So you have to decide what makes the most sense for your team

83
00:04:03,390 --> 00:04:05,672
and your goals so you can nail that appropriate target

84
00:04:05,732 --> 00:04:05,912
area.

85
00:04:08,097 --> 00:04:10,959
So for Dreamscaper, I knew I wanted to create a combat system

86
00:04:11,239 --> 00:04:13,520
that had to be approached strategically,

87
00:04:13,980 --> 00:04:16,242
but allowed for a lot of flexibility and a high skill cap.

88
00:04:16,902 --> 00:04:19,263
Due to its roguelike nature, it was also important

89
00:04:19,283 --> 00:04:21,565
that the systems allowed for variety and replayability.

90
00:04:22,265 --> 00:04:23,086
So I'm gonna list out the pillars

91
00:04:23,246 --> 00:04:24,186
with a brief description of each,

92
00:04:24,766 --> 00:04:26,167
and we'll come back to these throughout the talk

93
00:04:26,207 --> 00:04:28,248
to see how they helped guide our development.

94
00:04:29,866 --> 00:04:31,587
First and foremost is purposeful action.

95
00:04:32,107 --> 00:04:33,507
It's important that the player feel

96
00:04:33,767 --> 00:04:35,008
that their actions have consequences.

97
00:04:35,488 --> 00:04:37,469
Players need to understand their strategic options

98
00:04:38,309 --> 00:04:40,150
and tactically assess each situation on the fly

99
00:04:40,190 --> 00:04:41,190
to take deliberate action.

100
00:04:43,011 --> 00:04:43,551
Improvisational.

101
00:04:44,211 --> 00:04:46,492
Combat should feel fluid and allow room for player freedom.

102
00:04:47,032 --> 00:04:48,673
Multiple approaches to a situation can work

103
00:04:49,333 --> 00:04:50,833
and adaptation on the fly is encouraged.

104
00:04:52,482 --> 00:04:53,242
Tough, but fair.

105
00:04:53,782 --> 00:04:55,623
Players need to feel that their fate is in their hands,

106
00:04:55,923 --> 00:04:58,724
more so than the gods of roguelike RNG.

107
00:04:59,364 --> 00:05:01,685
This means careful consideration of how enemies behave,

108
00:05:02,425 --> 00:05:04,606
balancing and immediately responsive player actions

109
00:05:05,166 --> 00:05:07,047
that allow room for correction when mistakes are made.

110
00:05:09,289 --> 00:05:10,110
Dynamic interactions.

111
00:05:10,430 --> 00:05:12,312
To complement our structural choice of a roguelike,

112
00:05:13,854 --> 00:05:15,295
combat should feel highly dynamic.

113
00:05:15,836 --> 00:05:17,958
Many elements and systems need to overlap

114
00:05:17,998 --> 00:05:19,940
to create unique situations and solutions.

115
00:05:20,660 --> 00:05:22,922
This is where we can bring replayability in at the core

116
00:05:22,942 --> 00:05:23,123
level.

117
00:05:25,612 --> 00:05:26,452
And then strong feedback.

118
00:05:27,072 --> 00:05:30,094
Actions should have weight through sound, visual effects,

119
00:05:30,174 --> 00:05:32,335
and audio, and animation.

120
00:05:32,456 --> 00:05:34,036
Sorry, sound, visual effects, and animation.

121
00:05:34,497 --> 00:05:37,779
Players should feel, know how they impacted the world,

122
00:05:38,199 --> 00:05:40,120
and enjoy the stimuli, which is the classic,

123
00:05:40,420 --> 00:05:41,141
you know, make it feel good.

124
00:05:42,093 --> 00:05:44,316
So as you can see, these pillars were quite high level,

125
00:05:45,077 --> 00:05:47,860
but they had enough specificity so we could align around

126
00:05:48,161 --> 00:05:49,082
what we wanted to achieve.

127
00:05:49,542 --> 00:05:51,925
It wasn't necessary for a pillar to be specifically

128
00:05:52,065 --> 00:05:54,769
about the power fantasy because that would come naturally

129
00:05:54,829 --> 00:05:56,471
while achieving these other pillars.

130
00:06:02,185 --> 00:06:04,508
So, to the meat of it, your player's options.

131
00:06:05,149 --> 00:06:07,552
When we talk about this, generally we talk in terms of verbs.

132
00:06:07,772 --> 00:06:08,593
What can your player do?

133
00:06:09,034 --> 00:06:10,375
Run, jump, shoot, swim.

134
00:06:11,136 --> 00:06:13,239
So, these actions will become the building blocks

135
00:06:13,459 --> 00:06:14,240
for your combat system.

136
00:06:16,058 --> 00:06:17,899
Options create depth, but also complexity.

137
00:06:18,420 --> 00:06:20,621
It's important to be mindful of your player's cognitive load.

138
00:06:20,981 --> 00:06:22,763
The more options a player has at a given time,

139
00:06:23,003 --> 00:06:24,424
the more mental juggling they'll have to do.

140
00:06:25,024 --> 00:06:26,946
Because our core pillars included improvisational

141
00:06:27,226 --> 00:06:28,147
and dynamic interactions,

142
00:06:28,587 --> 00:06:30,488
we had to make sure to support enough options

143
00:06:30,788 --> 00:06:32,870
that allowed for a high level of depth and flexibility.

144
00:06:33,570 --> 00:06:34,811
With that, of course, comes complexity.

145
00:06:34,911 --> 00:06:37,173
So that's why you should always consider

146
00:06:37,193 --> 00:06:38,174
who your core audience is.

147
00:06:38,994 --> 00:06:41,116
What level of complexity is appropriate for them?

148
00:06:42,409 --> 00:06:44,952
For us, we were targeting a mid to hardcore market.

149
00:06:45,673 --> 00:06:48,157
We knew that these types of players generally had familiarity

150
00:06:48,237 --> 00:06:51,322
with both roguelike systems and melee combat systems.

151
00:06:51,763 --> 00:06:54,006
So we knew that we could push complexity fairly safely

152
00:06:54,427 --> 00:06:56,269
without overwhelming our core audience.

153
00:06:58,744 --> 00:07:03,508
If you're avoiding complexity, can you achieve depth through further exploration of fewer options?

154
00:07:04,209 --> 00:07:09,394
In our case, we achieved more depth in combat with a high variety of swappable weapons and abilities that would interact with each other.

155
00:07:10,114 --> 00:07:18,382
This fulfilled our goal of creating dynamic interactions, while allowing players to become experts of the fundamentals of the game through experimentation with different loadouts.

156
00:07:18,923 --> 00:07:21,464
For example, a player always had their melee attack combo

157
00:07:21,544 --> 00:07:23,744
and an alternative attack that set enemies

158
00:07:23,764 --> 00:07:25,245
into one of three states, which we'll talk about.

159
00:07:26,405 --> 00:07:27,646
That meant that players always,

160
00:07:28,086 --> 00:07:29,867
they knew they had those options

161
00:07:30,187 --> 00:07:31,307
regardless of which weapon they had.

162
00:07:31,567 --> 00:07:33,948
So adaptation to new weapons gave the system

163
00:07:33,968 --> 00:07:36,769
a feeling of depth with very little added complexity,

164
00:07:37,469 --> 00:07:38,670
which was important considering how many

165
00:07:38,930 --> 00:07:40,690
fundamental options the player has in Dreamscaper.

166
00:07:42,247 --> 00:07:43,128
So consider your pillars.

167
00:07:43,409 --> 00:07:46,332
How do these options move you towards your design target?

168
00:07:46,893 --> 00:07:48,635
In Dreamscaper, we had a lot of attack options,

169
00:07:48,675 --> 00:07:49,175
like I mentioned.

170
00:07:49,656 --> 00:07:51,398
Two types of melee attacks, ranged attack,

171
00:07:51,578 --> 00:07:52,259
two magic attacks.

172
00:07:52,819 --> 00:07:54,682
This spread was important to make sure the player

173
00:07:54,862 --> 00:07:56,804
felt they had flexibility in how they approached combat.

174
00:07:57,185 --> 00:07:58,626
Additionally, each of these attacks,

175
00:07:59,047 --> 00:08:00,729
leveraged layered systems we're gonna talk about,

176
00:08:00,749 --> 00:08:03,051
that created satisfying interactions between each other.

177
00:08:04,379 --> 00:08:08,101
Finally, with these options, players felt that they had enough of an arsenal

178
00:08:08,241 --> 00:08:11,163
that they could take thought-out actions at any given moment

179
00:08:11,323 --> 00:08:14,065
and they didn't have to approach combat the same way each time.

180
00:08:15,326 --> 00:08:17,747
So how do your pillars inform how the option is implemented?

181
00:08:18,348 --> 00:08:21,330
As an example, we designed our dodge to have immediate invincibility

182
00:08:21,710 --> 00:08:23,251
and be fairly generous in length.

183
00:08:23,691 --> 00:08:25,733
It felt more improvisational and it felt more fair

184
00:08:26,113 --> 00:08:29,395
if players could break out of actions and save themselves from a tough situation.

185
00:08:31,404 --> 00:08:32,504
And finally, consider your scope.

186
00:08:32,984 --> 00:08:36,525
Can you achieve your quality bar for this option,

187
00:08:36,825 --> 00:08:37,745
given the resources you have?

188
00:08:38,706 --> 00:08:40,686
Are you trying to support too many options,

189
00:08:40,826 --> 00:08:41,686
given the resources you have?

190
00:08:42,887 --> 00:08:45,027
As another example, we set a stake in the ground early on

191
00:08:45,067 --> 00:08:46,427
that jumping wouldn't be one of our verbs.

192
00:08:47,187 --> 00:08:48,428
For our team, jumping in combat

193
00:08:48,448 --> 00:08:49,528
would have greatly blown scope.

194
00:08:50,288 --> 00:08:51,508
Now all those previous actions,

195
00:08:51,648 --> 00:08:54,029
like your melee attack, your alt attack,

196
00:08:54,069 --> 00:08:55,349
your ranged attack, your magic attack,

197
00:08:55,569 --> 00:08:57,150
could potentially be accessible while jumping.

198
00:08:58,148 --> 00:08:59,968
So outside of combat, there were also, you know,

199
00:09:00,448 --> 00:09:02,629
traversal considerations and considerations

200
00:09:02,669 --> 00:09:04,249
on art design and engineering.

201
00:09:04,570 --> 00:09:06,290
So at the end of the day, jumping didn't move us

202
00:09:06,470 --> 00:09:07,990
in a meaningful way towards our pillars,

203
00:09:08,271 --> 00:09:10,771
as at least as much as some of the other options

204
00:09:10,791 --> 00:09:11,491
that we were exploring.

205
00:09:12,232 --> 00:09:14,132
So ultimately, player options will make up

206
00:09:14,172 --> 00:09:15,552
that core of your combat system.

207
00:09:15,632 --> 00:09:17,913
So plan to spend some time iterating

208
00:09:18,093 --> 00:09:20,214
and refining on the basics of your system

209
00:09:20,234 --> 00:09:21,674
before starting to add additional layers.

210
00:09:24,217 --> 00:09:25,938
So let's talk about camera and framing,

211
00:09:26,038 --> 00:09:28,440
because it's a critical part of the combat experience

212
00:09:28,781 --> 00:09:31,323
that when done right is mostly undetectable,

213
00:09:31,583 --> 00:09:34,065
but when done wrong, it can have a really huge impact

214
00:09:34,105 --> 00:09:34,766
on player experience.

215
00:09:35,647 --> 00:09:37,728
And it also happens to be one of the very first things

216
00:09:37,828 --> 00:09:39,730
that players will pick up on when they're playing the game.

217
00:09:42,052 --> 00:09:43,954
So camera is a huge driver for genre.

218
00:09:44,634 --> 00:09:47,036
Make sure to think about what that communicates

219
00:09:47,076 --> 00:09:50,099
to your player when you think of real-time strategy, what

220
00:09:50,139 --> 00:09:50,900
game comes to mind.

221
00:09:51,709 --> 00:09:56,091
your player will also carry those notions of genre convention into the game with them.

222
00:09:57,151 --> 00:10:01,673
As an example from Dreamscaper, because our camera is relatively static, far back and top down,

223
00:10:02,053 --> 00:10:07,335
players expected a certain speed and snappiness to the combat that mirrored other similarly framed games.

224
00:10:10,052 --> 00:10:11,453
distance, interactivity, and scope.

225
00:10:11,473 --> 00:10:13,134
So a player-controlled closer camera,

226
00:10:13,254 --> 00:10:15,815
which is very common in a third-person action game,

227
00:10:16,415 --> 00:10:17,556
will add more weight and impact,

228
00:10:17,796 --> 00:10:19,437
but it will require much higher fidelity.

229
00:10:19,937 --> 00:10:21,118
The camera is closer to the action.

230
00:10:21,778 --> 00:10:23,139
Also, it's important to note that they require

231
00:10:23,199 --> 00:10:24,319
a higher degree of iteration.

232
00:10:24,659 --> 00:10:27,201
Players hate nothing more than having to wrangle

233
00:10:27,221 --> 00:10:29,882
a frustrating camera that just won't frame action properly.

234
00:10:31,063 --> 00:10:32,463
So farther cameras, on the other hand,

235
00:10:32,924 --> 00:10:35,005
reduce the weight and impact, and they feel less cinematic,

236
00:10:35,625 --> 00:10:37,666
but the macro view provides the player

237
00:10:37,686 --> 00:10:38,366
with more information.

238
00:10:39,232 --> 00:10:41,475
Additionally, if a player is not controlling the camera,

239
00:10:41,535 --> 00:10:42,737
now there's a ton of variables that you just

240
00:10:42,877 --> 00:10:43,498
don't have to deal with.

241
00:10:44,218 --> 00:10:46,361
Equally important is that a further fixed camera

242
00:10:46,401 --> 00:10:48,103
removes the need for fidelity as well,

243
00:10:48,724 --> 00:10:51,387
since more fine details will get lost at a further distance.

244
00:10:52,609 --> 00:10:54,992
So as you're thinking about what camera might be right

245
00:10:55,032 --> 00:10:57,174
for your pillars, also think about how the camera

246
00:10:57,194 --> 00:10:57,875
will impact scope.

247
00:10:59,432 --> 00:11:03,612
Okay, now that it's said, there are a ton of examples

248
00:11:03,652 --> 00:11:05,633
that do the complete opposite of it, and very successfully.

249
00:11:05,953 --> 00:11:08,073
But in general, the closer your camera is

250
00:11:08,593 --> 00:11:10,154
and the more interactive your camera is,

251
00:11:10,234 --> 00:11:11,214
the higher the scope is going to be.

252
00:11:17,395 --> 00:11:19,256
So in Dreamscaper, like I was saying,

253
00:11:19,296 --> 00:11:21,456
we used a fixed far camera during combat.

254
00:11:22,216 --> 00:11:24,957
Interestingly, this reduced the impact of player feedback,

255
00:11:24,997 --> 00:11:26,497
which went against one of our goals.

256
00:11:27,245 --> 00:11:30,688
But going into the project, we knew that we had to cut scope in some areas,

257
00:11:31,148 --> 00:11:34,791
and using a distant fixed camera would be much more achievable for our team.

258
00:11:35,952 --> 00:11:38,194
To mitigate that, we arrived at a hybrid solution.

259
00:11:38,694 --> 00:11:42,658
We put a lot of time into the dynamic framing of the player and enemies.

260
00:11:43,338 --> 00:11:46,000
This was important to both the pillars, purposeful action, tough but fair.

261
00:11:46,761 --> 00:11:49,183
Players had an almost complete view of the battlefield at all times,

262
00:11:49,884 --> 00:11:53,326
which gave them the necessary information that they needed to make an informed combat decision.

263
00:11:54,367 --> 00:11:56,408
When players had a cluster of enemies around them,

264
00:11:56,689 --> 00:11:58,390
the camera could pull in to emphasize

265
00:11:58,430 --> 00:11:59,710
the immediacy of combat.

266
00:12:00,651 --> 00:12:03,573
So ultimately, we had to move away from one of our goals

267
00:12:04,133 --> 00:12:05,013
in order to stay within scope.

268
00:12:05,614 --> 00:12:08,536
But it moved us closer towards two of our other pillars.

269
00:12:09,336 --> 00:12:10,677
This happened a lot in the project.

270
00:12:10,857 --> 00:12:12,898
The reality is not every decision you make

271
00:12:13,618 --> 00:12:16,280
is going to move you towards all your goals at once.

272
00:12:17,320 --> 00:12:19,263
So we ended up focusing instead on other ways

273
00:12:19,563 --> 00:12:22,586
that we could achieve our strong feedback pillar,

274
00:12:23,467 --> 00:12:24,869
which we'll discuss in the field section.

275
00:12:28,113 --> 00:12:30,095
So I'd also like to talk about how we stacked systems

276
00:12:30,115 --> 00:12:31,737
to create richer feeling combat.

277
00:12:32,177 --> 00:12:33,399
One thing we found effective

278
00:12:33,479 --> 00:12:35,061
was giving ourselves the design space

279
00:12:35,181 --> 00:12:37,884
to let systems grow organically over the project.

280
00:12:39,769 --> 00:12:41,150
This working style allowed for three things.

281
00:12:41,631 --> 00:12:42,432
It kept scope low.

282
00:12:42,892 --> 00:12:44,173
So many of our interlinking systems

283
00:12:44,233 --> 00:12:47,036
were designed and implemented at various stages of the project.

284
00:12:47,256 --> 00:12:49,478
We didn't have to have all the answers right from the outset.

285
00:12:50,218 --> 00:12:52,400
Because we didn't have to do everything at once,

286
00:12:52,901 --> 00:12:54,482
we created contained portions of work

287
00:12:54,542 --> 00:12:57,044
that felt manageable over the course of development.

288
00:12:57,905 --> 00:13:00,347
Features could be more easily analyzed as additive pieces

289
00:13:00,648 --> 00:13:03,150
rather than a component of a whole that would

290
00:13:04,111 --> 00:13:05,011
suffer if stripped away.

291
00:13:07,375 --> 00:13:08,896
Iterative testing, so building in this way

292
00:13:08,916 --> 00:13:10,797
allowed us to fully vet combat earlier

293
00:13:11,518 --> 00:13:12,818
with continuous user feedback.

294
00:13:13,579 --> 00:13:15,961
So there was a much lower risk in losing a lot of time

295
00:13:16,021 --> 00:13:18,062
to a feature that we had kind of worked in the dark on,

296
00:13:18,542 --> 00:13:20,444
only to find out that it just wasn't working

297
00:13:20,464 --> 00:13:21,104
and needed to be cut.

298
00:13:23,205 --> 00:13:24,907
And finally, it allowed ideas to soak.

299
00:13:25,367 --> 00:13:27,188
So having time to sit with the current system

300
00:13:27,348 --> 00:13:29,630
and re-evaluate before committing to a new layer

301
00:13:29,970 --> 00:13:31,571
allowed us to hone in on effective ideas

302
00:13:31,911 --> 00:13:35,193
simply because we had so much exposure to the already

303
00:13:35,293 --> 00:13:35,954
working pieces.

304
00:13:38,590 --> 00:13:40,631
So how do you add depth with less complexity?

305
00:13:41,432 --> 00:13:42,933
As an example, in the middle of the project,

306
00:13:43,293 --> 00:13:44,714
we had a very solid foundation in place.

307
00:13:44,914 --> 00:13:46,755
We had released into early access,

308
00:13:46,935 --> 00:13:47,955
and we had a community of players

309
00:13:48,076 --> 00:13:49,917
who were providing us with feedback and data.

310
00:13:50,797 --> 00:13:52,878
One thing that we felt that we hadn't delivered on, though,

311
00:13:52,938 --> 00:13:54,559
was that pillar of dynamic interactions.

312
00:13:55,019 --> 00:13:56,320
We had some combat systems in place,

313
00:13:56,360 --> 00:13:58,982
such as an item modifier system and a status effect system,

314
00:13:59,422 --> 00:14:00,322
but they felt incomplete.

315
00:14:00,682 --> 00:14:02,563
At the same time, we were also mindful

316
00:14:02,623 --> 00:14:04,204
of overloading our players with too many options.

317
00:14:04,985 --> 00:14:06,967
So our solution was to layer on an elemental system,

318
00:14:07,007 --> 00:14:09,370
assigning elements to items, and that elemental system linked

319
00:14:09,410 --> 00:14:10,671
into the status effect system.

320
00:14:10,831 --> 00:14:13,314
So fire did damage over time, ice froze enemies,

321
00:14:13,714 --> 00:14:15,496
water slowed enemies down, pretty standard stuff.

322
00:14:15,837 --> 00:14:17,559
But we elevated that, now that we

323
00:14:17,619 --> 00:14:19,000
had these pieces speaking to each other,

324
00:14:19,381 --> 00:14:22,124
by encouraging the mixing of elemental attacks

325
00:14:22,244 --> 00:14:24,266
on the same enemy by rewarding the player

326
00:14:24,446 --> 00:14:26,408
with an automatic critical hit that did double damage.

327
00:14:27,269 --> 00:14:28,969
So then we went and built on that system

328
00:14:29,269 --> 00:14:30,850
by creating a set of passive items

329
00:14:30,930 --> 00:14:33,210
that would boost things like your multiplier

330
00:14:33,250 --> 00:14:36,291
to critical hits or the strength of elemental status effects.

331
00:14:37,571 --> 00:14:38,611
So it's important to note, though,

332
00:14:38,671 --> 00:14:40,132
that these systems that we built,

333
00:14:40,172 --> 00:14:41,852
like you're seeing this at the end of the project,

334
00:14:42,812 --> 00:14:44,692
this was done over the course of many, many, many months.

335
00:14:45,893 --> 00:14:47,713
The result was higher player engagement.

336
00:14:48,033 --> 00:14:50,813
The feedback we received from our community was very positive,

337
00:14:50,954 --> 00:14:53,354
and it added a multiplicative layer of depth to the game.

338
00:14:54,302 --> 00:14:56,423
without actually modifying the underlying options.

339
00:14:56,543 --> 00:14:59,505
Each option just had added ways of interacting with each other.

340
00:15:00,946 --> 00:15:02,528
And best of all, for a team of our size,

341
00:15:02,568 --> 00:15:03,268
it was really manageable.

342
00:15:03,548 --> 00:15:05,430
We didn't have to balloon scope going super wide

343
00:15:05,650 --> 00:15:06,410
on content creation.

344
00:15:06,470 --> 00:15:08,232
We could focus on systems

345
00:15:08,272 --> 00:15:09,693
that would leverage what we already had.

346
00:15:10,873 --> 00:15:12,134
So we would continue to use this approach

347
00:15:12,414 --> 00:15:13,195
in all areas of the game.

348
00:15:13,956 --> 00:15:16,217
We layered on a fairly robust meta progression system

349
00:15:16,257 --> 00:15:17,178
towards the end of development

350
00:15:17,438 --> 00:15:19,499
that greatly improved the stickiness of the game,

351
00:15:19,640 --> 00:15:23,182
which was reflected in a large increase in average play time.

352
00:15:24,352 --> 00:15:26,494
That wasn't even something really we were considering doing

353
00:15:27,294 --> 00:15:29,015
at the start of the project or even in the middle of project.

354
00:15:29,055 --> 00:15:30,336
It really came in at the end,

355
00:15:30,376 --> 00:15:31,817
but we gave ourselves that flexibility

356
00:15:31,997 --> 00:15:34,219
in our early designs to add those layers down the road.

357
00:15:37,461 --> 00:15:38,161
So enemies.

358
00:15:39,348 --> 00:15:42,910
There is far more than enough to say on enemy design.

359
00:15:42,930 --> 00:15:45,752
That could be its own talk by much more qualified people.

360
00:15:45,992 --> 00:15:49,194
So I'm going to focus instead on a high impact area that

361
00:15:49,234 --> 00:15:51,396
is often overlooked in indie titles that

362
00:15:51,436 --> 00:15:54,257
has a major effect on your overall design.

363
00:15:55,018 --> 00:15:56,999
And that is hit reactions, enemy states.

364
00:15:57,680 --> 00:15:59,341
So why design elaborate enemy states

365
00:15:59,981 --> 00:16:02,443
and devote resources to creating hit reactions?

366
00:16:03,671 --> 00:16:05,112
Aside from increasing interactivity,

367
00:16:05,532 --> 00:16:07,113
as the player has more ways to impact the enemy,

368
00:16:07,513 --> 00:16:09,874
they also provide really critical utility during combat.

369
00:16:10,514 --> 00:16:13,576
How you want your enemies to respond to your player's input

370
00:16:13,656 --> 00:16:15,457
becomes the building blocks for the structure

371
00:16:15,557 --> 00:16:16,658
and the pacing of combat.

372
00:16:17,358 --> 00:16:18,779
So let's walk through some enemy hit states

373
00:16:18,819 --> 00:16:19,499
we use in Dreamscaper.

374
00:16:21,265 --> 00:16:22,946
So first up, stun and stagger.

375
00:16:23,247 --> 00:16:25,068
Stun is your default state.

376
00:16:25,288 --> 00:16:27,169
It has a weaker hit that will temporarily

377
00:16:27,289 --> 00:16:28,790
set the enemy off balance.

378
00:16:29,110 --> 00:16:31,051
Stagger being a heightened version of that.

379
00:16:31,411 --> 00:16:32,852
It helps with target prioritization.

380
00:16:32,872 --> 00:16:35,133
Enemies take longer to recover from hits.

381
00:16:35,294 --> 00:16:37,735
And it also helps sell the weight,

382
00:16:37,755 --> 00:16:40,176
the difference in weight between different strikes.

383
00:16:41,802 --> 00:16:44,867
Flyback is a very strong reaction that sells big impact.

384
00:16:45,188 --> 00:16:47,031
This is a really important state for combat pacing.

385
00:16:47,632 --> 00:16:50,457
Ending chains with flyback puts space between the player

386
00:16:50,637 --> 00:16:53,141
and the enemy, which resets the offensive situation.

387
00:16:53,281 --> 00:16:55,705
It forces them to re-approach it from another angle.

388
00:16:58,084 --> 00:17:04,271
Pop-up. So pop-up, aside from demonstrating the vertical strength of a hit, it also sets the enemy into a juggle state.

389
00:17:04,871 --> 00:17:08,175
This is really great to encourage players to take offensive action.

390
00:17:08,335 --> 00:17:17,425
If you're finding your player is playing too defensively, something like this is great because it encourages them to press their advantage when they know that the enemy is not going to be able to react.

391
00:17:19,671 --> 00:17:23,154
Knockdown, a state that doesn't allow the same leeway with juggling,

392
00:17:23,534 --> 00:17:25,356
and it doesn't put the enemy as far away,

393
00:17:25,396 --> 00:17:28,739
so there's quicker counterattacks and follow-ups that you can do.

394
00:17:29,039 --> 00:17:31,161
It also helps with shifting focus between enemies,

395
00:17:31,882 --> 00:17:35,065
and of course it emphasizes the downward strength of a hit.

396
00:17:37,290 --> 00:17:39,493
So as another example of layering systems,

397
00:17:40,174 --> 00:17:41,595
after we created our base hit states,

398
00:17:41,876 --> 00:17:44,018
we added additional utility to key hit states.

399
00:17:44,599 --> 00:17:46,941
With flyback, enemies in the way would take damage

400
00:17:47,021 --> 00:17:49,965
when the hit enemy would collide with them

401
00:17:50,005 --> 00:17:50,846
and push them out of the way.

402
00:17:51,226 --> 00:17:53,028
And when the hit enemy would collide with the wall,

403
00:17:53,208 --> 00:17:55,871
they would also take additional damage and rebound.

404
00:17:56,717 --> 00:17:59,300
For pop-up, each hit that juggled the enemy

405
00:17:59,360 --> 00:18:01,502
would increase the damage that they received

406
00:18:01,602 --> 00:18:02,884
when they made contact with the ground.

407
00:18:03,404 --> 00:18:05,166
And then finally for knockdown,

408
00:18:05,347 --> 00:18:07,329
enemies in the surrounding area would receive splash damage

409
00:18:07,449 --> 00:18:08,350
and they get pushed aside.

410
00:18:08,991 --> 00:18:11,293
So all this added extra utility and depth

411
00:18:11,654 --> 00:18:12,955
to our hit reacting system

412
00:18:13,376 --> 00:18:16,059
without adding too much more complexity for the player.

413
00:18:17,220 --> 00:18:19,661
In reality, this can be a large amount of work,

414
00:18:20,401 --> 00:18:22,342
but the payoff for the player is really high.

415
00:18:22,963 --> 00:18:24,964
For us, despite our constraints on animation,

416
00:18:25,224 --> 00:18:27,585
I was the sole animator on the project and on engineering,

417
00:18:28,005 --> 00:18:29,226
Rob was our sole engineer,

418
00:18:29,566 --> 00:18:31,427
we made time to invest in hit reactions.

419
00:18:31,787 --> 00:18:33,268
They were critical to almost all of our pillars

420
00:18:33,828 --> 00:18:35,189
as they affected each of them in different ways.

421
00:18:36,270 --> 00:18:36,950
So with that in mind,

422
00:18:37,490 --> 00:18:38,951
let's go through some high-level considerations

423
00:18:39,271 --> 00:18:39,811
for your states.

424
00:18:43,677 --> 00:18:46,779
So how does the enemy change state based on my attacks?

425
00:18:47,340 --> 00:18:49,281
Does one reaction contain multiple states?

426
00:18:49,441 --> 00:18:50,162
Do any states loop?

427
00:18:50,742 --> 00:18:53,345
If an enemy is hit within a specific state, what happens?

428
00:18:54,165 --> 00:18:55,286
So you work through the state machine

429
00:18:55,606 --> 00:18:56,807
and figure out how these interactions

430
00:18:56,827 --> 00:18:57,948
will work for your system.

431
00:18:58,369 --> 00:18:59,850
This can add a lot of work on gameplay

432
00:19:00,691 --> 00:19:02,492
and gameplay programming and animation.

433
00:19:02,992 --> 00:19:04,934
So states can be as simple as like a light hit

434
00:19:04,974 --> 00:19:05,514
or a heavy hit.

435
00:19:06,015 --> 00:19:07,316
The reason we ended up with so many states

436
00:19:07,636 --> 00:19:10,699
in Dreamscaper is to allow for player improvisation.

437
00:19:10,879 --> 00:19:11,780
And of course, because it creates

438
00:19:11,800 --> 00:19:13,241
that really visceral feedback that we wanted.

439
00:19:15,905 --> 00:19:18,108
Can my player interrupt actions? When and why?

440
00:19:18,468 --> 00:19:21,392
How long does it take for an enemy to recover from a light attack,

441
00:19:21,672 --> 00:19:22,873
a heavy attack, special attack?

442
00:19:23,414 --> 00:19:27,239
Recovery timings will be largely driven by the speed and pacing of your combat.

443
00:19:28,010 --> 00:19:30,352
So should my player be able to stunlock an enemy?

444
00:19:30,813 --> 00:19:33,035
This control via enemy hit states

445
00:19:33,255 --> 00:19:34,496
was really important for Dreamscaper

446
00:19:34,756 --> 00:19:36,478
as it meant players had to adapt on the fly

447
00:19:36,738 --> 00:19:38,339
and properly stun and stagger enemies

448
00:19:38,539 --> 00:19:39,360
to deal with larger groups.

449
00:19:40,061 --> 00:19:42,423
This greatly assisted with target prioritization,

450
00:19:42,843 --> 00:19:44,685
which encouraged purposeful player action

451
00:19:45,225 --> 00:19:46,827
because players had to learn how to manage

452
00:19:47,307 --> 00:19:48,088
the enemies around them.

453
00:19:50,658 --> 00:19:55,741
And then finally for challenge, how are these state considerations augmented by increased challenge?

454
00:19:55,961 --> 00:20:00,725
Do different enemies have different responses based on enemy power or game progression or player power?

455
00:20:01,365 --> 00:20:04,407
In Dreamscaper, we used different hit states to challenge the player.

456
00:20:04,727 --> 00:20:08,550
Many early game enemies could be stunned indefinitely as the player progressed.

457
00:20:09,486 --> 00:20:10,607
Later enemies could only be staggered,

458
00:20:10,847 --> 00:20:12,228
and eventually they might be immune

459
00:20:12,348 --> 00:20:13,810
to a specific hit state altogether.

460
00:20:14,971 --> 00:20:17,413
So hit reactions not only sell the impact of a hit,

461
00:20:17,853 --> 00:20:19,554
but they also add a functional layer of depth

462
00:20:19,895 --> 00:20:20,915
to your combat system.

463
00:20:21,456 --> 00:20:23,317
In the next section, I'm gonna talk more

464
00:20:23,377 --> 00:20:24,719
about what you can do to maximize

465
00:20:24,739 --> 00:20:26,640
that feeling of a hit reaction.

466
00:20:28,382 --> 00:20:30,583
Speaking of which, this section is gonna go over

467
00:20:30,603 --> 00:20:33,286
a variety of areas that we focused on in Dreamscaper

468
00:20:33,526 --> 00:20:35,488
to make sure combat was as satisfying

469
00:20:35,528 --> 00:20:36,448
as possible for our players.

470
00:20:37,982 --> 00:20:39,443
first of which being responsiveness.

471
00:20:41,625 --> 00:20:43,907
So the shortest time from a player's input

472
00:20:44,027 --> 00:20:46,209
to the corresponding effect on screen

473
00:20:46,229 --> 00:20:47,330
will feel the most responsive.

474
00:20:48,031 --> 00:20:51,614
That said, there is a balancing act

475
00:20:51,674 --> 00:20:55,018
between fidelity of action and immediacy of response.

476
00:20:55,498 --> 00:20:57,100
For a title like ours with limited resources,

477
00:20:57,260 --> 00:20:59,722
we prioritized snappy game feel over fidelity.

478
00:21:01,709 --> 00:21:04,672
Input latency, that's another thing that's important to be mindful of.

479
00:21:05,553 --> 00:21:06,535
We often take it for granted.

480
00:21:07,336 --> 00:21:10,179
On Switch, our engineer Rob found that there was native input latency

481
00:21:10,199 --> 00:21:13,243
due to how UE4's game thread would sync with the Trender thread.

482
00:21:14,364 --> 00:21:16,707
Please don't ask me about that. That's all I know about that so far.

483
00:21:17,507 --> 00:21:24,131
So this resulted in fairly high input latency, about 130 milliseconds, which is like 8 frames at 60 FPS. It's a lot.

484
00:21:24,652 --> 00:21:28,974
So Rob cut the input latency almost in half by using a low latency frame syncing option.

485
00:21:29,594 --> 00:21:33,877
So for things like dodging and parrying, that split second reaction is really, really critical to the player.

486
00:21:34,857 --> 00:21:38,221
So we went as far as increasing the input window on parrying on Switch

487
00:21:38,821 --> 00:21:41,964
so it would feel on par with PC in terms of responsiveness.

488
00:21:42,084 --> 00:21:46,809
We were less concerned about having a mechanical difference between the two platforms

489
00:21:46,989 --> 00:21:50,573
as much as we were concerned with them both feeling appropriate, feeling right for the player.

490
00:21:54,104 --> 00:21:55,144
Blend times for animations.

491
00:21:56,004 --> 00:21:59,265
So shorter blend times will feel more responsive,

492
00:21:59,425 --> 00:22:00,285
especially with attacks.

493
00:22:00,766 --> 00:22:02,886
Longer blend times need higher fidelity animations

494
00:22:02,966 --> 00:22:04,707
to sell the weight of the blend.

495
00:22:05,167 --> 00:22:07,908
And blend times that are too long risk feeling sluggish

496
00:22:08,568 --> 00:22:09,808
and unresponsive.

497
00:22:10,788 --> 00:22:12,669
So for Dreamscaper, we go as far as making

498
00:22:12,829 --> 00:22:13,989
attack startup blends instant.

499
00:22:15,958 --> 00:22:18,641
but we have anticipation, follow-through, and recovery

500
00:22:18,682 --> 00:22:19,823
to give actions weight.

501
00:22:20,244 --> 00:22:21,886
In the example up here, you can see

502
00:22:22,206 --> 00:22:25,371
we're jumping right into the anticipation pose of the attack.

503
00:22:25,731 --> 00:22:27,033
This will help it feel responsive

504
00:22:27,273 --> 00:22:29,256
while still allowing for those starter frames

505
00:22:29,276 --> 00:22:31,239
to play through, allowing you to balance

506
00:22:31,339 --> 00:22:33,381
and make sure the attack feels believable.

507
00:22:35,660 --> 00:22:41,022
Locomotion response, longer acceleration periods will lend more weight to your movement, but feel less responsive.

508
00:22:41,402 --> 00:22:44,864
As a lower fidelity title, our movement has almost no acceleration period.

509
00:22:45,104 --> 00:22:54,107
We wanted it to feel as responsive as possible, and we really didn't want to overcommit on animation for things like weight shifting or changes in direction.

510
00:22:56,191 --> 00:22:57,112
and we favored player input.

511
00:22:57,672 --> 00:22:59,133
We let players interrupt actions.

512
00:22:59,914 --> 00:23:02,356
So we came up with a hierarchy of inputs

513
00:23:02,396 --> 00:23:04,338
to determine how interrupts should work.

514
00:23:04,918 --> 00:23:08,181
Dodge and block were critical to have very low response time

515
00:23:08,541 --> 00:23:09,943
and high interrupt capability.

516
00:23:10,443 --> 00:23:13,185
So we allow players to break out of almost any action

517
00:23:13,305 --> 00:23:14,326
with a defensive response.

518
00:23:15,547 --> 00:23:17,289
This keeps combat feeling tough but fair

519
00:23:17,649 --> 00:23:19,150
because players have the maximum control

520
00:23:19,230 --> 00:23:21,772
of their defensive options in order to react to challenges

521
00:23:22,053 --> 00:23:23,134
and improvise as needed.

522
00:23:24,109 --> 00:23:27,371
On the flip side, attacks had both startup and recovery,

523
00:23:27,531 --> 00:23:29,252
so players still had to think purposefully

524
00:23:29,552 --> 00:23:31,253
about the offensive actions that they were taking.

525
00:23:33,654 --> 00:23:36,236
So it wouldn't be a talk about combat

526
00:23:36,276 --> 00:23:37,357
without talking about animation,

527
00:23:37,637 --> 00:23:41,539
because animation and feel are so tightly coupled together.

528
00:23:42,000 --> 00:23:44,061
So I'm gonna go through some best practices for us,

529
00:23:44,781 --> 00:23:47,363
first of which being leveraging the principles of animation.

530
00:23:48,988 --> 00:23:50,048
Quickly, if you're not familiar with it,

531
00:23:50,068 --> 00:23:51,789
there's a book that was written in the 80s

532
00:23:51,949 --> 00:23:54,050
by some Disney animators that cataloged work

533
00:23:54,310 --> 00:23:56,531
from the 30s up, kind of codifying

534
00:23:56,831 --> 00:23:59,753
what these principles of animation would be for animators.

535
00:24:00,773 --> 00:24:02,694
So as a sole animator, I didn't have the time

536
00:24:02,774 --> 00:24:04,955
to create very high fidelity animation.

537
00:24:05,235 --> 00:24:07,837
So instead I used my understanding of animation principles

538
00:24:07,857 --> 00:24:09,978
to try to create a higher quality feeling

539
00:24:10,098 --> 00:24:12,179
without the scope complexity of the fidelity.

540
00:24:12,759 --> 00:24:14,700
I'm going to run through this at a very, very high level

541
00:24:15,000 --> 00:24:16,842
and touch on elements that I felt were most important

542
00:24:17,102 --> 00:24:18,623
to Dreamscaper's asset creation.

543
00:24:20,444 --> 00:24:22,285
First up is anticipation and follow through.

544
00:24:22,925 --> 00:24:25,006
They're two of the most important principles to convey weight,

545
00:24:25,206 --> 00:24:26,867
which will make your combat feel really meaty.

546
00:24:27,468 --> 00:24:29,609
This will help actions feel like they have intuitive timing,

547
00:24:29,909 --> 00:24:31,530
as they will follow more realistic physics.

548
00:24:32,311 --> 00:24:34,932
You can see the example here is really exaggerated,

549
00:24:35,332 --> 00:24:37,854
but it's that exaggeration that actually gives the animation

550
00:24:38,414 --> 00:24:40,255
the feeling of believability and of strength.

551
00:24:43,866 --> 00:24:45,427
Secondary and overlapping action.

552
00:24:46,227 --> 00:24:48,488
We use secondary and overlapping action

553
00:24:48,608 --> 00:24:50,609
to sell realism and fidelity.

554
00:24:51,590 --> 00:24:54,211
Animations that properly utilize overlapping action

555
00:24:54,731 --> 00:24:55,772
will feel higher quality.

556
00:24:56,732 --> 00:24:58,473
The human eye is really, really good

557
00:24:58,833 --> 00:25:01,995
at intuitively picking up discrepancies

558
00:25:02,095 --> 00:25:02,835
in natural movement.

559
00:25:03,216 --> 00:25:04,336
And one of the most egregious things

560
00:25:04,716 --> 00:25:05,637
is having too many elements

561
00:25:05,817 --> 00:25:07,858
that are completely in sync with each other.

562
00:25:07,878 --> 00:25:10,039
It feels unnatural and stiff and robotic.

563
00:25:11,229 --> 00:25:16,596
One simple thing you can do to help increase the fidelity of animation is adding trailing elements to the character.

564
00:25:16,756 --> 00:25:20,160
So things like scarves, claws, hair are really effective for this.

565
00:25:20,721 --> 00:25:24,085
We added a kind of a trailing floaty scarf to our main character Cassidy.

566
00:25:24,385 --> 00:25:29,131
It gave a nice sense of secondary motion and we simmed it so it was very little added scope for us.

567
00:25:33,821 --> 00:25:34,522
Slow in and slow out.

568
00:25:35,463 --> 00:25:39,688
Slow in and out is a principle that increases the believability of animations by providing

569
00:25:39,728 --> 00:25:41,370
more realistic momentum and inertia.

570
00:25:42,492 --> 00:25:46,837
Remember going back to us being highly sensitive to motion, easy in and out is important to

571
00:25:46,857 --> 00:25:48,739
convey a believable weight of an action.

572
00:25:50,842 --> 00:25:52,684
And then finally exaggeration and strong posing.

573
00:25:53,797 --> 00:25:57,179
You'll have to exaggerate actions a lot more than you initially anticipate,

574
00:25:57,619 --> 00:25:58,880
especially at smaller screen sizes.

575
00:25:59,440 --> 00:26:03,102
You can get away with a lot in terms of fidelity if the poses captured are strong.

576
00:26:03,522 --> 00:26:07,184
Especially for fast combat, players need to be able to register action

577
00:26:07,484 --> 00:26:10,506
that's often obscured by many things, like hit effects and screen shake.

578
00:26:11,206 --> 00:26:13,567
So an exaggerated pose will stand out much more

579
00:26:14,208 --> 00:26:15,548
for players to be able to read at a glance.

580
00:26:19,443 --> 00:26:21,524
So I highly encourage, if you couldn't tell,

581
00:26:22,084 --> 00:26:23,824
anyone that is unfamiliar with this

582
00:26:23,864 --> 00:26:25,425
to look into the 12 principles of animation

583
00:26:25,725 --> 00:26:26,946
for a much richer explanation.

584
00:26:27,726 --> 00:26:29,927
If there's one place to spend a lot of time

585
00:26:31,067 --> 00:26:32,788
as a combat-focused indie, it's this,

586
00:26:33,268 --> 00:26:35,348
because your combat is going to live and die

587
00:26:35,589 --> 00:26:36,869
with the quality of your animations.

588
00:26:36,929 --> 00:26:39,070
Sorry, live or die with the quality of your animations.

589
00:26:40,870 --> 00:26:41,751
And that has nothing to do

590
00:26:42,071 --> 00:26:44,432
with the detail of the animation itself.

591
00:26:44,892 --> 00:26:45,932
These principles can be applied

592
00:26:46,052 --> 00:26:47,473
to animation of all fidelity.

593
00:26:48,802 --> 00:26:51,845
So even if you're on the design side or on the engineering side,

594
00:26:52,766 --> 00:26:56,689
it's valuable to develop a vocabulary on why something is

595
00:26:56,769 --> 00:27:00,332
or isn't working to align everyone on what

596
00:27:00,452 --> 00:27:03,075
is good, solid combat feel.

597
00:27:06,565 --> 00:27:08,066
So adding forward momentum to attacks

598
00:27:08,186 --> 00:27:09,807
will help them to connect more easily.

599
00:27:10,227 --> 00:27:11,707
Coming up, we're gonna talk about other ways

600
00:27:11,727 --> 00:27:13,288
that you can help player attacks connect.

601
00:27:13,888 --> 00:27:14,889
But one thing to be mindful of

602
00:27:15,129 --> 00:27:17,130
is that baking a certain amount of translation

603
00:27:17,530 --> 00:27:18,430
right into the animation

604
00:27:18,670 --> 00:27:21,371
will help any additive procedural translation

605
00:27:21,411 --> 00:27:22,332
feel much more natural.

606
00:27:23,192 --> 00:27:24,993
So players are more likely to miss an attack

607
00:27:25,433 --> 00:27:26,694
that doesn't move them towards their target.

608
00:27:26,774 --> 00:27:29,975
And a missed attack in that way is a player error,

609
00:27:30,175 --> 00:27:32,996
but it's often a source of frustration at the system

610
00:27:33,196 --> 00:27:35,237
because the output does not match their intention.

611
00:27:37,899 --> 00:27:39,379
Let's talk a bit about enemy animation.

612
00:27:39,399 --> 00:27:41,260
So if you're a single-player title or creating AI,

613
00:27:41,820 --> 00:27:43,820
it's important to think about enemy animation

614
00:27:44,080 --> 00:27:44,961
differently than player.

615
00:27:45,501 --> 00:27:48,201
For players, our goal is to make the output of their action

616
00:27:48,321 --> 00:27:49,502
as satisfying as possible.

617
00:27:50,082 --> 00:27:52,162
For enemies, our goal is to make the output of their action

618
00:27:52,242 --> 00:27:54,023
as readable as possible by players.

619
00:27:54,763 --> 00:27:56,823
This leads us to telegraphing enemy intention.

620
00:27:57,424 --> 00:28:00,824
Telegraphing doesn't necessarily mean long attack wind-ups

621
00:28:01,084 --> 00:28:03,245
as much as it means clear attack wind-ups.

622
00:28:03,905 --> 00:28:06,546
It gives the player the ability to read and learn

623
00:28:06,566 --> 00:28:07,426
enemy attack patterns.

624
00:28:08,219 --> 00:28:13,067
So the characteristics of good telegraphing are clear poses, exaggerated poses will create

625
00:28:13,127 --> 00:28:18,016
the bookmark in a player's mind that they need to remember the purpose, hierarchy, and

626
00:28:18,076 --> 00:28:18,877
timing of an attack.

627
00:28:20,248 --> 00:28:22,729
Strong anticipation, once again, leveraging those principles

628
00:28:22,749 --> 00:28:23,290
we talked about.

629
00:28:23,890 --> 00:28:27,052
Giving an attack starter frames is just not enough.

630
00:28:27,573 --> 00:28:29,494
It needs to follow natural physical motion.

631
00:28:30,014 --> 00:28:31,655
At higher difficulties, this can be

632
00:28:31,735 --> 00:28:33,476
used to subvert player expectation,

633
00:28:34,057 --> 00:28:37,199
catching players with feints and variations in speed and timing.

634
00:28:38,059 --> 00:28:39,640
And if you've been playing any Elden Ring,

635
00:28:39,740 --> 00:28:41,501
you know how incredibly tricky it can get.

636
00:28:42,702 --> 00:28:43,603
So sound indication.

637
00:28:44,423 --> 00:28:45,844
Sound cues before attacks are really

638
00:28:45,904 --> 00:28:48,666
critical to giving players another piece of the pattern

639
00:28:48,686 --> 00:28:49,246
to latch on to.

640
00:28:50,052 --> 00:28:52,053
They become especially valuable for offscreen enemies

641
00:28:52,233 --> 00:28:53,014
and obscured enemies.

642
00:28:55,395 --> 00:28:57,416
Visual effects often as a complement

643
00:28:57,456 --> 00:28:58,236
to the animation itself.

644
00:28:58,356 --> 00:28:59,677
And within reason, you have to be

645
00:28:59,717 --> 00:29:01,658
mindful of creating too much visual noise on the screen

646
00:29:01,698 --> 00:29:03,179
and then making something less readable.

647
00:29:05,020 --> 00:29:06,060
And finally, proper hierarchy.

648
00:29:06,280 --> 00:29:07,641
So this means that there are three different enemies

649
00:29:07,701 --> 00:29:08,081
on the screen.

650
00:29:08,101 --> 00:29:09,582
And they're doing three different attacks

651
00:29:10,242 --> 00:29:11,003
at the same time.

652
00:29:11,123 --> 00:29:13,344
It needs to be clear to the player which is most dangerous.

653
00:29:13,724 --> 00:29:15,305
This can be really challenging, but it will help

654
00:29:15,325 --> 00:29:16,445
them prioritize their focus.

655
00:29:18,184 --> 00:29:23,147
For Dreamscaper, we use telegraphing to make sure that players can take purposeful action

656
00:29:23,987 --> 00:29:27,850
by providing them with the needed information to make an informed choice in combat.

657
00:29:28,710 --> 00:29:33,453
Ultimately, it keeps combat feeling fair as players realize they had the information they

658
00:29:33,473 --> 00:29:34,713
needed to avoid a mistake.

659
00:29:37,411 --> 00:29:38,552
And then finally, recovery timing.

660
00:29:39,092 --> 00:29:41,114
Build enemy recovery time right into the animation.

661
00:29:41,614 --> 00:29:43,275
When recovery time is baked in, it

662
00:29:43,295 --> 00:29:44,956
will feel much more natural and fluid.

663
00:29:45,437 --> 00:29:47,778
Clear recoveries can help players gauge how much time

664
00:29:47,798 --> 00:29:49,680
they have before an enemy can attack again.

665
00:29:52,502 --> 00:29:54,803
So we talked in the design portion about hit reactions

666
00:29:55,604 --> 00:29:57,345
and how critical they are to polish combat.

667
00:29:57,685 --> 00:29:58,806
So let's walk through some ways we

668
00:29:58,846 --> 00:30:01,028
created really satisfying hit reactions in Dreamscaper.

669
00:30:03,369 --> 00:30:04,510
So instant reaction.

670
00:30:07,722 --> 00:30:09,203
We avoided blending into a reaction.

671
00:30:09,944 --> 00:30:12,667
We found that reactions will feel much stronger

672
00:30:12,847 --> 00:30:15,170
if they instantly play when an attack connects.

673
00:30:16,274 --> 00:30:22,138
The player will fill in the missing gap between the previous state and the hit state in their

674
00:30:22,178 --> 00:30:25,300
own mind, which will create this impression of a very powerful impulse.

675
00:30:26,081 --> 00:30:28,502
This sort of thing, of course, works best at lower fidelity.

676
00:30:29,243 --> 00:30:33,586
With our far camera, we need to emphasize hits with big deltas between the poses.

677
00:30:34,026 --> 00:30:38,048
A closer camera might need a more moderate approach, might need some degree of blending

678
00:30:38,269 --> 00:30:39,790
so it doesn't feel too awkward or unnatural.

679
00:30:42,242 --> 00:30:44,885
We also jump right into the middle of a hit reaction.

680
00:30:45,245 --> 00:30:46,987
This ensures that the delta between the previous state

681
00:30:47,027 --> 00:30:48,349
and the hit state can really be felt.

682
00:30:48,890 --> 00:30:51,853
And you don't need blending because the hit itself

683
00:30:52,174 --> 00:30:53,575
creates a natural transition

684
00:30:54,256 --> 00:30:56,319
between the enemy's previous state and their current state.

685
00:30:57,455 --> 00:30:59,337
In fact, you'd be surprised how much you can get away with.

686
00:30:59,797 --> 00:31:01,478
If you don't have resources or time

687
00:31:01,759 --> 00:31:05,081
to do reactions from the front and the back and the sides,

688
00:31:06,302 --> 00:31:09,324
rotate the enemy towards the player at the moment of hit.

689
00:31:09,444 --> 00:31:10,745
And it will feel a lot more natural

690
00:31:11,245 --> 00:31:12,286
for that hit reaction to play

691
00:31:12,526 --> 00:31:13,567
than you might think so on paper.

692
00:31:15,783 --> 00:31:17,344
And then hit reactions sell strength.

693
00:31:17,984 --> 00:31:20,485
This may seem obvious, but it's important to note

694
00:31:20,505 --> 00:31:22,926
that the perception of strength of the player's actions

695
00:31:22,986 --> 00:31:25,307
will live and die with the scale of the impact.

696
00:31:25,767 --> 00:31:28,209
A strong straight punch might send an enemy reeling,

697
00:31:28,309 --> 00:31:30,049
but it could also launch them 30 feet back.

698
00:31:30,750 --> 00:31:32,230
We used hit reactions to communicate

699
00:31:32,270 --> 00:31:33,571
the variety of attack power.

700
00:31:35,452 --> 00:31:36,432
And then with the above example,

701
00:31:36,773 --> 00:31:38,533
it might make sense for a small enemy

702
00:31:38,874 --> 00:31:40,314
to fly back after a straight punch,

703
00:31:40,914 --> 00:31:43,816
but a large enemy might only be slightly knocked off balance.

704
00:31:44,978 --> 00:31:47,559
Once again, utilizing believable motion and physics

705
00:31:47,599 --> 00:31:49,740
to convey weight and impact.

706
00:31:50,460 --> 00:31:52,040
Here's an example where the same attack

707
00:31:52,100 --> 00:31:53,421
affects enemies differently.

708
00:31:56,582 --> 00:31:59,022
So in order to fulfill our pillar of dynamic interactions,

709
00:31:59,162 --> 00:32:00,563
we needed to introduce variety.

710
00:32:00,963 --> 00:32:01,723
We found that enemies,

711
00:32:02,463 --> 00:32:05,244
when they have varied reactions to your attacks,

712
00:32:05,644 --> 00:32:08,165
the system as a whole will feel much more responsive

713
00:32:08,645 --> 00:32:11,226
and interactive, and it's just a lot more fun.

714
00:32:14,376 --> 00:32:18,102
So let's also talk about some ways that you can create an invisible guiding hand that

715
00:32:18,142 --> 00:32:22,851
will assist your player and make sure that the output of the system is as close as possible

716
00:32:22,911 --> 00:32:23,652
to their intention.

717
00:32:25,779 --> 00:32:26,119
Aim Assist.

718
00:32:27,280 --> 00:32:29,662
In Dreamscaper, we utilize both a melee aim assist

719
00:32:29,762 --> 00:32:30,562
and a ranged aim assist.

720
00:32:31,023 --> 00:32:32,544
The goal here is to balance challenge

721
00:32:32,844 --> 00:32:34,285
while rewarding player intention.

722
00:32:34,885 --> 00:32:36,686
If a player wants to attack an enemy

723
00:32:36,746 --> 00:32:38,728
but is slightly off target, we correct for that

724
00:32:38,888 --> 00:32:39,668
because it just feels better.

725
00:32:39,868 --> 00:32:41,289
It's more fun for those hits to connect.

726
00:32:42,010 --> 00:32:43,270
With melee aim assist, many titles

727
00:32:43,571 --> 00:32:45,132
not only rotate the player towards the enemy,

728
00:32:45,372 --> 00:32:46,152
but they also translate them,

729
00:32:46,172 --> 00:32:47,193
which we're going to talk about in a second.

730
00:32:48,054 --> 00:32:50,955
You can see we're fairly generous with it.

731
00:32:50,975 --> 00:32:53,377
You can see the amount of leeway that we give players

732
00:32:53,417 --> 00:32:54,838
before things start to snap into place.

733
00:32:55,779 --> 00:32:57,779
For accessibility purposes, I'd also highly recommend

734
00:32:57,979 --> 00:32:59,600
that you allow these to be configurable.

735
00:32:59,920 --> 00:33:04,262
Many players might prefer or need a stronger aim assist

736
00:33:04,362 --> 00:33:05,022
to enjoy your title.

737
00:33:07,803 --> 00:33:11,044
This is quite common in action titles, magnetism.

738
00:33:11,925 --> 00:33:13,105
So during the startup of an attack,

739
00:33:13,445 --> 00:33:16,026
the player will automatically translate to an enemy in range

740
00:33:16,066 --> 00:33:16,907
to make sure it connects.

741
00:33:17,167 --> 00:33:19,228
You'll see the most extreme examples of these

742
00:33:19,268 --> 00:33:22,029
in things like Spider-Man and Arkham series

743
00:33:22,109 --> 00:33:23,649
and Shadow of Mordor.

744
00:33:24,830 --> 00:33:26,391
For Dreamscaper, we chose a different option.

745
00:33:26,512 --> 00:33:29,074
Because of our purposeful action pillar,

746
00:33:29,394 --> 00:33:32,457
we wanted players to carefully consider positioning.

747
00:33:32,818 --> 00:33:34,940
So instead of magnetizing the player to the enemy,

748
00:33:35,260 --> 00:33:37,542
we had data-driven hit translation system

749
00:33:37,703 --> 00:33:38,824
on a per-attack basis.

750
00:33:39,324 --> 00:33:42,828
We scaled the natural route motion of the hit reaction

751
00:33:43,168 --> 00:33:45,730
to translate the enemy away or towards the player

752
00:33:45,851 --> 00:33:47,212
by a specified amount of units.

753
00:33:48,241 --> 00:33:49,042
So it's had two purposes.

754
00:33:49,762 --> 00:33:52,384
One is, of course, to add or reduce the impact

755
00:33:53,085 --> 00:33:55,467
on a per hit basis without exploding animation budget,

756
00:33:55,627 --> 00:33:58,710
having to animate different distances of hit reactions.

757
00:33:59,590 --> 00:34:01,612
The other purpose, but it's primary purpose,

758
00:34:02,273 --> 00:34:05,015
is to set the enemy up at the appropriate distance

759
00:34:05,275 --> 00:34:07,677
for the player for a clean follow-up attack

760
00:34:07,697 --> 00:34:08,338
during a combo.

761
00:34:08,898 --> 00:34:11,400
This sort of thing was important to align player intention

762
00:34:12,161 --> 00:34:14,122
with the result while not sacrificing too much

763
00:34:14,302 --> 00:34:16,124
on the core experience that we wanted to provide them.

764
00:34:18,326 --> 00:34:19,126
And then input buffering.

765
00:34:19,647 --> 00:34:21,968
We provide very generous input windows in Dreamscaper.

766
00:34:22,288 --> 00:34:23,989
Players have fairly long periods of time

767
00:34:24,049 --> 00:34:29,132
to chain combos during an attack or attack out of a dodge.

768
00:34:29,592 --> 00:34:32,454
We register early inputs and buffer that

769
00:34:32,514 --> 00:34:34,235
into the next action when the system

770
00:34:34,275 --> 00:34:38,157
is ready for those inputs so the player doesn't feel like

771
00:34:38,177 --> 00:34:39,037
their inputs are getting dropped.

772
00:34:40,018 --> 00:34:42,899
On the flip side, we are also careful about making sure

773
00:34:42,919 --> 00:34:44,700
that a player who's mashing their inputs

774
00:34:44,780 --> 00:34:45,641
aren't over-registered.

775
00:34:46,421 --> 00:34:48,142
It's another source of frustration at the system.

776
00:34:53,047 --> 00:34:57,330
So we provide assistance as well by modifying hitboxes and hurtboxes

777
00:34:58,290 --> 00:34:59,911
in a variety of ways that are beneficial to the player.

778
00:35:00,612 --> 00:35:03,213
You can see here how the hit doesn't even connect.

779
00:35:03,733 --> 00:35:07,075
But we're okay with that because we're prioritizing feel over fidelity.

780
00:35:08,036 --> 00:35:12,118
So along with the basics like giving player attacks really generous hitboxes

781
00:35:12,579 --> 00:35:14,140
and enemies precise hitboxes,

782
00:35:14,480 --> 00:35:17,001
we also have multiple hitboxes that we author per attack.

783
00:35:17,901 --> 00:35:19,363
So for example, on our projectiles,

784
00:35:20,345 --> 00:35:22,628
we have separate enemy collision, environment collision,

785
00:35:22,889 --> 00:35:24,010
and breakable object collision.

786
00:35:24,631 --> 00:35:26,774
We can make enemy collision quite generous for the player

787
00:35:27,175 --> 00:35:28,978
while ensuring that projectiles don't get caught

788
00:35:29,458 --> 00:35:30,420
on environmental obstacles.

789
00:35:30,460 --> 00:35:31,842
It just doesn't feel very fun.

790
00:35:35,143 --> 00:35:35,663
And Game Feel.

791
00:35:36,184 --> 00:35:37,664
Game Feel is really the culmination

792
00:35:37,885 --> 00:35:40,206
of so many components, many of which we discussed.

793
00:35:40,486 --> 00:35:43,188
So in this section, I want to focus on some additive

794
00:35:43,288 --> 00:35:45,049
elements that you can implement that

795
00:35:45,089 --> 00:35:48,171
will improve the intangible sensation that a game just

796
00:35:48,631 --> 00:35:49,151
feels right.

797
00:35:49,932 --> 00:35:51,693
This was especially important for us.

798
00:35:52,373 --> 00:35:55,475
We wanted to satisfy our pillars of providing strong feedback

799
00:35:55,495 --> 00:35:56,796
that I said we'd come back to.

800
00:35:57,436 --> 00:36:00,238
So here is an attack without any of its visual registration

801
00:36:00,278 --> 00:36:00,638
components.

802
00:36:01,119 --> 00:36:02,820
Of course, it looks like nothing is happening.

803
00:36:04,142 --> 00:36:08,807
So if we add a hit flash, a compliment to all the other impact related effects,

804
00:36:09,507 --> 00:36:13,492
highlighting the affected character with an attention-grabbing flash of color will emphasize the impact.

805
00:36:14,052 --> 00:36:16,254
We also threw in some damage numbers here as well.

806
00:36:16,535 --> 00:36:18,777
The more information in this way that you can give to the player,

807
00:36:18,817 --> 00:36:21,660
the stronger that feedback will be as long as it's not overwhelming.

808
00:36:23,035 --> 00:36:25,098
Then let's also layer in those hit reactions we talked about.

809
00:36:25,558 --> 00:36:28,521
You can see here for such a strong swing,

810
00:36:28,621 --> 00:36:30,844
an equally extreme reaction is warranted.

811
00:36:31,525 --> 00:36:33,527
To dial in the effect, we are also

812
00:36:33,607 --> 00:36:35,048
adding that data-driven hit translation

813
00:36:35,569 --> 00:36:38,192
that we talked about, which can really emphasize or deemphasize

814
00:36:38,252 --> 00:36:40,014
the strength of a hit as necessary.

815
00:36:42,611 --> 00:36:43,671
Hitstop and time dilation.

816
00:36:44,251 --> 00:36:47,052
So hitstop was first popularized with fighting games.

817
00:36:47,512 --> 00:36:50,433
The most common form of hitstop is when action freezes

818
00:36:50,613 --> 00:36:53,034
for a few frames at the moment when an attack connects.

819
00:36:53,954 --> 00:36:54,934
This has been widely adopted

820
00:36:54,994 --> 00:36:56,835
by many single player games as well,

821
00:36:57,275 --> 00:36:59,135
because it helps emphasize the weight and strength

822
00:36:59,195 --> 00:37:00,596
of an attack at the moment of impact

823
00:37:00,616 --> 00:37:01,896
with that really clear pose.

824
00:37:02,982 --> 00:37:05,842
We use a simple hit stop that only applies for player attacks.

825
00:37:06,182 --> 00:37:08,263
We freeze the attacker and the hit character

826
00:37:08,323 --> 00:37:10,783
at the moment of impact for about 115 milliseconds,

827
00:37:10,863 --> 00:37:12,003
like seven frames.

828
00:37:12,924 --> 00:37:14,284
We found that it was the least disruptive

829
00:37:14,324 --> 00:37:18,065
to freeze just the characters while allowing visual components

830
00:37:18,185 --> 00:37:20,345
and a camera, other polish elements

831
00:37:20,605 --> 00:37:22,005
to continue to play during that period.

832
00:37:22,826 --> 00:37:27,806
We also use an authored curve to ease in and out of that hit stop.

833
00:37:28,307 --> 00:37:31,089
We experimented early on with stopping everything dead,

834
00:37:31,829 --> 00:37:33,750
but we found it less disruptive and more fluid

835
00:37:33,930 --> 00:37:36,692
to be careful about that transition in and out

836
00:37:36,832 --> 00:37:37,293
of hit stop.

837
00:37:38,914 --> 00:37:40,455
So when creating that hit stop system,

838
00:37:40,475 --> 00:37:41,636
it also comes with an added benefit.

839
00:37:41,736 --> 00:37:43,777
We made sure to extend its utility

840
00:37:44,037 --> 00:37:45,879
to allow adjustment of game speed on the fly.

841
00:37:46,299 --> 00:37:48,340
So this allowed us to do time slowing

842
00:37:48,500 --> 00:37:52,843
for things like the anticipation of attacks or during dodges.

843
00:37:55,840 --> 00:37:56,420
and hit effects.

844
00:37:56,981 --> 00:38:00,201
It's a really critical component to selling that hit,

845
00:38:00,221 --> 00:38:01,962
that corresponding visual effect.

846
00:38:02,642 --> 00:38:04,182
This topic, again, just like the enemy stuff,

847
00:38:04,262 --> 00:38:06,883
it's its own talk, but the key consideration

848
00:38:06,923 --> 00:38:09,264
within the framework of enhancing game feel

849
00:38:09,664 --> 00:38:11,904
is carefully considering the relationship

850
00:38:11,944 --> 00:38:14,985
between the visualization of the hit and the attack itself.

851
00:38:15,485 --> 00:38:18,026
A natural link between the power, type,

852
00:38:18,166 --> 00:38:21,027
and style of attack with a corresponding visual reaction

853
00:38:21,087 --> 00:38:23,247
will enhance the feeling of responsiveness,

854
00:38:23,267 --> 00:38:25,328
which is critical to satisfying game feel.

855
00:38:27,991 --> 00:38:35,821
Another common practice is screen shake during the hits and animations in an additive way to sell impact and weight.

856
00:38:36,857 --> 00:38:38,918
We utilize different classifications of attacks.

857
00:38:39,218 --> 00:38:41,299
We talked about those before, like our stun, our stagger,

858
00:38:41,400 --> 00:38:44,001
knockdown, to apply corresponding screen shake.

859
00:38:44,721 --> 00:38:49,604
We also differentiate any player impacts and enemy impacts

860
00:38:49,804 --> 00:38:52,005
for more flexibility in applying appropriate camera shake.

861
00:38:52,545 --> 00:38:54,686
For example, if a player is hit by an enemy,

862
00:38:55,147 --> 00:38:56,287
they're very rarely expecting it.

863
00:38:56,427 --> 00:38:57,628
Because if they were expecting it,

864
00:38:57,768 --> 00:38:59,069
they probably would have dodged the attack.

865
00:38:59,909 --> 00:39:01,750
So when hit occurs, the camera shake

866
00:39:01,790 --> 00:39:03,211
feels especially disruptive to them.

867
00:39:03,951 --> 00:39:07,013
So our rule of thumb was that shake applied to the player

868
00:39:07,073 --> 00:39:09,615
should be much less than any applied to an enemy.

869
00:39:10,796 --> 00:39:11,577
And then force feedback.

870
00:39:11,917 --> 00:39:14,599
It's a really powerful tool that you have in your arsenal

871
00:39:14,639 --> 00:39:16,881
to connect the player with the game response.

872
00:39:17,361 --> 00:39:19,082
In almost all instances we play screen shake,

873
00:39:19,122 --> 00:39:20,623
we also play a force feedback.

874
00:39:21,084 --> 00:39:23,345
So if you're supporting gamepad or even a percentage

875
00:39:23,385 --> 00:39:26,147
of your users are on gamepad, it's

876
00:39:26,328 --> 00:39:29,830
worthwhile to invest some time into force feedback as well.

877
00:39:32,566 --> 00:39:34,888
And then really beefy sounds.

878
00:39:35,088 --> 00:39:38,090
So sound design and combat is often the X factor

879
00:39:38,751 --> 00:39:40,172
and whether a hit feels juicy or not.

880
00:39:40,752 --> 00:39:42,394
Oftentimes when a player is not able

881
00:39:42,434 --> 00:39:45,557
to communicate properly, why combat feels off to them,

882
00:39:46,057 --> 00:39:48,979
a lack of gravity in sound design can be at fault.

883
00:39:49,849 --> 00:39:53,931
because there's an intuitive link between the sound of an impact and the impact itself.

884
00:39:54,031 --> 00:39:59,794
So missing that stimulus will cause the whole experience to suffer.

885
00:40:00,634 --> 00:40:04,536
Pay careful attention to the strength, depth, and application of your sounds.

886
00:40:04,836 --> 00:40:10,138
Tinny, light sounds without proper body will actively detract from the impact of an attack

887
00:40:10,318 --> 00:40:10,638
as well.

888
00:40:12,950 --> 00:40:14,131
and a procedural enemy shake.

889
00:40:14,511 --> 00:40:15,872
So here you can see a larger enemy

890
00:40:16,173 --> 00:40:18,095
that we don't want the player to be able to unlock.

891
00:40:18,775 --> 00:40:20,817
A simple procedural shake applied on a root

892
00:40:21,117 --> 00:40:22,479
or a specific bone in this delicate

893
00:40:22,859 --> 00:40:24,661
can reinforce the impact of an attack.

894
00:40:25,321 --> 00:40:26,682
We implemented this in Dreamscaper

895
00:40:26,722 --> 00:40:28,384
with larger enemies like bosses in mind

896
00:40:29,185 --> 00:40:31,267
as they lacked the exaggerated hit reactions

897
00:40:31,627 --> 00:40:33,609
of smaller enemies, since we wanted to make sure

898
00:40:33,629 --> 00:40:35,370
to keep the challenge level up for players.

899
00:40:35,851 --> 00:40:37,252
So let's add a procedural shake.

900
00:40:41,519 --> 00:40:53,546
So we adapted a simplified version of the practice of applying procedural shake to specific bones with directional impulses when they're affected by an attack, which was just out of scope for us on this project.

901
00:40:53,906 --> 00:40:59,550
Instead, we apply shake on the root of the enemy, specifically to the yaw and the x and y axes.

902
00:41:00,010 --> 00:41:01,171
See, it's not actually playing.

903
00:41:04,432 --> 00:41:04,932
Sorry about that.

904
00:41:05,633 --> 00:41:09,134
But yeah, just a small shake on the root of the enemy.

905
00:41:09,574 --> 00:41:12,976
So this helps reinforce that the player is actually physically

906
00:41:13,276 --> 00:41:14,376
affecting the enemy they're attacking,

907
00:41:14,937 --> 00:41:16,958
even if the enemy is not providing a massive hit

908
00:41:16,978 --> 00:41:17,278
reaction.

909
00:41:18,816 --> 00:41:20,617
And then one closing thought about all these enhancements,

910
00:41:21,137 --> 00:41:24,019
while they're important to improving the overall game

911
00:41:24,059 --> 00:41:25,660
feel of your title, you should always

912
00:41:25,700 --> 00:41:28,082
allow for some degree of personalization.

913
00:41:28,803 --> 00:41:30,964
It's important to allow the player at a minimum

914
00:41:31,004 --> 00:41:33,646
to turn these off and ideally adjust them

915
00:41:33,686 --> 00:41:35,827
to their desired level, especially for things

916
00:41:36,108 --> 00:41:38,289
like controller feedback and screen shake.

917
00:41:38,910 --> 00:41:40,911
It's a simple way to make sure that the game is

918
00:41:40,971 --> 00:41:43,413
as accessible as possible to as many people as possible.

919
00:41:46,232 --> 00:41:48,832
OK, so I'm also going to go through in this section, Keys

920
00:41:48,852 --> 00:41:50,772
to Success, some of the learnings

921
00:41:50,792 --> 00:41:52,453
that I had on this project that I'll

922
00:41:52,473 --> 00:41:53,993
be carrying forward to the next project,

923
00:41:54,033 --> 00:41:56,113
hopefully that is valuable to you guys.

924
00:41:58,434 --> 00:42:00,454
So being ruthless with scope, I mean, this is a common one,

925
00:42:00,754 --> 00:42:01,534
but it's important.

926
00:42:01,995 --> 00:42:03,655
We were ambitious, but because we

927
00:42:03,675 --> 00:42:05,035
had experience on other projects,

928
00:42:05,355 --> 00:42:07,055
we could tell to some degree when we were biting off

929
00:42:07,075 --> 00:42:07,716
more than we could chew.

930
00:42:08,716 --> 00:42:10,296
It was a pretty delicate balance,

931
00:42:10,636 --> 00:42:12,376
but what I found most helpful.

932
00:42:13,157 --> 00:42:15,937
was giving myself a little mental distance from the project.

933
00:42:16,418 --> 00:42:17,838
I worked to compartmentalize a bit

934
00:42:18,998 --> 00:42:21,179
and view of scope of a feature through a more neutral lens.

935
00:42:21,599 --> 00:42:23,840
And what I really mean by that is I was trying to divorce

936
00:42:24,080 --> 00:42:26,801
my personal attachment and the value that I was giving

937
00:42:26,861 --> 00:42:28,962
to a feature from the value that a player

938
00:42:29,722 --> 00:42:30,462
might give to the feature.

939
00:42:31,822 --> 00:42:33,603
Oftentimes we found that there were ways to trim

940
00:42:34,643 --> 00:42:36,264
scope and retain the core of a feature.

941
00:42:37,136 --> 00:42:40,220
Other times we had to make the hard decision to cut something entirely,

942
00:42:40,560 --> 00:42:46,486
but ultimately it made for a better game because we weren't too precious about it.

943
00:42:47,528 --> 00:42:51,992
Speaking of focusing on a goal rather than a solution, I spent quite a bit of time on

944
00:42:52,032 --> 00:42:55,957
Dreamscaper designing a feature around chatting with characters that would

945
00:42:55,977 --> 00:42:57,478
function as a procedural mini-game.

946
00:42:58,372 --> 00:43:00,333
We hoped the procedural nature of the minigame

947
00:43:01,014 --> 00:43:03,175
would help complement the procedural nature of combat,

948
00:43:03,675 --> 00:43:06,877
keeping non-combat interactions fresh for many hours,

949
00:43:06,997 --> 00:43:09,118
especially considering the roguelike structure of the game

950
00:43:09,138 --> 00:43:10,639
and the repetition therein.

951
00:43:12,180 --> 00:43:13,621
Ultimately, it was a complicated task

952
00:43:13,661 --> 00:43:15,062
that was a black hole of time,

953
00:43:15,762 --> 00:43:17,463
resulting in a large amount of work,

954
00:43:17,903 --> 00:43:20,245
or it could result in a large amount of work for our team,

955
00:43:20,285 --> 00:43:21,145
especially at our size.

956
00:43:21,665 --> 00:43:22,806
So despite many hours of work,

957
00:43:23,566 --> 00:43:24,707
we cut the feature entirely

958
00:43:24,887 --> 00:43:26,788
in favor of a more simplified chatting system.

959
00:43:27,644 --> 00:43:29,965
What we landed on was not the best solution,

960
00:43:30,625 --> 00:43:33,887
but it was a solution that allowed us to de-risk

961
00:43:33,927 --> 00:43:35,028
the project to some degree.

962
00:43:35,748 --> 00:43:37,449
We decided to focus on meta-progression

963
00:43:38,109 --> 00:43:40,550
as a way to keep the non-combat systems engaging,

964
00:43:40,830 --> 00:43:42,211
which turned out to be incredibly valuable

965
00:43:42,331 --> 00:43:43,692
to all parts of the game,

966
00:43:44,212 --> 00:43:46,733
and was much less of an unknown for us to develop.

967
00:43:47,553 --> 00:43:49,974
And that way, we were able to achieve our goal

968
00:43:50,395 --> 00:43:52,296
of keeping the non-combat systems engaging

969
00:43:52,596 --> 00:43:53,656
while working within scope,

970
00:43:54,216 --> 00:43:55,817
because we weren't tied to that solution.

971
00:43:59,335 --> 00:44:00,655
Testing often and iterating cheaply.

972
00:44:00,875 --> 00:44:02,136
So one of the most important workflows

973
00:44:02,196 --> 00:44:04,437
that helped improve Dreamscaper's combat

974
00:44:04,537 --> 00:44:06,197
was a feedback loop from players.

975
00:44:07,117 --> 00:44:10,318
We began going wide with feedback as early as eight months.

976
00:44:11,519 --> 00:44:12,879
As an example, early in the project,

977
00:44:13,019 --> 00:44:14,880
an alpha tester sent us a video of the game

978
00:44:14,900 --> 00:44:15,320
sped up by 25%.

979
00:44:15,360 --> 00:44:18,141
He thought it just might be more fun like that.

980
00:44:18,561 --> 00:44:20,342
So then after I put aside my panic

981
00:44:21,102 --> 00:44:23,102
in the sheer amount of work that that would entail,

982
00:44:23,803 --> 00:44:25,423
I agreed that it just looked more fun.

983
00:44:26,303 --> 00:44:31,845
So instead of making sweeping changes, we wanted to test the hypothesis as cheaply as possible.

984
00:44:32,285 --> 00:44:38,186
So our engineer, Rob, he put in a hack, sped the whole game up by 25%. I'm pretty sure it killed

985
00:44:38,226 --> 00:44:43,727
his soul a little bit because it broke a lot of things, but it allowed us to test what we needed

986
00:44:43,767 --> 00:44:47,608
to test. So we immediately put up a test build for our players and asked them for their input.

987
00:44:48,373 --> 00:44:50,214
The majority of feedback was really positive,

988
00:44:50,654 --> 00:44:52,735
and we agreed as a team it was the right direction.

989
00:44:53,395 --> 00:44:56,076
So then we moved forward with adjusting all the individual elements

990
00:44:56,256 --> 00:44:58,597
at the appropriate speeds separately.

991
00:44:59,457 --> 00:45:00,618
The game was much better for it.

992
00:45:01,238 --> 00:45:04,099
So there are hundreds of stories like that throughout the development,

993
00:45:04,379 --> 00:45:06,740
and I credit our community with doing a lot of work

994
00:45:06,921 --> 00:45:08,721
to help refine the feel of the game.

995
00:45:09,301 --> 00:45:11,182
So consider bringing in outside perspectives early

996
00:45:11,702 --> 00:45:14,444
and set up a workflow that allows for a continuous feedback loop

997
00:45:14,604 --> 00:45:15,524
as you iterate on your title.

998
00:45:19,275 --> 00:45:22,878
So throughout the project, my goal was always to do things as efficiently as possible.

999
00:45:25,580 --> 00:45:27,061
Because I had to juggle multiple disciplines,

1000
00:45:27,842 --> 00:45:30,344
I often had to view my workflow through a very specific lens.

1001
00:45:31,345 --> 00:45:36,069
I was always looking for ways that I could put the smallest amount of time in for the largest result.

1002
00:45:36,469 --> 00:45:37,590
This boiled down to three things.

1003
00:45:39,451 --> 00:45:40,852
Building on the learnings of others,

1004
00:45:41,773 --> 00:45:43,074
leveraging outside assets,

1005
00:45:43,494 --> 00:45:45,716
and utilizing workflows that prioritize my knowledge.

1006
00:45:46,572 --> 00:45:50,215
In many cases, I made sure to see if someone else has already done the heavy lifting.

1007
00:45:50,615 --> 00:45:54,539
For instance, all of Dreamscaper's controller icons were purchased from an asset store.

1008
00:45:55,119 --> 00:46:00,004
I utilized a variety of VFX packs to help me get started in generating a specific effect or learning.

1009
00:46:00,484 --> 00:46:03,407
And then we also purchased models that could be repurposed for props and things.

1010
00:46:03,807 --> 00:46:06,810
And then, as you'd guess, these are rarely used wholesale.

1011
00:46:07,471 --> 00:46:10,333
Often they would be a learning tool or a building block to create something new,

1012
00:46:10,774 --> 00:46:13,636
as I wanted to make sure that the outside asset would conform with our styling.

1013
00:46:14,788 --> 00:46:17,170
In terms of tools, Rob and I took some time

1014
00:46:17,210 --> 00:46:19,852
to develop a workflow that utilized UE4's sequencer

1015
00:46:19,892 --> 00:46:23,356
system to spawn attacks dynamically while in combat.

1016
00:46:24,087 --> 00:46:27,747
If you're unfamiliar quickly, Sequencer is a cinematic tool

1017
00:46:27,987 --> 00:46:30,528
in UE that allows you to place things on a timeline

1018
00:46:30,568 --> 00:46:32,788
and spawn them in and play that sequence at any time during the game.

1019
00:46:33,569 --> 00:46:37,109
But we adapted that specifically to spawn these combat-related things.

1020
00:46:37,649 --> 00:46:39,290
So this workflow became really important

1021
00:46:39,350 --> 00:46:41,550
because it was fast, immediately previewable,

1022
00:46:41,870 --> 00:46:43,011
and required very little coding,

1023
00:46:43,191 --> 00:46:45,271
emphasizing an artist-friendly approach for me.

1024
00:46:45,931 --> 00:46:48,532
So you can see in the example a visual timeline of an attack we built,

1025
00:46:48,872 --> 00:46:50,572
but that sequence itself was abstracted.

1026
00:46:51,112 --> 00:46:53,996
So it can be repurposed and mixed and matched as necessary

1027
00:46:54,537 --> 00:46:55,999
throughout the project on other attacks.

1028
00:46:57,241 --> 00:46:59,644
So remember, if you're hitting a wall or feeling overwhelmed,

1029
00:47:00,545 --> 00:47:03,029
someone has probably solved the problem you're approaching

1030
00:47:03,349 --> 00:47:05,572
or a similar one, what can you learn from them

1031
00:47:05,913 --> 00:47:07,655
in terms of both solutions and workflows?

1032
00:47:10,420 --> 00:47:14,802
And I wouldn't be able to take on some of the new areas that I approached for this project

1033
00:47:15,202 --> 00:47:17,083
without leveraging my own existing skill set.

1034
00:47:17,563 --> 00:47:20,164
When I started DreamScaper, I had never done character animation before,

1035
00:47:20,704 --> 00:47:22,224
but I felt confident that I could tackle it.

1036
00:47:22,824 --> 00:47:24,825
And besides my own inflated ego,

1037
00:47:25,425 --> 00:47:28,866
the reason I felt confident is because I had a lot of experience in a tangential space.

1038
00:47:29,347 --> 00:47:30,888
So I was previously a motion graphics animator,

1039
00:47:30,928 --> 00:47:33,229
like I mentioned before, working in both 2D and 3D.

1040
00:47:33,989 --> 00:47:35,470
So despite a lack of understanding

1041
00:47:35,590 --> 00:47:36,511
of character animation,

1042
00:47:37,051 --> 00:47:39,072
I had animation fundamentals and tool exposure

1043
00:47:39,292 --> 00:47:40,493
to make the transition smooth.

1044
00:47:41,113 --> 00:47:43,014
So when I talk about things like leveraging

1045
00:47:43,134 --> 00:47:44,055
your existing skill set,

1046
00:47:44,415 --> 00:47:45,636
it's not about staying in your wheelhouse

1047
00:47:45,996 --> 00:47:47,517
as much as it is about finding ways

1048
00:47:47,597 --> 00:47:50,318
to expand out from your comfort zone successfully,

1049
00:47:50,959 --> 00:47:53,000
especially if you're looking at this as a business

1050
00:47:53,560 --> 00:47:55,942
and looking to maximize your chances of success

1051
00:47:55,982 --> 00:47:57,062
by de-risking the project.

1052
00:48:00,155 --> 00:48:02,878
And the truth is, Dreamscaper would never be finished

1053
00:48:03,098 --> 00:48:05,621
if I tried to do my very best in every single area.

1054
00:48:06,061 --> 00:48:07,923
And I know as artists and craftspeople,

1055
00:48:07,943 --> 00:48:09,405
that sounds sacrilegious,

1056
00:48:09,705 --> 00:48:12,668
but the reality is on a small team with limited resources,

1057
00:48:12,748 --> 00:48:15,291
trying to bring every single thing that I did up to 120%

1058
00:48:15,671 --> 00:48:17,953
was not only incredibly draining,

1059
00:48:18,114 --> 00:48:19,875
but an unrealistic goal to have.

1060
00:48:20,576 --> 00:48:25,782
It was really important to know when to stop, because in many cases, for the player, 100%

1061
00:48:25,883 --> 00:48:28,466
is as good as the 120% we often shoot for.

1062
00:48:28,486 --> 00:48:34,233
And as we know, that last 10 or 20% can take almost as much time as the rest of the effort.

1063
00:48:34,613 --> 00:48:36,155
I can see that it looks like the video stopped playing, but...

1064
00:48:36,355 --> 00:48:37,216
I'll quickly describe it.

1065
00:48:37,437 --> 00:48:39,499
So as an example of Dreamscaper, I

1066
00:48:39,519 --> 00:48:41,421
deprioritized animating characters back

1067
00:48:41,462 --> 00:48:42,042
to an idle state.

1068
00:48:43,324 --> 00:48:46,748
In this example, the blend of the animation is really ugly.

1069
00:48:46,808 --> 00:48:49,351
So once the player attacks, they just rotate into place.

1070
00:48:50,072 --> 00:48:51,794
I found that the vast majority of time,

1071
00:48:52,134 --> 00:48:54,017
players were continuously providing the system with

1072
00:48:54,097 --> 00:48:54,397
inputs.

1073
00:48:55,913 --> 00:48:58,855
Players don't attack and then wait for the attack to finish

1074
00:48:58,895 --> 00:49:02,718
and return to idle, and then attack or run or dodge

1075
00:49:03,118 --> 00:49:03,538
right after.

1076
00:49:03,879 --> 00:49:05,780
They're almost constantly entering inputs.

1077
00:49:06,100 --> 00:49:08,562
So due to how responsive we wanted the game to feel

1078
00:49:08,602 --> 00:49:09,702
and how low fidelity it was.

1079
00:49:10,623 --> 00:49:12,683
The blend between player actions is very fast.

1080
00:49:13,424 --> 00:49:15,804
So for the most part, I let UE4 handle animations

1081
00:49:15,844 --> 00:49:19,345
to blending to idle, despite it looking pretty rough.

1082
00:49:20,005 --> 00:49:21,026
This may seem like a small thing,

1083
00:49:21,346 --> 00:49:24,066
but animating hundreds of attacks back to idle

1084
00:49:24,126 --> 00:49:26,947
didn't make sense for the fidelity of the project.

1085
00:49:27,247 --> 00:49:29,268
And that 5% of animation time that I saved

1086
00:49:29,308 --> 00:49:31,408
could be put into a higher visibility area.

1087
00:49:32,670 --> 00:49:35,474
So for those of you who have been used to an indie mindset,

1088
00:49:35,754 --> 00:49:37,316
this probably seems like a no-brainer.

1089
00:49:37,897 --> 00:49:40,420
But for me, coming from a larger studio

1090
00:49:40,460 --> 00:49:43,563
where my area of focus was much more narrow,

1091
00:49:43,904 --> 00:49:45,646
it was a really good lesson to learn

1092
00:49:46,507 --> 00:49:48,269
to know when good is good enough.

1093
00:49:48,810 --> 00:49:51,173
And the best way to know when something is good enough

1094
00:49:51,453 --> 00:49:53,515
is to look at it through your player's perspective.

1095
00:49:56,012 --> 00:49:58,693
So working in a small team can be incredibly empowering,

1096
00:49:58,993 --> 00:50:00,634
but it can also lead to a lot of conflict,

1097
00:50:01,075 --> 00:50:03,616
especially if you're as stubborn and opinionated as I am.

1098
00:50:04,217 --> 00:50:06,398
So something that I learned that helped my mental state

1099
00:50:06,558 --> 00:50:07,639
over the course of the project

1100
00:50:07,779 --> 00:50:09,740
was to be protective of my emotional energy.

1101
00:50:10,700 --> 00:50:10,961
I care.

1102
00:50:11,917 --> 00:50:17,598
I care a lot. I care too much about things that I shouldn't. And if you're a game developer,

1103
00:50:17,958 --> 00:50:22,919
chances are you do too. So to help recontextualize it, I began asking myself,

1104
00:50:23,520 --> 00:50:27,120
how much do I actually care about this when approaching a specific feature or approaching

1105
00:50:27,140 --> 00:50:32,201
a discussion? And that choice to step back and put my energy where it was most needed

1106
00:50:32,321 --> 00:50:35,662
meant the difference between feeling refreshed or drained.

1107
00:50:36,731 --> 00:50:39,673
It also helped alleviate conflict on a team like ours

1108
00:50:40,234 --> 00:50:41,514
that has a flat hierarchy.

1109
00:50:42,075 --> 00:50:44,276
Decisions that might have sat at a standstill

1110
00:50:45,097 --> 00:50:46,318
because they just didn't have consensus

1111
00:50:46,338 --> 00:50:48,299
between the three of us could move forward

1112
00:50:48,419 --> 00:50:50,321
to be tested and re-approached later.

1113
00:50:55,424 --> 00:50:57,606
Okay, we have come to the end of it.

1114
00:50:59,267 --> 00:51:02,329
To summarize, create pillars with specificity.

1115
00:51:03,450 --> 00:51:05,391
Be considerate of your combat options.

1116
00:51:06,910 --> 00:51:08,211
Layer your systems over time.

1117
00:51:09,933 --> 00:51:12,035
Invest in animation and hit reactions.

1118
00:51:13,536 --> 00:51:16,239
Establish responsiveness choices that suit your project.

1119
00:51:17,920 --> 00:51:21,043
Prioritize strong feedback for more satisfying and visceral

1120
00:51:21,103 --> 00:51:21,463
combat.

1121
00:51:22,484 --> 00:51:25,527
And finally, kill your darlings, take calculated risks,

1122
00:51:25,868 --> 00:51:27,369
and protect your emotional investment.

1123
00:51:29,152 --> 00:51:30,854
So thank you all so much.

1124
00:51:31,374 --> 00:51:33,917
Really appreciate it for you guys coming to this talk.

1125
00:51:34,297 --> 00:51:36,839
I hope there are some learnings that are valuable for you

1126
00:51:36,859 --> 00:51:39,141
that you can take back to your team to improve your combat.

1127
00:51:39,942 --> 00:51:42,064
I'm also very happy to continue discussions,

1128
00:51:42,564 --> 00:51:43,585
Dreamscaper or otherwise.

1129
00:51:43,645 --> 00:51:45,847
So if you don't have a chance to grab me here,

1130
00:51:46,608 --> 00:51:48,049
I can be reached at any of these places.

1131
00:51:48,830 --> 00:51:51,693
And I think we have time for questions as well,

1132
00:51:51,713 --> 00:51:52,373
if anyone has any.

1133
00:52:09,327 --> 00:52:12,289
Oh yeah, what's the deal here? Yes? Yeah. Please.

1134
00:52:15,971 --> 00:52:23,155
So, with a game like this, metrics, they're kind of all, like how far do we dodge?

1135
00:52:23,695 --> 00:52:24,676
How far do attacks go?

1136
00:52:25,336 --> 00:52:30,439
Did you find you guys sort of tried to nail down metrics first,

1137
00:52:30,519 --> 00:52:32,840
or were you kind of evolving those throughout production?

1138
00:52:33,541 --> 00:52:34,641
Yeah, good question.

1139
00:52:36,564 --> 00:52:38,706
We had a very strange working style because a lot of us,

1140
00:52:39,166 --> 00:52:40,247
we came from larger studios,

1141
00:52:40,587 --> 00:52:42,229
but we also were so tired of it.

1142
00:52:42,609 --> 00:52:44,091
So for things like that,

1143
00:52:45,212 --> 00:52:46,453
most of it was completely intuitive.

1144
00:52:46,633 --> 00:52:49,196
So we would try things and try things and try things,

1145
00:52:49,656 --> 00:52:51,017
and if something wasn't working, we'd cut it.

1146
00:52:51,158 --> 00:52:53,280
So we weren't, because we were moving pretty fast.

1147
00:52:53,620 --> 00:52:55,720
There's three of us, we could test things out very quickly

1148
00:52:55,740 --> 00:52:57,821
and establish if something was or wasn't working.

1149
00:52:58,481 --> 00:53:00,042
So for instance, like a dodge metric,

1150
00:53:00,362 --> 00:53:02,142
we would just refine kind of a core dodge.

1151
00:53:02,162 --> 00:53:04,663
We started with our core kind of roll dodge.

1152
00:53:04,703 --> 00:53:05,984
I don't know if we actually saw it here,

1153
00:53:06,044 --> 00:53:07,624
but we started with that.

1154
00:53:07,684 --> 00:53:09,785
And then all the other dodges that the player

1155
00:53:09,825 --> 00:53:11,965
could potentially use, because it's a roguelike,

1156
00:53:11,985 --> 00:53:13,146
they could pick up different dodges.

1157
00:53:14,480 --> 00:53:21,004
We kind of tuned around that and we tried very different versions of things

1158
00:53:21,064 --> 00:53:25,326
where some might be very short and have very long invincibility in terms of distance,

1159
00:53:25,406 --> 00:53:26,146
very short in distance.

1160
00:53:26,386 --> 00:53:28,768
Some might have really long distance but recovery after.

1161
00:53:28,808 --> 00:53:31,849
So we were pretty liberal with that type of thing.

1162
00:53:31,889 --> 00:53:33,931
We didn't worry too much about specific metrics

1163
00:53:34,691 --> 00:53:37,332
because we just had a very fast and loose working style.

1164
00:53:39,182 --> 00:53:40,442
Follow-up question.

1165
00:53:41,323 --> 00:53:45,505
Similarly, did you guys try to nail down, like,

1166
00:53:45,585 --> 00:53:47,926
frames for when the attack input would happen?

1167
00:53:47,986 --> 00:53:51,548
Like, do all the attacks have, like, the hit on frame five?

1168
00:53:51,788 --> 00:53:53,389
Or did you nail that down, too?

1169
00:53:53,629 --> 00:53:56,030
Or was that also similarly, like, just kind of experimental?

1170
00:53:56,170 --> 00:53:58,932
Yeah, as you might be surprised, it was also very loose.

1171
00:53:59,212 --> 00:53:59,672
Yeah.

1172
00:53:59,912 --> 00:54:02,313
So one of the things that we did do, though,

1173
00:54:02,333 --> 00:54:06,415
is we tried to make sure that almost all player attacks were

1174
00:54:06,515 --> 00:54:07,356
faster than enemy attacks.

1175
00:54:07,696 --> 00:54:09,437
We wanted it to feel like you could cut an enemy off

1176
00:54:09,637 --> 00:54:11,139
in the middle of their startup.

1177
00:54:11,379 --> 00:54:13,180
So we had some basic rules like that in place,

1178
00:54:13,440 --> 00:54:15,182
but we weren't too precious about having

1179
00:54:15,202 --> 00:54:16,463
a specific amount of frames.

1180
00:54:16,823 --> 00:54:19,365
And it was kind of the same idea where over time,

1181
00:54:19,425 --> 00:54:20,846
as we were developing more and more attacks

1182
00:54:20,886 --> 00:54:22,407
across different weapons, we started

1183
00:54:22,447 --> 00:54:25,529
to refine kind of what the general range was of things.

1184
00:54:26,130 --> 00:54:28,452
And a big part of this also I should mention

1185
00:54:28,492 --> 00:54:31,614
is because I'm the person that's responsible for concept

1186
00:54:31,654 --> 00:54:33,095
to execution for a lot of this stuff.

1187
00:54:33,355 --> 00:54:34,436
So I could have it in my own head.

1188
00:54:34,756 --> 00:54:36,117
If you are on a larger team.

1189
00:54:36,858 --> 00:54:40,284
doesn't fly the same way because you need to be able to communicate to other people especially

1190
00:54:40,304 --> 00:54:44,451
if they're touching different assets. How long like these how about what these metrics should

1191
00:54:44,471 --> 00:54:51,242
be. But yeah for me working alone I was fly by the seat of my pants for sure. Very cool.

1192
00:54:56,046 --> 00:55:11,349
Hey, in respect to the player feel, you spent a great deal of time in your talk dwelling on the importance of sort of the player's ability to impact what the enemy is doing and interrupt or stun or knock them around.

1193
00:55:12,522 --> 00:55:15,164
I suspect, especially since you showed those larger enemies,

1194
00:55:15,204 --> 00:55:18,265
that things like bosses or, you know, like the big guy

1195
00:55:18,305 --> 00:55:20,466
when he shows up are supposed to be these kind of big,

1196
00:55:20,606 --> 00:55:23,327
crunchy encounters where the player feels like

1197
00:55:23,808 --> 00:55:26,029
the actions that they do are kind of more important

1198
00:55:26,109 --> 00:55:29,250
than the normal actions that they take throughout their run.

1199
00:55:30,091 --> 00:55:32,572
However, you can't exactly allow a player

1200
00:55:32,612 --> 00:55:34,733
to stun lock a boss because then it's trivial.

1201
00:55:36,977 --> 00:55:41,746
So you've taken something away, which is their ability to kind of, you know, stun lock or juggle.

1202
00:55:42,989 --> 00:55:49,200
What do you give them back to make that feel, you know, just as crunchy or more as the rest of combat?

1203
00:55:49,722 --> 00:55:53,705
Yeah, good question. Just to quickly reiterate, how do we

1204
00:55:57,128 --> 00:56:02,052
accommodate for pulling away hit reactions when fighting bosses or larger enemies?

1205
00:56:02,692 --> 00:56:05,695
So a few things. The part of it is the player's arsenal.

1206
00:56:06,035 --> 00:56:09,378
So they have a lot of other options besides stunning.

1207
00:56:09,938 --> 00:56:12,760
enemies or staggering enemies to help deal with crowd control

1208
00:56:12,800 --> 00:56:14,341
or help deal with a larger enemy,

1209
00:56:15,122 --> 00:56:16,843
specifically like those magic attacks.

1210
00:56:16,863 --> 00:56:18,124
We really didn't touch much on that,

1211
00:56:18,144 --> 00:56:19,385
but they have a set of special abilities

1212
00:56:19,846 --> 00:56:22,528
that help augment their normal attacks.

1213
00:56:22,548 --> 00:56:26,091
And the other thing about the bosses themselves is I tried to,

1214
00:56:26,711 --> 00:56:28,332
we also didn't have a lot of time to talk about that,

1215
00:56:28,432 --> 00:56:30,594
but a thing I tried to do when creating a boss

1216
00:56:30,994 --> 00:56:34,317
was figure out ways that a player could

1217
00:56:36,479 --> 00:56:40,084
kind of sneak in during their patterns and their attacks so that it felt fair to them,

1218
00:56:40,685 --> 00:56:45,892
that they could read and learn their attacks over time and slowly adapt and have the space

1219
00:56:46,113 --> 00:56:50,719
to counter-attack because we wanted to create like a almost choreographed dance.

1220
00:56:51,800 --> 00:56:53,321
Some bosses were more extreme than others,

1221
00:56:53,361 --> 00:56:55,302
where they had basically split phases

1222
00:56:55,322 --> 00:56:56,522
where they could be attacked here,

1223
00:56:57,242 --> 00:56:58,063
or they could attack here.

1224
00:56:58,563 --> 00:56:59,523
And as the game got harder,

1225
00:56:59,763 --> 00:57:02,284
we made those phases smaller and smaller and smaller

1226
00:57:02,324 --> 00:57:03,385
to the point where it was like,

1227
00:57:03,445 --> 00:57:05,366
they would attack, have recovery, and it can attack again.

1228
00:57:05,386 --> 00:57:06,906
And the player had to start to learn

1229
00:57:07,226 --> 00:57:09,767
at those higher difficulties when they could weave in

1230
00:57:09,787 --> 00:57:11,628
and when they could go on the offensive.

1231
00:57:12,068 --> 00:57:12,968
Does that answer it?

1232
00:57:13,228 --> 00:57:13,749
Yes, it does.

1233
00:57:13,989 --> 00:57:16,330
And then a final follow-up on that is...

1234
00:57:17,546 --> 00:57:22,728
In terms of difficulty scaling, a very common solution in our industry is to just pump the numbers, right?

1235
00:57:22,808 --> 00:57:26,929
These guys have more HP, you deal less damage, whatever. You make that disparity wider.

1236
00:57:28,130 --> 00:57:32,652
Did you feel tempted to go down that road? I don't know if your game features a difficulty slider, but...

1237
00:57:34,958 --> 00:57:40,641
Like, how do you address that or would you recommend addressing that if not, you know, relying on number pump, basically?

1238
00:57:40,701 --> 00:57:42,682
Sure. Yeah, we did a hybrid approach.

1239
00:57:42,862 --> 00:57:45,163
So we actually did have, you know, the kind of classic like scaling.

1240
00:57:45,183 --> 00:57:48,144
We had a curve that we set up for enemy power and also for player power.

1241
00:57:48,925 --> 00:57:52,766
So we had a curve for their health and for their attack strength.

1242
00:57:53,207 --> 00:57:55,148
But to your point, we...

1243
00:57:55,828 --> 00:57:59,251
My philosophy there is it's much more interesting to the player

1244
00:57:59,551 --> 00:58:01,893
if they have to adapt to changes over time,

1245
00:58:01,933 --> 00:58:03,354
over the course of the game, and over difficulty.

1246
00:58:03,694 --> 00:58:05,836
So we actually had a set of difficulty sliders

1247
00:58:05,876 --> 00:58:07,157
that were accessible later in the game,

1248
00:58:08,157 --> 00:58:10,199
where you could kind of increase the difficulty

1249
00:58:10,219 --> 00:58:11,220
of different components of the game.

1250
00:58:11,940 --> 00:58:12,821
And one of them was enemies.

1251
00:58:13,261 --> 00:58:15,443
And the way that we pushed the difficulty and challenge

1252
00:58:15,463 --> 00:58:18,845
without just making it so the player had to get hit less

1253
00:58:19,526 --> 00:58:22,007
was new attacks, new attack patterns,

1254
00:58:22,868 --> 00:58:24,509
and new ways that the players, the enemy,

1255
00:58:24,549 --> 00:58:26,410
could take defensive response to the player.

1256
00:58:26,670 --> 00:58:28,812
So there's way more scope increased with that,

1257
00:58:29,112 --> 00:58:31,053
but we wanted to make sure that at higher difficulties,

1258
00:58:31,093 --> 00:58:32,334
players were still really engaged

1259
00:58:32,394 --> 00:58:33,475
because they're seeing new things

1260
00:58:33,495 --> 00:58:34,936
and they're having to adapt to new things.

1261
00:58:35,577 --> 00:58:35,877
Thank you.

1262
00:58:38,759 --> 00:58:39,119
Anything else?

1263
00:58:44,189 --> 00:58:50,354
So expanding on the enemies that you were talking about how for higher difficulties you would

1264
00:58:50,534 --> 00:58:56,840
introduce new attacks for the player to react to, were there any core principles you had in mind

1265
00:58:56,960 --> 00:59:01,945
whenever you were designing like the enemies and how you would advance them?

1266
00:59:02,829 --> 00:59:07,812
Yeah, the question was about what are some of our core principles for advancing challenge and enemies.

1267
00:59:08,452 --> 00:59:11,774
So there are a couple things that we, in terms of defensive options that the player has,

1268
00:59:11,794 --> 00:59:14,055
you know, I talked about that block, the parry, the dodge.

1269
00:59:14,696 --> 00:59:18,598
So we have a system in place that the enemy attacks can override one of those.

1270
00:59:18,758 --> 00:59:25,122
So the player gets a visual notification over their head of what the type of attack is when they're attacked.

1271
00:59:25,782 --> 00:59:29,204
And at higher difficulties, we start to take some of those options away from the player.

1272
00:59:29,264 --> 00:59:29,904
So for instance,

1273
00:59:31,005 --> 00:59:33,187
Just standing there and blocking, that goes first.

1274
00:59:33,327 --> 00:59:36,230
So enemies at higher difficulties can break through their block,

1275
00:59:36,830 --> 00:59:38,952
and eventually attacks have to be parried.

1276
00:59:39,472 --> 00:59:41,254
And finally, at the highest difficulty,

1277
00:59:41,274 --> 00:59:44,237
you can no longer parry to get that counterattack on the enemy.

1278
00:59:44,557 --> 00:59:46,138
You can only dodge from certain attacks.

1279
00:59:46,519 --> 00:59:47,780
So there are certain things that we did

1280
00:59:47,800 --> 00:59:50,923
in terms of creating defensive options for the player

1281
00:59:51,283 --> 00:59:53,104
in order to help accommodate that.

1282
00:59:54,586 --> 00:59:54,826
Thank you.

1283
01:00:03,387 --> 01:00:12,933
Hey, so like you had said earlier, there's tons of different weapons and abilities that you can mix and match and that they all actually interact with each other.

1284
01:00:13,533 --> 01:00:24,199
So how did you go about balancing the numbers so that all of the different routes players could go kind of felt different in a flavor perspective, but similar in a strength perspective?

1285
01:00:24,239 --> 01:00:27,861
Or was that something you weren't actually kind of thinking about?

1286
01:00:28,894 --> 01:00:31,175
We did think about that. I'll answer this quickly. That's the last question.

1287
01:00:32,296 --> 01:00:41,879
Yeah, so we did think about that. I think the way, one of the ways that we did that is we came up with a set of kind of early attacks and we balanced around that.

1288
01:00:41,899 --> 01:00:43,220
So once we had a set of things that felt

1289
01:00:43,340 --> 01:00:44,600
good and were balanced against each other,

1290
01:00:44,980 --> 01:00:46,740
then we started pushing and pulling on either side.

1291
01:00:46,760 --> 01:00:49,161
So we might have an attack that had longer startup,

1292
01:00:49,581 --> 01:00:52,322
but dealt more damage to an enemy,

1293
01:00:52,382 --> 01:00:53,842
and we could kind of push the extremes

1294
01:00:54,222 --> 01:00:55,983
against what we had already to compare.

1295
01:00:56,343 --> 01:00:58,003
So we started to look at different ways

1296
01:00:58,083 --> 01:01:00,444
to kind of move the variables around

1297
01:01:00,504 --> 01:01:02,384
so it felt really satisfying for players

1298
01:01:02,464 --> 01:01:04,665
to try out different things that had really different effects,

1299
01:01:04,965 --> 01:01:07,565
but then we would try to balance that on the opposite side

1300
01:01:07,865 --> 01:01:08,966
by pulling in some of those things

1301
01:01:08,986 --> 01:01:10,146
that we've already established,

1302
01:01:10,306 --> 01:01:11,886
like, you know, whatever the recovery time is

1303
01:01:11,946 --> 01:01:12,646
or the startup time.

1304
01:01:13,908 --> 01:01:14,288
Thank you.

1305
01:01:14,308 --> 01:01:15,310
All right, thanks guys.

1306
01:01:15,330 --> 01:01:16,192
That's all the time we have.

1307
01:01:16,332 --> 01:01:17,233
Really appreciate you coming.

1308
01:01:17,714 --> 01:01:17,935
Thanks.

1309
01:01:17,955 --> 01:01:25,327
Thank you.

