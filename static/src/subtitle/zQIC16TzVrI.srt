1
00:00:04,965 --> 00:00:08,869
Hey everyone and welcome to our talk, Spatial Audio in Budget Cuts.

2
00:00:10,051 --> 00:00:16,477
Ironically, we will not be playing back any sounds, but you have to use your imagination.

3
00:00:17,318 --> 00:00:21,783
And speaking of that, you will all receive a feedback form after the talk,

4
00:00:22,304 --> 00:00:26,888
so use your imagination and pretend it was super good, and give us a good review.

5
00:00:28,742 --> 00:00:30,664
So my name is Jonas Kjellberg.

6
00:00:31,284 --> 00:00:33,405
I'm CTO of a company called Gesturement,

7
00:00:33,586 --> 00:00:37,048
and we make super secret unannounced music middleware.

8
00:00:38,209 --> 00:00:41,811
But more importantly, I was the composer and audio designer

9
00:00:42,011 --> 00:00:43,252
of the game Budget Cuts.

10
00:00:45,271 --> 00:00:46,953
And I'm Lakulish Antani.

11
00:00:47,494 --> 00:00:52,941
I am a Valve person, and in my Valve time, I do Valve things like spatial audio.

12
00:00:54,342 --> 00:01:00,870
So this talk is really going to be about our experiences in integrating spatial audio into

13
00:01:00,910 --> 00:01:04,955
budget cuts via Valve's spatial audio tool called Steam Audio.

14
00:01:06,598 --> 00:01:13,285
So, before we get into all of the details about all of our experiences, just a quick

15
00:01:13,385 --> 00:01:14,266
overview of this talk.

16
00:01:15,107 --> 00:01:18,050
I am going to be talking about the technical side of things.

17
00:01:18,490 --> 00:01:20,692
Jonas is going to be talking about the artistic side.

18
00:01:21,033 --> 00:01:23,115
So kind of like good cop, bad cop here.

19
00:01:25,217 --> 00:01:26,138
So first off...

20
00:01:28,435 --> 00:01:33,180
Spatial audio has been getting a lot of attention in recent years, but already there's so much

21
00:01:33,260 --> 00:01:37,424
confusing terminology out there that it's kind of hard to keep track of what someone

22
00:01:37,464 --> 00:01:41,808
means when they say that they've implemented such and such spatial audio feature.

23
00:01:42,589 --> 00:01:47,893
So I'm going to give a quick overview of some of the concepts, and the first one is HRTF,

24
00:01:48,654 --> 00:01:49,935
head-related transfer function.

25
00:01:50,716 --> 00:01:51,837
So in the real world...

26
00:01:52,456 --> 00:01:55,719
The shape of your head affects how you hear things.

27
00:01:55,760 --> 00:01:59,303
The sound bends around your head before it gets into your ears.

28
00:01:59,984 --> 00:02:06,131
So the effect of your head, your torso, these flappy bits of your ears, they all affect

29
00:02:06,451 --> 00:02:09,434
how you hear things and where you perceive a sound to be coming from.

30
00:02:09,855 --> 00:02:13,138
And an HRTF is a set of filters that models that.

31
00:02:14,640 --> 00:02:19,727
HRTFs are typically measured from dummy heads or real people, and they're measured in a

32
00:02:19,767 --> 00:02:25,716
bunch of different directions, and all of this information is used to re-synthesize

33
00:02:26,176 --> 00:02:27,899
the positionality of a sound.

34
00:02:29,297 --> 00:02:31,259
The other concept is ambisonics.

35
00:02:31,899 --> 00:02:34,141
Ambisonics is kind of a surround format,

36
00:02:34,681 --> 00:02:36,923
but unlike your typical 5.1 or 7.1,

37
00:02:38,304 --> 00:02:41,306
it's a spherical representation of a sound field,

38
00:02:41,506 --> 00:02:43,667
so it includes verticality as well.

39
00:02:44,928 --> 00:02:46,609
One way to maybe think about this

40
00:02:46,670 --> 00:02:49,091
is it's like 360 video, but for sound.

41
00:02:50,276 --> 00:02:55,278
Again, ambisonics can be measured, I mean recorded, using a bunch of different kinds

42
00:02:55,338 --> 00:02:56,438
of microphones.

43
00:02:56,758 --> 00:03:01,800
You can also encode a monoclip into ambisonics, given a direction.

44
00:03:02,981 --> 00:03:08,143
And you can decode ambisonics using hardware, software decoders, and you can spatialize

45
00:03:08,223 --> 00:03:09,983
ambisonics using HRTFs.

46
00:03:11,184 --> 00:03:15,025
I'm going to hand it over to Jonas, who's going to discuss a few more spatial audio

47
00:03:15,065 --> 00:03:15,425
concepts.

48
00:03:17,684 --> 00:03:22,749
So what you have to take into account when working with all these things is stuff like distance cues.

49
00:03:22,969 --> 00:03:27,473
And that means a sound will get softer and more muffled.

50
00:03:27,573 --> 00:03:31,757
The highs will get rolled off the further away the sound is playing from the listener.

51
00:03:32,798 --> 00:03:40,225
Also, if the sound is played back in a reverberant space, you will get much more of the reverb and the late reflections.

52
00:03:43,237 --> 00:03:45,920
Then we have stuff regarding the rooms.

53
00:03:46,160 --> 00:03:53,448
So, a room size cue would mean that the way a sound will bounce around the room,

54
00:03:53,468 --> 00:03:56,631
the reflections will give an indicator of the size of the space.

55
00:03:57,510 --> 00:04:06,082
Stuff like how long the reverb tail is, but also which materials are being used in the room that will affect the coloration of the sound.

56
00:04:07,504 --> 00:04:13,233
And this thing is super important for presence and selling the illusion of being in a different space.

57
00:04:15,392 --> 00:04:23,138
We also have stuff like sound propagation, and that in effect means the way sound flows through a space.

58
00:04:23,859 --> 00:04:33,146
So sound will be bouncing, being blocked, being scattered, diffracted, going through different materials and being colored by that,

59
00:04:34,467 --> 00:04:39,371
going through openings, doors, windows, just how the sound is bouncing around basically.

60
00:04:40,760 --> 00:04:43,784
So this is pretty cool, but it's nothing new.

61
00:04:44,124 --> 00:04:48,330
And Lakulish, why are we seeing this talk about special audio

62
00:04:48,370 --> 00:04:48,650
right now?

63
00:04:50,914 --> 00:04:52,435
That's a good question, actually.

64
00:04:53,415 --> 00:04:55,777
All of this tech, or much of this tech,

65
00:04:55,857 --> 00:04:57,858
is really several decades old.

66
00:04:57,958 --> 00:04:59,818
So why is this all relevant now?

67
00:05:00,639 --> 00:05:01,439
There's a few reasons.

68
00:05:02,240 --> 00:05:04,881
One is that computers are way faster now.

69
00:05:05,261 --> 00:05:07,902
You have multi-core CPUs, GPUs.

70
00:05:07,922 --> 00:05:10,564
You have a lot of compute you can throw at problems

71
00:05:10,624 --> 00:05:11,484
like spatial audio.

72
00:05:12,124 --> 00:05:14,025
So that's now computationally feasible.

73
00:05:14,946 --> 00:05:15,666
The other thing is VR.

74
00:05:17,092 --> 00:05:22,075
With the rise of VR in the last few years, the importance of immersion has gone up, and

75
00:05:22,215 --> 00:05:28,377
spatial audio is a very important way through which you can add immersion to your audio.

76
00:05:29,918 --> 00:05:37,402
And a side benefit of this is that with VR, most of your users are going to be using headphones,

77
00:05:37,462 --> 00:05:40,983
which is the ideal delivery mechanism for spatial audio.

78
00:05:41,583 --> 00:05:47,585
So all of these factors together are kind of why spatial audio is all the rage these days.

79
00:05:48,846 --> 00:05:51,066
So that's an overview of spatial audio.

80
00:05:51,967 --> 00:05:53,407
So now I'm going to hand it over to Jonas.

81
00:05:53,427 --> 00:05:57,728
He's going to tell us more about Budget Cuts, which is what all the kids are talking about these days.

82
00:06:00,749 --> 00:06:04,491
So Budget Cuts, it's all the latest rage since like three years ago.

83
00:06:06,211 --> 00:06:08,932
It's a rhythm game where you have two lightsabers and...

84
00:06:09,934 --> 00:06:10,774
Oh, wrong game.

85
00:06:11,114 --> 00:06:13,636
So it's a VR spy game, basically.

86
00:06:13,676 --> 00:06:15,277
So here's a snippet of our trailer.

87
00:06:17,999 --> 00:06:20,841
And it features stealth, deadly robots.

88
00:06:22,562 --> 00:06:28,586
You have to hide from the robots and try not to get seen.

89
00:06:28,906 --> 00:06:35,751
Or you could choose to kill the robots the only way possible, with knives and scissors.

90
00:06:37,062 --> 00:06:40,705
So the game is designed around two core concepts.

91
00:06:41,465 --> 00:06:47,249
It's all about room-scale gameplay, so you'll be crawling on the floor, hiding behind cubicles,

92
00:06:47,770 --> 00:06:50,472
crouching, ducking and weaving, stuff like that.

93
00:06:52,193 --> 00:06:58,817
And most interestingly, it features a very novel teleportation portal mechanic that works

94
00:06:58,837 --> 00:06:59,178
like this.

95
00:06:59,358 --> 00:07:02,080
So you fire a ball with your hand cannon.

96
00:07:02,625 --> 00:07:06,308
It opens up a portal that you can look into and preview the new location.

97
00:07:06,969 --> 00:07:12,814
And once you're ready, you teleport to that location and the teleport portal will envelop

98
00:07:12,854 --> 00:07:13,194
around you.

99
00:07:13,855 --> 00:07:21,942
It feels very immersive and it also aids in gameplay because you'll be able to pre-survey

100
00:07:22,022 --> 00:07:22,563
where you're going.

101
00:07:23,744 --> 00:07:24,505
So I'll...

102
00:07:25,676 --> 00:07:32,800
be the first to argue that spatial audio should be implemented into every game coming forward

103
00:07:32,820 --> 00:07:33,380
from this point.

104
00:07:35,341 --> 00:07:45,267
It's super nice, but most importantly for a game like Body Cuts it's even imperative

105
00:07:45,327 --> 00:07:45,987
for a stealth game.

106
00:07:48,328 --> 00:07:55,452
Spatial audio will give us clues about where the enemies are situated, where they're patrolling.

107
00:07:56,453 --> 00:08:03,685
We will get cues about the space that we're in, if we're hiding behind safe cover or not.

108
00:08:05,733 --> 00:08:11,196
We've all been talking about immersion forever in VR, but it's really about that.

109
00:08:12,036 --> 00:08:18,180
So audio normally is used to sell the illusion and even more so in VR, so it makes sense

110
00:08:18,220 --> 00:08:21,902
that we actually use this tech to get that extra mile.

111
00:08:23,423 --> 00:08:27,465
So we've been using reflections, for instance, as one of our core gameplay cues.

112
00:08:28,739 --> 00:08:33,682
which allows the player to properly form a strategy based on what they're hearing.

113
00:08:34,042 --> 00:08:39,545
So while you normally in a game would be able to hear that,

114
00:08:39,825 --> 00:08:43,227
ah, there's a sound emitting from the next room,

115
00:08:44,368 --> 00:08:50,031
with spatial audio technologies, we can hear the size of the room that's on the other side of the wall.

116
00:08:50,131 --> 00:08:50,551
We can hear if...

117
00:08:51,280 --> 00:08:57,884
the robot is walking away from us or coming towards us, just based on the way the sound

118
00:08:57,944 --> 00:08:58,624
is being colored.

119
00:09:00,245 --> 00:09:06,610
So that helps the player to correctly assess a threat and time their strategies accordingly.

120
00:09:09,992 --> 00:09:14,275
Also a core gameplay cue, we use occlusion, which means...

121
00:09:15,264 --> 00:09:21,707
The way a sound is being blocked, essentially it's a ray trace from the audio source back

122
00:09:21,747 --> 00:09:28,350
to the listener, and if there is geometry intersecting that, the sound will get muffled

123
00:09:28,871 --> 00:09:32,092
according to what kind of material the geometry is intersecting.

124
00:09:32,971 --> 00:09:34,293
has applied to itself.

125
00:09:34,874 --> 00:09:40,120
So this can tell us if we're behind safe cover or if we're in a direct line of sight

126
00:09:40,140 --> 00:09:40,601
to an enemy.

127
00:09:41,922 --> 00:09:44,966
Also there are these telephones similar to the Matrix.

128
00:09:46,917 --> 00:09:51,979
where you'd pick up the phone to get new information about your mission.

129
00:09:52,800 --> 00:09:57,822
And then you can hear quite clearly if it's in a different room, even though it's far away.

130
00:09:58,823 --> 00:10:00,944
You can pinpoint which room it's coming from.

131
00:10:02,705 --> 00:10:08,588
So, all was not well working like this, and Lakulish will go over some of that.

132
00:10:11,787 --> 00:10:15,909
All right, so for the next few minutes, I'm going to talk about some of the things we

133
00:10:15,949 --> 00:10:19,011
had to do to get spatial audio working well in budget cuts.

134
00:10:20,071 --> 00:10:25,874
What I will not be talking about is HRTFs or occlusion, because this is 2019 and that's

135
00:10:25,914 --> 00:10:28,516
not really as much of a problem as it used to be.

136
00:10:29,397 --> 00:10:31,781
So what I'm going to be talking about here is sound propagation.

137
00:10:32,442 --> 00:10:35,266
So this is a quick overview of what we did.

138
00:10:36,568 --> 00:10:43,678
We split sound propagation into per-source early reflections and a single physics-based reverb.

139
00:10:44,419 --> 00:10:50,206
The early sound paths for every source were guided using a custom portaling system.

140
00:10:51,508 --> 00:10:55,453
And in addition to all of this, we faked some of the spatialization for

141
00:10:55,953 --> 00:11:00,098
ambience and music using the Steam Audio Ambisonics reverb system.

142
00:11:01,741 --> 00:11:05,544
So let me start with the real-time reflections and early paths.

143
00:11:06,404 --> 00:11:11,888
So ideally, and this was our starting point, we wanted to model sound propagation from

144
00:11:12,068 --> 00:11:17,272
every single source individually, trace rays all over the place, apply convolution reverbs

145
00:11:17,552 --> 00:11:20,434
for every individual source, and everything would be great.

146
00:11:20,894 --> 00:11:23,116
But obviously that's a lot of compute.

147
00:11:24,029 --> 00:11:25,650
There are ways to mitigate this.

148
00:11:25,951 --> 00:11:27,131
You can use multi-threading.

149
00:11:27,171 --> 00:11:28,332
You can use GPUs.

150
00:11:28,593 --> 00:11:30,894
There are options, but those are not always

151
00:11:30,934 --> 00:11:32,776
suitable for every title.

152
00:11:33,036 --> 00:11:35,858
And in particular, they were not suitable for budget cuts.

153
00:11:36,719 --> 00:11:38,620
So we decided to do the following.

154
00:11:38,640 --> 00:11:42,763
We said, let's split sound propagation into two parts.

155
00:11:43,043 --> 00:11:45,365
For every source, we're only going to compute

156
00:11:45,585 --> 00:11:46,346
early reflection.

157
00:11:46,366 --> 00:11:47,907
So that's like one or two bounces.

158
00:11:49,268 --> 00:11:51,550
And then the reverb will be applied separately.

159
00:11:51,590 --> 00:11:53,011
And I'll come back to the reverb in a bit.

160
00:11:54,549 --> 00:11:55,689
So we implemented this.

161
00:11:56,390 --> 00:11:59,252
It worked more or less okay.

162
00:11:59,333 --> 00:12:02,135
Performance was more or less okay,

163
00:12:03,516 --> 00:12:04,897
but it wasn't perfect.

164
00:12:05,618 --> 00:12:08,580
And in particular, we had an issue

165
00:12:08,640 --> 00:12:12,524
where sometimes we encountered sudden frame rate hits,

166
00:12:13,625 --> 00:12:15,786
which were kind of hard to track down what was going on.

167
00:12:16,767 --> 00:12:18,469
So we did a whole bunch of investigation.

168
00:12:19,684 --> 00:12:24,992
And what we found was that there was something quirky about how Unity's audio engine was working.

169
00:12:25,333 --> 00:12:30,781
And what it was doing was every time an audio clip was played from an audio source,

170
00:12:31,642 --> 00:12:34,527
it was reinitializing a whole bunch of spatializer state.

171
00:12:35,585 --> 00:12:38,747
Now, this is interesting because spatializer state

172
00:12:38,927 --> 00:12:42,129
is not really tied to an element in your mix graph.

173
00:12:42,429 --> 00:12:45,050
It's more tied to the physical game object

174
00:12:45,110 --> 00:12:46,471
that's moving around in your scene.

175
00:12:47,451 --> 00:12:50,813
So we obviously reported this issue to Unity

176
00:12:50,873 --> 00:12:52,634
and they began work on a fix,

177
00:12:52,674 --> 00:12:55,075
but that fix was not going to come out in time

178
00:12:55,115 --> 00:12:56,256
for budget cuts to ship.

179
00:12:56,756 --> 00:13:00,998
So we decided to approximate things further.

180
00:13:02,279 --> 00:13:07,701
And our solution to that was to first take a step back and really think about why we

181
00:13:07,781 --> 00:13:10,662
cared so much about these early sound paths.

182
00:13:10,902 --> 00:13:18,725
And the important cue here was we really only care about knowing which doors have robots

183
00:13:18,785 --> 00:13:23,187
on the other side, which windows, which vents have robots on the other side, so that you

184
00:13:23,227 --> 00:13:23,807
don't go there.

185
00:13:25,521 --> 00:13:30,907
And so what we did was let's manually mark those up and then use that information to

186
00:13:31,067 --> 00:13:35,111
guide the Steam Audio Ray Tracer so that it doesn't have to calculate as much.

187
00:13:35,471 --> 00:13:38,234
It can run way, way more efficiently.

188
00:13:39,836 --> 00:13:41,017
So that's what we implemented.

189
00:13:42,298 --> 00:13:46,102
Just want to point out that this solution was developed specifically for budget cuts

190
00:13:46,342 --> 00:13:48,244
and is not part of Steam Audio at this time.

191
00:13:51,367 --> 00:13:52,649
So that's the early paths.

192
00:13:53,029 --> 00:13:55,591
The other issue was reverb.

193
00:13:56,232 --> 00:13:59,075
So we obviously couldn't apply reverb to every source.

194
00:13:59,135 --> 00:14:04,240
So what we do is we apply a physics-based reverb for a submix.

195
00:14:04,620 --> 00:14:10,266
So Razor traced out from the listener's position, gathered back at the listener's position after

196
00:14:10,306 --> 00:14:11,367
a whole bunch of bouncing around.

197
00:14:12,527 --> 00:14:18,990
And that is sufficient to convey a sense of room size, room shape, materials, that sort of thing.

198
00:14:20,770 --> 00:14:21,571
But there are issues.

199
00:14:23,311 --> 00:14:29,954
Well, before I go into the issues, one of the benefits of doing this is that your compute cost is independent of how many sources you have.

200
00:14:29,974 --> 00:14:31,854
You're just applying the reverb to a submix.

201
00:14:33,115 --> 00:14:39,717
So now to the issue, which is that because of the way physics-based reverb works, because of the way rays are gathered,

202
00:14:40,558 --> 00:14:48,012
When you move close to a wall, what happens is the size of the room begins to appear a little bit smaller.

203
00:14:49,275 --> 00:14:53,978
And the solution to this problem is to use a directional reverb, so you model how energy

204
00:14:54,038 --> 00:14:55,700
decays in different directions.

205
00:14:57,000 --> 00:15:01,163
And so if you do this correctly, what will happen is when you move close to a wall, the

206
00:15:01,283 --> 00:15:07,807
tail of the reverb will shift away from the wall, and you'll get a smaller, shorter echo

207
00:15:08,248 --> 00:15:09,208
from the wall itself.

208
00:15:10,029 --> 00:15:14,472
And so that's what is implemented in Steam Audio and in Budget Cuts.

209
00:15:15,532 --> 00:15:16,833
But there's a gotcha there as well.

210
00:15:17,788 --> 00:15:18,768
And that is latency.

211
00:15:19,048 --> 00:15:22,689
So physics-based reverb is gonna update at two to 10 hertz.

212
00:15:23,349 --> 00:15:25,050
And that kind of latency is fine

213
00:15:25,290 --> 00:15:27,770
if you're just moving from one space to another,

214
00:15:28,210 --> 00:15:30,611
but that's not fine if you just turn your head around

215
00:15:30,731 --> 00:15:32,751
and have to wait like half a second

216
00:15:33,471 --> 00:15:35,152
for the simulation to update

217
00:15:36,132 --> 00:15:38,353
based on where you're looking.

218
00:15:39,073 --> 00:15:41,373
And the solution to this is ambisonics.

219
00:15:42,153 --> 00:15:44,574
So one of the nice things about ambisonics

220
00:15:44,874 --> 00:15:47,155
is that you can take any ambisonics buffer.

221
00:15:48,215 --> 00:15:50,717
and rotate it to any arbitrary orientation.

222
00:15:51,698 --> 00:15:58,104
And so what we do is we run all of our physics-based reverb simulations in world space,

223
00:15:58,684 --> 00:16:00,786
so independent of where the listener is looking.

224
00:16:01,787 --> 00:16:05,710
We do our convolutions with these world space reverbs.

225
00:16:06,759 --> 00:16:10,541
And then once all the convolution, all the audio processing is done, we just take that

226
00:16:10,821 --> 00:16:15,923
one frame of audio and we rotate it to match the listener's orientation.

227
00:16:16,083 --> 00:16:22,786
So we get decoupled orientation updates that are calculated at audio frame rates.

228
00:16:24,227 --> 00:16:28,149
So those are the two issues that we solved with reflections and with reverb, and now

229
00:16:28,189 --> 00:16:30,430
Jonas is going to talk about ambience and music.

230
00:16:32,800 --> 00:16:35,884
I hope all that was crystal clear.

231
00:16:37,766 --> 00:16:43,532
So, spatial audio is essentially a whole new paradigm when it comes to how you approach your mix.

232
00:16:45,895 --> 00:16:52,042
Things that are still stuck in an old paradigm is how you treat music in games or stuff like ambiences.

233
00:16:55,160 --> 00:17:03,265
When mixing spatial audio together with a flat stereo sound file, it feels very disconnected

234
00:17:03,545 --> 00:17:07,167
and doesn't feel part of the experience.

235
00:17:10,689 --> 00:17:15,452
Music and games are supposed to propel the player further into the experience, not pull

236
00:17:15,472 --> 00:17:15,932
them out, right?

237
00:17:18,375 --> 00:17:22,119
So there are different approaches you could do with music in VR.

238
00:17:22,339 --> 00:17:26,902
And one would be to always, from the design stage,

239
00:17:28,284 --> 00:17:33,908
use diegetic sound sources so that the music is actually always emanating from somewhere in the space.

240
00:17:34,909 --> 00:17:36,170
We did some of that in BodyCuts.

241
00:17:37,631 --> 00:17:40,113
There are a bunch of radios scattered across the world,

242
00:17:40,293 --> 00:17:45,798
and if you move closer to them, the music will fall down into a specialized radio.

243
00:17:46,701 --> 00:17:49,063
And that gives a pretty nice effect.

244
00:17:52,385 --> 00:17:59,431
Another approach I used was to, essentially, when mixing the music, use binaural panning plugins

245
00:18:00,111 --> 00:18:08,858
and slowly automate movement around the player where the instruments will be slowly facing around in the soundstage.

246
00:18:09,894 --> 00:18:13,275
which doesn't at all line up with what is going on on screen,

247
00:18:13,575 --> 00:18:20,497
but the facing of the sound sort of allows it to blend more properly

248
00:18:20,577 --> 00:18:22,218
together with the spatialized sounds.

249
00:18:24,338 --> 00:18:29,160
The preferred solution would instead be to play back an ambisonics music mix,

250
00:18:29,460 --> 00:18:31,641
so that you would mix your music in ambisonics,

251
00:18:32,541 --> 00:18:35,362
and then when playing it back in the game,

252
00:18:35,582 --> 00:18:38,863
you can choose to have it rotate together with the...

253
00:18:39,353 --> 00:18:40,674
players had or independent of it.

254
00:18:41,534 --> 00:18:46,936
So that, for instance, drums would always be coming from that direction or whatever,

255
00:18:46,956 --> 00:18:48,336
depending on how you're moving.

256
00:18:50,857 --> 00:18:53,878
Another similar issue comes with ambiences.

257
00:18:53,938 --> 00:19:01,420
So you'd need some sort of like, to convey a space, you need to have some kind of ambience.

258
00:19:01,640 --> 00:19:07,941
And the preferred way to go about it using spatialized sounds would be to just use reflections

259
00:19:08,021 --> 00:19:08,282
and have...

260
00:19:08,955 --> 00:19:15,559
a ton of bounces and that in turn would create a dynamic room tone, right?

261
00:19:16,440 --> 00:19:21,563
But since we had performance issues with reflections, we couldn't do anything like that.

262
00:19:22,664 --> 00:19:27,547
At the same time, the game world is quite empty because it's an abandoned office building

263
00:19:27,607 --> 00:19:35,312
with petroleum robots, so you need some kind of sound to get back something from the room.

264
00:19:36,052 --> 00:19:40,534
So the way we did that was to fake things up with piping,

265
00:19:41,714 --> 00:19:44,575
like a mono sound file that played back filtered white

266
00:19:44,595 --> 00:19:44,856
noise.

267
00:19:45,816 --> 00:19:48,317
I attached that to the player, so it's always moving with me.

268
00:19:48,997 --> 00:19:51,618
And as you're teleporting yourself into, say, a small

269
00:19:51,678 --> 00:19:55,259
vent, that noise will then fill up the space, and you

270
00:19:55,279 --> 00:19:57,260
suddenly get a sense of the size of the room.

271
00:19:58,120 --> 00:20:01,122
The same goes when going out to a big space, then it would

272
00:20:01,162 --> 00:20:02,382
be sounding bigger.

273
00:20:05,887 --> 00:20:13,535
So, spatial audio is super great, super cool, but it comes with a lot of caveats.

274
00:20:15,016 --> 00:20:18,920
For instance, all of these plugins you can get for free, more or less.

275
00:20:19,301 --> 00:20:24,646
There are many that are not, I suppose, but what's not free is performance.

276
00:20:28,960 --> 00:20:33,563
You need to budget for performance before starting with this.

277
00:20:33,743 --> 00:20:38,926
Like, especially the more of the features you add in, the better it's going to sound.

278
00:20:39,206 --> 00:20:42,949
And you will notice this drastically, but it will also tank your performance.

279
00:20:43,870 --> 00:20:50,434
So you need to rein your expectations in a bit, and try to not use all of the good stuff

280
00:20:50,474 --> 00:20:50,794
just yet.

281
00:20:51,484 --> 00:20:53,925
And of course, being a beta kind of software,

282
00:20:54,526 --> 00:20:57,008
there is no community if you stumble upon an issue.

283
00:20:57,228 --> 00:20:59,629
You need to directly talk to the developer.

284
00:21:00,370 --> 00:21:04,013
And I'm not sure that everyone is so lucky as we've been

285
00:21:04,633 --> 00:21:06,755
to have them on speed dial and say, hey,

286
00:21:06,795 --> 00:21:08,036
could you add this thing?

287
00:21:10,718 --> 00:21:13,760
But yeah, you need to keep that in mind,

288
00:21:13,800 --> 00:21:18,823
that it's not like any of the big things like FModelwise

289
00:21:18,843 --> 00:21:20,345
that has a lot of community around them.

290
00:21:20,918 --> 00:21:23,679
And the documentation is always changing, of course.

291
00:21:25,079 --> 00:21:28,281
And it is not without bugs, and sometimes you can question your own sanity,

292
00:21:28,561 --> 00:21:32,022
and it turns out it was a bug, like with the Unity thing all along.

293
00:21:32,722 --> 00:21:38,024
And a bug like the Unity bug did cause me to have to redo the whole mix several times,

294
00:21:38,604 --> 00:21:39,685
because we had to cut features.

295
00:21:40,245 --> 00:21:43,726
So that's like, just a couple of weeks just doing that.

296
00:21:44,927 --> 00:21:46,788
The last time, two weeks before release, even.

297
00:21:47,948 --> 00:21:50,311
It's not a plug-and-play solution, is what we're trying to say.

298
00:21:51,031 --> 00:21:55,215
So you need to really think about this from the get-go.

299
00:21:56,596 --> 00:21:59,839
You can't just activate the plugin and it's going to sound nice and spatialized.

300
00:22:01,661 --> 00:22:07,106
So, giving back the word to Lakulish, he's going to talk about a summary of what we did.

301
00:22:11,013 --> 00:22:13,575
For those of us who just zoned out through most of that,

302
00:22:15,036 --> 00:22:16,076
this is what we talked about.

303
00:22:16,937 --> 00:22:19,138
We split spatial audio.

304
00:22:19,518 --> 00:22:21,740
We split sound propagation into two parts,

305
00:22:22,560 --> 00:22:24,121
early reflections for every source,

306
00:22:25,042 --> 00:22:29,024
and reverb for a submix based on the listener position.

307
00:22:30,205 --> 00:22:34,647
We guided the early reflections using manually placed portals.

308
00:22:35,928 --> 00:22:41,150
And we used ambisonics reverb to spatialize ambiences and music.

309
00:22:43,271 --> 00:22:47,093
So, you know, things didn't go exactly as we planned.

310
00:22:47,353 --> 00:22:49,614
So what would we have liked to have done better?

311
00:22:49,634 --> 00:22:52,556
You know, what are some ways in which things can improve?

312
00:22:54,616 --> 00:23:01,059
So one is, obviously, we would have liked to have had more success with the early reflections.

313
00:23:02,200 --> 00:23:13,524
The bug that we reported to Unity that was leading to a lot of the performance issues that I believe has been fixed and a fix is shipping in 2019.1 or thereabouts.

314
00:23:15,785 --> 00:23:19,186
Having said that, the portal system that we came up with is great.

315
00:23:20,867 --> 00:23:23,408
However, it may not be suitable for all kinds of titles.

316
00:23:23,688 --> 00:23:27,149
It depends on what kind of scenes you have and it worked well for budget cuts.

317
00:23:28,169 --> 00:23:29,770
So we would ideally want to try to...

318
00:23:31,111 --> 00:23:39,109
Maybe come up with something more semi-automatic, something more flexible that can solve this problem more efficiently than just retracing all the things.

319
00:23:41,385 --> 00:23:44,869
The other thing we would like to have is what is called near field HRTF.

320
00:23:45,069 --> 00:23:51,595
And what near field HRTF means is when you hold some sound source really close to your

321
00:23:51,635 --> 00:23:54,018
head, that's called a near field source.

322
00:23:55,639 --> 00:24:00,124
So in budget cuts, for example, you can hold a phone right up to your ear and you want

323
00:24:00,184 --> 00:24:02,366
that to be rendered using a near field HRTF.

324
00:24:03,347 --> 00:24:11,470
The HRTFs you normally have, including the one in Steam Audio, they're far-field, so they're recorded from a few meters away from the listener.

325
00:24:13,171 --> 00:24:21,054
So you want to get near-field data because that adds a more visceral kind of feel to that specialization.

326
00:24:23,015 --> 00:24:25,636
So those are some of the technical things we would like to improve.

327
00:24:26,256 --> 00:24:29,798
So Jonas, what are some of the less technical things we would like to improve?

328
00:24:31,535 --> 00:24:43,653
Well, before getting to that, I want to take the opportunity to say that we are going to update BuddyCats to the new Unity version so that we can put in all the nice things back in.

329
00:24:45,997 --> 00:24:50,859
I'm not sure that we're going to do that, but I'm saying it here so that the team can

330
00:24:50,959 --> 00:24:52,900
then be forced to do it, essentially.

331
00:24:52,920 --> 00:24:55,301
So I promise.

332
00:24:56,782 --> 00:25:03,885
So what we want to do more as well is, so the reverb works great, but like I said before,

333
00:25:03,905 --> 00:25:09,748
it's all about selling the illusion, and sometimes realism is not as good as what you can.

334
00:25:10,722 --> 00:25:14,585
and that's not enough. So we want to be able to tweak the reverb further and like cheat

335
00:25:15,625 --> 00:25:23,051
a bit and make reverb tails longer for instance or use the reverb calculations to control

336
00:25:23,091 --> 00:25:29,196
a third party reverb or something similar. Also since we're using this hand cannon thing

337
00:25:29,696 --> 00:25:35,141
as soon as we fire the cannon we already know where the portal will land so then we can

338
00:25:35,161 --> 00:25:40,285
start pre-computing the reverb before even going there.

339
00:25:41,337 --> 00:25:50,699
Um, yeah, so instead of having a half a second delay of going to a space until you start

340
00:25:50,719 --> 00:25:53,700
hearing the change of the space, now we can do it instantly if we do it like that.

341
00:25:56,801 --> 00:25:58,981
Using ambisonics for ambiences.

342
00:25:59,041 --> 00:26:05,203
So recently Steam Audio added ambisonics playback.

343
00:26:05,423 --> 00:26:08,544
It's already available in the other specializing suites as well.

344
00:26:09,324 --> 00:26:12,546
And that means that you can have an ambisonics recording

345
00:26:14,747 --> 00:26:17,168
of, say, you know, a city or a room,

346
00:26:17,569 --> 00:26:21,371
and play that back and have that rotate together with your head.

347
00:26:23,032 --> 00:26:25,433
That works super well for far-field sounds,

348
00:26:25,753 --> 00:26:29,195
but for close sounds you'd want to not do that,

349
00:26:29,235 --> 00:26:32,217
because you can see that they're not moving,

350
00:26:32,817 --> 00:26:37,279
or that the sound is not moving the distance with those files.

351
00:26:38,300 --> 00:26:38,500
Anyway...

352
00:26:39,767 --> 00:26:47,891
So, conclusions. It's super expensive, performance-wise, so you need to account for that.

353
00:26:48,811 --> 00:26:53,934
When working with any bleeding-edge tech, be prepared that everything is going to break all the time.

354
00:26:55,875 --> 00:26:59,316
But, as a VR developer, you're always working with like...

355
00:27:01,270 --> 00:27:05,073
the vanguard of that stuff, so you're probably used to it.

356
00:27:07,576 --> 00:27:14,222
Spatial audio, it's extremely important for VR immersion or rather like room presence

357
00:27:14,302 --> 00:27:16,924
to get you tricked into being in a space.

358
00:27:17,865 --> 00:27:19,907
Imperative for any kind of stealth game.

359
00:27:21,869 --> 00:27:24,511
And it's truly a next-gen audio experience.

360
00:27:25,352 --> 00:27:35,215
Me as an audio designer, I'm super happy about the advancements of audio technology in the past few years within games.

361
00:27:35,915 --> 00:27:39,656
And it's in due time that all games start to sound much better.

362
00:27:41,597 --> 00:27:42,517
Yeah, that's me.

363
00:27:43,197 --> 00:27:43,998
And what about the bad cop?

364
00:27:44,378 --> 00:27:47,039
And as the bad cop, it is my duty to inform you

365
00:27:47,479 --> 00:27:50,340
that if you want to use spatial audio for your next project,

366
00:27:50,500 --> 00:27:51,221
start early.

367
00:27:52,621 --> 00:27:55,002
It is not just something you can tack on at the end,

368
00:27:55,042 --> 00:27:57,303
flip a switch, and be like, yes, this is awesome.

369
00:27:57,763 --> 00:28:00,064
You're going to have to change a lot of your workflows.

370
00:28:00,144 --> 00:28:02,886
It's going to affect a lot of the different aspects

371
00:28:03,086 --> 00:28:04,206
of your production.

372
00:28:04,966 --> 00:28:07,928
It's going to touch level design, artwork, everything.

373
00:28:08,688 --> 00:28:09,628
So just keep that in mind.

374
00:28:10,962 --> 00:28:12,143
And that's all from us.

375
00:28:12,583 --> 00:28:14,484
Thank you, and we're happy to answer any questions.

376
00:28:24,690 --> 00:28:26,951
Hi. Thank you. That was great, and great game as well.

377
00:28:26,971 --> 00:28:27,912
Thank you.

378
00:28:29,353 --> 00:28:30,213
Are you biased?

379
00:28:32,294 --> 00:28:34,115
How can I ask this?

380
00:28:34,215 --> 00:28:38,198
Is there other packages we should try before we try the Steam one

381
00:28:38,238 --> 00:28:39,458
or in addition to the Steam one?

382
00:28:40,304 --> 00:28:41,485
I think you should try all of them.

383
00:28:42,146 --> 00:28:45,048
Like, they all have different timbre, if you will.

384
00:28:45,448 --> 00:28:46,649
The filters sound a bit different.

385
00:28:47,590 --> 00:28:53,874
The HRTF panning, it's sort of the same with most of them.

386
00:28:54,035 --> 00:28:59,218
But they all have different ways of dealing with certain issues.

387
00:29:00,399 --> 00:29:03,381
So, yeah, try all of them.

388
00:29:03,782 --> 00:29:06,684
Some are better for some things, like Google Resonance is better for mobile.

389
00:29:07,685 --> 00:29:09,246
But it's not as powerful.

390
00:29:11,666 --> 00:29:12,086
Thank you.

391
00:29:12,506 --> 00:29:12,786
Thank you.

392
00:29:15,807 --> 00:29:16,047
More.

393
00:29:23,490 --> 00:29:23,830
Here we go.

394
00:29:25,131 --> 00:29:30,072
Hey, do you want to talk a little bit about the ambisonic reverb that you used?

395
00:29:30,413 --> 00:29:36,575
And what product you found there or products out there that we can use for our solutions?

396
00:29:37,395 --> 00:29:37,535
So.

397
00:29:38,439 --> 00:29:43,242
In this case, the ambisonics reverb that I was referring to was the one that's built into Steam Audio.

398
00:29:43,842 --> 00:29:48,065
So all of the reverb calculations happen in ambisonics.

399
00:29:49,206 --> 00:29:51,267
So you can then rotate the reverb freely.

400
00:29:52,047 --> 00:29:56,070
And did you find it impacting performance or was it just smooth?

401
00:29:56,377 --> 00:30:01,604
So for sure, it depends on how many channels you have, right?

402
00:30:01,664 --> 00:30:05,929
So the performance impact scales linearly in how many channels you have.

403
00:30:06,030 --> 00:30:11,016
So first order ambisonics is four convolutions, second order is nine, and that sort of thing.

404
00:30:12,137 --> 00:30:16,101
But overall, as long as, so we did a listener-centric thing,

405
00:30:16,121 --> 00:30:19,305
so it was just being applied to a single submix.

406
00:30:20,266 --> 00:30:23,489
So since it wasn't scaling with how many sources you have,

407
00:30:24,210 --> 00:30:26,332
the impact was not that significant.

408
00:30:27,353 --> 00:30:27,634
Thank you.

409
00:30:27,654 --> 00:30:28,214
Yeah.

410
00:30:32,639 --> 00:30:32,719
Hi.

411
00:30:32,947 --> 00:30:33,507
Thanks for the talk.

412
00:30:34,027 --> 00:30:38,189
I just wanted to thank you as someone who also lost a week and a lot of hair for the

413
00:30:38,269 --> 00:30:41,790
Unity spatialization re-nationalization bug for opening up a channel to them.

414
00:30:41,810 --> 00:30:43,050
Let's give a round of applause.

415
00:30:44,651 --> 00:30:44,851
Yeah.

416
00:30:45,511 --> 00:30:46,132
That was not great.

417
00:30:46,192 --> 00:30:48,232
Veterans of the Unity re-spatialization war.

418
00:30:49,173 --> 00:30:49,653
But, yeah.

419
00:30:49,793 --> 00:30:50,513
So, I will be...

420
00:30:50,753 --> 00:30:51,674
I took a picture of that screenshot.

421
00:30:51,694 --> 00:30:52,314
I will be sending it to my team.

422
00:30:52,334 --> 00:30:52,514
Thank you.

423
00:30:52,534 --> 00:30:52,674
Awesome.

424
00:30:52,694 --> 00:30:52,874
Thank you.

425
00:30:52,894 --> 00:30:53,114
Thank you.

426
00:30:53,134 --> 00:30:53,314
Thank you.

427
00:30:53,334 --> 00:30:53,514
Thank you.

428
00:30:53,534 --> 00:30:53,714
Thank you.

429
00:30:53,734 --> 00:30:53,915
Thank you.

430
00:30:53,935 --> 00:30:54,115
Thank you.

431
00:30:54,135 --> 00:30:54,335
Thank you.

432
00:30:58,913 --> 00:31:01,635
I just had a question about the wall materials

433
00:31:10,185 --> 00:31:15,952
So being in an office space, I used as many materials as you would expect in an office.

434
00:31:17,493 --> 00:31:18,314
Carpeted floors.

435
00:31:18,915 --> 00:31:20,297
I'm not used to cubicles.

436
00:31:21,798 --> 00:31:22,079
Sorry, what?

437
00:31:22,419 --> 00:31:23,500
I'm not used to cubicles.

438
00:31:24,001 --> 00:31:24,521
Right, right, right.

439
00:31:24,541 --> 00:31:27,625
And some of the materials I had to...

440
00:31:31,090 --> 00:31:40,456
Suddenly used all the nice reflection parts, I had to redo all the materials to allow them to transmit more of the sound through them.

441
00:31:41,916 --> 00:31:43,397
To fake that.

442
00:31:44,278 --> 00:31:47,220
So yeah, it's mostly the standard materials but tweaked.

443
00:31:48,581 --> 00:31:48,801
Thank you.

444
00:31:51,607 --> 00:31:57,369
I'm definitely more curious about your approach to that kind of ambient layer that you said

445
00:31:57,389 --> 00:32:01,591
you kind of had like a for like room tone you put white noise in and then you sent it

446
00:32:01,611 --> 00:32:02,151
through the reverb.

447
00:32:02,391 --> 00:32:06,473
Did you actually stick white noise in or did you kind of design like a room tone for each

448
00:32:06,573 --> 00:32:10,734
room and like what was your kind of thought process and how did that end up serving as

449
00:32:10,854 --> 00:32:11,835
a bed for everything else?

450
00:32:12,603 --> 00:32:16,885
Right, so about the faked room tone.

451
00:32:17,385 --> 00:32:22,607
So, essentially, it's really just a filtered white noise.

452
00:32:23,228 --> 00:32:29,851
So not all of the high frequencies are still there, but I figured since the reverb is using

453
00:32:30,031 --> 00:32:36,134
impulse convolutions, I just wanted to trigger those frequencies.

454
00:32:36,894 --> 00:32:37,994
So that's why it's a noise.

455
00:32:38,955 --> 00:32:42,838
And it's not really a tune at all, that's why it's so neat.

456
00:32:43,019 --> 00:32:49,564
It's just something that's easily added and you can hear instantly that you're in different spaces.

457
00:32:50,185 --> 00:32:58,172
And then my follow-up question is, when that reverb was kind of like following the listener for that kind of situation where you're like near the wall.

458
00:32:58,612 --> 00:33:02,654
Like, how closely did you parameterize that to distance from the wall?

459
00:33:02,694 --> 00:33:06,116
Was it like a gradual rotation that happens, or was it like a focus?

460
00:33:06,156 --> 00:33:08,897
Like, what was the kind of parameterization you thought of there?

461
00:33:09,562 --> 00:33:13,605
So originally the reverb was not directional,

462
00:33:13,705 --> 00:33:16,046
and I had that issue that if you were close to a wall,

463
00:33:16,626 --> 00:33:19,248
the reverb would think that you were in a smaller space.

464
00:33:20,028 --> 00:33:22,470
But Lakulish kindly fixed that.

465
00:33:22,770 --> 00:33:25,651
So now it doesn't really matter if you're close to a wall.

466
00:33:25,671 --> 00:33:28,653
You can still hear that it's the sound of a space.

467
00:33:29,634 --> 00:33:31,895
So you weren't actually rotating it in that situation.

468
00:33:31,915 --> 00:33:33,996
It was just happening naturally because it was already

469
00:33:34,016 --> 00:33:34,797
a spatialized reverb.

470
00:33:35,297 --> 00:33:35,497
OK, cool.

471
00:33:39,149 --> 00:33:41,871
are we done for time? So last question.

472
00:33:42,351 --> 00:33:46,335
So I'm not a sound designer, but this talk is fascinating because I'm interested in spatial audio.

473
00:33:46,695 --> 00:33:52,861
When I've been messing with it, I've found that open-backed headphones are the best in terms of sound reproduction for spatialized audio,

474
00:33:53,261 --> 00:33:55,764
but when listening back on speakers it sounds very thin.

475
00:33:56,484 --> 00:34:00,028
But there are certain times that you do want speakers over headphones for certain games.

476
00:34:00,108 --> 00:34:01,089
Is there a way that we can...

477
00:34:01,629 --> 00:34:06,075
kind of make a middle ground that does have specialized audio for those who do want to go with headphones

478
00:34:06,575 --> 00:34:10,160
and a special mix or something for headphones or

479
00:34:10,601 --> 00:34:14,205
is there like a way to make sure that those play very well together, or no?

480
00:34:14,646 --> 00:34:15,687
You want to talk about decoders?

481
00:34:17,169 --> 00:34:20,170
Sure, so there's a bunch of different options that you have.

482
00:34:21,791 --> 00:34:26,994
One is obviously to just assume that everyone has decent-ish headphones

483
00:34:27,495 --> 00:34:29,696
and say that this requires headphones.

484
00:34:30,296 --> 00:34:36,600
But if that's not an option, you can then rely on external decoders.

485
00:34:36,660 --> 00:34:42,543
So there are some systems that have ambisonics decode in hardware.

486
00:34:43,284 --> 00:34:44,844
and they can handle spatialization.

487
00:34:44,864 --> 00:34:48,026
They will typically do things like cross-talk cancellation

488
00:34:48,166 --> 00:34:51,427
to improve the spatialization over speakers.

489
00:34:52,587 --> 00:34:54,068
Or alternatively, you could just do

490
00:34:54,848 --> 00:34:57,990
what we did for Counter-Strike, which is like you turn,

491
00:34:58,530 --> 00:35:02,091
you have a special setting for stereo with headphones

492
00:35:02,231 --> 00:35:03,412
versus just stereo,

493
00:35:04,332 --> 00:35:06,573
and the user explicitly makes the choice.

494
00:35:06,673 --> 00:35:08,054
Am I using headphones or not?

495
00:35:08,634 --> 00:35:09,935
And if they're not using headphones,

496
00:35:10,575 --> 00:35:11,655
the HRTF goes away.

497
00:35:13,154 --> 00:35:13,359
Thank you.

498
00:35:14,904 --> 00:35:20,407
And to add to that, for more human, intellectual speech,

499
00:35:21,068 --> 00:35:23,870
no, well, so the nice thing about ambisonics

500
00:35:23,970 --> 00:35:28,773
is that obviously we're using a HRTF decoder,

501
00:35:28,833 --> 00:35:31,595
but you could essentially make a decoder that

502
00:35:31,615 --> 00:35:34,898
says I have 200 speakers in a sphere around me,

503
00:35:35,478 --> 00:35:36,299
play it back to those.

504
00:35:36,999 --> 00:35:40,762
Or I have stereo, play it back through those,

505
00:35:41,142 --> 00:35:41,603
that kind of thing.

506
00:35:42,063 --> 00:35:44,505
So the format itself is very versatile like that.

507
00:35:46,360 --> 00:35:46,661
Thank you.

508
00:35:47,403 --> 00:35:47,683
Thank you.

509
00:35:48,405 --> 00:35:52,817
We'll be in another room, I suppose, answering more questions.

510
00:35:53,038 --> 00:35:53,198
Thanks.

