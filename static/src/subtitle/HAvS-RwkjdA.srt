1
00:00:08,205 --> 00:00:08,665
Hi everyone.

2
00:00:09,286 --> 00:00:13,288
This is, welcome to System Centric Puzzle Design in Patrick's Parabox.

3
00:00:14,749 --> 00:00:15,690
Hi, I'm Patrick.

4
00:00:16,270 --> 00:00:18,212
I mainly do programming and design.

5
00:00:19,172 --> 00:00:23,595
I've been making games since around 2011, mostly freeware games as a hobbyist.

6
00:00:24,496 --> 00:00:29,419
And in March of 2022, I released my first commercial game, which is called Patrick's Parabox.

7
00:00:30,720 --> 00:00:32,441
This is a, oh, thanks.

8
00:00:36,438 --> 00:00:39,281
This is a block-pushing puzzle game with a recursive twist.

9
00:00:40,082 --> 00:00:42,085
It had about a four-year development time.

10
00:00:42,886 --> 00:00:46,510
And halfway through development, it won the IGF Excellence in Design Award.

11
00:00:47,592 --> 00:00:50,215
Could I get a quick show of hands of who here has played the game?

12
00:00:52,002 --> 00:00:52,542
A lot of people.

13
00:00:52,862 --> 00:00:53,663
That's very cool to see.

14
00:00:53,883 --> 00:00:54,103
Thanks.

15
00:00:56,083 --> 00:00:57,564
So I'll still explain the core mechanics.

16
00:00:57,744 --> 00:00:59,224
So here's a gif of the gameplay.

17
00:01:00,064 --> 00:01:04,686
You can see you push boxes around, but there's also this blue box, which is a container for other boxes.

18
00:01:05,446 --> 00:01:10,327
And if you squish it against a wall, you can enter it and push other boxes into it, and you can push them out.

19
00:01:11,207 --> 00:01:16,649
This is a really cool system I discovered while I'm prototyping, and it ends up giving rise to lots of compelling mechanics and puzzles.

20
00:01:19,077 --> 00:01:23,798
Here's another GIF showing a situation where this blue box actually contains itself.

21
00:01:24,438 --> 00:01:27,559
So if you exit from the blue box, you will end up back in the blue box.

22
00:01:28,999 --> 00:01:31,439
This gives rise to even more puzzles with recursion.

23
00:01:33,360 --> 00:01:36,940
So, these two GIFs show the core of this system that I discovered.

24
00:01:38,341 --> 00:01:45,062
But there's also more recursive mechanics that you end up, it gives rise to as well, such as what if a box contains multiple copies of itself?

25
00:01:46,100 --> 00:01:49,082
Or what happens if you push a box outside of itself causing a paradox?

26
00:01:50,283 --> 00:01:54,465
Or what happens if the player character is itself a box that can contain other boxes?

27
00:01:55,005 --> 00:01:56,086
It's like wild stuff can happen.

28
00:01:58,488 --> 00:02:09,354
So what I mean by system-centric in this talk's title is that this system that I have happened upon, discovered, is something I find legitimately super interesting and compelling and I want to tell all my friends about it.

29
00:02:10,535 --> 00:02:13,957
So my goal in making this game is to showcase this recursive box system.

30
00:02:15,367 --> 00:02:19,091
On the flip side of the coin, players' motivation when playing the game is that they want to see more of this system.

31
00:02:19,151 --> 00:02:21,993
It's exciting to see what new mechanic is around the next corner.

32
00:02:22,854 --> 00:02:29,060
And this great system that I luckily discovered happens to be very generous in that there's a lot of things it has to show.

33
00:02:32,332 --> 00:02:42,134
So, I'll give a selection of, sorry, a design sort of post-mortem, a bunch of snippets that apply to this game, but maybe you can apply it to your game, whether or not it's a puzzle game.

34
00:02:43,635 --> 00:02:48,676
So, one thing I did, thinking about showcasing the system, was I tried to keep an approachable level of difficulty.

35
00:02:50,316 --> 00:02:53,457
So, relatively easy compared to other games in the hardcore puzzle genre.

36
00:02:54,576 --> 00:03:02,781
because my goal was to showcase and communicate things about this cool system, not necessarily to challenge players or to stump them or other goals that I might have.

37
00:03:04,042 --> 00:03:09,505
I did this because it's my personal preference, but also this really unexpectedly broadened the audience of the game.

38
00:03:09,925 --> 00:03:17,349
More people could get into it who weren't otherwise really good puzzle players, but they could get into it and maybe even make it a lot of the way through.

39
00:03:24,855 --> 00:03:44,687
To show some examples of making an approachable difficulty, here is a puzzle on the left where this is a puzzle about, you start in this little left pocket where you put yourself and the blue box into the green clone box with the entering on the correct side, such that when you exit on the right side of the level out of the green clone box, things are positioned correctly and you can solve the little maze.

40
00:03:46,672 --> 00:03:49,213
On the right, here's a simpler, easier version of this puzzle.

41
00:03:50,293 --> 00:03:54,015
It's about the same basic idea, but now the constraint on the right is simplified and easier.

42
00:03:54,895 --> 00:03:59,717
Once you get the cool recursive idea, you can then move on without any unnecessary roadblocks.

43
00:04:01,637 --> 00:04:02,998
The right puzzle is the one I use in the game.

44
00:04:06,533 --> 00:04:12,815
Here's the puzzle on the left where there's four blue boxes and your goal is to separate them so that there's one space in between each.

45
00:04:13,556 --> 00:04:19,098
And you have to utilize the two green recursive boxes on the right and do a cool recursive trick in order to separate them.

46
00:04:21,265 --> 00:04:26,707
On the right, here's a version of this puzzle with only three boxes and more empty space, which gives you more leeway.

47
00:04:27,027 --> 00:04:34,210
So now all you have to do is recognize this recursive trick, and there's no tight box finagling or finessing that the left puzzle has.

48
00:04:35,230 --> 00:04:36,330
So there's less friction.

49
00:04:37,671 --> 00:04:43,313
I ended up using this puzzle on the right, but I did still like the cool complications that the left one has, so I left it in as an optional puzzle.

50
00:04:48,350 --> 00:04:51,212
On the left, here's a puzzle where your goal is to enter into this green box.

51
00:04:51,772 --> 00:04:54,254
But you can't do so directly because there's walls on all four sides of it.

52
00:04:55,034 --> 00:04:57,496
You have to utilize the other three boxes in the level to do so.

53
00:04:59,397 --> 00:05:03,820
On the right, here's a version of this puzzle where this green box is constrained in this little cranny inside the wall.

54
00:05:04,740 --> 00:05:05,381
So you can't move it.

55
00:05:05,981 --> 00:05:07,983
So this constrains the number of possibilities in this level.

56
00:05:08,263 --> 00:05:11,825
So there's less things to do that aren't the solution or related to the solution.

57
00:05:12,586 --> 00:05:13,266
So you can get there quicker.

58
00:05:16,535 --> 00:05:20,998
So to codify some of these things I did, I tried to simplify puzzles as much as possible.

59
00:05:22,219 --> 00:05:27,743
I tried to make puzzles as easy as possible while still showing their core idea, while still communicating what they're about.

60
00:05:29,744 --> 00:05:32,446
I removed some solution steps that were unnecessary or too hard.

61
00:05:35,068 --> 00:05:41,813
When appropriate, I trimmed the possibility space, so less things to do that weren't the solution or weren't related or I didn't want to be possible.

62
00:05:43,410 --> 00:05:49,032
And in general, try to keep the puzzles bite-sized, because they're more like, hey, did you know you can do this cool thing?

63
00:05:49,513 --> 00:05:50,013
Isn't that cool?

64
00:05:50,453 --> 00:05:51,253
And oh, here's another one.

65
00:05:51,473 --> 00:05:53,314
I'd rather keep people keep showing you things.

66
00:05:57,016 --> 00:06:00,077
So there came a point, there's a question, though, of like, well, how easy is too easy?

67
00:06:00,177 --> 00:06:08,881
Because for some of these easy puzzles, players would stumble into the solution without understanding what happened, or they would not understand mechanics at a very deep level.

68
00:06:10,407 --> 00:06:19,213
which is not great, but I decided, well, I'm okay with this happening sometimes, as long as I'm making this trade-off in favor of, or in service of, making the game more approachable and streamlined.

69
00:06:20,093 --> 00:06:29,880
And this is sort of maybe a controversial thing, or there's some subtlety involved here about sometimes it is bad, but just sharing my perspective that it worked well in this context.

70
00:06:38,611 --> 00:06:40,432
Okay, so puzzles don't exist in a vacuum.

71
00:06:40,732 --> 00:06:43,613
They're surrounded by puzzles before them, after them, and on all sides of them.

72
00:06:44,493 --> 00:06:50,495
Here's a sequence of three puzzles where A introduces a new mechanic, and B and C expand on it in more complex and difficult scenarios.

73
00:06:51,535 --> 00:06:59,437
A play tester was having trouble with C, and I realized, oh yeah, that's kind of an unfair leap from B to C. So, I added this puzzle N, which bridges the gap.

74
00:07:00,297 --> 00:07:01,038
And this was an improvement.

75
00:07:01,078 --> 00:07:01,818
N was a nice puzzle.

76
00:07:03,512 --> 00:07:10,554
But another player was still having trouble on C. And I thought, well, I like C, but I'd rather not have people get stuck on it rather than move on.

77
00:07:11,274 --> 00:07:13,735
So I did just that and made C an optional puzzle.

78
00:07:14,155 --> 00:07:16,356
So now after you solve N, you can just proceed onwards.

79
00:07:17,716 --> 00:07:20,677
This is the kind of thing I did a lot in the game with puzzle ordering.

80
00:07:24,370 --> 00:07:25,030
Here's another example.

81
00:07:25,150 --> 00:07:28,391
So here's seven puzzles, the first of which introduces a brand new mechanic.

82
00:07:28,851 --> 00:07:30,272
It's the infinite exit mechanic.

83
00:07:30,812 --> 00:07:35,233
And then there's six other puzzles that gradually give you more practice in more complex scenarios.

84
00:07:36,714 --> 00:07:38,955
When I play tested this, it just didn't work that well.

85
00:07:39,135 --> 00:07:43,416
The introduction was just confusing, and the constraints were clear.

86
00:07:43,436 --> 00:07:46,117
They were just weird abstract puzzles that you couldn't quite grasp.

87
00:07:47,817 --> 00:07:49,458
So I cut the, ended up cutting these five puzzles.

88
00:07:49,838 --> 00:07:52,899
And the two I didn't cut, they were actually okay, and I kept them with some changes.

89
00:07:53,972 --> 00:07:55,153
And here's what I ended up with next.

90
00:07:55,673 --> 00:08:06,517
I added a better introduction to this mechanic that's more clear, and I added two better reinforcement puzzles to reinforce your knowledge, and not doing what I knew didn't work in the first time.

91
00:08:07,478 --> 00:08:10,959
And I added two optional puzzles, which are the ones in the lower right there, that were also good.

92
00:08:11,539 --> 00:08:12,300
So this was an improvement.

93
00:08:13,100 --> 00:08:21,744
But then another play tester had trouble with this mechanic at the very first puzzle, which was they thought, well, they thought this mechanic put them into a loose state, but it actually doesn't.

94
00:08:22,684 --> 00:08:25,308
So I was, I thought well let's just add a level that shows you that.

95
00:08:26,029 --> 00:08:29,333
And actually I was able to add four levels that clarified this doesn't put you in a loose state.

96
00:08:29,614 --> 00:08:32,718
And this constrained environment actually ended up being kind of having nice puzzles.

97
00:08:32,998 --> 00:08:35,181
So now I have an even smoother introduction to this mechanic.

98
00:08:36,523 --> 00:08:36,924
Which was great.

99
00:08:40,783 --> 00:08:44,545
I tried to apply this kind of iteration across every single puzzle sequence in the game.

100
00:08:45,806 --> 00:08:52,049
So each of these boxes is an area in the game, and if you squint or look closely, each of those tiny little boxes in there is like a sequence of puzzles.

101
00:08:53,510 --> 00:08:57,472
Just showing this to show the scope of the work, I tried to be diligent and do this for every sequence.

102
00:09:06,412 --> 00:09:16,596
So to codify some of these things, the general verbs I did was inserting a puzzle, modifying a puzzle, deleting a puzzle, reordering a puzzle, or optionalizing a puzzle.

103
00:09:17,836 --> 00:09:34,262
And I did these in order to patch up conceptual leaps, improve tutorialization or clarify misunderstandings, insert puzzles to reinforce knowledge, or give someone a second chance to learn something if, for example, they stumbled into the solution in the first instance.

104
00:09:36,098 --> 00:09:42,560
And also to manage play time, because I want people to be moving through the game and not get hung up on a puzzle.

105
00:09:43,060 --> 00:09:45,480
Even if it's good, I have so many other things to show.

106
00:09:49,941 --> 00:09:55,623
I learned to treat this kind of puzzle management or puzzle ordering as its own distinct skill when making this game.

107
00:09:55,983 --> 00:10:00,064
And I found this skill to be just as important as the skill of making puzzles in the first place.

108
00:10:04,857 --> 00:10:11,258
Here's a GIF showing the tools I used to, for example, insert a new puzzle into this sequence of three, so now it's a sequence of four.

109
00:10:12,239 --> 00:10:17,240
All I do is drag the puzzle into the ordering, and then I can recompile the game, and all the connections work.

110
00:10:17,900 --> 00:10:20,380
No additional configuration is required on my end.

111
00:10:21,681 --> 00:10:32,343
Having this tool be quick and joyful was very nice, because I was making so many of these changes, and I would rather encourage myself to do lots of these things, as opposed to if the tools were slow or miserable to use.

112
00:10:34,017 --> 00:10:39,759
related, I also did not have puzzles in the hub area, even though that would be cool, it's like a recursive game, so why not have puzzles and puzzles?

113
00:10:40,259 --> 00:10:45,441
But I was iterating on this order so much that I would have been breaking them all the time, so I made a trade-off there.

114
00:10:46,521 --> 00:10:51,003
And it was good, iterating on the puzzle order a lot helped.

115
00:10:54,305 --> 00:10:57,147
related to this, unlocking leniency in puzzle games.

116
00:10:57,187 --> 00:11:01,411
So on the left, here's an older version of the game where you can see this player has gotten stuck in the third puzzle in this area.

117
00:11:02,091 --> 00:11:06,735
And in this version, if you get stuck on a puzzle in the main line, there's no other option.

118
00:11:06,795 --> 00:11:07,455
You are stuck.

119
00:11:07,595 --> 00:11:08,936
You've got to solve it in order to move on.

120
00:11:10,417 --> 00:11:10,898
which is bad.

121
00:11:12,078 --> 00:11:24,624
On the right, I made this change in the latent development where it looks more like on the right where you can see this player has now made it through a lot of puzzles because at any given point I made it so that you have access to multiple possible puzzles to make progress on.

122
00:11:25,725 --> 00:11:34,409
This is very common knowledge in puzzle games to always have multiple paths available but I'm just mentioning it here to stress that this is very important in making the game more approachable.

123
00:11:38,142 --> 00:11:43,365
And I want to be generous in showing people cool stuff about the system, not putting roadblocks in front of people.

124
00:11:50,849 --> 00:11:56,593
So, I've talked about puzzles and puzzle ordering, and I got information on how I want to change those things based on playtesting.

125
00:11:57,353 --> 00:12:03,537
And I want to endorse a specific format of playtesting, which is video recordings with the playtester narrating their thoughts out loud.

126
00:12:04,778 --> 00:12:11,564
This is more work for the play tester, because they have to set up a recording software, and also it takes effort to narrate your thoughts all the time, but I found it worth it.

127
00:12:13,686 --> 00:12:17,409
With the video, you can see all the little things and attempts players do in puzzles.

128
00:12:19,130 --> 00:12:25,015
With the voice narration all the time, you can hear their theories of what they're trying and thinking about the system, and what their emotions are at different times.

129
00:12:26,677 --> 00:12:31,821
You can measure time taken on different parts, so if a part of a puzzle takes 10 seconds versus 20 seconds versus 60 seconds.

130
00:12:34,153 --> 00:12:40,150
videos are rewatchable at later dates so I can see what a playtester six months ago thought about this puzzle and what was the state of the puzzle at that time.

131
00:12:42,998 --> 00:12:51,381
And to get, so that's the video format, and here's the, to get more specific about opinions, here's past Patrick's, Patrick's Parabox playtesting preferences.

132
00:12:53,641 --> 00:12:55,822
So, I'll list off a bunch here.

133
00:12:56,022 --> 00:13:08,946
I tried to get fresh playtesters, I'm tripping over my, I'm trying to get fresh playtesters every time because you can only experience a new mechanic for the first time once, and these mechanic introductions are exactly what I want to get smooth.

134
00:13:11,217 --> 00:13:21,269
Non-expert players were very helpful, because players who had lesser skill would encounter more stumbling blocks, and a lot of those stumbling blocks are the kinds of things I want to fix to get people streamlined through the game.

135
00:13:23,872 --> 00:13:28,858
I tried to pay very close attention to players' mental models, so I knew where to, for example, clarify misunderstandings.

136
00:13:31,053 --> 00:13:39,155
I try to treat small bumps that players encountered as potentially very important because that could be a big hurdle for another player.

137
00:13:39,715 --> 00:13:41,295
Again, thinking of streamlining the game.

138
00:13:44,136 --> 00:13:55,278
I like to do batches of one or two playtesters at a time in order to give each playtest video due attention and respect that playtester's time, because I would watch this video in detail and take copious notes.

139
00:13:57,967 --> 00:14:02,651
I tried to get playtesters who would play the entire game, so as to not, of course, neglect the whole second half of the game.

140
00:14:05,573 --> 00:14:19,102
Personal learning, for me, was to watch the whole video and take notes before making changes, as opposed to pausing the video every time I wanted to make a change, because that would give me more context by the end of the video, and it would just help me work more efficiently.

141
00:14:21,693 --> 00:14:27,096
And I did these play tests every so often, whenever I felt like the game was ready for another batch of feedback.

142
00:14:28,057 --> 00:14:35,201
So it was nice to have a more or less constant in the background thinking about iterating on this puzzle ordering, as opposed to like backloading it or something.

143
00:14:37,142 --> 00:14:47,148
Side note, it was difficult to find players who I knew who were non-experts, were willing to record themselves and narrate their thoughts, and were willing to play the full game.

144
00:14:47,908 --> 00:14:50,530
But those players are also by far the most helpful play testers.

145
00:14:58,381 --> 00:15:04,706
I did about 15 of these full-game video playtests throughout development, not counting other formats of playtesting, but here's 15 videos.

146
00:15:05,747 --> 00:15:12,432
By the end of development, I thought, oh, I'm reaching diminishing returns with doing these playtests.

147
00:15:13,253 --> 00:15:18,217
But actually, after releasing the game and watching people play, I realized, no, actually, I didn't reach diminishing returns.

148
00:15:18,517 --> 00:15:24,262
All those little changes and puzzles I was editing and inserting at the very end were actually doing great work, and I'm glad I did them.

149
00:15:24,482 --> 00:15:25,103
And I could have done more.

150
00:15:26,154 --> 00:15:28,676
So that's a learning for me, is I'm gonna keep doing lots of playtesting.

151
00:15:37,982 --> 00:15:42,264
Okay, now I wanna switch gears a little bit and talk about making puzzles.

152
00:15:43,645 --> 00:15:50,570
To me, the purpose of this recursive box system, I thought of it as, it's not like that the purpose of the system is that it can make cool puzzles.

153
00:15:51,310 --> 00:15:55,513
I like to think of it as, the purpose of the puzzles is to showcase things about this cool system.

154
00:15:58,085 --> 00:16:06,951
Okay, now here's a list of a bunch of techniques I've accumulated from other people and from my travels about brainstorming techniques for making puzzles.

155
00:16:08,692 --> 00:16:18,920
By far the most common technique I used was finding an interaction in this system and then making a puzzle that forces you to do this interaction as the key move in the solution of that puzzle.

156
00:16:19,749 --> 00:16:26,551
So for example, on the left, here's a situation where you can enter a box by pressing it against a stack of boxes against a wall, which is kind of cool.

157
00:16:27,191 --> 00:16:32,552
And on the right, here's a puzzle that forces you to do that, to construct that stack and then press against it in order to free the box from the wall.

158
00:16:35,913 --> 00:16:40,314
So one thing is like, well, how do we find these interactions that we can then force you to do in a puzzle?

159
00:16:42,115 --> 00:16:46,856
Well, in general, just playing around with the system and exploring the mechanics and

160
00:16:48,952 --> 00:16:50,293
you know, normal stuff, just playing around.

161
00:16:50,993 --> 00:17:00,238
But to get to more specific, some things that might be helpful are making a big playground level with lots and lots of objects so you can experiment, and making test levels that test edge cases or extreme cases.

162
00:17:02,322 --> 00:17:21,277
And one technique, which I found helpful to eke out a few more puzzles, which I've learned from Brett Taylor, is to enumerate, list out all the mechanics in the game, and then list out all possible pairs of mechanics, and then for each pair, consider what might a puzzle with that pair of mechanics be like.

163
00:17:21,937 --> 00:17:27,561
So for example, the clone mechanic plus the empty mechanic, or the clone mechanic plus the eat mechanic, or what about clone and transfer?

164
00:17:27,882 --> 00:17:28,702
What about clone and possess?

165
00:17:29,443 --> 00:17:30,944
Clone and infinite exit, and so on.

166
00:17:35,457 --> 00:17:38,178
Another technique was to try interesting or extreme geometry.

167
00:17:38,838 --> 00:17:40,079
So I'll list these out from top left.

168
00:17:40,699 --> 00:17:44,580
A level with no easily accessible upwards facing walls.

169
00:17:45,060 --> 00:17:45,821
Interesting geometry.

170
00:17:46,481 --> 00:17:47,901
Or what about a level with no walls at all?

171
00:17:48,221 --> 00:17:49,602
And it turns out this is actually a cool puzzle.

172
00:17:50,882 --> 00:17:54,003
What about a box that's entirely filled with other boxes?

173
00:17:55,764 --> 00:17:59,865
Or what about a three by three very small recursive area that's fun to navigate in?

174
00:18:00,566 --> 00:18:04,687
Or what about a box that contains eight copies of itself, which creates a really trippy and interesting interaction?

175
00:18:09,313 --> 00:18:11,955
These are what I like to call things almost happen moments.

176
00:18:12,716 --> 00:18:13,297
I really like these.

177
00:18:13,677 --> 00:18:19,422
So when watching a playtesters, sometimes they would try things that wouldn't work out for whatever reason.

178
00:18:19,442 --> 00:18:20,202
They weren't the solution.

179
00:18:21,183 --> 00:18:23,425
But what if those things they tried actually were the solution?

180
00:18:25,607 --> 00:18:26,428
And make a puzzle about that.

181
00:18:26,508 --> 00:18:30,992
So here on the left, here's an example of a playtester who would want to free this blue box from the left wall.

182
00:18:31,532 --> 00:18:34,595
And they try to push this green clone box into it, but it doesn't end up working.

183
00:18:35,623 --> 00:18:40,167
But on the right here, then I made this puzzle where you actually do use these clone boxes to free boxes from the wall.

184
00:18:42,328 --> 00:18:47,032
So I like to think of this as sort of like crowdsourcing puzzle ideas to play testers, which is pretty cool.

185
00:18:47,132 --> 00:18:48,173
Highly recommend this technique.

186
00:18:49,174 --> 00:18:58,441
And it's also another reason why I like to pay very, very close attention to each and every play tester and every minute of their actions to really get into their mental models and make a lot of observations.

187
00:19:03,221 --> 00:19:04,522
These are what I like to call show levels.

188
00:19:05,003 --> 00:19:08,965
So on the left, here's a level very early in the game, which just shows you you can enter and exit boxes.

189
00:19:09,806 --> 00:19:11,347
And there's actually no way to fail this level.

190
00:19:13,349 --> 00:19:18,973
On the middle, here's a level where all you do is enter four levels deep into boxes, and then just go out four levels.

191
00:19:19,053 --> 00:19:20,754
It's just to show you you can go lots of levels deep.

192
00:19:21,935 --> 00:19:28,540
And on the right, here's a level where there's a blue box that contains an orange box, and all you have to do is flip them so that the orange box contains the blue box.

193
00:19:30,403 --> 00:19:32,768
All three of these are absolutely trivial levels to solve.

194
00:19:33,650 --> 00:19:38,521
You might not even call them puzzles, but they still showcase cool things, and players find these levels delightful.

195
00:19:39,563 --> 00:19:41,087
So you don't always need a challenge.

196
00:19:45,892 --> 00:19:48,653
When making puzzles, I tried to be diligent about investigating variations.

197
00:19:49,533 --> 00:19:51,454
So, for example, here I made this puzzle, which I liked.

198
00:19:52,214 --> 00:19:54,295
And then I thought, oh, what would an easier version look like?

199
00:19:54,675 --> 00:19:57,216
And, oh, actually, that ended up being pretty good.

200
00:19:57,776 --> 00:19:59,137
And what would a harder version look like?

201
00:19:59,837 --> 00:20:01,138
Oh, actually, that one's good enough to keep, too.

202
00:20:02,058 --> 00:20:04,099
And what kind of additional constraints could I put on?

203
00:20:04,319 --> 00:20:07,600
Oh, here's another additional constraint, like a weird line constraint.

204
00:20:08,080 --> 00:20:09,961
And so now I have four good puzzles.

205
00:20:12,360 --> 00:20:15,741
So I tried to investigate all these possible variations with every puzzle I made.

206
00:20:19,881 --> 00:20:22,222
I got used to doing lots of digging when making puzzles.

207
00:20:22,562 --> 00:20:27,744
So this game has 364 puzzles that it shipped with, but also over 600 unused draft levels.

208
00:20:28,405 --> 00:20:37,788
And these were levels that were ideas that didn't quite materialize into a real puzzle, or there were older versions of puzzles that did ship, or there were puzzles that just weren't that great.

209
00:20:39,449 --> 00:20:48,753
So at the beginning of development, I got kind of discouraged by this, but by the end I learned not to get discouraged by this, and that it's just part of the process, and there's a lot of trial and error involved.

210
00:20:53,548 --> 00:21:02,052
Related to this, I found that one kind of simple heuristic of what makes a good puzzle system is simply, well, what's the number of, how many puzzles can you make in it?

211
00:21:03,473 --> 00:21:10,716
When making Parabox, early on, it just ended up being that, oh, I can make a lot of puzzles in it, and that encouraged me to continue on with this prototype.

212
00:21:12,057 --> 00:21:19,361
Nowadays, as I make more prototypes, I find it helpful to keep this heuristic in mind when thinking about which prototypes I want to pursue more.

213
00:21:20,221 --> 00:21:23,142
It's sort of just an obvious heuristic of, well, the proof is in the pudding.

214
00:21:23,242 --> 00:21:24,803
How many puzzles can you actually make in it?

215
00:21:26,404 --> 00:21:30,385
Now I want to switch gears again, and lastly I'll talk about a few mechanics a little bit.

216
00:21:31,466 --> 00:21:39,309
So, early on in the game, I faced this, one of many dilemmas I faced about the mechanics was, what if you try to enter a box, but there's like multiple openings on that side of the box?

217
00:21:39,749 --> 00:21:40,690
Which opening do you enter?

218
00:21:41,815 --> 00:21:42,715
I was concerned about this.

219
00:21:42,955 --> 00:21:48,817
And you can see in this image right now the player enters no opening because the player only checks the center spot on that side.

220
00:21:48,897 --> 00:21:51,538
And here you can see it's filled by a wall so you can't enter it.

221
00:21:53,698 --> 00:22:00,140
I then tried this system where you can actually enter any spot and it just prioritizes ones that are closer to the center.

222
00:22:00,520 --> 00:22:06,382
So now it's like a, so you can see with these numbers, number one is in the center and then it sort of spirals outward which ones it tries.

223
00:22:08,287 --> 00:22:09,795
I like this because it was more flexible.

224
00:22:09,936 --> 00:22:11,645
I can make more levels and it, you know.

225
00:22:13,032 --> 00:22:24,196
But I ended up then realizing, no, actually, I don't like this, and I think this is bad, because it's kind of a complex system that I'm introducing, and it felt kind of arbitrary, and like, how do you break ties and stuff?

226
00:22:24,636 --> 00:22:33,940
And also, we're gonna be, this is something that the player has to keep in their mind the entire time they're playing at every level, in addition to all this recursive stuff mechanics are gonna be piling on top of it.

227
00:22:35,060 --> 00:22:40,122
So I reverted to the center-only behavior on the left, and that ended up being a good call.

228
00:22:45,292 --> 00:22:46,073
Here's another example.

229
00:22:46,193 --> 00:22:54,645
I knew I wanted to try this mechanic of, well, I wanted to be able to transfer consciousness of your player into another box so that you can control, like, multiple boxes with different shapes.

230
00:22:56,002 --> 00:23:00,644
My first attempt was to add this little arrow object where you just push a box onto it and then you control that box.

231
00:23:01,424 --> 00:23:03,325
Very straightforward, obvious thing to try.

232
00:23:04,105 --> 00:23:04,545
And this worked.

233
00:23:04,725 --> 00:23:08,727
You know, I can make some puzzles with it, but it kind of felt weird or wrong or arbitrary.

234
00:23:09,287 --> 00:23:12,108
It's kind of a touchy-feely thing, but I didn't quite like it.

235
00:23:13,648 --> 00:23:23,432
I next tried this, which was you transfer consciousness or possess a box when you squish it against a wall, and if you hit a solid wall, then you transfer consciousness.

236
00:23:24,867 --> 00:23:27,409
Otherwise, if it's an opening on that side, you just enter it.

237
00:23:28,429 --> 00:23:34,793
I like this a lot better because this synergizes with other mechanics, because different sides can have different geometries, so you can synergize with other mechanics.

238
00:23:35,833 --> 00:23:36,954
It just felt better.

239
00:23:37,775 --> 00:23:41,557
So I went with this version on the right, and I'm glad I did not go with the first one.

240
00:23:41,577 --> 00:23:43,558
I'm glad I did investigate another variation.

241
00:23:45,263 --> 00:23:47,824
Here's a few mechanics I tried very early on in development.

242
00:23:48,604 --> 00:23:56,248
So I had this, like, a weight object where you could, like, push a weight inside of a box, and then now that box becomes weighted, which means you cannot push it.

243
00:23:56,368 --> 00:23:56,948
It's, like, heavy.

244
00:23:58,629 --> 00:24:04,551
And then I also had an object where you could push the shield inside of a box, and now that box is shielded, which means you cannot enter or exit it.

245
00:24:04,571 --> 00:24:08,013
There's, like, a shield that you bump into around the box, which is, yeah, it's okay.

246
00:24:08,693 --> 00:24:18,898
and then I had sticky boxes which stick to each other when you push them and you can unstick the boxes by putting them on a block edge and using the recursion to unstick them.

247
00:24:18,918 --> 00:24:28,522
These all felt kind of cool and I was like, oh yeah, I kind of like them, but I didn't like them that as much and I want to contrast these with other mechanics that did make it in the game.

248
00:24:29,302 --> 00:24:39,244
which are, for example, a box containing multiple copies of itself, or a box containing a horizontally flipped copy of itself, or, of course, the player itself being a box that can contain other boxes.

249
00:24:40,065 --> 00:24:45,026
These are sort of more natural extensions of the system that sort of almost don't quite feel like mechanics.

250
00:24:45,226 --> 00:24:48,346
I mean, I don't know what terms we're using here, but these felt a lot better to me.

251
00:24:48,466 --> 00:24:51,547
They gave rise to lots of puzzles, and they were just organic.

252
00:24:53,108 --> 00:24:54,368
So I didn't use any of the ones on the left.

253
00:24:55,408 --> 00:25:05,251
So my two learnings from this are always to investigate more mechanics, don't just go with the first things that come to my mind, and try to always think of what's natural, what natural extensions can I do.

254
00:25:09,633 --> 00:25:12,874
Here are three mechanics that did feel natural, but didn't make it into the main game.

255
00:25:13,554 --> 00:25:21,897
So on the left, here's what happens if you, if entering a box takes priority over pushing a box, whereas in the main game it's actually the other way around, the priority.

256
00:25:22,750 --> 00:25:28,274
In the middle, what happens if you exit a box against a wall, if you could squish out and free that box from the wall?

257
00:25:28,835 --> 00:25:29,495
That kind of makes sense.

258
00:25:30,396 --> 00:25:36,461
On the right is what happens if you could push a box around from inside of it, kind of like piloting a submarine or something.

259
00:25:37,802 --> 00:25:41,705
These are all cool, but they just didn't work out for the main game.

260
00:25:41,725 --> 00:25:48,110
They didn't play well with other mechanics, or they didn't feel right, or they didn't make a lot of puzzles combining with other mechanics.

261
00:25:48,150 --> 00:25:48,831
They just didn't work out.

262
00:25:49,985 --> 00:25:56,271
But I still, these were still in my mind and I liked them and I thought they were worth showcasing when I'm thinking about showcasing things about the system.

263
00:25:56,952 --> 00:26:07,483
So I came up with this idea of let's actually include these three areas in the post-game which do have these mechanics but they're confined to that post-game so they don't contaminate the rest of the game and the other mechanics.

264
00:26:08,721 --> 00:26:09,722
So I was happy with the solution.

265
00:26:10,002 --> 00:26:11,382
These are cool puzzles and mechanics.

266
00:26:11,903 --> 00:26:19,787
I'm glad I found a way to showcase more things about this system that otherwise I wouldn't have been able to showcase without this format.

267
00:26:20,587 --> 00:26:30,252
So you might be interested in using some kind of appendix format in your game, or maybe you can think of another creative format thing to showcase more things you otherwise wouldn't have been able to.

268
00:26:34,353 --> 00:26:36,375
All right, so to recap everything.

269
00:26:37,516 --> 00:26:43,521
So my goal in making this game was to showcase this recursive box system that I had luckily discovered and that I found really cool.

270
00:26:45,442 --> 00:26:55,651
To that end, I made the puzzles an approachable difficulty and style because my goal was to showcase, and also this ended up really broadening the game's audience.

271
00:26:57,252 --> 00:27:02,997
I put a lot of iteration into smoothing the learning curve, which I talked about inserting, modifying, deleting puzzles.

272
00:27:05,023 --> 00:27:08,088
I really endorsed this playtesting with video and narration format.

273
00:27:10,251 --> 00:27:15,198
I talked about a few techniques for finding puzzle ideas, like finding cool things that are worth showcasing.

274
00:27:17,000 --> 00:27:20,225
And a few instances where I iterated on the core mechanics of the game.

275
00:27:24,379 --> 00:27:28,626
Here are five online puzzle design resources which I highly recommend.

276
00:27:29,187 --> 00:27:30,530
These have been very influential to me.

277
00:27:31,531 --> 00:27:32,533
Would recommend checking them out.

278
00:27:33,515 --> 00:27:35,018
And here's my contact information.

279
00:27:35,959 --> 00:27:36,200
Thank you.

