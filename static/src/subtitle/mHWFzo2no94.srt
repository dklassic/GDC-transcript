1
00:00:06,585 --> 00:00:07,346
Welcome, everyone.

2
00:00:09,848 --> 00:00:10,729
Two things first.

3
00:00:11,630 --> 00:00:13,411
Please remember to silence your mobile phones.

4
00:00:14,652 --> 00:00:16,874
And also remember to turn in the electronic feedback

5
00:00:17,114 --> 00:00:18,335
and at the end of the session.

6
00:00:19,196 --> 00:00:23,059
It's really helpful for next year for all of us speaking.

7
00:00:25,421 --> 00:00:26,962
My name is Arne Ola Hellingstad.

8
00:00:26,982 --> 00:00:28,964
I'm the lead gameplay programmer at Splash Damage.

9
00:00:30,125 --> 00:00:31,506
And I think we'll start.

10
00:00:34,314 --> 00:00:35,975
So first a little bit about Splash Damage.

11
00:00:36,235 --> 00:00:41,038
It was founded in 2001 by members of the Quake 3 mod

12
00:00:41,058 --> 00:00:41,498
community.

13
00:00:43,939 --> 00:00:46,861
We specialize in making multiplayer, team,

14
00:00:47,041 --> 00:00:48,982
and objective-based first-person shooter games.

15
00:00:50,642 --> 00:00:53,824
And the first one we released was Wolfenstein,

16
00:00:53,864 --> 00:00:54,524
Enemy Territory.

17
00:00:55,505 --> 00:00:56,986
It was a free-to-play game.

18
00:00:57,706 --> 00:00:59,587
Unfortunately, we forgot to monetize that.

19
00:01:01,488 --> 00:01:02,569
That was back in 2003, I believe.

20
00:01:05,710 --> 00:01:09,471
We then released Anime Territory Quake Wars in 2007,

21
00:01:10,691 --> 00:01:14,072
and then May of last year we released Brink,

22
00:01:14,933 --> 00:01:16,393
our first multi-platform title.

23
00:01:18,634 --> 00:01:21,555
We have a fairly small team at Splash Damage,

24
00:01:22,195 --> 00:01:24,736
as we have to be very focused on what we try to innovate on.

25
00:01:26,637 --> 00:01:29,537
And then, one of the really important parts at Splash Damage

26
00:01:29,557 --> 00:01:31,598
is to evolve the multiplayer shooter genre.

27
00:01:34,600 --> 00:01:37,503
So that leads into the goals for Brink.

28
00:01:38,764 --> 00:01:40,486
As one of the things we wanted to improve on

29
00:01:40,627 --> 00:01:43,970
was the player movement when playing in multiplayer.

30
00:01:45,201 --> 00:01:47,302
We wanted a more fluid play movement.

31
00:01:47,702 --> 00:01:52,025
And this is kind of how the engine looks at the player

32
00:01:52,105 --> 00:01:53,085
as he moves around the level.

33
00:01:54,206 --> 00:01:55,366
It's not really ideal.

34
00:01:56,367 --> 00:02:00,329
You easily get snagged on corners and table heights

35
00:02:00,429 --> 00:02:01,549
and chairs and everything.

36
00:02:03,050 --> 00:02:05,731
And the player sees himself more like this.

37
00:02:07,172 --> 00:02:10,033
And this is also how we want the engine to see the player.

38
00:02:10,394 --> 00:02:11,254
So that was the goal.

39
00:02:13,212 --> 00:02:19,476
Any solution to this problem also needed to be consistent across multiple maps with the same geometry.

40
00:02:21,458 --> 00:02:25,801
It also needed to be accessible for even casual players.

41
00:02:27,022 --> 00:02:28,163
That was a really important point.

42
00:02:29,203 --> 00:02:32,866
And also we had different body types from game design,

43
00:02:33,547 --> 00:02:37,590
which had different restrictions on what they could do in the environment.

44
00:02:39,785 --> 00:02:41,926
And also, any solution to this couldn't

45
00:02:41,986 --> 00:02:44,468
require any extra level design work, ideally.

46
00:02:47,930 --> 00:02:50,832
And also, it needed to be used by the AI for pathfinding

47
00:02:51,012 --> 00:02:53,294
on the map and be able to use the same kind of movement

48
00:02:53,394 --> 00:02:53,994
as the player did.

49
00:02:56,476 --> 00:02:58,557
So smart movement is what it's called.

50
00:03:00,367 --> 00:03:02,809
It stands for smooth movement across random terrain.

51
00:03:04,169 --> 00:03:08,612
So we have an example test map here.

52
00:03:09,012 --> 00:03:13,434
Here we have a wall hop into a step up, it's called,

53
00:03:13,554 --> 00:03:19,037
into a vault. Here we have a mantle into a slide

54
00:03:19,178 --> 00:03:21,119
under the railing into a mantle.

55
00:03:22,419 --> 00:03:23,920
Then we have a wall hop into mantle.

56
00:03:24,320 --> 00:03:26,462
And finally, we have just a mantle.

57
00:03:28,782 --> 00:03:29,962
So what we'll cover in this talk,

58
00:03:30,802 --> 00:03:32,383
first we'll look at the prototype.

59
00:03:33,604 --> 00:03:35,344
We'll look at the pre-computation step.

60
00:03:36,685 --> 00:03:40,486
Then we'll look at the runtime detection, runtime execution,

61
00:03:41,047 --> 00:03:43,448
and finally, the lessons learned from implementing.

62
00:03:45,748 --> 00:03:46,249
Prototype.

63
00:03:49,550 --> 00:03:52,151
So the goal of the prototype was to prove

64
00:03:52,191 --> 00:03:54,712
the variability of the smart movement in a multiplayer game

65
00:03:55,753 --> 00:03:57,913
and also the impact this had on level design.

66
00:03:58,566 --> 00:03:59,066
and gameplay.

67
00:04:00,167 --> 00:04:03,289
We started the prototype right after we finished Quake Wars.

68
00:04:07,832 --> 00:04:11,875
The prototype we had used runtime collision traces

69
00:04:11,915 --> 00:04:13,216
to find ledges in the map.

70
00:04:14,877 --> 00:04:17,078
And the prototype was refined over six months,

71
00:04:17,098 --> 00:04:20,841
where we iterated on different heights

72
00:04:21,001 --> 00:04:22,061
for mantling and vaulting.

73
00:04:22,081 --> 00:04:26,905
And I'll just get a good feeling for moving around in the level.

74
00:04:28,677 --> 00:04:32,038
So if you look at an example of a player near a ledge

75
00:04:32,538 --> 00:04:34,699
and how ledge detection work for the prototype,

76
00:04:36,900 --> 00:04:39,740
we have first a trace to find the ground,

77
00:04:40,641 --> 00:04:42,741
to find the height above the ground.

78
00:04:43,342 --> 00:04:46,302
We then have a trace forward in the player's forward direction

79
00:04:46,362 --> 00:04:47,483
to find a wall, potentially.

80
00:04:50,784 --> 00:04:53,865
We then do two traces, a low edge and a high ledge trace.

81
00:04:54,965 --> 00:04:56,566
We potentially want to do different things

82
00:04:57,306 --> 00:05:00,367
if the player has two different ledges.

83
00:05:04,148 --> 00:05:07,769
If you look at the simpler example of just one low ledge,

84
00:05:09,830 --> 00:05:11,871
we trace the player's clip up to the ledge height

85
00:05:11,971 --> 00:05:17,112
at this point to make sure we have nothing obstructing.

86
00:05:18,719 --> 00:05:20,340
And then we trace the clip over the ledge

87
00:05:20,460 --> 00:05:22,542
to make sure we can actually go onto the other side of the ledge.

88
00:05:23,202 --> 00:05:25,264
And then finally, we trace down to make

89
00:05:25,304 --> 00:05:27,645
sure the fall on the other side of the ledge isn't too high.

90
00:05:28,726 --> 00:05:30,948
And if all that's fine, then we do a vault over the ledge.

91
00:05:31,608 --> 00:05:33,169
Otherwise, we go back onto the ledge

92
00:05:34,110 --> 00:05:36,191
and trace down there to make sure the play can

93
00:05:36,231 --> 00:05:38,293
stand on the ledge itself if the fall is

94
00:05:38,313 --> 00:05:39,413
too high on the other side.

95
00:05:41,655 --> 00:05:43,276
So some successes from the prototype.

96
00:05:43,496 --> 00:05:44,676
It was very easy to implement.

97
00:05:44,796 --> 00:05:46,396
It took a couple of days probably

98
00:05:46,456 --> 00:05:49,437
to get something very basic going, just

99
00:05:49,457 --> 00:05:52,678
to get a feel for how it works.

100
00:05:52,938 --> 00:05:55,178
It didn't require any level design placed hint objects.

101
00:05:57,239 --> 00:05:59,459
And it also worked on any map in the level.

102
00:06:01,560 --> 00:06:03,300
Also on the same geometry on different maps,

103
00:06:03,900 --> 00:06:05,760
we were guaranteed to have the same results

104
00:06:06,000 --> 00:06:07,981
because it was all dynamic based on traces.

105
00:06:11,429 --> 00:06:13,130
Some issues with the prototype.

106
00:06:14,030 --> 00:06:15,850
It required at least one trace every frame

107
00:06:15,870 --> 00:06:20,491
to actually see if the player was near a ledge.

108
00:06:21,452 --> 00:06:24,372
Oh, that was the wrong button.

109
00:06:27,033 --> 00:06:27,393
Questions?

110
00:06:27,413 --> 00:06:29,213
No.

111
00:06:30,934 --> 00:06:30,974
No.

112
00:06:30,994 --> 00:06:31,034
No.

113
00:06:31,054 --> 00:06:31,394
Let's see.

114
00:06:41,440 --> 00:06:43,982
There you go.

115
00:06:44,842 --> 00:06:47,403
And in the worst case, it required eight traces

116
00:06:48,324 --> 00:06:49,244
per player per frame.

117
00:06:49,345 --> 00:06:54,647
So in a 16 multiplayer game like Brink, 128 traces potentially.

118
00:06:54,867 --> 00:06:58,349
There's stuff you could do like time slicing and not

119
00:06:58,369 --> 00:06:59,190
doing it every frame.

120
00:06:59,370 --> 00:07:01,151
But we are thinking of a different way

121
00:07:01,171 --> 00:07:01,931
of doing it anyways.

122
00:07:03,892 --> 00:07:04,833
So pre-computation.

123
00:07:09,307 --> 00:07:11,149
So the NAMMESH system in Brink we

124
00:07:11,209 --> 00:07:12,389
use for the AR pathfinding.

125
00:07:14,531 --> 00:07:17,213
It's a map compile step for production maps.

126
00:07:17,593 --> 00:07:21,696
It's about 20 minutes to generate the NAMMESH.

127
00:07:24,178 --> 00:07:26,639
And all it does is look at the map geometry

128
00:07:26,819 --> 00:07:31,583
and generates areas with flat areas in the map.

129
00:07:33,932 --> 00:07:38,754
And then create reach abilities between those areas

130
00:07:39,854 --> 00:07:42,815
to tell the AI how to move between those areas.

131
00:07:43,395 --> 00:07:45,076
I mean, we were thinking we could potentially

132
00:07:45,156 --> 00:07:46,476
use this for smart movements.

133
00:07:49,297 --> 00:07:50,657
So looking at the reach abilities,

134
00:07:51,777 --> 00:07:54,598
we looked at all the edges between all the areas in the map.

135
00:07:56,649 --> 00:07:59,532
And if the edges between two areas overlap vertically,

136
00:07:59,852 --> 00:08:02,615
there was a potential for creating a reachability

137
00:08:02,695 --> 00:08:03,736
between those two areas.

138
00:08:06,038 --> 00:08:08,360
And if we did find an interesting edge,

139
00:08:08,380 --> 00:08:10,983
we stored the edge segment so we knew exactly which ledge

140
00:08:11,543 --> 00:08:12,544
we were interested in.

141
00:08:12,564 --> 00:08:16,188
And we also stored a tower flag which

142
00:08:16,308 --> 00:08:19,471
tells the AI how to move between those two areas.

143
00:08:24,545 --> 00:08:28,246
So for smart movement, we added a couple of new reachability

144
00:08:28,286 --> 00:08:29,126
types.

145
00:08:29,166 --> 00:08:33,767
The barrier vault reachability for fairly low ledges.

146
00:08:34,967 --> 00:08:39,608
Created the barrier mantle reachability between, I think,

147
00:08:39,968 --> 00:08:41,748
0.8 and 1.4 times the player's height.

148
00:08:44,049 --> 00:08:46,169
It was used for AR pathfinding as well, which was good.

149
00:08:49,550 --> 00:08:51,690
And it was also used by the players and bots

150
00:08:52,190 --> 00:08:53,870
for moving in the level.

151
00:08:56,367 --> 00:08:59,109
This had an issue after actually implementing this.

152
00:08:59,450 --> 00:09:02,653
There was the obvious case of the player standing

153
00:09:02,753 --> 00:09:04,895
on a high ledge and not being able to jump

154
00:09:05,015 --> 00:09:07,257
onto another high ledge and being able to either

155
00:09:07,297 --> 00:09:08,538
mantle or vault that ledge.

156
00:09:09,739 --> 00:09:11,480
So we quickly created Barrier Dynamic,

157
00:09:12,341 --> 00:09:13,582
which is only used by players.

158
00:09:15,003 --> 00:09:17,986
Our AI programmer is Magic and had lots of work to do.

159
00:09:19,407 --> 00:09:21,029
So we didn't solve this for AI.

160
00:09:24,771 --> 00:09:26,753
And if you could actually do a water mantle,

161
00:09:26,773 --> 00:09:27,874
we decided at runtime.

162
00:09:27,894 --> 00:09:32,277
And also, the issue with this was

163
00:09:32,317 --> 00:09:35,039
that it created an explosion in number of reachabilities

164
00:09:35,119 --> 00:09:35,480
in map.

165
00:09:35,540 --> 00:09:37,641
So what we did was, if there already

166
00:09:37,661 --> 00:09:41,204
was a reachability nearby, a potential new reachability,

167
00:09:41,645 --> 00:09:44,947
we called away or just ignored the new reachability.

168
00:09:45,748 --> 00:09:46,809
And that seemed to solve the problem.

169
00:09:47,878 --> 00:09:49,739
Unfortunately, I don't have the exact numbers

170
00:09:49,879 --> 00:09:52,840
for the performance issues with this expression

171
00:09:52,860 --> 00:09:55,200
in number of reachabilities or the memory issues,

172
00:09:55,381 --> 00:09:57,801
but they're both issues.

173
00:10:06,003 --> 00:10:08,164
So look at the slide, which is a bit different.

174
00:10:09,804 --> 00:10:12,425
In the NAMESH, you have areas, and some areas

175
00:10:12,505 --> 00:10:14,586
are marked low ceiling, which means

176
00:10:14,626 --> 00:10:17,066
you can't move into those areas unless you crouch.

177
00:10:18,419 --> 00:10:19,339
both players and bots.

178
00:10:21,320 --> 00:10:24,081
Players can auto-slide into these areas, potentially.

179
00:10:24,101 --> 00:10:27,463
And that's all there was to slides.

180
00:10:29,063 --> 00:10:29,944
Runtime detection.

181
00:10:31,644 --> 00:10:35,586
So at this point, the map has information about the ledges

182
00:10:36,786 --> 00:10:38,547
we are interested in for smart movement.

183
00:10:39,928 --> 00:10:42,269
And we move now over to the player physics loop,

184
00:10:42,289 --> 00:10:44,750
where we actually try to find those ledges

185
00:10:45,190 --> 00:10:48,071
and put the player in the proper physics state.

186
00:10:50,213 --> 00:10:52,374
So it consists of a number of steps.

187
00:10:52,434 --> 00:10:54,034
First, we check if the player is on the ground,

188
00:10:54,294 --> 00:10:56,215
and if not, the height above the ground.

189
00:10:57,315 --> 00:10:59,056
We then curate the player's body type

190
00:10:59,836 --> 00:11:01,076
for the available movement modes.

191
00:11:01,396 --> 00:11:03,397
We have light, medium, and heavy body types.

192
00:11:03,997 --> 00:11:05,297
And they have different restrictions

193
00:11:05,397 --> 00:11:06,337
on what they can do in the map.

194
00:11:08,238 --> 00:11:11,139
The third step was to detect any high moves, which is

195
00:11:11,179 --> 00:11:12,459
the vault, mantling, and wall hop.

196
00:11:15,280 --> 00:11:17,800
We then detect low moves, which is the slide.

197
00:11:19,482 --> 00:11:21,704
Fifth step is to choose an active move.

198
00:11:22,185 --> 00:11:24,147
You could potentially find a high and low move,

199
00:11:24,988 --> 00:11:27,330
and there's a condition for which one you actually choose.

200
00:11:29,112 --> 00:11:30,914
Finally, we update the player state machine

201
00:11:31,194 --> 00:11:35,819
and potentially put the player in a smart movement state.

202
00:11:37,801 --> 00:11:39,783
Looking first at the detection of the high moves.

203
00:11:43,434 --> 00:11:46,496
So it consists of three parts, the player checks,

204
00:11:46,657 --> 00:11:49,879
the NAMMESH query, and then finally, the evaluation

205
00:11:49,919 --> 00:11:50,479
of high moves.

206
00:11:53,021 --> 00:11:56,844
We do any quick checks before curing the NAMMESH.

207
00:11:57,945 --> 00:11:59,526
Curing the NAMMESH is fairly expensive.

208
00:12:00,527 --> 00:12:04,169
So first, we check if the player is in any active state

209
00:12:04,189 --> 00:12:07,792
at the moment, things like vaulting, mantling, sliding,

210
00:12:07,812 --> 00:12:09,853
iron sighting, or being knocked down.

211
00:12:14,022 --> 00:12:15,903
Second step is the damage query.

212
00:12:17,004 --> 00:12:18,585
So we create a search bounce, which

213
00:12:18,645 --> 00:12:21,346
is six times the player's bounding box width,

214
00:12:21,846 --> 00:12:24,008
and two and a half times the player's bounding box height.

215
00:12:24,988 --> 00:12:28,890
And this size is a medium between too big a size

216
00:12:29,571 --> 00:12:31,712
for performance reasons, and too small

217
00:12:31,772 --> 00:12:36,274
to actually not actually find any interesting ledges

218
00:12:36,414 --> 00:12:36,915
around the player.

219
00:12:39,989 --> 00:12:42,910
So we query the BSP tree with all the ledges,

220
00:12:44,371 --> 00:12:46,652
and we get a list of areas around the player.

221
00:12:48,693 --> 00:12:51,335
And we look at each area and for each reachability

222
00:12:51,595 --> 00:12:52,195
in each area.

223
00:12:52,956 --> 00:12:56,438
And if the reachability has a barrier vault, barrier mantle,

224
00:12:56,478 --> 00:13:01,241
or barrier dynamic flag, then we append that reachability

225
00:13:01,341 --> 00:13:01,681
to our list.

226
00:13:05,218 --> 00:13:06,279
Evaluation of high moves.

227
00:13:06,739 --> 00:13:09,581
So at this point, we have a list of reach abilities.

228
00:13:10,562 --> 00:13:12,963
We iterate those to filter them down further.

229
00:13:12,983 --> 00:13:16,646
And one thing is the player must be looking at the ledge.

230
00:13:17,787 --> 00:13:20,268
And the distance to the ledge can't

231
00:13:20,308 --> 00:13:23,610
be more than 2 and 1 1 times the player's spawning box width.

232
00:13:25,792 --> 00:13:29,495
There's some specific checks for each of the movement types.

233
00:13:29,795 --> 00:13:31,716
For the vault, the ledge height needs

234
00:13:31,736 --> 00:13:33,037
to be between 0.4 and 0.8 times.

235
00:13:34,689 --> 00:13:38,833
The player's height for the mantle,

236
00:13:39,233 --> 00:13:42,335
the ledge height needs to be between 0.8 and 1.4 times.

237
00:13:43,476 --> 00:13:45,738
And we also had auto wall hop.

238
00:13:47,099 --> 00:13:50,142
So the ledge height needed to be within the mantle height

239
00:13:50,943 --> 00:13:52,624
plus the player's jump height.

240
00:14:00,411 --> 00:14:03,173
At this point, we have a fairly filtered list of reach

241
00:14:03,193 --> 00:14:03,613
abilities.

242
00:14:05,943 --> 00:14:11,465
And if there's any at the moment and we have a wallhop and a mantle, we exclude the wallhops.

243
00:14:13,546 --> 00:14:16,127
And we also have a mutual exclusion between the mantle and vault.

244
00:14:16,947 --> 00:14:20,568
We allow the mantle if the player is within one and a half times the player's bounding

245
00:14:20,588 --> 00:14:21,009
box width.

246
00:14:21,789 --> 00:14:23,110
Otherwise, we allow a vault.

247
00:14:24,320 --> 00:14:26,941
And the reasons for these checks is basically

248
00:14:27,001 --> 00:14:29,822
from play testing and design feedback.

249
00:14:31,083 --> 00:14:35,104
The goal is all the time to make a more fluid movement in the map.

250
00:14:35,944 --> 00:14:37,205
And these were the kinds of checks

251
00:14:37,805 --> 00:14:47,048
that allowed that to improve fluid movement in the map.

252
00:14:47,068 --> 00:14:48,828
Finally, we sort the potential list of moves

253
00:14:49,368 --> 00:14:51,089
by the ledge closest to the player.

254
00:14:54,517 --> 00:14:57,560
Step four, detection of low moves.

255
00:14:58,921 --> 00:15:00,062
So it's fairly similar here.

256
00:15:00,082 --> 00:15:01,983
So I'm not going to go into the first two here.

257
00:15:03,064 --> 00:15:05,847
And we'll go straight to the evaluation of the low moves.

258
00:15:09,189 --> 00:15:11,111
So instead of iterating on the reachabilities,

259
00:15:11,311 --> 00:15:13,393
we iterate on the areas themselves.

260
00:15:15,154 --> 00:15:17,836
And relative height to the area needs

261
00:15:17,857 --> 00:15:19,218
to be below 0.4 times the player's height.

262
00:15:23,326 --> 00:15:25,468
The area also needs to be marked as a low ceiling area.

263
00:15:27,730 --> 00:15:29,751
And we force the player into an auto crouch

264
00:15:30,372 --> 00:15:32,914
if the distance is very small to the area.

265
00:15:34,456 --> 00:15:35,957
And we force the player into a slide

266
00:15:36,017 --> 00:15:38,940
instead if the distance is within one and a half times

267
00:15:39,000 --> 00:15:40,121
the player's bounding box width.

268
00:15:42,062 --> 00:15:43,984
Similarly, we have a mutual exclusion.

269
00:15:44,004 --> 00:15:46,847
We allow the auto slide if the sprint button is held.

270
00:15:48,068 --> 00:15:49,449
Otherwise, we allow auto crouch.

271
00:15:54,890 --> 00:15:55,910
Finally, step five.

272
00:15:57,612 --> 00:15:59,613
If you have both a high and a low move,

273
00:16:00,374 --> 00:16:01,975
which one you actually choose is based

274
00:16:02,195 --> 00:16:03,276
on the pitch of the player.

275
00:16:03,296 --> 00:16:05,658
So if the player is looking up, you

276
00:16:05,678 --> 00:16:07,979
can expect him to want to move up on the ledge.

277
00:16:08,880 --> 00:16:11,182
Otherwise, he'll slide under.

278
00:16:11,202 --> 00:16:15,725
Moving on to runtime execution.

279
00:16:18,828 --> 00:16:21,629
So the player has been placed in the vault physics state,

280
00:16:21,649 --> 00:16:22,169
for example.

281
00:16:23,149 --> 00:16:25,930
It consists of an intro and an exit state.

282
00:16:28,171 --> 00:16:30,792
The intro state is where you initially calculate

283
00:16:30,832 --> 00:16:34,394
the duration of the vault. It's based on the player's incoming

284
00:16:34,434 --> 00:16:37,015
velocity and also the distance to the ledge itself.

285
00:16:38,115 --> 00:16:41,656
And we create a spline between the player's position,

286
00:16:42,937 --> 00:16:45,818
the ledge point, and somewhere inside the ledge.

287
00:16:47,962 --> 00:16:51,442
The exit state, all it does is a single frame state,

288
00:16:51,582 --> 00:16:55,443
and all it does is calculate the momentum of the player.

289
00:16:55,463 --> 00:17:01,965
It also calculates the direction of the sign from play testing

290
00:17:02,065 --> 00:17:03,365
and from the sign feedback here.

291
00:17:03,485 --> 00:17:06,966
It really makes sense to have the player have

292
00:17:07,106 --> 00:17:10,766
some decision or some influence on which direction

293
00:17:10,826 --> 00:17:11,807
move after vault.

294
00:17:11,947 --> 00:17:15,688
If you have some momentum, it makes for a much more fluid

295
00:17:16,068 --> 00:17:16,868
moment in the map.

296
00:17:19,532 --> 00:17:21,313
Finally, we clear the player's momentum

297
00:17:21,533 --> 00:17:23,174
if the drop is too high on the other side.

298
00:17:23,834 --> 00:17:25,275
And that's a trace we need to do.

299
00:17:28,476 --> 00:17:30,538
Metal physics states, so it's very similar.

300
00:17:30,818 --> 00:17:32,459
It has the additional climb state.

301
00:17:33,479 --> 00:17:35,140
Similarly, we calculate the spine

302
00:17:36,321 --> 00:17:38,342
from the start position, mid-wall position,

303
00:17:38,602 --> 00:17:40,163
and end position on top of the ledge.

304
00:17:41,992 --> 00:17:44,294
The intro state similarly calculates the duration,

305
00:17:44,514 --> 00:17:45,094
like the vault.

306
00:17:46,275 --> 00:17:47,636
And the goal of the intro state is

307
00:17:47,676 --> 00:17:49,337
to push the player in the correct position

308
00:17:49,857 --> 00:17:50,398
under the ledge.

309
00:17:52,659 --> 00:17:57,042
The climb state, it scales up the time for the whole move,

310
00:17:58,203 --> 00:18:00,244
because as you pull yourself up, it kind of

311
00:18:00,264 --> 00:18:01,785
makes sense to slow it down a bit.

312
00:18:02,886 --> 00:18:06,288
And the goal of that is to pull the player on top of the ledge.

313
00:18:08,165 --> 00:18:11,008
The single frame exit state again, all it does

314
00:18:11,108 --> 00:18:13,290
is clear the player's momentum for the vault.

315
00:18:16,252 --> 00:18:18,214
Slide and wallhop physics states.

316
00:18:19,455 --> 00:18:23,398
So for sliding, you're forced into a crouch state

317
00:18:23,439 --> 00:18:24,299
when you enter the slide.

318
00:18:24,319 --> 00:18:28,062
And all it does is force a constant velocity

319
00:18:28,143 --> 00:18:30,044
on the player in the direction you're

320
00:18:30,064 --> 00:18:31,185
traveling for about a second.

321
00:18:33,633 --> 00:18:36,074
For the wall hop, it's a single frame state.

322
00:18:36,694 --> 00:18:39,234
If you're next to a wall and press the wall, the jump

323
00:18:39,254 --> 00:18:41,695
button, for example, it's going to do a wall hop.

324
00:18:42,415 --> 00:18:45,796
It might also do, it might also have detected a wall hop

325
00:18:46,336 --> 00:18:49,397
previously, in which case it forces you to wall hop.

326
00:18:50,457 --> 00:18:52,498
And only the light body type may wall hop.

327
00:18:56,179 --> 00:18:57,980
Looking at the third person animations,

328
00:18:59,880 --> 00:19:02,321
so all the animations are driven by the physics states

329
00:19:02,381 --> 00:19:02,761
themselves.

330
00:19:04,512 --> 00:19:07,592
And for the slides, all it does is play the slide animation

331
00:19:07,652 --> 00:19:08,813
when you enter the slide state.

332
00:19:09,833 --> 00:19:12,794
For the vault, it plays the vault animation

333
00:19:13,194 --> 00:19:14,154
as you enter the intro.

334
00:19:15,974 --> 00:19:17,335
The mantle one, the most complex,

335
00:19:17,435 --> 00:19:19,515
it plays the intro, the grab animation,

336
00:19:19,535 --> 00:19:21,576
when you enter the intro state.

337
00:19:22,256 --> 00:19:24,796
And also plays the climb animation

338
00:19:25,036 --> 00:19:28,537
as a root motion with the origin at the ledge.

339
00:19:35,580 --> 00:19:40,704
So that's pretty much how it works in the physics.

340
00:19:41,905 --> 00:19:45,348
And we'll look at some clips from the shipping game.

341
00:20:13,583 --> 00:20:14,024
Good finish.

342
00:20:19,026 --> 00:20:20,087
So some conclusions.

343
00:20:21,347 --> 00:20:23,848
This system allowed for a much more fluid movement

344
00:20:24,008 --> 00:20:27,290
in environments, which was a super important goal for us

345
00:20:27,350 --> 00:20:28,010
at Splash Damage.

346
00:20:30,532 --> 00:20:32,633
We added a smart button, which is

347
00:20:32,753 --> 00:20:34,093
very similar to the sprint button.

348
00:20:34,213 --> 00:20:36,254
But when you held this button, it also

349
00:20:36,274 --> 00:20:38,896
allowed you to do all these movements automatically

350
00:20:39,196 --> 00:20:40,937
as you ran around in the environment.

351
00:20:45,387 --> 00:20:47,590
And it generated all the information

352
00:20:47,610 --> 00:20:49,792
we needed as a map compile step.

353
00:20:50,753 --> 00:20:54,977
It didn't require any level design, placed hint objects,

354
00:20:55,037 --> 00:20:55,798
or anything like that.

355
00:20:58,381 --> 00:20:59,722
We also had different restrictions

356
00:20:59,822 --> 00:21:01,884
on the different body types.

357
00:21:02,305 --> 00:21:04,507
Only the light body type could do the wall hop,

358
00:21:05,008 --> 00:21:06,729
and only the light and the medium body type

359
00:21:06,790 --> 00:21:07,851
could do the mantle.

360
00:21:08,788 --> 00:21:10,789
So it's a design decision to have

361
00:21:10,809 --> 00:21:13,991
a balance between different routes in the environment

362
00:21:14,391 --> 00:21:16,072
and how tough your guide was.

363
00:21:19,454 --> 00:21:20,215
Some lessons learned.

364
00:21:22,276 --> 00:21:24,177
The prototyping early on for six months

365
00:21:24,317 --> 00:21:25,718
allowed us to do quick iterations.

366
00:21:27,119 --> 00:21:29,560
Really important for getting all the metrics done

367
00:21:29,580 --> 00:21:31,241
before you actually enter production.

368
00:21:33,495 --> 00:21:36,417
uh... systems can successfully be used beyond their original intention

369
00:21:36,437 --> 00:21:38,458
uh... this being the Namesh system

370
00:21:41,781 --> 00:21:41,961
uh...

371
00:21:42,021 --> 00:21:42,961
quite a useful system

372
00:21:42,981 --> 00:21:44,843
to actually use uh...

373
00:21:46,004 --> 00:21:49,286
quite a good performance increase probably from the prototype early on

374
00:21:50,707 --> 00:21:54,069
uh... we could potentially give the client more authority over the physics

375
00:21:55,050 --> 00:21:56,691
uh... sir was the author

376
00:21:57,011 --> 00:21:57,371
inbrink

377
00:21:57,892 --> 00:21:58,232
uh... so

378
00:21:59,288 --> 00:22:00,930
the client could mispredict potentially,

379
00:22:00,950 --> 00:22:02,711
and the server would have to correct the client,

380
00:22:02,771 --> 00:22:06,034
and that could create tiny glitches on the client side.

381
00:22:08,976 --> 00:22:11,578
We could potentially have consolidated the physics states

382
00:22:11,658 --> 00:22:12,779
to save some network bandwidth.

383
00:22:14,240 --> 00:22:15,921
As an example, the mantle

384
00:22:17,695 --> 00:22:21,760
The mantle had an intro and a client state.

385
00:22:22,521 --> 00:22:23,983
And the server couldn't assume the client

386
00:22:24,003 --> 00:22:26,366
was in the client state when it told the client to go into that.

387
00:22:26,486 --> 00:22:29,650
So it had to resend some of the same information

388
00:22:29,670 --> 00:22:33,856
the client had from being in the intro state.

389
00:22:34,536 --> 00:22:36,499
So combining those could save some bandwidth.

390
00:22:40,987 --> 00:22:46,291
Thank you for listening. Um, you can visit us at splashdamage.com or send me an email at

391
00:22:46,471 --> 00:22:55,839
ao at splashdamage.com. Follow us on Twitter at splashdamage or at Arne Olov-Hal. Any

392
00:22:55,859 --> 00:22:56,239
questions?

393
00:23:06,187 --> 00:23:10,390
I think we have about two minutes for questions. So if you want to speak up, I'm going to

394
00:23:11,780 --> 00:23:12,261
Who's first?

395
00:23:13,682 --> 00:23:14,342
Just a quick question.

396
00:23:14,623 --> 00:23:17,245
So for the objects when you were doing all the locomotion

397
00:23:17,365 --> 00:23:19,166
over or around those objects, are you actually

398
00:23:19,206 --> 00:23:21,508
disabling collision between the player and the object

399
00:23:21,548 --> 00:23:23,450
that they're trying to vault or mantle or go under?

400
00:23:23,970 --> 00:23:27,173
Or are you doing anything specifically?

401
00:23:27,233 --> 00:23:29,675
Are you relying on the physics to push you out of that

402
00:23:29,715 --> 00:23:31,336
in case you try to go into it or anything like that?

403
00:23:32,135 --> 00:23:34,597
Yeah, we completely disable the physics,

404
00:23:35,137 --> 00:23:37,419
so we don't really care how you collide with anything.

405
00:23:37,920 --> 00:23:40,382
We just know the start position is inside the vault,

406
00:23:40,862 --> 00:23:42,663
and we know the end position is inside the vault,

407
00:23:43,224 --> 00:23:46,567
and the goal is to have a fluid and nice looking moment

408
00:23:46,807 --> 00:23:47,768
in between those two points.

409
00:23:50,477 --> 00:23:55,560
I was impressed that you made it completely dynamic, but I'm used to using mental brushes

410
00:23:56,240 --> 00:23:58,061
to dictate where the player would do these things.

411
00:23:58,161 --> 00:24:02,704
How much iteration was required from the level designers to prevent players from getting

412
00:24:02,724 --> 00:24:06,126
to places that they shouldn't, because it was dynamically allowed?

413
00:24:11,061 --> 00:24:14,123
nothing really, because you had the Namesh generation

414
00:24:14,343 --> 00:24:17,865
and that the reachability is guaranteed that the end

415
00:24:17,885 --> 00:24:20,347
position is within the world.

416
00:24:22,528 --> 00:24:24,569
So yeah.

417
00:24:25,269 --> 00:24:25,490
Cool.

418
00:24:25,770 --> 00:24:26,670
Does that answer your question?

419
00:24:26,690 --> 00:24:29,532
Yeah.

420
00:24:29,612 --> 00:24:31,173
Hi, so the smart button basically

421
00:24:31,213 --> 00:24:32,974
allowed players to automatically go

422
00:24:33,014 --> 00:24:34,175
into things like the Vantel.

423
00:24:37,869 --> 00:24:39,710
mantels are in the vaulting and sliding states.

424
00:24:40,010 --> 00:24:41,631
But you could also manually trigger those things

425
00:24:41,671 --> 00:24:43,272
by pressing the right button at the right time, right?

426
00:24:43,953 --> 00:24:44,173
Yeah.

427
00:24:44,613 --> 00:24:47,515
Were there areas that they could reach basically

428
00:24:47,635 --> 00:24:49,996
using that manual triggering of those states

429
00:24:50,116 --> 00:24:51,497
that they couldn't use with just a smart button?

430
00:24:53,744 --> 00:24:54,665
No, I don't think so.

431
00:24:55,265 --> 00:24:58,646
But the thing more competitive players did

432
00:24:59,287 --> 00:25:03,208
was you sprinted into a vault. And at some distance

433
00:25:03,609 --> 00:25:06,150
to the ledge, you started the vault.

434
00:25:06,570 --> 00:25:08,491
But they wanted to start that earlier, for example,

435
00:25:09,111 --> 00:25:09,711
in most cases.

436
00:25:09,851 --> 00:25:11,072
And you just press the jump button.

437
00:25:11,472 --> 00:25:14,033
And that forced you into the same vault as well.

438
00:25:14,193 --> 00:25:15,794
So in some cases, it actually was more efficient

439
00:25:15,814 --> 00:25:16,755
for you to trigger it manually?

440
00:25:16,955 --> 00:25:17,575
Yeah, that's true.

441
00:25:17,595 --> 00:25:17,735
Yeah.

442
00:25:18,996 --> 00:25:20,977
So unfortunately, I don't think we have more time.

443
00:25:21,711 --> 00:25:25,937
But thank you very much, and please remember to give some feedback.

444
00:25:26,718 --> 00:25:30,282
It's very useful to see what I can improve on for next year.

445
00:25:30,603 --> 00:25:30,823
Thank you.

