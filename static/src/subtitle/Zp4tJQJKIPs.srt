1
00:00:06,970 --> 00:00:10,812
Hi, my name is David Lightbound, and the name of this presentation is

2
00:00:11,232 --> 00:00:15,093
Tools Live Longer Than Games Do, what I learned by interviewing John Romero,

3
00:00:15,414 --> 00:00:18,255
Tim Sweeney, and other legendary game tools developers.

4
00:00:20,876 --> 00:00:22,876
So before I begin, I'll just tell you a little bit about me.

5
00:00:24,300 --> 00:00:26,081
I work as user experience director

6
00:00:26,681 --> 00:00:28,782
for the technology group at Ubisoft.

7
00:00:29,302 --> 00:00:32,083
The technology group is a group that

8
00:00:32,123 --> 00:00:34,604
creates engine agnostic technology

9
00:00:35,145 --> 00:00:37,245
for all the different teams at Ubisoft.

10
00:00:38,666 --> 00:00:43,288
And basically, I focus on user experience

11
00:00:43,428 --> 00:00:44,889
of the tools and pipelines.

12
00:00:46,850 --> 00:00:49,191
So before I worked in game development,

13
00:00:49,311 --> 00:00:50,891
I worked in web and motion design.

14
00:00:51,735 --> 00:00:55,797
So in the 1990s, if you knew a little bit of HTML,

15
00:00:56,718 --> 00:00:58,759
you had a pretty good chance of getting a job

16
00:00:59,399 --> 00:01:03,021
working in the exploding web design industry at that time.

17
00:01:04,041 --> 00:01:06,663
And so I learned a lot about 2D design

18
00:01:06,803 --> 00:01:07,823
and user interface design.

19
00:01:08,784 --> 00:01:10,264
And I also did a little bit of motion design

20
00:01:11,065 --> 00:01:13,166
because Flash was getting very popular at that time as well.

21
00:01:15,115 --> 00:01:18,216
And then in 2001, I had the opportunity to work

22
00:01:19,037 --> 00:01:20,618
in game development, which I've been wanting to do

23
00:01:20,658 --> 00:01:24,540
for a long time. I've been doing some 3D on the side at home,

24
00:01:25,220 --> 00:01:28,382
and so I took it, and I haven't looked back since.

25
00:01:28,422 --> 00:01:31,164
So it's been about 20 years now that I've been working

26
00:01:31,244 --> 00:01:32,725
in game development, which is pretty crazy.

27
00:01:35,887 --> 00:01:38,548
So I've spoken at various conferences around the world

28
00:01:38,748 --> 00:01:40,829
on the topic of user experience design

29
00:01:40,969 --> 00:01:41,910
in game development tools.

30
00:01:42,695 --> 00:01:48,979
So a couple of times at GDC, but also at SIGGRAPH, at CEDEC,

31
00:01:49,619 --> 00:01:52,541
at the UX Summit, at the Montreal Games Summit.

32
00:01:53,862 --> 00:01:55,744
But yeah, always on this topic that I'm

33
00:01:55,784 --> 00:01:58,666
very passionate about, which is the user experience of game

34
00:01:58,686 --> 00:01:59,886
development tools and pipelines.

35
00:02:01,983 --> 00:02:05,544
Specifically regarding GDC, I co-organized the Game Tools

36
00:02:05,604 --> 00:02:07,864
Summit, formerly known as the Game Tools Tutorial

37
00:02:07,884 --> 00:02:09,284
Day, with Jeff Evans.

38
00:02:10,065 --> 00:02:13,485
And I also took over recently the tools design roundtables

39
00:02:14,045 --> 00:02:15,226
from Robin Yann Storm.

40
00:02:15,266 --> 00:02:16,486
So if you don't know about those,

41
00:02:16,506 --> 00:02:17,546
you should definitely check them out,

42
00:02:17,586 --> 00:02:19,007
especially if you're into tools development.

43
00:02:22,507 --> 00:02:23,568
So a little bit about this talk.

44
00:02:25,355 --> 00:02:31,459
Why do I want to talk about this today? Well, one of the reasons is about this, about game

45
00:02:31,519 --> 00:02:36,603
postmortems at GDC. So many of you may be aware that every year there, for the last couple years,

46
00:02:36,623 --> 00:02:41,046
there have been these really interesting game postmortems at GDC. So here are just a few,

47
00:02:41,106 --> 00:02:45,730
you know, Myst, Diablo, Goldeneye, Robotron, and many, many, many others that are always

48
00:02:45,750 --> 00:02:47,851
really compelling and really, really well received.

49
00:02:49,192 --> 00:02:54,415
And it's really great to preserve the history of these things so that we can learn lessons from them,

50
00:02:54,495 --> 00:02:57,537
because the people who did these games certainly learned a lot,

51
00:02:57,637 --> 00:02:59,639
and they could pass that information on to other people.

52
00:02:59,679 --> 00:03:02,300
That's what the value of these talks is often.

53
00:03:03,481 --> 00:03:09,725
One of the things that occurred to me is that there have been none, as far as I know, tools post-mortems,

54
00:03:09,765 --> 00:03:12,207
or very few, that really focus on the tools.

55
00:03:13,168 --> 00:03:23,613
And in the same way as we can learn from the history of game development, I think we can also learn from the history of game development tools postmortems, and really preserve that history and benefit from it.

56
00:03:24,954 --> 00:03:33,398
And I think it's important for us to learn those lessons, because often, you know, these lessons can be still applied years later.

57
00:03:34,298 --> 00:03:40,261
And that's because you could say that the people who forget the history of game development, game tools development, are doomed to repeat it.

58
00:03:41,084 --> 00:03:43,645
That's a quote I'm just going to attribute to FixItFelix.

59
00:03:44,425 --> 00:03:45,765
Just seems like something he might say.

60
00:03:47,826 --> 00:03:51,507
So what I did is I decided to interview

61
00:03:51,967 --> 00:03:55,068
key people in the history of game development tools.

62
00:03:55,128 --> 00:03:57,408
So a whole bunch of different people who have worked

63
00:03:57,468 --> 00:04:01,169
on really interesting and compelling historic tools

64
00:04:01,209 --> 00:04:03,069
that we consider classic game development tools.

65
00:04:04,410 --> 00:04:07,050
So one of the people I spoke to was John Romero.

66
00:04:07,330 --> 00:04:08,891
And we spoke about Ted, the tile editor.

67
00:04:09,940 --> 00:04:12,721
I also spoke to Tim Sweeney about the first version

68
00:04:13,341 --> 00:04:14,042
of the Unreal Editor.

69
00:04:15,902 --> 00:04:18,283
I spoke to Chris Norton about the DSX tools.

70
00:04:18,684 --> 00:04:19,744
Obviously, there's a level editor,

71
00:04:20,204 --> 00:04:22,245
but there are many other tools as well that

72
00:04:22,285 --> 00:04:24,026
were used to develop DSX.

73
00:04:24,486 --> 00:04:25,687
So we spoke a bit about that.

74
00:04:27,667 --> 00:04:31,349
I spoke to John, Tim, Dan, and Mike about Gamebryo.

75
00:04:31,969 --> 00:04:33,770
Of course, as many of you may know,

76
00:04:33,850 --> 00:04:38,032
this was one of the first third-party available game

77
00:04:38,072 --> 00:04:39,593
engines that you could license and use.

78
00:04:40,841 --> 00:04:42,083
as opposed to developing it in-house.

79
00:04:43,425 --> 00:04:46,470
And finally, a Marc LeBlanc about DRAWMED and SHOCKED.

80
00:04:46,530 --> 00:04:47,592
So we'll get into all of these.

81
00:04:47,652 --> 00:04:52,179
But just to first talk about how all of these different tools,

82
00:04:52,500 --> 00:04:54,683
Unreal Editor, TED, and so on and so forth,

83
00:04:56,484 --> 00:05:03,209
this list, you might be surprised to find out when you see this list that most of these tools are still used today.

84
00:05:03,770 --> 00:05:09,494
And yes, there are some professionals maybe that use it. It's a lot of hobbyists as well. But that's really still

85
00:05:09,534 --> 00:05:15,319
significant and important. And I'm sure that most of the people, and I can say from my interviews, I can say this is

86
00:05:15,379 --> 00:05:22,124
true, did not expect these tools to be still used today. And that the decisions that they made back then

87
00:05:22,544 --> 00:05:29,471
They also didn't expect to still be something that people have to contend with and deal with when they use these tools these days.

88
00:05:30,412 --> 00:05:32,214
And that brings me to the main message of my talk.

89
00:05:36,198 --> 00:05:40,362
And that main message is that tools live longer than games do.

90
00:05:41,123 --> 00:05:46,588
And this one's easy to attribute to somebody because it's what John Romero said to me during our interview.

91
00:05:48,139 --> 00:05:50,420
So obviously, John Romero needs no introduction,

92
00:05:50,981 --> 00:05:52,622
working at id Software for a long time.

93
00:05:53,863 --> 00:05:55,064
One of the interesting things, though,

94
00:05:55,124 --> 00:05:56,986
that you might not know about his history

95
00:05:57,546 --> 00:06:01,149
is that back before he, in the early days of his career,

96
00:06:01,169 --> 00:06:04,893
one of the first experiences he had

97
00:06:04,993 --> 00:06:08,375
was playing this game called Pegasus 2 on the Apple 2GS,

98
00:06:08,415 --> 00:06:09,236
or the Apple 2, rather.

99
00:06:10,217 --> 00:06:19,822
And it had not only a game, but it also had a terrain generator, which you could use to build levels for the game, which he had never seen before, and he was really attracted and compelled by this.

100
00:06:19,882 --> 00:06:22,923
I'm sure many of us have had the same experience as well as tools developers.

101
00:06:24,464 --> 00:06:31,107
And so, of course, you know, John worked on Wolfenstein and Doom and Quake, etc.

102
00:06:32,783 --> 00:06:35,944
The tile editor was used to make a whole bunch of games.

103
00:06:36,464 --> 00:06:38,025
And so you can see here a couple of examples,

104
00:06:38,486 --> 00:06:40,807
you know, Dangerous Dave and the Haunted Mansion,

105
00:06:40,867 --> 00:06:42,528
Wolfenstein, A Rise of the Triad.

106
00:06:43,028 --> 00:06:44,849
And in the bottom right-hand corner, in fact, you can see

107
00:06:45,309 --> 00:06:47,710
Slordax, which was the first game that,

108
00:06:47,911 --> 00:06:49,771
the first version of TED, the tile editor,

109
00:06:50,492 --> 00:06:51,372
was used to make that game.

110
00:06:53,433 --> 00:06:55,174
And what you may also not be aware of is

111
00:06:55,635 --> 00:06:57,275
that this is a great example of a tool

112
00:06:57,315 --> 00:06:58,756
that lived longer than the game did,

113
00:06:58,816 --> 00:06:59,417
in the sense that

114
00:06:59,957 --> 00:07:04,878
You can see how on the left, in the case of Commander Keen, how the tiles, you can see how

115
00:07:05,118 --> 00:07:08,919
they were placed to build up the different blocks of the level, and sort of it's like a side camera

116
00:07:08,959 --> 00:07:12,900
projection. You can see how those were placed. And when it came time to build Wolfenstein,

117
00:07:13,340 --> 00:07:17,481
they decided, well, you know what, we're just going to use TED from a top view and wherever

118
00:07:17,501 --> 00:07:22,963
we place a block, it's going to be kind of like a cube or like a square in our environment.

119
00:07:23,583 --> 00:07:26,625
So, and apparently this was a decision that was made very quickly.

120
00:07:26,825 --> 00:07:33,310
So they used the tile editor, TED, the tile editor, to build the environments for multiple

121
00:07:33,330 --> 00:07:33,570
games.

122
00:07:33,710 --> 00:07:38,854
In fact, TED was used for 33 different game titles over the years, which is a lot.

123
00:07:38,894 --> 00:07:41,295
So definitely something that lived longer than the game did.

124
00:07:43,217 --> 00:07:44,658
And TED is still used today.

125
00:07:44,718 --> 00:07:49,041
See, these two pages here are very recently updated tutorial pages.

126
00:07:49,922 --> 00:07:52,784
for how to use TED, the latest version being version 5.

127
00:07:53,184 --> 00:07:55,486
That was the one that id Software made,

128
00:07:55,586 --> 00:07:57,707
and it's been the same version that's been used

129
00:07:57,827 --> 00:07:58,768
for years and years and years.

130
00:07:59,248 --> 00:08:01,990
So TED is still used and still alive today.

131
00:08:03,151 --> 00:08:06,513
So we can tell, obviously, tools live longer than games do,

132
00:08:06,573 --> 00:08:08,895
but why is it important for you to remember that

133
00:08:08,915 --> 00:08:11,017
and to keep that in mind as you're developing your tools?

134
00:08:12,798 --> 00:08:14,599
Well, the reality is that we sometimes have time

135
00:08:14,719 --> 00:08:17,121
to do just enough tools development to ship the game.

136
00:08:18,129 --> 00:08:21,630
And we do that, we get the tool done, the game ships,

137
00:08:21,690 --> 00:08:23,971
you know, we're able to provide functionality

138
00:08:24,011 --> 00:08:26,072
for the content creators to build the game.

139
00:08:26,352 --> 00:08:27,372
And we say, okay, we did it.

140
00:08:27,472 --> 00:08:28,693
We shipped the game, we're done.

141
00:08:28,713 --> 00:08:30,173
That was good just for that one game.

142
00:08:30,939 --> 00:08:34,140
But the thing is, that game, the game that we use the tool for,

143
00:08:34,820 --> 00:08:36,180
often then becomes the next game.

144
00:08:36,360 --> 00:08:38,081
And then the next game and the next game and that tool

145
00:08:38,101 --> 00:08:41,081
continues to get used when it was really only intended

146
00:08:41,121 --> 00:08:42,622
to make that one game in the first place

147
00:08:42,662 --> 00:08:44,242
and doesn't really scale well over time.

148
00:08:44,962 --> 00:08:46,903
And you don't really have a choice in this,

149
00:08:46,963 --> 00:08:48,763
even though if you don't want people to use it

150
00:08:48,803 --> 00:08:51,364
or you don't think it was ready, because you might change teams,

151
00:08:51,864 --> 00:08:52,864
you might change companies.

152
00:08:53,404 --> 00:08:56,025
Someone else might try to keep it alive or keep it going.

153
00:08:56,465 --> 00:08:57,885
And you might say, well, this is not

154
00:08:57,925 --> 00:08:59,246
at all how I expected this to work.

155
00:08:59,266 --> 00:09:00,846
I didn't expect people to use it for this long.

156
00:09:01,927 --> 00:09:16,314
This is something certainly that Marc LeBlanc experienced when we did our interview and he found a community on Discord that was using Dramed years later, and he did not expect to have a community this size and this active.

157
00:09:16,615 --> 00:09:20,236
So, tools live longer than games do, and it's important for you to keep that in mind.

158
00:09:21,371 --> 00:09:23,612
And the other reason why is because you want your tools

159
00:09:23,652 --> 00:09:25,093
to be an accelerator.

160
00:09:25,113 --> 00:09:26,234
You don't want them to be a hindrance.

161
00:09:26,814 --> 00:09:28,816
You don't want people to use them because they have to.

162
00:09:29,376 --> 00:09:31,397
You want people to use them because it helps them.

163
00:09:31,417 --> 00:09:33,138
It makes their lives, their jobs better.

164
00:09:33,318 --> 00:09:34,859
It helps them create content for the game.

165
00:09:35,560 --> 00:09:37,241
You want your tool to stand the test of time.

166
00:09:37,681 --> 00:09:39,122
And one of the things that we can do

167
00:09:39,182 --> 00:09:41,944
to try to ensure that our tools stand the test of time

168
00:09:42,084 --> 00:09:43,785
because tools live longer than games do

169
00:09:44,265 --> 00:09:46,527
is we can learn from tools development history, which

170
00:09:46,587 --> 00:09:48,148
is why I wanted to preserve it.

171
00:09:49,158 --> 00:09:52,441
And one of the things I did in all of my interviews was I asked this question,

172
00:09:53,102 --> 00:09:55,284
what advice would you give to tools developers today?

173
00:09:56,466 --> 00:10:01,311
And the answers to that question led me to come up with three different questions

174
00:10:01,351 --> 00:10:06,456
that you should ask yourself as tools developers when you're developing a tool

175
00:10:06,516 --> 00:10:08,138
because tools live longer than games do.

176
00:10:08,999 --> 00:10:10,561
So let's go over those three questions.

177
00:10:15,392 --> 00:10:17,073
The first question is that you should ask yourself,

178
00:10:17,653 --> 00:10:19,913
and these are the three main takeaways

179
00:10:19,973 --> 00:10:21,633
that I feel you should take away from this talk.

180
00:10:22,774 --> 00:10:27,255
First is, what is the best way to solve a problem?

181
00:10:27,275 --> 00:10:28,855
The second question you should ask yourself is,

182
00:10:29,195 --> 00:10:30,955
what can you learn from other tools

183
00:10:30,995 --> 00:10:32,036
that solve the same problem?

184
00:10:33,896 --> 00:10:35,556
And finally, you should be asking yourself,

185
00:10:35,676 --> 00:10:37,237
how do people use your tools,

186
00:10:37,977 --> 00:10:39,917
and how do they fit in with their other tools?

187
00:10:42,122 --> 00:10:44,163
So let's start off by talking about that first question.

188
00:10:44,264 --> 00:10:45,965
What is the problem that the users want to solve?

189
00:10:47,886 --> 00:10:48,966
So tell me if this sounds familiar.

190
00:10:49,567 --> 00:10:51,628
You're sitting around a table.

191
00:10:51,708 --> 00:10:53,129
You're a tools developer, let's say,

192
00:10:53,669 --> 00:10:56,611
or you're responsible for organizing that, organizing

193
00:10:56,631 --> 00:10:58,012
the tools development pipeline development.

194
00:10:58,512 --> 00:10:59,893
And there are people around the table

195
00:10:59,973 --> 00:11:01,835
also who are people who might use the tools.

196
00:11:02,905 --> 00:11:06,047
And somebody, either yourself or someone else in the meeting,

197
00:11:06,467 --> 00:11:09,009
might get frustrated during the meeting before or maybe after

198
00:11:09,469 --> 00:11:11,231
and say to themselves, why can't they just

199
00:11:11,271 --> 00:11:12,171
tell us what they want?

200
00:11:12,772 --> 00:11:15,093
Why can't they tell us how they want this tool to work?

201
00:11:15,954 --> 00:11:18,095
The reality is that people who use the tools

202
00:11:18,135 --> 00:11:20,797
are not necessarily experts in making tools, especially

203
00:11:20,837 --> 00:11:22,118
not user interfaces.

204
00:11:23,159 --> 00:11:25,120
And so it's something to keep in mind

205
00:11:25,160 --> 00:11:27,822
is that it's not always the user's responsibility to tell

206
00:11:27,842 --> 00:11:29,483
you how they want the tool to work.

207
00:11:30,084 --> 00:11:30,184
But.

208
00:11:31,953 --> 00:11:33,814
It is the user's responsibility to tell you

209
00:11:33,854 --> 00:11:35,394
what problem they want to solve.

210
00:11:37,495 --> 00:11:40,457
And that touches on something I spoke about with Chris Norton.

211
00:11:40,957 --> 00:11:43,438
So Chris Norton worked at Looking Glass Studios

212
00:11:43,878 --> 00:11:46,379
and Origin in the past before working

213
00:11:46,559 --> 00:11:48,600
at Ion Storm, which is probably the studio he's

214
00:11:48,800 --> 00:11:50,341
the work at the studio he's best known for,

215
00:11:50,381 --> 00:11:53,322
which is where he worked on Deus Ex as the lead engineer.

216
00:11:53,922 --> 00:11:56,103
And he took on a whole bunch of different roles, in fact.

217
00:11:58,005 --> 00:12:02,830
Now, for those of you who have played around with some of the development tools in Deus Ex, you know that

218
00:12:02,990 --> 00:12:06,334
Unreal Engine was used, Unreal Editor was used for level design,

219
00:12:06,354 --> 00:12:08,616
but there's also a bunch of other tools that come with it, like

220
00:12:09,197 --> 00:12:13,441
ConEdit, the conversation editor, and so on and so forth. A bunch of exporters as well.

221
00:12:14,883 --> 00:12:19,348
And one of the things that Chris said to me, one of the things that he learned was this, listen to your customer.

222
00:12:19,929 --> 00:12:21,350
don't ever write tools in a vacuum.

223
00:12:21,450 --> 00:12:23,273
They talked about how he talked about how this was a

224
00:12:23,593 --> 00:12:24,774
important lesson that he learned.

225
00:12:25,295 --> 00:12:27,177
Um, and it speaks to that idea of understanding

226
00:12:27,237 --> 00:12:28,739
what is the problem the users want to solve.

227
00:12:29,660 --> 00:12:31,262
And John Romero echoed this as well,

228
00:12:31,302 --> 00:12:33,565
saying a lot of times tools programmers

229
00:12:33,605 --> 00:12:35,627
don't go far enough asking the questions

230
00:12:35,808 --> 00:12:37,470
about why do you want that?

231
00:12:38,070 --> 00:12:39,492
What is it that you're actually trying to do?

232
00:12:41,418 --> 00:12:43,460
So I'll give you another scenario, another example

233
00:12:44,040 --> 00:12:45,101
that might also be familiar.

234
00:12:45,902 --> 00:12:49,885
Let's imagine that you get a request from a user

235
00:12:50,245 --> 00:12:52,868
and they say, you know, we really want the no button

236
00:12:52,948 --> 00:12:54,549
in the user interface to be read.

237
00:12:55,778 --> 00:12:58,120
Well, one of the mistakes that's often made

238
00:12:58,160 --> 00:12:59,802
is that we don't often dig deep enough

239
00:12:59,842 --> 00:13:02,924
into understand why that's the problem, why that's the case,

240
00:13:03,144 --> 00:13:05,446
and that we miss an opportunity to really

241
00:13:05,486 --> 00:13:08,348
be able to provide a great tool, a great user experience,

242
00:13:08,368 --> 00:13:09,909
and great value for the user using it,

243
00:13:10,089 --> 00:13:11,630
as opposed to just blindly implementing

244
00:13:11,650 --> 00:13:12,351
what they're asking for.

245
00:13:12,931 --> 00:13:14,833
Let's imagine we ask them, why do you

246
00:13:14,853 --> 00:13:15,894
want the No button to be read?

247
00:13:16,814 --> 00:13:18,596
And they might say, well, because I keep

248
00:13:18,636 --> 00:13:19,556
clicking on it by mistake.

249
00:13:20,797 --> 00:13:22,218
And then you might ask why again.

250
00:13:22,819 --> 00:13:24,240
Why do you keep clicking on it by mistake?

251
00:13:25,040 --> 00:13:28,962
And they might say, well, it's because I click on it by accident because it's next to the yes button.

252
00:13:29,823 --> 00:13:32,765
Okay, but why is it bad to click no?

253
00:13:33,605 --> 00:13:38,388
And they might say, well, because if I click no by accident, when the editor asks me to save, I lose my work.

254
00:13:39,169 --> 00:13:45,713
So the real problem here is that either they need some sort of protection for their file, or they need an automatic backup of their file.

255
00:13:46,017 --> 00:13:49,439
The problem is not to solve, it's not that they want the button to be read,

256
00:13:49,919 --> 00:13:52,500
but the problem to solve is that they're losing their work.

257
00:13:52,820 --> 00:13:56,682
Okay, so important whenever you get a request to always ask why, why, why,

258
00:13:56,722 --> 00:14:00,624
to dig into that to understand what is the real problem that the users want to solve.

259
00:14:02,044 --> 00:14:03,545
So that's the first question to ask yourself.

260
00:14:04,025 --> 00:14:05,526
What is the problem that the users want to solve?

261
00:14:08,367 --> 00:14:09,888
Second question that you can ask is,

262
00:14:10,288 --> 00:14:12,929
what can you learn from other tools that solve the same problem?

263
00:14:19,150 --> 00:14:38,912
So those of you who work in a studio that have concept artists, I don't know if you've ever watched a concept artist work, but one of the things that I experienced and one of the things that I realized while watching really professional, like the best concept artists in the world are that they use a lot of references.

264
00:14:39,801 --> 00:14:41,762
And you might find this counterintuitive.

265
00:14:41,782 --> 00:14:43,504
You might think that, well, if you're a really good artist,

266
00:14:43,964 --> 00:14:45,605
you don't need to use as many references, right?

267
00:14:45,625 --> 00:14:46,446
It's all in your brain.

268
00:14:46,526 --> 00:14:47,907
You know exactly how to do everything.

269
00:14:48,487 --> 00:14:51,189
But I feel that one of the things that makes them so good

270
00:14:51,870 --> 00:14:54,071
is that they use more and more references

271
00:14:54,131 --> 00:14:55,112
than somebody might think.

272
00:14:55,172 --> 00:14:55,852
They use references.

273
00:14:55,932 --> 00:14:57,554
In fact, some of the concept artists

274
00:14:59,175 --> 00:15:04,898
that I've seen even need special tools to help organize and to lay out mood boards of

275
00:15:04,938 --> 00:15:10,542
their different references, help them to copy and paste those images into their software

276
00:15:10,562 --> 00:15:12,663
that they're using to draw their concept art in.

277
00:15:13,744 --> 00:15:18,727
So it's interesting to think that concept artists, one of the things that makes them

278
00:15:18,787 --> 00:15:23,310
so good, in fact, I think is the fact that they look at other stuff so much.

279
00:15:24,332 --> 00:15:26,593
And that's something that I feel in game tools development,

280
00:15:26,633 --> 00:15:27,753
we don't do enough of.

281
00:15:27,853 --> 00:15:29,953
We don't take the time to really look at other tools.

282
00:15:31,033 --> 00:15:33,474
So looking at other tools that solve the same problem

283
00:15:33,994 --> 00:15:35,214
can make your tools better.

284
00:15:36,575 --> 00:15:39,255
And that's something that I spoke about with Marc LeBlanc

285
00:15:39,275 --> 00:15:39,875
during our interview.

286
00:15:40,935 --> 00:15:44,156
So Marc LeBlanc also worked at Looking Glass and Origin.

287
00:15:44,816 --> 00:15:48,217
You may know the Looking Glass, of course, and those studios

288
00:15:48,617 --> 00:15:50,657
from the System Shock series of games,

289
00:15:50,797 --> 00:15:53,698
or from Thief, and many, many other titles as well,

290
00:15:53,738 --> 00:15:53,998
of course.

291
00:15:55,987 --> 00:16:03,331
And the editor that Mark helped to develop for those games was called DrawMed, or Shawket, depending upon the game.

292
00:16:04,032 --> 00:16:06,313
And you can see here is an example of it on the left.

293
00:16:08,314 --> 00:16:16,539
One of the things that's really interesting about, and that was different about DrawMed, was, as Mark said during our interview, was that the world is made of media.

294
00:16:17,357 --> 00:16:19,299
In other words, there are a lot of other engines at that time

295
00:16:19,319 --> 00:16:24,003
were using classic Boolean, subtractive geometry

296
00:16:24,023 --> 00:16:24,844
and environment building.

297
00:16:25,745 --> 00:16:27,827
Whereas one of the things you could do with DRAWMED

298
00:16:27,947 --> 00:16:31,831
is that you could fill an area with a kind of media,

299
00:16:31,851 --> 00:16:32,532
a kind of material.

300
00:16:32,592 --> 00:16:34,034
In other words, you could fill it with water,

301
00:16:34,434 --> 00:16:35,936
or fill it with dirt, or things like that.

302
00:16:36,456 --> 00:16:40,100
So for example, if you were holding a torch

303
00:16:40,120 --> 00:16:40,761
or there was fire.

304
00:16:41,341 --> 00:16:45,442
and it would interact with an area that you'd filled with water, well, the fire would go out.

305
00:16:46,282 --> 00:16:51,244
Or things would be flammable. Or, for example, if you were walking on something like hard tile,

306
00:16:51,284 --> 00:16:54,705
it would make a lot of noise, whereas if you're working on something soft like grass,

307
00:16:54,745 --> 00:16:59,046
it would make less noise, and so on and so forth. So it was quite innovative at the time, actually,

308
00:16:59,426 --> 00:17:04,627
this editor. And just a little fun fact, by the way, that you may not be aware of is that Chris

309
00:17:05,113 --> 00:17:09,114
actually worked with Mark for a period of time on this engine,

310
00:17:09,134 --> 00:17:11,415
which I think in early stages was called the Dark Engine.

311
00:17:12,976 --> 00:17:15,037
So Mark said this to me during our interview.

312
00:17:15,577 --> 00:17:18,218
Look at the old tools and ask why people were

313
00:17:18,238 --> 00:17:19,258
doing what they were doing.

314
00:17:20,059 --> 00:17:22,920
And this brings me to something that I talk about a lot

315
00:17:22,940 --> 00:17:24,040
and that I think about a lot, which

316
00:17:24,120 --> 00:17:28,142
is the natural selection of game tools or game tools interfaces.

317
00:17:29,042 --> 00:17:29,522
What does that mean?

318
00:17:30,702 --> 00:17:34,944
When something in a game development tool works well,

319
00:17:35,845 --> 00:17:37,446
it tends to stand the test of time.

320
00:17:37,746 --> 00:17:39,927
And then other people will see that and use that

321
00:17:39,987 --> 00:17:40,568
in their tools.

322
00:17:41,108 --> 00:17:43,450
And it'll give them the idea of making their tools work

323
00:17:43,490 --> 00:17:44,230
that way as well.

324
00:17:45,751 --> 00:17:49,213
So if there are elements of game tools that don't work well,

325
00:17:50,214 --> 00:17:52,135
over time, they will kind of naturally

326
00:17:52,235 --> 00:17:54,216
be removed from the ecosystem, so to speak.

327
00:17:55,237 --> 00:17:56,658
And so there's this natural evolution

328
00:17:56,758 --> 00:17:57,999
of what works best.

329
00:17:59,122 --> 00:18:03,367
in tools, what works best in the user interface and the user experience of tools.

330
00:18:04,288 --> 00:18:08,933
And what you see in the majority of other tools is likely not a fluke.

331
00:18:09,453 --> 00:18:14,579
It's likely because over time it has been kind of arrived at as one of the best, if

332
00:18:14,639 --> 00:18:17,302
not the best solution to that problem.

333
00:18:18,059 --> 00:18:19,741
I think it's really important to keep that in mind,

334
00:18:19,781 --> 00:18:22,363
and that's why it's really useful and really powerful

335
00:18:22,483 --> 00:18:25,165
for all game tools developers to learn from other tools

336
00:18:25,185 --> 00:18:27,387
that solve the same problem.

337
00:18:27,487 --> 00:18:29,468
Once you understand the problem the users want to solve,

338
00:18:29,949 --> 00:18:32,691
going and finding other tools, even if it's just a small part

339
00:18:32,731 --> 00:18:34,753
of the tool, going and finding other tools

340
00:18:34,793 --> 00:18:36,934
that solve that same problem, and looking at it,

341
00:18:37,094 --> 00:18:39,697
and learning from it. It doesn't mean copying it outright,

342
00:18:40,057 --> 00:18:42,719
but it means at least being aware of it and being inspired by it.

343
00:18:43,987 --> 00:18:46,951
and trying to design your user interface around that.

344
00:18:47,272 --> 00:18:49,495
There is so much value.

345
00:18:51,157 --> 00:18:52,900
It's a really big benefit to your time.

346
00:18:53,240 --> 00:18:54,542
It's time very well spent.

347
00:18:55,103 --> 00:18:57,286
Take the time and go and look at other tools and how they work.

348
00:18:59,542 --> 00:19:06,949
I mean, I could think of much more complex examples, but just to give you a really simple example that you can then extrapolate to other parts of game development tools.

349
00:19:07,509 --> 00:19:15,677
Think about the contextual menu. The way that it was originally implemented on the Xerox Alto in 1973 is almost unchanged over the years.

350
00:19:15,717 --> 00:19:18,539
You can see that it works pretty much exactly the same way.

351
00:19:18,900 --> 00:19:23,163
Because it works well, because it's fit for its purpose, and there's no need to rethink it.

352
00:19:23,686 --> 00:19:27,269
right? But by going out and looking at other tools that solve the same problem,

353
00:19:27,609 --> 00:19:32,092
you will come upon these solutions where you'll go, Oh yes, of course, of course it should work

354
00:19:32,132 --> 00:19:36,416
that way. And that's going to be very natural for your users as well, because if it resembles

355
00:19:36,476 --> 00:19:40,078
another tool they've used in the past, it'll immediately be familiar to them.

356
00:19:42,503 --> 00:19:51,210
Now, an example of something that Mark says that he regrets doing was using WXSD as opposed to WASD to move around the environment.

357
00:19:51,590 --> 00:19:55,613
Now, this is a decision for sure that was made because the game also had the same hotkeys,

358
00:19:55,653 --> 00:20:00,177
but years later now, he was talking about that Discord community, you know, and all the people there.

359
00:20:00,757 --> 00:20:05,421
He feels like he wishes that he had considered, you know, what a lot of other people were doing at that time

360
00:20:05,681 --> 00:20:08,984
to try to follow conventions as opposed to coming up with something different.

361
00:20:11,207 --> 00:20:12,869
And Chris said something about this as well.

362
00:20:12,929 --> 00:20:15,733
He said, you look at a lot of the professionally designed tools and

363
00:20:15,753 --> 00:20:17,295
they're usually pretty consistent.

364
00:20:18,196 --> 00:20:20,759
There are design guidelines for how those things should work.

365
00:20:21,453 --> 00:20:29,537
Now he's talking about probably things like design guidelines like the fluent design system from Microsoft or spectrum from Adobe or carbon from IBM.

366
00:20:29,978 --> 00:20:37,161
There are design guidelines out there that you can reference that tell you how these user interfaces are most often supposed to work.

367
00:20:37,581 --> 00:20:47,206
Now you can either go and look at how other companies have done this or you can develop your own guidelines as well that will be similar to the tools that you have internally within your company.

368
00:20:49,227 --> 00:20:53,150
So really important to consider how other tools solve

369
00:20:53,190 --> 00:20:54,731
the same problem because it can save you

370
00:20:54,851 --> 00:20:55,932
tons and tons of time.

371
00:20:56,392 --> 00:20:59,014
And also, it can lead to you designing tools

372
00:20:59,034 --> 00:21:00,976
that are more natural and more intuitive

373
00:21:00,996 --> 00:21:02,617
and more familiar for your users to use.

374
00:21:04,198 --> 00:21:04,979
So that's number two.

375
00:21:05,740 --> 00:21:07,161
What can you learn from other tools

376
00:21:07,201 --> 00:21:08,161
that solve the same problem?

377
00:21:09,162 --> 00:21:10,904
And now let's move on to the final question

378
00:21:10,924 --> 00:21:11,684
you should ask yourself.

379
00:21:17,208 --> 00:21:17,649
Number three.

380
00:21:18,821 --> 00:21:22,625
How do people use your tools and how do they fit in with their other tools?

381
00:21:25,588 --> 00:21:33,335
How well do you know the user's tools environment at your studio? If you were to walk around the

382
00:21:33,355 --> 00:21:39,341
studio, could you name all the other tools that the users who use your tools also use at the

383
00:21:39,381 --> 00:21:42,144
same time? What are the other tools in their tool belt that they reach?

384
00:21:42,819 --> 00:21:44,501
for back and forth, right?

385
00:21:44,561 --> 00:21:45,382
Do you know all of them?

386
00:21:45,922 --> 00:21:48,866
Because in the majority of cases,

387
00:21:49,347 --> 00:21:52,431
people don't necessarily spend all day long in your tool.

388
00:21:52,491 --> 00:21:55,855
They spend a proportion of the day in other tools as well.

389
00:21:56,216 --> 00:21:57,898
And those tools will be familiar to them.

390
00:21:58,994 --> 00:22:04,136
And it's important for you to understand what those other tools are so you can see how they interface with yours.

391
00:22:04,656 --> 00:22:15,679
And also, it's very important for you to understand the people to go and sit with and watch and understand the problems and the challenges that these people have and what their work environment is like.

392
00:22:17,359 --> 00:22:20,060
And this is something that Tim Sweeney spoke about during our interview.

393
00:22:20,830 --> 00:22:24,372
Obviously, you know Tim Sweeney from Epic Games and the Unreal Editor.

394
00:22:24,873 --> 00:22:28,074
When I spoke with him, we spoke about the first version of the Unreal Editor,

395
00:22:28,374 --> 00:22:34,478
Unreal Engine 1, which the user interface, believe it or not, was made with Visual Basic,

396
00:22:35,058 --> 00:22:38,460
a very early version of Visual Basic. And of course, that was replaced over the years.

397
00:22:38,520 --> 00:22:43,683
But a very impressive package at that time, because not only did it have to produce

398
00:22:43,803 --> 00:22:48,765
amazing graphics at that time, but also it had a very user-friendly interface for the tool.

399
00:22:50,264 --> 00:22:51,886
And here's something that Tim said.

400
00:22:53,068 --> 00:22:55,513
There's this iterative process where the Engine team

401
00:22:55,553 --> 00:22:56,915
is out creating new ideas

402
00:22:57,556 --> 00:22:59,860
and then sharing them with the game teams

403
00:22:59,920 --> 00:23:01,803
and getting constant feedback on what works

404
00:23:01,843 --> 00:23:02,565
and what doesn't work.

405
00:23:04,314 --> 00:23:06,676
Now there's some key words in there, iterative process

406
00:23:07,497 --> 00:23:08,658
and constant feedback.

407
00:23:09,299 --> 00:23:11,862
And he's kind of talking about the user-centered design

408
00:23:11,922 --> 00:23:12,342
process.

409
00:23:12,722 --> 00:23:15,385
This is the ISO certification image

410
00:23:15,425 --> 00:23:17,887
of that, where you understand the problems

411
00:23:17,907 --> 00:23:19,669
that the users have, you get constant feedback,

412
00:23:19,709 --> 00:23:21,231
and then you iteratively improve it.

413
00:23:21,331 --> 00:23:22,692
And then you get feedback again, and you

414
00:23:22,732 --> 00:23:23,973
go on over and over again.

415
00:23:24,554 --> 00:23:26,636
This is one of the secrets to having a better user

416
00:23:26,656 --> 00:23:27,757
experience in your tools.

417
00:23:30,541 --> 00:23:35,925
And something else that came up as well in the interview about Gambrio with John, Tim, Dan and Mike.

418
00:23:36,525 --> 00:23:41,449
Gambrio, of course, you may know the earlier versions of it, you know, when it was previously called Netamurse as well.

419
00:23:41,809 --> 00:23:45,552
You may have heard of a Dark Age of Camelot or a Prince of Persia 3D.

420
00:23:46,192 --> 00:23:51,636
That was for an earlier version of Gambrio was used for that before it evolved into a Gambrio when it was rebranded.

421
00:23:52,647 --> 00:23:59,814
And of course, you probably know about its association to games like Oblivion and Morrowind.

422
00:24:00,875 --> 00:24:05,820
Gamebryo was used for early versions of that, but Bethesda really over time replaced large parts of that

423
00:24:06,401 --> 00:24:11,005
to the point where there's probably almost nothing left over of the original Gamebryo inside what's going on.

424
00:24:11,185 --> 00:24:15,527
now called the creation engine that was used for those games, although they were joking about this

425
00:24:15,547 --> 00:24:21,290
in the interview that Gambrio gets flack sometimes for Oblivion and Morrowind, even though the

426
00:24:21,330 --> 00:24:26,852
systems that they're talking about, like AI, have nothing to do with Gambrio at all. Anyway, but one

427
00:24:26,872 --> 00:24:30,813
of the things that Mike said is this, and when they were comparing themselves to Epic,

428
00:24:31,199 --> 00:24:32,959
they were kind of in competition with each other, right?

429
00:24:33,060 --> 00:24:34,720
Gambrio versus Unreal Engine Editor.

430
00:24:35,640 --> 00:24:36,920
At Epic, the artist was king.

431
00:24:37,240 --> 00:24:39,041
Gambrio was very engineer-centric.

432
00:24:39,501 --> 00:24:43,102
And he's kind of talking about that user-centered design loop.

433
00:24:43,982 --> 00:24:45,662
And that's one of the things that Epic

434
00:24:45,682 --> 00:24:48,363
does is going out and getting feedback from their users

435
00:24:48,483 --> 00:24:48,963
internally.

436
00:24:50,603 --> 00:24:51,644
And he went on to say this.

437
00:24:51,704 --> 00:24:54,304
We never had enough content and users in-house

438
00:24:54,344 --> 00:24:56,445
to know whether what we were making was going to be useful.

439
00:24:57,944 --> 00:25:00,246
And this is something as well, a really interesting point

440
00:25:00,286 --> 00:25:01,828
that came up with Chris when we were talking

441
00:25:01,848 --> 00:25:05,251
about the conversation editor that really hammers home

442
00:25:05,691 --> 00:25:08,294
the point that you can't understand what your user's

443
00:25:08,954 --> 00:25:11,817
reality is unless you go and sit with them at their desk

444
00:25:11,857 --> 00:25:12,597
and watch them work.

445
00:25:13,503 --> 00:25:17,004
He said this, lead writer Sheldon Picotti had RSI,

446
00:25:17,344 --> 00:25:19,064
repetitive strain injury, so he couldn't type.

447
00:25:19,564 --> 00:25:22,305
He did almost all of Deus Ex with Dragon Dictate voice

448
00:25:22,365 --> 00:25:22,865
transcription.

449
00:25:23,385 --> 00:25:24,845
So for those of you who've played Deus Ex,

450
00:25:25,005 --> 00:25:28,026
you might be surprised to know that a lot of that dialogue

451
00:25:28,106 --> 00:25:30,607
was put in using Dragon Dictate.

452
00:25:31,227 --> 00:25:33,087
Now, if you're somebody working on a tool,

453
00:25:33,107 --> 00:25:35,668
it might not even occur to you that somebody

454
00:25:35,728 --> 00:25:38,468
might be entering their data in a way that you didn't expect.

455
00:25:39,237 --> 00:25:42,098
But I love this diagram from Microsoft

456
00:25:42,438 --> 00:25:44,378
about inclusivity and accessibility,

457
00:25:45,258 --> 00:25:47,939
where when we think about the limitations for people

458
00:25:48,019 --> 00:25:50,639
in touch, sight, hearing, and speaking,

459
00:25:50,659 --> 00:25:52,240
we often think about these permanent things,

460
00:25:52,300 --> 00:25:53,900
like having one arm, being blind,

461
00:25:54,540 --> 00:25:56,120
being deaf, or nonverbal.

462
00:25:56,461 --> 00:25:58,741
But remember, there are also temporary limitations,

463
00:25:58,821 --> 00:26:01,882
like an arm injury or a cataract for vision,

464
00:26:02,542 --> 00:26:04,082
or situational, like a new parent.

465
00:26:04,102 --> 00:26:05,662
For those of you who know, you're

466
00:26:05,722 --> 00:26:07,223
holding the kid with one hand, and you only

467
00:26:07,263 --> 00:26:07,923
have one hand free.

468
00:26:08,434 --> 00:26:12,838
or a distracted driver, or temporary limitations to hearing and speaking, like an ear infection

469
00:26:12,858 --> 00:26:17,822
or laryngitis, or situational, like a bartender not being able to hear, or somebody with a

470
00:26:17,862 --> 00:26:18,402
heavy accent.

471
00:26:20,317 --> 00:26:22,859
Finally, Chris said this, and I think it's really important.

472
00:26:23,280 --> 00:26:25,101
As an engineer, you think a certain way,

473
00:26:25,201 --> 00:26:27,483
and you think, oh, I can use the tool this way,

474
00:26:27,503 --> 00:26:28,644
and that's the most efficient way,

475
00:26:28,744 --> 00:26:29,885
so that's the way I'm going to write it.

476
00:26:30,305 --> 00:26:31,386
You're almost always wrong.

477
00:26:32,087 --> 00:26:34,569
It's important for you to really understand

478
00:26:34,689 --> 00:26:35,830
how people use your tools,

479
00:26:36,310 --> 00:26:37,831
and how they fit in with their other tools.

480
00:26:38,192 --> 00:26:40,534
So go and sit with people and watch them work

481
00:26:40,554 --> 00:26:42,315
to understand what their environment is like,

482
00:26:42,335 --> 00:26:44,477
because you'll never understand those sorts of things

483
00:26:45,017 --> 00:26:46,158
that I just gave examples of,

484
00:26:46,238 --> 00:26:47,519
unless you go and watch them work.

485
00:26:48,304 --> 00:26:50,347
So that's the third and final question

486
00:26:50,367 --> 00:26:51,348
that you should ask yourself.

487
00:26:51,789 --> 00:26:53,933
How do people use your tools, and how do they

488
00:26:53,973 --> 00:26:54,914
fit in with their other tools?

489
00:26:59,061 --> 00:27:00,924
So what is your takeaway from this presentation?

490
00:27:06,467 --> 00:27:15,652
Well, it's important again to remember that you have to ask yourself those three questions because you don't know how people are going to use your tools.

491
00:27:15,952 --> 00:27:18,193
You don't know how long they're going to survive for.

492
00:27:18,333 --> 00:27:21,695
You don't know how long they're going to be used and you don't know in which context they're going to be used.

493
00:27:22,495 --> 00:27:28,358
Even though we only have often just enough time to be able to develop the tool, it's just good enough to ship the game.

494
00:27:28,859 --> 00:27:33,161
It's always a good investment of your time to take a bit of time to do these three things.

495
00:27:34,004 --> 00:27:36,406
Number one, ask what is the problem

496
00:27:36,426 --> 00:27:37,546
that the users want to solve?

497
00:27:37,867 --> 00:27:39,528
And we saw that in all the different interviews,

498
00:27:40,028 --> 00:27:43,110
understanding that, again, it's not the user's job

499
00:27:43,150 --> 00:27:44,551
to tell you how they want the tool to work,

500
00:27:44,691 --> 00:27:46,472
but it is their job to tell you the problem they're

501
00:27:46,492 --> 00:27:46,992
trying to solve.

502
00:27:47,392 --> 00:27:48,773
And that often helps us to really get

503
00:27:48,813 --> 00:27:51,675
to the heart of finding the best possible tool and user

504
00:27:51,695 --> 00:27:52,936
interface to solve that problem.

505
00:27:55,216 --> 00:27:58,400
Number two, what can you learn from other tools

506
00:27:58,841 --> 00:28:00,182
that solve the same problem?

507
00:28:00,783 --> 00:28:03,206
So once you understand the problem,

508
00:28:03,547 --> 00:28:05,509
go out there and look at all the other tools

509
00:28:05,549 --> 00:28:06,210
from other companies.

510
00:28:06,230 --> 00:28:08,793
Look at tools from Adobe, from Autodesk, from Microsoft,

511
00:28:09,114 --> 00:28:10,556
from other tools out there

512
00:28:10,636 --> 00:28:12,078
that maybe the users already know

513
00:28:12,298 --> 00:28:13,780
and might already even be familiar with.

514
00:28:14,220 --> 00:28:21,786
And you might be surprised to find that there are a lot of really great ideas that are already solved problems that you can then just take and save a lot of time.

515
00:28:21,806 --> 00:28:27,030
And you can save a lot of time for those really hard problems that may not be covered by the tools out there.

516
00:28:27,110 --> 00:28:32,934
But there are a lot of a lot of things that you'd be surprised to find that there are good solutions to those things that we can learn from.

517
00:28:35,297 --> 00:28:37,658
And then thirdly, how do people use your tools?

518
00:28:38,178 --> 00:28:39,718
And how do they fit in with their other tools?

519
00:28:40,138 --> 00:28:41,998
Very important for you to understand this as well,

520
00:28:42,058 --> 00:28:44,439
to see what the work environment is like.

521
00:28:44,499 --> 00:28:46,079
What are the other tools that people use?

522
00:28:46,439 --> 00:28:48,800
How well do you know the other tools that they use?

523
00:28:48,900 --> 00:28:50,100
What else is familiar to them?

524
00:28:50,520 --> 00:28:52,500
And what other kind of limitations do they have,

525
00:28:52,520 --> 00:28:55,881
whether they be temporary or permanent or situational?

526
00:28:56,981 --> 00:28:58,641
What do you know about their work environment?

527
00:28:58,781 --> 00:29:00,762
And how can you use that to try to provide

528
00:29:00,802 --> 00:29:03,382
the best possible tools that will stand the test of time?

529
00:29:04,269 --> 00:29:07,620
And that's, again, because tools live longer than games do.

530
00:29:08,703 --> 00:29:09,285
Thank you very much.

