1
00:00:11,614 --> 00:00:14,937
Welcome to Bringing Players Together, Building Cross-Play in Destiny 2.

2
00:00:15,377 --> 00:00:20,442
Today, we're here to talk about what it took the Destiny 2 team to realize the cross-platform

3
00:00:20,482 --> 00:00:24,866
experience for players, the lessons we took away from the development process, and how

4
00:00:24,906 --> 00:00:28,429
they can be applicable to you if you're looking to bring cross-platform play to your game.

5
00:00:28,890 --> 00:00:29,350
So let's dive in.

6
00:00:30,713 --> 00:00:31,354
A little bit about me.

7
00:00:31,955 --> 00:00:34,757
I'm John Chu, a senior technical program manager at Bungie

8
00:00:35,077 --> 00:00:36,478
in the Central Technology Organization.

9
00:00:37,179 --> 00:00:39,441
As a technical program manager, we function as the producers

10
00:00:39,521 --> 00:00:42,063
for engineering-focused teams helping to find roadmaps

11
00:00:42,484 --> 00:00:44,545
and product vision while driving the execution

12
00:00:44,645 --> 00:00:45,546
of our various projects.

13
00:00:46,447 --> 00:00:48,268
I've been at Bungie for three years now,

14
00:00:48,449 --> 00:00:50,691
having worked on various teams and building

15
00:00:50,711 --> 00:00:52,352
and improving our tools around the engine,

16
00:00:52,932 --> 00:00:55,154
such as improving workflows for UI designers,

17
00:00:55,775 --> 00:00:57,877
updating the Destiny 2 engine for activities,

18
00:00:58,637 --> 00:00:59,918
and speeding release build times.

19
00:01:00,559 --> 00:01:02,460
And currently my focus is on leading initiatives

20
00:01:02,540 --> 00:01:04,641
that span across multiple teams around the studio,

21
00:01:04,922 --> 00:01:07,203
like most recently, delivering crossplay for Destiny 2.

22
00:01:07,243 --> 00:01:10,906
So that brings us to what we're here to talk about today.

23
00:01:11,306 --> 00:01:13,748
We'll be doing a deep dive on the production of crossplay

24
00:01:14,148 --> 00:01:15,869
and the challenges and lessons we took away

25
00:01:15,909 --> 00:01:17,911
from building and releasing this feature to players.

26
00:01:18,709 --> 00:01:23,491
I'll be focusing more on the production process, team organization, and some design considerations

27
00:01:23,871 --> 00:01:25,372
that come with building for cross-platform.

28
00:01:25,812 --> 00:01:29,073
And while I'll touch on some of the technical challenges that we faced, it will be more

29
00:01:29,093 --> 00:01:29,633
of an overview.

30
00:01:30,314 --> 00:01:34,195
An explanation of the deep technical specifics is worthy of a whole other session.

31
00:01:34,996 --> 00:01:38,517
We'll have time at the end for questions and the slides with speaker notes will be uploaded

32
00:01:38,537 --> 00:01:38,857
to the vault.

33
00:01:42,964 --> 00:01:46,646
So, first off, anyone here, have you played Destiny 2?

34
00:01:47,026 --> 00:01:47,266
Anyone?

35
00:01:47,626 --> 00:01:49,126
Nice, most people here.

36
00:01:50,327 --> 00:01:52,027
So, for anyone that hasn't played,

37
00:01:52,588 --> 00:01:55,309
Destiny 2 is an action MMO first person shooter

38
00:01:55,549 --> 00:01:56,549
in which you play as a guardian

39
00:01:56,729 --> 00:01:58,790
imbued with the power of light, protecting humanity.

40
00:01:59,630 --> 00:02:01,071
You take on challenges and activities

41
00:02:01,431 --> 00:02:02,791
all while shooting and looting your way

42
00:02:02,871 --> 00:02:05,092
to getting better gear and personalizing your character

43
00:02:05,192 --> 00:02:06,893
to be the ultimate monster killing machine.

44
00:02:08,656 --> 00:02:11,358
In terms of how we build, maintain, and release Destiny 2,

45
00:02:11,819 --> 00:02:13,440
we utilize a games-as-service model

46
00:02:13,621 --> 00:02:16,163
to constantly deliver updates and new content to players.

47
00:02:17,084 --> 00:02:19,266
Our main content deliverables are yearly expansions

48
00:02:19,406 --> 00:02:21,248
and four seasonal releases during that year.

49
00:02:21,988 --> 00:02:24,991
Initially released in 2017, Destiny 2 is now

50
00:02:25,051 --> 00:02:27,974
in its fifth year and 16th season of being a live game.

51
00:02:28,514 --> 00:02:30,296
Most recently, last month in February,

52
00:02:30,776 --> 00:02:32,878
we released The Witch Queen and Season of the Risen.

53
00:02:35,147 --> 00:02:39,269
And when it comes to platforms, Destiny 2 is currently available on seven different platforms.

54
00:02:39,930 --> 00:02:47,735
PlayStation 4 and PlayStation 5, Xbox One, Xbox Series One X and S, Stadia, Steam, and Microsoft PC Store.

55
00:02:48,455 --> 00:02:51,697
And lastly, Destiny 2 is built in our proprietary Tiger engine.

56
00:02:53,458 --> 00:02:55,960
It's a large legacy codebase built for the original Destiny,

57
00:02:56,120 --> 00:02:59,302
with some parts of the engine reaching back to the Halo days of Bungie.

58
00:03:00,071 --> 00:03:02,551
There's a great 2015 GDC talk given by Chris Butcher

59
00:03:02,672 --> 00:03:05,172
that goes into in-depth about the history and development

60
00:03:05,212 --> 00:03:06,952
of the Tiger engine if you're interested in learning more.

61
00:03:07,813 --> 00:03:10,133
But needless to say, there's a lot of systems in code

62
00:03:10,193 --> 00:03:11,914
within our own engine that are foundational

63
00:03:12,034 --> 00:03:12,694
and hard to change.

64
00:03:13,234 --> 00:03:14,814
And we'll discuss some of the interesting challenges

65
00:03:14,854 --> 00:03:16,515
that this presented when building Crossplay

66
00:03:16,695 --> 00:03:17,295
later in this talk.

67
00:03:19,455 --> 00:03:20,816
So now that you have a little bit of a background

68
00:03:20,836 --> 00:03:23,116
of Destiny 2, let's talk about the Crossplay project

69
00:03:23,516 --> 00:03:25,377
and how we went about building this experience.

70
00:03:27,617 --> 00:03:29,339
The biggest reason we wanted to build Crossplay

71
00:03:29,419 --> 00:03:32,922
was to deliver on creating a truly unified Destiny universe.

72
00:03:33,803 --> 00:03:35,505
By releasing across many platforms,

73
00:03:35,785 --> 00:03:37,807
players can play Destiny 2 from wherever they wanted,

74
00:03:38,187 --> 00:03:39,848
even other devices supported by Stadia.

75
00:03:40,529 --> 00:03:42,631
We further built towards this with the release

76
00:03:42,791 --> 00:03:45,714
of our cross-progression system, Cross Save, in 2020.

77
00:03:46,575 --> 00:03:48,136
This allowed players to bring their guardians

78
00:03:48,256 --> 00:03:49,938
and all the loot and gear that they had spent

79
00:03:50,058 --> 00:03:52,280
so much time amassing on one platform

80
00:03:52,560 --> 00:03:53,741
to any platform that they wanted.

81
00:03:54,918 --> 00:03:57,600
While with cross-save, you could now hop between your PC

82
00:03:57,980 --> 00:04:00,321
and console and continue the story of your guardian

83
00:04:00,662 --> 00:04:02,783
wherever you wanted, the one thing that was missing

84
00:04:03,023 --> 00:04:05,024
was that when players crossed platform boundaries,

85
00:04:05,725 --> 00:04:07,026
that meant leaving behind the friends

86
00:04:07,046 --> 00:04:08,306
that they had on one platform.

87
00:04:10,408 --> 00:04:12,309
People have different preferences for the platform

88
00:04:12,329 --> 00:04:13,790
that they like to play Destiny 2 with.

89
00:04:14,330 --> 00:04:15,671
Just to demonstrate, of all the people

90
00:04:15,751 --> 00:04:17,332
that raised their hands, how many of you

91
00:04:17,392 --> 00:04:18,373
prefer playing on PC?

92
00:04:19,414 --> 00:04:19,954
PlayStation?

93
00:04:21,235 --> 00:04:21,615
Xbox?

94
00:04:22,476 --> 00:04:22,756
Stadia?

95
00:04:24,019 --> 00:04:31,325
I, for one, like playing on Xbox, and for the longest time I didn't have access to a gaming PC to be able to play with my friends who preferred playing on Steam.

96
00:04:32,105 --> 00:04:33,206
So that's where Crossplay comes in.

97
00:04:34,127 --> 00:04:41,033
Crossplay is the culmination of all these earlier efforts and now allowing you to play together with your friends from whatever platform you want.

98
00:04:41,773 --> 00:04:47,098
Now, all players can exist in a single Destiny universe, rather than segmented ones by platform.

99
00:04:48,715 --> 00:04:54,240
And while this effort wasn't creating new content like a raid or a secret exotic mission for players,

100
00:04:54,720 --> 00:04:58,102
we knew that doing this was the right thing to do and would be a delighter for them.

101
00:04:58,603 --> 00:05:00,865
So for this reason, we committed to making Crossplay happen.

102
00:05:03,386 --> 00:05:05,408
So when we first started the pre-production of Crossplay,

103
00:05:05,848 --> 00:05:09,531
guided by our overarching vision of creating a single Destiny universe,

104
00:05:10,052 --> 00:05:11,973
we outlined some high-level goals for the project.

105
00:05:13,019 --> 00:05:15,381
While Destiny is being released on multiple platforms,

106
00:05:15,821 --> 00:05:18,784
we wanted to use Crossplay as a chance to center Destiny

107
00:05:19,144 --> 00:05:21,206
as a platform for all your social interactions

108
00:05:21,366 --> 00:05:22,887
with players that you meet while in-game.

109
00:05:23,708 --> 00:05:25,149
Regardless of where you're playing from,

110
00:05:25,549 --> 00:05:27,551
you should not be limited in your Destiny experience.

111
00:05:28,192 --> 00:05:30,193
And everyone on any other platform

112
00:05:30,414 --> 00:05:31,354
should be accessible to you,

113
00:05:31,795 --> 00:05:34,217
to be friends with, to communicate with, and more.

114
00:05:36,114 --> 00:05:37,855
And while we defined goals for this experience,

115
00:05:37,996 --> 00:05:39,717
we also made sure to articulate constraints

116
00:05:39,957 --> 00:05:41,078
that we could use as raisers

117
00:05:41,398 --> 00:05:42,699
to help make decisions along the way.

118
00:05:43,620 --> 00:05:45,241
First was that we were date-driven.

119
00:05:45,741 --> 00:05:48,183
We wanted to release Crossplay as soon as possible

120
00:05:48,283 --> 00:05:49,685
for the best player experience.

121
00:05:50,405 --> 00:05:52,086
So we targeted a release of September, 2021.

122
00:05:52,387 --> 00:05:55,309
The pre-production planning for this project

123
00:05:55,329 --> 00:05:56,430
started in the summer of 2020,

124
00:05:57,571 --> 00:05:59,672
and this gave us a little over a year to plan,

125
00:06:00,233 --> 00:06:01,834
execute, and release Crossplay.

126
00:06:02,274 --> 00:06:04,376
So we had a scope accordingly to meet this deadline.

127
00:06:05,584 --> 00:06:07,906
Next, the experience needed to be seamless,

128
00:06:08,566 --> 00:06:09,847
especially to new players.

129
00:06:10,408 --> 00:06:12,209
We didn't want to overcomplicate the experience

130
00:06:12,289 --> 00:06:14,671
of getting a new player from character creation

131
00:06:15,032 --> 00:06:16,453
through to having their boots on the ground

132
00:06:16,533 --> 00:06:17,273
in the first mission.

133
00:06:18,414 --> 00:06:21,136
And lastly, we knew we would have to collaborate a lot

134
00:06:21,176 --> 00:06:22,417
with our first party platforms,

135
00:06:22,938 --> 00:06:25,880
like Sony, Valve, Google, and Microsoft.

136
00:06:26,421 --> 00:06:27,682
And we knew it was important to respect

137
00:06:27,762 --> 00:06:29,783
our partner relationships with each of these companies.

138
00:06:30,934 --> 00:06:33,596
Each platform has their own unique certification requirements.

139
00:06:34,036 --> 00:06:36,118
And while building Crossplay, we should be doing our best

140
00:06:36,158 --> 00:06:37,839
to adhere to the spirit of these requirements.

141
00:06:40,641 --> 00:06:42,663
So let's talk about the actual team that built Crossplay.

142
00:06:43,664 --> 00:06:45,325
This effort was a cross-team initiative

143
00:06:45,365 --> 00:06:47,667
that spanned across the studio with four core teams

144
00:06:48,007 --> 00:06:49,409
working together on the experience.

145
00:06:50,069 --> 00:06:51,630
The teams that were involved were first,

146
00:06:52,171 --> 00:06:53,332
the engine client team,

147
00:06:53,672 --> 00:06:55,253
working on the lower level engine code,

148
00:06:55,433 --> 00:06:57,975
making changes to things like matchmaking and networking.

149
00:06:58,696 --> 00:07:02,658
The UI UX team, working on the UI players would be interacting with to manage all their

150
00:07:02,678 --> 00:07:04,459
new cross-platform friends and invites.

151
00:07:05,159 --> 00:07:08,181
The services team, tasked with standing up all the new game services.

152
00:07:08,901 --> 00:07:12,923
And the Bungie.net team, working on the web and mobile experiences for Bungie.net and

153
00:07:12,943 --> 00:07:14,044
Destiny 2 companion app.

154
00:07:14,907 --> 00:07:17,088
In total, there were about 50 people working on this,

155
00:07:17,348 --> 00:07:17,908
on crossplay.

156
00:07:18,449 --> 00:07:21,070
This includes all sorts of disciplines like engineers,

157
00:07:21,270 --> 00:07:23,912
testers, designers, producers, and all that.

158
00:07:24,212 --> 00:07:26,373
We also had our technical account management

159
00:07:26,534 --> 00:07:28,175
deeply integrated on the team

160
00:07:28,275 --> 00:07:30,256
to handle our first party partner relationships.

161
00:07:31,892 --> 00:07:36,254
So, in addition to that, there were a lot of people around the studio that were involved in this effort.

162
00:07:36,555 --> 00:07:42,758
Our publishing and marketing and analytics teams helping let us engage players and how they were playing cross-play,

163
00:07:43,158 --> 00:07:45,899
the player support and community teams giving us their player feedback,

164
00:07:46,579 --> 00:07:52,522
and also the site reliability and network operations teams making sure the services we were standing up were healthy when they were live.

165
00:07:53,343 --> 00:07:55,944
And lastly, this was all done while we were working remote.

166
00:07:58,222 --> 00:08:00,385
So in terms of the development timeline of Crossplay,

167
00:08:01,026 --> 00:08:03,349
as mentioned before, we started pre-production

168
00:08:03,590 --> 00:08:04,751
planning during the summer of 2020.

169
00:08:06,153 --> 00:08:07,856
From then, it was about a year of development

170
00:08:07,936 --> 00:08:10,460
to fully release Crossplay with the season of The Lost

171
00:08:10,620 --> 00:08:11,121
in August of 2021.

172
00:08:13,247 --> 00:08:15,988
Along the way, there were a couple milestones and events that helped us.

173
00:08:16,788 --> 00:08:20,349
We spent the first couple of months working on major tech pieces of the experience, while

174
00:08:20,369 --> 00:08:22,910
meeting with first-party partners to get approvals for our designs.

175
00:08:23,650 --> 00:08:27,672
This all led us to having our first proof of concept by the start of 2021, in which

176
00:08:27,712 --> 00:08:30,353
we had two platforms joining together for the first time.

177
00:08:31,613 --> 00:08:35,674
We also utilized live updates to the game to get early versions of Crossplay out to

178
00:08:35,695 --> 00:08:35,995
players.

179
00:08:37,554 --> 00:08:38,614
In the season before we launched,

180
00:08:38,754 --> 00:08:41,216
we released an alpha of crossplay for Bungie employees

181
00:08:41,536 --> 00:08:43,378
to have some crossplay features enabled for them.

182
00:08:43,738 --> 00:08:46,220
And later, a beta in which we enabled crossplay

183
00:08:46,360 --> 00:08:48,641
in a strike playlist for all players to try out.

184
00:08:49,962 --> 00:08:52,344
These early releases helped get crossplay out there

185
00:08:52,464 --> 00:08:54,025
and incrementally build on the experience.

186
00:08:54,485 --> 00:08:56,687
And we'll talk a little bit more about that later in the talk.

187
00:08:57,507 --> 00:08:58,688
And even after the full release,

188
00:08:59,048 --> 00:09:01,210
we've been continuing to add more features to crossplay,

189
00:09:01,330 --> 00:09:03,111
like with extended text chat on consoles.

190
00:09:04,032 --> 00:09:05,773
It was definitely a journey to get crossplay

191
00:09:05,813 --> 00:09:06,733
in the hands of players.

192
00:09:09,393 --> 00:09:13,114
So from that timeline, you can see we used a lot of different milestones and releases to release

193
00:09:13,154 --> 00:09:18,356
cross-play. And one of my favorite quotes about the process that we used comes from within the

194
00:09:18,376 --> 00:09:22,838
studio. We can't control our outcomes, but we can control our executions.

195
00:09:23,618 --> 00:09:26,219
We tried our very best to execute in the best way possible,

196
00:09:26,800 --> 00:09:28,380
to make the right decisions for the team,

197
00:09:28,820 --> 00:09:30,321
the experience, and the player.

198
00:09:31,041 --> 00:09:32,362
And that's the main focus of what we wanted

199
00:09:32,382 --> 00:09:33,142
to share in this talk.

200
00:09:33,782 --> 00:09:35,503
Because in the end, that's really all you can control.

201
00:09:36,003 --> 00:09:37,203
Because once it's in the hands of players,

202
00:09:37,464 --> 00:09:38,964
you don't really have much control over that.

203
00:09:39,764 --> 00:09:41,665
But luckily for us, Crossplay was released

204
00:09:41,685 --> 00:09:43,306
to a lot of positive attention from our players,

205
00:09:43,666 --> 00:09:45,787
uniting them all together, and letting them play

206
00:09:45,847 --> 00:09:47,247
and engage with each other in a new way.

207
00:09:49,765 --> 00:09:51,287
So now that we've talked about the motivations

208
00:09:51,367 --> 00:09:53,529
and circumstances surrounding the making of crossplay,

209
00:09:53,749 --> 00:09:55,291
we'll move on to the actual lessons we learned.

210
00:09:55,932 --> 00:09:57,533
At Bungie, we really like the number seven.

211
00:09:57,854 --> 00:09:59,455
If you were at Alan Blaine's talk yesterday,

212
00:09:59,475 --> 00:10:01,838
he used seven axes, I have seven lessons.

213
00:10:02,198 --> 00:10:03,459
So this section comes in that many parts.

214
00:10:03,700 --> 00:10:05,481
Here's the seven lessons we learned in building crossplay.

215
00:10:07,343 --> 00:10:10,026
First up, building crossplay in our own engine

216
00:10:10,166 --> 00:10:12,128
meant creating a lot of new systems from scratch.

217
00:10:13,792 --> 00:10:16,694
Cross-platform play is a pretty easily understood concept.

218
00:10:17,114 --> 00:10:19,076
It's allowing everyone on your various platforms

219
00:10:19,676 --> 00:10:20,196
to play together.

220
00:10:20,957 --> 00:10:23,739
And so the conclusion is that's just networking around bits

221
00:10:23,799 --> 00:10:24,740
to different platforms, right?

222
00:10:25,620 --> 00:10:28,742
And I mean, sure, and I see Steve with his head down.

223
00:10:30,263 --> 00:10:32,185
I mean, sure, that's definitely part of it,

224
00:10:32,445 --> 00:10:35,367
but to create a truly great cross-play experience,

225
00:10:35,767 --> 00:10:36,607
there's so much more to it.

226
00:10:37,528 --> 00:10:38,669
And there's a couple other reasons

227
00:10:38,689 --> 00:10:40,550
that cause us to need to build so many new systems.

228
00:10:41,501 --> 00:10:44,542
First was that we built Destiny in our own proprietary engine.

229
00:10:45,422 --> 00:10:48,062
All the new cross-platform tech functionality for the engine

230
00:10:48,123 --> 00:10:49,283
needed to be created from scratch.

231
00:10:50,463 --> 00:10:52,524
Next, many systems that we were using

232
00:10:52,744 --> 00:10:54,564
were based on platform-level APIs.

233
00:10:55,184 --> 00:10:57,265
And all these needed to be recreated in-engine

234
00:10:57,345 --> 00:10:58,445
to support cross-platform.

235
00:10:59,125 --> 00:11:01,706
Unlike a game that uses a third-party engine like Unity

236
00:11:02,046 --> 00:11:04,366
or Unreal, which has a lot of cross-plat built in,

237
00:11:04,926 --> 00:11:07,107
we had to build a lot of platform-equivalent systems

238
00:11:07,147 --> 00:11:07,627
and services.

239
00:11:09,320 --> 00:11:11,381
Also, many surrounding systems are needed

240
00:11:11,421 --> 00:11:13,622
to enhance cross-play, like how does your player

241
00:11:14,803 --> 00:11:16,663
identify themselves across various platforms?

242
00:11:17,564 --> 00:11:19,565
So let's do a run-through of all the various systems.

243
00:11:20,905 --> 00:11:21,645
Starting with networking.

244
00:11:22,646 --> 00:11:25,167
Just to get all these guardians in the tower together,

245
00:11:25,767 --> 00:11:27,208
core networking tech had to be changed

246
00:11:27,368 --> 00:11:29,149
in order to enable sending of content

247
00:11:29,209 --> 00:11:30,309
across various platforms.

248
00:11:32,020 --> 00:11:36,322
The networking changes that we made were some of the biggest and scariest of bone breaking changes,

249
00:11:36,542 --> 00:11:40,263
since it's one of the most fundamental and underlying systems in the Destiny 2 engine.

250
00:11:41,183 --> 00:11:45,404
Since we had shipped separately for various platforms, we had made optimizations for each

251
00:11:45,424 --> 00:11:48,985
of them, and this didn't all play well together when we combined them for crossplay.

252
00:11:49,828 --> 00:11:52,488
For example, our package layout is not always the same

253
00:11:52,568 --> 00:11:53,709
across various platforms.

254
00:11:54,169 --> 00:11:55,669
So we can't just network memory handles

255
00:11:55,749 --> 00:11:56,889
from one platform to another.

256
00:11:57,569 --> 00:11:59,010
We ended up creating a mapping layer

257
00:11:59,050 --> 00:12:01,430
to communicate over the network with consistent handles

258
00:12:01,610 --> 00:12:03,151
that could be mapped to appropriate handles

259
00:12:03,271 --> 00:12:04,031
on a given platform.

260
00:12:05,031 --> 00:12:08,032
Also, the way we handle online sessions for fireteams

261
00:12:08,072 --> 00:12:10,272
had to be changed since we could no longer rely

262
00:12:10,432 --> 00:12:12,093
on a single session hosted by a single player.

263
00:12:12,613 --> 00:12:14,853
We now had to maintain separate online sessions

264
00:12:14,933 --> 00:12:15,673
for each platform.

265
00:12:17,050 --> 00:12:20,894
If you're interested in learning more about the Destiny 2 networking, there's a 2015 talk

266
00:12:20,974 --> 00:12:22,375
given by Justin Truman for you to watch.

267
00:12:24,036 --> 00:12:27,719
So and there's a lot more of the technical specifics that I glossed over that we did

268
00:12:27,739 --> 00:12:31,923
with not networking but needless to say these were big changes and we needed to get them

269
00:12:31,983 --> 00:12:35,646
right to get platforms able to talk to each other and be able to be enrolled together

270
00:12:35,866 --> 00:12:37,648
and these were some of the earliest pieces that we took on.

271
00:12:39,562 --> 00:12:42,084
So let's talk about player identity in a cross-play world.

272
00:12:43,025 --> 00:12:45,006
Players spend many hours in Destiny 2

273
00:12:45,507 --> 00:12:47,168
going through raids and dungeons,

274
00:12:47,669 --> 00:12:49,070
facing off in competitive matches,

275
00:12:49,631 --> 00:12:51,933
all trying to get that god roll of their favorite shotgun

276
00:12:52,093 --> 00:12:53,694
or trying to get the right mods for their armor.

277
00:12:54,315 --> 00:12:56,877
The guardian that you play as is an extension of yourself.

278
00:12:57,658 --> 00:12:58,739
And while the weapons you equip

279
00:12:58,879 --> 00:13:00,921
and getting your armor to look just right is important,

280
00:13:01,601 --> 00:13:02,983
equally as important is your name

281
00:13:03,183 --> 00:13:05,205
and how you identify yourself to other players.

282
00:13:06,456 --> 00:13:08,902
Usually, you use platform names like your gamer tag

283
00:13:09,023 --> 00:13:11,569
or your Steam name, among other names for that equivalent,

284
00:13:12,010 --> 00:13:13,755
to identify yourself, and by extension,

285
00:13:13,855 --> 00:13:15,238
your character in online games.

286
00:13:16,116 --> 00:13:18,577
However, with cross play, that's no longer sufficient.

287
00:13:19,318 --> 00:13:22,039
Say on PlayStation, you go buy Oryx,

288
00:13:22,499 --> 00:13:24,040
and all your friends there know you buy Oryx.

289
00:13:24,400 --> 00:13:27,002
But one day, with cross play, you hop onto your PC

290
00:13:27,442 --> 00:13:28,343
and you start playing on Steam.

291
00:13:28,603 --> 00:13:31,044
But there, your profile name is Savathun.

292
00:13:31,664 --> 00:13:33,265
And you try to fire team up with your friends,

293
00:13:33,665 --> 00:13:35,587
but none of them recognize you by that name.

294
00:13:36,687 --> 00:13:39,969
So, using platform names in this case

295
00:13:40,149 --> 00:13:41,150
was no longer sufficient.

296
00:13:42,300 --> 00:13:44,721
With cross-play, it was important that we deliver

297
00:13:44,781 --> 00:13:48,162
a consistent experience where someone is easily identifiable

298
00:13:48,522 --> 00:13:50,303
no matter what platform they were playing from.

299
00:13:53,124 --> 00:13:54,885
We needed to create a consistent name

300
00:13:55,005 --> 00:13:56,725
that identifies a player that is unique

301
00:13:56,905 --> 00:13:57,926
so that players could find them.

302
00:13:58,857 --> 00:14:01,520
To that end, we created the concept of a bungee name.

303
00:14:02,240 --> 00:14:03,581
This consists of a player name

304
00:14:03,922 --> 00:14:05,683
and a four-digit unique identifier.

305
00:14:06,404 --> 00:14:08,205
For example, Oryx1234.

306
00:14:08,245 --> 00:14:11,688
This allows multiple players to have the same name,

307
00:14:11,888 --> 00:14:12,789
in this case, Oryx,

308
00:14:13,430 --> 00:14:15,491
but allows people to search for a specific person

309
00:14:15,692 --> 00:14:16,432
with the four digits.

310
00:14:17,443 --> 00:14:21,464
and guided by our earlier stated goal of the project of not narrowing the new player funnel,

311
00:14:22,004 --> 00:14:24,325
for new players logging on once crossplay was enabled,

312
00:14:24,865 --> 00:14:29,466
we needed the experience of setting a bungee name to not be complicated or add extra time and effort.

313
00:14:30,086 --> 00:14:33,887
We created a seamless experience that seeds the player name of a bungee name

314
00:14:34,407 --> 00:14:36,428
from the platform that the player first logs on with.

315
00:14:37,585 --> 00:14:40,009
So to demonstrate, this is the screen that players

316
00:14:40,049 --> 00:14:41,931
I met with for the first time once they logged in

317
00:14:42,091 --> 00:14:43,033
once cross-play was enabled.

318
00:14:43,734 --> 00:14:45,456
It tells the player that their Bungie name

319
00:14:45,556 --> 00:14:47,078
is being set from their platform name.

320
00:14:47,098 --> 00:14:48,961
In this case, you can see on the left

321
00:14:49,281 --> 00:14:51,804
that they were signing on for the first time with Steam

322
00:14:52,025 --> 00:14:54,067
and their profile name was Cosmos BNG.

323
00:14:55,203 --> 00:15:03,249
This seeds into their bungee name and their unique, the unique identifier of 0748 is added to the end, as you can see on the right side.

324
00:15:03,970 --> 00:15:11,275
Now, that player is now known as CosmosBNG and it's what is displayed above their head in game and in the roster, wherever they play.

325
00:15:11,776 --> 00:15:12,836
It's their consistent identity.

326
00:15:14,609 --> 00:15:16,130
So next is friends and presents.

327
00:15:16,830 --> 00:15:19,812
The concept of friends and who the people you can play with

328
00:15:19,932 --> 00:15:20,872
was completely changed.

329
00:15:21,713 --> 00:15:25,054
Now your roster could have people from any and all platforms

330
00:15:25,354 --> 00:15:26,435
that Destiny is available on.

331
00:15:26,895 --> 00:15:28,656
And that brought with it many new challenges.

332
00:15:31,025 --> 00:15:33,849
Destiny 2 is an MMO with many communities of players

333
00:15:33,929 --> 00:15:36,632
that is fostered by deep social mechanics.

334
00:15:37,353 --> 00:15:39,215
Most activities are meant to be played with others.

335
00:15:39,856 --> 00:15:42,218
Even if you play solo, we match you up with other players,

336
00:15:42,459 --> 00:15:44,121
like with strikes or when you free roam.

337
00:15:45,062 --> 00:15:46,844
Destiny 2 is meant to be played with others.

338
00:15:48,447 --> 00:15:50,108
Now that players could interact with anyone,

339
00:15:50,429 --> 00:15:52,931
that meant we could no longer use platform friend lists.

340
00:15:53,552 --> 00:15:55,894
Without changes, you would not have access to friends

341
00:15:55,934 --> 00:15:57,535
that you were making on other platforms.

342
00:15:58,396 --> 00:16:00,258
Since you could make and have friends anywhere now,

343
00:16:00,518 --> 00:16:03,301
we were exposing players to a whole new social network

344
00:16:03,742 --> 00:16:04,542
of Destiny players.

345
00:16:05,503 --> 00:16:06,845
We created the Bungie Friend Service

346
00:16:06,865 --> 00:16:08,306
to handle this new social graph

347
00:16:08,586 --> 00:16:09,627
for players to engage with

348
00:16:09,787 --> 00:16:11,589
and enable them to become friends with anyone.

349
00:16:12,493 --> 00:16:14,374
When a player friends someone in game,

350
00:16:14,894 --> 00:16:16,214
whatever platform they log in with,

351
00:16:16,554 --> 00:16:18,155
they will appear on the Bungie friends list.

352
00:16:19,355 --> 00:16:21,156
Additionally, platform level presence

353
00:16:21,196 --> 00:16:22,596
was no longer enough to keep track

354
00:16:22,636 --> 00:16:24,116
of when someone was playing Destiny.

355
00:16:24,836 --> 00:16:26,157
So we stood up a presence service

356
00:16:26,237 --> 00:16:28,677
to track players online and offline statuses

357
00:16:28,797 --> 00:16:29,418
when they were playing.

358
00:16:31,418 --> 00:16:33,539
With this concept of a new Bungie social network,

359
00:16:33,899 --> 00:16:35,779
we needed to make sure that all interactions

360
00:16:35,999 --> 00:16:39,140
people have come to expect with social networks

361
00:16:39,360 --> 00:16:40,100
was also present.

362
00:16:41,032 --> 00:16:43,154
First off, was being able to find people.

363
00:16:43,654 --> 00:16:45,135
And to that end, we had to build searching.

364
00:16:45,755 --> 00:16:47,536
We kept it to finding others by the bungee name.

365
00:16:48,277 --> 00:16:49,718
So as you see in the top left corner,

366
00:16:49,778 --> 00:16:50,478
there's a search bar.

367
00:16:50,938 --> 00:16:52,619
This is where the four digit unique identifier

368
00:16:52,659 --> 00:16:53,200
comes into play.

369
00:16:54,100 --> 00:16:56,041
And it's important, and it just helps make sure

370
00:16:56,061 --> 00:16:58,303
that people are explicitly searching for the right person.

371
00:16:59,364 --> 00:17:01,945
Upon finding that person, they're able to inspect them,

372
00:17:03,406 --> 00:17:05,127
and then send them a friend request.

373
00:17:06,409 --> 00:17:08,631
On the receiving side, you need to be able to view

374
00:17:08,792 --> 00:17:10,714
incoming friend requests or see pending ones.

375
00:17:11,735 --> 00:17:14,758
And so, and finally being able to action on them

376
00:17:14,898 --> 00:17:17,100
by being able to accept or reject requests

377
00:17:17,280 --> 00:17:17,861
that come your way.

378
00:17:19,563 --> 00:17:22,205
Also, other common social controls like blocking

379
00:17:22,345 --> 00:17:24,307
and displaying your presence as offline or online

380
00:17:24,427 --> 00:17:26,510
had to be respected as well with this new friend system.

381
00:17:28,985 --> 00:17:33,653
The changes in identity and this new concept of Bungie Friends resulted in a major overhaul

382
00:17:33,753 --> 00:17:34,655
of our roster system.

383
00:17:35,376 --> 00:17:39,524
As the major UI screen that players utilized to interact with others, a lot needed to be

384
00:17:39,564 --> 00:17:40,986
done to account for cross-platform.

385
00:17:42,097 --> 00:17:46,702
More information needed to be given for players, um, for what platform a friend or a nearby

386
00:17:46,742 --> 00:17:51,147
person was playing on. Now we show a little icon next to each person. As you see in each

387
00:17:51,167 --> 00:17:54,951
of these roster entries, there's a little icon that indicates what platform they're on.

388
00:17:55,832 --> 00:18:00,057
Additionally, to help other players with identifying you, player detail screens were

389
00:18:00,117 --> 00:18:03,200
updated to show all your linked screen names from other platforms.

390
00:18:03,821 --> 00:18:08,825
In this case, this player is playing from Steam with the profile name Tiny Tim Go,

391
00:18:09,005 --> 00:18:12,468
as you can see towards the bottom. But their Bungie name is different, Caster Rhetoric.

392
00:18:13,308 --> 00:18:16,150
This makes it easier for people to recognize you when they're inspecting you.

393
00:18:18,752 --> 00:18:23,356
So, let's move on to the changes that we made to session or fireteam invites. In Destiny 2,

394
00:18:23,836 --> 00:18:27,699
fireteams are the group of two to six players that you play through various activities with.

395
00:18:28,219 --> 00:18:28,780
It's your squad.

396
00:18:29,853 --> 00:18:32,875
Fireteams are a core social and gameplay component to the game.

397
00:18:33,355 --> 00:18:35,516
It's how many players engage with Destiny 2 content.

398
00:18:35,876 --> 00:18:38,398
They hop online, they join their friends in a fireteam,

399
00:18:38,518 --> 00:18:40,099
and they take on a raid or a trials match.

400
00:18:41,720 --> 00:18:44,161
And much like friends lists, we were relying on platforms

401
00:18:44,241 --> 00:18:45,022
for session invites.

402
00:18:45,698 --> 00:18:49,702
Before, you could go into your roster and you would see your platform friend, platform

403
00:18:49,722 --> 00:18:54,046
friends list and send people invites to join your fire team. But that was all using

404
00:18:54,086 --> 00:18:59,070
platform APIs. To send, and they would send the receiving player a notification. So if

405
00:18:59,110 --> 00:19:03,955
you were on Xbox, if you were sent an invite, you would see on your, in your Xbox UI that

406
00:19:03,995 --> 00:19:07,818
you were invited. And they'd get a toast notification and you'd be able to accept

407
00:19:07,858 --> 00:19:10,821
that. It would open up Destiny and join your character into the fire team.

408
00:19:11,720 --> 00:19:15,201
But now, we needed a way to bring off-platform players

409
00:19:15,501 --> 00:19:16,262
into your Fireteam.

410
00:19:17,042 --> 00:19:19,703
There wasn't an easy way to call into other platforms invite

411
00:19:19,803 --> 00:19:21,163
APIs from different platforms.

412
00:19:21,864 --> 00:19:24,545
So we had to stand up another service from scratch

413
00:19:24,585 --> 00:19:25,765
to manage invites for Fireteams.

414
00:19:27,246 --> 00:19:28,987
We created the invite service to allow

415
00:19:29,027 --> 00:19:30,847
players to create and join Fireteams

416
00:19:31,007 --> 00:19:31,848
with whoever they wanted.

417
00:19:32,828 --> 00:19:34,489
We leveraged our own notification system

418
00:19:34,529 --> 00:19:37,530
to show players that they had been invited to a Fireteam.

419
00:19:37,930 --> 00:19:39,831
You can see this on the bottom right in that gray bar

420
00:19:40,191 --> 00:19:40,911
with that notification.

421
00:19:41,851 --> 00:19:47,132
Additionally, new UI had to be shown to view and manage pending invites. We created a new view

422
00:19:47,432 --> 00:19:52,273
which friend requests also go through to do this. From here, you can see your stored invites,

423
00:19:52,433 --> 00:19:57,915
which do expire after some time, and action on them like accepting or rejecting. Accepting the

424
00:19:57,955 --> 00:20:03,776
invite pulls you into the fire team. And while fire teams act as the group of players you play

425
00:20:03,796 --> 00:20:07,977
through various activities of Destiny 2, to really engage with each other, you need to be able to

426
00:20:08,017 --> 00:20:08,437
communicate.

427
00:20:09,621 --> 00:20:14,185
In Destiny 2, players are able to voice chat and also text

428
00:20:14,225 --> 00:20:14,485
chat.

429
00:20:17,267 --> 00:20:19,369
Like many other systems, our voice engine

430
00:20:19,409 --> 00:20:21,991
was previously using platform voice implementations.

431
00:20:22,671 --> 00:20:25,113
Sony APIs for PlayStation players to talk to each other,

432
00:20:25,133 --> 00:20:27,535
Microsoft ones for Xbox ones, and so on.

433
00:20:28,276 --> 00:20:30,057
But now, with fire teams that had players

434
00:20:30,137 --> 00:20:34,080
across all platforms, if we kept it the same way,

435
00:20:34,160 --> 00:20:35,361
you wouldn't be able to talk with each other.

436
00:20:36,348 --> 00:20:37,608
What emerged was the need to create,

437
00:20:37,928 --> 00:20:40,349
to have a solution that would encode and decode audio

438
00:20:40,629 --> 00:20:42,290
that was portable across all platforms.

439
00:20:43,311 --> 00:20:45,391
So we turned to using a third-party voice service

440
00:20:45,651 --> 00:20:46,932
to handle cross-platform voice.

441
00:20:48,272 --> 00:20:51,134
On the tech side, previously, only PC players

442
00:20:51,214 --> 00:20:53,394
were the ones that were able to chat with each other.

443
00:20:53,915 --> 00:20:56,536
And the only PC platform that we shipped on was Steam.

444
00:20:57,356 --> 00:20:59,957
So it made sense to use Steam APIs in this case.

445
00:21:00,837 --> 00:21:02,698
However, timed with the launch of Crossplay

446
00:21:02,998 --> 00:21:04,139
was also the release of Destiny 2

447
00:21:04,540 --> 00:21:05,701
on the Microsoft PC store.

448
00:21:06,521 --> 00:21:08,203
Now, with another PC platform,

449
00:21:08,583 --> 00:21:10,184
our existing solution was not viable

450
00:21:10,264 --> 00:21:12,987
if we wanted PC players to be able to communicate.

451
00:21:13,787 --> 00:21:15,609
Additionally, guided by our goal

452
00:21:15,669 --> 00:21:18,071
of not letting platform limit who you could communicate with,

453
00:21:18,431 --> 00:21:20,313
we wanted to expand text capabilities

454
00:21:20,673 --> 00:21:21,774
to console players as well.

455
00:21:22,414 --> 00:21:24,416
To that end, we built our own text chat service

456
00:21:24,696 --> 00:21:25,717
to send messages to players.

457
00:21:27,051 --> 00:21:28,431
We'll talk a little bit more about the decisions

458
00:21:28,451 --> 00:21:30,712
that we made to build our own text chat

459
00:21:30,912 --> 00:21:32,472
and integrate a third-party voice solution

460
00:21:32,492 --> 00:21:33,052
a little bit later.

461
00:21:35,393 --> 00:21:37,353
So all that we covered was just the systems

462
00:21:37,393 --> 00:21:39,094
that we did for the in-game client,

463
00:21:39,454 --> 00:21:41,114
but there's even more to the cross-play experience.

464
00:21:42,014 --> 00:21:43,855
When building cross-play, we knew that parts

465
00:21:43,875 --> 00:21:45,775
of the experience would need to be accessible

466
00:21:45,835 --> 00:21:47,376
from the web and mobile sites.

467
00:21:47,896 --> 00:21:49,616
In our case, we have Bungie.net

468
00:21:49,716 --> 00:21:50,936
and the Destiny 2 companion app.

469
00:21:52,025 --> 00:21:53,825
Having out-of-game extensions of cross-play

470
00:21:53,945 --> 00:21:56,566
offered deeper ways to manage and engage with the experience.

471
00:21:57,167 --> 00:21:58,887
Like it was only through Bungie.net

472
00:21:58,947 --> 00:22:00,268
that players were able to pull

473
00:22:00,708 --> 00:22:02,168
all their linked platform friends lists

474
00:22:02,528 --> 00:22:04,829
and batch send requests to see their Bungie friends lists.

475
00:22:05,830 --> 00:22:08,431
Additionally, iteration on web and mobile

476
00:22:08,751 --> 00:22:10,951
is much faster compared to shipping new updates

477
00:22:11,051 --> 00:22:11,812
for your game client.

478
00:22:12,572 --> 00:22:15,293
Offering these power user features for cross-play

479
00:22:15,753 --> 00:22:17,454
in a way that allowed us to iterate

480
00:22:17,474 --> 00:22:20,015
and polish these features more quickly was really helpful.

481
00:22:21,364 --> 00:22:23,044
Also, as a peek behind the curtains,

482
00:22:23,605 --> 00:22:25,245
one of the, the web, having a web experience

483
00:22:25,425 --> 00:22:26,765
that really helped with workarounds

484
00:22:27,005 --> 00:22:28,626
when we had bugs in our, in the game.

485
00:22:29,146 --> 00:22:30,766
So when we first launched,

486
00:22:30,866 --> 00:22:32,607
player searching in game was not,

487
00:22:32,827 --> 00:22:34,087
was not, actually didn't work.

488
00:22:34,627 --> 00:22:36,428
And we, people weren't able to add their friends.

489
00:22:37,068 --> 00:22:38,388
So we were able to route players

490
00:22:38,508 --> 00:22:39,668
to the web and mobile sites

491
00:22:39,949 --> 00:22:41,029
to search for who they wanted

492
00:22:41,209 --> 00:22:42,129
and find who they needed,

493
00:22:42,589 --> 00:22:43,989
and, and we, until we were able

494
00:22:44,009 --> 00:22:45,190
to get a fix out the next day.

495
00:22:46,230 --> 00:22:48,270
All up, with this and everything else,

496
00:22:48,511 --> 00:22:49,991
a lot of work went into making this experience.

497
00:22:52,107 --> 00:22:53,709
So in summary, here's the things that we learned

498
00:22:53,749 --> 00:22:55,110
in having to build the many new systems

499
00:22:55,190 --> 00:22:56,331
for and surrounding cross-play.

500
00:22:57,072 --> 00:22:59,234
First, when you're dealing with your own engine,

501
00:22:59,675 --> 00:23:01,897
many core and fundamental parts of the engine

502
00:23:02,137 --> 00:23:02,958
will need to be changed.

503
00:23:03,919 --> 00:23:06,302
From things like changes in underlying networking

504
00:23:06,382 --> 00:23:08,624
or revamping UI, all this means is that

505
00:23:08,664 --> 00:23:10,466
when you build your own cross-platform tech,

506
00:23:10,946 --> 00:23:13,008
scope and extra time need to be accounted for.

507
00:23:14,614 --> 00:23:16,456
Second, when building for cross-platform,

508
00:23:16,876 --> 00:23:18,697
many of your game's pre-existing systems

509
00:23:18,878 --> 00:23:21,240
probably rely on platform APIs and features.

510
00:23:21,600 --> 00:23:24,482
Your friends lists, session invites, voice chat, all that.

511
00:23:25,743 --> 00:23:28,445
Most of these features will need to be recreated from scratch.

512
00:23:29,106 --> 00:23:30,847
And in this case, your mileage may vary

513
00:23:31,468 --> 00:23:33,469
because third-party engines like Unreal or Unity,

514
00:23:33,910 --> 00:23:36,152
a lot of cross-platform portability of services

515
00:23:36,192 --> 00:23:37,513
and systems is already built in.

516
00:23:38,133 --> 00:23:40,355
But it's important to take stock of what systems you rely

517
00:23:40,475 --> 00:23:42,877
on platform tech and will need to be moved to cross-plat.

518
00:23:44,200 --> 00:23:46,863
And third, extending your cross-platform experience

519
00:23:46,963 --> 00:23:49,445
outside your game client to wherever players engage

520
00:23:49,465 --> 00:23:50,906
your game can be very valuable.

521
00:23:51,647 --> 00:23:54,269
This makes it easier to give players more fine-grained

522
00:23:54,289 --> 00:23:56,671
control over the many new systems that you're introducing.

523
00:23:57,632 --> 00:23:59,634
Having web and mobile accounted for from the beginning

524
00:24:00,034 --> 00:24:01,796
made for a truly cohesive experience.

525
00:24:03,817 --> 00:24:06,300
So, next lesson is about handling interdependencies.

526
00:24:09,479 --> 00:24:12,181
Now that you have an idea of the systems that were involved in making Crossplay,

527
00:24:12,561 --> 00:24:15,263
you have a better sense of the scale of this large cross-team initiative.

528
00:24:15,884 --> 00:24:19,086
And with projects of this kind of scope comes many complicated dependencies

529
00:24:19,246 --> 00:24:20,707
between all the teams that are working on it.

530
00:24:21,268 --> 00:24:22,249
And these all need to be wrangled.

531
00:24:24,150 --> 00:24:26,912
Having four different teams focused on separate parts of the experience

532
00:24:27,272 --> 00:24:29,014
meant that there were many intertwined dependencies.

533
00:24:29,654 --> 00:24:30,835
To make things more complicated,

534
00:24:31,275 --> 00:24:34,257
we were executing under a tight timeline to deliver by September of 2021.

535
00:24:35,726 --> 00:24:39,768
This made it all the more important to ensure all teams were not blocked and could make progress.

536
00:24:41,228 --> 00:24:44,770
Also, with everyone being remote, come complications of being in sync.

537
00:24:45,330 --> 00:24:49,072
No longer were we able to have ad hoc hallway or desk conversations. You couldn't just

538
00:24:49,932 --> 00:24:54,014
scroll up to someone's desk and ask them a question, which usually helps smooth out

539
00:24:54,174 --> 00:24:57,536
questions and issues. Those didn't happen as organically when you're working from home,

540
00:24:57,716 --> 00:25:00,657
since you'd have to message someone. So how did we approach this issue?

541
00:25:01,994 --> 00:25:04,936
We were very fortunate enough to have so many people working on this feature.

542
00:25:05,517 --> 00:25:09,019
But with more people comes the challenge of making sure everyone is building towards the

543
00:25:09,039 --> 00:25:09,440
same goal.

544
00:25:10,260 --> 00:25:14,944
We emphasized team alignment and providing as many avenues as possible to identify blockers

545
00:25:15,004 --> 00:25:17,546
and open issues that anyone on the team was facing.

546
00:25:19,845 --> 00:25:22,549
We set out to create as many opportunities as possible

547
00:25:22,609 --> 00:25:24,493
to ensure we were all building towards the same thing.

548
00:25:25,234 --> 00:25:26,997
And it's a bit cliche for me as a producer

549
00:25:27,237 --> 00:25:28,019
to bias this way,

550
00:25:28,439 --> 00:25:30,243
but especially in a remote work-from-home world,

551
00:25:30,503 --> 00:25:32,787
the solution came in the form of syncs and meetings.

552
00:25:34,155 --> 00:25:35,916
What we found was that having recurring syncs

553
00:25:36,196 --> 00:25:38,478
that pared down attendees by feature area,

554
00:25:38,778 --> 00:25:41,160
like everyone who was working on communication or chat,

555
00:25:41,600 --> 00:25:42,841
as well as ones by discipline,

556
00:25:42,901 --> 00:25:45,243
like everyone, all testers, or all engineers,

557
00:25:45,823 --> 00:25:48,285
allowed us to focus conversations on specific topics,

558
00:25:48,625 --> 00:25:49,786
like open issues and questions,

559
00:25:50,246 --> 00:25:51,948
or upcoming integrations of certain features.

560
00:25:53,287 --> 00:25:55,008
One example of how this benefited us

561
00:25:55,228 --> 00:25:58,009
was by having a weekly sync to discuss specifically

562
00:25:58,069 --> 00:25:58,749
friends and presents.

563
00:25:59,510 --> 00:26:02,191
By focusing in on how the Bungie Friends service would

564
00:26:02,231 --> 00:26:04,693
interact with the UI and everything else in the client,

565
00:26:05,353 --> 00:26:06,974
people were able to bring up their questions.

566
00:26:07,714 --> 00:26:09,315
We realized we needed to figure out

567
00:26:09,375 --> 00:26:11,096
how blocking would work in a cross-play world,

568
00:26:11,476 --> 00:26:13,597
and this ambiguity was being felt by most people

569
00:26:13,657 --> 00:26:14,498
working on this feature.

570
00:26:15,398 --> 00:26:16,779
We were able to quickly address this

571
00:26:16,859 --> 00:26:19,140
by having engineers and designers in the same room

572
00:26:19,180 --> 00:26:21,341
to discuss what needed to be done to the experience.

573
00:26:22,089 --> 00:26:26,411
This was followed up in our weekly engineering syncs for the team to discuss the feasibility

574
00:26:26,471 --> 00:26:31,313
of certain technical solutions, like how would we be able to ferry the data to the right places.

575
00:26:32,854 --> 00:26:37,155
Also, we used recurring rituals like meetings where everyone on the core team was invited.

576
00:26:37,736 --> 00:26:40,997
This ensured everyone was present to be able to see how everyone was building together

577
00:26:41,337 --> 00:26:44,478
and how we were progressing holistically.

578
00:26:45,883 --> 00:26:48,524
Also, we had core team-wide weekly play tests.

579
00:26:49,105 --> 00:26:50,506
This allowed the whole team to see

580
00:26:50,546 --> 00:26:52,187
how the experience was coming together,

581
00:26:52,727 --> 00:26:53,968
and it was definitely a morale boost

582
00:26:54,008 --> 00:26:55,669
to see how the features that they were working on

583
00:26:55,969 --> 00:26:58,410
were just getting added more and more each week,

584
00:26:58,650 --> 00:26:59,691
and it got more polished.

585
00:27:01,112 --> 00:27:02,073
From all these points above,

586
00:27:02,333 --> 00:27:03,894
it's pretty clear that the approach that we took

587
00:27:04,254 --> 00:27:06,395
was giving team members lots of exposure to each other

588
00:27:06,655 --> 00:27:08,236
to build cohesion and empower them

589
00:27:08,256 --> 00:27:09,697
to identify and mitigate issues.

590
00:27:11,122 --> 00:27:13,884
So to sum it up, creating dedicated sync points

591
00:27:13,984 --> 00:27:16,486
ensures blockers are escalated at a cross-team level

592
00:27:16,586 --> 00:27:17,307
and handled quickly.

593
00:27:18,268 --> 00:27:19,709
Having syncs that slice your team

594
00:27:19,789 --> 00:27:22,091
in multiple different ways, like by working group

595
00:27:22,171 --> 00:27:23,673
or feature area or discipline,

596
00:27:24,153 --> 00:27:26,415
allows for different opportunities to discuss issues

597
00:27:26,555 --> 00:27:28,017
at different scales and depths.

598
00:27:29,178 --> 00:27:31,380
Next, when dealing with a large team

599
00:27:31,420 --> 00:27:32,441
that might also be remote,

600
00:27:32,861 --> 00:27:34,482
it's important to make sure everyone is aligned.

601
00:27:35,552 --> 00:27:38,336
Offering as many opportunities for the team to see each other

602
00:27:38,917 --> 00:27:41,440
helped make it easier for people across the team

603
00:27:41,700 --> 00:27:44,123
to proactively approach anyone else on the team

604
00:27:44,444 --> 00:27:46,006
with issues that they might be facing.

605
00:27:46,647 --> 00:27:48,429
And it gives people a sense of how their work

606
00:27:48,509 --> 00:27:49,671
fits into the bigger picture.

607
00:27:51,166 --> 00:27:55,429
And lastly, if you heard all this talk about syncs and meetings and working groups and

608
00:27:55,469 --> 00:27:58,330
everything and thought, that's a lot of meetings, I'd agree.

609
00:27:59,111 --> 00:28:03,994
Syncs to build consensus across the team come at the cost of IC time, or actually time to

610
00:28:04,034 --> 00:28:04,394
do things.

611
00:28:05,054 --> 00:28:06,555
And that's overhead on your team.

612
00:28:07,396 --> 00:28:09,217
So it's all the more important to find a balance.

613
00:28:10,062 --> 00:28:12,882
Admittedly, for us, we initially over-indexed on syncs.

614
00:28:13,362 --> 00:28:14,643
Too much time spent in meetings

615
00:28:14,783 --> 00:28:16,243
meant not enough time to do actual work.

616
00:28:16,823 --> 00:28:19,724
But we quickly were able to iterate on our processes

617
00:28:19,804 --> 00:28:21,104
and able to find a better cadence

618
00:28:21,144 --> 00:28:23,064
by limiting total meeting time for the team.

619
00:28:25,645 --> 00:28:27,645
So now that we talked about the what was involved

620
00:28:28,125 --> 00:28:30,046
with Crossplay and how we went about building it,

621
00:28:30,606 --> 00:28:32,386
let's move on to some of the design considerations.

622
00:28:32,826 --> 00:28:34,407
And in this lesson, it's about matchmaking.

623
00:28:36,708 --> 00:28:39,310
Players come to Destiny 2 with many different styles of play.

624
00:28:40,031 --> 00:28:42,372
From a preference for what kind of class,

625
00:28:42,733 --> 00:28:44,514
anyone here Warlock main?

626
00:28:45,514 --> 00:28:49,477
To liking, there we go, to liking certain types of damage,

627
00:28:49,597 --> 00:28:52,179
like solar or stasis or arc.

628
00:28:52,799 --> 00:28:55,141
The differences in play styles don't just stop there.

629
00:28:55,561 --> 00:28:57,242
It extends to the platform you play on.

630
00:28:57,823 --> 00:28:59,924
For example, keyboard and mouse players

631
00:29:00,024 --> 00:29:01,605
tend to have quicker reaction times

632
00:29:01,746 --> 00:29:02,766
compared to console players.

633
00:29:03,782 --> 00:29:05,684
The perception of this is especially important

634
00:29:05,824 --> 00:29:06,884
when you're in competitive modes.

635
00:29:08,365 --> 00:29:10,387
When you throw them all together in cross-play,

636
00:29:10,547 --> 00:29:12,508
you need to consider the types of players

637
00:29:12,528 --> 00:29:14,270
that are coming in and what they're coming with.

638
00:29:14,930 --> 00:29:16,631
For Destiny 2 specifically,

639
00:29:16,831 --> 00:29:18,352
there's some interesting challenges in this space.

640
00:29:18,673 --> 00:29:20,694
For example, the game has both competitive

641
00:29:20,834 --> 00:29:21,715
and cooperative modes,

642
00:29:22,195 --> 00:29:23,776
and players have different expectations

643
00:29:23,896 --> 00:29:25,517
in how they engage in each activity.

644
00:29:26,438 --> 00:29:27,679
Like with the reaction time difference.

645
00:29:28,271 --> 00:29:30,652
Maybe when you're in a cooperative mode, like a strike,

646
00:29:30,972 --> 00:29:32,473
and you don't, it doesn't really matter.

647
00:29:33,013 --> 00:29:35,274
But when you're in a competitive crucible match,

648
00:29:35,955 --> 00:29:38,956
as a console player, if you're matched against PC players,

649
00:29:39,696 --> 00:29:42,858
and you might perceive reaction time as a difference,

650
00:29:42,958 --> 00:29:44,038
and it might feel unfair.

651
00:29:45,298 --> 00:29:48,459
Also, PC and console players' platforms

652
00:29:48,739 --> 00:29:50,479
have very different security landscapes.

653
00:29:51,340 --> 00:29:52,780
Players using hacks and exploits

654
00:29:52,880 --> 00:29:54,620
are something we're constantly fighting against

655
00:29:55,001 --> 00:29:56,421
and can make for a lesser experience

656
00:29:56,501 --> 00:29:57,741
if you're exposing a console player

657
00:29:57,821 --> 00:29:58,802
who might not be used to this.

658
00:29:59,962 --> 00:30:01,502
So how do you make it fair for players

659
00:30:01,822 --> 00:30:03,323
on different platforms to play together

660
00:30:03,623 --> 00:30:05,203
while embracing full cross-platform?

661
00:30:06,744 --> 00:30:09,084
Figuring out how to match players on different platforms

662
00:30:09,324 --> 00:30:11,425
in the best way was an important decision

663
00:30:11,465 --> 00:30:12,045
that we had to make.

664
00:30:14,094 --> 00:30:16,095
we landed on making different matchmaking pools

665
00:30:16,175 --> 00:30:17,396
based on type of activity.

666
00:30:17,956 --> 00:30:19,477
This ensured fairness and balance

667
00:30:19,877 --> 00:30:21,237
while allowing players to play together.

668
00:30:22,378 --> 00:30:23,839
Not all modes of the game

669
00:30:23,899 --> 00:30:25,519
needed to create different matchmaking pools.

670
00:30:26,360 --> 00:30:28,981
There are strong player feelings about fairness,

671
00:30:29,461 --> 00:30:32,302
whether it be making controllers as competitive as possible

672
00:30:32,382 --> 00:30:33,223
with mouse and keyboard,

673
00:30:33,863 --> 00:30:36,344
or the different security landscapes with console and PC.

674
00:30:37,125 --> 00:30:40,046
We opted to keep PC players separate from console players

675
00:30:40,166 --> 00:30:40,986
for certain modes.

676
00:30:41,958 --> 00:30:44,040
We felt protecting players and ensuring fairness

677
00:30:44,200 --> 00:30:46,281
was the most important to ensure the best experience

678
00:30:46,622 --> 00:30:47,722
for the greatest number of players.

679
00:30:49,184 --> 00:30:51,826
We arrived at this decision from conversations

680
00:30:51,866 --> 00:30:54,188
that we had with our player support and community teams

681
00:30:54,528 --> 00:30:55,549
who stressed the importance

682
00:30:55,649 --> 00:30:57,210
of protecting players' experiences.

683
00:30:58,316 --> 00:31:00,457
Additionally, we chose to split pools,

684
00:31:00,718 --> 00:31:02,739
we chose not to split pools by other factors,

685
00:31:02,959 --> 00:31:06,081
like input modality, like having a mouse and keyboard pool

686
00:31:06,141 --> 00:31:08,903
versus a controller pool, because making that distinction

687
00:31:08,943 --> 00:31:10,184
has interesting complications.

688
00:31:10,845 --> 00:31:12,986
So, for example, if you are a PC player

689
00:31:13,126 --> 00:31:14,207
and you plug in your controller,

690
00:31:14,567 --> 00:31:16,849
you enter into the, and you kick off a competitive match.

691
00:31:17,329 --> 00:31:19,010
You hop into your controller pool,

692
00:31:19,370 --> 00:31:21,452
but you unplug your controller right when the match starts

693
00:31:21,552 --> 00:31:22,853
and you start using your mouse and keyboard.

694
00:31:23,513 --> 00:31:25,395
In this case, that distinction of making those pools

695
00:31:25,435 --> 00:31:26,275
doesn't really matter anymore.

696
00:31:27,557 --> 00:31:29,159
So guided by that principle of fairness

697
00:31:29,299 --> 00:31:31,182
and protecting players as the most important,

698
00:31:31,622 --> 00:31:33,384
it made our matchmaking decisions more clear.

699
00:31:34,846 --> 00:31:36,148
Starting with cooperative modes.

700
00:31:36,689 --> 00:31:38,611
In this case, we didn't use separate pools.

701
00:31:39,152 --> 00:31:40,113
Everyone plays together.

702
00:31:41,000 --> 00:31:43,203
There was no need to create separate pools of players

703
00:31:43,243 --> 00:31:45,325
since there was no edge one platform would have

704
00:31:45,445 --> 00:31:45,845
over the other.

705
00:31:46,426 --> 00:31:48,568
And experience for players in modes like strikes

706
00:31:48,728 --> 00:31:49,929
was not drastically altered.

707
00:31:50,710 --> 00:31:52,552
So when you land in a destination

708
00:31:52,672 --> 00:31:53,653
and you hop on your sparrow

709
00:31:53,713 --> 00:31:55,055
and you start roaming around the moon,

710
00:31:55,475 --> 00:31:57,037
you're automatically match made in world

711
00:31:57,077 --> 00:31:58,718
with players from any other platform.

712
00:32:00,295 --> 00:32:02,897
Moving to competitive is where we started using different pools.

713
00:32:03,337 --> 00:32:05,038
We created two different matchmaking pools.

714
00:32:05,699 --> 00:32:08,181
The first was the console pool in which we have Stadia,

715
00:32:08,721 --> 00:32:10,743
Xbox consoles, and PlayStation consoles.

716
00:32:11,683 --> 00:32:13,925
And in this case, while Stadia is technically a PC,

717
00:32:14,165 --> 00:32:15,466
or you're at least streaming from one,

718
00:32:15,906 --> 00:32:17,808
that PC is hosted within a data center,

719
00:32:18,188 --> 00:32:19,969
and it's unlikely to have exploits installed

720
00:32:20,230 --> 00:32:21,490
or tampering done to the client.

721
00:32:22,031 --> 00:32:24,393
So for this case, we included it in the console pool.

722
00:32:25,863 --> 00:32:28,365
Then we have the PC pool, in which we have Steam

723
00:32:28,605 --> 00:32:29,925
and Microsoft PC Store players.

724
00:32:30,886 --> 00:32:33,267
So now, when you launch a competitive activity

725
00:32:33,707 --> 00:32:35,008
where you're playing against other players,

726
00:32:35,528 --> 00:32:37,189
depending on what platform you're playing from,

727
00:32:37,529 --> 00:32:39,510
you'll be match made with other players

728
00:32:39,570 --> 00:32:40,950
in the corresponding pool you belong to.

729
00:32:42,847 --> 00:32:44,588
That's not to say we can't create fire teams

730
00:32:44,688 --> 00:32:46,768
of mixed platform players from different pools.

731
00:32:47,508 --> 00:32:49,789
We account for this by making it so that PC players

732
00:32:49,889 --> 00:32:51,869
cannot cross over and enter the console pool.

733
00:32:52,430 --> 00:32:53,790
Only platforms in the console pool

734
00:32:53,990 --> 00:32:55,730
can cross over and play in the PC pool.

735
00:32:56,751 --> 00:32:58,911
So for example, if you're a PlayStation player

736
00:32:59,251 --> 00:33:01,652
and you fire team up with your friends who are on Steam

737
00:33:02,052 --> 00:33:04,733
and load in a gambit, even though you're on Stadia,

738
00:33:05,233 --> 00:33:07,253
you'll be playing against PC players in the match.

739
00:33:07,873 --> 00:33:09,134
This keeps the boundaries that we set

740
00:33:09,174 --> 00:33:10,454
for PC and console pools.

741
00:33:13,296 --> 00:33:15,597
So bringing it all together for cross-platform gameplay.

742
00:33:16,337 --> 00:33:19,098
First, understanding the areas for concern

743
00:33:19,138 --> 00:33:21,479
for gameplay implications with cross-platform

744
00:33:21,819 --> 00:33:24,220
will help guide your discussions and decisions.

745
00:33:25,280 --> 00:33:26,941
Understanding where your players' concerns

746
00:33:27,021 --> 00:33:29,482
and reservations lie will help identify these areas.

747
00:33:30,022 --> 00:33:32,083
For us, that came from talking to our player support

748
00:33:32,123 --> 00:33:33,943
and community teams, which gave us direction

749
00:33:33,983 --> 00:33:35,524
so we could proactively problem solve.

750
00:33:36,857 --> 00:33:39,298
Next, if you're creating different pools for matchmaking,

751
00:33:39,738 --> 00:33:41,799
being deliberate for what reasons you're doing so

752
00:33:42,060 --> 00:33:43,380
is a useful razor for design.

753
00:33:44,021 --> 00:33:45,842
For us, it was the guiding principles

754
00:33:46,022 --> 00:33:48,423
of protecting player experiences and fairness

755
00:33:48,763 --> 00:33:50,484
that made it much easier to have discussions

756
00:33:50,604 --> 00:33:52,686
about matchmaking pools and how we should split up players.

757
00:33:54,927 --> 00:33:55,587
So the next lesson.

758
00:33:55,967 --> 00:33:58,989
In addition to the implications cross-platform

759
00:33:59,009 --> 00:34:01,671
has on gameplay, there's also new social behaviors

760
00:34:01,711 --> 00:34:03,211
from players that need to be handled.

761
00:34:05,406 --> 00:34:07,969
Each platform possesses their own standards

762
00:34:08,029 --> 00:34:10,472
of acceptable social behavior when online.

763
00:34:11,393 --> 00:34:13,736
When you combine these players from all platforms,

764
00:34:14,036 --> 00:34:15,778
these differences in how players are used

765
00:34:15,818 --> 00:34:17,961
to interacting with each other can give rise

766
00:34:18,001 --> 00:34:20,063
to new forms of toxicity and harassment.

767
00:34:21,325 --> 00:34:22,927
Take, for example, the kinds of usernames

768
00:34:22,947 --> 00:34:24,168
that are allowed on each platform.

769
00:34:25,395 --> 00:34:28,817
Some platforms have strict filters against profanity and derogatory language,

770
00:34:29,297 --> 00:34:31,638
but on others, you can name yourself anything that you want.

771
00:34:32,458 --> 00:34:36,260
So a player coming from a platform with filtered names could suddenly be exposed

772
00:34:36,280 --> 00:34:40,121
to all sorts of profanity, which could range from lewd to derogatory and bullying.

773
00:34:41,488 --> 00:34:46,610
Also, platforms offer social controls like blocking and settings to prevent external contact.

774
00:34:47,070 --> 00:34:49,651
But with cross-play, new vectors for attack open up.

775
00:34:50,531 --> 00:34:53,332
If you platform block an aggressor on your account,

776
00:34:53,752 --> 00:34:58,154
what's to prevent them from hopping over to another platform to continue harassing you?

777
00:34:59,074 --> 00:35:02,275
So part of the work for cross-play became addressing these social behaviors.

778
00:35:03,416 --> 00:35:05,858
There's many forms of online harassment in games out there.

779
00:35:06,359 --> 00:35:08,801
And when you expose players to bigger populations,

780
00:35:09,201 --> 00:35:11,203
as is the case when you bring platforms together,

781
00:35:11,823 --> 00:35:12,924
that's a risk that you take on.

782
00:35:13,625 --> 00:35:15,166
It's especially important to recognize

783
00:35:15,226 --> 00:35:17,468
that these forms of antagonistic behavior

784
00:35:17,668 --> 00:35:19,150
tend to be directed at minorities

785
00:35:19,470 --> 00:35:21,412
and more vulnerable groups of player populations.

786
00:35:23,714 --> 00:35:25,655
So much like how our matchmaking pools decision

787
00:35:25,855 --> 00:35:28,338
was guided by wanting to protect players,

788
00:35:28,958 --> 00:35:30,880
we did the same with social controls and systems.

789
00:35:31,691 --> 00:35:36,115
We dedicated a lot of time and effort to this space to try to prevent abuse and harassment.

790
00:35:38,157 --> 00:35:43,603
To accomplish this, we focused on a couple areas. First, we addressed user-generated content that

791
00:35:43,883 --> 00:35:49,669
was associated with crossplay. In this case, most important was the bungee name. It became clear

792
00:35:49,709 --> 00:35:54,373
from our early discussions that we needed to filter for profanity since some platforms have

793
00:35:54,433 --> 00:35:56,155
various levels of screening for usernames.

794
00:35:57,003 --> 00:36:01,444
If there was, if we didn't, if there was no platform level filtering, there was a risk that

795
00:36:01,564 --> 00:36:06,045
inappropriate names and words would be used in platform names and that in turn would be passed

796
00:36:06,105 --> 00:36:12,147
in and see the bungee name. To prevent this, we adopted a third party solution that is versatile

797
00:36:12,207 --> 00:36:18,828
and context aware. We'll discuss this a little bit later in the talk. Another area that we worked on

798
00:36:18,908 --> 00:36:23,449
was to create adequate blocking systems to manage who you could interact with. We needed our new

799
00:36:23,529 --> 00:36:25,990
bungee social network to account for bad actors.

800
00:36:26,859 --> 00:36:29,740
So in our new bungee, so our bungee block system,

801
00:36:30,160 --> 00:36:31,841
we aim for parity with platform blocks,

802
00:36:32,221 --> 00:36:33,702
but extended it to cross-platform.

803
00:36:34,403 --> 00:36:37,704
We made sure that bungee block expands all platforms.

804
00:36:38,525 --> 00:36:40,706
If you block a player, all accounts

805
00:36:40,726 --> 00:36:42,367
that are associated with them are blocked.

806
00:36:42,947 --> 00:36:44,628
This ensures that if you block a harasser,

807
00:36:44,888 --> 00:36:46,349
they can't hop around to other platforms

808
00:36:46,389 --> 00:36:47,470
and continue that abuse.

809
00:36:48,610 --> 00:36:50,791
By building these systems, we better protect the player

810
00:36:50,971 --> 00:36:53,313
and give them more control over their social interactions.

811
00:36:54,352 --> 00:36:56,253
So here's a quick run-through of the Bungie block system.

812
00:36:57,433 --> 00:36:59,134
Upon inspecting an offending player

813
00:36:59,834 --> 00:37:01,954
that you intend to block, you're given that option.

814
00:37:03,255 --> 00:37:05,475
Doing that, to make it clear what this action does,

815
00:37:05,656 --> 00:37:06,356
a prompt is shown.

816
00:37:06,956 --> 00:37:09,277
Bungie block prevents all forms of communication,

817
00:37:09,417 --> 00:37:11,777
whether it be chat, fireteam invites,

818
00:37:12,298 --> 00:37:13,358
friend requests, and more.

819
00:37:14,198 --> 00:37:16,459
And once that's done, there's a very clear indication

820
00:37:16,779 --> 00:37:18,159
in the player details that they're blocked.

821
00:37:18,679 --> 00:37:20,480
And this spans across all platforms

822
00:37:20,780 --> 00:37:21,480
that are linked to them.

823
00:37:24,055 --> 00:37:28,037
So when it comes to social systems being mixed with cross-play, a lot of considerations need to be made.

824
00:37:28,877 --> 00:37:32,358
Building cross-platform potentially exposes players to new toxic players.

825
00:37:32,958 --> 00:37:37,000
More players and platforms means many new avenues for toxicity and harassment.

826
00:37:38,240 --> 00:37:43,302
Being conscious of existing social interactions existing in your game and new ones coming with cross-platform

827
00:37:43,642 --> 00:37:47,063
will help you figure out areas where new forms of harassment and abuse could come from.

828
00:37:48,406 --> 00:37:51,029
And additionally, when these areas are identified,

829
00:37:51,369 --> 00:37:53,451
prioritizing the work to protect players

830
00:37:53,731 --> 00:37:55,793
is very important for ensuring the best experience

831
00:37:55,813 --> 00:37:56,394
for all players.

832
00:37:56,954 --> 00:37:59,096
For us, it was a requirement to land blocking

833
00:37:59,517 --> 00:38:00,218
to be able to ship.

834
00:38:00,838 --> 00:38:02,800
Only then can you ensure that you're properly

835
00:38:02,860 --> 00:38:03,621
protecting your players.

836
00:38:05,703 --> 00:38:06,304
So next lesson.

837
00:38:07,228 --> 00:38:09,029
Let's move on to some of the more external factors

838
00:38:09,049 --> 00:38:10,410
that we faced when building Crossplay.

839
00:38:11,131 --> 00:38:12,752
So while you can design and build

840
00:38:13,012 --> 00:38:14,653
the perfect cross-platform system,

841
00:38:15,153 --> 00:38:17,355
to be able to release, you need to meet the requirements

842
00:38:17,455 --> 00:38:18,516
of first-party platforms.

843
00:38:20,837 --> 00:38:22,518
Destiny 2 ships on a lot of platforms.

844
00:38:23,059 --> 00:38:24,960
And having previously shipped on all these platforms,

845
00:38:25,260 --> 00:38:27,502
we're pretty familiar with the certification requirements

846
00:38:27,582 --> 00:38:28,522
that are needed to be met.

847
00:38:29,603 --> 00:38:32,165
So going into Crossplay project, we did our due diligence.

848
00:38:33,062 --> 00:38:37,845
Many first parties have whole sections in their certification requirements dedicated to cross

849
00:38:37,885 --> 00:38:43,828
platform play and their requirements to allow for that. However, from our initial designs,

850
00:38:44,309 --> 00:38:47,971
there were differences in what we wanted in the experience versus what first parties would

851
00:38:48,011 --> 00:38:54,214
require. Some examples, some platforms require players on their platforms to be primarily

852
00:38:54,314 --> 00:38:55,935
identified by their platform names.

853
00:38:56,739 --> 00:39:01,663
or in terms of other requirements, some platforms don't allow for the showing of logos or icons

854
00:39:01,723 --> 00:39:06,006
of other platforms while you're playing on that platform. These are just a few of the

855
00:39:06,046 --> 00:39:10,689
cert requirements that needed to be worked through in order to ship. So we had to work

856
00:39:10,809 --> 00:39:15,753
very closely with first parties to align our requirements with, their requirements with

857
00:39:15,853 --> 00:39:20,716
our aspirations. One of the constated constraints at the beginning of the project was that we

858
00:39:20,756 --> 00:39:25,039
respect first party partner relationships and work to obey the spirit of requirements.

859
00:39:25,947 --> 00:39:28,228
It was a very long process that involved a lot of meetings

860
00:39:28,288 --> 00:39:29,569
and engagements with first parties,

861
00:39:29,949 --> 00:39:31,690
but we feel like all parties came out happy.

862
00:39:32,870 --> 00:39:33,991
It's important to call out here

863
00:39:34,151 --> 00:39:36,432
for that first party partner relationships

864
00:39:36,592 --> 00:39:38,433
vary drastically from studio to studio.

865
00:39:39,014 --> 00:39:40,675
At Bungie, we're very fortunate

866
00:39:40,715 --> 00:39:43,216
to have very close relationships with our first parties,

867
00:39:43,596 --> 00:39:45,157
and we were able to meet with them frequently

868
00:39:45,277 --> 00:39:46,398
to reach a mutual understanding.

869
00:39:47,178 --> 00:39:48,599
So what steps did we take to accomplish that?

870
00:39:49,683 --> 00:39:53,967
First, during pre-production, we made sure to go through the requirements for each platform

871
00:39:54,508 --> 00:39:56,670
and flag areas that differed from our designs.

872
00:39:57,330 --> 00:40:00,393
This helped us identify areas that we needed to focus in on and figure out.

873
00:40:01,614 --> 00:40:05,678
Being able to meet with first-party partners helped us understand the spirit of requirements

874
00:40:06,059 --> 00:40:08,401
and how we could make that work with our intended experience.

875
00:40:10,202 --> 00:40:14,927
It was a long approval process, but starting the thinking and engagements early made sure

876
00:40:14,947 --> 00:40:15,928
we were set up for success.

877
00:40:18,265 --> 00:40:20,126
So, some key things for you to take away

878
00:40:20,166 --> 00:40:20,946
from our experience.

879
00:40:21,387 --> 00:40:23,788
You need to be very aware of first party requirements

880
00:40:24,148 --> 00:40:25,208
with cross-platform play

881
00:40:25,668 --> 00:40:27,269
from the very beginning of your production.

882
00:40:27,809 --> 00:40:29,590
And account for them in your designs.

883
00:40:29,930 --> 00:40:32,071
It's very vital to figuring out a path forward to ship.

884
00:40:33,291 --> 00:40:35,152
Also, executing towards your vision

885
00:40:35,432 --> 00:40:37,393
while trying your best to respect their requirements

886
00:40:37,933 --> 00:40:39,234
allows you to deliver the experiences

887
00:40:39,274 --> 00:40:40,094
that work for everyone.

888
00:40:41,134 --> 00:40:42,995
We wanted to ship something great with cross-play.

889
00:40:43,475 --> 00:40:44,656
And on the platform partner side,

890
00:40:44,896 --> 00:40:46,416
they wanted to uphold their brand integrity.

891
00:40:47,945 --> 00:40:49,706
There was room between the needs of both sides

892
00:40:49,746 --> 00:40:51,507
to be successful, and from that,

893
00:40:52,108 --> 00:40:53,248
cross-play was made a reality.

894
00:40:55,790 --> 00:40:58,171
So in terms of other external factors to consider

895
00:40:58,211 --> 00:41:00,532
when building cross-play is with third-party solutions

896
00:41:00,852 --> 00:41:02,753
and figuring out how and when to use them

897
00:41:02,853 --> 00:41:03,694
to aid your development.

898
00:41:05,175 --> 00:41:08,036
Like mentioned before, standing up cross-platform play

899
00:41:08,176 --> 00:41:10,898
means building a lot of systems that were previously reliant

900
00:41:11,178 --> 00:41:12,879
on platform-level APIs and services.

901
00:41:13,862 --> 00:41:18,565
When building these features, a couple specific use cases emerged that complicated these systems,

902
00:41:19,005 --> 00:41:24,087
but were still necessary. For example, needing to ensure appropriate names were used for bungee

903
00:41:24,107 --> 00:41:30,410
names, or using a voice library that was portable across all platforms. Handling these cases,

904
00:41:30,730 --> 00:41:33,532
like building a new language filter, would have added scope to our project.

905
00:41:33,992 --> 00:41:36,553
And being on such a tight timeline, tough calls had to be made.

906
00:41:38,439 --> 00:41:40,501
Certain functionalities required a lot of effort

907
00:41:40,681 --> 00:41:41,922
and would not fit within our timeline.

908
00:41:42,543 --> 00:41:44,865
For example, building a good language filter

909
00:41:45,105 --> 00:41:47,308
for bungee names and user-generated content

910
00:41:47,648 --> 00:41:48,869
would be a massive undertaking.

911
00:41:49,510 --> 00:41:51,352
Destiny 2 supports 12 languages.

912
00:41:51,932 --> 00:41:53,854
Screening and filtering in all these languages

913
00:41:53,954 --> 00:41:56,017
requires a lot of expertise and time.

914
00:41:57,082 --> 00:42:00,363
So for the specific areas of voice chat, text chat,

915
00:42:00,803 --> 00:42:02,723
and text content filtering and moderation,

916
00:42:03,264 --> 00:42:04,884
we conducted make or buy analyses

917
00:42:05,324 --> 00:42:06,984
on what we needed to make ourselves

918
00:42:07,464 --> 00:42:08,945
and what alternate solutions existed

919
00:42:09,005 --> 00:42:10,325
that were worth it for us to buy.

920
00:42:11,225 --> 00:42:13,586
There's a lot of existing third party options

921
00:42:13,646 --> 00:42:14,906
that are immersed in these spaces

922
00:42:15,306 --> 00:42:16,506
and they build products that are better

923
00:42:16,526 --> 00:42:17,847
than anything that we could manage.

924
00:42:18,687 --> 00:42:20,407
So in the case for these options,

925
00:42:21,367 --> 00:42:22,988
trying to investigate a third party option

926
00:42:23,088 --> 00:42:24,428
offered a chance to save time

927
00:42:24,708 --> 00:42:26,428
and enable us to ship a better experience.

928
00:42:27,792 --> 00:42:30,255
So let's first start looking at text and voice chat.

929
00:42:31,096 --> 00:42:32,638
There's a lot of different options in this space,

930
00:42:32,778 --> 00:42:35,121
like PlayFab, BuyBox, Epic Games.

931
00:42:36,042 --> 00:42:37,284
There's a lot of great players out there.

932
00:42:37,704 --> 00:42:40,207
So some considerations that we made in our decision

933
00:42:40,388 --> 00:42:42,831
was first, whether a third-party solution

934
00:42:43,031 --> 00:42:44,413
had the libraries that supported

935
00:42:44,553 --> 00:42:45,775
all the platforms that we ship on.

936
00:42:46,863 --> 00:42:51,925
Also, another consideration was that the cost of relaying the data ourselves compared to

937
00:42:51,985 --> 00:42:56,887
using third party was technically cheaper for handling that volume of data. But what

938
00:42:57,147 --> 00:43:02,289
came, what that, the cost also added up in terms of long term upkeep and maintenance. And

939
00:43:02,329 --> 00:43:06,571
lastly, how easy was it to be able to integrate this third party solution? What kind of

940
00:43:06,611 --> 00:43:09,472
documentation and support was available for us to be able to integrate?

941
00:43:11,720 --> 00:43:13,681
On the text filtering side, there's a lot of different

942
00:43:13,761 --> 00:43:16,141
options that offer things, that different technologies

943
00:43:16,161 --> 00:43:17,782
like regexes or flat lists.

944
00:43:18,262 --> 00:43:19,922
Some vendors even offer machine learning

945
00:43:20,302 --> 00:43:21,342
that are contextually aware.

946
00:43:21,702 --> 00:43:23,983
Being able to distinguish the difference between

947
00:43:24,023 --> 00:43:27,684
someone saying you are an effing idiot as bullying

948
00:43:27,724 --> 00:43:29,724
versus someone saying this game is effing awesome

949
00:43:30,184 --> 00:43:31,124
as positive sentiment.

950
00:43:32,005 --> 00:43:34,005
Building that ourselves would have been very difficult

951
00:43:34,145 --> 00:43:36,286
to train up that model and would require a lot of

952
00:43:36,346 --> 00:43:37,966
language expertise in terms of staffing.

953
00:43:39,075 --> 00:43:43,397
Other things to include in this space are also making sure that any filtering solution

954
00:43:43,717 --> 00:43:48,219
supported all the languages that we needed, and also figuring out what moderation tools

955
00:43:48,339 --> 00:43:52,301
were available with each of these solutions for repeated offenders, and how it compares

956
00:43:52,321 --> 00:43:55,943
to the tools that we currently have, and how we could use them to better support our player

957
00:43:55,963 --> 00:43:56,483
support teams.

958
00:43:58,264 --> 00:44:01,405
All these considerations were made to combat toxic social behavior.

959
00:44:02,609 --> 00:44:04,732
Being highly aware of the needs of your game

960
00:44:05,053 --> 00:44:07,397
and making sure a solution fully addresses those

961
00:44:07,998 --> 00:44:09,660
is key to making these decisions.

962
00:44:10,421 --> 00:44:12,404
If something fits right, it's a great candidate

963
00:44:12,505 --> 00:44:15,589
to use to save time from having to build from scratch.

964
00:44:17,597 --> 00:44:18,578
So what did we end up doing?

965
00:44:19,538 --> 00:44:21,559
For us, we ended up integrating

966
00:44:21,679 --> 00:44:23,400
a third-party voice chat solution

967
00:44:23,860 --> 00:44:25,221
to save on the maintenance overhead

968
00:44:25,361 --> 00:44:26,321
if we had built it ourselves.

969
00:44:26,822 --> 00:44:28,903
We found an external solution to handle voice.

970
00:44:29,683 --> 00:44:31,364
This allowed us to direct our attention

971
00:44:31,464 --> 00:44:33,585
to landing other parts of the cross-play experience.

972
00:44:34,825 --> 00:44:36,406
For text filtering and moderation,

973
00:44:36,766 --> 00:44:38,387
the massive amount of work it would have taken

974
00:44:38,567 --> 00:44:41,489
to build and support the system for so many languages

975
00:44:42,069 --> 00:44:43,650
also led us to integrate a third party.

976
00:44:44,715 --> 00:44:46,056
It's important to call out in this case

977
00:44:46,456 --> 00:44:48,397
that in our experience, it did take

978
00:44:48,837 --> 00:44:50,058
a significant amount of time

979
00:44:50,278 --> 00:44:51,558
to integrate both these solutions.

980
00:44:52,359 --> 00:44:55,040
Choosing to buy a solution that requires engineering work

981
00:44:55,640 --> 00:44:57,181
and to get it working within your game,

982
00:44:57,721 --> 00:44:59,242
and the benefits are not instant.

983
00:45:00,482 --> 00:45:02,663
Additionally, when you go with a third party,

984
00:45:03,104 --> 00:45:05,084
you're effectively tying your game to another product.

985
00:45:05,485 --> 00:45:07,005
The releases and updates to that

986
00:45:07,606 --> 00:45:09,086
are dependent on someone else,

987
00:45:09,266 --> 00:45:11,047
and you don't necessarily have the most control over that.

988
00:45:12,441 --> 00:45:15,244
And in terms of the last MakerBuy analysis, for text chat,

989
00:45:15,724 --> 00:45:17,186
while there were a lot of solutions out there

990
00:45:17,206 --> 00:45:18,587
that accomplished what we needed,

991
00:45:19,168 --> 00:45:20,769
we felt that being able to control

992
00:45:20,849 --> 00:45:22,191
our own text chat platform

993
00:45:22,511 --> 00:45:24,212
from which we could build deeper integrations

994
00:45:24,873 --> 00:45:26,295
offered a lot of potential.

995
00:45:26,535 --> 00:45:28,997
So for that case, we ended up building our own text chat.

996
00:45:30,779 --> 00:45:33,582
What we ended up building ourselves versus buying

997
00:45:33,982 --> 00:45:35,664
was unique to our game and needs.

998
00:45:36,772 --> 00:45:38,052
When faced with decisions like this,

999
00:45:38,192 --> 00:45:40,953
it's important to consider what features are fundamental

1000
00:45:40,993 --> 00:45:42,173
to the experience that you're building.

1001
00:45:43,033 --> 00:45:45,074
Identifying what was within scope to land

1002
00:45:45,234 --> 00:45:46,954
made it clear where we should be exploring

1003
00:45:46,974 --> 00:45:47,954
third-party partnerships.

1004
00:45:49,295 --> 00:45:50,515
Whether your team actually needs

1005
00:45:50,535 --> 00:45:51,915
to be building certain features.

1006
00:45:52,976 --> 00:45:54,856
With so many pre-existing solutions out there,

1007
00:45:55,376 --> 00:45:57,017
knowing what needs to be built in-house

1008
00:45:57,297 --> 00:45:58,837
is important for determining scope.

1009
00:45:59,657 --> 00:46:01,518
Figuring out if you're building a certain system

1010
00:46:01,678 --> 00:46:03,919
for things like maintaining a competitive advantage

1011
00:46:04,299 --> 00:46:05,659
will help adjust your priorities.

1012
00:46:07,079 --> 00:46:10,061
And lastly, one important note is that integrating

1013
00:46:10,201 --> 00:46:12,662
a third-party solution is not a silver bullet.

1014
00:46:13,462 --> 00:46:15,903
Adding any kind of new tech always takes time

1015
00:46:16,063 --> 00:46:17,144
and can't be done instantly.

1016
00:46:17,864 --> 00:46:18,765
That needs to be considered

1017
00:46:19,025 --> 00:46:20,305
with your planning and timelines.

1018
00:46:21,806 --> 00:46:24,347
In our case, when it came to integrating third parties,

1019
00:46:24,628 --> 00:46:25,988
we did end up being overscoped,

1020
00:46:26,368 --> 00:46:27,829
and landing these integrations

1021
00:46:28,129 --> 00:46:29,270
wouldn't fit within our timeline.

1022
00:46:29,630 --> 00:46:31,771
So we ended up pushing these integrations into,

1023
00:46:32,411 --> 00:46:33,632
slipping them into a later release.

1024
00:46:34,622 --> 00:46:36,623
But from a longer-term outlook, one of the things

1025
00:46:36,663 --> 00:46:38,783
that we did save on was the maintenance and upkeep

1026
00:46:39,044 --> 00:46:40,444
if we had built these systems ourselves.

1027
00:46:41,904 --> 00:46:44,025
It's the classic iron triangle problem of production,

1028
00:46:44,545 --> 00:46:46,186
scope versus time versus cost.

1029
00:46:46,946 --> 00:46:48,286
Looking into a third-party option

1030
00:46:48,366 --> 00:46:49,947
may help you find solutions when faced

1031
00:46:49,967 --> 00:46:50,847
with trying to find a balance.

1032
00:46:53,028 --> 00:46:54,848
And now, the last lesson that we learned

1033
00:46:54,868 --> 00:46:55,688
from building Crossplay.

1034
00:46:56,269 --> 00:46:57,909
And in this case, it comes from how

1035
00:46:57,929 --> 00:47:00,770
we went about releasing it, taking advantage of Destiny 2

1036
00:47:00,930 --> 00:47:01,750
as a live service game.

1037
00:47:03,543 --> 00:47:05,324
Crossplay was built for an existing game,

1038
00:47:05,624 --> 00:47:08,125
so this release needed to not disrupt our existing players.

1039
00:47:09,445 --> 00:47:10,666
But there's a lot of moving parts

1040
00:47:10,726 --> 00:47:11,906
that were coming with this project,

1041
00:47:12,007 --> 00:47:13,727
and it was a massive thing to bring to this game.

1042
00:47:14,388 --> 00:47:16,368
We had created the most amount of new services

1043
00:47:16,669 --> 00:47:17,969
since the original Destiny 2,

1044
00:47:18,469 --> 00:47:19,750
and we had broken a lot of bones,

1045
00:47:19,810 --> 00:47:20,770
like the things with networking,

1046
00:47:21,070 --> 00:47:23,411
to make it possible for platforms to play with each other.

1047
00:47:24,670 --> 00:47:26,211
This was all under a tight timeline

1048
00:47:26,271 --> 00:47:27,772
to deliver such a huge experience.

1049
00:47:28,453 --> 00:47:30,894
There were big concerns about how it would all come together

1050
00:47:31,194 --> 00:47:32,535
if we were using a single release,

1051
00:47:33,136 --> 00:47:34,617
and that posed a huge risk.

1052
00:47:35,457 --> 00:47:37,058
If we chose to release in a single season,

1053
00:47:37,258 --> 00:47:38,659
we'd only have one try to get it right.

1054
00:47:39,600 --> 00:47:40,120
So what did we do?

1055
00:47:41,381 --> 00:47:43,402
We ended up spreading out the release of Crossplay

1056
00:47:43,462 --> 00:47:45,884
and its many systems over multiple releases and seasons,

1057
00:47:46,484 --> 00:47:49,066
incrementally adding more functionality as we went along.

1058
00:47:50,357 --> 00:47:51,898
Since there were many big changes coming in,

1059
00:47:52,198 --> 00:47:54,119
we wanted to give more time to get them in

1060
00:47:54,459 --> 00:47:55,739
and let them bake and stabilize.

1061
00:47:56,560 --> 00:47:58,140
After which, they could be tested at scale

1062
00:47:58,240 --> 00:47:59,241
with a live population.

1063
00:48:01,041 --> 00:48:03,082
We embraced this method of incrementally building

1064
00:48:03,162 --> 00:48:04,483
and releasing cross-play.

1065
00:48:05,183 --> 00:48:07,644
We scaled from a small 10-person internal playtest

1066
00:48:07,984 --> 00:48:09,345
for making sure things weren't crashing

1067
00:48:09,665 --> 00:48:12,346
to later a studio-wide playtest of about 500 people.

1068
00:48:13,086 --> 00:48:14,727
Doing this at an increased scale allowed us

1069
00:48:14,747 --> 00:48:16,027
to test all our tech changes

1070
00:48:16,368 --> 00:48:18,508
across all the various platforms and all content.

1071
00:48:19,663 --> 00:48:21,284
When it came to releasing in the live game,

1072
00:48:21,724 --> 00:48:24,126
we used earlier seasons to introduce big tech pieces.

1073
00:48:24,666 --> 00:48:27,108
We front-loaded the work to get big bone-breaking changes

1074
00:48:27,228 --> 00:48:29,069
like the new networking changes in early.

1075
00:48:30,010 --> 00:48:32,132
This allowed us to get these features checked into builds

1076
00:48:32,372 --> 00:48:33,953
very early in the development cycle,

1077
00:48:34,253 --> 00:48:36,815
so we had plenty of time to test and stabilize.

1078
00:48:38,076 --> 00:48:39,997
Having these big changes out of the way early

1079
00:48:40,277 --> 00:48:42,819
and stabilized helped us give us more confidence

1080
00:48:42,839 --> 00:48:44,620
to tackle the other systems for cross-play.

1081
00:48:47,105 --> 00:48:49,906
We also used an earlier season to introduce new UI

1082
00:48:50,186 --> 00:48:52,567
and some of the systems being built for cross-play

1083
00:48:52,707 --> 00:48:54,388
to start getting feedback and live testing.

1084
00:48:55,368 --> 00:48:56,669
In the season ahead of our launch,

1085
00:48:56,889 --> 00:48:59,370
we created an internal alpha for Bungie employees

1086
00:48:59,430 --> 00:49:00,490
to start using cross-play.

1087
00:49:01,431 --> 00:49:02,611
In the live retail game,

1088
00:49:03,092 --> 00:49:05,152
employees were given access to additional features

1089
00:49:05,192 --> 00:49:08,034
like the new roster UI, the Bungie friends list, and more.

1090
00:49:08,854 --> 00:49:12,175
Employees were actually able to cross-play with the public

1091
00:49:12,636 --> 00:49:14,256
for months ahead of the actual release.

1092
00:49:15,539 --> 00:49:17,761
This helped us get out some initial experience bugs

1093
00:49:18,221 --> 00:49:20,583
and fix them before we had players trying out crossplay.

1094
00:49:21,263 --> 00:49:22,804
And it also gave the team a better sense

1095
00:49:22,824 --> 00:49:23,845
of how crossplay would feel.

1096
00:49:25,306 --> 00:49:27,808
Also, to really stress test our new networking

1097
00:49:27,888 --> 00:49:31,571
and matchmaking tech, we conducted a limited live beta.

1098
00:49:32,091 --> 00:49:33,392
We enabled it in a strike playlist

1099
00:49:33,592 --> 00:49:36,214
and all players in the game were able to participate this

1100
00:49:36,354 --> 00:49:37,255
and try out crossplay.

1101
00:49:38,196 --> 00:49:40,317
The high amount of participation in this beta

1102
00:49:40,717 --> 00:49:42,959
helped us test out and exercise these new code paths

1103
00:49:42,999 --> 00:49:43,660
that we were creating.

1104
00:49:44,747 --> 00:49:46,789
Between the internal alpha and public beta,

1105
00:49:47,170 --> 00:49:48,672
we were able to gain more confidence

1106
00:49:48,732 --> 00:49:49,533
in what we were building.

1107
00:49:50,294 --> 00:49:51,796
Committing to earlier releases

1108
00:49:51,936 --> 00:49:53,499
and landing the components necessary

1109
00:49:53,639 --> 00:49:54,620
affirmed our timelines

1110
00:49:55,001 --> 00:49:57,324
and helped us finish building Crossplay strong.

1111
00:49:58,505 --> 00:49:59,887
Also, as an added plus,

1112
00:50:00,208 --> 00:50:02,411
this helped build some buzz and excitement around Crossplay.

1113
00:50:04,291 --> 00:50:06,252
And while we saw the internal alpha and public beta

1114
00:50:06,792 --> 00:50:08,774
as net positives, it wasn't without some bloopers.

1115
00:50:09,354 --> 00:50:11,435
It turns out having parts of cross-play available

1116
00:50:11,515 --> 00:50:13,456
in your game earlier than the release

1117
00:50:13,756 --> 00:50:15,377
made for some funny occasions where some players

1118
00:50:15,417 --> 00:50:17,398
stumbled into cross-play earlier than intended.

1119
00:50:18,279 --> 00:50:20,580
And so, but like, the thing to realize is that

1120
00:50:20,600 --> 00:50:22,862
when you're adding such large features to your live game,

1121
00:50:22,882 --> 00:50:25,263
it's sometimes unexpected things happen.

1122
00:50:26,123 --> 00:50:27,844
Overall, we saw these as funny occurrences

1123
00:50:27,864 --> 00:50:30,446
that exposed some bugs, and these were just accidents

1124
00:50:30,466 --> 00:50:32,547
that continued to get cross-play on the minds

1125
00:50:32,627 --> 00:50:33,768
of players and build excitement.

1126
00:50:36,012 --> 00:50:38,393
Using the live game to ship parts across play early

1127
00:50:38,593 --> 00:50:40,053
really helped us ensure a smooth launch.

1128
00:50:40,994 --> 00:50:42,975
By front-loading the big bone-breaking changes

1129
00:50:43,135 --> 00:50:43,915
during your development,

1130
00:50:44,255 --> 00:50:47,057
you can introduce high-risk changes to your game earlier

1131
00:50:47,457 --> 00:50:48,597
and give them time to stabilize.

1132
00:50:50,078 --> 00:50:52,819
Having a scaled-down version available in earlier releases

1133
00:50:52,899 --> 00:50:54,980
helps you build confidence in what you are building

1134
00:50:55,400 --> 00:50:57,441
and offers an avenue for early feedback

1135
00:50:57,722 --> 00:50:58,922
and improve the full release version.

1136
00:51:00,417 --> 00:51:06,562
And lastly, giving internal employees early access to cross-play with real players is a useful mechanism.

1137
00:51:07,343 --> 00:51:11,646
It enables you to test out these new systems in the live game that might not be publicly ready,

1138
00:51:12,206 --> 00:51:15,209
without the risk of exposing your players to a lower quality experience.

1139
00:51:17,430 --> 00:51:20,653
And with that, those were the seven lessons that we learned from building cross-play.

1140
00:51:21,133 --> 00:51:23,895
That was a lot that we covered because it was a very long journey for the team.

1141
00:51:24,723 --> 00:51:27,405
So if you're looking to build your own cross-platform experience for your game,

1142
00:51:27,765 --> 00:51:30,926
here's the key takeaways that I think are most valuable to you and your team.

1143
00:51:32,327 --> 00:51:36,429
First, making cross-play can mean building many new systems and services,

1144
00:51:36,889 --> 00:51:40,131
especially if you're relying on platform APIs

1145
00:51:40,631 --> 00:51:43,512
or using your own engine that might not support cross-platform.

1146
00:51:44,733 --> 00:51:47,894
Next, while many of these functionalities were hand-rolled internally,

1147
00:51:48,315 --> 00:51:50,716
finding opportunities to use third-party solutions

1148
00:51:51,096 --> 00:51:53,657
helps you scope down while executing on a tight timeline.

1149
00:51:55,655 --> 00:51:58,138
Next, first party requirements affect the design

1150
00:51:58,178 --> 00:52:00,260
of the experience, and from the very start of your planning,

1151
00:52:00,521 --> 00:52:01,822
you should be taking these into account.

1152
00:52:04,905 --> 00:52:10,571
Cross-platform play in a game with established behaviors

1153
00:52:10,972 --> 00:52:13,595
has very deep implications on how players interact

1154
00:52:13,735 --> 00:52:15,677
both gameplay-wise and socially.

1155
00:52:16,810 --> 00:52:18,972
And sometimes, that means exposing players

1156
00:52:19,012 --> 00:52:21,193
to potentially new toxic players and behaviors.

1157
00:52:21,874 --> 00:52:22,934
That is a risk that you take on,

1158
00:52:23,355 --> 00:52:24,816
and you need to ensure that you are

1159
00:52:24,896 --> 00:52:26,116
properly protecting your players.

1160
00:52:29,038 --> 00:52:31,580
It's good to front load big bone breaking changes

1161
00:52:31,660 --> 00:52:34,162
to deep engine code, so that you have plenty of time

1162
00:52:34,242 --> 00:52:35,923
to bake and stabilize risky features.

1163
00:52:37,907 --> 00:52:40,749
And if possible, using multiple release vehicles

1164
00:52:40,789 --> 00:52:42,770
to gradually add more functionality to Crossplay

1165
00:52:42,990 --> 00:52:45,872
allows you to scale out testing with a live population

1166
00:52:46,312 --> 00:52:48,213
and in general, helps build confidence

1167
00:52:48,273 --> 00:52:49,234
in your project coming together.

1168
00:52:50,594 --> 00:52:51,935
And that's what we learned from building crossplay.

1169
00:52:52,515 --> 00:52:53,255
Thank you for listening.

1170
00:52:53,755 --> 00:52:55,396
Hopefully you were able to take some of these lessons

1171
00:52:55,416 --> 00:52:56,296
and apply them to your game.

1172
00:52:56,837 --> 00:53:00,318
As a note of thanks, this talk was only made possible

1173
00:53:00,378 --> 00:53:01,919
because so many people worked so hard

1174
00:53:01,939 --> 00:53:02,859
to make crossplay happen.

1175
00:53:03,299 --> 00:53:05,000
Special thanks goes out to all the bungos out there

1176
00:53:05,320 --> 00:53:06,101
who worked on crossplay

1177
00:53:06,281 --> 00:53:07,881
and made such an amazing experience for players.

1178
00:53:08,542 --> 00:53:10,562
Also I'd like to thank Veronica Pesturianu

1179
00:53:10,822 --> 00:53:11,883
for being an amazing advisor

1180
00:53:11,983 --> 00:53:13,243
for guiding me through the talk process.

1181
00:53:13,623 --> 00:53:14,703
And also thanks to Caitlin Yu

1182
00:53:14,983 --> 00:53:16,144
who helped shape a lot of the format

1183
00:53:16,184 --> 00:53:17,164
and content of this talk.

1184
00:53:17,644 --> 00:53:18,905
And lastly, thank you to the CAs

1185
00:53:18,985 --> 00:53:19,905
and event support staff

1186
00:53:20,285 --> 00:53:21,605
for making sure GDC runs smoothly.

1187
00:53:22,486 --> 00:53:23,306
There's a couple more talks

1188
00:53:23,346 --> 00:53:24,526
given by some other Bungie folks

1189
00:53:24,606 --> 00:53:25,566
if you're interested in attending.

1190
00:53:25,807 --> 00:53:26,547
They're happening tomorrow.

1191
00:53:27,727 --> 00:53:28,467
And also we're hiring.

1192
00:53:28,887 --> 00:53:30,288
If you're interested in working at Bungie,

1193
00:53:30,728 --> 00:53:32,328
we have many openings across disciplines.

1194
00:53:32,568 --> 00:53:33,469
Check out our careers page

1195
00:53:33,569 --> 00:53:35,169
and follow us on Twitter at Bungie Careers.

1196
00:53:35,969 --> 00:53:36,690
There's a QR code.

1197
00:53:37,810 --> 00:53:40,651
And thank you again, I've been John Chu, and now for some Q&A.

1198
00:53:49,013 --> 00:53:49,893
Hi John. Hi.

1199
00:53:49,913 --> 00:53:54,615
Uh, first of all, uh, great, great panel. Absolutely loved it. Thank you.

1200
00:53:55,075 --> 00:53:55,655
And, uh, wanted to

1201
00:53:56,115 --> 00:53:59,196
congratulate you all. Uh, my wife and I are returning players.

1202
00:53:59,776 --> 00:54:01,857
The, uh, launch of Crossplay, I mean,

1203
00:54:02,257 --> 00:54:03,437
incredibly successful.

1204
00:54:04,397 --> 00:54:04,997
It's wonderful.

1205
00:54:05,578 --> 00:54:06,138
Glad to hear that.

1206
00:54:06,578 --> 00:54:11,939
Yeah, totally. I had a question for you. So, and also thank you, our logo Samurai was up there.

1207
00:54:12,179 --> 00:54:19,161
Definitely appreciate that. So I can understand that neurosymbolic AI to intervene and redirect

1208
00:54:19,301 --> 00:54:25,083
users and situations of toxicity was likely out of scope in this situation. And you all were moving

1209
00:54:25,123 --> 00:54:29,124
very quickly on this project. Yeah. What did you all end up going with in terms of a third

1210
00:54:29,164 --> 00:54:30,785
party solution to combat toxicity?

1211
00:54:31,303 --> 00:54:38,568
Um, so what we ended up going with was unique to our game in our case and um, and so it's

1212
00:54:38,648 --> 00:54:42,591
unique because based on business discussions and also some of the design considerations. In

1213
00:54:42,611 --> 00:54:46,213
terms of filtering, as I mentioned before we went with also a machine learning one but was a

1214
00:54:46,233 --> 00:54:50,096
little bit more directly applicable to the user generated content. We can talk a little bit

1215
00:54:50,136 --> 00:54:55,259
later in terms of like the actual vendor that we used and because like part of it was like, I

1216
00:54:55,359 --> 00:54:58,421
wasn't part of those business discussions but also we can, we can just talk about that.

1217
00:54:58,441 --> 00:55:00,302
Yeah, no, all good. Big fan, Ike. Thank you.

1218
00:55:00,463 --> 00:55:00,703
Thank you.

1219
00:55:03,835 --> 00:55:04,695
Hi, sorry.

1220
00:55:05,556 --> 00:55:06,497
Yeah, one second here.

1221
00:55:07,138 --> 00:55:09,060
Question from online chat.

1222
00:55:09,761 --> 00:55:11,142
Was there any automated testing

1223
00:55:11,203 --> 00:55:12,704
to validate cross-play features?

1224
00:55:12,884 --> 00:55:14,226
If so, what did that look like?

1225
00:55:14,922 --> 00:55:20,488
Um, so, yeah, we, so part of it was, there was some automated testing in terms of some of the

1226
00:55:20,528 --> 00:55:24,553
tools that we were using to help create like, connection, oh, so actually the question was,

1227
00:55:24,593 --> 00:55:28,077
was there any automated testing? Sorry, I forgot to repeat the question. Um, so the

1228
00:55:28,137 --> 00:55:32,463
answer is, there was some automated testing that we did in this case, um, there was some

1229
00:55:32,503 --> 00:55:33,604
tools that were created to help.

1230
00:55:34,325 --> 00:55:39,388
create cross platform, cross platform friends and see your friends list and also make sure

1231
00:55:39,408 --> 00:55:43,911
you test, test that out. Also things like with cross platform clans and also automating

1232
00:55:43,952 --> 00:55:47,434
the changing of bungee names. A lot of that was automated to help test out a lot of those

1233
00:55:47,454 --> 00:55:50,076
systems. So that's most of what we did for automation there.

1234
00:55:52,878 --> 00:56:08,989
Hi there. Hi John. Thanks for the talk. It was really awesome. I was curious because I know it's a problem that I kind of ran into previously, but with the naming convention in regards to how you had to make the Bungie username so that people were identified across platforms.

1235
00:56:09,810 --> 00:56:16,515
Did you ever run into complications when someone decided to change their username, especially the initial one that was kind of taken into the Bungie name?

1236
00:56:16,776 --> 00:56:20,957
Yeah, that's a great question. So the question was, did we run into any complications of

1237
00:56:21,037 --> 00:56:25,918
changing names? And the answer is, the short answer is yes. There, there was a lot of

1238
00:56:25,978 --> 00:56:30,519
interesting complications with that. And that's where it, where it, it became especially

1239
00:56:30,559 --> 00:56:34,980
important to use that third party content filtering solution to be able to ensure that we

1240
00:56:35,000 --> 00:56:39,481
were properly filtering for the right names. And in the case that we ended up having to

1241
00:56:39,861 --> 00:56:43,782
release the feature for bungee name changes a little bit later from our release, so we

1242
00:56:43,822 --> 00:56:46,523
had a couple months in between and we actually just recently enabled that.

1243
00:56:47,223 --> 00:56:52,287
um, because we wanted to get the system right so that when players were changing their names, we

1244
00:56:52,327 --> 00:56:57,710
were allowing for the right way to do that. So like, we were properly filtering for them that we

1245
00:56:57,851 --> 00:57:02,954
had the right mechanisms to do that, to be able to track whether or not they, they could and how, how

1246
00:57:02,974 --> 00:57:06,697
we went about doing that. So there were complications and yes, we relied on that.

1247
00:57:09,760 --> 00:57:18,828
Hi John, great talk. I had a question about your two player pools you built for your PC and your console players.

1248
00:57:18,968 --> 00:57:27,236
Did you ever consider making those a little bit more dynamic for players that you identified as trustworthy or that offset bad actors?

1249
00:57:27,722 --> 00:57:34,024
Yeah, so the question is, did we make any considerations about making the pools a little bit more dynamic to account for bad actors?

1250
00:57:35,105 --> 00:57:35,545
Or good actors.

1251
00:57:35,905 --> 00:57:37,466
Or good actors, yeah.

1252
00:57:37,926 --> 00:57:47,610
So, the way we built the matchmaking pool system was actually, we built it in a way that was robust enough to allow for arbitrary pool creation, so we can make those changes in the future.

1253
00:57:48,051 --> 00:57:49,571
And while we limited it to...

1254
00:57:50,152 --> 00:57:52,712
but based on platform that the, the player was on.

1255
00:57:53,053 --> 00:57:55,793
We allow it so that any activity going forward,

1256
00:57:55,854 --> 00:57:57,454
you can customize how those pools were made.

1257
00:57:57,954 --> 00:58:00,495
So in those cases, like, if in the future

1258
00:58:00,555 --> 00:58:03,196
you have some activity in which it might give

1259
00:58:03,676 --> 00:58:06,397
just PlayStation players an advantage somehow,

1260
00:58:06,537 --> 00:58:08,518
or Xbox players an advantage in some way,

1261
00:58:08,898 --> 00:58:10,698
we would be able to control for that

1262
00:58:10,758 --> 00:58:12,119
in terms of how we split up the pools

1263
00:58:12,159 --> 00:58:13,199
for that specific activity.

1264
00:58:13,559 --> 00:58:15,140
We're taking it at, so we wanted to,

1265
00:58:15,420 --> 00:58:16,560
we built it in a way to allow,

1266
00:58:16,580 --> 00:58:17,721
keep the door open for the future

1267
00:58:17,761 --> 00:58:18,681
to be able to do that as well.

1268
00:58:19,281 --> 00:58:19,862
Cool. Thank you.

1269
00:58:21,415 --> 00:58:23,636
Cool, so thank you very much for the talk, John.

1270
00:58:24,416 --> 00:58:26,057
Quick question, was it worth it?

1271
00:58:26,717 --> 00:58:28,538
Because it took about a year of effort,

1272
00:58:28,618 --> 00:58:30,059
50 engineers and assorted people,

1273
00:58:30,399 --> 00:58:31,600
huge amount of third party effort.

1274
00:58:32,080 --> 00:58:34,701
Yeah, I'd have to say I think it's worth it,

1275
00:58:34,881 --> 00:58:37,143
especially, oh sorry, the question was

1276
00:58:37,203 --> 00:58:38,703
whether building this was worth it.

1277
00:58:38,823 --> 00:58:41,565
So I would say yes, I think this was something

1278
00:58:41,605 --> 00:58:43,926
that our players have been wanting for a very long time

1279
00:58:44,066 --> 00:58:45,627
and we see a lot of positive sentiment to it.

1280
00:58:46,087 --> 00:58:48,308
I think there's, from a business perspective,

1281
00:58:48,328 --> 00:58:49,809
you're not seeing direct.

1282
00:58:50,429 --> 00:58:55,030
compensation in terms of how much this adds to that, but like this is just, this just adds to

1283
00:58:55,071 --> 00:59:00,192
the experience because it, like I just was recently talking to someone who said it felt like the game

1284
00:59:00,232 --> 00:59:04,893
had tripled in population once this was enabled and that is something really magical to be able

1285
00:59:04,914 --> 00:59:10,035
to do with this in this experience and especially within the industry you're seeing a lot of like

1286
00:59:10,595 --> 00:59:15,117
games and like a lot of platforms being able to have like those lines blurring, I think it's very

1287
00:59:15,137 --> 00:59:18,838
important to be able to embrace that and allow for anyone to be able to play with each other.

1288
00:59:20,150 --> 00:59:20,831
Cool, thank you.

1289
00:59:23,295 --> 00:59:24,777
Firstly, firstly, great talk.

1290
00:59:25,158 --> 00:59:27,602
Secondly, can you scroll back to the previous slide just.

1291
00:59:29,308 --> 00:59:30,729
There we go, you scrubbed past that too fast.

1292
00:59:30,849 --> 00:59:31,550
And now my question.

1293
00:59:31,950 --> 00:59:34,471
So like, I'm sorry.

1294
00:59:35,032 --> 00:59:40,475
I mean, technical decisions influence design decisions

1295
00:59:40,515 --> 00:59:41,276
and so on and so forth.

1296
00:59:41,296 --> 00:59:44,358
So my question is, like, has there been any instance

1297
00:59:44,398 --> 00:59:46,619
in which now, like cross-play going forward

1298
00:59:46,679 --> 00:59:50,241
has influenced, like, say, design of levels

1299
00:59:50,381 --> 00:59:51,622
or gameplay systems?

1300
00:59:52,363 --> 00:59:52,843
Like, has it?

1301
00:59:54,225 --> 00:59:58,863
changed anything in a way, at least from a design and implementation standpoint.

1302
00:59:59,540 --> 01:00:03,321
So I can't speak directly to that because I'm not specifically a designer.

1303
01:00:03,781 --> 01:00:08,182
The question is how has the release of Crossplay and how we went about it changed the way we designed it.

1304
01:00:08,222 --> 01:00:15,523
But one of the things that I know that we're doing is that we're trying to embrace the incremental building of certain features a lot more.

1305
01:00:15,924 --> 01:00:21,645
Crossplay was probably one of the biggest things outside of Cross Save that we betaed in a live game at Bungie.

1306
01:00:21,885 --> 01:00:25,505
And so for that, yes, it's kind of changed the way that we're releasing it.

1307
01:00:25,946 --> 01:00:27,786
I'm not part of conversations in terms of how.

1308
01:00:28,246 --> 01:00:32,149
directly it applies to design, but that's part of it as well.

1309
01:00:32,730 --> 01:00:33,030
Thank you.

1310
01:00:33,370 --> 01:00:33,830
Thank you so much.

1311
01:00:33,850 --> 01:00:34,531
I think we're out of time.

1312
01:00:34,651 --> 01:00:36,352
If there's anymore questions, I can hang out.

1313
01:00:36,773 --> 01:00:37,093
Thank you.

1314
01:00:37,113 --> 01:00:45,579
Thank you.

