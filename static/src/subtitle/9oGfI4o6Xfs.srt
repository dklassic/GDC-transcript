1
00:00:03,646 --> 00:00:05,078
Bye everyone. Thanks for coming.

2
00:00:06,501 --> 00:00:07,422
So I'm Simon Oliver.

3
00:00:07,602 --> 00:00:09,403
I'm the founder of Hand Circus.

4
00:00:09,423 --> 00:00:11,285
We're a small, independent studio based in London.

5
00:00:11,845 --> 00:00:13,847
And the focus of my talk today is really just working out

6
00:00:13,927 --> 00:00:15,488
how you can do a lot with a little.

7
00:00:15,748 --> 00:00:17,950
So we're a small team, core team of only four.

8
00:00:18,750 --> 00:00:20,671
Most recently, we created Seabeard,

9
00:00:21,072 --> 00:00:23,514
which launched last year, which is a large scale,

10
00:00:23,534 --> 00:00:24,714
free-to-play adventure title.

11
00:00:24,955 --> 00:00:26,175
It's absolutely huge.

12
00:00:26,536 --> 00:00:28,137
And this talk is really about how we did that.

13
00:00:28,577 --> 00:00:30,258
It's also co-written by Ben Christie.

14
00:00:30,398 --> 00:00:31,779
So Ben Christie is our technical lead.

15
00:00:32,720 --> 00:00:33,741
So he's really helped contribute

16
00:00:33,821 --> 00:00:35,402
and shape the talk itself as well.

17
00:00:36,052 --> 00:00:37,092
So a little bit of background about us.

18
00:00:37,132 --> 00:00:39,973
We're kind of from iPhone prehistory, so way back

19
00:00:40,033 --> 00:00:42,574
when the iPhone was very much embryonic.

20
00:00:43,314 --> 00:00:45,094
Started playing around with a few ideas for the iPhone.

21
00:00:45,134 --> 00:00:48,635
This was way back in 2007 when there wasn't an iOS SDK.

22
00:00:49,395 --> 00:00:51,696
And then we launched our first game, Rolando,

23
00:00:51,836 --> 00:00:52,696
with Njimoko in 2008.

24
00:00:53,136 --> 00:00:55,376
So we started off in paid iOS.

25
00:00:55,896 --> 00:00:59,297
We then transitioned to do a paid PS3 game called

26
00:00:59,337 --> 00:01:02,338
Okobu, which was a much, much larger undertaking.

27
00:01:02,998 --> 00:01:05,039
And then most recently, we've come back to iOS,

28
00:01:05,059 --> 00:01:09,161
but now taking a look at free to play with Cbid, which,

29
00:01:09,201 --> 00:01:10,962
as I said, launched in December.

30
00:01:11,763 --> 00:01:13,204
So in terms of our overall history,

31
00:01:13,264 --> 00:01:15,565
this is generally an approximate graph

32
00:01:15,585 --> 00:01:16,826
of what we've been trying to do.

33
00:01:17,346 --> 00:01:18,927
So we didn't really want to grow big.

34
00:01:18,987 --> 00:01:20,968
The idea wasn't to have a huge team,

35
00:01:20,988 --> 00:01:22,849
but we wanted to take on these increasingly ambitious

36
00:01:22,869 --> 00:01:23,309
projects.

37
00:01:24,150 --> 00:01:25,450
So in order to do that, we obviously

38
00:01:25,470 --> 00:01:27,912
had to figure out how we can do that with our relatively

39
00:01:27,952 --> 00:01:28,652
small resources.

40
00:01:30,713 --> 00:01:32,534
So we've had some successes.

41
00:01:32,634 --> 00:01:34,535
The early days were amazing.

42
00:01:34,555 --> 00:01:35,796
We were very lucky with our timing.

43
00:01:35,856 --> 00:01:39,198
We had an app that was just designed for the iPhone

44
00:01:39,258 --> 00:01:41,959
early on when there weren't 600 new games being released

45
00:01:42,039 --> 00:01:42,420
every day.

46
00:01:43,460 --> 00:01:44,501
But we also made some mistakes.

47
00:01:44,821 --> 00:01:47,142
So yeah, it hasn't always been plain sailing.

48
00:01:47,322 --> 00:01:49,443
And I want to be pretty candid with the things that went wrong

49
00:01:49,583 --> 00:01:50,404
along the way as well.

50
00:01:51,364 --> 00:01:53,085
So in terms of the structure of the talk,

51
00:01:53,665 --> 00:01:56,025
starting off just really talking about configuration and composition.

52
00:01:56,165 --> 00:01:58,486
So how you build a team, how you work with partners,

53
00:01:58,826 --> 00:02:00,386
what kind of team members you're looking for,

54
00:02:01,527 --> 00:02:03,747
and yeah, really how to construct the composition of the team

55
00:02:03,847 --> 00:02:04,828
when you're working on a project.

56
00:02:05,628 --> 00:02:08,508
Then focusing on efficiency, working out how you can remove blockages,

57
00:02:08,628 --> 00:02:10,029
working out how you can prevent wastage,

58
00:02:10,349 --> 00:02:13,210
and really making sure that resources you have get put to best use.

59
00:02:14,484 --> 00:02:17,065
And then finally, I'm going to start talking about empowerment.

60
00:02:17,125 --> 00:02:19,165
So really how you can empower your team members,

61
00:02:19,225 --> 00:02:21,646
what tools you can give them, how

62
00:02:21,666 --> 00:02:23,587
you can build a culture that allows them to thrive

63
00:02:23,607 --> 00:02:26,007
and really just enable the work at their peak capability.

64
00:02:27,228 --> 00:02:29,168
But this isn't really a sweatshop talk.

65
00:02:29,208 --> 00:02:30,689
It's not about efficiency at all costs.

66
00:02:30,729 --> 00:02:32,729
It's not about wringing every last ounce out

67
00:02:32,769 --> 00:02:33,370
of your employees.

68
00:02:33,410 --> 00:02:35,210
It's really about how to do it in a productive way,

69
00:02:35,230 --> 00:02:36,631
in a positive way, how to make sure

70
00:02:36,671 --> 00:02:39,471
the team are just enabled and can produce amazing things

71
00:02:39,491 --> 00:02:41,112
that they can be proud of and really enjoying

72
00:02:41,152 --> 00:02:42,192
that kind of high level of work.

73
00:02:44,117 --> 00:02:46,940
So starting off with team structure, really just how you can...

74
00:02:49,837 --> 00:02:52,078
Yes, so really how you can structure the team itself.

75
00:02:53,519 --> 00:02:55,399
So first of all, yes, so there's obviously a balance

76
00:02:55,419 --> 00:02:57,100
when you're choosing the team members for your team,

77
00:02:57,140 --> 00:02:58,341
whether you go for core team

78
00:02:58,861 --> 00:03:00,222
or whether you go for contractors.

79
00:03:00,282 --> 00:03:01,602
Now I'm not trying to be too disparaging

80
00:03:01,622 --> 00:03:02,743
about contractors there.

81
00:03:03,183 --> 00:03:04,103
I was a contractor for a while

82
00:03:04,163 --> 00:03:05,524
and it was a really valuable experience

83
00:03:05,824 --> 00:03:07,885
and sometimes they can be the absolute right fit for the job.

84
00:03:09,265 --> 00:03:10,446
So yeah, I think, you know,

85
00:03:10,466 --> 00:03:11,246
if you're building out your team,

86
00:03:11,266 --> 00:03:12,787
there's a lot of considerations you really need to make

87
00:03:12,807 --> 00:03:13,607
because there's pros and cons

88
00:03:13,627 --> 00:03:15,108
as to whether or not you have somebody in the core,

89
00:03:15,508 --> 00:03:17,249
permanent member or whether they're a contractor.

90
00:03:18,508 --> 00:03:20,949
So first of all, if they are a core team member,

91
00:03:20,969 --> 00:03:22,549
obviously they have a much greater sense of ownership.

92
00:03:22,649 --> 00:03:23,369
This is their game.

93
00:03:23,989 --> 00:03:25,430
They're not just proud of one small part

94
00:03:25,450 --> 00:03:27,510
that they contribute to, it's their overall game

95
00:03:27,550 --> 00:03:29,551
and they want it to succeed and they want it to be great.

96
00:03:30,391 --> 00:03:32,352
So that's a huge motivational factor

97
00:03:32,392 --> 00:03:33,312
when you're working on a game,

98
00:03:33,972 --> 00:03:35,313
is to be part of the team that did that.

99
00:03:36,736 --> 00:03:39,960
Secondly, knowledge retention as well. I think this is a really interesting thing.

100
00:03:40,040 --> 00:03:42,644
There was a great article in NH Magazine about the culture of Nintendo

101
00:03:43,005 --> 00:03:46,770
and how Nintendo managed to just maintain this extremely high level of quality.

102
00:03:47,130 --> 00:03:48,813
And it's because generally people don't leave.

103
00:03:48,893 --> 00:03:52,638
They tend to stay there for a huge amount of time, like the team that made WarioWare.

104
00:03:53,479 --> 00:03:56,462
I think a lot of them were in their 60s and they've been in Tendo for 20, 30 years.

105
00:03:56,482 --> 00:03:59,785
And obviously that creates this incredibly healthy library of knowledge.

106
00:03:59,805 --> 00:04:04,870
And it means when a new starter joins, they can just tap into that and just absorb that knowledge from other team members.

107
00:04:05,210 --> 00:04:09,674
Whereas if you go for a contractor, obviously the moment they leave, all the knowledge that they've acquired can no longer be passed on.

108
00:04:11,027 --> 00:04:12,588
Also, it tends to attract top-tier talent.

109
00:04:12,688 --> 00:04:14,368
You know, people generally want to be part of something.

110
00:04:14,949 --> 00:04:16,370
There are exceptions to that, and there's obviously

111
00:04:16,390 --> 00:04:18,511
certain specializations where that doesn't really apply.

112
00:04:18,891 --> 00:04:21,012
But generally, people that want to be part of a great team

113
00:04:21,052 --> 00:04:22,353
work with other amazing people.

114
00:04:23,033 --> 00:04:24,534
So you will attract great people

115
00:04:24,574 --> 00:04:25,814
if you're looking for a core team member.

116
00:04:26,784 --> 00:04:28,725
Also, financially, it's better long-term value.

117
00:04:29,545 --> 00:04:31,365
Obviously, freelance rates tend to be a little bit higher

118
00:04:31,405 --> 00:04:32,886
than the equivalent you'd pay a core salary

119
00:04:33,266 --> 00:04:35,987
because they will end up having to manage the uncertainty

120
00:04:36,007 --> 00:04:37,287
and the fact they're not always gonna get work.

121
00:04:37,327 --> 00:04:39,588
So, better long-term value for a Quartzii member.

122
00:04:40,108 --> 00:04:41,548
But on the negative side, utilization.

123
00:04:41,588 --> 00:04:42,789
Obviously, you need to make sure these people

124
00:04:42,809 --> 00:04:43,709
that are working to you full-time,

125
00:04:43,729 --> 00:04:45,709
you need to make sure they actually have something to do

126
00:04:45,769 --> 00:04:47,370
that's productive and is actually part

127
00:04:47,390 --> 00:04:49,070
of your core objectives rather than just them,

128
00:04:49,430 --> 00:04:50,971
you know, just keeping busy doing something.

129
00:04:52,749 --> 00:05:00,954
Long-term commitment as well. Obviously when you take somebody on full-time, you have to support them and make sure that they have stability and that they are a full-term employee.

130
00:05:01,154 --> 00:05:02,494
So yeah, that's something you need to consider.

131
00:05:03,936 --> 00:05:05,137
And also there's a project fit risk.

132
00:05:05,217 --> 00:05:07,079
If you get somebody that's a little bit too specialized,

133
00:05:07,699 --> 00:05:09,921
you want to make sure that they can join you for multiple projects.

134
00:05:10,461 --> 00:05:13,464
Otherwise, if you have somebody that has a very, very distinct bespoke art style

135
00:05:13,484 --> 00:05:16,186
that might be great, you know, for the gothic horror game that you're making,

136
00:05:16,226 --> 00:05:18,368
when you move into doing something that's completely different,

137
00:05:18,408 --> 00:05:20,209
maybe a stylized cartoon game or space game,

138
00:05:20,549 --> 00:05:22,031
you know, they're not going to fit necessarily.

139
00:05:22,071 --> 00:05:22,751
So there's a risk there.

140
00:05:22,771 --> 00:05:26,194
You want to find someone that is going to work with you effectively across multiple projects.

141
00:05:27,265 --> 00:05:29,907
The benefits of a contractor, conversely, specialism.

142
00:05:29,947 --> 00:05:32,589
You can find somebody that is the very best at what it is

143
00:05:32,609 --> 00:05:35,250
that they do and is most applicable for your project.

144
00:05:35,350 --> 00:05:37,892
So for example, we work with a couple of contractors

145
00:05:37,912 --> 00:05:38,532
internationally.

146
00:05:38,572 --> 00:05:40,414
We work with a character rigger who's based in Belarus,

147
00:05:40,814 --> 00:05:42,475
and an animator who's based in Israel.

148
00:05:42,815 --> 00:05:44,796
And we have the opportunity to go through polycount forums

149
00:05:44,856 --> 00:05:47,738
and conceptart.org and look for people that just nailed

150
00:05:47,778 --> 00:05:48,979
the kind of look that we were looking for.

151
00:05:49,779 --> 00:05:50,780
And that's a huge benefit.

152
00:05:50,800 --> 00:05:52,601
It means that you can really cherry pick people that are

153
00:05:52,621 --> 00:05:53,762
ideal for that particular role.

154
00:05:54,442 --> 00:05:58,664
Also, flexibility. You know, this is great, the fact that you can have somebody for two weeks.

155
00:05:58,724 --> 00:06:01,505
Obviously, depending on the way that you negotiate, the way you work together,

156
00:06:01,545 --> 00:06:04,506
you could potentially have them for two weeks, it could be a bit of a lull, bring them back,

157
00:06:04,586 --> 00:06:07,528
say, actually, I need some last-minute help, I need a couple of days here and there.

158
00:06:07,888 --> 00:06:11,129
And that flexibility is just ideal, because again, it really minimizes wastage.

159
00:06:12,422 --> 00:06:14,343
Again, yes, so tying into specialization,

160
00:06:14,383 --> 00:06:16,364
you can find someone that is the perfect project fit

161
00:06:16,484 --> 00:06:18,005
in terms of their style, in terms of what it is

162
00:06:18,025 --> 00:06:19,486
that you're doing, the platform that you're targeting.

163
00:06:19,926 --> 00:06:21,327
And that's extremely beneficial.

164
00:06:21,847 --> 00:06:23,168
But you do have availability risk.

165
00:06:23,208 --> 00:06:25,169
You know, if you do have somebody that joins you

166
00:06:25,189 --> 00:06:26,470
for six weeks and then you need them

167
00:06:26,490 --> 00:06:27,831
for another couple of weeks, four weeks later,

168
00:06:28,151 --> 00:06:30,032
all of a sudden, they could be working on something else.

169
00:06:30,052 --> 00:06:31,133
They may not have availability.

170
00:06:31,453 --> 00:06:32,954
So that's something you need to manage.

171
00:06:33,694 --> 00:06:37,136
And again, conversely, with the benefits of full-time team members,

172
00:06:37,336 --> 00:06:38,196
there's knowledge loss.

173
00:06:38,256 --> 00:06:41,657
That knowledge working on your particular aspect of your project,

174
00:06:41,677 --> 00:06:42,378
something they're building,

175
00:06:42,698 --> 00:06:44,078
if that knowledge disappears,

176
00:06:44,659 --> 00:06:46,840
and you need that knowledge later on, that's a huge loss.

177
00:06:48,260 --> 00:06:49,601
And they're obviously more expensive as well.

178
00:06:49,841 --> 00:06:52,102
So, yeah, that's someone to take into consideration.

179
00:06:54,063 --> 00:06:55,223
But there are other opportunities.

180
00:06:55,703 --> 00:06:57,424
This is my favorite piece of cosplay ever.

181
00:06:57,464 --> 00:06:59,125
This is somebody going as every Johnny Depp.

182
00:07:01,530 --> 00:07:02,931
But you can go for a hybrid role.

183
00:07:02,951 --> 00:07:06,672
So you can go for something where you can have contractors with kind of slight additional

184
00:07:06,692 --> 00:07:08,112
benefits or other aspects to it.

185
00:07:08,172 --> 00:07:13,253
So for example, one of the things we did for our second, well, our third game for Okabu

186
00:07:13,613 --> 00:07:15,174
was to establish a bonus pot.

187
00:07:15,234 --> 00:07:19,275
The idea was that if the game does well, the profits from the game will be shared between

188
00:07:19,335 --> 00:07:20,735
everyone, even if they're a contractor.

189
00:07:21,115 --> 00:07:22,856
And this is something I know another few other studios do.

190
00:07:22,936 --> 00:07:25,778
So TigerStyle, the guys that did the awesome spider on iOS,

191
00:07:26,098 --> 00:07:28,380
I believe they operate under a similar model.

192
00:07:28,400 --> 00:07:30,601
So it means you get a few of the benefits of a core team member,

193
00:07:31,281 --> 00:07:33,723
but some of the flexibility and other benefits of a contractor.

194
00:07:34,903 --> 00:07:37,765
It's not a perfect solution.

195
00:07:37,885 --> 00:07:38,785
Well, it has some benefits.

196
00:07:38,865 --> 00:07:41,567
It wasn't really ideal for us, because you

197
00:07:41,587 --> 00:07:42,808
lose some of the most important elements,

198
00:07:42,868 --> 00:07:45,149
like ownership, that's a real key consideration.

199
00:07:46,571 --> 00:07:49,454
But, you know, there's other different industries that work in other ways as well.

200
00:07:49,474 --> 00:07:52,716
So, for example, the way that the film model works, it's not too dissimilar to the way that we work,

201
00:07:53,077 --> 00:07:55,138
is have a core team that works across multiple projects.

202
00:07:56,239 --> 00:07:59,422
So this would be maybe a director, the guy that owns the production company,

203
00:07:59,442 --> 00:08:02,384
you might have a producer, somebody that works across all the projects themselves.

204
00:08:03,145 --> 00:08:05,187
And then when you go into pre-production, you bring on specialists.

205
00:08:05,227 --> 00:08:07,549
You bring on perhaps a production designer, cinematographer,

206
00:08:07,789 --> 00:08:09,390
people that are ripe for this particular project.

207
00:08:09,850 --> 00:08:14,194
And then when you move into full production, you expand, you bring on contractors, you bring on actors,

208
00:08:14,294 --> 00:08:16,996
everyone that really, you know, composes the full team.

209
00:08:17,356 --> 00:08:21,219
And this is, I think, something quite similar to the way we work and we find pretty well ourselves.

210
00:08:22,299 --> 00:08:26,182
So the question to ask yourself, first of all, do you have enough work for a full-time role?

211
00:08:26,342 --> 00:08:28,704
Is this something that you really need over the full length of the project?

212
00:08:28,724 --> 00:08:31,846
Or would it be better to suit it to somebody just to come in and work for a couple of months?

213
00:08:33,089 --> 00:08:34,990
Secondly, should the knowledge required be retained in-house?

214
00:08:35,110 --> 00:08:37,253
Is this vital knowledge, is this core to your business?

215
00:08:37,653 --> 00:08:39,595
Is this something you need to retain for future projects

216
00:08:39,915 --> 00:08:41,517
and in order to maintain the project itself?

217
00:08:42,978 --> 00:08:44,700
Also, is this role only required in this project?

218
00:08:44,760 --> 00:08:46,401
You know, it might be that you're making an audio game

219
00:08:46,501 --> 00:08:49,264
and then after that you've got no intention to ever do a music-based game again,

220
00:08:49,364 --> 00:08:51,046
in which case it makes no sense to hire somebody

221
00:08:51,066 --> 00:08:52,727
that's a music specialist for this particular game.

222
00:08:53,989 --> 00:08:57,310
Would a specialist of the perfect fit be better than a gemriss in this case?

223
00:08:57,350 --> 00:09:00,772
So yeah, would it be better to find somebody that is just doing the most beautiful gothic art

224
00:09:01,172 --> 00:09:04,874
rather than hire somebody that's, yeah, pretty good at that, but yeah, isn't really ideal.

225
00:09:06,028 --> 00:09:09,489
So for us, this is the way that Rolando 1 and 2 are structured, give or take.

226
00:09:09,989 --> 00:09:12,050
So I was the only permanent team member.

227
00:09:12,950 --> 00:09:14,770
Mikko was brought on as a contractor but incentivized,

228
00:09:14,850 --> 00:09:17,211
so he had bonuses related to the performance of the game.

229
00:09:18,651 --> 00:09:22,992
And the musician, we worked with Denefian and you guys are fans of Nintertune.

230
00:09:23,012 --> 00:09:25,912
We worked with Mr. Scruff and basically just had the opportunity to go and cherry-pick

231
00:09:26,353 --> 00:09:28,393
favorite Mr. Scruff tracks, which was amazing.

232
00:09:28,573 --> 00:09:30,353
And NG Moko also helped facilitate.

233
00:09:30,754 --> 00:09:34,599
bringing in a contract programmer that really helped taking my terrible code

234
00:09:34,780 --> 00:09:36,963
and turning it into something that actually worked on the device.

235
00:09:37,564 --> 00:09:39,146
And this excludes some of the roles in Ninjimoko.

236
00:09:39,206 --> 00:09:42,591
Obviously, as the publisher, they had a number of other team members

237
00:09:42,611 --> 00:09:44,474
that worked on the project and really helped us assist in

238
00:09:44,775 --> 00:09:46,717
launching the game and making it a commercial success.

239
00:09:48,263 --> 00:09:49,404
So this is the structure for Okabu.

240
00:09:49,424 --> 00:09:51,144
So this is the one that we self-published.

241
00:09:51,384 --> 00:09:53,625
So I was, again, the only permanent team member.

242
00:09:53,905 --> 00:09:55,365
But all of the others had hybrid roles.

243
00:09:55,385 --> 00:09:58,746
So again, incentivized by a share of the profits.

244
00:09:59,186 --> 00:10:00,486
This game was a disaster.

245
00:10:00,926 --> 00:10:04,667
It was very, it just went very, very badly wrong.

246
00:10:04,947 --> 00:10:06,948
I was trying to take on too much myself.

247
00:10:06,988 --> 00:10:08,688
So taking on the responsibilities

248
00:10:08,728 --> 00:10:11,109
of actually publishing as well as directing the game,

249
00:10:11,289 --> 00:10:13,169
I had too much going on in terms of the roles

250
00:10:13,189 --> 00:10:14,189
that I was trying to take on.

251
00:10:14,870 --> 00:10:17,330
And also, with the exception of the level designer.

252
00:10:18,790 --> 00:10:20,371
he was the only one that was working five days a week.

253
00:10:20,551 --> 00:10:23,011
So the others were split between other elements of work.

254
00:10:23,071 --> 00:10:25,632
So again, it really kind of dissolved any sense of ownership

255
00:10:25,692 --> 00:10:26,932
and made it far, far worse.

256
00:10:26,972 --> 00:10:29,793
So don't have a team structure like this ever.

257
00:10:29,833 --> 00:10:32,254
This is just like a complete nightmare.

258
00:10:32,654 --> 00:10:34,734
So yeah, that really wasn't as successful.

259
00:10:35,294 --> 00:10:36,315
But now we've learned from that,

260
00:10:36,395 --> 00:10:38,095
and now really restructured things

261
00:10:38,155 --> 00:10:39,195
quite differently for Seabeard.

262
00:10:39,235 --> 00:10:42,616
So we have four core team members, myself, 3D artist,

263
00:10:42,876 --> 00:10:46,317
our art director, Mikko, and our tech lead, Ben.

264
00:10:46,697 --> 00:10:48,518
And so they've all been brought on as permanent team members.

265
00:10:48,558 --> 00:10:51,018
And that's really helped build up a much stronger sense of ownership.

266
00:10:51,718 --> 00:10:54,079
We also have a number of specialist roles.

267
00:10:54,159 --> 00:10:56,439
Some were maybe for a few weeks, some were for three months.

268
00:10:57,180 --> 00:11:00,120
And I think probably the longest there was a level designer, island designer.

269
00:11:00,880 --> 00:11:01,981
And he joined us for about six months.

270
00:11:03,021 --> 00:11:05,321
But yeah, so this really just allowed us to have that flexibility

271
00:11:05,641 --> 00:11:07,522
while also keeping the core team compact

272
00:11:07,562 --> 00:11:09,002
and really focused on what they needed to do.

273
00:11:09,762 --> 00:11:11,623
So we had no hybrid roles in this particular case.

274
00:11:12,802 --> 00:11:17,023
But tying into that role blending, I think this is something that, you know, anybody working on a small project is aware of this.

275
00:11:17,063 --> 00:11:20,384
You end up having people that do multiple different roles, sometimes too many different roles.

276
00:11:21,204 --> 00:11:26,646
But I love this idea of, it's a coin turned by a guy that worked for an agency called IDEO.

277
00:11:26,726 --> 00:11:34,128
I did a little bit of freelancing for IDEO in London, and really, I was really impressed with the way the company has run, the corporate culture of the studio.

278
00:11:35,028 --> 00:11:37,729
And this guy, Tim Brown, coined this idea of a T-shape team member.

279
00:11:38,289 --> 00:11:40,251
So the idea is that they are amazing at one thing,

280
00:11:40,271 --> 00:11:41,753
they're specialists in one particular area,

281
00:11:42,073 --> 00:11:44,876
but they have an appetite for cross-disciplinary work.

282
00:11:45,136 --> 00:11:47,018
So they like working with other people on the team.

283
00:11:47,038 --> 00:11:49,620
So I'm just going to read you a little quote from Tim Brown here.

284
00:11:50,241 --> 00:11:52,162
T-shaped people have two kinds of characteristics,

285
00:11:52,202 --> 00:11:53,904
hence the use of the letter T to describe them.

286
00:11:54,024 --> 00:11:55,666
The vertical stroke of the T is depth of skill

287
00:11:55,686 --> 00:11:57,487
that allows them to contribute to the creative process.

288
00:11:57,908 --> 00:11:59,449
That can be from any number of different fields.

289
00:12:00,010 --> 00:12:03,330
The horizontal stroke of the T is disposition for collaboration across disciplines.

290
00:12:03,731 --> 00:12:05,651
It is composed of two things. First, empathy.

291
00:12:06,111 --> 00:12:08,892
It's important because it allows people to imagine the problem from another perspective,

292
00:12:08,952 --> 00:12:10,272
to stand in somebody else's shoes.

293
00:12:10,812 --> 00:12:13,513
Second, they tend to get very enthusiastic about other people's disciplines,

294
00:12:13,553 --> 00:12:15,333
to the point they may actually start to practice them.

295
00:12:15,913 --> 00:12:19,274
T-shaped people have both depth and breadth in their skills.

296
00:12:19,774 --> 00:12:20,694
So again, this is awesome.

297
00:12:20,714 --> 00:12:22,675
This is just the kind of person that you want to have on your team,

298
00:12:22,715 --> 00:12:25,596
somebody that is passionate about the other things that people are doing,

299
00:12:25,616 --> 00:12:27,656
they're curious about them and really wants to delve in

300
00:12:27,696 --> 00:12:29,616
to collaborate with other people on your team.

301
00:12:30,757 --> 00:12:32,398
This doesn't mean jack of all trades.

302
00:12:32,438 --> 00:12:35,679
This doesn't mean somebody that's not that great at a whole bunch of things.

303
00:12:36,419 --> 00:12:38,640
It means people that are awesome at one or two things,

304
00:12:38,700 --> 00:12:39,741
or maybe even three things,

305
00:12:39,841 --> 00:12:42,122
but they have this passion and this enthusiasm

306
00:12:42,182 --> 00:12:45,643
for the other disciplines that make up the team itself.

307
00:12:47,815 --> 00:12:50,196
So benefits of role blending.

308
00:12:50,916 --> 00:12:51,856
So obviously, utilization.

309
00:12:51,896 --> 00:12:52,496
This is great.

310
00:12:52,736 --> 00:12:54,577
If somebody isn't needed for a particular role

311
00:12:54,597 --> 00:12:55,797
or a particular time on the project,

312
00:12:55,857 --> 00:12:57,017
it means that they can potentially

313
00:12:57,077 --> 00:12:59,178
take on other elements.

314
00:12:59,258 --> 00:13:01,138
So for example, they might help with community management.

315
00:13:01,158 --> 00:13:02,458
It might be that there's an artist who's

316
00:13:02,518 --> 00:13:03,519
curious about level design.

317
00:13:04,099 --> 00:13:06,599
And obviously, they may not have the same level

318
00:13:06,619 --> 00:13:08,219
of expertise as a specialist.

319
00:13:08,239 --> 00:13:10,760
It means that it really helps smooth things out

320
00:13:10,800 --> 00:13:13,921
if there's a little bit of position in the schedule

321
00:13:13,961 --> 00:13:14,821
where they're not needed.

322
00:13:15,812 --> 00:13:16,954
It also improves collaboration.

323
00:13:17,334 --> 00:13:18,596
You know, you naturally get that thing,

324
00:13:18,616 --> 00:13:19,957
I'm sure all of you have experienced that thing,

325
00:13:19,977 --> 00:13:21,800
where you get two people that just really

326
00:13:21,860 --> 00:13:23,342
ring into each other's disciplines,

327
00:13:23,362 --> 00:13:24,964
really pushing each other and trying to

328
00:13:25,664 --> 00:13:27,086
come up with new ways to work together,

329
00:13:27,146 --> 00:13:28,368
to innovate, to find, you know,

330
00:13:28,408 --> 00:13:29,689
really push the project somewhere new.

331
00:13:29,749 --> 00:13:31,392
So, it really improves collaboration.

332
00:13:32,112 --> 00:13:35,096
And it alleviates boredom, you know, especially if you're working on a long project.

333
00:13:35,136 --> 00:13:36,678
So for us, CBIT was around two and a half years.

334
00:13:37,219 --> 00:13:39,142
It alleviates boredom. It means that the people

335
00:13:39,843 --> 00:13:41,705
get given something else to do, which is great.

336
00:13:41,725 --> 00:13:43,447
You know, it means that they can try their hand at something else.

337
00:13:43,968 --> 00:13:45,270
It spices things up a little bit.

338
00:13:45,290 --> 00:13:47,172
It means when they come back, they're a little bit fresher to work

339
00:13:47,212 --> 00:13:48,474
on what is their core specialization.

340
00:13:50,815 --> 00:13:51,656
But there are some negatives.

341
00:13:52,096 --> 00:13:53,878
So it can be a little bit less efficient.

342
00:13:53,998 --> 00:13:56,781
Somebody that is a specialist is obviously going to work more efficiently than somebody

343
00:13:56,801 --> 00:14:01,165
that is, you know, doing this as a kind of secondary element to their profession, something

344
00:14:01,185 --> 00:14:03,167
that they're passionate about but not necessarily as experienced.

345
00:14:04,368 --> 00:14:05,669
It can reduce healthy tension.

346
00:14:05,689 --> 00:14:08,032
So this is something that I really experienced, particularly with Okkaboot.

347
00:14:08,432 --> 00:14:11,415
When you're working on a project, when you have to inhibit multiple roles that have different

348
00:14:11,435 --> 00:14:13,617
responsibilities, you get to a position where...

349
00:14:14,418 --> 00:14:19,464
If it's a really serious important issue and you're having to kind of have the two sides of the argument in your head,

350
00:14:19,884 --> 00:14:23,268
it's nowhere near as good as having two people actually arguing it out, discussing it out.

351
00:14:23,288 --> 00:14:26,772
So say for example, if you have a creative director who's trying to push the project

352
00:14:26,812 --> 00:14:29,295
and make it as ambitious and exciting and amazing as possible,

353
00:14:29,675 --> 00:14:32,258
you have somebody that's in charge of the finances for the project as well,

354
00:14:32,298 --> 00:14:34,240
obviously trying to make sure that it's brought in within budget.

355
00:14:35,001 --> 00:14:41,371
And if you have that inhibited in the same head, you're not going to have a realistic discussion as to, you know, all the different aspects of the project.

356
00:14:41,391 --> 00:14:46,198
So it can be pretty risky because it reduces that healthy tension that you really want to have in a team.

357
00:14:47,660 --> 00:14:49,100
Also there's a context switch penalty.

358
00:14:49,120 --> 00:14:50,740
This is something I've seen discussed quite a bit

359
00:14:50,780 --> 00:14:51,701
here at GDC this week.

360
00:14:52,541 --> 00:14:54,761
When you have a mental model in your head,

361
00:14:54,781 --> 00:14:56,682
you've really built it up and you've really invested

362
00:14:56,702 --> 00:14:59,182
a lot of time in taking this on for a complicated task.

363
00:15:00,042 --> 00:15:01,143
When you're switching over to something else,

364
00:15:01,223 --> 00:15:02,703
it's a completely different mindset,

365
00:15:02,743 --> 00:15:03,743
completely different discipline.

366
00:15:04,383 --> 00:15:05,864
It takes time and it takes a little bit of time

367
00:15:05,884 --> 00:15:07,004
to kind of move from one to the other.

368
00:15:07,024 --> 00:15:09,204
So you want to make sure that if you are context switching,

369
00:15:09,224 --> 00:15:11,025
you're not doing it every five minutes, every hour.

370
00:15:11,205 --> 00:15:13,565
Maybe you can try and split days up

371
00:15:13,705 --> 00:15:15,526
or have different days when you're working

372
00:15:15,546 --> 00:15:16,546
between different disciplines.

373
00:15:17,717 --> 00:15:19,638
So a question to ask yourself when you're planning out

374
00:15:19,658 --> 00:15:21,339
the role blending you're gonna have on your team,

375
00:15:22,040 --> 00:15:23,601
does the work require specialist knowledge?

376
00:15:23,981 --> 00:15:25,042
Is there something that's better suited,

377
00:15:25,082 --> 00:15:26,282
somebody that is amazing at this?

378
00:15:26,843 --> 00:15:28,804
And I guess tied into that,

379
00:15:29,945 --> 00:15:31,406
should this be broken out into a separate role?

380
00:15:31,886 --> 00:15:33,427
And I guess, are the people on the team

381
00:15:33,447 --> 00:15:34,487
actually wanting to take on this?

382
00:15:34,527 --> 00:15:35,448
It might be there are people there

383
00:15:35,488 --> 00:15:36,429
that are relatively T-shaped,

384
00:15:36,449 --> 00:15:38,370
but that T does not go anywhere near

385
00:15:38,390 --> 00:15:41,011
into the discipline that you're trying to find skill for.

386
00:15:42,338 --> 00:15:45,061
And could the lack of cross-roll tension cause issues?

387
00:15:45,141 --> 00:15:46,542
Again, like I was saying earlier,

388
00:15:46,602 --> 00:15:48,124
that can be a really dangerous thing

389
00:15:48,284 --> 00:15:50,967
if you are trying to solve challenging issues

390
00:15:51,007 --> 00:15:52,288
and you're trying to resolve this all in your head

391
00:15:52,308 --> 00:15:53,890
without getting it out and reasoning.

392
00:15:56,099 --> 00:15:59,281
So to give you an example of the role blending

393
00:15:59,321 --> 00:16:02,643
that we had for Seabird, these are the four different core

394
00:16:02,663 --> 00:16:03,504
members of the team.

395
00:16:03,884 --> 00:16:05,665
So Ben's primary role was technical lead.

396
00:16:05,705 --> 00:16:07,306
He was also doing network programming.

397
00:16:07,346 --> 00:16:09,848
He was a server engineer, UX designer as well,

398
00:16:09,908 --> 00:16:11,929
so really kind of helping build out the UI and experiment

399
00:16:11,949 --> 00:16:13,210
with making that as efficient as possible.

400
00:16:13,690 --> 00:16:15,811
And he designed a number of the mini-games for the sailing

401
00:16:15,851 --> 00:16:16,752
that we have in the game as well.

402
00:16:17,552 --> 00:16:20,194
And he really relished the chance to mix things up a little bit.

403
00:16:20,315 --> 00:16:24,558
I think the nice thing is all the other roles here genuinely came from a place of enthusiasm from each of them.

404
00:16:24,998 --> 00:16:27,960
So Hai, our 3D artist, also started doing level design.

405
00:16:28,120 --> 00:16:31,323
So we had a contractor that was doing the level design for the islands in the game.

406
00:16:31,543 --> 00:16:34,685
He was with us for about six months, and then we had a gap as we were moving towards the end of production.

407
00:16:35,025 --> 00:16:39,549
We needed to rework a few island designs, and Hai jumped in and was a natural.

408
00:16:39,609 --> 00:16:40,850
You know, he called it...

409
00:16:41,651 --> 00:16:44,661
like playing Minecraft, I really enjoyed just the challenge of using the level design tools

410
00:16:44,721 --> 00:16:47,250
to experiment and create art in a different way.

411
00:16:48,167 --> 00:16:50,548
So Miko, our art director, also did all the concept art

412
00:16:50,568 --> 00:16:52,008
for the game, the UI design for the game,

413
00:16:52,408 --> 00:16:54,409
as well as handling a lot of the marketing materials

414
00:16:54,729 --> 00:16:56,329
as a graphic artist as well.

415
00:16:57,469 --> 00:16:59,350
Myself, as game director, I was also

416
00:16:59,370 --> 00:17:01,470
in charge of running the business, a kind of business

417
00:17:01,490 --> 00:17:02,010
administration.

418
00:17:02,031 --> 00:17:03,531
I was also the producer.

419
00:17:03,551 --> 00:17:04,931
That's probably the biggest mistake I made.

420
00:17:04,951 --> 00:17:07,452
We tried to hire a producer and it didn't work out, sadly,

421
00:17:08,052 --> 00:17:08,572
for the project.

422
00:17:08,592 --> 00:17:10,352
But I think that was a massive overhead on my part

423
00:17:10,372 --> 00:17:12,793
and really was a distraction from the other aspects

424
00:17:12,953 --> 00:17:13,553
of the game.

425
00:17:13,693 --> 00:17:15,034
So that's the one role, if I could

426
00:17:15,054 --> 00:17:16,714
have broken that into several, it would have been producer.

427
00:17:17,314 --> 00:17:20,697
but also doing game design and before Ben joined I was doing programming.

428
00:17:22,879 --> 00:17:24,840
So, yeah, another part of that, partners.

429
00:17:24,920 --> 00:17:28,563
So, you know, certainly in most cases for all of our projects we've had partners.

430
00:17:28,583 --> 00:17:30,625
And they come in many different shapes and sizes.

431
00:17:31,806 --> 00:17:33,727
So when you're choosing whether or not you're going to partner with somebody,

432
00:17:33,807 --> 00:17:36,509
there's a number of different factors in this, a number of different types of partners.

433
00:17:37,030 --> 00:17:38,591
So it really depends on your project, your team,

434
00:17:38,631 --> 00:17:40,933
and what it is you're looking to get out of a project.

435
00:17:43,432 --> 00:17:44,693
So, motivation for partnering.

436
00:17:44,713 --> 00:17:47,054
Obviously money is probably one of the biggest ones

437
00:17:47,074 --> 00:17:47,695
in most cases.

438
00:17:47,795 --> 00:17:49,196
So, that can be money for development,

439
00:17:49,816 --> 00:17:51,978
although obviously if you're working on a free-to-play game

440
00:17:52,018 --> 00:17:54,200
it also includes money for marketing and UA.

441
00:17:54,260 --> 00:17:56,001
I mean, generally includes money for marketing anyway.

442
00:17:56,801 --> 00:17:58,563
It may be, you know, it's becoming increasingly challenging

443
00:17:58,603 --> 00:18:00,264
if you're a bootstrap studio to actually be able to afford

444
00:18:00,284 --> 00:18:00,884
to do this yourself.

445
00:18:01,785 --> 00:18:03,426
So there are companies out there that are just specializing

446
00:18:03,486 --> 00:18:05,388
in just purely doing the UA aspect of it as well.

447
00:18:07,267 --> 00:18:09,608
Distribution, you know, obviously this is becoming less and less of an issue.

448
00:18:09,628 --> 00:18:12,369
The actual getting things into the hands of people isn't really a problem anymore,

449
00:18:12,409 --> 00:18:15,551
but it used to be an issue if you wanted to get a slot on say, XBLA or PSN,

450
00:18:15,571 --> 00:18:18,132
you needed to work with a publisher that had those slots.

451
00:18:18,613 --> 00:18:21,394
Certainly if you were going into retail, this wasn't generally something you could do yourself,

452
00:18:21,454 --> 00:18:23,095
but it's becoming less of an issue.

453
00:18:23,315 --> 00:18:26,777
Although that's now transferring more into audience and discovery.

454
00:18:26,917 --> 00:18:29,738
So if you work with a partner that has a pre-existing audience,

455
00:18:29,758 --> 00:18:31,299
obviously that's a huge advantage.

456
00:18:31,319 --> 00:18:32,680
They're able to cross-promote through the network,

457
00:18:33,520 --> 00:18:35,001
and they're able to aid in discovery.

458
00:18:35,041 --> 00:18:36,482
They probably have a lot of experience in terms of getting...

459
00:18:37,682 --> 00:18:38,423
your game out there.

460
00:18:40,383 --> 00:18:46,964
And resources as well. So beyond money, it might be that they have, you know, an expert, a crack, you know, team around monetization.

461
00:18:47,824 --> 00:18:52,025
It might be that they have some amazing technology that, you know, you really want to, you know, tackle.

462
00:18:52,045 --> 00:18:57,006
So it might be that you're working with somebody producing hardware. It might be that you're working with somebody that has, you know,

463
00:18:57,186 --> 00:19:00,907
a fluid dynamics engine that you really want to, that you really want to harness.

464
00:19:01,227 --> 00:19:02,688
And they're looking for people to collaborate with on a game.

465
00:19:04,473 --> 00:19:08,615
So the question to ask yourself when you are planning out your,

466
00:19:08,635 --> 00:19:10,196
whether or not to work with a partner.

467
00:19:10,796 --> 00:19:13,498
So obviously a key part of this, you're trading revenue for resources.

468
00:19:13,678 --> 00:19:16,379
So you need to work out whether or not this trade is a good trade.

469
00:19:16,859 --> 00:19:18,780
What are you getting back for it? Is it a good spend?

470
00:19:19,281 --> 00:19:21,782
Obviously in some cases you may not have the budget to do this yourself,

471
00:19:21,822 --> 00:19:22,842
so it's kind of a moot point.

472
00:19:23,183 --> 00:19:25,364
But it's definitely worth having a think about whether or not

473
00:19:25,744 --> 00:19:28,005
this is something that you want to go for.

474
00:19:29,046 --> 00:19:32,029
In some cases it might be more efficient for you to procure the resources directly.

475
00:19:32,069 --> 00:19:35,333
It might be better off for you to build out a team doing that particular skill set.

476
00:19:36,454 --> 00:19:37,015
It may not be.

477
00:19:37,415 --> 00:19:42,000
And again, it also really just might come down to whether or not it's something that you want to do yourselves.

478
00:19:42,020 --> 00:19:44,283
You know, do you have any interest in building out a UA team?

479
00:19:44,343 --> 00:19:46,225
Do you have any interest in building out a QA team?

480
00:19:47,206 --> 00:19:48,366
or marketing team internally.

481
00:19:49,106 --> 00:19:50,806
You know, certainly from my side,

482
00:19:50,826 --> 00:19:51,927
when we started working in Rolando,

483
00:19:51,967 --> 00:19:54,147
this wasn't something that I had a lot of experience in.

484
00:19:54,187 --> 00:19:56,108
It's not something I had a lot of passion in.

485
00:19:56,188 --> 00:19:58,168
And so, you know, with early conversations with Njimoko,

486
00:19:58,188 --> 00:19:59,669
it just naturally took that direction of

487
00:20:00,509 --> 00:20:02,649
it felt like a partnership where it was quite symbiotic.

488
00:20:02,669 --> 00:20:03,770
And that's something where you really want,

489
00:20:03,810 --> 00:20:06,430
where there's not as much overlap, but it's very complementary.

490
00:20:07,831 --> 00:20:08,851
So if you're not that interested

491
00:20:09,931 --> 00:20:11,032
in what it is that they could provide,

492
00:20:11,072 --> 00:20:13,132
then it would probably make sense,

493
00:20:13,252 --> 00:20:14,272
you know, to find that out,

494
00:20:14,292 --> 00:20:15,253
to work with a partner on that.

495
00:20:17,231 --> 00:20:20,033
And lastly, is value generated by working together?

496
00:20:20,053 --> 00:20:22,834
It might be that the collaboration of the two different companies

497
00:20:23,214 --> 00:20:24,595
produced something great in some of its parts.

498
00:20:25,535 --> 00:20:26,976
So, yeah, really, I guess you'll naturally,

499
00:20:26,996 --> 00:20:29,377
when you start working and talking with potential partners,

500
00:20:29,397 --> 00:20:30,857
you'll immediately get an idea of whether or not

501
00:20:31,498 --> 00:20:34,199
this is going to be a fruitful solution.

502
00:20:35,552 --> 00:20:38,955
So for HandCircus, we started off, as I mentioned earlier,

503
00:20:38,995 --> 00:20:40,957
we started off working with Njimoko,

504
00:20:41,177 --> 00:20:42,618
for Rolando 1 and Rolando 2.

505
00:20:43,719 --> 00:20:45,641
We ended up self-publishing for Okabu,

506
00:20:45,661 --> 00:20:49,604
so handling all aspects of the submission, aspects of QA,

507
00:20:49,684 --> 00:20:50,405
localization.

508
00:20:50,505 --> 00:20:52,647
And that was, as I mentioned before, a nightmare

509
00:20:52,727 --> 00:20:54,028
and was way too much of a stretch.

510
00:20:54,328 --> 00:20:55,529
And as a result, the product suffered.

511
00:20:55,549 --> 00:20:56,570
We weren't able to get it to a point

512
00:20:56,610 --> 00:20:58,732
we wanted because quite simply, we ran out of money

513
00:20:58,752 --> 00:21:01,334
and we ran out of resources to get it launched.

514
00:21:02,395 --> 00:21:06,238
And then most recently we've been working with Backloop Studios on Seabeard.

515
00:21:06,318 --> 00:21:09,200
And again, going to specialists in free-to-play really helped us just, you know,

516
00:21:09,240 --> 00:21:11,322
get the game to market and help it be a success.

517
00:21:13,383 --> 00:21:14,644
So now moving on to efficiency.

518
00:21:15,305 --> 00:21:17,807
So really how you can make the most of what you have

519
00:21:17,847 --> 00:21:20,188
and make sure that there's no wastage with the resources that you have.

520
00:21:21,515 --> 00:21:23,396
And one of the first parts of this is utilization.

521
00:21:23,496 --> 00:21:25,537
You want to make sure that there's no gaps there,

522
00:21:25,577 --> 00:21:28,159
you know, in a really poorly laid out Tetris-style way.

523
00:21:28,479 --> 00:21:30,260
There's no gaps there where the blocks have stacked

524
00:21:30,300 --> 00:21:31,640
and there's no way you can get that used.

525
00:21:32,501 --> 00:21:35,402
But to be clear, utilization is not keeping everyone busy.

526
00:21:35,662 --> 00:21:37,323
Busyness has no intrinsic value.

527
00:21:37,343 --> 00:21:38,884
You want to make sure that everyone is working

528
00:21:38,924 --> 00:21:40,064
on furthering established goals.

529
00:21:40,745 --> 00:21:42,607
So obviously you need to communicate what those goals are,

530
00:21:42,947 --> 00:21:45,069
but there's no point having somebody sitting there just, you know,

531
00:21:45,109 --> 00:21:46,591
just busily going off in their own direction.

532
00:21:47,271 --> 00:21:49,293
And that doesn't mean you can't have, you know, more open goals.

533
00:21:49,313 --> 00:21:51,095
So for example, you know, Google 10% time,

534
00:21:51,135 --> 00:21:53,478
having something where it's much more open-ended of, you know,

535
00:21:53,518 --> 00:21:56,160
create something that has some kind of relevance to what it is that you do,

536
00:21:56,300 --> 00:21:59,123
or, you know, even your downtime work on improving the tools,

537
00:21:59,183 --> 00:22:01,466
but it's not about keeping everyone busy.

538
00:22:02,186 --> 00:22:09,495
And obviously utilization becomes harder as the team grows to tessellate all those different resources effectively and making sure there's no gaps is much harder

539
00:22:10,657 --> 00:22:17,425
And so yeah, this is especially pronounced when you're talking about multi-team obviously multi-team are some advantages and you can actually start moving resources from team to team

540
00:22:17,445 --> 00:22:20,128
But yeah, it becomes an increasingly complex problem

541
00:22:22,156 --> 00:22:24,197
So yeah, there's some additional challenges around this.

542
00:22:24,257 --> 00:22:26,438
So obviously, when you're moving between projects,

543
00:22:27,278 --> 00:22:29,999
it's hard, because generally, the early part of the project,

544
00:22:30,559 --> 00:22:31,339
the team is going to be smaller.

545
00:22:31,359 --> 00:22:32,320
If you're working in pre-production,

546
00:22:32,400 --> 00:22:34,140
and if you're a single studio, a single team studio,

547
00:22:34,180 --> 00:22:35,301
that's incredibly challenging.

548
00:22:36,721 --> 00:22:38,282
And it becomes more challenging, as I mentioned earlier,

549
00:22:38,302 --> 00:22:40,003
if you're working on multiple projects simultaneously.

550
00:22:40,763 --> 00:22:44,466
I mean, there are some changes that are coming in terms of the way that we make games that are making this a little bit easier.

551
00:22:44,646 --> 00:22:48,949
So living games, games as a service, has a different shape in terms of the product lifetime.

552
00:22:49,650 --> 00:22:54,073
So obviously when you launch the game the next, you know, few months, the next years, you know, after that,

553
00:22:54,734 --> 00:22:58,437
generally it turns out to be pretty steady. The work that you're going to be doing, it's not like classic game where you kind of

554
00:22:58,757 --> 00:23:02,560
launch the game, then you're back down to, you know, maybe doing patch release, but nothing really substantial.

555
00:23:02,960 --> 00:23:05,662
The nice thing about this is that the revenue should hopefully be stable or going up,

556
00:23:06,003 --> 00:23:08,044
and it means you can keep that team stable.

557
00:23:09,105 --> 00:23:10,685
Another option is to go for what we've done here,

558
00:23:10,765 --> 00:23:12,546
compact core team, where it means that you can just

559
00:23:12,626 --> 00:23:14,646
grow and shrink, grow and shrink, primarily by working

560
00:23:14,666 --> 00:23:17,307
with contractors that you need on a basis.

561
00:23:19,048 --> 00:23:20,828
So, questions to ask yourself around this.

562
00:23:20,908 --> 00:23:22,889
Are you able to utilize all your team efficiently?

563
00:23:22,989 --> 00:23:24,609
Is this something you have a plan for, or is this something

564
00:23:24,629 --> 00:23:26,670
you're able to create a plan for?

565
00:23:27,852 --> 00:23:29,472
Also, do you have a plan for overflow work

566
00:23:29,532 --> 00:23:30,912
if any team member completes their work?

567
00:23:31,213 --> 00:23:32,733
So can you have some secondary objectives

568
00:23:32,753 --> 00:23:35,534
that they can move on to once their work is completed?

569
00:23:35,654 --> 00:23:37,234
So it means you're not constantly having to think,

570
00:23:37,254 --> 00:23:38,695
how can I make that guy work there?

571
00:23:38,775 --> 00:23:40,755
How is she gonna be able to do something constructive?

572
00:23:41,695 --> 00:23:42,936
So yeah, those are two questions I think

573
00:23:42,956 --> 00:23:45,797
can really help guide you in terms of your utilization.

574
00:23:47,693 --> 00:23:50,355
So this is roughly how we were structured over the time of the project.

575
00:23:50,575 --> 00:23:54,318
So to start with, it was just myself and Miko working on the project.

576
00:23:54,358 --> 00:23:58,541
We then took on our 3D artist, and we started working with our level designers.

577
00:23:58,601 --> 00:24:00,542
This is really when we were prototyping, exploring the game,

578
00:24:00,562 --> 00:24:02,483
and working out what the game was really about.

579
00:24:02,503 --> 00:24:04,285
So the nice thing is at this stage, we were relatively compact.

580
00:24:04,325 --> 00:24:05,505
Our burn rate was relatively low.

581
00:24:05,826 --> 00:24:06,966
So it meant that we could experiment.

582
00:24:07,006 --> 00:24:09,688
We could fail. We could try things before we ended up going into production.

583
00:24:10,229 --> 00:24:12,389
We went into production, you can see it starts to spike,

584
00:24:12,549 --> 00:24:13,870
working with lots of different contractors.

585
00:24:13,910 --> 00:24:16,390
So, as you can see, the spike isn't as prolonged.

586
00:24:16,470 --> 00:24:18,111
You know, it moves down a little bit during production.

587
00:24:18,371 --> 00:24:19,591
There were some roles, like the music,

588
00:24:19,611 --> 00:24:21,692
the music was finished about a year before we launched.

589
00:24:22,312 --> 00:24:24,613
A lot of the writing was done, you know,

590
00:24:24,733 --> 00:24:25,613
relatively early on, then.

591
00:24:26,094 --> 00:24:27,856
Our writer Dan came back to help kind of, you know,

592
00:24:27,876 --> 00:24:29,558
wrap things up later on in production.

593
00:24:30,199 --> 00:24:32,523
But again, the benefits of working with freelancers

594
00:24:32,563 --> 00:24:34,005
allowed us to just have that kind of spike

595
00:24:34,025 --> 00:24:34,766
and then back down again.

596
00:24:35,166 --> 00:24:36,288
And now we're in the post-launch phase,

597
00:24:36,308 --> 00:24:38,551
where again, it's essentially just the core team

598
00:24:38,591 --> 00:24:40,273
maintaining the game, pushing updates,

599
00:24:40,313 --> 00:24:41,115
pushing out new content.

600
00:24:43,502 --> 00:24:45,184
So next I want to talk a little bit about communication

601
00:24:45,664 --> 00:24:47,426
and how that can drive efficiency for the project.

602
00:24:48,207 --> 00:24:49,928
And one of the most important parts of this is vision.

603
00:24:50,429 --> 00:24:52,591
Making sure that there's a shared ownership of that vision

604
00:24:52,611 --> 00:24:54,172
and that you've communicated what that vision is.

605
00:24:54,913 --> 00:24:56,695
And that also goes down to explaining to people

606
00:24:56,735 --> 00:24:58,437
why the work that they're doing is important

607
00:24:58,497 --> 00:25:02,020
and how that forms a part of the objectives

608
00:25:02,040 --> 00:25:03,201
and how that fits into the larger goal.

609
00:25:04,182 --> 00:25:09,123
And you tie it into that, you really want to make sure that people can be candid about, you know, any reservations they have about the work.

610
00:25:09,163 --> 00:25:13,825
If they don't understand what fits in, they don't understand what they should be doing, they're not going to be great.

611
00:25:13,865 --> 00:25:17,326
You know, if they don't believe in what it is that they're doing, then it's never going to work.

612
00:25:17,346 --> 00:25:23,388
And obviously, you know, that requires just, you know, effort to make sure that you're listening to them and to make sure that they're understanding

613
00:25:23,408 --> 00:25:25,589
and you're clear about your communication as to why they're doing this.

614
00:25:25,989 --> 00:25:30,571
If they don't understand why they're building, you know, the emotional model for this guinea pig in this particular farm team that they're doing,

615
00:25:30,591 --> 00:25:31,471
they don't think it will contribute.

616
00:25:31,831 --> 00:25:34,472
to the overall product itself, you need to explain to them why

617
00:25:34,492 --> 00:25:37,634
why it's important and why it does that. And I think that will really help motivate them

618
00:25:37,674 --> 00:25:41,156
and help them produce good work and understand how it fits into the overall project.

619
00:25:43,357 --> 00:25:46,259
And obviously this is, you know, much more of a case for core team members.

620
00:25:46,319 --> 00:25:49,561
Less so for contractors. Contractors generally, it can be

621
00:25:49,581 --> 00:25:52,402
a little bit less emphasis there in terms of making sure they understand

622
00:25:52,442 --> 00:25:56,064
the vision of the project. But you certainly need to communicate how their part will

623
00:25:56,424 --> 00:25:57,805
fit in to what you're doing.

624
00:25:59,925 --> 00:26:04,010
Um, meetings, again, in terms of communication, meetings can be a real efficiency killer.

625
00:26:04,330 --> 00:26:09,036
Um, you know, depending on, um, the nature of the way you work, um, it's, it, they can

626
00:26:09,056 --> 00:26:09,977
be a complete waste.

627
00:26:09,997 --> 00:26:15,164
I think really making sure that you are, um, careful about planning meetings, making sure

628
00:26:15,204 --> 00:26:17,567
they're short, making sure they're focused, making sure the people you invite...

629
00:26:18,247 --> 00:26:24,251
really needed. Because again, there's a context switch cost when you are going into a meeting,

630
00:26:24,331 --> 00:26:27,954
somebody might have spent the last hour just building up this incredibly complex mental model

631
00:26:27,994 --> 00:26:31,496
about an aspect of the design or the economy, you bring them to a meeting, that is gone.

632
00:26:32,977 --> 00:26:36,519
So, I mean, what we tend to do, and I'll go into a little bit of detail on that in a minute,

633
00:26:36,539 --> 00:26:39,401
is just have a meeting at the beginning of the day, set out objectives, and then shift to

634
00:26:39,421 --> 00:26:41,122
a little bit more just ad hoc communication.

635
00:26:42,142 --> 00:26:46,725
We use Slack for internal communication and just making sure that if something needs to be discussed, people are available

636
00:26:47,345 --> 00:26:50,707
to just talk through those issues together rather than forcing everyone together to go through that.

637
00:26:52,128 --> 00:26:54,710
We also have a challenge around the international way that we work.

638
00:26:54,890 --> 00:26:56,611
So Mikko is based in Finland.

639
00:26:57,732 --> 00:27:00,593
We're also working, as I mentioned, with contractors based in Belarus and Israel.

640
00:27:01,114 --> 00:27:03,575
And our publisher is based in Colorado.

641
00:27:04,035 --> 00:27:05,556
So yeah, there's a lot of different...

642
00:27:06,817 --> 00:27:10,998
factors in there. And I think the international working and working from home, that really requires trust.

643
00:27:11,478 --> 00:27:16,720
And it requires a really healthy working relationship. And it's something that I've been very lucky with Miko that it's been extremely healthy.

644
00:27:17,080 --> 00:27:21,121
But you need to have somebody that's self-motivated, somebody that's reliable, somebody that you can trust.

645
00:27:22,522 --> 00:27:25,523
And, you know, I think on their side as well, you need to make sure that they're comfortable doing it.

646
00:27:25,543 --> 00:27:30,724
Because, so Miko works, you know, primarily alone. And there's, you know, there's a lot of challenges around that.

647
00:27:31,264 --> 00:27:34,025
Around potential detachment, around loneliness. So you want to make sure that...

648
00:27:34,665 --> 00:27:36,906
that that's something that they're aware they're going in for.

649
00:27:38,586 --> 00:27:40,407
Also, yeah, communication with partners is vital.

650
00:27:40,987 --> 00:27:42,648
You need to make sure that you have clear communication,

651
00:27:43,008 --> 00:27:45,928
clear shared objectives, and clear vision for where the game's going,

652
00:27:45,968 --> 00:27:47,649
about how you're going to help, how you're going to solve problems.

653
00:27:48,869 --> 00:27:51,910
And again, if you feel like early on, early discussions, early negotiations,

654
00:27:52,290 --> 00:27:53,811
you feel like there's some issues there,

655
00:27:53,851 --> 00:27:55,471
you feel like communication isn't very clear,

656
00:27:55,751 --> 00:27:56,691
that should be a red alert.

657
00:27:56,791 --> 00:27:58,952
So if there's early stages of negotiations, if they're not getting back,

658
00:27:59,292 --> 00:28:01,333
obviously that problem's going to be massively amplified

659
00:28:01,373 --> 00:28:03,893
when you actually have some real problems to contend with.

660
00:28:04,554 --> 00:28:07,254
If they're not there and they're not able to jump on and help you resolve those problems,

661
00:28:07,294 --> 00:28:09,395
then yeah, definitely read a lot early on.

662
00:28:10,955 --> 00:28:11,755
And also community.

663
00:28:11,775 --> 00:28:14,776
You know, community, communication with the community is so, so valuable.

664
00:28:14,796 --> 00:28:17,016
It's something that we found with the soft launch of Seabeard.

665
00:28:17,677 --> 00:28:20,477
We really wanted to engage and find out what people found frustrating.

666
00:28:20,597 --> 00:28:23,878
So we were doing that from day one on forums, through Touch Arcade and various other forums

667
00:28:23,938 --> 00:28:25,918
online, communicating with people on Twitter.

668
00:28:26,599 --> 00:28:29,241
on Facebook and just finding out what they enjoyed, what they wanted more of.

669
00:28:29,922 --> 00:28:33,245
This is especially applicable for games as a service. It allows you to really direct

670
00:28:34,406 --> 00:28:37,088
what you create in terms of content, almost from there.

671
00:28:37,628 --> 00:28:40,851
So for us, community engagement helps us raise the average review score of

672
00:28:40,891 --> 00:28:41,772
CBID and SoftLaunch from 3.0

673
00:28:41,812 --> 00:28:41,852
to 4.55.

674
00:28:44,814 --> 00:28:47,136
And it helped us remove a lot of issues that we had around.

675
00:28:47,156 --> 00:28:50,318
We had a very frustrating energy mechanic early on that we just ripped out entirely.

676
00:28:50,698 --> 00:28:53,760
And a lot of that was just really just listening to players and understanding how we could adapt it

677
00:28:53,800 --> 00:28:55,982
to make it more suited to the way that they play.

678
00:28:56,042 --> 00:28:59,644
You know, we had ideas in our head of how we thought people would play the game,

679
00:28:59,984 --> 00:29:01,065
and they weren't entirely accurate.

680
00:29:01,125 --> 00:29:03,026
So, yeah, people wanted to play for much longer sessions.

681
00:29:03,727 --> 00:29:06,028
And that community outreach really enabled us to take that on.

682
00:29:06,963 --> 00:29:08,206
But obviously one size does not fit all.

683
00:29:08,266 --> 00:29:09,228
You know, depending on the game,

684
00:29:09,749 --> 00:29:11,131
depending on the project, depending on your team

685
00:29:11,252 --> 00:29:13,236
and your makeup, I think you really need to find

686
00:29:13,256 --> 00:29:14,498
a communication style that works for you.

687
00:29:15,382 --> 00:29:16,803
So questions to ask yourself.

688
00:29:17,423 --> 00:29:18,985
First of all, do your team understand the vision?

689
00:29:19,445 --> 00:29:20,466
Have you been really clear with them?

690
00:29:20,546 --> 00:29:22,848
Do they understand, you know, if it's clear that there's just

691
00:29:22,868 --> 00:29:24,589
something going on there and they're not really getting it

692
00:29:24,609 --> 00:29:28,072
and repeatedly just not really pulling in that direction,

693
00:29:28,112 --> 00:29:30,454
then there's something you need to address.

694
00:29:30,494 --> 00:29:31,715
Similarly, do they all understand the importance of

695
00:29:31,735 --> 00:29:32,435
their individual work?

696
00:29:32,736 --> 00:29:34,697
How does that tie into the overall vision?

697
00:29:34,717 --> 00:29:36,318
Do they understand why it's important that they work on

698
00:29:36,338 --> 00:29:36,999
this particular thing?

699
00:29:38,187 --> 00:29:39,528
Have your team had a chance to feedback?

700
00:29:40,289 --> 00:29:42,250
You know, are you giving them opportunities to feedback

701
00:29:42,290 --> 00:29:43,611
or are you just generally unavailable

702
00:29:43,651 --> 00:29:44,651
for them to come talk to you?

703
00:29:44,991 --> 00:29:46,312
You know, you could do it in a more formal way

704
00:29:46,332 --> 00:29:47,553
of just saying, you know, on Monday mornings

705
00:29:47,573 --> 00:29:48,634
you have like 10, 15 minutes

706
00:29:48,674 --> 00:29:49,594
where anyone can come talk to you.

707
00:29:49,955 --> 00:29:51,676
Or just in a more ad hoc way,

708
00:29:51,716 --> 00:29:52,976
just make sure that you have a temperament

709
00:29:53,016 --> 00:29:56,218
that is, you know, obviously available to them.

710
00:29:58,261 --> 00:29:59,582
Do you have clear channels with your partners?

711
00:29:59,662 --> 00:30:01,884
You know, making sure that communication is healthy, open, and clear.

712
00:30:01,904 --> 00:30:03,726
And similarly with the community.

713
00:30:03,766 --> 00:30:05,608
Do you make sure that they have a way of getting in contact with you?

714
00:30:05,688 --> 00:30:08,030
Are you listening to them or do you just have an arbitrary Facebook page

715
00:30:08,070 --> 00:30:09,572
that you never update and never check?

716
00:30:14,676 --> 00:30:16,318
And I'm hoping it's going to go to the next slide.

717
00:30:18,849 --> 00:30:20,951
Yeah, so internal communication at Handsoakers,

718
00:30:21,491 --> 00:30:23,333
we cook up every day with a scrum meeting, 15 minute,

719
00:30:24,153 --> 00:30:25,834
just catch up what everyone's working on,

720
00:30:25,954 --> 00:30:27,636
what the challenges are, any blockages that they have.

721
00:30:28,356 --> 00:30:29,737
We can talk through that and really help to, I think,

722
00:30:29,857 --> 00:30:31,719
make sure that everyone is clear on their communication,

723
00:30:31,759 --> 00:30:32,799
understands what everyone is doing.

724
00:30:33,120 --> 00:30:34,220
And I think that's increasingly valuable

725
00:30:34,240 --> 00:30:35,261
when you have a distributed team,

726
00:30:35,601 --> 00:30:37,063
as it helps keep everyone on board

727
00:30:37,183 --> 00:30:38,163
and pulling in the same direction.

728
00:30:38,883 --> 00:30:39,685
We use Pivotal Tracker.

729
00:30:39,885 --> 00:30:42,789
We use this primarily as a way of, well,

730
00:30:42,829 --> 00:30:43,570
for project management.

731
00:30:43,650 --> 00:30:44,771
It's an agile project management tool.

732
00:30:45,392 --> 00:30:48,236
And that, again, helps with our internationally distributed way

733
00:30:48,276 --> 00:30:48,737
that we work.

734
00:30:49,097 --> 00:30:50,599
So Ben also works from home for two days

735
00:30:51,340 --> 00:30:53,122
as a central location to see what everyone else is working

736
00:30:53,243 --> 00:30:55,586
on to manage the various user stories that they're tackling.

737
00:30:57,124 --> 00:31:00,125
We also use Slack, like I think pretty much everyone now, for internal communication,

738
00:31:00,426 --> 00:31:01,986
and that has been extremely good for us.

739
00:31:02,406 --> 00:31:06,808
Just great, again, to collaborate on a regular basis, show concept art, show work in progress,

740
00:31:06,828 --> 00:31:11,130
show videos, which you can't do if you're not located in the same location.

741
00:31:11,450 --> 00:31:17,572
Google Docs, we use Fog Bugs for tracking QA, and all of this is supplemented with Trips,

742
00:31:17,732 --> 00:31:18,693
so we make sure that...

743
00:31:19,453 --> 00:31:22,835
MECO comes over semi-regularly, anytime we begin a new phase of work,

744
00:31:23,195 --> 00:31:27,318
or anytime that we are tackling maybe a major problem or shifting,

745
00:31:27,518 --> 00:31:29,760
or something where it really requires its presence,

746
00:31:29,800 --> 00:31:33,642
and that kind of helps top it up, so it's not complete remote working all the time.

747
00:31:35,334 --> 00:31:37,717
So, yeah, next I want to move on to risk management.

748
00:31:38,077 --> 00:31:39,599
So this is, again, is a key part of making sure

749
00:31:39,619 --> 00:31:40,640
that you don't have any wastage,

750
00:31:40,760 --> 00:31:42,422
or at least you have minimal wastage.

751
00:31:43,884 --> 00:31:45,285
So, yeah, you really want to make sure,

752
00:31:45,325 --> 00:31:47,047
if you're creating something that's innovative,

753
00:31:47,067 --> 00:31:48,849
you're making something new, there is going to be wastage.

754
00:31:48,889 --> 00:31:50,270
Some of those amazing ideas in your head.

755
00:31:50,771 --> 00:31:52,792
When you put them down, when you try them out, they're not going to work.

756
00:31:52,812 --> 00:31:56,075
So you want to make sure, you know, there's a classic Silicon Valley saying of

757
00:31:56,155 --> 00:31:58,757
fail early, fail often, and it's definitely true in games.

758
00:31:58,777 --> 00:32:01,879
If you're doing something innovative, you don't want to get to the point where you're in the game and you're like,

759
00:32:02,159 --> 00:32:05,061
this game is terrible. We need to rip out this feature, rip out this feature,

760
00:32:05,081 --> 00:32:08,844
and all those beautiful production-level assets you've created are completely wasted.

761
00:32:09,465 --> 00:32:12,026
So, yeah, catching that early is very, very important.

762
00:32:13,230 --> 00:32:16,253
So risk mitigation, risk mitigation pre-production

763
00:32:16,273 --> 00:32:17,694
in the early phase of the game, for me,

764
00:32:17,734 --> 00:32:18,614
it's all about prototypes.

765
00:32:18,915 --> 00:32:20,916
It's about trying things out, seeing if they work,

766
00:32:20,956 --> 00:32:22,177
and find out if that idea in your head

767
00:32:22,697 --> 00:32:23,798
is a great idea after all.

768
00:32:23,898 --> 00:32:26,380
So it doesn't need to be a digital prototype.

769
00:32:26,420 --> 00:32:27,681
It doesn't need to be a playable prototype.

770
00:32:27,961 --> 00:32:28,782
You can do it with paper.

771
00:32:29,222 --> 00:32:31,324
It can be maybe a couple of days of work,

772
00:32:31,384 --> 00:32:32,825
maybe a game jam to have a look around

773
00:32:33,085 --> 00:32:34,426
different ideas that you might have in the game.

774
00:32:35,887 --> 00:32:36,688
Prototypes are awesome.

775
00:32:36,768 --> 00:32:39,050
We've been using them extensively for all the games that we've developed.

776
00:32:39,851 --> 00:32:43,114
And it really, again, just helps crystallize ideas as well as leading to additional ideas.

777
00:32:43,454 --> 00:32:46,717
You know, one idea, one prototype might be a complete failure, it might not work at all,

778
00:32:46,777 --> 00:32:48,418
but that'll lead on to something else.

779
00:32:48,479 --> 00:32:51,741
And just playing with that and having something you can kind of tinker with and tweak just

780
00:32:51,781 --> 00:32:54,544
gives you the opportunity to lead on to new things.

781
00:32:55,989 --> 00:32:58,431
So when you're in production, use testing.

782
00:32:58,611 --> 00:32:59,751
Use testing is hugely valuable.

783
00:33:00,072 --> 00:33:02,193
Encourage people to just tear it apart.

784
00:33:02,273 --> 00:33:04,014
Get them to sit down to play it and be candid.

785
00:33:04,074 --> 00:33:05,295
Don't be sensitive.

786
00:33:05,735 --> 00:33:07,696
Don't just sit there and tell them,

787
00:33:07,716 --> 00:33:09,337
you've got to be doing this or you should be doing this.

788
00:33:09,677 --> 00:33:11,658
The whole point of this is to see where their frustrations are.

789
00:33:12,039 --> 00:33:14,000
So we work with an amazing company called Player Research.

790
00:33:14,240 --> 00:33:16,101
They're based out in Brighton in the UK.

791
00:33:16,241 --> 00:33:18,202
And they did the whole one day of testing

792
00:33:18,242 --> 00:33:20,924
behind a mirrored wall, where you just

793
00:33:20,944 --> 00:33:24,045
get to see completely unfiltered frustrations of the player

794
00:33:24,146 --> 00:33:24,646
playing through it.

795
00:33:24,986 --> 00:33:29,334
At the end we got a report and we pushed almost all those findings into the game.

796
00:33:29,354 --> 00:33:32,219
That was hugely valuable for us to really see early on, catch things early on.

797
00:33:32,239 --> 00:33:35,044
I think it was about a year before we launched where those frustrations are.

798
00:33:37,193 --> 00:33:40,335
And then pre-launch, yeah, soft launch, analytics, community engagement.

799
00:33:41,416 --> 00:33:44,439
This is incredibly valuable, as I said again before,

800
00:33:44,479 --> 00:33:47,181
just making sure that before you launch, things are kind of ticking along nicely,

801
00:33:47,241 --> 00:33:50,764
they're working well, and that you can fix the kind of big, big problems that you have,

802
00:33:51,485 --> 00:33:54,607
which you most likely will have if it's, again, if you're doing something new.

803
00:33:55,468 --> 00:33:56,929
So that's, yeah, incredibly valuable.

804
00:33:57,710 --> 00:33:59,833
So questions to ask yourself around this.

805
00:34:01,254 --> 00:34:02,936
What are the biggest areas of uncertainty?

806
00:34:03,157 --> 00:34:04,999
Is there anything in the project you're looking at and you're like,

807
00:34:05,019 --> 00:34:09,324
you know what, I really just have no idea how that's going to work,

808
00:34:09,445 --> 00:34:13,229
or we've got this technical solution and we think that we can have this way

809
00:34:13,269 --> 00:34:15,372
that it's going to work and scale in terms of connection to the database?

810
00:34:15,792 --> 00:34:18,195
If you have any questions or any areas you're just really not sure about,

811
00:34:18,215 --> 00:34:20,919
this is what you should be prototyping, doing technical spikes on,

812
00:34:21,680 --> 00:34:23,782
and really prioritizing that above all the other work.

813
00:34:23,842 --> 00:34:26,165
Because if you don't resolve those issues earlier on,

814
00:34:26,225 --> 00:34:28,488
obviously you're going to go down the route of producing production assets,

815
00:34:28,548 --> 00:34:30,871
producing things that may not make it into the final game.

816
00:34:33,276 --> 00:34:35,578
And then, yeah, taking a look at what will be...

817
00:34:35,778 --> 00:34:37,779
At what point will the project be ready for user testing?

818
00:34:38,380 --> 00:34:40,261
So the guys from Play Research, you know, they're always saying,

819
00:34:40,401 --> 00:34:41,902
just get in as early as possible.

820
00:34:42,022 --> 00:34:43,563
You know, they will test on paper,

821
00:34:43,623 --> 00:34:45,585
they will test very, very early prototypes.

822
00:34:45,625 --> 00:34:48,166
I think there's less value taking it to user testing

823
00:34:48,206 --> 00:34:50,068
when you are, like, two months away

824
00:34:50,128 --> 00:34:52,169
because there's not that much that you can change.

825
00:34:52,189 --> 00:34:53,370
I mean, there's still some stuff,

826
00:34:53,510 --> 00:34:55,191
but, yeah, you want to get in as early as possible.

827
00:34:56,576 --> 00:34:59,338
And then lastly, how long do you need to validate the game and beat a soft launch?

828
00:34:59,438 --> 00:35:03,561
So again, the more new, the more innovative, the less you can reference other games,

829
00:35:04,141 --> 00:35:05,502
the longer you need that soft launch to be.

830
00:35:05,623 --> 00:35:09,926
So have a think about that and plan accordingly to make sure that you have a soft launch that suits the title.

831
00:35:11,791 --> 00:35:14,313
So for us at HandCircus, as I mentioned before,

832
00:35:14,574 --> 00:35:16,936
it's all been about prototypes in pre-production.

833
00:35:16,956 --> 00:35:20,759
So the early versions of Seabird were absolutely bizarre

834
00:35:20,799 --> 00:35:22,140
and bear almost no resemblance.

835
00:35:22,180 --> 00:35:24,882
They're actually a little bit further on than the game is now.

836
00:35:25,223 --> 00:35:26,924
The first prototype was a game where

837
00:35:26,944 --> 00:35:29,627
you paint paths to lead goats around an environment,

838
00:35:29,647 --> 00:35:31,228
and then the goats stack on top of each other.

839
00:35:31,248 --> 00:35:33,310
And then we're working on this other prototype

840
00:35:33,330 --> 00:35:34,891
that was about stealing from your friends

841
00:35:34,931 --> 00:35:35,752
and pickpocketing them.

842
00:35:36,172 --> 00:35:41,756
and the two just kind of naturally evolved and just became this other game and this other prototype itself.

843
00:35:42,136 --> 00:35:46,178
So yeah, for us it's not just a way of mitigating risk, it's also a source of inspiration.

844
00:35:46,539 --> 00:35:47,919
So that's been, yeah, a huge win for us.

845
00:35:48,240 --> 00:35:51,662
As I mentioned before, user testing with player research, very, very valuable.

846
00:35:51,722 --> 00:35:56,585
Just sitting down and watching people's frustrations just provides so much information, so much guidance.

847
00:35:57,005 --> 00:36:01,187
As you know, if a handful of seven people see it, by the time you're talking about millions of users,

848
00:36:01,227 --> 00:36:03,009
that problem is massively amplified.

849
00:36:03,029 --> 00:36:04,750
So catch it early and fix it early.

850
00:36:05,958 --> 00:36:08,499
And then we used Localytics for our analytics package.

851
00:36:08,519 --> 00:36:10,120
And that's been great for us just to really dig in

852
00:36:10,160 --> 00:36:12,601
and understand where pinch points are in terms of the file,

853
00:36:12,641 --> 00:36:13,902
where people are dropping out of the game.

854
00:36:14,242 --> 00:36:15,623
And again, what people are spending money on.

855
00:36:16,083 --> 00:36:17,384
You know, there's a certain amount of information

856
00:36:17,404 --> 00:36:18,925
that you can get from engaging with the community.

857
00:36:19,365 --> 00:36:21,987
But that needs to be complemented with hard analytics.

858
00:36:22,047 --> 00:36:24,948
So one of the things that we found after global launch

859
00:36:24,988 --> 00:36:28,350
is how little people were spending on cosmetic items.

860
00:36:28,450 --> 00:36:29,971
So we assumed we could have a little bit

861
00:36:29,991 --> 00:36:31,011
of like an Animal Crossing vibe.

862
00:36:31,792 --> 00:36:34,835
to some extent in our game, and we thought that customization was going to be huge.

863
00:36:35,275 --> 00:36:39,198
So that led to us looking into the analytics and just seeing this is just not really selling,

864
00:36:39,539 --> 00:36:43,582
and then modifying the game to basically give all the cosmetic items a functional upgrade

865
00:36:43,602 --> 00:36:45,204
as well for a badge system.

866
00:36:45,224 --> 00:36:46,225
And that's been a huge win for us.

867
00:36:46,245 --> 00:36:49,868
So paying close attention to analytics and making sure that you have that well instrumented

868
00:36:49,908 --> 00:36:51,709
to be able to ask the questions that you need.

869
00:36:53,616 --> 00:36:55,857
So now I want to talk a little bit about technical considerations.

870
00:36:55,897 --> 00:36:58,479
So things that you can do when you're planning out the tech and tools

871
00:36:58,679 --> 00:37:01,021
for your project to make sure again that there's little wastage

872
00:37:01,041 --> 00:37:04,143
and you're really kind of turbocharging the resources that you have.

873
00:37:05,403 --> 00:37:07,024
So one of the first things here is ArtPipeline.

874
00:37:07,445 --> 00:37:11,767
With Occaboom, with the PS3 game that we did,

875
00:37:12,088 --> 00:37:13,629
the ArtPipeline was gruesome.

876
00:37:13,669 --> 00:37:14,849
It was absolutely horrible.

877
00:37:14,869 --> 00:37:17,931
You had to export, there were all these like text files you had to copy and paste

878
00:37:17,971 --> 00:37:21,173
and then if we wanted to actually try it on PS3, we had to do a complete new build.

879
00:37:21,794 --> 00:37:23,976
So I mean the iteration time was really, really long.

880
00:37:24,436 --> 00:37:27,779
And I think, you know, great work usually results from being able to experiment and

881
00:37:27,819 --> 00:37:29,380
tinker and have fast iteration.

882
00:37:29,400 --> 00:37:34,565
You know, if you're using existing engines like, you know, like Unity, this problem is

883
00:37:34,605 --> 00:37:35,285
pretty much solved.

884
00:37:35,305 --> 00:37:38,909
I mean it's incredible the fact that you can just go in and update 3D assets, update textures,

885
00:37:38,969 --> 00:37:41,491
update sounds, and they just get updated in real time.

886
00:37:41,531 --> 00:37:44,693
So you know, depending whether or not you're building like everything from scratch, this

887
00:37:44,714 --> 00:37:47,336
is a real key consideration to making sure there's no wastage on the artist side.

888
00:37:47,676 --> 00:37:51,338
and making sure they can see an engine themselves rather than having to hand it over and then see it on another screen.

889
00:37:51,678 --> 00:37:54,120
Again, just tightens up the iteration loop as much as possible.

890
00:37:55,981 --> 00:37:57,202
Another thing is build pipelines.

891
00:37:57,282 --> 00:37:59,283
So, yeah, builds can take a while.

892
00:37:59,883 --> 00:38:04,066
Builds can be inconsistent if you're going through and like checking various check boxes to make sure that it matches.

893
00:38:04,426 --> 00:38:05,046
You make mistakes.

894
00:38:05,126 --> 00:38:07,348
So we automated the build pipeline on our side.

895
00:38:07,408 --> 00:38:09,309
So we used TeamCity.

896
00:38:10,029 --> 00:38:13,511
We had a spare machine and we had TeamCity to build a builds minion.

897
00:38:14,052 --> 00:38:15,733
And this was great for us.

898
00:38:15,873 --> 00:38:17,575
Saved a whole bunch of time on Ben's side.

899
00:38:17,595 --> 00:38:19,757
You know, every time it was taking like an hour or two

900
00:38:19,777 --> 00:38:22,240
to get everything built up and push everything to test fly,

901
00:38:22,700 --> 00:38:24,522
create bespoke Xcode projects.

902
00:38:25,263 --> 00:38:26,184
So that was a huge win.

903
00:38:26,264 --> 00:38:27,245
The nice thing as well, obviously,

904
00:38:27,265 --> 00:38:28,886
it will test and check your code for you

905
00:38:28,926 --> 00:38:31,008
and then email anyone that's put anything bad into it.

906
00:38:32,490 --> 00:38:34,652
We also had it so it tested and checked data and assets.

907
00:38:34,672 --> 00:38:35,833
And I'll go into that a little bit in a minute.

908
00:38:36,113 --> 00:38:37,194
It wasn't just the code itself.

909
00:38:37,234 --> 00:38:38,856
We made sure that if somebody had accidentally deleted

910
00:38:38,876 --> 00:38:41,118
that was something that was vital for mission progression,

911
00:38:41,138 --> 00:38:42,179
it would get alerted.

912
00:38:42,459 --> 00:38:44,781
So it really helped reduce the number of errors

913
00:38:44,821 --> 00:38:47,084
and the amount of fixes that we'd have to do

914
00:38:47,104 --> 00:38:48,105
when we got through the QA side.

915
00:38:49,463 --> 00:38:51,305
So yeah, it really felt like we'd hired an extra employee

916
00:38:51,325 --> 00:38:52,066
and we got this all running.

917
00:38:52,386 --> 00:38:54,408
The nice thing is, you know, Unity is starting to add this

918
00:38:54,448 --> 00:38:55,870
into their service as well.

919
00:38:55,950 --> 00:38:59,433
So these Unity Cloud Bills that they've recently announced,

920
00:38:59,453 --> 00:39:00,014
for instance, we pushed.

921
00:39:00,354 --> 00:39:01,275
And this means you don't even need

922
00:39:01,295 --> 00:39:02,176
to configure your own machine.

923
00:39:02,236 --> 00:39:04,138
It's all in the cloud and it'll handle the various bills

924
00:39:04,178 --> 00:39:05,940
of various platforms yourself for you.

925
00:39:06,000 --> 00:39:07,782
So that's, again, a huge win in terms of productivity.

926
00:39:08,815 --> 00:39:12,940
So tying into that middleware, this really depends, you know, on the nature of the project.

927
00:39:14,201 --> 00:39:17,284
Do you need to build this yourself or is it much easier just going and buying something

928
00:39:17,304 --> 00:39:17,765
off the shelf?

929
00:39:18,525 --> 00:39:21,248
So are you creating a title that requires bespoke tech?

930
00:39:21,288 --> 00:39:25,693
It might be that the tech you use in your game is something that's a real kind of centerpiece,

931
00:39:25,733 --> 00:39:29,437
something that's very unusual, something that's very kind of core to the experience, something

932
00:39:29,457 --> 00:39:30,358
you can't get off the shelf.

933
00:39:30,718 --> 00:39:34,599
You know, so for example, like, you know, the kind of the amazing procedural environments in No Man's Sky,

934
00:39:35,739 --> 00:39:38,280
or, you know, the kind of the voxel landscape in Minecraft,

935
00:39:38,360 --> 00:39:40,561
a lot of that is not really something you get off the shelf.

936
00:39:40,981 --> 00:39:44,482
If you've got a tech-heavy team and you really feel like you want to make your game

937
00:39:44,802 --> 00:39:46,782
distinguished by tech or by particular features,

938
00:39:47,122 --> 00:39:49,783
it might be that you're better off building the whole thing yourself.

939
00:39:50,703 --> 00:39:55,365
On the other side, though, if you're a very design or art-led team,

940
00:39:55,725 --> 00:39:58,206
it makes more sense for you to get something off the shelf.

941
00:39:58,266 --> 00:39:59,406
That's not really a specialization.

942
00:40:00,708 --> 00:40:03,592
And obviously you need to measure off the cost of license versus cost of internal development.

943
00:40:04,193 --> 00:40:05,355
How much would it cost you to do this?

944
00:40:05,395 --> 00:40:10,122
You know, we use Unity, and for us, it means that we have, you know, this incredible expertise

945
00:40:10,162 --> 00:40:13,567
of people that would produce better code than we possibly could in terms of rendering, in terms of animation.

946
00:40:14,048 --> 00:40:15,370
So, for us, yeah, it's a no-brainer.

947
00:40:16,511 --> 00:40:18,534
And the last thing is, again, if you're licensing,

948
00:40:18,574 --> 00:40:19,836
you get ongoing maintenance costs.

949
00:40:19,876 --> 00:40:21,599
So you're not having to fix up the engine

950
00:40:21,639 --> 00:40:22,841
for every new release of iOS.

951
00:40:22,861 --> 00:40:25,084
You're not having to fix up any time new things are

952
00:40:25,104 --> 00:40:26,105
introduced that break things.

953
00:40:26,686 --> 00:40:28,569
You're basically getting an ongoing maintenance contract

954
00:40:28,589 --> 00:40:30,211
with that as well that has huge value.

955
00:40:31,173 --> 00:40:33,135
So as I was saying, we're using Unity for pretty much everything.

956
00:40:33,195 --> 00:40:36,418
We used it for the creation of the game itself, the game itself runs in Unity, but also we

957
00:40:36,638 --> 00:40:40,181
had a lot of time that we invested in terms of extending the game, the engine itself,

958
00:40:40,201 --> 00:40:42,464
with a lot of bespoke tools that we used to create level design.

959
00:40:43,505 --> 00:40:46,728
We use it for content management, so we have bespoke tools to handle things like accessories,

960
00:40:46,888 --> 00:40:50,091
items, things like that, and obviously for testing and debugging.

961
00:40:52,387 --> 00:40:56,409
So on the test side, yes, so we use tests quite extensively in the game.

962
00:40:57,410 --> 00:41:01,653
We use it for testing the consistency of the data itself.

963
00:41:01,673 --> 00:41:03,675
So say for example, I don't know how many of you have played CBID,

964
00:41:04,075 --> 00:41:05,756
but if you play through the game, you have a smuggle request.

965
00:41:05,776 --> 00:41:07,537
So every island needs to have a smuggle receiver.

966
00:41:07,557 --> 00:41:08,098
It will generate...

967
00:41:08,418 --> 00:41:11,141
a random quest that will pick one of the various smuggler receivers in the game.

968
00:41:11,561 --> 00:41:15,326
We need to make sure that we have shakable trees that we can hide lost items in.

969
00:41:15,626 --> 00:41:16,988
All these little things are kind of intrinsic.

970
00:41:17,008 --> 00:41:20,331
And if somebody goes through and like starts deleting these by accident and pushes it,

971
00:41:20,351 --> 00:41:23,014
they'll be notified by the build server saying something has broken.

972
00:41:24,035 --> 00:41:24,996
which has been great for us.

973
00:41:25,036 --> 00:41:28,739
It also makes sure it goes through and checks for any inconsistencies,

974
00:41:29,079 --> 00:41:31,561
missing dialogue keys in various languages.

975
00:41:32,342 --> 00:41:35,524
And this just, I think, cut down a lot of the issues that we would have found later on

976
00:41:35,864 --> 00:41:38,086
because we knew that we were pretty sure about all this data.

977
00:41:38,106 --> 00:41:39,487
It didn't need to be tested by hand.

978
00:41:42,313 --> 00:41:44,754
So yeah, a question to ask yourself when you're planning out tests for the game.

979
00:41:45,594 --> 00:41:48,576
What future issues can be spotted by creating tests now?

980
00:41:49,176 --> 00:41:51,237
So yeah, when you're going through the game, you might think,

981
00:41:51,257 --> 00:41:53,478
you know what, this is like, this is a huge risk here.

982
00:41:54,098 --> 00:41:56,980
For example, like, if we accidentally delete these objects there,

983
00:41:57,120 --> 00:41:59,741
or if there's a lot of stuff, like, to manually check through,

984
00:41:59,761 --> 00:42:01,102
this is going to take a huge amount of time.

985
00:42:01,522 --> 00:42:04,203
Have a think about what future issues can be spotted by creating these tests.

986
00:42:04,763 --> 00:42:05,404
Put that in the plan.

987
00:42:06,184 --> 00:42:09,148
Also, really consider the cost of automated versus manual test.

988
00:42:09,208 --> 00:42:12,532
If there's one particular aspect that's going to be incredibly complicated for right or

989
00:42:12,552 --> 00:42:16,157
a mess test for, but it's something you only need to, it might take half an hour to test

990
00:42:16,197 --> 00:42:16,897
manually each time.

991
00:42:17,338 --> 00:42:19,881
Obviously, there's, you know, that's a false economy and it's not something you'd really

992
00:42:19,901 --> 00:42:20,582
want to go ahead with.

993
00:42:20,942 --> 00:42:24,227
So, really consider what the implications are of developing the automated test and whether

994
00:42:24,247 --> 00:42:25,108
or not it's really worth doing.

995
00:42:27,511 --> 00:42:30,734
And, you know, tied into that, what information is required in the report to fix?

996
00:42:30,754 --> 00:42:33,537
You know, it's great that you found this error, but you want to be as verbose as possible

997
00:42:33,577 --> 00:42:36,620
and deliver back to the person that caused this issue what the fix is.

998
00:42:37,040 --> 00:42:41,624
So it's no use saying, like, a particular grid coordinate or an ID of an object has disappeared.

999
00:42:42,265 --> 00:42:46,008
You want to make sure the information is there for the person to go through and fix that themselves.

1000
00:42:48,298 --> 00:42:50,158
So now I want to talk a little bit about servers.

1001
00:42:50,178 --> 00:42:51,779
So CBID was our first online game.

1002
00:42:52,339 --> 00:42:54,599
And for us, having not had a lot of online experience,

1003
00:42:54,939 --> 00:42:56,340
it was a real question as to whether or not

1004
00:42:56,400 --> 00:42:58,840
we wanted to host the servers ourselves,

1005
00:42:58,960 --> 00:43:00,541
how we wanted to do that, and whether or not

1006
00:43:00,561 --> 00:43:02,161
we wanted to bring that knowledge in-house.

1007
00:43:03,081 --> 00:43:04,342
There's obviously a lot of options out there

1008
00:43:04,382 --> 00:43:08,062
which will take care of either a lot or a little of the overhead

1009
00:43:08,122 --> 00:43:08,502
for you.

1010
00:43:08,763 --> 00:43:11,843
And obviously, the more that you farm out and get

1011
00:43:11,863 --> 00:43:14,764
other people to look after, the more expensive it is.

1012
00:43:14,884 --> 00:43:16,864
But you have to balance that with the cost of hiring

1013
00:43:16,904 --> 00:43:17,905
a specialist knowledge yourself.

1014
00:43:18,785 --> 00:43:21,709
So the questions you want to ask yourself when you're planning out your server solution,

1015
00:43:21,749 --> 00:43:25,294
if you're doing a server-based game, are there any advantages in managing the server yourself?

1016
00:43:25,394 --> 00:43:27,557
It might be that you actually need to host the server yourself,

1017
00:43:27,677 --> 00:43:33,304
various, you know, data compliance rules, or privacy, but in most cases, it's probably unlikely.

1018
00:43:35,173 --> 00:43:37,055
Do you want or need a full-time sysadmin?

1019
00:43:37,155 --> 00:43:39,878
Again, one of our objectives was to keep the team really lean.

1020
00:43:40,879 --> 00:43:42,440
There wasn't really a huge need for that,

1021
00:43:42,620 --> 00:43:44,242
and they weren't going to be needed full-time.

1022
00:43:44,282 --> 00:43:45,303
There wasn't that much work there.

1023
00:43:45,804 --> 00:43:47,125
So that was pretty much a no-brainer.

1024
00:43:47,886 --> 00:43:50,568
Also, it might be that you don't even need to write the server code yourself.

1025
00:43:50,608 --> 00:43:52,990
There's a lot of commoditized services that are starting to come out there

1026
00:43:53,271 --> 00:43:54,672
that offer a more kind of general solution

1027
00:43:54,692 --> 00:43:57,094
that's totally fine for a lot of the games that you make.

1028
00:43:57,495 --> 00:43:59,779
So PlayFab is one relatively recently announced

1029
00:44:00,741 --> 00:44:02,725
where they'll offer something which will provide

1030
00:44:02,745 --> 00:44:04,769
a lot of things around currency, around in-app purchase,

1031
00:44:04,789 --> 00:44:07,454
around inventory, that means that you don't need

1032
00:44:07,474 --> 00:44:09,679
to create that yourself, and again, saves you resources.

1033
00:44:13,066 --> 00:44:16,487
So for us, we used Google App Engine for CBID.

1034
00:44:16,587 --> 00:44:17,507
This was fantastic.

1035
00:44:17,567 --> 00:44:19,407
It meant that we didn't need to do any administration

1036
00:44:19,427 --> 00:44:19,807
ourselves.

1037
00:44:20,107 --> 00:44:24,188
We effectively outsourced all the sysadmin work to Google.

1038
00:44:24,328 --> 00:44:25,668
The server development, you probably

1039
00:44:25,708 --> 00:44:27,489
saw in the earlier slide, that was outsourced as well.

1040
00:44:27,549 --> 00:44:29,509
So we worked with a specialist, a company called Lost Property,

1041
00:44:29,889 --> 00:44:32,770
and they handled all of the server development for us.

1042
00:44:33,130 --> 00:44:34,770
They're also great in terms of responding

1043
00:44:34,810 --> 00:44:35,590
to issues that we had.

1044
00:44:35,650 --> 00:44:37,711
So around launch, we had obviously

1045
00:44:37,731 --> 00:44:39,311
a massive, massive spike in traffic.

1046
00:44:40,271 --> 00:44:42,092
And when we were heading above a certain threshold request,

1047
00:44:42,112 --> 00:44:43,753
the whole thing like went crazy.

1048
00:44:43,773 --> 00:44:44,673
And they were great to work with.

1049
00:44:44,693 --> 00:44:46,754
They really helped resolve that issue

1050
00:44:46,794 --> 00:44:48,215
and get that fixed as soon as possible.

1051
00:44:49,036 --> 00:44:51,477
But again, it really depends on your scenario.

1052
00:44:51,617 --> 00:44:54,758
You may, that may be just completely impossible.

1053
00:44:54,818 --> 00:44:56,599
You may need to have somebody that is just available

1054
00:44:57,540 --> 00:44:58,300
yeah, every hour of the day.

1055
00:45:00,250 --> 00:45:01,350
So, tools.

1056
00:45:01,470 --> 00:45:03,511
Again, tools are something you really need to consider

1057
00:45:03,531 --> 00:45:05,893
to really turbocharge the team that you have

1058
00:45:05,973 --> 00:45:08,494
to make sure that they have the right elements

1059
00:45:08,534 --> 00:45:10,775
to be able to massively improve their efficiency.

1060
00:45:11,196 --> 00:45:12,696
So can you invest to save time?

1061
00:45:12,736 --> 00:45:14,177
Is it worth spending a little bit of time early on

1062
00:45:14,557 --> 00:45:17,379
to really create tools for them to use

1063
00:45:17,439 --> 00:45:18,920
that will automate repetitive tasks

1064
00:45:19,380 --> 00:45:21,261
or really just amplify their creative input?

1065
00:45:23,341 --> 00:45:25,064
So, you know, the questions you need to ask yourself

1066
00:45:25,084 --> 00:45:26,647
when you're planning whether or not to create tools.

1067
00:45:27,328 --> 00:45:29,292
So what are the biggest areas of repetitive manual work?

1068
00:45:29,332 --> 00:45:31,496
Is there something you're just doing again and again

1069
00:45:31,556 --> 00:45:34,381
and again that just can be repeated, that can be automated?

1070
00:45:36,362 --> 00:45:39,404
And also is the data input becoming unwieldy or prone to errors?

1071
00:45:39,464 --> 00:45:43,648
So when we were planning out the assets and the clothing and accessories for Seabeard,

1072
00:45:43,668 --> 00:45:47,831
it's like one and a half thousand island assets at the moment that you can place down.

1073
00:45:48,572 --> 00:45:52,475
And the system for generating accessories was so completely unwieldy.

1074
00:45:52,875 --> 00:45:55,838
So you have like, we had this huge, huge JSON file that had like...

1075
00:45:56,218 --> 00:46:00,144
you know, whether or not it's compatible with old people or people with like this particular

1076
00:46:00,725 --> 00:46:03,770
size of face or whether or not it's compatible with these particular cultures.

1077
00:46:04,110 --> 00:46:06,013
And that, you know, is completely impossible to visualize.

1078
00:46:06,054 --> 00:46:07,736
So it made it very, very error-prone.

1079
00:46:08,217 --> 00:46:10,280
So that was a perfect candidate for creating Bespoke Tool.

1080
00:46:13,017 --> 00:46:14,758
And yeah, can these processes be made more efficient?

1081
00:46:14,938 --> 00:46:17,359
So one of the things that we had in the game with the level editor,

1082
00:46:17,939 --> 00:46:22,321
we wanted to make it so you could just paint and not really worry about the particular rotation of the tile when you're painting a path.

1083
00:46:22,761 --> 00:46:25,942
So if you could imagine you're painting like tile by tile by tile, you paint a corner,

1084
00:46:26,262 --> 00:46:28,983
we didn't want you to have to go down and choose the corner piece and paint that.

1085
00:46:29,003 --> 00:46:30,964
We wanted it so you could just paint and it would just look great.

1086
00:46:31,544 --> 00:46:33,645
It saves a lot of time, it took a little bit of time to implement,

1087
00:46:33,765 --> 00:46:37,346
but yeah, in the end it saved us way more time because it was fully automated.

1088
00:46:38,098 --> 00:46:39,999
Another consideration there is who will be using these tools.

1089
00:46:40,059 --> 00:46:41,820
So if you are creating these tools,

1090
00:46:41,840 --> 00:46:44,100
you want to make sure that they're created not for the mind,

1091
00:46:44,320 --> 00:46:46,341
the mental model of the person building the tool,

1092
00:46:46,721 --> 00:46:49,642
but for the mental model of the person that's going to be using it.

1093
00:46:50,002 --> 00:46:51,782
And tied into that, there may be something already out there.

1094
00:46:51,822 --> 00:46:54,683
So again, one of the benefits of engines like Unity,

1095
00:46:54,703 --> 00:46:56,083
a lot of people are creating these tools.

1096
00:46:56,104 --> 00:46:59,084
You know, certain things like editing grids and lighting,

1097
00:46:59,504 --> 00:47:01,285
there's already tools out there that may do this for you.

1098
00:47:01,625 --> 00:47:03,486
So it's definitely worth checking to make sure that you can't drop,

1099
00:47:03,526 --> 00:47:05,646
you know, $50 to create something

1100
00:47:05,666 --> 00:47:06,927
that's going to take you a couple of weeks to build.

1101
00:47:10,826 --> 00:47:15,628
So in terms of our own internal tools, we had a bespoke level editor.

1102
00:47:16,148 --> 00:47:21,529
So this is something that we built on top of Unity that allowed us to create just the environment.

1103
00:47:21,549 --> 00:47:24,710
So internally the game is basically a 2D game. The representation is 3D.

1104
00:47:25,351 --> 00:47:29,392
But there is a ton of complexity to the dialogue itself.

1105
00:47:29,412 --> 00:47:32,313
So the dialogue is branching, we have procedural elements, templating.

1106
00:47:32,853 --> 00:47:34,955
and all this needs to be tied to progress events in the game.

1107
00:47:35,616 --> 00:47:37,418
So we wrote Bespoke Editor to take care of that complexity.

1108
00:47:37,438 --> 00:47:38,839
Again, there's no way that we could have done this

1109
00:47:39,420 --> 00:47:40,641
using just flat text files.

1110
00:47:41,742 --> 00:47:43,664
We also used a Cmap Editor, so we could create something

1111
00:47:43,784 --> 00:47:45,686
to create the ocean, to create the sea hexes,

1112
00:47:45,706 --> 00:47:48,368
to create the sea paths and edit the sea paths from A to B.

1113
00:47:49,129 --> 00:47:51,491
And we had a content management system that we used

1114
00:47:51,631 --> 00:47:54,014
to edit things like items, like island assets,

1115
00:47:54,054 --> 00:47:56,857
that, again, grew out from these unwieldy JSON files

1116
00:47:56,877 --> 00:47:57,557
that we had early on.

1117
00:47:58,298 --> 00:48:01,140
So here you can see the level editor that we created,

1118
00:48:01,160 --> 00:48:03,382
and on the right you can see that's how we structured the dialog.

1119
00:48:04,343 --> 00:48:06,325
So, yeah, you can assign requirements.

1120
00:48:06,365 --> 00:48:09,847
Say, for example, you might have a mission where you needed to give them

1121
00:48:10,148 --> 00:48:12,730
a particular item that was from this particular area,

1122
00:48:12,750 --> 00:48:14,972
or you might have, you need to defeat certain creatures.

1123
00:48:15,012 --> 00:48:17,133
And this basically allowed us to intelligently query

1124
00:48:17,153 --> 00:48:19,836
various other data systems and populate the options there

1125
00:48:19,876 --> 00:48:21,717
rather than just choosing from a huge dropdown list

1126
00:48:21,797 --> 00:48:23,078
or just putting in numbers.

1127
00:48:24,787 --> 00:48:29,269
And this is our sea editor, so this is how we created the islands and the paths between them.

1128
00:48:29,509 --> 00:48:31,429
So the sailing minigames use these paths.

1129
00:48:32,610 --> 00:48:35,951
And again, that allowed us to be a little bit more creative rather than just tapping in random numbers.

1130
00:48:37,012 --> 00:48:40,473
And this is the content management system that we created for editing items.

1131
00:48:40,513 --> 00:48:43,554
So this is online in this case rather than Unity, and this is one of the only online tools that we had.

1132
00:48:43,934 --> 00:48:49,277
And then Unity had a... when we built the project, it would just pull down all the various data from the databases online.

1133
00:48:51,411 --> 00:48:53,792
So another component, obviously a hugely important part

1134
00:48:53,812 --> 00:48:55,032
of the process working with QA.

1135
00:48:55,112 --> 00:48:57,412
We were very fortunate working with Backflip's QA department.

1136
00:48:57,432 --> 00:48:59,013
They were awesome, really helped us

1137
00:48:59,393 --> 00:49:01,793
get through a very complex project

1138
00:49:02,033 --> 00:49:04,194
and produce something that was enormously stable.

1139
00:49:05,054 --> 00:49:06,194
But one of the considerations from this,

1140
00:49:06,214 --> 00:49:07,075
there was some asymmetry.

1141
00:49:07,115 --> 00:49:08,875
Obviously, on our side, it was just myself and Ben

1142
00:49:08,895 --> 00:49:10,255
that were able to fix issues.

1143
00:49:10,815 --> 00:49:13,076
And they had a considerable-sized team

1144
00:49:13,116 --> 00:49:14,336
that were really throwing a lot of bugs at us.

1145
00:49:14,356 --> 00:49:16,677
So we really needed to be quite smart about how we could do

1146
00:49:16,717 --> 00:49:18,137
this and how we could work intelligently with them

1147
00:49:18,157 --> 00:49:20,378
to make sure that we weren't overloaded with the work that

1148
00:49:20,398 --> 00:49:20,918
needs to be done.

1149
00:49:21,658 --> 00:49:24,360
So, one of the things that we did, and I highly, highly recommend using this.

1150
00:49:24,420 --> 00:49:27,581
I know I'm talking about Unity a lot, but I know it's pretty prevalent.

1151
00:49:27,901 --> 00:49:30,863
We used something there that's available in the Asset Store called Touch Console Pro.

1152
00:49:31,443 --> 00:49:34,605
And this allowed us to provide a ton of tools internally for them to use.

1153
00:49:34,685 --> 00:49:39,088
So, for example, incrementing currency, setting certain objectives being complete.

1154
00:49:39,168 --> 00:49:41,049
There's a task that needed to be done 25 times.

1155
00:49:41,069 --> 00:49:43,290
It meant they didn't have to go through 25 times.

1156
00:49:43,670 --> 00:49:45,531
You can just bind specific commands to there.

1157
00:49:46,172 --> 00:49:47,412
And it runs really nicely on device.

1158
00:49:47,472 --> 00:49:48,753
It also meant that if the game crashed...

1159
00:49:49,610 --> 00:49:52,010
could email the log along with the saved data file over to us

1160
00:49:52,410 --> 00:49:55,071
and it meant that that process was super smooth and super transparent.

1161
00:49:55,491 --> 00:49:57,032
So yeah, that was highly recommended.

1162
00:49:57,592 --> 00:49:59,712
Another thing that was an interesting kind of problem, well not problem,

1163
00:49:59,752 --> 00:50:01,293
but due to the circumstances we were working,

1164
00:50:01,313 --> 00:50:03,033
they were in a different time zone to us,

1165
00:50:03,053 --> 00:50:04,453
so generally it actually worked out quite well.

1166
00:50:05,274 --> 00:50:06,634
By the end of the day when we were working,

1167
00:50:06,694 --> 00:50:08,514
we would send over new builds,

1168
00:50:09,075 --> 00:50:09,895
just as they were waking up,

1169
00:50:09,935 --> 00:50:11,415
that addressed all the issues from the previous day.

1170
00:50:12,215 --> 00:50:13,276
Similarly, when we came in the morning,

1171
00:50:13,416 --> 00:50:15,156
then we would have a whole load of new bugs to work on.

1172
00:50:15,236 --> 00:50:17,157
So yeah, it actually ended up working out quite well.

1173
00:50:18,661 --> 00:50:25,587
So lastly I want to talk a little bit about empowerment, about how you can kind of create an environment for your team to really thrive.

1174
00:50:26,308 --> 00:50:28,490
And tied into that, really talking about culture.

1175
00:50:29,131 --> 00:50:33,695
So once you've found those awesome team members, building culture is really about creating an environment to thrive.

1176
00:50:33,715 --> 00:50:43,164
It's a little like building a zoo enclosure for a given creature, and so it really will be a lot like, yeah, it's really considering what they need and how they need to be supported.

1177
00:50:43,584 --> 00:50:46,166
So you know, an enclosure for a llama is going to be very different to a meerkat,

1178
00:50:46,286 --> 00:50:47,607
it's going to be very different to a red panda.

1179
00:50:47,887 --> 00:50:49,828
So it will depend on your team and what your objective is

1180
00:50:49,848 --> 00:50:51,630
and how you want to run the business.

1181
00:50:51,730 --> 00:50:54,271
So I want to give three examples of different companies

1182
00:50:54,311 --> 00:50:56,433
that have created quite an empowering culture, quite a different culture,

1183
00:50:56,453 --> 00:50:58,434
and I think are really interesting as a touch point.

1184
00:50:58,474 --> 00:51:01,736
It's certainly worth taking a look at.

1185
00:51:01,756 --> 00:51:02,957
The first one is Netflix.

1186
00:51:03,237 --> 00:51:06,920
So there's a great presentation given by Reed Hastings, CEO of Netflix,

1187
00:51:07,620 --> 00:51:08,641
called High Performance Culture,

1188
00:51:08,681 --> 00:51:10,822
and again, that's the URL there where you can take a look at it.

1189
00:51:11,712 --> 00:51:16,255
And he talks about creating a culture of creativity and self-discipline, freedom and responsibility,

1190
00:51:17,096 --> 00:51:21,459
to attract the type of person that picks up trash lying on the floor, rather than just

1191
00:51:21,579 --> 00:51:22,240
leaving it there.

1192
00:51:23,300 --> 00:51:26,463
And so he talks about the fact that, you know, a great workplace is stunning colleagues.

1193
00:51:26,503 --> 00:51:31,026
You know, it's not about, you know, benefits and free lunches and micro-scooters and whatnot.

1194
00:51:31,046 --> 00:51:33,328
It's really people want to go and be great at what they do.

1195
00:51:33,688 --> 00:51:35,650
And creating an environment that encourages that is important.

1196
00:51:37,211 --> 00:51:40,074
So yeah, it's essentially about hiring high-performance, self-disciplined people

1197
00:51:40,454 --> 00:51:41,995
and keeping process and rules light.

1198
00:51:42,836 --> 00:51:45,819
So he talks about rather than really over-engineering process

1199
00:51:45,839 --> 00:51:48,101
and having something that specifies every element of the rules,

1200
00:51:49,122 --> 00:51:52,264
generally it's about hiring people that are able to kind of interpret

1201
00:51:52,284 --> 00:51:54,646
a relatively right set of rules appropriately and intelligently.

1202
00:51:55,067 --> 00:51:58,750
So, for example, they have no policy for vacation or tracking of vacation.

1203
00:51:59,110 --> 00:52:00,852
The idea is that if you want to take a vacation,

1204
00:52:01,152 --> 00:52:02,594
just make sure that you do it responsibly

1205
00:52:03,034 --> 00:52:05,016
and, you know, achieve the things that you need to do within that.

1206
00:52:05,076 --> 00:52:06,097
Don't let that disrupt that.

1207
00:52:06,477 --> 00:52:09,920
Or they have a gift policy which is just act in Netflix's best interest.

1208
00:52:10,241 --> 00:52:11,622
They don't specify any more than that.

1209
00:52:12,563 --> 00:52:14,885
And, you know, the right person will just interpret that appropriately.

1210
00:52:15,385 --> 00:52:16,706
And I think that's really interesting.

1211
00:52:17,146 --> 00:52:19,387
So he was saying that's one of the things that allow them to grow quite efficiently is

1212
00:52:19,687 --> 00:52:23,208
obviously when businesses tend to grow, the process has to scale with that

1213
00:52:23,228 --> 00:52:24,769
and sometimes that can become quite unwieldy.

1214
00:52:24,789 --> 00:52:26,230
And by keeping the process relatively light

1215
00:52:26,610 --> 00:52:28,791
and hiring people that fit into that and quite self-responsible,

1216
00:52:29,911 --> 00:52:30,752
it works out very well for them.

1217
00:52:32,739 --> 00:52:33,479
Another one is Unity.

1218
00:52:33,960 --> 00:52:35,521
So this is an interesting presentation by Aras,

1219
00:52:35,561 --> 00:52:38,123
who is Unity's head graphics guy.

1220
00:52:39,184 --> 00:52:41,786
And he talks about lightweight chaos.

1221
00:52:42,126 --> 00:52:47,210
So in his example, he has a similar discussion

1222
00:52:47,230 --> 00:52:48,691
of saying that processes are for managing,

1223
00:52:49,011 --> 00:52:50,612
well, like complex processes are for managing

1224
00:52:50,652 --> 00:52:51,313
mediocre people.

1225
00:52:51,653 --> 00:52:55,674
And if you want to hire really great people, you don't want to force a huge amount of process upon them.

1226
00:52:56,034 --> 00:52:59,956
So they've got a highly distributed team, 17 offices, 21 person places,

1227
00:53:00,276 --> 00:53:02,276
and he's saying a lot of them are very allergic to process.

1228
00:53:02,296 --> 00:53:05,878
They don't like to feel too constrained by them, but they're very responsible.

1229
00:53:06,198 --> 00:53:09,399
And so putting an emphasis on trust and responsibility just allows them to work really well

1230
00:53:09,439 --> 00:53:11,940
the way that they want to, but still deliver great results

1231
00:53:12,060 --> 00:53:15,561
without taking a lot of resources on creating, you know, a really complicated process.

1232
00:53:17,420 --> 00:53:18,501
And lastly, Pixar.

1233
00:53:18,741 --> 00:53:20,802
So this is a fantastic book by Ed Catmull,

1234
00:53:20,842 --> 00:53:21,483
president of Pixar.

1235
00:53:22,183 --> 00:53:25,466
And he spent the last 10 years where this is his primary

1236
00:53:25,506 --> 00:53:27,127
focus, just trying to understand how you can build a

1237
00:53:27,147 --> 00:53:30,289
workplace that allows people to really thrive and feel good

1238
00:53:30,329 --> 00:53:31,150
about the way that they work.

1239
00:53:31,730 --> 00:53:36,114
Allows candor and constant re-evaluation of the work that's

1240
00:53:36,134 --> 00:53:37,295
being done and the way that you work.

1241
00:53:37,675 --> 00:53:40,197
And an emphasis on equality and balance of teams and

1242
00:53:40,217 --> 00:53:40,957
departments as well.

1243
00:53:42,378 --> 00:53:48,822
So you really don't... he says in there, you know, sometimes you might have a company where there's like the rock star department, say for example, if you're...

1244
00:53:49,943 --> 00:53:56,588
you know, if you've got a game studio and the people, the rock stars, like say the game designers or the artists, and you might have people in QA that are treated like second class citizens.

1245
00:53:56,948 --> 00:54:05,673
And making sure that, you know, that's bullshit. You really want to make sure that if you launch a game and the game is, you know, full of bugs, then, you know, that's completely ridiculous.

1246
00:54:05,693 --> 00:54:08,655
You want to make sure that respect is there across all boundaries and everyone is treated equally.

1247
00:54:08,976 --> 00:54:10,577
And that way you're all pulling together the same goal.

1248
00:54:10,637 --> 00:54:10,977
I think that's...

1249
00:54:11,597 --> 00:54:14,258
Yeah, really interesting, very applicable to working in games as well.

1250
00:54:14,818 --> 00:54:17,159
Because I think ultimately, you know, productive people are happy people.

1251
00:54:17,199 --> 00:54:19,819
You want to make sure that, you know, they are given the chance to work their best.

1252
00:54:19,839 --> 00:54:21,780
You know, everyone goes to work and they don't want to just get through the day.

1253
00:54:21,820 --> 00:54:22,740
They want to do great work.

1254
00:54:23,481 --> 00:54:26,081
And creating an environment to be their best and to be supported to be their best.

1255
00:54:26,981 --> 00:54:28,022
And finding that sweet spot.

1256
00:54:28,062 --> 00:54:30,943
So really just find the balance of reaching and pushing the personal limits

1257
00:54:30,963 --> 00:54:34,203
without going over to the point where they are just, you know, snapping.

1258
00:54:34,223 --> 00:54:36,344
And I think, you know, that takes clear communication

1259
00:54:36,384 --> 00:54:38,345
and make sure you understand the individual employees to do that.

1260
00:54:39,495 --> 00:54:41,307
So yeah, the question to ask yourself.

1261
00:54:43,434 --> 00:54:45,255
What environment would enable your team to thrive?

1262
00:54:45,695 --> 00:54:47,916
Knowing your team members, knowing the nature of the project,

1263
00:54:47,936 --> 00:54:48,776
knowing the nature of your team,

1264
00:54:49,056 --> 00:54:50,076
what can you do to improve that?

1265
00:54:50,116 --> 00:54:52,377
What can you do to create that environment for them?

1266
00:54:53,597 --> 00:54:55,418
Does your process support or suffocate?

1267
00:54:55,438 --> 00:54:56,958
Do you have something that's over-engineered?

1268
00:54:57,339 --> 00:54:58,939
Or do you have something potentially that's just,

1269
00:54:58,999 --> 00:55:00,660
yeah, there's not enough there, that people are lost,

1270
00:55:00,700 --> 00:55:03,640
people don't understand why they're failing

1271
00:55:03,680 --> 00:55:04,801
or why they're doing things wrong.

1272
00:55:05,241 --> 00:55:05,961
Maybe it hasn't been clear,

1273
00:55:06,001 --> 00:55:07,702
maybe it hasn't been communicated well.

1274
00:55:07,722 --> 00:55:09,122
So getting that sweet spot, again, is vital.

1275
00:55:10,243 --> 00:55:11,825
Is there an imbalance between teams and disciplines?

1276
00:55:11,865 --> 00:55:14,968
Do some people regard themselves as the core of the company and the others as peripheral?

1277
00:55:15,348 --> 00:55:20,915
And try and balance that out so that everyone has an equal representation and position in the company.

1278
00:55:22,664 --> 00:55:24,525
You know, so for us, again, we're a relatively small team,

1279
00:55:25,185 --> 00:55:28,887
but we tend to be quite intense in terms of the work hours.

1280
00:55:29,207 --> 00:55:31,488
We don't work long hours, so we generally work 9.30 to 6.00.

1281
00:55:32,569 --> 00:55:34,550
But the time that's there, from an external perspective,

1282
00:55:34,570 --> 00:55:36,591
it probably doesn't look as fun as working...

1283
00:55:36,871 --> 00:55:38,131
So I started off working in digital design,

1284
00:55:38,151 --> 00:55:40,112
and there are no micro scooters and foosball tables

1285
00:55:40,132 --> 00:55:41,053
or anything else like that.

1286
00:55:41,493 --> 00:55:43,654
It's maybe a little bit dry, but I think it works right for the team

1287
00:55:43,694 --> 00:55:44,755
and certainly the way that we work.

1288
00:55:44,935 --> 00:55:46,956
And it means that we don't work long hours.

1289
00:55:48,129 --> 00:55:50,392
The hours are flexible, location is flexible.

1290
00:55:50,412 --> 00:55:52,855
I was saying, you know, Miko works from another location.

1291
00:55:53,176 --> 00:55:56,480
Ben has a small child, so he works from home two days a week.

1292
00:55:56,780 --> 00:55:57,601
And that's worked great for us.

1293
00:55:57,621 --> 00:55:59,924
You know, it means that he has the flexibility to work that he wants to,

1294
00:55:59,964 --> 00:56:03,609
and it means that we can hire people that do need

1295
00:56:03,869 --> 00:56:06,652
and work better within those level of flexibility.

1296
00:56:07,313 --> 00:56:09,974
And we really don't have overtime or crunch.

1297
00:56:10,734 --> 00:56:12,335
Occasionally, we may work a little bit later in the evening.

1298
00:56:12,735 --> 00:56:13,776
Occasionally, we work at weekends.

1299
00:56:14,016 --> 00:56:15,917
But that's extremely, extremely rare.

1300
00:56:16,217 --> 00:56:18,178
And I think that's a key part of it, to make sure that,

1301
00:56:18,478 --> 00:56:20,299
to see overtime and crunch as a failure.

1302
00:56:20,879 --> 00:56:22,720
Certainly on my part, if I haven't planned the project out

1303
00:56:22,740 --> 00:56:24,641
properly, or we haven't put those plans in place,

1304
00:56:24,681 --> 00:56:26,261
then we want to make sure that we minimize that.

1305
00:56:27,782 --> 00:56:29,203
And an emphasis on trust, responsibility,

1306
00:56:29,223 --> 00:56:30,083
and shared problem solving.

1307
00:56:30,203 --> 00:56:32,244
Again, so problems aren't just one individual.

1308
00:56:32,264 --> 00:56:33,684
It's everything that we can do to make sure

1309
00:56:33,705 --> 00:56:34,445
that we share those problems.

1310
00:56:34,465 --> 00:56:35,465
It's a key part of the way that we work.

1311
00:56:38,381 --> 00:56:40,162
So yeah, in conclusion, you can get a lot done

1312
00:56:40,182 --> 00:56:41,263
with a small amount of resources.

1313
00:56:41,283 --> 00:56:42,945
I know there's been a lot of different topics covered here,

1314
00:56:42,985 --> 00:56:44,426
but if you can build the right team,

1315
00:56:44,626 --> 00:56:46,307
make sure they're aligned and have clear goals,

1316
00:56:46,767 --> 00:56:48,068
give them what they need to do their best,

1317
00:56:48,489 --> 00:56:49,550
get rid of any efficiencies,

1318
00:56:49,610 --> 00:56:51,291
hopefully they can make amazing things.

1319
00:56:52,552 --> 00:56:54,473
So I've covered a lot of different subjects here,

1320
00:56:54,573 --> 00:56:56,975
but I'm happy to take any questions that you might have.

1321
00:56:56,995 --> 00:56:59,037
I think we've got about four minutes.

1322
00:57:00,558 --> 00:57:03,260
Yeah, four minutes left, so yeah.

1323
00:57:04,221 --> 00:57:04,441
Thanks.

1324
00:57:14,205 --> 00:57:16,046
Hi, I had a couple questions.

1325
00:57:17,767 --> 00:57:19,787
Being a small team, did you have,

1326
00:57:20,267 --> 00:57:21,968
I know you said you self-published,

1327
00:57:22,108 --> 00:57:23,388
but you've also worked with a partner.

1328
00:57:23,629 --> 00:57:24,549
Yeah.

1329
00:57:24,669 --> 00:57:29,030
In both instances, how did you kind of build a community,

1330
00:57:29,410 --> 00:57:31,571
like try and get people excited about the game

1331
00:57:31,591 --> 00:57:32,331
that you're working on?

1332
00:57:33,292 --> 00:57:36,093
So I think in both cases, we announced quite early.

1333
00:57:36,793 --> 00:57:40,074
So we didn't do a great job with Okkaboo again,

1334
00:57:40,094 --> 00:57:41,334
because we were a little bit stretched resources.

1335
00:57:41,354 --> 00:57:42,255
But certainly for the other games

1336
00:57:44,235 --> 00:57:46,996
and Okabe we announced way before the game came out.

1337
00:57:47,296 --> 00:57:49,217
So then you can start just really cultivating interest

1338
00:57:49,257 --> 00:57:50,357
and making sure that people are aware of it,

1339
00:57:50,758 --> 00:57:51,658
going to events like this.

1340
00:57:51,718 --> 00:57:56,019
So yeah, GDC was instrumental for announcing both those games

1341
00:57:56,059 --> 00:57:58,340
and just basically keep trickling that information over

1342
00:57:58,380 --> 00:57:59,901
so it's always in the awareness of players.

1343
00:58:00,781 --> 00:58:01,021
Great.

1344
00:58:01,881 --> 00:58:03,302
The other question I had was,

1345
00:58:04,222 --> 00:58:06,323
you talked about prototyping and...

1346
00:58:07,041 --> 00:58:10,249
like maybe like a small game jam or whatever. How much time did

1347
00:58:10,269 --> 00:58:14,340
you spend on that before you determined, um, like, okay, this

1348
00:58:14,420 --> 00:58:16,004
is something that we're going to move forward with.

1349
00:58:17,346 --> 00:58:19,747
And you said you had successes and failures.

1350
00:58:19,787 --> 00:58:21,487
How much time did you actually spend on that process?

1351
00:58:21,767 --> 00:58:24,588
Yeah, so I think for Rolando, it was probably around three,

1352
00:58:24,888 --> 00:58:26,948
four months of prototyping until we actually

1353
00:58:26,968 --> 00:58:28,809
had the feature set just absolutely down.

1354
00:58:29,169 --> 00:58:30,309
At that stage, it was just me.

1355
00:58:30,369 --> 00:58:32,790
So that was before I started working with Miko.

1356
00:58:33,190 --> 00:58:34,190
And obviously, at that stage, it means

1357
00:58:34,210 --> 00:58:35,970
you can take a lot longer to get things right.

1358
00:58:35,990 --> 00:58:37,731
And I think that is a cool part about that.

1359
00:58:37,751 --> 00:58:39,031
If you're trying something new to make sure

1360
00:58:39,071 --> 00:58:40,451
you have that kind of runoff time

1361
00:58:40,491 --> 00:58:41,952
to make sure that you're not just

1362
00:58:41,972 --> 00:58:44,172
forced into making something that you know isn't quite right.

1363
00:58:44,832 --> 00:58:46,593
With Seabird, pre-production was around six months.

1364
00:58:47,573 --> 00:58:53,495
So we had something together in around three months that represented what we felt the game should be.

1365
00:58:54,015 --> 00:58:59,036
But around three months after that, we had everything locked down that actually represented the final product.

1366
00:58:59,596 --> 00:59:02,837
And to be honest, we were actually still changing things up to around six months,

1367
00:59:02,897 --> 00:59:04,938
because we had user testing, we had internal feedback.

1368
00:59:04,978 --> 00:59:07,058
So it wasn't, yeah, it kept tweaking.

1369
00:59:07,078 --> 00:59:10,159
We kept tweaking it right until the final stages of production.

1370
00:59:10,959 --> 00:59:14,620
Great, thanks. Also, I'd like to say it's great that other people are using Slack.

1371
00:59:14,680 --> 00:59:15,420
It's been a great tool.

1372
00:59:15,783 --> 00:59:18,504
Great. Yeah. It's been awesome for us as well. Thanks. Thanks.

1373
00:59:20,084 --> 00:59:23,505
Hey, I had a quick question in regards to you talking about wearing many different hats.

1374
00:59:23,605 --> 00:59:27,026
Yeah. You know, doing game direction, lead programmer and biz dev.

1375
00:59:28,026 --> 00:59:33,087
As all those departments would, throughout the course of a project, kind of have to give and take,

1376
00:59:33,167 --> 00:59:36,628
and, you know, there'd be scope creep or, you know, stuff that you guys are going to have to sacrifice

1377
00:59:36,648 --> 00:59:37,928
in order to ship the game. Yeah.

1378
00:59:38,088 --> 00:59:41,749
Just curious how you handled those types of situations or the advantages and disadvantages

1379
00:59:41,829 --> 00:59:45,390
to doing that all kind of yourself and if you involved anybody else with it.

1380
00:59:45,687 --> 00:59:50,370
Yeah, I think it's important to try and wherever possible isolate the ones you know will have that natural tension

1381
00:59:50,410 --> 00:59:52,011
and do whatever you can to extract that.

1382
00:59:52,131 --> 00:59:56,093
And I mean, I generally find the best thing is just writing the arguments for and against down

1383
00:59:56,273 --> 00:59:57,814
if it is a role that has that natural tension.

1384
00:59:58,234 --> 01:00:02,417
So in some cases, for example, you know, it's really not a problem if you're doing community management

1385
01:00:02,477 --> 01:00:05,038
and game direction because those don't really have a natural opposition.

1386
01:00:05,078 --> 01:00:08,140
But if it's one where the objectives are quite often kind of against each other,

1387
01:00:08,180 --> 01:00:10,201
that I think the best thing is just, yeah, just writing it down.

1388
01:00:10,661 --> 01:00:13,002
writing it down, leaving it for a couple of days,

1389
01:00:13,142 --> 01:00:14,762
letting it sink in, and then make a decision.

1390
01:00:14,822 --> 01:00:16,443
I think giving yourself breathing time

1391
01:00:16,543 --> 01:00:18,883
to actually work through that is a real key part

1392
01:00:18,903 --> 01:00:20,924
of making that don't-make-snap decisions,

1393
01:00:20,944 --> 01:00:22,985
because otherwise they probably haven't been considered

1394
01:00:23,005 --> 01:00:23,925
as well as they need them to be.

1395
01:00:25,145 --> 01:00:25,645
Thanks for the talk.

1396
01:00:25,825 --> 01:00:26,486
Great, thanks.

1397
01:00:26,506 --> 01:00:32,327
Just real quick, do you use your prototype code

1398
01:00:32,527 --> 01:00:34,068
and assets for the final game,

1399
01:00:34,148 --> 01:00:35,548
or do you throw that away and start over?

1400
01:00:36,581 --> 01:00:37,101
Mostly.

1401
01:00:38,182 --> 01:00:40,744
Yeah, so generally we won't write something

1402
01:00:40,784 --> 01:00:42,265
that's too throwaway.

1403
01:00:42,285 --> 01:00:44,226
Because the nice thing is if you try and write something that's

1404
01:00:44,266 --> 01:00:45,527
quite reusable early on, it means

1405
01:00:45,547 --> 01:00:47,528
you can carry on evolving it in the prototype

1406
01:00:47,989 --> 01:00:49,450
rather than having to make everything from scratch.

1407
01:00:50,330 --> 01:00:52,192
So yeah, generally we didn't rewrite the code base.

1408
01:00:52,292 --> 01:00:53,412
There's a few exceptions of things

1409
01:00:53,452 --> 01:00:54,633
we actually just had to throw away.

1410
01:00:55,014 --> 01:00:56,755
So we had a terrain system that by the end

1411
01:00:56,815 --> 01:00:57,895
was just total garbage.

1412
01:00:57,935 --> 01:00:59,336
And we're like, this just needs to rewrite.

1413
01:00:59,637 --> 01:01:01,318
But it was done much more on an ad hoc basis

1414
01:01:01,358 --> 01:01:03,439
rather than the principle of always one or always the other.

1415
01:01:04,200 --> 01:01:04,460
Thank you.

1416
01:01:04,860 --> 01:01:05,060
Thanks.

1417
01:01:12,474 --> 01:01:13,021
Cool, cheers.

