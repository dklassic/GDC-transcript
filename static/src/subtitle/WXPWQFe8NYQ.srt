1
00:00:05,364 --> 00:00:11,789
Hello, my name's Adam Ritchie coming to you from sunny Sweden to talk to you about our latest project, The Division 2.

2
00:00:11,789 --> 00:00:20,295
In the past I've worked at Midway, Jagex, Lionhead Studios, but now I work at Massive.

3
00:00:20,295 --> 00:00:28,081
And I'm here to talk to you about MPC voice design in Tom Clancy's The Division 2.

4
00:00:31,261 --> 00:00:35,003
We're going to look at the work on NPC voice systems for The Division 2,

5
00:00:35,003 --> 00:00:38,385
covering the role of the voice designer,

6
00:00:38,385 --> 00:00:43,888
a look at the project itself and our goals, NPC behavior,

7
00:00:43,888 --> 00:00:48,070
bringing context to their dialogue, sharing the player experience with friends,

8
00:00:48,070 --> 00:00:53,713
voice production, use of statistics for balancing,

9
00:00:53,713 --> 00:00:56,635
and wrapping this up neatly with a nice conclusion.

10
00:00:59,324 --> 00:01:07,129
The question we're going to try and answer today is how can we make non-player character

11
00:01:07,129 --> 00:01:13,753
barks, systemic voice lines, relevant and engaging to players? How do we make these

12
00:01:13,753 --> 00:01:19,016
voice lines more than just background? How do we keep them as mood setters, but also

13
00:01:19,016 --> 00:01:21,998
make them matter? How do we use them to bring our characters to life?

14
00:01:21,998 --> 00:01:25,580
What is a bark? I hear you say. I'm glad you asked.

15
00:01:25,580 --> 00:01:26,301
Greeting the player.

16
00:01:29,320 --> 00:01:39,628
investigating a noise, throwing a grenade, reloading their weapon.

17
00:01:39,628 --> 00:01:46,033
Bark is a word for a voice line designed to rationalize and telegraph the actions or reactions

18
00:01:46,033 --> 00:01:54,059
of an NPC. People call these different things battle chatter, VOs. We use bark because it's

19
00:01:54,059 --> 00:01:55,060
like a dog barking.

20
00:01:55,661 --> 00:02:00,064
Each one can sound similar, but it can carry meaning in different situations.

21
00:02:00,064 --> 00:02:03,426
You'll hear me refer to them as just VO or voice lines as well.

22
00:02:03,426 --> 00:02:08,609
Bucks are world builders, ways to tell a story and to entertain.

23
00:02:08,609 --> 00:02:11,550
And whose job is it to make these bucks?

24
00:02:11,550 --> 00:02:16,493
Well, among other people, it's the voice designer.

25
00:02:16,493 --> 00:02:20,296
And what is the role of the voice designer? What is this job?

26
00:02:20,296 --> 00:02:21,256
Have you ever heard of it?

27
00:02:21,256 --> 00:02:24,058
Unless you're a Ubisoft employee, you might not.

28
00:02:24,058 --> 00:02:24,278
Bye.

29
00:02:25,129 --> 00:02:28,010
Maybe you know a dialogue coordinator or voice producer.

30
00:02:28,010 --> 00:02:33,173
Our responsibilities are pretty broad but I've tried to condense them

31
00:02:33,173 --> 00:02:39,055
into four areas. Systemic Barks Design. What an NPC can potentially say

32
00:02:39,055 --> 00:02:43,617
that gives them purpose and meaning? What should I say

33
00:02:43,617 --> 00:02:47,319
as an NPC? Does context matter? What do I know?

34
00:02:48,185 --> 00:02:50,366
What should I not say?

35
00:02:50,366 --> 00:02:54,628
Will a lack of context for what I'm saying break the player experience?

36
00:02:54,628 --> 00:02:57,170
What should I not know and not be able to say?

37
00:02:57,170 --> 00:02:59,891
We also need to consider how they say it.

38
00:02:59,891 --> 00:03:06,875
Are they talking via a megaphone or a radio or in person?

39
00:03:06,875 --> 00:03:08,916
Are they wearing a gas mask?

40
00:03:08,916 --> 00:03:10,597
And how often can I say it?

41
00:03:10,958 --> 00:03:15,762
Is it a one-time thing? Should I be able to say this thing a lot without getting annoying?

42
00:03:15,762 --> 00:03:19,185
And how important is that information that I'm conveying to the player?

43
00:03:19,185 --> 00:03:24,750
We're heavily involved in casting of the actors that play these roles.

44
00:03:24,750 --> 00:03:29,674
Some things we have to work with are location. Where are our characters from?

45
00:03:29,674 --> 00:03:34,518
Where can we record? Where are the most suitable actors? Can they do the accent easily?

46
00:03:35,303 --> 00:03:39,965
The level of casting, what the budget is, how important that character is going to be

47
00:03:39,965 --> 00:03:43,066
and how much we're going to hear them.

48
00:03:43,066 --> 00:03:48,429
The schedule, when do we need to record, how intense is the script going to be for the

49
00:03:48,429 --> 00:03:53,111
actor, do we need to spread it out, when's the talent going to be available.

50
00:03:53,111 --> 00:03:59,314
And the quantity, how many actors can we afford, how many different voices do we need for the

51
00:03:59,314 --> 00:03:59,994
game.

52
00:03:59,994 --> 00:04:01,315
Will there be recurring voices?

53
00:04:04,101 --> 00:04:05,761
And then when it comes to recording,

54
00:04:05,761 --> 00:04:07,902
there's a lot of stuff to decide and work around.

55
00:04:07,902 --> 00:04:11,943
The technical specifications of microphones,

56
00:04:11,943 --> 00:04:13,423
preamps, the studio,

57
00:04:13,423 --> 00:04:16,764
and other environments that we're gonna use.

58
00:04:16,764 --> 00:04:19,165
The session setup, a lot goes into this.

59
00:04:19,165 --> 00:04:21,285
Voice directors, engineering,

60
00:04:21,285 --> 00:04:23,125
engineers being on boarded,

61
00:04:23,125 --> 00:04:25,066
training staff with new tools.

62
00:04:25,066 --> 00:04:26,546
We like to get developers,

63
00:04:26,546 --> 00:04:29,227
directors to come to the studio and meet the team,

64
00:04:29,227 --> 00:04:30,107
see the project.

65
00:04:31,345 --> 00:04:37,707
We also want to make sure that we've got the right people involved in terms of voice coaches or researchers.

66
00:04:37,707 --> 00:04:45,071
And then the flow, how we start, maintain and finish a session, how much material we can cover and still hit our quality targets.

67
00:04:45,071 --> 00:04:48,612
And how do we create the best assets in that environment?

68
00:04:48,612 --> 00:04:51,113
Then communication and support.

69
00:04:52,414 --> 00:04:59,238
When and how do we send the scripts? What format, what time do we give the actors time to rehearse?

70
00:04:59,238 --> 00:05:04,482
And can we send extra material for the actors and directors like trailers, images, gameplay,

71
00:05:04,482 --> 00:05:12,246
media references? And then editorial process. Who's going to edit that material? Do we have time?

72
00:05:12,246 --> 00:05:18,290
We don't. Do we keep breath in the voice lines or do we clip it close to the words?

73
00:05:18,290 --> 00:05:21,272
And then we've got the file naming and loudness settings too.

74
00:05:22,282 --> 00:05:29,206
Putting the results into the game, we have an in-house database which we update the text

75
00:05:29,206 --> 00:05:34,649
and audio from the recording sessions, reviewing the selects, making sure that we've got the

76
00:05:34,649 --> 00:05:39,992
right ones, updating any metadata and flagging any session changes that may affect other

77
00:05:39,992 --> 00:05:40,693
departments.

78
00:05:41,686 --> 00:05:44,988
And then there's the sound, the quality assurance pass on that,

79
00:05:44,988 --> 00:05:48,230
making sure the material sounds right and that we've used the right microphones,

80
00:05:48,230 --> 00:05:53,292
the right takes, putting this into Wwise, getting the material to play in the right way,

81
00:05:53,292 --> 00:05:59,155
2D or 3D, the right fall-offs, bussing, how much world reverb is applied.

82
00:05:59,155 --> 00:06:04,618
We also have processing, editing to animation timing or other tweaks and changes,

83
00:06:04,618 --> 00:06:06,840
adding special effects and the mastering process.

84
00:06:07,724 --> 00:06:11,588
And then we've got testing. How does this work in the game?

85
00:06:11,588 --> 00:06:14,210
Has it been hooked up? Does it sound right in context?

86
00:06:14,210 --> 00:06:18,494
And then we iterate and repeat this process ad infinium,

87
00:06:18,494 --> 00:06:22,458
because when you work on a game as a surface, the work never stops.

88
00:06:22,458 --> 00:06:26,962
So how did we get here in the first place?

89
00:06:26,962 --> 00:06:31,926
Well, the Division 1, Tom Clancy's The Division,

90
00:06:31,926 --> 00:06:32,947
was released March 2016.

91
00:06:35,342 --> 00:06:40,987
The story is set in post-disaster New York City during a harsh, cold winter.

92
00:06:40,987 --> 00:06:45,471
Gangs are roaming the streets, boisterous, full of character, noisy and aggressive.

93
00:06:45,471 --> 00:06:50,515
The game suffered from some technical issues at launch but quickly established itself as

94
00:06:50,515 --> 00:06:51,696
a leader within the genre.

95
00:06:54,525 --> 00:06:57,947
Some of the barks that the NPCs said were tied to behavior,

96
00:06:57,947 --> 00:07:00,949
whilst other barks were driven by timers

97
00:07:00,949 --> 00:07:03,210
to give NPCs something to say

98
00:07:03,210 --> 00:07:06,552
and to make combat and safe spaces feel busy.

99
00:07:06,552 --> 00:07:09,854
And some barks were often overused by design

100
00:07:09,854 --> 00:07:14,216
and ended up playing a lot more than was actually intended.

101
00:07:14,216 --> 00:07:16,518
The team had limited ability to fix this

102
00:07:16,518 --> 00:07:19,079
or control playback after release,

103
00:07:19,079 --> 00:07:21,421
and it took some time to fix some of these bugs

104
00:07:21,421 --> 00:07:22,521
that appeared at launch.

105
00:07:24,125 --> 00:07:27,686
What did we learn from the first game after it released?

106
00:07:27,686 --> 00:07:32,327
The barks that were driven by behavior made the NPCs seem clever and enhance their connection

107
00:07:32,327 --> 00:07:33,627
to gameplay.

108
00:07:33,627 --> 00:07:38,208
But some characters were sometimes talking for the sake of talking and we wanted to improve

109
00:07:38,208 --> 00:07:39,869
on that for the sequel.

110
00:07:39,869 --> 00:07:44,030
Players play the game very differently to developers.

111
00:07:44,030 --> 00:07:49,071
And repetition can be funny, but it also breaks immersion.

112
00:07:50,045 --> 00:07:54,109
When the first game released, whenever you killed an enemy from a particular gang,

113
00:07:54,109 --> 00:07:57,051
their teammates could do a friendly down bark,

114
00:07:57,051 --> 00:08:01,936
and could call out a name to show that they had some connection to that teammate.

115
00:08:01,936 --> 00:08:07,401
But, due to a bug, it always picked the first character on the list, which was Alex.

116
00:08:07,401 --> 00:08:08,742
So players shot Alex a lot.

117
00:08:08,742 --> 00:08:11,885
You can buy t-shirts with that on now.

118
00:08:12,505 --> 00:08:16,146
There's an achievement named after this in the game as well.

119
00:08:16,146 --> 00:08:19,267
We embraced this as a company and we even called some of the bosses

120
00:08:19,267 --> 00:08:21,767
Alex, making fun of ourselves.

121
00:08:21,767 --> 00:08:25,068
But we also committed to avoiding this in the sequel.

122
00:08:25,068 --> 00:08:27,669
The Division 2 released in March 2019.

123
00:08:27,669 --> 00:08:33,790
It's set some months after the first game with themes of regrowth

124
00:08:33,790 --> 00:08:34,490
and recovery.

125
00:08:36,598 --> 00:08:40,821
Now we're in summertime Washington DC and New York City again in the DLC.

126
00:08:40,821 --> 00:08:48,246
We've got extreme weather, heat, rainstorms, magnitude of technical improvements have been

127
00:08:48,246 --> 00:08:53,729
made since the first game. NPCs have got improved behavior, they can do more, they adapt to your

128
00:08:53,729 --> 00:09:00,353
play style. Better AI means that the NPCs need to feel more intelligent too. We also set an

129
00:09:00,353 --> 00:09:04,976
ambitious development schedule giving us a smaller time frame to build upon the foundations of the

130
00:09:04,976 --> 00:09:05,416
first game.

131
00:09:11,179 --> 00:09:14,922
So let's look at how we aimed to use NPC behavior

132
00:09:14,922 --> 00:09:17,684
to make their barks relevant and engaging.

133
00:09:17,684 --> 00:09:19,546
And any American viewers are gonna be twitching

134
00:09:19,546 --> 00:09:22,949
at the UK spelling throughout this slideshow.

135
00:09:22,949 --> 00:09:24,731
So working with the NPC AI team,

136
00:09:24,731 --> 00:09:27,493
and based on our experiences from the first game,

137
00:09:27,493 --> 00:09:29,955
we developed some ground rules for our system

138
00:09:29,955 --> 00:09:31,757
that we hoped would fulfill the ambitions

139
00:09:31,757 --> 00:09:33,458
whilst keeping the amount of writing

140
00:09:33,458 --> 00:09:34,860
and recording manageable,

141
00:09:34,860 --> 00:09:37,742
because economy is king when it comes to barks.

142
00:09:39,547 --> 00:09:44,530
Every bark will be triggered by an AI decision and will have a purpose and a reason for being said.

143
00:09:44,530 --> 00:09:51,815
They're not random. Barks should be simple to implement. The database will do the heavy lifting

144
00:09:51,815 --> 00:09:56,719
of any of the rules and VO line selection. And I should add a note here that we opted not to do

145
00:09:56,719 --> 00:10:04,864
a complex rule-based dialogue system. Barks will be connected to the NPC AI state,

146
00:10:04,864 --> 00:10:07,206
for example, guarding or fighting.

147
00:10:08,622 --> 00:10:12,544
The context or circumstances will alter which line is picked to play,

148
00:10:12,544 --> 00:10:17,187
make them more relevant and useful, which we'll cover in a later section.

149
00:10:17,187 --> 00:10:21,369
And NPCs should seem aware of their team and will respond to things set

150
00:10:21,369 --> 00:10:24,190
around them. They won't ignore their friends.

151
00:10:24,190 --> 00:10:30,413
This is an AI behavior tree in Snowdrop, our engine.

152
00:10:30,413 --> 00:10:34,996
It looks like a simple flow diagram at the top level,

153
00:10:34,996 --> 00:10:36,497
but it can go quite deep.

154
00:10:42,938 --> 00:10:46,380
As the AI makes decisions about what actions to take,

155
00:10:46,380 --> 00:10:47,881
we looked for opportunities

156
00:10:47,881 --> 00:10:52,263
where a person might say something.

157
00:10:52,263 --> 00:10:54,003
Broadly speaking, there are two approaches

158
00:10:54,003 --> 00:10:57,125
to designing barks driven by behavior.

159
00:10:57,125 --> 00:11:00,627
Literal barks, describing actions or reactions.

160
00:11:00,627 --> 00:11:02,347
These are useful for the player

161
00:11:02,347 --> 00:11:04,508
to get immediate basic gameplay information.

162
00:11:04,508 --> 00:11:10,331
Grenade out, advancing on enemy, shields being broken.

163
00:11:14,613 --> 00:11:20,438
And then non-literal barks. Things a person might say when doing a behaviour but that are not tied

164
00:11:20,438 --> 00:11:28,404
strictly to that behaviour. We can do this Bravo Squad, flank enemy. Contextual spawn,

165
00:11:28,404 --> 00:11:33,769
the fallen shall be answered. Being revived by a friendly, you get my rations this week.

166
00:11:33,769 --> 00:11:40,474
These are things that build the character or the world. They're mood setters and flavour.

167
00:11:43,604 --> 00:11:50,246
A bark that on the surface seems very literal can become non-literal with creative writing.

168
00:11:50,246 --> 00:11:57,048
Reloading can be literal or it can give us some insight into their character and the world.

169
00:11:57,048 --> 00:12:05,590
The writers are very involved in the design process and we discover which barks are best

170
00:12:05,590 --> 00:12:10,512
written literally or not and even then a lot can change when it comes to the actual writing.

171
00:12:11,414 --> 00:12:18,538
Something that sounded very sensible on paper may just not work for writing and it needs to be redesigned.

172
00:12:18,538 --> 00:12:21,700
So iteration is central to this process.

173
00:12:21,700 --> 00:12:25,503
When we talk about barks at Massive, we group them by a stimulus.

174
00:12:25,503 --> 00:12:33,387
An individual bark is a line said by an NPC, but a stimulus is a parent to those barks.

175
00:12:33,387 --> 00:12:39,831
This simple word can be used by an NPC designer to call a bark at the appropriate place in their behaviour.

176
00:12:40,875 --> 00:12:45,396
when we, the voice team, will control the playback of that.

177
00:12:45,396 --> 00:12:49,558
So here we have the design for the stimulus Enemy Down.

178
00:12:49,558 --> 00:12:51,539
The NPC has killed an enemy and decides

179
00:12:51,539 --> 00:12:53,800
that they're going to announce this.

180
00:12:53,800 --> 00:12:58,501
We keep the design simple and useful for several audiences.

181
00:12:58,501 --> 00:13:02,643
The implementer knows which characters need this bug

182
00:13:02,643 --> 00:13:03,583
and when it should play.

183
00:13:03,583 --> 00:13:07,085
The voice designer knows which characters are involved

184
00:13:07,085 --> 00:13:10,346
and which conditional metadata to tag the line with.

185
00:13:11,911 --> 00:13:13,991
The writers have context that they can write for,

186
00:13:13,991 --> 00:13:16,612
and there's several writers involved,

187
00:13:16,612 --> 00:13:19,573
so these examples are very helpful.

188
00:13:19,573 --> 00:13:23,354
And the voice director knows what the NPC's motivation is,

189
00:13:23,354 --> 00:13:25,854
which they can then communicate to the actor.

190
00:13:25,854 --> 00:13:28,315
In session, they'll refer to this quite a lot

191
00:13:28,315 --> 00:13:33,556
and become very familiar with our Barks database.

192
00:13:33,556 --> 00:13:37,057
Asim and I are stored in our internal database

193
00:13:37,057 --> 00:13:38,717
and script management tool, Oasis.

194
00:13:39,940 --> 00:13:49,345
On the left is our AI Scenes Explorer, where all the barks for the different factions and families of NPC are built.

195
00:13:49,345 --> 00:13:51,546
Central is a script writer.

196
00:13:51,546 --> 00:13:57,228
Below that is the Excel-like interface where we can amend all kinds of data per line.

197
00:13:57,228 --> 00:14:05,712
And on the right, we see the Character Explorer and Media Player, where we can audition the robo, voice, temp, or the recorded lines.

198
00:14:06,805 --> 00:14:13,470
Oasis also stores and organizes our story, scripts, cinematics, menu text, and all of

199
00:14:13,470 --> 00:14:15,051
the other localized languages.

200
00:14:15,051 --> 00:14:24,237
There were a total of 645 different AI stimuli that NPCs could use at the launch of Division 2.

201
00:14:24,237 --> 00:14:32,423
This accounts for around 65,500 AI voice lines or barks, split across 288 different characters.

202
00:14:35,348 --> 00:14:41,073
Here's an example of some Barks stimuli from the first Division game.

203
00:14:41,073 --> 00:14:45,137
Each one of these had to be hooked up manually in Snowdrop for each NPC archetype.

204
00:14:45,137 --> 00:14:49,661
And if the stimuli moved inside Oasis, it could break.

205
00:14:49,661 --> 00:14:53,644
This was due to the stimulus being called by its location path in Oasis,

206
00:14:53,644 --> 00:14:54,985
like a website URL.

207
00:14:56,105 --> 00:15:01,670
The barks were also evenly weighted between the build-up to combat, actual fighting and detection.

208
00:15:01,670 --> 00:15:11,100
But players spent a lot more time in combat, so the NPCs quickly boiled down to a central, core set of combat barks that are played the most frequently.

209
00:15:13,303 --> 00:15:18,147
For the Division 2, knowing that our NPCs would be spending a lot of time fighting,

210
00:15:18,147 --> 00:15:23,852
we expanded the combat bark section a lot and covered more new behaviours and special

211
00:15:23,852 --> 00:15:27,575
abilities, growing the combat bark's line count too.

212
00:15:27,575 --> 00:15:33,099
Some stimuli now have as many as 16 barks per NPC to help avoid repetition.

213
00:15:34,462 --> 00:15:39,886
Philip Dunstan's AI team also simplifies the classification of a stimulus to just the

214
00:15:39,886 --> 00:15:45,631
last word of the location path, making it much easier to implement.

215
00:15:45,631 --> 00:15:48,954
And if anything moved in OASIS, that link wasn't then broken.

216
00:15:48,954 --> 00:15:54,939
The designer now just had a simple list of words to pick from instead of a page of URLs

217
00:15:54,939 --> 00:15:56,340
and needing to find the exact one.

218
00:15:57,583 --> 00:16:02,046
we had 288 AI characters in the game at launch,

219
00:16:02,046 --> 00:16:04,208
all pulling from 645 stimuli,

220
00:16:04,208 --> 00:16:05,929
so this was a huge time saver.

221
00:16:05,929 --> 00:16:12,133
Once the stimulus exists in Oasis and has some barks,

222
00:16:12,133 --> 00:16:15,215
the data runs through a build system into Perforce

223
00:16:15,215 --> 00:16:18,737
and then can be implemented in the Snowdrop engine.

224
00:16:18,737 --> 00:16:23,060
The NPC then gets a stimulus that will trigger

225
00:16:23,060 --> 00:16:24,301
every time it runs a behavior.

226
00:16:25,737 --> 00:16:32,699
Some of these behaviors are rare, but others can trigger repeatedly.

227
00:16:32,699 --> 00:16:37,760
This is where the dialogue controls come into play,

228
00:16:37,760 --> 00:16:39,780
throttling the barks from spamming.

229
00:16:39,780 --> 00:16:43,681
Let's see a short 30-second clip

230
00:16:43,681 --> 00:16:45,381
of some different contextual barks in action,

231
00:16:45,381 --> 00:16:48,702
and we'll return to this later to break down what's happening.

232
00:17:23,332 --> 00:17:27,113
And why not use a logic or rule-based system for BARCs?

233
00:17:27,113 --> 00:17:31,574
Well, a series of contextual ordered rules that control the flow.

234
00:17:31,574 --> 00:17:36,556
We looked into this early on, and it would have given us greater control,

235
00:17:36,556 --> 00:17:40,718
but it would have also grown complicated and ended up being time-consuming to implement.

236
00:17:40,718 --> 00:17:44,259
We'd have still been developing and testing the theory

237
00:17:44,259 --> 00:17:46,860
when we actually needed to be recording and implementing.

238
00:17:48,212 --> 00:17:54,914
We opted for a data-driven solution with simple controls that are tuned centrally and can be overridden at a more granular level.

239
00:17:54,914 --> 00:18:04,076
This can tie you in knots when you're tuning values, but if you stick to the principles that you set at the beginning, this can be a good solution.

240
00:18:04,076 --> 00:18:09,858
We also tested out conversation systems, like in the example here from the first game.

241
00:18:10,784 --> 00:18:16,085
The NPCs had a selection of starters which they could play when they were not in combat

242
00:18:16,085 --> 00:18:18,626
and they had a larger variety of responses.

243
00:18:18,626 --> 00:18:22,747
This could yield conversations that varied and was economic with the line count.

244
00:18:22,747 --> 00:18:28,429
To improve on this for the sequel, the obvious goal was reducing repetition because there

245
00:18:28,429 --> 00:18:33,010
were far fewer starters than there were responses, so they quickly became familiar.

246
00:18:35,513 --> 00:18:45,001
What we decided to do, rather than invest a lot of time in an elaborate rule-based conversation

247
00:18:45,001 --> 00:18:52,026
system, was to create a matrix system of starters and responses that were interchangeable.

248
00:18:52,026 --> 00:18:57,771
This proved quite the writing challenge, but the result is a seemingly fluid and hugely

249
00:18:57,771 --> 00:18:58,892
variable simple conversation system.

250
00:18:58,892 --> 00:19:04,236
Here's an early working prototype of the system with some OASIS-generated RoboVoice.

251
00:19:07,082 --> 00:19:10,085
Nice day, isn't it?

252
00:19:10,085 --> 00:19:12,387
Yes, lovely day.

253
00:19:12,387 --> 00:19:15,110
Nice day.

254
00:19:15,110 --> 00:19:19,494
In the example of a character reloading their weapon,

255
00:19:19,494 --> 00:19:21,856
they'll trigger the reload stimulus,

256
00:19:21,856 --> 00:19:28,742
and this will then ping nearby friendly NPCs in their fireteam within a radius,

257
00:19:28,742 --> 00:19:30,444
and pick one that is allowed to speak.

258
00:19:31,623 --> 00:19:36,725
They will then respond to the reload bark with their relevant conversation response stimulus,

259
00:19:36,725 --> 00:19:39,206
which in this case is cover ally respond.

260
00:19:39,206 --> 00:19:46,589
Furthermore, the clever AI team were able to grab the timing of the starter voice line

261
00:19:46,589 --> 00:19:49,390
and feed the length of that to the client,

262
00:19:49,390 --> 00:19:54,112
which then cues the selected response bark to play after the elapsed time.

263
00:19:54,112 --> 00:19:56,973
So the timing feels natural.

264
00:19:56,973 --> 00:19:58,934
Here's another video of an early test.

265
00:20:01,576 --> 00:20:09,426
They're exposed! Take them down!

266
00:20:09,426 --> 00:20:13,492
This is of huge benefit to our localization team,

267
00:20:13,492 --> 00:20:16,516
because the system doesn't care what language the player is using.

268
00:20:17,135 --> 00:20:21,916
This is fantastic because it means that we can give the localization teams

269
00:20:21,916 --> 00:20:24,517
no strict timing conditions for the barks.

270
00:20:24,517 --> 00:20:28,158
And so the actors have the freedom to deliver the lines at the right cadence

271
00:20:28,158 --> 00:20:31,018
and rhythm for their own language without being constrained by the English

272
00:20:31,018 --> 00:20:31,278
line length.

273
00:20:31,278 --> 00:20:32,699
Reloading. Go. I've got you covered. They're out in the open.

274
00:20:32,699 --> 00:20:33,079
We've got a target.

275
00:20:45,163 --> 00:20:52,248
From this angle, you can see the debug timing arrow here better,

276
00:20:52,248 --> 00:21:06,119
and the countdown timer that shows when the response line is about to play.

277
00:21:11,285 --> 00:21:13,167
And this is what it looks like in Oasis.

278
00:21:13,167 --> 00:21:17,310
This column shows the relevant stimulus name, reload.

279
00:21:17,310 --> 00:21:21,393
And then here are the barks themselves.

280
00:21:21,393 --> 00:21:24,375
And this is where we tag each line with a conversation

281
00:21:24,375 --> 00:21:25,455
response stimulus.

282
00:21:25,455 --> 00:21:27,737
In this case, cover ally respond.

283
00:21:27,737 --> 00:21:31,380
The response itself is a stimulus.

284
00:21:31,380 --> 00:21:34,182
And so here's an example of what that looks like.

285
00:21:34,182 --> 00:21:35,202
And the text lines for recording.

286
00:21:40,928 --> 00:21:45,452
So the starter calls one of the above, for example, ammo is gone,

287
00:21:45,452 --> 00:21:48,094
and the response is any of the below.

288
00:21:48,094 --> 00:21:48,675
I'll give you cover.

289
00:21:48,675 --> 00:21:53,078
As you can imagine, this can sometimes be challenging for writers,

290
00:21:53,078 --> 00:21:56,141
and to make things more complicated,

291
00:21:56,141 --> 00:21:59,143
we use the responses in as many situations as we can.

292
00:21:59,143 --> 00:22:04,988
Cover ally respond can also be triggered by the advance on enemy stimulus, for example,

293
00:22:04,988 --> 00:22:07,650
when an NPC wants covering fire when they want to move up.

294
00:22:08,645 --> 00:22:12,746
The idea was to build responses that can apply to as many situations as possible

295
00:22:12,746 --> 00:22:14,966
and fill the world with these mini-conversations

296
00:22:14,966 --> 00:22:18,907
that make you feel like the NPCs are engaging with each other.

297
00:22:18,907 --> 00:22:22,108
Let's see this working in-game

298
00:22:22,108 --> 00:22:27,670
as a shootout between some civilians and the True Son's militia reaches a conclusion.

299
00:22:39,020 --> 00:22:41,560
Is that... are we okay?

300
00:22:41,560 --> 00:22:43,901
There'll be more tomorrow.

301
00:22:43,901 --> 00:22:46,062
We love to talk about the weather.

302
00:22:46,062 --> 00:22:54,644
We felt that to make our NPCs more human,

303
00:22:54,644 --> 00:22:57,785
we should let them talk about the weather too.

304
00:22:57,785 --> 00:23:01,846
Especially in an environment where the weather

305
00:23:01,846 --> 00:23:04,087
is more and more extreme.

306
00:23:09,125 --> 00:23:12,828
This could have made our NPC behaviour graphs even more complicated,

307
00:23:12,828 --> 00:23:15,430
but with our excellent AI programmers Mons and Daniel,

308
00:23:15,430 --> 00:23:17,291
we conceived of the tag system,

309
00:23:17,291 --> 00:23:20,293
where the server can check the conditions such as the weather,

310
00:23:20,293 --> 00:23:23,736
time of day, or even what object an NPC is hiding behind,

311
00:23:23,736 --> 00:23:25,798
and change which barks will play as a result.

312
00:23:25,798 --> 00:23:28,760
This system turned out to be so useful,

313
00:23:28,760 --> 00:23:32,163
it was this kind of set and forget kind of logic,

314
00:23:32,163 --> 00:23:36,046
that these tags are now used for various systems in the game,

315
00:23:36,046 --> 00:23:38,768
such as contextual animations and the living world system.

316
00:23:41,638 --> 00:23:49,764
We started by making a list of the conditions we thought would be the most interesting for characters to talk about, or would be the most relevant to the player.

317
00:23:49,764 --> 00:23:58,130
Things like talking about a recent story, changing the barks based on the time of day, or the weather.

318
00:23:58,130 --> 00:24:05,735
Even target health, miscellaneous events, have they killed an enemy recently, have they lost a teammate.

319
00:24:11,163 --> 00:24:17,506
The NPC team made a debug display to reveal which tags are active on NPCs and on the player,

320
00:24:17,506 --> 00:24:22,028
or on a cover prop such as a car, crates or dumpsters.

321
00:24:22,028 --> 00:24:24,669
Here's a clip from another test environment.

322
00:24:43,355 --> 00:24:48,217
And we found that enemies didn't really indicate enough threat to the player when they targeted you.

323
00:24:48,217 --> 00:24:54,301
So if the enemies could call their target out by some kind of identifier, it would be pretty cool.

324
00:24:54,301 --> 00:25:00,564
We thought about using player customization, hats or the size of the gun or a new gear.

325
00:25:00,564 --> 00:25:08,449
But as we add more customization to the game regularly, we risked having to record new lines with all of the combat actors.

326
00:25:08,449 --> 00:25:09,810
And there were a lot of actors.

327
00:25:11,404 --> 00:25:13,848
our game being heavily dependent on taking cover,

328
00:25:13,848 --> 00:25:18,415
it made sense to involve the cover props in our box tags.

329
00:25:21,201 --> 00:25:25,985
With the help of the Environment Art team, we polled a list of the most commonly placed cover assets,

330
00:25:25,985 --> 00:25:28,487
which we categorised in the first round.

331
00:25:28,487 --> 00:25:32,090
Big thanks to Miki and Sonja and the props team for their help with that mammoth task.

332
00:25:32,090 --> 00:25:35,392
This gave us a shortlist of the most common cover props.

333
00:25:35,392 --> 00:25:41,237
And the NPCs could then call out as they flanked, attacked or searched for somebody hiding behind them.

334
00:25:41,237 --> 00:25:42,938
Here's an example of the car tag in action.

335
00:25:49,967 --> 00:25:52,327
Behind the car! He's flanking us!

336
00:25:52,327 --> 00:25:54,928
Get out of there!

337
00:25:54,928 --> 00:25:58,850
The result? The player feels singled out and special.

338
00:25:58,850 --> 00:26:04,072
It gives you a bit of a thrill to hear them spot you when you think you're being sneaky.

339
00:26:04,072 --> 00:26:12,375
The other big point of context for us was how people talk differently alone to when they're in a group or with company.

340
00:26:14,539 --> 00:26:28,550
If we make 10 barks for a stimulus, 5 of which can only play when the player is alone, and 5 when the NPC is alone, and 5 when the NPC is in a group, in either case we only have 5 lines to choose from.

341
00:26:28,550 --> 00:26:39,839
If down the line a design change means that the NPC is used alone a lot, in missions for example, then those 5 alone barks will get heard way more often than the other 5.

342
00:26:43,207 --> 00:26:49,871
If instead we don't tag 7 lines with any group information, and then they can play whenever,

343
00:26:49,871 --> 00:26:56,175
and we tag 3 with in group only, when they're alone we have 7 lines to pick from, and when

344
00:26:56,175 --> 00:26:57,076
they're in a group we have 10.

345
00:26:57,076 --> 00:26:57,496
The advantage...

346
00:27:00,493 --> 00:27:05,736
is it gives us maximum variety for the same line count and it provides us with plenty of options

347
00:27:05,736 --> 00:27:11,518
in either case and it is more efficient. The disadvantage is it makes three of them rarer

348
00:27:11,518 --> 00:27:13,599
and introduces new writing challenges.

349
00:27:13,599 --> 00:27:19,021
Take a specific example, reloading. Why should the NPCs say they're reloading?

350
00:27:19,021 --> 00:27:24,183
To inform teammates that they're going to be vulnerable.

351
00:27:25,996 --> 00:27:28,097
If they're on their own, what should they say?

352
00:27:28,097 --> 00:27:35,302
Is this still a moment that we want to signpost to players so that we tell them that they're

353
00:27:35,302 --> 00:27:36,163
going to stop shooting for a second?

354
00:27:36,163 --> 00:27:37,724
The answer is yes.

355
00:27:37,724 --> 00:27:43,368
So we still want to give the player barks to react to, but the NPC is alone, they're

356
00:27:43,368 --> 00:27:47,851
now talking to themselves, their weapon, the enemy, or out to the world at large.

357
00:27:47,851 --> 00:27:50,753
And the writers got quite creative with these.

358
00:27:53,019 --> 00:27:56,922
Here's an example from the closed beta when tagging was still a work in progress

359
00:27:56,922 --> 00:27:58,844
of why it's important to get this right.

360
00:27:58,844 --> 00:27:59,384
Oh I'm hearing reloads.

361
00:27:59,384 --> 00:28:04,409
Very tactical of you to scream out when you're reloading.

362
00:28:04,409 --> 00:28:05,950
He's by himself. I need to reload.

363
00:28:05,950 --> 00:28:07,211
Oh I feel so bad for that guy.

364
00:28:07,211 --> 00:28:08,852
Here are some writing examples.

365
00:28:08,852 --> 00:28:12,736
Enemy down is a stimulus that triggers when somebody has killed an enemy.

366
00:28:22,728 --> 00:28:24,589
by using the group tag on the lines,

367
00:28:24,589 --> 00:28:26,489
we can set the script up for the writers

368
00:28:26,489 --> 00:28:28,690
so that they then know what context they're writing for.

369
00:28:28,690 --> 00:28:30,911
Let's run through some of these

370
00:28:30,911 --> 00:28:32,791
and look at why they can or can't play.

371
00:28:32,791 --> 00:28:33,571
So here, the line is, got you.

372
00:28:33,571 --> 00:28:38,893
They're talking to the dead enemy

373
00:28:38,893 --> 00:28:40,933
and it works well in all scenarios.

374
00:28:40,933 --> 00:28:43,814
There is no tag, so it can play in any scenario.

375
00:28:43,814 --> 00:28:44,414
Did you see that one?

376
00:28:47,657 --> 00:28:49,758
They're talking to their teammates.

377
00:28:49,758 --> 00:28:52,199
It needs a tag to say that I'm only in a group,

378
00:28:52,199 --> 00:28:53,499
when I can say this line,

379
00:28:53,499 --> 00:28:55,940
and I'm with my allies, so I can play this line, yes.

380
00:28:55,940 --> 00:28:56,660
I need to be faster next time.

381
00:28:56,660 --> 00:28:57,180
I'm talking to myself.

382
00:28:57,180 --> 00:28:59,001
Works in any scenario.

383
00:28:59,001 --> 00:28:59,521
There's no tag on this.

384
00:28:59,521 --> 00:29:02,602
It can play regardless of whether I'm with friends or not.

385
00:29:02,602 --> 00:29:03,862
And it will play if I'm alone.

386
00:29:03,862 --> 00:29:05,142
And hey, I got him.

387
00:29:05,142 --> 00:29:06,663
I'm definitely talking to a teammate here.

388
00:29:15,952 --> 00:29:21,657
So it needs a tag, and if I'm not with friends, this line cannot play.

389
00:29:21,657 --> 00:29:28,383
So, wrapping up this section, let's return to this clip from earlier and break down what's happening.

390
00:29:28,383 --> 00:29:39,573
The player kills an enemy, and another enemy responds, friendly down, showing awareness.

391
00:29:47,105 --> 00:29:50,928
The player uses a health pack and the enemy starts to call,

392
00:29:50,928 --> 00:29:54,031
that agent's healed, but is shot mid-sentence.

393
00:29:54,031 --> 00:29:56,673
Any other player would still have heard this line stop here

394
00:29:56,673 --> 00:29:57,694
at the same time.

395
00:29:57,694 --> 00:30:00,016
A barely audible enemy is also shouting a taunt

396
00:30:00,016 --> 00:30:00,796
in the background.

397
00:30:00,796 --> 00:30:08,403
A friendly civilian NPC arrives to support

398
00:30:08,403 --> 00:30:11,686
and they see the player and say, told you they're here

399
00:30:11,686 --> 00:30:14,028
to another civilian teammate, because they're in a group.

400
00:30:23,757 --> 00:30:27,960
The civilian starts to attack the enemy shouting insults and using their faction name True

401
00:30:27,960 --> 00:30:28,181
Sons.

402
00:30:28,181 --> 00:30:33,905
This shows that she knows who the enemy is and it gives us some idea that she hates these

403
00:30:33,905 --> 00:30:34,005
guys.

404
00:30:34,005 --> 00:30:38,889
This is because the dialogue system rolled a line with the tag target faction True Sons,

405
00:30:38,889 --> 00:30:41,971
which has a higher chance to play than untagged lines.

406
00:30:41,971 --> 00:30:45,995
The True Sons start to panic and shout.

407
00:30:45,995 --> 00:30:51,639
We've been flanked and they've brought reinforcements.

408
00:30:55,988 --> 00:31:01,156
Another true son shouts, get back, which is a response to one of the first two lines.

409
00:31:01,156 --> 00:31:08,588
Another civilian shouts, oh no, as she is flanked in turn by an enemy.

410
00:31:14,399 --> 00:31:18,684
The flanking enemy calls out stupid civilians, making targets of themselves.

411
00:31:18,684 --> 00:31:25,751
This line has the tags target out of cover, faction, civilian militia and group in group.

412
00:31:25,751 --> 00:31:28,795
He's pointing out an easy target's attention to his team.

413
00:31:35,148 --> 00:31:37,709
At the end there, another True Sun ran out of bullets and shouted,

414
00:31:37,709 --> 00:31:38,850
got to reload.

415
00:31:38,850 --> 00:31:41,151
And the final True Sun wants to destroy the player's hive,

416
00:31:41,151 --> 00:31:43,752
which is there to revive downed friendlies.

417
00:31:43,752 --> 00:31:44,612
And he orders, destroy that thing,

418
00:31:44,612 --> 00:31:45,733
but is killed mid-sentence by the player.

419
00:31:45,733 --> 00:31:47,073
Some brief notes on our online experience,

420
00:31:47,073 --> 00:31:48,094
which I think is one of our coolest,

421
00:31:48,094 --> 00:31:49,014
yet most under-recognized achievements.

422
00:32:03,022 --> 00:32:09,725
As mentioned in the Alex example, in the first game, most barks were played on the client and were not synchronized across players.

423
00:32:09,725 --> 00:32:16,969
In the sequel, we want players to experience the same voice lines, regardless of location or language.

424
00:32:16,969 --> 00:32:23,432
The NPC AI team move the entire dialogue system from the client to the server.

425
00:32:23,432 --> 00:32:29,235
This now does the heavy lifting of VO bark triggering and instructs the local client which voice lines to play.

426
00:32:30,927 --> 00:32:33,470
This also works hand-in-hand with localization,

427
00:32:33,470 --> 00:32:35,572
allowing people to share the same adventures

428
00:32:35,572 --> 00:32:36,813
in different languages.

429
00:32:36,813 --> 00:32:39,336
It opens up server-side updates

430
00:32:39,336 --> 00:32:43,460
as a way to tune the system once it's online,

431
00:32:43,460 --> 00:32:46,223
making fixes quick and simple to do.

432
00:32:46,223 --> 00:32:49,647
And it gives us access to central,

433
00:32:49,647 --> 00:32:51,729
anonymized statistics about Barks playback,

434
00:32:51,729 --> 00:32:53,851
because it's not coming from the player client.

435
00:32:57,377 --> 00:33:00,759
Here's another closed beta video of a team enjoying the bugs as a group.

436
00:33:00,759 --> 00:33:01,140
God damn it!

437
00:33:01,140 --> 00:33:01,560
I'm pinned!

438
00:33:01,560 --> 00:33:02,100
God, I love the swearing.

439
00:33:02,100 --> 00:33:03,381
Oh wow, good shot!

440
00:33:03,381 --> 00:33:04,783
I'm already 95,000 damage.

441
00:33:04,783 --> 00:33:07,585
You didn't even let him finish his sentence.

442
00:33:07,585 --> 00:33:08,586
God damn it, I'm pinned!

443
00:33:08,586 --> 00:33:10,087
Brother, I am pinned here.

444
00:33:10,087 --> 00:33:10,867
I'm pinned.

445
00:33:10,867 --> 00:33:11,468
I am pinned.

446
00:33:11,468 --> 00:33:12,449
And the voice production.

447
00:33:12,449 --> 00:33:12,709
I'm pinned.

448
00:33:12,709 --> 00:33:13,129
I'm pinned.

449
00:33:13,129 --> 00:33:13,930
I'm pinned.

450
00:33:13,930 --> 00:33:14,310
I'm pinned.

451
00:33:14,310 --> 00:33:15,011
I'm pinned.

452
00:33:15,011 --> 00:33:16,012
I'm pinned.

453
00:33:16,012 --> 00:33:16,372
I'm pinned.

454
00:33:16,372 --> 00:33:16,812
I'm pinned.

455
00:33:16,812 --> 00:33:17,152
I'm pinned.

456
00:33:17,152 --> 00:33:17,653
I'm pinned.

457
00:33:17,653 --> 00:33:18,073
I'm pinned.

458
00:33:18,073 --> 00:33:18,854
I'm pinned.

459
00:33:18,854 --> 00:33:19,454
I'm pinned.

460
00:33:19,454 --> 00:33:19,634
I'm pinned.

461
00:33:26,118 --> 00:33:28,921
Our development cycle looks like most games,

462
00:33:28,921 --> 00:33:30,843
starting with design, writing,

463
00:33:30,843 --> 00:33:32,684
going through implementation and testing,

464
00:33:32,684 --> 00:33:35,267
and then casting and the studio.

465
00:33:35,267 --> 00:33:38,050
With an ambitious scope and aggressive schedule,

466
00:33:38,050 --> 00:33:41,573
we needed to optimize our recording process where we could.

467
00:33:42,979 --> 00:33:51,064
To achieve the recording of our 65,000-odd barks for more than 189 combat characters across a summer,

468
00:33:51,064 --> 00:33:58,028
we relied on a well-trained team of voice directors, engineers who supervised and ran the recording sessions on a micro level

469
00:33:58,028 --> 00:34:01,509
and on an editorial army put in place to deliver the results to us here in Sweden.

470
00:34:01,509 --> 00:34:03,551
And most of our recording sessions were run remotely.

471
00:34:09,976 --> 00:34:15,879
It's not as fun, it's not always as smooth, but it's green, it's safe, and it's efficient.

472
00:34:15,879 --> 00:34:21,121
Although the director was usually present at the studio as well.

473
00:34:21,121 --> 00:34:28,764
Due to necessity, we've worked in lots of different studios over this project, so consistency is always a challenge.

474
00:34:28,764 --> 00:34:35,907
We send reference clips for the actors to make extensive recording specification documents,

475
00:34:35,907 --> 00:34:39,669
though we always have to make some adjustments to suit the studio.

476
00:34:41,077 --> 00:34:47,259
Ideally, we'd have recorded everything in one place with one director, one engineer, and so on.

477
00:34:47,259 --> 00:34:52,842
But with our aggressive schedule and actors all over the world, we became very good at adapting.

478
00:34:52,842 --> 00:35:02,066
Skype for Business and other call services became our necessary ally. I even wrote an etiquette

479
00:35:02,066 --> 00:35:08,089
guide for our team so they had a structure to our calls and sessions, which is a whole other

480
00:35:08,089 --> 00:35:09,009
GDC talk in itself.

481
00:35:13,038 --> 00:35:19,960
We had a more or less open talkback communication in the sessions so I could talk to the director,

482
00:35:19,960 --> 00:35:24,682
the actor when needed, the engineer, and in this instance they're all in the same room but

483
00:35:24,682 --> 00:35:29,223
we used a lot of different studios due to the amount of recording we were doing in so many

484
00:35:29,223 --> 00:35:36,986
different places. And microphones. To avoid losing takes and to suit the various ways dialogue can be

485
00:35:36,986 --> 00:35:42,228
heard in The Division 2, we used four microphones set up at all sessions.

486
00:35:43,767 --> 00:35:48,550
If we'd had more shootouts at the beginning, maybe we'd have dropped the MKH-40,

487
00:35:48,550 --> 00:35:51,171
which was often roomy in the smaller studios.

488
00:35:51,171 --> 00:35:55,433
Here we've got the MKH-60 at the back, and then the 40, which was our backup front mic,

489
00:35:55,433 --> 00:35:58,715
and Jed posing in the background there.

490
00:35:58,715 --> 00:36:01,276
Then we've got the COS-11 LAV, forehead mounted.

491
00:36:10,067 --> 00:36:15,091
and a U87 AI or U87, which is not pictured. I don't have a picture of that.

492
00:36:15,091 --> 00:36:22,257
Having all the mics set up at all sessions became a bit of a burden, but it did save us a lot of

493
00:36:22,257 --> 00:36:27,001
time where we might have otherwise had to go back and re-record something or set up another

494
00:36:27,001 --> 00:36:28,522
microphone for another part of the script.

495
00:36:29,472 --> 00:36:31,294
If there's air on a mic or an actor is off-center,

496
00:36:31,294 --> 00:36:34,176
then there's usually a perfectly good take

497
00:36:34,176 --> 00:36:34,837
that's a close match.

498
00:36:34,837 --> 00:36:36,678
And the MKH-40 often served as a great backup for the 60

499
00:36:36,678 --> 00:36:37,239
or for quieter lines

500
00:36:37,239 --> 00:36:39,360
where the 60 wasn't picking them up as well.

501
00:36:39,360 --> 00:36:40,361
Microphone purpose.

502
00:36:40,361 --> 00:36:42,443
The MKH-60 and the 40s are backup for shotguns.

503
00:36:42,443 --> 00:36:43,844
They were backed off for in-world barks

504
00:36:43,844 --> 00:36:44,385
and mocap with booms.

505
00:37:26,806 --> 00:37:32,410
And we've got the COS 11, forehead mounted, for all of our radio calls.

506
00:37:32,410 --> 00:37:44,239
And the U87 for our special characters and any cinematics or voiceover.

507
00:37:55,531 --> 00:38:00,975
Friendly combatants nearby.

508
00:38:00,975 --> 00:38:05,859
I'd also like to say something about how many files were cut and sent to us by the editorial team,

509
00:38:05,859 --> 00:38:08,662
but it became impossible to count. It was a lot.

510
00:38:08,662 --> 00:38:13,786
But the voice directors, and sometimes us, would call selects and alts in the sessions

511
00:38:13,786 --> 00:38:19,010
so that we didn't have to get every clean take and go through it all for delivery.

512
00:38:19,010 --> 00:38:20,811
Otherwise we'd have never finished the game.

513
00:38:21,558 --> 00:38:24,841
Sometimes we did have to go back to a session and ask for more alts on a line,

514
00:38:24,841 --> 00:38:29,426
but that happened so infrequently that that was a huge time saver.

515
00:38:29,426 --> 00:38:32,288
Balancing

516
00:38:32,288 --> 00:38:41,597
All the barks that NPCs can say lead to a very noisy situation if uncontrolled.

517
00:38:41,597 --> 00:38:43,860
Spam is definitely not engaging.

518
00:38:45,005 --> 00:38:54,049
Our simple dialogue control system is used to prioritize and restrict the playback of the voice lines from being a spammy mess to a more natural cadence.

519
00:38:54,049 --> 00:39:01,953
Using cooldown timers, we balance the ebb and flow of the combat barks experience, aiming to keep the listener engaged by hearing fresh content.

520
00:39:01,953 --> 00:39:03,374
We also have a chance to play.

521
00:39:06,899 --> 00:39:12,963
The server makes a dice roll every time it calls a stimulus, giving some barks a higher or a lower chance to play,

522
00:39:12,963 --> 00:39:19,347
and it gives us another tool to balance playback and reduce the occasion of the more memorable and specific writing.

523
00:39:19,347 --> 00:39:28,652
Lastly, a priority system that we can set on a stimuli shines a light on the most important decisions that an NPC is making.

524
00:39:31,360 --> 00:39:33,802
We can apply these rules at several levels.

525
00:39:33,802 --> 00:39:36,903
At a broad level, just to start with,

526
00:39:36,903 --> 00:39:39,825
ensuring the NPCs don't all talk at once,

527
00:39:39,825 --> 00:39:42,707
or that we don't hear from one individual too often.

528
00:39:42,707 --> 00:39:47,770
Then, more granularly, control of our contextual tags,

529
00:39:47,770 --> 00:39:50,471
stimuli, and voice lines themselves.

530
00:39:50,471 --> 00:39:54,233
For example here, our NPCs love to chat about the weather

531
00:39:54,233 --> 00:39:55,534
when they're not fighting,

532
00:39:55,534 --> 00:39:57,715
so we put a cool down on hot weather.

533
00:39:58,654 --> 00:40:03,157
to prevent them from complaining about the incessant heat, which is the most common weather type.

534
00:40:03,157 --> 00:40:08,042
Even though this is exactly what would actually happen in reality, it gets a bit annoying in the game.

535
00:40:08,042 --> 00:40:10,043
And we have situational priorities.

536
00:40:10,043 --> 00:40:19,111
This is a dialogue restriction rule set that can prevent certain barks from being played after certain situations.

537
00:40:19,111 --> 00:40:23,755
For example, we stop small talk after a firefight has killed one of their teammates.

538
00:40:27,295 --> 00:40:33,600
The game server is populated by a living world system containing NPCs that exist and continue

539
00:40:33,600 --> 00:40:36,743
to operate, regardless of whether the player is nearby.

540
00:40:36,743 --> 00:40:41,086
Their behaviour calls barks all the time.

541
00:40:41,086 --> 00:40:47,452
If the player is here on the map, not to scale, then the NPCs that are nearby will appear

542
00:40:47,452 --> 00:40:51,215
visibly and move around, and their barks are clearly audible.

543
00:40:51,215 --> 00:40:53,296
Here is a bark that the player might hear.

544
00:40:58,351 --> 00:40:59,411
Another bark.

545
00:40:59,411 --> 00:41:02,212
And all over the server this is happening.

546
00:41:02,212 --> 00:41:06,674
But the player can only hear within this radius.

547
00:41:06,674 --> 00:41:08,294
Much smaller than that actually.

548
00:41:08,294 --> 00:41:13,316
So none of these barks actually get past the initial state.

549
00:41:13,316 --> 00:41:17,357
Because Snowdrop is very good at managing millions of events and calls per frame,

550
00:41:17,357 --> 00:41:19,018
this doesn't add any overhead.

551
00:41:20,899 --> 00:41:29,762
So, if an NPC entity is placed on the server and it barks and no one is around to hear it, does it make a sound?

552
00:41:29,762 --> 00:41:31,502
No, we early out.

553
00:41:31,502 --> 00:41:32,283
With the data analytics team

554
00:41:32,283 --> 00:41:42,686
we collected statistics from the server and used that data to inform balancing decisions in the dialogue system.

555
00:41:42,686 --> 00:41:46,367
This provided us with lots of data to sort and filter.

556
00:41:46,367 --> 00:41:48,968
These are some of the data sets that we collect.

557
00:41:50,202 --> 00:41:56,484
barks per MPC faction, location, whether it's an environmentally contextual line or not.

558
00:41:56,484 --> 00:42:03,707
Through filtering and analysis, we could identify and balance barks that were triggered too often

559
00:42:03,707 --> 00:42:08,188
and using cooldowns on specific stimuli or lines and via our other controls could reduce that.

560
00:42:08,188 --> 00:42:13,610
Likewise, we could identify barks that we wanted to increase the frequency of

561
00:42:13,610 --> 00:42:15,471
and attempt to improve their playback rate.

562
00:42:19,664 --> 00:42:21,805
Some statistics from the Open Beta.

563
00:42:21,805 --> 00:42:29,127
The most commonly played stimulus is Reload, playing roughly 745,121,000,000 times to players

564
00:42:29,127 --> 00:42:40,910
across all servers during the Beta. And that wasn't for a very long time. Even the least

565
00:42:40,910 --> 00:42:46,432
common stimulus, Faction Training Mentoring, played around a million times during the Open Beta.

566
00:42:51,809 --> 00:43:02,872
There were a total of 645 different AI stimuli that NPCs could use at the launch of The Division 2.

567
00:43:02,872 --> 00:43:09,294
This accounts for around 65,500 voice lines in one language,

568
00:43:09,294 --> 00:43:14,336
of a total of 73,500 including the story, cinematics and radio.

569
00:43:16,919 --> 00:43:23,201
This is split across 288 characters, of which 189 of them were combat characters.

570
00:43:23,201 --> 00:43:29,864
If we shared this evenly, it would amount to an average of 228 lines per character.

571
00:43:29,864 --> 00:43:37,126
But in some vendors and gatekeepers, we only have a handful of lines, whilst our largest

572
00:43:37,126 --> 00:43:43,349
characters in terms of the line count are the combat civilians, and they have around

573
00:43:43,349 --> 00:43:45,329
630 barks each.

574
00:43:45,329 --> 00:43:46,089
And the smallest...

575
00:43:46,737 --> 00:43:48,579
was a guard with only 11 lines.

576
00:43:48,579 --> 00:43:53,463
This was indeed a massive project,

577
00:43:53,463 --> 00:43:56,465
especially when it came to localisation.

578
00:43:56,465 --> 00:43:59,148
So I have to drop a little nod here to the team

579
00:43:59,148 --> 00:44:02,010
who have done a fantastic job of maintaining the standards

580
00:44:02,010 --> 00:44:02,931
that we set for English.

581
00:44:02,931 --> 00:44:05,813
For the Division 2 release,

582
00:44:05,813 --> 00:44:08,315
we localised into 17 languages for text.

583
00:44:08,315 --> 00:44:12,239
And, including English,

584
00:44:12,239 --> 00:44:14,220
we had 10 languages that were fully voiced.

585
00:44:15,718 --> 00:44:21,841
Our team translated 547,000 words per language, which is about the same as the Lord of the Rings trilogy and The Hobbit,

586
00:44:21,841 --> 00:44:25,983
reaching a total of around 6.5 million words translated across all languages.

587
00:44:25,983 --> 00:44:29,545
We recorded over 73,000 lines of VO per language, for the total of 662,000 recorded lines.

588
00:44:41,644 --> 00:44:45,848
1,217 actors recorded for us for the launch across all the languages and we had 57 localization

589
00:44:45,848 --> 00:44:47,550
testers during peak time.

590
00:44:47,550 --> 00:44:51,133
And since launch, after a year of updates and with our new DLC, Warlords of New York,

591
00:44:51,133 --> 00:44:51,734
the game grew a lot.

592
00:45:04,020 --> 00:45:07,821
We have now got close to 900 AI stimuli,

593
00:45:07,821 --> 00:45:13,782
which accounts for around 78.5 thousand lines of barks alone,

594
00:45:13,782 --> 00:45:16,123
not counting the story and the missions.

595
00:45:16,123 --> 00:45:16,763
That's just barks.

596
00:45:16,763 --> 00:45:19,844
This is split across 364 characters,

597
00:45:19,844 --> 00:45:20,704
of which 217 can fight.

598
00:45:20,704 --> 00:45:22,984
And the total voice lines in the game at present

599
00:45:22,984 --> 00:45:23,925
are 93 thousand VO lines per language.

600
00:45:35,837 --> 00:45:44,762
that times 10 for all the other languages. The total words are 477,000, so that puts

601
00:45:44,762 --> 00:45:50,846
us somewhere between the original Lord of the Rings novel or Two Order of the Phoenixes

602
00:45:50,846 --> 00:45:56,829
for younger viewers and Atlas Shrugged, although we're still a full 110,000 below War and

603
00:45:56,829 --> 00:45:57,049
Peace.

604
00:46:06,373 --> 00:46:14,456
use subtitles. Around 30% of our players use English and localised languages use, about

605
00:46:14,456 --> 00:46:18,317
20% of our players use localised languages, subtitles. And then the other half of our

606
00:46:18,317 --> 00:46:20,437
players don't play with subtitles at all.

607
00:46:20,437 --> 00:46:21,757
So, conclusions. In closing, behaviour.

608
00:46:32,182 --> 00:46:37,844
We ended up recording much more than we actually ended up using due to tight iteration time,

609
00:46:37,844 --> 00:46:42,145
so there was a little bit of wastage, which you should plan for.

610
00:46:42,145 --> 00:46:46,827
Statistical analysis helps us to identify and remove redundant data, and we're still

611
00:46:46,827 --> 00:46:50,108
finding uses for the barks that no longer had a purpose at release.

612
00:46:50,108 --> 00:46:58,050
We recorded barks for tanks being aware of grenades when the NPC team made the tanks

613
00:46:58,050 --> 00:46:58,291
not.

614
00:46:58,291 --> 00:46:58,991
Thanks for watching!

615
00:46:59,757 --> 00:47:10,130
reactor grenades. We had enemy too close lines for snipers that virtually never played because they're always at range.

616
00:47:10,130 --> 00:47:12,413
We went big and then we went smaller with context.

617
00:47:13,415 --> 00:47:20,740
Contextual Bach's played more in some areas and less in others, meaning that some are still very rarely heard.

618
00:47:20,740 --> 00:47:26,064
This gives our players a thrill when they hear a line that they've not heard before after around 300 hours of playing,

619
00:47:26,064 --> 00:47:30,447
but we needed more iteration to finesse and balance them better.

620
00:47:31,944 --> 00:47:37,110
We have since tagged more objects to increase the chance of hearing the cover proc barks,

621
00:47:37,110 --> 00:47:41,796
and we've simplified the tag usage in our latest DLC to focus on the most common and

622
00:47:41,796 --> 00:47:45,981
obvious contexts, such as the faction, weather, and time of day.

623
00:47:49,230 --> 00:47:53,611
Not many people have noticed our innovations in synchronizing barks across the server.

624
00:47:53,611 --> 00:47:59,494
This to me says that it is so obvious and fundamental to our shared enjoyment that it

625
00:47:59,494 --> 00:48:01,854
should always be like this, and it's necessary.

626
00:48:01,854 --> 00:48:07,877
We can't all sit in the same cinema watching different films and then expect to be able

627
00:48:07,877 --> 00:48:10,177
to relate to each other's experiences afterwards.

628
00:48:10,177 --> 00:48:14,399
This brings us together across borders and across languages.

629
00:48:18,130 --> 00:48:23,991
And using statistics helped us to find issues with the dialogue system, but also with the game as a whole.

630
00:48:23,991 --> 00:48:28,832
When barks for the wrong character are being heard in a mission that doesn't have that faction,

631
00:48:28,832 --> 00:48:32,213
you know that an NPC boss has been given the wrong barks character,

632
00:48:32,213 --> 00:48:35,914
and now sounds like a huge armoured tank instead of a stealthy sniper.

633
00:48:35,914 --> 00:48:42,455
If we'd devoted more energy towards fast analysis of the statistical data that we were fed,

634
00:48:42,455 --> 00:48:43,975
we'd certainly have been able to find...

635
00:48:44,617 --> 00:48:50,502
and make better decisions about what not to record or have spotted stimuli that were not working sooner.

636
00:48:50,502 --> 00:48:56,787
And those bugs, that when they were fixed later, could potentially unbalance the vocal landscape

637
00:48:56,787 --> 00:49:03,093
when turned on. Next time I'll be asking for a system like this from the start and making time

638
00:49:03,093 --> 00:49:05,935
to analyze the data after every internal play test.

639
00:49:08,519 --> 00:49:14,741
and iteration. With the ambitious schedules, iteration time is always going to be tight.

640
00:49:14,741 --> 00:49:20,123
But with an online game, your product is also never really finished. This gives you opportunities

641
00:49:20,123 --> 00:49:25,204
to polish and improve your product after release. And with clever tools such as server-based

642
00:49:25,204 --> 00:49:29,126
AI box control, the job of patching can also be made simpler and easier.

643
00:49:29,126 --> 00:49:30,306
So what can I do with this? What can you do on Monday?

644
00:49:39,387 --> 00:49:42,149
Look at your barks as more than just background filler.

645
00:49:42,149 --> 00:49:47,513
They're world builders and they deserve at least as much attention as the main story.

646
00:49:47,513 --> 00:49:52,817
Weave your barks into the setting better. Why is the angry person angry?

647
00:49:52,817 --> 00:49:57,221
Investigate how contextual triggers could enrich your barks.

648
00:49:57,221 --> 00:50:03,186
What are the three biggest conditions that affect your NPCs?

649
00:50:06,060 --> 00:50:09,121
Consider how you're planning to balance your BIOCS experience.

650
00:50:09,121 --> 00:50:10,441
How are you going to get data?

651
00:50:10,441 --> 00:50:12,042
And find ways to save time and resources by recording actors remotely.

652
00:50:12,042 --> 00:50:15,503
Learn to embrace it and find methods that work for you.

653
00:50:15,503 --> 00:50:18,404
It's good for the planet and it will save lives.

654
00:50:18,404 --> 00:50:22,665
And I'll finish with a broad thank you to everyone who worked so hard in making

655
00:50:22,665 --> 00:50:24,966
this game great for our players and for our community.

656
00:50:39,517 --> 00:50:40,175
Thank you for listening.

