1
00:00:05,954 --> 00:00:09,458
I am Alexander Boryzniak of Ubisoft, and today I'm going to

2
00:00:09,478 --> 00:00:11,762
talk about the tech I developed at Ubisoft that I've

3
00:00:11,802 --> 00:00:12,703
named the IK rig.

4
00:00:13,865 --> 00:00:16,786
I was asked to start with some info on the speaker,

5
00:00:17,486 --> 00:00:18,767
and I did a little research.

6
00:00:18,927 --> 00:00:22,689
I have 13 years in the industry, worked on a bunch of projects

7
00:00:23,569 --> 00:00:24,510
in a bunch of studios.

8
00:00:24,610 --> 00:00:26,431
Past three years, I'm technical art director

9
00:00:26,471 --> 00:00:27,471
of Ubisoft Toronto.

10
00:00:28,011 --> 00:00:30,452
Now, some of you have seen the original reveal talk

11
00:00:30,713 --> 00:00:32,213
from Vienna conference last year.

12
00:00:32,253 --> 00:00:33,054
Some of you have not.

13
00:00:33,114 --> 00:00:34,795
So I will do a short recap before I

14
00:00:34,835 --> 00:00:35,975
proceed to the new cool stuff.

15
00:00:38,907 --> 00:00:41,911
I started working at Ubisoft on a title that I can't disclose

16
00:00:42,452 --> 00:00:44,174
because we just didn't announce it yet.

17
00:00:44,855 --> 00:00:47,839
Then I moved to another title, which is under NDA for now.

18
00:00:48,800 --> 00:00:50,302
And to troll you guys even more, I

19
00:00:51,424 --> 00:00:53,346
won't tell you about my two current titles.

20
00:00:54,156 --> 00:00:56,357
And if you think that's a very boring folio,

21
00:00:56,918 --> 00:00:58,959
just wait till the announcement dates for these guys

22
00:00:58,999 --> 00:01:01,180
because it won't be as boring when you see

23
00:01:01,220 --> 00:01:02,501
what's behind the black boxes.

24
00:01:03,202 --> 00:01:05,723
So for now, we're going to have a friend DA give you hints.

25
00:01:05,763 --> 00:01:06,584
You speculate.

26
00:01:07,024 --> 00:01:07,384
We wait.

27
00:01:07,905 --> 00:01:09,726
To help you speculate, I just want

28
00:01:09,746 --> 00:01:12,107
to remind you what Ubisoft has recently

29
00:01:12,348 --> 00:01:15,830
shipped or announced just to give you some itty bitty ideas.

30
00:01:17,331 --> 00:01:18,872
Some disclaimers before we begin.

31
00:01:19,132 --> 00:01:21,433
So I'm talking about the tech that's quite fresh.

32
00:01:21,673 --> 00:01:23,475
I came up with this idea about a year ago.

33
00:01:24,581 --> 00:01:27,305
And it was for one of the unannounced projects.

34
00:01:27,365 --> 00:01:29,909
And right now, it's sort of a can of worms spreading

35
00:01:30,009 --> 00:01:31,171
through several projects.

36
00:01:31,932 --> 00:01:35,117
Ike Rika's best proof of concept made it

37
00:01:35,157 --> 00:01:36,479
to a runtime implementation.

38
00:01:36,820 --> 00:01:36,980
Now,

39
00:01:37,967 --> 00:01:39,607
Now we're looking where else to apply it.

40
00:01:40,427 --> 00:01:42,748
I'm not going to disclose anything that's secret,

41
00:01:42,988 --> 00:01:44,768
which is like 90% of what we do.

42
00:01:45,649 --> 00:01:48,769
And I will not mention any project names or details.

43
00:01:48,889 --> 00:01:51,510
I can't show you the footage from unannounced stuff.

44
00:01:52,330 --> 00:01:55,771
So today's examples are not related to specific titles.

45
00:01:56,231 --> 00:01:57,892
I'm not here to announce one game.

46
00:01:57,992 --> 00:01:59,852
I'm here to talk about the tech that's

47
00:02:00,172 --> 00:02:01,893
going to be working in a number of games.

48
00:02:02,975 --> 00:02:04,316
So today we're talking generic.

49
00:02:04,836 --> 00:02:06,397
And I've prepared a bunch of examples

50
00:02:06,997 --> 00:02:10,679
where actual assets are hidden or replaced by placeholders.

51
00:02:11,599 --> 00:02:14,240
So today we talk about the principles, use cases,

52
00:02:14,320 --> 00:02:16,501
effects on design, effects on the pipeline.

53
00:02:17,121 --> 00:02:19,582
And we talk about how you guys can try this at home.

54
00:02:20,563 --> 00:02:21,463
Disclaimer number two.

55
00:02:22,345 --> 00:02:25,851
You will see a number of examples which are intentionally exaggerated.

56
00:02:25,972 --> 00:02:30,941
So, for example, when I say we can take human motion and turn it into an octopus riding a bicycle,

57
00:02:31,121 --> 00:02:33,746
I do it, I show it, it illustrates a certain solution.

58
00:02:34,602 --> 00:02:37,224
Doesn't mean that whenever you need to have a creature like

59
00:02:37,284 --> 00:02:39,886
this moving, you have to use the IKRig.

60
00:02:39,926 --> 00:02:42,989
No, you're welcome to go on and mocap a T-Rex doing just that.

61
00:02:43,029 --> 00:02:43,649
That's up to you.

62
00:02:44,130 --> 00:02:48,113
I use these examples to talk about possible use cases, to

63
00:02:48,153 --> 00:02:51,375
demonstrate possible applications, dos and don'ts.

64
00:02:52,036 --> 00:02:55,278
So rabbits will run, and octopuses will ride.

65
00:02:56,840 --> 00:02:57,680
What is the IKRig?

66
00:02:59,729 --> 00:03:01,750
IKRig is a systemic animation approach.

67
00:03:02,231 --> 00:03:04,652
It's a principle, a tech, developed to let

68
00:03:04,712 --> 00:03:05,973
us do more with animations.

69
00:03:06,954 --> 00:03:10,576
And the first thing is unbinding animation from rigs.

70
00:03:12,717 --> 00:03:15,159
So a unified language sort of a thing,

71
00:03:15,499 --> 00:03:17,280
a system that will bring all animation

72
00:03:17,340 --> 00:03:20,943
data of similar characters to one shared form.

73
00:03:21,783 --> 00:03:24,345
Secondly, we move away from animating the key frames.

74
00:03:24,605 --> 00:03:26,386
We start animating the animations.

75
00:03:27,219 --> 00:03:31,021
and we control the way our characters behave at run time in the engine.

76
00:03:31,922 --> 00:03:35,064
We create behavioral rules that can be mixed together

77
00:03:35,445 --> 00:03:37,266
to produce a wide variety of animations.

78
00:03:38,127 --> 00:03:39,768
All in all, it's retargeting 2.0,

79
00:03:40,268 --> 00:03:42,350
done on the fly with direct animated reaction

80
00:03:43,771 --> 00:03:45,773
to changes in environment, character stats,

81
00:03:45,853 --> 00:03:47,654
whatever happens at this moment in the game.

82
00:03:49,055 --> 00:03:50,316
This is the most important slide.

83
00:03:51,276 --> 00:03:52,940
Incidentally, it's the most boring slide.

84
00:03:52,980 --> 00:03:55,345
You guys will want me to rewind to this couple minutes

85
00:03:55,365 --> 00:03:56,388
from now, I promise you.

86
00:03:56,488 --> 00:04:01,178
So iKeyRig is a text solution for converting animation of.

87
00:04:02,342 --> 00:04:06,424
any rig into a set of IK chains, application of context-aware

88
00:04:06,464 --> 00:04:09,765
modifications to those chains, and application of the result

89
00:04:09,806 --> 00:04:12,287
to any other rig, whether runtime or offline.

90
00:04:12,727 --> 00:04:14,848
So you have your source, your motion capture rig.

91
00:04:15,268 --> 00:04:17,209
You map it to the IK rig unified structure.

92
00:04:17,970 --> 00:04:19,551
Using this mapping, all the animation

93
00:04:19,591 --> 00:04:22,392
can be converted without any loss of data.

94
00:04:23,443 --> 00:04:25,544
Within the IKEA rig, it's easy to modify the parameters

95
00:04:25,584 --> 00:04:28,145
of what happens with limbs and character as a whole.

96
00:04:29,065 --> 00:04:31,506
We create sets of rules to explain what to do

97
00:04:31,746 --> 00:04:33,507
at any particular situation.

98
00:04:34,367 --> 00:04:35,908
And then we can mix and match.

99
00:04:35,928 --> 00:04:38,149
We can apply these changes on top of other changes.

100
00:04:38,569 --> 00:04:39,989
So for example, if one of the rules

101
00:04:40,069 --> 00:04:42,830
teaches the walking character to crouch,

102
00:04:42,930 --> 00:04:44,971
another rule teaches the character to aim a gun,

103
00:04:45,451 --> 00:04:48,333
third rule transforms male walk into female walk.

104
00:04:48,413 --> 00:04:50,113
The combination will take male walk

105
00:04:50,693 --> 00:04:52,214
into a crouching aiming female.

106
00:04:54,038 --> 00:04:56,318
This is actually elementary rocket science,

107
00:04:56,379 --> 00:04:58,079
and I love it not because it's complicated,

108
00:04:58,119 --> 00:04:59,319
but I love it because it's simple.

109
00:05:00,620 --> 00:05:01,940
Let's take a look at something simple.

110
00:05:02,080 --> 00:05:02,380
The leg.

111
00:05:03,020 --> 00:05:05,121
So our usual leg, made of three bones,

112
00:05:05,181 --> 00:05:07,141
plus all the small secondary things.

113
00:05:07,641 --> 00:05:09,582
Some of the problems we face here are,

114
00:05:10,262 --> 00:05:12,203
first of all, secondary animations for muscles

115
00:05:12,263 --> 00:05:12,923
and stuff like this.

116
00:05:13,463 --> 00:05:15,824
If we bake them, they will not really be working

117
00:05:16,204 --> 00:05:17,964
at the game during the run time,

118
00:05:18,124 --> 00:05:19,565
if we have the ragdoll, for example.

119
00:05:20,105 --> 00:05:23,007
Secondly, we have a bunch of transforms, but they have little meaning.

120
00:05:23,447 --> 00:05:28,071
We can blend them, but those position rotation of each of the bones in the chain don't really

121
00:05:28,131 --> 00:05:29,552
tell us much about what's going on.

122
00:05:29,993 --> 00:05:33,555
Finally, most importantly, our rigs and animations are bound together.

123
00:05:35,766 --> 00:05:38,127
You can't change the rig because the number of bones,

124
00:05:38,167 --> 00:05:40,767
their names, their hierarchy, their sizes,

125
00:05:41,927 --> 00:05:45,108
they must be content for this animation to play properly.

126
00:05:45,608 --> 00:05:46,949
If you really want to change the rig,

127
00:05:46,969 --> 00:05:48,829
you can of course retarget and re-import.

128
00:05:49,289 --> 00:05:52,030
This way the update involves the offline loop,

129
00:05:52,850 --> 00:05:54,670
plus you need to maintain consistency

130
00:05:54,750 --> 00:05:56,831
between all results of all of your retargets.

131
00:05:57,960 --> 00:06:01,486
Simple fact is we just need a couple things to move this leg, assuming it's planar.

132
00:06:01,827 --> 00:06:06,836
We need the start position, we need the target position rotation, and we need the direction

133
00:06:06,876 --> 00:06:07,257
of the knee.

134
00:06:08,559 --> 00:06:10,803
You understand these can be easily received from mocap.

135
00:06:11,659 --> 00:06:13,580
You just need to map the bones to nodes.

136
00:06:13,800 --> 00:06:14,140
That's it.

137
00:06:15,040 --> 00:06:16,061
That's basically targeting.

138
00:06:16,741 --> 00:06:18,221
Extra bones such as twists,

139
00:06:18,281 --> 00:06:19,802
they don't have to be animated offline.

140
00:06:20,382 --> 00:06:24,023
When we use the bones which have soft skin geometry,

141
00:06:24,423 --> 00:06:25,564
geometry soft skin to them,

142
00:06:25,884 --> 00:06:28,605
and we can animate them using constraints as we play.

143
00:06:29,785 --> 00:06:32,746
So the IK rig definition is mapping of bone rig

144
00:06:33,606 --> 00:06:35,667
to the IK rig directly in the engine.

145
00:06:36,562 --> 00:06:38,163
Once it's mapped, all the animations

146
00:06:38,224 --> 00:06:40,525
we throw to this bone rig will be

147
00:06:40,565 --> 00:06:42,727
playable on all the rigs which have been

148
00:06:42,767 --> 00:06:44,188
mapped to the unified structure.

149
00:06:44,888 --> 00:06:47,090
So in this example, the bull leg is the default config.

150
00:06:47,851 --> 00:06:50,572
Everything else is running exactly the same animation,

151
00:06:51,093 --> 00:06:51,913
but in different rigs.

152
00:06:52,594 --> 00:06:55,776
This is possible because each of those rigs has been mapped.

153
00:06:57,809 --> 00:06:59,090
What constitutes a casual rig?

154
00:06:59,510 --> 00:07:01,811
So we have active bones for body data, hands, feet.

155
00:07:01,851 --> 00:07:02,751
We have twist bones.

156
00:07:03,051 --> 00:07:04,792
We have small bones for fingers and face,

157
00:07:04,832 --> 00:07:06,292
secondary constraint muscle bones,

158
00:07:07,293 --> 00:07:10,694
different nodes, pivots for root capsule,

159
00:07:10,734 --> 00:07:11,894
prop attachment, and so on.

160
00:07:12,675 --> 00:07:14,515
In case of IKEA rig, bones can be the same,

161
00:07:15,116 --> 00:07:17,917
but we're not working with bones after we have mapped them.

162
00:07:18,237 --> 00:07:20,778
Okay, we're working with IKEA rig nodes.

163
00:07:22,118 --> 00:07:24,439
So there are two chains, IKEA chains for hands,

164
00:07:24,539 --> 00:07:26,780
two chains for legs, one for spine, one for head.

165
00:07:26,820 --> 00:07:27,140
That's it.

166
00:07:29,098 --> 00:07:33,300
So what we do is we create one IK rig per character type,

167
00:07:33,981 --> 00:07:37,582
as in biped, quadruped, bird, fish.

168
00:07:38,683 --> 00:07:40,224
We create mesh with skin to bones

169
00:07:40,264 --> 00:07:41,424
just like we would normally do.

170
00:07:42,204 --> 00:07:46,006
But now we don't fit the model to the rig, as we often do.

171
00:07:46,646 --> 00:07:49,248
Instead, we fit each rig to each model.

172
00:07:49,628 --> 00:07:51,689
So the look and proportions of each character

173
00:07:52,389 --> 00:07:54,810
are driven by the concept and by the character artist.

174
00:07:55,821 --> 00:07:56,822
not by shared rig.

175
00:07:57,623 --> 00:07:59,304
When we export-import in the engine,

176
00:07:59,344 --> 00:08:01,506
we have the IKRig definition tool, which we use.

177
00:08:01,626 --> 00:08:05,149
We map the bones to the full-body IK, to IK chains.

178
00:08:06,190 --> 00:08:07,872
Everything else, all the small bones,

179
00:08:08,032 --> 00:08:10,774
are constrained and run directly in the engine at run time.

180
00:08:11,735 --> 00:08:13,617
All the extra bones, they don't have to be shared.

181
00:08:14,117 --> 00:08:16,519
We can have different bone setups for different characters.

182
00:08:17,140 --> 00:08:19,041
We can add or remove them as we please.

183
00:08:19,982 --> 00:08:21,984
And we don't need to rebake any data.

184
00:08:25,346 --> 00:08:27,587
Let me just briefly go over the most common constraints

185
00:08:27,607 --> 00:08:29,248
because they will come in handy later on.

186
00:08:29,828 --> 00:08:31,309
First of all, we have the position constraint,

187
00:08:31,329 --> 00:08:33,490
which is super useful when there's multiple parents.

188
00:08:33,630 --> 00:08:36,431
For example, cowboy, one position parent

189
00:08:36,511 --> 00:08:38,292
can be his moving hand from the animation,

190
00:08:38,352 --> 00:08:39,673
another one is his holster.

191
00:08:40,073 --> 00:08:41,574
Now if I constrain something between them,

192
00:08:41,634 --> 00:08:44,515
I can, at any moment, move the hand to the holster position.

193
00:08:45,476 --> 00:08:47,937
Orientation constraint, much the same way.

194
00:08:47,997 --> 00:08:50,159
If I want to add a tail, I can take

195
00:08:50,179 --> 00:08:52,501
the rotations of upper thighs and the pelvis

196
00:08:52,901 --> 00:08:54,482
to rotate the starting part of the tail.

197
00:08:54,643 --> 00:08:55,243
So far, so good.

198
00:08:55,583 --> 00:08:59,046
We'll look at, of course, what we usually do to aim our guns.

199
00:08:59,446 --> 00:09:02,609
But I also like to use it to aim the head in a conversation.

200
00:09:02,669 --> 00:09:04,330
And again, we need to do this at runtime.

201
00:09:04,350 --> 00:09:05,371
We don't need to bake this.

202
00:09:07,694 --> 00:09:09,836
Spring and damping for little flapping pieces.

203
00:09:09,896 --> 00:09:13,019
We are using it right now as isolated example.

204
00:09:13,119 --> 00:09:14,721
I like to use this within Nike RIG

205
00:09:14,761 --> 00:09:16,102
to add the secondary motion.

206
00:09:16,843 --> 00:09:19,686
Trembling curve to throw in arbitrary curves

207
00:09:19,706 --> 00:09:21,428
that we want or maybe take a sign of time.

208
00:09:22,169 --> 00:09:23,030
And driver driven.

209
00:09:23,150 --> 00:09:25,172
So for example, one transform of one bone

210
00:09:25,492 --> 00:09:27,834
affects different type of transform of different bones.

211
00:09:29,633 --> 00:09:31,074
I want to note that for most cases,

212
00:09:31,434 --> 00:09:33,355
very few constraints are actually required.

213
00:09:33,896 --> 00:09:35,516
So over constrained case like this,

214
00:09:35,556 --> 00:09:39,778
there's only 5% of what we see animated is the actual bones.

215
00:09:39,838 --> 00:09:40,879
Everything else is constrained.

216
00:09:40,899 --> 00:09:43,180
We don't usually need this in our games.

217
00:09:44,641 --> 00:09:46,722
Such cases would really never happen.

218
00:09:47,442 --> 00:09:48,343
But it's good to keep in mind,

219
00:09:48,383 --> 00:09:50,564
we can LOD up and down as much as we want.

220
00:09:50,744 --> 00:09:53,585
And again, we don't need to re-import, re-export anything

221
00:09:53,645 --> 00:09:56,207
if we want to add new stuff moving to the character.

222
00:09:57,713 --> 00:10:00,655
But we want to do more than simply share the animations.

223
00:10:00,755 --> 00:10:01,755
We want to change them.

224
00:10:02,776 --> 00:10:04,716
So to the naked eye, it may appear

225
00:10:05,497 --> 00:10:06,597
that it's the same animation.

226
00:10:06,837 --> 00:10:07,337
And it is.

227
00:10:08,298 --> 00:10:10,519
The key difference here is that the left character

228
00:10:10,599 --> 00:10:11,879
is running 35 bones.

229
00:10:12,800 --> 00:10:15,121
And the right character is running the same animation,

230
00:10:15,181 --> 00:10:17,301
but it's the IK rig format.

231
00:10:19,688 --> 00:10:20,409
They're not different.

232
00:10:20,589 --> 00:10:21,630
They should not be different.

233
00:10:21,790 --> 00:10:24,352
By default, without any changes that we've introduced,

234
00:10:25,333 --> 00:10:27,114
we should have exactly full quality

235
00:10:27,134 --> 00:10:29,036
that the animator expected to have.

236
00:10:29,156 --> 00:10:30,757
That was invested in the start in there.

237
00:10:32,281 --> 00:10:34,641
Now we've defined this rig as IK rig, right?

238
00:10:35,181 --> 00:10:37,302
So we can start changing the node behaviors

239
00:10:37,582 --> 00:10:38,822
as they play the animations.

240
00:10:39,602 --> 00:10:42,183
The incoming animations can be received

241
00:10:42,263 --> 00:10:45,164
from just the key frames in your 3D software,

242
00:10:45,204 --> 00:10:47,304
in the offline case, or which is more fun,

243
00:10:47,344 --> 00:10:49,925
we can take the result that the blend machine spits out

244
00:10:50,305 --> 00:10:52,245
and modify that right as we play.

245
00:10:53,526 --> 00:10:55,526
So now we have this IK rig definition,

246
00:10:55,566 --> 00:10:56,607
we can have some fun with it.

247
00:11:01,447 --> 00:11:03,348
Our original base animation is always there.

248
00:11:03,388 --> 00:11:06,430
So any change we have is just a rule that I threw in.

249
00:11:06,650 --> 00:11:08,431
I explained that I want different behavior

250
00:11:08,511 --> 00:11:10,512
from start and nodes of the thing.

251
00:11:11,312 --> 00:11:15,835
And by controlling the behavior of these targets for hands,

252
00:11:15,895 --> 00:11:18,076
spine, feet, I can do whatever I want.

253
00:11:18,156 --> 00:11:20,178
I can modify the existing style of motion.

254
00:11:20,958 --> 00:11:23,119
I can create a new style for a specific case.

255
00:11:23,840 --> 00:11:26,861
I have control over footsteps, over hand arcs.

256
00:11:28,713 --> 00:11:31,154
More importantly, yes, we can throw in new nodes

257
00:11:31,274 --> 00:11:33,495
and start animating to those nodes

258
00:11:33,835 --> 00:11:35,175
to create some new behavior.

259
00:11:36,116 --> 00:11:38,837
I call such sets of modifications the IKRig rules.

260
00:11:39,697 --> 00:11:42,218
There may be a rule teaching a character to crouch.

261
00:11:42,478 --> 00:11:44,439
Maybe a rule teaching him to aim a gun.

262
00:11:44,659 --> 00:11:46,560
Maybe a rule teaching him to cover his head.

263
00:11:47,240 --> 00:11:47,740
Whatever else.

264
00:11:48,241 --> 00:11:50,141
The cool part is, when we throw in,

265
00:11:50,241 --> 00:11:52,302
especially with the prop works,

266
00:11:52,682 --> 00:11:54,183
when we throw in the weight of the prop,

267
00:11:54,223 --> 00:11:55,904
and based on that, we change the way

268
00:11:55,944 --> 00:11:57,944
that the prop is being carried by the character.

269
00:11:58,505 --> 00:12:01,945
Or we can also factor in things like character strength or tiredness.

270
00:12:06,186 --> 00:12:08,947
One of the goals set for DaikiRig initially

271
00:12:09,907 --> 00:12:11,507
was to have one rig per one character.

272
00:12:11,807 --> 00:12:15,168
So you have 50 characters in a game, you have 50 rigs in a game.

273
00:12:15,668 --> 00:12:18,168
But keep it simple, share their animations

274
00:12:18,808 --> 00:12:21,289
and allow for modifications which are easy to manage.

275
00:12:21,869 --> 00:12:24,409
So in case of character class rules,

276
00:12:24,909 --> 00:12:26,350
I just create a rule that's...

277
00:12:27,050 --> 00:12:29,271
indented for this specific character forever.

278
00:12:29,371 --> 00:12:33,213
So, a hero character will always carry his shoulder a little backwards.

279
00:12:33,793 --> 00:12:37,595
Female, for example, has elbows bent inwards and a little more wiggling hips.

280
00:12:38,055 --> 00:12:40,056
Zombie case in here, extremely bent spine.

281
00:12:40,096 --> 00:12:41,557
I could add the tremble if I wanted.

282
00:12:41,877 --> 00:12:44,179
And it's going to apply on whatever this character plays.

283
00:12:46,560 --> 00:12:47,620
And I can mix and match them.

284
00:12:47,660 --> 00:12:52,443
I can have a zombie hero or, I don't know, brute female if I want to.

285
00:12:53,838 --> 00:12:55,319
Prop operations, dealing with weight.

286
00:12:55,759 --> 00:12:57,260
We factor in the weight of the prop,

287
00:12:57,760 --> 00:12:58,561
play a different rule.

288
00:12:59,661 --> 00:13:01,623
It looks like the artists prefer to have

289
00:13:01,883 --> 00:13:04,164
two boundary cases to create two boundary rules,

290
00:13:04,184 --> 00:13:06,846
super light, super heavy, and then work between them,

291
00:13:06,986 --> 00:13:08,527
or possibly even have a middle case.

292
00:13:10,748 --> 00:13:13,970
So, depending on the weight of the prop change,

293
00:13:14,331 --> 00:13:16,652
we would be somewhere in between of these states.

294
00:13:18,853 --> 00:13:21,576
We can also, as I said, factor in how tired the character is.

295
00:13:21,676 --> 00:13:24,238
We can factor in his strength, so big guys

296
00:13:24,278 --> 00:13:26,601
will have easier time carrying rocket launchers

297
00:13:26,721 --> 00:13:27,802
and your grandma will not.

298
00:13:29,083 --> 00:13:31,706
We can use the same approach for interaction with static props,

299
00:13:32,187 --> 00:13:33,468
like doorknobs, for example.

300
00:13:33,868 --> 00:13:35,670
Characters of different structure and size

301
00:13:36,111 --> 00:13:38,293
will still reach for the same place in the world

302
00:13:38,573 --> 00:13:39,634
to turn the doorknob.

303
00:13:40,395 --> 00:13:42,317
Imagine we have a shooting game with multiple weapons.

304
00:13:43,417 --> 00:13:44,437
Conventional solution.

305
00:13:45,137 --> 00:13:48,258
We create several animation sets for different weapons.

306
00:13:48,738 --> 00:13:51,658
So we have 50 weapons, but we know every weapon we need

307
00:13:51,698 --> 00:13:55,199
to run, crouch, reload, shoot, too many things to mocap.

308
00:13:55,699 --> 00:13:58,560
So we say our AK and our M16 will

309
00:13:58,600 --> 00:14:00,060
have the same placement of parts,

310
00:14:00,500 --> 00:14:02,521
so we can use the same animation to play them.

311
00:14:02,901 --> 00:14:04,501
Now adding a weapon into the game

312
00:14:05,042 --> 00:14:06,642
would become a complicated thing,

313
00:14:06,702 --> 00:14:09,383
because now we need to create carrying this weapon

314
00:14:09,783 --> 00:14:13,263
with crouch, without crouch, aiming, shooting, whatever.

315
00:14:15,645 --> 00:14:18,087
In conventional setup, we would also have to propagate

316
00:14:18,327 --> 00:14:21,129
every change that we want to do to every rig that we're using,

317
00:14:21,149 --> 00:14:23,050
because maybe we have male and female rig.

318
00:14:23,710 --> 00:14:26,132
And now we change the way the AK behaves.

319
00:14:26,612 --> 00:14:28,033
We need to modify it on both rigs.

320
00:14:28,733 --> 00:14:32,456
In IK rig setting, though, every weapon, prop operation,

321
00:14:32,796 --> 00:14:33,477
IK rig rule.

322
00:14:34,998 --> 00:14:35,558
Simple as that.

323
00:14:35,598 --> 00:14:37,499
So I can just go in and modify the rule

324
00:14:37,759 --> 00:14:39,961
to create a new type of behavior with this weapon.

325
00:14:41,550 --> 00:14:44,753
and aiming is separate from the motion itself.

326
00:14:47,235 --> 00:14:49,237
And this will propagate to all the locomotions

327
00:14:49,297 --> 00:14:51,519
and basically to all animations of the character

328
00:14:51,559 --> 00:14:52,159
if I want to.

329
00:14:53,040 --> 00:14:56,263
At the same time, grandmother and me will carry

330
00:14:56,423 --> 00:14:57,785
the rocket launcher in different way

331
00:14:57,825 --> 00:15:00,207
because the prop weight is factored in.

332
00:15:01,315 --> 00:15:04,200
Should we want to add a new weapon, we would make a new rule for it.

333
00:15:04,780 --> 00:15:06,924
Propagate is set to all characters if we want to.

334
00:15:07,565 --> 00:15:12,313
Should we have several aiming modes, create a new aiming mode for hero, for zombie, for

335
00:15:12,373 --> 00:15:13,294
female, it will work.

336
00:15:13,715 --> 00:15:14,196
The same thing.

337
00:15:15,395 --> 00:15:18,898
One more new thing here is IKRig rule for collision avoidance.

338
00:15:19,018 --> 00:15:21,200
I like to have the hard collisions as we do,

339
00:15:21,680 --> 00:15:23,382
but I also like to have the soft collisions,

340
00:15:23,442 --> 00:15:24,923
because we humans are smart things.

341
00:15:24,983 --> 00:15:28,145
We apply the contradictory force before we

342
00:15:28,185 --> 00:15:29,246
hit ourselves with something.

343
00:15:29,827 --> 00:15:34,070
So that creates a more realistic and believable motion

344
00:15:34,711 --> 00:15:36,412
for prop operations like this.

345
00:15:37,464 --> 00:15:38,965
So speaking about prop interaction,

346
00:15:39,965 --> 00:15:43,587
now that the characters touch the props using the IK, which

347
00:15:43,627 --> 00:15:45,648
we have full control over, we can

348
00:15:45,668 --> 00:15:48,369
start scaling the characters and scaling animations.

349
00:15:49,169 --> 00:15:50,630
And now you're thinking, Alex, we

350
00:15:50,650 --> 00:15:52,050
know how to scale the characters,

351
00:15:52,110 --> 00:15:53,651
and we know how to scale the animations.

352
00:15:53,991 --> 00:15:54,652
That's not the thing.

353
00:15:54,952 --> 00:15:56,152
Yes, we do. We do.

354
00:15:56,652 --> 00:15:59,493
And every time we uniform scale the rig,

355
00:15:59,953 --> 00:16:02,594
we also scale the animations, we end up with lots of issues.

356
00:16:03,494 --> 00:16:05,154
Speed of character changes for once,

357
00:16:05,695 --> 00:16:07,135
and this is not what we always want.

358
00:16:07,955 --> 00:16:09,096
To illustrate this better,

359
00:16:10,156 --> 00:16:13,137
I made some fan art for Star Wars just to show you.

360
00:16:13,977 --> 00:16:17,198
So it's the same animation for both of these guys,

361
00:16:18,398 --> 00:16:21,559
but drastic speed difference happens because of drastic scale difference.

362
00:16:22,655 --> 00:16:24,516
In extreme case like this, that's OK.

363
00:16:25,116 --> 00:16:28,478
But more often than not, speed must be dictated by the design,

364
00:16:29,458 --> 00:16:30,998
not by the conversion result.

365
00:16:31,519 --> 00:16:34,520
Usually to fix that, we'd start scaling animation timing

366
00:16:34,940 --> 00:16:35,500
up and down.

367
00:16:36,140 --> 00:16:37,541
But if we do it more than 10%, 15%

368
00:16:37,941 --> 00:16:40,242
speeding up or slowing down animation,

369
00:16:40,282 --> 00:16:42,263
we start losing the data about velocity,

370
00:16:42,343 --> 00:16:43,623
about the mass of the object.

371
00:16:43,663 --> 00:16:44,784
And that's just not too good.

372
00:16:45,624 --> 00:16:46,584
So here's the fun trick.

373
00:16:47,104 --> 00:16:50,206
In the IK rig, I scale characters independently

374
00:16:50,266 --> 00:16:51,026
from the animations.

375
00:16:53,213 --> 00:16:55,356
So animation is the same for these guys,

376
00:16:55,436 --> 00:16:56,618
but the red goes faster.

377
00:16:57,339 --> 00:16:57,560
Why?

378
00:16:57,620 --> 00:17:00,684
Well, what's done here is the scaling just of the footsteps.

379
00:17:01,626 --> 00:17:04,751
Notice that all the animations are still in complete sync.

380
00:17:05,792 --> 00:17:08,316
However, I control the amount of footstep scaling.

381
00:17:09,301 --> 00:17:12,442
And now that I have this complete control of this speed,

382
00:17:13,322 --> 00:17:16,322
I don't need to adjust animation speed or timing.

383
00:17:16,863 --> 00:17:18,683
I don't need to introduce the foot sliding

384
00:17:18,763 --> 00:17:20,143
or do any other wicked thing.

385
00:17:20,883 --> 00:17:24,024
And degree to which I can speed up or slow down is immense.

386
00:17:24,444 --> 00:17:26,945
There is 400% difference between the slowest

387
00:17:26,985 --> 00:17:27,805
and the fastest guy.

388
00:17:29,525 --> 00:17:31,506
And to illustrate this magnitude better,

389
00:17:32,266 --> 00:17:33,106
it's pretty much that.

390
00:17:34,233 --> 00:17:36,293
where we just scale the character up or down,

391
00:17:36,374 --> 00:17:39,294
we wouldn't necessarily wanna scale the speed of his motion.

392
00:17:40,015 --> 00:17:42,395
We can just keep it, we can set it as much as we want.

393
00:17:43,416 --> 00:17:45,376
So the change here happens reversely, right?

394
00:17:45,416 --> 00:17:47,797
The characters were scaled, the animation remained the same.

395
00:17:47,917 --> 00:17:49,878
Footsteps still have scale of one.

396
00:17:50,918 --> 00:17:54,379
And I want to emphasize the importance

397
00:17:54,459 --> 00:17:56,000
of using different scales.

398
00:17:57,880 --> 00:17:58,080
Yep.

399
00:17:59,841 --> 00:18:00,181
And yep.

400
00:18:01,281 --> 00:18:01,681
And why?

401
00:18:03,599 --> 00:18:04,099
We know why.

402
00:18:04,560 --> 00:18:08,223
We, uh, thing is that our games usually just have one character, really.

403
00:18:08,284 --> 00:18:13,269
I mean, we can do different texture variation thingies, we can push the geometry on the

404
00:18:13,309 --> 00:18:14,430
models, but it's the same rig.

405
00:18:15,832 --> 00:18:18,535
And yeah, that's, that's gonna look this way.

406
00:18:19,055 --> 00:18:20,096
Even, um, like.

407
00:18:21,943 --> 00:18:24,465
It's funniest when we share the rig between male and female,

408
00:18:24,485 --> 00:18:25,747
like Barbarian and Amazon.

409
00:18:25,787 --> 00:18:28,129
But OK, let's say we added the female rig.

410
00:18:28,389 --> 00:18:30,871
Now Barbarian shares the rig with a necromancer.

411
00:18:31,632 --> 00:18:33,433
Amazon shares the rig with her grandmother.

412
00:18:33,854 --> 00:18:35,675
It's not good for any of those characters.

413
00:18:36,714 --> 00:18:38,856
And adding more rigs is, of course, expensive.

414
00:18:39,076 --> 00:18:41,419
Thousands of mocap takes for several actors,

415
00:18:42,460 --> 00:18:44,702
feeding all of this into a monstrous blend tree.

416
00:18:45,603 --> 00:18:47,926
Controlling it somehow, discovering now

417
00:18:47,986 --> 00:18:51,410
that adding an umbrella to the game is a huge overkill,

418
00:18:51,450 --> 00:18:52,991
because you need to mocap all of this.

419
00:18:53,912 --> 00:18:58,277
And it's not something we want.

420
00:19:00,012 --> 00:19:01,352
It's something that we just endure.

421
00:19:01,632 --> 00:19:03,613
And it's easier for the guys in the movie industry

422
00:19:03,653 --> 00:19:05,374
because they can have any scale they want

423
00:19:05,414 --> 00:19:08,615
for their Shrek or for their Hulk and Spider-Man

424
00:19:08,695 --> 00:19:09,975
and Captain America.

425
00:19:10,656 --> 00:19:12,476
For us it's hard, so what we try to do

426
00:19:12,536 --> 00:19:14,897
is we try to frame the guys so they look different

427
00:19:14,997 --> 00:19:17,378
even though we can't scale them, we can try to fake it.

428
00:19:17,458 --> 00:19:19,679
We basically try to make them look something like this.

429
00:19:22,250 --> 00:19:24,952
We're not building Star Wars games in Ubisoft, OK?

430
00:19:25,412 --> 00:19:26,533
I just made it for you guys.

431
00:19:27,113 --> 00:19:27,794
Just disclaimer.

432
00:19:28,394 --> 00:19:30,996
And I scaled them all to their actual Wikipedia height.

433
00:19:32,177 --> 00:19:34,399
And I've compensated the scale in animation,

434
00:19:34,679 --> 00:19:36,280
so they still move in perfect sync.

435
00:19:37,457 --> 00:19:39,878
and we can speed them up, and we can slow them down,

436
00:19:39,958 --> 00:19:42,859
we can give them props, and they will look fun.

437
00:19:43,780 --> 00:19:46,961
And the moment you set the scale is different, like this,

438
00:19:47,701 --> 00:19:49,021
something magical happens,

439
00:19:49,282 --> 00:19:51,862
something that you can't really unsee.

440
00:19:52,623 --> 00:19:53,803
Because going back now,

441
00:19:54,902 --> 00:19:56,323
is very, very noticeable.

442
00:19:57,063 --> 00:19:59,725
And OK, so we know how to do the scaling.

443
00:20:00,206 --> 00:20:01,587
Now we know what to do with it next.

444
00:20:02,307 --> 00:20:08,031
And we can still keep the speed of the change scale if we want.

445
00:20:08,071 --> 00:20:09,352
But we just don't have to.

446
00:20:10,033 --> 00:20:13,235
And just by the way, these guys, as every character

447
00:20:13,275 --> 00:20:16,598
that I showed so far, are still playing the same incoming male

448
00:20:16,638 --> 00:20:17,378
walking animation.

449
00:20:19,367 --> 00:20:20,910
Uniform scaling is actually boring.

450
00:20:20,930 --> 00:20:22,012
It's not fun.

451
00:20:22,714 --> 00:20:25,779
Come on, every human has his own subtle proportion differences.

452
00:20:26,961 --> 00:20:28,084
Here we have the bass dude.

453
00:20:28,124 --> 00:20:29,065
He's feeling just fine, but.

454
00:20:30,147 --> 00:20:34,890
I swap his left hand and right leg to much longer, bigger

455
00:20:34,950 --> 00:20:35,370
versions.

456
00:20:36,011 --> 00:20:38,732
Now I call this guy Quasimodo for easier reference.

457
00:20:39,433 --> 00:20:41,234
This is the base layer of the IK rig.

458
00:20:41,294 --> 00:20:43,155
Notice the animation is exactly the same.

459
00:20:43,455 --> 00:20:45,476
It's not enough.

460
00:20:45,536 --> 00:20:46,937
We need to explain him how to move.

461
00:20:47,378 --> 00:20:50,539
So I make a list of commandments for Quasimodo.

462
00:20:51,315 --> 00:20:53,895
I tell them, you know, if your hand is heavy,

463
00:20:53,956 --> 00:20:54,616
you should lean.

464
00:20:55,136 --> 00:20:56,556
If your center of mass has shifted,

465
00:20:56,876 --> 00:20:58,457
compensate for it with your spine.

466
00:20:59,177 --> 00:20:59,417
Sorry.

467
00:21:00,878 --> 00:21:04,078
And if the hand gets heavy, don't wiggle it around.

468
00:21:04,499 --> 00:21:04,939
Drag it.

469
00:21:05,579 --> 00:21:08,020
And the fun part is that the scaling, sorry,

470
00:21:08,040 --> 00:21:10,760
it's just really warm in here, the scaling

471
00:21:10,780 --> 00:21:11,821
can happen at runtime.

472
00:21:12,261 --> 00:21:15,802
And that's super good news for all the monsters, and mutants,

473
00:21:15,922 --> 00:21:16,622
and robots.

474
00:21:16,742 --> 00:21:18,383
Because now that the Quasimodo knows

475
00:21:18,423 --> 00:21:20,543
how to work with normal hand and super big hand.

476
00:21:21,613 --> 00:21:23,753
He can do it with any size of the hand.

477
00:21:24,734 --> 00:21:27,434
And just because we told him how to do it.

478
00:21:28,495 --> 00:21:29,395
Detour a little.

479
00:21:29,755 --> 00:21:32,676
So I often say I tell the characters what to do,

480
00:21:32,936 --> 00:21:33,476
and they do it.

481
00:21:33,596 --> 00:21:35,796
And that's a little misleading, because people visualize

482
00:21:35,816 --> 00:21:36,737
the process like this.

483
00:21:37,337 --> 00:21:38,997
I tell them to do this and that, and they do.

484
00:21:39,577 --> 00:21:42,218
In fact, it's more of this and this.

485
00:21:42,998 --> 00:21:45,699
Because I control the action by creating those rules,

486
00:21:46,319 --> 00:21:47,659
by plugging them together.

487
00:21:48,179 --> 00:21:49,380
But it's more of a.

488
00:21:50,463 --> 00:21:52,803
playing with the Lego kit without actual schematics.

489
00:21:52,883 --> 00:21:54,644
So it's fun job, still a job.

490
00:21:56,404 --> 00:21:57,065
End of Deter.

491
00:21:57,245 --> 00:21:59,625
So yes, everybody is different.

492
00:22:00,586 --> 00:22:02,366
And since we already captured the motions,

493
00:22:02,586 --> 00:22:05,567
we inherently capture the motion styles.

494
00:22:05,907 --> 00:22:07,607
And I'm talking just about the mocap right now.

495
00:22:08,388 --> 00:22:09,908
So this is the prototype feature,

496
00:22:10,388 --> 00:22:11,829
but it's worth mentioning nonetheless.

497
00:22:11,929 --> 00:22:12,909
I call it Motion DNA.

498
00:22:14,077 --> 00:22:17,481
And the idea is that we just dress a guy up in a suit.

499
00:22:17,962 --> 00:22:20,425
We let them move around the mocap studio for a while.

500
00:22:20,865 --> 00:22:24,169
And we're not capturing the exact loops of what he does.

501
00:22:24,269 --> 00:22:24,369
No.

502
00:22:24,890 --> 00:22:27,733
What we capture is instead, how does he carry his spine?

503
00:22:28,894 --> 00:22:32,018
What is the width of his footsteps?

504
00:22:32,659 --> 00:22:34,541
How much hand swinging is there?

505
00:22:35,504 --> 00:22:37,325
And these things we can parameterize.

506
00:22:38,066 --> 00:22:42,268
And there is about 20 parameters that so far I came up with.

507
00:22:42,868 --> 00:22:46,670
And if I take those things, I can store them as IK regroup.

508
00:22:47,251 --> 00:22:49,091
And I can apply it to the animation

509
00:22:49,192 --> 00:22:50,472
of a completely different guy.

510
00:22:50,492 --> 00:22:53,234
It's not going to make them exactly believable,

511
00:22:53,334 --> 00:22:56,055
but it's going to be way closer to this actor who just

512
00:22:56,195 --> 00:22:58,336
moved around for a couple of minutes in my mocap studio.

513
00:23:00,430 --> 00:23:05,472
So, just to oversell it a little, maybe sometime in the future you work before your Kinect

514
00:23:06,012 --> 00:23:11,094
and we pick up how you do this and then apply it to Cthulhu dancing on the screen even if

515
00:23:11,114 --> 00:23:12,315
you just have the controller.

516
00:23:13,436 --> 00:23:14,196
It looks plausible.

517
00:23:16,734 --> 00:23:17,755
So let's recap for a minute.

518
00:23:18,355 --> 00:23:20,296
We can take one animation, we can change its style.

519
00:23:20,516 --> 00:23:22,898
We can scale our characters, we can scale our animations,

520
00:23:23,038 --> 00:23:25,659
we can change the proportions on per character basis,

521
00:23:26,300 --> 00:23:29,062
while we still interact with props consistently

522
00:23:29,162 --> 00:23:30,502
and we can even control the speed.

523
00:23:31,383 --> 00:23:34,425
Long story short, we know how to turn our walking male

524
00:23:34,885 --> 00:23:37,246
into crouching, aiming female.

525
00:23:38,967 --> 00:23:39,508
What's missing?

526
00:23:41,469 --> 00:23:41,529
Oh.

527
00:23:43,697 --> 00:23:49,859
clicks. So what is missing from all of this? Then even terrain navigation, of course. But

528
00:23:50,019 --> 00:23:55,161
before we go into Unreal Terrain Navigation, there's this thing that's something we've

529
00:23:55,181 --> 00:24:00,223
done for so long we don't really notice it anymore. And I love to kick this thing, and

530
00:24:00,263 --> 00:24:04,624
I will kick it again now. What I mean is the term locomotion modes.

531
00:24:05,709 --> 00:24:08,510
So we do so many things, weapons aiming, reloading, shooting,

532
00:24:09,131 --> 00:24:11,432
opening doors, that we limit the type of locomotions.

533
00:24:11,872 --> 00:24:14,934
We let the characters walk or run, sometimes jog,

534
00:24:14,974 --> 00:24:16,155
and there are brilliant people trying

535
00:24:16,195 --> 00:24:17,516
to blend those states together.

536
00:24:17,896 --> 00:24:21,118
We let the characters walk or crouch, sometimes crawl,

537
00:24:21,438 --> 00:24:23,419
and there are other brilliant people trying to blend

538
00:24:23,459 --> 00:24:24,300
these things together.

539
00:24:24,840 --> 00:24:27,722
But the sophisticated blends are just masking the problem,

540
00:24:27,762 --> 00:24:29,163
but they're not solving the problem.

541
00:24:29,223 --> 00:24:31,224
The problem is our navigation states.

542
00:24:31,724 --> 00:24:33,045
In games, are integers.

543
00:24:33,485 --> 00:24:35,146
And in life, they are not integers.

544
00:24:36,573 --> 00:24:39,535
And this is inherited from the idea that we will want to do

545
00:24:39,595 --> 00:24:42,397
different things as we navigate differently.

546
00:24:42,437 --> 00:24:45,519
So we can't afford to mocap everything in all the interim

547
00:24:45,559 --> 00:24:45,859
states.

548
00:24:46,499 --> 00:24:48,861
So what's wrong with state A or state B switch?

549
00:24:49,701 --> 00:24:52,203
But honestly, there's nothing wrong with this switch.

550
00:24:52,283 --> 00:24:52,683
It works.

551
00:24:53,364 --> 00:24:54,825
For past 30 fucking years.

552
00:24:55,485 --> 00:24:56,406
And we keep doing this.

553
00:24:58,145 --> 00:25:01,606
And what's worse is we build our levels with this in mind.

554
00:25:02,266 --> 00:25:04,407
Your doors must be fixed width or the character

555
00:25:04,427 --> 00:25:05,787
won't walk through them plausibly.

556
00:25:06,427 --> 00:25:08,008
Your obstacles must be fixed height

557
00:25:08,168 --> 00:25:10,108
or he won't jump over them plausibly.

558
00:25:10,568 --> 00:25:12,809
The ceiling must be fixed height,

559
00:25:13,349 --> 00:25:16,730
because otherwise he won't crawl under them plausibly.

560
00:25:16,790 --> 00:25:19,610
And every now and then there's those little just missing

561
00:25:19,730 --> 00:25:22,631
inches that the animation suggests a different height.

562
00:25:22,691 --> 00:25:24,551
But we just have two states, and that's it.

563
00:25:25,752 --> 00:25:27,412
What if this collision is only halfway down?

564
00:25:28,244 --> 00:25:29,246
What if it's moving?

565
00:25:29,326 --> 00:25:30,909
What if it's a little lower or higher?

566
00:25:31,309 --> 00:25:33,333
Does this character remember what he just did?

567
00:25:33,393 --> 00:25:34,474
Does he have a history?

568
00:25:35,801 --> 00:25:37,061
Is he limited to these states?

569
00:25:37,782 --> 00:25:40,383
If we start ray tracing forward, not in time,

570
00:25:40,443 --> 00:25:43,664
but just in space, we can start predicting what happens.

571
00:25:44,304 --> 00:25:47,345
And we can change just the right amount.

572
00:25:47,865 --> 00:25:49,466
We don't have to go all the way down

573
00:25:49,706 --> 00:25:51,126
if we just need to nod our head.

574
00:25:51,667 --> 00:25:53,607
But if we have to, we will do, and we will,

575
00:25:53,967 --> 00:25:57,169
our motion will suggest the physical appearance

576
00:25:57,229 --> 00:25:58,209
of the world around us.

577
00:25:58,469 --> 00:25:59,950
And it's gonna make more sense to us.

578
00:26:01,512 --> 00:26:04,497
Humans, we don't collide by our own choice.

579
00:26:05,017 --> 00:26:06,379
So we don't clip like this.

580
00:26:06,800 --> 00:26:08,182
We avoid, we're smart beings.

581
00:26:08,803 --> 00:26:10,225
And it's not hard to mimic

582
00:26:11,286 --> 00:26:13,129
if we scrap the idea of integer states.

583
00:26:14,644 --> 00:26:16,465
And it's not just integers that are obsolete.

584
00:26:16,525 --> 00:26:19,305
The whole concept of metrics is insulting,

585
00:26:19,385 --> 00:26:20,306
and it's ridiculous.

586
00:26:21,306 --> 00:26:23,427
And I know the questions that we get at this moment.

587
00:26:23,627 --> 00:26:25,627
Metrics are at the core of our pipelines.

588
00:26:26,107 --> 00:26:28,548
Without metrics, how do we even design or model?

589
00:26:28,628 --> 00:26:30,188
How do we build levels?

590
00:26:31,149 --> 00:26:33,269
How do we build the game with arbitrary scales,

591
00:26:33,349 --> 00:26:34,430
like the real one?

592
00:26:35,485 --> 00:26:36,265
like the real world.

593
00:26:36,765 --> 00:26:38,706
We, it's scary, we can't pull it off,

594
00:26:38,786 --> 00:26:39,786
we're not gonna risk it.

595
00:26:40,707 --> 00:26:43,768
And first of all, let me call these old ways

596
00:26:43,868 --> 00:26:45,288
what they are, limitations.

597
00:26:46,009 --> 00:26:47,889
And you know, a guy breaks a leg,

598
00:26:48,730 --> 00:26:50,210
spends couple weeks in the hospital.

599
00:26:51,491 --> 00:26:53,411
Then he has this casket for several months.

600
00:26:53,752 --> 00:26:55,632
Then the casket is gone, his leg is healed,

601
00:26:55,712 --> 00:26:58,914
he still keeps limping, because he got used to that.

602
00:26:59,494 --> 00:27:00,834
And we got used to that.

603
00:27:02,215 --> 00:27:03,335
Maybe we don't have to do that.

604
00:27:05,030 --> 00:27:06,891
You see I've thrown in some uneven terrain in here

605
00:27:06,911 --> 00:27:07,912
just for kicks.

606
00:27:08,292 --> 00:27:11,254
So without further ado, let's take a look at different ways

607
00:27:11,274 --> 00:27:12,054
to navigate uneven.

608
00:27:12,475 --> 00:27:14,956
Common solution, write trace down and be happy.

609
00:27:15,657 --> 00:27:18,319
Well, the sad part is there is no history in this.

610
00:27:18,639 --> 00:27:20,320
Walking down, walking up looks the same.

611
00:27:21,341 --> 00:27:24,063
And of course, we can't have stairs in here

612
00:27:24,103 --> 00:27:28,926
because if we just shift this height between two frames

613
00:27:28,966 --> 00:27:30,727
too drastically, we're going to have the foot popping.

614
00:27:30,767 --> 00:27:31,688
We can't use the stairs.

615
00:27:31,768 --> 00:27:31,888
OK.

616
00:27:31,908 --> 00:27:32,008
And.

617
00:27:34,382 --> 00:27:38,225
Again, if we can ray trace forward, ray cast forward,

618
00:27:38,706 --> 00:27:41,468
we can start anticipating, say hi to anticipation,

619
00:27:41,488 --> 00:27:42,549
say hi to follow through.

620
00:27:43,490 --> 00:27:45,873
And we can propagate this change to the whole body,

621
00:27:45,913 --> 00:27:47,734
not just the legs, because we're not splitting

622
00:27:47,775 --> 00:27:49,496
between upper body, lower body anymore.

623
00:27:49,536 --> 00:27:50,077
We can act.

624
00:27:51,098 --> 00:27:51,578
And it's fun.

625
00:27:52,499 --> 00:27:54,041
And our slope can be arbitrary.

626
00:27:54,772 --> 00:27:57,194
We're not picking animations from the pool

627
00:27:57,214 --> 00:27:58,295
and blending between them.

628
00:27:58,355 --> 00:28:01,337
We generate the proper motion for this specific case,

629
00:28:01,377 --> 00:28:03,519
for this specific guy, with his specific scale.

630
00:28:04,019 --> 00:28:06,862
No root sliding, no feet clipping, no metrics.

631
00:28:08,523 --> 00:28:11,445
What do we do here after we fire the level designer?

632
00:28:11,826 --> 00:28:15,108
Normally, we just say, OK, it's going to be a flat plane,

633
00:28:15,169 --> 00:28:16,149
and we're going to clip, and that's

634
00:28:16,229 --> 00:28:17,911
fun, because it's a video game.

635
00:28:17,971 --> 00:28:18,992
OK, cut us some slack.

636
00:28:19,652 --> 00:28:20,453
That's fine, yes.

637
00:28:20,653 --> 00:28:23,215
No YK solution can handle stuff like this.

638
00:28:24,654 --> 00:28:28,896
Usually, we take it and be happy, but again, you know,

639
00:28:29,776 --> 00:28:31,177
what we can do instead is we can switch

640
00:28:31,217 --> 00:28:34,139
into Nostradamus mode, or what I call Nostradamus mode.

641
00:28:34,459 --> 00:28:37,821
Basically what I do, we throw in animation into the engine,

642
00:28:38,401 --> 00:28:39,862
and then we analyze our feet,

643
00:28:39,902 --> 00:28:42,003
and we just store a couple floats per frame.

644
00:28:42,463 --> 00:28:44,184
For each foot, we remember,

645
00:28:44,744 --> 00:28:46,085
how long ago did I get lifted up?

646
00:28:46,885 --> 00:28:48,866
How soon am I gonna be planted down?

647
00:28:50,147 --> 00:28:50,407
Where?

648
00:28:51,143 --> 00:28:51,843
will I be doing this?

649
00:28:52,384 --> 00:28:56,446
So now, per frame, I know that the foot, for example,

650
00:28:56,666 --> 00:28:58,527
initiated the lift-up thing.

651
00:29:00,188 --> 00:29:02,649
And since I know where it's going to land and when,

652
00:29:02,930 --> 00:29:08,253
I can modify the whole curve and arrive to the proper location.

653
00:29:09,153 --> 00:29:11,034
Yes, some weight of the body is lost in here.

654
00:29:11,074 --> 00:29:12,355
That would be fixed on the polish.

655
00:29:13,236 --> 00:29:13,716
But at least.

656
00:29:14,822 --> 00:29:15,682
I planned correctly.

657
00:29:16,383 --> 00:29:18,865
In fact, I'd slow down the actor here by twice

658
00:29:18,905 --> 00:29:20,787
because human wouldn't really risk that fast,

659
00:29:21,067 --> 00:29:22,448
moving that fast, but that's fine.

660
00:29:23,349 --> 00:29:25,291
In famous case of discontinuous terrain,

661
00:29:25,311 --> 00:29:26,532
the stairs, I love it.

662
00:29:27,352 --> 00:29:29,114
So, okay, if we have stairs in our game,

663
00:29:29,214 --> 00:29:30,575
all the stairs gonna be the same because,

664
00:29:30,855 --> 00:29:33,838
you guys know, we mo-capped for these specific stairs,

665
00:29:33,918 --> 00:29:34,859
going up, going down.

666
00:29:35,559 --> 00:29:37,101
We can't have stairs of different height.

667
00:29:37,961 --> 00:29:39,743
What happens if he walks diagonally?

668
00:29:40,103 --> 00:29:41,605
His animation's not gonna play anymore.

669
00:29:43,655 --> 00:29:44,895
What happens if he crouches?

670
00:29:45,976 --> 00:29:49,497
Do we mocap crouch up, crouch down, and maybe in diagonals?

671
00:29:50,398 --> 00:29:51,818
What happens if he wanted to limp?

672
00:29:51,958 --> 00:29:53,619
What happens if I have a female rig?

673
00:29:53,659 --> 00:29:55,500
Now I need to propagate all of this.

674
00:29:55,540 --> 00:29:58,521
So, again, conventionally, I would guess,

675
00:29:58,901 --> 00:30:01,462
root sliding and some foot clipping, and it's fine.

676
00:30:01,982 --> 00:30:04,083
But remember, we have this Nostradamus mode.

677
00:30:05,018 --> 00:30:05,179
Right?

678
00:30:05,899 --> 00:30:08,141
So, we're tracing the footsteps,

679
00:30:08,702 --> 00:30:10,043
and when the foot gets lifted up,

680
00:30:10,103 --> 00:30:11,484
we can figure out where it's gonna land,

681
00:30:11,564 --> 00:30:13,826
and we can figure out if we wanna land there,

682
00:30:13,926 --> 00:30:15,247
or maybe a little different place.

683
00:30:15,848 --> 00:30:17,529
So now we can have arbitrary steps.

684
00:30:19,571 --> 00:30:20,472
staircases, I mean.

685
00:30:21,132 --> 00:30:23,133
And we can have arbitrary scale of the character,

686
00:30:23,173 --> 00:30:24,174
and he will still walk.

687
00:30:24,194 --> 00:30:26,515
I mean, it's just depending on his height,

688
00:30:26,615 --> 00:30:28,956
he will be missing the stairs, the steps,

689
00:30:29,557 --> 00:30:31,077
or maybe he will step on each of them,

690
00:30:31,118 --> 00:30:33,799
just like we do, because we have different scales,

691
00:30:33,839 --> 00:30:34,920
and that's how we behave.

692
00:30:37,801 --> 00:30:41,043
And since we generate this animation on the fly,

693
00:30:41,083 --> 00:30:43,384
I mean, we can have any type of steps that we want.

694
00:30:44,374 --> 00:30:46,015
for any character scale that we want.

695
00:30:46,775 --> 00:30:49,477
Yes, we need to polish this, but this is already better

696
00:30:49,517 --> 00:30:50,857
than what we normally have

697
00:30:51,198 --> 00:30:52,598
with just clipping through the stuff.

698
00:30:53,619 --> 00:30:55,780
Final test of discontinuous and even terrain.

699
00:30:56,260 --> 00:30:58,421
Conventionally, we would have a mini game for this

700
00:30:58,541 --> 00:31:01,563
because you can't really mocap,

701
00:31:01,943 --> 00:31:04,644
unless you mocap for just this specific set of obstacles

702
00:31:04,725 --> 00:31:06,125
and just play this one animation.

703
00:31:07,479 --> 00:31:10,122
But again, I mean, if in real life a five-year-old would

704
00:31:10,182 --> 00:31:12,304
have fun doing this, then our hero

705
00:31:12,384 --> 00:31:14,306
should be able to walk through this as well,

706
00:31:14,766 --> 00:31:17,028
just by pressing the button without no mini-games.

707
00:31:18,089 --> 00:31:19,370
So I know it's a lot to take in.

708
00:31:19,851 --> 00:31:22,253
Let me show you the combined result of these rules.

709
00:31:22,653 --> 00:31:24,295
Please welcome the marching band.

710
00:31:26,037 --> 00:31:28,679
This operates directly from the guy with the controller.

711
00:31:28,879 --> 00:31:29,120
All right?

712
00:31:31,259 --> 00:31:32,340
Then we added the IK rig.

713
00:31:32,960 --> 00:31:34,481
We have different proportions and scale.

714
00:31:34,521 --> 00:31:35,982
Remember the Quasimodo guy, right?

715
00:31:36,822 --> 00:31:39,403
Even though they're all scaled, they walk in perfect sync.

716
00:31:39,523 --> 00:31:41,344
Remember, we have the footstep scaling.

717
00:31:42,545 --> 00:31:44,586
Remember our IK rig rule for crouching?

718
00:31:44,646 --> 00:31:46,327
Notice that the tall guys and short guys

719
00:31:46,387 --> 00:31:49,588
crouch differently because they need to go to different height

720
00:31:49,789 --> 00:31:53,250
as a result. I made some of them male, some of them female

721
00:31:53,290 --> 00:31:54,251
because it was easy.

722
00:31:55,394 --> 00:32:00,117
And every single one of them carries his or her own musical instrument and plays it

723
00:32:00,717 --> 00:32:03,479
to some tune that I will expose later on.

724
00:32:05,841 --> 00:32:08,182
And one more fun part.

725
00:32:09,083 --> 00:32:12,465
There's this waving ground in there. You see that? We're going to go there.

726
00:32:13,266 --> 00:32:17,089
Because the watery, like, I call it the Jesus test.

727
00:32:17,649 --> 00:32:21,292
It's the ultimate thing. I mean, if I can walk on this, I can walk on anything.

728
00:32:21,952 --> 00:32:23,673
Oh, plus an Astrodamus mode for the steps.

729
00:32:25,017 --> 00:32:28,565
So this is one source animation.

730
00:32:29,087 --> 00:32:31,533
Everything else generated per frame right here,

731
00:32:32,495 --> 00:32:33,578
controlled separately.

732
00:32:35,685 --> 00:32:38,667
This is a nice visualization for the curves

733
00:32:38,707 --> 00:32:40,168
that I threw in for them to play.

734
00:32:40,628 --> 00:32:42,929
So each of those characters uses one of these curves

735
00:32:43,230 --> 00:32:45,051
to play his or her musical instrument.

736
00:32:45,551 --> 00:32:50,154
So there's the drum, the dishes, the tambourine, the violin.

737
00:32:50,854 --> 00:32:51,455
And you know what?

738
00:32:51,475 --> 00:32:53,976
For all I know, I could just throw in an actual musical

739
00:32:54,036 --> 00:32:57,058
piece and take the curves from different musical instruments

740
00:32:57,098 --> 00:32:58,499
and feed them here and see the result.

741
00:32:58,980 --> 00:33:00,961
Not sure it would be super cool from the start,

742
00:33:01,021 --> 00:33:01,741
but I can try.

743
00:33:04,069 --> 00:33:07,852
And yeah, I scaled them all differently because, well, because I could.

744
00:33:09,313 --> 00:33:14,398
Human height, usually like 1.7 meters male, 1.6 female, plus minus 10-15 percent.

745
00:33:14,759 --> 00:33:15,459
We're all different.

746
00:33:16,120 --> 00:33:22,185
And I choose to respect that because it's a very small and cheap way to add realism to this.

747
00:33:23,707 --> 00:33:24,528
So, marching band.

748
00:33:26,553 --> 00:33:30,417
Marching band is one single actor turned into nine characters,

749
00:33:30,977 --> 00:33:34,040
some male, some female, nine different scales and proportions,

750
00:33:34,140 --> 00:33:38,383
nine animated props synced to the tune, controlled separately.

751
00:33:39,264 --> 00:33:39,924
They can crouch.

752
00:33:40,225 --> 00:33:40,845
They can climb.

753
00:33:41,626 --> 00:33:42,647
Time to make all of this.

754
00:33:43,507 --> 00:33:44,748
I had the rules ready, remember?

755
00:33:45,229 --> 00:33:45,509
One day.

756
00:33:47,931 --> 00:33:49,933
Took me several months to realize one more thing.

757
00:33:50,273 --> 00:33:53,255
So crouching is actually just a subset of a bigger thing.

758
00:33:54,821 --> 00:33:57,443
avoiding. And if we can avoid, we can attract as well.

759
00:33:58,284 --> 00:34:00,486
So if we start raycasting into sides,

760
00:34:01,487 --> 00:34:04,450
we can have a lot of fun with characters just walking around

761
00:34:05,851 --> 00:34:07,212
simply by the level.

762
00:34:08,293 --> 00:34:11,956
And the coolest part is I've created these rules for avoidance and for

763
00:34:12,277 --> 00:34:17,501
traction. And I can apply them to all my crouching, zombie, aiming, female, carrying, whatever.

764
00:34:18,702 --> 00:34:21,623
And I can tell the different characters will do different things.

765
00:34:21,803 --> 00:34:23,224
Maybe somebody will reach further.

766
00:34:23,604 --> 00:34:27,625
Maybe somebody will be raycasting into other characters and touching other characters.

767
00:34:27,685 --> 00:34:30,266
Maybe somebody will be touching him as he goes on.

768
00:34:30,847 --> 00:34:31,187
I don't know.

769
00:34:32,287 --> 00:34:35,328
So let's have some more fun.

770
00:34:37,289 --> 00:34:38,849
The big section, the quadrupeds.

771
00:34:39,590 --> 00:34:41,830
First thing, of course, I have the horsey.

772
00:34:42,771 --> 00:34:46,232
I turn the horsey into IK rig horsey because I can't work with bones.

773
00:34:47,265 --> 00:34:49,688
So once I turn the horsey into IK rig horsey,

774
00:34:49,728 --> 00:34:50,649
I just have those nodes.

775
00:34:51,089 --> 00:34:52,611
Now I can play with it, but the thing

776
00:34:52,671 --> 00:34:54,392
is there's less to do with quadrupeds.

777
00:34:54,452 --> 00:34:56,514
Conceivably, they don't operate with props.

778
00:34:57,675 --> 00:35:02,980
But what they do operate with is another character.

779
00:35:03,060 --> 00:35:04,842
So I put an IK rig in an IK rig.

780
00:35:06,115 --> 00:35:08,959
And we can tell this rider what to do.

781
00:35:08,999 --> 00:35:12,003
We can give him props and so on, as much as we want.

782
00:35:12,483 --> 00:35:14,126
As for the horsey, we don't usually

783
00:35:14,346 --> 00:35:17,550
distinguish between with or without rider animation.

784
00:35:18,231 --> 00:35:21,796
We never really mocap for with rider, without rider.

785
00:35:21,816 --> 00:35:23,378
It doesn't seem like we need to.

786
00:35:24,985 --> 00:35:28,547
question of course, would there be a need to modify the horse

787
00:35:28,587 --> 00:35:32,390
animation in here? Well, does the player need visual feedback

788
00:35:32,450 --> 00:35:37,393
that the horse is overloading the ride, right? Maybe there is

789
00:35:37,433 --> 00:35:40,475
an extreme case where we want to tell him that this horse is not

790
00:35:40,515 --> 00:35:45,699
a happy horse. And it's nice to be able to do this fun stuff on

791
00:35:45,719 --> 00:35:48,260
the fly. Of course I exaggerate it, but you know what I mean,

792
00:35:48,280 --> 00:35:52,423
guys. And if you don't have the horse with the heavy rider

793
00:35:52,483 --> 00:35:52,923
mocap.

794
00:35:54,486 --> 00:36:00,291
you're still fine. In fact, I didn't have horsey mocap at all and I'm still fine because I had

795
00:36:00,331 --> 00:36:08,679
Jerry. And Jerry has been my champion for the past year. So, you know, if you're still feeling bad

796
00:36:08,739 --> 00:36:13,263
for the green horsey, don't. Because none of them exist. But Jerry does.

797
00:36:14,155 --> 00:36:17,696
And through my test, Cherry has been several breeds of dogs,

798
00:36:18,036 --> 00:36:22,178
cat, mountain lion, a bear, horse, elephant,

799
00:36:22,258 --> 00:36:24,859
and even more bizarre things like this.

800
00:36:25,299 --> 00:36:27,359
So in all honesty, he deserves an Oscar.

801
00:36:27,820 --> 00:36:29,320
And yes, I was naughty.

802
00:36:29,420 --> 00:36:31,961
I scaled this animation, made it slower,

803
00:36:32,621 --> 00:36:33,662
made sense in this case.

804
00:36:34,242 --> 00:36:36,523
So at least as far as the locomotions go, yes,

805
00:36:36,603 --> 00:36:39,124
I can share, but in a certain extent.

806
00:36:41,268 --> 00:36:44,489
Of course, the elephant would still piss with his leg lifted.

807
00:36:44,689 --> 00:36:45,549
We wouldn't do that.

808
00:36:45,869 --> 00:36:48,290
But happily, we have talented animators.

809
00:36:49,150 --> 00:36:51,251
And of course, all of this is only possible

810
00:36:51,311 --> 00:36:52,771
because we can scale the footsteps.

811
00:36:53,171 --> 00:36:55,712
Quadrupeds are super different in their proportions

812
00:36:55,792 --> 00:36:56,992
as we go from breed to breed.

813
00:36:58,533 --> 00:37:02,114
What else is good about IK Rig for quadrupeds, I guess?

814
00:37:02,794 --> 00:37:03,274
Maybe this.

815
00:37:04,234 --> 00:37:06,795
Maybe then even terrain for horse, for the rider.

816
00:37:07,435 --> 00:37:09,996
Slope, speed, any direction as we please.

817
00:37:11,142 --> 00:37:15,025
And not only that, you remember we did this Nostradamus thing,

818
00:37:15,225 --> 00:37:16,226
right, for foot placement?

819
00:37:18,307 --> 00:37:19,348
You probably know it's coming.

820
00:37:20,849 --> 00:37:22,291
Another thing that you will not unsee.

821
00:37:23,411 --> 00:37:24,732
At least I didn't see it anywhere.

822
00:37:26,194 --> 00:37:28,275
And as I said, GRE is amazing.

823
00:37:30,737 --> 00:37:33,439
Let me talk about main reasons to introduce

824
00:37:33,519 --> 00:37:37,242
the systemic animation solution to the pipeline,

825
00:37:37,443 --> 00:37:39,124
be it iKey, Rig, or any other one.

826
00:37:40,627 --> 00:37:42,428
First of all, it's about character design.

827
00:37:43,029 --> 00:37:46,552
Character design that is driven by the character artist

828
00:37:46,612 --> 00:37:49,134
and concept artist, not by the rig that we share.

829
00:37:50,175 --> 00:37:52,997
And we want to add versatility to sizes.

830
00:37:53,618 --> 00:37:57,321
We want to add versatility to proportions of our characters.

831
00:37:58,922 --> 00:38:01,224
We want to add different behaviors as they move around

832
00:38:01,705 --> 00:38:03,066
to show that they move differently.

833
00:38:03,746 --> 00:38:05,207
And we want to provide visual clues

834
00:38:05,228 --> 00:38:07,469
when they're working with props to show it's heavy,

835
00:38:07,529 --> 00:38:09,091
that he's limping, he's hurt.

836
00:38:09,888 --> 00:38:11,329
we can show it in animation.

837
00:38:12,610 --> 00:38:17,073
Content on demand, that means generating animations

838
00:38:17,813 --> 00:38:19,895
right as we play, right as we need them.

839
00:38:20,855 --> 00:38:23,197
So for this specific guy in this specific case

840
00:38:23,257 --> 00:38:26,019
in this specific level, right now, I need this.

841
00:38:26,259 --> 00:38:26,839
And we make it.

842
00:38:28,360 --> 00:38:31,142
So hence the term systemic animation that I like so much.

843
00:38:31,442 --> 00:38:34,304
We don't pick from the pool of stuff we pre-created.

844
00:38:34,724 --> 00:38:35,885
We make it on the fly.

845
00:38:38,643 --> 00:38:42,905
Fast iterations and, more important, fast prototypes.

846
00:38:44,325 --> 00:38:46,446
Anytime you want to add umbrellas to your game,

847
00:38:47,366 --> 00:38:49,747
you just throw in a prop and you create the accurate rule.

848
00:38:49,947 --> 00:38:51,108
Now I'm not saying this is gonna be

849
00:38:51,148 --> 00:38:53,069
the perfect umbrella-carrying animation.

850
00:38:53,709 --> 00:38:55,389
I'm saying you can do it within one day

851
00:38:55,870 --> 00:38:57,350
and see the result and play with it

852
00:38:57,470 --> 00:38:58,931
and figure out what else do you want.

853
00:39:00,031 --> 00:39:02,572
You don't need to mo-cap shoot this offline loop

854
00:39:02,652 --> 00:39:05,073
of retargeting for your female rigs

855
00:39:05,133 --> 00:39:06,714
carrying umbrellas and stuff like that.

856
00:39:07,579 --> 00:39:10,925
Import-export, no, right there, right now, fast and furious.

857
00:39:13,089 --> 00:39:16,374
Final reason, I first called this saving money.

858
00:39:17,425 --> 00:39:20,926
But I know you guys, we get $10 million envelope,

859
00:39:20,986 --> 00:39:22,486
we spend $20, we ask for more.

860
00:39:23,266 --> 00:39:26,587
So whatever we save here, we would still

861
00:39:26,647 --> 00:39:27,708
waste in some other place.

862
00:39:27,748 --> 00:39:29,388
So I'm calling it cost allocation.

863
00:39:30,108 --> 00:39:32,469
Let's save some time, let's save some money,

864
00:39:32,529 --> 00:39:35,650
let's invest this time and money into maybe generating

865
00:39:35,690 --> 00:39:36,970
more content for the game.

866
00:39:37,090 --> 00:39:39,071
Maybe investing it into the rendering,

867
00:39:39,131 --> 00:39:41,331
maybe investing it into the sound and whatnot.

868
00:39:41,391 --> 00:39:42,632
We will figure it out, I know.

869
00:39:46,483 --> 00:39:47,744
What are the pipeline changes?

870
00:39:49,465 --> 00:39:52,286
So characters, yes, they're created based on concept art

871
00:39:52,606 --> 00:39:55,587
and common sense, of course, not based on the rig.

872
00:39:55,927 --> 00:39:58,188
Basically, we're cutting away a part of the pipeline

873
00:39:58,228 --> 00:39:59,809
where your character artist has just made

874
00:39:59,849 --> 00:40:03,571
this wonderful model and now technical animator comes

875
00:40:03,631 --> 00:40:05,592
and says, now you have to adjust it to this rig

876
00:40:06,132 --> 00:40:06,772
and he's crying.

877
00:40:08,653 --> 00:40:09,473
Rigs can be unique.

878
00:40:10,399 --> 00:40:13,721
But for the most human cases, it's like, you know,

879
00:40:13,741 --> 00:40:16,023
with any boxing or MMA match,

880
00:40:16,103 --> 00:40:18,125
they have this screen at the start where they say

881
00:40:18,165 --> 00:40:21,368
that height, weight, reach changes.

882
00:40:21,708 --> 00:40:22,989
Those are within centimeters.

883
00:40:23,009 --> 00:40:25,291
They're super important for the fight and for the fighters,

884
00:40:25,691 --> 00:40:27,092
but they're not too far away.

885
00:40:27,192 --> 00:40:29,454
So normally I would say character artists

886
00:40:29,474 --> 00:40:31,516
can just modify the rig on his own,

887
00:40:31,556 --> 00:40:32,437
if you trust him enough,

888
00:40:32,497 --> 00:40:35,079
just to scale things up and down as he pleases.

889
00:40:36,139 --> 00:40:39,921
And in Engine, riggers and tech guys map this incoming rig

890
00:40:40,021 --> 00:40:41,883
to the unified IK rig structure.

891
00:40:42,803 --> 00:40:44,924
And they define which parts of the bones

892
00:40:45,345 --> 00:40:48,506
belong to which chain in the full-body IK.

893
00:40:50,548 --> 00:40:52,489
And yeah, they also set up the constraints

894
00:40:52,529 --> 00:40:54,790
for secondary things like muscles and whatnot.

895
00:40:56,671 --> 00:40:58,853
Animators, they work with IK rig rules.

896
00:41:00,239 --> 00:41:02,641
There are two very important things here.

897
00:41:02,741 --> 00:41:04,743
First of all, to work with this stuff,

898
00:41:04,783 --> 00:41:06,924
you need the real-time preview.

899
00:41:07,685 --> 00:41:09,026
So if you build something like this,

900
00:41:09,086 --> 00:41:11,087
make sure your animator sees the changes

901
00:41:11,688 --> 00:41:12,989
and can experiment with them.

902
00:41:13,369 --> 00:41:14,610
Second of all, there is a need,

903
00:41:15,451 --> 00:41:17,232
and we're actually discussing it right now,

904
00:41:17,612 --> 00:41:21,495
a need to connect the animation engine of your game engine.

905
00:41:22,107 --> 00:41:25,507
with MotionBuilder, or any other software of choice for the animator.

906
00:41:25,547 --> 00:41:26,868
So he can go back and forth,

907
00:41:27,508 --> 00:41:30,348
and set the pose for this particular trumpet,

908
00:41:30,428 --> 00:41:32,709
if he wants to, that's the simplest thing.

909
00:41:33,209 --> 00:41:36,430
And because he would be doing this a lot, with trumpets,

910
00:41:37,890 --> 00:41:40,531
there is a need to have this process simple and fast.

911
00:41:42,131 --> 00:41:44,292
But the largest, largest difference of all,

912
00:41:44,892 --> 00:41:48,253
is actually for creative directors, for game designers.

913
00:41:48,773 --> 00:41:49,033
Because...

914
00:41:50,133 --> 00:41:56,216
The holy shit moment happens when you realize you can spam these marching bands on the fly as much as you want.

915
00:41:56,957 --> 00:41:58,978
That you can ride different animals.

916
00:41:59,538 --> 00:42:05,741
That you can telegraph the character's state and health through the animation without this extra cost of mocap.

917
00:42:06,762 --> 00:42:13,646
That you can have cover system, destructible covers, and characters of different scale will use those covers differently as they get destroyed.

918
00:42:15,006 --> 00:42:18,468
That you can have some very interesting fun with AI and...

919
00:42:19,580 --> 00:42:22,021
I will talk about this maybe next time.

920
00:42:23,581 --> 00:42:27,443
And yeah, that you can have characters of different sizes

921
00:42:28,263 --> 00:42:30,944
and have this versatility in your virtual city or whatnot.

922
00:42:32,625 --> 00:42:34,926
And that all of these things

923
00:42:35,226 --> 00:42:37,327
can be connected to your game design.

924
00:42:38,007 --> 00:42:39,528
Because now you're showing way more.

925
00:42:39,988 --> 00:42:42,069
Maybe you want the player to be noticing this

926
00:42:42,149 --> 00:42:43,029
for a particular reason.

927
00:42:46,499 --> 00:42:49,360
when to introduce systemic animation solution

928
00:42:49,400 --> 00:42:50,080
to the pipeline.

929
00:42:51,421 --> 00:42:52,922
As early as possible, I would say,

930
00:42:53,002 --> 00:42:54,683
if you had your first mocap shoot,

931
00:42:54,783 --> 00:42:55,843
probably it's too late.

932
00:42:57,244 --> 00:42:59,205
Because there's a lot of things to consider.

933
00:42:59,285 --> 00:43:00,585
First of all, you need to decide

934
00:43:00,645 --> 00:43:02,867
what is it specifically that you want to do.

935
00:43:03,487 --> 00:43:06,388
Do you just want to have different proportions of humans?

936
00:43:06,508 --> 00:43:08,329
Or do you want to be riding quadrupeds?

937
00:43:08,749 --> 00:43:12,091
Or maybe you have a game with focus on prop interaction,

938
00:43:12,171 --> 00:43:14,072
and you want this interaction to be realistic.

939
00:43:15,111 --> 00:43:17,193
So you need to decide how much of it you need to do.

940
00:43:17,853 --> 00:43:21,336
Because there's no need to build the full shebang from the start.

941
00:43:21,436 --> 00:43:23,778
We need to build something simple, see how it works.

942
00:43:24,279 --> 00:43:27,041
Also, there are things in pipeline which will be cut out.

943
00:43:27,922 --> 00:43:31,545
And a lot of this is about iterations and a lot of this is about...

944
00:43:33,357 --> 00:43:35,578
motion capture for every possible crouch

945
00:43:35,618 --> 00:43:36,818
with every possible weapon,

946
00:43:36,858 --> 00:43:39,279
because probably you don't really need this anymore.

947
00:43:39,419 --> 00:43:42,140
You focus your animation on things that matter,

948
00:43:42,260 --> 00:43:45,041
on cutscenes, on the character of main characters,

949
00:43:45,101 --> 00:43:47,541
but not on making endless variations

950
00:43:47,681 --> 00:43:50,462
for male and female rig for several different props.

951
00:43:53,323 --> 00:43:55,163
Yeah, also you need to think about your levels,

952
00:43:55,223 --> 00:43:56,484
because if you start...

953
00:43:57,465 --> 00:43:59,406
discarding the metrics of the levels.

954
00:44:00,087 --> 00:44:01,447
That changes things a little.

955
00:44:02,067 --> 00:44:04,649
You can start thinking about dynamics

956
00:44:04,809 --> 00:44:07,170
and their proper collisions with dynamics.

957
00:44:07,590 --> 00:44:08,270
It's interesting.

958
00:44:10,411 --> 00:44:12,332
But whenever you do this,

959
00:44:13,432 --> 00:44:14,893
I suggest you guys do it soon,

960
00:44:15,173 --> 00:44:17,254
because a couple years from now,

961
00:44:17,754 --> 00:44:19,695
systemic animation stuff will start shipping.

962
00:44:20,696 --> 00:44:22,617
And it's gonna be hard to keep up with this.

963
00:44:25,978 --> 00:44:26,398
It's all good.

964
00:44:27,452 --> 00:44:30,515
But I also want to be clear when not to use anything like this.

965
00:44:31,056 --> 00:44:33,438
And first example is the obsessive compulsive game

966
00:44:33,478 --> 00:44:35,200
mechanics like Mortal Kombat, for example.

967
00:44:35,661 --> 00:44:37,663
They have a number of characters, yes.

968
00:44:38,103 --> 00:44:40,666
But every single animation, every single key frame

969
00:44:40,726 --> 00:44:43,288
of every single animation has been visited and revisited

970
00:44:43,308 --> 00:44:45,150
a million times because it's super important.

971
00:44:45,570 --> 00:44:48,913
The reach of the Sub-Zero's punch, the speed of this punch.

972
00:44:49,373 --> 00:44:50,494
This is the game mechanic.

973
00:44:50,514 --> 00:44:52,255
You can't allow this to be controlled

974
00:44:52,295 --> 00:44:54,077
by some arbitrary system.

975
00:44:54,237 --> 00:44:55,478
You want this to be specific.

976
00:44:55,538 --> 00:44:57,719
So in this case, you don't need any solution like that,

977
00:44:58,099 --> 00:44:59,360
especially because in Mortal Kombat,

978
00:44:59,400 --> 00:45:02,362
you're not really working with props or navigating uneven

979
00:45:02,402 --> 00:45:03,083
terrain as much.

980
00:45:05,305 --> 00:45:07,166
Massive strategy games, conceivably,

981
00:45:07,206 --> 00:45:09,167
I mean the games where you have 10,000 characters

982
00:45:09,207 --> 00:45:09,668
on the screen.

983
00:45:10,982 --> 00:45:14,747
even if you had the fastest full-body IK solution ever.

984
00:45:15,748 --> 00:45:18,191
If the character size is 10 pixels on the screen,

985
00:45:18,532 --> 00:45:22,697
there's no reason to go too deep with fine-tuning

986
00:45:22,717 --> 00:45:23,918
the foot placement of him.

987
00:45:25,435 --> 00:45:26,796
So of course we want to keep it smart.

988
00:45:27,536 --> 00:45:29,938
And solo games, meaning games where you only have one

989
00:45:29,998 --> 00:45:33,800
character or the amount of character animation is low.

990
00:45:34,620 --> 00:45:37,182
In such cases, maybe you want to invest in some sort of

991
00:45:37,402 --> 00:45:41,945
systemic animation solution, but only if that's the key

992
00:45:41,985 --> 00:45:42,785
part of your game.

993
00:45:42,826 --> 00:45:44,907
And there are games where there's one character, but

994
00:45:44,947 --> 00:45:46,568
dynamically interacting with environment.

995
00:45:46,848 --> 00:45:47,408
It's very smart.

996
00:45:48,377 --> 00:45:50,499
Unless that's the case, of course,

997
00:45:51,200 --> 00:45:53,602
there's no need to invest in a humongous system

998
00:45:54,462 --> 00:45:56,964
if the total time of animated character on screen

999
00:45:57,024 --> 00:45:57,705
is 30 minutes.

1000
00:45:59,306 --> 00:46:03,410
So let me answer the three main questions you guys probably

1001
00:46:03,450 --> 00:46:03,670
have.

1002
00:46:04,550 --> 00:46:06,712
What stage are we at with IK rig?

1003
00:46:07,413 --> 00:46:08,454
Alex, nice videos.

1004
00:46:08,974 --> 00:46:09,815
How usable is it?

1005
00:46:10,717 --> 00:46:13,058
So I came up with this idea about a year ago, as I said.

1006
00:46:14,099 --> 00:46:16,100
I spent some time bouncing it around in my head

1007
00:46:16,180 --> 00:46:18,241
and with my friends at Ubisoft.

1008
00:46:19,041 --> 00:46:21,182
And back in the day, we were only

1009
00:46:21,263 --> 00:46:24,224
interested in about 10% of what I'm showing today.

1010
00:46:24,945 --> 00:46:27,726
Because frankly, we didn't know all of this is possible.

1011
00:46:29,507 --> 00:46:31,828
I built the first prototype in MaxScript.

1012
00:46:34,822 --> 00:46:36,242
That was a proof of concept stage.

1013
00:46:36,382 --> 00:46:37,363
We were playing with it.

1014
00:46:37,443 --> 00:46:38,924
We were seeing what can happen.

1015
00:46:39,464 --> 00:46:40,204
Dogs to cats.

1016
00:46:40,764 --> 00:46:42,986
I remember the challenge from Christian.

1017
00:46:43,006 --> 00:46:44,806
And that was fun.

1018
00:46:45,687 --> 00:46:49,049
But then my friend Michael Butner took interest in it,

1019
00:46:49,149 --> 00:46:51,550
and he built the runtime part of it.

1020
00:46:51,610 --> 00:46:54,031
And he keeps building it as we speak, like right now

1021
00:46:54,091 --> 00:46:54,631
in Toronto.

1022
00:46:55,512 --> 00:46:58,333
And yeah, we keep developing it further.

1023
00:46:59,053 --> 00:47:01,014
To be honest, the list of complete features

1024
00:47:01,134 --> 00:47:01,555
is now 10% off.

1025
00:47:03,442 --> 00:47:06,143
the new 10 times increase of the Dream.

1026
00:47:06,523 --> 00:47:09,104
And I don't know how much do we need right now,

1027
00:47:11,125 --> 00:47:11,625
but we'll see.

1028
00:47:12,626 --> 00:47:15,287
And the key parts are there right now,

1029
00:47:16,708 --> 00:47:19,529
namely the optimized full-body IK and mechanics

1030
00:47:19,589 --> 00:47:21,790
for creating and sharing IK rig rules

1031
00:47:21,850 --> 00:47:24,691
between different characters and seeing it in the engine.

1032
00:47:26,232 --> 00:47:29,613
Main load, yeah, resource-heavy, expensive.

1033
00:47:30,667 --> 00:47:34,149
Main load, the expense, goes on your full-body IK solution.

1034
00:47:35,990 --> 00:47:38,751
All the IK rig rules, they have very noticeable results.

1035
00:47:40,272 --> 00:47:43,093
But in fact, they are very short and simple lines of math.

1036
00:47:44,053 --> 00:47:45,094
This is what I like a lot.

1037
00:47:45,114 --> 00:47:46,535
I mean, it's simple mathematics.

1038
00:47:47,375 --> 00:47:50,216
They're independent of the game engine or the programming

1039
00:47:50,236 --> 00:47:50,617
language.

1040
00:47:50,897 --> 00:47:51,637
It's very simple.

1041
00:47:52,718 --> 00:47:54,478
Move, rotate, constrain.

1042
00:47:55,906 --> 00:47:58,249
You may think of the IK regrules as motion shaders,

1043
00:47:58,329 --> 00:48:01,413
but with way less instructions and way more output.

1044
00:48:02,555 --> 00:48:06,140
So after this math is done, then the full-body IK

1045
00:48:06,180 --> 00:48:06,981
starts working.

1046
00:48:08,243 --> 00:48:11,487
And you can use any full-body IK you want,

1047
00:48:12,028 --> 00:48:13,249
and that is your cost.

1048
00:48:14,896 --> 00:48:18,618
The good part is that full-body IK can be optimized very far

1049
00:48:19,758 --> 00:48:20,819
in case you wanted to.

1050
00:48:21,179 --> 00:48:23,320
It depends, of course, on the rig complexity,

1051
00:48:23,420 --> 00:48:24,720
so it can be LOD'd.

1052
00:48:25,781 --> 00:48:28,822
Things like ray tests, you understand how to control those,

1053
00:48:28,982 --> 00:48:30,143
so up to you.

1054
00:48:33,004 --> 00:48:35,625
Finally, where can I download it?

1055
00:48:37,446 --> 00:48:40,627
The reaction I got a lot from the moment

1056
00:48:40,667 --> 00:48:43,749
that I did the original IK rig reveal speech was this.

1057
00:48:44,930 --> 00:48:51,095
And let me ask you, where do you download the normal maps?

1058
00:48:53,557 --> 00:48:53,877
You don't.

1059
00:48:55,138 --> 00:48:57,380
You can introduce the feature to your engine, yes.

1060
00:48:57,740 --> 00:49:01,203
Or you can purchase an engine that supports normal maps.

1061
00:49:02,004 --> 00:49:04,566
But the reason I keep calling this is just one of the

1062
00:49:04,626 --> 00:49:08,068
possible systemic animation solutions is that it's not a

1063
00:49:08,108 --> 00:49:08,829
software piece.

1064
00:49:09,570 --> 00:49:10,230
It's a concept.

1065
00:49:12,537 --> 00:49:14,638
And it's in development at Ubisoft, yes.

1066
00:49:15,658 --> 00:49:17,299
But you don't have to wait and wonder

1067
00:49:17,499 --> 00:49:18,980
if we release it and when.

1068
00:49:20,460 --> 00:49:23,682
If I did a good job explaining the idea,

1069
00:49:25,262 --> 00:49:27,223
you know how to build it with Blackjack

1070
00:49:27,283 --> 00:49:28,123
and whatever you want.

1071
00:49:30,044 --> 00:49:32,565
In the recent years, we had very many advancements

1072
00:49:32,665 --> 00:49:36,386
in rendering, in AI, in amount of content

1073
00:49:36,526 --> 00:49:38,367
on the screen and in the game.

1074
00:49:39,428 --> 00:49:41,288
We got amazing evolution of dynamics.

1075
00:49:42,188 --> 00:49:44,769
We evolved the streaming of data and a bunch of other things.

1076
00:49:45,389 --> 00:49:50,310
So it feels like now is the time that the animation is taking

1077
00:49:50,330 --> 00:49:51,891
this step to the next gen as well.

1078
00:49:52,731 --> 00:49:55,752
And there are amazing developments out there.

1079
00:49:56,152 --> 00:49:57,053
There's cool stuff.

1080
00:49:57,073 --> 00:49:58,833
There's HumanIK by Autodesk.

1081
00:49:58,893 --> 00:50:04,175
There's Euphoria by Natural Motion, FinalIK by RootMotion,

1082
00:50:04,475 --> 00:50:05,575
Runtime by Akinima.

1083
00:50:06,095 --> 00:50:07,596
I like to think that if we share.

1084
00:50:08,354 --> 00:50:12,477
the ideas and developments, we can contribute to the industry as a whole.

1085
00:50:12,977 --> 00:50:13,718
And that would be cool.

1086
00:50:14,979 --> 00:50:18,222
Credit you, this smiling person is Michael Butner,

1087
00:50:18,982 --> 00:50:21,444
tech lead of animation and physics of Ubisoft Toronto.

1088
00:50:21,484 --> 00:50:25,808
He's the mind, the father of motion fields tech, motion matching tech.

1089
00:50:26,448 --> 00:50:29,831
And he's also the father of runtime implementation of the IK rig.

1090
00:50:30,331 --> 00:50:34,535
So, whatever runs now and whatever will keep running.

1091
00:50:35,614 --> 00:50:37,216
It would not be possible without Michael.

1092
00:50:37,796 --> 00:50:40,539
And of course, my gratitude to Ubisoft,

1093
00:50:40,619 --> 00:50:45,063
because this is the craziest family I've had for an employer

1094
00:50:45,223 --> 00:50:45,443
ever.

1095
00:50:46,584 --> 00:50:48,225
And we are shipping kick-ass games.

1096
00:50:48,646 --> 00:50:49,547
And you know it's coming.

1097
00:50:49,767 --> 00:50:52,730
Yes, to ship kick-ass games, we give money to smart people.

1098
00:50:53,530 --> 00:50:55,312
So if you want to work on epic stuff,

1099
00:50:56,213 --> 00:50:57,834
and if the dev force is strong with you,

1100
00:50:58,975 --> 00:51:00,416
there's a team that could welcome you.

1101
00:51:01,376 --> 00:51:03,497
There's Ubisoft booth on the premises, second floor,

1102
00:51:03,557 --> 00:51:05,178
like right outside here.

1103
00:51:06,018 --> 00:51:06,879
Go talk to them.

1104
00:51:07,239 --> 00:51:08,840
Figure out, maybe it's interesting for you.

1105
00:51:08,880 --> 00:51:09,480
Maybe it's not.

1106
00:51:09,520 --> 00:51:10,140
But don't be shy.

1107
00:51:10,160 --> 00:51:10,881
Just give it a try.

1108
00:51:11,321 --> 00:51:11,681
It's fun.

1109
00:51:12,301 --> 00:51:13,142
Or catch me up.

1110
00:51:13,202 --> 00:51:14,702
I can give you a shortcut to them.

1111
00:51:16,043 --> 00:51:16,343
Why not?

1112
00:51:18,945 --> 00:51:22,566
Two things I want to suggest you guys to do.

1113
00:51:23,047 --> 00:51:26,328
First thing, tomorrow, 11.30, there's

1114
00:51:26,368 --> 00:51:28,949
a talk about motion matching by Simon Clavier.

1115
00:51:30,029 --> 00:51:31,409
Go there and listen to him.

1116
00:51:31,809 --> 00:51:32,990
Listen to what he has to say.

1117
00:51:33,290 --> 00:51:34,571
If you don't have time, make time.

1118
00:51:36,032 --> 00:51:39,233
Because this is one of the coolest things in animation

1119
00:51:39,273 --> 00:51:40,774
I've seen so far, and I've seen a lot.

1120
00:51:41,815 --> 00:51:45,457
Second thing, we will have an extended Q&A session tomorrow.

1121
00:51:45,477 --> 00:51:46,857
I'm going to keep this slide for a while,

1122
00:51:46,897 --> 00:51:48,618
so you can take a picture so you don't forget.

1123
00:51:49,439 --> 00:51:52,400
West Hall, second floor, tomorrow, 3 to 4 PM.

1124
00:51:53,321 --> 00:51:53,721
Come over.

1125
00:51:53,781 --> 00:51:54,401
We can chat.

1126
00:51:54,441 --> 00:51:55,702
We can have some laughs.

1127
00:51:56,542 --> 00:51:57,943
Somebody may try to recruit you.

1128
00:51:57,983 --> 00:51:58,443
I'm sorry.

1129
00:52:00,822 --> 00:52:01,443
It's going to be fun.

1130
00:52:01,503 --> 00:52:03,204
So thank you.

1131
00:52:03,505 --> 00:52:03,885
That's it.

1132
00:52:12,492 --> 00:52:13,493
Who wants to ask something?

1133
00:52:13,513 --> 00:52:15,575
Guys, microphone, don't be shy.

1134
00:52:16,656 --> 00:52:17,556
Questions, questions.

1135
00:52:23,087 --> 00:52:25,989
What middleware products are you using to achieve this?

1136
00:52:26,250 --> 00:52:28,932
You mentioned a few full-body IK solutions.

1137
00:52:29,332 --> 00:52:30,894
Are you using one in particular?

1138
00:52:30,914 --> 00:52:31,855
Built our own.

1139
00:52:32,415 --> 00:52:33,316
With blackjack and...

1140
00:52:37,059 --> 00:52:39,161
First, thanks for sharing the idea.

1141
00:52:39,181 --> 00:52:42,004
I think we need more of this in game development.

1142
00:52:42,914 --> 00:52:44,075
Glad you like the fancy videos.

1143
00:52:44,715 --> 00:52:45,756
Yeah, fancy videos also.

1144
00:52:46,897 --> 00:52:48,638
But ideas is more important.

1145
00:52:49,158 --> 00:52:53,181
What I want to ask, how much time and effort does it take to configure

1146
00:52:54,783 --> 00:52:58,485
one character with all the parameters that you mentioned,

1147
00:52:58,545 --> 00:53:01,948
like how it moves and which depends from which part?

1148
00:53:03,809 --> 00:53:09,494
Okay, so how much time does it take to basically define a motion capture rig into these IK rig chains?

1149
00:53:09,974 --> 00:53:10,775
Is that what you're asking?

1150
00:53:11,515 --> 00:53:11,655
Yeah.

1151
00:53:12,633 --> 00:53:21,337
Like, how much time does it take to create a new character using already ready the mockup?

1152
00:53:23,478 --> 00:53:25,639
I would say like way less than a day.

1153
00:53:27,219 --> 00:53:32,341
There is a couple of crazy characters like you saw in one of the videos, this guy with

1154
00:53:32,381 --> 00:53:34,201
multiple legs and hands sticking out of him.

1155
00:53:34,241 --> 00:53:37,983
That took me more time because, well, most of this time I was trying to figure out where

1156
00:53:38,003 --> 00:53:38,963
to stick an extra hand.

1157
00:53:39,444 --> 00:53:44,486
But if we're talking about bipeds, yeah, that's fast and simple, actually.

1158
00:53:44,966 --> 00:53:49,348
Because, yes, I have different bones coming in, but I know where my legs are.

1159
00:53:49,508 --> 00:53:53,329
I might even have a naming convention and streamline it, like just script it.

1160
00:53:54,690 --> 00:53:58,091
And all those definitions, do you define them in the code,

1161
00:53:58,311 --> 00:54:01,693
or you made some kind of UI which is usable by artists?

1162
00:54:02,193 --> 00:54:05,014
So right now it's not as friendly,

1163
00:54:05,274 --> 00:54:06,695
but of course we need the UI.

1164
00:54:06,855 --> 00:54:08,375
We're thinking a node-based system.

1165
00:54:09,496 --> 00:54:12,497
And yeah, at the moment,

1166
00:54:12,997 --> 00:54:15,859
it's lines of code with some nodes in place.

1167
00:54:16,619 --> 00:54:18,680
But we're not complete yet.

1168
00:54:18,720 --> 00:54:19,760
We're not shipping it tomorrow.

1169
00:54:21,182 --> 00:54:23,183
But yeah, whatever we do, we have to make sure

1170
00:54:23,223 --> 00:54:25,925
that people working with this, some of them

1171
00:54:25,965 --> 00:54:27,726
are nerdy technical artists, yes.

1172
00:54:27,806 --> 00:54:29,607
But a lot of them are animators.

1173
00:54:29,707 --> 00:54:31,869
And animators need to have nice interface,

1174
00:54:32,389 --> 00:54:34,811
ideally resembling something that they have experienced

1175
00:54:34,851 --> 00:54:35,751
working with before.

1176
00:54:36,412 --> 00:54:38,933
Hence, I mentioned the MotionBuilder, obvious choice.

1177
00:54:40,434 --> 00:54:40,834
OK, thanks.

1178
00:54:41,214 --> 00:54:41,455
Thank you.

1179
00:54:43,808 --> 00:54:49,632
This is very cool. You showed some examples where you said that, like, this is good initially, but you would want to polish it.

1180
00:54:49,872 --> 00:54:53,135
Can you talk about how you would polish these sorts of things?

1181
00:54:53,275 --> 00:54:54,956
Like, if an animator looks at something and says,

1182
00:54:55,416 --> 00:54:58,838
oh, that's really good when the character crouches, but it should look a little bit more like this.

1183
00:54:59,239 --> 00:55:02,721
Is there some keyframing-like way to tweak it and polish it?

1184
00:55:03,061 --> 00:55:05,303
So, uh, yes, it should.

1185
00:55:06,504 --> 00:55:08,745
That's why I was talking about the motion builder connection

1186
00:55:08,785 --> 00:55:11,986
like directly because animators like to tweak things.

1187
00:55:12,226 --> 00:55:17,948
But to be honest, this thing, you're

1188
00:55:17,988 --> 00:55:20,809
not supposed to modify this particular pose.

1189
00:55:20,929 --> 00:55:23,710
If it's broken, you need to figure out why.

1190
00:55:23,790 --> 00:55:26,671
Because at the end of the day, we're

1191
00:55:26,711 --> 00:55:28,411
generating the content as you play.

1192
00:55:28,451 --> 00:55:30,252
You never know what's going to be happening.

1193
00:55:30,772 --> 00:55:33,313
So if all of a sudden, your leg got overstretched,

1194
00:55:34,403 --> 00:55:38,204
That means you need to introduce a rule to keep the leg within the limits.

1195
00:55:38,444 --> 00:55:39,404
You know how to do this.

1196
00:55:39,864 --> 00:55:42,885
So ideally, I would say you try to fix by that.

1197
00:55:43,085 --> 00:55:45,266
Now if my animator comes to me and says, you know what?

1198
00:55:45,566 --> 00:55:47,026
This female walks looks like crap.

1199
00:55:48,126 --> 00:55:53,348
My first intention is, OK, I need to open a video of female walk that he likes.

1200
00:55:54,585 --> 00:55:57,967
And I want to try to parametrize what's happening.

1201
00:55:58,367 --> 00:56:01,549
Because when I was keyframe animating stuff,

1202
00:56:01,629 --> 00:56:03,690
I was doing pretty much the same thing.

1203
00:56:03,731 --> 00:56:06,112
I mean, in the mind of animator, you open the reference

1204
00:56:06,152 --> 00:56:06,972
and you see what happens.

1205
00:56:07,473 --> 00:56:09,554
Now I'm not just going frame by frame,

1206
00:56:09,614 --> 00:56:11,095
adjusting to the background image.

1207
00:56:11,475 --> 00:56:13,396
I'm trying to figure out what exactly is happening.

1208
00:56:13,436 --> 00:56:14,256
Maybe there is a curve.

1209
00:56:14,296 --> 00:56:15,657
Maybe every time the leg is lifted,

1210
00:56:16,097 --> 00:56:20,120
there is an extra x rotation in local of the hips.

1211
00:56:20,400 --> 00:56:21,581
I'm going to do that and see this.

1212
00:56:22,441 --> 00:56:23,161
Hope that it works.

1213
00:56:24,502 --> 00:56:24,782
Thank you.

1214
00:56:25,122 --> 00:56:25,442
Thank you.

1215
00:56:27,923 --> 00:56:34,265
When you're doing your Nostradamus footfall determination and you're under control of

1216
00:56:34,325 --> 00:56:39,166
let's say the player who's constantly changing with the joystick which way they're going,

1217
00:56:40,587 --> 00:56:47,129
are you recalculating the footfalls like as you are moving your foot in the arc or do

1218
00:56:47,149 --> 00:56:51,770
you land that foot and then just do your calculation off of the next footfall and account for that?

1219
00:56:53,047 --> 00:56:58,889
So if the foot is in the air, my incoming stuff just

1220
00:56:58,929 --> 00:57:00,329
from the blend machine spit out.

1221
00:57:00,649 --> 00:57:03,350
It already has the idea of the position.

1222
00:57:03,510 --> 00:57:06,571
And I also have my Nostradamus nodes in there,

1223
00:57:06,611 --> 00:57:08,452
telling me I'm like 50% in the air.

1224
00:57:08,752 --> 00:57:10,793
Now, if I start moving to a different direction,

1225
00:57:11,973 --> 00:57:15,455
I have to modify my target vending position.

1226
00:57:15,956 --> 00:57:19,378
But again, if the direction I'm moving in

1227
00:57:19,478 --> 00:57:20,919
is controlled by the blend machine,

1228
00:57:21,219 --> 00:57:24,762
not by some artificial leaning, these new animations

1229
00:57:25,202 --> 00:57:27,904
will have this target position relative to them.

1230
00:57:28,484 --> 00:57:31,887
So as my animation changes, my target position

1231
00:57:32,007 --> 00:57:34,509
also is grabbed from the new animations

1232
00:57:34,549 --> 00:57:35,589
that I just walked into.

1233
00:57:36,010 --> 00:57:36,730
Am I making sense?

1234
00:57:36,910 --> 00:57:37,090
Yes.

1235
00:57:37,331 --> 00:57:37,551
OK.

1236
00:57:38,131 --> 00:57:38,291
OK.

1237
00:57:38,411 --> 00:57:38,672
Thank you.

1238
00:57:41,685 --> 00:57:50,031
Hi, I heard another talk from Ubisoft about motion matching.

1239
00:57:50,771 --> 00:57:52,833
Is that related to IK rig?

1240
00:57:53,773 --> 00:57:55,214
So these two texts are different.

1241
00:57:57,195 --> 00:57:58,536
I started working on this.

1242
00:57:59,599 --> 00:58:02,401
taking the input from motion fields, motion matching,

1243
00:58:02,481 --> 00:58:04,382
there was a rename, but it's the same thing.

1244
00:58:05,203 --> 00:58:08,745
And that's why I advertise Simonstock tomorrow so much.

1245
00:58:08,765 --> 00:58:10,207
I think everybody should do this.

1246
00:58:10,467 --> 00:58:14,550
But these two techs, they do different things.

1247
00:58:14,690 --> 00:58:18,353
So motion matching is all about the natural human motion

1248
00:58:18,813 --> 00:58:21,895
with very effective use of mocap time.

1249
00:58:22,768 --> 00:58:24,089
So you create the motion.

1250
00:58:24,649 --> 00:58:26,230
iQuery is about modification.

1251
00:58:26,430 --> 00:58:28,091
iQuery is not about gesture.

1252
00:58:28,591 --> 00:58:30,392
This is the animators, the mocap.

1253
00:58:30,792 --> 00:58:34,034
iQuery is about modification of walk into crouch,

1254
00:58:34,294 --> 00:58:36,535
simplest example, or carrying something, right?

1255
00:58:36,995 --> 00:58:39,377
So these things, they sort of work one after another,

1256
00:58:39,397 --> 00:58:44,059
and they contemplate, they add up.

1257
00:58:45,920 --> 00:58:46,240
Thanks.

1258
00:58:46,881 --> 00:58:47,121
Thank you.

1259
00:58:48,804 --> 00:58:55,649
Your encoding of the foot animation looked like it was distance from hip to ankle with the angle of the knee or something like that.

1260
00:58:55,749 --> 00:59:02,655
I was curious if you ran into an animation where, let's say it's like a Dick Van Dyke jumping up in the air and clicking his heels together type animation,

1261
00:59:02,675 --> 00:59:04,776
where the distance between the heels was critical.

1262
00:59:05,515 --> 00:59:08,318
Does that require you to modify your animation rig

1263
00:59:08,338 --> 00:59:10,900
so you now have an encoding of the distance between the heels?

1264
00:59:11,401 --> 00:59:13,883
And have you run into cases where that happens a lot

1265
00:59:13,923 --> 00:59:15,904
based on different content going into the game?

1266
00:59:16,625 --> 00:59:18,707
And is that important to your pipeline,

1267
00:59:18,727 --> 00:59:21,129
being able to kind of change the definition on the fly?

1268
00:59:21,149 --> 00:59:23,791
Or is this very specific to, like, basic locomotion?

1269
00:59:24,192 --> 00:59:24,932
So any type...

1270
00:59:26,714 --> 00:59:29,336
I will try to turn this into a bigger question,

1271
00:59:29,376 --> 00:59:30,777
and you let me know if I got it right.

1272
00:59:31,318 --> 00:59:32,439
Any time our character...

1273
00:59:33,710 --> 00:59:35,672
has self-collision of any sort,

1274
00:59:36,073 --> 00:59:38,034
or a collision with a prop of any sort,

1275
00:59:38,875 --> 00:59:41,798
how do we compensate for it in this system, right?

1276
00:59:42,138 --> 00:59:43,219
Yes, that's good.

1277
00:59:43,239 --> 00:59:44,120
So first of all, of course,

1278
00:59:44,180 --> 00:59:46,622
we have the physical representation of the character.

1279
00:59:46,642 --> 00:59:48,124
I mean, we have the full-body AK,

1280
00:59:48,144 --> 00:59:49,885
but we still keep our ragdoll and stuff.

1281
00:59:51,087 --> 00:59:51,667
We need this.

1282
00:59:52,728 --> 00:59:54,109
What I really like,

1283
00:59:54,450 --> 00:59:56,892
and what I didn't have the time to do at the moment,

1284
00:59:56,952 --> 00:59:58,133
but what I really wanna do,

1285
00:59:58,874 --> 01:00:00,035
is if we mo-cap the guy,

1286
01:00:01,527 --> 01:00:05,251
Going over a box, for example, an example of the prop interaction, right?

1287
01:00:06,112 --> 01:00:11,780
What I do is, in this mocap file, I place the actual box and I detect where there was

1288
01:00:11,800 --> 01:00:12,460
a collision.

1289
01:00:14,109 --> 01:00:18,794
Now, if the box is scaled, my animation knows that here's the place where I collide,

1290
01:00:19,635 --> 01:00:24,860
but this place is inside something I can find the new placement for the leg.

1291
01:00:25,420 --> 01:00:28,323
Basically, if the guy was scaled, but the box remained the same,

1292
01:00:28,804 --> 01:00:31,587
if I know where it's going to happen, I can try to get it out.

1293
01:00:31,927 --> 01:00:34,590
It's not going to work out of the box instantly.

1294
01:00:35,370 --> 01:00:36,992
When the character self-collides...

1295
01:00:38,556 --> 01:00:42,658
If I scale him just uniformly, it's going to be the same, you understand.

1296
01:00:42,859 --> 01:00:49,123
But if I do the proportion scale, I of course need to be smart about what's happening.

1297
01:00:49,203 --> 01:00:53,266
I need to make sure that I don't let him cross the new bounding volume.

1298
01:00:53,666 --> 01:00:58,410
So yes, there's physics in it, but as I was talking about the soft collisions and hard collisions,

1299
01:00:58,910 --> 01:01:01,432
I also like to slow down before I hit.

1300
01:01:01,912 --> 01:01:02,873
So I'm actually...

1301
01:01:04,208 --> 01:01:05,369
I need to keep this in mind.

1302
01:01:05,810 --> 01:01:08,153
I don't have this feature fully developed,

1303
01:01:08,213 --> 01:01:09,595
so I'm talking from the top of my head.

1304
01:01:10,096 --> 01:01:12,959
But I hope this idea makes sense.

1305
01:01:13,961 --> 01:01:14,141
Thanks.

1306
01:01:14,622 --> 01:01:14,922
Thank you.

1307
01:01:16,083 --> 01:01:16,524
Is that all?

1308
01:01:18,186 --> 01:01:18,467
All right.

1309
01:01:18,987 --> 01:01:19,708
Thank you so much.

1310
01:01:20,910 --> 01:01:21,370
Have a good BBC.

