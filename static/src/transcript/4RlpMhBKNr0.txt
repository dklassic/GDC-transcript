I'm Matt Thorson, I'm an indie game developer.
If you have heard of me, it's probably because of this game, Towerfall.
Towerfall is a local multiplayer game, but we're working on a single player game now, and that's what I'm here to talk about.
It's called Celeste.
I'm just going to show the trailer for it, just because the game's not out yet, we're still working on it.
So I just wanted to sort of introduce it.
Woo!
Whoa!
Ah!
Ah!
Wah!
Ah!
Wha!
Ah!
Wah!
Ah!
Ah!
Ah!
Wah!
Wah!
Ah!
Ah!
Ah!
Wha!
Wah!
Ah!
Wah!
Ah!
Wah!
Wah!
Yeah, that's the last.
Thank you.
So it's like a hard platform about climbing a mountain.
It has like, I've made about 300 levels for it so far.
We're probably going to be around 400 before it's out.
So I just want to talk about some, like our process and some ideas that are like swirling around in my head.
as I make all those levels.
So this is how I like to visualize the game.
I basically think of it as a fractal story, or a story made up of smaller stories.
So at the game level, Celeste is about a girl climbing a mountain, and she has these personal problems, and she's kind of running away from them.
But by climbing the mountain, she ends up having to confront those problems.
And then, like most platformers, Celeste is split up into worlds.
We call those areas.
So each area is a smaller story within that story.
It has its own arc and pacing, and we want each one to feel distinct and unique.
And they all have aesthetic and mechanical themes running through them.
And then...
Yeah.
Yeah.
Yeah.
And then each area in turn is made up of levels.
And each level is like a really small, quick story.
And these are just like really simple things like I jump over a pit of spikes and dash upward onto like an overhang and climb up to safety, that kind of story.
And visualizing each piece as a story is basically acts as our anchor to like center all of our design decisions.
Yeah, it's really useful for that.
And in practice, it means we're constantly zooming in and out to these three perspectives to reevaluate our work.
So I'm just gonna start, jump right into levels and our approach to making the individual levels.
So Celeste is about traversing space.
So I just wanna introduce the basic mechanics of the game first.
So the most basic move you have besides jumping is climbing.
So you can climb the side of any solid block in the game.
and at least until your grip strength runs out.
Yeah, and your grip strength refills instantly as soon as you touch the ground.
You also have this air dash ability, which you can dash in eight directions, so cardinals or diagonals.
You can only use it once in the air, and just like your grip strength, it refills instantly when you touch the ground.
And then you have a wall jump.
The wall jump is powerful because it doesn't have a limited resource like those other moves.
You can do it as many times in the air as you want as long as you're next to a wall.
However, it's not like...
Like, it pushes you away from the wall quite a bit, so it's not like the Super Meat Boy wall jump, where you can just sort of climb up a single wall by wall jumping repeatedly.
If you want to climb up a single wall like that, you have to use your climb and use your grip strength.
So the moment-to-moment gameplay in Celeste is really inspired by real-life rock climbing.
And one dimension of rock climbing that I love is the idea of multiple approaches.
Because rock climbing uses your body and everyone's body is different, routes in rock climbing are usually designed loosely enough that they can be solved in a lot of different ways.
And sometimes those differences are really big and obvious.
Like if you have a really tall friend, who can just skip half a route.
But usually they're really small differences, like the way you decide to move your foot on a foothold to shift your center of gravity, or where you brace yourself against the wall with your hand.
And Celeste, like I said, is about traversing space, and vertical space is very important because you're climbing a mountain.
And our moveset overlaps in lots of different ways.
Like all those three moves I talked about give you vertical progress, but they use different resources and have different nuances and trade-offs.
So you can approach stuff in a lot of different ways.
And when I started designing levels, I didn't really realize how important this was.
So I would design something like this challenge with a very specific solution in mind, I think for this one, my solution was the center one.
But playtesters never did things the way I wanted them to, obviously.
And I just really started to learn the importance of this.
And a big part of playtesting now is finding these different solutions and enabling them.
But so in general, we want our levels to be permissive because this makes them feel like really dynamic and expressive for players.
But you have to draw the line somewhere, right?
Because if you can approach everything from any angle, you're not gonna challenge the player.
And it's really easy to keep, like after every play test, keep sanding off the corners of your levels.
until they're not so much levels as they are just like amorphous blobs of content.
And Celeste from a wider perspective is supposed to be a hard game, right?
It's about climbing a mountain.
It's supposed to be challenging.
So one thing that's been hard for me is making a hard game without it just turning into this rigid series of precise inputs the player has to do exactly as I tell them to, to still let the player be creative but not make the game easy.
So the way I found that balance was to go back to focusing on the story of the level, using the story as an anchor.
So for example, the story of this level is that the player has to climb up the side of this block, but as soon as they grab it, it starts shaking and falls.
So they have to do it quickly.
And then there's these spikes on the left that sort of, the two spikes poking out on the top left.
So if you jump too soon, those spikes kill you.
So there's the tension of you wanna jump, but you have to wait long enough to jump.
And then once you get on that ledge, you kind of have to pump yourself up for this difficult series of jumps to get to the end.
And so to show how that story kind of steered us, I just went back in version control.
This is the very first draft of that level.
And the pieces of that story are all there, except notably those spikes on the top left aren't there, because it took me some playtesting to realize that that story of climbing up that block wasn't interesting without that tension.
So here's the next revision where I added those spikes.
I also made these falling blocks more forgiving.
So making that left falling block taller means that you can get onto it with more dash angles.
And this makes it more permissive, multiple approaches.
Right?
So.
Clinging to the block, it was all right to make that block getting onto it easier, because how you get onto that block is not important to the story of the level.
Like, clinging onto the block and climbing it has to feel precarious, and that's why it's hovering over these spikes, but the story of the level is about climbing up the side of it and jumping off at the right time, right?
So making getting onto it more permissive lets us put the spotlight on the part of the level that actually, the story we're actually trying to tell.
And when the player thinks back to this level, we want them to remember that story, not some annoying jump at the start of the level.
And then playtesting this, another huge problem comes up where players just try to skip directly to the second block.
And it's actually possible to get to it and grab the side of it, but once you grab the side of a falling block, it falls, and you just have nowhere to go, and you die.
So of course, this shouldn't be possible because it skips that whole story we had set up for the level.
And it replaces it with just a really lame one, just like an annoyingly precise jump.
But it wasn't enough that it was already impossible.
It has to be obviously impossible.
Otherwise players just tunnel vision on it and keep going for a surprisingly long time and get really frustrated.
So the next revision, just pull these spikes up, this makes it so the player has to dash sooner, and they can't even get close to that block.
So they stop trying this after like one or two tries.
And playtesting has also been really important for this, for finding these routes that are impossible, but not obviously impossible, because those really negatively affect the player's experience in this kind of game.
And just for fun, here's all the revisions of the level from the very start.
Yeah, I do a lot of stuff.
I try putting spikes on that second falling block for a little bit, but it just ends up being annoying and restrictive.
I shave off ceiling tiles and add platforms and stuff.
But the important thing is that the story of the level never changed.
If I found that the story of this level just didn't fit in the area it was in or it was just a bad story, then I would just scrap the level or try to adapt the story into something else.
But the story is always the cornerstone of the design.
This is a screenshot from SGDQ, the last SGDQ marathon.
We did this four day prototype of Celeste in PICO-8 and they did a run of it at the last SGDQ.
It was like a two and a half minute run.
And the way speed runners play this game is really inspiring to us.
So it actually is possible to skip the intended path in that level.
It's just like really difficult.
And this is intentional, this is a pass we do on levels where we try to add these.
It's just really important that no one ever mistakes this for the intended path.
And like no person on their first time through the game is going to have the skills or understanding of the systems to do this.
So I just have like this mental list of different techniques that we never teach the player, and we never require them to use to beat the game normally, but we just like, they're fair game for skips like these.
Here's another one where the player has to do this like long dash jump that we never teach them how to do.
And they also have to know that when you go through this level transition, it refills your dash as though you had touched the ground.
And we never teach that either.
So only the best players are gonna figure this out.
And as far as multiple approaches in rock climbing goes, this is like when you go to the rock gym and there's that one person that's just super ripped and doing all the routes with just their arms.
And if someone wants to put the effort to get that good at our game, we want to reward them for it.
So using these techniques and a few others, you can break pretty much all of our levels.
And I kind of see this as a second story to the level.
As long as no one on their first playthrough of the game thinks this is the way to do it.
then coming back to a level later and just breaking it with sheer skill and determination is a really cool second layer to the level.
Excuse me.
Another thing I love about climbing is the idea, oh, that didn't work.
Okay, another thing I like, oh.
Sorry.
I'm missing a slide.
Okay, well another thing I love about the climbing is the idea of safety.
So, in a climbing route, you have to do a series of moves obviously to get to the top.
But between each move, you're hanging onto the wall in a different position.
And some of those positions are more safe than others.
And they're also more or less safe in different ways.
Like, for example, you could be using a lot of core strength to balance on a hold, or you could be using a lot of finger strength to grip a really shallow hold.
And this is something I think about a lot in Celeste.
So different positions in Celeste are safe in different ways.
So standing on solid ground is typically completely safe as long as you're not in imminent danger and it refills your dash and your grip.
Clinging to a wall is usually pretty safe, but you'll run out of grip strength eventually and fall off.
And then there's these crumbling and falling blocks where if you stand on them, you'll get your dash back and refill your grip, but obviously you have to move quickly before they disappear.
So using the idea of safety is probably the biggest way I control the pacing of levels in Celeste.
So a level with hard moves but safe holds between them feels very different from a level with a lot of easy moves but no safety between them.
And we can have different kinds of safety and we can give optional safety out of the way.
Like there's a lot of ways to use this idea to make levels more dynamic and varied and interesting.
And this level is an example of one where there's safe resting spots between every move, but the moves themselves are very difficult and the level's long, so it makes it a really slow, tense experience.
Whereas this level on the flip side is very short, but has like no safety in the middle.
Like these spikes, they're just poking out a little bit after you touch them, a short while after they poke out and then they stay out.
So area you've covered before becomes unsafe and you have to keep moving and the level ends up feeling like one fluid motion even though it's lots of moves.
And in this level, the player has to touch all these flashing switches to open the gate.
And these moving platforms, they have springs on them that bounce you up and refill your dash and your grip.
So there's like a lot of different kinds of safety in this level, and the player can use them in any order and mix and match them.
And also go for the switches in any order they want.
And here's one way to do it.
When I'm prototyping new game objects, I am really thinking about how they interact with these ideas of multiple approaches and safety.
So most of the levels in Celeste are very short.
We just want to avoid repetition.
There's a lot of single screen stages.
The game doesn't have any checkpoints really.
If you die, you just go back to the start of the level you just were in.
And players die a lot, obviously, it's a hard game.
And there'll be repeating stages a lot.
So we just don't want to take away player progress very often.
But thinking about length ties into the idea of safety because any time the player reaches a spot of complete safety, where they're just standing on solid ground with no danger, we have to question why we aren't just ending the level at that point.
And if we ever decide not to end the level, the reason is to raise the stakes.
The longer a level is, the higher the stakes are because you lose more progress when you die.
And high stakes really change the feel of a level and really amplify the difficulty of everything because of stress.
we just have to really make sure that long levels can support repetition, especially the start of them.
In general, levels get longer as the game goes on, but throughout the whole game, we have a few very long levels that we use carefully and sparingly, mostly for pacing at really intense story moments to make it more memorable.
Okay, I'm gonna talk a bit about our area design now.
It feels, arranging the areas in Celeste feels a lot like arranging a song, but I'm getting ahead of myself.
I'll talk about that in a bit.
Areas in Celeste are a lot like Metroid maps, so the rooms are all connected and seamless, so you can move from level to level.
There can be branching paths, there can be secret branches, you can go back to previous levels, that kind of thing.
The system is versatile enough that different areas can experiment with different structures.
This is our editor we use to click the levels together into our maps.
Just like with the levels, stories are anchored for these.
So we want every area to have a unique and interesting story arc.
And we want the experience of the player to match the emotional experience of the protagonist.
So that hopefully the whole game is always working together toward a singular purpose.
We're always looking for ways to offload our narrative onto our level design.
So for example, in this area, the player is helping an NPC clean out an abandoned resort.
But the guy you're helping is kinda messed up and he's not really appreciative or like.
and he's kind of trying to trap you in the resort as you're doing this.
And this highlighted part is like, you're on the home stretch and the levels are picking up in difficulty and your character's starting to get frustrated with this guy and getting frustrated that she's being roped into helping him.
And at the end of this part, there's a narrative beat where she snaps at him.
And our goal is to make that emotional transition happen on the player's side as much as possible to make them feel like, why am I going to all this trouble for this guy?
Like, he better give me something good for this.
And by the end of it, hopefully you're done with that guy's shit.
So I start an area with a vague structure in mind and a general sense of what has to happen based on zooming out and looking at its place in the bigger game story.
And I prototype unique game elements and interactions for that area and search for a concrete story arc for it.
But at this point, there's kind of a chicken and egg problem because we don't know the story of the area yet and we also don't know the story of the levels in the area.
that really make up what the area is, and we want the two to be in sync.
So I don't really have a solution for this, so I just kinda used it as an opportunity to experiment.
So I approached some areas by mapping out like the whole thing on paper first and then just trying to fill it in with actual levels.
And other areas I just like doodled in our level editor for like three days and then without really thinking about how they would connect and then tried to put them together.
And I also tried to draw on different inspirations for each area.
So like one area is kind of inspired by Undead Burg from Dark Souls or Brinstar from Super Metroid or the Bathhouse from Spirited Away.
But of course, whatever approach I took, it never matches up.
I always discover that the level drafts and the area drafts just are incompatible in some way.
And we just kind of have to match them together slowly and painstakingly.
For example, when I'm mapping on an area, I'll say, and here's 10 levels where I just have bouncy cloud levels that use this bouncy cloud mechanic.
But then when I go to make those levels, if I can't get 10 good levels that fit there out of bouncy clouds, then...
we have to rethink things.
Or maybe I'll get 20 levels out of Bouncy Clouds and I'm like, what do I do with these levels?
And we never really got anything right on the first try.
Everything changed, but the areas and the individual levels had to adapt.
Nothing came into this game fully formed.
And we throw out a lot of work.
Like just last month I threw out 20 levels from our latest area because they just didn't fit the mood.
So our approach kind of feels like brute force stubbornness here, I guess.
It doesn't sound clever, but we just keep like zooming in and out to these three different perspectives and just to see if what we're doing is connecting and just kind of doing our best to redo things until it connects at all three levels.
And we always end up with extra levels, so we added this hard mode where we can just put.
The difficulty's higher, so we typically make levels harder for this, but it's just a place to put cool mechanical ideas that don't fit into the story of the main game, so we can just fully explore the design space.
So when I'm arranging the areas, I'm really thinking about the story of each level and where it fits into the area's story.
And because our areas can be non-linear, we have to think about bottlenecks for narratives, like cut scenes, and also for teaching.
And it often feels like arranging a song because so much is about pacing and framing.
And you want to do something cool with the overall structure of the song, but you always have to be aware of whether your melody can support that structure.
So, an example.
The initial concept for this area.
was just a simple boss sequence where you're being chased by a dark version of yourself.
You go up the left side of this tower and back down the right side.
And I designed this really cool chase sequence, and these are actually some of my favorite levels in the game, but what surprised me here is how, as a story, when it was done, it just felt very flat.
So to make a satisfying story out of this chase, we had to add all of this framing around it.
And in the end, most of this area is just there for framing.
just to like foreshadow and ramp up to the chase and give it context and then properly cool down from it and move the narrative forward in a satisfying way.
So at the start, we have the slow exploration section.
It's very like easy and free form.
We want it to feel like dreamlike and mysterious.
And the challenge here to progress doesn't really involve mechanical skill.
It's about like perception and exploration.
Then there's this narrative beat, and these mysterious blocks change so that you can surf through them with your dash.
Now all the side paths open up, and you can do all these optional challenges.
We just wanted this to be really exhilarating, like you just realized you could fly in a dream.
And then the dream kind of morphs into a nightmare and we have that chase sequence that the whole area is based around.
And it climaxes with this long, brutal level on the right side.
And this is the first time in the game we have continuous time pressure like this, so it's very stressful and it's meant to be a panicked feeling.
And we're setting up the main conflict of the story here.
And then we have this cool down section with easier levels ending with a cut scene where the main character realizes she's dreaming and kind of resolves the chase for now.
It took me a long time to realize that this area shouldn't have any risk of death.
Like at one point, a couple weeks ago, I just went through and deleted all the spikes from these levels and they got way better.
Just to keep the player engaged after such a crazy challenge, we just had to dial down the difficulty way down to zero.
And then finally, your character wakes up, and this is just this really simple section where you run through a bunch of the same levels, but they're all subtly different, like none of the dream elements are there.
And this gives us space for some optional NPC dialogue, and also gives us a nice calm ending to this rollercoaster of an area.
So teaching is also really relevant to how we arrange the areas in Celeste.
This is a level late in the first area.
There's these blocks that move when you touch them, and the player has to figure out that they can grab the side of it, and ride it, and jump off at the last moment to boost across this gap.
This level illustrates our approach to teaching.
Obviously, if you just drop the player straight into this level, they would have no idea how to do this, and would never get past it.
But with Celeste, our goal is to teach implicitly with the level design as much as possible.
And the only text we use to teach is the text to tell you the controls at the very start of the game.
So the first way we do this is by priming the player.
This is the very first time you see one of those blocks, and if you just do the obvious thing and jump off of it, it flings you into these spikes and kills you.
So killing the player is the most obvious way to teach people in Celeste, because you lose so little when you die.
And death is also so jarring that it forces the player to confront what happened.
But we also just have a lot of levels before that point.
or before we require them to use it, where the momentum isn't an obstacle, but it's just relevant to navigating the space.
And they might not consciously be aware that it's happening, but it will be logged somewhere in their subconscious.
And then after all that stuff, the player reaches this level.
And here we're asking them to have a realization about the game system, right?
Like they have to become consciously aware of these momentum mechanics, and then they have to use it in a new way.
So when playtesters get here and figure this out without any additional help, they really love this level.
Because they had to think creatively and the game trusted them to solve it.
But most of our playtesters get stuck here.
And Celeste, like our goal with Celeste isn't like no player left behind, like it's a hard game and it's okay for people to get stuck.
Like, where you draw that line of how much you're expecting out of the player is, in the end, arbitrary.
But, I just, like, for the first area, I just didn't want everyone to get stuck here, pretty much.
Uh, and like, Celeste is a hard game, but I also want it to be easier than it looks.
So the solution I arrived at here was to add this left branch.
And if you go up the left branch, there's just these two levels.
The whole point of them is just to teach you very clearly the steps you need to beat that level.
And most players go through this, and then it pops them out right back where they started, and then they have that light bulb moment.
The second level here, where you have to do the sideways boost, that one literally locks, like that platform locks you in.
So there's no other move you can do than do the boost you have to do.
And one really important part of this solution is that it never gets in the way of the good players.
Like, the players who could solve it on their own can still do that.
It's completely invisible to them.
And ideally, players from a wide range of skills can play this game, and it'll teach them all how to play it silently, like without them noticing.
And through the course of the game, you learn a lot of things this way, right?
And at the end of the game, we have callbacks to all those things.
And hopefully, the player will look back and see how far they've come at that moment, because that's a powerful feeling.
Like, it's not unlike looking back from the top of a mountain you just climbed.
And yeah, that is my talk.
I think we probably have time for questions, so if you guys want to do that.
There's two mics.
Did you see I take her end talk?
I'm probably pronouncing his name wrong.
No, I didn't.
It was really good.
It went through some of the techniques.
Cool.
Hey.
Hey.
great talk. Uh, I was wondering how much of the QA you kind of like rely on yourself and going back to levels again after you've had time to think about it and how much you give to like other people for testing. Yeah, like playtesting is really the center of like, it's so important to me. Like I can go back to levels and see them sort of with fresh eyes sometimes, but for the most part, like when just the act of sitting down and watching someone else play the game shifts something in my brain, I just see it in a new light, like instantly.
And then also obviously you just see them keep messing up on the same thing over and over.
On play testing, is all of your play testing in person or do you catch replays or analytics or death counts like with people that aren't actually in front of you?
Yeah, it's all in person so far.
It just seems so much, there's so much you miss from just analytics, I think.
When you're in person, you can see, my favorite way to play Tessalest is with a couch full of friends all, it has their undivided attention, and maybe they're trading off the controller, or maybe one of them's playing and they're talking, but you can just overhear them talking about it and going through the mental process of see the gears turning in their head.
Hey, it makes me think of your first game, Jumper Radix.
Like, it's been a long time you did it.
And it's still the same themes, the same level.
I mean, it seems very evolved.
But is it a theme you plan on?
changing? I mean, is it really something that counts for you? I have very poor vocabulary.
So sorry, but like...
What was the start of your question, sorry?
Is it a theme that really is important for you? Like, the same as Jumper, Helix.
Oh, it's Jumper.
Yeah, Jumper.
Oh, yeah. Jumper was like the first game I made when I was a kid, and it was pretty similar to this. So the question was...
is the theme important to me.
Yeah, that's it for you.
Yeah, I mean, I grew up playing hard platformers like Donkey Kong Country, Mario 3.
Those kind of games are really near and dear to me.
And yeah, I identify a lot with the genre.
I do see this game as kind of like going back to my roots, I guess, before I go off and try something new after Towerfall.
Hello, at some point you talked about making the long levels replayable at the beginning because if the player is going to die a lot of times, they will have to play a lot the first part.
How do you do that?
Do you have like a...
formula for that?
I'm always looking for more ways to do that.
One way is be aware of cycles.
Don't make the player wait at the start of the level, obviously.
Another thing is Celeste has collectibles.
There's these strawberries.
But in a lot of platformers, when you get a collectible, you have to beat the level as well to keep it.
That's not the case in Celeste.
So you can get permanent progress.
So a lot of the longer levels have a lot of collectibles, or more than normal, so that even though the level can be a bit of a grind, you're still making this permanent progress.
you know, so it's like a consolation prize.
And then also multiple approaches is very important for that too.
To have like the early parts of the level so that there's like an obvious way to do it, but then there's like a faster way that you can kind of discover after you've done the level 50 times.
Yeah.
Thank you.
Yeah.
Okay.
Thanks everyone.
