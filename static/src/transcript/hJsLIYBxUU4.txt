Thank you very much for coming.
So my name is David Enason, and I'm a senior project lead of player experience at CCP Games.
I've been with CCP for 11 years now, and I want to tell you about one of the most interesting challenges that I worked on in this time, an exploit named Ghost Training.
Now, EVE Online has a lot of legacy.
The game is actually turning 15 later this year.
So to make sure you have all the necessary context, I'm going to start with a crash course in internet spaceships.
So what is EVE Online?
Well, first of all, there's possibly as many answers to this question as there are EVE players.
EVE is a pretty complex game, and it has a multitude of different play styles.
It's also a very competitive game.
Now, if you ask me what EVE is, I'd say that at its core, EVE is a game of economics.
The way I see it, EVE's player-driven economy is what gives meaning to all player achievements in EVE, and I consider it to be the most important core system of the game.
Virtually every mechanism and system in the game, directly or indirectly, touches the economy in some way.
You could say that the rest of the game is essentially built on top of it, and whether they realize it or not, our players interact with the economy in every game session.
Now another core system which every EVE player interacts with in pretty much every session is the skill training system, EVE Online's unique real-time progression system.
Last but not least, EVE is a single-shard game.
Everyone is playing together on the same shared global universe.
Let's talk a little bit more about the economy.
So first off, most items in the game are manufactured and sold by the players themselves.
This includes the spaceships they fly, the weapons and mining lasers they equip to their ships, and the ammo that they shoot at pirates.
It even includes the space stations which they dock their ships at.
There's also no soulbound items in EVE.
Every item in EVE is tradable.
If you get tired of a shit, just sell it to the highest bidder.
Now, to facilitate trades, we have a dynamic player-driven market broker system.
It works sort of like a stock market, where players create buy orders and sell orders.
There's not just one market either.
Each space station in the game has its own unique market.
So in other words, there's no central auction house in EVE.
Instead, market hubs form organically based on the landscape of the universe.
Every day, there are around 1 million transactions made by players on the market.
So again, the market is a player-driven ecosystem, and it's not regulated by CCP in any way.
Since we don't set the price or a price range for any item, their value is determined by the players themselves and simple economics, supply and demand.
Now as an example, an in-game war can increase demand for certain spaceships and in turn make their prices skyrocket all over the universe.
The outcome of conflict is also sometimes even determined by attrition.
Whoever has the biggest pockets wins.
All in all, the market system is also deep enough that there are some EVE players who never undock their ships from stations.
All they do is sit in stations and play on the market.
Also another important thing of note is that EVE has permanent asset loss.
Any item in the game can be destroyed or stolen by other players.
If a player's spaceship is destroyed, it's gone forever.
And depending on a dice roll, items carried on the ship can either be destroyed or dropped as loot.
Dropped items can then be stolen by any player that's in the area.
And it's because of this that the number one rule, often quoted by EVE players, is to never fly what you cannot afford to lose.
Now on one hand, permanent asset loss keeps the economy healthy, since there's always new demand for new ships and items.
On the other hand, it makes PvP combat very consequential and makes it important to always have capital on hand to replace lost assets.
Now, EVE is primarily a PvP game, and at the end of the day, the most meaningful achievements in the game often come at the expense of another player.
A staple economy is in other words a critical component to keeping EVE balanced.
Let's talk about character progression.
So progression in EVE is based around training skills.
Skills unlock new functionality such as flying new ship classes and they also offer various bonuses such as increasing weapons damage or reducing broker fees on the market.
Now, skill training is performed passively and in real time.
Players don't even have to be logged into progress.
Training continues while you're logged out of the game.
Now, depending on the skill, they can take anywhere from a couple minutes to over a month of real-world time to train.
And players also have access to a training queue, which can be used to queue up and train skills in the preferred order.
The training queue looks like this.
This is actually one of my characters, and as you can see on the slide, I've got skills queued up for the next 122 days.
Some of these skills take a relatively short time to train, while other more advanced skills take longer.
As an example, the skill on the bottom, Capital Repair Systems, is going to take me 33 days to train.
From a lore standpoint, it works sort of like in the film The Matrix.
In order to learn, data is downloaded into the character's head.
It just tends to take quite a bit longer to learn Kung Fu than it took Neo.
I'm not sure exactly why that is, but my thought is that maybe there's just no fiber optic connections in Eve.
Now, Eve has no set character classes.
Players are free to progress in any direction they choose.
It's common for players to specialize in certain areas such as combat or industry, but there are also other players who choose to be jacks of all trades.
Access to high-end skills is gated by requiring prerequisite skills.
Here is an example.
In order to train this skill, which is a battleship skill, you must first train your character to fly cruisers and battlecruisers.
The speed of a character's training can also be influenced by in-game means.
There's in-game items for one, such as performance-enhancing implants, and there's also an attribute system.
Now, the biggest effect on a player's speed of progression is however decided by whether you play for free or pay for your subscription, which brings us to clone states.
Now, clone states are our version of open access slash free-to-play, which was launched in November 2016.
Free-to-play users are called alpha clones, and paid users are called omega clones.
Converting to paid status grants perks and lifts various restrictions.
As you can see on this slide, most of the benefits of a paid account concern skill training or character progression.
The perks include doubling the training speed, which significantly speeds up progression.
Alpha clones are also limited to a certain pool of skills, which you can think of as a level cap of sorts.
At the time of the Ghost training exploit, the pool of skills available to alpha users was approximately 5 million skill points, which is the equivalent of around 5 months of skill training at maximum speed.
Alpha users are also limited to a 24-hour long training queue.
So as you can imagine, doubling the speed of training and bypassing the skill restrictions are by far the most important drivers for free-to-play conversion.
So on the subject of free-to-play and paid access, Plex is worth a mention.
So PLEX, or Pilot's License Extension, is an in-game item representing Omega Time, which can be bought from CCP.
This item behaves exactly like any other item in the game.
It can be sold on the market, and it can also be destroyed or stolen by other players if you're not careful.
PLEX also enables Omega conversion with in-game cash, known as ISK or ISK.
With enough ISK, an alpha user can upgrade their account to Omega status by buying PLEX on the market from another player.
Now, since PLEX is bought for real-life money and traded on the in-game market, we can also establish an exchange rate of sorts between real-life money and ISK.
And since all items in the game are also tradable, we can in a roundabout way assign a real-world value to items in the game.
This is how we reach dollar values in headlines like this.
That being said, Plex is a one-way street, and real money trade is strictly prohibited in EVE.
So numbers like this are largely theoretical.
Now the last game system I'm going to cover is skill trading.
In early 2015, we added new items to the game called skill extractors and skill injectors.
These items facilitate trading of skill points.
So skill points and in turn character progression are in other words, an in-game commodity.
Skill extractors are bought from CCP for real-life money, and when a skill extractor is activated on a character, it consumes 500,000 skill points and is turned into a skill injector.
A skill injector, on the other hand, grants up to 500,000 skill points to a character when it's consumed.
Now, these two items essentially enable conversion of character progression to ISK and vice versa.
So as you can imagine, they've become an expensive and very heavily traded commodity.
They have also created very clear overlap between EVE Online's two core systems, the economy and character progression.
So what have you learned about EVE Online?
We've established that the economy is the central game system which ties everything together.
We've also established that EVE is primarily a PvP game where great wealth confers great advantage.
And we've established the free-to-play conversion is largely driven by enhanced character progression available to paying users.
Finally, wealth is somewhat interchangeable with progression in EVE due to the skill trading system.
Now let's talk about the ghost training exploit itself.
So what is the ghost training exploit?
In short, it was a bug which enabled a non-paying alpha user to obtain pretty much all of the benefits of a paid Omega user.
You could in other words go from this to this.
You could get double training speed with no skill or training queue restrictions, no Omeka subscription required.
Unfortunately, the repro steps were fairly simple as well, making this exploit highly susceptible to abuse.
Let's go over the repro steps.
To trigger the bug, you had to fulfill the following requirements.
Have an account with Omeka status active.
Set a long skill queue. The longer it is, the better.
Let the account's Omega subscription run out and lapse to alpha.
Wait for a few months without logging into the game.
And finally, upgrade to Omega status first before logging in.
The result of doing this is that after logging in at step 5, the user skill training progressed as if the account was in paid Omega status for the entire absence in step 4, no matter how long that absence was.
You could also potentially chain the exploit, moving straight back to step 1 after step 5.
Also keep in mind that since PLEX can be purchased for in-game money and used to activate Omega status, real money payment wasn't actually necessary to trigger either step 1 or step 5.
One thing of note that I want to highlight is that unlike most exploits we've dealt with, the Ghost Training exploit had a direct effect on both our game and on our business.
On one hand, it undermined the integrity of the game's economy.
By abusing the exploit and utilizing skill trading, a player or an organized group of players could get very, very rich.
On the other hand, it compromised our newly launched free-to-play model.
With knowledge of the bug, a player could effectively bypass the restrictions of a free account, removing much of the incentive for converting to paying status.
So what made all of this possible?
Well.
When we identified the root cause, it came down to two factors.
The first is how skill training is handled in the back end.
Skill training progress isn't calculated or recorded while the user is logged out of the game.
Instead, a calculation is made when logging into the game, and it's at this point that any progress made while offline is recorded to the DB.
Now I know this isn't a perfect analogy, but since the real state of an offline character's training isn't determined until after logging in, I like to call it shredding or skill training.
Now the other root cause of the exploit was a critical bug in our free-to-play implementation.
We basically wrote a new system which is independent of the EVE DB to manage clone state entitlements. You can think of these entitlements as expiry dates.
We call the system CIS, which stands for Customer Information System.
In short, and keep in mind that this is a little bit of a simplification, the bug can be boiled down to a communications issue between CIS and the EVE DB.
Let's look at a couple hypothetical scenarios.
In this first example, our user stopped playing in the third week of January.
And as you can see on the slide, their last login was about three days before running out of Omega subscription.
This user logged back into EVE in the final week of February while still in Alpha state and then upgraded to Omega the next day.
On this first login after the five-week absence, the EVE DP asked CIS for the user's Clone State entitlement.
And the answer given is, this account's Clone State is currently Alpha.
Now as far as the DP is concerned, the account's last known Clone State is Omega.
Since there's a discrepancy, the game checks for the Omega expiry date before calculating skill training between these two logins.
So the end result is basically that the character is credited with the remaining three days of Omega training time and 24 hours of Alpha training time.
In other words, everything worked as it should.
Things, however, did not go planned in this second example.
It's essentially identical to the first scenario, with one key difference.
After taking a five-week break, the user upgraded to Omega before logging into the game.
So on this first login after the break, the EVE DB asks CIS for the same clone state entitlement as before.
The answer given is that this account's clone state is currently Omega.
Now according to the EVE DB, the account's last known clone state is also Omega.
Now since there's no discrepancy...
The DP just assumes that the account was in Omega state for the whole time, so despite having lapsed to Alpha, the user is credited with five weeks of Omega skill training time.
The user has, in other words, ghost trained.
Do you think that Schrodinger's cat analogy is starting to make some sense now?
But the repro steps were fairly specific, and in order to pull off the exploit, you had to stay locked out of the game.
So who did we think was actually exploiting this bug?
Well, our main concern was about what EVE players call skill farms.
So what's a skill farm?
Well, as we covered before, skill injectors became a very valuable commodity after skill trading was introduced, and some clever players noticed an opportunity.
The idea was to create dedicated characters to train, extract and sell skill points for a profit.
And this turned out to be a great money-making idea.
Now most players who operate skill farms do so essentially for free by maintaining their Omega subscription with Plex.
And when properly set up, a skill farm can turn a really high profit even after calculating the cost of Plex.
There is one drawback though. Operating a skill farm is very time-consuming and labor-intensive.
They don't scale particularly well regarding time spent.
However, by exploiting the ghost training exploit, the operating cost in Plex could be greatly reduced.
And since the user didn't constantly have to extract and sell skill points to fund more Plex, the process also became less labor intensive.
It was basically a win-win situation.
Less time spent, more profit.
But skill farms weren't the only thing we were concerned about.
Let's look at the timeline.
So the bug was introduced on November 15th, 2016.
Now at this time, we did receive a handful of reports and support tickets and bug reports about the ghost training exploit.
But the repro steps were regrettably unknown until later.
In other words, we knew it was possible under certain unknown circumstances to train Omega skills as an alpha user.
But what we didn't know is that it could be triggered on purpose and so easily.
So the problem therefore didn't get the attention it deserved and flew under the radar.
Fast forward to May the following year.
A post is made on Reddit which exposes the easy-to-follow repro steps.
That's when we realized we had a major issue on our hands.
So this threat, which was posted on May the 12th, got a lot of attention.
And other threats popped up in the following days with various theories and speculation about who might have benefited from this exploit.
To be quite honest, our players were furious with us, and rightfully so.
It had, after all, taken us over six months to address this problem.
So now, on top of everything else, we were faced with a massive PR problem.
In retrospect, we really should never have let this happen.
But on the bright side, we've looked at this as a learning opportunity, and we've already addressed the internal processes which failed and allowed this to happen.
But back to the timeline.
So in early June, we deployed the first iteration of a fix.
First thing first, we ran a DP script as a stopgap measure.
This script parsed skill training for characters likely to be ghost training.
The idea was that since the setup to make the expert work takes roughly around a month, the script would put an end to any current abuse in progress, since a permanent fix could be deployed in that time.
Now while the intent was solid, the script actually ended up causing us more problems than it solved.
Now this is an important detail.
Players can normally only pause skill training while logged into the game.
And this is also an action which causes skill training progress to be recorded in the game DP.
The script, however, did not force a login event, meaning that the CIS system did not provide the game DP with a clone state update.
Now remember that any account potentially ghost training must be lapsed to alpha in CIS and must have been in omega state during the player's last play session.
That was basically the criteria we were targeting with the script.
Now, since these characters hadn't logged in yet, their Omega to Alpha lapse had not been communicated to the DB.
Do you see where this is going?
Let's look at the repro steps again.
These were the five steps.
Be in Omega state, set a long training queue, lapse to Alpha state, and stay logged out for a few months.
Lastly, make sure to upgrade to Omega before logging in to ensure the DB thinks the account was in Omega state during the absence in step four.
Now what the script essentially did was bypass step five.
Thanks to Schrodinger's skill training, any character who had reached the fourth step when we ran the script essentially goes strained without having to fulfill step five.
Now as you may imagine, this greatly increased the number of characters affected since the fifth step was by far the most obscure one.
The first four steps are actually not an uncommon pattern for a player who's just taking an extended break from the game.
Additionally, there was a bug in the script itself.
We paused skill training for far more characters than we intended.
Over 200,000 characters, actually.
Many of these characters were even active, and most certainly not ghost training.
So this in itself caused quite a bit of drama on top of the whole ghost training situation.
But now, shortly after we ran the script, the relevant stakeholders sat down to discuss the next steps.
Fixing the underlying bug had naturally already become our top priority, and we also immediately committed to addressing damage caused to the economy by heavy abuse of the exploit.
At this point in time, however, we had no concrete data available yet regarding the extent of the abuse.
What we did have were the results of a manual review by our player experience team of a few prominent skill farms.
This investigation validated that there were indeed some players who were greatly benefited from the exploit.
Now armed with this knowledge combined with the repro steps being fairly simple, it was easy for us to conclude that the potential for abuse was very high.
There was really never a question of if we'd address the damage, but how.
So we explored the options available to us.
The preferred option was naturally some form of automated solution such as a DP script.
Maybe we could automatically revert ghost trained skills to an untrained state.
This option was, however, ruled out after some debate.
For one, it was inherently risky.
We were, after all, talking about character progression, a system we prefer not to mess with at all if it can't be avoided.
It didn't help either that we were coming fresh off that other DB script, which went terribly wrong and had already anchored some legitimate players.
We were also concerned about the possible negative effect of removing prerequisite skills.
In the worst case scenario, doing so could potentially render the game practically unplayable.
Take for example a hypothetical user who ghost trained for three months.
Now imagine that this player returned to the game and played for another three months, legitimately training skills for that whole time.
If we automatically removed ghost trained skills from this player, it could and most likely would render many of the legitimately trained skills unusable.
We had some other concerns, but these were the main ones.
So long story short, we weighed our options and found out that an automated solution was not going to work, because it had far too much potential to cause problems.
In the end, I volunteered to lead a team which would attempt to address the worst damage manually.
Now, I've told this story a few times in private settings.
And at this point, I often get asked the question, why?
Why go through all that trouble?
There's already a commitment to fix the bug, so this won't happen again.
Why not just leave things as they are?
Now that's a valid question for sure, and I totally understand that manually addressing the damage seems like it could be a lot of effort with unproven payoff.
First and foremost, though, we felt responsible for cleaning up this mess that we ourselves had created.
Letting the exploit exist in our game for over six months was our mistake, and there was a strong collective feeling within the company of having let our players down. We intended to set things right.
Furthermore, we see ourselves not just as game developers, but caretakers of a universe. It may sound a little cheesy, but the EVE universe has taken on a life of its own, and we see it as our responsibility to protect the integrity of the game.
It also simply just felt like the right thing to do.
As caretakers of this universe, or space janitors if you will, we always make an effort to have as little direct influence on the political landscape of the game as possible.
It's our job to create the systems which drive conflict, not to interfere with what the players are doing.
We also see it as our duty to ensure a clean and level playing field for all of our players.
It's a big taboo for us to directly give a player or a group of players an advantage over their enemies.
The way we basically saw it is that we'd be overlooking a massive potential advantage given to a select number of players if we let things stay as they were, and that just didn't sit right with us.
But that's not to say we had our work cut out for us.
First thing first, we needed data on who exactly had benefited.
So one of CCP's expert data analysts went to work.
Sometime later, he emerged from his cave with a list in spreadsheet format of individuals who had benefited from the exploit.
Now, I scrubbed some player identifiable data and removed some other sensitive information, but this is what the list looked like.
Each row on this spreadsheet shows a single individual, the amount of skill points that goes trained.
and on how many different characters the training took place.
The list is also sorted so the most severe abuse is visible on the top of the list.
Now, as we had suspected, there were indeed people who had benefited massively.
The person at the top of the list, for example, had ghost trained on over 300 different characters and in total obtained more than 1.2 billion skill points.
That's the equivalent of about 50 years of skill training at the fastest possible speed for Omega users.
And as you can imagine, that's a whole lot of free money when it's converted to skill injectors and sold on the market.
So now we had the data we needed, and the numbers confirmed a massive amount of skill points had been ghost-trained.
Thankfully, there was a little bit of a silver lining.
These skill points were spread across tens of thousands of accounts, and the vast majority of those accounts hadn't ghost-trained enough skill points to be of much significance.
If you ask me, it's probably because many of the users who go strained did so because of the script, and they didn't have long training queues set before the lapse to alpha state.
That being said, there were over 100 people who had obtained absolutely massive benefit, and they had to be addressed.
Now let's backtrack a little bit.
While the data was being gathered, I sat down and created a standard procedure which our team would follow once we had the necessary data.
Now we've dealt with our share of exploits in the past, and I saw no need to reinvent the wheel.
The procedure was therefore modeled to be quite similar and consistent with our approach to serious game exploits in the past.
Now, I assumed that any player who'd greatly benefited from the exploit would most likely have abused it on purpose and the action plan was therefore largely geared towards punitive action.
Let's go over the procedure.
The first step was establishing intent.
Did the player intend to abuse the exploit, or did they benefit unintentionally?
In the case of intentional abuse, the next step was to find out what had happened to the Ghost Train skill points, following the money, if you will.
We basically foresaw two possible scenarios for these cases.
The skill points would either still be in the character's head, or they'd been extracted and likely already sold on the market for profit.
In case of unintentional benefit, no action was to be taken.
This was because I didn't expect any accidental abuse to be massive in scale.
Nevertheless, I did instruct the team to keep an eye out for massive unintentional benefit, just on the off chance that it was there.
If they came across any such cases, they were to note them down and discuss them with the rest of the team.
Finally, the importance of context was stressed regarding the level of punitive action taken.
Things such as attempts to hide the abuse or hide the trail of laundered benefits were to be considered. The intent behind this was to be a bit more lenient towards those who perhaps didn't quite realize that they were breaking the rules. Furthermore, some leniency was also to be given to players who proactively turned themselves in.
Now the action plan itself was also broken down depending on what happened to the Ghost Train skill points.
We intended to issue a permanent ban to any Skillform account still in possession of the Ghost Train skill points.
The idea was that Skillform accounts had probably been created just to abuse this exploit anyway, and the damage could therefore be contained by closing these accounts down.
The player's main accounts, on the other hand, were to be suspended on a three-level scale, 14-day, 30-day, or permanent bans, depending on the player's history.
The permanent bans were reserved for those that were involved in prior exploit abuse.
Now, in case of skills having already been extracted and circulated on the market, the approach was to be pretty much the same, with the added caveat that ISK, or assets, should be confiscated to account for profit.
This confiscation was to be done from the players' main accounts.
We didn't actually have a concrete plan for players who had benefited unintentionally.
Again, I didn't really expect we would come across many or any accidental abusers near the top of the list, so we were just going to cross that bridge if we got to it.
I just didn't see a need to create a process in advance for non-existent cases.
So in summary, establishing intent was the first step of the manual review process and a primary theme of the investigation.
We intended to go through each individual on the list and take action according to what had happened to the proceeds.
Now that we had all the data we needed and the process, it was time for the team to start investigating.
I instructed the team to not take any action for the first few days.
The order of business was to only review and mark the users in the worksheet without any direct action taken just yet.
The idea was that these investigations would likely be complex and we might learn a lot along the way. So in interest of ensuring a consistent approach, I wanted the team to be well familiarized with any possible nuances before taking punitive action.
The thought was also that if for some reason we had to change our approach, it's much easier to do so before directly involving the player.
Now this turned out to be a very good call.
Now once we got started, the team held daily regroups for about half an hour each day. On the second day it became apparent that many of our assumptions had been completely wrong.
So contrary to our expectations, the majority of players didn't appear to have abused the exploit on purpose at all.
On one hand, we had underestimated how easy it was to accidentally fulfill the criteria for the exploit.
On the other hand, we had underestimated the effect of the skill queue passing script.
In hindsight, I'd estimate that around 80-90% of the people on our radar benefited unintentionally.
The team also noted that many of the top offenders weren't actually operating skill farms, another assumption which turned out to be wrong.
Now, our expectations had been shattered, but the fact remained that while these players had benefited unintentionally, the scale of the benefits was far too large for us to look the other way.
We, however, also knew that the standard procedure wasn't going to be fair.
It was way too focused on punitive action and banning.
So we went back to the drawing board.
To be quite honest with you, we were a bit lost at this point.
We thought we were getting into a fairly routine investigation, but that wasn't the case at all.
So we brainstormed.
In the end, we decided to shift our focus to confiscation of benefits instead of bans.
Bans were to be used only as a last resort in cases of clear and very serious abuse.
So we had our starting point. We knew what we wanted to do, but we didn't quite have the how nailed down yet.
We knew that chasing down and confiscating assets in every case would be extremely time consuming.
Far too time consuming to be realistic for a problem of this scale.
Communication was also a concern.
If we removed assets or money out of the blue, it was bound to cause player confusion and frustration, which could result in support tickets and increased load on the support team.
So being mindful of these concerns, we decided to proactively contact the beneficiaries of the exploit.
The idea was to give a transparent, clear and honest explanation of the situation and appeal to the players' cooperative side in order to set things right.
So what we did is send an email to the players on our list.
This email began by explaining what the Ghost Training exploit is.
It also clearly stated that while we were fairly certain it was done unintentionally, they had benefited to way too large a degree for us to ignore.
We also made it clear that we did not intend to issue any kind of ban or account suspension.
The message we sent also included the exact number of skill points costrained by the player and highlighted the ISK value of these skill points.
In other words, the potential value or potential profit which could be obtained by selling these skill points.
Overall, the tone of the message was apologetic, making it abundantly clear that we considered this primarily an issue of our own making, a mistake which we sincerely regretted but needed to set right.
Finally, we ended the email by offering a choice to the player on how to set things right.
Three different options were proposed. The first option was to hand over the sum of ISK already highlighted as the potential profit gained from the exploit. The player could also choose to hand over assets, any number of in-game items which represented the same value.
The last option was for players to manually extract the Ghost Train skill points with skill extractors provided by CCP.
This last option was mainly intended for players who hadn't extracted the skill points yet.
Now players were furthermore not limited to just one of these options.
They were able to mix and match at will.
And to establish confidence in our data, we gave a copy of the same data that we were using to calculate the potential profit to any player who asked for it.
So how did it go? In fact, it went really well.
Most of the players showed a great deal of understanding that the benefits of this exploit had to be removed.
The vast majority of the contacted players were quick to respond with their preferred option, cooperating with us throughout the whole process.
Now we certainly did speak to a handful of frustrated players, but there were far fewer encounters of this kind than we anticipated based on our past experiences.
We expected far more resistance than turned out to be the case.
Overall, this approach turned out to be a major success.
To put a number to this success, we looked at the results of our Customer Satisfaction Survey, or CSAT, which was sent to each contacted player.
Now the way we structure our CSET survey is a were you satisfied, yes or no question.
Now by the end of this process, we found that over 80% of players who answered the survey chose yes.
Now considering that these ratings weren't for traditional support tickets, but cases where we were removing money from the player, we found this percentage to be extremely high.
We also had a pretty decent response rate of 21%.
Now to put these percentages into context, our overall CSET score for 2017 was 91.16%.
It's a fair bit higher for sure, but again consider the difference between a support case and these ghost training communications.
So why did it work?
Well, I personally for the most part attribute the success to honest and transparent communication.
I believe that by making it clear from the get-go that this was a result of our own mistake and that we didn't intend to issue bans, we managed to break down the us-versus-them barrier and set a positive and cooperative tone to the conversation.
You could also say that within that initial communication, we managed to subvert the player's expectation.
There is somewhat of a perception of heavy-handedness within our playerbase, and after seeing the word exploit in the subject of an email from CCP, the initial expectation may have been that we take a shoot first and ask questions never approach.
That, of course, didn't turn out to be the case.
Now, I also believe that offering players the choice of how to proceed played a critical role in making this a success.
Being directly involved in the solution rather than being dictated to by the space police was something our customers genuinely appreciated.
We even had a few examples of players explicitly thanking us for being in touch, since they most certainly didn't want anything to do with an unfair advantage.
So again, this was overall a major success and we definitely made some serious mistakes.
maybe even a series of serious mistakes, but we managed to make the best of a bad situation.
And we made sure to learn from these mistakes and use these learnings to address problems on many fronts of our company.
Now let's backtrack a little bit and talk about potential profit.
So we talked a lot about the potential profit which goes to train skill points represented in ISK.
How did we determine and calculate this value?
The answer is skill trading.
Since skill points are extracted and sold on the market in increments of 500,000, skill trading enabled us to assign a monetary value to each such increment.
First, we looked at the in-game market value of a skill injector and subtracted the value of a skill extractor.
This difference represented the potential profit made from each 500,000 skill points goes trained by a player.
Now at the time of our investigation, Skill injectors cost 740 million ISK and skill extractors cost 350 million ISK, which is a difference of 390 million ISK.
And that is the ISK value we assign to each 500,000 skill point increment.
Now to put these numbers into context, it takes an Omeka user approximately 8 days to train 500,000 skill points at the maximum possible training rate.
So in one month, a character can at most train approximately 2 million skill points.
Now, Plex representing one month of Omega game time costs 19.99 US dollars.
At the time of the Ghost Training exploit, this amount of Plex was worth a little over 1.4 billion ISK on the game's market.
With these values, we can also assign a dollar value of 5.44 US dollars to 390 million ISK.
Again though, keep in mind that since ISK cannot actually be legally traded into real money, these numbers are largely theoretical.
It does make for a fun thought experiment though.
For example, remember the number one player on our sheet?
He goes train around 1.2 billion skill points with a potential profit value of about 960 billion ISK.
Using this conversion...
the skill points heco strain were worth about 13.4 thousand US dollars.
Now you may have noticed that there's a bit of a flaw in the options that we gave to our players.
If skill points can only be extracted in increments of 500,000, how did we treat skill points which exceeded 500,000 but didn't reach the next million?
Now that's a great question and here's a real example to illustrate.
This is another spreadsheet which we made in order to visualize ghost training done by a single individual.
This is actually the same spreadsheet we gave to players if they asked for a copy.
Now the player in this example, and this is a real example, ghost trained on 14 different characters.
And as you can see in column C, some of his characters didn't even cross the 500k threshold at all, while the other characters had varying amounts of excess.
Now, how did we deal with this?
The answer is simple.
We let them keep the excess.
It was a compromise which left us sweet in the deal a little bit as a token of our appreciation for the player's understanding and cooperation.
So in other words, this player in this example goes trained around 37.7 million skill points with a potential profit value of 29.25 billion ISK.
However, when we add up only skill points in increments of 500k, the total is 34.5 million skill points trained, and the potential profit goes down to 26.9 billion ISK.
So all in all, this particular player got to keep about 8% of the proceeds.
For other users, the excess generally accounted for between 5 and 10%.
Now we considered this to be an acceptable compromise, which also no doubt contributed to players walking away relatively satisfied.
Now to be consistent, we also extended this leniency to the ISK and ACID confiscation options, and this was all communicated in our initial correspondence to the player.
Now I want to show you some stats which sum up our actions during the investigation.
First off, we looked at a lot of users.
We investigated 6036 unique characters, which were operated by 119 different people.
We permanently banned 796 accounts operated by 23 different individuals.
In terms of in-game money, we removed a total value of just over 8 trillion ISK from the economy.
To put this value into context using the same calculation as before, A trillion ISK corresponds to just under 112 000 US dollars.
If left in the game, this amount of ISK would definitely have given a very significant advantage to the players involved. Now I also thought it would be interesting to look up some customer retention and revenue stats.
What I discovered is that seven months after the investigation concluded, 57.85% of the accounts with an active Omeka subscription during the investigation still had an active subscription.
I also looked at Omeka game time purchases.
In this same seven month time frame, the accounts we investigated made a total of 6,531 game time purchases.
Now some of these purchases were for multiple months.
In total, 7,456 months of Omega game time were bought by these users.
Now I unfortunately wasn't able to determine the currency used for each purchase, but these months represent a revenue of just under 140,000 US dollars or euros.
And this is after accounting for bulk purchase discounts.
Now keep in mind that while this isn't necessarily a large amount of number in the large scheme of things, this is revenue we would definitely have lost if we'd gone with a trick-or-happy and ban-heavy approach.
Also keep in mind that it's revenue from just 119 different people in a seven-month period, or just under 1200 US dollars per user.
It's pretty clear to us that the users in question have a very high customer lifetime value, which further justified the time spent on our investigation.
I also believe that this is yet another indicator of our approach, largely having been perceived positively by the players involved. Many of them are still playing after all.
But what did we learn from this experience that can help us in the future?
Now, I know it sounds like common sense, but the most important learning for us was just how important open and honest communication is to player satisfaction.
We were honest and we took responsibility for letting the exploit stay in the game for too long.
Our players appreciated this.
We also strongly highlighted the purpose of removing the benefits of the exploit, which was protecting the integrity of the game.
The players involved understood and agreed with this principle.
Our eyes were also open to just how important first impressions are.
Far more important than we realized before.
Now in the past we've been pretty reactionary when it comes to explaining the purpose and reasons for our actions.
This time around we made both the why and the how clear up front before taking any action. So basically rather than making this into one-sided rule enforcement situation.
We established a personal and human dialogue right off the bat, and this greatly increased the likelihood of a collaborative relationship.
I'm pretty confident that the player's perception would have been far worse had we shot first and asked questions later, or never.
Now, we also learned that directly involving the player in the solution can be great for customer satisfaction.
The player is much more likely to be invested in what's happening, and with increased buy-in by the player, the chance of a mutually understood and agreed solution is much higher.
Last but not least, and somewhat tying the rest of the points together, we validated just how important direct and human engagement with our customers is.
In fact, we got the idea of offering a choice to the player and letting them extract skill points on their own after talking to the player in the number one spot on our spreadsheet.
So before I continue the story, I want to show you a letter of appreciation which was sent to us by this player and a CSAT survey result from another player who goes train.
I'm not going to read them out loud, but I think they really underline how appreciative these players were that we engaged with them to this extent.
Now to make a long story short, the player in the number one spot contacted us proactively.
He basically came forward about having obtained benefits from this exploit.
Now remember when I said that we felt a bit lost before we found our final approach?
During this time, I was engaged in a conversation with this player.
He gave his side of the story, which showed that while he had benefited a lot, it had been unintentional.
I made it clear that he'd benefited to far too large a degree for us to ignore, but that I wanted to work with him to find as painless a solution as possible.
So I floated some ideas and he responded.
I floated more ideas and he responded again.
He even floated some ideas on his own.
Now after talking for a couple of days, we decided together to try the skill extraction method.
Now this individual expressed clear appreciation that we were willing to work with him and proposed various different solutions.
Based on our interactions with this guy, we got the idea to give everyone else a choice of the bat and making manual skill extractions as one of those choices.
So the point of the story is, engage with your players, even if the subject matter is inherently unpleasant.
If I hadn't done so, we probably would have settled for a much less customer-friendly approach.
Now, this is the final slide, and as a closing comment before we go to Q&A, I want to leave you with a few points on areas I think we as an industry can grow in.
I believe there's a lot of room for improving communication with our customers.
To achieve this, I recommend focusing on increased honesty and transparency.
Take responsibility for your missteps, such as bugs and exploits, and do so publicly.
Also put down that ban hammer whenever possible.
Let's also improve engagement by increasingly involving the customers in the things that we're doing.
Ask them for feedback on how they would like things to be done.
Present them with choices when you're deciding between a few predetermined options.
This may of course not always be possible, but it's worth keeping in mind.
Apply it when the situation allows for it.
Also, none of this necessarily has to be in a crisis or customer service setting either.
It could be a thing like letting players vote on a few different options for a balancing change.
Now, these were the main points that I wanted to get across today.
And I hope this talk gave you some ideas and inspired improvement in these areas for your organization.
Before we go to Q&A, I also want to encourage all of you to fill out the evaluation survey sent by GDC about this session.
And if you can't see it in your inbox, please check your spam folders.
So I'm now opening up the floor for questions.
There's a couple of microphones in the middle.
I think we have.
time for two or three questions if there are any.
Hi, thank you for the talk. Fascinating as so many stories from Yves are.
Thank you.
I am one of those people who constantly regret not having as much time as I'd like to play again.
But I'm just curious about the whole single shard, big interconnected economy thing.
What was the third party impact of all the money?
Because you talked about solutions directed at people who still had the money or taking away something from them.
Did anyone do anything really interesting with profits, like maybe influence the war or anything like that?
So, we didn't see... That's a really great question by the way, thank you.
So we didn't see anyone influence a war, but we did see quite a few cases where the player didn't have any of the ISK left yet, because they'd already spent it somewhere or tried to launder it.
and we actually went to pretty great lengths to try to track down the ISK.
In almost every case we were able to do that, but there were a couple cases where we just couldn't figure out where the benefits went.
So we ended up banning the players' main accounts, kind of in hopes that they'd negotiate with us and tell us what happened to get their accounts unbanned. In the end they actually didn't.
But I guess the silver lining is that none of the guys in the top 15 slots that I showed you guys before were these people.
These were players who benefited a little bit less, maybe around 30 billion ISK, which is a lot, but not as much as 960 billion.
Thank you. I think you were next.
Thank you very much for your talk. It was really interesting.
Thank you.
I had a question about, was there a call from the larger player community, the ones who didn't?
participate in the exploit for some type of compensation due to like just flustering the community or if they found out that you were kind of sweetening the deal where people who the exploit are saying, well, we should get something too. And how do you handle those kinds of situations?
Well, uh, I don't remember hearing anything like that. There were a lot of, um, there was a lot of unrest in the player base, especially on Reddit, where, uh, some of our most critical users are, are based. But, um, As far as I remember, I didn't see a single ticket or a social media post asking for some sort of compromise to other players.
For the most part, the people who got their deal sweetened a little bit, they were guys that, well, they had circumstances.
The skill points had already been extracted, the isk had been spent, so they actually had to meet us in the middle as well.
There was one guy who had deployed a Sigtetal, which is a huge space station, and he had to take it down in order to fund the amount of isk that we needed to take away.
So really no, the answer is no. I don't remember that happening, but it's food for thought.
I mean, I'm sure if we had messaged out more clearly that we were sweetening the deal, that players might have asked for that. This information was out there, but we didn't like post a news item saying that, hey, we're sweetening the deal for everyone.
But yeah, good question. Thank you. Thank you.
I was kind of wondering if you think you would have done like the same thing like an honest transparent Communication if the community would not have figured out the exploit in the first place like is it worth it to like admit the mistake?
To your community or if they didn't figure it out, or if they don't figure it out. Do you do something else?
Well my opinion. That's a great question by the way my opinion is I think we should be transparent because I think if players hear about the exploit from you, it's much better than the potential of them hearing about it from somewhere else. And in this case, the knowledge of the exploit was out in the open before we had made any sort of comment. And that was one of the reasons that players were so frustrated and upset with us. So I would say in these kinds of scenarios, if you know something went terribly wrong, own your mistake, go out there, tell people that it happened, and tell them that you're addressing it.
That way you can also control the messaging a little bit.
You're able to basically make it clear that you are going to take this seriously before the speculation on social media goes around like wildfire, that your company doesn't care about the game, et cetera.
Because I think all of us care.
It just might not always look like that.
And when someone's posted the thing that's blown up on social media, it's really hard to change that message.
So that's my recommendation.
Thank you.
I wish we had taken that approach to go straining.
Thank you.
Really good question.
Okay, I think we're actually right on time.
So thank you very much for attending the talk.
Really appreciate you guys coming.
If you have any further questions in the next few days, please don't hesitate to get in touch.
You can find me on LinkedIn.
Also, if you see me in the conference hall, feel free to poke me and we can have a chat about Eve or talk about this exploit.
Thank you very much for listening and being a great audience.
