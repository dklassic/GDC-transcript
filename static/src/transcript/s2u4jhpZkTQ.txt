How you guys doing?
Oh, come on, it's the first day of GDC.
You're not drunk yet.
All right.
Hi, my name is Greg Furch.
I'm honored to be here and talk about pre-production.
Like I said, I'm Greg Furch.
So, I've worked on a lot of games.
The talk that I'm going to give is really focused mainly on XCOM, Enemy Unknown, and XCOM 2.
and kind of how we approach pre-production for those.
So what is pre-production?
You know, this is a term that we all throw around.
But this is actually the definition of it.
And it doesn't say anything about games, right?
It's a movie term.
But while We have all the same things that a movie has.
You've gotta figure out your locations and your characters and your costumes and casting, all that stuff.
It doesn't have anything about it not being linear.
Doesn't have anything about technology.
All those things that really can kinda crush you.
Or interactivity.
So, something about pre-production that I've found, everybody I talk to, every AD I talk to, every studio I talk to, everybody does it different.
And there's a reason for that.
Every game is a little bit different.
The team that's working on the game is a little bit different.
And you've got to cater to those as you're making your game.
So when you read a postmortem about every game, every time you read one, how many times have you read postmortems where they say, the team was tired after coming off the last project?
They don't have the right people on the project early, because the people that are really, really good are closing out the project that is finishing.
Not having enough answers or time, right?
Not enough time, not enough money.
And then also not defining your requirements to exit pre-production and enter production.
And the idea that that's even a hard date is something that is a whole other talk, right?
Whether or not entering production is an actual date that you enter or if it's a staggered enter.
And I believe it's a staggered enter.
Like characters finish early in the pre-production pipeline.
Environments probably trail behind that a little bit.
UI can trail behind, just like they do when you're hitting RTM, it's the same kind of thing.
As you're getting closer, they're trailing disciplines, and the same thing applies for pre-production.
But that's a whole different talk.
So a lot of the mistakes I think that art directors make, especially new ones, and I know I've done this too, You know, they don't consider the presentation.
Like, where is the camera going to be for the game?
How is the player going to experience it?
Right, and this is something that I am super passionate about.
Like, I believe this is the key of art direction.
Overestimating pretty pictures.
I think a lot of people get into art direction, right?
And you're like, hey, that's a really pretty picture up there, isn't it?
It doesn't solve anything for me other than mood.
It doesn't really give me any information.
I can't hand it to a modeler and say make it because it's still a little too vague, right?
It doesn't abide by any of the presentation rules.
It's a great thing and it's got its place, absolutely.
But I think it's really easy to get enamored by mood paintings and not ask enough of questions and misuse your time in pre-production.
So to that end, concepts that pretend to provide answers.
I think everybody's seen these as well.
Like you'll do a picture of a building.
A concept artist will make a building, right?
And they're not thinking about what's the step height, what are the floor heights?
And every time they make a building, they make it different, right?
That's not answering any questions.
That's not helping you get forward.
That's not helping you build your pipelines.
It's not helping you establish rules.
And that's the stuff that you need to focus on in pre-production.
Also focusing on small self-contained items rather than looking at system work, right?
Like it's great to develop your character and depending what game you're making, we make games that are very systems-based.
So like when we look at our characters, you know, we have isolated ones and ones that are very heavily reliant on systems.
It's easy to look at them as an example of just hammering one character, getting this character perfect.
But by striving for the perfection, you're not thinking about all the other things that are gonna eventually affect it, right?
Avoiding difficult gameplay, you know, like not even thinking about gameplay is something else.
You know, like how is the gameplay going to actually change how the game is presented and therefore how my game is arted?
And then this is one recently that's kind of bugged me a little bit that I've heard about.
Getting pushed to have art bibles in pre-production.
You can't possibly do that.
Right, like somebody can argue with me about it, but I don't see how you do it.
You can't make an art bible until you're out of pre-production and entering production.
At the end of pre-production, then you can address this.
But trying to out of the gate figure out, you know, what your pipelines are and set limits is, I think, impossible.
So, now that you got a little bit of idea of where I'm going with this, Enemy Unknown.
So.
Back in 2007 at Firaxis, we had the opportunity to remake XCOM.
Everybody's ever heard of XCOM from 1994, right?
The really old one?
You know, by all accounts, arguably one of the best strategy games ever made, one of the best games ever made.
So there's absolutely no pressure, right?
So we had the opportunity to work on this title and pitch it as something that we wanted to do.
So in 2007, as we started this, we were in a really different place for the studio.
The team was pretty tired.
You know, we had been on probably one of our hardest games that we'd ever worked on, and we were coming off of that, and we were sliding into the finish on it sideways.
And so everybody was tired.
All the artists were kind of out of steam.
I had actually been, I'd known for probably about eight months that I was going to, X-Com was going to be mine.
So, while I was kind of helping out on the other project, I was stealing time and planning, right?
So, I would talk to the designer about half an hour a day and we'd kind of figure out what we wanted to do and just talk through what we thought X-Com would be.
That time was invaluable.
I can't say how good that was for me to get my head on straight and try to filter out all the white noise from everybody in the studio and everybody around me that may have hopefully tried to be helpful, made suggestions about what the game should look like or how it should be.
Because it was just us kind of talking, didn't really have a lot of that stress.
But when that got done, we had 10 artists and one designer.
We had no programmers.
Programmers were all on fire finishing the other game.
Everybody knows how that works, right?
So we had this opportunity to kind of look at pre-production from a different perspective.
We'd never gone into pre-production with just art and a designer, right?
But the important part of that, too, was like we had to make sure we got the right people on early.
So luckily a lot of the artists had finished and I was able to get my team together the way I wanted it, which ironically my team was actually the team I had, I was art director on Sid Meier's Railroads, where I actually built this team.
And so that same team now came with me, so it made it real easy for me to know who I wanted where, because I had two and a half years, three years of working with these same people.
But we also didn't have any defined requirements for how we were going to enter production either.
We had no idea where this was going to take us.
We had a block of time to work with.
And we weren't really sure how that was going to work out.
But on top of that, the biggest thing we had, we didn't have an engine.
We had no idea what we were gonna make this in.
We had a homebrew engine that was designed for making Civ games, right?
But we were talking about doing something very different.
And we also didn't have any contemporary games to compare to.
I mean, the game we were looking at was a game from 1994.
That's a pretty big jump.
And so those are two big issues that really had us confused about how we wanted to go at first.
So, our approach.
This is one of the earliest screenshots of us kind of figuring out pre-production.
We decided that we were going to actually make a gameplay simulation.
And so, the first thing I did was I went out and I made sure I had the right concept people.
Like, I actually went out and found a concept artist.
His work is littered through here, Pierre McGowan.
But, you know, he did an amazing job.
But the thing was we were trying to figure out, like, you couldn't just put anybody in this job.
The person that filled the concept role was the heart of your project, right?
So they have to be perfect for what they're doing.
You have to be more selective about the concept artist than anybody else on the team in that sense.
We wanted to simulate gameplay, right?
Like that was super important to us.
We didn't want this to turn into a sizzle reel.
We didn't want it to turn into a trailer.
And multiple times, there were people that suggested us going that route.
And so we really held our guns.
We wanted to fake the UI.
We wanted to make it feel like you were experiencing the game.
And so to that end, we jumped on to using 3D Studio Max.
For us, we were using 3D Studio Max.
Since we didn't have an engine, that was what we knew the most.
And we felt like that gave us the agility to move around and iterate quickly, figure out what didn't work fast, get rid of it, change the cameras, re-render.
It really removed any technology limitations we had.
And the whole idea was, what do we want it to be, and not how do we work within a box, right?
Other than the gameplay.
And then we questioned everything.
With an XCOM game, why is the camera here?
Is it because that's the best answer, or because that was the best answer in 1994?
And so we started questioning what was good, what was bad, deconstructing it.
There were a lot of really good decisions that we kept, a lot of decisions we thought we could improve on because technology had advanced so much in the 17-year gap, or whatever it was.
And then we set project goals.
And this is something that, you know, when I first did that, I wasn't so sure, right?
Project goals, eh.
They just seemed kinda contrived and weird.
And they weren't tangible things, typically when I've heard about these things.
And so for us, you know, we set out as a team, 10 artists sitting in a room, first day that they're in the room, right on the wall.
We wanted to get best in show at E3.
Not just strategy, we wanted to get best in show.
We wanted to surprise the publisher.
That was another one.
And then we wanted to get game of the year.
Again, not strategy game.
We wanted to go for, take a turn-based strategy game on consoles, sounds crazy, and get game of the year.
But these were the goals we set out with day one.
So getting to day one, talking about finishing that other project, right?
This is how a typical development cycle works, right?
You ship the game, and for every up, there's a down.
And that down is the problem.
That down kills you, because re-inflating a team is so much harder than just maintaining the team.
So again, you start the project, you finish it, everybody's completely exhausted, nobody's done laundry, you've got to repair all your relationship with your family, call your mom and dad.
I see your wife once in a while.
But so then you've got this bottom out where the project starts, and that's not how you want to start a project.
For us, this is where we want to be.
So again, I'm kind of loosely helping out on another project as we're doing this, and I'm thinking about how can I keep my guys from bottoming out?
I want them to day one be excited about what they're doing.
So I started planning for the team.
You know, again, I identified the key positions and the people that I needed.
I got the 10 guys that I needed to make this thing.
No more, no less.
These are the 10 guys I need.
I needed a concept artist.
I needed a modeler.
I needed a character artist.
I needed a couple animators.
I needed an effects guy, right?
Should have had a tech artist, but we didn't have one at the time.
But, so we went after those people that we needed.
We made sure I had them.
I collected concepts in that eight-month period, right?
I was constantly working.
I went and got an outsource budget.
Let me go start collecting concepts.
I actually hired our concept guy as a contractor.
before I could get a position approved for him in the studio.
So I was paying him to make concepts, and I was outsourcing to another guy just so I could get my feet on the ground before the team hit the ground.
I don't know if anybody's had that problem where your team just starts the day that you start, and it's like, hey, go make pre-production, right?
I'm betting a lot of people have had that, right?
Somebody, not just me, come on.
So I was consciously building my team, right, in this whole process.
One of the more controversial things I did was actually isolated my team in a room.
I booked a conference room.
I went out and got brand new computers for everybody.
They walked in, day one, everybody had a new computer with a concept, ready to go.
And that was super important.
It was a fresh start.
By isolating the guys in a room, there were so many reasons to do that from a management level, right?
Like, you know, I had 10 artists, I had no programmers.
I wanted these guys to believe that they can make anything.
I wanted to empower them.
It created a little bit of a mystique to the team because I kept everyone out.
Not only were they in that room together, no one saw what we were working on.
And it's crazy, and it wasn't me trying to be a jerk.
It was me, I needed to filter out the white noise, right?
I didn't want anybody, you know, critiquing a sectoid before I had figured out what a soldier looked like too and what the terrain looked like.
And I just didn't want that.
And then on top of it, I didn't want anybody also kind of hammering my team on it either when I'm not around.
And not that anybody do that.
It just happens in development.
Everybody wants to be part of it, so people start talking.
So we kind of filtered that out.
And then the biggest thing, though, was I used the rest of the studio as my litmus test for whether or not this game was going to be cool.
When they saw it, it was going to be the first time anybody had seen it.
And that was a huge role for us.
They played a significant part in the process.
And then the other thing about being in the room together was that it established this critique tone.
Like we had guys that were super extroverted and guys that were super introverted and they were sitting right next to each other.
And over a period of the four months that we worked on this, because day one to end was four months.
you watch the guys who were introverted just kind of start coming out of their shell, and they'd start talking about their work.
And the honesty in the discussion about what the work was, A, they all felt empowered to talk to each other about their work, because they were all in a room together, they couldn't avoid it.
But you also started to see the team chemistry change, that guys who were in individual offices before and would just hide in there.
were now unable to do that.
And so they were communicating back and forth in a way that was completely new.
You read all that stuff about in management books about level four communication, right?
Like honesty.
We truly achieved that.
Like these guys had no problem talking to each other about what was right and wrong.
And that was enormous when starting a project.
And so that feeds into achieving buy-in.
They all felt empowered, right?
Everybody could affect change.
And on top of that, I was trying to provide concepts that challenged their skills, challenged them to step to the next level.
And every time I did it, they met it and crushed it.
The achieving buy-in is the easy part.
The maintaining buy-in is the hard part, right?
And this is what gets hard about making games.
But even during pre-production, you had to find these little points to kind of buoy the team, keep them believing in what you're doing.
Because if any one guy in this process, as I've thought about this now.
you know, 10 years of looking back on it.
If any one guy in this group of people in that room doesn't believe in what I'm doing, it doesn't happen.
So this is the room, believe it or not.
And this is one of those kind of buoying moments.
We were actually, if you notice, there's old Xcom in the background.
the original game, and guys are learning about the game they're playing, because we're remaking, because again, a lot of these guys never played it, because they were too young.
And so we're learning about the old game while we're making the new game, and trying to make sure that was fresh in everybody's mind.
And you can see the designers in there.
He's standing there, you know, looking at what the guys are doing, talking to them about how the game works, which was a great experience.
That room got so hot, it was ridiculous.
There was no air conditioning and it was winter and all those computers and monitors, it was ridiculous.
So some of the questions that we had, you know, what was the theme of the game?
What's the setting of the game?
How do we, what are design goals?
How do those affect art?
You know, where is the camera?
What do we have to communicate?
Where is all that stuff gonna be?
What is important to the designer?
And then what are the visual opportunities?
Again, can we drop a camera down?
Can we create immersion points?
Can you even push those further?
Do they interrupt the gameplay?
How fast do they have to be?
We were able to change these things on the fly.
If the run cycle was too long, speed it up.
Because we're working in a platform that was very easy for us.
And then setting up our pipelines, working large to small.
What's your largest creature?
What's your smallest creature?
Make sure you include them, because they're your bookends.
And then looking at the terrain, looking at the buildings, working in, asking the right questions about what's important, what's gonna need to be solved, and attacking it from that perspective.
So our first answers.
This is the first concept from XCOM.
Again, we're trying to establish our mood.
We're trying to figure out what's the tone of this game.
Again, we wanted to use a lot of things that had a context to people.
But then we wanted to give them a twist.
And so you can see this farmhouse is recognizable to everyone, right?
Resonates with everybody.
But you've got these weird soldiers in the foreground and you've got this crazy orange and greenish light in the background coming out of one of the windows.
We wanted to have that unsettling kind of feel.
This was also, we did two of these and we moved on.
Right? And this is before I had the team.
We had two of them, moved on.
This is the little gray.
This is sectoid.
Everybody knows what one of these looks like, but redesigning one is actually kind of hard.
Because everybody does know what they look like.
So doing a new take on it was tough.
But this is our smallest character in the game.
And this is our largest.
This was the sectopod.
This is the early incarnation of it.
He's 30 feet tall, the sectoid is four.
And we had to get them both on the screen.
I remember us sliding them around at max.
Can you still play the game with the designer?
Can you still play the game from this perspective?
And from there, we had started attacking the presentation.
Like I was saying, where is the camera?
Can you play the game from here?
We looked at all these little vignettes and then started moving the camera around.
What happens when you go in buildings?
Does it get, does the camera push in?
Does it get more claustrophobic?
Can we pitch the camera a little differently?
This little study of nine drawings was huge for us.
And then we took that and we translated it.
Right? This is actually built to standards that we were going to model with, like we were trying to figure out what those were.
And then we sent it back into concept to, this is our farmhouse, hit it.
How does this work?
So, like I said about the little room we're in, this is the first day.
You can see the date on the wall.
My chicken scratch on there.
And these are our goals.
And I'll get to these goals in a minute.
But it was important that we identified all this stuff.
What are our immersion points?
What are the goals for each section of this little gameplay movie that we're gonna make?
And if you look at it, these are the storyboards, which actually relate pretty closely to the previous movie we made.
All the little red images are actually the immersion points.
These are the points where we thought we had visual opportunities to drop the camera down.
Where can we make a typically non-immersive game really immersive and enhance the game design rather than take it away?
So that leads us to the previous movie.
And this is what we made.
We definitely got a situation.
So I think one of the important things about that video is that we were really trying to capture kind of how you feel about your characters and that little like narrative story that happens in the game when you play it, when you play and all it's about your soldiers.
And so each time we do one of these things, that is our thrust.
It wasn't really the intention, but it kind of works out that way.
And there's something really satisfying about that.
And so.
That'll come up later, I'm gonna mention that in a bit.
But what we missed when we were planning this, so everything you just saw in that, all those goals on the board, we got really close to those, but a couple of things we missed.
And this is important too.
We didn't think about how the floor was gonna transition.
The only point in that movie that's utter magic, where we're not adhering to the rules, is when the floor transition happens, if you notice we faded to black.
We got to that and we were like, we don't know how we're gonna handle this, because it's a tech solution as well.
And it was just 10 artists in a room.
And so we took a note of that.
We knew we didn't have an answer for it, and we continued to move on.
We could have gotten bogged down there, we didn't.
But it was also important to have found that question then, and not find it out eight months later.
And so one of the other things we didn't really know how we were going to solve was the interior fog of war.
between buildings, inside of buildings, how do the rooms work, right?
Or exterior fog of war, we at the end, we just kind of like, we put fog of war in there, but we didn't, if you notice, it doesn't reveal.
Again, we knew we didn't have an answer for these.
We made notes of them, and the next thing we did was that drawing.
which is pretty close to how our building hiding works now, even in X2, it's pretty much the same thing.
But this was immediately, as soon as we finished that movie, concept went right in.
We know we have a problem here.
How do we wanna solve this?
And then we sent it over to the graphics programmers, this is what we wanna make.
And then Fog of War, we played around with some stuff.
At this point, it was actually a physical thing.
And that had some gameplay issues.
So we went to a more traditional Fog of War.
But again, we didn't want it to be black.
We wanted it to have color.
We didn't want the screen to get all the light being sucked out of it by the blackness of it.
And so we were trying to get a Fog of War that was complementary to the light environment.
And even though it didn't end up looking like this, this is kind of the final result ended up being more like that.
So back to our goals that we had on the wall, the things that we wrote down the very first day, everything up there we hit in blue.
The red thing we knew we probably couldn't do, but we were trying to figure out how we could maybe get multiple shadows.
And then effects and destructible interior and exterior, we had in the movie, but they weren't necessarily gameplay compliant.
We knew we still had to solve those.
But we did pretty good considering that was our initial list.
And so this came out of it as well.
Like I said, we needed to not just draw a picture of a farmhouse.
What were the step heights going to be?
What were the railings going to be?
What were the walls going to be?
What were the, how were the walls going to work on the grid?
You know, is there a grid?
You know, what is the wall height going to be?
Door heights?
Window openings?
All that.
And the funniest thing about this is that This document was made about 10 years ago and these metrics are pretty much the same metrics we use in XCOM 2 and have just been kind of enhanced a little bit more now.
But these are the same exact measurements for the most part.
So one of the other things that came out of the previs, if you notice I was probably more concerned.
with the presentation than necessarily the aesthetics.
I feel like we were kind of in the ballpark on the aesthetics, but my primary goal was what was the presentation.
And this was the concept of the soldiers when we rolled into that.
But again, once we made it, readability came into play.
And we were like, can you really read things?
Does it hold up in both cameras, right?
And so that set us down a row where we wanted to try to mess with the proportions.
And this is where the miniature thing really came in.
And the guy on the right is.
that we ended up shipping in the game for the soldiers, but we got much more broad, much more chunky.
And we did this for readability reason.
You know, we wanted to read in both cameras and trying to balance those two things out.
Another thing, you know, our first Potter reveal, the first time you see an alien was in the movie.
This is what shipped in the game.
We wanted to set up the missions.
This was a big thing for us.
We wanted to establish some tone before you went in and started blowing things up, right?
We had the dropship come in, in every mission, and guys exiting, and you got to feel for the flavor of the map.
This is the gameplay camera in the movie, and this is what we shipped with.
So we had established where all these cameras were going to be, and those pretty much stuck.
The significant cameras stuck.
And then some of the intangible results, the things that we ended up getting out of that movie that we really weren't planning on, a huge morale increase for the team.
And I'm not just talking about the 10 guys in that room.
And I'm not just talking about the XCOM team.
The whole studio, the morale increase in the studio was crazy.
We'd never put together anything like this.
You know, it was our art bible for a long time.
It was our constitution.
This was how we wanted the game to look.
Anytime anybody didn't know how something was supposed to look, we said, go look at the movie.
How's that supposed to work?
Go look at the movie.
And in fact, we would check the movie, be like, okay, this is how it's supposed to be, right?
And we'd double check it.
It ended up being a recruiting tool for us.
We went for so long without being announced that it was hard, but when we'd bring people in and say, this is the game we're making.
it was easy to then hire people.
And then it also ended up being an internal marketing tool, not just with us, but at the publisher, it ended up being what we pitched to get the game, to get the IP.
So, we made a prototype after that, and It was missing that soldier story stuff that I was talking about.
It was missing some of the immersion.
Didn't have the feel of that previs movie.
So again, we went back to what we could do fast.
What could we be agile about?
What could we move quickly on?
And we ended up making another Previs movie.
And this time, it's an engine.
Again, at this point, we're over.
We've got our style set.
We've got our characters worked out.
We understand our proportions.
We've got all these tools in the toolbox right now.
And so no more Macs.
We're using Unreal 3 at this point.
And so we made another movie.
Move out and keep your eyes open.
I got it.
Thanks for watching!
animators decided to have a little fun at the end there.
But so, one of the really interesting things about that, we, you know, we, at this point, we're really pushing it.
We're really pushing the boundaries.
Rush cams, death cams, pod reveals, how are those going to be?
And, you know, going into it, you know, if I was going to get 30% I would have been happy.
I think we ended up getting a little more than that.
And the reaction from the programming staff was great.
And they saw it, they were like, yeah, we can do a lot of this.
But a lot of that stuff did permeate into the game.
And it was really useful.
And I think brought back a little bit of immersion that we were trying to find.
Again, you see pod reveals, how they look, what the game looks like when you're shooting, the targeting cameras.
Again, more of the pod reveals and more of the gameplay.
So then that leads us to XCOM 2.
And this was a really different start for us.
A lot of different things happening in this game.
We turned the premise on its head.
It was no longer a defensive game.
Now it was an attacking game.
And that was a pretty big deal.
And you were now a resistance.
And it was 20 years in the future.
Oh, and by the way, you lost the last game, which was a bit of a twist.
The difference in a sequel, the theme and tone had changed completely.
The desire to push the visual mechanics proved out in the first game.
We really wanted to push those.
The engine needed to be converted.
We went to real-time lighting, went to physically-based rendering.
And the design changes were huge.
And again, when I try to make a previs, I'm trying to actually encapsulate some of those things that are the most difficult.
Fully procedural maps.
and new gameplay mechanics.
One of the things here too that's probably worth mentioning is like the procedural maps part of it.
I was working on that while the team was working on Enemy Within.
And in retrospect, I was probably, I got so wrapped up in that, that I lost a little bit of my footing on preparing for the team.
So, one of the things I'll probably do a little different.
But what we knew.
The team was largely intact again.
Our team has been together for 10, 12 years at this point, for the most part.
We understood the game we were making.
We didn't have to go, well, what is the contemporary equivalent?
The visual mechanics, you needed a pod reveal.
You needed whatever you needed.
You knew how the game was going to work, right?
And you understood the presentation.
If you had a new armor type, you knew you had a reveal for it.
All the communication pipelines remained the same.
And we really understood, now having made the first game, we dissected it and what we really needed to do to make a procedural version of it.
So the approach again, we went to simulated gameplay, an agile attempt again, this time we're in engine.
But unlike before, we're now in the midst of rebuilding the renderer and the material system.
That was interesting.
We also didn't isolate the team.
We didn't feel the need to.
We also didn't have everybody working on it altogether.
It kind of went through chunks.
So, it went through phases in it.
While we were developing the game and providing content for the rest of the team, we were busy making the previs in conjunction with that, which was quite a bit different and a bit harder.
And then all the assets that we made were game usable.
So, the visual goals.
We really wanted to improve the fidelity of the geometry, the animation, everything. We wanted to turn everything up.
There were points in Enemy Within that I wanted to make richer, and so we attacked those.
We wanted to improve the cameras, Overwatch, death cams, just the camera in general, the alien turn.
And then we also added new mechanics like melee.
Concealment mechanic was new.
How are we going to represent a mode where you were kind of invisible?
to the enemy, calling reinforcements with something new, making the environment reactive, like have it speak to you, have it react to your presence, again, your resistance force, and it's a futuristic world, and then skirting around things with waypoints.
And then we went to establish look and feel, and we needed to use the game engine as the renderer this time.
So this is the first time I think we've ever shown this.
This is the previous movie from XCOM 2.
Please report any sightings of these civilians to your nearest ambulance station.
Security scan in progress. Your cooperation is appreciated.
Turn around.
Affirmative.
To your nearest airport station. Greetings, please report any sightings.
They're down.
They're repositioning on us.
They got me locked down.
I'm alright.
Here goes nothing.
Moving.
Take him out!
Hostile neutralized.
I'm taking fire.
Movement ahead.
Hello, I've been advised.
They're bringing in reinforcements!
We've got something new down here.
Oh, I can't think!
Time to finish this.
Roger. He's going down.
Fear the Reaper.
Roger, tracking.
I've got eyes on the target.
Got it.
He's down.
No surrender.
Roger.
So a lot of the stuff in there ended up making its way into the game.
Melee, those beginnings of our concealment system, reinforcements, all sorts of stuff, which was great.
We definitely were able to establish the tone of the game.
we clearly improved the fidelity of the game.
We actually were able to take a look at our animation pipeline and streamline the number of animations we needed.
We were doing all that while we were building this.
You know, it also gave us a real chance to actually work with engineering on the lighting.
The lighting is clearly incomplete in this version, and it is something that we were able to work with them while we were doing it.
We improved some of the game cameras.
Again, we got our start on a building kit that would allow us to make procedural worlds.
And character customization was definitely a thought at this point that was really expanding.
So this is, on the left, that's the game, the previs movie.
And on the right is what the game ended up looking like.
And again, this is the Overwatch cameras.
This story to this is very interesting.
We had the Overwatch in the game, right?
And it was something that the lead engineer and I had talked a bit about, and we had talked a bit about as a team, making that a lot more immersive and feeling more tense.
And so he had been working on some stuff, and then at E3 we put in a double overwatch, right, where you would seamlessly move from shooting from one to the next.
If you had two characters in overwatch, the first one would fire, and then it would.
the camera would seamlessly interpolate over to the next.
And so we talked a little bit about it, we threw it in an E3 as this, we're gonna, this is how we want this to look like, we think we've got this gonna work.
And he walks in and he's like, oh yeah, by the way, that thing you wanted to do, yeah, like, it's on my machine if you wanna see it.
And it was better than anything we had fabricated, which was pretty amazing.
So, in closing, I think that, you know, as you're approaching pre-production.
You have to think about your team.
You have to cater your pre-production to your team.
Identify the right questions.
What are the things that are going to impact you that are going to give you answers, real answers, that you can use down the road?
Because if you avoid them, you're going to get them at some point anyway.
So you may as well try to front load them as much as possible.
Work large to small.
Questions without answers, like the floor transition, they were still really important questions.
Presentation is the key.
I think I've kind of talked a lot about that.
And pushing the boundaries, you know, challenge, convention.
Like, can we do this?
Making that first movie, like, it challenged everything in our studio.
Like, where was, what was our engine going to be?
You know, that opened up us actually moving to Unreal.
Because we put forth, this is what we want it to look like.
Now, how do we get there?
And again, tailor your pre-production for your game and your team.
Really think about how all those things come together to provide the pre-production you want to enter production.
And that's it.
So, anybody have any questions?
If you do ...
Thank you.
I hope that was helpful.
I've got like 10 years of this all collapsed down into 45 minutes.
If any of your questions, if you guys want to go to the mic, we have a few minutes.
I also have presents to get you guys to come out of hiding.
If you don't have XCOM, the first people asking questions can come pick a game.
So go ahead.
Hey, Greg.
Thanks so much for the awesome presentation. My question was actually about your interaction with design because settling in a lot of art stuff requires a lot of design stuff to be figured out. Did design go through a separate kind of pre-process that they did or did you guys kind of do it organically and how does that sort of chicken and egg thing work for you?
So especially with Enemy Unknown, that was organic.
Again, it was us and the lead designer, right?
So we would talk to him.
I talked to him for eight months leading up to us actually getting the team.
And as we were collecting stuff, it was this, we'd spend a half hour a day just like, well, what do we think we're gonna do here?
What about this situation?
What about that?
Do we want a sectoid?
If we do, how big is it?
Even those kind of questions.
And so as we got into the previs, he would come down and would be like, literally, can, mock it up, can we play from here?
You think we can play from here?
Yes or no?
Oh, it's too close, let's back the camera out.
Let's tilt it down.
And it was a much more organic situation.
And it worked great.
I mean, it was one of the best working situations I've ever had.
That sounds awesome, but did you guys ever end up in a situation after the pre-production where design had to change stuff and you had to reconsider?
That's where we went and made that Combat 2 movie, right?
So yeah, they were in a situation where they wanted to re-look at things and then we...
Our answer is usually to preview something.
And so we jumped in and worked again with him to kind of like, can we do this?
Can we not do that?
It's really, one of the things I've found is I think this is great working with the designers because we're able to visualize what they think is gonna be happening before it happens.
And so if it doesn't work when we try to visualize it, I think we can head off their questions too, which is why I try to always work in, you know, what are some of the more difficult melee and you want a concealment mode, you want reinforcements to come in, how do we approach that?
So that was, yeah, that's kind of how it worked.
But yeah, we do that frequently.
Cool, thank you.
Yeah.
Oh, good.
How's it going?
So you had mentioned that at the beginning of the pre-production you gave everybody like a new computer to get that kind of fresh start, that fresh feel.
So when you start to approach a sequel, I think you tend to basically take the code base from the first game and move it over, which of course brings along all of the frustrations from the code base from the original game over to the sequel.
How do you approach that situation and kind of still getting that kind of fresh start without bringing over the scars of the earlier development?
Uh, so I think I did that wrong one too.
You know, I didn't wipe, we didn't wipe the asset library, even though we were switching renders, because we wanted the LDs to have assets to work with.
And that was a bit messy and caused a lot of problems for us.
I think that clean start is something that I underestimated into, that I think I did really well on in one.
And then I, you know, I got to two, and I was knee-deep in procedural, and I wasn't.
I think I could have been better about that.
Like, you know, how do you separate that, clean out all the old stuff, get a fresh start?
Is it a, you know, making sure everybody has something to work with day one, you know, that's huge.
If you can keep guys from deflating, it is so much more work.
to pull guys up after they've kind of deflated than it is.
If you can kind of just catch them before they get that far and give them something to be excited about.
I mean, it's your job as an AD to kind of be a cheerleader to a degree, right?
So yeah, that was kind of how it worked.
Thank you.
Can I grab it?
Yeah, yeah, whatever you don't have, you guys.
Go ahead.
How critical do you think it is to have an art director at the very beginnings of pre-production?
It was really interesting to see your approach because you had no programmers.
The studio that I'm coming from, we typically are very design-oriented, so we try out a lot of experimentation with game design, and we actually don't have a whole lot of artists early on.
And so it's interesting to see how studios do it different ways, but if you are starting pre-production without an art director, is that an okay option in your opinion?
And do you have any experience with that?
Okay, so is it okay to start pre-production without an art director?
I guess it depends on the game and the team, how senior the team is and the understanding of the game you're making.
But I, you know, I...
I think having an art director is a really good idea.
You know, we're, we come, we come from a, yeah, I come from a design-driven studio as well, right?
Like, and for us, this was a departure.
This was the first time that any of us had worked this way in the studio.
But I think it's super important to have an art director early.
I mean, there's, it's finding those questions.
and deciding what those questions are and having the vision to kind of think about what is going to cost us money later.
It's easy to underestimate that, but I think it's absolutely crucial.
And again, I think it's having the right art director as well, you know?
Does that role sometimes present itself or is that very clearly defined on day one typically?
from your experience?
What do you mean?
Like, day one when you start pre-production, do you say, oh, okay, this person is the art director for this project?
Or is it typically you have several senior level people and one of them tends to move into that role?
Do we have an art director when we start?
Yeah.
Like we know, like I knew for eight months I was going to be the art director on XCOM.
Cool.
We try to have that worked out, because again, you've got to get your communication amongst your management team worked out, and then figuring out the leads.
I think you can delay leads for a little while.
There's points where I'm not necessarily in a rush.
If our team structure is really flat, and again, as long as we all work together, it's pretty level.
We can delay that sometimes.
I don't necessarily rush into that, but you can delay that sometimes.
I think it's really important to have key people in the right roles, and that includes our cracker.
Cool, thanks.
Hey, thanks for the talk.
If you had 20% of the pre-pro budget that you have, what would you cut?
What would you prioritize?
Well, if I had 20% of the pre-pro budget that I have, what would I cut?
That's a, man, that is a tough question.
It's like my producer's in the room or something.
Did he feed you that question?
He's in the back right there.
No.
Well, I guess I would cut the stuff that is more isolated.
Like, again, I'm always going to focus on what is the presentation, what's the gameplay change, like what are the things we need to solve.
So like, again, we kind of know character customization, I could cut that.
I could, you know, do we have to tell the little player vignette that kind of works its way through these things I make, that we make?
Maybe, you know, I mean, I...
I'm kind of looking at it now, we're just doing chunks, right?
Like, do I have to do the connective thing?
Maybe you could actually break it up into little mini-previs?
And that would probably work.
And that would probably cut your budget a bit.
What was your turnaround time on a mini-previs?
On those pre-visits, we do about four months total.
Start each one, even the one where we're building the game with it.
It takes about four months from start to finish with about 10 or 12 of us on the team.
We start with a 2D animatic generally in most cases, and then we run from there.
And we stick to it pretty well.
I mean, like that storyboard that was drawn on that whiteboard, that terrible chicken scratch.
That's the only art, by the way, in the presentation that was mine.
My team is very talented.
But that was one of those things where, yeah, we started the 2D storyboard and we run from there and it sticks pretty close generally.
And our timing is really close to our 2D storyboards too, even with Maki and UI.
So, yep.
Thanks.
Yeah, come get a game if you want.
Go ahead.
Hi. So when you're fleshing out pre-production, you have this general idea of the design of the game. How do you lock that down, maybe help prevent feature creep? And I know there's a lot of cool ideas that you come up with during the development process.
If you're trying to build a presentation for either the producers or an event like E3 and you have a cool idea, what kind of personal criteria do you have to say, okay, we will let this in, we will work on this so we can get it in for E3 because it's really cool or no, we shouldn't try and overwork ourselves and work backwards by trying to implement this?
So, how do I decide what to work into a presentation?
that? Not so much that but just preventing feature creep in a large scale sense.
Yeah, so when I start these, again, it's a dialogue with the designer and what do we want to do, what are his goals, and then I try to work each one of those into the previs that I'm working on.
And once we kind of set that, it's pretty well set.
Now, as we're in discovery, and the whole point of it being this agile process that we kind of pick our platform on, If it, as he sees things, we may give things, challenge things that make him rethink it, and vice versa, as he sees things, it might become more clear.
And so, you know, but that's usually established pretty early that the big ticket things we're gonna try to hit.
And at that point, it's a numbers game.
Like we wanna, we don't wanna like overextend too far into our pre-production budget.
So again, we try to contain these things in a certain amount of time.
So yeah, we try to establish those questions early with the designer.
And it usually doesn't creep much.
If anything, it streamlines it for him and us.
We can kind of figure out, catch the pitfalls early.
So if you end up seeing something that's like, oh, this would be a cool direction, but you're like, it's getting away from our core design concept, you go, it'd be cool, but we're not gonna do it because we're getting a little too far out.
We'll generally rethink it.
But it's a collaboration.
It's a conversation between us and design and tech, really.
And as long as we work together, it's a pretty open conversation.
Thank you.
This is a question for you more or less than pre-production.
So be free to say if you'd like me to talk to you afterwards.
But I'm going into the college aspect of learning all this stuff.
But my true passion relies in team and project management.
How can anyone like me get to a position like you are in today?
Learn a lot about the different systems like understand each discipline like I'm not an expert in anyone My background is really in environments and systems I'm an illustrator and a painter.
And so for me, I would consider myself actually more of an environment artist, but I've done all of it.
Enough to be dangerous at all of it, to be honest.
So get a broad understanding of it.
Like that's key, that's the first place.
You can understand what people are talking about when they're talking about the needs and how to ask the right questions.
And then, like was said in the previous talk, get the right...
leads, like get strong leads in the people that you're in, the places where you're weak.
You know, I like animation a lot, but my animation lead is fantastic.
And you know, we have a partnership where he works on stuff and I only hit him when something's wrong.
So.
Would you approach a job of, oh, I'm a team manager, da da da, or would you approach them or start indie and then work your way up with a portfolio?
probably start indie maybe, it depends.
We can talk afterwards.
Yeah.
Thank you very much.
One last question, right?
Okay.
I can catch up with me afterwards if anybody wants to talk.
So what was the challenges perceived with going from?
one engine to another specifically in reference to real time lighting and a PBR pipeline.
Oh man, it was a nightmare. I mean like it was just so different like and it's funny because it's like PBR seems so easy and it makes complete sense but the actual execution of it is a little finicky sometimes. And so that was a big big thing. The PBR part was hard and plus we were actually developing.
Like they were engineering it as I'm making, so it was hard to see what was right and what was wrong, or what was just being rendered wrong.
And then the, you know, deferred lighting, you know, going from baked lighting to deferred was, you know, it was essential for what we were trying to make, but there were definitely like, I think, things that you lose in that process, for sure.
But, I mean, I think that there's ways to work around all that stuff.
But, you know, building a rocket ship as you're flying to the moon is always hard.
But it was also good because we were also, I think, we're able to identify things as we were moving, you know, in a parallel road with the engineers.
So that was a plus.
Thank you.
No problem.
Thanks, everybody.
