The next session is still grooving, game dev life set to live music.
Please welcome Teddy, Daniel, and Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
Ben.
The textures are fucked.
What?
The textures are fucked.
These are not words you want to hear an hour before your game releases, but here we are, at Glitch City, Los Angeles, an indie co-op studio, 11pm, March 30th, 2016.
The night we release Hyper Light Drifter to 24,000 Kickstarter backers and the rest of the world.
And the textures, they're fucked.
My fellow designer and coder Bo Blythe has been making a build, the final version of the game for release.
But Bo has been trying to make a build all day.
The thing about developing a game for three years is that your game gets big.
Ours did. So big in fact that it got too fat for Game Maker, the otherwise great 2D game engine we used to make Hyper Light Drifter.
For reasons we don't understand, sometimes when we build the game, some sprites go missing.
They're gone.
Shrug.
So we just press the build button again, wait 20 minutes, and we pray.
This is a talk about prayer in game development.
Hi, I'm Teddy, toddy doof deef, professional gamesman from indie game Hyperlight Drifter, now a creative director at NotIndie Square Enix Montreal.
And I'm fucking with you, this is not a prayer talk.
But it is about game development.
The beginning and the end, the alpha and the omega of projects.
How and why we make them.
Next to me is Daniel Rosenfeld, C418, musician and composer of Minecraft.
On my other side, artist and developer Ben Swindon.
Tonight, as we try to make a build, Hyper Light is at an end.
Finishing games is the hardest part of making them.
Taking a project to completion sucks.
Making menus, beating bugs, exploring the edges of your design, and then wrapping it all up in a play-tested package.
If you're worried about those textures of ours, don't be.
While I was introducing myself, the next build that Bo built worked just before midnight.
We have our game, 1.0, but it's 3 a.m. now, and we still haven't clicked the magic button to release.
We're waiting for an inexplicably slow upload to finish to a partner's FTP, and we can't contractually launch on Steam until it's done.
So we're waiting.
Three years of game development, climaxing in an upload progress bar.
How did this happen?
We're three hours late, and our backers are tweeting.
Fuck.
Fuck, fuck, fuck.
Why is it so tight?
Well, it's always tight, isn't it?
When you make a schedule for your game, you fill that schedule with the things you want to put into it, because you will always want more things than you can have.
So you just accept that, set a release date, and work backwards.
A lot of things at the end are polish.
Polish is complicated. Yo, let's talk about it.
Polish is not always the right priority.
We love polish in games because it makes them shine.
Playtesting to refine clarity and maintain a flow state for players.
Fixing game-breaking bugs to avoid frustrating crashes.
Iterating on art so that it's at the peak of your craft that you're able to achieve.
Those are all good things, right?
And usually the sign of a game that was planned poorly is glaring lack of polish because they ran out of time.
It looks cheap or glitchy, or the online servers crash, or the difficulty curve has frustrating spikes, or you can get stuck.
Here are a list of games that some of those apply to.
Skyrim, Red Dead Redemption, Hyper Light Drifter.
Respectively, they were glitchy, glitchy, and you can get stuck.
But people kinda like those games.
Maybe not the last one as much.
Here's the truth, you pick your battles.
Just like you can't add every feature, you can't perfect all the polish.
And I'm a proponent of less polish, more love.
Not no polish!
Sloppy craft is bad craft.
Playtest, fix, refine, but keep an eye on what you're giving up with every little piece you polish.
Leave room for the love.
The love, as I call it, is the little things.
touches you want to add for years of production, but you've never had time.
And you won't, unless you take time. There came a moment in our final month when I had to choose between fixing a rare bug and finally building the Dash Challenge, a little mini-game inspired by Super Mario RPG that I'd wanted to put in our game since the beginning. So guess what? The bug stayed and I made the challenge, and it's the single piece of our game I hear the most about from fans.
Some hate it, some love it, some love to hate it, but they remember it, and no one has mentioned that bug.
Trade polish for love.
That's what your players will remember.
And what they remember is all that matters.
Shortly after this polish rant began, our 3 a.m. upload finished.
Our friends from Glitch City have stayed way past midnight in solidarity, silent support of our Panic production.
We call Casey Hunt, our wayward teammate, to get him on the phone for the big moment.
Everyone in the studio gathers around as Alex Preston, our leader, prepares to push publish.
Button pushed!
Everyone hugs and takes selfies.
Well, everyone hugs and I take selfies.
Bottles of booze appear like magic, and with an indescribable release of tension, we pop champagne.
Pop!
It comes bubbling out onto a poolside deck one month later.
The location changed, but the people remain the same.
I've told all my friends I'm leaving Los Angeles to go to Square Enix.
To say goodbye, I've invited them to a Palm Springs Airbnb to drink, talk, swim, and drink.
The sun shines through palm trees on pool chairs filled with game developers, the brilliant and loving people I've called friends for seven years.
I'm still.
Usually I'm an explorer, I'm thirsty for the new, new places, people, projects, and perspectives, but as a side effect, I have a hard time appreciating the present.
But in this champagne moment, I'm glad I'm doing just that.
New is good, but new is shallow.
Along this poolside, I'm surrounded by people I love, trust, and lean on.
It takes time to wade into the deep end of person.
Wink.
That was a sex joke.
Two years ago at GDC, I rejected the term work-life balance.
Still do.
Work and non-work life can both be restful, but I think that what we mean by this is that we need variety.
Making things and consuming action and inaction Like your life your games need this balance of depth and variety for hyper light We spent the first half of production on depth the core combat dashing slashing guns We wanted to nail that before building the drifters world But while the depth of hyper lights core mechanics is crucial That's not the heart of the game and I've come to distrust the term core mechanics. We're gonna talk about it This term has its uses. In building a game, it's important to understand your primary interactions.
Your core mechanics are the ones around which your variety will be based.
They're the source of depth.
But, in practice, I find it misleading.
Core mechanic implies that it's the core of your whole game, and often it's not.
We promised a preview of Hyper Light Drifter to our Kickstarter backers, and one year after the campaign, we were preparing to deliver that demo, but as we approached our release date for the preview, we realized...
we had deep core mechanics, but a shallow core.
We looked at our Kickstarter video, and then the demo we'd made, and we didn't see the connection.
Yes, our core mechanics are combat, but looking at that video, you see the true core of our game is the world.
The feeling of being that drifter, the empty spaces, haunting tones, and ruined, forgotten depths.
So we delayed the preview a week.
put our heads back down, and developed the variety of moments that would enrich our world and form our real core.
Alex spent time on environmental set pieces to enrich the world to give it the history it begged for, to suggest a purpose to all that killing and dashing.
And don't get me wrong, we designed the Drifter's combat with the character and the message in mind.
Powerful.
Fragile.
Medicated.
Core mechanics are important and should serve your larger theme, but don't confuse them for the true core of your experience.
They are the bedrock, the foundation on which you build the game, but people stand on a foundation and look up at the flying buttresses.
Only you will know the work you put into making that floor sturdy and level.
They'll remember the buttresses.
I'll remember this.
Poolside.
Champagne.
Friends.
Hours from my desk and my laptop.
Friends.
Gathered in sun-shielding cabana.
We're doodling Earthworm Jim from memory to test who best remembers the 90s.
FYI, Brendan Chung draws a brilliant Earthworm Jim.
The most important thing I've learned since releasing Hyper Light Drifter is not the value of rest, but the value of focus.
I'm all over the place, I'm always working on separate projects, I bet you are too.
You can do a lot of things. You can explore. You can get that variety.
But you can only get one thing at a time.
So when you work, work. When you rest, rest.
When you party, party.
I say it once a month and I forget it once a month.
Put your phone on do not disturb.
The people I respect most for their productivity have their phone mooned 24-7.
A few weeks after this Palm Springs doodling, I will move to Montreal and begin my next game.
I did not rest between Hyperlite and Square Enix.
Not enough. I know that.
It was a choice I consciously made and had to suffer the consequences of, but at least I did that with full knowledge of the sacrifice, and when I did rest, I rested.
As we get ready to sketch our various interpretations of Sonic the Hedgehog, I feel a sudden pang of regret and melancholy. I pull out my phone and send a text to a friend whom I haven't seen in months. There has been a rift between us that needs un-rifting.
We exchange a few emotional messages before I decide to resume my focus.
I'm here with these friends, in this place, one thing at a time, Teddy.
I tear myself away, put the phone down and look up at an unfamiliar sky, half-filled by a Canadian mountain.
Two months, countless goodbye tears, coffees and drinks have gone by.
I'm in Montreal, at a table in a lounge at Square Enix, looking out the window as I hunch over a Muji B6 notebook.
Gone are my nights of Hyper Light bug fixing and release marketing. I'm back at the beginning.
A blank page and the hunger to put a new game concept onto it. I've been sitting at this table a few hours a day just writing, working through thoughts, ideas, purpose. Did I say finishing things was the hardest part of making them? Fuck finishing, starting things is the hardest.
At the end, you're so good at making that game, it comes naturally.
I'm a professional Hyper Light drifter maker.
But at a new beginning, it's all new.
I'm a rookie again, no idea what I'm doing, and it's even worse because I know what it feels like to know what I'm doing.
To fill a blank page with the right project is to fill 100 pages with the wrong projects.
You splash your palette of life experiences, cultural references, and personal taste onto a canvas in different combinations, hoping they result in the image of a game idea that's new, that means something to you, that is worth putting out to the world, begging for the time and attention of thousands of people.
Speaking of thousands of people, I run into a lot of friends who say, hey, congratulations on Hyper Light Drifter.
I haven't gotten a chance to play it yet, I'm sorry.
And I always respond, don't worry about it.
There are so many games to play.
Like too many, really, we should all just stop making them.
And I'm joking, but there's a lot of art out there.
If you make a game, you release that game, and if the impossible dream happens and you're a success, you'll be providing more lifetime to the world than you took from it.
Hey, let's do math.
Nine of us made Hyper Light Drifter.
Let's average our time commitment at three years each and account for weekends off.
That's 19 years spent making Hyper Light Drifter.
If you use public data from Steam Spy, you'll learn that people have spent 387 years playing Hyper Light Drifter.
That's a 20 times multiplier.
That's a sick combo and that's eye opening to me.
When you dream of having a successful game, you're asking for so much responsibility.
As game developers, it's easy to disregard our own profession when we look at friends, siblings, heroes who spend their days fighting political injustice, healing the sick, or teaching children.
Because we don't save lives, but I think we provide life.
Not all of life, hey, don't spend your whole life playing games, and don't encourage others to, we all know that, but still, we play a part in filling the lives of the world.
So how do you want to fill them?
I can't tell you how to come up with ideas, I can't even tell myself, but I can tell you how I filter ideas.
As I sit in Square Enix, headphones on, caffeine in my blood, I evaluate ideas through two lenses.
Lens one.
What experience does this provide to the lives of others?
And do I want to be responsible for a 20x multiplier on time spent in that pursuit?
Your game doesn't have to be about love or faith or politics, it can be joyful, simple, fun.
But you choose what type of fun.
That's your impact on the world, your responsibility to your players.
Lens 2.
What will this express of my life, my tastes, and those of my teammates?
After all, each teammate puts a lot of life into a game.
One of our teammates moved to Montreal from France to work on the game.
Another from New York for a concept that I chose.
There's more to their lives than our daily game dev, but still, that's a responsibility to yourself and to your team.
My first new teammate is Renaud Bedard, joyful programmer from Fez and below.
He visits my window-side table, waves in the corner of my eye with a friendly greeting to let me know the latest iteration of our prototype is ready.
I tell him I'll be right there, and turn back to my view of the mountain.
Sun has hit the horizon now, and I stare into a blinding god ray.
The light sweeps mercifully out of my eyes, music pumps through high-mounted speakers, artificial fog fills the room, the fanfare of the Game Awards is in full effect.
Whoa.
Another Vonnegut time jump, cool.
Great GDC talk, Teddy.
Thanks, man.
Keep going, though.
Okay.
More months fly by, and I'm sitting in a Los Angeles theater for the Game Awards.
It's surreal, and I and my hyperlight buds sit in a row, nominated for two awards next to incredible games like Firewatch, Inside, and Uncharted 4.
As a trailer for another world premiere booms through the dark theater, I ponder awards.
Awards. Man, I've had a lot of time to think about award nominations because they didn't come at the end.
They didn't come as a climax to our years of production that came months later, when I'm trying to move on, and the rush is gone.
I'm at that new beginning, trying to move forward and avoid the shadow of our recent success.
People say, don't do it for the awards. Don't do it for the money. Don't do it for the praise.
Common wisdom says they're not fulfilling at all.
Mmm, bullshit? Like, they're fucking great.
Emotional, confusing, but great.
To a point, right?
I'll tell you what I tell myself.
That it's okay to dream about an award.
We're up for GDC and IGF awards for Hyperlite.
And if you are too, I hope we beat you.
I mean, like, I hope we all win, but we won't.
Does that make me a bad person for caring?
It's okay to thirst after a high Metacritic and a glowing review in Waypoint or Polygon, because the respective experts and your peers feels really good.
I won't overrule how you feel about your own game.
It won't.
The critiques you have about your own game and how you want to do things differently next time.
But...
The dream in the back of your head.
Behind the design and the love of the craft and the faith in the project, that feeling that, hey, I kind of, like, want a trophy? Maybe?
If you work your ass off and get lucky, because it takes both, it'll be exciting! The reward will reward!
But that's all it'll do, right? It'll be great.
And then it'll be over.
But that's true of a lot of things.
So don't make games for the awards, but it's okay to hope for them.
The night I find out about the nomination, I got congratulated by Square, and then I texted my family, and they texted congratulations, and then I went home, and I made dinner, and I panicked, because I felt like I should feel more than I was feeling.
In my spiral, I texted Alexander Bruce, creator of Antichamber and a truly caring human being.
He told me, awards are like a birthday.
People will celebrate it with you, but they can't really care like you do.
That doesn't invalidate your birthday, it just means you can't expect the world to feel it with you.
More lights in the theater!
Another Game Award is presented and accepted.
As the show goes to commercial, I wonder what Renault and the team are doing back at Square.
I'm reminded of the time I saw Renault.
Me, sitting in a chair like this one, looking up at a stage like the one in front of me.
In 2008, I attended my first GDC, and consequently my first IGF awards.
I'd been making games here and there for a couple years, and the parade of nominees on stage was inspiring.
The handsome Andy Schatz announced a winner, Fez, and there was Renault on stage with Phil to accept the award.
I remember so clearly thinking to myself, I want that. I want to make a game that's special like that, and feel what it must feel like.
Next year, I said.
GDC 2009. I'll be on that stage.
I spent the next eight IGF awards suffering from that ambitious goal.
Ambition is good, passion will push you forward and improve your work, but patience...
I'm working on that one, it's not my strong suit.
But finally, here I am at the Game Awards.
A different theater, a different prize, but that dream came true.
Well, we lost, but for the record, it actually does feel like an honor to be nominated, but also fuck dishonor too, fuck that great, great, great game that beat us.
But sitting among my friends in that theater, it feels like a flying buttress, a moment I'll remember.
I look up at the stage, and there I am.
Here I am, hi! Here we are, GDC 2007!
A week where the world of games comes together to talk, drink, dance, learn.
To celebrate what we do and strive to do it better.
This talk teeters on the edge of emotion and information.
Tangible takeaways are important because this show can feel like a blur, and it's hard to say what will stick with you in a week or in a year.
So let's backload some hot tips.
Seven tips from Teddy.
A rapid-fire, faster, nano-talk series.
If I can fit enough in, maybe Megan, Simon, Kelly, Akira, Jonathan, Ryan will let me do it again.
One, start Game Feel from day one. It's immediate, like music. It's emotional. Everything that moves, feels. Characters, menus, dialogue boxes.
If it doesn't feel good, you might throw out a good idea because of subconscious bias against bad Game Feel.
Two, retweet yourself. Don't feel guilty. There are a lot of tweets! And most of your followers missed it the first time, so get that evening bump on the morning tweet. It's cool.
3. Invest in a good pair of headphones or get your studio too.
If you care about 1080p and 60fps, why the fuck are you listening to the sound and music from laptop speakers or earbuds?
4. Catherine is the best persona game ever made. Don't at me, go play it.
5. This week at GDC, put your name tag on the right, not the left. The right is right.
Anyone you meet is looking at your right when they meet you, when they go to shake your right hand.
A name tag on the right is easier for your new friend to peek at, to memorize your name, without looking like they're staring at your chest.
Six, assume every woman you meet this week is a developer.
She's not with someone, she's with herself, and you can probably learn from her.
Seven, yeah, right, duh.
Seven, ask for help.
Now that I'm a creative director with a fancy name, I struggle with remembering that, yes, I'm responsible for leading a team, but no, I don't have to have all the answers.
It's easy to get siloed when you're under pressure in any role, but ask for help, ask for input.
Make it cooler together.
Okay, takeaways.
I'll tweet those next week.
I'm TeddyDeef on Twitter.
Daniel C418, Ben is Ben Swinton.
They're on my pinned tweet right now, it's great.
So here we are, we're at the end.
Nearly a year from those textures being fucked and that game being released.
Two years since I last stood on this stage.
Eleven years since I made my first video game.
And here I am, still making games.
Here we are, gathered, still groovin'.
When talking about game dev life over drinks with friends, I've often said that this work is like life in the fast lane.
You spend years moving over into that lane, and then you decide how long you gotta go fast.
how long you can before you drift right and exit, slow down, pull off somewhere, buy a house or something, and...
hey, I was wrong about that.
Yeah, I work more than I relax.
I'm intense about everything.
That's just my style right now, but that's no value judgment.
Take any line you like.
Drift back and forth from left to right.
It doesn't matter how fast you move at any given time.
It doesn't matter what lane you're in.
It matters what road you're on and the turns you take.
Because busting your ass for a vapid game with no point and no joy and no heart and no personal investment is way less productive than a slow and gradual pace on a game that you feel, that you feel you need to make.
That you hope will add to the world and if you're being paid by someone else to work on a game and you feel like It's not doing that do your best to make it better And remember that you can use this time to improve your craft for the time you'll find for you for a project you love It will come So this wasn't about prayer, but I have faith in games a young dumb powerful medium my window to the world my privilege and responsibility So here's my goodbye.
I promise to make games that strive for meaning, to inspire or heal, let players escape, or get players involved.
I'll suffer imposter syndrome, but not get buried by it, because when people give me a compliment, I'll fight the urge to refute it in my head to destroy the good they're giving me.
I promise to use my great privilege and luck to pull other people up.
I won't squander it, I'll wield it to fuck shit up, destroy it, and build it back up to make this industry a better, safer, more diverse, more mature one.
That's it.
Thank you.
