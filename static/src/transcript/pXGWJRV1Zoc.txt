Oh, it is on.
It is on.
Now it is.
Hi, guys.
Hi.
So my name is Dino Ignacio.
I'm the UI lead of the Dead Space franchise.
I worked on Dead Space 1, Dead Space 2, and Dead Space 3.
And I'm here to basically walk you through the evolution of the UI of the whole franchise from the beginning to the third chapter.
I've said this before, but I'll say it again.
A few housekeeping notes.
It's important for me to let you know if your cell phone is on, please put it in vibrate.
I don't mind you guys taking pictures of the slides, so keep your phones on if you want.
Just please put it on vibrate, because it's going to mess with video.
Another thing, please do your surveys when you get them via email.
It's very important for GDC to know exactly what you think of these talks.
If they suck, you'll never see these people again.
Like, if I'm horrible at this, all you have to do is say, this guy was horrible and I'll never be allowed in here again.
So please be sure to fill up those things.
And if you do like me, please let them know because I'd like to be back.
I really would.
Okay, another housekeeping note.
If you are here to see crafting success, you are in the wrong room.
It's happening right now at room 303, South Hall.
This is crafting destruction.
Crafting success is at the South Hall, room 303.
I'd really hate it if you guys are here to see castles and end up seeing carcasses.
And that's really not cool.
So please, if you may want to run over to the next hall, go ahead.
Okay.
This is the outline of what we're going to be talking about today.
We're going to start off with a very general.
We're going to talk about the core ideas of the franchise.
And we're going to talk about the aesthetic of the franchise.
And then we're going to drill into very specific parts of the UI.
We're going to talk about the rig.
and cut it up and explain why it is the way it is.
And we're going to talk about the front end.
And then we're going to break into this evolution of the look of UI from Dead Space 1 to 3.
And then we're going to close on the bench and sort of figure out what worked and what didn't work and how we got around some certain things about the bench.
And then we're going to end with Q&A.
Before I can talk about Dead Space UI, I should really relate it to the game as a whole.
Dead Space was conceived to be an immersive, story-driven science fiction experience.
From the very beginning, when I got hired on, our story producer Chuck Beaver, Ian Millam, our art director.
Ben Winant, our production designer, sort of had this edict.
They wanted the game to be as immersive as possible so it had to be grounded in reality despite the fact that it was science fiction.
This is something that they pushed towards the audio department, for the environment department, the lighting department, ultimately also the UI department.
We were all challenged to make the most immersive game we could make.
Here's a little backstory in Dead Space if you haven't played it yet.
Dead Space is set in a dystopia, a depleted future, where most of the game happens in a derelict ship called Ishimura.
Everyone's dead, and the vessel's plagued by space zombies.
And you are an engineer named Isaac Clarke, and your job is to fix the vessel.
On a side thing, you realize your girlfriend's there, and you try to save her.
So knowing the core and the backstory of the game, we decided the UI needed to fully support and integrate with the rest of the game.
So we designed Ishimura as a character.
The character of the ship was supposed to be this broken, unpredictable machine that you had to deal with.
And if the Ishimura was a character, the UI became its voice.
And the science fiction setting afforded us the license to use very diegetic...
approaches for the UI. So, before I go any deeper, I should really explain what diegetic is for some people who don't know what it is. So, diegetic means the element exists both for the character in the fiction and for the audience. So, imagine this, like you were watching that Star Trek movie by J.J. Abrams in the very beginning, you see Kirk steal that car from his father-in-law and he turns on the radio and as he turns it on you hear beastie boys blaring and that music belongs to Kirk.
as the character. But then the camera cuts to a long shot and now you're seeing the car go over the side of a cliff and now you can still hear the audio above everything else and now it's a soundtrack. And that's diegetic. The audio belonged to you as an audience member as much as it belonged to Kirk as a character in the story you were watching. And so Dead Space's UI is basically diegetic by design.
The sci-fi genre made it very possible for us to do this.
The basic idea was that we were able to wrap typical game conventions like loading screens and save points into believable elements in the world.
Here's some examples.
The doors that you saw in the game, for the player, was a means for him to get from one point to another.
And there was a hologram, because we're in the future and holograms are cool.
But for you, as a player, this is basically a streaming gate.
You were sitting there waiting for us to stream in the next part of the game while you're standing there and dealing with some necromorphs or whatever.
The tram system in Dead Space 1 is another thing.
On the fictional level, it was a map that you would walk up to and see what was uh where else you could go and then press of a button, the camera would zoom in past Isaac and you would zoom into the map and suddenly you were in the loading screen taking you to the next level and it would snap back out and suddenly you're in the next level and the map is now back on the wall. It was a very diegetic approach to a loading screen. We basically tricked you into thinking you were in a tram but really we were just taking you to the next level.
We had many games that had very diegetic sort of elements to them.
The iPoke machine in Dead Space 2 was one of my favorites.
In a fictional level, it was a means for Isaac to extract information from his brain.
But for you as a player, that laser and that needle was your reticle to get inside his eyeball.
And that monitor on the top is basically a means for you to judge if you're doing it right or wrong.
So it was very diegetic in such that it was both for him and for you.
This is an early comp of the taxi system that we created for Dead Space 3.
The skip was the machine that you would take from ship to ship in the flotilla.
And any typical game would have a travel map like this one, where you would see where you were, and you could figure out where you want to go by moving your cursor from place to place and clicking a button to go there.
We sort of took that idea and decided we should make this diegetic as well.
And so instead of making a full screen takeover, we made it part of your environment.
Now it belonged to Isaac.
You would see the map in the game as he would look at it on a dashboard of the taxi.
And as that's happening, we took it a step further, we gave it to your co-op partner as well.
As you were looking at it, your co-op partner could see exactly where you were taking him.
It was a great way to get both of you in an engaged space as we were loading the next thing.
And the interesting thing about this, that I should say, is that as you were flying there...
you weren't actually seeing yourself fly there.
This was just a little video and some very well-orchestrated lights that were flying by as you were going there.
Think of this like Star Tours.
You really were just sitting there.
The vehicle wasn't really moving.
We just had a really cool video showing in front of you as we were changing the whole level around you.
This was just a very elaborate loading screen.
So we were not just diegetic by design.
We were also diegetic by implementation.
A lot of people.
think that we use Scaleform for our game.
The interesting thing is that back in 2007, 2008, there was no such thing as Scaleform.
We wanted to make a UI that sort of sorted and lived in the world that our player, or rather our character, lived in.
But there were no tools to do this.
You've got to understand, back then, Flash was the main tool for making UI, and it probably still is now.
And the one limitation we had back then was that it If we had used Flash, had we used Scaleform, if it did exist, it would be very flat on screen.
And we didn't want to do that. We wanted to make sure that you had no safety glass between the character and you as a player in the game.
And so we wanted all our UI to be in-world and literally diegetic in implementation.
And so we were stubborn and we looked at our toolset and we realized, well, we have a really cool VFX system.
It can render fire and lights and explosions all in game.
And so we were like, aha, let's make a UI with particles.
That's the dumbest thing you could ever think of, but we did it.
We were like, well, let's add a font tool into the particle system.
And so we did.
Some very intelligent engineers cooked this up.
And we were able to put text in particles and make them float in world.
And so that's how we ended up doing our UI.
It's diegetic.
And it sorts in the world because it does sort in the world.
It glows.
And it creates light because it creates light, because they're particles.
And that's the big thing.
People thought all this time we were using scale form.
We don't know how to use scale form.
We tried.
It won't integrate with our system.
It's an awesome system.
I've looked at it, but our engine just didn't like it.
So we ended up keeping using this.
So even up till Dead Space 3, this is how we made our UI.
We made it with particles.
The next thing I want to talk about is the rule set.
So any good design has a really good rule set as a cornerstone.
One of our first rules was, since we were a third, person game, we had to make sure that our character was always in the same space.
This was important for us because it sort of defined where the UI could live.
If Isaac was always on the left side of the screen, we knew exactly where to put our UI and where to bias our UI for you to see it.
This is probably another talk.
for another time, but the third person sort of format allowed us to really make sure that you were focusing on story, the story of Isaac, rather than being pulled into you as a first person character having an experience.
It's another talk.
It's probably going to be Chuck's talk.
But anyway, the UI, like I was saying, was meant to be on the right space because Isaac was on the left.
Another rule we had was that all our UI was a meter and a half above the ground plane at all times.
Because it was important for us to make sure that you could see what you were dealing with.
We made the mistake of putting UI too high up or too low.
And in play tests, we realized nobody really looks there.
And we wanted to make sure that you could see everything that was interactable.
That doesn't mean we didn't have elements up here and down here.
But anything that was important was within a meter and a half above the ground.
Another thing to talk about is that Not all our UI was actually quite diegetic.
There were things like the options menu, or say, the pause menu, or the difficulty settings menu, that never really belonged to Isaac.
Those belong to you as a player.
So where did we put them?
Well, simple.
We decided to put it behind Isaac.
So anything that didn't belong to him, we elegantly placed behind him.
And so that it was the most transparent way of communicating that this belonged to you, but not him.
And it seemed to work because no one complained.
And the last thing, the last rule we have here is we had a very strict color language.
Just because we had the power of using any particle we want, we wanted to make sure we had a distinct color language.
The reason for this is that not everyone, as much as I hope they were, was as conscientious of UI design.
No one's going to be stopping and looking at everything.
with every detail in your UI.
They just really want to slam through the next thing to get to the action.
And so UI had to be very quick to look at.
And so we made it very clear by color language.
Blue and white was interactive.
Red was locked, or not interactive right now, but will be later on.
And orange amber basically meant this is just scenic art.
You don't have to deal with this thing.
It's just there to make the room look pretty.
Now let's go into the look of the game.
So as much as we were a futuristic game, we were a broken future, a depleted future.
This was not Star Trek.
You are in a derelict mining ship, and the UI needed to feel unpredictable and broken.
That, on a side note, is a very hard line to stand on because it's very easy for people to think that, you know, you just didn't do your job well.
To make something look broken but not low quality is a hard bar to sit on.
The look was inspired by a lot of flickering fluorescent lights and dental lamps, static you see on TV and scan lines, which ultimately should not even exist in a future world, if you think about it.
But we believed in the feeling that these things gave you, because A, it elicited the feeling of sci-fi.
It also elicited a feeling of horror, and it gave you a feeling of uncertainty.
And so we borrowed a lot of these skeuomorphs.
I should stop here and talk about skeuomorphs if some of you guys are not familiar with the concept.
I know that not all of you guys are probably like designers, maybe some of you are UI designers.
Maybe some of you guys are fans of the project.
Skeuomorphs should not be confused with necromorphs.
Those are totally different things.
So a skeuomorph is basically a derivative object that retains ornamental design cues to a structure that was necessary in the original.
So let me explain that.
So for example, back in or before World War I.
uh... cars were made were made of wood they were made of wood because wood was uh... or rather metal was more expensive But then World War I happened and suddenly the production of metal for war made metal cheaper.
And so wood was then used as an ornament to show luxury because it became more expensive.
And so ever since then, when you get a luxury vehicle, they would put wood in the dashboard or wood on the side of the cars.
And that still exists right now.
They put faux wood in your dashboard to make you feel like it's an item of luxury.
And that's what a skeuomorph is. It's basically a reduction of an element that used to be necessary into something that just made you feel familiar with something. Another key point is, or another example, is a maple syrup jar that has a loop where you would put your finger in. Back in the day, those loops were big enough for a finger because the jars or the jugs were really big.
But nowadays, these maple syrup bottles are really small, and that loop is just there to make you feel like it's traditional.
And that's the same with what's happening in UI right now.
Apple's done this a lot, where they make skeuomorphs in their UI.
For example, their notepad, when you open it up, it brings up a keyboard that isn't really there, but it's got like bevels and drop shadows.
They make you feel like it's a real keyboard, and the notepad looks like it's paper with torn edges on the top.
And then when you write a note, it makes a pencil circle on it.
It's not really there, it's not really analog, but it's meant to make you feel like it's something familiar.
And that sort of helps the new user to enter the digital world.
It's arguable whether this is good design or not.
Suffice to say, we used it for dead space a lot.
We added the notion of scan lines, like I said, scan lines and flickers to make you feel a sense of dread and a sense of uncertainty that came with those elements.
Those are skeuomorphs, basically.
So now I'm going to talk about some of the specific parts of dead space.
I'm going to start with the rig.
The rig is probably the most recognizable piece of UI in the game.
It evolved out of the necessity to keep the player immersed.
We needed a way to message your health, your inventory, your ammo count, your location map without cluttering the game space.
Because remember, the big idea was that if we put up all this information on screen, then you're never really immersed.
So we had to find a way to show it to you, but not show it to you.
So this is a typical game that was coming out around that time.
You would see there that we've got a mini-map on the right.
We've got a health bar on the very left.
You've got some inventory items and weapon selectors in there.
This is what we needed to contract into the rig.
All this stuff, we had to take it away.
Because you were always thinking, if we made a game like this, it would mean that there's a safe wall between you and the game.
and you'd never really be immersed.
So we had to take all this away.
And the first thing we did was design a way for you to see your health.
And so this ties back to the importance of putting Isaac on the left side of the screen at all times.
uh... we made sure that he was somewhere very clear despite the fact that he could move there was an area where he belonged on screen and so if the health bar on his back was going to work we had to make sure that that rule was there because you needed to know exactly where you were going to look for your health we put the health on a spine and in the early iterations we made very detailed, ornate versions of it.
In the end, we settled on simplicity.
This is like, I think, I believe this is the 360 version of Dead Space that never shipped, that came before it became a next-gen title.
As you can see, not a lot has changed.
It's the basic idea. We had a bar in his back.
Simplicity sort of won.
We went and tried very elaborate ways of doing this and we ended up with the most simple, most iconic way to do it, which is a bar in his back.
That said, throughout the evolution of the franchise, we did change it a little bit. In the first game it was a tube of light. In the second game, it was more like a hologram.
In the third game, to elicit the feeling of vintageness, we gave it a circuitry sort of feel.
But fundamentally, it was the same thing.
The inventory, there was many attempts at this core system.
When I first came on board, one of my first tasks was to sort of design this thing and figure out how we could put all that information in one space and be very useful, despite the fact that it's in-world.
We made many attempts.
You can see here a version that never really shipped.
We had four weapon slots on the left, and we had them stacked up in the vertical.
And on the right, you'll notice the early version used to have three types of nodes.
Not too different from how we ended up in Dead Space 3 with a bunch of different resource types.
This was a very early draft of the game.
We ended up designing and refining and using the D-pad more and more as a tool to do certain things in here.
And we ended up with something like this in the first game.
And so here's how it evolved.
We sort of started with four, or sorry rather six key items on the left side, weapon select in the top left, and on the right side you could see exactly how your suit is set up or what level it's in, your nodes and your credits, and in the bottom you could, if you were like highlighting any element you would see exactly what that item was by the description in the bottom.
This is how it looked in Dead Space 2. Pretty similar, didn't change much except for the fact that we didn't have key items, so we were able to make the description box much bigger.
We did add a little bit more 3D-ness to this one.
We sort of slanted a lot of things.
But it's basically the same thing.
By Dead Space 3, we brought back key items.
And we added more resources.
And we took away two weapon slots to give away for the fact that we now have guns that sort of had two tips.
And we gave you a slot for your little robot buddy.
Like that guy.
Really like that guy.
Okay, so weapon selector, I already talked about this, but basically it didn't change a lot.
It was a means for you to get to your weapons very quickly, even if you didn't open your inventory.
You just d-padded up, left, right, whatever, and you got there.
This part, this brings a tear to my eye.
I love this thing.
I really, really do.
So Dead Space 1 was designed to have this really amazing map system that sort of opened up.
And you would see exactly where you were and where your next objective was.
I remember when I first came on the project, this is one of the demos that Chuck Beaver showed me that got me excited about really joining the project.
They had this system already running.
The basic idea was that.
This map would open up and you would see exactly where you were, where you're going.
And the problem with it was that it wasn't very useful.
Because, for one thing, it was always oriented a certain way, despite the fact that Isaac was looking left, right, behind you or whatever.
It would orient a certain way and you had to spin it to find exactly where you were, before you could even start to use it.
And so as pretty as it was, what we learned very fast was that nobody wanted to use it.
And for a game like Dead Space, which was designed to be...
a backtracking and walking around and mission-based game that goes around a ship with a lot of very...
generic environments because it was designed to be a space vessel that was industrial in design.
It was easy to get lost in the game, but this wasn't useful.
And so we had to rethink our mapping system.
This shipped with Dead Space 1, but we had to make another way to do it.
And so the locator was born.
I remember when this was made.
I think we were in the last month of production when we were in a panic state and we're like, oh my gosh, no one's ever going to get to figure out where to go next.
Oh no.
And then there was like two camps of thought.
One was like, well, let's make this breadcrumb system that appeared on the ground.
And the other camp that said, well, then if we do that, no one would ever explore.
But then what we realized was that by creating this system.
We made it so that we gave the level designers a lot more tools to play with in terms of creating places to go other than what was expected to be done.
And so it ended up being one of the most iconic elements of Dead Space UI.
And to be honest, that's amazing because we just slapped it in last minute.
Ever since then though, we've refined it a lot.
By Dead Space 2, it was curving, it was prettier, and actually allowed you to go to more than just your objective, but also showed you all the other places you could go with it.
You could now go to save kiosks and other things with it, and it would just show you exactly where those places are.
It would change.
By Dead Space 3, we refined it even more to couple with the way we handled our Zero-G, and it's a lot more integrated with what you did if you were flying.
And we did some really cool improvements to it visually as well.
OK.
This next part I'm going to talk about is really, really cool.
So I was struggling with myself how I was going to present this.
Because admittedly, I like the one we did for Dead Space 1 the best.
But at first I wanted to go, maybe I should go Dead Space 3, 2, and 1.
But I think it's better if I really show it to you guys in chronological order.
But.
Let me preface that, I think the first one was really awesome.
Anyway, so Dead Space is designed to be a horror experience, like I said earlier.
And we wanted to use the front end as a means for you to get into the whole thing.
This was going to foreshadow your whole experience.
And so I pitched this idea.
for us to make a front end that sort of had this weird out-of-body experience where you would see little videos and like this corruption soup as you were like floating around this weird nether world of like weird things happening and I I said hey I Pitched this to Ian our art director at the time and I said hey Ian. I've got this idea. Let's get like creatures sort of like writhing and turning and like getting torn apart and muscles getting Blown out of bone and bone like just coming out of things and it'll be really cool and I even went as far as Storyboarding this shit right? This was really fun I drew out this thing where I would we would make models of creatures and animals just sort of like buckling and like bones sort of tearing out of flesh and teeth chattering and like blood coming down grates and whatever, and it was going to be really cool.
And Ian's like, yes, do that.
And then I asked for time for modeling and animation and high-res like sort of like rendering.
And we didn't have that time.
And I'm like, oh, crap.
How are we going to do this?
And so the interesting thing is Chuck, who's the story producer of the game, who was also the UI producer at the time, decided just give me $500 to improvise.
And so I went to the store.
And then I bought some carob syrup and some food coloring.
And we ended up going to a butcher shop and bought some random animal parts.
And then we bought some mealworms.
And then we went to my garage.
And did I mention we bought a dead lamb, too?
We did.
And we started shooting some video.
So the UI team got together and shot some video.
It was really fun. We shot all this footage that we wanted to throw in the front end.
The idea was that we wanted to make the front end look, you know, subliminally scary.
And so we shot all this stuff, we cut up animal parts, we shot things, we replayed them in reverse and whatnot, and we ended up with video that looked like this.
And, admittedly, probably if you go back, if you played Dead Space, you probably never even noticed these things, but they were there.
They're floating around in the UI.
And the idea was not for you to see it, but for you to think about it and have it subliminally stored in your brain, that this is the kind of game you're getting into.
That's been the cornerstone of what Dead Space is. It's not about the RAAAARGH! scare. It's all about the, you know, the subliminal thinking man's horror. We hid stuff in there for you to find subliminally.
I love that story.
Not a lot of people know that, so now you know that.
That's more shots of it. You should play Dead Space 1 again and see if you can find these videos.
There's some really fucked up ones with eyeballs and...
One of the producers in the game was just obsessed with the lamb skull and trying to crack the eyeball out.
We realized that eyeballs are stuck in there pretty well.
They're like...
You can't just pop it out. There's no spooning that thing out.
There's muscles holding that thing in there.
Just so you guys know.
It wasn't me. It was this other guy.
So Dead Space 2, the front end of Dead Space 2 was designed without lamps.
We weren't allowed to cut up stuff anymore.
EA sort of realized that, sure, that's cool, but don't do that again.
On a side note, yeah, Dead Space 1 was just one of those games that sort of happened because a lot of crazy people under the radar sort of put it together.
I don't know if it could have happened as awesomely as it did.
As much as I love everything else we've done, Dead Space 1 was just crazy.
So now, Dead Space 2's UI, we sort of took the same idea, but went a little further.
We made it so that you're now inside Isaac's brain.
The whole premise of the second game was that there's some information in his head, and you're trying to extract it.
And so we made the UI based on this idea.
We started rendering the notion of, or this is concept art that I made, but we started rendering neurons and like brain matter floating around in this nether space while there were like pieces of UI at high-res sort of showing up in front of you.
The idea was that there would be little bits of marker fragments in there and many of you may or may not have noticed but those marker bits sort of coalesced into a full marker had you finished the game completely and what happened was we designed it so that these were like tied to your level achievements so there were like multiple states of this and as you progress through the game as you did more levels and you finish more levels the marker came together more and more and by the end of the game you had a full marker floating in there It was a very subtle way of showing the arc of the story.
Again, it was never like explained to you or spoon-fed to you, but it was there. If you cared to, notice it, it was there.
And if you didn't, it was there.
Dead Space 3, we sort of took that same idea, but we put it now in a very real environment.
We put you in a room instead of being in a very abstract space, now we put you in the room.
Specifically, we chose the Rosetta room in the game.
I'm not going to explain too much about it, because maybe you guys haven't played it.
But suffice to say, the idea was that there's this machine in the middle that sort of held together pieces of ice.
that sort of dissected a creature.
And what happened was, we made it so that, much like in Dead Space 2, the metagame would be that the further and further along you were, there would be more pieces of glass, or sorry, rather, ice, in the machine in the middle.
And from one of the vantage points, from one of the machines, you would be able to see what's on the dissection bed.
And these are just really, really bad early models that I did.
That's what I drew.
That's what I made.
And that's what Jihan sort of painted over it to look like.
I made that bad model.
And Jihan painted that.
My job's pretty fun.
I make really bad models.
And I've got amazing artists to come in and paint over it.
And eventually, someone will build a real 3D model.
It's pretty fun.
I like what I do.
This is just what the menus look like in the third game.
The interesting thing is that you could actually tumble around and see.
Actually, this is true of all games of Dead Space.
In the front end, if you tumbled around, you would see secret messages everywhere.
That's the whole room.
We have a 10-second kiddie break.
Look at that cat.
I mean, just look at that cat.
Look!
That's my cat.
That's my reminder to me to drink water in the middle of my presentation and sort of clear your palate of all those dead lambs.
Okay, we're back.
The evolution of the look.
OK, story has always been the core of the game.
And so we wanted the UI to be fully integrated with the story.
And the story's got an arc.
The story's got a character.
The story's got nuances.
And we wanted to make sure that the UI progressed with this growth as well.
And so we always had to react with the characters and the environment.
The first Dead Space, as I mentioned earlier, The UI was sort of tied with the Ishimura.
It had to be broken and erratic.
This is the sort of world we were sort of painting our UI on top of.
And it was very important for us to live in that world as a UI.
For you to believe us, we had to be there with you.
I mean, by us, I mean the UI guys.
For you guys to believe us creating the UI, we had to be in there in the world with you and make sense in that world.
And so we had to feel broken as well.
And so a lot of the stuff in the first game had that quality of uncertainty.
You weren't sure if it was going to work.
And like I said earlier, this was a really thin line to stand on.
Because it's very easy for you to think, that stuff's broken.
You should fix that.
That looks horrible.
It's like that line between a looking like it's broken and actually is broken is very thin.
And we had to thread that a lot.
Early on, we were still trying to figure out the style.
And a lot of our font was more wobbly and shaky.
QA would come back and say, we can't read this.
It's not going to pass TRC.
So even though we wanted to make it look broken, we had to make sure that it still was readable.
That's some of the UI we use for Dead Space 1.
Again, here was the original store.
And now let's talk about Dead Space 2.
So Dead Space 2, we now opened up the world into the vastness of a space station.
We were no longer in a broken ship.
We had the ability to show you a bigger, larger world that was Dead Space.
There was more than just the mining ship.
Now you can see, well, how does the rest of this depleted universe look?
Obviously, there are areas that'll be lush, and there are areas that'll be decrepit.
and there will be areas that will be a little bit more polished because they were government institutions.
And there was stuff that actually looked a little bit like the first game.
So in building UI for this, we had to create a wider array of things that could live there.
Initially, we had the idea of making machines that allowed you to withdraw money.
and like steal money from people.
This didn't actually ship, but we had ideas like this.
We had like health pack machines and whatever.
And this breaks my heart that didn't happen.
This was a really cool piece of UI.
We had this idea where if you were running low on cash, you could go up to this machine, shove your hand in there, and it will take some blood from you and change it for money.
And the metagame was that.
as your health was going down, your money was coming up, and there would be a point where it would give you a ton of money, but if you didn't pull out fast enough, you would die.
And it was so cool, but we didn't have room for it anymore for the game.
We cut this feature, but man, I love this one. I was so excited about this one.
This was the store from the second game.
Earlier I mentioned Isaac sort of had to live in the 3D world at all times.
One thing I forgot to mention is that even when you were inside a store or any game mode, you'll realize that a sliver of Isaac is always there.
This was by design. We wanted you to feel like you're always with Isaac.
So even if you were like looking through a store, Isaac was there with you.
I'll explain later why that rule is broken, but suffice to say that's a rule.
These are just some screens from Dead Space 2, showing some of the more industrial parts of the game.
That was the elevator.
That's just some cool hologram, some cool hologram.
Dead Space 3.
OK.
So Dead Space 3 is set on a planet that's got technology from 200 years ago, meaning things had to look older.
The UI that we had to design for this world has to look like a reverse engineered version of the holograms that you were used to for Dead Space 1 and 2.
So the basic idea was that anything that Isaac came to the planet with was futuristic.
It was the stuff that he already came with.
So case in point, the inventory, the locator.
the rig, the pickup sort of AR stuff that we'd see all around, that was all futuristic stuff that he came with. But everything that he found on there, like the doors, the weapon benches, the machines that he interacted with, had to have a flavor that looked very different from what he had. And the first thing we did was to sort of adapt the color language to be a little bit different and have a little bit more of a greenish hologram tinge to make it look more vintage.
And the other thing was that we effectively changed the font system for everything you see on the planet.
And here's just some more of the rooms that we had to sort of art up with some UI.
These were early comps of what we were going to do with UI.
So early on, when I was talking to Ian and Ben, they wanted the UI to feel like they were in pieces of glass.
And somehow, they refocused and defocused with three pieces of glass on top of each other.
The idea was to make it look like an archaic version of holograms.
And then I started asking Ian, well, if we even have screens right now that are just flat and don't have all this fancy mumbo jumbo, how can we extrapolate that in the future?
they're going to be three pieces of glass that sort of are separate and whatever.
And he's like, I don't know, just make it look cool.
And really, no, no.
But what he said was that maybe in the future, you know, LCDs are gone, or the elements that we use to make screens right now are gone, and so we had to come up with other ways to make holograms or lights on screen.
So this is what we ended up with.
I sort of drew these early mock-ups of what we were going to do.
The one on the left was one of the early drawings that I did.
It ended up being too elaborate for what we were trying to do, but it was a great design.
idea. Here's some other ideas we ended up with. Some of these machines that I, I modeled these things and some of these, some of these machines ended up in the game as like props that are just on the side, but that's the basic idea. We wanted to make sure that it felt like you were dealing with glass plates as opposed to just light on holograms.
This is the audio log system in the game, and you'll notice some remnants of that design that I did, where there's three pieces of glass on the UI.
This is a switchboard that you'd see in one of the ships.
And these are just some ambient UI pieces in the game.
This is a suit kiosk.
Not a lot of our game UI, our in-game UI, was able to do a lot of flipping and turning.
We tried to do that a lot on the front end, and we did it to this machine and a few others, but we couldn't conceivably make every UI piece in the game animate as well as this thing or as elegantly as this thing, so we picked our battles.
The reason why we couldn't do it for everything was obviously for cost.
of production.
But what we realized is that if you show people something really cool in the front end, like in Dead Space 2, we made sure that the UI you would see in the front end was really high res.
When you go in the game and it's low res, and it doesn't animate as elegantly, you sort of forgive us for that, because you sort of already think about what it looked like in the front end.
In a very similar way as when you used to have a 2600 and the game looked like crap, but the packaging looked awesome.
That's all you needed to fixate on, the fact that there was a really awesome picture on the box. Same deal.
That's the scavenger bot. I have nothing to say about him except he's cool.
There he is again. I like that guy. Did I say I like this guy? I like this guy.
This is the bench.
Also part of Dead Space 3.
This is the segue into my next slide, which is really talking about the journey that we took to build the bench.
So the bench was originally designed as a means for you to relate to your character being an engineer.
It was meant to be a way for you to upgrade your weapons in Dead Space 1 and 2, and to just sort of like fine tune it.
to be what it needs to be. One of the edicts that we had was make sure that this is your thinking man's character. He was an engineer, he wasn't your typical army guy. He was fashioning his weapons out of construction tools. Admittedly, we probably added real weapons down the line, but initially he was dealing with like drills and like ripper blades and like plasma cutters, things that you would expect a space engineer to be using.
So here's just a flow we did, a flow of how it worked in Dead Space 1.
You would walk up to it, you would pick a weapon or something that you wanted to update in your inventory.
and then you would add nodes.
This was the extent of what we had in Dead Space 1.
You had the ability to drop nodes, generic nodes, into specific sort of paths to improve the weapon's capacity, reload, and other.
My brain's freezing up.
Or it's damaged in its speed.
So this was the extent of what we could do at that time.
By Dead Space 3, we felt like we really need to really show off IS-6's ability to be an engineer even more.
And so we redesigned the bench.
We started thinking, well, instead of just upgrading your weapons, we needed a system to be able to build weapons from scratch.
And so we started redesigning the bench.
If you imagine a weapon crafting system, you're probably thinking, well, there's going to be, you know, something in the middle like a base piece and you'll drag over a gun piece to try it out.
You probably have a pull down menu and you pick a version of a part that you drag down into the weapon you're building.
Which is fine and dandy for a PC game where you have drop down menus and a mouse to...
you know, drag things over.
This does not really exist in the console world.
And you have to understand Dead Space is primarily designed as a console game.
And so all these conventions that allow you to make a deep crafting system that exists in a PC world don't really translate to a console world.
Because the worst that you could do in a console type game is to instill PC sensibilities.
If you start thinking that your player is going to be using the analog stick to drag a mouse over, then you're sorely mistaken. That's not how console players work.
They work with a small set of buttons, and everything has to work with those buttons, otherwise you've lost them.
And so the challenge was to make a very deep, yet easy-to-use system.
And trust me, it was not easy.
The original concept for the bench was to make it feel like it was analog, like everything else we were doing in Dead Space, it had to be diegetic.
You would see Isaac on the left side and everything was very real, there was like a little bench in the middle, he would be tinkering with a gun and there would be UI bits that showed you exactly what you could do.
This was the original design.
that I was cooking up.
It would feel like a tackle box that would open up and you would get in there and you have all these screens.
And then we redesigned it again to be this machine.
So, yeah, you could see in the back.
So I modeled it with a bunch of like.
conveyor belts in the back. The idea was that you would come up to it, bring your gun in there, and there would be on the top of it a conveyor belt that allowed you to see exactly what you could add to the gun. There would be little boxes and these boxes would be labeled as weapon parts and you would pick which weapon parts you would want on your gun and you would select it and it would be added to your weapon. It sounds really cool.
And it would have been cool, except it was unusable.
It had a lot of problems.
The main one is that we prided ourselves in Dead Space about using the actual game space to put our UI.
And we've done this thing where we've put our UI in multiple screens, which was really fine and dandy for small systems like the store back in Dead Space 1 and 2.
But by Dead Space 3, we were trying to shove so much information in front of you that putting screens on separate, or sorry, information on separate screens in the meantime also making sure that Isaac was always in view was becoming ridiculously impossible.
You know that you've screwed up a system when the team has been using the game and playing the game, and they'd rather use the debug system to make a gun than your UI system.
So this was a really sobering, humbling moment for me and my team.
For months, people were using this, this, instead of what we built.
And that was really painful.
And so we had to redesign this bench over and over.
And one thing we realized is that this whole metaphor of putting things in separate screens and making sure that Isaac is in view all the time was not going to work.
This was one of the last attempts that we made, and I was really just pushing it.
I was like, come on, we can make this work.
We're going to keep the boxes in the top, and you would be able to see your parts on the, or your selection of items on the right, and your stats on the top right.
But it really didn't work, and we had to redesign the whole thing.
And so after a lot of reiteration, we sort of had to succumb with the fact that we.
needed to focus on what actually users needed to have fun with this thing.
And the first thing that had to go away was Isaac.
And the second thing that had to go away was the multiple screens.
We had to consolidate it into a typical piece of UI.
This is something that you would expect out of any other game, which is like a very clear, concise, single screen that brought you through the whole experience.
We used the analog sticks to sort of pick the weapon part or the weapon category that you wanted to change.
And you drill down and you change it.
This was our safe system built into it.
And so what you realize is that after all those things I said, all those rules we set up, all that fiction stuff that I believe in, at the end of the day, none of that is important if your users.
can't really interact with your game.
The bottom line is, fun and usability is more important than the bullshit I was talking about in the beginning.
All that's cool.
All that is amazing.
All those rules, all the fiction stuff that I love, that I really care about, it doesn't really matter if it can't get the game across.
And so we had to make these changes.
I stand by those changes.
These were changes that I believe made the game a lot better.
They are not necessarily the prettiest solutions, but it made sure that you were able to use the system and you were able to use it as fast as possible in the limitations that you had with a console controller.
On that, I want to give my final thoughts.
This was an amazing project to be on.
I had a whole lot of fun because I was able to experiment and play with some crazy tools.
And I feel like our contributions will resonate into the next gen of games.
I think that the stuff that we did really means something because we tried some new stuff and we were able to navigate around.
some of the technical limitations that we had and we were able to navigate around a lot of the big ideas that we wanted to sort of convey to you.
And I think we succeeded, and I really believe in what we did.
On that, I want to do some thank yous.
Chuck Beaver, Jason Leung, John Gerasi, Leo Lee, Richard Carillo, Tracy Espoleta, Andy Wright, Christy Yen, Jeremy Benamou, Matt Gallet.
Michael Yen, Bill Fowler, Ford Hu, and Megan Barry.
Many of these people don't work with us anymore, but they were there for every part of the game.
The Dead Space team from the first one, the second one, the third one.
And I wouldn't have been able to deliver what I tried to deliver if I hadn't had such amazing people to work with.
Amazing producers, amazing artists, amazing engineers.
On that, we're going to end with.
a few minutes for Q&A. Thank you.
Hi, you over there.
So thank you, first off.
I haven't finished the third one yet, but it has been an amazing ride.
I've named my two robots.
And so Reginald and Gomez, totally thank you for making an awesome game.
Specifically, the first time you find one and there's like enough snow, and you just drop it in the ground and it disappears, but then the little tennis ball guy, it was brilliant.
Just fantastic.
So one of the issues that my friend and I ran into, at the very start of the game that we both feel stupid on and of course it's posted on the internet is the dual control panel situation so you have two control panels and two you know the users the very first instance of that is in that the intro sequence with the spaceship And I'm not sure how, up until like the repelling sequence, almost all of the dual control panels are on a single machine.
But in that very first instance, they're separated into two specific things.
Did you run into any serious testing issues where both users would try to just hit one of those control panels and spend three minutes looking like complete morons trying to both use the same control panel?
And how did, and then more specifically, how did designing for the co-op experience even further muddle trying to keep the that really holistic experience with the UI, but you know now now it's even more complex?
Co-op sort of changed the whole equation for us. Thank you for the question.
The big thing was that We had to create bigger play spaces, bigger doors to make sure they accommodated the co-op experience.
It made so that our puzzles had to be designed to work for two people.
And admittedly, a lot of these room designs, we were experimenting as we went.
As much as there were standards as we were set, some of the positionings of those panels were further apart and closer.
Ultimately, we did some testing.
Some people had trouble with them, but a lot of that design also had to reflect the fact that the rooms were designed certain ways, and the level designers had very specific notions of why they were far closer to each other.
Suffice to say, we were just part of the equation of how things were laid out, and I want to blame that guy.
No, no, but not really. Those are specifically designed to sort of...
allow you to look at the room in a very large way.
And so they're further apart.
So you're not just zeroing in one area.
You're supposed to explore.
And it's set up that way so you would train your eyes, or train the player to explore further and separate yourselves.
And so yes, it's OK for you to fail in the beginning.
But the bottom line is you would realize that it's important for you to separate it up.
And that's why that's there.
Hi.
Hi.
Since you guys gave yourselves such a restrictive rule set for the aesthetics of all the UI, I was just curious what aspect of it you found the most difficult to convey well to the character because of all the restrictions.
Concepts that were difficult to convey well to the player.
Based on those rule sets, we always had, well.
We always had trouble with the fact that the UI sort of had to live within that height range, because it was so easy to get our UI lost, because our UI needed to be seen from certain angles.
Otherwise, it was unclear.
And so we had to stick with those rule sets.
Can you say the question again?
I'm not sure if I'm getting it.
Which aspect was hardest to convey, like putting the ammo on the character, or doing the health, or just?
Anything that would have been much easier with a more open system.
I gotcha.
I don't know.
Well, I guess the saving.
Saving was always hard to convey.
Because it's like, you know, in Dead Space 2 we experimented with the idea of like giving you auto-save instead of like just kiosk save.
We ended up fulfilling that promise in Dead Space 3, but what we realized is that it was too important to just put on Isaac.
It had to be on the side of the screen for many reasons, TRC being one of them.
And we sort of broke our own mold with that.
But these are things that we had to deal with to make sure that you had no save anxiety.
Because the problem would have been, the bigger problem would have been, you were unsure if you were saving or not.
So we had to plaster it on the side of the screen.
OK, thank you.
Five more minutes.
So let's run to this one.
Sorry.
For the iOS version, how difficult was it to bring the diegetic feel in the UI?
So our team didn't work on the iPad version.
That was Iron Monkey, and they did an amazing job.
But I saw what they did, and I think it was difficult, but they did it pretty well.
Is that a good answer?
Hi.
What were the tools like for creating the UI in Dead Space?
They're pretty horrible.
So like I said, they're basically.
They're basically particles, right?
So let's go through it this way.
You would see an animation in the game, one that you probably didn't care about, but it happens, is when you walk up to a door, what you would see is the door would open up, and two parts would open and stop, while two other parts of the door sort of turn and move this way.
And you would see that a lot in the game.
And you really don't care about it, because all you want to do is go through the door.
But for me, that task was immense.
Because you've got to understand, these are particles.
We don't have a keyframe timeline to animate these things.
All particles do is fire and forget.
So that one element, let's focus on one element, the top part of this door.
It needed to go from here, which is not moving, to over here and stop.
That simple motion meant I had one particle sitting here.
that I killed when you came up to it, and then had another particle that flew off this way, but then I had to make it invisible as soon as it got to this point, and had another particle to replace it sitting right here.
as soon as this flew away and disappeared.
So you just saw three particles sort of happen in front of you, and all that was was the motion of that door going like this.
Now, mind you, there was this, there was this, there was a spin.
All of those were separate particles sort of moving in a dance to make it look like it's a door sort of animating all together.
So that's just one state.
Now, let's talk about.
door opening, door spinning because it's loading the next thing.
It was impossible to use.
It was horrible.
And we used it all throughout Dead Space 1, 2, and 3.
That sounds awful.
Thank you.
Yeah, it was awful.
Hey there.
Basically, assuming that...
Oh, sorry.
I should jump on him.
Maybe.
Oh, yeah.
Okay, sorry.
Yep.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Do you have an opinion on if Diegetic works better in first person or third person or do you think it works for both games? I think it works for both games I Think that it's easier to sell in third person in my opinion, but it works for both games. The reason being is that in first person You you don't have You're like you're you are your eyeballs And so if you see diegetic you expect the hand to be there as well And if you're not doing this, then it doesn't feel you know, as real.
And so we have the excuse that it's not your hands in the game.
So if it's diegetic, it's the player's hands, and we can animate there, and it makes sense.
Yeah, it seems easier for third person, like stuff in the world.
But the HUD, it seems harder to make diegetic.
All you really have is your weapon.
In fact, a HUD would never be diegetic.
There's no way, unless you say that it's projected into an eyeball, which, yeah.
Thanks.
Hi.
So, assuming that you're done with the franchise, I guess, and you end up with a totally different project in a totally different universe, would you still attempt the diegetic UI?
Are you sort of sold to the concept?
Are you ready to go back to more standard, more traditional UI elements?
Yeah, first of all, the franchise is not dead.
Oh, sorry.
I'll say that.
But going into other projects, I can't talk about what I'm working on right now.
But I will say that we are experimenting with different ways to do UI again.
And I'm willing to go back to traditional styles if that's what the project needs.
That's the bottom line.
It's always go back to what the project needs.
Dead Space was just so happened to be a project that needed to be immersive as it was.
And so we got away with some crazy stuff.
So, I'll take one last question and we're done I think.
Thanks for the talk and for teaching us the word diegetic, because we all sound smart now.
So what I was wondering is, so a lot of the diegetic elements happen to work really well for co-op, but they were there since Dead Space 1.
All the NPCs have rigs on them, even though usually you didn't need to know their health and everything like that.
Was that in any way instrumental in the concept of Dead Space 3 having co-op?
Was this kind of something that you guys always saw happening in the world and were like, oh, there should be another player here?
Another what?
Sorry.
Another player.
Oh.
Oh.
I don't know if it was instrumental at all, but it sure did make it prettier and made it help.
Yeah.
Yeah.
OK.
Cool.
Thanks.
Awesome.
Thank you guys for being here.
