So, I was asked to introduce myself first.
So, I'm Jamie Chang.
I founded Clay in 2005, and we've been building independent games since then.
Our last two games was Mark and the Ninja and Don't Starve.
And I wanted to talk about the development process today a little bit.
And I'm Jeff McGillic.
I'm the creative director at Clay Entertainment.
You're pretty much the art dude.
Okay, so I want to talk about what we want, what Clay is about.
and what we've been trying to build over time.
And for me, I wanted Clay to be a place where we're continually building amazing games over and over.
And so Jeff and I have been doing this for quite some time, and the only way that we can actually see this actually happening is if the process is sane, is if the process is sustainable.
So not only do we need to build great games, we actually need to do it while still going home and still not ruining our lives in the process.
It's basically inevitable.
I mean, for me, I actually just flew in today, which is why I'm a little out of it.
I had a 2 a.m. feed.
I have a two-week-old at home right now, and I flew in today.
I'm flying out tomorrow.
Jeff has a one-year-old Friday.
Yeah, her birthday's on Friday, so I have to fly out early.
and all of us are getting older.
And it just, you know, for the last three years, we've been thinking about this, you know, that we know that everyone's gonna get older, everyone's priorities are gonna change, and we need some changes in order for that to happen.
And, you know, for me, I find it disingenuous when somebody says, The reason why we worked a whole lot of overtime, and the reason why we killed everybody working this game, is because we're doing something new.
It's because we're doing art.
And to hide behind art as a shield, to kill yourself and your employees and the people you work with, I think is not the right thing to do.
And I think you're going to screw with development in the future for that.
So, while there's no formula to building a new game, how we see it is that there are theories that we can use to help us better understand how game development works.
So this is a little bit of how much, I guess, you can call it over time, what I would say is insanity happened during the development of our different games, and you can kind of see this downward slide.
And shank one was the one where basically it was a tipping point for me.
It was so stressful and such hard work in such a short amount of time.
Basically I made a promise to myself that I would never put myself or other people in that position again.
So you can see a downward slide from there.
And you can see a little up on Mark the Ninja.
And the important thing for me is not that.
We shouldn't work really hard, but that I see that as a failure and I see that you know we can do better So what we end up asking is you know what are the biggest wastes of time as we're working on development?
and To us. It's actually just building the wrong thing So it's not even about the trees or the leaves, it's like this analogy where people are in a forest and they're chopping down the trees and they're trying to work really hard and then somebody climbs up to the top of the forest and says, hey, we're in the wrong forest.
And the other guys are like, but we're making so much progress down here, it'd be a waste if we moved to another forest.
And we laugh because, you know, we see that a lot, because we're building these features and we're like, well, we don't want to cut that because, you know, we've already spent so much time on it.
And so, you know, for us the idea is how do we figure out that we're in the wrong force quicker?
Because when you're working on something new, the nature of it is that you're going to do the wrong thing, often.
But the goal is to recognize that quicker and get the hell out of there.
So I want to start with talking about some of the massive failures that we had.
And between March and July was when we started Ninja.
And even then, people say that you need to have this vision of your game, and you follow your vision and you'll be fine.
But even then, we already had that vision.
We had the vision that Ninja is a stealth game where you feel like a real ninja.
So you're a glass cannon, and you're flitting in the shadows, and the enemy never even knows you're there.
The first pitch...
we already had that written down.
But the problem was we had no idea how to actually get there.
And so we had all these assumptions that we were building on that we thought would work, and none of it was working.
It just felt, so we actually had light and dark, and we had stealth kills, and we had shurikens, we had the sound, all this stuff, but it actually felt all mushy, and it just sucked.
And in fact, it got so bad.
that, you know, around May, we actually thought, this isn't actually going to work at all, we can't build a stealth game.
So for a couple months, we decided that Mark of the Ninja wasn't going to be a stealth game primarily anymore, and that it was going to be an action game with stealth elements, because we thought this wasn't actually going to work.
And of course, that made the game even worse.
So then we took it back.
And we thought again, what is wrong with what we're doing?
And what was wrong was, is that we were building a whole bunch of stuff based on bad assumptions.
And so, what was going on was, we were saying that we think that...
you know, these fire propagations is going to work, or that if we build more features the game will get better.
But it was all based on assumptions that we weren't clear about.
So instead what we did was we went back and we said, I'm going to build testable hypotheses.
I'm going to see...
I'm going to say, this is what I actually believe, and let's test it out.
And so we went through tons and tons of different little scenarios, and we said, I think that, for example, if I hide behind this vase, and then a guard comes along, I'm going to feel stealthy.
And so we built all these scenarios, and we're testing them out, and trying to fail quickly.
And once we started doing that, that's when we could actually start to see which of our assumptions were right, and which of our assumptions were wrong.
So I'm going to show you a little video of something that we did when we, as we started doing that.
This is, you know, somewhere in the summer where we started testing out our hypothesis and these are the ones that actually worked.
So I'm going to, how do I, yeah.
Who's there?
You can see that there was a little line up there that's talking about exactly what we're trying to accomplish as we're going along.
So here we're trying multi-targeting and trying to slowing the game down.
I see him!
Here we're getting people to work for the information.
What we decided was, our hypothesis was, hey, if people don't know the information but can learn it, that's fun.
That feels sneaky.
And so we're trying that out.
Can I hear something?
Not kill them and just distract them.
I need to check this out.
And that's the Canadian elk that everyone talks about.
I thought I heard something.
on for some time.
I think we probably built about two dozen of them.
before we started really realizing that the point of the game is rather mechanically, the point is to plan.
It was to observe the environment, work for your information, plan your attack, actually execute that, and the planning part was the most important part, and it was having this predictable cause and effect.
And once that was clear, and we could test that, and it was working, then kind of the game started designing itself.
And all of these decisions just kind of worked itself out.
So for example, should we have binary light sources?
Yes, because that makes it more clear.
Should we have, should we show the sound rings?
Well, at first, I remember saying, hey, we really should show the sound rings.
And there was some murmur, because it was like, well, does that make the game too easy?
You know, shouldn't you be able, shouldn't you have to work to figure out how big your distance is?
And the answer is no, because that makes it mushy.
It makes it unclear how many steps forward I can plan.
And so when you make it super clear, then you're able to plan further ahead and do higher level planning.
And then another really good example is the AI, because at first we had these really complex systems of what the AI was gonna do, and we're having a really hard time implementing it.
Or rather, we're having a really hard time getting the player to understand what the heck it was doing.
And when this idea, this theory, that people need to know the cause and effect very, very clearly became clear, it was very clear that we needed stupider AI.
and we needed AI which was really manipulatable.
So, you know, this is one of those things which actually helps cut out work.
And I'd say that cutting out, you know, smart AI cut out probably, you know, four or five months worth of programmer work just there.
And then this translates totally into the the art process and making things clear to the player Like so basically it went from the theory of like, okay, let's let's take things and make it look cool, too Okay, how do we translate all this information? How do you translate all this data to the player?
So certain things like okay binary light systems, like if you're an artist, you know, like, okay if I walk into a light I could get like shadow up to here and then I'm like partially seen so we actually change that to like if you have one foot in the light you're seen if you're not if You don't you're unseen so it's basically player knows at all times if they're in shadow or if the non shadow Another point was if we had like the UI aiming all the guides that we have in the game We made it like super precise super accurate just so people could plan and execute their their actions to a T and And the one key point that Jamie was talking about too, is the AI, being able to have predictable AI.
And from an art standpoint, how do you do that?
How do you translate those emotions and stuff like that?
So we did, like we have really talented artists at Clay, so we did a whole bunch of like facial animation.
We scaled up their expressions to make it readable.
But we found the most critical thing, or the easiest thing to do, was to actually put emotional icons over them so that everybody knows, oh, that person's in a terror state, that person's in a investigate state.
But one of the big elements here we're playing with our theory of making it clear was also like where the ninja can go.
Like we were playing with this idea of like the artists were like, oh, should we do it like Shank where it was like, like there's steps to the platforms and stuff like that.
But the key thing was like, we had to get the player to know like, oh I could go on that ceiling part, I could go on these walls.
So we decided to keep it completely flat, and that was just the result of just testing these theories.
Like, the more the easier it is, the clearer it is for the player, the better it is for the game.
So not only did these theories of like create a theory, test a theory, and learn from all our failures apply to game design and like what I call visual language for a game, it applied to our entire process.
So that was a weird and awesome kind of learning for us where we could basically test our theories with production and move on and see if like that actually worked, if like everybody in the production process enjoyed it and we created a good...
effective product at the end.
So this is an example of us when we had the, when we were creating a level.
So we wanted to test this process, our theory, and we wanted to fail quickly.
So, like, we got Nels and the team to do, like, one level, to create all the scenarios, create all the cool, like, stealth moments where you're sneaking up on guards, going through vents and all that stuff.
But the one thing was, it wasn't a world.
Like, when the artist got it, I even tried painting over it, and it's like, we couldn't make these into an actual world.
Like, is this supposed to be, like, a sewer-vented, like, facility? Like, how do we actually make this in the world?
So we're like, the artists were struggling with it, so we're like, okay, let's fail at that, and let's get the artists to actually create the structures.
Let's get the artists to create the buildings, like, knowing that we have to put vents everywhere, knowing we have to put like, different rooms and doors.
And so...
And then we passed it off to the game designers.
So the game designers knew exactly how their scenarios worked.
They had their process planned out, but they were able to use it within our structure of artists created buildings.
A whole bunch of work was moved around, deleted, pushed and pulled to make the final game, but at least they had a basis.
It removed the whole blank canvas structure that the game designers were struggling with.
And then the artist went in and painted it up or polished it up afterwards.
But the key thing, the key learning for us here was that...
like, we kind of changed our perspectives.
Like, people presume that, like, oh, creating a more efficient system for an individual is the better way, but with this, we actually created more work.
Like, the artist did the levels, the designers adjust the levels, and then the artist did the levels again, but it also created a more effective process, or effective product at the end.
So it wasn't, like, about efficiency, individual efficiency, but more process effectiveness.
So, the theory of failing quickly was a big thing, and we wanted to incorporate into all our different, like, in-studio processes, so batching became one of these things that, like, we used to do it on Shank, where we would just, like, do all the run animation at one time, do all the, like, kill animation, and then we'd implement it later.
We took that idea and we're like, okay, well let's test everything constantly.
Let's make sure everything works.
So we kind of eliminated batching from our whole kind of process.
And we basically, if someone animates like a kill, we put it in game, test if it works.
And so they're not just doing like all these stealth kills and not having it in game.
So nothing kind of like lingers.
And then we're constantly testing our stuff and like constantly testing our assumptions.
So we're not wasting a lot of work as well, and we kind of get clearer.
So the thing about batching is that it's this thing where, in a production process, where if you know what you're going to do, you can do a lot of it very quickly.
But if you're doing that based on bad assumptions, then you're going to be very quickly doing the wrong thing.
So that's why we needed to get rid of batching until we really figured out what we were actually making.
Go to Beadaholique.com for all of your beading supplies needs!
And now, going back to some of the theories that we're thinking about and solidifying what the vision of the game is, I see Mark of the Ninja as this finely sharpened blade because we just kept shaving things off.
And in terms of an efficient development process, many talks talk about how you need to be able to cut features, you need to be able to cut, cut, and cut.
So how do you know what to cut?
is through a solid theory that you've actually tested your assumptions on.
And because of that, we were able to just keep fine-tuning Ninja, and it's almost to the point where if we cut anything else, the blade would break.
And what's interesting is, you know, as an aside, you know, our other game, Don't Starve, is about, you know, whereas Mark and the Ninjas are finely tuned blade, Don't Starve is more like a bonsai tree.
It kind of grows and grows.
It's a, you know, there's all these interlocking systems.
And as the systems grow, we kind of fine-tune those systems, but it's growing nonetheless, and it gets bigger and bigger.
And so it's kind of a different process, but at the same time, using these theories, so theories are flexible.
Whereas, you know, if you have a formula, that's inflexible.
A formula is you put this stuff in and it comes out the other way.
A theory is when you understand what's going on better.
And so we were able to use these theories on Don't Starve as well, and I think that even though it's a very different game and a different way of building it, it still really helped us out.
Now, one other thing that I use to think about process is how the people work together, and how all of us work together.
And at Clay, we have what we call T-people, which are people who are really good at one thing but are pretty good at a whole bunch of other things.
Now, I'd say that in a traditional process, there's a lot of I people.
So people who only know their thing and don't know much about other people, right?
And that's when middle managers come in.
That's when you need the middle managers because they need to talk to everybody else so that everybody knows what everybody's doing.
But when you have T people and they work together, they naturally already touch each other and they actually can talk about what they're doing and they actually think about the effect of what they're working on against other people.
And so, the problems actually get worked out way sooner and you actually get more innovative results that way as well.
So, you know, at Clay, we've tried having middle managers before.
We thought we needed them.
And honestly, we don't.
And it's worth it out way better this way.
So this is something that I think about a lot.
And it kind of comes back to, when I'm thinking about all these processes, it comes back to a state of mind, I think.
So what I'm saying here is, while shipping a mediocre games is gonna screw up your company really quickly, having an unsustainable process is gonna suffocate your company, or yourself, rather, I would say.
And so, you know, the message that I want to bring across is that that's not okay.
And that I hope that, you know, today I'm presenting a little bit about how we do things and I want to learn from everybody else so that we can create processes that allow us to create art.
And I think that it's not a juxtaposition or an oxymoron.
When you have good theories and you have good processes, you're actually more free to think about new things.
because you're not just flailing around not knowing where you're going and hopefully hitting somewhere good. That's kind of my message. And I think that's, that's it.
So time to just write, there's a time for questions, five minutes questions.
Oh, I forgot to say all those things I was supposed to say, which is turn off your cell phones and all that stuff.
Anyway.
Terry is, if you want to go ahead and set up while they're taking questions, that would help.
So questions?
So you just have to come up to the mics over here on both sides if you have any questions.
No questions?
Oh, there we go.
There's some questions.
OK, I have a question.
So you talk about using theories.
Can you give us some examples of the theories that guided Mark of the Ninja?
Yeah, so I mean, the theories were, I mean, for example, the process theories, some of them were, you know, T people make it so that you don't need middle management.
But from a game, from a mechanical perspective, it was that planning.
made people feel like a ninja, for example.
We basically keep drilling down into little theories and testing those things out.
So, with the testing of these theories, did you do it internally within the team or did you look outside of the team?
Were you going back to the same people again and again or was it fresh people every time?
So Nels did a great job in getting people off Craigslist to come over and thankfully we weren't murdered or anything like that.
But they came in, you know, twice a week throughout development, and sometimes would bring in the same people over and over.
And we made really clear, I mean, the distinction is that we use that data to test our assumptions, to say, did our assumptions work or not, rather than ask them what they wanted.
Because what they actually wanted was...
to hit harder and to, you know, to slice people up. That's what they said they wanted, right?
And so the feedback for us was, oh, they don't want to stealth. Why don't they want to stealth?
Hey, Jamie. Great talk, actually.
Did you use your hypothesis method to improve other processes besides game design?
I.e. production, management, everything.
Absolutely, yeah, absolutely.
So the idea behind, for example, the level building was that we thought that the best way to build levels was for the designers to build it and then the artists to art it up, in that order, right?
Right. I guess maybe more on the management side or more, maybe, business side?
Yeah, there is, I can't think of any off the top of my head, but for sure that's what I think about all the time.
Maybe after, I don't know. Sorry, I can't think of it right now.
Hey, I'll take it.
It seemed like it was really cool to see those early prototypes, all the testing, hypothesis videos of gameplay.
It seemed like it was really polished.
I wondered, did you like...
Did you do an extra effort into doing like a polished prototype of your assumptions?
Or did you just like...
Why wasn't it just blocks jumping around?
They were just blocks jumping around, actually.
Because we built a tiling system for the platforms that look good as soon as you put it down.
So that was actually my art.
And I'm not an artist.
So I just threw down the blocks, and it looks good because the artists are awesome.
But they were just blocks, really.
Okay.
So you did talk about the, uh, basically the method of applying theories and making sure that you're applying them appropriately with your wrong forest argument.
So I was curious as to, with all these different theories being experimented and you're rejecting the ones that don't work, did you still feel an attachment to that kind of mechanic being a fun mechanic that you could apply to a later project?
I mean, do you guys have a notebook or an archive of theories that didn't work for Mark of the Ninja, but could possibly make a return in another game?
We don't actively archive them, but I mean, there's still cool mechanics.
Like, for example, we actually had a mechanic where the ninja could counter attacks.
He would actually go into an attack pose and do like Assassin's Creed style, you know, movements and jumping over and stuff like that.
It was cool.
It just made people want to slash people more.
Well right, and basically in correlation with my question, say for example, if that was a cool mechanic that you found cool, would you ever see yourself applying it in a game that would be more appropriate?
I agree, yeah. But we don't actively archive it, it's not like a process that we actually write it down. But yes, we would do that.
Awesome panel, thank you.
Hi. Regarding the T-People arrangements, if you have, say, an artist-designer, a designer-programmer, and a programmer-producer, then for the artist and producer to communicate, do they use the designer-programmer as a middle manager, or do they try to interact directly, or how does that work?
We don't have any producers.
Oh, I mean, as far as that kind of... if it wasn't producer, then say, a sound guy, then.
I think everybody's like, once you create an area and a team that can, that has all these multiple skills, or like is aware of other people's skills, then everybody communicates with each other.
Like everybody sits in the same area, so if you have a question, there's other people overhearing and then people can pitch in and stuff like that.
So we basically just create an environment where people can communicate as well as like everybody knows what's going on constantly.
And I also have, you know, in terms of like more theories and guess is, you know, we see people in certain ways as well.
So we try to see people where, you know, four people have backs to each other because that's the minimum amount of distraction.
But then they can still turn around and talk to each other.
You know, from a space perspective, the best space usage is when you have a tea and you're all working inside that tea, but then you stare at each other all the time and when one person stands up, everybody notices.
So I used to work like that and it was terrible.
So we actively try to think about all the little things that help the communication.
Okay, we have, yeah, we have.
