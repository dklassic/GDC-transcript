Welcome everyone. My name is Tooku Takkakallio and I'm a game designer and game leader at Supercell.
I think it's now my fifth time here at GDC and I always find this super inspiring and it's now even more interesting to be here as a talker for the first time.
And why I like so much GDC? I think it's always so cool to hear like people talking about games and how they approach those and get like insights and I kind of decided that I'm gonna do a talk where I...
go really deep into these details and give some insight, like information, like how I approach and how we have approached at Supercell to these design questions.
So first, who am I?
I studied actually theoretical physics as my major, which is maybe a bit unconventional background.
I, of course, like every theoretical physicist tries to solve the theory of everything, I also, of course, but I didn't, unfortunately.
But I did spend some time as a researcher, a postdoc researcher.
For me, like, games and designing games has been always a big hobby.
So board games especially, I've done a lot of those as a game designer.
And that's, maybe Eclipse is my most popular board games.
That kind of led me to mobile gaming as well, and into Supercell.
And I joined that about six years ago, a bit more than that.
And I've been there as a game designer and game lead.
So let's start about thinking, what is game development?
And as everybody knows, it starts with a great idea, your ultimate game concept.
And then it's all about just executing it, right?
Well, at least in my.
experience, it's not quite so.
And I started thinking like in practice, I think like game development is more like being in a jungle.
You have your team and you have maybe some rough idea what's the game gonna be, what kind of game you are trying to make.
And the game is somewhere hidden in the jungle and you try to find it.
And if you think what's the role for the game designer, I think game designer can be like a scout in the jungle.
try to find the best path and avoid getting lost.
And there are a lot of traps, and you, of course, want to try to avoid those as well.
So you could say that the goals for the game design is kind of find the best path through the jungle and minimize the time spent lost there.
And sometimes it is hard to know when to push forward and when to change path completely, or even leave the jungle altogether.
Today I'm going to talk about my adventures in the jungle.
And I have here three different examples.
And these jungles, they turn to be Hay Day, Boom Beach, and Brawl Stars.
And when we started all of these projects, we had a very small team, three to six people, depending on the game.
Yeah, only in the beginning you have a kind of a rough idea of what you want to do, but this is where we kind of ended up with the team.
In the first two, in Hay Day and Boom Beach, I was a game designer and in the Brawl Stars I was a game lead for the ninth first month of development, but I then left to help another team and now currently I'm working on a completely new game team as a game lead.
But I try to pick these practical examples from these adventures.
and go through them and maybe you'll get some learnings out of those.
Let's start with Hay Day.
Hay Day was released roughly six years ago.
It is a farming game where you build and manage your farm.
It is a game where you produce goods and then you sell them.
And you have this order board, which you can...
where you get these orders and you complete the orders by tapping the button on the corner there.
And you get the reward, which is coins and XP.
And you use those resources then to build your farm even more nicer.
So when we started Hay Day, our thinking was that, OK, there are some farming games on mobile.
But they were more like ports from other platforms.
And we wanted to make this native mobile experience.
And we also felt like the farming genre is actually quite cool, but many games just don't fulfill that potential.
And yeah, regarding Hay Day, there's like three topics I want to cover.
First one is like how we approach the UI design, then about the balancing of the economy, and then trading.
And I'm going to start with the UI part.
So as said.
We wanted to make this native mobile experience designed for touch devices.
And when we started that, we had a few core pillars in our mind for the UI.
So first one was that we wanted the player to be the main character.
And so what it means is that the player's action starts from the player's hand, such as planting seeds or harvesting crops.
And we didn't want to have any avatar in the game, which was quite normal at that point, at least.
We wanted the game to be as intuitive as possible, so follow real-world examples.
And, for example, we didn't want that players would collect coins from fields, for example.
And when you craft goods, the recipes try to follow real-world examples.
We wanted to represent things inside the game and avoid these floating icons, because we felt that it breaks the immersion.
So how we tried to represent the visual states in the game world.
I have a few examples here.
So here's a chicken.
And here's a pig.
And you can see the different states going from hungry, fed, and then ready to be collected.
OK, I said we wanted to follow a real world example, but.
In case of pig, we had a problem, like, how do you get bacon out of it?
So we wanted to be nice people.
And we are from Finland, so for us, the obvious solution was, of course, sauna.
So we have a big sauna in game, which helps you to extract bacon.
Makes sense, right?
OK.
About the UI thing.
So we had this idea of making a game for touch devices.
In the beginning, like, how exactly it would work.
So I actually found this PowerPoint prototype I did back then.
And from there, you can see how we approach this.
So player taps the field.
And then you use this tool and collect the carrots.
And that's it.
So it doesn't need to be fancy, at least.
Well, this was the only good tool we knew to use at that time.
OK, so how it ended up in the game.
So here, you can see player tapping the field, taking the sickle, and dragging the sickle to harvest the weeds.
And the action starts from the player's hand, as we wanted.
So what are the pros and cons for dragging-based UIs?
It is a very fun and natural way to interact with the world.
And there's this bonus thing, which is kind of side thing, but I wanted to mention it anyways.
So when you are dragging, it's possible to actually show some extra information.
So what I mean is you can see from the planting.
Now, player is planting the wheat.
And when you drag the wheat, you can see the number moving.
And that kind of shows you how much you have wheat left.
Can be convenient.
It is kind of hard to make everything consistent.
with dragging, you still need some tapping, and that's just reality.
There are menus, there are buttons to confirm.
And also, creating this kind of hierarchy is a bit difficult, because basically everything needs to be in one layer, and it can become messy and heavy for the UI.
OK, next topic was about balancing the economy for Hay Day.
So what I mean by economy, I mean the coins, XP's and unlocks.
So when in Heyday when player progresses, he gains XP which unlocks you new buildings and then you use coins to buy those buildings in your farm.
And why this is... yeah, I should add that player can play the game for several years and it's a long journey. So why this is important?
In this type of games, a player has these goals that I want to build the next building.
I want to do that.
And if the balance goes off, the game loses its meaning.
So we felt that it's really important to keep the economy in balance so that every time you unlock a new building, it is something that you can actually build, or at least it's like you don't have too much coins or too little coins at that point.
And in Hay Day, how do you get these coins?
So you have this order board, which I mentioned.
And here you can see the goods you need from the order.
And here is the reward for that order.
So when you fulfill that, you get the reward.
And now the question is, like, the starting point of all of the economy is, like, how do you value the goods?
What is how much you get when you sell a carrot?
How much you get when you sell a cream, for example?
So let's take a cookie as an example.
You get coins and XP by selling it.
And how much, of course you can just input some numbers there randomly and hope for the best, but it might make sense to have a bit more systematic approach to all of this.
So how we approached this was that we took the base fundamental resource to be time, which is quite a used thing.
So we said time is diamonds.
And what are diamonds?
They are the premium currency in Hay Day, but in here they mean more like an abstract quantity that helps us to balance.
and keep everything in control.
But it is actually the diamond value for the stuff as well.
OK, so time is diamonds.
But the relation in HEDA is not exactly linear.
They are not linearly proportional.
But there's this a bit more complicated function that maps time to diamonds.
And I tried to draw it there.
You see?
And what it means is that on x-axis, you have time.
And on the y-axis, it maps the time to diamonds.
So let's take an example.
If something takes 100 minutes, that would map to seven diamonds.
If something would take 40 minutes, that value would be five diamonds.
OK, now we have this relation between time and diamonds.
And how we use it in Hay Day is that we assigned for each good a diamond value.
And that's based on production time it takes to make the good and also.
the value of ingredients that are needed to make the good.
I'll break it down, so explain it a bit carefully next.
So let's take a cookie.
Cookie is made out of two wheats, two eggs, one brown sugar, and 60 minutes of production time.
Wheat takes two minutes to produce, so that would map to one diamond.
Egg needs chicken feed.
and 20 minutes of production time.
And all together, those would map to four diamonds.
Brown sugar, similarly.
Sugar grain plus 20 minutes of production time, five diamonds.
And then you bake the cookie in bakery, which is 60 minutes.
And that's six diamonds.
So when you put all of these together, you have a diamond value for the cookie.
And that's the premium currency value you would use, but also tells you how valuable this is.
So.
How to get from here to the coin and XP value?
Very simple.
We used just a multiplier for the diamond value.
Let's call it constant A. And then the XP goes same way.
We have another multiplier B, which you just multiply the diamond value and get the XP value.
So with certain values, we get something like this for the cookie.
OK, why this was beneficial in the first place?
It means that all goods are valued in a consistent way.
If someone creates a new good and puts it in their spreadsheet, you immediately have all the values there.
And the player experience is consistent.
And then the balance is very easy to tweak, because now we have this huge spreadsheet with all these goods, and we can just tweak A and B parameters, basically, and change the economy easily.
The diamond value was also used as a tool to generate the orders in the first place.
So how we do it, here's an example of order.
And it consists of a certain amount of goods.
And how we do it is when we set a target diamond value for the order, it could be like 100.
We want an order which is worth 100 diamonds, basically.
Then we generate this order by adding.
one to six goods, so different good types, and start filling the order one by one with these goods until we reach target diamond value.
And the target diamond value scales as player progresses, so you get bigger and more varied orders in the later in the game.
And then we spice up the reward a little bit.
So we shift the balance between coins and XP.
It's kind of a small addition to give.
It keeps the overall balance for the order in place, but it makes a little bit more of these interesting choices for the player to choose, like, do I want to make this order, which has more XP, or that one, which has more coins?
Some afterthoughts about this.
I think overall, this kind of concept of abstract value can be a great tool to generate the orders and also balance the economy.
And for player, it creates this consistent experience.
Note, however, that the real value for the player doesn't always match to the abstract value.
So for example, we have products like brown sugar.
It's used in many recipes, so it becomes almost like this bottleneck resource in the game.
But it doesn't matter.
Those things can give a flavor into the game.
And in practice, there's always these complications and messiness, exceptions.
And they are unavoidable.
And I don't think you should be afraid of those.
But they are on top of the system you have built.
So for example, the cookie actually is not 21 diamonds in the game.
It's 19.
But I don't want to go into those details too much.
OK, final topic in Hay Day I want to talk about is the trading.
So we wanted to have a trading in the game from the beginning.
But we wanted to be simple to use, work with the core gameplay, and then be a social experience as well.
So it meant that we didn't want to have a, let's say, stock market, which is kind of faceless and maybe a bit hard to use as well.
So how we approach this?
Each player has their farm.
And in the farm, they have a roadside shop.
And here, you can.
like put stuff on sale and set the price.
And if someone visits your place, they can just buy it from your roadside shop and pay the cost.
So yeah, through the friend list or whatever, you can visit your friends and check what they have on sale.
And when you place goods on sale, you select, of course, the type you want to sell, then the amount, and then set a price.
Price for the good.
And I would say like.
Looking back, I think allowing players to set the price was kind of a mistake.
There's two things which it leads to.
One is that players can generate a huge amount of money through the trading.
And then the other, yes, players usually just put the max price for everything anyways.
So it's kind of redundant.
But also there's this interesting thing that we didn't think about at all, was that actually bots can use this system.
So you have bot farms that can.
trade coins between accounts and create coins and all kind of hassle related to those.
There's also this button on the bottom part of the UI, which is where you can place advertisement for the sale.
And what it means is that we have this newspaper in the game.
And whenever you activate that tab, the product or the sale will go to this newspaper.
And now everybody who's who goes to check the newspaper can see these advertisements.
And now, this is a way how players can access not only their friends' goods, but also people they don't know, and get a bigger feeling of that there's more trading happening, and also buy stuff from players they don't know.
So now, if you would tap any of those, it would lead to the roadside shop of that player.
And then you can do the purchase there.
OK, this is more like a general remark for the markets.
So it's kind of obvious, but markets are two-sided always.
And so you have the amount of purchases, and you have the amount of sales.
And they need to match.
It's kind of obvious, of course.
But why I want to say it is that it's actually quite hard to create this balanced situation.
Easily, these markets are kind of unstable.
So you have like oversupply or undersupply.
So for example, in case of Hay Day, players want to buy stuff.
But it is kind of much harder to make them sell stuff.
And you need these two things to match.
How we approach that one in Hay Day was that there's like a few things.
One is that we actually limit the storage capacity.
But the additional thing is that we don't allow players to trash goods.
So only way basically to get rid of goods is to put them on sale.
So which will kind of drive them there.
And also we have a system which creates certain materials asymmetrically to the players.
And I'll explain what I mean by that.
So in Hay Day, you have these upgrade materials which are very valuable for the players.
They are something that you get when you harvest or do normal actions.
And they come as random drops from those actions.
And how do you use those items?
You upgrade your barn and silo with the items.
An important thing is that you need a set of items, so equal amount of those goods or materials.
So we divide the player to these groups.
In here, we have a group 1, group 2, group 3.
They all get the same materials, and they have the overall same drop rate.
But the percentages for these individual items, they are kind of permutated, which will make that some people will get more of something than the others, and which will, our hope was that it would kind of make people trade.
In practice, we have actually 27 of these groups, because there's more items and there's more permutations.
You can go, but you get the idea.
OK, the idea was that players would sell the surplus and buy the missing materials.
I think this only kind of worked to some extent.
So players are doing this with their friends, but these items are quite valuable.
So in practice, it's not always happening, but at least somewhat happening.
OK, putting this together, what are the pros and cons for the trading we did?
I think it is a kind of easy way to sell and buy stuff.
It is a personal experience, so you are always buying the items from someone else, which is important.
You can also discover other players through the newspaper, and at the same time you can visit their farms and see what they are doing, and maybe get ideas for yourself as well.
In practice, the newspaper is not always the best place to look for. If you are looking for something special, it might be hard to find it.
Also, for active traders, the coin balance is very important.
They can kind of ruin it by just doing a lot of trading.
And then we have the bot problem as well.
So this created a system where bots can actually exploit the system.
OK, I'm going to switch now to the next game, which is Boom Beach.
It was launched roughly four years ago.
And Boom Beach is a kind of build and battle game.
where you have your own island and you have your own base in that island.
And you have a map where you can find other players and bases and attack those.
And in the attacking, you deploy troops on the shore.
And the troops have an AI, and they will move.
But in addition, you have this gunboat, which you can use players to guide the troops and use different other gunboat abilities to help in your attack.
So there's a bit more control, perhaps, than in some other games.
with the attacking.
So when we started BoomBeach, one of those initial ideas was that why we wanted to do this was there was a clash of clans of course, and we felt like there's some more directions we can still explore within this genre.
And one of those main things was that clash of clans has this matchmaking system where you just press a button and you're matched against opponents, or then you have the single player map.
And it's very convenient and easy to use.
But on the other hand, you kind of lose this feeling of a bigger world.
And they are also separated.
And the other thing was the idea of the controls, that we wanted to give more controls for the player in the attack with the flare and other gunboat abilities.
So I would say those were kind of the main reasons we wanted to explore this genre.
And OK, I'm going to talk about, regarding Boom Beach, about the.
game world and a map, how we built that, and then about how we balance the combat.
So let's start with the game world and map part.
With this one, as I said, we want to create this more immersive game world where a player would feel it's not just like a UI but something else.
We wanted to introduce exploration element and mystery with that.
So there's always something hidden in the clouds, and you can find different interesting stuff.
It creates this nice feeling of progress when you play the game.
We also wanted to combine NPC and PVP enemies to a single system, which is your map.
But we wanted to avoid these typical problems that lie in these PVP map-based games.
And I'm going to say a few words about that.
So here's a Travian.
It's a super cool game with a map where players are actually placed.
And they have physical coordinates.
And if you attack, depending how far they are from your home, it takes more time.
So these maps can be really nice, but they have some problems.
Obvious one is when new players joins in, where you place them.
And typically, these games have one server which can host, say, 10,000 or 20,000 players.
And then you split them to these instances.
They are, like I said, they can't be scaled so well.
Not in space, but also not in time.
So when the time moves forward, the dynamics are many times quite unstable.
So power players dominate easily over time, and the world can become a really hostile place.
So we wanted to avoid this, but still create some kind of map, or at least feeling of map.
And the Boom Beach Massif is really a fake map, but it does it strict to some extent, at least.
So here's the map design, which the map is divided to these very ugly colored regions.
Sorry about that.
But the idea is that these correspond to these clouds that you can unlock.
And under those, you can find these different kind of nodes.
What I mean by nodes are like PVP opponents, like treasures, whatever.
And here's a map with all of the elements.
This is not like a real in-game picture, but you can see all the different elements.
Or it is from the debug field.
So there's resource bases, PVP bases, different type of things.
And what you should be thinking or see here is that it creates this element of scouting and planning.
Because you can see your opponents.
You can tap them and scout them and see how their base is built, and then decide how I want to approach this base.
So it's more like a puzzle almost.
You can attack it multiple times, choose your army composition, try different things.
So it creates a scouting and planning element to the game.
OK, of course, with this kind of map thing, the question is, how do you find these opponents in the first place?
And there's a PvP opponent which we match makes on your map based on the medals, which is like the trophies in some other games.
And there's like two ways.
One is through exploration.
So when you uncover the clouds and there's a PVP node, we matchmake the opponent there.
And if you clear it, then the node will be empty.
And we can then create new enemies from true invasions.
So what are these invasions?
They are like a way how we spawn enemies on your map or matchmake them on your map.
Okay, this is like a clear challenge with this one, which is that with the invasion system, like what's the right tempo for these invasions?
So if let's say you're a really active player and you play the game a lot, you clear out the map super fast and then you don't have anything to play basically.
So that's why, but on the other hand, if you are a player who's more casual and you play it every now and then, if you would just like pull the map all the time with opponents, it might be like too overwhelming.
So there's a lot of... it was a super hard problem to make the invasions work in such a way that it kind of pleases everyone.
And it doesn't. I think that is a thing that we can't get to work for everyone optimally.
And we have to make some compromises there.
But we still want to keep the invasion algorithm the same for everyone, because it is a competitive game, and it would be kind of unfair to change it for different players.
But it is a dynamic in a way that if your map is very empty, we spawn faster.
And if your map is full of opponents, then it's going to start slowing down.
And then there's the other problem, which is that how you actually get rid of these opponents you can't beat.
And there's an exclamation mark on top of the base.
And this means that the base is something that you can rematch make.
It breaks the immersion a little bit, but it was something we needed to include there to make it work.
Okay, how we tie this map to the story out of the world?
So it's a kind of unusual setting where each player has their own map and they are in the center of their map and everyone else are actually like enemies.
So all the other PvP opponents are represented as a part of this evil Blackguard movement and you are fighting against those.
So you get to be the good guy.
And then these empty nodes, we represented them as like native villages you try to protect.
So when the invasions comes, they take over these villagers and you try to protect them.
So it may be weird, but an unusual setting.
OK, next, second topic with BoomBeach, and it is about combat balancing.
And I want to motivate this a little bit.
In Clash of Clans you have a lot of walls and things, but we quite quickly realized that we don't actually want to have walls in Boom Beach.
There are several reasons, and one was that they kind of, how the attacking works with the flares and everything, they just didn't, and with the one direction of attacking, they just didn't work as well in the combat.
And with that, because they are like a huge amount of content in Clash of Clans and provides this long progression for years, we needed to...
have more content in somewhere else.
So we need to create a lot of upgrade levels for the buildings and for the troops.
So there's roughly 20 upgrade levels for most of the troops and buildings.
But now the problem is we have such a big journey, like how to keep it all balanced.
And so I'm going to explain now some of the things we did there.
So first of all, how the BoomBeats progress works is that you have your headquarters.
You upgrade that.
And it will unlock you new troops, new gunboat abilities, new defenses, and new landing crafts.
So the landing crafts will fit your troops.
And if you upgrade them and get more, you will get a bigger army that you can use in attacking.
And the defenses can be, of course, upgraded as well.
And they are tied to the headquarters level.
Now you have an armory, which is a place where you can upgrade them.
troops and gunboat abilities.
And they are all interlocked to the headquarters in a way that it limits all those max upgrades for each of these.
OK, I'm now going to take an example of Rifleman and Cannon and quickly show how these work.
So you have level one, and you have some amount of hit points and damage for those troops.
And level two, it increases, and it goes up to level 20.
Nothing too special here.
Note that these increases are always a percentage.
So you know that each level is a certain amount percentage more than the previous level.
And they stay the same through the journey.
And in a similar way, you have the defenses.
They have some hit points and damage.
And they go up to the level 20.
And here we have also some percentages.
They can be different.
And they are different for different buildings and troops, actually.
just to make the gameplay work as well as possible.
OK, now we want to have some control of the balance.
We would want to have a map each of these levels and different troops to certain value.
And for the attacking troops, we call it offensive value.
And for the defensive buildings, we call it a defense value.
So that's the offense value.
And for the riflemen.
The starting, it's kind of like the starting point for everything, something where you can compare everything against those.
So level one, Rifleman, okay, we just said it's 10.
It's the starting value for that.
Now you can take the cannon and see like how they compare.
So you can say the cannon has certain defense value, and now you put the Riflemans and all the units play against the cannon, and just by play testing basically you can see that, okay, the cannon is six times.
more worth than the rifleman.
So you could place there like a value of 60.
And then you can play the game for the max levels as well and find out that, OK, the max value has like offense value roughly 47.
And you know because they go like percent twice for each level, you can be sure that all the intermediate levels are you can kind of extrapolate for these two numbers.
And same thing for the max cannon level, you extrapolate.
and get defense and offense value for all through the progress.
OK, how we use these.
So there's a few things how we can now use these abstract values.
First of all, you can try to map the offense-defense balance through the unlocks.
So this is like a graph where you can, on the x-axis, you can see headquarter level.
And y-axis, you can see this abstract total power.
in your defenses and in your offenses.
And the lighter blue is the offense, and the darker is the defense.
This takes into account all the max upgrade levels at certain, so it's basically more huge spreadsheets, which takes into account all the upgrade levels that you can do in any level and all the unlocks.
And if you see, like, OK, the defense value is dipping too much compared to the offense value at certain level, we could perhaps unlock a new building there.
So it helps keeping everything in balance in that regard.
And also note that the offense value starts a bit higher on the early stages, but dips down later.
And that takes into account the skill of the player, which when you progress through the game, you learn to play the game better.
So we have to compensate it a little bit in there.
There is this extra challenge with the map we did, which is that we wanted to have the PvP and NPC integrated in the same system.
And it's easy to get enough content from the PvP side.
You just matchmake peoples.
But on the NPC side, it's harder.
The problem is how to make enough of that content, which would be in balance for the players.
Not too difficult, not too easy.
And creating thousands of levels by hand and balancing them was not an option.
And by the way, they don't need to be perfect balance, but having some rough scaling for the NPC levels would be good.
So how the defense value helps here is that, firstly, you can create any level from Level Editor, and then you can get the difficulty automatically.
So with Level Editor, you can do something like this.
And now the question is, OK, how hard this is?
But you can just check the buildings one by one.
Sum the defense values from these buildings.
And then you get the total defense value for the base, which would be here, 3,562, which is not the real case.
I just made up the number.
But you get the idea.
And this number now we can use to give some rough idea what's the base total difficulty.
And we can then match it to the player progress.
And of course, note that the layout affects the difficulty in practice.
But it will give a rough idea good enough, in a way.
And then you have how we use this also.
And this actually is quite a big part of the game at the moment.
And we use this defense value as a tool to generate levels.
So we pick an existing level that someone made by hand.
We set a target defense value.
which usually is higher than the normal one or the initial one.
And then we have this algorithm that places new defenses, maybe removes something, upgrades them, modifies the layout.
And we can do those tricks up to the point where we get to the target defense value.
And then, voila, we have an alternate version of an existing level.
And this defense value was also used to I don't, I'm not going too deep in here, but like the, we have these events which are also like fully generated by, by just algorithms and, uh, there the same thing goes, but like now, now do not have any existing, like a starting level here.
It's just like, it's them, it's them by code, but there's still like a target defense value and we can control the difficulty for these events to some extent.
Of course. Okay.
My last game I want to talk about is Brawl Stars.
And it is a game which is in beta still.
And it is an arena action game, kind of like a bit like a mobile or something, where you have a team versus team battle, three heroes on one side.
And in the game, you can play different brawlers or heroes.
We call them brawlers.
When starting the project, one of the guiding ideas was that we really believe that people want to play these type of games on mobile.
But they were kind of the perfect game we felt was missing still.
And we also felt like the session time should be really, really short.
And these were some of the ideas why we started the project.
Today here, I'm going to talk about two things.
One is about the hero progression.
And then about how we try to develop the controls.
Okay, what I mean by hero progression?
I mean that we wanted to guarantee that the player has like an incentive to play all the heroes, so brawlers, basically.
There's this like a typical problem with these competitive games and I call it favorite hero problem.
It's a really bad word, but couldn't come up with anything better.
Basically what I mean here is that You have a scoring which punishes for losing, obviously, because it's a competitive game.
And it's usually more effective to just to learn play one hero well, or one deck, whatever is the game.
And it's also better to concentrate upgrades on this one single hero, if there are any.
And so you end up sticking with your favorite one.
Why this is a problem?
Of course, it's not in a way a big problem.
A game can be really fun as well.
But if you bring out new content, it can feel irrelevant for the new players and all the updates as well.
And also, the other side is that actually, a player might want to do something else.
They can get bored in these type of games, because they're kind of locked into this, their favorite thing.
But it's just too risky.
The punishment is too big.
So this happens in many games, like I guess in Hearthstone, many more, like Clash Royale.
You face this similar issue a little bit.
How we tried to address this in Brawl Stars was that we had a, for each of these heroes, each of these brawlers, they have their own trophy score, which is used in the matchmaking.
So you can see, like, here's the trophy score for Brock here.
Then we just, like, we still want to keep the overall progression for yourself.
And that's just like a sum of all the brawler trophies, which is shown here.
In addition, there are different game modes and levels which favor different type of brawlers.
So it also pushes you to try to play different brawlers in different events.
An upgrade system makes it hard to concentrate on just one character.
There's one interesting detail about the trophy progress, which is that it's kind of personal.
And what I mean by that is that your trophy change only depends on your own trophy score.
So there's this table which tells you like if you are playing with a certain hero and it's a certain amount of trophies, you will get a different amount of trophies if you win and lose, depending on what's your.
personal progress. And the opponent's progress doesn't matter here at all.
So it's not like a zero-sum game in many games.
Zero-sum thing like in LOL, which is used in many games.
If you know it.
Okay, after thoughts about the system.
I think the positive thing is that it can...
It's easy to learn to play a new hero without any stress.
And it creates this fun and fast progress after unlocking a new hero.
There's no punishment to play a new hero that you unlocked or gained.
It does add some complexity to the UI, which can be seen as a downside, I guess.
OK, final topic about Brawl Stars is how we approach the controls.
And as you see, there's a tiger in the jungle.
So we kind of thought that, OK, yeah, we can do it.
It's a piece of cake.
Well, not a piece of cake, but at least something easy.
Well, not easy, but doable.
But it is a challenging problem to do an action game on a touch device.
And I'm starting to think that there's no perfect solution for this one, actually.
So the starting point for us was that we wanted to make an action game which is in landscape.
And the attacking direction would be from left to right.
And how do you control?
Would be by tap to move.
So that's kind of the easiest way to control.
And then the skills would be triggered automatically.
And so by some sub-triggers, basically.
But we quickly rejected this because we worried that there's not enough depth in the game.
Our second try, we kept the same landscape mode and attacking direction, and we had the tap to move.
So we had a now auto fire, which I mean that when enemies come close enough in the range, the character will start shooting automatically.
But then we had skills that can be activated by just tapping buttons, and then you would have cooldowns there.
We rejected this one as well, and the reason was that.
There's not feeling of having not enough control for the characters.
Third iteration was a bit similar.
Tap to move, auto fire, and then you had skills that can be activated and targeted.
So now the targeting is the new thing.
But again, still not enough control, yet lots of stuff happening.
At this point, we'd figure out, OK, let's think about it a bit more.
There needs to be more control in the shooting part, especially.
Or it doesn't need to be, but it just feels natural in this action-type game that you can control the shooting.
And we still kept the direction and started prototyping.
And we tried all kinds of things, like different joystick options, shoot button with auto-targeting, and many others.
In the end, after prototyping, some nth iteration, can't count anymore, we actually end up with something quite different, which was you would have a drag to aim.
So when you drag the finger, you open up this aiming cone.
And yeah, and now our direction was portrait mode, which was a big thing.
So we figured out that, OK, let's.
Let's change the portrait because it's a more natural way to hold your phone.
And the attacking direction became from bottom to top.
So tap to move.
And yeah, that felt pretty good.
We were like, yeah, let's ship it.
This is it.
But we proceeded to company playable.
And just to make sure, we added three different versions to compare.
and some of the few of those had like so different versions of this and also like a different joystick options and We got a feedback that like some really preferred the joysticks and some prepared like the control metro we had like a first thought so it was time to time to go to beta and How to go there so we decided to go there with two options First, use the drag to shoot, tap to move.
And then second, have this joystick to move, tap to shoot.
So these two kind of from those playables, some versions of those.
And then we divide the group of players to A and B group.
And just see, because we honestly couldn't say what's the best way to play.
And yeah, what were the results from this A-B test?
Very interestingly, there was pretty much no clear impact on metrics.
And I think like this is something that's happened over and over again.
Like we actually do very rare, like really AB testing in the company and especially for the gameplay things.
But when we have done it, it's like usually it's like no clear impact.
So, okay.
And you would assume that something like fundamental as this would show on the metrics.
But we had a possibility for the players to switch between these two control methods in the game, because we felt it's kind of fair to give them the possibility.
And interestingly, people switched more to the joystick over time.
And we don't still know exactly the results, but you can speculate that maybe it's related that it might be a bit more effective in some competitive play.
And maybe it's also more familiar for many players to use this kind of joystick-type control method.
So the decision for the team was to go all into joystick.
And because of that, it made sense to change the mode to landscape again.
But the attacking direction stayed from bottom to up.
And this is how it looks now.
So it's kind of like a dual stick.
It's a very recent update.
And there's been already some iterations on top of that.
But basically, this is it.
So there's a dual stick.
We just have this kind of like a little bit innovation on joystick side.
We call it trip stick.
It's hard to explain here.
But then we have a joystick for aiming.
And in here, if you drag, you can visualize the aiming.
And if you release, then it shoots.
We have also option for tap to shoot, tap to auto shoot, which is like a faster way to shoot with auto aim.
And then there's the joystick for the super, which you release to, in the same way you release to shoot, and then you can have a possibility to do the tap to auto shoot.
OK.
So what's next for Brawl?
Who knows?
But we'll keep on exploring.
OK, time to wrap it up.
So some conclusion time.
So I kind of made the case that game development can be seen as exploring a jungle and then in here game designing is about scouting and then I talk about my adventures in here, in the jungle.
Now, all of these examples have been quite different but I think there are some general themes between those.
One is that you can use this kind of abstract value as a tool.
And it was used in Hay Day and in Boom Beach to balance the economy and balance the combat.
And it can be like mapping something to an abstract value.
It can be used in many, many ways.
And I think it's good to remember that every jungle is different, and game development is full of surprises.
And especially if you're innovating and doing new things where you are lacking clear references.
And something that can first look like a really easy can be actually very difficult in the end.
And a good example is prole stars, for example, and contrast there.
And a perfect solution on paper might have unexpected consequences in the end, as Indy here witnesses when he picks up the statue.
OK.
Thank you.
OK, I think we have some time for questions, if you have any.
Hi there.
It seems like Brawl Stars has been the project that you've had in beta for the longest.
As a designer, what has it felt like to make those major iterations whilst the project's actually live?
So I've been actually like, I was in the early development, like a part of that, and then I've been helping other projects, so I've been only like following the side and helping from outside a little bit.
But I think it was just natural.
Like you try to make the game work as well as you can.
And I don't think Vita is anything like, you know, very different.
You just, you develop it inside the company, somebody put it out and then you keep on developing and try to make it as best as you can.
So I think it's a natural process of game development.
Right, so you don't feel more pressure on the design decisions?
Oh yeah, yeah, of course there is a bit more pressure because they're like a community and I think community has to be taken into account and it's really valuable also to kind of get their insights. But I could kind of think that you also you get so much valuable information there that it helps, but there is definitely more pressure, yes.
Thank you.
Hi, thanks for the jungle metaphor of exploring.
And also for the detailed examples, I was wondering when you start out new projects, can you start out from the small explorations of a single mechanic, or do you need a high-level concept first?
What do you do in Supercell?
Yeah, I think it depends, but I think it's good to have some overall idea, like what you're trying to do, like maybe who would play the game and what type of experience you're building.
But I think it's a combination.
Sometimes you can have some really good idea that you feel that you can build a game on top of that.
I think still I would say like a big overarching feeling like what type of genre you are doing and what is maybe the audience for the game.
I think that's still the most important thing.
Thank you.
Yeah.
Yeah.
All right.
I want to ask, if you can go into more detail about the decision of changing the latest changes, because as you know, Brawl Stars is now the landscape mode, and it used to be a portrait mode for long.
How this decision was made, or what would you guess would be a good time estimate for like, this is enough time we will try with this try for portrait, and now we'll go to landscape because we have to change it, or if you go in KPIs.
Thank you.
Yeah, OK, so the question was that like, what would what was the decision process?
Yeah, what's the decision process and when is basically enough field changing this and we'll move to the other?
I guess it also always depends on how the team feels, in a way.
They are doing the decision.
And yeah, there are many factors to it.
I don't think you can say you have to wait a certain amount of time enough.
But I think here, the big thing was that realizing that, OK, there are many factors to it.
joystick seems to be how many are playing, and then it kind of makes sense to go landscape because joystick is more natural in that position.
And then it kind of escalates to many other changes.
But yeah, it's kind of organic process, basically.
Thank you.
Hey, thanks for your talk.
A lot of cool stuff.
You mentioned that.
There was no clear impact on metrics when you A-B tested tab controls and joystick controls.
But with this new version, you changed the landscape and dual stick controls, but you removed tab controls, right?
Yeah.
And was there some impact on metrics, because new players, they are not...
I don't actually even know, to be honest.
Okay.
Probably something, but I don't know even which direction.
Yeah, so yeah, unfortunately.
Thanks.
Hi, my question is, is there a specific reason that you made the conversion between time and diamond not linear?
What's the design goal there?
Okay, that's a good question.
I think like, yeah, there is, and mostly, like there's two things to that, I think.
You can think in such a way that if it would be linear, like a very long production time would be way too expensive.
But I think the other way to think about it is that you can think there's two types of times for the player.
you are spending when you are actively playing.
And that's kind of those short session timers.
And that's more valuable for the players than those like, OK, I put the game down and go to sleep and it hates hours.
So it kind of makes sense to value those shorter sessions more.
That's how I think about it.
Thanks.
Yeah, hi.
Thanks for the talk.
Thanks for all those detailed informations.
I would like to go back to Hay Day from the beginning of the talk.
You mentioned that upgrade warehouses, all those currencies were developed mainly to enhance trading, yes? As far as I remember.
Before getting this idea, how did you approach warehouse upgrading?
It was just like normal material?
With all those experiences, if you would do it the same as you did?
So would I do it the same way? Would we do it the same way now? I don't know. I think like They all came at the same time pretty much. I remember if I remember correctly, so I don't think it so basically the trading and Yeah, I can't remember the order I think it was pretty much like the same things like locked into place in there at the same time So I don't know if what was the actual order of things happening Yeah, and I don't know if he would do any changes I guess sometimes it can feel a bit too frustrating to upgrade it.
So if there would be some...
I don't know. That might be something to think about.
Yeah, because I played Hay Day and it felt quite frustrating to me from time to time because I didn't have that many friends playing at the same time.
So it was kind of hard to get by.
Yeah, I think sometimes it's too hard to do the trading for those upgraded materials.
how to facilitate that better. I think it works in neighborhoods and it works with friends, but if you don't have that access point, then it is a bit hard.
I agree. Yeah. Okay. Thanks a lot. Thank you.
Hey.
Hey, and thank you very much for your talk. It was I start playing Brawl Stars since the like very beginning and I always was wondering That hey, these guys are using like two different control systems. So I was thinking that Which was the control shared?
I mean, which option was more popular in players?
And also I was wondering if you know, like, if players that was using one system were better than the other or they have higher winner rate or if you check this data or...
Ah, yeah.
I don't remember, well, in the beginning, of course, the population plays 50-50, because we did the A-B test in splitting them to two parts.
But then it evolved so that more players adapted to joystick option, and especially into a very high-level players, if I understand correctly.
And it is, yeah, it might be that it's a bit more effective, because you can tap so quickly to shoot.
But yeah.
That's how it kind of went.
But I don't actually know even the numbers, to be honest, exactly, so I can't say.
Thank you very much.
Thank you.
Hi.
For the NPC combat generation in Boom Beach, you mentioned that there is a method for creating a template and moving values until it matches a certain defense value that you wanted.
Is that how you end up doing the entire game?
Is that all the NPC are based on the templates?
Or?
there was some dynamic like just freeform generation that was non-templated?
Yeah basically like there's uh there's like a pre-made levels there's like several hundreds of those actually but uh then those are used as like a templates to some player might face like several thousands NPC levels so those are used as the seeds so first time you meet them they are like just a basic level but maybe next time you meet it it's kind of harder version of some of those earlier levels with some modifications so we kind of use them as starting points for the generation.
OK.
Yeah.
Hi.
My question is going back to Hay Day.
I like how you basically map diamonds to time.
But then how do you determine how much time certain things should be?
Like, corn should be x, because other things should be y.
And how do you know that, oh, this is costing too much of players' time versus too little?
It's a good question.
I think how we approach it, I don't think there's any right answer to that.
That the time is kind of the player experience and we try to make that like how many how much things take time It's kind of to optimize the player experience and then they are kind of mapped to these values automatically so we we set the times by just so that it feels good and But I would say like there's a bit of this trade-off that you want to make some things like a really fast in the progress like we for example super fast to produce but it kind of causes problem later song a little bit because it's so You can so fast to grind it, but it needs to be fast because it's the first crop that you unlock.
Thank you.
Also a question about Hay Day.
Let's say that you figure out that the ingredients for a mission add up to 21 diamonds.
Do you then give the rewards exactly for 21 diamonds or do you vary it a little bit?
Because it feels like if you always give exactly the reward that are balanced, then it almost doesn't matter for the player which one they pick.
So the baseline is always the same.
spice it up a little bit.
So we have this thing that the XP and coins, they are kind of, the balance is shifting.
So sometimes you can get more XP's from the same order, but then you are getting less of coins.
And then the other way around.
So there is this kind of randomization on top of that, which shifts the balance between.
But the combined value stays the same.
And adds kind of flavor to the game in a way.
I agree, it would be otherwise too dull, and that's why we kind of made it.
Yes, good question.
Okay, I think we are out of time, so thank you.
