Hello, I'm Michelle Jewett-Silva.
And I'm James.
My mic's on my drink.
You can stand on this, too.
Oh, cool.
Yeah, we're Ska Studios.
And we made a game called Salt and Sanctuary.
Thank you.
That broke some tension, that was good.
Yay.
So really the best way, like, without just saying stuff like, it's an action RPG, blah blah, it's really cool, the best way to round it up is just saying, it's 2D Dark Souls.
That's really like the best hook for like.
drawing people in to make it, to like explore it better and really get into it.
So we're, the whole studio is right here, wah!
Two people.
Two cats, technically.
It took about two and a half years to develop and this is our fourth major huge game.
Got it.
So yeah, in terms of what to talk about, it's one of those scenarios where you spend so much time in the forest and can't see the forest from the trees kind of things.
I had no idea what would be interesting, so I just said let's do the sexy thing that everyone does and crowdsource it and just ask Twitter.
So that's what we did.
And we got a lot of questions.
So that's pretty much, it's like a preemptive Q&A.
And that was, we kind of organized it a bit.
But just starting right from the get go, People love to see concept art and sketches, and really, unfortunately, we don't really do that a lot.
It's kind of sad because I love concept art, I love the books and all the really great visuals.
Most of our stuff is just done directly into the computer and put right into the game.
James does a little bit of stuff, basically when we're stuck in a metal box in the sky and have to be somewhere on a plane.
And that's what happens there, that's his sketchbook.
Yeah, I got my sketchbook, I brought that.
And then I do a little project that I call Monster of the Day, that every October I do a Monster of the Day, every day.
And a lot of that gets drawn into the game's horrible creatures.
So the map, the world map that doesn't actually exist in the game, it's much chagrin.
It's kind of it's right there like a weird stain on it. I don't know if you can see that So I don't know what the nature of the stain is but that But I made that on a plane and kind of followed it like it was backed.
And that's how it's like, so spoiler alert if you haven't played through the whole game, that's the actual world map of the game.
And it's very hard to tell, I guess, but it matches up really well.
It's pretty close, yeah.
A little bit of alterings.
So here's some more, just to go through more concepts.
There wasn't a lot of variation here.
You can just see it went straight from sketch to creature.
And this is some of my concepts of finish.
As you can see, my style is super different from James's.
That was my style.
There's me.
Look at that.
And there's Michelle.
She's really pretty.
I'm very clean and concise and pretty, which doesn't really work for our game.
But I have to work backwards and make it work with our sketchy, gritty style.
and yeah, there's some more of mine.
It's kind of a different style, but it's a bunch of armor set concepts.
Right, the setting of the background is another, like, how did this happen?
Where did it come from?
And we're just really in love with the song, Waste and Fire, and really, especially with House Greyjoy, and the themes behind that, where it's really nautical and, like, girty and sea salt soaking, and that's where we came up with the word salt, really, is drawn from the ocean and the power of the ocean.
Yeah, I'm kind of a geek for pre-modern science.
Before the advent of the scientific method, it was like, how do we explain this?
Well, it's probably a bit of fire and some gods, and that's where this came from.
It was figuring out things, including the supernatural as well as the natural.
Yeah, so the creeds and their religious themes are just really to set the world and give it more flavor and really explore religion and culture.
as a thing.
Yeah, yeah, it was like the whole concept of modern atheism was non-existent in this kind of universe.
And, because I have this like bugbear about Dungeons and Dragons where, you know, if someone wants to play like an atheist cleric and it's like...
That doesn't make sense in this world.
I mean, I'm sure you can make it work.
A little bit of that coming through there.
It's roleplay, but...
You know.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
But so that was that.
Now we're going to get to something interesting, again, with our processes and methodology.
We don't really have one, but we sort of do.
So that was concept.
And I like with the nuts and bolts, everyone's like, well, how do you, you know, what's...
What's, like how do you start, what do you start with?
And for me, it's always like, I just, it's like you have an imagined slice, and then you execute it.
You know, it's just, it's content, and then iteration becomes the execution.
For content, tools are a big deal, like I love talking about tools.
And then, you know, iteration is where you just keep working to make sure that your content matches that thing that you imagined.
Like, for instance, with the dishwasher, which was kind of like the first.
game that I made that was not horrible.
Like the scene I imagined was like, okay, what if it was like a Devil May Cry kind of thing and you could air combo someone and then like teleport up into the air and keep attacking them.
How would that play out?
How would that feel?
And then so Charlie Murder was like, I really like Punisher.
Alien vs. Predator Arcade, what if that was punk rock?
Salt and Sanctuary was like, what if we had a 2D fighter kind of game that took all these Dark Souls mechanics and how would that work?
Could you have custom armor sets, different move sets, different weapon sets, how would that all play out?
So those were the kind of imagined, it's like a little slice where you're like, that'd be cool, I want to see that.
And then now you have this problem where you're like, I imagined a thing, I want to turn it into reality, what do I do?
And then it's like, well I guess I have to, build all the tech.
So for Salt, that was the 2D animation system, the game world, loot system, probably more than that.
But that all requires tools and structures.
Tools, just the better, it took me forever to realize this, but the better tools you make, the better content you can make.
Because you're gonna spend so much time in the tools making the content, and games are mostly content.
And then.
create and iterate is really what we do a lot of.
It's you make the thing, put the thing in the game, and then see how it looks, and iterate, iterate, iterate.
That's how we do it.
Yeah, and then, so this is like an aside question that's just, the answer is just gonna be no.
But it's, you know, how much Porgumi junk did you plan out?
Do you use Agile, sprints, all these words that I just kind of vaguely can understand.
But no, we don't, it's just, it's all self-taught.
Yeah, so we do both have backgrounds.
I have a BFA and James has a master's in computer science.
You wouldn't know it.
You wouldn't know it.
No, I'm just kidding.
But in terms of the game aspect of it, that's all self-taught.
So I learned how to use Photoshop and how to get things into the computer.
And yeah, most of the challenges were just like adapting shaders to PS4, you know, but it was pretty doable.
Games mostly content, so maps and characters and animations, a lot of animations.
A lot of time was spent on that.
Yeah, so it all kind of comes down to identifying a type of content that needs to be in the game.
And then, you know, you could sit down and hard-code it and more power to you, but the way to really be able to be flexible with content and expressive and artistic is to make really good tools.
And then those tools become kind of, you know, it's like a paintbrush.
You know, you make a really good paintbrush and then you can make a better painting and so on.
And an interesting thing is when you're making these tools, a lot of the game logic that goes into the actual game is just created through the creation of the tool.
So what were those tools specifically?
And then let's start with the regular ones.
Visual Studio 2012, Photoshop, GarageBand was for music, Audacity, and then I used, it's XNA is still the framework.
I'm gonna keep carrying that torch as long as I can.
Long live XNA.
And then we used Monogame for PS4.
But yeah, for the custom stuff that I'm getting into, it's tools that I started working on in 2007.
A lot of them have like, most of the code is in common from what I made for Dishwasher Dead Samurai.
Like the character editor, I've carried that one forever.
but stuff like atlasing, animation, map, monster, loot definitions, the skill tree was a new one, destructibles was from Charlie Murder, dialogue editor, and then here they are.
They are.
This is our Atlas.
Atlas editor.
Editor.
Yeah.
And so I was doing development streams.
And people would be spending a lot of time in our tools, which kind of goes with my point.
That's where I spent most of the time, was just in the tool that I made for the content.
So I'd have a tool, and I'd be using it.
And then the viewers would be like, what's that called?
And I'd be like, well, it's the sheet editor.
They'd be like, no, it needs a better name.
So then we ended up calling this one.
So we came up with kind of a crowd source names for all these things.
So it's the cartographer.
animation tool is Skellington's.
Yeah, that's the one that's been like since Dishwasher Dead Samurai and it's been so improved.
So the tools also have been iterated and just worked on and worked on and they're so much better now.
It's basically assembling frames out of parts. It's all skeletal.
There's parent-child hierarchy.
Yeah, this is our first game that has had skeletons and hierarchy.
Our previous games were just like drag the thing a little bit.
It was parts floating in space.
Yeah, it was challenging.
Yep. There's our map editor. We called that Salmon Maps.
Yeah, so Salmon Maps was supposed to be like Sam and Max, but it's maps, so it's Salmon Maps, I guess.
Delicious.
It's a map editor and the whole world is one giant map, which we should have had a picture, but it's one big world.
I guess you saw the map in the beginning.
I got close to that, yeah.
Yeah, you got it.
Yeah, so our monster editor and our loot editor, they're kind of a similar thing.
It's just a place to organize all the metadata, like, you know, the value of things, like how much damage does this do, that kind of thing.
and then the smashables editor needs a name if anyone wants to help us with that. That one I created for Charlie murder. That's basically for representing how an object will destroy if it can be destroyed. So it would be like you create an object and create a bunch of sprites of the pieces that the object will destroy into and then painstakingly arrange them like a puzzle so that they all spawn in the right places.
Dialogue editor, we have never had major dialogue before, so this was a big thing.
There's about 55,000 words in the game, so we needed a tool for that.
That kind of got out of control.
But yeah, for dialogue trees, you can have parts where they ask you a question, and you can select an option.
Like an amount of limited logic, like you can have a flag be set after you answer something, and then they can change their dialogue based on that flag.
It's pretty limited, but it's just enough functionality.
Yeah, so the skill tree again, the skills thing was new.
We had a kind of very rudimentary version of this in Charlie Murder, but this is like major RPG.
We needed a big skill tree.
And that's what came of it.
And I was pretty proud of myself, because that was making an editor to make and edit one file only.
But without the editor, it would have been a nightmare to place everything and do all the connections programmatically hard coding it.
So just love editors.
They're a good thing.
All right, so Jason Z, he's an awesome dude who's been a longtime follower.
you know, what was like the first thing that you made for this game and is there anything that didn't make it in?
So we talked concept and then the tools, the foundation, and then the question is when do you go from foundation to content?
You know, you build all this foundation.
So yeah, the first enemy...
I misspelled.
That zombie guy, the berserker on the...
It's an S.
On the right there.
B-R-S-E, I just...
I guess so.
Yeah, he was the first guy and also the first AI and a lot of monsters had that carried over with a little bit of adaptation to them.
Yeah, because of the AI, you make it for that, now you can use the AI for new monsters.
And you can reuse parts of an AI to define behaviors, and then the behaviors you can plug into different monsters.
And so much of what feels like the behavior of a monster is defined through its animations, which comes from that tool.
It really, you start doing a few things and a lot of stuff comes of that, whether you like it or not.
All right, so how do you know, once you have a concept, if it's worth pursuing?
Because we always have ideas, and sometimes prototypes going on.
How do you decide this is the thing you should be doing?
And really, the biggest thing were our peers, people like friends who would check out early prototypes, and just being super excited and saying, this is something you need to do.
So.
Yeah, Biggest Catalyst appears.
And you can tell that this is fun to play.
And it's exciting to work on.
Like, you want to get up every day and immediately start working on it.
It's definitely scary, though, like, going from prototype to, like, this is the thing I'm gonna be working on for two years of my life.
On the technical level, because you don't know if the foundation is legal or not.
And then on the greater existential level, like is this really going to be good?
Is this really something we should try to make good if it's not good?
And are people still going to like the Souls genre by the time we actually get this thing out?
I feel like there must be people here who told us to go from prototype to invention.
Yeah, we've got some friends maybe here that were like, do this game.
You guys can say something or just keep it to yourself.
But I feel like there must be something, because we showed it around a bunch.
So what does a typical day look like?
What's it like working together with your spouse?
I like to be sassy and say, it's a lot like working with your co-worker, except you're married.
And a typical day is like, it's really good to have some kind of routine, like get up or drinking coffee, I'm answering some emails, and then dive right into whatever you're working on at the time.
you know, music, audio, animation, art, the maps, lots and lots of animation.
Like you like to do five minutes?
Actually the five is probably too much, I was going to change it and I did it.
I even said that when we rehearsed this too.
But yeah, at least a day on a specific task, because if you do too much task switching, the mental overhead to just kind of gather your bearings and figure out what you're doing is too much.
So if I was doing music, I would stick on music for two or three days at least.
if it was audio, it was that, if it was coding, or working on the map, working on the new monster, it had to be like, just stick to this one task, and then the neat thing about that, switching tasks after that was exciting.
Yeah, that makes the next thing fun.
Yeah, those dev streams that we were doing really helped keep us on task and working on.
things that we should be working on.
You're sitting around all day, and part of that routine thing is getting exercise.
Like, just sitting in one place all day, as we know, is not great for you.
As tempting as it is, because you really just want to keep working on that thing that's giving you trouble, and you're excited about it.
But exercise has been really good for just clearing your head, as well as idea generating.
Like, showers are sometimes good for idea generating.
our long runs, because we were marathon training last year.
That helped a lot.
And again, you'll hear this a thousand times, communication is key, really.
You just have to be able to communicate with each other and work out any troubles.
And one of the troubles that we had was, before this game, we didn't have source control.
As you can imagine, that is bad, super bad.
It used to be just me.
It used to be just James, so that's fair.
But I came on, what, like five years ago or something?
And this is the first game we had that had that source control, and that really helped.
Just for combining content.
Right. Like I would make something and say, James, put it in, please, and then he'd say, sure, sure, but he's busy doing his thing, and it just sort of gets ignored for a long time.
And then angry wife.
But we worked it out.
With that source control, I can put it in the game myself, and I don't ever have to be mad.
Yep.
All right. This is a loaded question.
Is Chris here?
No.
Yeah, so this is kind of a cool question about how do we walk the line of being a Souls homage without being a knockoff.
It was something we obsessed about a bit.
Because it's how you describe the game, but it's still very unique, it's still got its own identity, but at the same time it's like, if you're into Dark Souls, you'll love this game.
If not, we're probably going to waste our time trying to convince you otherwise.
And that's just reality.
But yeah, it was all about inspiration and identity.
And I started looking at it like you're just drawing from a landscape of concepts.
And these are concepts that come from everywhere and I've used them.
This bullet point of abbreviations on the bottom is Ninja Gaiden plus Devil May Cry is what became The Dishwasher, which was my first.
game that didn't suck, like I was saying.
And then the dishwasher in Dark Souls became Salt and Sanctuary.
You know, obviously much more heavily influenced by Dark Souls, but so many concepts of dishwasher, like that brawly combat was what it went into, into Salt.
And then since this, we've been playing a lot of Neo, and that's just so affirming and awesome.
I love that game, but it's also kind of neat to see how this landscape of concepts is making more content, and you know, it makes me feel good.
So balancing, difficulty of the game, when we're wrong, well that will lead into the next thing, but balancing the game, again, it just comes down to iteration.
There's not a science to it.
We are artists at heart, and we learn science to help us make the art.
So it's really just a lot of iteration, multiple builds.
Yeah, well there's so much emphasis on like different builds affect the play style. That's what I really liked about Dark Souls was how it's an action game but you can be like I want to try a mage build, a priest build, let's try pole arms, let's try heavy weapons.
And I really wanted to have that feel work where it's like we're an action game, you know these boss fights are going to be just intense and testing and if you try them with all these different builds it'll feel good.
And like, yeah, that's just what Michelle said, the only way to do that was just to sit down and play the game over and over and over and over.
So while a lot of people like it, I'm kind of sick of it.
But yeah, and also the critical path was unfinished for most of the development time.
So you get a little farther and then have to kind of start over again.
So I'm particularly sick of the early parts of the game.
And then also, an interesting thing with Dark Souls is so much of the fun, the excitement, comes from not knowing what's around every corner.
And when you're the developer, you know what's around every corner.
There's no excitement in discovery.
There's no excitement in fear.
So doing that, it's kind of difficult to, you eventually kind of convince yourself, this might not be good.
Will it be good?
And you end up with that.
It's hard to tell.
So what went wrong?
Yeah, okay, so what went wrong was, so Monogame, like I said, you know, we're going to carry that torch.
But Monogame did have some trouble with PS4 at first.
There were some stability issues, but like, we wouldn't have been able to put it on PS4 if not for Monogame.
But we did get yelled at a lot for the stability things, and it hurt our feelings.
That was no fun.
And then localization.
The biggest thing that went wrong was localization.
We did a major faux pas and released the game with basically Google Translate of localization.
Oops, don't do that.
Yeah, a lot of, you know, it was kind of like, let's lay the groundwork to support localization.
Oops, we need content.
Okay, let's use auto-generated content.
And then, oops, here's a deadline.
Maybe everyone won't mind.
Oops, they did.
And so it's been, you know, we're still fixing.
Yeah, so we definitely learned.
If you don't have the languages localized yet, just launch in your native language.
Don't fake it.
People will notice.
So what did go correctly when you do localization right, we worked with a publishing company, or publishing partner, Kakehashi Games, with our Japanese launch, and that was so smooth and successful and nice.
You can see, this is just Japan numbers on Steam, so you can see launch, a little bump, and then Japanese low, you can see like, oh yeah, when people can understand your game, they play it more, weird.
We don't know what that spike is.
We don't know what that last little giant spike is.
We're guessing an influencer, like a streamer or something, picked it up.
Like it didn't line up to anything.
It didn't line up to anything, so I don't know.
Sometimes you just don't know.
I thought it was cool to put there, though, because it's like without the loke, without the original thing, maybe that spike never would have happened.
So it's just a weird, you know.
Yeah, so we're actually still gradually getting localization implemented in correctly, patching that in.
And then here's a What Went Wrong theme.
Well, what did you spend too much time on that in hindsight probably wasn't worth it?
And this is something I kind of wonder about.
A lot of things I felt weren't super fleshed out.
Like I wanted there to be these really different differentiated creeds with different.
weapons and a lot of different magic and playing a different creed would have a really significantly different play through experience. I don't think I really got the picture I wanted to get. Same thing with doing sanctuary takeovers and working for leaders. They felt kind of filler. But then it's one of those things where I'm like, I don't mind filler. I don't know.
That's probably the most honest answer I could give about that.
All right, so this is the most common question, and it's really interesting and strange, but how do you stay motivated and focused and committed?
And it's interesting how many people, like how many people ask this question.
telling really.
So motivation, part of it is just being experienced.
This is our fourth major game.
Seven, eight years now I think of development.
It's a passion, but at the same time, our last game, Charlie Murder, super underperformed.
It was scary.
We had just closed on a house and we were moving from New York to Seattle.
Very scary, very scary time.
So part of that fear was a good motivator to have a good game that would sell and so he wouldn't have to get real jobs.
But the thing is most Indie devs struggle, like a lot of Indie devs struggle with this, with motivation, self-doubt.
It's a thing if you have that, you're absolutely not alone.
It helps a lot.
For me, it's...
Surrounding yourselves with other creatives, other developers, GDC, for example, PAX, it's really great to just listen and talk to other developers who are making things and making awesome stuff.
It's really great.
I always come back from these things like super recharged and wanting to make things.
and play other games.
So when all the new Souls games are coming out and Bloodborne and whatnot, we kind of took a break and just played the heck out of those games.
As long as the game isn't a time vampire.
Diablo.
And then my quick tip is to switch it up because whenever I switch from one mode to another, or if I try to add a new feature or something, it's funny because it's like going back to that thing how I said I added features that were kind of sucky, and now I'm saying, but if you lose your motivation, add a new feature.
Switch it up. It's a little bit conflicting, but...
It still works.
So, I think this is our last question, multi-part question.
Thanks, Annie.
What was it like working with Sony versus Microsoft?
We talked about the tools and how those translated a little bit difficult.
And Steam, PC is a new thing for us, which is strange because it's usually the other way around.
Like, Indies do PC first and then console.
We're a little bit weird.
Managing those multiple platforms.
We haven't done that before either.
It's totally new.
Okay, so we've got five minutes here.
Yeah, and then marketing.
Like, what did we do for marketing?
So, first of all, Sony Pub Fund.
It's awesome.
Yeah, it's awesome.
I wish I could say more about it, but we're not supposed to.
It's really awesome.
We had so much uncertainty.
Right, we came off of this generation switch from...
Xbox 360 to the new console generation.
XBLA didn't exist anymore and that was just soul crushing because that's what we lived on and that's how we made our living.
So, like, what do we do, what do we do?
And PS4 says, hi, we love indies.
So, that was just a really, really nice incentive and motivation.
Right, like having them backing us and then, it kind of took away all the fear of failure, which really just, I mean, it was affecting.
It gets to anyone.
But yeah, there were a lot of big changes.
We used to do first party publishing through Microsoft for like six years.
It was all just first party publishing through Microsoft, and that was really the only thing I knew.
And then going from that to Sony's self-publishing, it was scary and it was new and different.
It's probably why I thought we were supposed to do localization, you know, even if...
Yeah.
Because that's what we do.
Because Xbox had done...
Yeah.
...did the localization in QA and everything for us and it was new to us, that whole brand new world.
And Steam as a new platform, oh yeah, that's a thing, that's a really big thing actually.
And after seven years of console exclusivity, this is... Steam's so cool.
You can see all your data on there.
It's really easy to push an update.
The only thing is it's a little bit tricky now that we have to actually think about all these different platforms.
It's a little tricky, but you set reminders and remind yourself to do it.
Yeah, it's because it's Sony America, Sony Europe, Steam, and then Vita.
Vita is coming out.
It's coming.
We're really bad at self-promotion.
I hate to say that, but we think about it last minute so much because we're so focused on getting the game done and focused on the development of it.
Luckily, we are super lucky with this.
There's this huge community of streamers and YouTubers that are into these kind of games.
And they found us.
It all started with Bhatibidya, and he really sparked that powder keg.
It was amazing.
Sony, again, also was super awesome.
We got on the launch party promotion, and that helped a good deal.
Yeah, and their PR was great.
So, post-mortem is post-mortem.
Cherish motivation when you have it, seek it.
Surround yourself with your peers and listen to their advice.
So many times we just are left wondering, what do we do, I'm so lost.
Go talk to your developer friends, make developer friends.
Ask them advice and listen to it or not, but talk to people.
Don't release unfinished loke.
Don't, it's bad.
That was a big takeaway.
It was such a big takeaway that shocked us because we weren't used to it.
And also, just huge, huge thanks to all those content creators that really helped spread word of mouth.
Fans, gamers, Sony of course, and our friends and family.
I feel like without Sony just really having a lot of faith in this project, it wouldn't have, you know, I mean, it really like pushed it and catalyzed it.
It really helped a lot, so.
Yeah, that was awesome.
Thank you for listening to our talk, and I don't know if we have any time for questions, but we're gonna head over to the wrap-up room on the other side.
Do we have time for a question?
It says 419.
I guess, no.
I think we're good.
I think we're good, yeah, thank you.
