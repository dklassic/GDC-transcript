Hi everyone, welcome to the GDC Twitch channel.
My name is Brian Francis.
I am, as always, the invisible voice inside your head.
I just realized that I left the audio on this clip up really high.
I'm going to quickly edit that.
I always get surprised by that.
Yeah, my name's Brian.
It is 8 o'clock here in California, so it's a little early and a little tired.
Brian, isn't 8am early for most people?
Yes, or on nor- isn't that a normal start work time for most people?
Yes it is, but all of you still need coffee and tea.
So, uh, I, uh, see nothing wrong with that.
Anyway, um, I am here today, uh, playing Elsinore.
I should rather say I played Elsinore.
Um, uh, with me in the lower left-hand corner of the screen are two fine folks from the development team behind Elsinore, Golden Glitch Studios.
Um, I have Connor and Eric. How are you guys doing?
Doing well, how are you? Thanks for having us on.
Good. Yeah, I'm doing good.
Um, uh, what, I guess I could try and describe Elsinore, but do you both want to describe Elsinore?
It's pretty clearly, if you haven't guessed by now, there's some Shakespeare involved.
Yeah, so Elsinore is, Cliff Notes would be Groundhog Day plus Hamlet.
The idea is you're playing as Ophelia trying to find a way to stop all your friends and family from murdering each other.
But the problem is because they're all Shakespeare characters, most of the things you do result in them finding different ways to murder each other.
But every time through you learn more and more stuff that allows you to change the story in more and more dramatic ways.
Mm-hmm. Yeah, as you can see so what we're seeing today folks and I fold this full disclaimer on this usually Usually we try to play games live here due to logistical complications. We are looking at some pre-recorded footage, but that being said Thankfully, because this is an interesting game, so many interesting things are going to happen and we can talk about it.
So actually, yeah, let's get started.
We can talk about right here, we're looking at the timeline of events, which is really empty right now because we only know about one thing.
But this timeline feature is really cool.
It's kind of a defining.
mechanic of the game that lets the players study when things will happen, when they want to be in the game.
Would you mind breaking down, I guess, first off, how did Elsinore start development, and how did the timeline feature start to come about?
Sure, I'll handle the first one, and then Eric, you want to talk about the timeline?
Yeah.
Because that was like a huge tech problem.
So...
Elsinore started, a lot of us met each other through a club back in college called Game Creation Society.
And one month, that club had a contest theme that was Shakespeare, which was like, hey, make a Shakespeare-themed game in a week.
And our team lead, Katie, Katie Chironis, came up with this, basically the fundamentals of this idea during that.
And I was talking to her and I'm like, this is a great idea.
There's no way we're making this in one week.
And so we foolishly were like, well, we'll make it next summer.
And then we like tried to do a little bit like over the summer.
And, you know, we were still students.
And it was not there was not enough time to do it.
So we shelved it.
And we but we kept returning to it.
And eventually, you know, like I think a year or two after we all graduated, we talked about we had done this game jam with Eric.
That was the Molly Jam, where we made a game called MechaMom that people seemed to like.
It was a ridiculous comedy controls game where you're trying to hug your daughter in a giant robot suit.
And we started talking about how we should work on something together longer term.
And then we recruited Kristen as well, and kind of expanded out from there.
Fal, Duncan, Wes.
And that was kind of our core team.
And we've been working every Sunday to kind of slowly make progress on this game for the last six years.
And I was finally out.
Yeah, congrats!
Thank you.
Anyway, Eric, yeah, so the timeline picture.
I guess, so, before I tell you why we need the timeline, I need to say a little bit about what the game is doing mechanically with why we need a timeline.
So you can see right there the hourglass on people's heads.
Characters are running around and going to events.
So we put it in a virtual space where they have to actually go to rooms at certain times and meet each other.
So the way the game works is there's this giant bag of different events that can all happen predicated on different things and as Ophelia is talking to people and trying to influence them, you change what they happen.
And so we needed just...
some way for the player to be able to tell at all what was going on and what events were happening and that's what the necessity for the timeline came about.
And we spent a lot of time iterating and trying to get it right, like the forms you see here, I think I would say it was probably like the most changed UI in the game since I think it provides like the most useful information of all the things.
We actually made a huge revision, it was the, we made a huge revision pass shortly before release because we're like, it's still not quite doing what we want it to do.
I think the big, the thing that Eric didn't mention that I think is really impressive about the timeline is like, so our game is a simulation, right?
Which means, at least in the background, like all the scenes are handwritten, but like, as Eric said, like we're choosing events based on a bunch of variables.
And.
What that means is that simulation can change if you input new stuff, and we can't ever be 100% sure what's going to happen in the future.
And so, Eric— The timeline shows you the future thing.
Yeah, it's not a printout.
Those blue events that were on it before, it was giving you hints about what would happen in the future.
Yeah, so basically we simulate the entire game every time you open the timeline to show—to guess what will happen in the future, so we can show you future events.
Like it! It's like, you just stand there. It is what will happen.
As soon as you start doing things.
The timeline will change next time you open it.
Right on. I'm just going to quickly let folks in chat know, we are taking questions from chat.
If you have something you specifically want to ask about making Elsinore, quick shout out to Steel Fox, the Steel Fox, the one and only Steel Fox, I presume, for joining us. We would love to see some other folks.
If you have questions for Connor and Eric, go ahead, ask them. I don't mind.
I guess as a follow up, so the timeline and the simulation are really important to talk about because...
You know, you sort of have sold this game a little bit as a point-and-click adventure game, but it's not just a point-and-click adventure game.
It's got that simulation element to what we talked about.
What is sort of the underlying structure of making that simulation function?
And how did you wind up making it work on a Sunday, strictly Sunday schedule?
I guess that's a quick way to put it.
Yeah, so what you described as a good thing is we're trying to...
Basically combine the choose your own adventure in the simulation.
And like that's I think what got me really interested in the project.
And that was the first major hurdle.
And so what we spent a lot of time on at the beginning was coming up with a good way for Katie and Connor, the writer and designer to control this and like thinking about this, how these events could be scripted and how, like what the relationship between them was.
So we went through a lot of iterations where at first it was like.
You would just write in some JSON files being like, oh, this event, if it happens, then this other event can happen, kind of like a standard two-generator adventure chain, and it just didn't let us get the simulation bits we needed.
And so eventually what we turned to is a model where the game state and all the events we've built on it are built on top of sort of like the mental states of the NPCs.
So the things that you are changing as a player and the things that the events are predicated on, the things that they change, are like what Hamlet knows and what Hamlet wants to do.
So like Hamlet wants to investigate his...
Hamlet wants to avoid Hamlet.
What we did is we built a scripting language and a bunch of related tools to control that in all the scenes and specify how every single event changes and what they accept and what they don't.
I've actually spent a lot of time working on that aspect.
I said most of my time was spent building these tools used to control the simulation.
Yeah, and there'd be things where we thought we mostly had it down, and it's like, oh, no, wait, we really need a way to be like, hey, if you're on a pirate ship, you shouldn't trigger any of the events that are happening away from the ship, right?
Because then you're going to get dragged off to the castle.
Actually, I just fixed a bug where there was one that we missed.
But it's just like, you know, there's a lot of interesting spatial stuff there that we kept having to iterate over the system and be like, what are we missing?
like in order to flesh it out a little bit more.
From a narrative and design structure, the way we approached creating a lot of content was we kind of had two terms we used for events, which was spine and like plot clouds.
And the spine events was like.
The original spine was, is basically, hey, this is the play of Hamlet, right?
If you do nothing, these events are all structured to flow into each other without any input from the player, right?
And just for, just as a clarification for my own understanding, so the spine events happen because the behaviors were set up to trigger sort of the spine events of Hamlet.
Yes.
Not, there's a fix, it's not like...
So to say, you know, like the phrase hard-coded, like...
Yeah, no, no, no.
It's not hard-coded to happen, it's the core motivation to drive Hamlet.
Yeah, yeah, and if you can like...
Yeah, go on there.
I was like, you can see right here, probably in the scene, I think, because you're about to share something, and the last thing it's going to say something like Gertrude now knows XYZ.
Yeah, now wants to play Game of Thrones.
Or Ophelia now wants to... Yeah, those things right there.
What it's actually showing you is the game state that's changing.
Yeah.
That's then changing what the events are.
All those events are scripted in terms of those things.
Yeah.
We had quite a bit of discussion about how not computery we should make those.
Because fundamentally what they're doing is they're exposing the computer system.
And the more less computery we make them, that was a convoluted sentence, but anyway, the less obvious it is that it's actually a systematic thing that we're showing you.
So, uh, yeah, this is what we ended up here was like somewhere in the middle, right?
Where they're written out, but it's still like you can still kind of tell that like it's it's reporting a state back to you.
Um Yeah, no, no, no, um I'm watching what you're doing in the stream. You're talking to uh to Rosencrantz and Guildenstern Yeah, uh Rosencrantz and Guildenstern are two really fun characters. Um, obviously There's precedents for having fun with Rosencrantz and Guildenstern, with Rosencrantz and Guildenstern are dead.
And we definitely had our own brand of fun with them in that they're like...
They are, they get up to, you know, they're kind of disconnected from the main conflict, and so they'll end up having their own weird side stories.
That was actually a big part of the fun of working on narrative and design for this game was like, even when we're talking about those events that flow into each other, by default, There's a bunch of them that aren't in the original play, right?
Because you had to answer the question of like...
We're gonna see some later in the stream, by the way.
We're gonna see stuff that's not in the original play.
Oh yeah, I don't know. There's a ton once you start actually changing things.
But even if you don't change anything, there's a lot of questions like, what does Gertrude get up to when, like, she's not on stage in the original play, right?
Like, Brit and Irma are two characters who would be around the castle, the cook and the handmaiden, but like...
You don't see them in the play, so there's stuff around them.
Oh yeah, so this is part of what we did in the first loop, which is like...
Originally, when we were in very early stages of this game, you were able to immediately start changing everything.
And the problem we ran into very quickly with that is players would think they were responsible for stuff from the original play.
And there's this thing of, if you're in a time loop trying to change something, You needed to understand what you're changing.
Yes.
So we went through a lot of iteration trying to figure out what's the right amount to like...
We still want the player to get that sense of like they're able to change stuff and you are able to change stuff, right?
But like, in this first loop, getting through the main events of Hamlet and getting a sense of what the stakes are and who the main players are, enough so the second time through you have some action items instead of being kind of directionless.
Yeah.
Yeah, I noticed that too.
Because like when you start up this game, you get to go through...
And I thought it was actually very touching.
It was very touching in a sense.
You get to see Ophelia's perspective in Hamlet.
And the sense of being locked and railroaded towards her own death is a really good thematic note to start the game on.
Yes.
Because it's a very good incentive for her to fight and scramble against that.
I would love to keep diving into my own design questions and programming questions.
I'm going to quickly go to chat.
I'm going to give a quick shout out to VtechieM.
I recognize Vtech from Shell Games.
Giving you a quick shout out.
Well, hello.
It's Mike.
Yeah, I was going to say, it's your own co-worker.
Yeah, Mike.
Yeah, yeah.
Yeah.
Yeah.
I am thankful.
And a quick shout out to Skylander12 would like to know, why was Hamlet the source story for this?
As opposed to other Shakespeare stories or other literature.
I know we have to give a lot of shout outs to Katie and Koronis in general.
Is it Koronis or Chironis?
I've known her for a very long time, but somehow that question just scrambled my brain.
I, like, it's Sharonis.
Yeah, so, Sharonis.
So, Katie Sharonis, we should give her a quick shoutout.
We're gonna have to, like, we're gonna have to give her a shoutout for a lot of these things.
She's part of the reason we're streaming. She helped get me in touch with YouTube.
She has answered some questions about this on her own Twitter feed, and I would strongly recommend folks check that out.
But Connor, maybe you'd like to tell that tale.
Yeah, I mean, it's basically like...
One, we were both, Katie and I were both humanities majors, right?
We were, we were, I think, at the moment of this reading, doing a class where we're talking about Hamlet a lot. So it was prominent in our minds, but also for Katie personally, like, she's told, and this is the story that she kind of told on her Twitter, like, she, um, will, she, when she first read Hamlet, she, as a young kid, she always felt like Ophelia got the short stick, which she did. Her role in the original play is to, like, have her heart broken and be harassed by Hamlet and then die, right?
And yet there's all this literature and all these people who have studied Ophelia and read into her.
And basically it just felt like a good opportunity to give her a new lease, I guess.
And also Hamlet is my personal favorite Shakespeare play.
So that's, I think, a reason to pick it.
It's not as...
Oh, a good reason, another reason that I think Hamlet works very well is there's two very clear characters that drive the conflict, who in this case are not you, which works very well for simulation engine style gameplay, right?
It's Claudius and Hamlet.
And like, and that means that like you're kind of, you're in the middle of the tug of war between these two characters, and that lends itself very well to the game that we made.
Yeah, Eric, do you have anything to add to that?
I think so.
Yeah, yeah.
Yeah, Eric, actually though, while talking, swinging back to Simulation Engine, I think we can swing back to you.
We talked before about how the Simulation Engine is driven by everyone's wants and needs, which is kind of appropriate.
This game started development, I know you weren't part of the original team, but obviously a six year game development cycle means it's been...
A lot of other games have come out with interesting simulation engines in the interim.
But even before that we had Dwarf Fortress as kind of the one of the urr Simulation engine games you've got I guess there are some way back. I'm I I just want to quickly correct that notion Katie and I were like tinkering with vaguely Elsinore ideas but Eric and Kristen and Val were very much part of the team from like early enough to be the original team.
I think six years ago is when the team was formed.
Yeah, yeah, yeah. So like, yeah. Six years ago is when the team formed.
The initial tinkering was like eight years ago.
Right, right, right.
We're talking about, we're talking about Thor Fortress and simulation games.
Yeah, yeah, sorry.
My bad. Uh, yeah, no, that's a good thing to correct. Um, anyway, yeah.
So six years, so like it's been a lot of simulation games have grown and grown.
Um, Watch Dogs Legion is now like, like AAA games have decided that simulation games are going to be part of their bag.
This was something I was seeing a lot of at E3 this year.
How do you feel...
Well, no.
The question was weirdly veering towards, how do you feel about everyone else stealing your thunder?
That's not what I want to ask.
Eric, it's more like, what do you think is becoming more possible with simulation games?
And what do you think other developers should know about working in this field, based on what you've learned as a programmer?
I'm the... I'm not quite...
What I feel is, I'm really happy more than we're showing up.
So, the... I kind of hinted at this earlier, but...
What?
The interesting problem in this space is controlling them.
Like, I really love Dwarf Fortress, for instance, just like I mentioned, and a bunch of the other ones.
I also like a lot of the Paradox games, too, which I think fall into this category of kind of like these just open-ended simulations where you do stuff and they will sometimes tell you interesting stories.
And the main challenge with those is that sometimes they don't, sometimes it's just boring stuff.
And so the question is, as a designer, for me, at least especially with this, it's like, this kind of game is.
How can we make it possible to build this simulation game, but kind of force it to constantly be showing the player interesting or exciting stories?
Yeah.
Like as often as possible.
Yeah.
And this game was an exercise of how can we best balance a choose your own adventure, sense of control of the pacing and what's going on, but with an open-ended simulation to like actually get like a pretty rich.
state space of things that could possibly happen.
The fact that one of our objectives was to constantly skew towards tragedy helped a lot.
Yeah, I actually...
What, what, what am I initially...
This is not, this is not what this game is at all.
One of the initial ideas I said it about, like, between what we'll make some other day, is a game that just sort of like maliciously makes the outcome as bad as possible, no matter what you do, in a way that's like technically compatible with what you know so far.
Maybe that's just the Richard III simulation.
You use the same engine to make a Richard III play and everything ends with people getting cooked into pies.
Yeah, there's a lot of actual work. Both Kristen and myself come from academic backgrounds.
I just finished a doctoral degree.
There's a lot of work in that space on these kind of...
I have to give a shout-out to her advisor for example.
He wasn't involved in this project, but he's in that kind of space of intelligent narratives.
Trying to get the computers to be a little more...
A little smarter about how they're presenting a narrative to you, so you can try to do these things like intentionally keep the story exciting, or try to make up stuff that's compatible with the facts that you've been given so far.
try to lead to particular outcomes.
And so there's a lot of people working on this at very different levels, not just in game development proper.
Which, I'm excited for a lot of the stuff that's going to come up in the future.
Um, uh, one thing, one thing that we're about to, that we're, I don't know if we're sort of experiencing right now in this playback, but, um, you just mentioned something interesting, which is like keeping interesting things happening.
Uh, I think, I think something interesting about the, the simulation engine kind of game is the concept of, I guess you would call it dead air, which is what is happening when essentially nothing is happening.
I'm sure during development you were getting a lot of feedback saying nothing interesting is happening right now, how can I make the interesting things happen.
What was your...
After you designed the engine, what did you guys learn about teaching players to find and instigate the interesting things?
Because one half of the game is the stuff playing out, the other half is walking up to someone and telling, I saw Claudius confess that he killed Hamlet's dad, like we're seeing right now.
And Bernardo's just like, nothing I can do about that.
Yeah, so part of that is presentational.
Like a lot of the things you see in the map, there's nothing on it right now, but sometimes the rooms are blue on the map, and they try to surface very strongly where the things were happening.
Because that was a really big problem.
Like when I would be playing the earlier prototypes, it's like, what do I do?
I guess I'll just follow Hamlet around all day.
Which will sometimes do interesting stuff, but a lot of it you're just following Hamlet wandering around all day.
So we try to like, there's like hourglasses on people's heads if you see them walking places, there's the events on the map, there's the timeline for the things you know about.
So we tried to present this very strongly to give you a sense of where can I go right now to find stuff.
There's also, I think, a lot of just trying to create little things.
When I was talking about plot clouds, we also had like flavor events, right, which are like...
Little things that aren't important to the overall story but develop characters, right?
Like, just the little- that they get up to when they're not doing something else.
And those are kind of designed to fill in gaps in the schedule and be shifted around freely.
Um, so like, we tried to lean into those a little bit, and that like, there's usually, if you're waiting for the next big thing, there's something to do.
Whether it's characters to talk to, or things to look at in the environment, um, to like- to occupy your time.
And then of course, once you're in the later loops, at that point you have a very strong mental model of like, you've learned how to kind of manipulate the system.
And then we see people using the fast forward feature more, right, like going to specific events they want to go to.
But a lot of those things I just talked about help bridge that gap early on in the game.
Like you can see here, you're just talking to everybody and like, yes, a lot of those things don't have results, but it's better than you just standing around, right?
Like.
And like, even then, like, if they don't have simulation results, you're getting pieces of information that inform, like, your mental model of the character, that could help you—a lot of those give you, like— Hints on like how you'll solve future things or how you'll deal with future scenarios.
Yeah, this Brit moment is actually about to be very telling about that.
I'm going to go to chat for the app named Marcus Loralius.
They have a question.
They've played a few hours and they've been enjoying the romance subplots and options that are showing up and they wanted to know if that was something you knew you wanted to include early on or if it came later.
We knew fairly early on, yeah.
If you're going through a loop over and over again.
One of the questions you're going to ask yourself is who can you smooch?
And like, so we let you smooch a bunch of people.
And other people smooch each other.
Yes.
Yes.
There's, there's, there's plenty of shenanigans that go on in this four day loop.
There was actually an interesting, Katie's talked about this a little bit, because it's a four day loop though, there is sometimes we have to like fast forward the romance a little bit, right?
It's like, uh, and, and that's just an interesting.
Interesting scenario that you'll write around and I think she did a pretty good job She thinks you did a really good job, but it was a really hard writing problem. Yeah, there's a there's a it's a bit of There's some whirlwind romances that sort of yeah kick up Thank you for the good question questions from chat folks, uh, we will gladly Take more throughout the hour What I am going to ask about now is, um, so, uh, something that has interested me about games like these is what happens when you sort of make outlier events that are sort of like, you know, like combinations of things that are not going to statistically fire very often because they require complex sets of variables.
What was sort of your guys' plan for testing and implementing those in a way that felt organic, I guess?
That like, you could implement it in a way that like, okay, when players really work themselves into this corner, it will fire, but then when it...
And it will actually fire instead of just suddenly putting a fox in the middle of the room or something or some other weird bug.
That's a question I think I would like to know more about.
Yeah, so I guess there's a lot of little tiny...
Things that we can talk about we did.
Like one thing, for example, is that the events are not static and that the events themselves have a ton of like little variations inside of them based on the state.
So a lot of the events can accommodate vastly different...
Sometimes the events still work even if a bunch of the characters that are supposed to be in the mode die.
We did a big pass to be like hey, a character's been mentioned. Are they alive?
Writing alternate lines for like this character's dead versus this character's alive.
Another thing we did was try to intentionally make the simulation resilient to winding up in particular bad scenarios.
So some of it was using sort of like...
shortcuts to help control it, like for example, one of the pieces of state is that characters can become upset or shattered as we call it in the game, and it's just sort of a proxy for like, this character is effed up enough right now that most of their events are kind of bad, so like most of the main events are predicated on not being upset, it's a good way to kind of like control that at a wide level. And another interesting thing I want to mention about how we did this is the simulation intentionally tries to sort of prioritize important events. Like Connor mentioned, there's these background flavor ones.
There's actually a hierarchy. There's these background events, above them there's typical events that would be for these plot clouds or these sub-arcs.
And then there's these spine ones up top. And the simulation knows that it's not supposed to start.
one of these less important events if it would conflict, like, like the characters of the room with one of the spy events in the near future.
So that way, like, the mid, like, it never just, like, completely jumps off the rails.
It kind of, like, stays on track with this volume.
Before we had that, like, there were, you could get things like, oh yeah, you managed to save everybody by just making it so the play never happened because you kept pushing it back with all these little, like, small, like...
Oh yeah, and they needed to go for a walk.
We had one way back when where the entire invasion of Denmark would be delayed because Gertrude and Horatio were talking about their lives in the grounds.
And then the invasion is like, well I'm supposed to be in the grounds, so therefore I can't happen.
Yep!
And like...
Yeah, the invasion doesn't know anything about it.
It's just like, it's a pack of events that involve characters and rooms.
I gotta wait for this room to be free before I can have it happen.
That's some Monty Python level comedy.
Oh no!
But when this, at this point, the game's like pretty like I've watched a lot of people play through it and it's hold it holds up pretty well.
But there are sometimes extreme edge cases where I'm like, well, that's a hot fix.
Right. And they're always at this point very entertaining because they're really out there, which is why I only see them like I've seen them, I think, in one stream out of like 50 that I've watched.
Yeah.
Avis would like to know, what are the funniest bugs you've all seen on that subject?
Let's see.
I mean, like, the ones that show up now that are fun, like, the main kinds of bugs that are...
you can still see in the live playthrough that we're patching now is where we didn't consider...
all the things in the... in all the possible states a scene could run in, and so you'll see some totally just nonsense things players say, referring to dead people, I think somebody was planning their own funeral after their funeral happened.
Yeah, uh, this is... I didn't want to talk about this one because it's still in, but we're fixing it. I have the fix.
But whatever.
Uh, Gildan's turn, if, it's certain, under certain things, she'll plan her funeral.
And she'll be like, it's a great plan!
And then if she finishes that, you talk to her about one of the other things that triggers that, and she'll plan her funeral again.
And like, you can get her to plan her funeral like three times in one loop.
And like...
Oh, and finish the loop!
So like, yeah, yeah.
But yeah.
Yeah, the way that this loop just ended, the like, one of the things we did with the structure of this game is, Ophelia does not kill herself.
Yeah.
She doesn't kill herself.
that just doesn't...
One is it's kind of actually ambiguous in the text, whether or not that happens.
So this is like a compatible with Shakespeare's Hamlet interpretation of what's going on.
But two is it's just like really weird to have the player character forced to commit suicide for a lot of reasons.
And so what happens instead is she's murdered by a mysterious figure, and kind of like the first...
like ARK challenge for players to overcome that's presented to them now is to like not get murdered at this point, figure out what's going on and stop it so you can stay alive long enough to watch everybody else kill each other instead.
Yeah, we're leaning on hundreds of years of academic conspiracy theories, which one of the things that was great about working on this game to return to the why Shakespeare question is like There's a like we didn't, you know, we were very much forging our own path and making our own decisions, but there's definitely like a lot of decisions we can make we can point to like, oh, yeah, well, there was this paper if we wanted to and it's like, and they believe that Ophelia was murdered by Gertrude, which is not But anyway, moving on.
That's kind of the interesting thing about the staging of the text is um, yeah, now we're getting weird into like, what does it mean to stage Shakespeare because you guys are technically staging Shakespeare, even though you're not out in Griffith Park with the light with coyotes howling in the background and yeah, a bunch of actors pantomiming you're um, but even in those interpretations, like there's a lot of leeway, like I watched a production of, um, Uh, one of the comedies last summer that ends in everyone getting married, but in the Shakespeare play, there's definitely one character who's still screwed over, um, in the middle of it, and they ended it with a...
not original dialogue, but they used a dance number, sort of, to turn the moment around and to let her get her recompense.
But it's a... you guys get sort of, like, permission to do that too in these ways.
Yeah.
To remix what's already on the page.
Yeah, the way we viewed it is if there wasn't anything, and even some things that were explicitly on the page, but like anything that details that weren't filled in, we felt we were willing to fill them in like in ways that would make the most interesting story.
Yeah, that involves like, you know, giving characters a lot of different backgrounds that come up and come into play in the story.
Had developing relationships between characters that never spoke in the play like we're about to see like Horatio will ratio and Gertrude talked to each other a lot.
Things like that.
This uh, the Quince the Playmaster, is a strange time looping gremlin himself.
I don't really mean time looping, he just knows the loop is happening.
Yeah.
Let's see.
We needed a character for you to talk to about what was going on, because otherwise you're kind of like, you've got no one to confide in.
Yeah.
Um, uh, right on.
Uh, we are halfway through our hour and we are still taking your questions about the making of Elsinore.
Um, thankfully also, um, thanks to my past self, uh, things in Hamlet are about to go really off the rails during this next half hour, so I urge you to pay attention.
Um, uh, uh, moving, uh, my next question, um, Katie Chavranis has also tweeted about, um, how, uh, your guys' Kickstarter backers are really cool and great.
Um.
Y'all went to Kickstarter, you managed to raise some funds to help you develop this game.
What was working with Kickstarter like for you two?
And because it's sort of a thing, I've talked to a lot of devs who talked about how it's changed their development process a lot.
I talked to one guy from Uber Entertainment a while back, and he was like, instead of having one publisher, we now have...
5,000 publishers.
We don't in fact have another bigger publisher, which is nice.
I will say, so what I like, just to give context for the Kickstarter, I want to say that we are in the extremely fortunate privileged position that all of the primary people on the dev team have different day jobs, so none of us needed, like, funding to eat during the development of this game.
We would have needed a lot more if that wasn't the case.
Yes, so our Kickstarter was...
to try to help us raise money to pay for the things we had to pay for to develop it so we could actually make it possible.
But we didn't have, like I said, there wasn't the stress of if this Kickstarter fails, I'm in a lot of trouble and have to get a new job.
It's like, if this Kickstarter fails, we have to dramatically scale back or change or maybe abandon the project, but that's a different level of thing.
So...
So I think that heavily influenced how I felt about it.
I mean, gosh, it was so long.
Was it 2014?
There was never any danger of us needing to tell the backers that we ran out of money, which reduces a lot of pressure that I think a lot of Kickstarters run into.
Because we're like, we have our own streams of income, and we spend all the money.
We're on voice acting and composers and all those things, but we could sustain ourselves for as long as we needed to finish the project.
But we did have to tell them what did happen. It kept slipping, obviously.
Yeah, yeah, yeah.
We were optimistically hoping to get this out three years ago.
It was always early next year.
Yeah. But because we were in the position of not needing to ship this game at a particular time, we always took the approach of making it...
good enough to release, like making the thing we felt that would make players feel the best about playing it and not just getting something out at a particular date.
We tried to be really communicative with the backer community about what's going on at the whole point and show them.
We gave them a sort of like, sorry we're late beta build in 2016 or 2017, I think.
Yeah, we continue to update.
To see the current progress, and yeah.
The, uh, which we, and then would get great.
We actually had a feedback form in the game that people could submit notes.
And that would also help illuminate, like, what are some of the things that jump out the most in our simulation of like, not quite working or what are the things that are already working pretty well?
It's kind of like having an early access game, honestly, except like early, just like with our backers, like a big early access period with our backers and they were all like super great for like.
trying it out, even though it was full of a ton of bugs.
I remember, like, I think one of the versions we shipped, just, like, didn't even start up if you didn't have a save file, just like, it's gonna crash.
So they've been, like, really forgiving, putting up with us, and giving us a lot of, like, really great feedback.
That bug was specifically engineered so none of us could catch it.
It was not only if you didn't have a save file, it's if you never had a save file ever.
Like, so we could delete our save file and not run into it.
So, in other words, a new, a brand new player.
Yeah, yeah.
Like, so, uh, yeah, um...
It's been wonderful. I think, yeah, we just tried to update them any time something happened, right?
And again, it was like, we'd tell them, like, hey, they all knew it was a nights and weekends project, right?
So, like, if we give them an update, it's like, hey, like...
Eric and Kristen are getting married. We're probably not going to get any work done until, like, they get over it.
Sure, I didn't get any work done.
No, the wedding's a game jam now, right?
But, yeah, like, um...
And they were always very understanding of that scenario, right?
Our kind of unique situation.
Because we were constantly transparent about it as well.
Yeah.
Akimba B would like to give a shout out to you two real quick and chat.
I don't know.
I don't know.
For once, I don't know who that is.
I know who that is.
That's Kwame.
He also worked at me at Shell.
I think.
I could be wrong.
Right on. Moving on from that question, so we talked before about how this is a part-time developed game, six years of part-time development. I think a lot of, like, I've done a lot of, like, in my own time work, I sort of got started in doing this kind of games, interviewing devs work as a part-time work for sure, but I'm really impressed by the commitment to one day a week of dev work for your team. Obviously with, you know, exceptions for weddings and events and that kind of thing.
Um, and for such an interesting result to kind of pop out of it.
Like, there's parts of...
This is me, like, giving feedback before answering a question, I guess.
Like, giving my feedback as a player. Sorry.
Um, uh...
It's interesting, like, playing it, I can, like, sort of...
Just because I'm, like, weirdly tuned to these things, like, I can sort of, like, feel like, Oh, like, I can sort of feel out here, like, this is kind of a thing that, if this was a full-time project for a team...
Yeah.
...trying to make, like, this thing here would be something that was...
or this thing here, would be like something that would...
like, you know, like, sort of, but at the same time...
what I'm playing from a part-time view, I'm like, this is cohesive and thought out, and the art polish alone makes it feel like it could have come out any year in the years that you all were working on it. Like, any year it came out, it would have looked fresh.
And any way the writing is sharp, so any year the writing came out, the writing would have felt fresh.
But at the same time, you are sort of in a weird bubble where you're moving this project very slowly forward across six years while watching some of your peers, whether you're working with them professionally or just friends with them, shipping work.
You know, sometimes six years is either one game or two or three games, depending on who you ask, or six games.
Or if you're Rami in GameDev.World, it's 100 million games.
Not GameDev.World. Excuse me, I meant Meditations. Meditations is what I meant with Rami Ismail.
Shout out to Rami.
Yeah, so I guess where I'm at is, what was it like sort of sitting in that slow moving bubble, I guess, like moving this forward and trying to reach an end point that you were comfortable with?
I mean, I think one of the things that's notable is like we'd frequently underestimate how much progress we made and then go play an old build and be like, oh wow, it's way better now than it was like three months ago.
And also, because we all have day jobs, we were kind of shipping things, which probably helped us not feel like, oh no, we're trapped working on this one thing, right?
We also had other things going on.
Yeah.
So it was amazing to see the rest of the industry, like it felt like the rest of the media was moving a little faster.
There was some point where suddenly a bunch of time looping games came out.
Yeah, it was this E3, like two time looping games were announced.
And Outer Wilds came out and it's like, well, time loops are in now.
So, Pontac, the lead artist of Elsinore, or as you mentioned the art, he did a fantastic job.
The lead artist of Elsinore also was the lead artist for Outer Wilds.
So he shipped two time-looping games in a month.
Yes, and he got hired on Outer Wilds, I think, partially based on his work on Elsinore, which is...
That's how the timeline worked out.
Shout out to us. Yeah, I'm like, I was really happy.
You brought it up. I'm really happy we chose the art style we did.
Yeah.
It's less contextual paint. It's literally just hand painted, which is why we used an isometric camera.
Yeah.
So that way it wouldn't be tied to, like, texture.
I mean, this is like the only thing that made sense.
Like, how can we make a game that looks great with this level of polish with a single artist?
And the answer is you have to do 2D paint.
Yeah, two artists.
Oh, yeah, yeah, yeah.
It's, uh...
It's a whole 100% increase from what Eric was saying.
But it's a 2D painting that's projected on a 3D model, which is kind of neat.
So that's how we do the real-time shadows and stuff.
Yeah, so like Valvo in a 3D world, and then Wes painted on top of it, and then we just put it all back.
Yeah.
The shadows, the shadows are really one of the, like the shadow in the Great Hall especially.
I don't know why, it's one of the little details that just made me go, oh wow, that looks, this game looks great.
Yeah, and I was really happy. Yeah, I was very happy with that, that it works.
Yeah.
Yes.
Because it was like, it was a contest of like, Valorant was coming up with like, what are the things that would be the like, like manageable for its really small team to do, but like give this huge impact.
It was like finding the like handful of things to make that work.
on this full budget.
I guess that's a nice thing about working on a...
working every Sunday, is it's like we don't have a lot of time to, like, actually build stuff compared to full-time dev, but we have just as much time to think about it.
And so, a lot of it...
a lot of the development process was, like, a lot different than other stuff I've done, in that you would think of an idea and be like, well, that's great, maybe I'll get to that next weekend, and by the time next weekend rolled around, your idea had, like, matured enough that you realized it was...
You should be doing something slightly different, or it was too dumb, and you should throw it out.
And this, like, saved us a whole bunch of time that we would have otherwise spent uselessly building things and then discard them.
It's easy to point out, like, to notice, like, things that would have been, like, uh, yeah, we might have sunk more time into polish if we were working on it full-time.
It would be a very different game if we were full-time, because, like, there's a lot of risky things we did that would not have been, you know, if our lives were depending on them, uh, for, uh, might, you know, we might have avoided.
Um, but there's, as Eric was saying, like...
The design really had, there's a lot of systems that we were like, we don't need, or we iterated on, or that we got because we had the time to really reflect on and like, and just think about what we were doing.
Katie, I think had this great quote way back when where she said like, one of the things she's most proud of is because of that time, like every time we could have done the like, we had to choose between the easy thing and the interesting thing, we picked the interesting thing.
And I think that's very much a product of our work schedule.
Yeah. What's interesting to me about that is, developers talk...
One of the shortest answers I hear a lot when talking to game developers about developing games is, iteration, iteration, iteration, make things, break things, throw them out.
And this is not anti-reflective of that entirely.
You made things, you broke things, you threw them out.
It's in slow motion.
Yeah, and...
In slow mo...
Yeah, you did it in slow motion, but also like, there's also the phrase, ideas are cheap, etc. etc.
Like, you have to put something on the page, but weirdly, this is a more mature perspective on that idea, which is ideas are cheap unless you invest time in them, I guess.
Which is what you did, you invested time and ideas the same way other developers invested time and ideas, you just did it differently.
And like you said, slower, in slow motion.
Yeah.
Yeah, I mean, I was just like, I found that like this process, the importance of thinking about what you're doing, what you should be doing next is like really critical.
That's the way that like it was when I was doing research where you're kind of like bumbling about in the dark.
And it's like, you can just work as much as you want.
The important thing is to be constantly reflecting on, is the work I'm doing right now the most important thing for me to be doing?
Is this the thing that's going to push this closer to where I think I want it to be in the future?
What's the question I need to answer now?
And that's the kind of approach we ended up taking because of the work schedule.
Yeah.
It's worth noting that I think a big part of why we were able to do the once a week thing...
There's two key things.
One is that's actually very much the structure that we had in Game Creation Society.
where we were like making games.
In that we were making them over the course of the semester.
But in order to get things done, when you have schoolwork, you kind of had to have designated work sessions, right?
And the other one is like, we, instead of just meeting and checking in, we actually had like, we're all sitting down and working over Skype together so that we can talk to each other.
And we all know that we're making progress.
And that was, that again, was like part of why we were able to sustain this for six years instead of being like.
Yeah, I was gonna say, like, even in that regard, we were very lucky, privileged in that, like, a lot of us were close friends in college.
Like, my wedding party was basically the Elsinore Dev Team, more or less.
And so, hanging out once a week was, like, a good excuse to keep up with friends I'd ever seen, you know, in all the different parts of the country.
And I think that was, kind of, like, really important.
Like, I don't know if this would have worked if I had just formed a group with some strangers as well, or would have to build, had to have been.
approach differently or spent much more energy trying to keep the pace up.
Because it was very important that almost every Sunday we made some amount of progress, just like a little bit of progress.
Yeah, Mike in chat from Shell Games also says they don't know how you hugged yourself to only one day a week.
Seriously that's discipline and it shows the game does not feel looker rushed at all.
Yeah, I mean, there were some times when we do two days a week.
Ooh, there were some times when I'm a grad student, I'm just, I'm really excited about winning the scripting language.
I'm just going to do that every day of this week.
One day a week was the baseline.
People would sneak in time here and there.
Like I would, I would, I bus to my day job.
I would sometimes work on it on the bus.
Right.
And that's like half an hour of like extra like scripting time.
Um, but yeah.
Right on. Moving on to the question pile. We have about 10 minutes left in the chat if folks want to get them in.
Um, uh, looking at what's happening, trying to remember if I had any interesting thoughts about the game as this was happening.
Um, uh, I guess one of, to walk back over to design and programming world a minute.
Oh yeah, this is gonna be real fun.
This scene.
Um, good timing.
Um, Elsinore really succeeds as a game when the player feels...
They're really pushing the boundaries of what's going on in Hamlet.
If they're familiar with Hamlet.
I don't know what it's like if you've never read Hamlet.
I'm just going to be honest, don't know.
Read Hamlet too early to test that.
You're going to have to interview someone else.
Or get someone else to interview you.
As designers, what was kind of your instinct for getting players to feel safe in pushing off the path, and like they wouldn't wind up in a fail state just by doing this?
I guess it helps to like, knowing when you're gonna die, is one thing.
But like, what was kind of your impetus for getting players to like, really try messing with things?
I- I- I would reframe that slightly.
I don't think it was ever our goal to make players feel safe pushing off the path, because pushing off the path results in like, horrible deaths.
But you feel...
Encourage to do so because you're learning new things every time you do so yeah about these characters in the world And so it encourages you to be to push past those boundaries into those that dangerous territory If that makes sense yeah Which I guess is a way of feeling safe Anyway, but yeah, yeah, yeah, but it's like not the safe was not really the feeling we were going for right Yeah, I guess that's a different way to put it. I think you're right. It's not about safe. It's about To me it was about scratching an itch. It was like yeah, I need something. Yeah curiosity Yeah, right like like what will happen beyond this this threshold if I if I go for it because I can just always try again and that is where a little bit of safety comes from but But what the things you're trying are often dangerous things We're also like trying to sort of like So I'll say I'm not I'm not a literary theory expert, but like, uh, one of the things I think I was trying to hit with this game is like part of what makes tragedy compelling and then like ratchet it up a notch.
So I like what really basic way to describe it or like when I'm watching like a Greek tragic play or whatever is I'm sitting in the audience screaming at the main character.
Yeah, I can see exactly how their tragic flaw is going to get them killed.
I'd be like, if only you knew this.
Information, Oedipus, or whatever, like you could do something different.
It could be better.
And then so we made a game where you can go tell them that information.
Yeah.
And then they'll do something else stupid with it and you'll disagree with them some more.
And then you just do this in a loop.
Yeah.
Yeah.
Over and over again.
Uh, I remember way back when, when I was in college, before I even started at Shell Games, Jesse, I was in Jesse's game design class, Jesse Shell.
And he was talking about how tragedy is, you know, it was, uh, tragedy is extremely difficult to do in games.
Right.
Because.
uh... there is something bad happens you just try again and like this game is kind of in many ways it's a direct like challenge to that? yeah like it's like challenge accepted yeah uh... because it's like you try again and that's kind of part of the tragedy instead of in a way to escape the tragedy yeah Uh, that's really funny, just like, Oh, trying to do this really hard because the player's just gonna try again.
Oh, screw you, we're just gonna let the player try again.
I would not, no, no screw you, just that's an interesting challenge.
Jesse Shell was watching this and just like, writing and writing furiously in his notepad.
But I mean, I was at Shell Games when we did the Kickstarter, and like, so we talked about this again at that, right?
Like, that was one of the, he's actually a gravestone in the graveyard.
Um, we're somewhere in here.
You're getting mad at me for saying screw you and you literally put this grave into the game.
No, no, no. He put himself as the grave.
He paid.
Yeah, he's a backer.
He backed it.
That's what all the ones are.
Yeah, yeah, yeah. A lot of the graves are like people who backed.
Right on.
We are wrapping up here.
Any last minute questions folks have for Connor and Eric, get them in now.
Because when we're done, at some point I'm going to go back and just play more of this game at some point.
Let me think, do I have any more questions?
Oh man, you said something in there about tragedy that really got me.
Like tragedy is yelling at the screen and thinking people would do what you expect them to do if only they knew what you knew.
That's the engine that kept us going on this project, right?
It's a really compelling problem.
I guess not to spoil the ending of the game, but there is kind of an ending.
There is something.
There isn't like, this game isn't sort of Dwarf Fortress, like you just keep reloading the sim just to generate new interesting results.
No.
Thematically, where, towards the end of the game, where were you heading as far as like, what happens when the player has all the information, I guess?
Like is it that Ophelia kind of gets to have a new...
Yeah.
Yeah.
I will say that we do not lose our theme when we get to the end.
Got it.
That's all I'm really willing to say.
Frankly, if a player were to just play the game forever and then eventually just resign themselves to like, ah, this is sad, and then put it down, that's a pretty good thematic ending too.
Yeah.
Anyway, with no more questions in chat, I'm going to start winding this down, this stream.
With perfect information, I will prevent the tragedy of keeping you guys from your day jobs.
You've been watching the GDC Twitch channel, thank you for joining us once again, thank you for putting up with my slightly tired, coffee only just started kicking in shenanigans.
We love having game developers on this channel. We love getting folks questions to game developers.
If you click the follow button on the lower left hand corner of the screen, you will get a notification when we go live, when we're talking to game developers.
We're talking to the folks, we're trying to talk to the folks behind Age of Wonders Planetfall later this month.
I'm reaching out to a bunch of other cool folks about other cool games.
We're trying to pin those schedules down.
On top of that, if you click the follow button, you will also notice that the GDC Twitch channel does keep live during the day with a lot of great talks from GDC of years past.
We've started taking talks from the GDC vault and putting them on Twitch.
There's also the YouTube channel where if you go there and if you click on the YouTube channel you can obviously get all the great talks we've uploaded over there.
I need to update the banner that you're looking at because as you can see our logo, the logo on the top left is shiny and new, but this is 2019 GDC.
GDC 2020 is coming up. If you are a game designer, game developer watching this channel, you might want to know that the call for papers for next year is open and we do want to see your GDC talks.
Right now it is for Wednesday, Friday, which we're calling Core Concepts. So if you have a talk about the core concepts of game development, we would love to see it.
You can go to GDC.
the concept.
I can't write it.
I'm pretty sure it's later this month, if not, it's definitely next month.
That'll be opening up soon. That'll include the Narrative Summit, the Animation Summit, all kind of that group of things.
Other than that, Eric and Connor, thank you so much for joining us.
Thanks for having us. Yeah, it was wonderful.
Congrats on shipping Elsinore. Thank you, Marcus Loralius and chat.
We loved having you.
And with that, I wish everyone a happy Wednesday.
It's only Wednesday, man.
But happy end of July. Happy birthday, Harry Potter. It's Harry Potter's birthday.
Bye, everyone.
Bye.
