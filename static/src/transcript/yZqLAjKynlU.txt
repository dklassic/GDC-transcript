All right.
Hey, everybody.
Thank you very much for coming out today.
My name is Zeke Verant.
And I developed Softbody by myself over the course of about 2 and 1‚ÅÑ2 years.
So I'm going to be doing a post-mortem today about some of its split-mind design principles that I implemented into the game.
So the game just came out last May on PlayStation 4 and on PC.
So I'm sure there's a few people in the audience who haven't had a chance to play it.
don't really know that much about the game.
So I just want to give everybody a sense of what the game looks like, so I'm going to play a short gameplay trailer, and then we'll go straight into the talk.
So here we go.
Okay, so Soft Body is this kind of chilled out but very difficult action game in which you control two beautiful gooey snakes at the same time.
It's heavily influenced by a lot of action games, especially like shmups and twin stick shooters.
But I tried to introduce a number of mechanics that are a little bit unique to action games.
Stuff like painting the world with your body as opposed to shooting.
And there's also a lot of level variation.
So there being, as well as being like bullet hell levels with like tons of layers to paint and navigate through.
There's also these sort of ethereal contemplative levels that have a slower vibe to them as well.
But soft body, the thing I'm most interested in the game and the thing I'm probably most proud of is the split mind design mechanics that I ended up implementing into the game.
In other words, like controlling two snakes at the same time.
So when people first do this, it seems like it's something that's mentally impossible.
It feels like your brain is trying to actively resist doing the thing that you want to do and what the game wants.
wants you to do. It's just kind of a very challenging task. So I always felt this mechanic was interesting, but it actually took me a long time before I was able to wholeheartedly introduce it into the game. So even after I played a great game like Brothers, A Tale of Two Sons, which I think did an amazing job pushing this controlling two things at the same time mechanic, I was still a bit at a loss at how I could make it work for SoftBody.
But after more than a year of gradual development, I fully embraced the brain splitting challenge of controlling these two things at the same time.
And I ended up implementing a new mode into the game, the aptly named hard mode, hard game mode.
So this hard game mode has a very high skill ceiling and it requires an immense amount of concentration from the player almost all the time they're playing.
But designing hard game really helped me refocus the game's level design and fine tune the game's difficulty curve.
And it really reinvigorated my work on the game, including, on the rest of the game, including like the tutorial and the introductory mode.
So today we're gonna do this post-mortem in three parts.
So the first part is Soft Game.
And Soft Game kind of covers the first year, year and a half of development.
I'm gonna go into how my process kind of gradually generated you know, these game elements that worked really well, but actually didn't...
And they were kind of appealing the first time you're playing around with them, but they didn't really work well together.
And so the game was kind of conceptually muddled.
In hard game, I'm going to delve into all the work that I had to do in order to sort of untangle that mess and refocus the game and kind of crystalline the design a bit.
And finally, I'm going to wrap it up with a split-mind pedagogy, which will try to give some useful takeaways from this kind of like otherwise esoteric idea.
All right.
So...
Part one, designing by tasting.
Okay, before I talk about Softbody, I wanna show you a game I was working on right before.
So this is a screenshot from Money Money.
It's an ambitious narrative game.
It's got lots of characters, and it's got a whole bunch of dialogue, and a bunch of meticulously crafted black and white pixel art.
You know, and of course, you can play as three different characters.
And, you know, it's just sprawling.
It's all over the place.
When I finally sat down to try to create something out of this content, I mean, the obvious thing happened is that it just wasn't playable.
Nothing I was doing was actually useful for a game experience.
And so I would have to kind of rework it.
And I did this once, and then the second time through I just decided I was going to take a break for a little while.
You know, I decided I was going to try to do something completely different and make a game that was just designed entirely around a core of interactivity, where I'm...
at the very start, like, working with movement, working with objectives in the game.
So basically an action game.
And this is what I came up with.
So in the first few days of prototyping Soft Body, I got this beautiful gooey snake.
And I don't know, I just immediately kind of liked it.
It's very simple and it felt really good to move around.
And actually, this is what it is.
It's just a bunch of circles being spawned.
And so you get a circle that like spawns every frame, and then that circle, the circle's radius will then grow for 10 frames, and then the circle's radius will start to shrink.
And then every frame, there's about a 4% chance for the circle to start wobbling.
And this is what gives the snake, it's kind of like gooey, organic feeling, the wobble.
So I like this for two reasons.
One, it's pretty, but also strange and lifelike and adorable, but not cute.
So a visual thing.
But the main thing was it just was a joy to control the body, especially with a controller.
In fact, I would say that analog sticks really played a huge role in shaping soft bodies development.
And I've always really, really loved analog sticks.
They feel amazing.
Especially on the PlayStation 4 and the Xbox One, these new ones, it has such a smooth action.
I feel like you can do almost anything on an analog stick and it feels good.
You can move it in a really fast circle or a slow circle around the barrier.
I like the gentle resistance of the spring when you're pushing it in a direction.
So I felt like I'd stumbled onto a great way of designing the core of the game.
I could just design the game around what felt good to do with a controller.
And so at first, development was centered around a single question.
How can I make movement feel rewarding and great?
So of course the controls were the central part of this, but I was trying to design obstacles and enemies that would encourage movement and sort of reinforce that, and also give some personality to the game.
So from the shape of bullet patterns, like having them as circles or semi-circles so that people would move in a circle as opposed to in a straight line and they're just pushing themselves in some certain direction.
to the sound when you paint walls, to the way that I designed like certain enemies.
You know, from the beginning all these small refinements were meant to accentuate movement.
And so here's a clip right now of like an enemy I designed in which, yeah, it's completely designed so that you're always circling it and that's like the fun thing that I found you could do.
But what I actually define as rewarding and great.
What does this actually mean to me?
So of course it's like, you know, there's the games mechanics and there's rules.
So like, there's stuff that's great when it's like, oh, it's not fussy when you paint a wall because the like painting radius is really big.
Yeah, that's rewarding and great.
And others, you know, small stuff that are about the aesthetics and whatnot.
But really there was also this like emotional appeal that I was trying to go for.
So with games like Kerypt and Fez, I felt like there was something that was much more compelling than just like the mechanics in place.
Like Fez, for instance, whenever I see a screenshot, I kind of have this feeling, you know, it kind of evokes this musical memory, like this time I spent with a game and I don't know, it's kind of like hearing an old song and remembering where you were at the time.
And I think Fez does that really, really, really well.
On the other hand, like something like Kerypt...
is this really strange mood, and it's about puzzles, but even before you've solved a puzzle, even before you've gotten to the real gist of the game, it's still compelling, you still want to keep playing it, not just because it feels good to move around.
So it was important to me that the game wasn't just some design fetishy achievement and elegance, but that it would have some sort of emotional energy as well, especially since I was really searching to find, energy to keep prototyping after this awful money money experience.
So it is kind of strange to me though, I was thinking about this when I was putting the talk together, it's like I talk so much about like making the game feel great and like building it around these, this you know, controllers, really simple concept, it sounds so elegant, it sounds so like minimalist.
You know, with all this energy spent on the controls and the tight movement and the fluid feelings and stuff, why would I choose to pursue this really intense challenge of controlling two things at the same time?
It's something that seems to be completely in the opposite of a kind of a chilled out experience.
I don't know if I have the greatest answer, but, you know, I was trying to make stuff, but I wasn't trying to, without overthinking it, you know.
Part of staying in this great creative mind space was the possibility of having some kind of like wishful thinking and wishful features.
You know, I had to kind of convince myself that even if I was obvious, even if a feature was obviously out of place, if I felt strongly enough about it, I thought that I would be able, through some sort of gradual unconscious...
conscious explorations, I would be able to find a way to make it work.
And so, instead of going through a big planning process, I decided to continue prototyping in this kind of exploratory sense, you know, I guess prototyping built on ignorance and energy with a goal but no real plan how to get there.
Essentially, I was trying to make it, development was a bit wishful in general.
And this is, here.
I've got the wishful features idea all planned out here.
So this is how I, because there's a number of these things in it.
I'm not going to go over everything, like all of the failed problems with like adding in a narrative or trying to do co-op mode.
So those were wishful features, but some of them really did work.
So you introduce this like promising feature.
If it isn't great, you leave it in anyway.
You don't, like, it's, if it works, then it's like, yeah, great, I'm the best in the world.
If it doesn't work, then you say, no sweat, we'll see what happens.
It's kind of like leaving a bug in your game.
I said, Sal, Salski, is that how you say his name?
He did a talk once about, like, how he just likes to leave bugs all over his game, because it's just like, he finds some inspiration, they'll give him a good idea.
And it's, I don't know, I've kind of, I, I, resonated with me, so.
This was my way of doing it, I guess.
Leave in these big features that didn't make any sense.
And then, you know, just hope for epiphany, you know?
So back to controlling two things at the same time.
We haven't talked about that in a little while.
So I was starting to build a game out.
I had this thing where you could paint walls.
It looks nice.
It was very important to me that it wasn't fussy or frustrating, like that painting radius is quite big, so you didn't have to get too close to the wall.
And yeah, and then you had this like kind of mechanic where you're pushing a ball along a rail.
And this is sort of where...
the two-body stuff started to come together.
So, I had a couple of mechanics.
So, I had the ball, I had the painting, and then I have, finally, this thing where you actually just attach.
So, actually, I've relegated the, like, the second body as just a kind of a power-up.
And I wasn't really, you know, I wasn't really...
doubling down on this idea of controlling two things at the same time. I hadn't really pushed it too far, because every time I tried to do it, it just felt like, awkward, and you know, the one body would get on the other side of the screen from this one, so like suddenly I get confused and my brain doesn't like it. And so these were problems I had, and I just wasn't, I guess I wasn't hard-headed enough to want to just sit down and try to figure out what the real problem was. And so we have these...
the three mechanics, paint, push and pop. And at the moment, you know, we got controlling two things at the same time, not all the time, but it's working. It's kind of working. We paint a level, that level changes. Oh, now we can get the power up and kill the enemy because that's what the power up allows you to do. And I don't know. It just wasn't really a lot of people when they played around with it, if they ‚Äë‚Äë I wasn't pushing them towards it. So why is this in the game? Why is this in the game?
And it's kind of what I got over and over for the first year of development, but being what I was, but I did really enjoy doing it.
It was something I was slowly getting better at and gradually like finding my way to figuring that it was a good thing, but I just hadn't made a big step mechanically to like introduce it.
So controlling two things at the same time, but not quite all the time.
So Now we're going to go into part two. So about 15 months into development, you know, I had these great mechanics, you know, you could paint stuff, you could pop stuff, you could push stuff in the rail, and there was a whole lot of enemies that, but a lot of this stuff didn't feel good. It was like there were some fun levels.
But the whole of the game wasn't coherent.
It wasn't well organized.
And it was maybe good enough for me to feel okay about the first 20 or 30 minutes about the game, but the late game was repetitious.
I was using the same turrets with the same bullet patterns, just more of them.
And I was using more rails.
And so it just began to felt like just longer levels of the first 15 levels.
But instead of doubling down and working on better levels and working on more mechanics and really trying to figure this out, I'd gotten in this bad place where I was still doing these kind of wishful features, which had really served me well, I thought, at the beginning.
Not with this part, but with other parts.
And I started making these kind of narrative parts that really didn't further the game.
They weren't getting to what was going to finish it.
during the early developments my my i during early development my ideas about leaving stuff in the game to see if it gets better was starting to feel uninspired and i started working on other stuff other than like soft body's main levels and you know trying stuff out like a co-op mode which i knew immediately it didn't work but i knew it and i knew it wouldn't work without more work and but at least it was closer to the game itself i guess there was all this muck that i was like kind of walking through and i was just like way behind on designing the levels and all the work I was doing was just sort of this short-term distraction, you know, like some sort of a plot twist. Yeah, suddenly you're a worm inside someone's brain. I mean, it was kind of cool, but it wasn't actually anything.
And so, you know, I ended up where I am now. It's just like, what am I doing? I'm just not, I don't have the right way of going about this right now.
just playing around and suddenly, you know, I mean, this co-op mode, I mean, is a pretty good idea. It's a weird idea, right? You know, you're playing co-op mode, but you're only controlling one snake and you're playing it with your brother or something and he likes it and you kind of like it. Well, you know, you keep doing that. We keep, we kept sitting with the co-op mode and playing through it until I actually did have one great epiphany was that if I played co-op mode, I could actually just play it by myself.
And this was so much better than trying to design something where we had to try to communicate and try to design all these other features, you know?
And when I first did it, it was just the oddest experience.
I could physically feel part of my brain kind of rewiring itself.
And so...
I finally got sick of exploration, and one day I just sat down, I had this co-op mode, and I was like, okay, I'm going to start outlining the game's challenges.
I'm going to start to figure out, like, what I can do to, like, make‚Äîwhat is actually going on with controlling two things at the same time that is really, really difficult.
And so, we have hard game mode.
Oh, oh wait, the slide's out of place.
Okay.
So.
The challenges as they were outlined is we have using two snakes at the same time. So this would be something like this mode here. Apologize. Okay. So this is someone trying to play through it. And notice they're not moving them really at the same time. So one just kind of hides and the other one does all its obstacles. And then when this gets done, they're going to only when they get right close to each other again, and then that one will hide, and then it will go do things.
So there was all these problems with trying to implement this kind of like co-op mode, already on top of the single player mode, because people just wanted to make it easier.
They wanted to make it easier.
There was nothing pushing them to actually approach these like incredibly intense challenges.
And so I started outlining what these challenges were.
There's using two snakes at the same time.
Like just not hiding something, or movement at the same time.
any sort of thing in that way. Crossing the snakes, this is a big one actually. So you're controlling, everyone's trying to keep the snake that they control with the left analog stick on the left side of the screen and they're trying to keep the snake they control with the right analog stick on the right side of the screen. And whenever they cross those over, people just get all mixed up and they really have a hard time with it and they die immediately. So I needed to figure out some way to introduce these challenges that where people could figure out how to do it and they weren't just constantly like into and such a big environment where they could try to just cheese it. You know, and they would, and then keeping distance from each other was also just another big problem.
And so I had to figure out ways, how can I get people to use them at the same time, how can I make them cross the snakes, and how can I force them to stay away from each other?
And all the while making it kind of fun? And so these kind of like challenges actually started to become real mechanics. I just started designing mechanics and obstacles.
around what was difficult in the game. So in this particular one, well, first of all, soft and hard game mode, if either snake gets killed, it's game over. So in the other mode, it's like the other snake, if it gets hurt, it just, like, has a cool down period and then you can use it again. But this one's really brutal. So you're forcing people to always be cognizant of what they're doing with both snakes.
And then you have this line going around that if they like touch it, then one of the snakes pops.
So you're forcing them to move around in a circle.
And it's something that I just do it slow enough that it's not too hard.
And this was another one I put together for, oh, is that not starting?
Sorry about that.
Okay, and this was another way of forcing people to keep their bodies further apart.
So this was a level they have to not touch that circle that's surrounding the left body.
And so it forces them to kind of be and keep in mind where they are, what the other body is doing, and not try to do this thing where they're moving in a path together because they're just pushing the analog sticks in the same direction.
And so, and then this one is like a combination of those two.
So, after I put these in the early part of the game, then we have these parts where, okay, you just have to stay in these circles, it'll rotate, and you have to keep distance.
And this is usually the level that people start to really get upset with me.
Is that gonna play?
Sorry, thought these would play right away.
And then as you gradually introduce these levels to people and introduce ways of approaching these challenges, people get better at it, and then you can start to do really, really interesting stuff.
So actually have the snakes collaborate with each other.
So in this one, you have a snake, two bullet dropping snakes that only the...
blue body can get rid of the blue pellets, but the red, but the blue body, sorry, the blue pellets pop the red body. It's a bit crazy. And then they have this red snake chasing after the blue snake. And so I think it's actually, someone told me it's easier if I don't explain it. I think it's, I think that's true, actually. And then you can be just kind of like really mean.
Oh, never mind.
We're not getting, I don't think we have enough time for that one anyway.
So anyway, this, so defining these challenges and defining what was actually hard about the game was kind of a lifesaver for me.
You know, at first I just wanted to make a game that felt and looked good and, you know, have some great movement.
But, I mean, that didn't last forever and I ended up making it more of a traditional action game than I originally planned.
And so, here's a few things I think that like, by.
putting in hard game how I was able to reshape the game.
And here's a few lessons I learned throughout it.
So by specifically define, so specifically define the challenges your game provides.
So I studied music composition for a long time, well before I got into games.
And one of my composition teachers had a really smart idea about why people get stuck in the middle of a piece.
And what I mean is like, you know, you're writing a piano piece, you're two minutes into it, one minute into it, you get to a part and you're like, oh, I just don't know what to do next.
And you try something, it doesn't work.
And so what people usually do is they keep banging their head against the wall on these last three measures.
And they think, oh, if I just get these last three measures, I can figure it out.
But her idea was like, no, people, they're having this problem because they don't understand what they did in the first minute of the piece.
They haven't either, they haven't developed it long enough or they're not taking advantage of that.
But it's not something that is in those three or four measures.
I think this applies to game design too, but maybe in an opposite way.
So if you don't have a clear idea of what your players need to learn or are trying to learn, then you'll probably get stuck.
So you need to have these kind of like the high skill ceiling, like very, very hard things to master figured out pretty early in development.
I think that does help things get along quite nicely.
For SoftBody, this was a big help.
So develop obstacles that engage with those challenges in the most direct way possible.
So for instance, we don't like it when the snakes cross streams.
So we're just going to put a big line, and that's just going to directly force people to do that sort of thing.
I mean, obviously, you want to have some sort of taste when you put it in there.
You don't want to just like, it's all part of the design, right?
You want it to be tasteful.
But I find that doing this and having it as a clear obstacle that you've planned out will help you when you need to develop further obstacles, that you can go back to that obstacle and just kind of be like, okay, can I make a variation on this so it's not so brutal?
Or can I make it faster or can I make it slower?
Does that do anything different for the game and that challenge?
And then finally, difficulty is pretty subjective, but it's not a huge problem when it's easy for you to adjust.
So if you have a game that's too difficult, and this really helped me with, like, in the late game when the difficulty was still a bit high and I was trying to, like, tune the difficulty curve so that, you know, players who don't, like, necessarily love super difficult games would start to get into it.
So if you have this all figured out, like, as far as what the challenges are, then it's really easy for you to go in and like, oh, I can just take this turret and it just shoots half as fast. Or, oh, I can like, there's an obstacle that spins around and it's always killing players. What if I just made it shorter? And it's more useful for you to have that than just playtesting. I think playtesting is a really good way to like get a grip of what's going on when people are playing your game.
maybe it's a nice warning signal that you've done something too crazy. But getting a handle on it yourself just in this way is a little bit better. All right. Well, that's all the time I have for the day. So I just want to say thank you all for coming out.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
