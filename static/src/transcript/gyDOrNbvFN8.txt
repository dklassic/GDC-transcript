Hello everyone. Welcome to Slime Rancher, a preemptive post-mortem. I'm Nick Popovich, I'm the CEO of Monami Park, and before we begin I'm supposed to say please turn off your phones. I will be in the wrap up room after this if anyone has any questions, and then I'll also be uploading the presentation to the GDC vault and in PDF format as well. So if you want access to these slides, they will be available for you.
So this is a preemptive post-mortem for Slime Rancher.
We're not done with it yet.
We're still in early access.
And so we're being a little cheeky with the name here.
But let's get right into it.
I'm going to cover how we made the game.
our sort of prototyping process and everything, and our first year in early access, and share all the tips and everything that I have for that, as well as a lot of information on YouTube and things like that.
So hopefully you get something out of it.
To start, I am the co-founder and CEO of Monami Park.
I designed Slime Rancher and Spiral Knights, and there's me on Twitter.
And that's everything that you need to know about me right now.
Let's hear about Slime Rancher.
So has everyone played it?
Slime Rancher, yeah, yeah, cool, all right.
Well, I'm still going to introduce the game anyway, so bear with me.
It's a first-person farming, ranching game with slimes.
The name is totally appropriate.
It's super heavy in the physics department, and the world is completely open and non-linear, very Zelda-like in that sense.
But let's see a trailer of Slime Rancher to kind of understand it if you've never heard of it.
That's Slime Rancher.
So let's look at the development data.
We worked on this for two years before it went into early access in a little apartment somewhere.
And after releasing it, two became five.
We're super proud of that.
It uses Unity and UFPS, which is a Unity asset package that allowed us basically to make a first person shooter like overnight.
At this point, it would probably be more efficient if we weren't using it, but it got us to this point, so we're gonna stick with it.
We also used Sector to break up our world and let it kind of load on the fly.
It was totally bootstrapped, no funding, and we never crunched, and that's super important because you don't need to.
In the retail, it's PC, Mac, Linux, and Xbox One, 20 bucks, and it's done super well for us.
This is probably why I'm giving this talk.
And yeah, I mean it completely took us by surprise.
And so sort of the purpose of this talk is to figure out why maybe that is the case.
So let's start by talking about creating Slime Rancher.
And the points we're gonna cover.
are the original idea, which had nothing to do with Slime Rancher, our approach to development and constraints.
That sounds boring, but let's get right into the seed that grew into it.
And this isn't boring, this is a lot of fun.
This is how Slime Rancher all started. It was with a bug in Oblivion.
There was a bug in Oblivion that allowed you to put a mundane object into a bow and shoot infinite amounts of that into the environment and break it.
So you can do that with melons, and I think that's like a...
a worm cult priest trying to be very serious while melons are just like filling the environment.
I always thought that was really hilarious.
You could do lots of silly things with it like fill inns full of cabbages and cause everyone to fall over and then the town guards would try and come after you.
And they're tripping on cabbages as well.
and that was super silly, and so I thought, you know, ball pits are really, really fun.
Maybe we can make a game about a ball pit.
But that was long before Slime Rancher came to be.
When it was...
That was always sort of simmering in the back of my mind, and then when it was time for us to create our own thing, Slime Rancher was sort of the marriage of this kernel of an idea and a couple other things that made sense to us.
Plus, I just liked slimes, they were cheery, and I wanted to do something that was happy.
But then we were faced with a development reality.
We were only two people.
We could not make a better version of any kind of known.
property out there. It didn't matter if I had a great idea for a military shooter, like a first-person military shooter, it wasn't going to happen. I didn't think it was worth competing because they're always going to win. So we took a different approach and it is to be better than anyone. We decided we can make a better slime ranching game than anyone ever. That was something that we could actually do and this might seem obvious but we really had to kind of stick with it.
And the way that you do that is you make your own Calvin Ball.
I don't know if anyone has ever read Calvin and Hobbes.
I'm sure a lot of you have.
A running joke in it was Calvin Ball, which is where Calvin and Hobbes would take a game and invent stuff on the fly and just kind of run with it.
And there was a couple of comics where they talked about how they were world champions in Calvin Ball, and that always kind of stuck with me.
So we made our own Calvin Ball, and by default, we were the best at it.
And the other important thing to note about Calvin Ball is it's using a lot of known elements from existing sports.
So you know how to interact with parts of Calvin Ball, but you don't necessarily know the whole rules yet, but you can get comfortable because you can interact with pieces of it that you're very familiar with it.
And so.
What this amounts to is sort of on the weirdness spectrum.
You have something like Call of Duty, which people are super familiar with, and that represents the thing, the mousetrap that we couldn't build a better version of.
There was no chance for that.
But with something like Call of Duty, if you have a great version of that.
people not only know how to play it already, but they're going to like the theme of it walking into it.
On the other end, you have Katamari, in which at the time, no one knew how to play it, no one understood what the theme was, the art style wasn't mainstream.
And you can do that.
You can make your, you know, start an indie company and try and make the next Katamari.
good luck to you because it's like, you know, a real shot in the dark.
And when you get that, you're going to go huge with it, but the chance of you getting that is much slimmer.
And so we were looking to mitigate risk, and so we went somewhere in the middle.
where Slime Rancher has a lot of familiar elements of existing games, but then we kind of hold on dearly to this core of weirdness that isn't too off-putting because much like Calvin Ball, people can be familiar with a soccer ball or a mallet or something like that and kind of ease themselves into it.
It's a way of getting your player to kind of let their guard down.
And we used these constraints that we were faced with as two people.
I can't animate for a dam, so we used limbless slimes as the central actors of our game.
By making an FPS, there was no character model other than a hand to animate.
The FPS, as I've said, mainstream muscle memory.
It allowed people who...
maybe would have never played a first-person slime ranching game to play it because when they see a trailer of it, as I just showed you, it's first-person and you're shooting stuff.
And so that, you know, works for a lot of people.
It's open world because scripting is hard.
Making sequences and hoping they don't break and having to check that every time you do, you know, add more content to the game is super hard.
So we did the easier thing, which is open world.
and I think that helped the game's reception.
And then, as I said, farming is relatable.
The rest of it is weird.
So that gets people who could at least say, oh, I see they're growing vegetables in this game.
I play games where you grow vegetables.
This seems like perhaps it's a game for me.
So the takeaway here is that Slime Rancher is a weird concept played in a familiar way, it's wrapped in a familiar theme, so two of the three battles are already won, and the last battle is a game of Calvin Ball, which by default you win.
So, you know, doing the too familiar and then whatever it is you're trying to say or be is a pretty good cocktail.
So next, we're gonna talk about building guarantees into Slime Rancher's design, and this seems super presumptuous, but bear with me.
The points to cover are our approach to prototyping and how we evaluate it, how we build fun loops, which sounds like breakfast cereal, and how this all guarantees a strong foundation for the final product.
So when we first began, before we had any sort of working anything, probably even before we opened up Unity for the first time, I made a kind of an image of what I wanted Slime Rancher to be.
Thank you TF2 Assets for that.
But we knew it was going to be like kind of lower poly and painterly.
That all made sense, so...
As you can see, it's kind of close to what we ultimately did.
But then, you know, this is what we started with.
This is sort of raw UFPS in action, or as, you know, I like to think of it as meat handgun versus the devil spheres.
That was our initial prototype.
And it worked, and it was what sold my partner, Mike Thomas, on the idea was that even in this very, very crude state, like, there was something there.
Like, especially when you had all these spheres inside a corral and they're bubbling over and it was almost like popcorn popping, and you were trying to manage that with your...
you know, marine hand with a pistol.
It actually was kind of fun.
But we didn't go right from that into developing the full-on game.
Our approach to prototyping is a bit different.
Instead, we built a prototype that kind of looked-ish like a final game.
And so this is where we were at, including, thank you again, TF2.
So we had slimes who were expressive and they chirped and did all the kind of things that they do now in the game.
They were eating food and making plorts.
There was even Largos at this point and you see there's some corrals back there and even the tar.
And the reason for this is our prototype focused entirely on the core game loop and not the vertical slice.
And our prototype's loop and final game loop was exactly the same.
So we got this thing propped up and we said, let's just make sure that the core action in the game is fun and then we'll move on from there.
And there's an additional reason why we kind of polished it up a little bit more than maybe we should have that I'll get into later.
So this approach is because almost every game has what I like to think of as a 90% loop.
It's the thing that you're doing 90% of the time over and over and over.
Almost every game has this with very few exceptions.
Some of them are just pretty much purely the 90% loop, which is I guess 100% loop, but you get my meaning.
So this loop is the machine that makes players want to play and replay your game.
It is that thing.
that players want to interact with.
If your game had a, ugh, it's that.
It's like, I just wanna play that.
And it's not thinking about achievements or long-term objectives or anything like that.
And it's not perceived as the experience as a whole, but it is absolutely what is going to drive your experience.
And I'll give you a great example of how that can be so strong, nothing else matters.
So here we have Destiny.
I believe it came out in like 2014, and when it did, you know, it had some problems.
There was some questionable performances by Peter Dinklage, and, you know, loot didn't exactly feel great.
There was a bunch of things that you could chalk up to as like, oh, I'm familiar with what they're trying to do here because I've played other games where they do this stuff and they're not doing it quite right.
However, the fun loop, that 90% of you engaging with an enemy, shooting them a bunch of times, taking cover when your shields break, throwing a grenade to disperse them, and running in and doing melee, you could do that 50,000 times.
And it felt just as good on the 50,000th time as it did the first time.
And that's why it was just completely arresting for me for like a year and why it totally dominated the news.
I think Kotaku, I believe, even did a story which was like, We'll stop doing stories on Destiny when everyone stops reading them because everyone just wanted to read about Destiny.
And there was, again, no shortage of complaints, but what they made was magic.
And it was the thing that was driving that experience.
The other thing to note is that it is absolutely in all forms of play.
If you're choosing teams in basketball and you happen to be holding a ball...
You're not just sitting there like this, holding a ball, deciding what you're going to do.
You're going to be dribbling it because that action is just so satisfying.
And even when you're playing a board game, divorce from all strategy, you want to roll that die.
Not only is that a satisfying action, but it means something's going to happen to me, and I'm hooked on knowing what's next.
And it's all the parts of the game that just feel good.
So let's get back into our testing approach now, which was we presented the prototype as a mostly finished game.
I think some of our friends were definitely looped in that there was much more to do, but for other folks we said, here you go, what do you think of this game?
Because that prototype that I showed you earlier had like a beginning, middle, and end.
It even had, you were supposed to last about 15 minutes, see how long you can survive, and then how many points you can get.
There was even an event at the end.
And we asked them to evaluate only what they see, and then asked if they would buy it.
And we were very happy to find out that lots of people were like, yeah, this is cool.
You should probably add a little of this or a little of that, but otherwise, you know, it's cool.
So, why this approach?
You can't hide behind cool features that aren't yet implemented.
I see this happening all the time.
You make a prototype and you say, ignore this, pretend this is there, and just keep in mind this crafting system will make all of this stuff more meaningful later.
How on earth can anyone evaluate that?
Especially because a lot of the times when you're playing someone's prototype and they're talking about things that have nothing to do with that 90% loop, there's no way of really evaluating that stuff in the vacuum that you currently exist.
So it's just additional noise that isn't necessary.
I also think that you can't really trust your friends' feedback, especially developers.
The reason for this is I do this all the time.
I'm playing someone's prototype or demo and I see something that is like, oh, wow, they should fix that, but they're an experienced developer.
Of course they'll fix that.
I don't need to mention that.
Or it would seem silly if I said you're really going to change the art, right?
is this temp, is this not temp?
I don't want to insult them or anything.
So I think you have to kind of be as naked as you can and just give them something and say, this is what it is.
There's nothing else that I'm kind of hiding behind.
And because if you're successful with that, more cool features on top of a solid foundation will just make it better.
Assume you don't add features that somehow detract.
like it's a first-person shooter and you add a kart racing minigame or something to it.
But if it's a first-person shooter and it's rock solid like Destiny was, and then you add some sort of progression system that people like, it's only going to be better. But you have to be really true to yourself and say, I evaluated that loop in the beginning and it was solid and I'm not moving on until it is.
So the takeaway is to build a prototype that proves whatever the player is doing 90% of the time is fun.
Prove this by testing it for what it is, not for what you hope it will become.
And the fun loop should be fun on its own.
So again, just put it out there.
Don't pretend it's anything that it's not.
If you need it to be something that it's not, wait and get it to that point.
But don't assume that your friends are going to give you honest feedback when lots of the puzzle is missing.
So next, a little bit of a diversion here, a quick biology lesson.
So this is a great white shark.
Everyone can see that's a great white shark.
Here's some cool shark facts.
They have razor sharp teeth, which is rad.
They can detect blood in an impossible amount of water.
They have had few evolutionary changes.
I think I heard once that they're like older than trees.
which is pretty wild.
And then even their dorsal fins are super scary.
Like sharks are totally rad.
So the summary is every part of the shark's design makes it better at being a shark.
Look at that thing.
So next, this is a pug.
And here's some stupid pug facts.
They have trouble breathing.
They can't give birth without human intervention.
Their eyes can literally pop out of their head.
I'm not making this up.
And they were known to wear dumb costumes even in the 16th century.
At that point, like in the Victorian era, they were actually further bred to look ridiculous.
And I apologize to pug owners, I love dogs, but it is a necessary example.
That, in summary, pugs are loaded with features that hinder its ability at being a successful dog.
I'm sorry, guy.
So, what I'm talking about here is lean game design.
Every aspect of Slime Rancher's original design informed the core gameplay.
It created a very focused, confident game right off the bat, and it's cheaper to do that.
I cannot stress that enough.
If you are early on in development of your game, and you were like us, and you're not getting paid for years, you shouldn't be working on a crafting system unless your game happens to be about crafting.
Don't just work on the stuff that you think is fun.
Work on the stuff that makes it strong.
So here's some pub features that we ditched early on in development.
The world was randomly generated at one point.
We ditched this because it wasn't creating spaces that made that sort of intimate interplay between slimes fun, or happen at all in a lot of cases.
But it seemed like an answer, it seemed like free content, and it totally wasn't.
Even though there was procedurally generated vegetation based on plorts sinking into the ground and creating fruit.
I could go on, but it was like at the end of the day, we just said we'll just place the fruit trees on our own.
It was a very open world and a vehicle was required, and I still am wondering why we thought that was a good idea.
It was like, here was an interesting space, and then you just have to drive for like five or ten minutes to get to the other interesting space.
I don't know.
So there was dozens of unique tar.
I still think this is a cool idea, but it's proven completely unnecessary where when a tar would form, it would actually have elements of the previous tar.
So if you're familiar with the game, if it was like a phosphor rad.
tar creation and plus a third one it would be a flying irradiated tar that and at the end of the day we just realized Like it's just gonna be noise like all the players gonna care about is like I'm getting killed But I thought it would be really cool to have the player like really have to live with their mistakes and like, this is what you made me, you know, but it was totally unnecessary.
And then there were even more enemies, because why not?
Because you start making creatures and it's fun to make creatures, and then you say, oh, we could just repurpose it in this way and it was a lot of bad ideas.
So the takeaway here is to make your game a shark.
Every feature informs the core experience and makes it a killing machine.
Cut your crafting systems, multiplayer, whatever nice to have you have until the game matures.
That does not mean that you just cut it completely or you add it as DLC or something.
We're still in early access and we're adding features that we would have never dreamed about adding or that we cut.
early on in development.
But we're stable now.
We can afford to do these things.
So, you know, it's a marathon, not a sprint, especially if you're doing early access.
And so just save that stuff for later.
So now we'll get into the release in our first year.
And the points that I'm gonna cover are pre-release strategy, the early access plans and how they got thrown out, and then how early access actually works.
Yes, I have the secret information.
So pre-release was version 02, gave it to friends and family.
We knew it would leak because we gave it to some.
internet friends who we really don't know and they were strangers to us and then it was a small file size too the first one, I'm probably going to get this wrong, but I think it was like 38 megs it was tiny and it allowed people to share via email we found out which is really cool because that's super old-school and then suddenly it was on YouTube we were anticipating that hey maybe it would get on YouTube but then It kind of happened very quickly on us and we had to react quickly So we moved right into green light to utilize that momentum We probably came into Greenlight earlier than we would have expected, like maybe a few weeks.
But we rushed into it knowing that, or thinking anyway, that well, it's going to be in Greenlight for a while, we have everything that we can show right now, there's already people around playing the game, this is smart.
And instead of making a trailer to be as efficient as possible, we actually took a trailer or a let's play from YouTube that I really liked and use that as our trailer on Greenlight.
And I'll get more into this with YouTube later, but this was kind of a perfect video for us.
It was made by a guy named Metallics and he did lots of videos on Slime Rancher.
But this is really what you want to look for if you're looking to curate YouTube videos.
It's someone being entertaining and informative.
and kind of showing your game in a really good light.
So this is the first 30 seconds or so of that video.
Hello, dissinters, and good morning to you.
Welcome to The Ranch.
This is Slime Rancher.
It's a game due out in 2016.
No set release date or price so far as I can tell.
But I have the opportunity to give you a sneak peek into an in-development build of Slime Rancher, and I am really happy to do so, much like these pink slimes bouncing around.
These guys, you're not supposed to be out here.
Get back in the backpack.
That's what this cut is for.
Where it attached to my back like a backpack is the backpack and we gotta take these guys to a safe place because we're charged not just with protecting these little slimes, but also ensuring their profitability.
So that was our first big video.
And that's what kind of helped us take off.
A really important thing to note in this is he's just explaining the game, and he's being entertaining.
I know there's a temptation to have your video in front of someone who kind of like screams at a game and is really funny and has tons of.
subscribers, and we'll take that too.
But in a lot of ways, that isn't even as useful to us as a video like this, who at the time, I think he had like 125,000 subscribers or something.
And the reason for that is, I think when you're someone who screams at a game you're playing on YouTube, your audience is largely coming to see you scream and see that personality.
with Italics, the way he does his videos, I could definitely see people wanting to come to that, to subscribe to him in order to learn about new games and get his take on it.
I think there's a huge difference there.
So our early access plans after we were greenlit were we outlined them and we said small updates, big ones we'll announce and they'll be worth coming back to play.
And we expect people would walk away.
In fact, we told them to walk away.
There was some great advice by a guy from Bioware once that said with your MMO, let people walk away, just don't let them quit.
But give them natural breaks in it because you're never gonna have someone stay entertained for like the 10 years that you hope to run this game.
We said we were a small team, updates would take time, and this hinged on players understanding development, which was our big mistake.
So then, early access reality, players complained if updates were too infrequent or too small.
YouTubers who were actively making videos at the time needed a very clear signal as to when to come back and make videos.
No one is going to come back to your game and make a video about balance changes, unless it's a guy who makes videos about competitive games and those would have a really huge impact on the game experience.
You have to give them something meaty.
We realized that we needed a new strategy, and we actually turned to our MMO development experience.
Both Mike and I worked at Three Rings and Sega on Spiral Knights and Puzzle Pirates, and so we started looking at, well, how did we keep players engaged with something like that?
So the new approach was treating early access development like a running, released, live game.
It was no longer in development to us, it had shipped.
The big updates became like content updates in an MMO, and it had an effect on sales in YouTube when we promoted this.
It was a change of messaging and it resulted in changing, like, waiting for the developers to, like, get off their asses and release new content into hype for this new update.
All updates, like the one we're coming out with next week, are centered around a core piece of content that we can take pictures of and kind of wrap that as, like, this is the thing you should be excited about.
not a list of things that include balance changes, everything, people find out about that in the patch notes.
We don't care about that in terms of messaging.
Which leads me to my somewhat provocative takeaway.
That early access doesn't work, or at least not as intended.
And so let me unpack that.
This is what you might expect.
that players are going to join the devs on a magical journey in game development and everything is okay because it's all in development and everyone understands that and they get the memo that it's in development and things might change and that's normal but the cold reality is that players expect regular content updates yesterday and this is important. The second point is that if your game is in development in early access Two players, they will think that anything is still possible.
So a big feature that they think would make your game great and gets talked about a lot on the forums and that, that is still a possibility to them, even if you tell them otherwise.
And the reason is, it's still in development.
If you ship a 1.0 version of your game to Steam, it doesn't have that early access tag.
Players might say, for example, that multiplayer would make this game a lot better.
Maybe they'll add that in DLC down the road.
But when it's in development, there is a completely different kind of mindset, and that is, they are along for the journey to make their suggestions, and they expect that some of these are going to make it in, and also you'd be crazy not to add this in the final game.
And also...
it might not be worth the money you're asking for if you don't add this in the final game.
And that's something that you really have to be aware of.
So, additionally, if when you... I love this, if someone says, I understand it's early access, but they're about to say something where they don't understand that it's their, you know, the development and everything.
But you'll see that a ton.
And then players actually dislike changes, however small.
You've probably seen this in a number of early access games where a big new feature was added that kind of...
fundamentally change either, fundamentally changes the game or the feature within the game.
Players don't like that.
And I kind of get it, they've already paid money for your game.
So they expect that it's what they paid for and it's not a development journey.
I'll give you a great example of changes that they don't like.
This was our, this is our pink slime on the left.
There's something called a puddle slime in the game and when we first shipped, they were literally a huge shift on the pink slimes.
It was very obviously temp.
The new Puddle Slime, much to the chagrin of a lot of players, looked like a puddle.
And it was a new model.
It had fancy new graphics and everything.
They're adorable.
They even blush when there's too many slimes around, because they're super shy.
They're one of my favorites.
But to this day, there are little petitions to bring back the original Puddle Slime.
And it's because at the time, those folks paid money and got the blue smiley slime, and they wanted to keep it that way.
So the takeaway here is that releasing into early access is releasing your game, period.
There is really no exceptions to this.
An early access game should be treated like a live game with content updates that drive excitement.
This might mean changing your development style.
It did for us.
Fortunately, we were able to revert to a style that we're really familiar with had we not had that experience.
I don't know.
But excitement equals more YouTube videos and more sales.
We've seen this with every time we've done a major release, it happens.
Big spike, good tail, we're in good shape.
So speaking of players and their thoughts on the game, let's do a quick review roundup, because I feel like a lot of the points here are very relevant to early access.
The positive reviews for Slime Rancher typically mention these four things, the slime animations and personality. This is where you could really score with your game because I feel like a lot of actors in video games, like the entities that are in there, lack personality and a lot of that is not really a fault of the developer, it's that the...
those actors are centered usually around the player's death.
So they're very focused in what they're doing.
Slimes are totally unfocused in what they do, and it allows them to kind of breathe in a space and exhibit behaviors that are really pleasing to look at.
So it's something to keep in mind.
I think, going back to the wonderful folks at Bungie, I think everyone remembers the cast of villains from that game.
a lot more than other games because of their behaviors, like when the grunts would freak out and decide it was all over and pull out two grenades and run at Master Chief.
That was just not only fed into the gameplay, but it was unexpected and it gave those characters some personality as opposed to the million soldiers that you're just shooting from behind cover.
Exploration and discovery-based.
It's all discovery-based learning, and players really respond to that.
And I think this is a trend that we're seeing happen in the game industry in general, probably starting with Dark Souls, with people becoming really aware of this, where it's like, hey, you don't need to make.
golden breadcrumbs leading everywhere.
And it's happy, and most games, I'm sorry, just aren't happy.
And then also that it's a chill or zen game.
People say that a lot.
And the funny thing about that is we never set out to make that kind of game.
I guess think about that for your next game, when the pressure is kind of off and you just have this opportunity to kind of relax in a game space and still be entertained, rather than just stopping the killing to check your inventory or something like that.
But in Slime Ranch you could stop and just observe and the slimes are going to kind of entertain you and I think that's important.
Now the fun part.
with negative reviews.
This is something I'm a little sensitive about, but that is a $20 price tag.
We frequently see folks saying that indie games should be no more than $15.
That still exists, and again, I think.
games are being released that are pushing that back a little bit.
But that's something that you're going to have to live with.
I don't know if we would have made as much money at 15 versus 20.
I think for us, I stand by the $20 price tag, because even though a lot of negative reviews say lack of content, the average play time is 12 hours.
And for many, many players, it is way above that.
So for me, that's a pretty good $20.
It can't run on their system.
You're going to run in this problem all the time.
This is not really new, but it's worth pointing out.
We get so many Chromebooks that are trying to play Slime Rancher.
And specifically, though, with Slime Rancher, it's that it has colorful graphics.
We will get support responses that say, but it's cartoony.
I thought you don't need a good card to run a cartoony game.
Okay, so the last thing is that there's no multiplayer and pretty much every game in existence that doesn't have multiplayer probably gets this as a complaint.
And so, you know, we're thinking about it, but we're not sure it's possible.
One more thing is your negative reviews are gonna stick around from early access.
So if you have an early access game and you're missing a giant feature that is core to the experience, don't release your game yet because all those negative reviews that say, all it is is crafting right now and they haven't added the exploration element of the game are going to stick around.
And the ones that everyone agrees to are super helpful.
That is going to sit there at the top of the heap forever.
So you have to live with that.
You should ship your early access game in a state where it's going to feel like the final product, largely.
It doesn't mean it's content complete.
but it shouldn't be a racing game missing its wheels, so to speak.
Like, you gotta make sure that the, you know, at least for me, I want these reviews to reflect the kind of game that I think I made, not the one that I'm promising to people.
So next we're gonna get into YouTube, because that was a huge aspect of our success.
We're gonna talk about Slime Rancher's YouTube success, why it works on YouTube, what else works on YouTube.
And as you know, streaming and YouTube plus the internet is free marketing.
Probably everyone is saying that.
And you just have to be comfortable with people making really weird faces while they play your game.
It's the strangest sort of ambassador for this thing that you did that I've ever seen, but you just got to get used to it.
Slime Rancher on YouTube, it's a big hit on YouTube.
We get over a million views a week.
and when we do big releases we'll get a lot more than that.
YouTube is our de facto marketing.
We generally we don't go to shows.
We don't have a PR person or anything like that.
We completely leverage YouTube.
We do have some Twitch presence, but it's very bursty.
YouTube works way better for us because we can get video series and things like that.
And we don't buy YouTube coverage.
I know you can do that.
And I've had people ask me about that.
I don't know really a lot about that.
I guess if someone else is paying for it, you should do it.
If you have a publisher who wants to buy YouTube coverage, go for it.
But I think if you're on your own, and especially money is tight, like it was with us, just have it naturally go up the chain.
I'll explain in a minute here.
This is why I think Slime Rancher works on YouTube.
Slimes have charisma, they're fun to watch.
The action happens towards the camera.
This is super important.
That when someone is watching the game, the game is kind of watching them back.
and I think that contributes to it being fun.
It's discovery-based learning.
The audience observations feel rewarding.
So much is happening on the screen, a lot of times the audience might see something that the player didn't or the host of the Let's Play didn't.
and there's lots of unpredictable events that keep it fresh and customization features that make videos unique.
That's really important because it will make someone seek out other videos of your game versus happen to watch other subscribers that they are subscribed to that happen to be playing your game.
So if I follow these two YouTubers and they're both doing a series on Slime Ranch, I'll probably watch both because I like both of them and I wanna see how they interpret the game.
But if there's customization and I get a clue from watching the video or anything that makes another video possibly unique, I might find another YouTuber that is showing off Slime Ranch and want to find out how they did their thing.
So how this could apply to your game is what else works on YouTube?
I think games that allow you to start projects are super valuable because that creates a video series.
Many videos are better than one, especially because at some point the viewer gets invested, they want to finish it.
So if your game has something where...
The YouTuber is saying, so this is day three of us building our lava fortress.
And as you can see, we're blah, blah, blah, blah, blah.
You know, that really works.
Because that's going to take time.
And it's going to be slow.
And it's going to get you a lot of coverage.
Games that leave the audience with a question to answer.
Detective stories are like the greatest stories ever because there's always that question.
So survival and exploring the unknown, it's no surprise that survival games are big because there's this open question of, will this guy survive?
It seems super basic, but it's true versus anything that kind of has a foregone conclusion to it.
Anything that prompts interaction with the audience, if you're ever here, let me know in the comments what I should do next.
That's awesome because they're going to be checking what players are saying about the game and generally speaking, they're always positive on it because they like this person to begin with and so they're happy that they're playing this new game.
They're saying, oh my goodness, go farm phosphor slimes or something like that.
So it gets them prompted to do another video.
And then games that leave the audience with something to try on their own.
So this is where Uncharted doesn't really work.
If it's just a linear experience, there's really no reason for me to go out and buy the game on my own.
You want there to be a reason for me to run out and try it myself.
So some additional YouTube thoughts.
I wouldn't consider developing a game that isn't YouTube friendly.
Period.
Make it easy for people to request keys.
Using Keymailer, Promoter App, Distribute, those are all really great.
The best thing about those is they confirm identity.
You're going to get a lot of people trying to...
scam you out of your game and really don't sweat that early on, give it away for free early on. Steam keys are free.
So just, you know, give it give it out until you can get some momentum and then be more selective. We basically just have a subscriber limit at any given time which would guarantee that person a key or not.
And then games will move up the YouTube food chain, we totally see this.
So the people at the very top of the heap on YouTube are subscribed to the people that are just below them.
And so on and so on and so on.
So as long as you can kind of get a snowball effect started it's going to naturally move up the chain assuming your game is good and fun to watch and it's getting lots of views.
So you don't have to worry about like, oh my goodness, I gotta get PewDiePie like on day one or something like that.
We got our biggest, like when we had Markiplier and Jacksepticeye and all those people doing videos, we never talked to them.
We just assumed that it trickled up.
And then I went and dug through all the videos and indeed, it was like the tier before and the tier before separated by like a week.
You know, everyone's catching up on each other's content.
They go, they find the video, they make their videos on their own.
And also videos get about 10% views to subs in about three days time.
So use that as basically your impression value for when you're determining whether or not it's worth it to give your $20 game away to someone.
You know, it's about 10%.
So the takeaway is YouTube and streaming is the best way to market your game.
Being YouTube friendly will give your game a much higher chance of success.
This seems super obvious, but as I just detailed, there is kind of a little bit smarter way of approaching this, and your game has to be kind of a good fit for it anyway.
If it is a puzzle game that takes place just on a single screen, you have a much harder battle than someone who has something that is scaring the YouTuber or something.
Hopefully none of this seems too crass.
It's just the reality right now.
If this were 15 years ago, maybe I'd be talking about best way to get a commercial deal through your publisher or something, but this is way easier and way cheaper, so should do that.
Anyway, in summary, be better than anyone.
Don't be limited by your constraints.
Embrace them.
Pep talk kind of stuff.
Don't compete with established games and genres, especially as an indie.
I feel like that's suicide.
And then invent your own Calvin Ball.
And Calvin Ball does not have to be Katamari.
Calvin Ball can be Rocket League, which is just replace the people with cars.
I mean, that's perfect.
because we know how to drive, we know soccer, it just works.
So that's a great example of that.
Prototype for success, Slime Rancher focused entirely on that 90% loop early on.
We tested it as a complete game and it allows us to be very confident early on in our design.
That is super important going back again to two years of sitting in an apartment and no one's paying you.
To be as confident as we were that we really had something is meaningful.
One, because it actually gives you the energy to just keep going day in and day out.
And two, because it felt like, you know, we were actually building towards something as opposed to like we're just living in the unknown every day.
That would be terrifying, so avoid doing that as much as you can.
Next, to make your game a shark, shark features inform the core design.
Pug features are nice to have but not essential and bloat your game.
Nothing against pugs, add pug features later.
It's fine, just don't do that in the beginning.
Shark design is more focused and cheaper to develop because you're only adding these sort of lean, mean things that feed directly into your core design.
ensuring that the player is going to be experiencing it regularly and you're going to get great feedback on that.
Don't add stuff that, like, they're going to be doing 10% of the time.
So, next is Early Access is a live game.
Players expect regular content updates, build updates around exciting stuff, and generate hype.
I know sometimes you want to be quiet, especially when you're developing a game, but you're selling a game.
Don't fool yourself.
You've sold a game.
It's up to you now to effectively market it, and you're marketing your development.
So make a big deal out of all the hard work that you're putting in.
Build up to a monthly release, and then go for broke with it.
Just keep trumpeting your achievements.
This may require restructuring how you would otherwise develop your game.
YouTube and Twitch, there are qualities and game designs that are YouTube friendly, there are some that are not, and for those folks, you just have a harder battle, because a lot of attention is driven by YouTube these days.
Audiences want to feel engaged, not just a spectator, and make it easy to request keys, but just give them a way to start.
Can't stress this enough, I see a lot of developers on Twitter that are complaining about their game that not a lot of people know about, how they fooled another scammer.
Like, what are you doing?
That scammer has a friends list.
Give him a Steam key.
There's a viral mechanism in Steam and on Xbox and that's what it's there for.
The only way that that isn't going to happen is if they sold it and it got lost or something or I don't know what, but either way, it's a Steam key.
It gets activated on Steam and unless it's getting activated on a dummy account to be sold later or something.
you're fine.
They have friends who will see that they're playing that, they're gonna look at the store page and you're probably gonna get a sale out of it.
Once you're established, don't just give it away because then there's like, you know, the word gets out and no one's gonna wanna buy your game because the developers just give it away for free.
But absolutely do not be skittish about giving that game away.
And if it's ahead of Steam, if you're not on Steam yet, make it small enough and just available for download somewhere, give it away.
Even sometimes like we did, we had this little bit of kind of air of secrecy around it, because we hadn't really announced it yet.
And that really, I think, helped generate hype between the people that were trading it.
They were like, what the hell is this game?
What is this game is a very potent question.
So use that to your advantage when you're unknown.
That's it, thank you very much.
I'll do some Q and A now.
It seems I have a little extra time too. So because I finished a little early, I'm going to show a trailer for our next update that's coming out next week. So just brace yourself.
Thank you very much. So if anyone has any questions, just go ahead and line up. No? Hi.
Hey. So you had some really good sort of warning critique on early access. Knowing kind of what you know now, would you do early access again? Is there some positives to it? Or would you just go straight to like a full launch? So would we do early access again?
right now in the position that we're in, I would probably say no. Only because we can. But at the time early access was absolutely the thing that allowed us to do what we did. We're on year three and change of Slime Rancher development.
So two years into it, when we first released it, we really needed to do that.
Getting those initial sales absolutely helped.
So I'm not trying to demonize early access in any way, but if we could and just come out with something and say this is us, this is our new thing, I would probably do that.
That said, I'm used to developing games over a long period of time.
So if we didn't do early access, we would probably still ship something that is smaller than it would be in two years, perhaps considerably smaller than it would be in two years.
And that really is just the reality of game development these days.
I mean, name a single game that isn't, you know, maybe a really small indie game or something that doesn't have content later on.
It's just, that's I think just what players expect these days, you know.
oh, season pass, it's miserable, but why doesn't this game have a season pass? What is it dead on arrival? They want it both ways. So, yeah. Hi. I wanted to ask, so with putting out large chunks instead of small bits and breadcrumbs along the way, is there a fear ever of the risk behind like this could not work or how is that maybe handled preemptively?
Well, going back to what I was saying earlier, we just know the game is fun at this point.
So our reviews tend to say that.
So when we add new stuff, as long as it's in that sort of same wheelhouse as what we've already done, we're much more confident about that.
Our Slime Science update, which was completely unlike anything that we had done up to that point, we were super nervous about that.
We were like, this, you know, they're, um.
People are going to see this and go, this isn't the game that I bought.
Like, there's like crafting now and everything.
You know, it's not for me.
That wasn't the case.
But we very deliberately hid that, depending on your play time, several hours into the experience.
We, at this point, kind of don't touch our first hour of the game.
There might be a few additional things down the road, but we feel like the first hour works, and so we're just backing away quietly and all other things are going to come later.
So, but we do rigorously test it, and as I said in my emergent storytelling talk, we just kind of dial everything back from broken.
So we know at the very least, like, whatever we're releasing is kind of firing on all cylinders, and, you know, people seem to like that.
So this one in particular, the quantum slimes are like generating other realities of themselves at all times, and if they get agitated enough, they will decide that that reality is more favorable than their current reality, and dismiss the other realities and join with... I mean, it's a nightmare.
And it might be the end of us, but it's going to be a lot of fun to find that out.
And so far in testing, it's okay, but it's really close to that.
So we'll learn.
But that's why we're in early access.
So...
Awesome.
Thank you.
Thank you, great talk.
And you mentioned the performing toward the camera, so as you watch and what, could you tell me a little bit about how you did it so that when the player watch and play the game, it actually really performing toward the camera?
Right, yeah, so explain more about how we developed this whole towards the camera kind of gameplay.
It was the vac pack is a vacuum, so to begin with, things are going to be coming at the camera.
But there was a key moment early on in development where, initially, when slimes and other things would vac towards the camera, they just did in the state that they happened to be in at the time.
And we made one little change, which said, when you start vaccing a slime in, you know, a frame or two, they snap and face the camera and go, woo!
You know, when they do, like, I wasn't expecting that.
And that made the thing that a player is doing, you know, 50 times every couple of minutes, like, way more intimate.
and it showed that the slimes weren't really afraid of you, they were surprised, but I think eyes towards the screen, especially in a first person game, is really key.
And in most games you just don't get that because you're taking someone out from a distance or you're engaged in combat and so you're not necessarily looking at that and they have no real reason to interact with you on that level.
But we, you know, the tabby slimes boop the nose of the player.
We just thought that was silly.
But it also informs, like, the game design in that it's potentially a hazard if the tabby happens to be spiky because it merged with a...
rock slime. So it's all of those things that are just saying like this is the player's eyes and we want to do as much stuff as possible in order to make that fun.
And also things that are happening without the player acting on something like the boop. That kind of takes people by surprise and it's because they weren't seeking it out. But it's a harmless interaction so the more stuff like that that you can do I think the better.
Hi. So I was wondering, um, Slime Rancher is actually one of the few games on Steam I've played that was kid friendly. And I know a few companies have been like kind of battling, um, the YouTube content because it was like had a lot of swearing and a lot of mature content. Do you think that hurts Slime Rancher's image at all? I was wondering.
I don't think so, because I mean, I think it's up to parents to make sure that they're not watching.
So, I'm sorry, the question was, do we think like YouTubers who are swearing through a Slime Rancher Let's Play hurts our image?
You really have no control over that.
So, I think it's up to parents to make sure that they're not watching a YouTuber that...
is known for that.
But I still think that half of the reasons someone shows up for YouTube to watch a Let's Play tends to be for that person.
It's probably more than half.
So we're kind of fine to let them swear through it.
I mean, there's times I swear at Slime Ranchers, so I think that's acceptable.
Guys like italics who keep it clean and stay informative.
I think maybe that's more for kids.
But we don't think it's hurt the image, because I don't think a lot of times those demographics cross over too much anyway.
So kids that are watching kid-friendly content on YouTube probably.
aren't even being exposed to that.
And at the end of the day, there's a talking head.
It's not usually coming from nowhere.
So it's not like they would think that the developers have added this to the game.
They're seeing someone's head screaming at this game.
And I'm sure there's no shortage of YouTube videos where someone's swearing at a Disney movie or something as they watch it, something like that.
So it's not a problem.
Thank you.
OK.
Awesome talk. Pretty simple question. Why not Kickstarter?
Oh, honestly I kind of felt like it was on the way out. And we were confident enough in our game that we thought if we can get this thing on green light and start selling it, we're good.
But we did think about Kickstarter and I think what we and we learned that early access is almost no different, but I really didn't want to be beholden to a group of backers who were going to be expecting things for them.
Like, I know everyone does it differently, but like backer updates and everything where you're speaking to only these people that really, that have backed you, like.
I mean, I want a much, much bigger megaphone to speak from, so it made sense to just get the thing on Steam and let's see what happens.
And also, to be totally honest, we just didn't need the money.
We weren't eating ramen or anything.
We really wanted to get paid because it had been a couple of years, but it wasn't dire straits.
And so it was fine.
Awesome, thanks.
Hi.
If early access is released now, then what is release?
Where is that line for you now?
releases basically just 1.0 and we always think of it, I'm sure everyone does it differently but we always think of it as 1.0 is the 1.0 version of Slime Rancher that is in a box on the shelf at Target that someone buys in a vacuum and never connects to the internet or reads anything about the game that they have twenty dollars well spent.
it's a complete experience.
Doesn't mean that we're not gonna add a ton of stuff later, we most definitely will.
You know, there's a lot of stuff that we wanna do with it, pending continued interest, but 1.0 for us is just, if this were in a box, does someone feel good about, you know, having purchased it?
So, yeah.
A question related to the same topic is, you mentioned the reviews for your early versions, they're negative, there are some issues, it's not the same game you're going to end up releasing, and it is hurting you.
Is there a way to remove those reviews when it goes to GA, or is that not allowed?
Because that way it's almost like a new game when it's released.
Right, right.
So is there a way to remove?
bad early access reviews, and my understanding is there is not, other than they will be flagged as early access.
And I don't know how people feel about Steam's recent review versus, you know, total average review.
I don't know how they perceive that, but I'm sure if one of those is mixed, then the game is mixed.
So an early access review that is bad, that happens to, or a review that is bad that happens to say early access, I think anyone is just gonna read that as a bad review.
Because it's blood in the water, right?
It's like, at one point this game was bad, even if it isn't now.
So, you know, I get skittish already, right?
Like, well what did they do that all of a sudden made it better, you know?
So, it's not fair, but I'm sure that's how people would perceive it.
Thanks.
All right, well, looks like that's my time.
If anyone has any additional questions, I'll be around.
Thank you very much, I really appreciate it.
