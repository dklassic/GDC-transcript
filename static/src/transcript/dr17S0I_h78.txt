Good afternoon.
Really nice to see so many of you here.
This is my first GDC and it's been really great so far.
I'm Maxime Fleury, Asset Art Lead for the Machine and Weapons team at Guerrilla.
And this is not just my first GDC, Horizon Forbidden West is also the first game I ever worked on.
Before starting at Guerrilla, I worked in visual effects as an asset supervisor making assets for movies.
This here is my colleague, Leonard Franken, who's a senior artist on the team.
He's been with Guerrilla for over 15 years, where he worked on most of the games in the Killzone franchise, Horizon Zero Dawn, and of course, Horizon Forbidden West.
To give you the most complete look at the process of making these machines, we'll divide this talk between us.
Let's go to the 18th of February, 2042, release date of Horizon Forbidden West.
Well, it could have been.
So today, we'll talk about how we avoided spending over 24 years on this game.
And hopefully, this will give you some insight into how to schedule and set up your pipeline to create some of your own complicated assets.
I'll begin with a quick introduction to Horizon and the machines that populate the world, followed by a look at what it means to schedule a large amount of assets while finishing somewhere before 2042.
Then, Leonard, who worked on both games in the Horizon franchise, will take you on a quick journey back in time to explain how the unique look of the machines evolved.
He will then go deeper into each step of our workflow and how it evolved for Horizon Forbidden West so we could meet our deadlines.
And when we understand the pipeline and the process, I'll go over team management and what it takes to keep a team happy and productive during a long production.
And last but not least, we'll have a look at how we worked with Outsource, without whom we couldn't have done this project at all.
So how many of you played the game?
Ha, that's great.
I hope you enjoyed your encounters with our machines.
We certainly enjoyed building them.
For the people that didn't play any of the Horizon games, let me tell you briefly what they are about.
The game takes place in the future where you take the role of Aloy, who tries to save the world with bow and arrow, while giant robot dinosaurs try to kill her.
But these machines are not just there to make Aloy's life difficult.
In fact, most of them don't really care about her unless she gets too close or disturbs them otherwise.
You see, their primary function is to regenerate the planet after cataclysmic events destroyed almost all life on Earth.
And to do that, there are different types of machines.
You have the acquisition class machines like the fangermers here that gather resources in canisters and travel in herds.
They are usually accompanied by recon class machines like the Burarr.
Pretty cute, right?
who are constantly on the lookout for danger.
If they spot it, they call in larger combat class machines like the Ravager or even the Fender Jaw to protect the herd.
If machines do get destroyed, there are scavenger class machines that strip their parts and resources to be used elsewhere.
And armored transport machines carry these resources across the lands.
Towering over all are the majestic toll necks walking the earth while gathering data to help the other machines complete their tasks.
Horizon Zero Dawn was well-received, and especially the machines got a lot of praise.
So Matthijs de Jonge, our game director, wanted to make sure that the machines of Forbidden West would be a worthy addition.
One of his regrets from the first game was that only two of the 25 machines, the Thunderjaw and the Stormbird, were the really big robot dinosaurs he had originally envisioned.
So for Forbidden West, he wanted to extend the roster with more giant machines.
This is something that we as a team, of course, could get behind 100%.
And we added the slitherfang, tremortusk, and slaughterspine, among others.
To make fighting and hunting them even more interesting, Matthijs also wanted the machines to have more complexity, for which we gave them more interactive parts, attacks, and different ways for the machines to move.
Aloy was able to override and mount some of the horse-like machines in the first game, but Matthijs wanted her to be able to ride different machine varieties in the Forbidden West.
So we added machines like the Claustrider and the Bristleback to add variation to the way Aloy travels throughout the world.
And where before only one person, the only person who could do these overrides was Aloy, This time Matthijs wanted to give certain Yumi enemies the ability to override some machines as well and use these against her.
For this, we painted machines with the Graalai clan colors and the Tremortusk even got spikes and a turret with arches on top.
And last but not least, most machines got an Apex or elemental variation in the game.
The Apex machines are faster, have more health and are a real pain in the butt.
To second-guess the player, they got a different color scheme.
And the elemental variations carry different canisters or fluids to allow the player to hunt for resources.
To see how we made all of these, let's first have a look at Gorilla's machine pipeline.
It is divided into the following phases.
First, the low-level phase, where game design writes a design document describing a machine's role, functions, and its attacks in quite a bit of detail.
When that document gets approved by the game director, our team creates a 3D concept model in the static phase.
There are regular stand-up meetings with the leads of all teams involved, and the concept model is discussed to make sure it works for everybody.
And changes are made until it does, which is when the model gets rigged and animation can start during the dynamic phase.
Now, while the other teams pick up the concept model, the asset team works on a fully detailed machine model.
Next, animation starts going back and forth with core technical and artificial intelligence in the interactive phase to make the now animated machine work in game.
And as soon as the detailed machine model gets approved by art direction and game design, we'll update the model in game with a better representation while outsource works on the final game mesh.
When the final model is textured and integrated, visual effects and sound effects can add their magic while game design balances the gameplay with artificial intelligence.
Now that we've seen where the asset team fits in in the overall pipeline, let's take a closer look at the steps in our workflow.
As I just explained, we start with a 3D concept model where we figure out the general shape and size of a machine.
For this, we have dedicated 3D concept artists on the team.
The concept model then gets detailed into something that could work around in the world of Verizon, which then gets picked up by our outsourcing partners who clean up our work and create the final game mesh.
which we then texture before finally integrating the finished asset in-game.
In between each of these phases, there is a short review stage where we deliver an updated model with work-in-progress textures to the other teams.
This allows them to see if the asset still works for them or if changes are needed before we proceed to the next stage.
That whole process takes about a year for one machine asset, from concept to fully finished textured asset in game.
We started in 2018, 24 machines, one year per machine.
That means we wouldn't be done till, well, you know, 2042.
Management obviously had another release date in mind.
So how would we fit these 24 years into a more realistic four-year plan?
We have multiple artists on the team, allowing us to work on more machines at the same time, reducing the overall production time to a more manageable timeframe.
Outsource has the most work, but this could be assigned to multiple outsource vendors, reducing the problem by having more companies work on it.
By dividing the work between in-house and outsource, you can greatly increase the team size and add scalability to the process.
But to fully utilize the potential of our outsourcing vendors, it is important we send them the work they can help us with the most.
You see, some of the tasks in our workflow, like making a concept and detail model and doing the final texture pass, are highly subjective and require a lot of input from our direction and the other teams.
Having outsourced do these tasks would lead to a lot of feedback rounds caused by the subjective nature of the material, and doing these tasks in-house means it can be done with short turnaround times, speeding up the process.
Other tasks, like the creation of the game mesh, the UVs, the LOD meshes and the baking of the mesh maps, are objective tasks, which are very suitable to be divided upon multiple artists with less feedback needed.
This makes these objective tasks perfect for our outsource vendors to help us with.
Leonard will now take you deeper into the process of how we created these machines.
Thanks. As Maxim just explained, I've been with the company for more than 15 years now.
And after Killzone Shadowfall, I joined a team that now will be called the Machine and Weapon Team. Now, when you look at the machines of Horizon, they look organic and fit the world they live in. But it took a long time of exploration to get there. And that exploration is what I will show in the Look the Filament part.
You see, when we started on the new ERP Horizon, we got presented this concept image that had all of the key pillars there from the start.
It had the nature, tribes, alloy, and of course the machines.
But what these machines would look like wasn't really defined at this moment.
So how did we get there?
Well, when the company moved to the new project, before that, we worked for a very long time on Kailh's own, which had a totally different style.
It was more like a dark and gritty first person shooter.
So when designing the first concepts of the machines, they were very tank-like and man-made, a lot like what we're used to on Kailh's own.
We wanted to steer away from this look and started to look into biomechanic design, where examples from nature get used in designs.
For example, here on the Japanese bullet train, it got its shape of the beak of a kingfisher.
This solved their problem of when the train was going with high-speed through tunnels, of not exploding, which is kind of nice when you ride a train.
With the studio visit from Martijn Wisse, a professor in biorobotics from the Technical University Delft, he showed us some advanced robotic designs that used artificial muscles and 3D printed frames that had taken inspiration from nature.
So when we started to flesh out the machines, they needed to be more organic.
And we started this by setting some rules.
First, we started with a list that what we didn't want, for instance, no pistons, screws, hard edges, or actually anything man-made.
With this list and the given information, we got back to the drawing board and did a lot of exploration in 2D and 3D.
We really tried to get away from the style that we were used to on Kailh's own.
And in some cases, this turned out better than others, but I think we got there.
With that exploration that we have been doing, we also looked at the machine's colors.
They mainly were a lighting color as they support the story of them being 3D printed and not hand-painted afterwards that would make it more human-made again.
But to support the designs of the machines, the interactive components had to stand out.
And game design wanted us to have the interactive components, for instance, the plating, antennas, weapons a lighter color, and the base body more consisted more out of dark materials to draw it a bit more to the background.
So it would clearly read as separate components and shootable.
We started to apply these rules to the machines.
And now that we were happy with the concept, we took everything we learned and made a list of elements of the, yeah, that we did want on these machines.
And they should have run on biofuel, have 3D printed frames, muscles, and plates on top.
With all of these features, we got a more organic looking Horizon machine.
But working on the first machine from the 3D concept, we started to notice that it did not really have that organic feel we were looking for.
As the model got made with the hard surface polymodeling technique that we previously used on Killzone.
As this obviously worked for us before, we continued working this way, but this time around we wanted a more organic looking machine instead of the more chunky machines that we had on Killzone. So it was clear for us that we needed to head in a different direction with a workflow that would be less destructive and give us more freedom, as iterations with this workflow caused a lot of rework and it wasn't flexible at all.
Well, exactly at that point, our art director Walton said, this, this is what I want.
And he showed us this image by Mike Nash, an artist who had this amazing organic mechanical sculpting style.
And it would perfectly fit our machines.
He was available for freelance work and helped us defining the machine style of Horizon.
And on the left, you can see the models that we've created in Guerrilla before the detailing.
And we sent this to him and on the right, you can see the same modeling with all of the detail added.
This really was that push that our 3D translation needed and this in the end set the machine look.
Now that you know a bit more about the history of the machine look, I can show the process of making one of them.
And I will do this by example of the tremor task that's now on screen.
and by showing the differences between the Horizon Zero Dawn and Forbidden West pipeline.
At the start of the process is game design as Maxim showed before on his production overview.
A document gets made there where the Yenno was specified, and it has some reference images of it, and also what components, weapons, canisters, and other interactive parts it needs.
The attacks get explained, and all of its specifications, and it's all together with some stunning game designer art.
Now that there's a design document, we have a starting point for the machine and weapon team.
a concept artist of our team, starts to work on the machine as it's now moving into the concepting phase.
Creating a concept in other companies, but also ours, usually starts with a 2D design, but because of the complexity of these machines, we directly start in 3D.
Version gets kitbashed from previous made parts, setting the outline of the machine, keeping in mind the movements and skeleton of the animal it's representing.
This way of working turned out to be really quick and even faster than when just creating simple volume shapes.
As the concept was getting made, we had regular stand-up meetings.
This stood together with the game designers, animators and tech animators.
And in these stand-ups, we would check if everything was on track, in terms of sizes and components for game design and movement for animation.
And when everybody was happy with the final machine's concept, there would be a sign off, and a first model gets generated from the concept to put in game.
TAC animation can now build a rig for the animators.
And we could continue with our next phase, the high resolution detail model.
On the first game, the machine's look was set by a freelance artist.
And so a few were made by him.
But the rest of the machines got detailed in-house by our team.
And this is where we made the switch to work with ZBrush.
That was a lot more organic to work with, and it gave us a lot more freedom.
And to create a consistent look across the machines, we created a library of parts to detail them.
Now that we had the look down, we continued this way of working for Horizon Forbidden West.
From the rough concept mesh we started with the subjective detailing work, and I will show this process on the upper leg of the Tremor Tusk.
Step by step we add parts like the muscle and joint to block some volume, creating a basic frame connecting the joint.
making the frame more organic by avoiding 90 degree hard angles and make lots of connections throughout adding layers on top of that extruding volume to get that 3D printed frame feel inspired by nature that we also have seen before with the visit from Professor Wissen and to balance all of that detail we mask some parts of the muscle with a cover This then of course needs some details, some pinch folds displaying the cloth tension and some buttons that seem, make it seem attached to it.
And all of this is creating a real and detailed model that supports the Horizon language.
Together with the plates, weapons and canisters, this is helping us to set that iconic machine look for Horizon.
As artists of course, we love this process of fleshing out a machine.
But unfortunately, in the end, we still have a schedule to keep.
So to speed up this process, we use a selection of older machine parts, which then get re-sculpted, preserving some detail, and adding new ones in the process.
And as you can see here, we use the eyes of a Ravager, and the gun belt of the Thunderjaw, and the leg of the Tallneck.
As we completed the detailing, we have another round of checks on the newly generated game model.
And so animation can now have another check if movement still works with all of the detail added.
When the detailed model is signed off, the art director makes a color block out.
This gets projected on the game model, so we now have the latest version in game with the color material.
Now animation can continue their work and AI and Cortex can start their process.
As the model we've made, it's making its move to outsource.
On the first game, we did try and outsource the subjective part of detailing one of these machines, as this is custom in other asset pipelines.
Outsource vendors have lots of artists and can divide the work among them.
As they say, many hands make light work.
But what we started to notice with these complex machines is that it's very subjective work.
It was taking a long time going back and forth with feedback and lots of artists working on one machine created inconsistencies across.
So many hands don't always make light work.
Doing the detail pass in-house turned out to be a lot faster and working with a maximum of two artists on a machine also removed the inconsistency.
In the process, we now take our model up to about 80% of completion, doing most of that subjective work in-house, leaving our outsource partners to do the last 20% of objective work of straightening the surfaces, edges, and details.
The work they do is very labor intensive.
So if we needed to do that extra work, the extra 20%, it would cost us to, I think, twice the amount of time in the detailing phase.
Other geptic tasks that get covered by outsource are the game meshes that get made from the high poly detail.
And this includes the first three lots.
UVs get laid out and big maps get generated like the normal occlusion position and curvature.
But I think this is pretty common in most asset pipelines, so I won't really go further into detail here.
But what is different on the Forbidden West pipeline, we wanted to see what Outsource could do on the texturing side for us.
As example, we took the detailing process where the last 20% of objective work gets done by Outsource.
And we now wanted Outsource to do the first 20% of the texturing for us.
And like the art director created a color blockout, he now also created a blockout for the ID clown mask.
This mask gets used for setting the materials in the texturing process.
Like for instance with the green, the muscle is set in that process.
By creation of this ID-Print, the artist can now objectively follow this and we can then later take that map to add more details as that's a more subjective process.
Then they also provide us with a muscle mask, which is an outline drawn of the muscle strands that we can use as an input to create a muscle glow mask in our texturing process.
When all of the outsource work's done, we get a nice package delivery.
We can check this on all requirements, but we still hold off to integration to the game, as the model is still a gray mesh, and the last steps of texturing are done in-house.
On the first game, we started with texturing the machines.
We originally started doing this by hand-painted textures in Photoshop.
Again, this was coming from our Killzone legacy.
Working this way, the albedo, reflectance, and roughness need to be made separately.
And there was no way of directly previewing the textures, meaning an export to game was required every time you wanted to do so.
All of the machines seen in the 2015 E3 demo were still made this way.
There were only three machines in this trailer, and it cost us months of work, or like a month.
No, months, months.
Sorry.
So how did we improve this?
After that 8.3 demo, we went into production for the first game, and made the switch to a 3D painter software.
In our case, we used Substance Painter here, as they still had a familiar layer approach, like Photoshop, but meaning we still had to develop this workflow during production.
We ended up with just one simple template in the end, texturing all of the machines.
And the base materials got set in this template.
But when starting to use this template, a separate Word file gets created.
This Word file then gets separated from that material template, as it had no referencing.
So when creating loads of work files for all of the different machines, this meant a lot of base materials got created.
And at the end of the project, when we made a change in values of a material, this meant we had to go over all of the machine texture files, making these changes by hand, creating room for human error and inconsistency.
On top of that, it took us like a month of changing and re-exporting all of the files.
This was not the only flaw this workflow had.
It had basic inputs set in one place, and the color input at the bottom of the layer stack.
And multiple third-party generated wear masks inside of the layer stack, meaning this workflow had inputs coming from everywhere, making it very unclear and confusing to work with.
When you needed to update one of these maps, you had to reconnect it by hand, meaning searching through all of the layer stacks for your input.
And this, with not even all mechs being created by the output, you still had to create a mask for the styling detail textures and the glow of the muscle by hand.
However, we could now directly paint on the model and preview the textures in our viewport.
This all with the correct shading model of the game was a really big step forward.
But it wasn't perfect as there were still some features missing in the viewport like the displaying of the muscle glow and the tiling detail textures.
All in all, this workflow helped us ship Horizon Zero Dawn, but it was far from ideal.
At the end, we needed some extra freelancers to help finish this project.
So for Horizon Forbidden West, it was clear to us a change needed to be made in the process.
But what was this change going to be?
Well, we started to look into procedural texturing with a node-based approach.
In our instance, we moved to Substance Designer and one of our more technical artists on the machine and weapon team started to develop this process on the principles of the previous workflow.
This process starts with plugging in the delivered maps from outsource.
This is all in one place now.
And the materials are set in a node that is referenced, so all adjustments automatically get rolled out, only an export is needed.
So changes can be easily made throughout the whole process.
The texture artist can then start with the subjective detailing of the ID mask and create a color map from the ID that's needed for the material colors.
With this, the materials are now set and we can preview them.
But at this moment, it still looks very still, like a car that just rolled from the factory line.
And these machines have been roaming the nature and encountered enemies.
So they would need some dirt and scratches to show that.
This wear and muscle now get generated by nodes within the software.
You can set the generators and their presets can be saved to be later used on other machines while keeping the freedom of adjusting it all.
And remember that muscle mask created by ArtSource?
Here in a muscle node a muscle glow mask gets generated from that, where you can set the soft shape of the muscle islands and the variation of brightness of the muscle strands, all creating the final muscle map for a glow in game.
Just another layer of decals come on top, and all of the maps get generated by the output.
So no more hand painting afterwards.
The viewport now displays all of its features, including the tile and detail textures, and muscle glow, so the final result is really close to in-game.
But during production, we also needed to make some texture variants.
The Regala and Apex.
With this new flexible workflow, this was all just possible.
We could now add this to our existing network with just the addition of two simple masks.
With our old workflow, this would have meant starting all over again with a new template and all of its work files.
Adding customization, however, did require a bit more technical knowledge now, as this required a node-based solution.
Like, for example, the heat sinks on the rollerback got some heat discoloring, and a custom copper material on the big snake-like slender thing.
And this all can be added with any custom nodes that the artist wants to use.
So you've got a lot of freedom there.
In the end, texturing on Horizon Forbidden West felt like a breeze compared to Horizon Zero Dawn, as everything was finished on time without the help of some additional freelance artist.
And so, what did we learn from this?
Well, at the start of creating this process, we had to worry it might feel generic, as the textures would be generated, but with the artist input and customizations, it actually didn't feel generic at all.
We had created a balanced and standardized look across these machines with the procedural process.
And now that the final textures are done with all of its variants, Maximo will take over again and show some more on the production side.
Thanks, Leonard.
And don't those Tremor tusks look awesome?
Making these machines was fun, and taking a model from design documents to final textured model and to see it animated in-game is amazing.
Less sexy, but also important, was team structure and management.
As these are long projects, it's important to keep everybody productive and morale high.
Team composition had been different on the first game, so let's first have a look at what we had before and what worked.
Back then, the team consisted of an art director who also took on the role of lead artist.
We had 3D concept artists do a first pass, and for quick turnaround, asset artists pick up the concept, do the detailing and texturing, wanted to get back from Outsource, and to manage this, there was an Outsource manager to review the work from Outsource, give feedback, and integrate the work back into the pipeline when it was done.
As Leonard explained, texturing old machines using the old pipeline was more work than expected.
So freelance asset artists were hired to help with texture work at the end.
And with everybody busy on the machines, there was nobody to model the weapons.
So we hired freelancers to help with that as well.
Having one outsource manager seemed like a good idea.
He could talk to all the vendors, make sure the work was consistent, but he was also tasked with reviewing the work that came back from outsource and send feedback where needed.
But as the amount of machines in outsource grew, this caused an enormous bottleneck in the workflow with everything having to go through one person.
We obviously made the deadline, but we could have saved time with outsource, sometimes having to wait on feedback and not everything getting ingested back in the system straight away.
We needed a different solution for this.
And at the end of this project, the freelancers fulfilled their contract, leaving a very small team in place.
So now that the project was finished and Forbidden West in early stages of development, management wanted to expand in our very small machine and weapons team.
With the first game's success, plenty of people wanted to work at Guerrilla, but it still wasn't an easy job to find the right people for the team though.
And it took almost three years and looking at hundreds of portfolios for them to find the right artists.
With halfway through the second year of production, we had a full team.
It had some Horizon veterans for seniority and experience mixed with fresh talents to bring new ideas.
Now, the team consisted of three concept artists, five modelers, with two of them Horizon Zero Dawn veterans and two web and artists.
So no freelancers would be needed.
With me joining them as lead artist, the art director was happy he didn't have to do double duty anymore as a lead artist, clearing the way for him to go to get back to full-time art direction.
He got me up to speed, handing over the lead role, and this helped me a lot in my first year at Guerrilla.
We didn't have an outsource manager anymore, but now the artists themselves did review and feedback on their own work, so there wasn't any bottleneck.
Where before, there could be a separate artist doing the concept model, detail model, outsource review and texturing.
Now, one artist does the detail model, sees it for outsource, and then picks it back up for texturing when it comes back.
They know their model, and as a result, do faster reviews and give more efficient feedback.
Having the opportunity to text your own model, at the end, creates ownership and achievement for that artist.
Dividing up the work also made it varied for everybody.
And nobody got stuck for just doing one thing for the entire project.
Having the art director on the team to take care of the more visual tasks gave me more time to manage the team as a lead artist.
But lead artist is a bit of a misleading term.
You see, a lead artist is more of a supporting managing artist.
They have to be all around so they can help at each stage of the workflow and offer support where needed.
An effective lead knows the artist and the team, what they are good at, what they enjoy working on, which might be different than what they're good at, and what they want in their career.
A good lead artist means finding a balance between being a manager, a producer, an HR assistant, a recruiter, and finally, a generalist.
And yes, I won't lie, part of the job is looking at lots and lots of spreadsheets.
To know what goes on in a team, it's good to have regular one-on-ones with the artist and the art director.
There, they can talk about any problems they might have, where their passions lie, and everything else, really.
This allows the work to be scheduled so people mostly get to do what they love and excel at, making them more productive.
It's still work, so sometimes artists end up with a less fun task.
There is just no avoiding that.
But knowing what people aspire to allows the work to be divided in a more meaningful way and gives artists opportunity to grow.
One of the artists, for instance, enjoyed the sculpting of the machines, but also wanted to develop the texture pipeline.
And there were people who got pushed in a more technical role where they really just wanted to be creative.
For others, it was their first job and they just needed some more guidance in that department.
Investing time and energy in the artist on the team made them more productive and happier as a result.
But that was only part of the team, as the artists at our outsource vendors do a lot of work and add scalability to the amount of work we can do.
We couldn't have made the same number of machines without them, and they need managing as well.
We started the project with one outsource vendor, but as the project progressed, we added two more vendors to help us out.
As I said, this added scalability to the amount of work that could be done by assigning them the objective part of the process the vendors could split the work among many artists.
We had teams working with us of up to 12 people per vendor, with a total of 35 people involved with machines at the height of production.
None of this would have been possible without producers managing the teams at the vendor side.
They act as gatekeepers, gathering information and making sure everything gets translated and conveyed to their team properly, while also checking there are no problems and their teams are happy.
The lead artist acts as the main point of access on our site, taking the role of outsource manager by making sure feedback is given on time by the artist, keeping an eye on the amount of feedback rounds and answering any questions the outsource vendor might have.
Now, this is a lot of people to manage and keep busy, and they are on other continents, in different time zones, and sometimes communication goes through a translator.
To help with this, the team created an extensive 150 page long outsource document, going through the workflow, pointing out potential problems, and giving examples of solutions.
And every new vendor went through a training period before they started production.
The document explains, for example, how to finish the last 20% of the detail model, as Leonard talked about, create game meshes to our specifications, set up LODs, how to make specific maps, set up the first 20% of the texture paths by doing the ID maps, and even how to do the first skinning pass based on inputs from our tech animation team.
Normally, we would also visit their studios, give on-site training, answer any questions they might have in person, and really get to know the team to help build a relationship.
Unfortunately that wasn't possible on this project as the world shut down.
Gorilla went from everybody in office to work from home within a week, and the same went for our outsource vendors.
But apart from not being able to visit the studios, the outsource workflow didn't fundamentally change.
It just became the world's way of working for a while, as we all know.
It sounds obvious, but what turned out to be really important was communication.
Problems, either in scheduling or workflow, are a part of any game's production, and Outsource is no exception.
We just deal with them as they come up.
But if we don't know there's a problem on the vendor side, or vice versa, a team of 12 people might run out of work or spend time fixing issues we could help them with.
And this could mess up the schedule and cause other work to get delayed as well.
This is where the producers at eVendor come in.
They need to be aware of what's happening on their side, spot any problems, and let us know.
The same goes for us, obviously.
If we go over and might deliver stuff later than was agreed, we need to let the vendor know as soon as possible.
As it is paramount to know what these problems are so they can be solved, either by giving tips on how to solve the issue, adjusting the workflow, or by redistributing the work to lighten the load.
Now, outsource work on Horizon for the West was mostly smooth, but if you remember my earlier distribution of WorkGraph, the actual time spent on projects was slightly less neat, as you can see.
This had multiple causes.
For one thing, Texture started when the pipeline was done.
So there is a gap between outsource and Texture.
But it doesn't mean there was a gap in production.
In fact, we did start Texturing before the last machine finished in outsource.
And you can see that most of the outsource work took longer at the beginning of production.
Vendors had to get up to speed on our workflow and what we expected of them.
And some machines took longer on our side as they were more complex than originally thought.
And then there are some machines that took more than a year in outsource because of the communication not being great.
From our side, there were too many feedback rounds.
Focusing on...
lots of small details. And on the vendor side, producers changed and as a result, production problems weren't always communicated properly.
Towards the middle of the project, you can see most staff sped up and completed much closer to what was originally scheduled, with work often getting done faster than anticipated.
This was a direct result of communication getting better, and both sides knowing what the others needed, allowing for better synergy.
This allowed flexibility with vendors helping us out during spikes of work, like the trimmer task that had to be finished for the first trailer over a very short period of time with a hard deadline.
And the vendor really stepped up, rescheduled work on their side and made sure they delivered on time.
While at the same time, we did extra review sessions to help them achieve this, all part of the same team.
So what did we achieve?
Having the same artist take a model from detail model to final in-game asset created ownership and gave the artists a sense of achievement.
It also meant they didn't do just one sort of task for the whole production.
Variation keeps tasks from going still and morale high.
We tweaked the team composition, adding more asset artists and spread the load of review work.
Having 3D concept artists on the team had already worked on Zero Dawn, but having a separate art director and lead artist to split the load meant there was more time for internal feedback and team management.
As a direct result of ownership, variation in work, and team composition, the artists on the team were happy and productive.
And the new texture workflow that Lennart described made it easier to make changes, even late in the project, and help us meet our deadlines.
Because we shared the feedback work among the team, there was more time for actual outsource management.
Our vendors also did amazing work.
We couldn't have done it without them.
In fact, together, we built 24 new machines, seven of which were XLRs, three extra mounts.
We updated 21 of the existing Horizon Zero Dawn machines and created 33 Apex texture variations and an additional five Regala variants.
And together with the elemental variations, there are over 100 different machines in Horizon Forbidden West.
And it didn't take till 2042 to finish.
In fact, the machines were all finished towards the second half of 2021, five months before the release date.
I'm really proud of the team, of the work that the team did.
And it's great to see players experience these machines in ways even we couldn't imagine when we built them.
I would like to finish with a fan-made video I found on Twitter that shows some of our machines in action.
Thanks for listening.
I'd also like to thank the rest of the team who couldn't be here for their amazing work, and Suny Legends who made most of the gameplay videos except for the last one for our talk.
And I think we have some time for questions if there are any.
Hey, great talk, great work on the game too.
I'm really enjoying it.
So I'm curious, and this is maybe more of a design question.
But I'm curious what motivated this decision to change the base scout class in the first game from a velociraptor type creature to one that was the burrow or that was more based on like a ferret or a badger.
I think we had in the first games, we had a lot of quadrupeds and velociraptor, T-Rex kind of machines.
So we wanted to change to different ways of movements and stuff.
In fact, there is a talk tomorrow by our animation supervisor, Richard Oudts.
So he'll talk more about that.
Thank you.
Great presentation, great game, good job.
Quick question, when you were talking about the ownership and the artists talking directly to the outsource artists, was that communication directly with the artists in outsourcing or were the producers managing the artists in outsourcing?
Well, usually we work with artists on different continents and they don't always speak English, the artists themselves.
So we usually talk to the producer with the team of the artist, but then the producer translates because they can't always understand everything.
Gosh, but they still got that sense of ownership.
And I can't understand them, so it's not just that I don't speak English, I don't speak their language.
So.
Sorry, one more question.
The more junior artists you hired, were they also given that sense of ownership, or was there a little bit more oversight on them?
No, they made machines as well, from beginning to end.
Cool. Thank you very much.
No worries.
Hello. Oh, I don't know if you want to go first. Okay, sorry.
With the art leads interfacing directly with the outsource teams for those reviews, I was wondering how often were the art leads reviewing work from outsource, and how did they balance that with working with the folks in-house?
Sorry, I couldn't hear it completely.
How often were the art leads interfacing with your outsource houses?
Like how many reviews per week?
Was it sort of a constant stream?
Or how did they balance that versus the reviews that they would need to do internally?
So it was sort of constant stream because at some point we had multiple machines in outsource and in production and whenever I had regular meetings with them, so I was sort of the gatekeeper there and then the artist did all the feedback and if there was a specific question I would relegate it and make sure that they knew so I handled sort of the production side on my end, on our end but yeah, it was like a constant stream of outsource.
And was that through Slack, just a constant stream of messages, or did you have some other external tools that you used to interface with the teams?
Yeah, when I joined, and we still do for this, we used Hansoft, which was, yeah, maybe, you know, I would like to.
progress through Slack and have instant messages.
I set up Skype with them so they could always send me messages.
So at least there was, you know, I could react straight away.
So not having to constantly update some program.
Thank you.
No worries.
Oh, sorry.
Thank you for the presentation.
The game is great.
I don't know the question's topic, but I noticed a lot of improvements to the animation with Aloy and everything from walking and climbing.
I just want to know, what were the challenges in terms of implementing the animation during the fight scenes or the machines?
Well, you should really come to Richard's talk tomorrow, because he talks about exactly that.
He can answer that better than that. We just built a model. So he brings them to life, or his team brings them to life.
Okay, thank you.
No worries.
Hi, my question is similar to an earlier question. How often did you have cross-disciplinary reviews about the machines being built?
You know, how AI was implementing those behaviors and how those behaviors were being used by the gameplay designers?
I think that's a good question.
We've got a lot of good questions.
We do.
We're going to answer those questions in the Q&A.
We'll see you there.
Thanks.
Bye.
Bye.
See you there.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
So we have the stand-ups like we talked about.
So we regularly have the teams directly involved with us, like animation and tech animation, who does the rigging and builds the rigs and game design.
And then as we progress, there's also to the four-week weekly meetings with all the leads from all the teams on the machine pipeline to discuss whatever is needed. So sound effects is there really early and visual effects and everything just so everybody knows what's going on because these machines have a lot of moving parts.
Thank you.
No worries.
Hi, I guess I do have a bit of a sound effects question.
And I was wondering, do the sound effects, does the sound effects team get started like as soon as the concept is agreed upon or do they start a little bit later depending on the machine design?
Do you wanna answer that?
Yeah, well, they indeed do start with the initial concept, but towards the end, the final comes in.
So they do start to place their markers and everything for that at the start.
Cool, thank you.
So, big fan, and this is the best session for me at GDC.
So, the question is about how to design this master.
It's like you said, you design the design document first, and then do the model, and then change the design, right?
So I want to know is there some standard or criteria to measure if this is a good design or not.
Because it's like I design a machine and I don't know if it's good or not.
You mean the visual design or the game design?
The game design. It's like how to design a boss.
So they spent a long time making those design documents and they're extensive.
They're like, I don't know, 80 pages, some of them.
And there is a lot of information in there.
So my question is about how, is there some way to say, okay, this is good.
We can pass to the next phase.
They keep iterating on them because they also, you know, they really integrate with other parts of the game.
So, you know, and there is a lot of fine tuning there.
So they try to think what matches with the gameplay and what matches with the story and then sort of go from there.
But yeah, we don't have any game design talks here today.
So.
Thank you.
Thank you.
No worries.
Hey, I was curious if you could elaborate a little bit on the sign off process that you would have at each one of the distinct internal phases, like, was that a meeting who was involved in that who gave the sign off? And then, you know, was yeah, like, what was the frequency of that?
Yes, so after each of the stages, we finish the concept, then we, like Leonard was showing, we look in-game and in-engine to see all the zones and if you can hit everything, what the sizes are.
And once game design and animation, they look at the model then as well to see if the anatomy works.
And if they in that stage do a sign off, then we can progress.
And it's really important that they do because then we know that later on, we don't have to go back.
And, you know, as we progress, more and more teams get involved with this sign off because it gets more and more things get tacked on.
So.
How was the sign-off managed? Did you have like, did you denote that it was signed off at some given point?
Yeah, we make sure that it goes round and then we do an email so we have it all and then we progress to make sure that later on, you know, we say like, well, we did look at it and it is signed off. So, cool.
All right, thanks.
No worries.
Hey, you guys have a fantastic game, of course, but when you went from substance painter to designer, how did it affect the workflow efficiency for the artists and the force multiplying of productivity? It's kind of a both question. Yeah, as you could see in the process, the texturing process was like really short, so it immensely affected that. It helped a lot.
And as we just now could set the generators and everything in there, and it had presets.
And we had the basic input from outsource for the ID mask already made.
So it was just editing of the mask, creating the color out of that.
And it was a very, very quick process.
Thank you.
I just want to add, in fact, towards the end of the project, I think in the last month or something, well, pretty close to the end, the art director didn't like the look of the metal.
And we updated, like the material got updated, and then we just batched process all textures.
And it was basically in a day, it was all done, where before it took a month to do all the machines.
So it was hugely beneficial to us.
Wow, awesome.
So you mentioned you use clown maps with the concept art and stuff early, early.
And you have 3D concept artists who are also giving you a workout mesh.
So are you also testing your texture pipeline with the clown mask early on the prototype mesh?
Getting a headstart, like generating, because you already have the clown.
So are you using that to generate your ideas?
The cloud mask gets created afterwards at the end in the outsource process.
So not with the concept.
If we get the detailed model, then the art director, he does a paint on top of that.
And that we do with the side projection on top of the model to represent what it's going to look like.
and we do generate like a really dirty version in Houdini to project the normals on there already.
So that's quite detailed for what we have at that point actually.
Yeah, no problem. I was just assuming because you had the prototype model that if you could already have a concept artist do a clown pass, you could probably generate a little.
Now that happens later in the process.
Okay, no big deal.
Okay.
Also, we don't have UVs yet at that point.
It's just generated UVs, but the side projection looks so good.
We get like, um, tickets from QA gone like, yeah, but the colors are not correct.
It's like, well, it's not the finished model.
All right. So, um, not only is it fun to like observe these awesome like machines, but also the whole, one of the points is to like take them down and blowing off like bits and pieces off them. So how did you guys handle that process of.
Or where is that process, I guess, of, I guess, modeling the pieces that come flying off or after a machine's been destroyed?
So there's different parts, like the canisters, they're instanced, so they get reused on all the machines.
And then some parts are like antennas and stuff.
We reuse them or re-sculpt them a little bit.
Then the plates are got like Leonard showed, get sculpted with the machine and really think about what it looks like with them on and without.
And things like weapons that you can shoot off and pick up, they get handled by our weapons team, which I didn't talk about at all, which is a bit of a shame because they do amazing work.
They made over 100 weapons as well.
And most of the parts also get specified in the design document at the start.
So how many plates, where, and components, everything.
All right, awesome.
Thank you guys.
So, great talk.
I have some technical questions about the machines.
So, first of all, could you recall what's the average poly count of the machine?
Like, I know it differs from machine to machine, but what's the average one?
What's the average poly count for LOD 0?
I think the, if I remember correctly, I think that the tremor task was about the highest lot was about 400,000 polys, triangles, sorry.
And how many LODs did you alter?
It depended on the machine.
Some got fewer because they were smaller, but like the biggest one cut about seven.
I, we had way more and then it just, it was just too much.
Okay.
And the last one, the machines are quite huge.
So I'm curious about the resolution needed to have a like good quality, a textile density.
So what were the, what was the resolution that you like used?
detail maps or How many texture set this you use?
What was the memory budget for it?
It sort of varies obviously by machine, but a large machine might have in total say six or seven 4K maps, but then we split them up into lots of 2K maps.
And then those were baked into texture sets.
But we tried to emphasize the parts that you saw the most, like the eyes and the plates and the details that would be seen the most.
And they had separate texture sets.
So we could always scale them up if needed to.
And then we have a large array of detail textures that can use them on top.
And they create details.
to really give you that scale.
And then we split up for the different variations.
So every texture set actually had two, was split in two.
And so for a different variation, we would only have to swap out one of them.
So we loaded in the least amount of textures.
Okay, thank you.
No worries.
Hey guys, great talk, great game, thank you for your job.
So the question is about updating the existing machines from zero dawn.
So did you follow the same flow for that?
And how much compared, of course it's like, it takes less time than creating a machine from scratch, but how complicated was that, like, I mean, updating the existing ones?
Well, the models stayed the same.
So we didn't do any updates to the model, but we did redo the texturing.
Just the texturing?
Yeah.
Okay, thank you.
That's it, there's people waving at me.
Thanks.
Thanks.
Thanks.
Thanks.
Thanks.
Thanks.
Thanks.
Thanks.
Thanks.
