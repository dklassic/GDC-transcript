So first off, thanks for all being here at 530 on a Thursday.
I feel truly honored to be here to not only represent Gorilla and Horizon, but also to speak in front of such a really big group.
So that's really cool.
So thanks for coming.
Let's get started.
So two years ago, less than one year before we were going to ship Horizon Zero Dawn, we were having a really big playtest.
The first one of many.
It was going to be 20 players for five days playing through the entire game back to front for the first time.
And we had set up telemetry and analytics, and we'd set up surveys for the testers to fill out every day.
And we brought our latest and greatest build at that time.
And we thought it was going to be amazing.
But the feedback was absolutely brutal.
Almost instantly, we got negative responses.
The game was unbalanced, it was too difficult, there were bugs everywhere, and core mechanics were just not fun.
And there's really nothing like playtesters writing in all caps that your game is beyond disappointing.
So after five years of development and less than 12 months to go, I felt like we were in trouble.
I truly felt panic.
I think we as game designers have quite a tough job.
At the start of the project, you have to convince people of your ideas and drive gameplay concepts with very little to go on.
You have to convince your boss and team members that your ideas are any good.
And if you do, you have to work hard to get them into the game.
If you're lucky, you get to make prototypes.
And as soon as you make a prototype, the feedback starts.
Some positive, but usually it's quite negative because it's only 10% or even less of what you're eventually going to ship.
And all of this creates doubts.
Did I make the right choice?
Did you set the right goals?
You start second guessing yourself constantly.
And this proceeds throughout development of your entire game.
And usually it doesn't even stop when you ship.
If you dare to go on forums after you ship, there's a lot of stuff there as well.
Today, Horizon is a big success.
It's gotten critical acclaim.
It's gotten great sales.
But most importantly, we have millions of players who love the game.
Thank you.
Thank you.
So the hard work definitely is worth it.
But sometimes you tend to forget that when you're knee-deep in development.
Now I know, so game designers, it's their job to stay upright, to take in all that feedback and to analyze it and try to tackle the problems head on.
And that's what I want to talk about today.
I want to share our version of staying upright.
I want to take you through the journey that the game design departments at Guerrilla went through while making Horizon Zero Dawn.
And I want to take you through each phase and talk about the intentions we had during that phase, the goals we set, what we tried to achieve, the problems we faced.
I can't talk about all the problems.
We'd probably have to organize some sort of Horizon Zero Dawn problem summit for a week or something.
But I picked some that I thought were really interesting and that hopefully you can learn from or be inspired by.
And then I want to reflect a bit about what we did back then, how we tried to tackle those problems.
But also now that the game is shipped, I kind of want to look back and see what I would have done differently if we had the chance.
And my hope is that I can inspire you to press on when things get bad when you're making your games, and that maybe you can learn from some of our mistakes.
So hello, my name is Erik, and I am one of the lead game designers at Guerrilla Games.
I've been at the company for almost 15 years and have worked on almost every game that Guerrilla has shipped.
I started out as a single-player level designer on Killzone 1, moved into game design on Killzone 2, went from single-player to multiplayer and online, and eventually became lead on Killzone 3 and Shadowfall.
And I've been trying to stay upright for quite a few projects, and I've seen my share of problems.
And it only gets a little bit easier over time.
But to start talking about our journey, we have to go all the way back to the beginning.
In 2001, the game design departments at Guerrilla, as well as the rest of the company, was presented with a very early concept pitch.
This pitch was about 70 slides in PowerPoint.
Little bit too much to go through entirely, but there were four major game design goals that we were gonna have to try and adhere to and try to achieve.
The first one talked about that the player was going to experience the majestic wilderness of a future post-post-apocalyptic world.
And essentially what that came down to is that this time around, we wanted to make a beautiful world that the player would want to be in.
So up to this point, we had made Killzone games, which in their own way are beautiful as well, but they are sci-fi, dystopian, kind of dark worlds that usually you want to get through and get out as fast as possible.
So for this time around, we wanted to make a game where you want it to be, where you want it to stay.
And we were going to inhabit that world with awe-inspiring machines.
We had made action games before.
We felt we were getting pretty OK at it.
But we wanted to do something unique.
We wanted to do something that we thought was never done before and something that we really wanted to play ourselves.
So we thought it'd be a cool idea to make gigantic robot dinosaurs and fight against them, see what that's like.
The third goal we had was to also, besides the machines, inhabit this world with exotic tribes and interesting cultures.
So we asked ourselves the question of, OK, we have all these beautiful cultures on the planet now.
They all go extinct.
We go a few years ahead, and the humans come back.
How would those cultures, what would they look like?
What would they do?
And most importantly, how would they affect a player going through a game?
The fourth and maybe most difficult thing that we wanted to achieve was we wanted to make an open world, for the first time.
Because to us, this was enormously appealing, creating systemic gameplay.
And if we did our job right, potentially endless amounts of content.
Again, compared to Killzone, which in the single player aspect is a finite amount of levels that at the end of it, you're pretty much done.
And this time around, we wanted to create a world where you could be in for dozens, if not hundreds of hours.
But we knew that this was going to be an enormous challenge.
But we set out to achieve just that.
And we started with what we now call the concept phase, which ended up taking two and a half years, which is a very long time for a couple of people to just try out stuff.
But you have to realize that this was a small but multidisciplinary team.
Because the rest of the team at this time was on Killzone Shadowfall.
The goal for this team was going to be to design what Horizon was going to become, but more importantly, make it playable.
We wanted to find out what worked hands-on rather than just on paper.
And this concepting team started about eight people big and then grew to about 16 over time.
And it was a...
We had people from different disciplines in this team.
So designers, artists, coders, animators.
Another thing to realize, that at this time, we only had Killzone content, Killzone engine, and Killzone tools, which again is all linear first person stuff.
So we had literally nothing to build an open world or third person action game.
So having all these different disciplines in there created an autonomous group to build the prototypes, but they had a large amount of work ahead of them.
And their approach was going to be to answer the high level questions that the concept pitch had formulated in everybody's minds.
Questions like, what was the combat against the machines going to be like?
We knew that the machines were going to be a key, unique selling point from day one.
But how exactly will it work?
What's it like to fight a big machine like that?
And what kind of weapons would you need?
And how would you try and tackle those problems?
What kind of open world will Horizon be?
What makes a Horizon open world to begin with?
What kind of abilities will the player need traversing that world?
And what kind of story do we want to tell?
So very high level questions that this team started to try and tackle.
And at the core of our process was going wide.
So we wanted to play the ideas and not just design them on paper.
So we wanted to really quickly create prototypes, try out if they worked, and if not, ditch them immediately.
And if they did work, then iterate on them.
I want to go through some examples of the prototypes that we made at that time.
One of the questions that they tried to answer was the combat against the robots.
So the team decided that it was a good idea to try and tackle this by coming up with the biggest, most complex robot they could think of first.
And this very early design already shows that a lot of the elements that we ended up shipping were already present back in 2011.
For example, the vulnerabilities on the machines, things like the eyes, were already designed in.
Shooting off armor plates that you could then to get, that you then could shoot off to expose those weak spots and those weaknesses are also there.
Using the weaponry that it has, this is a, this, you know, disconnecting it from the robot and then using it against them, all of those concepts were there.
I've got a little video of one of the earliest concepts, or sorry, earliest prototypes that we built back then.
And this specific prototype was to try out how the physics would work fighting this robot.
So here we have a very early version of the robot, and he's walking around in the environment and the player can shoot rockets at him.
And now when you shoot off the different parts, what happens?
How does that interact with the player?
Will that kill the player?
Is that even fun?
Well, probably not.
It's a pretty elaborate robot, as you can see.
But yeah, it's really quick prototypes to try out.
It's really quick prototypes to try out how it would feel, how it would look, and how it would interact with the environment.
And we did loads of prototypes like that to try out the combat.
Another question we had was about the open world.
What can you do in the open world?
What kind of interactions will you have?
And again, the team thought it was a good idea to try out and build the biggest, most complex settlement they could think of first.
This was kind of a playground where they could test density, size, feeling, looks, atmosphere, and interactions.
And I've got another video to kind of showcase what that was like way back then.
Welcome to Mexico City.
So we used this prototype to really try out different things.
We tried to figure out what the architecture was going to be like, how the settlement was going to look, how many NPCs we would need, what would they be doing, how would the player traverse this settlement.
And you can already see a lot of different elements coming together.
Another thing you might notice is that there's other robots present in the settlement.
Because back then we thought that if the robots were going to be present in the world, they were going to be part of everyday life, so they would also be in the settlement.
And this prototype really allowed us to try and figure out parts of what an open world was going to be, and how the settlements were going to play a part in that.
And you might also be wondering why Aloy is riding a real horse instead of a robot horse, but I'll come back to that later.
The third question I want to highlight is we were experimenting with different player abilities.
So what could the player use in types of weaponry, but also how is the player going to traverse this immense world?
So one of the prototypes they focused on was the challenge of mounted traversal.
It was something we never did before, so we really had to learn how mounted traversal worked from a game design perspective.
And this is a video of what kind of prototypes we were building back then.
And this specific prototype is trying to figure out how the player is going to interact with the mount.
Because we knew our world was going to be quite large and quite dense, we wanted to make sure that riding a mount was not too taxing.
The player should be able to ride through a dense forest without having to constantly make small adjustments and be able to focus on other things.
Things like shooting a bow or shooting or interacting with our NPCs.
And this prototype tries out the AI system for how the horse would actually navigate through dense objects like this.
And it was actually quite successful.
This is actually part of what we shipped in the end as well.
You can probably try it out if you play the game.
If you go full speed through a forest, it's a lot easier to navigate through than you might think because the horse is already auto-adjusting its course for you.
So we were prototyping a lot of different things.
And I think one of the takeaways here is that this was really good.
It really helped make Horizon what it is today.
But it's definitely not cheap.
Lots of prototypes we made back then got either redone, thrown away, and it essentially takes a lot of time and effort to do this approach, which I know is not for everybody.
Now, during this phase, one of the problems, around the middle part of the concept phase, one of the problems that we started hitting was that we had lots of interesting prototypes.
We had lots of interesting islands, but it wasn't a cohesive experience.
You could look at the individual islands and say, like, okay, that's interesting.
But yeah, it wasn't a game yet.
And this was quite scary for the team.
Doubts, second guessing.
A lot of people started wondering, where's the game?
So the second part of the concepting phase, we shifted focus.
We decided we really wanted to try and create a complete combat loop in something that we call the proof of concept, or POC.
And we wanted to try to see if we could make everything work together.
Now the loop was something like this.
We wanted the player to first explore the world, which is walking, traversing, climbing, moving around the world, and then interact with things.
And things could be talking to NPCs, it could be hunting robots, anything interactable in the world.
The third part was gather.
So we wanted the player to gather the parts of robots that you've killed, but also quest rewards or other things that you find in the world.
And the last step in the core loop is progress.
So everything you find or gather in the world, you could use to upgrade your weaponry, your armor, and your skill set.
So explore, interact, gather, and progress.
So when we started to take all the different islands we had and put them together and put a bit more art sauce over it, this is kind of what we ended up with.
Sometimes I try to imagine what this place used to look like.
A vast desert, dead rock under a scorching sun.
But then the rains came and with it, the trees.
The grass.
All this life.
And the magnificent cities of the Mesa tribe.
I can't even remember how young I was when he started training me.
Climbing, archery, horse riding.
Everything I know.
Everything I needed to know.
So I could track and hunt.
I pray.
These truly magnificent machines.
A successful hunt takes everything you have.
Speed, strength, stamina, smartness.
But above all, you need to respect your prey.
Respect how dangerous they can be.
And be grateful for what they give us.
So reflecting back on this time, making this POC, making this proof of concept, really boosted the team's confidence.
Instead of having islands, we could start seeing what the game was going to be like.
And we wondered if we should have started on that earlier, considering we were already about two years in.
But we also wonder if we could have actually done that.
Because I think the takeaway here, at least for us, is that going wide and focusing on individual islands first allowed us to find what our game was.
And then focusing on building the full loop allowed us to detract what our game was not.
At the end of the concept phase, And questions that we had asked at the start were starting to be answered.
But some questions were not answered at all.
And at the same time, new questions were being raised.
But in 2014, at the end of the concepting phase, the studio shipped Killzone Shadowfall.
So now we had about 180 people of the team that had to move over to Horizon.
which heralded the start of the pre-production phase.
And even though core player systems were not fully defined, having more designers allowed us to also start focusing on world systems, like quests and activities and things you could do in the world.
Having more members of other disciplines join allowed us to really focus on building what the world was going to look like.
what kind of art assets and characters, terrain, foliage, everything that we're going to need to build the full world.
Plus, it allowed us to start focusing on the story and narrative as well, something that we hadn't done a lot yet.
So with all these new team members joining, we set up three separate design teams, each with their own specific focus.
We have the core design team, of which I'm now lead of.
That focuses on the player systems.
So everything having to do with traversal, but also the combat and user interface and the economy.
Another design team we have is the world design team.
And they focus on all the world encounters, setting up the robots in the world, placing activities like the hunting grounds and the banding camps.
but also focusing on living world, so all the NPCs and settlements that you see in the game.
And third design department is the quest design department.
They focus on the main quests, everything that has to do with story, cut scenes, dialogue, side quests, and tutorialization.
So three very specific design teams now focusing on the entire game.
One of the problems we had, which ended up being actually a good thing, is that during the concepting phase, we did have a lot of story ideas, rough thoughts about what the story we wanted to tell was going to be, but there wasn't a full outline.
Some writing was done, but it was done by the concepting team, and we didn't have any dedicated writers on that team.
So it lacked consistent context for everything that we were doing.
The solution was that we formed an actual writing team, a narrative team, and the first thing that they did was look at what we had and kind of looked at it and went, okay, well, we'll have none of that and we're gonna completely restart over, which felt really bad at first because it felt like five steps back, but what they did very well is when they rewrote a large part of the story, they set context for everything that we were doing at that time.
And I'll give you some examples of the changes that happened when we did this.
I mentioned riding on a regular horse.
So.
We wanted the player character in Horizon to be special.
Not like a super human or a super person, but at least slightly more special than the rest of the world.
And another goal we had is that we wanted the player to interact with robots all the time.
They were our key, unique selling point.
Reiterating that and reusing that all the time was gonna be very important.
So the big animals we had in the game at that time were getting in the way of those two goals.
So Narrative came in and they said, we're gonna go.
Why not just remove them?
Let's not have big animals.
It doesn't make any sense.
And let's make the player able to ride robots instead, which achieve both goals and actually turn out to be less work in the end as well.
Another thing they did was focus on the main character.
Now, Aloy has always been there from the beginning.
We always knew that that was going to be our protagonist.
But she lacked details.
And without those details, you cannot truly define what she's going to be doing.
Again, we had lots of islands, but we didn't know which ones were going to make it to the final cut.
And through narrative and through the writing team, they were able to define her character, her arc, her personality, her style.
And this allowed us to focus the gameplay around that, rather than not knowing exactly where the ship was sailing.
And this made everything that we had done so far feel like it had a place.
And the stuff that didn't fit, we could actually let go of.
Same went for the robots.
We knew what, we had notion of some individual robots that we wanted to be, but mostly from a combat perspective.
We knew how we were gonna fight them.
But we didn't yet understand why robots were there in our world contextually.
And without that, they lacked the right personality or feel when not engaged in combat.
And the solution here was that when you define the reason of why robots are there, which for us was the terraforming reason.
So the robots are there to rebuild the planet, and they're part of a bigger plan.
And with that context, we could better define the looks, the behavior, and the feel of the robots.
And it also generated a lot more new ideas for other robots that we could then build.
And the last example is the world itself.
We already knew at this stage what kind of activities we wanted from a gameplay perspective.
Similar to existing open worlds, we wanted stuff like underground dungeons and we wanted challenges that unlocked parts of the map.
But they didn't feel Horizon yet.
Defining what the context was for the world allowed us to put a unique spin on all those gameplay elements that we already had.
So challenges that unlock parts of the map became the tallnecks that you see today.
And underground dungeons became the cauldrons.
Even though the gameplay was still the same as we originally envisioned, context made our world feel unique and wonderful.
So for me, the main takeaway here is that context does make everything better.
It allows you to focus which mechanics work and which don't.
And it allows you to define your world better and make it feel unique.
But again, being able to try out things without context first was equally important.
If you add context too soon, you might prevent very cool ideas from ever being born.
So time it correctly.
So at the end of pre-production, more questions were being answered.
We worked on the story and the narrative.
We had more context.
And the groundwork for Horizon was now there.
We had, we thought, most of the core mechanics.
We had a world how we wanted to build it.
And we now had the narrative to fill it with.
So we thought we were ready for production.
But this is where the bigger problems started rearing their ugly head.
So we felt we were now able to start building the entire game.
And again, we thought we had all the core mechanics, or at least enough to get started.
However, I think our inexperience with making open worlds really started showing here.
And I want to talk you through some of the problems that we ran into at this stage.
The first problem we ran into is that we had this intention to start at the beginning of our game.
We felt that if you start at the beginning of the game and make that first, that's the part that 100% of all your players are going to see.
And therefore, it has to be amazing.
If you do this part right, hopefully you can entice players to then keep on playing.
So.
Game design, at the same time, wants to expose and tutorialize core mechanics, things like health systems and combat and stealth, and write them into the narrative to expose them effectively.
Now, the problem with this is that quality narrative costs a lot of effort.
You have to write the dialogue.
You have to build the characters.
You have to make the cut scenes.
In Killzone.
which we were still used to at that time.
All that structure is built in linear set pieces.
You have level one, level two, level three.
You have cut scenes in between.
You do some storytelling during levels, but it's obviously not an open world.
In Horizon, we needed to know exactly which mechanics we were going to need because we needed to tutorialize them during this phase.
And in hindsight, it meant we had to effectively guess.
While we did this, we noticed during production later on that gameplay weight of specific features was shifting.
Systems that we had thought that were going to be important became less important and vice versa.
Because we added more mechanics later on, and new activities and new things to do, the gameplay, adding those effectively shifted the gameplay weights of others.
An example would be is that we thought that distracting robots was gonna be part of our core gameplay.
For example, the distraction rock that you can throw, or seeing the patrol paths of different robots.
When we finally got to building the world the way we wanted it, and the encounter, sorry, when we built the world, the encounter spaces turned out to be much bigger than we initially thought they were going to be.
And this made it much easier for the player to just avoid the robot encounters using stealth drafts.
So throwing rocks, et cetera, became much less important.
And you can actually see that if you play the first quest of the game, we spend about an hour trying to teach you how to throw rocks, which ended up not being useful at all.
Oops.
So I think the takeaway here is that realizing that iterating on narrative is not easy to do, especially if you want to achieve high quality.
So I now reflect on.
on the question, was starting at the beginning really a good idea?
We thought we were ready, but obviously we were not.
And I would argue that starting on the beginning when you know the entire game would be better.
And I would start on it later, actually, than we did the first time around.
Another problem came through the robot combat.
So Horizon is built on the notion that the player has multiple solutions to tackle specific problems, problems like the robots.
The whole point of Horizon is that we wanted to let you choose which solution you thought was most interesting.
There are effectively no perfect solutions.
At the same time, we wanted to make Horizon a very accessible game.
A very, everybody who would pick up Horizon, we wanted to have something in the game for them to kind of enjoy.
the threshold shouldn't be too high.
And those two ambitions started to clash.
And this problem started to become apparent during playtesting.
We started seeing difficulty spikes.
Essentially, players who had lesser skill or were lesser engaged with our game started to run into issues.
And the problem is relatively simple.
If a game tells you that basic arrows can actually kill something, why would people who are lesser engaged with your game try out potentially more complex solutions?
So at the time, we started to reflect and we started to think, like, how do we entice players to engage with other options?
How do we, and how do we do this without losing our core pillar of there not being a perfect solution to begin with?
Because we did consider at the time, moving away from that pillar.
We did consider making specific solutions mandatory in order to destroy specific robots.
And so effectively use weapon X to kill robot Y.
When we started testing that out within the team and with focus groups, the feedback was not positive at all.
It felt really forced and it didn't feel like a horizon because it went against our core pillar.
So at this point, instead of doing that, we decided to show as many options as we possibly could to the player.
And this is when we went all in on what we call the focus tool.
This tool Aloy gets, and it allows her to turn on a type of almost like detective mode, which shows all the interactive objects in her vicinity and shows her more options or more details about them.
And this option at all really worked because it, not only could they do it before combat, people could oversee and in combat encounter space and kind of start making a plan.
They could also do it during combat if their plan didn't work out.
But at the same time, this introduced new problems.
We wanted to make a beautiful world.
And now we were blocking off parts of it with HUD overlays and less pretty than majestic nature elements.
Plus, we simply just didn't have a lot of HUD space.
How much information can you truly put on a screen without overwhelming the player with too many bits of text and icons?
But it did really inspire options to players.
Now reflecting a bit on that, I do believe that the focus does show possibilities and not solutions, which is what we try to achieve.
But it didn't solve the entire issue.
It simply added additional layers for the people that wanted that depth.
It helped with the difficulty spikes, but it didn't fix the core problem.
I think the takeaway here is that if you want the player, like us, you want the player to choose their own solution, you have to consider how you're going to expose them to those options.
But you have to try and do this in the core gameplay, and rather than us, in an additional layer that's on top of your core gameplay.
Enabling the player to see the options without having to do anything extra.
Another problem we ran into was with the humanoid combat.
So we knew from day one that robots were going to be at the core of our experience.
Unique selling point and all that kind of stuff.
But we also knew that we did know that we wanted to do human combat.
But we wanted it as a side activity.
It was never supposed to be part of the main core gameplay.
But at the same time during production, we started introducing more and more humanoid combat.
Why did we do that?
Well, the biggest problem is that robots just cannot speak.
So story, with the narrative team now being there, wanting to tell a compelling story without humanoids was going to be impossible.
So we introduced more and more humanoid characters as we went along, which slowly made it go from a secondary activity to a primary one.
And the second part of the problem was that we really did achieve making the robot combat very deep and tactical and interesting.
And this highlighted the fact that the humanoid combat was not.
Interestingly enough, when the robot combat wasn't as polished as it was during this phase, when we did very early playtests, a lot of people commented on how cool the Yumo in combat was.
So we thought we were on the right track.
Comments like, hey, it's even better than Killzone's combat.
Hey, that's exactly what we wanted.
But when we started polishing the robot combat, that went up, and the difference between the two different types of combat really started showing.
And at the core of the problem there as well is that humans just don't have as much tactical options as robots necessarily have.
They have fewer weak spots, fewer tactics, fewer choices, fewer options.
So yeah, those two things combined started to become problematic.
The solution we went for during production was that we wanted the tactical depth with humanoid combat to come from the encounter design.
So, like in Killzone, adding cover, adding different approaches, and gaining an environmental advantage for the player, those were all key to making a fun encounter.
It was so in Killzone, so we thought it was gonna work for Horizon as well.
And to an extent, you can see this working.
If you go through the cauldrons and the bunkers, or the bandit camps, the humanoid combat is already more engaging than in the open world.
But there lies the problem.
Horizon is an open world.
You therefore can never fully rely on encounter design because if the player comes from all different sites, then you cannot force the player in, otherwise it wouldn't be an open world.
And I think we truly underestimated the impact of that early on.
In hindsight.
I think we should have gone deeper on making a single human as tactical or as deep as the robots because I do think it's actually possible.
If we add more weak spots and let their behavior change once you fight with them, think more about their weapons and their armor, you could achieve a similar level of tactical gameplay that we did with the robots.
We should have just focused on it earlier.
Because this, to me, really creates systemic gameplay.
And you don't have to rely on encounter design as much to achieve a cool combat encounter, because fighting one human in a space is just going to be interesting.
At the end of production, we found a lot of the answers to the questions that we had asked in year one.
But we found out the hard way that we didn't ask all the right questions.
Questions that in hindsight, we should have asked way earlier.
The humanoid combat, the storytelling pacing versus the player, and how accessible our game was gonna be versus complex combat with the robots.
But the good thing news was that we could now play our entire game from start to finish.
All the content and the mechanics were in.
And this is where, like in the start of the story, we started playtesting a lot.
But now, what we call meta issues started showing.
Essentially issues that we had difficulty spotting during production and in concepting because we couldn't play the entire game yet.
Now that the players were playing our game for days and dozens of hours, we were able to, for example, see and probably stress test our economy.
Now, our intention with the economy was always, always have been to make it involve all the cool content that we were gonna build.
The player would have to hunt all robot types and engage in all activities in order to unlock all the different weapons and skills and abilities that we wanted you to unlock.
This to us was what it meant to be an open world.
Not just the main story, but engage with all the side content as well to unlock everything.
So we set out to do just that.
The problem was that this ended up in resulting in there being a lot of different types of resources.
Each robot had their own unique set of resources, plus add the wildlife, plus add humans, plus add fauna.
And we started seeing during the playtest that the player was having difficulty understanding what resource was going to be used for what.
It's really difficult to judge a value of something when you have 80 different resources in your inventory and they all look slightly the same.
Plus the reverse of that problem also started happening.
We have merchants in the world where you can go to, traders, sorry, traders in the world that you can go to and you can get them to craft your own new weapons and you need to bring specific resources for that.
But players were starting to ask questions like, okay, so that's a cool resource, but where the hell do I get that?
So those kind of problems started rearing their head.
Now, one of our intentions that made this problem even worse was that we wanted the tribes to be primitive.
So they wouldn't understand what a CPU is.
They wouldn't know what a camera lens is.
So they just call things as they see them.
A lens becomes an eye.
A battery, it looks like a coil, so let's call it a coil.
And they know that if they shoot the middle bit of the robot and then it kills, well, that's probably its heart.
So we created, essentially, a difference between the world language and the player language.
And this abstraction layer also added to the confusion.
Players could not understand the value of something due to this ambiguity as well.
So we were already very far into production when we started realizing we had these problems.
And it was truly too late to really change the entire economy at this stage.
So instead, we focused on adding tools to mitigate those problems.
An example would be the trader jobs that you added.
Now, raise of hands, who here has made or used the trader job feature?
Well, see, that's about less than 5% of people.
And that's exactly the problem.
It's, the feature sits really deep.
It's not part of the core.
It's like five layers into the interface and most people don't even find it.
So that obviously didn't fix the core problem.
I'm going to be really honest with you.
We really didn't fix this.
We failed.
We should have realized way early on that the economy was just going to be way too complex.
And even though we couldn't test it, in hindsight, we should have realized that there was a problem.
But because we had never made an open world before, I guess we didn't see it.
So if one of your core pillars is accessibility, you want something for everybody in your game, making sure that your economy is simple but effective is probably key.
In February 2017, the game launched, and it didn't do too bad.
Actually, it's the most successful game we have built to date, and we're very proud of what we've done.
So again, all the hard work in the end is worth it.
But if I leave you with something out of this talk, it would be this.
I think that if you, as a game designer, review often.
Review your goals, review your intentions and look at your problems constantly and reflect during development to flag issues as early as possible.
Be honest with yourself, find out what works and what doesn't and don't get stuck in ideas that are not working out.
But most importantly, you have to get ready for those problems.
You have to build in flexibility during your processes, like we did, so you can try and adapt if necessary.
I think that if you face your problems head-on, it's much easier to stay upright.
Thank you.
We have time for questions if anybody wants to come up to the microphone.
Hi.
Hi.
I was wondering how you took these lessons and implemented them in the Frozen Wilds DLC.
That's a good question.
Development of the Frozen Wilds, we did take these lessons, but some of the development already started earlier than we could realize that.
It was also a very different product to make because it's obviously an expansion on, but it sits.
You can play it both at the end if you finish Horizon, but you can also play it if you play through it.
Like if you're at level, I think level 15, that you can go into it.
So it was a very difficult and different thing to make.
And the goal for the Frozen Wilds was actually to really add a challenge layer.
So we wanted to make everything more difficult and trickier to go in.
So it was a very different beast to build.
We couldn't fix the economy in that one either.
We'd have to completely redo it in order to achieve that.
But we did focus on some of the robot complexity and the tactical depth there.
But yeah, it's difficult to apply those lessons in a DLC expansion, I think.
I think if we do another Horizon, it's easier to implement those lessons.
All right, thank you.
This is kind of obscure.
The bottom and left parts of the screen when you're playing the game, not in a menu, are blurred, just at the corners.
And if you pause, it goes away.
Is this because of perf or a visual thing?
Cause I could never stand it and just wanted to know why.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
Um.
I actually don't know.
My tech director is here as well at GDC.
I'll tell him, and then I'll get back to you.
How's that?
Thank you.
OK.
First of all, thank you for putting such an amazing game together, considering that it's a world of PVP now, a lot of multiplayer.
So great single player experience.
Amazing.
Thank you.
Yeah.
Thank you.
So you talked about the amount of resources, but one thing I thought was interesting, I sort of discovered as I was playing, like the importance of switching, you know, your armor to get the, you know, based on the elements you were fighting against.
Right.
And, you know, typically in a game like that, you would just like find better armor and just equip it so you could sustain damage, but...
What was the, you know, how did it work to make the conscious decision of having a fire armor or something against lighting, lightning?
And, you know, how was that decided?
With us it starts from the robots, the machines.
So we come up with what kind of robot we want to build and what kind of machine we want to build, what kind of attacks it's going to have, and then depending on those attacks we derived how can the player engage with those attacks, how can they mitigate them, how can they fight against them.
So what we wanted to do is we wanted to create this whole lineup of different outfits That would be good for different types of robots different types of encounters, but again It goes to the same problem. I was highlighting that if you the Those kind of choices are kind of three or four layers deep, right?
For players to kind of think about switching outfits and for per encounter, that's actually quite a lot to ask.
So you have to be quite engaged with the game in order to get to that level.
It is something actually that we focused on more in the DLC, where specific robots really did fire damage and really did frost damage.
So the outfits became even more important there.
One thing I think, I don't know if you, did you get the Shield Weaver outfit?
Of course, that's the one I kept all the time.
Funny story there, the Shield Weaver outfit, we knew it was going to be really powerful.
We didn't know it was going to be that effective.
Once people playtested it and they got it, we knew it was good, but it was also quite difficult to get.
But if we now look at the telemetry, I think almost 70% of all players get that almost early on.
And that kind of screwed our economy in a different way as well.
But it sounds like you're interacting with the different outfits, so at least we got that with one person.
Until I got that armor, and the Frozen Wild, it was pretty good. So thanks.
That was useful, right?
Yes.
Hi.
At the beginning of the talk, you showed us some information about the playtesting that was done and the rather harsh feedback you got about a year before you shipped.
It was a little unclear to me what changed in the year that followed that made it such a great game.
Was it an issue of the playtesters not getting it, or was there a huge amount of legit...
you know, stuff that needed to be fixed.
I guess I'm interested in knowing to what level were things really broken.
Right, I think that it was a combination of all factors.
I think there were balance issues, like literally balance issues.
I think a lot of the robots were really tweaked to be quite hardcore and quite like doing lots of damage.
I think that was a problem for people.
And that combined with some of the mechanics not working quite right yet, like the amount of information we had in the focus, for example, or the amount of tutorialization we were doing in the...
in the main quest, etc.
Everything kind of contributed to a lot of people just not getting into the core mechanics of the game.
I think it just took a lot of iterating to get that all right.
I don't think you can put your finger on one problem and then go once we fix that, then everything went away.
But it was an iterative process over the next year.
more than 15 big playtests.
And every time, like every two or three weeks, we would do major changes and test again and test again and test again until we got it more right.
One interesting thing though, is that the way we did the playtesting, We're telling 20 people to play through the entire game in five days.
And that is a very specific mindset.
So one thing we did also learn from that was that not all feedback is actually relevant once you get it out in the wild.
Once you're playing on your couch at home, people have a different mindset.
And some of the problems that people are trying to rush through it, for the coin a phrase, they run into different issues than people that buy your game in the end.
Okay, thanks.
All right.
Yes.
You were first.
Thank you for the talk, it was really interesting.
You talked a lot about the different phases, like starting in concept phase and so on.
Could you talk a little bit about the phase before concept phase, so like the really, the very initial getting the idea phase and who was involved in this process?
Sure.
My studio art director gave a talk, I think, two days ago that kind of went into that.
But the gist of it was that Gorilla actually asked the entire company to come up with new concepts.
And we made a brief, because we obviously didn't want to.
Guerrilla makes a certain type of games.
So if somebody comes up with, let's make a soccer game or something like that, well, that's just not going to fly.
So we made a brief of the type of pitches that we were looking for and what kind of rules they needed to adhere to.
And then, yeah, essentially everybody in the company had a chance to create a pitch.
They were given time during work hours to work on their pitch and pitch it to the managers and to the leads, et cetera.
And I think we had about 80 different pitches internally.
ranging from anything from like two sentences to full decks with beautiful movies and all that kind of stuff.
Yeah, and then one thing that we did is we shared a lot of those pictures with the rest of the company as well.
We asked which ones stood out.
We narrowed down all the different pictures until finally we came to Horizon.
And everybody, well a lot of people actually gravitated towards Horizon quite early on.
Thank you.
Thank you so much for a great talk.
Just out of curiosity, in the final game, each species seems to be restricted in their own area on the map.
Was it ever part of the play test, or was this play tested to have like a thunder jaw chase you across the entire map?
Was it playtested? No.
Did we think about it? Yes.
But there are quite a lot of technical difficulties that we don't have to...
It basically comes down to memory streaming, right?
We only have a finite amount of memory and these robots are quite...
The machines are quite heavy on memory.
So if...
Like, to stream that in, if the player is going from one tile to the next and they bring robots with them or something like that, that's...
We're going to run out of memory.
So that's why they're kind of...
Hopefully you don't see that too clearly, but they're tied to their encounter spaces and that they stay in the same area.
Yeah, it's a question between like how graphical fidelity and how pretty you want things to look versus like how much freedom you have.
So we kind of came to this balance.
Thank you.
I think you were there first.
Was I?
No, you were first.
No, you were first.
Okay.
All right, I'll go.
Hi, I really love the game, really liked its protagonist.
You showed a lot of early concepts and early prototypes.
And one thing that surprised me is that the player character was always this same redheaded woman.
So it surprised me that you didn't seem to iterate over that in any capacity.
And I was wondering if there was an interesting story behind that.
Like how Aloy came to be?
Yeah, why was she there from the beginning?
Well, I think one of the interesting bits that we.
It was a conscious choice, but I don't think we ever really...
It's not something that we had millions of meetings about or anything like that.
It's just like that was the first idea we had.
We all thought it was pretty cool and then she stuck around and then she developed over time.
Cool.
I mean, we get a lot of good responses about having a female protagonist and that's really cool, but we never really thought about it that much.
We just kind of did it.
I guess there isn't really a big interesting story I can tell you there because it just kind of, yeah, it just occurred.
Awesome. It just stood out that she was always there.
Yeah, yeah.
Thanks.
Hi. The crafting job system that you sort of self-deprecatingly reamed at the end of the talk, I remember there being marketing messaging about that system sometime between the E3 reveal and the game's launch.
I was kind of curious, and just because I remember kind of a weird emphasis on this being like one of the special selling points of the open world, I was curious if you...
learned anything about trying to communicate to players in that space about features that you didn't think they'd find very quickly?
And if you had any success with that?
Did you have success with the core community of players?
Like, were they trying to explain hard things to players?
Did that work or not?
That's the actual question mark.
That's quite a, yeah, that's quite a tricky question because I'm also trying to remember the marketing message that you referred to.
I remember, if you need help, it was like one video running through an open world quest and I'm remembering there was like five minutes of like, oh, hey, you can, if you're needing a resource to craft this thing, here's the crafting job system.
Right, okay, yeah.
So yeah, I think there was, there definitely was some unfortunate ways how that was interpreted because it was, I think, even incorrect at that time, like when that marketing message got released, there wasn't how the system worked.
But if your question is, did we learn anything from that?
From, I guess, like, OK, we know the system is intricate, but we're going to try and tell people about it.
Even versus the simple approach of just shoot arrows until it dies.
Did you learn anything about player messaging and telling players how things work after the fact?
Well, no.
I can't think of anything right now, but maybe after the, we can chat after the talk, after the Q&A.
All right, cheers.
Yes.
Well, in early prototype phase you showed it was alloy with a rocket launcher against a robot.
Right.
So what was the reason you refused the guns?
It's a combination of two things.
The most important thing being is that we felt that if you use high explosives or guns or anything against that, it's very quick over range, it's very powerful.
And we actually thought the contrast of fighting a gigantic high tech machine with very basic arrows, not only from a contextual perspective but also from a gameplay perspective was much more interesting because it would take much longer to take down the different robots and to expose the weaknesses.
Whereas with a big explosion, you expect parts to fly off, like in the video, but with bows and arrows, that wasn't the case.
So we could add more technical depth by doing this, as well as obviously that we thought that the visuals of David versus Goliath kind of visuals with a bow and arrow taking down a thunder jaw was also a very cool juxtaposition to play around with.
Okay, thank you.
I think I have time for one more question.
Congrats on the win last night by the way.
Oh, thank you.
Technical achievement.
Woo!
I was pulling for game of the year, but whatever.
So, you mentioned the tutorial, how it ended up kind of being not exactly representative of what the rest of the game was.
Great.
Would you like if knowing what the game turned out to be right and um would you recommend?
Making the rest of the game and then saying like because the the narrative of the tor tutorial could have been the same thing really You know a lowly falls and rock and goes through trials Would you say make the rest of the game and then go back and do the tutorial not the rest of the game?
But I would really make sure that you truly understand your core mechanics and because that's what you want to teach at the beginning, right?
And I think, like I mentioned, because we hadn't really made the bigger part of the world yet where the counter space has changed, we didn't realize that the gameplay was going to change as well, and that players would just not use those abilities.
So I guess it's like, I wouldn't completely turn it around.
Like, I wouldn't do the beginning at the end, but I would do it slightly later.
OK.
Thank you.
Well, thank you all for your time, and I hope you enjoyed it.
