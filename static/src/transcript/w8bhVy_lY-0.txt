All right, this is iterating design and fighting fires, updating Fruit Ninja and Jetpack Joyride.
My name is Luke Muscat.
Thanks everyone for coming along.
It's pretty exciting.
This room is way bigger than I thought it would be, so I'm freaking out right now.
Thanks for coming along as well, because I have a talk on Thursday, and it's on at the same time as the crazy panel with Sid Meier and Cliffy B and Peter Molyneux, so I'm just assuming no one's gonna turn up to that one.
So it's cool that some people came along to this one.
Alright, we'll get started.
So yeah, my name is Luke Muscat, I'm the CCO at Halfbrick, which stands for Chief Creative Officer.
I made these, which is Jetpack Joyride, Monster Dash, Fruit Ninja, and a bunch of other games that no one knows about or cares about.
And so this talk is going to be all about, so it's kind of like a Fruit Ninja update post-mortem, so a post-release post-mortem.
And you know, I'm going to be going through the goals of a lot of the updates we did and the results and talking a lot about, you know, updating Jetpack Joyride and how that's been different to updating Fruit Ninja.
So just to be clear as well, like I'm only going to be talking about Fruit Ninja iOS, the SD version, so just the version on iPhone and iPod.
I'm not going to be talking about the HD version, Android, Bada, how we go about making sure the updates move across all of those correctly.
That's a whole other talk altogether and frankly I'm not the best person to be doing that talk.
But yeah, so this will just be about Fruit Ninja SD, which has had over 15 million purchases so far.
I haven't updated that figure in a while, it might be a little bit different now.
And over 40 million updates downloaded too.
So a bit of context to be a bit useful before I start this talk.
So Halfbrick is 57 people now.
We're a pretty big company.
We haven't put on all of those numbers since Fruit Ninja.
Like when Fruit Ninja came out, we were already about 30, 35 people.
But internally, we're broken up into teams.
This is my lovely, very attractive team.
We have seven guys.
And we actually work on two titles at once.
Right now, half the guys are working on Jetpack Joyride update.
the other half are, you know, working on some prototyping for some new IP.
So, this is just kind of useful because, you know, when I'm talking about how we do our updates and all that, people might be thinking like, God, you've got 50 people, how can that update take so long?
We don't put all 50 people on the update.
All updates I'll be talking about were completed by 3 to 4 people.
So, Rocket Racing.
Hands up if you've played this game.
See how there's like no hands up? This game was a disaster.
This was a game we made a couple of years ago for PSP minis.
And this game was a hardcore, abstract racing game that we made.
We spent eight months on this game. We really poured a lot into it and it absolutely bombed.
It was, you know, it got an okay-ish critical reception but just, you know, there was no market for it.
So it's because of this game that we had this new goal.
And this new goal was to ship lean, you know, ship multiple games really lean, really quickly.
And if it works, we'll update it often.
And this way, we'll be lowering our risk of development.
I'm just going to move this here.
So that's where Fruit Ninja comes in.
Fruit Ninja is a direct result of Rocket Racing.
It was me trying to make the opposite game to Rocket Racing.
What we have here is like 80% of the design document that exists for Fruit Ninja.
This is all there has been and all there probably ever will be for Fruit Ninja.
You know, pretty simple.
Slice fruit, don't slice bombs.
And when we shipped, we shipped really lean.
almost crazy like you look at Fruit Ninja and if you're familiar with the game at the moment you know it has you know like four modes and unlockables and achievements and leaderboards and social features and all kinds of crazy stuff.
Version 1.0 had nothing.
It was so, so lean.
There were no modes.
There's only what now we know is classic mode.
There were no combos.
There were no unlocks.
There were very few devices we had to worry about.
There was no such thing as Game Center or Retina or any of that stuff.
And because of all these factors, we actually shipped the game in six weeks from start to finish just with three guys, plus a sound guy for a week as well.
I was looking for a screenshot of Old Fruit Ninja.
I couldn't even find that.
This screenshot has got multi-touch in it.
1.0 didn't even have that.
I just couldn't find an older screenshot than this one.
So when we launched, everything went really well.
We got a really good critical reception.
We got good reviews all over the place, which was very cool.
I couldn't find any cool screenshots of us at our early stages of success, so you have to make do with my artist's interpretation right here.
Yeah, I'm not an artist, I'm a designer.
And so the game is out, we have 1.0, and time for some updates.
So this is really, you know, what the talk is about.
Update 1.01. So this is our very first update and our goal was pretty simple. We wanted to roll an update really soon after launch and show everyone that we were committed to this game, we were going to be supporting this game and although this game is simple, there's more to come. We started working on this before the game was even out while we were waiting for it to pass like Apple certification and all of that stuff. So our current player base was zero.
And it's pretty simple, you know, we were going to add two new fruit, the mango and the pear, which, you know, we add new fruit now, no one really cares because we've got such a large roster, but back then we didn't have that many, so that was kind of a big deal.
We wanted to do multi-touch support, so that you could have multiple blades, which seemed like it'd be a cool thing. And we wanted to just, we knew that the performance wasn't that great, especially on the older devices. We knew there was a lot we could do to make that better, so we were really focusing on that.
So I have a bit of a story here for you.
Fruit Ninja came out and it was doing pretty good, you know, it was moving up the charts and in Australia it was doing really well.
So it's a Friday night and Fruit Ninja overtook Doodle Jump in the charts.
It was still way down in the American charts, you know, position 120 or something, but it was doing really good in Australia and we were stoked.
So we were having our traditional Friday afternoon beers and obviously because things were going well we were having a few extra beers to celebrate and, you know, really getting into the spirit of things, so to say.
And it got to about...
11 o'clock or so and we got an email that came in, don't ask us why we were checking emails while we were drinking, and it was an email from Apple telling us that they wanted to feature us and that they needed the assets immediately.
So being in Australia, it was our Friday afternoon.
They probably sent it on their Thursday afternoon or Friday morning, thinking that we would have time.
But because it was going to be our weekend and no one was going to be there, we were like, right, we're going to do these assets right away.
We entered full panic mode and kind of semi-drunkenly got all these assets together, which was really cool.
You wouldn't want to do that again in hindsight.
But we're usually a lot more prepared than that now.
We learn our lesson from that one.
So then two things happen.
The very first update launches at the exact same time that we get featured by Apple.
And we're stoked.
Featured by Apple, that's a huge deal.
It's going to help our sales dramatically.
We're going to get all this extra exposure, all this extra attention.
Awesome.
And it's right when the update lands.
That's amazing, right?
Boom. This update was a disaster.
Unfortunately, when we were working on the updates and the performance fixes, we had obviously screwed something up pretty dramatically and for some reason about 15 percent of players could no longer play the game.
And this was the worst time, you know, we just sort of got this momentum going, we just got featured and then this update came.
and all of a sudden the one star reviews are flying in and we're in full panic mode.
So we need to do a new update.
1.01.1. Pretty simple goal.
And we were fortunate enough, we got it fixed really quickly.
And it was actually really interesting, like, you know, obviously when this happened and, you know, it's locking people out of the game, we're thinking it's this massive disaster and, you know, oh shit, the game is doomed forever.
But there was this, it was really interesting, we got it fixed, we ended up kind of nicknaming these builds where we fixed the problem.
uh, firefighter builds.
Um, and we got this silver lining where people really seemed to respond to the fact that we took notice that we'd done something wrong and that the game had sort of become unstable, and we fixed it really quickly. You know, we were communicating, we were on forums, we were replying to emails saying we're on it, and then we did fix it. Certainly we lost people because, you know, they tried to play the game and it was no good and they felt like they'd been jipped out of their dollar, but, you know, we also, uh...
won some fans because you know they were watching us, they could see that we cared and that we were you know doing our best to keep things going.
So we learn a few lessons pretty quickly on this one. You know updates can be crippling, certainly updates can enhance your game but at the same way it can take away from it.
I'm sure there's some other iOS developers that could attest to that one.
I think it was Minigore might have had a really bad one once that wiped progress and...
you know, it's certainly something to be careful of. And so, you know, we realized that QA effort needed to be increased dramatically for these updates. We really hadn't given the update the QA time it deserved.
We also needed to, you know, assess our risk associated with each update.
Adding new fruit? Easy. That's cheap. That's probably pretty low risk.
But being in there, mucking around with the render code, trying to make it run faster?
getting in dangerous waters. We also realized that players are keeping score on us, which was interesting. We really didn't think people would be paying that much attention to Halfbrick, but it turns out they are.
So at this point we get to update 1.2.
Our player base has grown dramatically now, 145,000 players, which at the time seemed like the entire world.
We were stoked.
And our goal was to release something big that would warrant a second trailer and another round of media.
And we really wanted to capitalize on this initial momentum we had going.
So we weren't really sure which way to go with this.
So it's tricky, because a game like Angry Birds, Cut the Rope, a lot of those level-based games, they have such a good way of updating the game.
Like, you like our game, you like playing levels, boom!
25 more levels. It's so simple, it's easy for them to add.
The value proposition for the players is obvious.
Like, there is now more of what you like to play, and it's just so easy to communicate.
We didn't have anything like that for Fruit Ninja.
We really weren't sure on which way to go with it.
So our producer, Jason Harwood, had this idea.
And he went through every single iTunes review we had gotten so far, and he collated it into this massive Excel sheet.
And then he grouped up common suggestions that people had and common problems.
So we had a section for bugs, a section for suggestions, and all of that kind of stuff.
And this is what we ended up with.
So the very top one there is, you know, multi-slice and then we have needs more game modes, needs some kind of endless mode, that there's more fruit, so on. And it was all organized by the number of mentions it had.
So number one, multi-slice.
This still gets requested all the time, and every time I am against multi-slice.
The thing is, right now in Fruit Ninja, the fruit is either sliced or it's not sliced.
It's binary.
The call to action for the player is so obvious.
If the fruit isn't sliced, I need to slice it.
As soon as you introduce this idea of multi-slice, things start to get trickier.
There's now, you know, it's been sliced, but I could get more points if I don't.
There's an opportunity cost there.
And additionally, as the fruit gets quartered and maybe eighth or sixteenth, it's actually getting smaller on the screen and it really stops becoming the optimal size for interacting with.
So, multi-slice is something that I've been very much against for a long time.
So, the second thing that, you know, second and third thing was, hey, more modes would be cool.
And how about an infinite no-bomb mode?
People really hated the bombs in classic mode.
So we were like, OK, I get it.
Bombs are kind of tricky.
Let's try making this infinite no bomb mode.
And it was interesting.
We started working on it.
We got it working really, really quickly.
And for the first five minutes, it was really cool.
And then slicing fruit all of a sudden lost its meaning.
you it was really weird you kind of played in your life cool no bombs then there was no pressure and there was no kind of constraints and he sort of burnt out on slicing fruit which is bad news for a game that is only about slicing fruit We tried some other things to really spice it up as well.
We made this thing called critical waves, where all the fruit would come up and they would, you know, definitely be a critical.
And the blade would turn blue and it would have sparkles on the back and that's how you knew that it was going to be a critical.
And even that still didn't feel quite right.
Just the points were meaningless and, you know, it really just wasn't clicking.
Fortunately, we were able to use that blade stuff a little bit later on.
So while we were working on this, we started mucking around with the idea of putting combos in.
That was another common thread that had been in our iTunes reviews.
I love this GIF just showing what the combos look like in slow-mo.
I always think it looks really neat.
And we put that in and we got a benefit from that straight away.
It worked in classic mode.
You could just slice the fruit or you could try and take bigger risks.
One of the big things that we did was like rather than the score going up exponentially, so a four fruit combo being worth five points and a five fruit combo being worth ten points or whatever, we really wanted it to be as simple as possible and make it so that people would understand what score they got and why immediately.
So we kind of made some sacrifices to the gameplay in order to increase how clearly the game was communicating with the player.
And then we added a time limit to Zen mode.
And all of a sudden, it all kind of made sense.
It was so weird.
We added the 90-second time limit.
And it was just this kind of like, well, it's annoying because it goes on forever and you have to hit the pause button.
And then that's how you get out of the game.
So maybe we'll just add a time limit, and that was it.
We added this time limit.
Next thing you know, you look around, and all the guys are trying to beat each other's high scores.
And this weird thing happened where Zen mode was now like both the most relaxing mode, or that's what it was intended to be, was this relaxing mode where you didn't have as much stress and pressure, to this extremely hardcore, competitive, everyone trying to beat each other's high scores, which was absolutely fantastic.
And all of a sudden it felt Fruit Ninja again.
It felt like it had a place.
And a lot of the times it was just this kind of intuitive sense that it belonged in the game.
We went through and we tuned the waves in Zen mode to make them play off that as well and they're all combo-able in different ways.
The other thing we added was the coming soon fruit. We wanted people to know, yes, this is a big update, but we're not done yet. We're not even close to done yet.
We wanted everyone to know that we are still working on more stuff.
So when we released, everything seemed to go pretty good.
We got quite a bit of coverage around the place, which was neat.
You know, everything kind of worked how we expected.
We said we wanted to warrant doing a second trailer and a big media blitz, and that definitely happened.
Got really widespread coverage, which was great.
And then this is the graph for what happened.
So the orange line is updates, the blue line is sales.
They're not necessarily on the same scale, they're just kind of compressed so you can see what's going on.
Otherwise, the blue line is really flat and at the bottom because the update volume is always so high.
And you can see, you know, we were on this downward decline and we did this update and it helped.
But not a great deal.
You know, we spent a long time on Zenmode.
Well, relatively long time.
We spent three or four weeks on it, which is almost as long as it took to make the game.
And, you know, we got this bit of a bump and it stabilized us, but it certainly wasn't this big boom like we were expecting.
So, again, lessons learned.
We need to listen to the fans but read between the lines.
And I mean, this isn't even something that's specific to, you know, iTunes reviews and community feedback.
This is just playtesting in general, right?
You know, one of the ones I always remember is back when I was working on an old licensed game, we had some kids come in and we'd designed this puzzle game.
And these kids were coming in and they were playing the game over and over and over and, you know, just kind of playing through the first part.
And the kid got about 20 minutes in and he's going, you know what this game needs.
I said to him, what does this game need?
He goes, this game needs a tank.
I want to run over things.
I want to blow up the walls.
And that's what I really want to do.
And so the interesting thing about that was obviously we're not going to add a tank to this puzzle game.
But what it really said to us was, OK, this game needs variety.
It needs a greater sense of empowerment.
And the same thing can be said for iTunes reviews, community feedback, and community engagement.
We really need to read between the lines and be smart about what we do.
They know what the problem is, they don't specifically know what the solution is always, although there are often some really great ideas.
And the other thing was just that updates can help keep the momentum, but they're a lot of work.
I mean, I'm sure a lot of people who've done iOS updates know that they take a while to get right.
So update 1.2.1.
current player base has grown to 350,000, so that's pretty cool.
And we had this idea for this update.
We kind of had taken inspiration from the very first update where we botched things up.
We said, OK, we're introducing a new mode.
that's a pretty big change.
That's probably a pretty big risk.
So let's do this update, and we're gonna call it, the way that we kind of internally phrase this update is a chaser update.
So the idea is this, there's gonna be an update that drops again, really quickly after the major release update, and it's gonna have a couple of new interesting things, nothing major, not like another mode or anything, just some nice little extra bits and pieces, and we're also gonna roll all of the bug fixes and all the problems that come up into this update.
The other thing we really wanted to do was, you know, spark some community engargement.
Hmm. Okay. There's no spellcheck in Photoshop. I apologize.
So what we did is we got some minor stuff ready beforehand.
We added some coconuts and, you know, fixed a couple of bugs that we already knew of.
And we had this stuff ready to go before Zenmode even dropped.
The other things we added were rate us.
So, really simple thing, comes up every now and then, you know, hey, how about you rate us?
We were a bit smarter about it than just putting it in randomly.
It waits till you've played a whole bunch of games.
because then we can assume that the player is engaged.
And then, you know, if they get a pretty good score, or even their best score, then we think that might be a good time to let them know that now's a good time to raid us.
If they had it, like, right after a crummy run, then that's not so good.
Also, if they hit no thanks, we never bug them again.
I don't see any point pestering people into it.
I don't see, like, when they see it for the ninth time that they're gonna have a change of heart and give us a five-star rating.
The other thing we wanted to do, so this was to meet our...
user engagement and community engagement was the dragon fruit.
So the dragon fruit is this really, really rare fruit.
It has a 1 in 40,000 chance of coming up with each fruit spawn, only in classic mode.
There's some other kind of probability clamping, and we fudge with the numbers quite a bit to, you know, make sure it doesn't come up too often or too rarely.
And, yeah, we put that in as well, just as a nice little thing to try and get people talking.
And the really cool thing was once it came out...
people really were talking about it.
These are some comments that I just copy-pasted straight off the Touch Arcade forums.
And it kind of started to bring on this mythos, like people weren't even sure it was real or not.
And people would claim that they'd seen it.
It was amazing, the dialogue that we had going.
And this is my favorite one.
People speculating about what the dragon fruit does.
Speculating that maybe it avoids your swipes.
It most certainly does not, but that was just so cool that people were coming up with that.
So it really felt like we met our goal there.
The other thing that happened is, you know, our ratings...
went way up with just adding that little rate it now thing.
No longer were people going to rate us to let us know that they hated us or that it was broken.
You know, we were getting a lot of one...
We were sitting at about four stars previously, and a lot of that was, you know, a lot of five stars and a lot of one stars.
We wouldn't get many in between.
And all the time in the one stars, it was people telling us about it's broken, which is great.
We need to know when it's broken and under what conditions and what needs to be fixed about it.
But there was no one, not that many people going there to tell us that they liked it.
And it was great, we did this, and all of a sudden people were on our side.
They were there and letting us know that they liked the game.
Sometimes they do things like, awesome game and give you one star.
Often accompanied by, this game is terrible, five stars.
Sometimes I wonder if like maybe they're confused and it's like golf.
So, lower score is better. Hole in one, good job guys, one star.
So yeah, and then this is what happened.
So the orange spike on your left there is the Zenmode update, and then this is the Chaser update.
So you can see it dropped pretty quickly afterwards.
And our sales went way up.
You can see there it's made a really obvious, a really dramatic difference on sales, which was absolutely fantastic.
And I really attribute that mostly towards the ratings, not so much the dragon fruit.
So that was really excellent.
And we also managed to address all of the bugs.
That really helped stabilize our star rating as well.
And so the people who downloaded it, who got the Chaser update, who had been having problems, had all their problems addressed really quickly.
So they were happy.
And then the people who weren't having problems, everything was working fine, they got some extra new stuff.
They got the dragon fruit and the coconuts.
So they were happy as well.
So we were really happy with this.
We really felt like the Chasers was a good model.
It was important to make sure that we had the content side of the chaser ready to go before the previous update even landed So we could respond to the bugs in a timely fashion. This is a model that we've been using a fair bit I won't cover any other kind of chaser updates because they follow the same sort of model that we even use it for jetpack Joyride and monster dash and all of our iOS games now and also we learned that ratings matter It's probably no great revelation there So now we move on to update 1.3.
At this point, our player base has grown to about half a million people.
And our goal was really to make the game more sticky.
We really wanted people to spend more time playing Fruit Ninja.
It seemed like, you know, people loved the game.
They told us how much they liked it, but they would kind of play it for about an hour or two, and then they would burn out on it.
You know, maybe some friends would get some really competitive stuff going on, and they'd be really socially driven.
But we certainly weren't getting people spending a huge amount of time in the...
So to make it sticky, we figured, hey, we need some long-term goals with rewards, which pretty much sounds like every shop system ever made in every game.
So we started working on that.
We already knew what we wanted people to be able to buy and unlock.
We already had these funky blades from when we worked on the critical waves for Zen mode, where we could easily color the blades, add particle effects, do kinds of funky stuff with that.
So that was a no-brainer.
And again, adding backgrounds, that's a nice easy one as well.
It was easy pre-retina days at least.
It gets a bit trickier now with how much space it takes up on a retina display.
So we had that sorted quite quickly.
What we weren't sure about was whether people should be allowed to have custom backgrounds.
Just yesterday in my hotel I realized that I didn't have a screenshot for this background.
So I got on Skype and I talked to Woody, one of our programmers back in Brisbane.
I said, hey, can you just hack up a Fruit Ninja build and, like, hack in some random stupid background and send me a screenshot of it?
This is the first screenshot he sent me.
It's like, is this one alright? I'm like, that is perfect.
And really what we decided was, you know, we didn't want to allow people to do their own custom backgrounds because we really felt like it kind of took away from the vibe and the feel of the game and sort of people were obviously going to do all kinds of crazy stuff.
We had, you know, you can kind of imagine the stuff that's going to end up in Google image search.
And not only that, but we spent a lot of time mucking around with the backgrounds we had to make sure that they, you could, the fruit was really visible on there.
Like there's a lot of contrast with the fruit.
And we often use really dark, plain backgrounds because it provides a lot of contrast with the juice, which is a really important part.
So we wanted to maintain some authorial control over that.
So then we started working on the shop.
And the shop was damn tricky.
We'd come up with this really clever novel design for our menus that everything is sliceable.
and there are no shops that involve slicing a pineapple to buy things.
The thing is, people had come in and they'd bought Fruit Ninja and they'd done it in the iTunes Store, and that uses such a different interface convention to what we were using.
This was just so crazy, kind of off track, and it was really a massive, massive challenge for us to do, something that would intuitively rely mostly on swiping and slicing.
We really didn't want it to go into, you know, some kind of finicky, picky, touch-based thing.
We wanted to keep it very Fruit Ninja.
So this is what we came up with. I couldn't find any work in progress from those, unfortunately.
Although, rest assured, there were plenty of terrible, horrible designs.
Maybe it's good I'm not showing you. It might be a little bit embarrassing.
But this is what we came up with in the end.
You know, we made a couple of little concessions as well.
We were like, okay, there might be people that are still kind of expecting it to work, like...
the app store. So we actually made our icons for the things that you could unlock, glossy and rounded corners, and if you tap on them, then it would automatically scroll up to there as well. So then, one of the really big problems we had then was, you know, we had it in there, it was selectable, that was fine. Originally we had it that instead of the current system where it is now, where you unlock it by completing tasks, it originally worked.
like a shop, you know, by playing you would kind of earn currency and then you would spend that currency, you know, unlocking things.
And again it was this weird thing where, you know, we're playing it, the whole team's playing it and they're like, yeah, it works, but for some reason it just doesn't feel Fruit Ninja. We kind of had this same problem again where something that we expected to work and that seemed fine really wasn't working for our game. It just didn't feel quite right in there, it didn't feel like it belonged.
So after a lot of mucking around, we ended up coming up with this system where, you know, basically like achievements.
We spent a long time tuning it so that you would unlock them kind of in a fairly progressive manner.
Early on you would do it and if you were a really good player, you would unlock like five blades in the first game and then you'd have this big drought where nothing happens.
So we spent quite a lot of time tuning that.
And then on release, we had a really solid reception again.
We were really happy with.
The iTunes reviews instantly changed from asking us to add multi-slice and new modes and things like that to just, I want this blade, I want this background, I want custom backgrounds.
It really dramatically changed the way people were thinking about the game and what they wanted out of it.
And we didn't have any analytics at this point, but we just know anecdotally that people were sticking with the game for longer.
So we were really happy.
We felt like we'd achieved our goal with that.
We also got our ratings crept up a little bit higher again, which was great.
And this is what the release looked like.
So again, it's kind of similar to this Zenmode one where it has a bit of a bump, and you can see the sales kind of get pushed up there.
But really, it hasn't done much at all.
And again, this is a lot of work.
It kind of bummed.
We were hoping, again, for it to explode up there.
The good thing is, is we weren't in that downward decline like we were.
The updates were coming pretty thick and fast, and we kept on adding a lot of value to the game, and as a result, it was holding quite steady.
So, yeah, we were happy about that, but, you know, we had been hoping for more.
So, the lessons we learned was, you know, while we were achieving our goals of, you know, making the game sticky, it was really important for us to not compromise what had made the game successful in the first place.
you know, we could go through and hack things up and change it around, but, you know, if Fruit Ninja doesn't remain what Fruit Ninja is about, then that's going to be a huge disaster, a huge mistake. And also, again, you know, updates are not a magical silver bullet.
So, update 1.4.
Our current player base is now at about one million players.
It's time to make another mode.
That worked out pretty good last time.
Zen mode got a lot of media coverage, so that was cool.
And we figured this time we could do another mode, but this time it would be bigger and better and more badass than Zen mode.
So what everyone was saying, and I mean it was pretty obvious, like a lot of people were saying it in the office as well, was power-ups, right?
Like, hey, let's have a mode with power-ups in it.
We'll make them bananas, because it's a mystery banana mode.
That seemed cool, so we started working on that.
At the time, we were kind of influenced a bit by Bejeweled Blitz, which is ironic, because I think they were right before me in this room.
And we took a bit of inspiration from there, we had a 60 second time limit, and we started adding power-ups galore.
So you can see there a screenshot of an early build that had the frenzy banana in it.
and we had the freeze banana and the score multiplier banana which is all stuff that is still in the game but we had all kinds of crazy shit in there. We had this gravity well banana where you would slice it and it would make this black hole and then the fruit would come up and kind of get sucked into the black hole and all just sit there so you can swipe it all at once and get like a hundred fruit combo.
We had crazy waterfalls of fruit and time traveling bananas that would rewind the game but not your score and all kinds of wacky crazy stuff.
but somehow it felt like it needed more.
So again, kind of, you know, at this point we were drawing things from Bejeweled Blitz and taking a lot of inspiration from that, because I was just like hopelessly addicted any time I wasn't working on Fruit Ninja, I was playing that.
We came up with this idea of Starfruit, when you slice Starfruit, coins would come out, and then at the end of the game, if you had enough coins, you could buy these power-ups.
So, you know, like turning off bombs and things like that.
So we were working away on that for a while.
And at this point we're at about six weeks worth of work, so again, about how long it took to make the first version of Fruit Ninja, which is kind of nuts.
And things are looking good, but it's just not quite popping yet.
It still needs some love.
So, you know, we're still working along on it.
And then, this happened.
We'll get to the office one day, and surprise!
Game Center is a thing.
and it has all these crazy cool features like inviting friends and matchmaking and you know real-time multiplayer and leaderboards and achievements.
So, we changed our mind on what we were doing.
And even though we had this kind of half-complete mode that was getting there, it was starting to feel good.
We were like, right, screw that.
Let's put that on the back burner.
Let's be one of the first real-time multiplayer games out using Game Center.
Let's do that. Let's strike while the iron is hot.
Let's be those guys.
So here's a screenshot. I don't have any work in progress shots of this because somehow, someway, this mode was designed in four days flat.
This is right off the back of spending six weeks on a mode and only getting halfway there. Multiplayer was knocked out in about four days and implemented in just over that as well because we were kind of implementing and designing at the same time to to really get it to market extremely quickly.
It was kind of cool because the multiplayer was so novel, it was kind of almost easier to design for.
It kept everyone's fruit on the same screen, just to kind of create that sense of connectedness, like you're really interacting with someone else and you're kind of sharing that spatial location.
We did a lot of tricks to kind of hide how much lag there was in the system, because it was pretty early.
And, you know, yeah, the coverage we got for that was just mental.
We got a huge amount of press for being one of the first.
We had really positive reviews on the mode, which was encouraging, because we hadn't spent that long on it.
But, you know, definitely that kind of novelty factor of playing against people and being, I'm better than you at Fruit Ninja, really, really worked.
And most importantly, we got a lot of love from Apple for doing this.
because you know as soon as they release something new they really want to promote and tell everyone about how good it was and we were there right at the front right at the beginning when it first launched so you know we got re-featured they did a game center category and we were right near the top of that and a multiplayer category and we were in that and you know we got so much attention for it which was fantastic.
So this one here, the very first spike on the left, that is multiplayer.
And the second one is when we brought in achievements and leaderboards.
We actually left that off the first implementation of Game Center, just so we could hit market fast and, you know, almost first.
And then, you know, we also put in a couple of tweaks to multiplayer in there.
Again, not unlike the kind of Chaser model.
And you can see this had a profound long-term impact on the game.
It really did lift it up and the amount of exposure just really helped Fruit Ninja immensely.
So we learned a few lessons at this point.
You can't plan everything.
This is obviously not part of the game plan, game center coming out.
The mobile market is crazy, and sometimes we feel like we've got to be crazy to keep up with it.
Even though we kind of dropped what we were doing, and we did this mad dash, and it was all this kind of insane scenario, we definitely feel like we made the right decision in doing that.
And you know that top-level visibility matters when when you're there and you're getting massive amounts of coverage across the sites. That made a huge difference.
There's absolutely no doubt about it. So where were we?
Oh yeah, Arcade Mode. So Arcade Mode is now 1.5.
We now, you know, we spent quite a bit of time on the supporting the multiplayer update. We're at about 2.1 million player base.
We really want to finish off arcade mode and we want to completely blow everyone away.
We're starting to feel the pressure, right?
Like, this mode, we've been teasing for a long time.
And people are starting to get a bit sketchy about, you know, whether when we promise there's going to be another mode, this banana mode, whether it was a real thing or not.
So at this point the mode kind of looks like this.
There's some interesting things you'll notice about this that are different from the actual version of arcade mode that's in there.
First of all, the combo blitz is there.
It's down the bottom.
There's actually a bar that ran along the bottom as well.
It told you how much blitz you had left.
We have frenzy text up the sides.
And then up the top, we have a bar that shows you how much frenzy you have left as well.
And it's just not quite.
popping. You know, again, it's that weird, like it's, yeah, I mean, it's good, but we really feel like it could be better. There's, it's got to, we can do better than this. And we had, we have our sanity testers, so, this is, um, Nat, Emma and Chloe, who are all partners of, um, you know, people working on the game.
They've always been kind of our foundation for playing it, our casual testers.
None of them are gamers in any way, shape or form.
And, you know, they were really big supporters of Fruit Ninja before it had even come out and, you know, through all of the updates.
And they were just not quite liking it.
Like, they were saying to us in that way where you're trying to tell, you go up to them and say, oh, what do you think?
Do you like it?
And they're, like, trying to be polite, being like, yeah, it's pretty good.
But you could tell, you know, their heart wasn't quite in it.
They weren't really feeling it.
And we had this kind of division, right, where somehow this casual bloody game we'd made had this hardcore fan base.
I'm sorry, that's not a really fair representation of our hardcore player base.
Because the hardcore players are great, right?
Like they're the ones on the forums telling everyone how great this game is and how everyone should play it.
They're our evangelists.
At the same time we have this casual market which obviously makes up a huge amount of people and this mode right now is satisfying the hardcore players but the casual players just aren't quite getting it, you know. It's become too complicated.
So it's time for us to start cutting, start removing some stuff.
So we removed a fair bit of stuff.
The whole kind of shop back end and the currency system, gone.
Got rid of all of that.
It was just kind of making our results screen too clunky, too complicated.
Whenever a casual player would get to that screen, you'd just see their eyes kind of glaze over.
And there's a lot of buttons and a lot of interactions going on there.
The other thing we did is we started kind of stripping back the amount of information that we were presenting the player to make it a bit more vague.
So, like, one of the big things we did was, you know, the frenzy bar at the top, we actually removed that bar and we just let it play out for about seven seconds.
And we weren't telling people how far they were through it.
We started relying on people to just kind of intuitively get a sense for how long these things were going to last.
We did the same with the combo blitz as well.
And once we cut things...
there was all of a sudden it felt like this kind of new life and this, these new opportunities before things have been complicated and we kind of been missing these, these interactions we could do.
As soon as we cut these bars, we could stick like freeze and frenzy bananas together and that was awesome.
All the fruit pouring in from the side and it's in slow-mo and it was totally badass and just by stripping things back and simplifying, we'd allowed all these new opportunities.
The other big thing we did was, you know, we made the blitzing visibility.
really different. Before we had bars counting up, and again we were trying to do so much to explain to the player exactly how it worked.
And instead we came with this new philosophy of, let's kind of hide it from the players a bit.
Casual players might not ever get a combo blitz, and that's fine.
We don't need to have like this kind of empty bar on the side that's just sort of taunting them, telling them they're not doing very good.
If they don't ever know about it, then that's fine.
So we kind of, rather than having bars, we have these lines in the background that are kind of quite faint, and they fade away and slow down, and that's how you know how much you have left.
We bring the score right up in your face because we wanted people to know the reward they were getting, but not necessarily how it worked or why.
And the great thing is, is casual players now, they're just playing along, that's fine.
As they get better, as they start stringing combos together, they start to see this stuff pop up.
They're like, hmm, okay, I really want to get a better score.
I'm going to learn this system.
And, you know, they spend a little bit of time figuring it out, and, you know, for an advanced player, it's fine.
They've got it understood.
And so by changing the visibility and how much information we were presenting the player with, it really, really improved the design.
And then we couldn't imagine the game without it.
At some point, we were just spending all of our time playing arcade mode.
We were taking screenshots and, like, sending it to the QA guys and having these massive battles.
All of a sudden, the productivity on the mode started to plummet because we spent six hours a day competing.
And it's kind of, that's when it struck us that that's how we knew that it was ready.
And now, whenever we add another major update to the game...
That's kind of our measure for whether it's ready or not.
Once it's at the point where we can't imagine it without it, where we go home and I use my phone that has the store-bought version on it, and I go straight for that mode, I'm like, ugh, damn, it's missing feature 1, 2, and 3 in the new version.
That's our metric for, OK, this thing's ready to go.
Let's get this out there and get this out to people.
Yeah, if we finally released it.
Yay, it took so long.
It took almost three times longer than to make Fruit Ninja, which is crazy.
So we poked a bit of fun at ourselves in the trailer.
I only noticed when I grabbed this screenshot that the arcade mode trailer somehow has five times more hits than the release trailer, which is kind of nuts.
And this time, we got a really, really good reception.
Again, you can see a significant sales bump there, and then some really good sustained, held velocity there.
I know now from using analytics that, so there's four modes in the game.
Arcade mode makes up 50% of the total time played on Fruit Ninja iOS.
So we learn a lot of lessons here as well.
We took a large risk by investing so heavily into this update, and it ultimately paid off though.
We really feel like it was a better result than kind of, you know...
eking it out and putting a version out there and then iterating our way to success.
Which is ironic, because that's exactly what we did with the very first version of Fruit Ninja.
But player expectations were changing and, you know, the app store is just so crazy and so fast-moving that that was changing as well.
The other lesson we were learning at this point was the bigger and the more complete the game is, the harder it is to create a substantial update that adds to the game and doesn't detract from it.
So I have a picture of the pomegranate here, I'm just going to color this quickly rather than going through every single update we did.
We got to the pomegranate and that was, oh geez, maybe our 10th or 11th update total.
And our only spec really was add something to the game which will, you know, reinvigorate it and refresh it.
And this took us ages.
Everything that we tried adding detracted from the game or didn't quite feel right.
Even though, you know, the pomegranate is such a simple addition.
a fruit that you can slice a couple of times and then it explodes, you know, there's not much to it.
The game felt so full and complete and, you know, had such a sense of identity, it was really difficult to add anything without disrupting the balance that was already there, because the game was, you know, feeling like such a complete package.
All of the low-hanging fruit, sorry for the pun, was already taken at this stage.
So this is sales and updates breakdown for the life of Fruit Ninja.
So again, blue being sales, orange being updates.
The scale on the side there, I'm not sure if you can read it.
Maybe if you're up the front is the number of updates.
You can see the blue, there's like these two massive spikes.
That's Christmas Day, 2010, 2011.
Christmas Day is a good days.
And you can sort of see the spikes in the updates.
Right down the very bottom left corner, there's like this tiny little orange dot, and that was our very first update that completely freaked us out.
And now you can see how much the stakes have been raised on every update.
So that last update right before the second Christmas, 2.4 million downloads in one day.
And that is a lot of stress and a lot of pressure for us when we're creating these updates, because, you know, especially when we're QAing it and it's got to work on Retina and iPad and all the different OSs and all the different game center cases and all that.
It's like, okay, if there's a use case in here that has like a 1% chance of crashing the game...
1% cross to cross that many users, that's going to be a lot of one-star reviews, that's going to be a lot of complaints.
And you know, we really do our best to keep everyone happy, which drives us slightly mad at times, but you know, that's just kind of our thing.
So this is a really interesting scenario.
I'd be really interested to hear, like, after the talk, if anyone wants to come and have a chat to me, I'd be really...
curious to hear about this, but for us we hit this problem where we're working on it and it's been the same team working on Fruit Ninja updates, and by same team I mean like same three guys working on the Fruit Ninja updates for I don't know, 14, 15 months now and we're just completely shattered, like we're fully de-Fruit Ninja'd, we don't have very good ideas anymore on you know, easy ways to make the game really good and you know, new exciting kind of inspiration and because the market again has changed so much. There's so many platforms, so many devices, so many, you know, trying to update it so it works with multitasking and then iCloud. And we're really, you know, my team, we're really good at making gameplay and UIP, but engineering side of things, eh, not so good. You know, that's really not where our strength is. And we're putting all of our time into managing the tech. So we eventually kind of made the decision that we were going to pass Fruit Ninja along to another team.
to work on. So another team to do the tech stuff and another team to come up with the content updates.
And that was a really hard decision for us. We definitely felt like Fruit Ninja was our baby.
We'd grown very attached to it, but at the same time it was clear that we were no longer the best people for the job.
Our hearts weren't quite in it anymore.
It really needed fresh blood, so we passed that along to some other teams inside the company.
And again, I'd be really interested to hear whether other people have had that similar problem and how people have dealt with it.
So that kind of leads me into Jetpack Joyride.
Originally when I got asked to do this talk, they wanted me to talk about the Jetpack Joyride updates.
And I was like, I don't know that you're going to get an hour out of me for Jetpack Joyride updates.
Because we were making Jetpack Joyride, and we knew how important updates were.
But.
there were a lot of new problems. We couldn't ship Lean anymore.
The app landscape was so different in the time that Fruit Ninja had been out.
Not only that, but you know all the press and everyone's expecting something amazing from us because you know this is the the next biggest game we've released since Fruit Ninja, so the pressure was on.
Because of that, you know, we spent nine months in development on Jetpack Joyride and it came in at really close to 20 meg, like 19.7 meg.
Fruit Ninja originally shipped at 9 meg, we had heaps of room.
So, you know, we were right up against that ceiling of how much stuff we could add.
We tried to make it easy to update and really extensible.
You know, we were like, oh cool, we'll do this vehicle system, because then we can add new vehicles, and this level system, so we can add new levels.
missions and we really kept that in mind while we were working on it, but the pure size and scope of the game made it so difficult to update.
It's exactly like where Fruit Ninja or it, you know, had eventually gotten to.
The game was so full, so complete, it was really difficult to add things.
We were shit out of space to do it, to keep it in under 20 meg.
And we'd spent all our times fighting fires.
We had this currency system and it connected to the internet and all that and that was a huge drama.
We spent all of our time chasing down problems.
So we actually announced an update.
We just announced it yesterday here at GDC, called the Gadgets update for Jetpack Joyride.
We have spent four months on this update.
And I think that really shows how different it is to the early days.
It sounds like it was so long ago, even though it was less than two years ago.
for managing updates. And the way that we're doing these updates now, you know, this is a major, major release for us. We're almost treating it like another game release. We've got trailers coming, we've got previews, press releases, release date, all this kind of crazy stuff. So, that's kind of where we're at now with our updates.
And that's what we feel like we're getting the most out of, as well as, you know, doing a lot of minor kind of chaser updates in between, because we don't want to have too long a gap between them.
And yeah, I mean, we've got continued support.
We're still working away on other updates.
There's so many more things now that we're trying to keep up with, adding languages, adding new platforms.
We have this crazy one we just worked on recently with Mattel, this apptivity thing where you've actually got a sensei that interacts with the screen, and the iPad knows that it's this particular figurine touching the screen.
That's all pretty crazy and really good fun to develop for because it's just so oddball and different.
But we're still learning.
You know, the way of updating games is so complicated, it's so specific to the game, specific to the company.
We've got a lot of answers, especially early days.
You know, we kind of figured things out.
But again, it's changing so much with time.
We're constantly learning, constantly coming up against new problems and new challenges.
We certainly don't have any hard and fast rules that we feel like everyone should follow.
hopefully by going through some of these key updates and sharing with you guys how we went about doing it and the successes and problems we had with it, you all got something out of it.
So, yeah, thank you very much.
And we actually have 10 minutes for questions.
So if anyone's got any questions, by all means, please use the microphone so it comes up on the recording for the GDC Vault.
Yeah, I was wondering how much worry do you have about the announcement tomorrow and how much that's going to factor into your plans moving forward?
I would be really worried about it if I hadn't been in like a permanent stressed state about doing this talk and my talk on Thursday.
But yeah, I mean, you know, it's tricky and there's already people on Touch Arcade and all that showing their games at iPad Retina resolution without knowing for sure that's what it is.
It's hard. Maybe that'll work and maybe that'll pay off for those guys.
But, you know, we have to wait and see what happens and take it as it comes.
Right now.
we're so deep in development for a bunch of different things that we have on the boil that it's going to be difficult for us to be super reactive to that sort of thing.
But, yeah, hopefully...
Yeah, it'll be interesting to see what comes.
It's hard to know until it happens.
Yes?
Hi, thanks for the great talk.
I was wondering about the multi-platform endeavors from Halfbrick.
Are you using any of the multi-platform engines for Android?
So the question is, how do we handle multi-platform development?
And we actually have our own in-house engine that we use, which is called Mortar.
Bricks and Mortar?
Come on.
I think it's kind of neat.
And yeah, it's tricky.
I don't have that much to do with the multi-platform side of things.
I'm really focused on the design side.
But yeah, it's a constant challenge, because the platforms all have their differences and their kind of quirks.
it definitely is a big challenge and you know we're doing our best to keep things multi-platform but yeah it's always a challenge.
How has it changed your process to begin using analytics as part of your design?
And was it heavily influential in terms of how you approached things with Jetpack Joyride?
Yeah, we use analytics and I mostly use them because they're interesting rather than using them to inform my design processes.
You know, there's like the old saying, there's lies, damn lies, and statistics.
I'm definitely very much in that camp.
I'm sure there's a lot of good uses for analytics.
I tend to prefer to design, like, quite intuitively.
Sometimes we'll get some interesting insights out of analytics.
A really excellent one that we did get was when we were setting the score cap on the light version of Fruit Ninja, having analytics there was a good way to know, like, you know, what is the average score people are getting, where should we set that, should we set that 200?
No, that's too high, not enough people get there.
But yeah, really it hasn't influenced our design that much at all.
Sometimes it'll be a very specific problem that it's good at addressing, but a lot of the times it's interesting and it can be used to inform our decisions, but we don't use the analytics to really drive anything.
Just with the graphs when it had the updates versus the sales, there seemed to be spikes about once a week for sales that would, like, there'd be a big increase and then it would drop off.
I'm just wondering, how did that occur? What was it?
Yeah, I mean, we see that across all of our apps.
I'm sure a lot of other app developers see it as well.
Straight up, there's a big spike on Fridays and Saturdays, and to a lesser extent, Sundays as well.
I guess, you know, weekends, people have got more free time, more likely to...
to get the game so yeah it's uh... it's interesting and it's so uniform like you see it across all those graphs that's so pronounced so you mentioned how uh... earlier version of Fruit Ninja had the store system with currency and what not and what's funny is that Jetpack Joyride incorporates that so pretty sure, like I don't know, me personally I find that system successful in Jetpack Joyride.
Have you guys ever considered bringing it back in Fruit Ninja and actually having some sort of cross pollination like support to where currency in Fruit Ninja can affect Jetpack Joyride and vice versa? Basically something that can run as a scan to, you know, how many other half brick games that that individual has on their device at that moment. Have you guys ever, you know, came across that thought?
In terms of using currency in Fruit Ninja, it's certainly, you know, something that we're willing to play around with and figure out.
When we did it last time, we were unsuccessful and, you know, we didn't manage to get it right.
That's not to say there isn't a right way to do that implementation.
I just don't know what it is yet.
Yeah, it definitely felt like it worked really well in Jetpack and Jetpack's such a different kind of beast that it just sort of felt right for it.
In terms of cross-pollinating currency between apps...
I don't know, maybe. It would be cool, I mean, there's probably some pretty wild stuff you could do, but it's honestly something I've never even considered before.
Sweet, it's all yours. Run with it.
I think you said you are a game designer, not an artist?
Yeah.
And so I was wondering if you could talk about the makeup of your teams, and just like who contributes to code, and who has sort of the art direction, and whether that influences things.
Sure thing.
Well, yeah, so basically the makeup of the teams is a.
Steve, what are you doing up at the microphone?
So the programmer of Fruit Ninja is that guy who's standing up at the microphone just now.
So it's pretty simple, we have a designer, an artist and a programmer who all fill those roles.
But the thing is we're so small, like three or four guys working on it, we get a lot of cross-pollination.
We all have a say on the art style, I had a lot of things that I was really kind of...
really wanted to do. And you know, these guys who aren't designers often have really good design ideas and implementations and you know, it's a very collaborative process. And you know, that's across all of our teams at Halfbrick as well. We really encourage everyone to get stuck in and help out and you know, sometimes some programmer art might make it into the game if the programmer's got a bit of a gift. We have some guys that are extremely kind of multi-talented and do a bit of everything, so yeah, it really depends on the team and the project.
Steve?
I was just wondering if you could talk about how you decide what date to release each update?
Because I know there are certain things that we think about when we do that.
Yeah, I mean, in terms of setting the date for when we want to release the update, it really depends.
If it's a firefighter build and we're just trying to knock out bugs, we try and make sure that happens as quickly as possible.
If it's a major update, then we want it to kind of.
you know, go with the, we might want it to coincide with some other major releases or you may be looking for a quiet time, quiet patch to release it in.
It really depends on the exact time and the nature of the update, but it's certainly something we don't just pull the trigger willy-nilly.
A lot of the time we'll have updates, especially major updates, ready to go far in advance, give it a lot of time to go through our internal QA and then it'll even be ready and, you know, ready to...
press the big green go button on for a little while as we set the dates and you know really do it properly, do them like a proper game release.
I'm a huge fan of Jetpack Joyride and Fruit Ninja as I'm sure many others are and so whenever I played Jetpack Joyride I just was thinking about the design process that went into doing it because it feels like three or four games melded together. You have the slot machine, all the different vehicles have different gameplay. Can you talk about the iterative process or whatever it was that did that?
Sure. So we announced Jetpack Joyride last year at GDC and I went to a talk, because it was my first GDC last year, I went to this talk and someone, I don't remember which talk it was, but they were talking about this process called JSI-RSO, which stands for Jam Shit In and Rip Shit Out.
And when I was hearing this talk, I'm like, oh my God, that's Jetpack Joyride.
And that was really it.
Like, it was really a lot of ripping things out, putting things in.
That's actually, like, a really good time for the last question, because I can use it to pimp my talk, which is all about the design process of Jetpack Joyride, which is in this room Thursday, 11.30.
But yeah, I mean, it was a lot of ripping things in, putting, you know...
taking things out and you know a lot of hacking and slashing design wise to get it there.
So yeah thanks everyone for coming along and uh yeah thank you.
