I'm Tom, I was the writer, designer and programmer on a game called Gunpoint that came out in 2013 and on Heat Signature which came out just last year.
And when I started Gunpoint, I said this publicly, I'll be surprised if it takes me less than six months and sad if it takes me more than a year.
Gunpoint took three years.
When I started Heat Signature, having learned nothing, I said publicly again, I'm just taking a break from learning Unity to make something quick in Game Maker.
Heat signature took three and a half years.
So clearly, both of these games have scope creep.
They both deviated wildly from their original plans.
And scope creep is a dirty word.
It's a bad thing.
We're supposed to avoid it.
Unfortunately, it's also kind of my development process.
I have never really stuck to any plans, and I'm mocking my past self for being so wildly wrong about time estimates, but if I'd stuck to my plan on either of those games, I just wouldn't be here at all.
I would just be someone with a slightly boring hobby project that never really went anywhere, and I probably would have given up before the next one.
So all the good stuff in those games came from the stuff that I made up along the way that deviated from the original plan.
So there's something good here.
But the warnings about ScopeCreep are not misplaced.
There are definitely dangers as well.
So I feel like I definitely screwed up something here.
Probably two things.
One of them would be just when estimating the time that my own games are going to take me.
I think on that topic I've proved the world's least qualified person, and I'm not just wrong about it, I'm extremely wrong, I'm consistently wrong, and I'm also the only one who's wrong about this.
No one else thought gunpoint was going to take six months.
No one told me heat signature would be quick.
I'm incredibly bad at this, and like a lot of unqualified people who have never been in the vicinity of being right, a lot of people listen to me.
And so I'm just going to have to shut myself up about that.
So this is my excuse for not sticking to my plans.
Until you make something, you don't know anything.
I find I never have any idea if anything's gonna work out until I've actually made it.
So the whole process is about prototyping whatever idea it is you have, and prototyping enough of it to know whether it works.
And that process has gone right for me once and kind of wrong for me once.
Because the other thing I screwed up is that heat signature taking three and a half years is a lot worse than gunpoint taking three years because gunpoint was three years of weekends, heat signature was three and a half years of full time.
So at some point, this got really, really inefficient.
And so I want to look into...
what went right on Gunpoint and what went wrong on Heat Signature and how I could improve the process to try and hopefully err on the side of the faster development process.
So this is Gunpoint when I started making it.
I actually, before this point, I had a plan about being a robot in space dropping fridges on people.
And I'm not saying that wouldn't have worked, but it isn't the direction I ended up going in.
By the time I actually started to learn Game Maker and mess around with the prototype, I was pretty set on you being some kind of private detective and I also wanted you to be able to click and fling towards wherever you clicked on the screen, which has nothing to do with being a private detective, but I just did both and here we are.
The only other plan I had really was that I really liked Deus Ex and I wanted to see how many things that I liked about Deus Ex I could capture in a 2D game.
One of which is being killed on sight, and another of which is if you do get a jump on someone you can take them out pretty easily.
And then I was thinking about, you know, locked doors, figuring out ways past them, security cameras, all that kind of thing about infiltrating a building, figuring out ways past security.
And how many of those could I do in 2D and how well would they work?
And one of those things is hacking.
And I love hacking in these games.
I love the feeling of subverting the level to work the way you want it to, taking things that are supposed to work against you and making them work for you.
And so I was thinking about ways to do that and thinking back to when I used to design levels for like Duke Nukem 3D and Quake in those games you would.
First, place like a door or a switch, and then after you place them, figure out how they're wired up, like which thing is connected to what, what switch activates what doors, and you have a load of freedom when you do that, and it's a fun process.
So my idea was maybe you could give the player that freedom and let them kind of just switch to a mode where they see how everything is wired up, and they can just drag those connections around to work however they want.
So they can drag a light switch to a door, and now pressing the light switch opens the door instead of turning the light off.
And I tried that and it was really fun.
I immediately had loads of cool ideas to mess around with it.
I sent it to testers, testers really enjoy playing with it.
In its most basic form, it's obviously too powerful because you can just hook one light switch to every light in the building and then make the whole building go dark and sneak through it.
But it was obvious how to fix that problem.
It was obvious that you should have some things that you can't rewire at first.
So there's the things are here on a protected circuit and once I get to the circuit box, I can then.
hack into those as well and rewire everything.
And it just immediately became obvious that this should be a puzzle game.
Like that was just a puzzle mechanic.
The ability to rewire things was a really powerful tool.
Restricting that in an interesting way was felt like a sort of puzzly obstacle.
And it was just very intuitive to just build levels around that concept.
You can't do this.
There's some reason you can't use the crosslink to solve this problem.
Figure out an interesting way around that.
And so Gunpoint just kind of told me what I wanted to be.
It just wanted to be a puzzle game, just obviously.
And I just rolled with that, and I just expanded the hacking mechanic to a crazy extent.
I built the whole game around it, which was definitely scope creep, because I wasn't sacrificing anything.
I didn't have some sophisticated combat system that I then canceled because I was going so deep on the hacking thing.
I just went deep on the hacking thing in addition to all the other stuff I'd already done.
And I think it was good scope creep.
It was scope creep in the direction that contained all the interesting things, interesting possibilities that the game ended up having.
And so years later, I finally got an artist.
This is John Roberts' art.
And yeah, the development was just remarkably smooth on gunpoint.
I just got really lucky that the thing I picked just happened to be within my abilities.
That was not in any way a cleverly judged or.
a smart decision on my part, it was just pure luck I happened to pick something that turned out to be easy for a beginner to do.
And the idea I picked, the hacking thing, just evolved really well.
So this is how I kind of saw gunpoint development at the time.
This is what I thought I did.
And I did do this, but this is only one way of phrasing it.
I made a little bit of everything and then I saw what shone.
The hacking thing was clearly the best thing I made.
I went with that.
And that's a pretty good rule when it works.
Let's look at a case where it didn't work.
So this is heat signature.
My idea for heat signature was just go inside spaceships.
It would be cool if you could go inside a spaceship.
You're a spaceship, they're a spaceship, you dock with them, and you go inside the spaceship.
So to prototype that, I started by just making some infinite space, you can just fly around wherever you like in here, and then when you come across an enemy ship, you can drill through it, and then you go inside the spaceship.
There you are, inside the spaceship.
That, I didn't really know what to conclude from that.
There it is, off you go.
So I'd successfully prototyped the concept, but obviously there's still some unanswered questions here.
I don't think this conclusively tells you whether it's gonna be a good game or not.
So I just kind of had to keep making it.
And I made a ship generator.
I knew I wanted randomly generated ships.
So it generates exterior shape and then also interior layout and make sure every room is connected to every other room.
I made enemies with AI and a basic combat system.
And all of these rooms are subsystems of the ship.
So those guys I just shot, some of those were turret gunners.
And if you take them out, the turret can no longer fire.
That guy with the red X I just shot was my objective.
So there's a mission here to kill someone in particular.
I just got shot, that's in there too.
And all of these little red dots, those fuel barrels, if I blow those up, it not only takes out the thruster, preventing the ship from flying, but it also destroys the room, so all the ships have modular destructibility.
And if I get to the cockpit, I can take over the ship and fly it myself.
So there's a huge amount of just systems and stuff that I had to build just to explore this idea, just to find out if there was anything interesting here.
And I think actually that is a mistake in itself.
There was just too much that needed prototyping.
In order to test the idea of heat signature, I just had to make nearly all of heat signature.
Like there wasn't really one single thing I could just mock up and then find out is this fun or not.
I had to just keep making the whole thing.
So in future, when I'm prototyping stuff, or when I'm thinking about concepts that I want to prototype, I'm always going to ask, how much of this do I have to make before I know if it works?
That's the key thing.
It's not necessarily how long will this whole game take to finish, it's just how much of it do I need to make before I'll know whether it works or not?
And obviously that's a bit of guesswork as well, but you can make a much more informed guess about that.
So I just kept working on all the little bits and I looked for an artist and I found a guy called John Roberts, who's the same guy who did the art for Gunpoint.
Not a coincidence that he turned out to be incredibly good at this style of art too.
And I didn't really know what to focus on.
Unlike Gunpoint, I'd roughed out everything and it didn't tell me what kind of game it wanted to make, what kind of game it wanted to be.
No one feature really stood out.
And so I was taking it to shows and having people play it at EGX and Rez and asking them, like, what do you think of this?
What should I work on next?
What does it need?
And the feedback was really positive.
People were enjoying playing it.
But when I asked them what it needed, there was a very strong trend in their feedback.
Almost everybody said something like, I wanna know why I'm doing these missions.
Like, the missions are fun, but I wanna know what the context is, why I'm doing it.
because you would just wake up, you get given a mission, you go and do it, and then it just starts again.
And I was quite pleased with this feedback because I already had a plan for adding context to this game.
And my plan was to make a galaxy.
Actually, just making a galaxy would be too achievable, so I decided I would make infinite galaxies by creating a galaxy generator.
and all it would do is just create empires of space stations connected by trade routes, each space station mining a different resource from the nebula, and each faction wanting control of a full set of all the different resources that they needed to sustain their empire, and then they would just dynamically push into each other's territory and try and take space stations from each other, and that would be it, really, just a small, controlled metagame.
This is stupid in many ways.
But I think the biggest problem with it is not so much that it's ambitious to make that whole thing, it's basically the same problem I had with the concept of heat signature itself, which is just that you kind of have to make all of this before you know if it does anything at all.
Like, just making that...
galaxy that you can zoom out and see felt really cool, but it didn't answer the question of does this successfully add context to your missions?
Does this solve the problem people are having?
Do people now feel like they have a motivation?
Because at that point, the missions don't connect to that metagame.
It doesn't do anything.
So you've got to make the whole galaxy, then you've got to make how the galaxy relates to your missions, and then you find out whether the last six months were spent on anything worthwhile at all.
So this is the exact same slide I used last time.
Too much needed prototyping here.
I should have asked, how much of this do I have to make before I know if it works?
And so I had made quite a lot of that Galaxy stuff and it wasn't really working out.
And...
Around that time, I went to this developers retreat called Stugan in Sweden, where you go to cabins in the woods and focus on your game with about 20 other developers.
And it's a really good opportunity to focus, but also to re-evaluate.
I got there, and I was still working on this galaxy stuff, which just wasn't really panning out.
It was.
Um...
It was there, and it was adding context to your missions technically, but it felt kind of arduous, because you'd do a mission, and then you'd see how it affected the galaxy map, and if it captured a station or if it did something that you wanted it to do, then you would just kind of see the whole game stretching before you in kind of a bad way, like, oh, I just do that again and again and again until this whole galaxy is cleared.
It wasn't an appealing thought.
It actually made the game kind of more tedious.
and I've been wrestling with that and reinventing it and trying to solve that problem in all kinds of ways.
When I went to Stugan, the idea of just resuming that work and just tinkering with that same thing that wasn't working was really unappealing to me.
And so instead, I switched gears and I decided to just work on one of the many other things I know I'm going to have to work on at some point.
And I worked on the interior game.
Like, when you're inside the spaceships, what kind of items can you find?
I added teleporters, grenades, added armor types, turrets, things like that.
All the stuff I knew I was going to add anyway.
But I decided to add it then and there.
And the game started getting better really fast.
It was incredible how efficient that was.
It was just, you add a few items, and they're really cool, and then you add a few more items, and not only are they cool, but they also interact with the items you just added in really interesting ways.
So back then, I might actually rewind and see if we can show it.
I...
I'm about to put down a proximity grenade and then use a swapper teleporter on someone in the next room so that when he switches places with me, he triggers the proximity grenade I just put down and I can shoot his friends.
So stuff like that just emerged from the rules I was adding all the time.
And that's exactly the kind of game I wanted to make.
This game was also aiming to be a bit like Deus Ex in any way I could possibly make it.
And that's exactly the kind of thing I love in Deus Ex is when a solution emerges from the rules.
And the more items I added, the more that happened, the more fun I had with it, and I was just getting to the point where every day I worked on it, the game would make me laugh out loud at something that I didn't expect.
that was surprising and fun and made sense with the rules.
So this is clearly what I should have been working on instead of the galaxy thing.
This is what I should have been working on all along.
But that lesson is kind of useless for all of us because I'm not gonna make heat signature again.
You're probably not gonna make heat signature.
I don't recommend it.
And so what I want to know is not what I should have done, but how I could have arrived at that conclusion sooner.
Because I did get there in the end, but this was two and a half years into development that I finally realized what I should have been working on.
I think the question I asked, what does the game need most, was the wrong question to ask.
If you could answer that perfectly, I'm sure that would get you a useful answer, but it's just too difficult to answer that question.
And really you want a question that focuses you on what the answer to that is likely to be.
And so now I think the question I should have asked myself is what is the core of the game?
That is a question that if I had been asked that one year into development, like two and a half years before I finished the game, I think even then I could have told you it's the interior game, the stuff that's on board.
That's what you're going to spend most of your time doing, it's got to be interesting, and the way I think of what is the core of the game is to ask this.
Would it ruin the game if this bit was kind of bland?
So the space flight in Heat Signature, could that be kind of bland?
Yeah, and actually it kind of is.
We didn't make that very sophisticated or fun because the more work we put into that, the more people it just put off the game because people who couldn't handle flying stuff but otherwise might have liked the game then weren't able to play.
So we just basically left that extremely rudimentary and that's fine.
And I could have told you that would be fine even two years before I finished.
So.
If you ask that about, you know, the galaxy map, the strategic layer, would it ruin the game if that was kind of bland?
No, it actually is kind of bland.
And that's true for loads of elements of a heat sink, yeah, but if you ask me that about the onboard stuff, like when you go inside the spaceship, would it ruin the game if that was kind of bland?
Yeah, it would absolutely ruin the game.
It would be terrible.
There's just nothing you can add surrounding that that's ever going to make it a great game if what happens when you're on board the ship is just kind of boring.
And so the answer to that question is going to be different for all kinds of games.
But if you're making a Monkey Island game, can the dialogue be bland?
No, the dialogue can't be bland in a Monkey Island game.
A bunch of other things maybe can, but there's going to be one part of the game that just has to be unusually good for this to work at all.
And obviously, if you're answering yes to that on many elements of your game, then cool, but that might take a while.
Like, I'm now looking for...
There are certain kinds of games where, like, multiple things all need to be good, and those are the kinds of games that you probably don't want to make if you're alone.
I'm looking for, I will start working alone and then bring in other people if and when I end up with something that's worth making.
And so I'm always looking now for things that just have a single core, like something that I think, okay, this is probably gonna be the core of the game.
And so this is my process now.
I am going to choose a game idea that's quick to prototype, and quick to prototype means.
You can test whether the idea will work by making some small part of it, not the whole thing.
So heat signature is bad for that because going inside spaceships, you can prototype it, but you don't learn much unless you also make a whole game around it.
And then prototype the important bits of it.
You get to decide what the important bits of it are.
You probably know why it excites you and what's interesting about it.
And at that point, decide what the core should be.
So in the case of Gunpoint, that question, I didn't even need to ask it, because the game just told me this is what the core of it is, it's gonna be about hacking.
That's by far the most interesting thing.
With Heat Signature, the game didn't tell me that, and so I kind of got lost in the reads, and started adding things that weren't really relevant to the central core of it.
If I just asked that question, I think I could have answered it, and exploring that area is exactly what ended up making the game good in the end.
So once you know what the core is, or once you've decided what the core is, because you can make it up if you like, you can scope creep as far as you like in that direction.
Like scope creep is good when it's related to the core of the game, which is, once you, if you're right about what the core of the game is, then you can add to it as much as you like.
You can make it more complicated, you can make it more difficult, you can make it more sophisticated, you can expand it, you can make more work for yourself, as long as it's in the area that is actually what's special about your game in the first place.
So that's what I'm doing next time.
And I want to stress that this is my new process.
I put that specifically at the top to stress that.
This is just what I think is gonna work for me and for the particular kind of games I like to make.
I'm looking for things that are mechanically interesting.
I want to make things that generate exciting experiences and I want to make those games as quickly as possible.
I don't have a good track record of making them quickly.
That's what I'm optimizing for and so I just want to make sure that it doesn't sound like I'm saying this is how you make a game.
This is just my idea for how I can improve my own process.
And the other thing to say is that Heat Signature, it would be easy to talk about it like a success story because it sold really well.
It sold better than Gunpoint. It reviewed well. I'm really happy with it. I have a great time playing it when I play it.
I'm very proud of it.
All of that is only possible because Gunpoint paid for it.
It took way too long.
What really happened is I failed to make a good game in a reasonable amount of time.
Two years in, I did not have a good game.
I devoted a huge amount of time and money to it, and I had failed to make it work.
And if I was under the same kind of financial constraints that most people are, I would have just had to release it in a bad state or just give up.
My whole career may well have been over.
So it only worked out because I have the enormous privilege of...
being able to afford to make those kinds of mistakes and learn from them.
So I feel like the least I can do is to share what I did learn.
So I hope it's been useful.
Thank you.
So we have time for a few questions.
If you'd like to ask Tom a question, please come to one of the mics in the aisles.
And I'll start things off then, Tom.
You have a background in the games press, right?
Do you consider the press when you're coming up with the concepts for the games that you're going to be working on?
No. I guess I can fall back on the fact that maybe because I was press for related reasons, if there's an idea that really excites me, I just assume it's going to excite some other people as well. And I think actually the game...
The scene more and more supports lots of little niches, and lots of, well, actually big niches.
And it feels like now, if you're really, really excited about a game idea, and you're right to be excited about the game idea, i.e. it pans out, then there's probably gonna be a bunch of people who are excited about it too.
And I think I've been especially lucky that the kinds of games that excite me are.
like I say, Deus Ex and stuff, which are not like the biggest selling games in the world, but there's, you know, several million people who love those games to death.
And so as long as those million people continue to exist, they're probably hopefully gonna like things I think of.
Thanks.
On the subject of that, how did you find kind of wrestling with your audience in terms of them kind of like feeding into your scope creep.
So like, you know, then you kind of talking about something that was sinking your time, and then the audience being, go on, go on, add more features, get more stuff in.
How did you kind of counter that?
Yeah, so the question is, how do I counter other people feeding into my scope creep by suggesting things?
And I listen to people's suggestions and say, oh, that's a cool idea, and then I don't do them.
You have to get very used to doing that.
You just have to do that a lot.
Because there are some good ideas, and I definitely did benefit from people's suggestions on Heatsink Show and Gunpoint, and especially friends who I specifically asked for ideas from.
But sort of 95% of the ideas you're gonna get are not necessarily bad, they're just outside the scope.
As you say, it's...
If you're going to be able to resist your own scope creep, you at least need to be able to resist other people's ideas for your game.
And so Heatsinger chose— was the worst for this because it, uh...
could be a million different games.
It could be Eve, it could be...
There's something about space games in particular that makes people sort of want them to be everything.
I think because there are space games that are trying to be everything.
So people assume that every space game wants to be everything.
So people keep asking why you can't mine asteroids or build your own ships or start your own empire and have a crew and all this other stuff.
And the answer is because that's nine other games.
and it was hard enough to make one.
So, yeah, I just, I don't shoot down people's suggestions.
I just quietly ignore them.
Okay, thank you.
Hey, I think when you spoke about the development of Gunpoint, you had mentioned that because you only had weekends, you were specifically picking tasks that fit within a day or the weekend as a natural constraint.
Was that something that you thought of or tried to apply to this?
Or did that just go out the window because you didn't feel the need to?
Arguably, I should have.
I didn't. Sorry, I know, I was blowing up.
Yeah, Gunpoint was mostly weekends and that did change the pace of development in lots of ways and I said earlier that Heat Singer is probably three times as long because in number of days it was certainly at least that, but there is a sort of hidden benefit to having five days of not working on your game in between the two days that you do work on your game because you come back a lot smarter I think.
And I think...
There are some tasks that do not fit into a weekend and that was a problem with Gunpoint.
I had lost a lot of time to sitting down to it on a Saturday morning and thinking, what was I doing?
Like, how was I going to solve this?
I don't remember.
But equally, I had a week to sort of sanity check everything.
So I come back and thinking, you know, sometimes I sit down and think, wait, why was I doing this?
And I discover I should not have been doing this.
This is a complete waste of time.
So it had ups and downs, and yeah, no I didn't try and apply that to Heatsink Show, I just assumed that having more time to work on a game would just be outright better.
And yeah, that was probably a contributing factor into me sort of failing to control the direction of the production as well as I did with Gunpoint.
Thanks.
You go ahead over here.
I think you were first.
So I was wondering, a few years ago you did an article of how to explain your game to an asshole, as you.
I'm curious, do you explain your game to you when you explain it?
How do you explain gunpoint, how do you explain heat signature?
I practice explaining it to other people, so explaining it to myself would be too easy because I can read between the lines and I know what I mean by everything.
But yeah, Gunpoint, I changed how I described it to people continuously for all three years that I was working on it.
And actually still now, we did a Steam sale a few years ago.
It was like two years after Gunpoint came out and I decided to change the pitch for Gunpoint.
I think I have a better way to just explain this game now.
So it's something I constantly work on.
And yeah, for Heat Signature, yeah, just keep writing like a little blurb and, actually conferences are the best place to kind of hone this because when you explain to someone at an event, you get to see their reaction, you get to see whether they grasp it or not.
And that's the key thing is just, have they even understood what I'm saying?
And I definitely changed my mind about how to explain that a lot of times.
Thanks.
Okay, go ahead.
Okay, Tom, I just wanted to say, I think a couple years ago you did that Game Maker series about learning to program games.
I just wanted to say thank you because it came to me at a time when I kind of stopped with Flash dying and stuff.
So thank you for that.
And other than that, when you were making Heat Signature...
Did you kind of feel, like how far into it did you feel that you had to sort of shift gears before working the interior or was it kind of like a frog in water starting to boil where you just didn't notice for the longest time?
Yeah, I noticed that it wasn't coming together and I actually got kind of burnt out at GDC two years ago.
I remember talking to friends here and saying like I think I'm just going to take two months off and try and do something else and take a break.
What I ended up doing in that break was making another game called Morphblade because it turns out that if I take a break from game development, I just think about game development the entire time.
So the only thing that can actually distract me is just a different game.
So yeah, I wasn't unaware that it was failing to come together.
And it was, like I said, at Stugan when I started to figure it out, and that was sort of June of 2016, I want to say.
So like a year and a bit before it finished.
Thank you.
And in general, actually, I think that seems to be a pattern that like...
after you figure out what your game is and get to the heart of it and have a good working prototype, it's about a year before you're done.
Okay, we only have time for one more.
Cool.
So when figuring out your core, how did you start looking at your game in terms of mechanics that add to it and then things that you were bringing into it?
Like what kind of things did you start as like a rule set to add and subtract from your game?
For the gadgets and stuff and heat signature, I started with teleporters because it was the easiest thing I could imagine to code.
You just click where you want to go and then you change the player's position to where the cursor is.
That's a teleporter.
And then I knew that would be too powerful because the whole game is about trying to get to a certain location, so I came up with downsides for them.
And actually, yeah, that was why I was planning on teleporters and I'd actually been planning them for a long time.
I had this sort of document of ideas for devices and stuff and I just kept having new ideas for teleporters.
I had about seven ideas for teleporters for some reason.
And adding those in with their constraints, there's one that can only swap you with people, there's one that can take you wherever you want but it takes you back two seconds later, and then there's one...
that can take you to anywhere that you could get to by walking anyway, instantly.
And those all just felt really interesting to mess around with.
So mostly it was just experimentation.
I focus on the easiest things to make first and then see if they're any good.
And usually they are or they need just like a small tweak to make them good.
And so I didn't have like a big like unifying rule sets of what items could or couldn't be.
What I did need to do is figure out a system for like how they're.
programmed sort of how they're implemented.
And so in Heat Signature, it's traits.
Every item has a list of traits, and it's just a list of strings.
The data that we save doesn't store any stats about the weapon at all.
The game just knows, oh, if it's long range, that means it goes this far, and if it's silence, that means it makes this much noise.
And that applies to like melee weapons, grenades, teleporters, all that stuff.
And so that was really useful.
And that also starts to inspire you to like come up with new ideas of like, oh, what if there was a grenade that had the hacking trait?
So, thank you.
All right, I think that's it.
So please make sure you fill in the feedback forms to let Tom know what you thought, and let's give him one last round of applause for the awesome talk.
Thank you.
