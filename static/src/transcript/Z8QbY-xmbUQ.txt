Hey everyone, welcome to the GDC Twitch channel. My name is Brian Francis. I am here the I'm no longer the invisible voice inside your head. I used to be very invisible But now I am here in front of you with planets all around me on the spirit overlay art Talking to you today about a neat new game called Teardown.
If you're here in chat and I already see some great folks in chat like 4catrpm and xy01design, you probably know what Teardown is. We've been watching these clips on YouTube for a few weeks, haven't we? Um...
Uh, Tear Down is a game where you tear things down.
It's got these neat voxels, you are pushing and prodding things.
Uh, for those of you in chat, if you're not new here, lately we've been doing this thing where I record the footage in advance so I can chat with the developer who is down below and we'll get to him in a second.
Uh, so the footage you're seeing today is pre-recorded and you're gonna see me like it.
So, uh, I'll see you guys later.
Take care.
Bye.
learning the game because we're only playing the first couple hours. You're going to see me having some pretty like organic reactions to things which we're going to fuel our conversation.
But enough about me and my mediocre gameplay skills. I am here with a wonderful person, Tuxedo Labs himself, Dennis Gustafsson. Dennis, would you please introduce yourself and tell us how you're doing?
Hi, yes, so I'm Dennis Gustafsson, and I'm one of the main developers of this game Teardown.
I've been working on it for almost three years, at least two and a half years, full time.
And it started off as a solo project, but it grew into a small team, and we're now two main developers, that's myself and Emil Bengtsson.
And then we have a number of contractors.
I think we've been seven people involved in creating this game.
And it's currently in early access on Steam.
And we're going to work for at least another year, we've said, to build more content for it and add mod support and fix bugs and whatever community, based on the feedback that we get from the community.
Sweet, I, uh, I, uh, what I take out of that is, oh sweet, we can have this conversation again in a year again and talk about what you've learned in that time.
Yes!
But yeah, uh, Teardown! So, uh, you can see me going through the tutorial right here, like learning the basic mechanics and getting to the first mission, which I'm going to spend way too much time on, uh, today.
But Dennis, I would like you to sort of tell us, what were the origins of Tear Down and how, like, I've seen games like this sort of come and go, you know, like the post-Minecraft boom was like, oh, voxels and crafting and building, like, were very big, but this is a game, instead of building things up, you tear them down. So what, where did this game come from, and what were kind of the first things that emerged that made you go, oh, we have a fun game here, we should keep developing this and try to make it into a full-fledged thing?
It's actually a pretty long story, because this game started as just a technology experiment.
Most of my previous games also started with some kind of thing with technology, like playing around with something new. And this was very much one of those games where I started tinkering with... I actually started with a rendering, like doing a custom ray tracing.
by art style. Very inspired by the Magicka voxel community. I don't know if you're aware of that.
It's a little voxel modeling and rendering software. And I really like this style of blending abstract voxels with super realistic lighting and the combination of that.
And then I also have a history of making destruction for games. I've been working with Or been part of doing games with destruction before most notably is the mobile game smash hit It's also based on destruction. So I was playing on this technology and voxels is very suitable for because they're just so much easier to work with when destroying stuff.
And also with the physics, it really works well together.
So we had this little sandbox playground where you could just run around and destroy voxel objects and then turning that into a game was a pretty long process where I was prototyping stuff.
trying out different types of gameplay, but we didn't really find anything suitable, and then I continued doing that on my own for another almost half year, before finally landing in this two-phase heist-type game.
Yeah.
Because what's fun with this was to really use destruction for the gameplay, where you can do more of a precision work, as opposed to just having destruction as an effect, as you typically see in games.
But that also meant it was pretty hard to find a suitable gameplay or game idea under the assumption that everything should be destructible, because a lot of...
traditional game designs and the tools we use for level design and game design in general, they don't really work.
They kind of break down when everything is destructible because you can't really restrict the player with walls, doors, and all this stuff.
So it was a long project.
It was a long process to end up in this type of game.
Yeah, let's talk about the first level that we see here. We've got folks in chat.
I think there's some people pointing something out. Andy the Noquee says they're amazed they could play a game with ray tracing on their 1060. I'm running on this in like a 970, so if you think this game looks good, it's running on my old graphics card.
I'm trying to get a 3070, but so is everyone else. Anyway.
Um, so, uh, this level is interesting.
What I experienced in this level, what we're watching me do in real time is sort of learning, I'm learning how the destruction in this game works, um, and how, uh, how I'm supposed to complete this objective, which is that this building is, uh, oh, it's just 6.3 meters too tall. Uh, my dumb American self does not know what a meter is, so I don't know that means tear down the building. I'm sitting here thinking I just need to knock a few inches off the top.
Um, uh, and, and it's not once it, once you understand it, it is straightforward.
But as you saw me do a few minutes ago, I was, I tore down like all the walls in the building and I looked up and the whole building standing up and I'm like, okay, well, what the heck am I supposed to like, what am I doing?
Like how, what is blowing up?
Like there's, there's a game logic here that is very interesting and ties into that destruction.
Um, what were sort of your process for building?
Like, and this is the level where the player is learning it, right?
Like this is the tutorial in a sense.
Um, Yeah, no, that's... I see what you're meaning, that the destruction doesn't really feel the weight of the building.
It can be held up by a very small piece of the building.
And that is, first and foremost, it's a technical limitation.
It's just like, if I should simulate stress in every part of the building the entire time, that would just be too...
time-consuming to do in real time.
So that's the main reason for it.
And the reason we put...
We talked about putting another type of house, because we can also do other types of destruction where this is kind of hidden by jointing stuff and having more like wiggly buildings.
But it was sort of honest to be upfront, like this is...
and that all the other beliefs don't work that way.
So it was kind of an informed decision to make it that way.
Yeah, I think this tutorial is interesting because unlike other tutorial levels that are very like everything is set out and you just do exactly what the game tells you.
Which, you know, the section before this was like that, but this is very like, oh no, you're going to feel lost.
If you haven't watched any videos, you're going to feel lost and confused for a bit until it clicks, and we're going to watch in real time me processing it clicking.
So I think that's a very interesting way. I know you're in early access, so maybe this will change later on, but...
That's kind of an interesting way to put it.
I think it's kind of like the idea, and I get what you're saying, that it's a very open-ended solution for being a tutorial level.
But that kind of reflects the whole game, I think.
There is no set solution to any part of the game.
So I feel personally this worked out pretty well as a tutorial level.
Especially since now I see you running out of propane tanks here.
And that's also supposed to...
to kind of figure out what to do when you run out of them.
And there are multiple ways you can bring it down in other ways.
There's only five, huh?
We're about to find out how I solve that problem.
Going to chat, let's grab a X-Y-O-1 designs model.
I-K-I-Y is calling me out here like, what, it's pretty straightforward.
Just take down the base of the house till it collapses.
Do I look like a smart person? I'm here. I'm doing this. I don't know. I don't know.
Anyway, xy01design would like to know, their question is any insight on the voxel data model?
Is there anything you'd like to share? I sort of don't know how to ask that question in a way, because I don't know a lot about voxels and modeling voxels, but is there anything you'd like to share about how the voxel modeling in this game works?
Yeah, I don't know how technical we should get in this stream, but it is...
The whole engine is built from ground up to do just these voxel environments.
So it's a custom engine that's designed entirely for this.
And I think what I do differently from most other voxel engines is...
Most other voxel engines, including Minecraft, has this axis-aligned world.
I have, instead of just one big volume of billions of voxels, I have thousands of smaller volumes that are filled with voxels.
So each object has its own, everything's straight within its own volume, but I have very many of them instead.
And I think that's the main difference.
Other than that, it's pretty similar to how other voxel engines store their data.
It's just like a big.
Gotcha. For folks in chat, if you have any follow-up questions on that, like I said, this is just something I know less about, but we're taking chat questions if you want to know how this game got made.
Ask them. Viper actually has a pretty good one.
What computer did you build on to iterate the performance? Did you start on a regular to mid-level CPU or GPU, or did you have a high-end PC and then slowly optimize it?
I had a high-end PC when I started and I still have the same PC which is now kind of yeah now It's not high-end mid-range. I would say it's it's a core i7 Quad-core processor and a 1080 DTX 1080 graphics card and I used that as a target and then trying to get it a little, trying to run really smoothly on that one and then it's gonna run on a 1070 quite okay also. But then because you can tweak the settings a little bit it actually turned out to run on slower hardware as well. That came more as a surprise to me. I never thought this would run on a 970 for instance but it turns out it actually did.
Apparently according to chat it runs on a 772 so that's a good job.
That person actually is Josh Duffity Wong who says they're impressed that the game came with so much of a campaign with mission progression and update system even though it's in early access.
That brings us to, yeah, we can talk about early access.
What was sort of your, once you realized that this game was coming along, that like, okay, it's fun, like, the core, like, you know, you can set up a house and tearing down the house is fun.
What was your process for saying, okay, we're going to ship in early access, but early access is going to have this much content at launch, and then we're going to plan out more for the full launch.
Like, what was sort of your measuring stick for figuring out, we can do this and still call it early access?
Yeah, it's a good question.
I...
done a lot of mobile games before, but launching something on Steam and for PC is quite different and we didn't really have any experience from that. So we kind of had to iterate on that a little bit, what the early access should be. And I think all of us thought that we would release something smaller in early access. We talked about having maybe two hours worth of gameplay and something along those lines.
then it kind of grew and we also found out during playtesting that the campaign took people way longer than we thought it would.
Mm-hmm.
At first.
But it's not easy.
I think this game has had a pretty big crowd on Twitter for a couple of years, and I think we could have put something out there much earlier, but it's also about setting the expectations, I guess, what the game will be.
We didn't really want to launch until we could show.
out that this wasn't really the way we wanted to make stuff and try to change that you're gonna disappoint at least 50% of the people and then yeah but we also wanted to release early because we that's something we decided very early on in the project of this would be perfect for a really early early access where we can actually take a lot of suggestions from people because this is new technology and new game mechanics and So we didn't want to make too much or have it too finished.
And that's when we decided on this, releasing the first chapter, the first part, so to say.
Gotcha, for folks in chat, there are some folks saying, yeah, go drive the vehicles.
I didn't know you could drive the vehicles yet at this point.
Like I said, this was- so every time I watch myself walk by the construction vehicles, I just cringe.
Um, so no, unfortunately you're about to see me get frustrated and reload the level one more time.
Uh, but you know, that's how it is. We got some other stuff.
But we can actually go back to talking about some of the- uh, actually- No, that's a lie. I want to talk about level design because it gets really interesting.
But, um, we have some good questions in chat.
Um, Rex- Guys, y'all are great with the questions today, by the way.
Um, uh, Rex Cortex would like to know, what parts of the game run as Lua scripts, and is it possible to mod game logic that's not part of Lua scripts?
You and I were just talking beforehand about how, um, you're getting more modding available for this game.
You're working on getting that ready right now.
Uh, why not talk about Lua scripts, and then we can talk more about modding.
Yeah, that's something we started adding maybe half a year ago or a little bit more maybe, that we moved over a lot of the game logic from C++ to LuaScript and that's because we knew that this would be a fun game to mod. We got a lot of all kinds of games with it.
So we kind of knew that we wanted to make this a moddable game early on, and that's when we started to rip stuff out of C++ and putting it in Lua instead.
And I think it was a really good decision, not just for the modding aspect, but it also helped developing the game a lot, I think.
So we have all the simulation is running in C++, and pretty much all the gameplay is in Lua.
I'm rewriting parts of that now to make it easier to modify.
But the goal, and I think we're almost there already, is that you should be able to make an entire new game mechanic based on the same engine.
You can make a new game basically as a mod to this game.
That's the goal.
I think it's going to take a few iterations before we're really...
there and more specifically we're gonna have to release the level editor for that and that's in it's not in great shape at the moment so i had to clean that up a little bit um but yeah Lua is great i i think it's a a great scripting language and it's also technically i i've made it so that but they're all kind of isolated.
So it's pretty easy to go in and write another one and modify the game a little bit.
And we're going to release some examples of that when we release this improved mod support.
But there are certain things like how things break and how vehicles handle and stuff like that.
It's not going to be moddable.
But everything that is related to how scores are calculated, works, what the levels look like, and what the goal is, and all these things are going to be moddable and descriptable.
Syphal would like to know, why did you decide to use SSR for reflection color instead of full path tracing?
It's just the performance.
The ray tracing in Teardown is very special or very different from how ray tracing is normally done.
Since everything is voxels, ray tracing becomes much cheaper.
I could just do it with some acceleration structure.
I think I could do the ray tracing with the same objects that are rendered to the scene, but that's not the case right now.
So I actually have a separate voxel structure just with the 3D occlusion data, so to speak, where I perform the ray tracing.
That also means I don't have access to any colors in that data structure.
So it's not technically possible for me to do full path tracing with that method I've chosen.
But that also makes it very fast, so it can run on older hardware.
I briefly had to pause the game here while I was handling something.
A package person came to the door, and you know how it is.
We're all locked in.
We're all in quarantine.
We have to, we had to go, I had to, you know, UPS comes, they're delivering something important.
I had a big smile on my face because I was just watching the house wobble and remembering what it felt like to go, I'm finally doing it!
Like, I'm finally blowing up this house!
What technique do you use for the collision?
Is it regular mesh mesh, or is it voxel versus voxel on the CPU or the GPU?
I can't believe I understand that.
Yeah, this is becoming a technical stream.
I like that.
It's all voxel versus voxel.
There are no triangles in this game.
Everything is volumetric data.
Except for water surfaces and these power lines that you see.
Those are the two exceptions.
But yeah, both the physics and the rendering is all performed directly on volumetric voxel data, so no triangles or polygons.
And the physics happen on the CPU and all the rendering.
is on their GPU.
I could totally do this more efficiently, but at this point I'm chopping down the house because I'm like, I get it, I get it, I'm so close, I'm like, I'm just mashing my mouse.
As a game designer, in a game like this, the player needs to have some kind of understanding about how things work.
We talked about the tutorial, here I am going, oh no, the chimney is something too tall.
What are your kind of thoughts around like designing for like frustration versus aha, like we're going to see as the next levels unfold like what the objectives are and like the more aha moments that I encounter. But like what is your kind of like, like you said, like you designed everything to be so open ended, like how do you like account for players who like, might be so frustrated that they have to go look up a guy like like what are your sort of thoughts about how you work around player expectations in that space? Yeah, I see what you mean. And I think There could be a certain amount of frustration in this game, or I know there is, especially in the beginning, but that's not something we intentionally wanted in the game.
It's more out of necessity, I would say.
We wanted the player to start with a very basic...
the players with all the tools and we wanted to be able to reward players with new tools for completing missions.
But I think the frustration mostly comes from a resource limitation and that's something we also noticed when prototyping other game ideas that we had for example a puzzle game that was also a heist game where but the difficulty the goods and rather not the planning an optimal route.
But having... And for that to work, you had to have a very limited amount of resources, like two bombs, four shells and the shotgun.
And the game just doesn't become fun with all these limitations.
So I think a way to get around that was to pretty quickly ramp up the resources.
in the beginning of the game.
It's specifically it's on the rise in specific ways like you know like it's not it's not um It doesn't feel like it's you know like age of Empires mod You know like like modding from like 1998 or whatever we use the in-game editor to make stuff, but at the same time like I've been playing a lot more games where I pop into the workshop, and I'm like again I'm not in this world very much, but I I feel like like modding has enabled something very specific in PC games Well game development as a whole has had to you know survive in the market figure out how to support consoles You know like I play Skyrim on almost every device that doesn't have mods and like in a very unmodded way But like that's that's you know one of the industry's longest modding things at this point that is not a question That was just me opining I love that this next oh, no you you're about to say something go ahead and say it Yeah, I'm not a modder myself, I've never been.
I know Emil has been modding a little bit, but we're really curious what people will do with it, because we have, or I at least have this idea that modding for Teardown will not be so much about modifying the game as it will be building new content, new mini-games and new challenges with new gameplay.
for the game, but we don't know, so I guess we'll find out.
Um, I thought it was so interesting that this level, like, when I first booted it up, I was like, okay, how complicated is this? What is this going to be? Like, what? And I looked at it and I thought, wait, I can do that. And you're going to see me, like, I'm just going to knock this out in a few minutes. And then I love that you immediately return to this level. Um, and go, okay, you know the space. Now you have to navigate it with these limitations. And even then it's not as hard as I, as I thought it was going to be when I started. There's just like, this is such a good learning space that this level creates. Um.
What are your thoughts of like, like you said, like, the objectives are open-ended, but there's still a teaching component in the design somewhere, you know, like, what are your thoughts about like teaching players how to understand these very open-ended rulesets?
Yeah, I think we do, the previous one you played, this one, and the next one I would say are considered like tutorial missions, and maybe the fourth one also in some ways.
But yeah, I think since this is new gameplay that hasn't really been done before, I think it's quite important to kind of ease the player into, especially easing players into the freedom you have, because I've seen a lot of players doing playtesting, going up to door and see if the door is locked and then start looking for other ways instead of just taking...
a vehicle driving through the door.
Yeah.
And you have, you need to think in a certain way that's usually not allowed in other games.
And if you play a lot of other games, it can happen that players are a little restricted in their mindset of what's possible.
I think that's what we're watching, like, we're watching me do it right now.
Like, I am learning how to think, create.
Oh yeah.
I love this part where I'm like, uh, like you can watch me like, Oh, look, Oh, like love this.
Um, uh, and I think in a lot of places, like this SkyLift is, is very specifically put there to help people get up to the platform.
Yeah.
Uh, but it's not, it's only in these.
first couple of levels that that's the case. In most other missions we did not put stuff specifically for to help people perform something in a way that we thought was the right way to do stuff because we wanted to to have everyone come up with their own ideas.
Um, going into chat, uh, extra murder would like to know any features you wanted but already have had to cut Sorry, what was that question? Oh, excuse me They want to know are there any features that you wanted to implement but you've already had to cut because either they weren't fun Or they took up too many resources uh, there's Two I come to think about one is that uh for a long time we talked about an inventory That you should be able to pick up stuff and you have this While you were out on a mission you could pick up stuff put in inventory and then when you got back to the hub Where you live like your workspace?
You could use that to decorate the hub and that will be persistent And I think we got a lot of requests for that But We never implemented it because there were so many issues with having a persistent hub that if you put something on fire or you tear down the whole place and just how that works.
And then we also had this idea about a progression in the hub.
I don't know if you played so far that you really noticed that things are kind of happening in the hub while you're out doing your missions and then come back to visualize that the time has passed.
introduce things in the hub, like small little details, and that would also be pretty tricky if the hub was persistent.
And the other one is, you mentioned that you come back to the same locations a couple of times, or we have multiple missions in the same locations.
That's something we initially wanted to do much more of.
Like we wanted bigger changes and especially more of a progression like you can see here.
And now that you came back, you had the gate is locked.
And there are some signs up and you can see that there is a little truck over there delivering new bars for the windows that were previously open and stuff like that.
And this kind of environmental storytelling is something we really wanted to do much, much more of, and also I'm involved.
Instead of just time of day, we wanted to change the season and have much more things happening and more of a progression to the environment as you come back to them.
And also an initial idea was to have some procedural...
changes to the environment based on what you did in your previous visit.
So if you tore down a wall, it still needs to be a wall for the game to function, but you could see that they had kind of patched it up and stuff like that.
And I really liked that idea, but it was just not possible.
It would require a lot of new technology also to make that possible.
Chat, you're still asking some great questions, I will get back to them.
I think we can talk about narrative design here.
This is a really interesting game.
I don't come to games like this usually.
I'm a very, I like storytelling games in general kind of person.
So when I got into this game and the simple stakes of, oh, you accidentally did a crime, you must now do more crime.
And there's like a fairly involved for some reason I felt like I was in the UK when I was playing this even though like That's a fantasy fantasy, but maybe that's because we've had the crown season 4 on in my house and maybe I'm just in that space but um I There's like just like the the lightest flavor of narrative design and world-building that I really enjoy with this game Which is you know like it's the missions you get I appreciate the little detail that your computer screen is not voxels like it's this very straightforward interface that feels approachable in this world.
You know, when you're like, oh, everything's voxel.
She's like, okay, I understand this.
I understand text messages.
Like, um, uh, and there's all these like little, like you pop into a room.
Like I remember where, uh, when I returned to the factory, I'll see like, I don't think I pointed out again, but there was like, you know, beakers on a table at one point.
And I was like, like, like there's stuff like these places feel lived in.
I could see a lot, when I play a lot of voxel games and they're doing environments like this, I feel like either, unless there's like something specific like a modder who remakes a specific city, or like, you know, there's an element of like let the proceduralism or let the chaos kind of define the space, but here like things feel so curated.
And I'm curious what you and your teammates thought about like making these spaces that feel lived in.
Because they really do.
I heard that comment before and I...
actually quite surprised because we are not particularly happy. I think we anticipated a lot more of that. So the... It was kind of rushed, the whole putting up props in these environments and making it look like someone works there or lives there is something we would have wanted to spend at least another couple of months on to really... And especially the progression. You can do a lot of...
storytelling and humor I think with that these small little details like if you visit a room and then two levels later you come back to it and something happened and you can like start reading these little descriptions about what stuff happened that that is something we wanted to go crazy with but didn't really have the time for but we'll see during early access if we maybe can spend some more time on that.
But I'm glad you enjoyed it the way it is, because it's something we wanted to do, but we're not particularly happy with.
Yeah, maybe Amarnath is just being fooled by the ray tracing.
Like, I'm watching it now, I'm like, maybe it just lived in because the lighting is so good.
Let's grab this quick.
There's a brief discussion in chat happening about vehicles driving uphill.
IKYY points out that in the Villa level, when you drive out of the racing garage, they get stopped by the angle of the road.
And other people go, oh yeah, so how do vehicles work, which are on wheels, which are rolling, how do vehicles and voxels work together?
You said vehicle logic was the one thing people can't mod when that happens.
So I'm curious, maybe we need to break down how vehicles work here, because that's so crucial to the game.
So vehicles, the real physics are just based on spheres.
So the wheels are actually spheres, but they do collide with each voxel.
So, and that's why this driveway to the garage is hard to get up on because you're actually driving across these bumps all the time.
We have some ideas on how to smoothen that out a little bit in the physics, but we haven't really...
come to that point yet.
But it will get better.
But that's also the reason you can't really destroy the wheels of any vehicle.
I don't know if you've tried, but if you try shooting the wheels, they're not going to fall apart, because we need them to be...
to be not broken, because they're simulated with spheres.
It would be fun if that actually worked, but I think the vehicles would be...
massively undrivable if we try to simulate or have the wheels as boxes.
I guess, are there any other, like, the notion of shapes here is a very fun thing, like how to use voxels to simulate shapes.
Are there any fun instances when making this game where you're like, okay, we need this thing to work, but it has to be the shape, and that's kind of weird.
Are there any other instances like that?
Visually, there are lots of things like that.
Like, how do you make a door handle in voxels?
Also, you see the brick wall you're standing in front of right now, you can see the individual bricks, so it's not just a texture, it actually has depth to it.
Those boxes are 10 centimeters or like...
four inches in American units, which is totally unrealistic, but it still kind of works.
In many instances, we wanted the boxes to be half the size, but then the levels had to be much smaller, so we wanted to keep this voxel size for memory reasons.
But yeah, I think the... it was mostly just visually trying to make stuff recognizable in this resolution has been the challenge.
Yeah.
Chat would like to know, we have one from Emmett's help, are you mostly CPU or GPU bound and which part exactly takes most of the power?
It depends entirely on the hardware, of course.
But typically...
except for when you cause a lot of destruction.
And then in all instances, when the frame rate drops to like five frames per second, then it's always CPU, because then there's a lot of physics.
But I also would like to add that there was a lot of potential for optimizations that we haven't done.
So I think it's a pretty good chance those massive dips will actually be a lot better going forward.
Yeah, I also just noticed there's like a little smoke effect that comes out of the vehicle, like that vehicle when you're, you know, like just the standard like diesel exhaust, I guess.
Like, like, that's such like a little detail, like what's generating that? Is that that's because that can't be voxels too, right?
No, the smoke is is also more traditionally rendered.
It's actually quite fun.
And in this game where everything is boxes, the smoke is actually polygons.
So, oh, deception, lies.
Yeah.
But it's rendered, the smoke is fully lit and it's using a very untraditional method for transparency.
It's just stochastic transparency.
So there's, there is actually no transparency.
It's just like either a pixel or not a pixel, and then dithered the whole thing to make it look transparent.
Nice.
Yeah, so for folks in chat, we've only got about 20 minutes left.
I will desperately try to get as many questions in as I can, but we're also going to ask some ones from the GDC angle, because GDC covers a huge number of topics.
That teardown weirdly fits into almost every single one of them in a different way.
from graphics programming to narrative design to marketing, which I'm going to ask about right now before we get back to more fun voxel questions.
This game is doing pretty well, like just glancing at the Steam reviews, seeing like I see videos for it pop up, you know you've got Chris Persons highlight reel, which is usually my fair weather mark for like okay how much is a game getting played, like how many clips get submitted to that series.
uh uh discloser i guess i have to disclaim that i'm a patreon i i back hit that that highlight reel on patreon so i guess i shouldn't just mention it without back disclaiming that but uh yeah um yeah so You said before there's already like a voxel community, you know, like there's a people who have there's a community of people around the world who want to Play games in the space make games in the space who want to experiment with it Um, but but there's kind of a mainstream appeal that you're slowly getting right now Which you know what kind of on the chaos that this game invites like what are your kind of thought like suddenly?
You know you're making games you're trying to sell a game What what has been your experience, you know trying to get people to notice and pay attention to your work Without fully turning your job into a game seller when you know when you're when you're yeah I Think we for this game We actually had the luxury of not having to market it at all. We didn't really spend any time or money or effort marketing this game at all, because when I started doing these experiments three years ago, a crowd was building up on Twitter, and I think that's where the whole thing started. And by the time we came up to early access, there were multiple fan Discord servers, Reddit community, and there were just communities everywhere around this game, and we thought, like, any...
Any marketing, traditional marketing we can do on top of this would be totally...
So we just didn't bother at all.
We did a couple of trailers ourselves, but that's it for marketing.
And it's, of course, a really, really nice and good position to be in.
And I realized that it's not something that happens to everyone, but it's...
I think...
For this game, it stamps out a lot, just graphically.
That's probably what appeals to some people.
And also this enormous freedom you have.
There's been a lot of games promising to fully have been dreaming about for a long time, to have something that is actually fully indestructible.
That's also been appealing to a lot of people.
I think that fully, you know, like, fully do whatever you want logic is actually hitting an interesting place right now, which is, I'm trying to solve this puzzle, I'm trying to plot out a path to, you know, grab everything and get out in 60 seconds, and right now my brain was going as I was up there, wait a minute, could I just cut the power to the whole facility and turn off the alarms?
So I came over to the power generator to try this out.
We'll find out how it goes.
But I think this is one of the fun moments that I had recording because I was like, I have a brilliant idea.
And as you're about to find out, it doesn't work.
But I gave it a shot.
We got folks on stream who would like to know, Merlin Maple would like to know, what are your thoughts about multiplayer and co-op?
Are such things possible?
Will that have to be left to the modders?
The discussion in chat is letting us know it might not be possible with all these voxels.
I guess, how does multiplayer factor into your plans and what are the challenges in implementing it?
It's probably the most asked question we get if this is going to go multiplayer.
And the sad answer is that we don't have any plans for it, because we are not convinced that it will work technically.
It's a lot of physics to synchronize, and the engine is not written with networking in mind.
So it would be a huge amount of work to even try that.
So I...
at least anytime soon.
It would be very fun to experiment with.
And I think if we did multiplayer or tried out that, we would kind of go the same route we've done with the technology so far to kind of limit that to people with really good connections and low latency and not try to do something that works for everyone.
But yeah, we'll see.
would be a lot of fun in multiplayer.
Yeah, but...
But I'm just not sure how to do it.
Making games is hard.
That's what I...
That's what I generally...
I come into every one of these streams going Making games is hard. How the hell did you make this so good?
Yeah, let's see here.
I...
Man, I love this section.
I guess we haven't talked yet about the...
Like, you briefly mentioned earlier, like, it was more fun instead of limiting players, you know, with the resources to get to the objectives.
Like, make it easy to get to the objectives, but make the challenge in getting out.
So we're heading to the point where I'm, like, planning a run for 60 seconds.
And let me, let me iterate on something.
I do not believe in practicing video games.
If I need to practice something in a video game, I'm like, this has worked.
This is a joke. I practice martial arts. I practice like, I technically practice x-wing miniatures, which is good, but I have fun doing it, you know?
Like, um, uh, but yet you, I just did, what I just did on the loop here was a run where I said, okay, I need to kind of know if I can do this in 60 seconds or do I need to do it.
So congratulations, you tricked me into practicing.
Uh, um, what, uh, what do you, what is kind of like, given your thoughts about making objectives like you want players to like, like experimentation.
Yeah, I think you maybe noticed when you tried here that you cannot pick up the target without quicksaving first.
Yeah.
And I think that's for a long time that wasn't the case, but then we kind of forced it onto- to have that on this specific level, because we wanted to teach people this is how you're supposed to play the game.
Some people consider quicksaving cheating in a game because they just wouldn't do it.
They're totally wrong.
And for this game, it's kind of crucial not to be overly frustrated to use quicksave.
It's part of the gameplay to do that.
And we actually encourage people to use that a lot.
Like if you want to try out something, quicksave, try it out, if it didn't work, you can just go back.
And yeah, I think that is the key.
being overly frustrated when you practice stuff, that you have this option of always going one step back, like one undue step to the whole thing.
Yeah, Ikea, I would like to know, when I think of quicksaving, I think of the classic, classic, you know, like F12, F11, or whatever, F11, F10, I forget what it is.
Have you thought about adding a single button so that players can like do that, like classic combo?
Yeah, we thought about it and we might add something.
I'm not sure because we also get some comments from people who think that the quick are too close to each other on the menu because it's very frustrating if you do something wrong and hit quick save instead of quick load. Oh yeah. And then having buttons for it would be probably a disaster for some people if they press the wrong one. But it's very intentional that you can only go back one quick save because otherwise it would be kind of trivial if you can just rewind.
And then we also have to be careful how we present that so people don't make the mistake of overwriting their own save.
I'm caught struck right now as I'm navigating back to like execute the to execute the heist like how There's something very interesting about this game world that because it's so open like there's a natural human behavior like I'm like I I'm do We're going for things that are familiar as opposed to things that are Like like oh, I know this pathway. I know I can just walk up to this building and execute and begin my path Why am I re-stepping the entire route I took to get here?
um, there's something very fascinating about human psychology and this kind of space that like instead of finding the most efficient path.
I am just like, relying on the familiar to get through it.
And by the way, go me, I got this done in one go, but I imagine it's meant to be easy, even though the alarms are blaring.
That's actually quite interesting, because this level is the first one where you do this time-based heist in the game.
And I don't think I've ever seen.
It's definitely the case for everyone who plays the game.
Oh, I totally missed, I continue right there, I missed this when I was playing, it's reshowing my route there a little bit.
Totally missed that.
Yeah.
When I was playing this.
Yay, I'm an amateur!
Okay, we've only got about 10 minutes here and sadly we won't get to simulate anything on fire.
Um, I've got to wrap up a little bit early in a few minutes because we have a building inspector coming through, uh, to make sure I have not torn down the walls. Uh, fun fact! Though it did not involve tearing down walls, we did have kind of a very teared down thing in my apartment this weekend.
They had to tear up the floors of the living room and I had to leave my house in the middle of a pandemic, uh, and go hang out somewhere else, uh, while they did all that because it wasn't safe for us to be around. Because, uh, turns out...
Floors shouldn't be bouncy. You know that hardwood floor should not be bouncy So we're gonna spend the rest of the time grabbing questions from chat And then I'm gonna duck out so I can go meet the inspector But merle maple I like your but merle maple would like to know They've quick loaded so many times when they're trying to save it's possible of their error Maybe it's worth adding a toggle able Are you sure to quick save that they can turn on and off and menus for advanced players?
I think if there was a toggle, people would turn it off and then still get angry.
But I'm not sure.
It's kind of hard.
We might experiment with separating them more on the menu so you kind of get that.
you know, muscle memory, which like quicksave is left and quickload is right.
Ooh, yeah.
Like a menu that takes up the whole screen.
And yeah, I like, I dig that.
That's a UI art thing.
Jezzy QQ would like to know about primary rates.
How do you find the nearest intersection for each pixel?
Do you start by rasterizing a bounding box for each object and march the Vixel grid of that particular object in the shader?
I don't know if that was mark or marks or March.
They spelled it March.
March, yeah. Ray marching is a technique where you just walk along the voxel space to see when you hit something.
And yeah, I think what he just described is pretty much how it's done.
is one voxel volume.
All the little debris from the wall you're hitting is also individual volumes.
And for each such volume, it's just rasterized a bounding box, and then ray-marched in a fragment shader to see which voxel you hit.
And then there is a material lookup, like an indexed palette for each object.
Gotcha. Josh, Duffity Wong would like to know what is the coolest clip you've seen of someone playing the game and why is it the gameplay we're watching right now?
No, that's me. What is the coolest clip you've watched?
That must be... there are two levels in the game that we...
It wasn't really intentional, but we added more optionals to the game, to those levels, than what we could take ourselves.
And that's kind of evil because we didn't know if it was even possible.
And some people hate those levels. One of them is called Fine Arts and the other one is called Insurance Fraud. And they are so ridiculously hard that none of the team was ever even close to.
But it took just less than a week, I think, before the first one posted a movie clip completing that.
So that was very inspiring to see because we didn't even know it was possible.
And then there was one other clip that really caught my attention, and that was a completing.
I think was actually on the insurance fraud level, but not completing all the optionals, where he was slingshotting.
The objective of this mission is to collect, put cars in a transport truck.
And there are like seven of them, I think, or eight, seven of them in total.
That's why it's so hard.
But he built a slingshot out of these electrical wires and strung them up with a huge excavator to build up the tension connected with a plank and then set fire to the plank to get like a fuse for that to burn off and when that snapped off the wires can slingshot the whole vehicle into the transport truck So that was kind of a creative way to steal a car, I think.
That was really fun to see.
I wish we had that video to run right now.
Trust me, I would queue it up.
Yeah, there is a YouTube video.
I unfortunately cannot remember who posted it.
Man, okay, oh god, we gotta start wrapping things up, I apologize, although there's still some fun stuff happening, so enjoy my Teardown footage.
We will grab one more question before we get out of here, but before you go, folks, if you've enjoyed watching the stream today, thank you so much for coming, thank you for talking about Teardown with us.
Dennis, thank you for making Teardown, because this game is just so neat and so cool, and I cannot wait to have some more fun with it.
um uh yeah uh if you are new to GDC and what we do here at the GDC twitch channel uh we talk to developers about the games they make if they're interesting if you click the follow button you can get notifications for when we go live we'd love to have you back uh i'm trying to get us uh some more uh at least one more cool interview for 2020 I can't say what it is yet because we don't have a hard guess, but we want to have you all here talking about cool games with cool people. If you're interested in game making in general, you can go to the GDC YouTube channel, you can join us at GDC. If you're a game developer, game maker yourself, we'd love to have you. Obviously, it's a global pandemic, we're still trying to figure out 2021. We've got some cool stuff in the pipes right now. You have a few days left to sign up for our masterclass program.
And also, if you are a game maker yourself and you ship something cool this year, you can submit your talk to the GDC Core Concepts for 2021.
Like, say, if someone made a game called Teardown and they should submit a talk for GDC 2021, I would urge you to do so.
For my part, is there anything else we need to cover?
Only that, yeah, thank you.
We loved having you here and I hope...
y'all come back and Dennis I hope we get to have this conversation after I get I hope we get to talk again after this exit early access cuz yeah let's do that yeah thanks for having me I'm so excited for what's gonna happen for this game in a year for our last question today um man y'all y'all are so nice in chat um Ken 142 would like to know how did you make the fire extinguisher smoke so satisfying they can't stop spraying it all over the place that's a question and a compliment thank you water simulation game. So it is actual fluid dynamics simulating the smoke and the extinguisher and I guess that's what makes it look the way it does. But it's also a lot of it comes from the lighting that is from the stochastic transparency.
Right on. If folks have other questions, I urge you to check out the Teardown Discord.
Uh, um, Dennis is also on Twitter at Tuxedo Labs.
If we didn't get to your question today, my apologies.
That's my fault, not Dennis's.
Uh, blame me.
Uh, make me the object of your hatred.
Uh, but then just go ask your question and forget that I exist.
Um, it's fine!
Uh, anyway, with that, that's all we've got for today.
Uh, have a good one, everyone.
Stay safe, be well.
Keep those masks on and we will get through, uh, this fucking nightmare year together.
Bye!
Alright.
