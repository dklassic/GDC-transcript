Okay, so hello everybody.
By some kind of quirk of logistics, I'm next door to one of my colleagues who just got a cheer.
I'm not happy about this. I'm starting to feel a little insecure.
So if you don't mind, just kind of cheer now. Here we go.
Woo!
Yes!
Eat that, Connor!
All right, just a few kind of housekeeping tasks. Please turn off or silent your mobile phones. I'm going to be in the wrap up room after this. Inevitably, I talk far too much. You'll find this as there probably won't be time for questions, but just come to the stage. We'll walk to our room 2022 afterwards and we can discuss.
Please make sure you do review.
Convert your kind of euphoric bliss of this talk into five stars.
Or if euphoric bliss is a four star thing for you, please do that as well.
So first of all, I am David Osborne, lead designer at Jagex.
And Jagex are makers of this.
So we make RuneScape, which is a PC browser MMO.
It's been around for 15 years, which is astonishing.
Go RuneScape.
I've been there for 10 years, various kind of roles, but I'm currently lead designer.
So first of all, I want to just reassure you that just because we are a 15-year MMO, we've engaged a long-term player base, doesn't mean that this talk will be an outlier, or it, as an example, is an outlier.
Two of them.
I won't get you guys doing that, don't worry.
So it's not an outlier, this talk has been crafted just so it's just as applicable for an MMO, to a mobile game, to a board game, and why not local politics as well.
I've got delusions of grandeur for this talk.
The only things, so the worst parts of most talks is the background.
Just to let you know that the only thing that's worth or needed to know is that we have two branches of our game.
One is RuneScape main game, it's been around for 15 years.
The other is old school, which is kind of a snapshot of our game from 2007.
This is for those people who saw it as our heyday or our golden era.
And so people can play this game and I will talk about it in a moment, about how they poll and the interesting things we do about polling.
I first will say tells from a crowdsource game design. It was pointed out to me that maybe people might miss miss hear that almost read that to be crowdsourcing the game content. I'm not not not medium molecule so that will be not be in the talk. This is all about relinquishing your design control and handing it to the players. What happens the various pitfalls the various mountains of success. You'll climb as you do that and I'm going to talk about various ways that we have tried to relinquish design control.
This is the talk that I really hoped was around three years ago.
We've been doing this for three years, and I really wish this talk was around to kind of inform us.
Okay.
This is a really daunting slide.
This is various examples of things that we have done to get the players involved in game design.
I'm not going to talk about all of these.
As I said, this is just 25 minutes.
But you can see those kind of moving down in terms of how much design control we're relinquishing to our play base.
You likely do a number of these yourselves involving player feedback.
What I really want to talk about is these three.
The first one, publishing design documents, is about what happens when you bring the players into your design feedback stage.
Commission 11 Polls is about what happens when you bring your players into the design decision-making stage.
And RuneLabs is about what happens when you fully hand over your design and give the design to the players.
They're able to create their own designs and put it into the game.
OK, so as I mentioned, we have two splinters of the game, Old School and RuneScape.
Old School does exhaustive polling.
This is kind of the constitution between the developers and the players, that nothing will go into the game, no feedback even, no substantive content will go into the game without the player say so.
Everything is polled.
So with us, 75% is required for content to go into the game.
We even polled it, whether or not we wanted to reduce that to 70%.
Our players said no, and 40% of people said yes.
This generates a pool of content to go into the game, and once that pool is kind of depleted, then we continue the cycle again, creating more content that will go into the game.
What this does is it creates a defensive stockade around your game.
It casts the players as protectors.
The other poll system we use is for our RuneScape game.
And this is occasional polling.
What this is, is more of an engagement tool.
We target those projects that are best suited to polling, and having that kind of spotlight thrown on it, bringing it the attention that polling gives it.
We don't have a 75% majority here.
It's kind of a tool that we can use to dictate the kind of make-up of the content, or do some commission-level stuff.
Okay. So just to cover that, it's also the polling, cost players as protectors, occasional polling, more of an engagement tool that builds investment in the content.
So each of these, just in case you are interested in trying these with your games or your upcoming game, I'm just going to go over some good practice first.
And a good practice that I would recommend is definitely put your poll system in game.
Your poll content, if it's good, is going to be creating content, it's going to be changing content.
You need to bring it to your players who are exploring and are taking part in that content.
Otherwise, you're going to be putting it out on social media, on your website, and only engaging with those who are most socially mobile, most socially engaged.
And plus, the majority of your players are likely in-game anyway.
At least I hope they're playing your game.
Show visible real-time results.
So this is obviously something that polling doesn't necessarily do much.
But there is nothing more mobilizing in terms of polling than a visible poll.
If it is close, if a poll is close and two options are close together, nothing mobilizes the player base more.
Allow a change of mind.
If players are aware that they can change their mind at any point, they're going to talk to each other.
They're going to try to change each other's mind.
The chatter will increase, the conversation will increase.
And we like to understand what loads a question.
Players will know that we are trying, they will assume that we are trying to load a question.
And we know that reward does that more than anything else.
If one option promises a reward while another one doesn't, they will assume that that second option doesn't come with a reward, they're better off voting for the first.
Always understand what motivates a player, and that's most often their own self-interest.
Brevity is another good one.
So if you can summarize something in a few words, an elevator pitch, that will always win out with something that has to be partnered with a design document.
Understand what brevity does to your poll.
We've also come to terms with player demographics.
With our poll system, if we are polling a combat update against the quest update, we start hitting problems.
Our quest group, our quest demographic, is a minority in comparison to combat.
It doesn't have enough people.
So, every time we poll, a combat option will always win over a story option.
We've learnt not to play player types against each other.
Instead, we have something like a combat poll, we have a story poll, and those two never meet.
Okay, so what flaws have we seen from polls?
God forbid the moment you actually put something to the game that is negative or controversial that was not polled.
The immediate reaction you will receive is this should have been polled. We could have stopped this.
We would have protected the game. What are you doing?
You start hearing that repeatedly. It starts getting quite stark.
But the problem with that is players do not instinctively value or understand everything that goes into your game.
They do not necessarily value your tutorial or your final experience.
They do not necessarily value the increasing price of items, the need for gold sinks perhaps.
They don't value your kind of monetization strategies.
This is something that might be critical and a deal breaker when it comes to putting poll systems into your game and allowing players to have input on your decision making process.
The way we've dealt with it is education.
Kind of treated our players as adults and brought them in.
So we bring in kind of influencers, we talk to them first, we put out dev blogs beforehand, before a poll goes live.
We try to talk about what is important to a player, frame it in what is important to a player.
If more people are coming into the game, that's more people to play with in their multiplayer content.
If we've got a good funnel, then their friends are more likely to stick around and play with them.
If there's monetization, then it's likely the game will last longer.
There are also small details here that polls are also relatively expensive.
A poll will have to finish, so you've got to, best, I would say, roughly two weeks is good for a poll to finish.
You've got to build that into your process.
And also, it may be that your team will perceive a reduction in creativity by handing decision-making to the players.
I always argue this because as long as the team is happy with every single option in a poll, and they definitely should be, then there is no reduction in creativity.
Every option is a goer.
And the poll benefits for us have been huge.
Instead of that kind of sine wave of discussion, when it comes to our content where something is released...
People are talking, but then that talking just kind of breaks off, no longer over the course of the week.
Instead, we get that kind of long periods of chatter.
They're discussing what each option might mean.
They're speculating about what it will be like in the game.
They're trying to mobilize each other.
They're trying to push people to other options.
They're champions of individual options.
We've even got people talking about democratic process.
You know, people lording first-past-the-post systems.
It's bizarre.
And what you see is this increased retention.
because of it.
They want to stick around to see this content that they've pulled.
They want to see what it's going to be like when it's realized.
We see a spike in kind of active users on launch.
As players, I guess it's that mentality of you've read a book, you want to see the movie.
You've kind of seen the part, you've seen the poll, what's it going to be like when it's come out?
And we're starting to see some cultural changes.
Players are becoming, are seeing themselves as protectors.
They're on the wall, kind of making sure there are no wholesale game devaluing changes.
And they're there with their friends. They want to bring their friends onto that wall to protect the game too.
And they're worried about ever leaving the wall.
If they do, then the White Walkers are just going to storm in and ruin everything.
Players feel safer, and there's a lot of value to be put in that.
Often there is this kind of inherent fear, or background fear, that a game could change, the carpet could be pulled from underneath them at any point.
As protectors, they know that that will not happen.
And that kind of makes them feel freer.
My greatest benefit from polling is that players were more aware of each other.
Beforehand, it was very common to see players saying, we don't want this, we don't want this update, what are you doing?
I've talked to all my friends, none of the players want this.
What he's starting to see is that they were reinforced by their own social cabals.
They were talking to each other, there was lots of like-minded people in those cabals.
And they were just reinforced that, hey, this is the opinion of the entire game.
And when they come to the Pulse system, they realize that is not true.
They're now aware of different player types. They're aware of Bartle, even, which is great.
And obviously, they're kind of brought the developers and the players closer together.
We're not in our ivory tower, making arbitrary decisions.
So if you're thinking about bringing the players into your decision-making process, understand that tension.
The players will want to vote on everything, absolutely everything, but they do not value everything.
And there are things that will benefit the long term of your game that you'll want to do, but your players will say no to.
So understand how you're going to achieve that.
It might be through education, it might be through a constitution between you and the player that you're not going to poll everything.
But with it comes that benefit, the strong engagement and retention and a cultural shift with your player base.
Now the next kind of way of getting players involved in crowdsourcing your game design is getting them involved in feedback, the feedback stage.
This one kind of came about by necessity.
We were polling something, and then seven, eight, or nine months on from that, they would get their game content.
That's a huge amount of time.
I mean, I lose the plot of Sons of Anarchy between each episode.
And that's weekly.
You can't imagine somebody sticking around for nine months and remaining invested, because polls are an investment tool.
So we tried various ways of kind of bringing them into the process, being more transparent.
So dev blogs, things like that, but live streams.
But really what we wanted to do was involve the player in the feedback process.
And the best way of doing that, we found, was publishing our design documents.
We would release a design document on one day.
Over the course of the week, each day, we would post patch notes to that design document, reacting to the feedback, letting them know what we're incorporating.
And then at the end of the week, we would re-release that design document.
That design document would feel very different from the one we first put out.
Now, obviously you know good design doc processes, but many of you are designers or developers.
But when it comes to pushing one out to the players, there are a lot of things to keep in mind.
Please do choose your update wisely.
You're going to find out very soon the cost of producing a design document for the players is huge.
It's massive.
So doing it for niche updates, you get disproportional success.
It will not be worth it.
So choose those updates that are broad, that are universal.
And you have to be so hugely confident in your update.
If you're putting out a design document that's shabby, then your players will begin to feel that you just don't care, that you're just not putting in the effort.
Be really confident in the update.
Don't treat it, treat this design document as a beater.
This should be the most finished design document you have ever put out.
Everybody should have signed off on it.
It would need to be kind of presented in the flow of user experience.
Describe it in the way that the player interacts with your content.
They will be moving through geographically, chronologically, through your content.
Tell them the story of going through your content.
This is the language of their game experience.
So you're going to have to completely refactor your design document to that.
Add reasoning.
There's a lot of things in that design document that will feel strange without the context of your acceptance criteria.
You've likely put those, already created your core aims or acceptance criteria anyway.
Put them at the top, players will start to understand that your decision is not arbitrary.
And also understand the level of detail.
If you're putting in drop rates, XP rates, monetization details, 90% of your feedback will fixate on those details.
It might be that one was overpowered or underpowered, or maybe there was an error.
Understand that players will pick this apart and will not give you feedback on the rest of it.
It might be that you want that, maybe you're so confident in the efficacy of the rest of your design.
And really break it video and text.
We didn't see any cannibalization between the different media.
It means you get it out there.
So the flaws, it's a huge intensity of work.
Putting together, doing the design process, the published design process, was 120 hours of designer work.
And understand that it delays development.
Your design phase is going to swallow up probably another two weeks of work.
Build that in.
Maybe a cost.
For many of you, you work agile.
Maybe you don't even do a design document.
Maybe it's kind of iterative and created over the course of the design.
Maybe your design document is more visual.
This may be a deal breaker for you.
If you don't put out longer, more text-oriented design documents, it may be that the work to convert it is too much.
And there is a potential negative impact on your current content.
Understand, if this is an ongoing game, that if you're putting out something, a design for something that improves on something existing in the game, they may not play that content anymore.
You may be manipulating your economy by putting this information out there.
Understand the effect on your current game content.
And do not expect wide ranging feedback from your player base.
So players, as we've seen from the kind of the legions, the forum, the hundreds and thousands of forum posts and social media feedback that we received on our published design documents, is that players do not give creative feedback. They do not offer alternatives.
They don't often not very constructive.
But that's fine. We'll go into that in a minute.
And they do not have a full deck of lenses.
They won't understand tutorialization, kind of narrative grounding.
They won't understand a lot of these things.
So understand what the players will give you.
But design.benefits, there's more participation than you'd think.
For our Elf City design documents, which are the first ones we put out, one-third of our player base read those design documents.
Fewer than one-third could actually play it on launch.
Players were really interested in it.
They really wanted to get involved with it.
And while their feedback is limited to certain things, it is hugely valuable.
It comes in the context of, I will play this, or I will not play this.
While that is limited, that is ultimately what you're looking for from your content.
You want to know if the people who are playing your game will play the game.
And players have begun to understand, or get a better sense of the realistic kind of what happens when we're designing content or developing content.
Content doesn't just appear in the game.
They often felt like we just treated our community as a beta.
That we would just throw content out there.
And because they only saw nerfs or improvements, they believed that we just treated the whole of the game as a beta phase.
Now understand how long it takes to create something.
They have more belief and faith in us as designers.
That's very valuable.
And there's a huge change to release day.
This is something we didn't expect.
Release day is awesome.
Players were often kind of on other content that didn't have design documents published.
There was an expectation gap.
They kind of, they got on the hype train and believed it to be something that it wasn't.
They extrapolated far further.
And then when it was launched, there was kind of, this isn't quite what I wanted.
That thinned down, smaller gap.
It reduced orientation. They don't need, fewer players need tutorialization or orientation.
They're going straight to the content that they want to get to.
Again, that's valuable to your player base.
It's reduced the chance of post-launch issues, the number of times that we have put an update into our game that's been completely derailed by one thing that needs to be nerfed or powered up a little bit more.
Some fix that has to be made and all the conversation again is fixated on that. It directs conversation where you want it. And in our case, and something that's very valuable, I would encourage you to try this is put is don't put everything in your design document. Try putting little Easter eggs into your content that players will search out on launch day and let them know that they're there so they can go find them. We found a kind of great great value in that, and that meant that not everything was kind of in that design document. There was still something to find.
So takeaways, expensive and time consuming, only suits a limited range of projects, but as a tool, it does throw a spotlight on your content, really does improve that relationship, and does make your release day kind of stress-free.
Okay, so the next one.
So what happens when you do a fully crowdsourced game design?
We came up with something bespoke called RuneLabs.
You can kind of see the process across the bottom there.
And we were feeling the glow of the design documents.
The players loved the design documents.
And we thought the natural extension was to bring them into making designs for our game.
It also meant that we could kind of push through and talk to press.
Press might be interested in a game that was designed by our players.
So we start by players generating an idea and adding that to our database.
We now have effectively a database.
Players then upvote those designs that they really like.
And then we take the top five, top four, top three, whatever we agreed for that month.
And those are then put in game as a poll people in game and choose the update. They want to go in.
Is a little example of some of the ideas we got. I really don't know what 101 things to do with this thick of bamboo is. I probably don't want to know.
But what we do is.
Once that winning option is chosen.
The player is involved, they go to effectively sprint reviews, they sign off on concepts, they're involved as much as we can do.
And as long as their name isn't a My Little Pony reference, or just the number of digits, we try to put them in game too, give that kind of credit to them.
So we tried this for a year, and one third of our game content was done in this way, was generated as player designs.
Just quickly go over some good practice.
The first two we learned through our own mistakes.
Bring RuneLabs in-game.
So bring your system for generating and upvoting player ideas in-game.
We didn't do this, and what we found was player ideas are not generated from having a book by the side of their bed for dream ideas or anything like this.
They're not molyneuing just randomly.
Their ideas are generated by playing the game.
They come across something in the game.
And they have an idea for it.
That was largely where all of the player ideas came from.
Talk a little bit more about that in a moment.
So if the ReLab system is in game, it can do that.
Ensure a fair and dynamic trending algorithms.
Obviously, iTunes and other systems suffer from this.
We found that good ideas were not necessarily rising to the top, because our trending algorithms were not strong.
And often, setting criteria for the players, limiting the space for the idea, generated more.
We found that just saying, give us any old idea, would give us 50% less in terms of ideas, fewer ideas, than if we said, create a quest with flying bears.
So the flaws, oh actually, I might just skip back quickly here.
So we did kind of contingency work to try to figure out what we thought the problems would be for RuneLabs.
We sat down and discussed it, we tried to plan for them, and our worries were that the ideas would be unworkable.
They would be massive. They'd be massively overpowered. It would create power creep.
The ideas that were simply unworkable.
We thought those were the ideas that would come from the user base.
We thought that we'd be culling so many of them that players would kind of be disengaged from the whole process because none of the kind of the top ideas were getting into the game.
That wasn't the case. In fact, players were low-balling.
They really wanted their content in the game, so they went smaller than the criteria that we set them.
They really wanted that content in-game. We were completely blown away by that.
The problems with RuneLabs were that there was hugely limited engagement.
In terms of submitting, only 1 in 100 of our player base ever submitted an idea.
So we started trying to drill down into why that was the case.
The first one the players told us was there were a number of obstacles to putting an idea into the game was too large.
They had to create an idea, or to come up with an idea, write it, post it, wait for feedback, and wait to see the numbers, and they got polled.
The number of obstacles were too large.
They also were kind of riding naked through the court of public opinion.
They were worried about that.
They're really worried about being kind of humiliated by their friends.
But once we drilled down, we could find exactly why players were not interested in submitting their own ideas.
The reason was, they were perfectly happy with the contract between developer and consumer.
They liked being given game content and then playing it.
They weren't interested in expanding that contract anymore, thank you very much.
They were perfectly happy with being delivered content.
And that was kind of the core of the player base.
We also found that upvoting, some options were winning by only having 100 upvotes.
That meant 1 1 100th of a percent of our player base were determining content for 1 3rd of our updates.
That was vastly disproportional.
And we also found that it appealed to a specific subset of our game base.
So the people who were interested in submitting ideas were largely those who were already socially quite mobile, they were communicating on social media.
There are two reasons for that.
It makes sense that those people who were willing to talk and spend a lot of time outside of the game, talking to each other, also willing to kind of write a lot of stuff and relapse.
They also had an inbuilt base of hundreds of fans in terms of their Twitter followers, or Reddit followers.
And so because there were so few upvotes, they were immediately rising up to the top.
And that created a cult of celebrity, whereby the topmost voters were all of those people who were the most kind of active on social media.
And when we start breaking down the ideas, there are only very specific ideas that were coming from our player base.
And it's worth noting this if you think about generating player designs.
Fixes or improvements were predominant in all of the player ideas.
They were hitting their heads against walls or ceilings in game content and wanting to remove those walls and ceilings.
Like, I can't defeat this beast because there is not a good enough sword to defeat it.
I want that sword.
Everything was a reaction against the ceiling or wall.
And the other one was reacting to good content in-game.
They like certain things.
They want more of it.
Our first winning poll was, give me two more dragons.
There was no more text in the design.
They wanted two more dragons.
So we gave them it.
And that's just a sequel to more content.
And the other one is fan fiction.
We found that players had stories they wanted to tell, characters they wanted to bring in-game.
There was no game mechanics in that design.
They simply wanted to have that character in-game.
But there were benefits, not all doom and gloom.
We actually understand our players more and better from doing this.
We now know what they value or don't value.
Because the vast proportion were fixes, we actually found that players valued things, smaller changes to the game, quality of life improvements.
We didn't see them as valuable, as something big, a quest, perhaps.
We actually increased headcount within our Ninja team, which is the team that makes smaller updates to the game, because of RuneLabs.
We also had several ideas we thought they liked, that we had previously mentioned in other kind of livestreams, stuff like that.
They didn't value them. They never rose to the top.
We soon learned to kind of disregard those as chaff.
And we know what ideas players now generate.
We now can go to them for fixes and improvements and sequels.
We know that they're a solid producer of these things.
And great for us is there's no more we could have done that better.
There was a lot of conversation before RuneLabs that why you put this update up, we could have done that better.
They now understand the value of the design work that we do.
So my takeaways from RuneLabs, so bringing players into the crowdsourcing of game design, is that the core of your player base, or potential player base, is likely not interested in designing their game.
And that creates a tension that you may have to understand.
That a small minority will be creating content for a majority that doesn't want it.
Our story players were actually almost engaged with RuneLabs.
That makes sense.
They read a lot of text, codices and journals in game.
They're perfectly happy with writing a lot of text on RuneLabs.
While they were a minority when it came to the polls, with RuneLabs, they were suddenly the majority.
So virtually every update that came out with RuneLabs was story-oriented.
You're creating content that a majority may not want.
But valuable ideas were generated, particularly with fixes.
And maybe look to harness those ideas, maybe by other means.
So I lied when I said I wouldn't go into more of the crowdsourcing methods, but very quickly, I'd like to bring you into the release schedule survey.
This is where we've ended up, effectively our conclusion.
We tried to take all of the best parts of the various different methods and we come across this.
So what it is, is we approach our idea generators for ideas, design ideas.
We then pull them together with developer ideas.
We have a kind of open idea session within our office.
And we also pull those with the ideas that are generated by kind of data and the needs of the game, holistic needs of the game.
We then create a survey, ask our players to rate each update out of 10, and then they get to play a game.
They're creating their own release schedule for that year.
So they take their 12 updates, put them into months, and they form their own release schedule.
We then reveal the results, and this is all of a kind of big event.
What I value about this is what it kind of gains, takes from the benefits of each individual one, and loses some of the negatives.
For Relabs, it harnesses our creative players, but ensures there's a broad range of ideas, because we are filling in the gaps.
With the design documents, we understand the players' expectations.
So what that means is, because we're putting all of these updates out there, we now know what they think of them, we know what they're valuing.
But we lose that cost of the design document being to have such high overheads.
We're not designing everything and putting it out there in a player design document.
With polls, you get that increased engagement player impact, so do we get with the release schedule survey.
But it's a more malleable contract with the players.
Our contract is, you get to help us determine the major updates, we're going to keep all of the smaller fixes to ourselves.
So takeaways for this talk.
We'd like you to understand that crowdsourcing game design, from our experience, a limited number of players out there are interested in developing ideas.
I'm creating ideas and there is a limited shape of those ideas understand that you will not get a full broad range of ideas from your players could be done could there be a game that successfully incorporates all of their players to play design perhaps I think it built game was built and promoted around that concept it could well happen.
But for us we were trying to solve a problem that wasn't there and we're going pulling back from room labs and making it moving on to that really schedule survey.
But there is such value in bringing players into your design process.
There's more conversation.
As I said, that sine wave of chatter has changed to a constant.
We're seeing players talking all the more.
And we know that when players are talking, they're more engaged.
And if they're more engaged, they're more retained.
We actually see kind of a link between dialogue, talking in game, and being retained.
And you have a focused release date that isn't, you're not side-winded by unnecessary.
Unnecessary elements and the culture shift between a relationship with our player base and us is huge Our players now understand their own community. They understand their different player types. They understand the difficulties of design And I look at where we were before and we did everything here And well, the whole health of our relationship with the players is massively changed You'll know whether your game in your community would benefit from incorporating players into a design But the cost for us has been worth it and we have a healthier game for it So thank you very much. As I predicted, there is no time for questions, but please come up to the front and we can have a chat. We'll go over to 2022 to discuss more about crowdsourcing game design. Thank you very much.
