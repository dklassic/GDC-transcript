Hello and welcome to my talk.
This is Mastering Combat, Designing Mortal Kombat 11's Empowering Tutorial Mode.
I'm Brian Kessinger.
I'm a gameplay programmer over at NetherRealm Studios.
Just a little bit of housekeeping real quick.
This talk was originally scheduled for GDC 2020 in San Francisco, but that was canceled because of the COVID-19 pandemic.
I hope everyone is healthy and staying safe out there, but I'm really excited to be able to give this talk digitally and still deliver this content.
So let's dig in.
So let's go over an outline quick.
But first, just a note, though, the content of this talk is going to be delivered through a fighting game.
Our approach is going to be accessible to anybody who's interested in teaching a bunch of different mechanics to a wide player base of all kinds of different skill levels.
So first, we'll talk about why we decided to build a new tutorial for a live game, and we're going to do that through Injustice 2.
And also in Injustice 2, we're going to talk about how we built roadmaps for each player segment and define the taxonomy for the tutorial mode.
Then in Mortal Kombat 11, we'll show how that taxonomy showed us what we needed to build for the players.
Then we'll go through a bunch of different mechanics.
We'll list them out.
We'll talk about their design problems and their solutions and things like that to show how we empowered players through diverse feedback in Mortal Kombat 11.
We'll talk about our potential future, so the future of the Netherrealm tutorials kind of moving forward.
And finally, we'll kind of give a checklist for your game to use as a lens to to look at your tutorial through.
Just a quick content warning, we are going to use using videos today of Mortal Kombat 11.
That is an M for mature game, so there will be blood and gore and and stuff in these videos, so just be aware of that.
So first off, a little bit of history.
At NetherRealm Studios, we make 1v1 fighting games.
They're usually these 2.5D graphics.
These are really highly competitive fighting games, right?
The one you're looking at right now is Injustice 2, which is our DC Comics fighter.
and then we'll show a little bit of Mortal Kombat 11 here.
These also have large cinematic story modes, they have extensive single-player content, and though Mortal Kombat 11 and Injustice 2 are both fighting games, they're fairly different in their metas and their core mechanics, but the fundamentals of the fighting game remain the same.
That's definitely one of my favorite fatalities in the game for sure.
OK, let's go through a little bit of history.
So this is a talk about the tutorial for MK11.
But before we really dig in, I want to give some historical context about my personal journey and also the company's journey to get to Mortal Kombat 11.
So I didn't really play many fighting games growing up.
I did have a Super Nintendo where we did have Street Fighter II Turbo.
I remember kind of just mashing buttons against my brother and whatnot.
But.
Mostly growing up, I played a lot of competitive shooters, especially in my teen years.
I love to compete and I'm a very competitive person.
But I would always try to get into fighting games, but I would play them for about a month before dropping them.
I just couldn't really understand the fundamentals.
I couldn't get to that competitive level that I wanted to, that I was used to playing in games.
And every game I would think this is it, right?
This is going to be the fighting game that I get into.
And, you know, this was I did this with Street Fighter four.
I did this with Marvel versus Capcom three and all of these kind of to the same fate.
Right. I would play them for a little while.
I would recognize how difficult they are, how how complex the systems are to understand, and I would just inevitably drop them.
So if we fast forward a little bit to PAX East 2011, that's a convention out in Boston.
Me and my friends go to that every year.
We love going out there to kind of play the unreleased games and connect with the gaming community.
And this was about, in PAX East 2011, this was about a month before Mortal Kombat 9 was being released.
And I remember playing the demo on the show floor at PAX East.
And again, right, I hit that same mentality of like, this is gonna be the fighting game I get into.
This is it, this is finally the one.
And so we played the demo at PAX and we loved it.
We loved it. It was awesome.
It was this gory spectacle.
It was this ridiculous, over-the-top fighting game that, you know, we had nostalgia for as kids playing, you know, Mortal Kombat 2.
But.
This was in 3D now, right?
This is these graphics were incredible.
So we played the demo.
And I remember getting this crazy, ridiculous T-shirt from the developers after completing the demo.
And, you know, as a teenager, you're stoked, right?
You got to talk to the developer.
You you got this amazing T-shirt and you can't wait to wear it.
You can't wait to play the game when it comes out.
So the game finally comes out and I buy the $150 collector's edition that came with this tournament stick, which you can actually still see. I still have it's right over there.
And this was it, right? Like, how could I possibly fail? This was going to be the fighting game I was going to get into, right? I have the stick and everything. I have to be good at this one.
Turns out, no.
I remember going to college and getting absolutely destroyed by my roommate playing this game.
And sure enough, about a month later, I dropped it again.
So if we fast forward again to 2016, I'm finishing my master's in Chicago.
And I get a job at NetherRealm Studios, ironically working on fighting games.
So.
The irony is obvious there.
I had never been super into fighting games and I'd always tried, but I just couldn't break through that barrier.
But I was stoked regardless. Right.
I'm working in video games. This is my dream.
So maybe I'd finally learn to play a fighting game.
Maybe this was finally the time that working on a fighting game would finally get me to learn.
So during development, I tried learning to play.
No, again, not too much avail, though.
I really needed some structure, but the tutorial wasn't done yet.
Co-workers would try to help me.
They would try to, you know, give me some advice, but I would kind of just go into practice mode and flail around.
I didn't really know what I was doing.
So, and also the tutorial at NetherRealm is commonly kind of deprioritized in the development cycle.
It's usually built a few months out from ship, three to six months it starts being worked on.
And that's because of our two-year tight development cycle, on top of the fact that the game's kind of always changing during development and it's hard to build a tutorial for a game that's not fully designed yet.
So I needed some structure.
I needed some handholding in order to learn because I needed to be taught from the ground up.
I needed to learn fighting games at their core.
So if we fast forward a little bit again, we're just about to launch Injustice 2.
And the user and focus testing that's coming back about the game is that the first time user experience is in pretty rough shape.
Injustice 2 had some complicated RPG type mechanics that weren't being understood super well.
And on top of that, the tutorial was just in kind of a rough state.
So let's talk about that launch tutorial.
So this launch tutorial taught what was new in this fighting game without ever teaching fighting games as a whole.
The tutorial kind of assumed that you'd already played fighting games and you were coming in with some pre-existing knowledge.
It was completely linear too.
So if you struggled with one lesson, you wouldn't have access to the next lesson.
So it was kind of excluding content.
There was also no menu context for progress throughout the tutorial or how long the lesson was, which kind of led to this education fatigue of like, what am I doing, where am I going, how long is this, can I stop now type of mentality.
Also, in this tutorial, the difficulty ramped up way too quickly.
We have some data that shows that this one specific lesson on special move cancels had about 10 times the average dropout of the other lessons.
And we'll talk about this more later, so remember that lesson specifically, the special move cancels.
And to make matters a little bit worse, there's this first time user experience pop-up that gets triggered when you click on single player for the first time.
So if a player goes to play story mode, they click single player, a pop-up comes up and it's like, Hey, we noticed you haven't played the game before. Do you want to try the tutorial?
So it funnels them into the tutorial to start with.
And it kind of creates this broken player loop from the beginning because the tutorial is not in great shape.
It ramps up in difficulty too quickly.
It excludes content.
All those reasons we just talked about, right?
And that user research report kind of told us this.
And it kind of exposed this for us.
But we didn't have enough time to fix it before launch.
This is something we would have to address later.
So here's a video of Injustice 2 at launch.
You can see here, here's the pop-up that pushes you to the tutorial.
If you select it, you'll jump right into gameplay.
If you hit yes here, you'll jump right into the tutorial immediately.
But if we select no, we can actually go to the tutorial menu and we can show you what this menu looks like at launch.
So it's kind of just this linear menu.
You can see those red items are locked out because you haven't completed basics.
You don't get access to environment or combos or special moves.
And there's no progress there, right?
You can't see what you've done, what you've completed, et cetera.
So the higher ups gave us a the go ahead to fix the first time user experience with a strike team.
So the first thing we wanted to do was fix the tutorial.
Because if we can't teach players to play our game, how do we expect to retain or grow our player base?
This right here is kind of the mission statement of this whole effort, right?
We want players to play our game.
We want them to play for longer.
We have to fix this.
So.
The Injustice 2 Legendary Edition we knew was going to launch the following year.
This was our kind of like enhanced edition, including all the DLC we'd be launching.
We knew this was coming.
And we knew Mortal Kombat 11 pre-production was starting soon.
So we knew this would happen again for a future game if we didn't fix it now.
And during development of a new game, the meta of that game and the design of that game is constantly changing, right?
So it's hard to design a tutorial from scratch while you're also building the game that you're trying to teach.
So our idea would be to build a new tutorial and it would be a foundation for games to come, right?
And we would build it for the Injustice 2 Legendary Edition.
We would ship it for this live game.
And we would use the existing Injustice 2 Launch Edition to build this new tutorial.
Because the game's already designed, right?
So now we have that foundation to work with.
This was super exciting for me personally.
I didn't work on the launch tutorial, but now being on this strike team, I would have an opportunity to build the tools I wish I had when I was trying to learn Mortal Kombat 9, when I was trying to learn Street Fighter 4, or Marvel vs. Capcom 3.
All those times when I had tried to get into fighting games and failed, I would have a chance to try and build some tools for players so that they didn't have those same experiences.
So let's talk about the Injustice 2 Legendary Edition, the all-in-one package edition that would launch with our new tutorial.
This would have to solve the hard problems in an existing product, right?
And we're going to launch that with this Legendary Edition SKU.
This was kind of similar to a format that the company was already familiar with.
We had reworked our networking model to become this G.G.P.O.
rollback networking type for Mortal Kombat XL.
So we had used Mortal Kombat X as a foundation to rework our networking model to launch the Mortal Kombat XL.
Right. And you can see Mike Stallone's 2018 GDC talk, eight frames and 16 milliseconds.
I think it's called rollback networking and Mortal Kombat as well.
Check that out if you're interested in that.
But the point is that the company was familiar with this idea of like, let's use the existing products, let's leverage that, and launch and kind of test this new feature that we want in this legendary edition, this Mortal Kombat XL edition that's coming out in the future.
So the Legendary Edition tutorial.
So this is kind of the constraints we were working with during development.
We had six months, we had one designer in Michael Balapani, he was the lead designer on this mode.
And we had one programmer in me, and we also had the resources of the UI UX team.
But it's important to note here that these people all had their own responsibilities as well, outside of working on this tutorial for the Injustice 2 Legendary Edition.
So, Time was kind of of the essence, right?
Like we only had so many resources.
OK, so let's talk about our player segments.
These player segments are usually defined by your publisher or your marketing teams.
Usually, usually companies have these kind of already built out for you.
If not, you should ask and you should try and create these.
These are super useful.
But kind of before we dive into the chart, despite the fact that we're in fighting games, we have a really wide variety of player bases that engage with our product in all kinds of different ways.
So this chart here has skill going up and retention going to the right.
We have campaigners and couch players.
These are kind of lower skilled groups of players and they don't retain as well.
They kind of play the story mode and they usually kind of drop the game.
Then we have the Dabblers, who are kind of in the middle, right?
They retain fairly well in our middling skill group.
And then we have the Connoisseurs, which are high retention, highly skilled players.
They kind of engage in all different types of modes after trying them as a Dabbler.
And then, finally, we have the PvP Online group, which is...
Almost like your competitive multiplayer.
Not almost it is your competitive multiplayer group of players, usually players who are interested in watching e-sports and that type of thing.
And these players retain really well, but they're incredibly skilled.
So all these different player segments, they come in with different fighting game experiences, and they all want different experiences out of our fighting game.
So if you look at the chart here, players participating in modes that require more skill are generally retained better.
And this is completely conjecture, but it's likely because they're better at the game and they just enjoy it more.
So the idea is to build a tutorial roadmap that would allow these players to increase their engagement and potentially move to the next segment.
And we're going to do that by reducing the barriers that they run into.
We're going to provide them all types of feedback, and we're going to pace out the content as much as we possibly can.
So let's take a look at our taxonomy.
This is kind of the structure we decided on, and we're going to walk through how we decided on that as well.
So we have three sections representing three different types of preparedness for play.
We have the basic section.
which prepares the player for story mode and couch versus.
We want these players to play these modes without button mashing.
And they're gonna do that by playing through the basics of our tutorial mode.
It covers all core mechanics.
And it's as easy as possible.
That is really crucial here.
Also, it's available before the game finishes installing.
So if you've played games on Xbox and PlayStation, you'll notice that when you start installing it, it'll have that like playable state on the progress bar on the install progress.
And this part of the tutorial mode, the basics part is in the launch chunk, meaning as soon as it hits that playable mark, the basics of the tutorial is available and ready for players.
The second section is the advanced section.
This prepares the player for extended single player modes, so after story mode.
And it finishes covering all remaining mechanics.
So if you've completed basics and you've completed advanced, you've now been exposed to and taught every mechanic in the fighting game.
And lastly, is the strategy section.
The strategy section prepares the player for online multiplayer.
It covers the risks and rewards of all different type of common gameplay scenarios.
And this is content we've never taught before.
The advanced section and the basic section was mostly taught in the original launch tutorial, but now we're kind of spreading out that content through all different types of feedback.
So it's kind of spread out and paste out much better for the player.
Whereas the strategy section is all new content.
So here's a top-level menu screenshot for Injustice 2.
There's more granular categories inside these sections.
So you have the basic section, the advanced, and the combat strategy.
There's also characters here.
That's the character-specific tutorials.
There's also a tutorial for every single character in the game.
We're not going to touch on that today in this talk.
That's kind of a separate talk.
And that content didn't really change much from the launch tutorial.
So.
And lastly, there's also a practice cell here as well.
So this is kind of your one stop shop for learning.
This is the learn hub, as we call it.
But we're going to be focusing on basics, advanced and strategy.
So the taxonomy.
It's fully a la carte.
This structure is fully a la carte.
We are eliminating as many content barriers as possible.
We're not going to say, if you can't complete this one, you don't have access to this one.
You might understand the concept, but it might be really difficult to perform.
We want you to have access to the next lesson regardless.
But it is, the whole tutorial is still intended to be played linearly, because we are building on previous concepts quite a bit.
This hierarchy also allows for way better content bucketing.
It also allows us to celebrate at different scales and reward at different scales.
So the player's just going to feel better because we've kind of structured this content more.
It's way less of a flat hierarchy.
We're going to celebrate them more and give them more rewards.
And you can see that here.
So at a Justice 2's launch, we rewarded the player just one time.
And that was at the end of the tutorial.
And it was only for it was for 500 Source Crystals, which is our premium currency that players can use in game to buy skins and all types of other stuff.
For the Injustice 2 Legendary Edition, every lesson we reward you with a Mother Box, and after every category we reward you with more Source Crystals.
And if you complete one of the sections, we give you an exclusive piece of Batman gear.
So these rewards create incentives for players because, you have to remember, the tutorial, people still have to want to learn.
So by giving them these rewards, it incentivizes them to play.
Okay, so let's take a look at this learn hub right here in this video.
So this, you can see here, there's these progress bars.
It gives them a better sense of completion.
In the old tutorial, you had no idea where you were in relation to the bigger picture, right?
So here's the inside of the advanced section.
You can see we're scrolling through the categories here.
And now on the right, each category is updating its lessons in that list.
Yeah, these progress bars are great because players would often ask, like, how close am I to being done, or did it even save my progress?
So it's also important to note that after a player completes a category, we force them back to this menu.
We don't let them continue on to the next lesson because we want them to see their progress.
We want to show them that it's okay to stop playing.
Go play the actual game with what you've learned.
And this is kind of pacing out the content much better for players.
We don't want them to complete this all in one sitting.
There's a lot of content here's hours of content.
If they do complete it in one sitting, they're not really likely to retain too much.
So we want them to go play the game.
Okay, so remember our player segments from before?
We're gonna combine these player segments with our new taxonomy.
So here's the taxonomy that we have, basics, advanced, and strategy, right?
And let's combine the two.
So when we combine the two, here's what we get.
You have campaigners and couch players.
If they complete basics, they're much more likely to become dabblers, right?
They're ready for that content that dabblers are participating in.
And the same goes for completing advanced as a dabbler.
You're ready to become a connoisseur.
This is kind of our roadmap, right?
We need to give players options and ways to engage with our product.
So.
Really the goal here is if we can graduate those bottom players to the dabblers section, where they're equipped with enough knowledge to participate in all the modes of the game, they're much more likely to continue playing for longer.
Dabblers retain three and a half times as much as campaigners and couch players do.
And the same goes for graduating a dabbler to a connoisseur.
Connoisseurs retain two and a half times as much as dabblers do.
Ultimately, we do want players to play what they want to play and play what they're interested in, though.
So if a couch player who's playing, you know, mostly local versus against their friend really only enjoys the multiplayer aspects of our game, Well, we need to give them an avenue to get to PVP online.
We need to give them this roadmap.
You know, they might have to do a lot of work to get there and play some other content along the way, but we need to give them that option.
We need to show them that path that that's possible to do.
So here's just a little bit of data about going from Injustice 2's launch tutorial to Injustice 2's legendary edition.
The Injustice 2 launch tutorial had 6 lessons and 15 exercises.
Remember seeing that linear list with the red words blocked out for each lesson?
And the Injustice 2 legendary edition had this...
54 lessons and 80 exercises.
This is a large explosion of content to launch with the Legendary Edition.
Also, because we paste it out much better and we go into much deeper detail as well.
And so we launched the Legendary Edition tutorial and people really liked it.
Not many people really want to play a new tutorial a year after the game's launch, but from those who did play, it was received really well.
And so, here's a video of Mortal Kombat 11, and the tutorial that we launched with Mortal Kombat 11.
This is the same structure, this taxonomy, this foundation that we built in Injustice 2's Legendary Edition, this paid dividends for us in Mortal Kombat 11.
So after the legendary edition of Injustice 2, we knew what the menu structure would look like.
We knew what content we needed to teach to teach fighting games.
And then we would just layer on top the content we would have to teach to teach MK11.
This allowed us to spend a ton of time building flexibly from the engineering side, while also refining and streamlining existing content from the design side.
So for the rest of this talk, we're going to be using Mortal Kombat 11 as an example, despite the fact that some of the features we're going to talk about were conceived for Injustice 2.
Oh, and one more thing. The most important change we made from Injustice 2's Legendary Edition to Mortal Kombat 11's tutorial is that we changed all C's to K's because...
Well, Mortal Kombat.
OK, there's not all C's to K's, but there's rules to this.
You'd have to ask Ed Boon, though.
It's some complex rules.
OK, so deciding on mechanics, we're going to walk through how we decided on what mechanics to build.
We're going to go over a bunch of mechanics individually here to show how they empower players with diverse feedback.
And we're also going to include design problem statements and our solutions for them.
So we have to solve the most common problems players encounter in a specific section.
We need to teach through as many forms of feedback as we can.
And we have to solve the problems that relate to that section's goals.
So let's dive into that one a little bit deeper.
So if we have basics, advanced, and strategy.
First, I should note that the granularity here isn't important.
It's more about the process here.
So we have basics, advanced, and strategy.
The goals of basics are to teach the player to play story mode without button mashing, it's to cover core mechanics, and it's as easy as possible.
And so, in order to meet these goals, we have a set of concepts that we need to teach.
And those concepts are movement, blocking, throws, environment interaction, special moves, basic combos, and fatal blows.
These mechanics teach the concepts through various forms of feedback.
Or I should say rather, the mechanics that we're going to be teaching are teaching these concepts through various forms of feedback, through visual feedback, through auditory feedback, all different types of visual feedback as well, we're going to dive into all of that.
Um, so let's look at advanced, the advanced, the goals of advanced are.
to teach the player to play extended single player modes.
And it's also to finish covering the remaining mechanics.
So in order to meet these goals, we have to teach these concepts.
Special move cancels, jump in attacks, et cetera, et cetera.
Right. There's a list of these things.
And we can do the same for strategy as well.
Here we're going to be teaching online competitive multiplayer and we want to cover the risks and rewards of a bunch of gameplay options, right? Not what these options are, but how to use them in battle. And so there's a list of concepts where we need to teach here as well. Again, remember that the granularity here isn't as important.
So we need to find the biggest bang for our buck when teaching these mechanics.
So an example is that the basic section is to prepare the player for story mode.
Combos and how to input them are fundamental for story mode and the game as a whole.
Newcomers really struggle to understand this system, the combo system, and they're intimidated by it.
So our solution was the combo windows.
Combo windows.
Let's walk through our design problem statement here.
Players have difficulty understanding the input system and when to press buttons to execute a combo.
Combos are fundamental for basic play and essential for a good experience.
Excuse me. So our solution...
is to expose the input system in a visual way that shows players how combos can be performed and provides concise feedback. This module we're about to walk through is intended to be an in-game coach. That concise feedback portion of this solution is incredibly important.
Okay, so here's our combo windows. This video is going to loop, so we're going to walk through it.
The input system in general works as a buffer.
The combo system is sometimes referred to as a dial-in system.
This means that you can buffer or dial in inputs way ahead of when they're needed.
As long as you press a button before that button's deadline, then it will be read by the system.
This means that combos in NetherRealms games are almost never timing-based.
You don't have to wait for one punch to land before pressing the next button in the combo.
That would be called the link.
That's a whole nother concept we could teach later, but we don't really have many links in our game.
There are a few, but you don't have to wait for the first punch to land in order to press the second button.
That's what's most important.
And combos are essentially, for example, press these three buttons and the character outputs these three attacks in a row.
So we workshopped a ton of different solutions for this module in particular.
We started mapping out these Guitar Hero-esque highways where buttons were flowing down and stuff.
We user tested a lot of these things.
This particular format solved our initial goals, and it also ironed out some of the kinks that we were dealing with with some of the other formats.
So this solves the original set of issues, right?
It exposes the input system.
And it doesn't also say to the player that there's one timing for completing a combo.
That's important because as long as you're before the deadline, the button will be accepted.
So if you explain this to a newcomer, performing these combos becomes much, much easier.
Both anecdotally and through guerrilla testing, people were just not inputting the buttons fast enough.
They just needed to be told that.
They just needed to be told you have to do it faster.
This is what we mean when we say this module is a type of coach.
It tells you what you're doing wrong and it gives you actionable feedback.
So this module covers a ton of potential problems different players might have through a variety of visuals.
If you execute the combo but miss all the attacks, the windows are orange.
It's this type of like soft fail type of situation.
Whereas the green of the success state really pops off to let the player know that what they did was correct.
In the worst case scenario here, a timeout will occur and that will point the player to the demo feature.
You can kind of see that in the top right over here in just a second.
That message that's popping out, it's a little bit.
Yeah, we're going to slide over.
Yep.
So press the pad button to see the correct timing.
We're going to go over the demo feature in a little bit, so don't worry about that.
So a player may not understand the windows, right?
It might be a little bit confusing on how to, you know, just interpret the windows.
So that failure reason, and the context that the failure reason is providing, is super, super important.
And the failure reason, again, it's contextual to your result.
So depending on what you did, it will give you a different reason.
So we need to be able to catch these players at different points of failure and provide them actionable feedback.
This is why the variety of feedback here is so important.
So when we brought this system over from Injustice 2, you can see up top here, this is the Injustice 2 Legendary Edition version, and on the bottom is the Mortal Kombat version.
It's kind of walking through the same combo, showing you the differences.
But I'm going to talk about the differences right now, too, to expose them to you.
So in Injustice 2, there was this two-pass system.
One was detecting the immediate feedback of the button to see if you pressed the correct button, and then the second pass was to see if you output the correct move.
So you can see here there's green check marks but red boxes.
That's just confusing.
So it's kind of leading to this excess of information.
It's like, well, what did I do wrong?
The box was red but the check box was green.
I don't really understand.
So we got rid of that for Mortal Kombat 11.
In more combat 11 it's surrendering the feedback, the immediate feedback, in favor of more concise actionable feedback.
These windows, they happen so fast that the lack of immediate feedback is really just relative and it's not really missed by the player.
So again, this is...
not necessarily meant to be read and understood.
It's just showing here, this is the flowchart of the windows from Injustice 2 Legendary Edition to the Mortal Kombat 11 version, and showing how simple the Mortal Kombat 11 version is in comparison to the Injustice 2 version.
So, again.
The lack of feedback isn't really missed because it was relatively too short anyway.
And at the end of the windows, we give a single reason along with a piece of contextual feedback to that result.
That's what's most important.
And because the tool itself is simpler, we can actually extend its functionality into special move cancels.
And it doesn't add that much complexity for the player.
Remember, this is the thing I told you to remember earlier when we were talking about Injustice 2's launch tutorial about how this particular lesson, special move cancels, had 10 times the average dropout of the other lessons.
The Injustice 2 completion rate at launch for this lesson was 51%.
51% completion rate.
In MK11, the completion rate for this specific lesson, Special Move Cancels again, was 97%.
And again, completion rate is the percentage of players that completed it after having an attempt.
So 97% of players completed this after having an attempt, whereas in Injustice 2 it was only 51%.
And that's partially because we're pacing out the content much better.
This special Move Cancels lesson is actually in the Advanced section in MK11, whereas remember it was part of one of the seven lessons in the Injustice 2 launch tutorial.
But we're also empowering players with a tool where they get feedback, and they get feedback through a variety of visuals, and it's just better. It's more concise. It's actionable.
Okay, so speaking of the advanced section, let's move into some of the mechanics we taught there.
So, remember that the advanced section is to prepare the player for extended single-player modes.
It finishes covering the core mechanics.
And here's where we found two opportunities for really high-value wins.
In the advanced section, we're gonna teach these timing-based situational mechanics, and we're also gonna teach frame data.
We continue to get a lot of value out of the mechanics we're teaching here and a lot of the tools that we built to teach these mechanics and concepts later on in the strategy section because we go into them in a much deeper format.
So let's go over to the situational mechanics first.
The problem statement here is that some mechanics can only be performed in specific situations and they must be executed within a timeframe.
Players really struggle to recognize these opportunities.
They struggle to recognize these windows of opportunity.
So our solution is we're going to put the player in that situation, we're going to freeze the world, freeze the whole game during that window of opportunity, and then we're going to color their character and wait for their input before unfreezing the world.
So here's what that looks like.
We freeze the world and then you perform the inputs and the world continues, right?
This is a perfect case of show and tell.
We're telling you through the instructions in the text boxes prior that you can roll out at the apex of your fall arc, right?
But then we also demonstrate it.
And it's much easier to understand the demonstration.
And here we're kind of going through a bunch of other mechanics that we use.
that we taught through this world freezing.
We used this world freezing to teach wake-up attacks, air escapes, special move cancels, throw breaks, I know I'm saying a lot of things that are specific to fighting games, but the point is that we got a lot of bang for our buck out of this world pausing type of feature.
So the second high value win we got in the advanced section was frame data.
The problem with frame data is that players have difficulty understanding frame data, and or they have trouble seeing the stages of frame data take place on their character.
Our solution was to expose the frame data visually as a highlight effect on both characters.
This is a new form of visual feedback to meet the specific need that we're teaching.
We want to keep the player focused on looking at the character.
We don't want to distract them with additional UI.
So again, we're building something, we're building a set of tools to meet the specific needs here.
This feedback is very contextual to this specific section.
OK, so let's do a little bit of a deep dive on frame data.
This is going to be fairly technical to fighting games, but you don't need to understand it and.
But it's important for players to understand if they're going to compete in fighting games. OK, so it's important to note that the player does get this info paced out over several lessons, and we're going to kind of blaze through it pretty quick, so buckle up.
So frame data.
Our game is locked at 60 frames per second.
That means that each frame in our game takes 16.6 milliseconds.
Each character move, rather, every character move, goes through three stages of frame data.
And that's what we call the anatomy of a move.
You go through startup, you go through active frames, and then you go through recovery frames.
Knowing and understanding a character's frame data is essential for high-level play.
So let's take a look at this anatomy of a move.
So we teach this through showing a character highlight.
Here's a video mock-up of the anatomy of a move.
You go through startup into active and into recovery.
And this again, this video is going to loop.
So.
Every move has different data in terms of the length of each of these stages, but every move has these stages and you can see it again here with a different move. First, we're going to go into startup in blue.
Then we'll go into active frames in red and quickly into recovery frames in green.
So what does this mean for the game?
The outcome of a move's recovery creates advantage and disadvantage for players.
The length of a move's recovery depends on its outcome.
Each move will have different recovery lengths for whether it was hit, it blocked, or it whiffed.
This is fighting games at their core.
This is like...
this is it, right? You're kind of doing this addition and subtraction on the fly of like, oh, am I in advantage or am I in disadvantage? And that's all the outcome of the anatomy of a move. That's all the outcome of startup frames, active frames, and recovery frames. So let's take a look at advantage and disadvantage. So when the character highlight comes off is when the character can move again.
So Scorpion here has 17 frames of advantage.
And you can see the highlight comes off of him 17 frames faster than it comes off of Cassie.
So this is another great example of show and tell.
We'll tell you it takes 43 frames to recover, but, or sorry, that you'll have 43 frames of advantage on hit, sorry, because of your recovery, but seeing it is so much easier.
It's actually digestible once you see it.
Okay, so we've talked about a bunch of, well, I should say, end of fighting game technical talk.
Let's move back to some more design conceptual stuff.
Previously, we talked about some specific ways to solve very specific problems, but there are some mainstays that are always there throughout our tutorial to help out.
And first, we teach through text without any VO.
Our whole tutorial is taught through text.
And that's for a variety of reasons.
Localization is really tough with VO.
Our content was really volatile during development.
So getting those re-recordings of VO was going to be really tough.
It's kind of a decision we made early on to not do VO.
But at the same time, we would love to do VO.
And we'll talk about that in the future of our tutorial.
So we need to minimize the amount of text and pop-up boxes in a row as much as possible.
We want players playing the game. We don't want them reading clumps and clumps of text, right?
So to help with that, we highlight keywords because, well, people just skim text box.
Nobody's going to read the whole thing, right? There's certain words here that jump out at you, and that's jumping attacks, blade jab, and basic attack.
So we do have a coloring scheme where blue is a specific character move, so Cabal has a blade jab move there, which is why that's blue.
And then core fighting game concepts are highlighted in yellow.
So again, we need to spread out these complex concepts and highlight these keywords to make it easier for the player.
We also really need to reduce the amount of technical fighting game community terminology.
There's a lot of community-based terminology in fighting games, and we need to reduce that whenever possible, because it's going to confuse players who are new to the genre.
So this text box, for example, says, if a character performs a jumping attack and misses, they'll have a brief recovery period after they land during which they cannot move, attack, or block.
This is actually teaching a fighting game community concept known as TripGuard, but we never use the word TripGuard, so that's just important to note.
Okay, so we teach through text and we build specific tools to meet the specific content, but what happens if a player is still struggling?
Because different players have different problems.
They just do.
Some get stuck on different things in the same lessons.
Some get stuck on the same things, but in different lessons.
And we saw this a lot in our user testing when we were watching players go through our tutorial for the first time.
Basically, not everyone learns in the same ways.
We need some catch-alls.
So one of our catch-alls is the AI demos.
And the problem statement for our AI demos is that players sometimes don't know what the expected outcome of a task is or what it is they should be doing.
And this is after they've read the instructions, right?
So our solution was have the AI perform the task to show the player.
And this is an opt-in button.
This is an opt-in feature for every lesson.
So let's take a look at this.
Yeah, so every lesson has this feature available in this tutorial.
So you can see here, there's a View Demo button right underneath the controller.
And here you can see the orange buttons highlighting and the AI performing.
The orange buttons are the AI button presses.
That's the AI performing the move.
And here you can see some blue button presses on top of the orange button presses on that controller.
The blue button presses are the human, or the player I should say.
Sorry we use human and AI a lot in our code.
So the intention of that is that you can watch the AI perform this task with the orange buttons and watch them perform it in-game.
And then, hopefully, you can kind of play over top of it with your buttons and try and get some of that muscle memory down.
It's kind of this Simon Says on the controller.
And you can, this will loop.
This isn't a looping, this, well, I mean, this is a looping video.
But additionally, that demo just loops until you exit.
So you can get the muscle memory down just by watching and then kind of trying to participate when you're ready.
So let's talk about audio reinforcement, another catch-all for us.
The problem is that players have difficulty understanding the cadence required for different mechanics, including combos, punishes, defensive options, and more.
It's kind of the, when do I press buttons?
So our solution, assign a unique audio cue to each button on the controller and play them during all the AI demos.
So I just showed you that the AI demos there were pressing orange buttons.
And now we're going to assign an audio cue to each of those.
And so here's an anecdote that illustrates this.
Some of my co-workers were at a fighting game tournament, and they were up in their hotel room, and one of the co-workers, Danish, he was trying to learn a particular combo.
He knew what buttons he needed to press, but he didn't know when to press those buttons, right?
So another co-worker, Mike, he drummed it out for him.
Bop, bop, bop, bop.
That was the combo.
And Danish, after trying it a bunch of times on his own, not being able to get it, mic drumming it out, bop, bop, bop, bop, bop.
That cadence, hearing that auditory cadence, Danish got it the next try or something like that.
So we can't really send a mic to every player's house in order to drum out combos for them.
So we have to find a solution for this.
And our solution was this audio reinforcement in the AI demos.
So you can hear the clicks here.
I'm going to let it play one more.
So you can hear those clicks, right?
And for different combos, this is going to be really useful.
And a lot of other fighting games— I shouldn't say a lot—other fighting games do this, like Tekken does this, and it's really effective.
And again, this is because not all people learn effectively in the same ways.
By adding these audio cues, those who are more auditory learners, or they're musically inclined, are much more likely to learn this combo faster.
For me, this is one of my personal favorite additions to MK11. It's a very simple feature, but it really broadens the avenues for players to learn.
It also adds a really great accessibility option for those who are visually impaired.
So for previous games, if a player wanted to know when to press the buttons, or needed to know how this cadence of this combo is supposed to be performed, they'd have to go to YouTube.
They'd have to, you know, potentially take out a second device, go to YouTube, watch a video, just to understand this.
And most players aren't going to overcome that barrier.
So by putting this in-game, we're reducing that barrier.
We're reducing that need.
We're keeping them in the game, hopefully playing the game for longer.
So tips and hints is another one of our catch-all features.
The problem statement here is players who struggle in a particular task aren't given additional context or help to get them through.
So our solution is that a custom message per tutorial task after a certain amount of time appears with some extra help.
So let's take a look at that.
If a player isn't completing a task after reading the instructions, watching the demo, trying for a minute or two, we have to try to help them, right?
We've already empowered them with a lot of different tools, but if they're still not getting it, they need some extra help.
So you can see here, Raiden's kind of blocking.
He's not completing this task.
Maybe he doesn't know what to do.
And then this tip pops up and it says, when performing a special move as a reversal attack, the timing of the final button press is the most important.
And then boom, he gets it, right?
Obviously that's an ideal scenario.
We're gonna fast forward through this one and we're gonna show another example.
Again, the delayed timing here is super important.
We don't wanna overwhelm the player.
So we just fast forward through the Sub-Zero video.
The Raiden demo was real time.
And some of these tips would just remind you to watch the demo.
Sometimes it's that simple.
Like, hey, just a reminder that the demo feature's over here.
Go check that out if you're having trouble.
Some of them would ask them to pay attention to the audio timings of specific cadences and combos.
And some are super specific to the lesson at hand.
Lastly, we want to make the player feel good while learning, and we need to set up their expectations properly.
Having their expectations in line can really help reduce education fatigue and make sure that they aren't overwhelmed and that they go play the game with what they've learned.
We often have this like...
Oh, let's show this first.
So yeah, we want better celebration.
We want to celebrate more often.
We want to celebrate bigger.
We also have these sound cues that we added for successful tasks and some successful subtasks.
So we kind of have this like, hey, do this task X times, right?
Do it three times, do it five times in a row.
And there's this nice like audio cue, this cheerful sound cue that kind of makes you feel good after completing something.
These are little things to help celebrate the player, right, to lift them up.
There's two more things that we can do to reduce this type of fatigue, this kind of education fatigue.
And we're going to do that through context and expectations.
The problem here is that players may not know what they just completed.
They did the whole tutorial, they completed everything in that lesson, but maybe they don't remember what that was called.
And they don't know what's up next.
So at the end of a lesson, we show this pop-up box, and we say, hey, you've completed the Special Move Cancels lesson.
The next lesson is Jumping Attacks.
So now players feel good for having completed something, they know what they just completed, and they can make an informed decision about whether they want to continue on to the next lesson or not.
And if the lesson you just completed is the last lesson in a category in one of those buckets, we force you back to the menu.
You can see there's no next lesson option on this screenshot.
And that's because we're trying to spread this out.
We're trying to spread it out, pace out the learning, reduce the education fatigue, make sure players aren't overwhelmed, and again, make sure they go play the game.
Because if players, again, if they just barrel through this entire tutorial in one sitting, they're not likely to retain too much.
And this is kind of something we loved about Killer Instinct's tutorial.
They straight up say like, Hey, go play the game. Come back later. Stop what you're doing.
Go, go play the game. That's super cool.
And by sending players back to the menu, they can put their progress into context with the remaining tutorial content.
It also gives them a clean break.
It shows them it's OK to stop playing, again, just pacing it out, setting up those expectations.
So after refining the Mortal Kombat 11 version based on what we had learned from the Injustice 2 Legendary Edition launch, people really liked it.
This was great to see, I mean, obviously we had been putting a ton of work into this and a ton of thought.
So the fact that people liked this, this was spectacular to see, it really was.
I mean, there was, look at the bottom here, there was even an appreciation post on Reddit.
I mean, doesn't get much better than that.
Okay, so let's talk about the future of our tutorial at NetherRealm.
Again, this is all conjecture, all of it.
None of it's set in stone.
we need to do a better job of setting expectations of pro-level mechanics.
In MK11, there was a particular pro-level mechanic called Flawless Block Attacks, and some players were trying that tutorial over and over and over again, really struggling with it.
And I think if there was maybe just, you know, like, some UI difficulty indicators, maybe in the menu, saying, like, whatever, right? Like beginner, moderate, pro, or three levels of green, orange, red.
Hey, this is really hard. You shouldn't stress yourself out about this type of thing. I think that could help alleviate some of that.
We also want to loop lessons on completion.
A lot of players were revisiting our tutorials, but the tutorial kind of brings...
After completing a lesson, it brings you to that menu of like, hey, do you want to go to the next lesson or do you want to retry?
And retry would put you back through a loading screen, which isn't the end of the world.
Our loading screens are pretty short, relatively.
But if we can loop the lessons on completion and kind of set up like a button to advance the tutorial and we can message that properly, I think that would really help.
We'd also love to do voiceovers. We talked about this before, about how we teach through text, we don't have any VO. We'd love to do this.
We also need to do, we've done some incentivizing of tutorials, but we need to incentivize more.
Right now you still have to want to learn.
right? If you're playing this tutorial you want to learn.
We thought about some gamification stuff.
This was mostly a resource issue and also kind of a philosophical difference at NetherRealm.
We don't want to take you out of the context of the fight.
If we gamified the tutorial through, like, minigames and things like that, it would be taking you out of the context of the fight.
So when you go to do those things in an actual fight, you probably won't know what you're doing.
We want to keep you in the fight as much as possible.
We also have some secret stuff in the works, which is really exciting.
I wish I could share, but you'll have to stay tuned.
Okay, so a checklist for your game.
So this is kind of your checklist, your lens to look at your game through.
Prototype using a completed game if possible.
I understand this is a luxury.
Organize your players into segments of how they interact with your game.
What experience do these players want from your product?
Decide the knowledge and skills each segment needs in order to get the experience that they desire.
This becomes your tutorial structure and roadmap.
Remember, those are those graphs where we have the player segments and we mapped basics, advanced, and strategy onto it, showing this kind of roadmap pathway of how players can graduate to these other segments.
Create diverse ways to teach players the necessary content.
You can do this through UI visuals, in-world visuals, gameplay demonstrations, audio feedback, and you need to find some catch-alls if you can.
Because if a player is struggling and they're still not getting it, then they're probably just gonna put your game down.
And lastly, pace out the content appropriately.
Reward players along the way.
Create force breaks and spots for players to see their progress.
This is going to help reduce that education fatigue and pace out the content so that they actually learn.
Here's the full checklist.
You can take a screenshot of this if you'd like.
So if we take this checklist and we, let's look at how it applies to Mortal Kombat 11.
How did we use this checklist?
Okay, so we used injustice to as a proving ground for prototyping this feature.
And again, I mentioned before, I realize that's a luxury.
But a lot of games are sequels these days.
So if you do have a completed game, even if you're not going to launch it with that game, it might be worthwhile prototyping stuff in that.
game before trying to do it in the in the new game that's already in development, right?
Because that new game that's in development, it could change.
It's probably changing underneath you.
Maybe some systems aren't online yet.
You get the point.
Organize your players into segments of how they interact with your game.
This is our campaigners, our couch players, our dabblers, our connoisseurs and PVP.
Again, this is something that usually your publisher has or your marketing team has.
And if not, if you have an analytics department, they probably have this.
Ask around. I'm sure I'm sure you have player segments.
decide the knowledge and skills each segment needs in order to get the experience they desire.
So again, this is our basics, advanced, and strategy.
And that correlates to story, extended single player, and online PVP, respectively.
Mapping that basics, advanced, and strategy onto our player segments gives us that roadmap.
Create diverse ways to teach players the necessary content.
And again, we did this through all kinds of different stuff.
Combo windows through UI, right?
Character coloring, world pausing, AI demonstrations, button audio feedback, tips and hints.
And lastly, paste out the content appropriately.
We rewarded players after each lesson and category.
We spaced out the content into more sections.
We forced a return to the menu after completing a category as well.
Again, pasting out that content, reducing education fatigue.
Thanks. Thank you for watching this talk.
There's also a few people I'd like to thank specifically.
Firstly, Mike Belponte, you were an incredible partner in this project and a mentor and all this to me working with you was spectacular.
Taryn Silverstein and the entire UIUX team for their contributions.
They were essential to this.
Thank you, John Edwards, for creating space for us to do this.
Everyone at NetherRealm and Warner Brothers for allowing us to make video games.
It really is a dream.
Emi Chung and GDC, Emi Chung, thank you so much for mentoring me through this GDC process, for helping me with this talk, giving feedback on this talk.
This was a spectacular opportunity.
Thank you to Emi and GDC.
Okay, so normally there's a Q&A session after one of these GDC talks.
We're not in a live studio audience right now, obviously.
So I asked on Twitter, and I said, hey, like, I realize you haven't seen the talk, but if you have any questions, I'd love to include it at the end of the presentation.
So here's some of these questions.
We're going to go through some of these now.
What other questions, or sorry, what other tutorials did you draw inspiration from?
Any other genres?
Yeah, tons.
Fighting games, Skullgirls, Guilty Gear, Killer Instinct, Tekken, Street Fighter, all of these have good components in them.
We drew tons of inspiration from these tutorials.
Other genres, Guitar Hero and Rock Band, for sure.
We talked about that and how we kind of prototyped some of that Guitar Hero Highway stuff.
The one that's maybe not so obvious would be sports games.
In NHL, the hockey game, there's this vision trainer.
That's excellent.
It kind of puts like stuff on the ice for you, showing you what passing lanes are available, what shot lanes are available.
That's spectacular.
And they'll be the show.
The baseball game has the swing timings visualizations.
So you can see if you were like too early or too late or if you were above it or below it.
All that stuff we drew inspiration from.
How much did accessibility factor into your planning, production, and design?
A ton. It absolutely did factor in.
I actually remember seeing a video of a blind gamer on YouTube playing Injustice 2, and it was spectacular to watch. It was awesome.
I mean, this guy was kicking ass. It was very cool.
So it absolutely did factor in, especially with the audio tones and the character coloring, the mesh coloring.
Initially, the character...
highlights, the character colors, were red and green, which to my understanding is one of the most common forms of colorblindness. So we switched that to blue and orange to help with that.
And the audio tones are something that obviously has accessibility baked into it and was something we were really excited about. I would love to expand that feature to the rest of the game in future titles. I think it's really helpful and just easy to understand.
Did combo trial tutorials like in Injustice 2 ever get brought up again in the making of the MK11 tutorials?
Yes, absolutely.
So for context here, in Injustice 2's Legendary Edition, that reworked tutorial that we launched, there were these trials, which was kind of like the final exam to some of the lessons, if you will.
They were really difficult and they were really long, and I don't think we did a really good job of relaying the expectations there about what those were.
So we could definitely do that better in the future, but in reality, this was a time constraint.
We didn't have these in Mortal Kombat 11 because of time constraints.
Excuse me.
These are also really prone to breaking as we update character frame data, character moves, character meta.
So those are really volatile and kind of fragile.
It's a lot of maintenance.
So it was just a time constraints issue with Mortal Kombat 11, but it's something we'd like to revisit in the future.
One thing that immediately got my attention in the MK11 tutorial, in comparison to MKXs specifically, is that plenty of characters were used throughout. Was there a conscious choice of specific characters for specific concepts? Yes, absolutely. Every character was handpicked.
because they teach or display a specific concept really well, right?
Jade was the attacker in the Flawless Block Attacks lesson because she has this staff move that's easily telegraphed.
It's easy to see.
In creating block pressure, we use Cassie because she has really good frame traps in her frame data.
Johnny Cage was taught to teach combo limitations and corner combos because he has an attack that launches without any meter cost.
Mike Beloponte did a fantastic job deciding what characters are going to teach what concepts.
He did an excellent job.
And there was also some back and forth we would have where I would give some written feedback after he would design a tutorial or a particular lesson and we'd kind of go I'd be like maybe we need to find a better gap here or maybe we need to find some better frame data or is there a better move and we'd kind of go to back to the drawing board on some of them.
But every single one was deliberate.
Again, shout out to Mike for that stuff.
When designing the character specific tutorials, what factors made it so a specific move or string made the cut for a tutorial session as opposed to others?
So we didn't talk about character specific tutorials much in this talk.
We didn't talk about them really at all.
And again, that's because they didn't change much from Injustice 2 to Injustice 2 Legendary Edition to Mortal Kombat 11.
But remember in MK11.
You kind of have these character loadouts where you can choose what moves go into your character loadout and you can exclude certain moves as well because of the ones that you're selecting.
So the character can play very differently depending on what moves you select.
That's kind of like the design of MK11, right?
Choose how you want to play.
That choose how you want to play in general makes it really difficult to teach all those permutations.
All the variations of a character would take ages for us to build.
So what we did put in the character-specific tutorials, though, was the base moveset.
So the base moveset of a character is what we taught because we knew that was going to be common no matter what variation for a character you were choosing.
Is there anything you would have liked to have included but could not fit?
Where would you like to go next to tutorials?
What are a few future developments to push for?
We kind of talked about this in the future slide, but I do want to adjust this directly.
There's tons of places we could take it with this new foundation, right?
We've built this very flexible structure.
And there's kind of all this stuff we can build on top now, which is really exciting.
We have a lot of things in the works for future titles.
We've already considered a lot about what we might teach next or what have you, what new tools we might build.
So you'll have to stay tuned for that in the future.
Again, so here's my contact information.
This is actually the end of the talk now.
Q&A session's over.
Feel free to reach out with feedback and any ideas if you have them.
I love talking about this subject.
I'm definitely most active on Twitter, so you can reach out to me there if you'd like.
And let's keep this conversation going.
Thanks for listening to my talk, and just keep on learning.
