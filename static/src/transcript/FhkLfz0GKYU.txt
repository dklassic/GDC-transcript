Hello!
Hello all, thank you for coming.
My name is Warren Davis, and 40 years ago this year, I made a little game with some help called Qbert.
And that is what I'm here to talk about.
It's very, especially lovely for me to be here at the 40th anniversary.
And if you don't know that much about me, which is very likely, I'm going to go through a little bit of my career in the world of video games.
After Qubit was my first game. After Qubit, I did a Laserdisc game for the same company, Gottlieb, called Us vs. Them.
I moved to Williams, and while I was there I worked on Joust 2.
Also did a Redemption game as a consultant called Lotto Fun.
which I'm sure you've never heard of, unless maybe you grew up on the Jersey Shore, and then you might've.
I worked for Premier Technology, which was an offshoot of Gottlieb after Gottlieb closed, and they decided to make a video game, and so that turned into an arcade game called Exterminator, which I could probably do a whole hour on in itself.
Fans of Exterminator?
Hard to believe.
I'm back at Williams and I worked on, I was on the teams that did Terminator 2 and Revolution X featuring Aerosmith.
Don't laugh, they were really in it.
And then the other thing that I'm sort of known for is I created the digitizing system that allowed actors to be digitized and put into all of the Williams Valley Midway games of the 90s.
And then I left the arcade industry and I worked for Disney Interactive for a while.
I was an Imagineer for four months.
I worked on the ill-fated...
And that's putting it kindly, Spyro, Enter the Dragonfly, another, that's probably a more interesting story than anything.
I worked on an edutainment product called the Lunar Explorer, which allowed you to circle and land on the moon.
using actual topographic data.
I worked for ILM for a while, actually, here in San Francisco, although I was based in Los Angeles, but I came up here every now and then.
And I'm currently a consultant, still a little bit working in the games industry.
But we are here not to talk about that.
We're talking about Qbert, shown here in its original thing.
Wow.
That's it.
I will speak on his behalf and say he is honored.
So the original arcade and next to it the cocktail version, which a lot of people don't realize there was a cocktail version.
I don't even know how many there were.
But let's talk a little bit about it.
The development of the game began in the spring of 1982.
So you know, 40 years ago.
It ended in the fall, the production began in October, that's when they started rolling off the production line.
And, you know, I am told, because I really didn't know, I had no interest back in the day of things like this.
I was just amazed that the game got made at all.
But there were about 25,000, and I'm getting that from Wikipedia, so it is suspect.
But I have no idea how many cocktails were built.
I do know that there are a few still floating around.
Anyway, before we get into the actual making of Cuba, a little bit of back story about Gottlieb, which is the company that I work for.
So Gottlieb, one of the original pinball manufacturers from the early 1900s.
Gottlieb Amusement Games is what they were known as when I worked there, originally known as D. Gottlieb and Company.
It was a family-owned maker of pinball machines since 1927.
It was purchased by Columbia Pictures in 1976.
The family sold the business.
It was also the last of the major pinball manufacturers to get into video games.
I'm not sure why that is, but other companies like Stern and Williams, they sort of saw that video games were a thing.
And I think Gottlieb held back and thought, ah, video games, that fad, it's not going to last.
But eventually they realized they had to get in the business, and so they licensed two Japanese games in the very late 1970s.
They were called No Man's Land and New York, New York.
Has anybody ever heard of these games?
Oh my God.
Well, you are special, and you know that.
But so, other than Van.
Nobody else has heard of these games, but it did get their feet wet and I think they started to realize, management started to realize, we've got to get into this, we've got to get into this business.
So they decided.
to start a video department.
And they put two guys in charge.
And the two guys they put in charge were Howie Rubin, VP of Business Development, and Ron Waxman, VP of Engineering.
Here's a picture of Howie.
This was taken actually in 2018 at the Pinball Expo in Illinois.
Here's a picture of Ron Waxman.
Of course, it's not actually him.
But I don't have a picture of Ron.
I have never seen a picture of Ron Waxman, just adds to his mystery.
But this picture is actually taken from a marquee in which Ron Waxman was the featured character, but we'll talk about that.
Anyway, upper management at Gottlieb decided, well, we don't want to start this department in our plant at Northlake where they make all the pinball machines.
much to the dismay of all the pinball designers who really thought they were going to get the chance, but they didn't.
They opened it up in Bensonville, about eight miles away, and they hired somebody who had a track record in video games.
This guy. He is Tim Skelly.
Tim was renowned...
Thank you. He was renowned as the designer of games like Star Castle, Rip Off, Armor Attack.
He was the rock star guru who came and he was going to show Gottlieb how to make video games.
He became sort of the de facto mentor to the department just because of his track record and the fact that nobody else really had one and had never made a game. He also would later give Qbert the nickname Noser.
But for now, this is him sitting upon his game Reactor.
So Reactor was the first game that Gottlieb produced in-house, designed by Tim.
So how do I come in the picture?
The question is how do you get a job making video games in 1982?
And the answer is you look in the newspaper in the want ads.
I'm hoping I don't have to explain to this crowd what a newspaper is.
And I won't go into the circumstances why I was looking for a job around Christmas of 1981, but I was.
And in the Chicago Tribune, I came upon this—this is literally the actual ad.
I hunted it down a couple years ago.
Gottlieb was looking for a job.
hardware software engineers to make video games.
And I couldn't believe it, honestly.
I always thought you had to be some kind of special person or you had to know people.
I just couldn't believe this was right in front of me.
So I actually sent in a cover letter and a resume and I got a response almost immediately.
So this happened right around Christmas, 1981.
I think I went in for my interview on January 2nd of 1982.
And this is the building.
This was the building.
It's a, this is of course a modern photo, so it is no longer Gottlieb, but it really hasn't changed very much.
I think it was more of a drab gray back then, but essentially the same building.
As I was walking in for my interview, this guy was sort of coming outside.
It was a very, like a round, large, round, rotund man with a very gruff voice.
And as I'm going in, he goes, are you here for an interview?
And I said, well, yeah, he goes, watch out for that waxman guy.
He's a real asshole.
So I took that with a grain of salt.
I thought it was a little odd going in.
And I was shown around.
I was shown the department by a very lovely gentleman named Bill Jacobs, who was a middle manager there.
I met the crew, met the people.
They were working on two different games at the time.
Other than Tim, who was working on Reactor, they were working on a pinball video hybrid called Caveman.
And they were also work that had like an Apple II based game called Quizimoto.
Caveman was released.
It was basically a pinball machine with a video monitor embedded.
Probably the first time that happened.
Anyway, so I was hired.
Oh, actually, let me tell you that.
So when I finally got to the interview part where I had to meet Waxman.
I go into this conference room and the guy comes in, Waxman comes in, and Waxman is the guy who said to me out in the parking lot, look out for that Waxman guy, he's a real asshole.
So I almost forgot the punchline of the story.
But that interview was really, it was really interesting because he was very, he's very gruff, like he sits there and he just, and he smokes a cigar, always had a cigar in his mouth.
And he'd be saying things like, what makes you think you can design a video game?
I don't know. I've never tried it before.
You have a computer at home? This is 1982.
Not a lot of people had computers at home.
No, I use them at work, so I didn't see a need to have one at home.
And all the questions were kind of like that.
They sort of presupposed that I had no right to be there.
So I left that interview thinking for sure.
I'm not getting this job.
So much to my surprise, I was offered a job and I took it.
And it turned out Ron Waxman was not that gruff guy at all.
It's just his persona.
And I just think he did that to mess with people.
But he was really a very warm hearted person once you got to know him.
Anyway, so here I am, I'm working for Gottlieb and we have a hardware.
They have developed hardware.
The engineer who developed this board was called, it was named Jun Yum.
And.
This was our major board.
It had, well let me go through the specs of it.
So it was based on an Intel 8088 CPU, 64 kilobytes of program memory.
Now you gotta realize, we programmed everything in assembler.
So we had to make things tight, but still, everything was assembler, was pretty tight anyway.
So 64 kilobytes, pretty standard at the time.
screen resolution of 256 by 240 pixels.
We had 64 foreground sprites and a sprite was 16 by 16 pixels.
The hardware took care of the display.
So as a programmer, it was very easy to put up, you know, you had sprites in your memory, they were indexed, so you just...
wrote into a foreground registry this index at this x and this y, and the hardware just put it there.
Very easy to write code for it.
The background was basically eight by eight pixel blocks.
So you had 32 by 30 blocks to fill the background, and a 16 color palette.
So you had 16 colors and each of those colors could be one of 32,768, which is basically five bits of red, green, and blue, 15-bit color.
And again, I think that was pretty standard for the arcade industry at the time.
As far as coding, for programmers out there, there was no operating system really.
We had a main loop, that was it.
So you did everything you needed to do that you wanted to get done in a 60th of a second, and then you called a V blank wait.
So you just waited for the screen to refresh.
If you could get all of that in there.
If you had too much going on, the screen missed the V blank and you had to wait till the next frame, which you didn't want.
Anyway.
So the same pinball soundboard was used for our video games, and we'll talk a little bit more about that later.
Had dip switches on the board.
The dip switch is used for things like free play, on and off.
Cocktail, remember I was talking about the cocktail table?
The cocktail table was interesting.
Players sit head to head, so between turns, the screen has to flip vertically.
So that was a dip switch setting.
The track mode had sound, but you could turn it off.
A lot of operators.
They didn't want the attract mode making noise for whatever reason, so that was a dip switch.
And in Qbert later on, the knocker was put on a dip switch.
So.
Operators can turn that off.
But what did we use as a development system?
Oh, wait, dip switch.
Oh yeah, I wanted to talk about the foreground and background switching.
So there was a mechanism in the hardware that if you set a bit on a certain memory location, it would flip the foreground and background.
Why, you ask?
What use could this possibly be?
We didn't know, they put it in there, and we tried to see if we could make use of it.
And as it turned out, we did.
And then finally, what did that say?
Oh, upside down, yeah, upside down, that was cocktail.
That's how we did the cocktail.
Enabled on the...
dip switch, and then programmed in software.
So, this was our development system.
It was called an MDS-80.
We called it the blue box, I think, for obvious reasons.
It was based on an in-circuit emulator, so there was a ribbon cable that came out, and the socket plugged into our board where the processor would normally go.
And that's what we would use.
And we had three of those when I started.
So we didn't have a lot of people.
It was a small team, maybe, I want to say like 12 people, actually, you know, hardware engineers, sound artists, not a lot of people.
And we only had three of these to share.
at first. We did have some art tools that had been programmed and basically they were so simple it was like a grid, like for foreground you'd have a 16 by 16 grid, you'd have a palette, you could pick your colors and then literally plop squares in the grid. And that's how artists would create the art. They were called Fogus for foreground and Bogus for background.
I did not name them.
So what was I doing?
So basically, they said to me when I was hired, you got to learn the system.
And we got a guy who's making a game.
His name was Tom Malinowski.
He was making a superhero game.
And they asked me to help him out, sort of learn the ropes, get my feet wet, which I did.
In this particular, so basically, it's a game based on Superman.
Superman 2, Superman battling the three Kryptonian villains.
Of course, we didn't get the license for that because that would cost money.
So it was just some generic superhero.
My contribution here was that you could knock the villains into the buildings and some rubble would spew out and land on the ground.
So I programmed the rubble.
And then when the rubble accumulated, we needed a way to get rid of it, so I programmed the bulldozer at the bottom of the screen.
Anyway, I mean, I had to do something.
But the funny thing about this game, it was never released.
It went through many iterations, went through many names.
For some reason, every time they changed something on it, they put it out on test with a different name.
So it was Protector, it was Video Man, then it was Guardian.
Inexplicably to me, then, the fourth one was Argus.
And it just kept going out and not testing well.
And so for me, I just started calling it ProVidGuard Argus, and to this day, that's what I call it.
But ironically, they released it.
Jeff Lee, the artist, and Tom Alanowski found some old ROMs, and a couple years ago, they actually released it.
So you can play this game in an arcade cabinet at the Galloping Ghost in Illinois.
Oh, and then the other name I forgot to mention was Waxman, because at one point they decided to replace the main character with a version of Ron Waxman.
And I'm not joking, that actually happened.
But it still did not test well.
All right, so now what?
I got my feet wet, I know the system.
Basically, management, and when I say management, I mean Ron and Howie said to me, make a game.
That was literally all I was told.
All right, well, I was walking down the office one day.
We had a big open area.
We didn't have individual offices.
We had just work tables and a big room.
And like I said, we shared those blue boxes that we only had three of.
And I was walking by, and this one programmer named Kanyabamoto, who is pretty much known for his game Mad Planets, if you've ever heard of that.
But Kahn was working, he was actually playing with that foreground background switching bit.
He just, he had a background image that looked like this.
So Jeff Lee created, I think it was literally six background blocks that you could repeat and fill the screen to make this thing.
And I was walking by and Kahn, this of course is background, but Kahn was using it.
as a foreground and then removing blocks to reveal the background, or reveal the foreground behind it, to what purpose, I don't know.
But I saw it and I just thought to myself, this is interesting because if something fell on a cube, on a single cube, it would have one of two ways to bounce, right?
It would bounce down to the right, down to the left.
And that's binary, zero or one.
And with seven rows of those cubes, which is what could fit on one of our screens, you could put the entire path of a ball in one byte.
So that's what occurred to me.
So I set about taking that full screen, shaping it like this.
And then I went to Jeff, and I asked him for a ball, a bouncing ball.
So basically, all I was looking to do was program randomness and gravity, is to learn how to do that.
The rubble in the previous game had no gravity.
If it fell, it just fell at a linear rate, which was very bizarre.
But.
I didn't know how to do gravity at the time.
It was not too hard.
But anyway, so it was just a programming exercise.
That's literally all it was.
Well, you know, once you've got that, then, you know, the question is, what do you want to do next?
And it occurred to me...
Oh, I should mention also, and I'll show you this later, but the random number generator I used, I got from Tim Skelly, but we'll talk about that in a minute.
The third thing, obviously, well, if this is working and people are looking at it and they're saying, this is pretty cool, the ball's bouncing down, maybe I should have a player character that jumps all over the screen.
So that was my next thing.
So I went to Jeff, I said, do you have some art, some character I can use?
And he put a bunch of characters up on the screen on his development system.
I think they were pretty much the characters that ultimately went into Q-Bert, but they just were random characters at the time.
And I saw this round one, long nose, looked kind of pathetic.
And I thought, that's the one I want.
So I asked him to give me all the angles I needed, looking up, looking down, jumping, and all that stuff.
And he gave me that.
So the next thing was, I had a player character jumping around the pyramid.
Now, Jeff designed that character with a long nose because his intention was he would shoot stuff out of his nose.
But that was way too complicated.
This is my first game.
I really wasn't interested in that.
So I sort of nixed that idea, and I was just like, let me just get the guy jumping.
So I did.
After that, things just started happening just naturally, I want to say.
I've always said that the design of Q-Bert was evolutionary in that.
I programmed something, and then I sort of decided, what do I want to program next?
Nothing was really thought about in advance.
Everything happened one step at a time.
So, you know, I thought, okay, well, the player's jumping around the pyramid, there are balls, he needs to collide with the balls.
The balls need to be dangerous, you know?
And then the whole thing about having him fall off, that was a little bit of a controversial issue.
It seemed natural to me that the player should avoid jumping off the pyramid.
Some people said, no, it makes it too hard.
And I sort of stuck to my guns on that.
But the nice thing about the jumping off the pyramid, I don't know if you've ever noticed this, but what happens when he jumps off the pyramid is I use that bit and I switch the foreground and background so he actually falls behind the pyramid.
And yay, that thing was of use.
Um, okay, so, it's still not a game though.
It's just, you know, it's a guy jumping around a pyramid and balls.
He's trying to avoid balls.
So one night, I'm working late and I'm just sort of having jumping around, just looking for some kind of inspiration or think of what I might want to do next.
And Waxman had this habit of sitting like in the room, in our workroom while we were working.
And sometimes he'd like sit behind you.
And it was very unnerving because, you know, you're there, you're working, you're trying to do whatever you're trying to do.
He's just sitting behind you smoking his cigar.
You know, you can hear him breathing like Darth Vader or somebody.
And.
I'm jumping around, just sort of playing the game, and out of nowhere he just says, uh, what if the cubes change color when he lands on them?
I thought, yeah!
That's a great idea.
And I will say this about Qbert.
It was my first game.
I was not so arrogant as to think I had all the answers.
I was happy to listen to anybody's suggestions.
And believe me, people gave me a lot of suggestions that I did not take.
But I was the one who had to implement them.
So if somebody gave me a suggestion and it sounded right, I was like, awesome.
So that was a great suggestion.
I took it.
That's when it became a game.
And honestly, the rest of it sort of happened fairly quickly.
In fact, there's a story that Howie Rubin likes to tell, where he didn't know anything about what was going on.
And he went to Japan for a business trip.
He came back two weeks later, and the game was completely done.
In his mind, that's what happens.
Like, it didn't exist, and then two weeks later, it was completely done.
Not quite true.
But anyway, my goal, because it was my first game, was to keep it simple.
But all of these things happened pretty much in succession.
So we need a bad guy.
We need somebody to chase him.
He needs a way to jump off the pyramid and not die.
Slick and Sam, these characters fall down and just thwart his goal.
That just seemed, again, like a pretty obvious thing.
Ugg and wrong way, okay, these guys come up with a different axis of gravity.
This was Jeff Lee's idea, and I hated it.
And I hated it because I couldn't figure out how to do it.
And I said, no, I can't, it's too hard.
Remember that we're in an environment where Speed is important, tightness of code is important, it's all in assembler, we have no floating point arithmetic, it's all integer arithmetic.
I didn't know how I was gonna do that.
And I said no, and then it just nodded me for like days and days and days.
And eventually I figured it out.
I just, it like came to me and I thought, wait a minute, I think I can do that.
So, Ugg and Wrongway got in the game.
And of course, the green ball is another feature.
It was an interesting dynamic of the way we worked together.
Jeff was the only artist working on the game.
He was my constant sounding board.
He contributed so many ideas.
I consider him a co-creator.
It was my responsibility to make the game.
That was just the way Gottlieb worked.
So at Gottlieb, the programmers were considered the designers.
because they programmed it.
And if they didn't program something, it didn't go in.
But Jeff was incredibly valuable and had fantastic ideas.
And we were very simpatico.
We sort of had the same sensibilities.
Anyway, programming concerns.
So there were some programming concerns going into this.
And the first one is memory limitation.
I said we only had 64 kilobytes of program memory, but this really wasn't a problem because I didn't find myself bloating my code.
I was a pretty good type programmer anyway, so that was something I had to be cautious about, but it didn't really become a problem.
But speed, that was a problem.
We really couldn't do, even things like square root.
So let's talk about collision detection a little bit.
Well, first let's talk about random number generation.
This is a sample to talk about cycle counting, because that's something we used to do.
We knew how many cycles, machine cycles, every instruction would take.
And so, when we made a loop or something, or we had any routine, we had to literally count the cycles to make sure it was as small and tight as it could possibly be.
So this is a random number generator, and basically what's happening is, you're taking a seed, actually pseudo-random, you're taking a seed, you are doing some shifts, and whether you're shifting a bit around, but whether it's a one or a zero depends on what a couple of other bits are when you XOR them together.
I think, I don't remember.
Anyway, but it was a really interesting thing, and I got this from Tim Skelly.
Tim was, I can't say enough about Tim.
He was just the most generous guy.
It wasn't his job to be our mentor at all.
He was job to make a game, but he did.
He was just very kind and generous with all of us.
Yeah, so then the other thing, the other concern, I guess, collision detection.
It's not obvious how you're going to make these things collide, because it is a pseudo 3D space.
But in reality, it is a 2D space.
So you've got a ball, and you've got Qbert.
And they really, you know, they're just 2D sprites.
Now, our hardware did have a sort of a Z component, so based on which register a foreground image was in, it would appear on top of or behind another image.
But in order to really do the collision detection, right now, the simplest thing and the fastest thing is you just do a distance check.
And you don't even do the square root.
You just do x squared plus y squared.
And you figure out r squared, how close they can be without colliding.
But what I figured out to do in this case was I had to take into account the velocity that they were moving at, if they were moving.
So, for example, if the ball, the ball would jump up and down.
So based on whether it was going up, if it was going up and Q-Bert was going up, even if they overlapped, it wasn't a collision.
So that's the kind of thing, you know, if they were coming at each other, yes, that would be a collision.
You get the idea.
So that was really a challenge to work out.
When UG and wrong way came into the picture, that was even more of a challenge to make it, you know, it's really important to make it seem fair.
You don't want these collisions to feel unfair.
That would be extremely bad.
And I haven't looked at the code in years to see what I did to handle the UG and wrong way problem because I'm afraid to.
So, in the middle, so here we are in Bensonville, and by the way, Bensonville has a manufacturing plant.
It's a massive manufacturing plant, which has been completely empty, because until they started making reactor, which was months after I got hired, there was nothing to produce.
So we had a huge empty plant.
In the middle of the day, Howie Rubin would come into the offices and go, everybody, stop working.
We're going into the plant to play football.
And we had to stop working and go in the plant and pay for it.
And we wanted to work.
We were not football players.
But for some reason, upper management decided about halfway through the development of Qbert that they wanted to move the video department into the main plant in North Lake, Illinois.
And they kind of botched it because they didn't they didn't get us together, there was no mixer, there were no introductions.
Literally one day we just showed up at this new place and we had a beautiful big area, we all had our own cubicles, some people had offices around the rim and then we loved pinball and we thought the pinball guys were amazing.
The designers, we admired them tremendously but they did not admire us.
So we came to work one day and got all these stink eye.
It's like, why those guys?
Why do they hate us?
Anyway, but we did move in, and we had offices at the main plant.
And this thing here is the only picture that I have from those days.
And I will say this.
I don't think any of us thought what we were doing.
meant anything.
We thought what we were making was disposable entertainment.
Six months later, it'd be off to the next game.
People would forget this game.
So I did not document anything I did because I just didn't see the importance of it.
But this is the only photograph that I have of myself while I was developing Kubrick.
So interesting things to say.
Here's the blue, but you can see the blue box there behind me.
ribbon cable, the hardware's just sitting out.
This thing is interesting here.
This is a Tupperware bucket that is upside down.
with a joystick mounted on it.
And I can't stress the amount of grief I got for that joystick.
Now, I mean, if you look at the play field, it seems absolutely obvious to me that you only have four possible directions to go and they are diagonal.
But people would walk up and straighten out that bucket so that it was up, down, left, right, and then they'd be like, I don't understand why I'm dying.
I don't understand why it's not working.
Well, you have to be at 45 degree angle.
What?
They could not handle it.
I got a lot of pressure to make it up, down, left, right.
Just strangely.
Let's see, what else is interesting in here?
Oh, right.
So eventually.
Around this time, all of our development systems were replaced with an IBM PC.
The original IBM PC, which I don't know if you are aware, the original IBM PC had no hard disk.
It had a floppy disk.
These had 8-inch floppy disks.
The IBM PC had 5 1⁄4-inch, and they held a whopping 180K.
and then they came out with double-sided ones that had 360K, and then eventually we got our first one megabyte hard drive.
And oh my God, we thought, we never need any storage again.
One megabyte.
How are you ever gonna fill one megabyte?
All right, you're laughing, but that's what it was.
Anyway, that was a picture of me.
Here's a picture of Jeff Lee.
That is Jeff Lee, although obviously it's a comic or cartoon version.
This is taken from the flyer for Us Versus Them, which is actually the second game that I did for Gottlieb.
But this is the actual Jeff Lee, back in the day, taken from a video.
It's a still from a video.
I shot some behind the scenes video, which I would show, except it's horribly embarrassing.
And so I don't show it.
But...
When I'm gone, somebody will unearth it.
Anyway, interesting thing here is on the thing, Chris Brewer was one of our programmers and also did art as well, very talented.
And he made a calendar, he made a Cubert calendar.
He also made a thing called the Cubert Coloring Book, which had different characters, like Jacques Cousteau with Qs, you know.
Anyway.
Let's move on.
So moving on, sound.
So basically, you've met me, you've met Jeff, but the third member of our team is the guy who did all of the sound and the speech, and that is Dave Thiel.
Here's a picture of Dave Thiel.
This was taken in the late 80s at a trade show.
And I'm sure he would kill me if he knew I was showing this.
Now Dave was, again, not as active a member of the team, but indispensable.
And because, again, I was not arrogant about the game design, I gave him much free reign, as I did Jeff, to be creative and come up with things.
So I do remember asking him for one particular sound, and that is when Kubrick jumps off the pyramid.
uhhhhhhhhhhhhhhhh.
I did ask him for that, which he delivered, but everything else was his invention.
And the thing, of course, he's most known for is Kubert's speech.
So how did that come about?
Well, this is the pinball soundboard that we used.
And you see where that arrow is, that yellow arrow, it's pointing to a chip called the Votrax chip.
This was a chip that produces human phonemes.
Human, like, you know, phoneme, everybody knows what a phoneme is, right?
B-V, you know, and you string them together and you can get speech.
Well, it's horribly monotonous and robot-like and does not sound good at all.
And Dave just hated this chip and he hated using it.
He had to get things, for pinball machines, he had to use it to get, say, things like bonus.
And it just sounded like bogus all the time.
So he hated this, but he had the genius idea to throw random numbers at that chip.
and that is Qbert's speech. It's literally random phonemes. So people say all the time, you know, is Qbert cursing? And I go, he might be, because you put two, you put the right two phonemes together and he is cursing, but it's not programmed at all. It's just random. The only things that Qbert says, actual English, is when you turn the power switch on, he says, hello, I'm turned on.
And then when you put your initials in the high score table, thank you very much, put your initials in the high score table, he says, bye-bye.
So yeah, anyway, that's the story of the sounds. Now, naming him, I mean, all the way through this, I did not give the character a name. I did not give any character's name.
Keep in mind, I'm just trying to make a game. I don't even know what I'm doing.
This is some code, this is code from the original game, and I don't know if you can see it, maybe you can't see it, but you will not see the name Qbert anywhere.
You will not see anybody's names because they didn't exist.
The player was called P-L-Y-R, player, that's the only reference.
The game itself is called Cubes, everything just says Cubes.
Coily was called Chaser, C-H-S-R, in the code, because I had no games.
Well, obviously, the game needed a name, and the character needed a name, and I think everybody, everybody agreed that the character name should be the name of the game.
That was just something, everybody just had a feeling that's what it should be.
So, actually, let me go to the next slide.
So this is, I think this is from, and again, I don't know if you can see it or not, this is from Faster, Harder, More Challenging Qbert, and I can't even see it from here, but you'll see that there are references to Coily and Qbert in there, because that was after the original game.
So Jeff was really good at naming things.
So I let Jeff come up with names.
So he came up with names like Ug and Wrong Way and Slick and Sam, which was a twist on Spick and Span.
And I was just happy.
I was thrilled, because I did not want that burden of having to name these characters.
But when it came to the main character, the player character, it was like, what are we going to do?
And Howie had an idea.
Howie Rubin, our head of business development, had a great idea.
He was like, let's call it the swearing balloon.
And we were like, what?
He's like, yeah, let's call it that.
Well, Howie, how are you going to pronounce that?
Well, you know what?
If this game is as good as I think it is, people will find a way.
And we were like, Howie, you're insane.
But Howie insisted on putting the game out on test with these marquees.
And then there's a handful, well, you might have all seen them, but back in the day, there were, I think, like a dozen of these marquees made for the game to be out on test with it.
And we just thought he was nuts.
But, you know, I think he eventually realized the error of his ways.
It was probably not a smart idea.
So, what are we gonna do?
Well, I went around the office with a pad of paper, you know, notepad, and I polled everybody in the office.
Got any ideas for the name of the game?
I took everybody's suggestions.
I had a sheet of about 50 names, and they were all terrible.
I didn't like any of them.
I only remember one from that.
I wish I had that list, but I only remember one that was Arnie Aardvark.
Am I like, meh, no.
Anyway.
Howie also had an idea of calling the game Why Me?
But you know what?
We needed a name for the character.
So we had a meeting.
And I will never forget this meeting.
It was at least two hours, but it felt like an entire day.
There were probably about 10 people sitting around the conference room.
Middle managers was me, Jeff Lee, Ron, Howie, Rich Tracy was the art director for Gottlieb.
There were some middle managers.
all just sitting around trying to figure out what are we going to call this and it just went on and on and we're getting nowhere and you know it's exhausting it's exhausting to be in a meeting where you're just feeling like this is never going to work and then you know we're all ready to give up and um somebody I don't remember who it was somebody walks up to the the whiteboard and writes Hubert and we're like Hubert what's like why what's Hubert got to do with anything it's like I don't know You know, you got anything better?
It's a cute name.
And then somebody goes, wait a minute, wait a minute.
And somebody else went up, and they erased the H, and they put a C. It's like, wait a minute, because cubes.
It's got cube in it.
Ooh, wait a minute.
And everybody, you could feel like an energy start in the room, you know?
It's like electric.
And then somebody else goes up, and they put a Q instead of the CU.
And we're like.
I mean, it's like everybody's giddy.
It's like, you know, it's like everybody's like two years old or something.
And then, and then I think, I think it was Jeff Lee, but it might have been Rich Trace.
It goes up and they change the dash to an asterisk and everybody just leaps out of their seats.
And they're like, yes, yes, we found it.
Actually, that may not have happened.
I may be exaggerating.
But it felt that way, it felt that way.
But seriously, that's how it happened.
It was just that we were in a meeting, and we had that, we finally came to that name.
And literally though, it is true, everybody just agreed on it.
It was like everybody knew it was right.
The knocker, so the knocker is a really interesting feature.
Sorry, I'm just curious how I'm doing on time here.
Am I good?
The knocker is an interesting feature.
People love this feature, and so do I.
But there's a little caveat to it in that I know that it could have been much better than it was, and I'll explain.
The knocker, if you aren't aware, it's a little device that you find in pinball machines.
It actually just, it's a piston.
It just knocks the wood on the side of the machine to make a knock sound.
And one of our engineering technicians came to me one day and said, you know, what do you think of the idea of having a knocker in the cabinet so when he falls off the pyramid, it's like he lands on the bottom?
And I said, that's genius. I love that.
So we tried it. We put it in.
But, you know, the knock seemed wrong.
It's like, you know, if a body lands in the bottom of a cabinet, it should be a thud, right?
It shouldn't be a knock.
So we sort of brainstormed, tried a few things, and what we came up with, we came up with a solution where if you took a little piece of foam where the piston hits the wood, just to soften that sound a little bit, it just worked perfectly. I mean, it literally sounded like a FUD, something like a sack of potatoes hitting the bottom of the cabinet.
So we went to management, we told them about this, this is what we want, and they were like, well, we could put the knocker in, but the foam, it's going to cost like an extra $15 per cabinet, just in labor, to get somebody to go in and position it and glue it. Like, we're not going to do that. So they put the knocker in, but I know how much better it could have been. And I do recommend for people to do that if you have a cupid cabinet at home.
All right, so the game started to feel complete.
We're getting on into the late summer of 1982, and all the features were in I thought needed.
And it really was just about tuning at this point.
And of course, I have no experience, so I don't know what I'm doing.
And I've been listening to the people in the office, because basically there are three ways that you do testing and tuning.
Here we go.
There we go.
So in-house testing, which basically when the people you work with come by and play.
So that's been happening all along.
But people have been telling me it's too hard from the get-go.
So I've been slowing it down.
I've been trying to make it easier.
It's just so, you know, to satisfy the people in the office.
The second thing is location testing, which is something in the arcade industry we would do.
We would take the cabinets, we'd put them into the arcades.
We usually had an agreement with a particular arcade, and then they would collect the money, they'd report their coin earnings to us.
and then they would maintain it for us.
Now the reason that was important was because, see we're a manufacturer, Gottlieb made the games.
They made their money off of selling the actual games.
They didn't make money if people put quarters in.
But the people we sold to, distributors, they made their money based on people putting quarters in.
So it behooved us to have coin data that let them know this was gonna earn money.
So that's pretty much how it worked.
And Qbert went out into local arcades, and it did well.
It earned money.
It was very successful in that regard.
But I would watch people play.
I'd go to the arcade, and I'll never forget.
There was this little girl.
She might have been 12.
She came up to the Qbert cabinet.
She put her quarter in it, and she immediately just jumps right off the pyramid.
Like, all right, give her a second.
She might get it.
Second life, boom, jumps right off the pyramid.
Third life, boom, jumps right off the pyramid.
I'm like, OK, this is not good.
And she walks away.
And then other people are coming by.
But later, she came back, and she watched other people play it, and she went back to it.
And this time, she didn't fall off the pyramid.
So I was a little heartened by that, but I was very, very nervous.
I really, you know.
thought I had made some huge error.
Anyway, the third way that we got information was focus groups.
You know, you'd go to the mall and you'd say, hey, I'll give you 20 bucks if you come to this thing and try this video game out.
And we were behind the one-way glass watching.
And the thing I learned about focus groups, and I've done this a number of times throughout my career, not only for arcade games, but for home games, what people say and the way they behave while they're playing.
Two completely different things.
You can see people playing and they're getting into it and they really look like they're enjoying it.
And then you ask them about it after, and they're like, yeah, it's okay.
So I've always learned to really action, speak louder than words.
I would recommend that.
But I have to say, I did tune it easier.
Management sort of pressured me.
They just felt it was too hard, it was too challenging.
A lot of people couldn't wrap their brains around it.
But fall of 1982, October of 1982, Q-Bert started rolling off the production line.
The first public real exposure to Qbert was at the trade show.
We had an industry trade show in the fall in November of 1982 called the AMOA.
Big big trade show for the coin op industry and Gottlieb went there, brought Qbert there, it was a big big deal, got a lot of press.
So this is one of the.
trade magazines that covered the press. This is the following January, all these pictures came out, but here's what's interesting about this one picture I think is hysterical.
This Gottlieb's new Qubit game is the center of attraction as from left designer Jun-Yum, well he was the hardware designer, wasn't the game designer, then Gottlieb president Boyd Brown, of course they got him right, he's the president of the company.
and programmers Warren Davis and Howard Rubin, how he's not a programmer, how he's the VP of business.
So, you know, I learned again early in my career that don't trust everything you read because they get it wrong.
But here's something they didn't get wrong.
People judged Q-Bert, and they made a list of their picks of the show, and a lot of people put Q-Bert at the top of their list.
It was really felt like it was gonna be a huge hit, and it was.
I think what's most interesting about this is Popeye is number two.
I don't know, does anybody remember the Popeye arcade game?
I mean, you don't hear about it that much, but it was also, you know.
Anyway.
On to the next thing.
So post-release problems.
So it wasn't too long after the game was out that I started to get reports back, isolated reports, that people were playing for a very long time on a single quarter.
And that's, you know, you don't want that.
You don't want somebody to be on a machine because then other people aren't playing it and they're not, thank you.
They're not, you know, the operators of the arcades aren't happy, the distributors aren't happy.
So I started to doubt that the game was tuned well and I immediately set out to rectify that.
So.
And also, by the way, I should mention that there's a little secret in the tuning of the original Q-Bert.
If you notice, there are nine levels. There's a single-digit level.
Every four rounds is a new level. And it goes from one through nine, then it stays at nine.
The secret is, the tuning does not change after level five.
So levels five, six, seven, eight, and nine are literally the exact same tuning tables.
Because I never imagined that anybody would get that far.
I couldn't get that far.
Nobody in the office could get that far.
That's why I was so freaked out when people were getting that far.
So what were the problems?
The problems were.
It's too slow.
The very beginning, even today, when I play the original Qbert, I feel like he's floating from cube to cube.
It just feels very slow to me.
It's too easy.
Again, it's just my thought.
People were picking it up.
And it's not challenging enough.
So how do you rectify that?
Well, it's really very simple.
You make it faster, harder, and more challenging.
So that's what I set out to do.
And then, like, two months later, I had faster, harder, more challenging Qbert.
So this game was different from the original Qbert.
I didn't want to call it Super Qbert or Qbert 2.
And it really wasn't a radical change.
It was more of a restructuring and a re-leveling.
Has anybody here ever played it?
No, oh, a few people.
The thing is, it was never released because they put it out on test right next to the original Qubert when people were still learning Qubert.
So obviously, it did not test well.
My thought was they'd hold onto it maybe a few months down the road, they'd release it, but they did not.
And it stayed unreleased for many years until 1997 when I was working at Disney and I met people who were involved in the MAME project and they had emulated Gottlieb's hardware so I just released the ROMs to them.
and it's been out in the public eye since 1997.
Anyway, you might notice here that it says Milestar instead of Gottlieb, and that's because there was a point after Qbert actually was released that Gottlieb decided to change their names.
Gottlieb was owned by Columbia.
Columbia was bought by Coca-Cola, so we had this big corporate overlord.
And I remember the day they came in with a big cardboard sign that was covered with a sheet.
It was an all-hands meeting.
President of the company, Boyd Brown, is so proud.
He comes over and he goes.
I want to announce the new name of our company.
And he pulls the sheet down and there's the logo.
Milestar Electronics.
And the first thing I said out loud, I don't think I knew I was saying it out loud.
I said, does anybody know that's rat slime spelled backwards?
And Boyd Brown was not amused.
But that's a true story.
And because they paid some consultant like $200,000 to come up with some cool name.
It's like, didn't even think of what it spells backwards?
Come on.
Faster, Harder, More Challenging Qbert had some things like it had a bonus round where like a million Slicks and Sams fall and you just got to grab as many as you can.
The levels were completely retuned.
So when you jump on squares.
rather than every level to get harder, every round it gets harder.
And there's a whole lot of other things like that.
But let's talk about the aftermath of Qubit.
So Qubit came out, it turns out it was a success.
Who knew?
It was actually incredibly popular.
There was an article in Video Games Magazine from a guy named Neil Tesser, where he covered Joust and Qbert.
And the interesting thing was Joust was a Williams game, John Newcomer designed it, Bill Futson Reuter was the programmer, but they named John Newcomer, Bill Futson Reuter, Eugene Jarvis got named, but they wouldn't name us.
So I was D. Ziner. That was me. I had a code name because Gottlieb would not let them use my name.
Jeff was R. Teast. That was Jeff. Very punny, huh? And then Dave Thiel was J. Walkman.
So I don't know where that came from.
After that, we sort of pressured Gottlieb to ease up on their secrecy.
You know, obviously, we knew why.
There was a lot of poaching going on in the industry.
They didn't want us to be known.
But they relented.
And faster, harder, more challenging Qubit actually has a credits page.
So we are credited.
And I didn't credit myself as designer, even though that was technically my role, because I really felt like it was a team effort.
All of us owned that game.
So, let's see, a little, just a, I'm going to very quickly run through a lot of this, some of the press that Kubrick got, because it really was everywhere in 1983.
In trade magazines, this is USA Today, that kind of blew me away, mainstream kind of stuff.
Of course, video game magazines is on the cover.
John Cougar, John Cougar mailing cam, hanging out on a QBert.
My God, you know?
This is a Japanese flyer.
The New Yorker, the New Yorker magazine talking about QBert.
And Glamour, Glamour magazine.
So yeah, I was like stunned.
Of course, I was completely anonymous.
You know, I didn't even know how to.
handle what I was seeing.
But I was just very content to sort of like be in the background and watch the success of the game.
Then there were contests where they gave away Cuber cabinets.
This is kind of interesting because the marketing department really jumped on the licensing.
There were Qbert products everywhere.
You can see here, yeah, I mean, I could just go on and on.
There was a special version that management asked us to make that featured Mellow Yellow.
So we actually had a Mellow Yellow can, and if you remember the slide from the bonus round of Faster, Harder, More Challenging Qbert, we basically turned that cup into a Mellow Yellow can.
And somebody won this version. I think I heard from that person, but really interesting. Of course, there was a Saturday morning cartoon Anybody remember this Wow You can bring it down, yeah.
Yeah, this astonished us.
I think Jeff, Jeff Lee and I, we got a lot of what are those guys smoking comments when Qbert came out.
But when this came out, I was like what are those guys smoking?
But, you know, listen, it is what it is.
All right, I'm just gonna finish up here.
You know, this is where the ports came out.
And of course, Qbert moved on.
They asked me if I wanted to do a sequel after Faster, Harder, More Challenging, but I didn't.
I wanted to move on and do other things with my life.
But a guy named Neil Bernstein came to me and said, I've got this idea for a Qbert sequel, do you mind?
And I said, no, please, have at it.
So he made a game called Qbert's Cubes.
That was an arcade game that Gottlieb actually released.
There was a pinball game called Qbert's Quest.
And Qbert didn't quite go away.
There was a little bit of a lull.
But then Qbert 3 came out for the Super Nintendo, Game Boy.
again in the 90s.
There's another little story, ironically involving the GDC.
I was at a GDC here.
I was working for Disney Interactive at the time, but I was at a GDC in the late 90s.
I think it was 97, 98.
And I ran into people from Sony.
Sony obviously, well, I shouldn't say obviously.
Sony, okay, so Gottlieb was bought by Columbia Pictures, which was bought by Coca-Cola.
Coca-Cola got rid of Gottlieb and shut it down.
Columbia Pictures was the owner.
Columbia was bought by Sony.
So in the 90s, Sony owned the rights to Qbert.
And I ran into some guys from Sony Computer Entertainment of America, the games division, and I said, you know, there's a lot of nostalgia coming up in the 90s here.
There was a lot of nostalgia for old video games.
How come you're not doing anything with Qbert?
Because they owned the rights.
I never made any money off of it or anything.
How come you're not doing anything?
They said, what do you mean?
And I said, well, you own the rights to Qbert.
They were like, we own the rights to Qbert?
And they're like writing notes down, and they're calling people on the phone.
They didn't know that they owned the rights to Qbert, which until recently, I thought the same thing was going on in recent years.
Anyway, a year later, Hasbro Interactive came out with this version of Qubit.
So, and then in, oops, wait, I went backwards, sorry.
In more recent times, you've got this Qubit reboot, it was a few years ago, and then of course, you've got the movies, Wreck-It Ralph and Pixels.
I'm very astonished and sad that his nose has become flaccid.
I know he is getting old, but...
And I did talk a little bit about Milestar.
They went on, had some success, but they closed their doors eventually.
And then this is a picture of the three of us, the QBert team.
This was in 2016, I believe.
The first time the three of us had gotten together, and it was a surprise.
Jeff, I flew into Chicago, and Dave Thiel was there, but he didn't know I was coming, and Jeff drove me up, and we had a little reunion.
And then a couple of years later, we actually.
We were on a stage together for the first time in 30 some odd years at the Pinball Expo 2018, I think it was.
I just want to make very, very quickly, I've written a book, if you enjoy these stories.
I have many other stories that I tell about my entire arcade game career.
It's available wherever finer books are sold online.
And this is a cool thing. These cabinets you're looking at are 11 inches tall.
New Wave Toys makes these amazing replicas of games.
And the thing is, this one over here is a perfect replica of the Cuber cabinet I have.
I'm told I'm out of time.
I'm gonna leave you with this one final image to horrify your nightmares.
Thank you, thank you so, so much for coming.
I had a wonderful time.
Thank you, everybody.
