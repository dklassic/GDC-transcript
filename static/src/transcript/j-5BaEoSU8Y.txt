Let's start off this talk.
My name is Casey, and this talk is called Slate Aspire, Success Through Marketability.
And this is a presentation about our journey and how our team found and kept up the success for Slate Aspire.
This talk is kind of like a post-mortem and also a general information kind of thing for how we approached our three year development cycle.
I don't think it's too technical, and so it should be easy to understand for everybody.
If the practices that I describe in this talk don't apply to your game, I hope that at least you'll get a good insight into how and why games like Slay the Spire work out.
All right.
Did I go?
Next.
Next, okay.
So first a little bit about myself.
My name is Casey Yano, and I worked with Anthony Giovannetti, and the two of us formed MegaCrate Games.
We made one game through MegaCrate Games, and that's Slay the Spire.
There's our developer email address if you want to contact us for whatever reasons, you know, inquiries, if you want any advice, or you want to grab a cup of coffee.
A little bit of background about us in general is that back in our early college days, Anthony and I were inspired by the success of a few very small game development studios.
There were games like Cave Story, Aquaria, Untitled Story, and there were a bunch of other Flash games that were generally made by solo developers.
So we were inspired to make our own video game, and we formed a company called Pew Pew Inc., and we released two games over the course of a few months.
I think it was one summer, maybe like sophomore year of college, and these games didn't do very well.
So we took a break from making video games for a bit.
We kind of finished up college, and then we kind of went our separate ways and found jobs in the software industry.
Out of college, I worked as a Q engineer at a place called Amazon.com, that some of you may have heard of.
And I worked there for, I wrote four years on my slides.
It was actually five years.
I was a contractor for one year, and I was full-time for four years.
And Anthony, who went a separate way.
also worked as a QA, but at a different company.
And we never really talked about it, but it's very interesting that we both kind of ended up doing the same thing.
While working at Amazon, I tinkered on and off with some more game development on the side.
I guess I always wanted to make video games, but at the time at Amazon, there was a kind of restrictive game development policy.
And the company had this kind of gray area, and a lot of the developers that wanted to make games there, as like a hobby, we're kind of demoralized, and it was kind of strange.
And so a few years of this, of like tinkering with games, but not really know if I can publish it.
Kind of grew tired and bored of my job, so I just kind of quit, and then I reconnected with Anthony.
I was like, Anthony, what are you up to?
And he was like, I work at this company, and I want to make video games, but I'm working now, so I can't.
And so I'm like, okay, well, I quit my job.
And he was like, why?
And I said, well I want to make video games, what do you think, we're crazy people.
So, you know, and we started working on our third game, Slay This Fire.
The picture you see up on these slides, over here.
Oh, now I'm on the same slide, okay.
This is from our Flash game, our first Flash game.
I think it was like, our resolution was like 600 by 600.
That's our logo, and then screenshot of the game.
It was a Flash game shoot-em-up called God Laser.
It was really cool.
It got maybe.
10,000 views or plays or whatever metrics Flash games used back then.
And that was on like Congregate and a few other Flash game portals.
We also made a 99 cent iOS game that got about 200 downloads.
And that was on the Apple Store.
We also started working on a third game. It was a rhythm game.
Except that was never completed because...
I think it didn't work out with their musician or the performance wasn't good.
There's all sorts of small reasons.
While it is interesting to talk about these older projects, I think the gaming landscape has changed quite a bit since then.
And so this talk will mostly just focus on Slate Aspire.
Okay, so what's Slate Aspire?
It's actually quite difficult to explain what Slate Aspire is.
And this is kind of gonna be like a recurring theme for this talk.
Just so you can experience it, our elevator pitch slash short description on our Steam store page kinda goes like this.
It says, we fused card games and roguelikes together to make the best single-player deck builder we could.
Craft a unique deck, encounter bizarre creatures, discover relics of immense power, and slay this fire.
Anyone know what the game is?
I mean, I guess if you come to this talk, you know what the game is.
But there's actually a lot of complex mechanics and words that if you're not used to them, you wouldn't understand.
And right, it's like, what's a rogue like?
Why are you fusing them with card games?
And what's a deck builder?
And why is a card game single player?
There was a bunch of questions like this.
And I think that was going to be a start of a few problems in the beginning.
However.
Our game was released on Steam Early Access on November 14, 2017, and then we reached full release just two years ago.
So we finished the game, and to date we've sold over 1.5 million copies, and so it's been about 7,500 times more popular than our iOS game, which is good.
So this is a screenshot of a game at a user score of 99%, which is incredible.
And it's something that's like, to me as a developer, it's something I'm very proud of.
I think even if a game doesn't sell well, a good user score alludes that the developer's very conscious of what their player base wants and needs.
And I think that's something we should all strive for.
I think this philosophy on game development differs from most studios.
Negative user reviews.
you know, are things that happen because players feel that they can't talk to the developers, or they can't reach the developers, and so it's kind of a way to like, email the developers and complain, because if they feel like they're not responding, then that's the only way they can get to them.
As someone who always reads reviews before making any and all purchases, whether it's like Steam or Amazon.com, I felt that making games or any product successful in the long run should have a heavy emphasis on customer feedback loops and maintaining proper expectations.
At Amazon there's a principle called customer obsession and while I don't agree with everything that Amazon did, it is the only company I ever worked for and so I suppose some of these principles have been kind of like nailed into my psyche.
All right, so back in 2015, around the time I started working on A Sight of Spire, I decided to approach game development a lot more seriously and with more discipline than our previous games because, you know, they failed.
So I read up a lot of articles every single day, and this was while I was working on the game, and just have a good baseline and understanding of game development, what's going on in the game development world, and just get as much perspectives as possible.
Many articles during this time that got the spotlight was about marketing.
So like a basic definition, it's like marketing refers to the activities of a company associated with buying and selling a product or service.
It includes advertising, selling and delivering products to people.
And why I crossed out the selling and delivering portion was because Anthony and I initially thought, well...
We'll sell the game on Steam and then we'll deliver the game over the internet.
So, in the context of this definition, I think that marketing was about advertising your game.
Getting the game known, heard, making the game look appealing so that players will eventually buy the game.
For those of you who are trying to sell your game outside of Steam, such as your own website or the new stores that are coming up, I think it's possible.
I'm not quite sure how that works, but good luck.
You know, like Minecraft did it, and Escape from Tarkov is also succeeding.
So, but I don't have too much advice on that.
All right, just for some visual examples, here's an image of.
I was going to say here's an image.
I don't know where the slides are going to be.
But I put some random images of what I consider traditional marketing.
In the top right, no, that's wrong.
In the left side, there's an image of a press release by Apple, which is like sending an email or having a.
web page that says, look, we're releasing this new and exciting product.
Guerrilla marketing is of course like when you have like something unusual and people go, ha, the people who did this unusual thing also have this other product which is not really related but I should look into it. I don't really know how it works.
Look at this giant coffee cup. Oh, those McDonald's guys.
I sure do want a Big Mac now.
and the Twitter logo.
I put that out because Twitter and Instagram is like a great place.
We post pictures and GIFs.
Is it GIFs?
GIFs or GIFs?
GIFs is peanut butter.
GIFs is probably correct.
And they put hashtags so people can share your cool pictures and hype up the game for you.
It's great.
And then Facebook ads is like, I just put it there.
I don't really know how ads work since I have AdBlock.
But advertisements have been around, and they're not going to go away.
And so there are other types of ads outside of Facebook, too.
Physical ads, sponsorships, things of that sort.
So some other examples of traditional advertising, of course, are things like, there are some unintentional advertisements, I feel like.
Like developer blogs, which highlight interesting things about your game or its development process.
I'm not sure if somebody would write.
a dev diary or a dev blog for themselves.
Sometimes you do, for like an archival purpose, but I think a lot of them have an intention to be like, this is what we're working on, this is why it's hard, this is why the game is gonna be interesting.
And I do think that they are interesting, and they are a form of selling the game, for sure.
And lastly, of course, is like game trailers and screenshots, making those look nice is definitely a form of like marketing that you're trying to help out your game, of course, right?
You want people to know what your game is, so that they'll buy the game.
Okay, so we started working on the Slay the Spire prototype in August 2015.
It was in development for a little over two years before early access launch.
So it's actually really quite a long time.
Just some advice, if you think that you want to release a game that will take about one year, it will take two.
My handy equation is, how long do you think it will take?
Multiply that by two.
All right.
So while we created the prototype and iterated on the design, and fleshed out visuals, we hired a few contractors.
So although it's a team of two people, we definitely got help from a few other people.
These are people like artists and illustrators who created our professional looking backgrounds, made illustrations for, we have events in our game, and those all have still images.
Those are contracted out.
We also worked with a very talented composer.
named Clark from Australia and he also worked with us to help us get some voice actors. There is some voice acting in the game They're very like Thank A good request we had for one of the voice actors was, there's a character called the Cultist, who's wearing a mask and they worship crows, and we told the voice actor to say, Kaka, like, Kaka, like that.
And I'm like, you have to sound like a man in a crow suit.
And those are the notes.
And he did it a few times, because we weren't satisfied.
Just imagining somebody in a studio saying Kaka over and over again.
So that must have been very exciting.
So yeah, so once our game felt presentable, we wanted to promote our game for a few months before we released into early access.
We worked on a trailer which was released around April 2017.
So this was about a year and a half in.
We set up a website, we used Press Kit.
I think that's a known thing, right?
It's called PressKit.
It's gonna say like tm PressKit parentheses.
And we were participating in things like Screenshot Saturdays, on sites like Reddit, and like Twitter, and like hashtags, and things like that.
We tried to post interesting GIFs.
And this was between February and April 2017.
So results from that, our website didn't really get any visitors.
and we had an email subscription, like a sign up for a newsletter, and we didn't really get too many people on that.
I think we got some family and friends.
And our social media posts had maybe about 100 to 1,000 impressions.
I think 1,000 was really good for us, about 1,000 people.
So the silent development was really very exciting.
So that's our character, the silent.
Just gonna make a pun, but nevermind.
All right, so while we were posting these things, our game didn't really stand out from the crowd during this pre-release promotion phase.
I tried making interesting progress screenshots and GIFs, but we couldn't compete against the other visually fantastic games like Manifold Garden, or games like Inside and Cuphead, Ori and the Blind Forest, and much, much more.
Games are beautiful now.
Everyone's really talented.
So the gaming landscape felt extremely competitive.
at this time, and these masterful visuals that we couldn't touch were very much a problem for people like us.
A lot of technologies and articles about technologies were mostly about VR or the ever-growing mobile market, and we weren't in the mobile market ordering VR.
Things like eSports were happening, competitive games were getting much larger, and they're still getting larger.
Battle Royale was becoming a thing, so we weren't really on any of these trends.
So not only was our game not really visually fantastic, but it was also not too exciting on paper either.
I mentioned the elevator pitch earlier, but we were making a game full of unusual core mechanics.
What's a roguelike, what's a deck builder, right?
Compound this with the fact that we have no reputation as game developers besides these failure games from the past.
and so much more new game developers were entering the space.
Engines like Unity were lowering the barrier to entry for developers, and this is great, but that meant we were also all competing for the front page, right?
We didn't give up too easily, because there was one thing we did confirm over and over throughout our development, and that was that the game is fun.
So how do we reach this conclusion that the game was fun?
One, we had our gut instinct.
We were like, this game's fun, because we played it, and it's fun, and we got all the things that we wanted.
Two, all of our friends, which we invited into our secret playtesting group, were having a great time.
They were having a really great time.
Like, they were having problems.
And so, friends can be too polite, and sometimes they may or may not tell you if a game is actually good.
or bad, or not fun.
So you also have to showcase your game to strangers.
So we took our game outside.
And so after a year or so of development, it was ready to go outside.
We took it to several events, expos and festivals.
These were all in Seattle, because that's where we're located.
There's a nice group of folks that run something called the Seattle Indies.
And yeah, woo!
Anyone want to come?
And when Seattle Indies events, they're really, they're like, oh yeah, here we go, woo!
Oh, shit.
Okay, so during year one and between, after year one of development and until we released early access, we probably took our game to around 10 in-person events.
This is a picture, which side is it?
This is a picture of our monitor and laptop style booth that we exhibit at these events.
People who sat down at these booths were in trouble.
So, oh, did I go to the next page?
Sorry.
Some people came back to play the demo.
We had a demo, you just play the first level.
And it took about 30 minutes.
And we had some people come back over and over again to play the first level, over and over.
So we were like, I think we've got something here.
And while we didn't get any noticeable press from these events or anybody talking about us, we did make a lot of connections.
We talked to a lot of people.
We got a feel for what kind of processes and practices were good for game development.
And also, just having people play the game was useful for all sorts of reasons, like streamlining the interface, finding issues, and things of that sort.
It was also really motivating just to have people play your game and enjoy it.
That's a good motivator, too.
work on a game, especially if you're in a development phase where you're not getting much feedback.
It gets pretty tough to work on a game alone, I think.
Well, just two of us.
Two of us alone.
So even with Total Strangers having fun with their game, we were having difficulty getting traction on the internet, which is where we were planning to sell the game, on the internet.
So before we released the game in early access, we created and published three separate videos.
The first video is the trailer I talked about earlier.
This was the teaser trailer.
We made another trailer just for Early Access launch, and this was called our Early Access launch trailer.
And when we released the game, we also decided to create a supplementary video in an attempt to explain the game's mechanics and why we thought it would be fun.
This is a 15-minute explanation video of Anthony playing the game and explaining the game's mechanics.
It currently, to this day, has 982 views.
This is kind of to be expected as we're not streamers with exciting personalities or following.
But you know, miracles could happen.
And the first two videos, the trailers, the early access trailer and the teaser trailer were created by two separate professional video game trailer makers.
Trailers are still a necessary asset for store pages, but they weren't really helping us out too much.
And so the view counts on these videos when they came out were very, very low.
It was very disheartening, and we were starting to worry.
Maybe there's no game.
Maybe there's no audience for a game like Slay the Spire.
On top of all this, we were quickly approaching our early access release date, and about 2,000 people had wish-listed our game through Steam.
We found, organized, and verified a list of 300 press and content creators from various websites and decided to send out a press release.
Then we attached links to, in this press release, we attached links to appropriate places, like where to buy the game, links to our teaser trailer.
We attached some cool custom GIFs, and then we sent them out.
And this was in April, so.
This was for the teaser trailer, and then a few months later, a month before early access launch, we actually sent another wave of press release emails with our early access launch trailer.
Let's take a look at how these emails went.
Okay, so that one went into the void, so it's not very good.
So that's okay.
So surely if we could get some influential content creators on board, they would maybe help us out and this would make the gaming press recognize us.
There were a lot of streamers and YouTube content creators at the time that we followed personally, and so we decided to write some personalized emails in the hopes that maybe they'll help us out and try the game that we worked so hard on for two years.
Now let's take a look at these emails.
They also went into the void.
In total we sent over 600 emails before we released Early Access, and we had gotten zero responses.
Additionally, before release, we wanted streamers to pick up our game because streaming was obviously becoming a big thing.
So before we released the game.
We wanted certain streamers and content creators to get a sneak preview of Slay the Spire to hype up the game.
This was a strategy done by, I believe, I forgot the name of the studio, the guys that did Dead Cells.
And so we were like, we'll do that.
We heard of a tool called Keymailer, and this is a website slash tool that allows you to send out Steam keys to content creators.
If you pay about I think there's a pro version that you pay $150 for.
This lets you search for streamers based on what kinds of games they played, what kind of games they streamed.
You can also see how much followers or subscribers they have.
So we decided to give that a go and sent out maybe 200 keys or so to people we thought would like our kind of game.
These are people who have streamed similar games or made videos on similar games.
These games are like Hearthstone or FTL, Darkest Dungeon and so forth.
So then, the day finally came.
We released on Early Access.
On November 14th, we were on Early Access, and anybody in the world could buy and play our game.
Leading to this, I made a countdown GIF of like, our game's releasing in seven days, and then I put it on Twitter, and the next day I said, our game's releasing in six days, and then I forgot there was some cool blurbs.
It was like, you can play cards and fight a guy in a shell, and that's really cool.
So making gifts is a lot of work.
So those seven days, I feel like I spent like a quarter or like a long time making this.
We also told all of our friends and family and we made an announcement on the Steam store page of the game itself.
We sent out those press emails, we sent out those Steam keys through Keymailer and this latest bar sold 2,200 copies in the first two weeks.
Yeah, it's not too great.
So first two weeks, 2,200 copies, not too great.
It was really exciting.
On day one, we sold about 300 copies.
On day two, we sold about 400 copies.
But then on day three, we already started selling less and less copies.
We sold 200, and then 150.
and then 120, and then 90.
At this time, there was a tool, well, the tool still exists, but we'll talk about that another time.
But the games that we looked at on this tool had a lot of information about sales data and how much general sales that you would expect games to have during certain time windows.
And we had noticed that a lot of other games, whether it's full release or early access, it doesn't really matter.
Most of the sales happened in the first two weeks.
And so we were like, hmm, what's gonna happen?
So what were we doing during these two initial weeks?
Nothing too special actually.
Although our sales weren't very good, we just kinda kept working.
After all, the game is in early access.
It's not done yet.
Surely the game will be successful once we get into full release.
working on the game was comfortable, because finally, instead of promoting the game, we could get back to working on the game, and that's kind of like what we wanted to do this whole time, right, is work on the game, and finish the game.
So we were kind of tired of all these, like, making these promotion GIFs, sending out keys, finding people to give keys to, setting up a store.
Setting up a store requires a lot of things, descriptions, screenshots, things like that, and so.
And on top of this, since our game was in early access, we promised to release a patch every single week.
And this was to keep adding content, balance the game, fix the bug, and get the game to completion.
So, nothing had really changed.
We went back to working on the game.
And we were doing everything exactly the same way, except we were pushing new builds to Steam every single week.
Funny story, about nine months after early access release, we found out that our early access blurb on the Steam store page said that we would be patching every two weeks.
So we decided, apparently, to patch twice as often.
So we noticed that a lot of reviews mentioned that they saw their favorite streamer play the game, so they encouraged them to buy the game.
And so this was probably Keymailer, so he said, good job, Keymailer.
So I put a little promotion here.
It says, Keymailer is great, five out of five.
If you work for Keymailer, you may use this quote.
Okay?
So this encouraged us to send out more keys via Keymailer.
This was probably our best investment when it came to time, in terms of what we were doing to promote the game, and money-wise, which was $150.
when it came to marketing slash advertising.
Keymailer also felt like a more genuine way to reach players.
Reviewers didn't need to leave positive reviews.
They were just given a free key.
And they were, we just explained what the game is, and they were given a free key.
If they didn't want to play or review it, they didn't have to.
So, and nothing implied that it had to be positive.
So, if they wanted to play the game, they would play it.
YouTube content creators started making some videos, and then a few Twitch streamers also started streaming a game quite regularly.
These were like recurring streamers, so someone who started playing earlier would still be playing the game for a few weeks.
And then it turns out the streamer community is actually pretty tight-knit, which is a good thing.
Their friends started streaming the game, and then their friends started streaming the game.
I'm not too sure what compelled the first few people to start streaming our game or to create YouTube content.
Generally what they said was, I was given a key to this game and it looked interesting.
It's a bit vague, but maybe a combination of our trailer, elevator pitch, or screenshots did their job.
But keep in mind that we did send keys to people who had played similar games.
And those keywords like roguelike, deck builder, and...
single-player games, like single-player rogue-lite games, I think at the time were very fun and exciting.
So I think that was it, but I can't say for sure.
So our initial success actually came on week three after our early access launch.
There was a very high-profile streamer in China.
that played our game as a very high-profile streamer.
The video of the stream went past a million views in a couple of days, and suddenly our game was flooded with a lot of Chinese players who wanted to play our game, but they were having a hard time because the game was only available in English at the time.
More people in the US became interested because it started showing up on the global top sellers list.
Many of the streamers who received the game before early access were still playing, and all their streamer friends also started playing.
And eventually it reached more content creators.
And then we showed up on top sellers list on Steam.
And then showing up on a top sellers list on Steam apparently changes everything.
Because we went from pretty good sales to crazy sales.
Around the same time we also went on sale.
And so apparently having a game on sale is also good.
So these all kind of compounded together.
And then this happened.
This blue line spike happened.
And it was great, and everything was, the game was very popular suddenly.
I would say, another endorsement by myself, just so you know.
So I would say that most of our success actually came from people genuinely playing the game and enjoying the game.
I think that Twitch and products like Twitch are a godsend for games like ours.
A game that isn't visually beautiful or even interesting on paper can now become wildly popular.
And there's also another game that's similar right now, which is fairly unknown, or maybe it is known.
It's a mod for a game called Dota 2, and it's called Auto Chess.
And although on paper it sounds like a mess, it's a mod for a video game.
and the art style is Dota 2 and you should play it.
And that game is really fun.
And so people are playing it, and people like, can't name like Twitch streamers off the top of my head.
Like Amaz and stuff are playing the game on Twitch, and it's doing really well.
Because streamers talk openly about what they're thinking about, I feel that users can play vicariously through streamers by watching them on top of this.
If these games continually become updated and polished, why would you ever stop playing them?
While we intentionally designed Slay to be fun to watch, it was a great coincidence and luck for us that Twitch was and still is growing as a platform.
So if your game is popular in a format where people watch, people watch other people play Watch, what did I type here?
OK.
I'm going to go ahead and get Casey.
So to make games that are popular for like streamers and people who play the game, instead of focusing on marketing, we focused on something called marketability.
And this is a bit different from marketing.
Marketability is the ability of a video game to be sold or marketed.
So our lack of response from trailers, our screenshots, our press emails, our website work, was very small in comparison to the response we got whenever we updated the game.
So we finally got to marketability, but it's really important.
And that's because the context of why we developed the game the way we did is so important.
We've been making games a very old-fashioned way.
And the combination of three things, which is streaming, communities, and the fact that we could update easily allowed us to take this path of marketability rather than trying to market the game before we sell the game.
So what we wanted to do was the product sell itself, which was like, I think this is the dream for developers, because you just get to work on the game.
And so in order to accomplish this dream, you need to have a strong pipeline.
I guess to put it simply, it would be having a good method for acquiring feedback, pushing out updates, and a good way to talk to your community.
All right, and so for pushing updates, FlateAspire got an update every single week on the main branch during early access.
Between November 14th and then January 23rd, which is when we did the full release, the game was patched 57 times.
One month after early access, we also created a beta branch so that players could get a sneak preview of upcoming content, bug fixes, and so forth that we can test out things like experimental features.
We think that having a beta branch is necessary for weekly patching, because we don't have a dedicated QA team.
Whenever we edit anything, there's a risk that things could break.
And sometimes we'd be up pretty late, accidentally breaking stuff.
And then we'd fix that, but then that would actually break it more.
And then we'd be like, why won't I just roll back?
And if you roll back, you don't have new features, and now it's not exciting.
So we broke the game a lot.
And I don't think people should be afraid of.
breaking the game.
It's part of, at least for early access.
If it's full release, then it should be pretty stable.
Some pros and cons of weekly patching.
New stuff is always happening.
So new stuff, players are always getting new stuff.
There's always excitement.
And it's very fun to see what players want and expect from a new patch.
And it also gives us ideas.
Sometimes we're about to work on something that we think is exciting, but then the player is like, you know, it would be really great if they worked on this thing, and then everyone's like, yeah, I bet they're working on this thing.
And then we're like, yes, we are working on that thing.
That's exactly what we're working on.
And so sometimes, you know, what people want is what drives what we work on.
Also, if you patch weekly, it's a good time to address problems and discussions that people are having about the game, so it can be more transparent.
You can discuss what's coming soon.
And of course, if you need help with anything, such as for us, we had started localizing the game, and we needed more people to help us community translate the game.
And so during these weekly announcements, we can ask for help and be like, we're looking for translators, and we did get a lot of translators, but we'll talk about that on the localization slide.
For cons, whoops, whoa there, calm down.
For cons.
Oh, it's too zoomed out.
All right.
For cons of weekly patching, I would say that there are just some features that take longer to make than one week.
And so if you're working on something like that, or if you're working on content that is not ready to be revealed, you're going to have a patch that's not very exciting.
And so you can have some slow weeks.
Another one is writing up an announcement and getting it proofread.
It takes a lot of work and then you have to push the patch and then you have to monitor the patch for issues.
So it was actually costing us one day of productivity a week.
So if you work five days a week, then you're losing 20% of productivity just by pushing out weekly patches.
If you were to get sick, if you were to get injured, if you were moving or you were on jury duty or maybe somebody got married, I'm married.
then these can make weekly patches pretty rough.
So my solution is, if I could do it again, I would do two weeks.
Every two weeks, like I said, I would.
Okay, so when it came to talking to people through Steam announcements, that was a very good thing because that's where everyone buys the game, so everyone actually read those announcements, which was fantastic.
Whenever we posted announcements on Steam, it would be cross-posted to places like Discord, Twitter, and our Facebook channels.
Reddit is community-driven, so you don't have to post anything there.
Somebody will find it and post it.
And then, I think Twitch streamers also, if the game is patched, they'll briefly go over the patch notes, which were available in-game, so they would just read off of it and be like, oh, the game is completely different now.
Now it's way harder or way easier.
So, it's not way harder or easier.
They're minor balance patches.
So from these announcements, we try to funnel people into our Discord channel, because that's what we preferred.
We found it to be the easiest format in where we can communicate with our players in real time.
If they had issues, they can post pictures, they can ask questions, we can answer, follow-up questions we can answer.
We also had an internal testing tool during our private testing, and this was a bot called Feedback Bot.
So Feedback Bot is very useful, but apparently I'm talking about it in the next slide.
So in terms of usefulness of each of these different social media and community channels, I would say that for issues, we generally try to funnel people to Steam's discussion boards, where we had kind of like a troubleshooting guide.
And then if all else failed, we would ask them to email us at support at megacrit.com.
If we wanted to talk about the game or work on localization, we'd be exchanging files all the time.
That was usually done in Discord.
And then Places where chaos and crazy things happen was community-driven sites like Reddit.
So we didn't control anything in Reddit.
Things just happened on the internet, and that's where it happens apparently.
So I think if anything goes wrong, we always try to acknowledge problems or issues that are happening in public.
If there's a bug, we just fix it, and then we just push out a patch.
That's something that only small teams can do.
I know that if you're on a much larger team.
You can't just be like, here's the bug, and I'll be like, I'll fix it and push it.
Now it's fixed in 20 minutes.
But that was something that we were allowed to do.
And I think that was very fortunate for our small team.
So we talked about the bots earlier.
So we had a bot when we were doing internal testing.
And this was called Feedback Bot.
And Feedback Bot is very great.
One of our playtesters during internal playtesting actually made it for us.
And what this does is it allows you to talk to a bot by saying things like bug, colon, and then you write something like bug.
this enemy is too strong and then our feedback bot, which is renamed to SpireBot for Discord, would say, thanks for your feedback.
I was gonna point at the slides and read off them, but it turns out it's very far.
So, to date, we have 18,000 points of feedback from people.
These can be things like suggestions, ideas, and things of that nature.
I think that bugs are really important to make your product better.
You should always be thankful of problems.
And even if people file duplicates of issues, it's like, oh, these guys filed duplicates.
It shouldn't be like that.
It's like, wow, this is a serious problem.
Like 25 people are noticing this bug.
So duplicates actually let you know the severity of issues.
And so it's also good.
If possible, we should ask for more information.
That's why we prefer Discord.
Whenever anybody talked about an issue.
we would just follow up with them.
We'd be like, how did this happen?
What is your computer like?
Are you using an interesting game controller?
So, I think we should always be thanking our community for doing a job that requires the whole QA team.
And that would cost a lot of money.
As someone who's worked in QA, I would say, I'm glad that people QA your game for free.
That only happens in video games, I think.
Alright.
So, to make our game more marketable, we also had a lot of design considerations.
Some of these things are about making a game with complex mechanics easy to understand.
And this is a really large undertaking.
And it could probably be a talk on its own.
But we're gonna go over just a few of them.
Card games have a rich history of complex mechanics.
There's a bunch of different layers, there's a bunch of different interactions.
Fortunately for us.
we could leverage existing mechanics and terminology in these games for our game.
Because Slay the Spire was always intended to be just a digital card game, we were allowed to keep the visual clutter to a minimum.
Some examples of digital card games are that the rules are enforced programmatically.
So if you wanted to take a card and do something strange with it, like if you wanted to take a card from your draw pile and discard it immediately, You couldn't just do that, because the game would say no.
The code doesn't allow it, right?
Complex mechanics, such as statuses, things like keywords for each card.
These definitions would appear when you hover over a card.
So a card can be like, apply to vulnerable.
And you'd be like, what's apply to vulnerable mean?
And you hover over it and say, vulnerable is enemies take 50% more damage.
And you're like, oh, thanks, keyword tip person.
You can also show tutorials or blurbs if the player does something wrong.
In the GIF here, you can see that our player is trying to play these cards.
Come on, loop please.
So it's like, oh look, we're playing a strike and we're trying to play this bash.
Oh, we can't, we're out of energy.
I'm gonna try again.
Oh, no you can't, you really can't.
So, we show like some more like...
We show tips that have more words and try to make sure the player understands what's going on if they continue to not understand something.
So that's something we've gotten from just like playtesting more in person.
Because sometimes you would see like thought bubble that says, I cannot play this.
And sometimes they would ignore it.
So we added those kind of things.
Things like, what other things that are useful for digital card games?
You can view your deck instantly.
You just push a button, and you'll see a grid of cards.
You can see your whole deck.
You don't have to fan through them individually.
The game shuffles cards for you, things of that nature.
In a video game, there's also a bunch of other stuff you can do.
There's so much things you can do.
There's so much UX design.
If you look closely at the image, you can see things like the cards that are playable have a blue outline.
The cards where you don't have enough energy, the text is red.
And there's also audio and visual cues.
We make the sound when you can't play a card.
When you play a card, there'll be a trail, and the card will fly into like discard pile.
When the card, you know, when cards need to shuffle, there'll be like an animation of all the cards going from discard pile into draw pile.
So those kind of things here.
Less words, good.
What we mean by this is to make our, so our game was focused a lot on its content and playing the game, and it wasn't very lore heavy.
However, there is some lore, and you can get through this lore, but we also didn't want to make it mandatory.
Things like events in our game, you don't need to read all the words, you can just look at the options, and the options tell you exactly what's going to happen.
And this was very important for the streamability of the game.
because then players could look at the options that are available and then follow those options.
Alright, so for localization.
Localization, if you don't know, is translating your game to multiple languages so people in other countries can play the game.
This is our sales data from two weeks after the EA release to six weeks after release.
Things that are really important here is that China.
made up 42% of all the sales during this time.
And if you combine all the English-speaking countries on this pie chart, it's 41%.
And this was before any localization was available in the game.
So there were a lot of confused players.
And so we started our localization efforts.
And the game is now translated to, actually I added one or two more recently.
So it should be around 16 to 18 languages.
So we moved forward one year.
we can see what happens.
You definitely want to plan ahead for localization.
If you are a programmer, you understand what it means to hard-code strings.
Don't hard-code strings, although we didn't.
And make your game localizable.
You should always try to make your game available to as much people as possible, for sure.
There's also other considerations to make.
A lot of engines would render certain languages differently, certain texts differently, certain fonts differently.
If you include all the fonts, your game can get pretty big pretty fast.
Some fonts have very strange text formatting rules, such as a lack of spaces.
And since our game also incorporated symbols and keywords that have special logic appendants to them, it was very, very difficult to translate our game.
And we're still working on a few languages as well.
So we worked with community translators.
We actually initially started with a professional localization company.
And because we released a patch every week with new content, it would always be outdated.
It would always be behind by two or three weeks.
And on top of that, a lot of the community translations were a bit better because they played the game.
And so a game with a lot of technical keywords and terms just made more sense for somebody who played the game.
I think that it's very important for card games that anyone who translates it knows what's going on.
All right, so lesson here is don't ignore China and translate your game to a bunch of languages.
I was going to point out to some stuff and be like, wow, look, all these other languages that.
So there's a bunch of extra countries here that were not available in the previous slide.
You can see in this slide that I can't see it anymore because my eyes are not that good.
But what happens is, after you translate the game, countries like Korea, Japan, Russia, all start buying your game as well.
And they make up quite a sizable amount of players.
Hardware compatibility, no one wants to stutter your game, so optimize your game.
So I think there's been a lot of different studies, I wish I could just link all the studies, why didn't I do that?
But like, there are studies like, if a website loads slightly slower, people are less inclined to go to that website.
What else?
There's a lot of compatibility requirements that need to be done.
So we looked at the Steam hardware survey, that's the easiest way.
We're selling on Steam, so we're gonna look at the Steam hardware survey.
We found that a lot of enlightening facts, which is very publicly available, the biggest one for us was definitely that so many users are playing on very low resolution.
And this is something we looked up very early on, and it's very important because this determines the minimum text size that you can have in a game.
I feel like that there are a lot of games out there right now where developers assume that everybody's playing on 1080p, and the text is very small, and they just become little...
blurry smidges on the screen if you get too small.
There are also other considerations like RAM, which is a big deal.
So, and yeah, those are all the facts here that I've got that I thought were important.
Oh, we also found out a lot of people like playing games with controllers.
So we do controller support.
All right, so that's kind of all the things we did in terms of marketability, I would say.
I guess these days.
We're trying to make the game more available.
I think you saw on the other slides that we made the game available in more languages.
We made it available on Mac OS, Linux.
We did Windows 32-bit.
That was maybe a mistake.
And that's not because Windows 32-bit is bad.
It's just, I think anyone who still has Windows 32-bit installed might have a computer that cannot run anything.
So these days we're working on porting, and we're actually planning on porting the game to a bunch of different platforms from the beginning.
The Nintendo Switch was announced while we were working on the game.
So we actually need to, I think, work with a, we are working with a porting company, and it's gonna be probably on a different engine.
things like mobile.
So, not sure if you know, but Slate Aspire can be totally played with just mouse and keyboard.
Just mouse, not keyboard, Casey.
That's the whole point.
And so, yeah.
So, something I noticed when making this presentation was that Anthony and I attempted game development 10 years ago.
and it failed spectacularly.
And then six or seven years later, we quit our pretty good jobs and attempted indie game development again.
When we started the indie game development again, we worked for two years without pay, and there wasn't really any notion that we would be successful.
I think that it just means that if you really, really wanna make video games, you're just gonna do it.
So I hope that.
Anything that we write about, anything that I say today can help you out.
And yeah, thanks for playing our game.
And thank you for coming to my talk.
Yeah.
Questions and answers?
Is that what it's saying?
Q&A?
Yeah, Q&A.
Hey, when you were doing your weekly patches, were you doing it on the beta branch?
And if so, how often did you push the live branch?
Oh, good question.
So we always pushed an update on the main branch weekly.
And on the beta branch, we actually push five times a week, which sounds like a lot.
But the beta branch, the expectations are lower.
If it breaks, it's kind of funny.
A lot of funny things happened in the beta branch.
We made a new character, it was not ready yet.
We drew a bunch of art for it.
And the bad art, people like the bad art.
The bad art is actually in the game now that you can toggle on if you beat the game at the hardest difficulty.
But yeah, we patched very, very frequently in the beta branch, almost every day.
Yeah.
Yeah, one of the key elements to the game, I thought, was the feedback loop that you had with the community.
Could you elaborate on how you triaged what part of feedback or what player's feedback you value the most or anything around that process?
Yes, so whenever somebody types something in Discord, like bug, this is a problem, and they have to touch an image, every single thing that they type in any of the channels on the Slay the Spire Discord would be funneled into a private channel called Bugs and Feedback.
Um, this is a secret, don't tell anybody. But we also had some language parsing that determined if feedback was going to be useful or not, or they were just trolling. So there's actually a section called low priority feedback and we look at that as a joke. Um, but the normal feedback is actually not like 18,000. It's uh, usually about About five to ten issues a day.
I guess in terms of triaging and prioritization, that's a pretty heavy subject on its own.
But I would say, you know, you just have to go with what you feel is a easy to fix, right?
Low-hanging fruit.
Things that are easy to fix, we just fix immediately.
Because it's like, why not, right?
Like, this image is too high on this resolution.
It's like, okay, we'll fix it.
Things that are hard to fix are a bit, you know, you have to prioritize how long it takes versus how much.
how much it would be worth it, I would say.
Bit of a hard question to answer, I apologize.
Thank you.
Hi.
So how well would your marketing strategy work for a game with a more finite time span, like a narrative game or a puzzle game?
What do you think you would change?
Hmm, that's true. I do definitely think that Slay the Spire, because of its roguelike nature, kind of has huge implications with updates, right? Things are always changing when you replay it. I'm really afraid to give bad advice on things I don't understand. It might be best to ask somebody who's worked on an early access game that does have a finite ending.
I think maybe the folks who worked on Subnautica would be a good place to start.
Cool, thanks.
How did you decide on the graphical aesthetics of the game?
Were you considering marketability at that point, or?
That's a good question.
So I did the art for the game.
I did the bad art for the game and the okay art for the game and there are some illustrations.
I guess in terms of art, what's most important for me is just that it's readable, like contrast, and those kind of principles are really important.
We kept the assets simple on purpose because we didn't have a huge budget.
And so I guess to give an idea of the scope, we have about 300 cards.
We have like 50 plus enemies, 100-ish relics, 50 events, and just a lot of content, right?
And to just crank out that much content, you have to have art that's very simple.
Not everything can be animated and fantastic and have beautiful effects.
So I guess that's kind of where it started.
When it comes to theme or atmosphere or mood, I would say that's a much longer talk.
But I hope that answers your question.
Thanks.
Oh, yeah, it was kind of my question.
Like, what really spawned the design?
The initial design.
Yeah, the initial design and then the narrative that grew around.
I see.
I would definitely say that the narrative came from just like It grew around the mechanics of the game.
It was definitely a mechanics-first game.
I think anyone who plays would kind of get that.
It's a bit hacked in, but that's okay.
It's pretty fun, because we want you to start over and over, so there needs to be a lore around that.
We wanted you to go up instead of down, just to differentiate ourselves from dungeon crawlers.
We wanted a dungeon climber, a tower climber.
The initial design itself, Anthony created the initial card game idea.
It was called Card Crawl, I think that was the original name of the game.
I don't know.
I mean, he played a lot of board games.
He used to, you know, manage a board game shop.
And he runs a Netrunner community site.
Who knows where his ideas come from.
Thanks.
Yeah, I was just actually curious about how you went about organizing the community translations and how that transition was away from the more traditional sort of translation companies and into the community run thing and how that works.
I see.
So we kind of have a hacked way of doing community translations.
It's actually a bit technical.
I actually don't...
recommend the way we do.
It is definitely good that it's community translations for all sorts of reasons like getting translations on time for release.
However, there are definitely tools now that weren't available before, like websites where you can see all the strings and they're beautifully organized and you write some stuff and they'll probably export to beautiful.
format. We didn't do that. We didn't have time because we had weekly updates to set up like an awesome community translation server.
So we sent out raw JSON files.
and those were returned.
We wrote some scripts to validate them.
We wrote some scripts that whenever we created new strings, they would be automatically populated into the other languages, and if a language either lost a translator or was no longer translated or behind, they would just have English text for that content until it was fixed, I guess.
Cool, and you'd have one or so people who would volunteer and be your primary point of contact?
I was curious about the human element.
Oh, it was me.
Oh, cool.
I guess there's a localization channel called localization files, where I would be like, these are the new files for this update, and I would type it, and I would paste the file.
And then there was a different channel called localization discussions, and then there was a channel for every single language, and I just asked them to ping me when I was ready.
And so I guess anytime any translation wanted to be updated, I was pinged, I downloaded the files, and then I just updated them.
It was very manual. It was a lot of work.
I highly recommend that tool that I don't know exists.
It probably exists.
We're GDC.
We'll find them.
Thank you.
Hi.
I was just curious if through the iteration of early access you ever saw any dips in your reviews, like for example, when you introduced a new language and it wasn't quite ready, anything like that.
I know you had strong reviews throughout most of it, but if there's anything.
That's a good question.
Our reviews?
did go up and down, not too much.
I think what's really important was that we were able to maintain expectations the whole time.
We were always explicit about what was broken.
And we actually kept a lot of content hidden from the main branch until it was 100% ready.
And that was kind of, I think, our understanding between the players and ourselves.
So it's always about expectations.
Like, you have to communicate.
Like, reviews are always about communication.
And I guess if you don't fix something for a long time, even if you communicate about it, it's not going to help.
So you do need to deliver on what you communicate.
Yes.
So you said you had about two years of dev time with basically no income.
And you were also at that time contracting some stuff, like sound design, art design.
So I guess my question is, what were those additional costs?
And how were you budgeting and paying for them?
I see.
I guess I'm very frugal and I don't spend much money.
And I was just saving up money while I was working on Amazon and it was just out of pocket between Anthony and I.
What the budget is, I think we did different types of models in terms of like how much we were gonna pay contractors.
on a per contractor basis.
And how did you determine that number?
I don't know.
I think for each one we did a bunch of research in general.
We also actually, we used game dev classifieds on Reddit and Gamasutra, and then we just got more people, and they all have different quotes.
So I think it's up to...
Interviewing is a very interesting process, and it's very important.
I don't think you should ever go for the first person that you get.
We went over several different people for each contractor, at least 10 illustrators before we settled on the one we did.
Okay.
Thanks.
Hi, how important do you think mod support was for your marketing and design?
So, mod support, we were initially going to make APIs to allow people to mod the game easily.
And then we found out that our game was written in Java, and it turns out Java, you can just inject code and mod the game however you want.
And so, modding kind of came in a very hacky way.
where a lot of people wanted to hack the game to add content because maybe we weren't working hard enough, I'm not sure.
But it happened that way, and then the stuff that came out of it was incredible.
And so we were like, this is modding now, and we had a channel for almost a year and a half, well I guess how long was the development?
A year and a few months, called Unsupported Modding.
It was called Unsupported Modding, and it was just in our official Discord channel.
And they'd be pasting cool stuff, and it wasn't officially...
like the way we were going to do mod support.
But then we found out a way to get this code injection system as like a Steam workshop method of getting mods into our game.
And so that officially became the official modding.
So modding is really intense for Cytospire.
But if you like programming, also all of our code is available.
It's not open source, but again, it's in Java.
You can just look at it.
It's kind of weird.
It just happened.
So.
That's the story of our modding, I guess.
It's very important, I think.
The mods are incredible, and it's been really good.
Awesome, thanks.
Hey, since Slay the Spire is kind of a weird genre mashup non-standard game, what do you feel like was the best method to get people to understand what your game was?
That's a tough one.
People still don't get the game when I try to explain it.
So I guess the only thing you can do is play it.
It's so streaming.
Do you think people watching the game?
I think it's definitely people watching streams.
I think that's definitely a new way that people try to understand video games.
I generally don't try to start playing games that are very complicated immediately.
One more.
Yeah, we never really improved.
how to sell the game, I would say.
It's still really, really word of mouth.
But it's been doing well that way.
So I think we're just going to keep going that way.
Thanks.
One more.
In your sales data after early access, I saw that 60% was in China.
Is it still around that proportion?
You still have 60% of your sales in China?
Let me go back to the slide.
I think it's about 20-something percent.
Oh, sorry, 30%.
30-something, it is still that, yes.
That's very, very recent.
Oh, okay.
Do not ignore China.
There's a lot of people out there.
Okay.
Thank you.
Okay.
Thanks for coming, everybody.
