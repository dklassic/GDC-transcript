Hello and welcome to Press Y to Cry, Generating Emotions in Video Game Narrative.
My name's Andrew Walsh, I'm a writer, director and narrative designer who's worked in TV, theatre, film, animation and comics.
I've also got 85 games credits to my name, including Prince of Persia, Fable Legends, The Division 2, Watch Dogs Legion, and I'm currently working as a senior writer with Girl Games, as well as a lead writer on an NDA project.
I'm also involved with the Writers Guild of Great Britain's Video Games Committee and I hope you can come along to some of the events that we organise. So today we've got half an hour to look at emotions in video games. I've got a lot to cover so I will be moving quickly.
The aim of this talk is to give you a set of toolkits to analyse emotion in games and see how techniques from other media need to be adapted to fit into interaction.
Please note that I said toolkit and analyze.
I'm not giving you a strict rigid process.
What I want to do is give you a set of things that you can use at any point in the process to analyze the emotion that you find in games.
So let's get started. How did I come to choose this subject and title?
Well, way back in the mists of time, EA published this as an advert.
It was intended to start a debate about the creative goals for the industry and to set down the challenge.
Could you make video games that made players cry?
By this stage, the medium was already decades old, and yet while music, books, films, TV and theatre knew how to create all sorts of emotional change in people, to some it appeared that this new, immersive medium wasn't able to explore the same range of emotional responses, despite it being immersive.
Why? Well, two sets of very clever people tried to solve this problem, but humanity being humanity, they each tried to solve it from opposite ends, often without talking to each other and sometimes in direct conflict.
On one side of this divide were the programmer designers who were forging the code, verbs and models that modern games rely on today.
They were defining interactivity.
But many of these individuals saw emotion and story as problematic.
Games were about verbs and interactivity.
Emotion and story where it was to be found should and could only be emergent.
And even though many leading luminaries on this side of the divide continue to talk about emotion and immersion, the question, can a computer make you cry, for many more from a challenge to a statement.
Game can't make you cry.
Stories don't need game.
Games don't need stories, was the cry.
All of which is not.
Sure, you don't need a linear narrative in a game, but all games are emotional.
Triumph, loss, joy, frustration, elation. We define the games that we play by the emotions that they make us feel, meaning that emotion itself is interactive. In fact, when games fail to create an emotional response in the player, that's because they've ceased to immerse or challenge them. And in that case, they've ceased to be a game.
Yet despite that, many people on the designing and programming side rejected or ignored Emotion.
In fact, things got so bad that one chap had to go away and write a book reminding people that games were supposed to be, you know, fun.
Now remember, there were two sides involved here, and on the other side of the divide were writers and storytellers.
After all, reasoned many an executive, if we need to tell stories and explore emotion, we should go to the experts in doing this. We'll get some screenwriters and novelists and they will bring a whole understanding and toolkit for emotion straight into our industry. Simple, right?
Well, the problem is that many of those talented individuals and the execs who employed them brought problems as well as solutions. Just as many early filmmakers had simply set up their cameras and filmed theatre plays, people seemed to think that they could make games in just the same way that they made films. They thought that players should come to them and find their meaning, just as audiences did in cinema.
they were sure that if only the people making games fitted the interactivity in a round or to the side of the incredible filmic experiences they were making, then the door to emotion in games would be open.
And it's not like either of the sides were completely wrong.
No one had come up with the solutions at that time, and they were trying to build a whole new industry.
And it made sense to embrace emergence and interactivity, as that's what made the medium different.
But it also made sense as a medium that games should explore and generate a wider range of emotions than they were.
The two sides needed to stop solving the problem from the end and start it from the middle.
They needed to focus on the player.
Now the legacy of this divide continues to today.
You will still hear people that were proposing the use of Heroes Journey in games.
You will still hear people telling you that the only true game is Emergent.
Whereas actually, the player is often sitting in the middle.
To get there, let me ask a strange and difficult question.
Who is feeling the emotion in your game?
It sounds obvious, I just said the player, right?
Well, yeah, but how often have you heard developers talking about war is hell, and how they want to put the player right into the realities of combat?
But is that really what they want?
To expose the player to some of the worst horrors of humanity, to tear them apart with a set of emotions that cause PTSD and an increased chance of suicide?
Was the question really, can games tear your soul apart in the name of entertainment?
At the heart of the problem is a confusion between the emotions we're exploring in the game and the emotions we actually want the player to feel.
And when we fail to align the emotional content of the game with the emotional reaction of the player, the play will be left either feeling confused, amused, angry, or feeling nothing at all.
The dreaded Ludo narrative dissonance will eject them from the game.
So how do we fix that?
Well, for each game that we make, for each moment in the game and each emotion that we're exploring, we need to ask if it is a simulation, a representation, or an abstraction.
For a simulation, the emotion in the game matches the one that we seek to trigger directly in the player. Here we want the player to feel exactly what's in the game.
For a representation, the emotion in the game doesn't match the one that we see to trigger in the player. It's triggered indirectly or both. Here we put some distance between the emotion in the game and the player's emotion. And to bridge this gap, the player will need to interpret what we've given them. Abstraction. In an abstraction, we present the emotions only as a concept. We don't intend the player to have an emotional reaction at this point.
Okay, let's look at each of these in turn.
Simulation.
In this VR simulation game, the player is asked to walk over a plank that's suspended over a big drop.
Here, the emotional reaction the developer seeks to create calls on the player's own natural response to height.
The game intends to generate fear directly in the player.
In a Formula One driving simulation, the intention is to create the same emotional experience for the player as if they were driving the real car.
Exactly what Sid Meier was asking for.
But remember though, when we're talking about emotions, we're not necessarily simulating the environment or the subject. Pong is not a tennis simulator. There's no tennis court and the rules are different. Pong is a skill game. What's important here is that the emotions the game intends to create, success, win, loss, are the ones that the game intends to generate directly in the player. The emotions match the mechanics.
Such emotional simulations can be so powerful that they're being used to change how people behave in the real world.
Some companies are putting people into virtual situations to help them recognise racial or gender bias in themselves when interviewing. Doctors are being trained how to tell patients bad news. In each case, the participants enter the scenario as themselves and are then asked to respond to it directly. The emotions they're intended to feel are the ones that they would be feeling if they were in the real situation.
But when it comes to representation, the experience is no longer direct.
The game places something between the player and the emotion in the game.
An obvious example of that would be a character.
If we were to take the same VR training in the same doctor, but we were to ask the doctor to play a character this time, then the scenario would switch from being a simulation to a representation. Same doctor, same scenario, same emotional content. But the doctor wouldn't be playing and feeling as themselves. Their emotion is no longer direct. We've changed the way that we've asked the participants to react to it, so we've changed the experience.
Similarly, when the plank game puts the player in a place where they're asked to feel the terror of crossing over that divide, when we put a character in the place, it's no longer the player who's in virtual danger, it's the character. Here the game doesn't ask the player to feel the same emotions as the character. Instead of terror, the game is asking us to feel thrill or excitement or to feel scared for the character rather than from ourselves.
So we're putting a distance here between the player's own feelings and those in a game.
Why would we want to do that?
Well, for a start, interpretation isn't necessarily bad.
Interpretation is itself an active verb. It's a way to make emotion interactive.
Another plus with representation is it can allow us to present the player with a wider range of experiences than we can in straight simulation.
We don't want to expose players to the true horror of war, but we can represent it.
We can use a character as a barrier to this negative emotion.
This can give the player an emotional distance to explore such difficult subjects.
Using this technique, the character can be put through all sorts of potentially negative emotional states such as loss, rage, grief, hate, revenge, without asking the player to experience those emotions themselves directly. As the character feels loss, the player can feel sorry for them.
They can connect to the character but without feeling exactly the same emotion that's in the game.
And it's not just emotion that representation can filter.
Just as Pong distills tennis into a simpler interactive and emotional experience, we can deconstruct other scenarios into their emotional components to find a way that suits our game or the emotions that we want to explore.
When we portray love in a game, for instance, we're generally not presenting the player with the whole experience, just as we don't in games with war.
In a lot of dating games, we don't deal with the choice of what to wear, the stress of another person taking 20 minutes to text back.
Generally, games seek to shorten and focus the experience.
The design wants to find the active verbs, not the moments of sitting and waiting for the text.
But in doing so, we are taking the player away from that simulation.
We're taking them out of the real experience, and that requires them to interpret and believe.
In a shorter time than it takes in a real day to cover...
How did you get here tonight? Fancy a drink?
Oh my God, you're into Pirate Topiary 2?
Shepard in the game is already asking you to bang X for some trans-stellar inter-species frolicking. The game shortcuts that experience to give the player the representation, and with it comes the risk that we eject them out of that experience.
Is that what happens?
Well, anyone who's been stuck on a table next to someone explaining the complex physical gymnastics they'd like to perform with Gareth, while the person next to them keeps shouting, but he's a fascist, will tell you that representation can indeed elicit very strong emotional responses in players.
We have to be aware of the change and build around it and take it into account, but we can still create emotion.
Abstraction, though, is where the emotion is represented only as a concept.
We don't expect an emotional response from the player here.
A good example of that would be player stats.
When a stat changes, there's not an expectation that the player will then suddenly feel an increase of 10% affection, trust, or suspicion in themselves.
They may experience a sense of achievement, but the stat's not there to evoke a direct emotional response.
Okay, so simulation, representation and abstraction can help you bridge the divide between between emergence and authored narrative. It defines how you're aligning the content in the game and the player's emotional response to it. Please note too that this isn't a set of three distinct options, it's a spectrum. Each decision we make about our game can move the player closer to simulation or to abstraction, so we can fine-tune the player's relationship with the game and emotions as we go.
Note, too, that many games contain a mix of all three elements, sometimes even in the same moment.
Role-playing games, for example, are generally representations that find moments to move the player closer to simulation, whilst at the same time defining elements of the character's emotional makeup through abstract stats. All right, so we've talked about who is feeling, let's discuss what they're supposed to be feeling.
To some people or for some projects, theme can come quickly and naturally.
For others, it's hard to distill the whole experience down to a few words.
So here's a way that we can look at themes for games.
You can have a simple theme, or you can have a complex theme.
A simple theme is just a topic, and that topic can be a subject or an emotion.
For more complex themes, we take the topic and select a lens through which we'll examine it.
Essentially, we take the topic and we ask questions about it.
Now, when we're asking those questions, if we're creating our own project, we often start with theme.
What do I want to say?
Then you can find the best mechanics to explore it.
But chances are, if you're hired to work on someone else's game, that a lot of the mechanics, art, and even story sections might pre-exist your arrival.
So in those cases, you need to look at what exists and find a theme that suits them.
And a good place to start, as my role and what I have shown you, is with genre.
So here we are back with the plant game again.
Genre is the type of game that you're making, and it can be great, you can make great games with simple emotions and simple themes. All that this game asks for is the simple theme of fear.
It works by delivering that emotion directly to the player. So the chances are if you try and use crossing the plank as a way to examine the fall of western civilization, you're probably going to be overdoing it. And adding such complexities can actually push the player out and away from the emotions that you want them to feel.
where you want to remember, where you want the player to enter an emotional state swiftly or feel it directly, try to minimise interpretation. And that means keeping the theme simple.
Other games like Pong or FIFA or Formula One simulators set out challenges of skill instead of focusing on a single emotional response. But the player is still responding directly in a simulation. So a simple theme or challenge can work here.
The problem is that whilst these are really great games, they're all quite similar.
Their verb sets are all about timing and reaction.
As a result, they only explore a narrow band of emotions.
This is where many designers got stuck at the time of the Great Divide.
And it meant that the range of games produced only appealed to certain players.
To widen the pool of players, they needed to widen the pool of verbs.
And some verbs don't fit simulations as well.
Kick, run, drive can work quickly in simulations because they don't need interpretation.
But you can't talk, romance, explore, interpret, or negotiate to win on a button press, not without understanding the wider context in which that action is set.
And context means a more complex theme.
A lens takes the topic and asks questions about them.
Those questions can give our gameplay verbs context.
Take love as a topic. You can look at it in all sorts of ways. Are we saying that love is good or bad? Are we saying it's good or bad for the character?
Theme gets us to ask important questions. Why does the character hate love? What situations will provoke the character to question their feelings and what role does the player take?
What do we want them to feel about the theme?
These are the very questions that the character in the story need to ask about the theme as we progress through the experience.
It's where the emotions come from.
Now if you find short descriptions like this don't actually convey the emotion, you can always write them out as a sentence.
and then build out this mind maps, mood boards, whatever works for you. If you're stuck for a theme, you can start by having the list of questions and then boil it down to get to here. Just make sure that when you get there, the central theme is clear and concise.
That way it's easy as it communicates to yourself, to the rest of the team and to the player.
And don't forget the player or the game verbs. Just because the game can allow a more complex theme doesn't mean you can lob in any theme that you want without consequence. The theme still has to be one that can...
investigate with the genre, setting and verbs that you've been given or that you've given yourself.
Aligning the verbs in the theme is the biggest step that you can take to align the game's emotional content to the player's emotional reaction. Now does that mean that we can't challenge the genre? Absolutely not!
Spec Ops The Line takes war as the topic for its theme.
That meets the player's genre expectations.
The game also embraces a lot of the expected gameplay tropes from the gameplay genre.
That also meets the player's genre expectations for a shooter.
In doing these two things, the game produces a satisfying experience that keeps the player engaged and immersed.
So it's a good shooter. So what's the fuss about? Well, having brought the player in, Spec Ops then turns the lens on the topic of war and begins to ask questions about the mental impact that conflict can have on the soldiers that fight it, and in particular the character that we're playing.
Interestingly, one of the ways that the game examines war's negative mental impact on the character is by moving the player between simulation and representation.
In changing the player's distance from the character, it simulates the way that the character is mentally separating themselves from the actions in the game.
Now by inviting the player into what appears to be a recognisable situation, it's a shooter, then aligning the player with a character, the game's theme is able to contradict the gameplay experience the player is expecting to have.
In fact, it tells them, spoiler, that everything they've been doing is wrong.
And it manages to do that while keeping the player in the experience.
Now, an important way that SpecOps achieved this is it did it over a matter of time.
Game designers design for immersion.
Creating immersion is a balancing act.
Increase the complexity of a game too fast over time, and it can become frustrating for the player.
Increase it too slowly, and it can become boring.
Both risk breaking immersion and ejecting the player out of the game.
And it's the same for emotional immersion.
Introduce new context, emotions, or information too quickly or too slowly, and the player can be dropped out of the experience.
The good news is, it also means that new context, emotions or information can be used by game designers as one of the things to keep the player engaged within the game over time.
Nine hours in, you're shooting guys again, but now you're doing it to rescue your buddy.
OK, so we've talked about what we're saying, but how do we communicate emotion in the game?
Let's go look at some of those verbs that we've been talking about.
We can tell emotion, we can show emotion and we can do emotion.
tell. Okay, what's this guy feeling? No idea. Oh, so now we know that the character is happy.
Telling is a quick and direct way that avoids the need for interpretation.
When we tell, we are simply informing the player what the character is feeling as fact.
But this can be emotionally unsatisfying.
Without context, the player is likely to take the information and not feel a response.
We're close in this form to an abstraction.
We can show.
So here, we can show that the character is happy.
In showing, we're asking the player to interpret.
So there is a risk that they might get it wrong, hopefully not with smiling.
But on the positive side, we are making the player active.
And we're also asking them to respond as they would on seeing a smile in real life.
That means that showing is closer to a simulation.
It also means that showing is more likely to generate an emotional response in the player than telling. It's a stronger method.
And we can do emotions, can we? Well this can work.
But even though we've added interactivity, this is really just telling with a button.
The problem with press Y to cry or X to be happy is it assumes emotions are turned off and on in both the player and the character.
But by adding interactivity, we change something into something greater just by making it a doing action.
OK, it does shift us on by involving the player a bit, but we're still telling the player, so let's rate this as telling plus.
Note also that this is not just representing how the character feels, it's representing a change in the character's emotion.
And that's because interaction is better at action than passivity.
This is one way that games are different from films and books.
It's not just that we can do things, it's that not doing things can be confusing or difficult to represent.
And that means when we talk about interactivity, we often have to combine tell, show, and do to communicate certain emotions and story points in the strongest way possible.
We can tell or show the context so that we can do the moment of change.
Okay, so if this is only telling plots, how can we improve do to match the things that I've been talking about? Well, remember our theme. We need a lens. We need context.
By shifting to pet the dog, we've created an emotional context.
It's exactly the same mechanic, press X, the same result, the same representation.
But because we've asked the player to interpret not just an emotion, but an emotional situation, the player's more likely to respond with an emotional response.
They're more likely to feel.
We're closer to a simulation, and one that's been proven to work rather well.
But can we do this with more complex emotions than happy?
The more complex the emotion, the sillier it can feel to communicate it by tell.
And the harder it can be for the player to just read the emotion from show.
Is this character morally conflicted or are they constipated?
Hearing is somewhere where perhaps do can come into its own.
What we can do is give the player a moral dilemma.
Pet the dog or kick the dog.
Such situations can create moral conflict not just for the character but also for the player.
Or they may. But remember, we've added another layer of complexity, and that means there's an increased chance the player won't feel what's intended.
Part of the issue here is that the choice is binary.
Some people would never kick the dog, meaning that this was never going to be a choice.
So they never are going to feel morally conflicted, at least not about the choice.
They might now feel conflicted about the character.
What an asshole for even considering kicking the dog.
Other people will kick the dog because they find it funny, even if the character doesn't.
And in both situations, we divorce the player from the character, the situation, and the emotion.
The same can be true if we add an outcome. Pet the dog for a 10% increase in trust.
Kick the dog for a 10% decrease in trust. Here we need to ask ourselves, is the player now making a moral decision or a game decision?
In each case, a big part of the problem is the fact that this choice is happening in a vacuum.
To really make this count in a linear case or even in an emergent case, because I know this feels like it's linear, it's also true in emergent cases, to really make this count to align the player with the theme, character and emotion, they need thematic context. Let's imagine if the game's theme is one of the ones that we discussed earlier, love is hate. Here the character is faced with a loving action and a hateful one.
And so when the player chooses, they're using that choice to interrogate the character's feelings.
If we communicate our theme, the player should understand why the character is facing this choice and what the emotional responses from the player, what from the emotional response of the character are after the player has made the choice.
Context is vital to bring us into this because now we're attached to the character and can understand why we're making the choice.
It allows us to attach more emotion to the situation.
So that brings us to the question, why does the player feel emotion?
Well, in simulations this should be obvious.
As we've said, the player is responding to the emotion in the mechanics.
There's always a chance that they won't understand, but as the mechanics are the context, the player should really know what to feel and why they're feeling it.
I drove fast, I'm excited.
For representation, though, we need context.
And that context can come from story.
That's not to say that every story needs to be linear or even authored, but it does need context.
And when we think of story in games, it's often helpful to think about setting up a series of emotional boxes.
Each box contains an emotion and a set of questions.
and a question about it that relates to your theme.
Box, emotion, question.
For each box, you need to think about the context that the player has when they approach it.
What will the genre have told them?
What elements of the game will have they experienced?
Will the player have the context to interpret the emotion in each box, just as they did with the moral question over the dog?
Where the answer is no or unclear, you can think of each box as requiring its own mini three-act structure.
What I mean by that is an introduction which sets the context, the middle which is the emotion and how it's split between tell, do, and show, and as a result simulation, representation, or abstraction. And at the end some sort of emotional payoff or state change for both the player and the character at the end. Now that can be as simple as I have the ball, I kick the ball, I score a goal. Yay! Or it can be more complex.
So let's look at an emotional moment in a game that's all about simulation, that's told through representation, and see how it deals with one of its emotional boxes.
Or in this case, a cube.
In the first Portal game, the player enters a chamber and encounters the weighted companion cube.
In essence, this is the same as the functional storage cubes they've encountered elsewhere, only this one has a heart drawn on it.
and the player is told to pick it up and to carry it through the level.
As the player encounters the cube and continues through the level, the new emotional context comes from a handful of lines from the antagonist, Lados.
The cube is not a threat, but you're not to care for it.
Now up to this point, the player's only contact with the world, with any other being, has been with GLaDOS. But by this stage, the player is beginning to doubt her.
Our suspicion gives context to what we're doing, so the telling here becomes more than that.
We're suspicious, so we doubt, so we interpret, we interrogate.
The fact that the things that we're told are contradictory also invites us to find our own truth in it, deepening the telling.
When the player reaches the end of the level, the player is asked to euthanise the cube, essentially to press X to kick the dock.
But it's not a dock, it's a cube, a box, that says and does nothing.
Yet player after player reached the incinerator and looked for a way to cheat the test, so that they didn't have to destroy the cube, only to realise there is no choice.
They had to drop it into the pit.
What the team does brilliantly in the space of one level is make you care.
for a cube. In fact, most of the dialogue in this level is written for after this moment, with Lados insisting that you have to destroy the cube. The team had constructed something where they knew and could predict the player's emotional reaction to the character's situation.
They knew that they were going to have to cope with the fact that the player hadn't put the box in there. Now, to achieve this, Portal ticked all the boxes we discussed earlier.
Just like Spec Ops, Portal embraces the gameplay genre, allowing the player to become immersed in the mechanics so they can add complexity elsewhere.
Portal builds its theme from the game's abstract, repeated gameplay.
What would otherwise have been a series of excellent but disconnected puzzles becomes something deeper.
As the player completes abstract tasks after abstract tasks, they begin to wonder who they are, what their role is in this world, and whether they have any power over it.
The team created a story of free will.
The cube, like the player, is innocent, trapped in this bizarre environment.
And we're used to being bossed around by Gladys.
We now want to reject what we're being told.
So when we reach the end, when we reach the incinerator, we're identifying with the cube.
The companion cube in this world is the same as the player.
And this pushes the game from abstract mechanics through representation and into simulation, the result being people developed feelings for a cube.
Can a computer make you cry?
Yes, it can.
So to sum up, when you're examining emotion in games, there are four main things that are useful to think about.
Who is feeling the emotion in your game? Simulation, representation, abstraction.
What emotion is the player supposed to feel? Theme, genre.
How do we communicate emotion in a game? Tell, show, do.
And why does the player feel emotion?
context, structure. By looking at emotions as interactive, as something to interpret, you can go forth and help the player to fall in love, cry, hope, dream and explore another thousand different emotions, all while keeping them in the game. Good luck. Thank you very much for coming along today. I hope that's very useful for you. Have fun and be emotional out there.
