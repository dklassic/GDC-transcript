So thanks everyone for attending this session on art direction for AAA UI.
My name's Umar Yunus.
I'm the lead graphic designer at Dice LA.
Just a quick show of hands, who here is a graphic designer or a UI artist?
Okay, quite a few of you.
Art directors?
Damn.
Designers?
Coders?
Oh, nice.
producers. Anything else I missed out? Nice. So, okay, let's get started. Just a couple of friendly reminders. Please silence your really old phones so they don't make noise.
And also a reminder to fill out your surveys after this presentation is done. So, Ahlan which loosely translates to welcome, welcomeen, bienvenido, yokoso.
Hopefully I pronounced those correctly.
So we're going to be talking about more of this later.
But just a quick note, you can see how in different languages, the same word has different length.
And when we talk about localizations, this is going to become more important.
So today's session, we've got a lot to cover.
Hopefully this is going to be like a reference manual for you guys, so you can basically refer back to it when it gets uploaded to GDC Vault.
But I also want this talk to be interactive, so we're going to be asking for a couple of sections where we get the audience to participate.
We're not going to be focusing on mobile or app development. This is mainly for AAA, so it's the big screen format.
Mainly console and PCs.
But before we jump in, I'm just going to give you a brief intro about me.
So I was born and raised in London.
It's just there on the map.
And I'm the youngest of four brothers.
My dad made our first computer with his own hands.
I don't know why it was called, but back in the day, you basically had to solder chips on the motherboard.
But I do remember the C64, the Amiga, playing games on them was like my childhood, and using Deluxe Paint 2.
which kind of got me interested in game art.
A couple of years back, I moved over 5,500 miles to Los Angeles, and I've been working in the games industry over here since then.
Here's a pic of me when I first started in the industry.
I was young, I was passionate, bearded, and this is me with Kojima when I was working at Kojima Productions.
You develop pretty fast in the industry.
So I've been working in the industry for 10 years, over 10 years.
These are some of the games that I've worked on in some of the studios.
The latest game I've been working on is Battlefield 1.
I worked on Metal Gear Solid V at Kajima Productions, and before that I was working at Crytek in the UK, working on the Crysis franchise.
So just to give you a bit of a flavor of what I do, I put together a small show reel.
Let's have a look at that.
So what do you think?
Thanks.
So let's move on to some terms now.
Let's get into what this talk is about.
So a lot of people think that UI and UX are the same thing, but they're not exactly the same thing.
When it comes to UX, this is a big thing.
It's actually from the point of where the user buys your game at the store all the way through to when they play the game.
So it's like the end-to-end interaction.
But UI kind of still is part of that UX, the user experience.
UI is more or less the in-game stuff.
So it's the UI, the menus, which you probably know.
That's why you're here for this talk.
But the UI is also the visual identity for the game.
And it conveys the style and tone in every detail.
So the information that the UI does is actually is presenting information to the player, whether it's visual, sound, touch, vibration.
And all of this essentially boils down to player feedback.
So any event or any message in the game that you need to communicate to the player is what UI kind of does.
And generally, when people think about UI, they think of it as the HUD, the heads-up display, which is when you're actually playing the game, the core gameplay.
But I like to split it up into two things.
So, you know, we have the front end and the menus.
and then you also have the HUD and the gameplay.
And this kind of has a different approach.
So each one of these, the HUD is more like context-based, where you're talking about messaging.
The things need to be instant and recognizable to the player.
And the front end is all about the navigation.
It's more about information architecture and how your game is structured.
So people probably know that design isn't linear.
It's like a mess.
And you'd go back and forth between everything that you do.
You know, you iterate, you refine, and sometimes you just scrap ideas completely.
But we're trying to make this a lot easier by looking at art direction and also cognitive design and we want to help streamline that process if we can and basically go for form and function to kind of guide us along the route.
But why is this important?
You know when we're looking at games we want our players to see you I in context and we also want it to be transparent so you don't want to always show you I'd like you know hey here's you I you know it's in your face so you want you I to be subtle.
It's kind of like utility versus a state so you also wanted to look nice but you also want to make sure that it's not always front and center you don't people playing your you are you want people to play the game and you are is there to support these actions.
So.
Without UI art direction, you end up with something like this.
You know, everything is on screen.
Everything's calling for attention.
There's no consistent style.
There's like 500 fonts just in this one screenshot.
So you want to make sure that there's no like, hey, your health is low.
Throwing on next-gen effects doesn't help it either.
So you need to be subtle, make sure that everything works together.
So just reset your brain by just looking at this dot in the center and just ignore what came before So we need to get our bearings we need to look and see where we want to go How do we attempt to create a UI that's visually appealing and usable?
But we also want to keep in mind the brand identity and the style and we want it to be unique So we're going to be thinking big here. This is like the broad strokes. This is like the planning phase So essentially with games, we want to design for the five senses.
And the more senses you kind of design for, the more...
Oops, just went out there.
So there's an excellent TED talk by Jinseop Lee, where he talks about designing for the five senses.
It's not games related, but it's still extremely interesting to see.
The last two, taste and smell, they're not really mainstream at the moment, so we're not going to concentrate on those.
Games.
do focus on touch and the interaction, the sound and the sight.
So, you know, the interaction is key to what makes games, games.
So, we're going to take a brief look at the platforms, understand the input methods and translating that to our senses.
So, touch it, boom.
We know for console, you have like a controller, it's got face buttons, so that's the way that we're interacting with our games.
And you'll understand how...
You know the inputs actually affect game or the UI.
You need to have real estate for buttons and prompts and that kind of thing.
So that's why it's important to understand what the controller can do and how you want to represent that information on screen.
Same for PC and keyboard.
The PC Master Race.
So you know the mouse has similarities to the touch screen, also the analog controller.
But it's still unique and you want to try and cater for this as well.
You're trying to think of like.
You know everyone you want to try and make your game as inclusive as possible.
Sound is 50% of the experience. You know you can go and watch your favorite movies and just turn the volume to zero. It doesn't have quite the same impact so sound is actually a huge part of UI, but that's not my area of expertise, so I'm not going to talk about that. We're going to be focused on the vision, the visual story and what makes a good visual or image.
So we need to understand.
a couple of key areas of theory and how we can relate this to our design and how we can make our images more appealing.
So this is an image of Blade Runner 2049 and that movie won awards for its cinematography and there's a reason why this image is actually really nice and pleasing to the eye.
You know, composition, the style, the mood, the tone, the color, the grading.
You have a central focus, you have these parallax, sorry, the perspective lines kind of leading your eye.
You can actually look at the image and your eye has a chance to relax and take in the imagery.
It also works in black and white, which is a very important feature.
It's still readable, composition is.
So you want to make sure that all of these components actually work in your UI as well.
You can take all of this theory and apply it to UI.
Similarly, if you look at this image, it doesn't quite have the same impact.
Even though the tones, maybe the perspective is slightly off, but there's quite a lot for your eye to look at.
And that's the basis of this.
You want it to basically be, you want your eye to rest at a point.
You don't want to just overload the user.
It's vibrant, it's saturated, but there's way too much noise.
you know, you want, we want to understand how we perceive this information, how, how we perceive visuals. So to do that, we need to understand how the eye works.
So light enters our eye and hits the retina. And at the back of our retina, we have a concentrated pit of rods and cones, which kind of looks like this. And the signals are sent to the brain.
The rods, they basically have a certain color.
Sorry, the cones have a certain color and they're sensitive to light based on like red, green and blue.
And you can see in the center of the image, there's a lot of concentration of red and green and blue is towards the outer edge.
So our eyes are actually super sensitive to red and that's really important for UI.
So we want to use red to call it to attention.
So whether it's danger or whether you want to bring the user's attention to something, then let's use red for that.
the science kind of informs how we should design a UI.
So if we kind of simplify that diagram, you get this.
So the center focus point is where you have red and green sensitivity, and towards the outer edge, you have blue and yellow and luminance.
So when it comes to designing a UI, especially for the heads-up display, this is actually quite important.
So the biology already tells us how we want to distribute the color in our designs.
So we're going to put the crucial information in the center.
And then towards the periphery, we want the secondary information.
And keep in mind, for pod layouts, this is extremely important.
Let's look at perception and how our brains actually understand what we're looking at.
So initially, our brains will always pick up shape.
So silhouettes, large, broad shape, really help make a faster imprint on a memory.
The second thing is color, which is connected to emotion and maybe brand association.
And the third thing is the form.
It takes longer for our brains to process language and content, third.
So we need to understand that this is the sequence of how our brains kind of figure out what we're looking at.
So this kind of theory should help us design better.
Speaking of theory, Gestalt theory is actually...
extremely important when it comes to UI design and in design in general there's a set of rules that we can follow to understand, to make sense of like what we want to design.
So these principles are based on like cognitive research and how we perceive the world through our senses.
So closure, we have the circle but it's not actually a circle, it's just a dotted line but our brains kind of perceive that as a circle because it makes It likes to close gaps.
Proximity, these things are close together, so our brains are picking up that this is kind of a group, maybe.
Continuity, you can see the line, even though it's broken by this horizontal line, it still feels like it flows all the way around.
Similarities have the gray colored circles and squares.
They kind of feel like they're a group.
And then you have the invert, the hollow versions.
Figure ground, there's even though this image is 2D, it kind of feels 3D, but you don't get a sense of what's in the foreground, what's in the background.
That's what figure ground is all about.
Enclosure, basically taking proximity and just having this great box behind it, you're kind of grouping those elements together using that.
And then there's symmetry.
So let's look at a game example and see how this theory actually functions.
So this is a screenshot from Battlefield 1, the spectator mode.
And you can see that the space in between is kind of forming a closed gap by the cinematic bars at the top and bottom.
Proximity of these elements next to each other form like the squad lists and the icons in the center for the score mode.
Then we have continuity.
So this line, even though It's kind of broken. It feels like a continuous line going all the way across.
Similarly, in terms of the highlighted box with the inverted text, so you have a white background with black text instead of a black background with white text.
Figure ground, all of these elements kind of occupy the same space.
There's no like zed sorting, but we know that we need to give a certain location for these so that people can understand where this information is layered.
Enclosure, we're basically using boxes and kind of keeping things grouped together.
And then we have the symmetry, basically reflecting the squad lists on the left and right.
There's also some usability principles which we need to look at.
So whenever you're designing any kind of screen, you don't want to have more than seven items that are unique on one screen because it will just get overloading for the user.
You don't want your menus to be more than three levels deep.
Affordances are things like buttons, sliders, checkboxes.
You want those to look and function like how people expect.
Focus area, you always want to have a focus area in your UI so that people know what they're actually looking at.
If you just had the screen and nothing was highlighted, people get confused.
It's like, am I supposed to do something here?
Did it go wrong?
So you always want to have a highlight or some kind of button to show a focus area.
You want to make your state changes clear, so when you click on something, it looks different from when it's unhighlighted or unclicked.
You also want to have a page flow, so that your information has a hierarchy going from top left to bottom right.
And you always want to provide helps and hints.
So let's look at this in an example here.
So this is from MGS with customization.
So you can see there's seven elements on screen here.
And we don't want to add any more, because it'll just get confusing for the player.
The menus are like three levels deep, so you only have to click three times to get there.
Buttons look like buttons, they function.
You have a focus area here. This isn't a video, but this would be pulsing.
State changes are obvious, so what's selected, what isn't.
You have a nice page flow as well, so you can understand how that information is laid out.
We're also providing helps and hints.
So here's some cheat sheets for you guys to look at.
I'm just going to take a drink of water.
You can print this out, put it on your bathroom door, just remind yourself of these things.
So essentially, we want to design for effective perception.
But we also want to look at visual harmony and make sure that elements kind of work together.
We don't want things like fighting for attention, because that's where it gets confusing.
It's like, am I supposed to click this or am I supposed to look here?
So let's go into data gathering and research.
So this is kind of like doing your homework and doing your research.
You basically want to understand your game, your creative direction, the art direction, your target market.
You want to collaborate with all the disciplines, make sure that you speak to art, code, design, make sure that everyone's on board and aligned when it comes to the vision of the game.
You always want to ask questions.
You know, what's best for the user?
You know, you're making a game, but you're also making it as if you are the player.
So you want to always question, like, what are you doing?
Is this the best way to do it?
You also want to understand the visual orientation of your game.
You know, what's the themes?
What's the tone?
What's the style going to be?
What era are we setting this in?
Because all of these things will play into your UI design.
And we also want to think about usability, like we did with the theory, the guest out theory, and the usability, and try and bring that into our design.
You also want to go treasure hunting and basically find as many good references from movies, games, TV, mobile, rubbish on the floor, anything.
Just get all of that reference and gather it together because the more reference that you have the better it will be informing your decisions So yeah, just make a folder Right-click new folder done You want to be aware of design trends Because there's a lot of Designs that come and go and you don't want your designs to fall into that trap of being like oh that was so ps2 era You want your designs to outlast the console generation or, you know, the hip new design for that year.
You always want to challenge the status quo, but you also want to keep the brand in mind and think of the bigger picture.
Even within franchises, you want to make sure that each game looks and feels unique.
So this is kind of like the crux, getting into the process.
This is like designing the core components of your visual identity for your game.
So we've got a lot of things to get through here, but the grid is the first one we're going to start off with.
So grids can help you establish hierarchy, navigation, flow, consistency.
It'll ease users' memory load.
It'll provide shortcuts so people know where things are when they go back and forth between pages.
And you can apply this to the front end and also the HUD.
The example here is a 20 by 13 grid, but you can make any grid that you like.
Just make sure that you stick with it.
This is also a golden ratio grid, so all of you guys have mobile phones, and you can get those third grids.
And it kind of enhances your design.
So if you kind of place things at the intersections of all of these lines, it'll give for a nice, pleasing layout.
You also want to keep in mind aspect ratio.
So right now, we designed for 69 screens, which is kind of like the standard across the board.
But then you also want to make sure that it works on 4.3.
So.
If people don't have the latest technology, or they don't have screens that we're kind of used to, you still need to make sure that they can play the game without things overlapping.
You want it to reformat nicely.
You don't want things to get scaled in the wrong way.
But also on a cater for the future, where things go a bit crazy, and people have multi-display setups, or 2019.
So you want to keep these things in mind as you're designing your UI.
And the grids would really help with that.
So when it comes to grids, you want to keep everything within a safe frame.
So that's roughly 90% of your screen.
And that's things like text, icons, things that are really important for your UI.
It doesn't matter if a flourish or some kind of bounding box just kind of bleeds out.
But it's the most important information, like text and icons.
You also don't need to fill up every single piece of the screen with information.
So leave some negative space for the information to kind of breathe, let the content breathe.
You also want to think about alignment. So, you know, you can see that the left hand side has is a bit janky, but even if you have everything left aligned, make sure that you know you have consistent spacing between things you want to anchor elements as much as possible.
Speaking of anchoring, so this is a screenshot from BF1.
We have, if you imagine that the screen is divided into these nine quadrants.
And those quadrants have an anchor point.
The anchor points basically are there to help you lay out your information.
Because when it comes to the UI, there's a lot of information that can easily overlap.
And you want to make sure that there's clear and concise area and location for things to kind of sit.
So at the top here in the middle, those elements are actually anchored to the top center.
This one's to the top right.
These two are anchored to the bottom left.
These are anchored center.
And these are lower right.
And this also ensures that when you reformat your screen for 4.3 or 21.9, that this information will actually move out and still be consistent throughout your designs.
Typography.
So I've got another video here for you guys to watch.
And.
explains why typography is so important.
Let's take a look.
Awesome.
So you can see why choosing the right font is important.
I don't want Ryan Gosling after me, so yeah.
So when it comes to choosing fonts, we need to look at the bigger picture.
You know, the legibility, the readability, the branding, the style, the tone.
We're going to talk about font variations later on, but we also want to look at trends and localization and pricing budgets.
So fonts can be expensive.
So this is Crisis, well, a mock-up of Crisis, and it looks really different because the font was actually something that we experimented with.
And we had to kind of go back to Agency FB, which is the font that we used.
It just didn't feel like Crisis.
So I know these screenshots don't look exactly the same, but the font is the biggest thing I want to look at here.
There's also the six foot rule.
Does anyone know what that is or what it could be?
Any guesses?
No?
OK, so it's basically.
Yeah, yeah, it's basically.
on average when a console player plays their games on their big screen TV, they're going to be six feet away and the font needs to be legible from that distance.
Obviously that's down to font size as well, but you still need to choose a font that's clear and concise.
So fonts are there's a lot of information which goes into designing a font, but the main thing that we're concerned with is the X height.
And that's this area here.
It's actually the height of an X and also the counter, which is kind of like the opening within letters like O, P, B.
You can see in this example here that when we look at the B and the E, there's a difference between the Freestyle script and the Open Sans font.
And at smaller sizes, it gets harder to read, so you want to make sure that fonts with a bigger counter are basically a lot easier to read at a distance.
You also want to look at extended character sets.
So don't just go on the internet and download a free font.
That's not going to work for AAA games.
So you need to make sure that your characters support all the foreign characters.
They have the numeric ranges, the diacritical marks, which are like the small accents on top of the letters.
And they also support the glyphs and special characters.
Generally you want to try and buy the entire font family because it will come in really handy later on for you.
You know there's so many different weights that you can choose from, condensed and extended versions.
And you know generally professional fonts have all of this.
When it comes to your body text you want to make sure that when you're using lighter fonts, at larger sizes you want to use lighter fonts and at smaller sizes you want to use heavier fonts.
Just so that they work on your screen space.
You want to make sure that things don't get too thin, because then they become really badly aliased. So you want to make sure that you use a heavier font at a smaller size. These are font variations, and you generally don't want to use more than two font variations.
Don't do the one at the bottom, please.
If you're just completely...
you know, like, noob to this and you don't know which fonts to choose, this is a good list to start with.
So these are professional fonts that you can get from, like, the major sites.
And they generally cover, like, all the extended character sets.
They have, like, all the font weights. So, you know, these are good ones to go with.
They're not perfect, but they're a good starting point.
Also, please don't stretch fonts.
Stretching fonts is like stretching your face.
You won't like it.
It looks weird.
If you do want to stretch it, just scale it proportionally.
Or use the condensed or the extended versions.
It's a lot more professional.
When it comes to text as well, you want to make sure that your text sizes, you have enough characters to display in the text without it going off screen.
So generally, you want to word wrap to like 60 to 120 characters per line.
It's easier to just left align and then you know that's easy for reading as well.
Localizations you also want to add like 20% more, sorry 40% more text.
Text size for overflow and you also want to be conscious of like right to left for my ink for Arabic and Hebrew.
So this is an example of BF1 operations in English and we have.
A crazy thing that just puts.
the largest strings it can find on one screen.
And that's a good way to test, does your game actually work with localizations?
So we can see how big text boxes are going to get, how big buttons are going to get.
And you can see the box on the right, we actually have to shift that up because the buttons at the bottom were just too long.
So I'm just going to flick between them, just so you can see.
It's a big difference.
So you need to cater for those edge cases.
Does anyone know what this is?
Yeah, sorry.
It's the longest string that you can get for a game attack, so whoever has this game attack just don't use it.
It's just really bad, especially for UI designers, because we have to cater for this.
But sometimes you have to add on things like the clan tag and the rank, and you have to display this whole string.
in your UI. So you have to make sure that, you know, if you have a sentence with, like, someone's name in the middle, you have to make sure that this can fit. So, you know, this is kind of like the worst case scenario. And we always design for gamer tags this long.
There's also other variations of this with WM, WM, WM. But, yeah, whoever has those gamer tags, just get out. Get out. So we're going to play a game. And it's called What The Fun.
So you guys are going to try and guess what these fonts are.
Here's the first one.
Yeah, that's pretty easy.
Impact.
This one.
Yep.
Well done.
Oh, nice.
Anyone know this one?
No.
Any other guesses?
Sorry?
Microgrammar, yes.
Nice.
A lot of movies use this.
Comic Sans.
So now we're going to talk about shape language.
And this is kind of drilling into the details of what your art is going to look like.
This is kind of like the elements that create visual harmony and interest in your design.
So the fonts are one important thing, but this is like the next.
next thing you need to look out for.
This is kind of like tying into the grander visual identity of your game.
We're moving from low fidelity blockouts to high fidelity assets here.
The shape language will inform your style guides as well.
And it'll support your cognitive aspects of your design.
So essentially, these are kind of like the building blocks.
We want to basically run with a shape language that's consistent.
We also want to provide framing and backdrop for our UI.
It helps to establish like the look and feel.
These are kind of like the signature elements as well.
Things like patterns, brushes, lens flares, sorry.
We also want to look at shape consistency.
So if you have a stroke, you want to make sure that those strokes are consistent.
You know, if you started with the top style and then you ended up with the bottom style, that's actually still going to look weird in a UI.
It won't look consistent.
similar thing with like angles and rounded corners.
You want to keep those things kind of consistent as well.
So we're going to take a look at some examples.
So this is from MGS.
When you customize, so you can see that the elements kind of feel like they belong together.
There's no kind of like odd shapes.
Everything's kind of nice and rectangular.
It kind of fits that military theme.
This is kind of like the.
A bunch of screen grabs from different areas of the game.
They still use the same kind of squared out shape language.
The color schemes are still there.
This is from Crisis 3, where we have the angle boxes.
And then we have some screenshots from various locations.
You can see that the themes kind of still run through the whole game.
So it doesn't matter what the screen is, it should still feel like it's part of that same product.
And these are things that kind of tie into your shape language, you know, do you want angular corners, do you want it to be like brushed, do you want it to be, you know, a lens flare, like just full out lens flares and go for it, but keep it consistent.
Next we're going to talk about iconography.
So there's a couple of things with icons, some kind of ground rules.
So you want to make sure that they work on the minimum screen size.
You want to keep them simple but varied.
You also want to try them with the squint test, which is kind of like just squinting your eyes and just seeing if you can make out the shapes.
That's what makes good icons, basically something that you can tell from afar, things that are easy to see and read.
And a 1 inch by 1 inch is kind of like the largest size that you could probably have an icon on screen.
You don't want to just have a massive icon and then, you know, that's everything. You want it to work on multiple sizes.
So to get...
good icon designs, you want to have a construction grid.
Kind of like the grids that we're using for the UI, but we also want to do this for icons.
This will help ensure that things are consistent.
It'll make sure that you stick with this kind of grid format, so as you design your elements, you know, they'll feel nice and cohesive.
You also want to kind of create icon specs, so that, you know, people that actually create icons for you would understand that, you know, things like rounded...
the rounded corners, the smallest point size, what gaps should look like.
All of those things are kind of detailed, even down to the angles of what lines are gonna be at.
These things are really important when keeping a consistent framework for your icon design.
There's also something called optical balance, which in this example, the square, the triangle, and circle, you can see that the triangle and the circle kind of overextend slightly.
And this is actually really important for icon design because even though they're not mathematically correct, this will actually make your icons feel a lot more consistent in terms of size.
So in this example, you've got like a nice square icon, a thin triangle, a circle, and you can see that the outer lines, they don't actually extend all the way out.
You have like a gap when it comes to the squared icons, and this is basically just down to optical balance so that things feel consistent in size, even though they're not mathematically correct.
And you need to do this throughout your UI design so it'll keep things really nice and pleasing.
This is like designing for visual harmony.
There's also things like testing your icons in different line weights, testing them, whether they're filled or inverted, because that can have an impact on how fast you can read these icons.
So.
Even though they're really minor, it's like during gameplay, if you have an icon that you can't really tell what it is, like instantly, then you're going to have a problem with like maybe a player missing out on something major.
So you want to make sure you test like this in game, make sure you're like trying out different variations and see what works and what doesn't work.
Icons can also be like ambiguous, so sometimes they might need text to support what they mean.
So you probably, unless you play Battlefield a lot, you probably don't know what these icons mean.
And there you go.
These are body action icons from MGS, MGO, sorry.
So some of them might be a bit ambiguous, but when they have the descriptions next to them, then you understand what they do.
The treatment also kind of folds into your visual identity.
You want to make sure that all of your icons have like a consistent style.
Going through and this relates to your shape language and it also ties into your your broader visual identity for your game So this is kind of like boiling down your art direction into one single icon This is how important icons are for your game, and they can also replace text so With an icon you can basically save a lot more space We've got a game another game So it's called universal icon So what do you think this icon means?
Capture point.
Anything else?
It can mean more than one thing.
So that's the thing with icons, they're a bit ambiguous.
This one?
There are connections terminals.
This one's pretty easy.
All of those things.
This one.
Appearance, settings, customization.
Yeah.
And that's the last one. So moving on to colors.
So color plays a lot on your emotions and the branding.
But.
I generally want to try and say don't rely on color.
Even though it's important to your brand, you'll see later on that colors can be perceived in different ways.
But, you know, you still want to tie it into your direction, you still want to tie it into the themes and tones of your game, you want it to show states.
So everyone kind of knows color theory, or if you don't, you can look it up, it's fairly easy.
Each color kind of has a meaning in different cultures as well, so just be wary that you might not be wanting to use colors that might be offensive or maybe seen as like derogatory or something like that. So just look up your color schemes before you actually because your game is going to be AAA, so it's going to be worldwide and global. So yeah, just be wary of what colors mean in different cultures.
Generally, you want to try and limit your color palettes as well. You want to have like 5 colors and you want these to be varied and distinct, but you also want to make sure that.
you know, each one has a purpose.
You know, avoid like completely full saturated colors because that tends to bleed.
Just experiment and just make sure that, you know, you use colors kind of sparingly.
So this is an example from Crysis again, where we're using colors to kind of represent the button states and it kind of matched the military theme.
You can see that the colors are actually quite subdued.
We're not relying on colors 100% here, but even though it's.
It's basically enhancing the visuals.
Here's a good test for everyone.
The image on the right, just hold your finger up and just cover over the line and just see if something special happens.
So you can see that the environment actually has a big impact on.
The shade of the color so you need to be wary of where you're being where you're using your colors. So when it comes to the HUD, it's going to be against all this kind of like environment are and going to make sure that you are still stands out. But then your colors can be perceived differently based on the environment. So you know what you originally designed for might not work well.
So ideally you might want to have a color luminance range for your UI that's not being used in the environment and that way you make sure that you are always readable.
Here's an example from Uncharted 4.
You can see the color breakdown on the right hand side.
So they're using color kind of pretty sparingly.
They use it for the teams and for certain events, but then you have a nice limited color palette.
Here's a shot from Far Cry 4.
Similar kind of thing.
And a shot from Final Fantasy 15.
You can see here they've actually used red in the centre, which is actually really important when it comes to critical information.
And at this point you need to press red, or press square, and it's showing a little bit of red glow around the outside.
Colour blindness is another reason why you don't want to rely on colour.
People have a lot of impairments, so 15% of the entire population of the world, like the World Health Organization, say that.
people have disabilities when it comes to visual impairments, sound, motor or cognitive impairments, and this kind of affects 5-10% of our players, so we need to keep them in mind when we're designing our colours, or choosing our colours. And these are different types of colour blindness, green, red and blue.
And some games actually cater for that, so a lot of AAA games do cater for colour blindness, but you just need to be wary that you don't want to be giving like...
a preset color scheme that people actually don't find that good.
So maybe, you know, allow the users to customize the colors based on the UI and what they feel comfortable with.
Next we're going to talk about UI representation.
So this kind of like is more focused on the HUD side of things.
So you have non-diegetic and diegetic, spatial and meta.
We're going to go through each one of these.
But diegetic in general is basically taken from movie and films where you have a character that kind of narrates over what's happening in the story, so it's something that's actually part of the narrative.
And generally non-diegetic UI is what you see in most games. It's kind of detached from the gameplay.
The characters don't actually interact with the UI in any way. It's just like an overlay.
Diegetic UI on the other hand is something that's part of the gameplay and games like Division, Dead Space, they have the characters actually interacting with the UI itself and it's also something for players to take in as well.
I love Diegetic UI.
Spatial UI is things that aren't typically associated to like bars and health and text. These are more kind of effects and trails, character actions.
like in Last of Us and Uncharted 4, they have like the character outlines.
And then the meta ones are kind of like, they're not really spatially telling you anything, it's just a screen effect that kind of desaturates your UI or your gameplay or it's kind of blood splatter.
I want to get a bit controversial here.
So there's some standard UI elements that a lot of games use and...
just because everyone's doing them doesn't mean that that's actually a good thing.
Example here is the damage indicator which you see a lot of games.
I like to call it the banana because it looks like one.
But I don't think this is actually a good UI element.
I think it's trying to convey a 3D event in a 2D asset.
And when I'm playing like first person shooters or...
third person action games, you know, this thing is 2D.
You can't tell if there's someone below or above you.
This thing will just tell you like direction based in 2D, but it's not really telling you if they're above or below or behind or in front.
So it's not really working in the 3D sense.
Come at me, bro.
I think a better way is to actually have something which is a bit more diegetic.
It's something that's in the game world. It's 3D.
You can tell that there's attacks coming in or threats coming in from different directions.
So, you know, it's a lot more visually, you can understand spatially where things are.
If you're having a 2D element and it's trying to show you something in 3D, it just doesn't kind of work.
So I think trying to think of other ways to represent that information rather than just sticking with the standards that everyone's going with, I think is a better way to go.
This example from MGS4.
2D artwork, so this kind of falls into its own category.
Even though it's still part of UI, it's something which is, you know, it's like the artwork that goes with all of your UI, like dog tags, medals, imagery.
These are things that we still need to think about as well when it comes to our visual identity and how we style these things, how we want to present them to the player.
Things like screenshots as well and loading images.
Engine knowledge, so understanding our limits, so we want to understand the limits of your engine.
You need to basically figure out what kind of tech you need, you want to exploit the system, make sure it's performant, you want to document these things and make sure you test them out regularly.
So one good thing about engines is that we can use shaders to kind of do half the work for us.
So example here is where we have a base artwork which is kind of flat.
But then you add drop shadows, blur effect, chromatic aberration, and it kind of looks a bit more dynamic.
It's a lot more pleasing to the eye compared to the one on the left.
Here's another example with some kind of distortion effects.
And in Crysis, we kind of did a similar thing where we had the UI have this kind of like scan line kind of glow effect.
So it looked like a projection. And this was kind of how we set it up.
So we basically had our UI elements kind of mapped to polys.
And then we applied the shader effect to those polys.
And this is kind of like the layout.
You can also use the engine to kind of do more 3D things.
So things like scenes, composite your UI along with your environment.
And there's a lot of fun in experimenting with this.
And it kind of connects the UI a bit bad to your gameplay.
So you want to try and think of ways that you can do that more often.
You don't just want the UI to kind of be disconnected from the game.
Right, it's hammer time. So now it's time to like execute and things.
So generally, these are the my go to applications when it comes to marking up things. So Photoshop Illustrator after effects. I'm a big fan of Illustrator. It's just a lot easier when you're working with vectors to kind of scale up rasters kind of have their limitations. So you know roster graphics. You can't really scale them well, but when it comes to vector, it can kind of translate to polygons as well if you need to.
I always start with an artboard and Illustrator is awesome because you can just have as many artboards as you like.
And I generally just start with like a 1080p screen and just like go from there.
So there's different types of mockups that you can create. Static mockups which are kind of like your base UI.
You want to basically try and like figure out the core components of your UI.
So when it comes to buttons, drop downs, sliders, progress bars.
This is where you want to try and experiment as much as you can.
You know, figure out your tone, your theme, and just work with the art and just see what works and play around with Illustrator.
You have like, you know, infinite artboard space so you can just go crazy.
You also want to figure out what kind of button states you have. So things like highlighted, unhighlighted.
And this will really help, like, this is kind of like the core components of your visual identity.
Figuring out what you want to do with the UI.
Same thing for your icons.
You want to make sure that you're actually getting through, getting across those states, making sure that people understand what's going on, keeping those consistent with your button selections.
And then going back to our cheat sheets, we basically want to keep this in mind as well as we're designing our components.
We can start blocking out our UI, making sure that how we want to present this information, this is kind of like.
The user journey, the flow, it kind of comes into UX, but it's also part of UI art as well.
So you want to just lay things out, making sure that, you know, with your style you have clear focus areas, you have like information kind of blocked out in different locations.
And you can try out as many different styles as you like.
And the same for the HUD, you can basically block out the HUD, making sure that you know where your focus area is and moving out to the periphery.
So put your most important information in the center.
When I do my mockups, I always pick these key areas of the UI to kind of approach first.
So title page, the front end main menu, the server, lobby, customization, heads up, and the end of round.
And we're going to look at some examples now.
So these are title screens from different games.
So this is kind of like the really bare bones basic UI, but you still want it to work when it's simplistic like this.
And you always want to try and simplify the UI as much as possible.
There's the front end screenshots.
You can see how each one has its own kind of layout, shape language, fonts, color schemes.
Server and lobby screens kind of get a bit busy, but you want to try and still keep that information available to the user.
Customization gets a bit crazy as well, but this is where you can introduce a lot more diejeck elements.
So maybe having the weapons loading up in the background, having callouts.
You can really kind of tie the UI to the gameplay here.
Same for loadout selections.
And then a screenshot of the HUD.
And then an end round.
You always want to design for the worst case scenarios, so make sure that you blast the UI with everything that can go on.
And that will help you figure out where you want to put things.
So this is like an early screenshot for the spectator mode in Battlefield 1.
And it's just too much, what's going on.
Motion is another area that you can basically use to really call attention to elements.
And just use animate welcome.
This kind of ties into your style as well.
So we can see in the examples in a minute that the style of motion can actually really have a big impact on what kind of UI you're conveying.
So this is kind of like really simple animation with a white square, but it shows that you can have a nice clean animation, or you can have something that's more exaggerated.
Take that, Pixar lamp.
Or you can have something that's a bit more sci-fi and technical.
Let's have a look at all three of those together.
And then you also want to do the same thing for your icon states and button states.
Show how those things animate.
And here's a kind of a complicated example.
It's a good way to also show flow.
Like if you're just sitting and talking about this, it wouldn't have the same impact as showing like an animated mock-up through like After Effects or Flash.
So it's kind of like, hey this goes here, that goes there, and it's like no, just show it in an animation, it's easier.
And then here's a kind of a longer mock-up from MGS.
OK, that's enough.
The last thing is interactive mockups.
So this can be something which you can use in-engine, or you can do it through using a couple applications, like Adobe XD or Flash, Animate.
But essentially, you want to just keep iterating on everything.
And even after you ship a game, you're still going to be iterating on it.
And this is my presentation list of this presentation I was working on.
So I kept iterating on it.
And here's an example from Crisis 3, where we're looking at the main multiplayer menu and how it's kind of evolved over time.
This was the final version.
One last game.
So this is kind of based on the minimal.
posters that you find. Can you guess what game this is?
Any ideas?
Breath of the Wild This one?
This one I kind of stripped out a lot of information because I wanted to show that You know, it's actually quite important.
You can have a screenshot and see that.
Oh yeah, that's that game.
This is MGS.
This one's a bit obscure.
Yeah, nice.
This one's really tough.
If you can get this, I'll give you a bottle of water.
Whoa.
Whoa.
Whoa.
Whoa.
Whoa.
No.
Close.
It's half life 2.
So this is the last thing that we're going to kind of look at, which is invisible forces, things that actually affect the UI.
And you need to keep these things in mind.
So again, localizations, which we talked about before.
So you need to have extra spacing in your text boxes to make sure that things are catered for multiple languages.
Think of colors and meaning, their colors and their meaning.
Any kind of symbols that might be offensive.
And try and use icons as a substitute for text.
TRCs, which is Technical Requirements Checklist.
This is kind of based on each platform, and you need to follow these kind of guidelines when it comes to console development.
But you also want to think about screen sizes, your input controls, think about the visually impaired loading times.
All of these things kind of fall under TRCs, even their button hints.
Yeah, if only we could do that.
And then one last thing like UI can also be non UI.
So things like particle effects, the character animations, audio cues, haptic feedback, all of these things can actually tie into UI.
So it doesn't have to be a number or a text or a bar on screen.
It can be something that's conveyed through the characters themselves.
And you don't wanna just make confusing layouts.
You wanna stick to your guidelines as much as you can.
You don't just want to copy and paste like from other games.
That's just really bad and you kind of lose, you lose out on having your own kind of visual identity for your game.
So let's just summarize what we've gone through.
So number one, research. You want basically form and function.
So you want to go, you know, hand in hand, art and design.
Make sure that you have the broad strokes understood.
your pillars of your game, the creative direction, the tone, the themes, all of those things you want to make sure that you understand before you do any kind of work.
Visual identity, which is kind of like the core components of your UI, you know, your typography, your shapes, your icons, these are kind of like the building blocks. You want to experiment with these as much as you can and try and figure out something which is unique.
And you don't want to upset Ryan Gosling, remember, so choose a good font.
execution. So this is the when you're thinking about composition, your heads up display, your front end you want to try those different mockups, you want to try and create motion interactive mockups so people understand the flow, the use, you know, the way the game will play out. Try and like experiment with that stuff early on, it'll make it a lot more easier before you actually start working on it in game.
And think about the invisible forces, so things like the constraints the technical requirements checklist and localizations.
UI is like a ninja.
It's unnoticed to the player, but when seen, executes beautifully.
Yeah, mic drop.
Thank you.
