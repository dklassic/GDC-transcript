So good afternoon everyone, and thank you for attending this presentation.
My name is Nadege Jozsa and I am a Senior Project Manager for Localization Services at Sony Interactive Entertainment in Europe.
So this presentation has been created together with Nadine Martin, Senior Manager for Test Services, and Chris Burgess, Manager for our Localization Tools at SIE.
So yes, it took three of us to come up with a recipe on how not to screw your localization.
So with this joint effort, we would like to share with you what we have been experiencing and implementing for years of localizing exciting games at SAE, and what we see as essential steps towards efficient, cost-effective, and painless localization for our dev teams.
So it is our ambition that you will be able to walk away today with a good few tips, either to establish a new localization process or tools, or just to answer some of the difficulties that you are currently facing.
So, after this presentation, at the end, the three of us will be available for Q&As, should we have any time for this.
But the cherry on the cake today is that Chris will be holding two poster sessions, 15 minutes after the end of my presentation, where I will be going more in-depth into some of the tool features that I will be touching on today.
So please come along.
It's going to be Indie Overlook 2018.
And we'll be waiting for you there as well.
So before we start, show of hands who here is from a dev team, and who from a localization vendor, translation, audio testing services.
OK, that's a good mix.
So starting now with a brief intro to localization at SIE.
So since last April 2016 up to December 2016, so in a duration of nine months, we have worked on 108 full titles.
We have translated, culturalized, and adapted 15 million words.
We have recorded 18,000 hours of dialogues in studios across the world.
We have set up 75 or over 75 servers on our localization dedicated to.
We have tested more than 1,000 patches and overall performed 450,000 hours of testing globally.
So whilst this will give you some context on the localization scope of challenges that we face at SAE, we found that the solutions that we have put in place have been effective, whether your project be small or large, complex or straightforward.
So now, as a developer, you will be in charge of integrating one, 10, or more languages into your game.
The big question usually is, at what time do I need to think of localization?
In our opinion, the earlier, the better.
Getting to meet with your localization experts as early as possible is vital in order to allow the people who will really look after your localization to immerse themselves into your needs, your game, your objectives, and also to share consultancy.
Conversely, for us localization experts, it's essential to meet with you early to understand how to adapt our processes, our tools, to your needs.
And most importantly, to determine together the most appropriate pipeline that will suit the needs of your game.
So this traditional waterfall model would be best suited where the full game is already in development, where the source script and audio is already well underway, and where there will be minimal fragmentation of assets needed.
So in practice, this means...
After meeting our development teams pre-alpha, localization is done during the alpha phase with a view to deliver the majority of the localization assets by the beta milestone, at which point our localization QA colleagues will take over for the first sweep of localization testing before we all move into the pickup session.
So traditionally, we have also followed this pipeline, and we still do for many of our titles.
However, where our developers have adopted more agile processes, and where the source assets remain unfinalized a lot longer, we really needed to find a different approach.
And that different approach was realized through this pipeline.
So this one is a more iterative model that we use to match the development processes whilst still retaining localization efficiencies.
on such a model, localization, so translation, audio services, and localization QA for the testing effectively become one team.
And we will be collaborating really extensively on each of the rolling localization cycles.
So as you can see, the tasks are completely identical to the previous waterfall model, but the sequencing has been adapted to match the development processes and the way the development are building their game.
So here it is.
Our ingredient number one towards efficiencies is for the main stakeholders to actually meet early in order to determine together the most appropriate pipeline for the needs of your game.
So one of the other challenges that we usually face is to get all the main stakeholders to work towards the same efficiencies without all developing ad hoc processes, ad hoc tools that will certainly benefit their own process but will completely disregard the process of their calling departments.
So at Acai, we do so through one common tool, our localization asset management system.
So LAMS is a proprietary tool that has been developed internally.
It's a cloud-based system for source and localized text, audio, and subtitles.
It has, in fact, become a central repository for the majority of our games for the source and localized assets.
And with it, it has really become.
a point of convergence for all the various disciplines in localization.
So, the reason why LAMS has in fact become so popular with our dev teams is because it is flexible.
It's integrating with whatever workflow has been agreed upon, and most importantly, it is integrating with the development team's existing tools.
So let's explore the top features of what localization tools should display to support and promote effective localization.
starting with the most crucial and basic of feature.
Allowing access to all the various disciplines involved is the cornerstone of all the steps and improvement that we are about to discuss today.
So if you take nothing else away today, please remember to make a priority of this for the next localization tool that you will build by all use.
And if possible, take this further by allowing or by using a tool that will support multiple different file formats so that all the teams involved can all work in the best of their process yet still do so in harmony.
With LAMS, there is no risk of overwriting assets, because the tool will prevent the tester, for instance, to update some strings should the translator already be busy working on it.
transparency on what lines is being worked on by whom means no delay, no unnecessary duplication of work between tester, translator, and so no unnecessary costs.
So once our access is granted, work can start in earnest.
And as we have seen, a lot of disciplines and a lot of people will be involved in your localization process.
And often in our industry, we are likely to be working with people scattered all around the globe.
So the tool that you build by our use should really help to ease the communication between all the various disciplines, keeping everyone on the same page regardless of your geographic location.
So at SAE, we allow searches and display configurations to be saved and shared.
And this means that you can be sure that someone who is on the other side of the world will see the exact same results as you are.
Say on a project, developer based in Europe wants their localization partners in America or Japan to work on very specific sets of strings.
By sharing their display configurations with their colleague departments, the assets coverage will be identical for everyone, and there will be no risk to work on incorrect or outdated set of strings.
And most of all, there will be no time wasted on back and forth and back and forth of email knowing what to do.
Yeah.
So, as we know, translation is underway, and with it comes the eternal problem of the context.
When translating any size of project, there are bound to be queries.
And without the visual support, terms can really be open to interpretation.
So take the word fire, for instance.
So make sure that the tool you go for has a system to allow these questions to be asked in the context of the text they refer to.
So for us, this means an integrated Q&A system where our translators can ask their queries.
And developers or production can answer almost instantly.
We even sometimes get our functional QA tester to answer these questions, because this will save a great deal of time to our developers.
And we also allow these replies to be images, because one image can say 1,000 words, or 1,300 in our localized versions.
So with this system, there are no unnecessary spurious bugs by testers.
The testers gains really more awareness of the choice of wording of the translator.
And there seems to be more respect overall between translator and tester.
So now, once your assets are localized, and because our European languages are typically 30% longer than our source English, you should expect that the localized assets will be different to the source English.
I know, that's the GDC insight that you've paid for.
So, for this reason, make sure that you can communicate the constraints on text length restriction and audio technical specifications ahead of the localization phase.
And ideally, make sure that you can enforce them through your tool.
So, the simplest thing to have to start with would be to have a character count.
You can take this further by allowing for a line count, and further still to allow different character limits for different character sets.
Then you can move that feature along to the audio by checking simple file properties.
And in fact, you could look at any other aspects of the audio, such as the bit depth, the sample rate, the duration, or the volume.
In any of these cases, the tool should really make it easy to identify where your localised assets are not compliant with your source assets and should ideally report or alert the stakeholders for the corrective actions to be taken and the issues to be resolved.
And if you want to get really fancy, you can even enable your tool to automatically fix these volume issues.
So our LAM system will check the text length restrictions and the audio technical specifications upon upload of the localized assets within our tool.
For instance, should the audio assets be mismatching with the source, the system will report the issue and send a notification to the various disciplines or stakeholders.
So the time saved here is significant because we do not have to wait for manual checks by either our development teams or by the localization project managers, the testers, the translators, because the discrepancies in compliance.
will be notified upon upload of the localized assets within the tool by the system.
And the fixes will be pretty much instant, whether by your localization vendors or by the tool itself.
So now taking the thoughts on audio a little step further, we are going to be looking at subtitling.
So it will be a great help if everyone involved in the process can make changes to the subtitles, both to the text and the timing.
So really, it could be through some simple markup in the translation, or it could be splitting the subtitles into their own entity.
The key thing is that it should really be nice and simple for the right people to go to and change.
But, again, this builds on having that centralised accessible system for collaboration.
For us at SAE, the rough idea is that our LAMS team has set up a UI that uses the waveform of the audio file to hand slide us to get the timing just right really quickly.
So unfortunately, there is work here that I can't really talk about too much because it's patent pending for our LAMS team, but what I can say is that the immediate benefit observed is time and cost saving.
So, on Until Dawn, for instance, our subtitles were automated at 93%, meaning that neither the developers, nor the translators, nor the testers needed to take any time at all to manually split the subtitles out, because the tool did that itself.
And that really represented a great cost and time saving.
Now, not forgetting the fans of reporting out there, whatever localization, whatever approach you will take to your localization tool, there is, or there are certain things that you will want your tool to be able to tell you.
How far have we got?
How much more do we still have to localize?
So going beyond the reactive reporting, what you might want to see is proactive reporting.
Reports that your system will be providing you without you necessarily having to go and request it each and every time.
So exactly what that looks like is entirely up to you.
It could be a pop-up box, a message, or a good old-fashioned email.
So if you think back a few slides, and I hope you were paying attention, I spoke about saving and sharing particular searches.
So these actually form the backbone of our automation, of our automated reporting.
Users can use any of their searches or any searches that have been shared with them to create report subscription.
Then LAMs will email the report of their choosing for the search of their choosing in the layout of their choosing and at a time and frequency.
So, or we can also use the data to create visualizations to provide at-a-glance reporting.
This one being for our programmers specifically.
So talking of access being the cornerstone of improvements before.
Remote access should not just be limited to people.
for your localization tool, you will want to either build or make sure it has an API that you can use.
As a developer, this will give you a range of options and opportunities for improving the efficiency of your system integration, the localization, the localization testing.
This service mentality also allows for integration into other systems and opens up some really interesting possibilities.
One of these possibilities has been to enable LAMs to support our streaming video tool.
So let's look at a short demo clip.
So the concept on that one is that by using the unique string ID, or simply searching for the string, the testers are really quickly able to navigate to the particular asset, watch the relevant recording footage, and verify this asset while still retaining the context.
Additionally, you can also see a graphic display of the PlayStation controller on screen.
So the testers know what buttons are being selected at the time the assets are playing, meaning they can really verify whether the text and the action are actually matching.
So automation for localization has been extremely successful at PlayStation.
And we continue to invest in refining our capabilities in this field.
And in fact, development and refinement are really high on our list of priorities for the future.
And we have already outlined priorities for the future.
Starting with our tool, we are in the process of implementing a validation tool for the naming conventions.
So as we know, getting our text right in the game is important, but getting the naming conventions right is actually essential.
So I will not go too much into it, because Chris will be talking about it a bit further during his poster session in 15 minutes in the Overlook 2018, if you're interested to know more.
Now, with any new hardware, new challenges emerge.
And in VR, we are addressing the player much more directly than ever before to create some really, truly immersive experiences.
So to maintain that, we must make sure that the player is spoken to appropriately.
So within LAMS, we will allow the use of variance so that different versions of one same line can be provided.
And by variance, we mean either male, female, even young, old, really quite a wide range.
So in a sense, our devs control the variants that their title will be supporting.
LAMS as a system becomes the enabler.
And the translator will be free to choose to use this as and when their expertise require it is right to do so.
So for localization services.
We are hoping that our translators in future will be able to verify their own translations in-game much more systematically in order to really catch inconsistencies and incorrect meanings, mistranslations.
and really clean their scripts to make them as immersive, as creative and as emotionally engaging as possible.
We are also wishing to improve on audio volumes in future, and by potentially centralizing the audio mastering service for all languages in one studio.
So this should enhance the quality of the immersive experience for those titles where volumes could create issues.
And finally, we are also looking at having embedded project managers at our dev teams whenever and wherever this is required by our developers, either kick-off time or training on LAMs.
This will be to really be able to support our development teams as effectively as possible.
For our tools, for our localization testing, the tool support and automation, like the video capture solution that we've seen before, already allows us to reduce the amount of localization testing the test, sorry, the amount of testing that the localization testers have to perform within the game.
And in future, we expect that this testing effort will be further reduced and will turn more into validation and verification of the localised assets.
So the benefits will be reduced costs, reduced time and better utilisation of our lock expert teams.
With our tools and automation efforts, we can also map the bugs in the game.
And this might help to identify bug clusters and makes it easier to actually investigate the root causes of a bug.
In addition, we can also map the paths testers have taken through the game.
And this is really super helpful for coverage and for progress tracking purposes.
Linking this data into LAMS, we will also be able to visualize the data, which will help see progress at a glance, and then the project leads can use this to prioritize testing.
So, in conclusion, if you take nothing else away today, please remember.
to meet with your lock experts early, so they can draw an efficient plan of action adapted to your needs.
Then, invest in a tool, any tool, because with it the opportunities towards efficiency and quality will become endless.
For this to happen, though, please remember to empower your localization partners.
Let your localization expert teams access the tools so that they can manage the localization and deliver what you need, when you need it, and in a manner that will be most effective for you.
Finally, for the localization testing, use the potential of the tool and go as far as validating and automating your localization testing for maximum efficiency.
So thank you very much for attending this presentation today.
I hope that you enjoyed it.
I'm not sure whether we will have any time for questions.
Yeah, we've got time for one or two questions before we all move on to the poster session of Chris, where he will be going more in-depth into the tool features.
So I will invite Nadine and Chris to come up on stage if we have any questions.
If you want to join me.
May I go first?
Matt Whiting, Lionbridge Game Services.
Very interesting talk.
I wanted to ask Chris, how do you instrument your games so that you can do the automated audio testing or the testing you were showing up there on the screen where you can see where the lines are displayed, what the controls are being pushed, and so forth.
I don't know which one is working.
So that does place a.
very, very slight burden on the dev, which is always something we're trying to avoid, but because this is tied to their engine and what's happening at runtime, there's a little bit of work for them to do. But all it requires is for them to just output a little debug string indicating, we're here, we're displaying this particular sort of identifier of line at this time, and then...
everything else is handled by that video capture service that's kind of picking up on what's happening to the pad, what's happening to other things.
It just sort of annotates the video to say, at this time, you can see this string.
Come and have a look and check it's okay.
All right, thank you.
So I see this is a great tool.
I see that it's proprietary.
So is it only open to games that have a relationship with, that are going to be launched on PlayStation?
Or are you guys also opening this to maybe PC games?
And also for the version that basically, if we use this tool to produce a localized version, is that going to be restricted only to be published on PlayStation?
Or does it become?
the properties of the developers.
Okay, so that's a little bit above my pay grade to make any kind of formal announcements on.
So I'll speak historically.
It's only ever been used for titles that we are developing or publishing ourselves.
That might change in the future, but I'm...
I'm not going to stand here on video and say that, because we've got too much.
I understand.
I think it's just if this tool is available, I think a lot of people would be very, very interested.
Great tools.
Thank you.
Just wait outside with the checkbook, and I'll be right over.
I have a couple of questions.
One, do you guys manage art assets in your tool?
Like if there's signs that need to be changed from English to other languages?
We have done once, but that's only because that's what that particular project required.
The system can do it.
It's quite happy to.
It is kind of agnostic as to what the actual asset is that it's looking after.
All it really cares is there is this item that needs to exist for these languages.
I will track it and make sure that it exists.
And if the text required from that changes, I will prompt somebody that they need to update that asset as well, be it audio, texture, or even a 3D model.
Anything should, in theory, be possible.
And then my other question was, do you, does this support all the languages, like Chinese, like analyzing the audio files for, you know, non-FIGS languages?
I know you showed a Japanese example, but I didn't know if that covered everything.
Yes.
Yeah.
It should cover all real languages and also fake ones as well.
Cool.
Thanks.
More a general question than related to the tool, but yeah.
The process becoming structured like this with tools keeping track of changes and so on, do you think we will arrive in the point where localization edits happen also post-launch?
Because it used to be that we had the game on the disk, and that was the game.
Now we are in a world where you have the disk and then you have the day one patch and so on and so on. Localization usually never changes. There's new stuff, but if there's a mistake in the code, it will be fixed in the patch. If there's a mistake in the text, it's unlikely that it will get changed, at least historically. Do you think we might get to that with time and tools?
Do you want me to take it?
Yeah.
Okay.
So I think that that is already something that does happen.
And please feel free to correct me if I'm wrong.
But it's because of the combination of the access and the empowerment.
Because in order to change that text, all it requires is the tester to notice it's wrong.
And if they're within the video toolkit to be able to change it there, if they're looking at it directly in LAMS just to make a change there, that will go into the next build of the game, whether that is.
the gold master, the day one patch.
And without the need of a new submission.
It's just normal in the flow of the patching.
Yes.
Yes.
He said.
OK, thank you very much for attending.
And please come along with us to Chris's poster session if you're interested in more in-depth tool features.
Thank you.
