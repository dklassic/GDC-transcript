So my name is Becca Saltzman and I am the CEO of Finji.
I run a small independent development studio and publisher in Grand Rapids, Michigan with my husband, Adam Saltzman.
I am talking to you today, basically, so you're ready to pitch a publisher, you're not.
It's a nice, like, kind of mean title, but it's not because I mentor a lot of teams.
Not only just my own teams, but also probably a lot of you in the audience have.
in the past two to three years sent us something and we have just sort of worked, sort of threw it with you.
And a lot of, sort of, themes have come out of going through these pitches.
So, I put together a talk.
You may know me, just a little bit of background.
Not only do I do Fingy, but we are launching Overland this year.
We're gonna be publishing, or a publisher on Wilmot's Warehouse, Tunix.
which is Andrew Schuldice's game.
We launched Night in the Woods a couple years ago, and it's never gonna end, just keeps coming out.
And long, long, long time ago, my husband made Cannibalt, so you're welcome for all the endless runners.
And we did my favorite game, which is Hundreds, which is actually my first design credit, even though I'm still only in the special thanks.
We forget to update it every time we update the game.
That's what it's like to be me.
So yeah, here it is.
Hey.
Friend, so I've been working on this thing, and I was asked for this.
Do you and Adam have time to?
And the answer is usually no, but we try to make time.
So, I'm gonna go through sort of four key things, these are kind of your takeaways for today.
The first of which, before you pitch, understand what you are making.
And this one's always kind of fun.
Before you pitch, understand the audience to who you're talking to.
Before you pitch, understand the pitch, which I know is a little bit secuitous, but we'll get there.
And then before you pitch, understand the deliverables.
Basically, what are you being asked to give?
And I've been really surprised at the disconnect between the language that I use every single day and the language that my developers understand.
And we'll talk a little bit about some of those terms as we go.
Okay, I'm gonna back up just a tiny, tiny bit to give a little bit of context on the industry.
So the state of game development right now often is like I'm gonna make a million dollars, I'm gonna live my dream, I'm gonna drive a fancy car and have a house, because this one person we saw did that.
That's not the way this works.
There's a lot of hedging your bets, there's a lot of diversifying, and there is a ton of contracting to make sure that we are sustainable.
So the idea is from the outside looking in, is like, wow, this is amazing, we could do our dream and make money at it, but the reality is this industry is very, very hard.
The gold rush mentality is super dangerous.
And a lot of people don't understand that when a game sells 100,000 copies, like, you're like, oh wow, okay, so 100,000 copies at 70%, $700,000, amazing.
There were 12 people working on this game for five years.
So I mean, good job.
We've paid groceries for a few years and maybe bought some toilet paper.
But you didn't make enough to actually build something else.
So you have to understand revenue splits.
People cost money.
High production values, engineers and artists and musicians and our equipment's really expensive.
And we have years in development.
God bless Overland, but that's five years.
by the time I launch it, five and a half years.
Night in the Woods was over three years, and the darn game's just not, I mean, we haven't launched iOS yet.
We still have another launch on the game.
So yeah, understanding sort of like the cost involved going into talking to someone who you want money from or help from is really, really important.
So Adam made this slide probably about a year ago.
which always makes me super depressed when I look at it.
But it's really useful when I talk about the budgets that I prepare for our Finji projects.
So most games don't sell very much.
300 to 3,000 copies.
Our budgets, when we put together, Overland's a little bit high, because we're at five years.
That's another story, and I blame Adam.
But most of our budgets are designed to be about selling 30,000 copies.
I know I can do that.
just based on our track record and our history.
I've never sold under that.
So I know I can hit that number, which means I know I can pay for my game.
We have our hopeful sales at 300,000 copies, and for Finji, that's across a lot of platforms.
So I've got Steam, GOG, itch.io, Humble, PlayStation, Xbox, Switch.
I'm counting all of them.
And then we don't even talk about tier five.
Like sometimes we'll talk about half a million copies when we're like drinking a little bit too much on a Friday night or something.
But really, when we are really talking about things, we're more talking like 100, 150,000 copies.
Because like I can count two hands kind of from last year which games did that in the indie space.
It's a very tight market.
So this is also, this.
It should be thought of when you're building your team, the number of people and the length of time.
These are your constraints.
This is the box you're drawing around your project.
And if you go outside of that box, you literally don't have enough money to make it.
So yeah.
Let's go into understand what you are making.
Because those budgets matter when you talk about understanding what you're making.
I'm gonna talk today about some prototypes.
So prototypes are not vertical slices.
If I opened up my email right now, which would be really embarrassing because I have about 350 unread messages in my inbox.
I get about 20 pitches a day.
I don't publish a lot of games.
I publish like one at a time, but I get 20 pitches a day.
And the number of prototypes that I have coming into my inbox, one is astounding and makes me realize that nobody actually knows how to talk to a publisher, but also I don't ever want to see a prototype.
Prototypes.
again, are not vertical slices.
They're not system complete proof of a concept.
They are early proof of concepts.
They're like, I have something here.
I might be able to do something with it.
They are simply proof that mechanically you are onto something.
And someone like me, and I'm just going to back up a little bit, I don't come from a background in games.
I'm in charge of a game studio, but I literally played games through Super Nintendo and never played a 3D game until I was like in my 20s in college.
And I got made fun of for it, and then I stopped playing it.
So like, I don't have this limitless knowledge of everything that's been made for the last, you know, 38 years of my life.
And if people come to me with a prototype, I often can't figure out what the heck is happening when a box is bouncing around a screen.
Adam could, and it might be really cool.
But I don't know what, I can't parse that.
So prototypes in general, and I'm gonna show you some examples of some of the Finji game prototypes.
I've got some Tunix stuff, Night in the Woods stuff, and Overland stuff.
I don't know if Andrew's in here or not, but we call him Dorito Fox.
And Andrew approached me in 2016.
We didn't know each other, and I was barely a publisher at that point, and he just wanted us to mentor him.
He wanted us to talk about his game and the thing that he had.
And at that point, he had a prototype.
He had this tiny little arena, little square arena, and he had Dorito Fox, little 3D Zelda fox running around, and all it did was sort of dodge and roll and swing around his sword.
There were no levels, there was nothing.
There was a combat arena.
And Tunic is not a puzzle game.
Tunic's whole gameplay sort of revolves around really interesting combat situations.
Which was interesting for us at that point, because I mean, it was a little Zelda fox.
Like, he had a lot of nostalgia for sort of like old 80s and 90s games especially, because he's about the same age as us.
And it was interesting for us at that point to sort of see, like, oh, this is something different.
Not interested in publishing, but we were interested in mentoring this, you know, random kid who came up to us after a talk at GDC.
And I'm showing you these different prototypes because this is an action-adventure game.
Night in the Woods, however, is an adventure game.
It was kick-started in 2013, and the first thing that the team did is they made, we call them the supplementals, so there's Longest Night and Lost Constellation.
Longest Night is technically Night in the Woods' prototype because they had to figure out how to make this elaborate narrative spaghetti ball of text work, and they made a very small 30-minute story.
It did have polished art, however Scott would disagree.
He would love to redo all the art in this because the game, it was like two months old.
It had just been kickstarted and he hates how it looks.
But this was a prototype.
It was a proof of concept and people played it and they liked the gameplay.
And that's a totally different way that you can approach sort of making the early, early versions of your game.
I did not base publishing Night in the Woods off of this.
This is Overland's prototype.
And if you see Overland now, you're like, how are these two games the same thing?
And every once in a while, I show this to people, like, man, I wanna play that version.
I was like, agreed, it was really fun.
We could play it for like 45 minutes, super, super hard.
But it was a 2D pixel art grid.
We still have the grid in our like 3D, like beautiful, like rotating biomes.
The mechanics were solid.
We have the car.
We have the people, we have gas, we have those monsters, which literally stayed in until our vertical slice.
They were just in a 3D space for a long time.
I think that might be a baseball bat or a stick.
It's a weapon.
It's a stick-shaped thing.
And when we had these prototypes out, we were taking them to test players.
Were they engaged?
Or did they want to keep playing even though it was ugly?
But I wasn't taking this to someone like me.
I was taking my game to someone like you.
So we lived in Austin at the time, and we would take this Overland prototype out among our game developer friends, who would be able to look at something that was kind of ugly, and could they parse the gameplay that was there, and were we onto something?
So the next thing is, do publishers pay for prototypes?
No, no they don't.
I was on the train, I was on Train Jam, Infinite Train Jam, we were there forever, I live there now.
But Richard Lemartian was on the train, and he's what, Call of Duty 3?
I always get it mixed up, because I met him when he was a professor.
Uncharted, thank you, I always get it messed up.
Uncharted 3, he worked with Amy.
But he was on the train and we were in the back, and he's writing a book right now, he's on sabbatical, and he's writing a book that has a whole chapter about basically everything in this talk.
And we were just sitting there shouting, and he was like, yeah, well publishers, when they pay for prototypes, and I'm like, hold the phone.
No, no, no, no, no, no, no, no, no.
Publishers don't pay for prototypes.
We're working on 30,000 unit budgets.
And he's like, that's, excuse my language, that's bullshit.
I was like, yeah, but the market's really terrifying.
And prototypes, like eight weeks, five people, decent, I mean let's go half decent at like maybe $5,000 a month.
That's the kind of numbers we're looking at and you're like, that's a lot of a $30,000 budget.
So I imagine there is probably someone in this room who has been paid for a prototype and I wanna buy you a drink and talk to you to find out how you did it.
Thank you.
But.
When you email a publisher or a console representative or literally anyone, if you say, I want money to pay for a prototype, they will laugh and they will sometimes maybe, if your idea is interesting, but at that point you literally don't have anything to play, they will just kind of delete your email or like, sorry, we're not interested, we don't have time.
So the second thing is it often takes several prototypes to even land on something that's cool.
So imagine a publisher paying for one prototype.
But what, do we pay for three more?
Overland is like nine months of one game plus like Adam's three-day game jam in the summer plus like some other BS he pulled out of a file folder from like multiple years ago and he squished them all together.
And that's what was the beginning of Overland's prototype.
It was actually like four or five things before we actually landed on our prototype.
So yeah, publishers won't pay for them.
You can ask if you're established, I guess, but if you kind of don't have a track record, they're gonna be like, no, no, no, no, no, that's too big of a risk.
So in the understand what you're making, cool, we finally have a prototype that works.
Awesome, you're like halfway, no, I lied.
You started going up a hill instead of sitting around cooking at the bottom.
So the next thing, once you get a prototype, you have to make a vertical slice.
And this is the sort of thing that publishers do want to see, because this is a full experience.
It's taking the whole gameplay loop of why your game is cool into a short play session.
You can start at the beginning, go through your gameplay loop.
It's sticky, it's awesome, and then it ends.
And it's polished.
Now, there's one caveat here, which is if you're making a systems-based game, and I'll talk about that in a second.
So prototype for Tunic.
And you've probably, if you've seen Tunic, this is the version that you're familiar with.
I've been running this demo forever.
It's the one that played at E3 last year.
It starts at the beginning, the fox washes up, you sort of wake up, you wave, because he literally does, you can just turn around and wave at the screen.
And then you go up, you find your stick, you run through the forest, you beat up some cute baddies, you find your sword.
You do a little bit of controller stuff where you're like equipping, and then we put you in with the Cherry Blossom boss.
Technically, this is like five or six hours in, this Cherry Blossom boss.
But in my demo, in my vertical slice, I will take you there within 15 minutes because I need to show you that you're collecting weapons, you're equipping them, you're on an adventure, there are save points, it is combat focused, and there's bad guys.
That's our gameplay loop.
The fact that the world is enormous, you can play it for like 14 hours, like all of that stuff, those are like bullet points.
But in a vertical slice, you want someone to play your game and be like, holy crap, this is so cool, yes, this is awesome, but they don't know your budget yet.
They don't need to know any of that.
They need to be so damn excited about what they're playing that their eyes glass over to the other pieces of the pitch.
So you need to build your vertical slice.
And the cool thing is, people are like, oh, but what am I gonna do with it afterwards?
I've been taking this to every PAX, and E3, and regional conference for literally years.
Because every single person in us, for us Indies, is a new consumer, is a new player.
Our reach is so tiny that we can play the same demo, especially if it's good, and especially if it has hooks, forever.
And when you're at a show, you want to push people through as fast as possible.
Why is it cool?
Remember the title, get out of my booth.
I got to get somebody else in here because every person who sits down needs to buy my game because I got to hit my 30,000 units.
So I got to pay it back.
So think about your game.
It sounds callous.
I get it.
It really sounds callous.
But when you look at your design, how can you get people onboarded as fast as possible?
Because when they're at home in their underwear on their couch.
playing games, who cares really?
They already bought it.
They're gonna like it, they're gonna get there.
But you have to get them over the hump to even be interested in the first place.
Show them the hook and show it early.
And that includes people like me.
That includes consoles.
That includes journalists.
You want them to talk about your game.
Show them what's cool, show it fast.
Night in the Woods took a slightly different tact.
So Night in the Woods vertical slice came earlier than we expected.
We had made like, or the team, I was early in the project.
The team made Longest Night, and then we got asked to exhibit at E3.
20, I don't even remember it was so long ago.
2015, 2014, I don't know.
But they built an entire portion of the game.
as a way to flesh out what the city looked like.
So in this, I had one really short, actually it wasn't really short because it's Scott and Alec design so you can just wander around literally forever.
You sort of woke up in May's room, left, you had a conversation with the cranky old guy to get off my porch type outside, and then you went through the town.
You were able to explore a bit of the town.
It's really important you're able to get up on the power lines.
so you could show May's movement.
You had fan practice, and then you ate donuts.
And then you met up with Greg on a rooftop because he had stolen a garden gnome, and then you sort of, you have a choice.
You can either throw it off the rooftop or not.
99% of that game is literally not in the final product of Night in the Woods.
Hilariously, it technically was in the console version because we had a bug where somebody hot-keyed into it on launch week.
and we couldn't figure out why it was haunted and why they could access that.
Good moment, we were on Train Jam 2017 when that happened.
Yeah, adventures in Indies is great.
But this particular demo, I carried it around for three years.
I showed it to literally every console on the planet and like everybody at E3, PAX, PlayStation Experience.
This is what traveled with it because it showed exactly what Night in the Woods is like.
If you play it, the only thing that feels off is like the gradients in the back feel weird.
And like the text isn't quite perfect.
Like you can tell it's not perfect, but town center, I think I even still have a screenshot from this that's in the main marketing materials.
Like you can't tell.
The game is like 14 hours long, but this is a very small piece that we cut out very early on.
It was proving that this design worked.
People love, they love the demo.
I would have crowds.
in my booth playing this demo, where you literally only read.
Now, I'm going back a little bit.
This ugly thing, this is Overland's vertical slice.
So, we have an action adventure game with Tunic.
We have an adventure game, and now we have a very heavy systems-based strategy game.
We don't polish art in a strategy game super early, but we did polish the hell out of the systems.
So you can play through the entire Overland game loop with a pretty ugly UI, but that's really early.
Start to finish, so you drive in, collect squad, collect fuel, have very close encounters on the exact same grid base size that we have now, and get out, and you'd be able to do that in the randomly generated world through different areas.
So we had two biomes, because we didn't have the cityscape yet, so it started in the grasslands and then went into the woodlands.
That was our early prototype, and I took this to shows.
I had to play it on a mouse and keyboard, which was not ideal, but it worked.
People who loved strategy games were able to sit down and play this for 45 minutes and some, I had to kick them out of the booth, which is like awesome on a systems-based game at Apex.
Doesn't usually show particularly well.
So we call these, sort of in the more systems-based things, first playable, because vertical slice implies polished art.
When I talk about strategy, we definitely, sort of like, this is a first playable.
It is a complete gameplay loop.
It goes through all the mechanics and we can talk about them intelligently.
And then after that, we start putting down polished art.
So, oh my goodness, we have vertical slice.
It's amazing, we can play it, our friends can play it.
We even maybe let some of our family play it.
People maybe are into the genre.
But now we gotta really talk about, like, who are we?
Who are we talking to?
Who are we pitching to?
And I'm gonna back up a little bit now, and I'm gonna go through a couple of terms that I'm going to use, and I didn't realize that people didn't know what these meant.
And if you do know, pat yourself on the back, and don't leave me a nasty note on the reviews that say, I knew everything she was talking about.
A lot of people don't know this, and I was shocked as well.
So the first one is simship.
I had somebody on train think that it meant simulated ship, which makes a lot of sense.
I was talking to Michael Molinari earlier, he's like, well that makes sense, instead of simultaneous ship.
So simultaneous ship, sim ship, means I am shipping on PC and PlayStation on day one.
And when you're talking to a publishing partner or a porting partner or any of this, these matter.
You must know what sim ship means.
I'm shipping on iOS and Android on the same day.
I'm shipping on, if you're ludicrously crazy, PC and PlayStation and Xbox and Nintendo on day one.
When these games drop on the same day, that's sim shipping.
And if you know that, awesome.
If you don't, it's an important term to know.
A second one I even just threw out in a sentence without meaning to, porting partner.
I do not make.
The ports of my game, I do not make my game work on Nintendo.
I hire a porting partner.
It is an external studio that costs money to hook those games up for me and sort of help me through the certification process.
A lot of indies will do this internally.
But when you are talking to someone else, knowing whether you are using a porting partner or not is important because it has a lot of questions.
One, financial.
Two, Do you know how to do this if you're doing it internally?
Have you ever done this before?
Which is an important question to ask yourself before you decide to commit to it.
And the other one is platform holder.
This is also platform holder, storefront, console representative, all of these things all refer to kind of the same person, which is not us, somebody with money.
So platform holder is Nintendo.
Storefront.
Steam, like they all are interchangeable.
But these are words that we will literally throw around without realizing you don't know what they mean.
And then I've been on the receiving end of this because I had to learn all these terms.
I just kind of felt stupid sitting there, like I couldn't ask that question.
And I don't want you to be in that position.
So yeah, those are three terms.
There's probably a ton more, which I could go on forever.
I did a whole workshop in Uruguay about like most of this stuff, but it was four hours long, so this is the condensed version.
So who are we pitching to?
And there's a lot of people on this list that we are going to be pitching to.
It is not just people with money.
So one, you are pitching to your team.
So you need to understand the words and language you use while you're pitching to your team.
Also, the assets they're going to require to understand what you're talking about.
You are going to be pitching to people who play games in your title genre.
It's real easy for me to talk to strategy players about Overland.
Actually, I lied.
It's real easy for Adam to talk to strategy players about Overland.
Usually, they will start throwing around terms that I don't know what they're talking about, and then I have to sit there and feel stupid, and ask later, what the hell did that mean?
But those are the easy people to talk to.
They're already excited about your genre.
You're gonna talk to people, and you're gonna pitch to people who don't play games in your genre, or just literally don't play games, which we do all the time.
We are at PAX.
There is somebody that comes up with, they don't play games, they're just there to hang out because they got invited along, and you have to talk to them about your game.
And, extra points, hard mode if you can get them to play it.
You have to talk to journalists who are very different from the people above this.
Platform dev relations, who are very different, they have different goals in mind.
You have to talk to investors who have money.
And their concerns are different from everybody above this.
They overlap a lot with platform dev relations, but investors are money, they are just money.
And you have to talk to publishers who are people who are so excited about your game that they are willing to take the risk and add it to their library to put it out next to all their other stuff.
Also make money, that's a thing.
But their concerns are different from everybody else on this list.
And you need to understand who you're talking to and how you're talking to them in your pitch.
Because all of these people are a version of your pitch.
Sorry, I love this.
So the idea that often the best ways to talk about your game comes from people out, or comes from inside, like I know the most about my game.
I know exactly how to talk about it.
That's BS.
I guarantee you that whatever you've decided is the appropriate way to talk about your game it has holes in it.
Often the best ideas come from people outside of your development process and outside of your team who are explaining your game back to you.
And I'm encouraging you to steal all the words they're saying.
Every single one of them.
Be the raccoon.
Take all the food and run.
Everything I say about Overland, my one-line Overland pitch literally came from a journalist and a random person at a PAX.
Overland is a procedurally generated, no, no, no.
I have like metadata in my head right now, so I have like five versions of this.
Oh, I should have written it down so I didn't forget it, because I have the long version.
I'll get there, I'll throw it out in a second.
Anyway, the journalists came up with a new genre, which was survival strategy, which was perfect.
It encompasses exactly what Overland is like instantly.
And the post-apocalyptic road trip across North America, that's the end of it, like literally was somebody's like, oh yeah, you're on a post-apocalyptic across North America.
It was so perfect, and I was like, oh my God, write this down right now, like instantly, this is perfect.
you're playing a turn-based survival strategy game about a road trip while you're driving across post-apocalyptic America.
And then you can fall out of that in a really natural way.
You are stealing gas, collecting squad, stealing a car, and scavenging for supplies.
You can sort of condense all this down into two sentences.
We didn't come up with that.
We're not smart enough for that.
We just borrowed it from people who were telling us literally about our own game that had been living in our house for years.
Other places that you get this information from, people in your community who are playing your game.
We were just on Train Jam, and I was playing a friend, Jake, who was making a card game, and I will break virtually every game, and I broke his as well, because I play everything wrong.
But we were playing the game, and he's like, I need you to describe everything.
that's happening, like just talk while you're playing.
That is an incredibly useful thing to do, and it kind of makes players a little bit uncomfortable, but if all you're doing is listening and maybe asking questions here and there, this is how you're going to find out what your game actually is.
So, talk to people, make people tell you about your own game.
Yeah, yeah, I'm gonna tell you about this now.
So, I just wanted to make sure it wasn't later.
I'm not sure how many people here are familiar with panoramical, but it's this really beautiful musical interactive experience that we published years ago made by David Kanaga and Fernando Hermijo.
And they're both incredibly brilliant.
Panoramical is basically impossible to describe to any human alive.
And I took it to shows because I'm like, let's try to figure this out.
And I still couldn't figure it out.
We just like just lengthy forever sort of like, well, you're not going to get it.
manipulating landscapes with like MIDI boards and it's beautiful and the music's incredible and that's too long and people are glazing over. I'm like, whatever, just play it. And that's what we sort of fell to, just play it, just play it. And then one person at, it's like an RTX or something, like it wasn't even like a big show. This dude came by and he's like, I find this game fascinating.
I love it, but I can't describe it. He's like, this is a challenge. And he like just left. And I thought I'd never see him again.
And it was the next day he came running back by and he's like, I got it.
It is Fantasia for video games.
Instant.
It's perfect.
It is completely perfect.
I can't put that in an article.
I can't say that.
I can hint at it in an interview or something.
But for the common person, that was my pitch in a sentence.
It's Fantasia for video games.
You're manipulating a soundscape and a landscape.
to create a beautiful experience.
Done.
So thank you, Random Dude, at RTX in like 2015.
I don't even know who he is, but it was so useful at that point.
So listen to people.
How are they describing your game?
And literally steal those words.
Please watch out for acronyms, especially when you're talking to general public, and especially when you're talking to publishers.
If you're making an RPG, whoa.
I don't know what any of those acronyms mean.
I have to Google them.
And if you say it in person, I have to pull out my phone and be like, is this a thing or did they just invent it?
And a lot of people literally just invent new acronyms on the front of RPG that don't mean anything.
And then sometimes they say I invented a new genre.
I'm sure you did, but we don't know what it means.
There has got to be a better way.
So be careful with your acronyms.
And ask yourself right now, are you so far in game development culture that your language cannot be parsed by a regular person?
Next time you go home, test yourself.
Like, try to get into a conversation with, like, anyone not in games and see how many times you have to stop and explain yourself.
And then use those skills of the stopping and explaining yourself for when you talk to anyone outside of games.
I do it all the time when I go home and talk to Adam's parents.
Adam's dad worked in computers, so he's, like, definitely, like, tech management.
But our specialties are so far on the opposite side.
So we'll talk shop, which is really fun, talking shop with your father-in-law, because he's retired now, and he's like, yeah, tell me about all this bureaucracy, Beck.
But I have to stop myself and explain through all the pieces, so then I don't lose him in a conversation, and it might be really easy.
I might say third party.
My third party dev relations means literally nothing to anyone outside of this room or this conference.
It might not even mean anything here.
Does anyone know?
Not know?
It's okay.
Third party dev relations?
Thank you.
Third party dev relations is my Sony representative.
They're the persons in charge of independent game developers in Sony.
They have a whole division called third party.
And that's the person you talk to.
I don't get to talk to second party, which usually there's like some money involved, like with second party.
They're like more triple A games or the console's investing money in them.
And then first party is like they literally just own it.
Second party gets a little wishy, so it's like the easy version.
But we are third party.
If you're indie, you're third party.
So if somebody throws that name out, that's what they're talking about.
But I have to talk through that if I talk to literally anyone outside of games.
So yeah, there's also like within the game itself, Overland, all those regions, we call them internally, we call them biomes.
Nobody uses that word in real life, come on.
And I have to stop Adam regularly when he does interviews.
Like regions, areas, sections of the United States, geographic locations, literally anything else but biome.
Most people can't even spell the damn word.
Don't use it.
The average person doesn't know what roguelike is.
I know everyone in here is like, really, what?
I still need a definition on the regs and I'm tactically making a roguelike.
It has roguelike pieces.
And I'm like, I don't know.
I just can't memorize it.
And now all of you are like, this woman is an idiot.
It's fine.
Crafting.
If you throw down crafting outside of literally people at this conference, what are you talking about?
The ability to make things.
Use the words that it actually means.
So we, in Overland especially, we use like close calls, we use narrow escapes, not just a strategy game.
It's a sprawling story.
Words that evoke emotion, words that evoke gameplay, but we don't rely on gamer language.
So yeah, you might need to know the required terminology, but if you're talking to a lot of people, especially people with money, investors, they may not know words like roguelike, words like crafting, and that is okay.
Explain them.
So you gotta meet your audience halfway.
Can you talk to experts and also to those who know nothing about video games?
Practice, practice all the time.
Can you quickly identify common ground in a conversation and explain complex terms and shared experience?
This is one that's really hard because it means you actually have to be paying attention when you're talking to see if people look away or if they're trying to escape.
or if they sort of toned out, or if they took a step back.
Like there's a lot of body language that's there that will tell you if somebody has no idea what the F you're talking about.
And do you know how your work might fit into the broader culture of media?
Have you even thought about how your game fits into how people are playing today?
What's going on politically?
What cool movies have come out?
Is there a neat book?
Have you even thought about it?
Because that will help you talk about your game.
My game's about post-apocalyptic America.
Come on.
Night in the Woods, we didn't start out with Night in the Woods coming out literally after our last American election, but it did.
And we just changed, we knew we were gonna be asked a bunch about this because it's about a small town in the middle of America with people, why do people stay in small places?
Think about these things when you're talking about your game.
So yeah.
Okay.
So we identified what we're making and we have a vertical slice to show.
And hopefully we've identified at least the person in front of us that we're trying to talk to.
So now what?
We have stuff.
That's awesome.
We need to understand our pitch materials.
Yay!
Now we actually have to talk to somebody that we want to impress.
Pitching!
This is my favorite slide of all time.
I use it literally forever.
I am not responsible for it, Adam did.
Don't tell people lore.
That is boring trash.
Don't make stuff up.
That's a bad idea.
Somewhere in the middle, there's a lie that could be true and boring trash that might be interesting.
That's your pitch.
I can't take responsibility for this, Adam made this, and I've been literally laughing about it for a year.
But it's so useful with games.
Like, the number of people that come up to me and shout lore at me, like, oh, just don't do it.
I don't care about the wizards.
I don't care about the space machines, marines.
I literally don't care what's your gameplay loop, what's the mechanic, why is it fun?
That's what I want to know.
Why is it fun?
Why am I going to sit down and play this?
If it's the story, tell me why the story matters in a cultural context.
Don't tell me the story.
I want to read the book.
I want to watch the movie.
I want to play the game to experience the story.
So when we talk about May, the cat, who's a 20-year-old college dropout who moves home to a rust belt town in middle America, instantly you know the setting, the place, and how old she is.
and she just dropped out of college.
And she starts hanging around with her friends, screwing around and vandalizing things.
She's gonna end up in the woods and she's gonna go through some stuff.
But I don't need to tell you anything more than that.
That's all the lore you need about Night in the Woods.
I don't need to tell you about mental illness.
I don't need to tell you about fighting with her mom.
I don't need to tell you that her dad also lost his union job.
I don't need to tell you about the mines.
I don't need to tell you about, I don't need to tell you about any of those things.
Who's the main character?
What's she doing?
Why do I want to experience her life with her?
So yeah, good pitches are in the middle.
Leave out the boring trash.
Leave out the lies, even though those are real fun.
Leave them out.
And once you have that, you are going to put together a pitch document.
Sorry.
We build these in something like Keynote or PowerPoint, and I'm gonna give you a few reasons why.
One.
When you pitch, that is not the only time that pitch document will be used.
When you build these pitches, you are going to save them off on a PDF.
You are going to email them to the person you're talking to.
And the reason for that is the person you're pitching to is not the decision maker.
They literally have to go and talk to somebody else.
For consoles, they have to take it back to the portfolio team.
They will take your pitch deck in.
They'll print it out, usually, so it's gonna look like garbage.
So make sure it's big and splashy.
and they will put it down in a meeting, because they have about seven billion each week, and they will discuss your game without you standing there to explain it.
So my pitch documents are really, really simple.
First page, key art, which I'll talk about, basically big, pretty splash screen, and the title.
And then I put on the bottom of it what I want.
I want to be an Xbox console launch exclusive.
I want to be a PlayStation 4 launch, or PlayStation 5 launch title.
I want to be on Switch.
I want your money.
Whatever.
Pick who it's for and put it at the bottom of this.
That way you don't get them effed up.
This is for you, because if you send Xbox, PlayStation pitch gets a little awkward.
So make sure you actually put, because they're all different pitch documents, by the way, make sure you label which one it is so you don't strip your file names.
So these are example pages, you can't read any of them, but these are sort of what our pages look like for our Overland pitch documents that we did like two years ago, year ago.
This far one has information in paragraph form about the game, but it's only about half of like a long description.
The important parts are bolded right at the top, and that is our one-liner.
We have quotes on there because we're kind of an early access, first access game, so people have reviewed it.
The second one has, it literally says, award-winning art direction, award-winning gameplay, which are true, those aren't lies.
100 plus hours of replay, which is true because we have people doing it.
Super slick visuals, which is true because Heather Penn's amazing.
And then it sort of goes down from there.
We also have procedurally generated gameplay and it bullet points out.
Really short, simple features.
You want to give them features because they need to know how to sell it.
Because they're going to take this information and shove it into some demographic thing, which will spit out whether they can afford to get behind your game or not.
That's my last page.
I start with art, I end with art.
And then I put stuff in the middle.
So what kind of deliverable art goes into a pitch deck?
And they're assets.
And this is another term.
They're metadata assets.
This is key art.
This is character art.
These are screenshots.
These are things you're going to have to prepare, and you need to think through what they look like, because you can't just open your game and go print screen and be like, good enough.
That's not putting your best foot forward.
You didn't think through that.
You're just like, I have to deliver something.
This works.
Think through how you want to present your game.
What's the most beautiful thing that you can put in a pitch deck?
What will make somebody the most excited about it?
So I'm gonna have some examples of the three games that we kind of already went through and how key art will change through the development process.
So these are all three versions of key art for Night in the Woods.
The bottom was launch key art and that was kind of good enough.
because we came in to launch a little hot.
So this was all stuff Scott did really early on, and it is beautiful, it's colorful, and it does show the game.
This is especially important for pixel art games.
Pixel art, key art, these are huge pieces of art.
Often pixel art doesn't present well, especially low-pile-y pixel.
So Celeste, they just did this beautiful, I can't remember who they hired.
I can see it in my brain.
But they did this beautiful piece of art for Celeste for their key art, like external to what the game actually looks like.
That's fine.
What you're doing with key art is you are proposing a mood.
You're proposing an art style.
You're proposing what the game is going to feel like.
And it's okay to do a painted piece of art for a pixel art game for your key art.
That's fine.
It's going to probably end up on a 10-foot wide banner at a PAX someday.
Think through that.
How's it going to scale up?
So yeah, the bottom version, that was our PlayStation.
I think we used that maybe for Xbox, and that somehow ended up for Nintendo, because they were all separate launches.
Generally, you try to keep them the same, but we couldn't find the bottom art when we went to launch later.
We had lost the Dropbox folder, because Scott had gotten a new computer, and things just got lost for a while.
That happened with the trailers too, it was real awkward.
But all of them, you can tell they're all from the same game from start to finish.
And also the light looks way better on the Nintendo storefront.
This is our current key art for Overland.
This is not my final key art though.
I'm not doing this, I'm not redoing our key art for another two months-ish.
That's coming at the end of Content Complete.
But this is what we're using now, and we use it everywhere.
It has our logo, and it has our squad of people, and it has our car, it has our doggos, which is very important.
And we use this a lot, and it can be cut up in different forms, depending on where it's needed.
Early Overland Key, however, looked like this.
And that's my favorite part, when we thought we were going to launch it.
That didn't happen.
This is our tunic key art, painted background.
It even has an old logo font on it.
We actually changed it for E3 last year, but that's our old typeface.
We use this all over the place.
It's on a big giant banner at all of my PAXs.
This is key art.
This is what it looks like, and this is kind of how it's used.
So other than key art, we have screenshots.
Now, take a picture of this You're going to want that, because this is going to go into a ton of detail.
I could do a three-hour talk just on screenshot theory.
I'm going to go through a lot of questions that we ask ourselves when we literally post any screenshot ever.
Okay. I'm going to go one, two, three, disappearing.
Oh, no, it's not.
Good. Phew.
Okay. What is your game's main attraction, aka the fantasy?
When you look at your screenshot, can you answer that question?
And can somebody else?
Does your screenshot showcase that main attraction?
Does your screenshot show directionality?
This means, can you tell where your character's moving?
Does your screenshot show the movement?
There's a really beautiful thing that we have, like if you take any screenshot of Night in the Woods, where Mae's running, you can tell where she's running.
And you can tell on the screen everywhere that she can jump to, just based on the way the whole thing is designed.
Into the breach.
Every screenshot in Into the Breach is perfect.
You can tell everything that's happening in the game by one screenshot.
Does the screenshot show the main gameplay loop and Into the Breach is amazing at this.
Where does your game spend all of its time?
What is the player's identity and available actions?
What sorts of objects and items are there?
Before, during, and after, can you tell what just happened or what will happen?
Can you read the directionality and lines of action in the game?
What changes in the game as you move through it?
This can all be communicated in a screenshot, and you should ask yourself these questions.
Are the environments or backdrops quite different from screenshot to screenshot?
Is there variety in your game?
Does the player identity change or shift?
In Overland, that's the case.
All of our players are procedurally generated.
Do the actions available to them change from screenshot to screenshot?
Does a stranger need to have played this actual game in order to tell what's up in this screenshot?
Do they only need to have played other games in your genre?
Very useful for strategy.
Do they only need to be vaguely aware of the notion of what a video game is?
That's Adam being cheeky.
But can they tell in the screenshot that it's a video game?
Like, this is actually kind of important for something like Firewatch.
They did a really good job of this, but sometimes if they had changed a few things, you wouldn't know if that was, is that an animation?
Is that a screenshot?
It's like, what do we do in Firewatch?
And they actually did a great job going around that.
So that is a very brief screenshot theory.
Read the blog post that we did, which we update all the time.
It's lengthy, and it'll ask you lots of questions, and it has a ton of examples of what all of these questions are referring to.
And we've spent literally three years documenting all this stuff.
So after you have your screenshots, which you literally will put in that pitch document, you also probably should have some sort of gameplay video.
We rely on trailers because we make them internally, but they're very small.
We spend less than seven days on them.
And I have two examples of trailers from Overland that were done about a year apart.
So I want to show you what things we were showing to consuls and investors and the public.
from year to year in development, because it's okay to make things better as you go.
So here's the first one.
Oh, no, go back.
Don't have to click on that.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Okay, so that was 2016.
The game looks, I mean, you can tell it's the same game now, but the art, that is so early.
But we used that, one, for our first access, but two, we took this around.
I needed to communicate that this game was procedurally generated, and that the people in it were super vulnerable.
And then a year later, after we had kind of changed a lot of the art style, we went here.
Oh, no, no, no, go back.
You are supposed to be here now.
Go over.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
It's probably going to get a little loud.
It starts recording in just a minute.
So those two trailers are back to back, and that one's from like 2017.
They're telling two different stories.
One is a gameplay trailer, because we wanted people to buy in.
The other is mood.
This game has a lot of different variety.
And I was using this to communicate to both the public, but also publishers and investors.
I needed them to see the scope and scale that we were working on.
It is okay to do this.
You can change things around.
Both of these things took like five-ish days to put together.
And we did them internally, so it was only on our own budget.
So once you have assets, and you've thought through your assets, you've asked questions about your assets, and you've taken these assets and asked other people, like, is this communicating what I want it to communicate?
Don't be in your bubble. Get your blinders off.
This is so important. Ask other people.
You're going to have to send an email to somebody if it's publishers, investors, dev relations, journalists.
For the love...
of all things holy.
Pay attention to the words you say.
I get this once a month.
I wish I was kidding.
We were sort of making fun of it last year at the email talk that Adrian and Ben were doing.
But I do, I get it all the time.
And that pitch might be great, but wow, what a lack of attention to detail.
So learn how and when you should contact possible partners.
I get pitches all the time.
I don't know why.
I take on literally one game at a time.
And I don't even have a slot for like two years.
Know the publisher that you're pitching to.
I get Android games.
I haven't published an Android game in ever.
I have games on Android, but somebody did them and I just took them back and set up my own account after I had somebody else publish them.
So know who you're talking to.
look at their library.
Like there are games that Devolver should be publishing, and if you have one of those games, contact them.
But there's probably other publishers that are not a super good fit for you.
So don't necessarily put all your eggs in one basket, but identify the baskets that you should even put them in in the first place.
So a question I get asked all the time is, should, and we're getting close, should I put my budget in my pitch document.
No, unless you were asked for it.
Don't put a budget in a pitch document.
You want them excited about your game, you want their eyes to glass over, and then you want them to ask for a budget.
Things you should put in, though.
Duration of a project.
How many staff you got, tell me about your team and how cool you are.
And later, when you are doing your budget, other things you should add is sort of how much your staff costs each month.
You do want to track in your future budget building equipment and services, so like legal, accounting, whatever, which is also legal and accounting.
So services, how much does Maya cost in Unity?
And if you're really unfortunate, all the insurance you have to take.
That's the kind of stuff you do need to put on your budget, but literally do not stick this in your pitch doc.
It's not necessarily unless I ask for it.
You can send over an Excel spreadsheet with this.
You don't gotta make it fancy.
It just needs to have numbers, because that's what they're going to look at.
They're crunching numbers in an Excel document.
Or you can send it off in a PDF.
So yeah, don't send a budget unless you're asked for a budget.
Okay.
So, understand what you're making.
Spend time on this.
Talk to people.
Understand the people you're talking to.
Journalists are different from dev relations who are different from the random person who walks by your booth.
Practice talking to these people.
Think about the ways that you'll communicate the ideas about your game.
Understand the pitch.
Build your pitch so it's exemplifying your game, that it's the most exciting thing that you can possibly put together, that you get excited when you read it.
Understand the pitch and who the person is on the other side receiving it.
What are their end goals?
And communicate that, that your goals are going to overlap.
And understand your deliverables.
So you don't need to turn in a pitch document tomorrow because you're already sitting on assets that you thought through today.
So you can just pull them out of a Dropbox folder somewhere and build your document.
Last minute is obvious.
We can see it.
And seriously, good luck.
It's hard.
Use friends.
Get mentorship.
You guys can do this.
You have the games to build this stuff.
Thank you.
