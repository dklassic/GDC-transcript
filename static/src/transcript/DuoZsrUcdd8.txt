Just to say at the beginning, remember to rate all the talks and things, especially this one, and turn off your cell phones, make them quiet.
I'm Brandon Sheffield from Necrosoft Games.
I also am the person who runs this career seminar thing.
So if you...
I appreciate all the ratings that you give because it helps me know what you like and don't and leave comments in there and just feel free to tell me anything about what you like and don't so we can improve for next year.
So this talk is called How and When to Not Give Up on Your Game because I believe that if you have a game...
of any type that is good, you can get money from it.
Not necessarily from selling it to people, because that's incredibly difficult, but perhaps more easily through selling to platforms.
So this is all about our kind of weird production model and business model that we have.
Because we make games that are not that popular, we've never had a hit, but we've survived for five years anyway.
So, I mean, that's got to stand for something.
So yeah, essentially the thing that we're talking about is getting new platforms to pay us for a small version of our game, then another new platform to pay for a slightly larger version of that game, then another, until the game is finished.
This is how we get finished games that we own 100% with no publisher, even if the games themselves don't necessarily sell like gangbusters because they're on these small platforms.
Then eventually we can put them on a wider platform and hopefully do well.
So with a little luck I will be able to teach you to scam platforms out of their hard-earned cash in order to fund your own games.
How'd that get there?
How it works is this.
New platforms need new games.
When they're new, they'll give you money because they need games to attract players and users.
And that's the thing that makes them popular.
Because developers don't want to release games on new platforms usually because they're unproven.
And it's less likely you will be able to get revenue on the back end.
So they have to pay for the first games they get, and this is when we try to swoop in because once they're popular, they don't need you anymore, and that's it for you.
They don't need to fund games if they have a popular platform.
Like, imagine if you went to Valve and was like, hey, can you give me money to release my game on your platform?
They're gonna say no.
But yeah, look at Sony for example.
They, at the start of every console cycle, they're like, yay, indies, look at all these amazing indies that we have funded and put on our platform.
And then as the console gets more mature, they're like, yay, Call of Duty, it's here.
So, like I said, we take a small amount of money, make a small version of this game idea that we have.
We build the core of a game that is fun and good as it is, but isn't huge or expansive.
It's not, it's like the very center of our idea because these platforms don't really care if you've got the longest game in the world.
They care that it's fun and good and most importantly, there.
So then what do you do with that game next?
After you've made that core and it's released on this small obscure platform, then you find another. And you get a little more money and you release it there. And you keep doing that until you have it in the state where it has matched your vision.
So the traditional way to make money off of your games is to sell them, but it's incredibly hard to sell things now, especially if nobody knows who you are and what your game is about from having previous hit games or something.
Like, a bajillion games are released every five minutes, so it's impossible to.
get noticed practically. But by selling to platforms you can expect about twenty to thirty thousand dollars per one of these deals and if you can make that work for yourself then there's something you might be able to do there.
Look at that guy.
Most companies do the top model.
By the way, my girlfriend did these graphics here, which is why some slides look way better than other slides.
I can't do anything but write terrible text.
So, on the top there, most traditional companies will do a prototype, then they'll try to get funding, then they will finish the game, and then they release version 1.0.
Or in the case of Free-to-Play, they'll update it forever, or as long as they're getting money.
What we do is...
First two steps are the same, prototype, get funding.
And then initial, sometimes rough, version 1.0 is on a small platform.
1.25 on a different small platform.
1.5 on yet another.
And then we get to version 2.0, which we can release on a big platform.
And our version 2.0 is kind of close to the traditional models 1.0, except we've had a lot of iterative releases.
And so we're sometimes able to iron out.
more of the bugs that way.
So, let's look, oh right, also just in both models of course, once you've released it on a larger platform, you can also then curate down again, like say you go to PC as your big platform you're going to.
After that you can go to console, and then like a handheld console or something like that.
And so.
options continue to exist. I see so many people who they have a game, they put it out, doesn't really go anywhere and they're like well I guess that's it I guess I lose, I guess that's what happened to me but I believe you can keep injecting life into a game that you know is good. So I'm gonna show you, talk about a couple of our games for example that's a little note for me and there we are Okay, so I'm going to play a trailer.
Ooh, a little echoey.
So, um, this is Gunhouse.
Gunhouse is a puzzle tower defense hybrid thing that we first released on PlayStation Mobile in 2014.
Sony paid for the development of that game because they needed games on PlayStation Mobile at the time.
So then Microsoft needed games on Windows Phone.
So they gave us a grant to bring that game over to Windows Phone, and in the process, we were able to port the game from PlayStation Mobile's rather obscure SDK over to Unity.
Now that it was in Unity, we could put it wherever we wanted.
And so we were able to do something like, my programmer needed a new phone, so I was like, I bet we could get a phone from Amazon if we put...
the game on their platform.
So we did and we got a new phone for him.
And it only took us two weeks.
So yeah, and we killed a bunch of bugs in the process as we kept iterating on it and then we finally self-funded the port to iOS and Android, did a whole bunch more work to make sure that this was like the best version of this game that we could make at the time.
Oh wow, I made it almost to the end of the trailer.
Well too bad, we're going to the next one.
This right here is O'Deer.
Oh, I didn't even maximize it last time, sorry.
Um...
Uh, O'Deer is a pseudo-3D driving game about drifting your way to grandmas while hitting or avoiding as many deer as possible.
For this one, we also got Sony funding at the beginning for a PlayStation Mobile version, which released in 2015.
But later we pitched Humble on bringing the game to their Humble subscription, and we released that just a few weeks ago, so our beta is now out for people to buy on Humble.
And so now we're awaiting the final version funding to make this happen.
So one thing that's interesting about both of these games is the first platform was PlayStation Mobile, which is now a dead platform.
And in a way, this doesn't hurt us because they can't really compare this game to the one that came before.
Uh, okay, that's done. Goodbye.
Yeah, Dumbo.
So here's some things that are good about this model.
First, you get money to make your own game.
Like, it's rare that you can come from a place of not being super known, but be given the opportunity to make your own game on someone else's money and continue to own that.
So that's great.
You can keep improving it on each platform.
As I said, iteratively make it better.
You're also building expertise at launching games, which is really important, because each platform has its idiosyncrasies, and frankly, even just knowing that is important, but having gone through the process many times, going through ESRB rating and PEGI rating, figuring out what you have to do to get your game released in Portuguese-speaking countries, which is slightly different, you know?
This stuff is all really important, and it gives you great experience for when you finally do launch it on a big platform, you're going to be better at it.
It's also better than contract work, because it's yours.
A lot of people do contract work early on to try to make ends meet, but if you can work on your own thing, that's better.
It also gives you a bunch of games that you can put on different platforms which helps you with this model.
So we've got a touch screen game and we've got a controller game, controller keyboard game.
So if a new platform arises that has touch, we can put that on it.
If a controller thingy happens, we can put that on it.
You can also use funding if you wind up making a game for some obscure technology that doesn't exist elsewhere.
You can use future funding to port it to a more universal platform.
A lot of releases, having a lot of releases also gives you a lot to talk about.
It makes you look more active as a company.
And it hasn't harmed us in very many ways because, like I said, when, you know, when Gunhouse and ODIHR get new versions, very few people actually know that it has existed on a small platform before because those platforms were small.
They never saw them.
And then after that you kind of have something really good to show publishers if you want to get more money because, like to make the final version, because you have built the core of your game and it's there and you can just be like, do you like this?
Here it is.
Wow, look at those tough buddies.
Tough as heck.
So here are some things that you need in order to make this model work.
You have to own your own IP.
If you don't work that into your deal, then none of it works.
So that's number one.
Obviously it always has to be good, it's stupid to say, but if you half-ass it, it's not going to go anywhere.
And don't expect these platforms to last necessarily.
It doesn't really matter if they do.
What matters is you're getting your game out there.
It also only works if you got a very small team.
$30,000 is good if you're three people.
If you're 10 people, it's basically worthless.
You also need someone on the team who can, like me, spend time thinking about business and chasing down leads and doing this stuff because otherwise you'll just get overwhelmed with making the game and not thinking about what's next and how to sell it again.
You also have to be reliable because if you're delivering quality at a good pace, then people are going to know that and they're going to come back to you and be like, we need another thing.
And you must plan for not making any additional money on those platforms because it's going to be a small platform and you make it and then it's not going to be a tower fall because nothing is going to be a tower fall ever again probably.
This guy, he needs a hug.
There's some things that can go wrong with this as well.
You can definitely get some potentially lean times there.
We, like I said, we've survived for five years doing this and that's great, but.
At the beginning of December of 2016, we had $200,000 in handshake, definitely gonna do this deals.
It was looking fantastic for 2017.
We had it all laid out.
By mid-February, that went down to $0,000, zero K.
That is not enough K to make anything.
So.
It's rough.
Also, publishers may not understand what you're doing.
We have talked to publishers who, looking at the beta of Odeer, they're like, why would we fund this?
It's out.
It's like, yeah, it's out, but it's not finished.
It's kind of like early access.
We're building it.
But not everybody understands that.
It also takes a lot of work to get this going.
You have to do a lot of legwork to figure out what these platforms are, because sometimes they are obscure and not everybody knows about them.
It's because not everybody knows about them that you can kind of make this thing work, but it's a double-edged sword there.
Oh, look who's back.
That's weird.
How do you identify these platforms?
You should look for new platforms that fit what you're already making, first and foremost.
That's the best thing.
And right now, VR is a good place for that.
The VR funny money where they were just dumping barrels of it, that's kind of over.
But all the major VR platforms are still funding projects.
Not maybe for a huge amount, but they are funding them.
And I believe that even at this stage...
If you're making a VR game, you should not be spending your own money on it.
At least past the prototype phase, you should be getting paid for it by a platform.
Look also for new business models.
Subscriptions are cool.
There's some subscription things coming to iOS.
There are already some in other countries.
And bundles are good.
The Humble subscription was good for us.
Well, don't do bundles until you're absolutely desperate and out of money, though, by the way, because after that, it really gets devalued and it's hard to come back and bring it back up.
A new technology that you can easily support is cool, like a new physics thing or a new weird haptics thing.
If you can easily integrate that into your game, they...
I mean, you want to talk to them about this first, but they may fund you to have an example of like, here's our technology working in a video game and it's good.
And then you just put their logo at the front and then you get a bunch of money.
Look for stores in new and emerging markets.
Sometimes this requires localization, but sometimes they'll do it for you.
If you've ever released a game on Android, it is highly likely that you have been contacted by some publisher in China asking if they can release your game over there.
And if they're legit, give it a try.
I like that chipmunk guy so much that I made a comic about him.
So people have been doing some version of this sort of thing for many years.
So think about companies like...
Capcom or SNK or Konami, they have this huge backlog of titles, which most of us don't have, of course, but they're essentially not giving up on their game by saying, okay, we released this game on the Genesis. That's 20 years old. They're putting it on virtual console and Steam and stuff like this, and they're just continually getting revenue from it.
The costs are really low on that.
Obviously, most of us can't do that though.
But let's look at Sega as an example.
They have done some interesting, weird things.
That's Vegeta from Dragon Ball in Streets of Rage 2.
That is an official selling product on Steam because Sega has opened up their platform, essentially, to ROM hackers.
On Steam, you can release a ROM hack, Sega gets some money and you get some money.
It's weird, but they're doing that and it's great.
I was trying to get some more information about this.
I couldn't get much, but a representative said to me, we are keen to offer the back catalog onto as many relevant platforms as possible and also embrace all community-created content where legally viable to do so.
Fan-made modified ROMs are hugely appealing to the PC community in particular.
Archiving is therefore taken very seriously so we'll never give up on our games.
Double Fine is another good example.
They kept the PC rights in publisher deals for Brutal Legend, Costume Quest, and Stacking, and then eventually they wound up getting the PC rights back to Psychonauts and Iron Brigade.
They self-funded PC ports of all of those titles, and they have all made them continuous income streams that they've been able to use to partially fund every other game that they've made, pretty much.
These PC releases also allowed them to spin up their publishing division because, like I was saying before, constant releases give you a lot of experience launching games, and that's a lot of what a publisher does, is launch your game, talk about it, and put all that stuff out there.
Like, every time you release a game, you get some learning from it.
Then they did remasters of those classic LucasArts games like Grim Fandango and Day of the Tentacle.
And they broke even for the studio in just a few days and have both gone on to earn more revenue than their original versions.
But then on the flip side.
Broken Age and Grim Fandango both got Android ports that were paid for by hardware manufacturers, and that money didn't totally cover the cost of the port, and then they didn't sell super well on the Android platform, so they've basically stopped supporting Android devices.
But if Double Fine were five people instead of 30 people or whatever they are, those hardware deals might actually have been really useful for them.
Another kind of my company size example is Adam Ripon from Muteki, who released Dragon Fantasy, self-funded for iOS first.
Then they got an advance from Sony for Vita and PS3.
And then they released the Vita version, like the third revenue stream from this was a thing called Limited Run, which if you don't know, releases...
boxed versions of Vita and PS4 games.
Because that's something that Sony has set up that you can do, but Limited Run has like a store and shop for it.
And so when he released the limited run version, it was actually the most lucrative version that he released.
He said it was roughly one million times the return of our Steam version.
I might be exaggerating that number, but not by much.
So for him, once the game is done, he actually thinks that the more highly curated the market is, that is to say closed, the easier it is for traditionally built games to succeed, which is genre titles built without Kickstarter funding.
So for him, he said each time we did a new release, we aimed for more and more curated markets.
He also said Android was a waste of time, so sorry, Android.
Here's some more advice.
Keep your code base up to date.
We had a big problem when we ported Odir to PC because the previous coder hadn't documented anything and there's magic numbers in there and sprites were named with numbers instead of names and so you had to figure out retroactively.
It was a big archive work.
So don't do that to yourself.
And also don't spend time chasing money that you're not sure will ever exist.
We spent some time trying to get...
I was really thinking we could get one of those Unreal grants that they were giving out a while ago.
But the thing we were making was 2D and it wasn't really the kind of thing that they were signing and we wound up spending like a month and a half trying to put a square peg in a round hole sort of thing.
So don't, but I mean, do chase award shows, but not grants, unless they're easy.
Keep up relationships with publishers.
We continually talk to publishers all the time, even if they're sick of us, even if they've seen our things already, because just having, continuing those relationships, eventually maybe they're gonna want something from you.
and don't just give up because they don't like what you're doing right now.
And then, you know, selling your game is still going to be super hard.
I mean, streamers are tougher than ever to get hold of and they're also, oh look at that, they're also way more important than ever before.
I'm just going to get my slide back.
Yeah, cool.
I'm good at this.
Yeah, we spent actually a lot of time trying to get streamers to talk about Odir.
And we mailed 25 people, and of them, one replied with a maybe we'll look at it.
Maybe we'll look at it.
I found people respond better on Twitter.
I'm not sure that's true across the board, but one little trick that I've been using lately for that is I ask my friends on Twitter, like, who would you like to see stream this game?
And then my friends wind up adding a streamer and being like, this person.
And so then I reply, and then we're already two replies deep into a conversation and it's more likely to actually pop up on their feed.
And just as a final word, I called the platforms suckers.
They're not really suckers.
They need a thing that you can provide to them.
And they're paying you for a reason.
And if you're making original games that people like in the process, like what could be better than that?
So thanks, and if you have any questions, please come up to the mic.
Hi, thanks for the talk.
I have a question about when you're putting a pitch deck together and you're doing this multi-platform targeting, how do you make considerations for that and change it up?
When I'm doing a pitch, I do target it for that platform.
If I know that I'm pitching a new platform, I'm probably not gonna include how much it's gonna cost because I know that they're just gonna give me this smallish chunk of money and I know that that's there.
But then I, of course, change it when I'm going to talk to a publisher and I'm like, we need $100,000 to finish this.
And just as a little piece of advice, definitely overestimate how much you need, because I have underestimated it so many times, just so many times, and I keep thinking, this time, this time I'm gonna do it.
But then you get publishers being like, oh, that's a little too much money, I don't know about that.
And then you want to bring that cost down, and then it can wind up screwing you.
I don't know if that answered enough of your question, but.
Yeah, thanks.
Okay, thanks.
Over there.
Hey, I just wanted to know, when you got started and you got started with your team, how did you guys decide what you were going to do first and then assign roles and basically go through your iterative design process until you felt satisfied?
Oh yeah, well it was a little easier for me to start that process because I am not a coder and I'm not an artist, so who was I going to be but the design, biz, production person?
And so that meant that I was naturally going to be defining the roles of the team.
But in general I find that a really...
For me anyway, if you can find someone who's good at a thing, and you let them do that thing, but you also keep them in the loop on all of these decisions, you're transparent about like, you make this money off of this deal, I make this money off of this deal, here's how much revenue share split we're gonna have after this, and this is what the actual amount of money is that's coming in.
I think transparency is really good and just keep talking about it with your teammates because they may have ideas you didn't think of.
So I don't know if I went on a tangent, but that's...
Okay, so how much of the non-design work did you have to do and then how did you keep your teammates around even though you guys weren't generating any revenue at the time?
Right, so I did, I would say that about half of my work is not design.
And it obviously fluctuates.
Like when Odir needs to get done I'm like making tracks and that's all I'm doing.
But in between those times I'm doing a lot of biz stuff.
And basically I always make sure that I have some money in the bank.
first, and that can be really hard to do.
I got it by just, when I left my old job, I didn't ever claim vacation days, and in California they have to give you that money back, and so I got like, I started with that.
But sorry, I am out of time.
If you want to talk to me, you can get at me here, my email's on my website, or I can go to the, I'll go outside, or to the wrap up room.
Bye.
