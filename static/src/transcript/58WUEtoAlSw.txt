This is the last session in Level Design in a Day, so thank you for being patient and staying here.
This talk is called Level Design Histories and Futures.
I'm Robert Yang.
I'm part-time faculty at the MFADT program at Parsons New School for Design, as well as the IDM program at NYU Poly, as well as the NYU Game Center.
Yeah, woo!
Sorry, I'm a student in the crowd.
I'm also a developer.
My most recent games have been a spanking game called Hurt Me Plenty as well as a game called Succulent where you just watch a guy eat a popsicle really erotically and slowly.
So I make games too.
I'm not just an academic.
A mouth-breathing academic.
And unlike the other talks today that have been super, like really heavily grounded in hands-on techniques or practice or case studies, this talk is kind of about taking a step back and kind of reflecting on everything you've heard today.
How am I gonna do this?
So this talk is about analyzing level design in kind of a more critical sense, about going beyond ideas of layout or enemy placement as interesting and important as those are, and connecting it to kind of a bigger picture, at least trying to.
It's about thinking about thinking, kind of.
And if we can do that, then maybe we can get a better sense of what level design is and what level design might be in the future and maybe even open our mind to new ways of being level designers.
And as with the other talks today, this talk is gonna have a heavy bias towards 3D games where you control a character.
There's many other traditions of level design.
Unfortunately, I'm not gonna talk about those.
So let's imagine the world's most talented level designer.
I did some computer modeling to generate what the greatest level design ever would look like.
I couldn't find a picture of Liz England, so I just put a door there.
There'll be Liz England.
This person can generate 3D geometry with code, they can tell a story with careful prop placement, they can also manage a team of 20 people, but they also work really well alone, but they also sculpt subcontinents, but they also build cities made of several neighborhoods, but they also hand paint houses, and they also hand model the electrical cords for each house lamp.
They did that and gone home, by the way.
Does it really make sense that level design is all of these things?
Because like every speaker you've come today, you've seen today, they were coming to level design from a really different angle and for a very different purpose.
So why are we trying so hard to like unite all of these things under a banner of level design?
So I want to complicate what level design is.
Academics use the word complicate when we're going to talk a bunch.
I'd like to propose four different ways of thinking about level design.
There are actually infinite ways of thinking about level design, but 50 minutes, I'm just going to talk about four.
In one sense, levels are just another piece of data.
So what's level design as a form of material in a game?
We can also think about the level designer as a job title in the game industry, as an industrial process.
We can also think about level design as a theoretical branch of architecture, as well as an act of design and control within a community.
And each level you make is interacting on all four of these dimensions.
Every level you make is actually a hypercube, where each face of the cube is another cube.
That's what a hypercube is.
So first, let's think about level design as material and data in a really kind of literal sense.
What is it on your computer?
We can think of a level as a bunch of data or an asset that references a bunch of other assets.
And in that case, a level editor might be software that visualizes this data as something really useful, friendly to humans.
And it lets us construct or modify this data, ideally easily and effectively.
So the question is, how do we fill these files with data?
And how do we manage these complex connections between all these files?
First, you could technically use a text editor, or Excel as your level editor, and a lot of people do this.
The text on the left is actually data that is for a map file in Source Engine 1.
It's just a series of keys and values.
You could technically make a Counter-Strike Go map by just typing stuff in in Notepad or something.
That'd be really awful, but I'm sure you could technically do it.
And it's also worth knowing that not every game needs a dedicated level editor.
You know, if you're working procedurally or if you have a small amount of possible tiles, it probably makes more sense to like code it or use text for this.
You saw David Pimmons' talk earlier today about procedural level design for Eldritch and he showed the actual script files he does.
He's using a text editor as a level design in that case.
But so much of game development is about working with specialized tools.
And if we study these tools, we can kind of sense there's like a tension often between data and a designer.
So as an example, this is Arsenal 3.
It's a StarCraft 1 modding tool that I used back in the day when I did StarCraft 1 modding.
And notice that red checkbox there on the right.
That red checkbox made me so angry.
Because, you know, that red checkbox, if you don't check it, that means you don't have shields on that unit in StarCraft.
Which made me upset, because I feel like if you just type in a number greater than zero into the shields box, can't you just assume I want shields on my Terran Marine?
But if you uncheck it, it doesn't put shields on it, and it just ignores the number you put in there.
That's just adding one more point of failure for me as a human being.
It's just really terrible.
So why can't the tool just check the box for me, or maybe even hide it entirely?
So this is kind of what I mean by tension between data and designer.
The StarCraft engine might have a very good reason for having a separate variable for needing that checkbox in the game data file format, but as a designer, do I really need to know about that?
So this series of all these steps and stuff we have to do when working in a tool is called workflow.
And a history of level editing tools would involve a history of workflow.
So you might start in or the you might trace the origin of level editors back to AutoCAD in 1982 That's what the original AutoCAD looked like I guess. I don't know I wasn't alive I was like a zygote or something a computer-aided design tool AutoCAD is a computer-aided design tool using industrial design architecture and the difference between AutoCAD and DoomEd on the right is that AutoCAD is really scary and making Doom levels is really fun.
So Joel kind of touched upon this when he was talking about how modding made a lot of working with 3D really accessible.
This is where level editors come into play.
They're stripped down versions of really scary architectural drafting tools.
So that's what's really nice about them.
So on the right, there's DoomEd.
That's the level editor used to make Doom 1.
And notice that's just one big top-down 2D view.
Doom is fundamentally a 2D game.
There's no floor-over-floor construction.
Well, I mean, now there is with the new engines and stuff.
But before it wasn't possible.
A bridge would not be possible in the original Doom.
So you don't get really a sense, when you're working in DoomEd, you don't really get a sense of height.
It's a top-down floor plan.
So I think these days we kind of view this type of workflow as obsolete because it doesn't give us a good sense of height.
But I kind of like it still a little because I think it places a lot of emphasis on lateral movement.
You have really good sense of the organization of the general level here.
A lot of people criticize modern FPS design as having really bad simple layouts.
If you look at a single Doom or even a Wolfenstein 3D level, the layouts are like super complex and that's because they were thinking in terms of floor plan and layout.
So maybe we can bring some of this back, I don't know.
And even in that early DoomEd screenshot from 1992, you can see there was a texture browser.
And this is something Jim Brown from Epic talked about in Level Design in a Day back in 2010, that a good asset browser is so important for your workflow.
It might be weird to think of an asset browser as a technology that someone had to develop and design, but it's true, and here's an example of that.
The model browser for the original Hammer Editor for Source One looked like the thing on the left.
where it relied on thumbnail JPEGs to know what the model even was, basically.
And you had to name it the same thing as your model file name and stuff.
And it wasn't there, it just said MDL.
This is really terrible, especially because Source actually embeds a lot of metadata into the models, too.
It's really important to have a good browser here.
And it was just really painful.
So thankfully they updated their model browser to the one on the right.
And real-time 3D preview is very common in most 3D tool sets these days.
And then next, kind of like in the evolution of level editors, we can also talk about QuakeEd.
This is the level editor for Quake 1.
It's kind of the great ancestor of today's radiant family of level editors.
And you can see two new features.
There's a...
3D camera preview in the upper left, that like blue blotch thing, as well as an elevation grid view.
That's that thin white window to the right of the floor plan and that would show you the height of wherever you're currently building.
And Radiant is kind of weird.
No one really copies this thing anymore.
And I don't know, I think Radiant's weird.
Like why would you press space bar all the time?
It's terrible.
Okay, but anyway.
The point is that this is kind of them transitioning from thinking about 2D floor plans to the true 3D thing that like Quake 1 offered, right?
And a lot of what makes that possible is, again, much like how we didn't think of the asset browser as a technology, MouseGluck and WASD is actually a technology that we had to develop and it's now taken for granted.
If you didn't have MouseGluck and WASD in our level editors, our levels would be a lot worse.
Because if you talk to any level designer, or if you're a level designer yourself, you know that you'll spend five or 10 minutes just flying around your level, not really doing anything.
And you'll feel really useless, like you're not really doing anything, but you're actually doing something really important.
You're testing your level, you're testing the sense of space.
And that's really important.
It's almost kind of like this very conceptual, like situationist act where you're just drifting around your level.
So you can say mouse look transforms us into like conceptual artists in a sense.
Oh, and a fun fact, Autodesk only added WASD and MouseClick to AutoCAD in 2007.
So be thankful you're not in that industry.
And now we get kind of get to what we might recognize more as level editors these days This is the standard four pane view from 3d studio like one the first one in 1990 And then here's also world craft in hammer I mean world craft or also known as hammer and also unreal ed And they still made heavy use of this arrangement where you have one 3d view and then three 2d orthographic views now And notice the 3d view is much more important than it was back in quake ed now And I think the grid views here are really important because when you're working in Quake lineage engines, there's something called a leak.
And if you have a really small, one millimeter thin crack in the outer shell of your level, that crack will suck everyone in the game out to space and everyone will die and your level will break and the map compile process will break too.
It's just really terrible.
So you need really exact kind of solid manipulation here and that's what grid views offer.
a lot of good accuracy when doing that stuff.
This type of window layout, I think, is still supported in most packages, but it's no longer the default, I think.
Instead, this is the default now.
This is pretty much the standard setup now.
It's one big interactive 3D view.
You know, across level editors, architecture tools, 3D modeling tools, Unity, Unreal, SketchUp, TrenchBroom, which is a new Quake 1 editor.
People are still making Quake 1 editors.
Sandbox, Maya, they've all embraced this one big 3D view interface now.
And supposedly this lets us work in 3D natively.
So again, several things make this possible.
We have less of a need to tightly optimize levels.
In Unity, there's no concept of a leak, so you can just put objects wherever you want.
And also module workflows, and also a gizmo interface metaphor.
Where is the future of level editors?
That was a history of level editors.
A future might be involving, like, visualizing the unseen, you know?
We went from 2D to 3D, now we need to go from 3D to, like, 4D or something.
I think the future will allow, will be more about automation of construction and design.
So there's a lot of people working on automation of construction, like Joiner by Tim Johnson.
He's a Team Fortress 2 mapper and he made this thing that automatically generates wood beam girder details for TF2 maps.
Or there's also a thing called Improv 2 procedural ladders for Unreal 4 by a developer named Joe Wintergreen.
And that one, it generates a ladder mesh based on whatever you place in Unreal, which is really cool.
So that's like the editor making your map for you or constructing it for you.
And then we also might distinguish this construction from design.
that top right diagram there, that's an NPC guard placement algorithm from some very good research going on at McGill University.
This tool can understand patrol paths and line of sight and simulate player pathing.
So what if your NPCs could place themselves in a certain sense, right?
Or, in the lower right, that's the interactive story toolkit, Versu, which has a plot visualizer, and it draws all the possible paths between your different scenes, as well as any dead ends.
So, what if your levels could test and analyze themselves as well?
So note that a lot of those solutions actually weren't really coming from the AAA space, so now I do want to talk about the AAA space.
So, a common theme in past level design in today's is that level design is so important yet at the same time we don't really know what it is.
It's kind of this nebulous thing.
What does a level designer do?
Well, the advice is that every studio will have a different definition of what a level designer is.
And the key word there is the word studio.
The idea of a studio is kind of more of a triple A construct.
If I'm one person working alone, I'm probably not going to call myself a level designer.
Because that implies there's other developers working alongside me.
So I think of level designer as something that's mainly dictated by the needs of triple A industry.
So now a disclaimer, I'm going to talk a lot about job postings for this next section.
In case you're not familiar, job postings are like bullshit.
It's mainly designed to scare you away most of the time.
If you don't know to read the lines between minimum one to two years experience means have a portfolio and laugh at our jokes.
It doesn't mean have one to two years of experience.
And also with job listings, you know, you might be hired for one thing, but then you end up doing something else or whatever.
So again, they're kind of bullshit, but I still think they're kind of useful because it's kind of the story the game industry is telling to itself.
So I don't think they're accurate, but maybe they're true, if that makes sense.
So here is a Crytek ad for a level designer back in 2001, a scrappy small company called Crytek.
That's a lot of text, but I just wanted to show you the whole thing.
Here are the highlights that I wanted to focus on.
So I feel like this ad is actually very representative of most level designer ads around that time.
You can see that there's an emphasis on art skills, architecture, modeling 3D environments.
Also note that it's engine agnostic.
They want you to use a map editor.
What engine is that?
I don't even know.
This is map editor, okay.
because they'll just teach you how to use their tool set later.
Your ability to produce levels is not an engine-specific thing because they'll just train you when they hire you.
Also note the language here. You collaborate with the lead designer.
You work closely with project artists.
It sounds like a wonderful creative paradise.
Here's another ad for a level designer at Crytek.
This time in 2008.
Crytek is now a bigger company.
It's growing hair in places it never had before.
It's, this is the full ad.
I wanna show you, it's about twice as much text as before.
You probably can't read that, that's okay.
What's exactly changed for level designers since 2001?
The language here is very different.
Now Crytek prescribes a specific engine, tool, genre, and gameplay dynamic.
You have little choice about what this game is going to be about.
Market forces and studio heads have decided what you're going to do already.
You also have to use the CryEngine sandbox editor.
It's no longer engine agnostic.
You're supposed to train yourself and just hit the ground running.
They also used the hard third person pronoun he.
I hope that's just an artifact from 2008.
I hope we know better by now.
And if you're one of the people who thinks that doesn't matter, I don't know, just tell me how many women are on the Crytek level design team and it's hopefully not zero.
There's also a weird bit about where the level designer writes NPC dialogue.
That's kind of unusual.
Maybe that explains some things about Crysis.
There's more emphasis on hierarchy.
You no longer collaborate, you report to your lead level designer.
And in contrast to that listing from 2001, here now in 2008, they don't care if you have art skills or if you know 3DS Max.
even care if you have an architecture degree.
What would architecture have to do with level design?
So now here's an ad for another level design position, Crytek for 2012, and Crytek's now this much, much bigger company now.
And it's for a tech level designer, which is actually still a really new kind of job title in the industry.
Tech level designer is kind of like a tech artist title.
You know, you're interfacing more with level design and code, and still, again, a pretty new thing.
Here are the highlights of that job ad.
You know, sure enough, the tech level designer is a bridge between design programming, mostly geared towards optimization with an emphasis on profiling tools and AI.
AI is traditionally something that consumes a lot of CPU stuff, so that makes sense.
But the thing that really amazed me about this job listing is that second to last bullet in bold, prior level design experience is a plus.
this is a level design position where prior level design experience is optional.
So that's kind of a beautiful paradox, right?
But the weird thing is that it kinda does make sense to us because level designer is an arbitrary title anyway.
So, this kind of specialization I'll link to a wider trend within the industry called specialization where job titles and responsibilities are getting smaller, narrower, and more specific.
And it's important again to note that a lot of AAA studios operate differently.
They don't maybe hyper-specialize, maybe they're more generalist, but I think just as many AAA studios do hyper-specialize.
And I think it's partly a response to something Ed Byrne of Ubisoft talked about in Level Design in a Day 2011.
In his talk, Unscaping the Goat, Byrne was complaining about how his studio often blames level designers for problems because the role seems arbitrary.
So their job is to make the game fun and make the frame rate not slow.
What does that mean?
It's actually a really complex problem, right?
So if you specialize, if you chop up the level designer role into much smaller parts, these are all real job titles that you probably used to be under the general purview of level design, but now there are separate roles now in a lot of studios.
And.
A lot of these job roles, I think, follow the form of data in the game engine.
So you can see some of them are working with the level scripting files, some of them are working with the light entities, some of them are working with the quest scripting files, and so on.
So the materiality of the levels is kind of bleeding into level design, and it's fascinating the way that it happens.
So in the past two sections, I've emphasized the material and technological aspect of level design, as well as the industrial laborer side of it.
Now I want to address kind of what we might think of more as like the pure design part of level design.
You know, we often think of level design as virtual architecture, but the key word here is virtual.
They're not real buildings made of steel, made to carry load or withstand earthquakes.
These are digital spaces.
So what is this space made of and how do we architect this space?
So let's say you want a job at a studio, and you go in and they have you do a level design test.
And you make your level kind of like this, where you're building it and detailing it one room at a time, finishing one section before moving on to the next.
If you do this for a design test at a AAA studio, you've failed within the first minute because you're just doing it all wrong.
This type of art test approach is common for environment art, but in level design we've erected a huge barrier.
between art and design, which we're thankfully taking down, if you saw a Stephen Cates talk.
But these are not levels to a level designer.
These are dioramas.
And this is level design orthodoxy that argues environment art is just another asset, endlessly repetitive, replaceable.
Look, there's six different doc scenes.
Dual level designer, these are all the same doc scene because we can just replace it with whatever asset we want.
Oh, and this is a Splash Damage art test.
I hope Splash Damage changes their art tests soon, because I'm sick of looking at this doc scene all the time.
So the right way to level design looks something like this, and this is taken from a CCP games.
write up about their level design process.
Level design orthodoxy argues that good level design will start with a paper prototype or design document, hand that off maybe for a concept art pass or something, then do a geo pass or a block out or a gray box where it's just rough 3D shapes and stuff, and then do an art pass and do all that stuff later.
And this usually gets okay results.
And as we discussed before, it's what AAA level designers were complaining about.
They wanted more formal processes.
So this is that formal process of what level design is supposed to be.
But where's the shape of this even come from?
Like, when you say a level can be chopped up into parts, you're making a lot of assumptions about what a level is.
And that assumption is something called formalism.
You might have heard about the word formalism lately.
Don't ask people about it.
I mean, maybe you can whisper formalism and then Raph Koster will corner you in the bathroom or something and tell you all about it.
One origin of formalism is the philosophical theory of platonic form.
So whenever you see anyone talk about formalism, they're kind of invoking this a little.
The ancient philosopher Plato might ask us, what is the chariest chair?
I'll let that question sink in.
Is that chair more like this chair?
Is that chair chairier than that chair?
Plato argued that the perfect chair had to exist outside of human experience, only in abstract thought.
Only by contemplating endless chairs, we come up with the real perfect chair, and only philosopher kings have access to that power.
You know, this is where the idea of platonic friends comes from.
If you're platonic friends, you're not debasing each other with wicked, filthy sex.
You're such good friends that you resemble the divine essence of pure friendship.
So, platonic forms formalism.
It's interested in the essence of things.
Formalism has some strong roots with Plato, so it makes sense that ancient Greek architecture might be very formalist.
So there you can see ancient Greek architecture had very specific ideas about proportion.
There's three different types of columns.
No other types of columns are allowed.
Those aren't architecture.
And a lot of pre-modern architecture generally has similar appeals to divine form and inherent beauty of shapes and stuff and what proper buildings are supposed to look like.
Today we mostly associate formalism in architecture with modernism in architecture.
where the famous phrase, form follows function, comes from, prompting a push for an international style, a way of building that transcended nationalism and culture.
So if you've ever heard the architects Louis Sullivan or Mies van der Rohe, Frank Lloyd Wright or Le Corbusier, these are all supposedly the forefathers of modernist architecture in the West.
So from form follows function, we can also derive other theorems.
Ornament is crime, is something related to another thing called truth to materials.
Here ornament is defined as unnecessary detail.
So if you're working with concrete, why would you sculpt concrete to look like a leaf?
Concrete isn't a leaf.
Concrete is cast in blocks, so you can keep concrete in block form.
You don't make it look like a leaf.
And that's what truth to materials kind of speaks to, that materials have their own details involved with the process of their construction and what they are inherently.
And that's beautiful in themselves.
So that's why you would leave the rebar marks and the stains there, because that's what concrete is, and it's beautiful.
In terms of the work level designers do, we generally follow this idea when we gray box things or block out maps.
Work at a human scale is also another modernist idea with roots in pre-modern formalism. So there's the Vitruvian Man by the Roman writer Vitruvius, championed by Leonardo da Vinci and a lot of Renaissance architects.
And then there's the Modular Man, or the Modular by Le Corbusier, based on a six-foot-tall Frenchman—actually, he was originally shorter, but then he said everyone should be six feet tall, so he raised the height—imagined as this international unit to unite imperial and metric units.
It's like the essential form of all buildings, the essential human.
And scale in video games is actually really arbitrary.
So a lot of video games and level design follow this kind of idea about working at a human scale.
If you saw the first talk of this track, the Firewatch talk by Nels and Jake, they talked a lot about how the space didn't feel right, and they were thinking a lot about how the player actually experiences a space.
Same thing with Gone Home, where Kate had to shrink these spaces to feel more intimate, right?
It's about how this kind of space feels to humans.
That's what work at a human scale refers to.
And then another idea that we can borrow from formalism in architecture is the idea of a Part T. And a Part T is usually like a simple sketch and statement that describes generally what that building or structure is.
So there on the left you can see a page from 101 Things I Learned in Architecture School.
That's a really good text.
I recommend you check it out if you're a level designer.
But I don't think we've really adopted this language, so I'm gonna impose that language on some other level designery things.
On the right, that's a party diagram of what we might call gated hub, where you have to get a key, and then another key, and then unlock another door, and keep returning to the hub.
That's kind of a generalized sketch of how that building functions.
Same thing with this image of what we might call a funnel from leveldesign.org.
And if you really like this stuff, you should check out leveldesign.org.
They have a lot of good resources for that.
And again, that's the idea that it doesn't matter what those gray boxes are or what that red box is or what that green box is.
There's an essential form to this kind of structure, and that's what all levels inherit and use.
So now I actually want to look at a building because I feel like level designers don't look at buildings.
So this is me making level designers look at buildings.
This is the VC Morris gift shop and it's in San Francisco.
I totally urge you to go actually visit it.
It's a really great building by Frank Lloyd Wright.
I think it's just like a 20 minute walk from here I think.
Or maybe 30 minutes.
The exterior of the building is just a big kind of blank windowless facade and it's made of this beige brick with an archway entrance at the bottom and then inside there's a spiral ramp leading up so there's a bit of like a Guggenheim kind of feel to this.
So to think and make arguments about buildings similar to how we might do it in architecture, first you make an observation about what we call the significant form of a structure.
So that means the most important parts, the parti.
Then next you tell us how that thing functions or how you think people experience that parti.
So here I'm going to argue that big featureless brick wall is a really jarring contrast with other buildings Surrounding it and by being featureless with no windows next to all these buildings with a lot of windows It's actually drawing more attention to itself And it's actually really interesting that it's brick.
Brick is actually a really rare material to see in buildings in San Francisco because brick doesn't withstand earthquakes very well.
And then that's also why they had to use a lot of wood in San Francisco too, and that's why they planted eucalyptus trees, because they needed more wood.
Anyway, that's a tangent.
Anyway, the point is that they're highlighting the brick here, and the brick is part of a system within the whole site and the whole surrounding community.
Um, we can also do this on, uh, actual video game levels.
So here's a, a map called Dead Simple, uh, from Doom 2.
Um, and it's the first fight against these Macubus monster things, these, like, giant blobby things, and these, uh, spider brain monsters.
Uh, so it's your first fight against these two new monsters.
Um, and floor plan wise, this is, uh...
kind of really simple structure.
It's just a large courtyard or cloister with the exit in the middle.
You have to run to the middle and press a button to actually exit the level, and that's after you kill all the monsters.
So, an argument about the Part T in Dead Simple would be, Dead Simple is mostly one courtyard with two new, never-seen-before enemy types.
And then why did they do that?
Well, the contrast between a simple floor plan and fighting two new enemies you've never seen before is kind of a joke.
You know, the level actually isn't so simple.
And I feel like we would never do that in modern AAA level design these days.
You would never put two new enemy types.
You'd do one new enemy type, and then make sure the player's watching what that enemy does or something before they even encounter it.
Not a fan, in case you can't tell.
Next I wanna talk about level design as politics and as a part of a community dialogue.
And I think we rarely think of level design in this kind of dimension, so I wanna emphasize it.
The question here might be who is allowed to be a level designer?
Recall the root of Western formalism in the theory of platonic forms was the idea that human experience is fallible, so it can't be the source of absolute truth.
So maybe you can only access it through disinterested contemplation, blah, blah, blah.
the chairiest chair doesn't exist, it's only a mental prototype in our minds.
And post-modernism had a few things to say about that.
Maybe there is no absolute truth or universal form of a chair.
Maybe these are all culturally constructed ideas of what a chair is, you know.
If I sit on a milk crate, does that milk crate suddenly become a chair?
In the lower left, you can see a notorious story of a farmer who was denied permission to build a horse shelter, so he built tables and chairs, and there was no ordinance against building tables or chairs.
Are those still chairs?
Or like, why are we even like contemplating and studying chairs anyway?
Like, if you stare at a chair for a few minutes, people are going to think you're really weird because you're staring at a chair.
Don't be so weird.
No one stares at chairs.
A chair means however you use it.
A chair means sitting.
A chair is an obstacle to stub your toes on.
Chairs do so much.
A chair is a weapon to lay smackdown on your opponent.
And in professional wrestling, it's actually really important that this is a metal folding chair and not like a baseball bat, right?
It's really important that it's a chair, and that's what makes that moment amazing.
And if you're interested in this kind of philosophy, go find Ian Bogost and buy him a drink or something.
So a political critique of the most famous architecture might be that it was just architecture for powerful people.
Most of the preserved buildings you see around the world are for religious institutions, royalty, military, or just plain old rich people.
The same point applies to a lot of modern architecture.
A lot of the modern masterpieces are vacation homes, corporate headquarters, huge institutions.
The message here is kind of clear.
Architecture with a capital A serves rich people, while the weak and poor must suffer architecture.
So who gets to live in Frank Lloyd Wright's falling water?
Who gets to even visit it?
How do you even find out where it is?
How do you, do you have to rent a car to go drive it?
Well, now you have to have a driver's license and car insurance.
So that's a political critique of this kind of architecture.
We need to think about who actually gets to use it and experience it.
And in the middle there, that's Le Corbusier's plan called Plan Voisin.
His plan was to bulldoze the middle of Paris and replace it with housing projects.
Wasn't too popular.
The other plan over there on the right was the notorious New York planners, Robert Moses's plan to go through West Village or Greenwich Village in New York and bulldoze all of it and put a giant highway going through it.
And that was kind of the fall of Robert Moses.
Basically architects wanted to govern and people rebelled.
Another story about architecture, how many people are familiar with the Vietnam War Veterans Memorial in Washington, D.C.?
It's one of the most beloved pieces of American architecture, which is kind of amazing because the Vietnam War is not the most popular or proud war in American history.
And it was designed by Maya Lin.
She was a young architecture student at Yale who was an underdog in the competition.
She proposed a really bold design.
It's this dark metallic cut into the landscape.
It breaks with most memorial architecture in Washington, D.C.
Usually like Greek temples with a giant statue of a dude or something.
This is the opposite of that kind of.
So Lin's design was a wound in the landscape and as you slowly descend into the ground past all these names until you reach the date of the first death in the middle.
She wrote in her brief, for death in the end is a personal and private matter and the area contained within this memorial is a quiet place meant for personal reflection and private mourning.
Mai Lin won the competition, but only because it was a blind competition.
And when her identity was revealed, all hell broke loose.
Like, don't get me wrong, I really like white men.
Some of my best friends are white men.
I'm married to a white man, so I probably love a white man more than most white men love white men.
But love also means knowing when to tell someone they fucked up.
So this is kind of a case of racism in architecture that probably couldn't even be more clear.
It was a blind competition.
They find out the winner was Mai Lin, a young Asian woman.
U.S. Senator Ross Perot called her an egg roll.
And then he and Jim Webb, another racist white senator, withdrew support for the design.
You know, so before it was really great, but once they found out who the architect was, oh no, we can't have that at all.
And, you know, the argument was that, oh, it's insensitive to have an Asian person make the Vietnam War Veterans Memorial, which is one, racist, and two, like, even if you believe that logic, Myelin was like from like Ohio or something.
Like, it's not.
It's like totally not relevant even if you follow the racist logic.
Ronald Reagan's Secretary of the Interior James Watt threatened to revoke the permit for building it.
It was basically just all these white men conspiring to destroy her.
And architecture, just like tech, there's actually a lot of architecture events about women right now.
Architecture just like tech has a huge sexism and diversity problem.
You know, who is society permitted to succeed, who wins competitions.
So what these white guys did to Maya Lin was kind of like...
an architectural murder, kind of.
I mean, they reached a compromise, and by compromise, I mean, they did their very best to destroy Myelin's design.
So what they did is they wanted to put this big, tacky, bronze statue cast by Frederick Hart, he's the white guy in the upper right, to symbolize all the soldiers who died.
But the whole point of the memorial was to communicate the sheer scope of all the lives lost.
to give every soul some space and respect, to defy any co-optation of their lives by the government by refusing to reduce 50,000 lives to three symbolic figures of melting pot patriotism.
But they did it anyway, and the statue is like right next to the memorial now, and it kind of ruins it. But as a final slap in the face, they paid the sculptor four times what they awarded to Mai Lin.
So this is why modernism kind of died.
Because even giant racists like Ross Perot, they have to admit that buildings are more than just their party, more than just their shape.
Buildings also have their politics, and they might even be conservative politics too.
So maybe it's not form follows function.
Maybe it's more form follows worldview.
You have to ask whose function are we following?
What's the common language?
Whose terms become the common language for an entire discipline?
So therefore, form follows worldview, architecture is political.
Listen and include the communities you build for.
So here's some examples of that.
This building is Inner City Arts in Los Angeles and there they provided an underserved neighborhood with arts programs and community events.
They specifically chose to paint it white to show that they would invest and maintain in this building and infrastructure.
They also kept the garage doors to kind of harken back to their past as a converted car garage in industrial Los Angeles.
They also built the facility in several stages.
You can see on the left, they just started with that core there and then they actually expanded it and added more buildings on later.
So you can think of it as kind of early access architecture.
They could immediately start making an impact and earn more funding and get the trust of the community before doing more with it.
Another example here is the El Guadal Children's Center in Columbia, where, you know, building with prefabricated sheetrock and steel frames might make sense in New York, but it doesn't make sense here.
So they used local building techniques.
They cast the concrete with bamboo, local bamboo, and they also got local craftsmen.
They trained the local craftsmen to do all this.
And there's no big, expensive HVAC systems.
They spent three years consulting with the community as to what they wanted and needed and the result was really wide sidewalks, a really large courtyard, bathrooms in every classroom so a student doesn't have to ask permission to go to the bathroom.
So the postmodern critique of modernism might be that architecture must not just be site specific, it should also be community specific.
Next there's also the Quinta Monroy housing development in Chile.
A firm was hired by the government to renovate a neighborhood popularly named by squatters.
So instead of evicting the squatters and building a condo or something or replacing with a housing project, they actually talked to them and found out what their needs were and what they wanted.
And they actually turned their limited budget, too, into a design strength.
Rather than build an entire project at a low and cheap standard, they chose to just build half of a house.
But that half of a house was an entry-level, middle-class living standard.
And then the squatters are used to improvising their own structures and building structures.
So they made use of that, and they let the residents fill in the rest of the building as they need it, according to their own needs.
And that way it's kind of they're making the neighborhood their own still, improves their living conditions, and you're sharing control over the appearance and structure of neighborhoods with the architects.
So there's already kind of a rich tradition actually of post-modern level design existing in video games. So I kind of want to highlight that.
So a lot of post-modern level design comes from modding and multiplayer communities.
There on the very left is a notorious map called Achievement All V4.
So in Team Fortress 2, they had this thing where you could get achievements to get items.
So people started grinding achievements and idling in servers where they could just grind achievements in order to get items.
So what happened was all these achievement grinding maps, and then someone made an achievement trap map.
where it's all these players playing in the achievements, grinding achievements, blah, blah, blah.
And after a few minutes, a giant cat comes out of the ground and then shoots lasers at everyone and kills everyone and keeps killing them and then nukes the entire level and punishes them all for grinding for achievements.
It's really beautiful.
It's a really beautiful map.
And then their second is a map called Surf Thunderboom.
Surf map and surf map culture is a really interesting thing that's coming out of the CS Counter-Strike community.
And it's this really beautiful architecture.
It's all these surreal kind of slanted shapes.
Very unusual in FPS level design.
Maybe like Quake 3 floaters are the nearest analog maybe.
And then next there's FY Ice World, which is a very notorious map played in countless land cafes.
And it's, by our terms, a really bad map.
But it doesn't matter, because it fit a need within a community, and they're going to play it anyway.
Instead of like, D.E. Paranessi or something.
So the idea of an achievement trap, or a surf map, or a fight yard ice world map, those came more from players, not from developers.
Or we can also consider maps like the Gary Hudson project, there on the lower left.
That was a marriage proposal made in the form of a Portal 2 map.
Or the next one is Love Punks.
That's an amazing game made in collaboration with Neighbourhood Kids in rural Western Australia.
It imagines game development as a kind of community mural kind of thing.
Or we can talk about the work going on in countless schools that use Minecraft as a teaching tool.
So, you know, how did Greek architecture work?
Well, let's try to build a Greek temple and we'll find out a lot about how Greek architecture worked.
What matters more is the story around the level, right?
The process of making it.
Playing the Portal 2 marriage proposal might be an okay level, but what we care more about is, oh, did he make it himself as a labor of love or did he pay someone to do it?
Did the person say yes or no, right?
Those are more important than what the actual puzzle in the Portal 2 marriage proposal was, right?
So what matters is the process, the context, not so much the actual puzzle or game mechanic stuff going on.
here. And again, these are all rich traditions of level design that exist outside of Steam storefronts and Humble bundles and I think it's important we acknowledge how much happens outside of our developer bubble.
So I'd like to end this talk with a discussion of what might be the future of level design.
What will level design look like?
What other alternate level designs can we imagine?
This is a picture by a speculative architect named Libas Woods.
If you're not familiar with him, you should look up his work.
Chances are your favorite sci-fi movie in the last five years stole shamelessly from his work.
So I want to imagine three possible level design futures.
There are in reality an infinite amount of futures, blah, blah, blah, but these are just the three that I can kind of semi-coherently describe.
So, and they're already happening right now.
And they'll continue to happen probably.
So first, industrial.
I'd characterize industrial level design as the main ideology of the AAA game industry.
Here we see attempts at a lot of universal theories, things like the idea of like a vista and all your maps should have vistas every now and then, or Ubisoft has something called rational game design where they kind of put a lot of their games through that kind of framework.
Or even when you're working on Sunset Overdrive and you come up with a thing called a bouncy, right?
You're coming up with your formalism, you're coming up with your grammar, and it's the developers dictating that.
But I mean, it doesn't always apply to things like...
Does Gone Home have vistas?
Does the concept of vistas really apply to Gone Home?
Because you're inside all the time.
Or what about Dear Esther?
Does the concept of vistas apply to Dear Esther?
Dear Esther's 100% vistas, right?
It's almost like redundant to call out every vista in that game.
So, you know, these grammars, I would argue, are often problematic and can't be applied to any game, just lazily.
And over time, I also think we're going to see increased specializational labor.
So already we're seeing absurd things like a content designer.
What's a content designer?
What's content?
Maybe job titles you can get so specialized, there's going to be a junior rock rotator.
That person will just rotate rocks and levels.
Or a tree intern.
They rotate the trees and your levels.
Junior trash placer.
You know, like, will labor get more specialized?
Maybe. It'll depend on the changing nature of AAA games, I guess.
So industrial level design imagines level design as this fundamentally human-oriented thing.
The solution to better levels is for humans to think better, or to put more humans to work on the problem.
And that's generally how you solve problems within this mindset.
The critique of this is that it's kind of pretending postmodernism never happened.
It's kind of pretending you can just kind of work your way out of things when maybe you might have to adopt a different approach or a different kind of formalism.
Future B might be what I call cyborg level design.
You know, much like how there are different programming languages, all with their different strengths and weaknesses, there are a lot of different ways to generate levels and code simulations of levels.
So...
You'll often hear them talk about them, I mean like Proc Gen, level designers, talk about this framework worked for this problem.
Prim's algorithm worked for this thing in Eldritch, but I had to modify it for this other thing.
But when I'm making this new game, I'm not gonna use Prim's algorithm because that didn't work for this.
So you see kind of multiplicity of different formalisms, and these are all just tools instead of one formalism that you just use for the entire game maybe.
And the concept of a cyborg is kind of funny, you know, like we usually think of cyborgs as something like the Borg from Star Trek, full of all these invasive implants.
But a lot of theorists argue that we're already cyborgs.
The way we use smartphones, they might as well be implanted in our hands.
We've been using books to augment our memory.
We use wheels to augment mobility.
To a certain sense, a cyborg isn't a technological construct, it's a social construct.
So that's what leads us into the politics of human machine authorship.
You know, what is a good procedural level generation algorithm?
Well, it depends, right?
But I think a lot of people would say good procedural generation output would ideally, like the most perfect one, would resemble human authored output.
You wouldn't be able to tell the difference between procedural generation and handmade human generation.
But why should we do that?
Well, if we judge procedural generation on its different terms.
And I think that's what David was getting at in his Eldridge talk.
He was talking about how he was aiming for semi-coherency and he was involving Lovecraft Cthulhu stuff.
So that means the levels didn't have to look like they were hand built because it works when they're not totally elegant.
And currently I don't think of this as a very like AAA kind of domain because I think it needs immediate, AAA usually needs immediate payoff and they don't want to invest in long-term research or if they do they treat it as a trade secret and not tell anyone.
So I think this is mostly an academic or indie endeavor for now.
And then the last feature I want to talk about might be local level design.
What if we made levels that were just for our clan, for our multiplayer server, for our school, for our church?
What if levels were community murals that told our collective stories?
What if we made marriage proposal levels?
What if we made levels just to give as small gifts to each other?
Local level design is characterized by rejection of top-down formalism.
If the purpose of a level is to deceive its players and make for really good YouTube fodder, how does that change the structure of a level, right? You're not going to be thinking in terms of choke points, you're going to think in terms of what will look cool on YouTube or something, or what will PewDiePie like or something.
Local levels speak to things outside of video games.
They speak to ourselves.
They imagine level design, game development as something we do for specific people, not an abstract player derived from market research.
Local levels are process oriented.
They care about how they were made and that story's part of the level.
Again, the wedding proposal, you wanna know if that player said yes or no in response to it, right?
That's an important part of that level.
You know, meanwhile you don't, might care a lot less about how DE Dust was made or something.
I care a lot, but I recognize a lot of people wouldn't.
It's also about thinking about who you talk to.
Did you consult everyone?
If you're making a level set in Harlem or in the Arab world, why do you have to make it into a war zone?
Is that kind of racist?
What are you saying when you make levels like this?
So critique of this.
might be that it's kind of slow, it's labor intensive, it's unpredictable, because if you're genuinely keeping your mind open to a dialogue with players, you don't know what's gonna happen.
So maybe that's one reason why you'd be scared to adopt this kind of design methodology.
So to sum up, level design is no longer a big monolithic practice.
The idea of just level design is dead.
Sorry, no level design in a day for next year.
I just said so, it's final.
So what we might propose instead is an intersectional level design.
You know, you draw on as many different level design traditions as possible.
When someone says level design, you say which level design are you talking about maybe?
Thanks for listening.
