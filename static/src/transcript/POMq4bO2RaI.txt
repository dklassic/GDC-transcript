Hi everyone, welcome to the GDC Twitch channel, my name is Bryant Francis, I am the community manager for GDC, I'm a contributing editor at Gamasutra.com.
I am here today, being my little astronaut self on this nice lovely planet, sort of got myself set up here, kind of on a weird like...
border of the planet between the green and the blue.
That's not red.
I'm not colorblind, I swear.
Anyway, we are here today talking to Brendan from System Era.
He is in the lower left-hand corner of the screen.
And also joining me is Alex Warrow.
Alex, would you please introduce yourself?
Hi.
I'm Alex, somehow still.
I'm an editor at GammaStudio.com, and I'm very pleased to join you today on this special GDC stream.
But I'm pretty boring.
Brendan, you're our interesting guest.
Can you tell everyone a little bit more about who you are and what you do at System Era?
Yeah, I'm Brendan Wilson.
I'm one of the original co-founders of System Era.
I was basically the lead engineer for quite a while, and I still do a bunch of engineering on the game, but I have transitioned to be more of just kind of the studio head.
And so I handle a whole lot of things.
Basically anything at the studio that he's doing that doesn't fit into anyone else's job description, that's what I'm managing.
Right on. So I think what's interesting about this game is it just launched out of early access last week, I think, right? The 6th?
Yeah.
And you guys have been working on this for years.
I think a little over two, right?
You launched in early access in December of 2016.
How has it gone for you this first week?
But at 1.0, what's been the reception, how's the studio been working, how's it going?
Yeah, it's been a little more than two years since we announced the game, but that was October of 2015, I want to say.
But the game has actually been, from conception, the game has been in progress for five years.
And I think the reception at 1.0 has been really positive, really encouraging.
and it's kind of really been, we had to kind of go dark for a few months to really focus on getting the content ready and out.
And it's been our most significant update, like through all of our early access updates, this one, the difference in the game from what we had in October to now, it's been the most drastic.
And so that's, it was really nice to give players that kind of big jump in content.
And obviously, it hasn't gone entirely smoothly, but lots of bugs to fix and performance to improve.
And that's currently our top priority.
But it's been very exciting for the team, especially for most of the team who haven't been here since the beginning, because we've grown quite a bit.
It's really exciting for them to be able to see a lot of work finally in players' hands and get the reactions.
Yeah.
I was derelict in my duties earlier.
I should have pointed out that everyone watching this fantastic stream can go ahead and drop questions for you in chat, and we'll go ahead and relay them, although we definitely prefer questions about game development or this game in particular.
We already have a couple that are fantastic, one of which from Overbwane is, what is it like to be working on a game that's live and actively responded to?
Which is a very broad question, but a good one.
So how's it been for you, like working on a game that's sort of been open and in public development for years now?
It's hard.
I would say it doubles the challenge because when you're not, you know, when you're working on a game that is unannounced or is at least, you know, it's just not in players' hands, you can just break everything every day, you know, and or if something's not working, just completely throw it out, redesign it overnight.
When you're in early access, even though the ostensible point of early access is to bring players into a development process where the game is going to be evolving and changing potentially drastically over time, the reality is that you're just in a live support mode for a live game, and you kind of have to treat it that way.
And it's still, you know, being on Xbox, it meant that we had to go through.
It was very, very similar to just being a fully released game.
We still had the requirement to go through certain patient stages to get updates out.
We had to have all of our ducks in a row in terms of publishing, in terms of store presence.
And then you have a community to manage.
And even though you're in early access, people develop their favorite features.
It becomes very difficult to make certain changes without.
Disappointing certain people.
And so it's, and then the speed with which you can, the speed at which you can work is definitely slowed down because each and every update has to, you know, keep the game going, you know, you can't break the game to the greatest extent possible.
And we had, throughout early access, we had kind of a caveat saying like, each update has the potential to disrupt your save game.
We're not guaranteeing that everything is always fully backwards compatible.
We had a few updates that were.
that were pretty big changes, like when we completely changed the base building paradigm at one point.
So I, you know, we had to write some code that would actually kind of give you some credit for the old base that you had.
And so it's, and that takes, that's certainly a big toll on development.
I estimate that it took us probably twice as long to make this game that we're playing today as it would have if we were not in early access and we were not trying to sustain the game through.
monthly or every six weeks and have an update.
Was that something you were sort of aware of as you were doing it, or is that something you've come to realize in hindsight?
A little bit of both. I think we knew that there would be a toll and it would be a lot of extra work going in, but I don't think we realized quite how much. Yeah.
So what was the value to you as a team when you were working through this process?
Why did you decide to stick with this sort of open development philosophy, even though it was taking you more time?
The original impetus was really, it was the only option or best option we had to maintain control over development without bringing in a publisher or something like that.
And we have a really great community, a very supportive community.
And so it's been, from that perspective, it's been very nice to learn how to work with our community and learn how to take their feedback.
And it's also given us the opportunity to learn.
You know, like it should be said that when I, when we started, I think when we launched into early access, it was like System Error was not a company in the traditional sense of a game company in the sense that we didn't have, we didn't have like an office, we didn't have anything.
We didn't have a QA team.
We didn't have, you know, like a support line.
It was, it was just, it was practically a bunch of guys, you know, like in a, in a, in a garage band setup.
And so it's given us the time and by working through early access and putting out a lot of updates, it's given us...
The process of early access for us on Astroneer has been as much to build system era and learn how to be system era as it has to build the game.
Right on. Yeah, I mean, it was ages ago, but I remember we did an interview with you guys remotely and there were three or four dudes in a conference room and that was it.
That was the whole team.
And if I remember right, most of the team came from sort of big budget productions, you know, they came from, I think, 343 and such, you know, AAA developers.
All of us, yeah.
Yeah.
I wonder, like, now that you sort of have this shipped, I mean, and, you know, there's plenty of people in the chat who are echoing the fact that this is a well-loved and well-received game.
How do you feel about your two experiences or those two ways of making games, which is sort of like closeted and sort of hidden away from the world for years versus sort of being open and upfront?
Sort of just like by the seat of your pants.
Do you think you want to go back to sort of a more closeted approach?
Or is there just a lot of value in the early access open development philosophy?
I don't know.
We certainly don't want to be as closeted as most AAA developers are.
You know, we were used to working on teams.
So I came from myself and two of the other founders.
We had met each other.
through working on Halo at Microsoft, 3.3 Industries.
Adam, the other co-founder, he worked at Ubisoft, and we had, and Riley, who's our fifth and our sound designer, he came from working at EA and Disney.
So we all worked at huge companies with hundreds of people at these studios, and at those studios, you, as an individual developer, have no interaction with the community at all.
Yeah.
And you are told that you are not allowed to say anything.
And there are dire consequences if you go and start talking about the game, or even once the game is released, just saying the wrong thing.
And so from that perspective, we definitely don't want to go back to that.
And I think the relationship, the kind of interaction that we've developed with our community is something that we cherish and we want to hold on to that.
As far as whether we'll do early access again, it's really just a decision about what is going to be...
How are we going to be delivering the best products to that community most efficiently?
I think Early Access has a bad reputation now.
It was developing a bad reputation when we started.
For a lot of games that we started Early Access, we'd never finish, never come out of it.
People would say, oh, we gave our money to these guys and the game's dead.
We're never going to see anything for it.
But yeah, I think it really depends.
I think that if we do early access again, we'd like to shorten the cycle and try to present a game when it enters early access that's closer to the finished product.
Because I think Astroneer was so, it needed so much work when we started that.
And there was so many other games that had gone through early access that were more representative of.
People are maybe not used to having to go through as much iteration as we did.
Yeah, I want to agree with you, but it feels like the public perception of early access might be changing and there might be sort of more recognition that it can be a really valuable and useful pipeline for the right team.
I think games like Astroneer go a long way towards proving that.
But unfortunately, I have let this chat lapse for too long.
There's tons of great questions in here.
Let me grab one for you.
Ross play interactive wants to know how do you handle your workflow?
Is it cloud based or over a network in-house?
Oh, yeah, it's a combination.
When we started, it was 100% cloud based because we just didn't have the time or the money to support any kind of in-house server architecture or infrastructure, I should say.
Now we have.
So when we started, it was we used Amazon EC2 for hosting our.
We use Perforce for source control and we use Jira for task tracking, which we adopted a little later.
That was all in the Cloud.
And we use Slack, of course, sort of like everyone uses Slack nowadays.
Sure.
And that's all in the Cloud, and Slack itself is kind of a useful tool for just storing a huge amount of stuff.
Now that once we started to, like once we moved into an office and we had a team, a larger team on site that needed a lot higher bandwidth, the bottleneck between the office and the cloud, especially for source control access when you're moving quite a large amount of data, moving that for an entire local office through one external internet connection is kind of a big bottleneck.
So we moved the Perforce server in-house.
All of our source control, we have in-house servers now for our actual game content.
But things like our production software in Slack and file sharing, all that stuff is still in the cloud, which enables people to work remotely a lot more easily.
So I mean, I think working through the cloud is totally the best.
easiest thing to do.
And you should just keep doing it as long as you can.
And for us, it just ultimately became just a technical limitation where it's still, you know, you really like if you need ten people all transferring data over a gigabit connection, you know, your Internet connection is not going to just hold up.
Yeah, I got to ask Bryant, why are you terraforming this beautiful planet?
I, uh, because it's there, to quote the mountain climber guy, I'm on a mission to build a car, and to build a car I need more bytes, to build more bytes I need to harvest bytes, which means finding the little doodads out in the forest and taking these big chunks right here and harvesting them at my base.
So I...
I was on a quest to do that and then it turned into a quest of survival when I fell down that hole.
So, I'm making my way back home now, walking fast, face is flash, and I'm homebound.
Yeah, anyway, so I have been struck by, as I play this game, as I'm sure many people have been chatting, kind of this...
The way that this art style responds elegantly to the shaper tool that you have as a player, I'm curious, Brendan, if we're able to walk through sort of the...
Kind of the, the, what makes the code tick on this, on this sort of thing, because I imagine, you know, your art team is sitting here trying to create like this beautiful stuff that can work in the procedural aspect.
And it was your job when you were working on the code for the team to make sure it worked.
So if you're able to give any insight on that, I think our audience might appreciate it.
Yeah.
So you're, you're talking about, there's sort of two things, uh, that you touched on there, one is the, how do the artists actually generate the planets and how do they put their artistic.
touch into this procedural generation system and then also how you mentioned that the smooth response to deformation.
So, yes, and I was heavily involved in the code for that.
So it was Jacob and I who were the first engineers in the project.
Projects we worked on.
There was sort of the terrain systems gone through two major iterations.
The system that we shipped early access with.
back in 2016 looked quite a bit different than the system that we have now.
The system that we have now is way more powerful in terms of the artists getting the look that they want and allowing us to create all the environments that we have now.
So the early access game originally was, you know, we could kind of create a surface of a planet and we could create a layer of caves underneath the surface, but we couldn't do much more than that, not easily. And it was also very...
It was hard to update without just totally breaking people's save games.
So the new system has, you know, the planet is populated with stuff all the way down to the core, and we can create really exotic kind of shapes and biomes.
And it's also much easier to update, so we can add and change the algorithms that define the planet landscape without actually breaking people's save games.
So the system underneath is all, but both systems share some characteristics.
It's essentially, it's a voxel system.
So it's, you know, you can think of something like Minecraft.
The entire world is made up of a grid of 3D voxels.
And then those voxels, those voxels, each voxel stores certain data.
So in our case, it'll be, you know, density data that defines whether there's ground there or it's open air.
And then that's.
So there's a system that there's an algorithm that produces the voxel data and that's kind of like your like I said there was two different approaches we took to this but we defined the voxel data and then and then that voxel data so like in Minecraft you know once you have your voxels you pretty much have everything you just render a block where there's a voxel and the block has typically in a game like Minecraft would have an index to determine like an integer index that determines what type of block that is.
In our game, it's a little bit, because we don't have blocks, we have kind of a smooth surface.
It's a little bit more complicated.
The data is a little heavier.
So each voxel stores a, the basic algorithm is that each voxel stores a density value.
And that density value can, you know, it has a range.
And it can be positive or it can be negative.
And if it's negative, it means that there's open air in that space.
And if it's positive, it means there's more ground in that space.
And where that crossover happens between positive and negative is where the surface is going to be.
And then we run that vossel data through a polygonizing algorithm.
We use one called marching cubes. It's very, very common.
It's one of the most common ways to do this kind of polygonization.
And that produces the actual geometry surface that you see.
And we'll generate collision for that and so forth.
And then so when you're deforming, you're just modifying the voxel data.
You know, it's not like we don't really have to look at the actual mesh data.
We just have to look at the voxel data, apply some transforms to it, so subtracting or adding from that density, and then rerun the polygonization for the chunk.
So the ground is divided into chunks at a certain granularity so that we don't have to rebuild the mesh for the whole planet every time.
We just rebuild the small area that you're standing on.
And that's basically how it works.
Yeah, I'm curious. I mean, in the years of development, like, you know, there have definitely been stories about this game's unique art style and the way you guys sort of blend procedural content with sort of like a hand authored touch. I remember reading a lot about the the biomes that you set up and tweak so that then you're sort of assured that they will generate an interesting landscape. I'm just curious. You've put so much effort into making this very attractive art style that has I think no texture's right and it's all voxel based and it's very, it seems very approachable but also very malleable to your needs as a studio.
Were there any like major drawbacks that sort of cropped up during development that sort of made you sort of wish, oh, we wish we'd used textures or we wish we hadn't used voxels or we wish this was like a hardcore space game instead of this incredibly adorable colorful wonderland?
We like to joke that we decided to make the hardest possible game on all dimensions.
Yeah.
Because, you know, sort of like the wisdom, you know, if you've been at GDC and you talk to a lot of developers, especially indie developers, a lot of the advice is like, pick kind of one thing that you do that's different and focus on that and everything else, just do the easy way.
And we were like, man, we, like in hindsight, we were like, we picked the hard way on everything.
So this has been a very challenging game. In a lot of ways, it's been challenging because I mean, it's procedurally generated, and the challenge there is always how do you give players both, like, a different experience each time they play, but also one that's not completely uniform to the point where it's just totally boring and drab.
And once you've seen one area, you've seen them all.
Totally.
It's because it's so procedural and because it's...
and because you can deform all the terrain, and a lot of the techniques that AAA games use to make everything run super fast.
which involve, those techniques typically involve a lot of offline processing where you are, if you know what your map is going to look like and the layout of your level and all the textures and meshes that are going to go into it, you can do a ton of offline work so that the game isn't relieved of a lot of computations at run time.
You can do, you know, light map baking and stuff like that.
You can do offline visibility analysis, which means...
from every point in the level, you'll know what the things are visible and so you can kind of really efficiently render.
We can't do any of that in a procedural game.
So it makes it really hard to sometimes to optimize to the extent that we would like to.
Yeah. And then, of course, there's other things like, you know, we've got these huge environments that are.
You know, you're traveling between planets.
The planets are spherical, so you can't even rely on gravity.
Gravity doesn't even happen in one direction, which is surprisingly You'd think that that's relatively straightforward, but it's one of those annoying things where the fact that gravity is typically negative one on the Y or Z axis is hard-coded everywhere.
So that becomes a big pain.
And we did this all in multiplayer.
Right. Fully co-op. What could go wrong?
Yeah, it sounds like a lot more work than I expected.
I have so much more to ask, but there are tons of good questions coming on.
I want to get some of them in.
Please keep them coming.
There's one here from Chunky Spaceman who wants to know how does System Error deal with programming burnout?
Do people rotate what they work on?
Do you allow people to work remotely?
Or how do you deal with that kind of stress?
Burnout?
I don't think I've ever experienced programming burnout personally, so I'm curious what that looks like exactly.
Nice.
I think in our case, most of the...
like six, seven engineers now on the team.
And because of what I just talked about, because the game is this pretty, for a small team it's a pretty big game, it's a pretty technically complicated game.
There's so much to work on.
And everybody, like there's more areas of, like there's more potential areas of expertise that we could apply that we have people on the team.
So you get to kind of rotate around a lot.
And there's always things, you know, if you're a person that works on, rendering optimization is getting an opportunity to work on gameplay, vice versa.
So I try to make sure, and it's kind of one of my jobs in the team, is to try to make sure people are satisfied with what they're doing. And so I'm constantly checking in. And so if, you know, somebody, we try to make sure that people are working on what they really want to work on.
For example, I have one guy on the team who really wanted to work on eBuy, for which I was like, that's amazing.
I want to keep you forever.
It's really hard to find programmers who want to work on UI code.
Yeah, sounds like a gem.
But yeah, that's pretty much it.
There's just a lot to chew on as an engineer.
Yeah, I can see that.
There's a question here from James5zh, and it's just like when you're going to add a bunch of story, which is sort of an interesting question, but it's sort of what I want to ask, which is that ...
You know, when I look at the success of Astroneer, and I look at sort of what are similar games in the industry, like it's hard not to look at something like No Man's Sky and to watch the journey that that team went on and that game went on.
You know, that game seems to be in a really good place, and it seems to have a really robust story and a bunch of other stuff going on there.
And I'm so impressed that Astroneer has stayed from the start like a purely co-op sandbox experience.
I'm curious, like, over the years, like how has the team...
I thought about the idea of trying to add in a story like what is any potential value to you?
And what are the what is the hassle like how have you gone about thinking about that aspect?
And to quickly, quickly just add a kind of a dev clarification I guess when we ask about story we should also be asking about what is essentially authored content because you could you could you could totally skip over you could totally maintain the idea of a emergent narrative or whatever and still have authored encounters in the game that are more scripted That's probably a more broad, better answer, because I will...
I could go off on a narrative tangent forever, so I just wanted to rein this in into something that's very...
that I think a lot of devs can relate to, the question of authored versus emergent.
Yeah. So, Brandon, what about authored content?
What's the deal? What's the risks? What are you thinking about?
I mean, that's something that we talk about quite a bit, and I think...
When we started the very beginning of the project with just four people, it was the decision to go much more procedural was partially because we wanted to create a game that you could put a lot of hours into but would be tractable for us to actually achieve. So if you want to make a 100 hour game and that's entirely author content, it's that's impossible for a four person team to do.
But you can do it for a game that is more procedural.
And it doesn't necessarily mean that it has to be a sandbox game.
So if you look at a game like FTL, which is made by two guys, that's a procedural game that feels like it's narrative.
And so, you know, you're wanting to replay it to get a different experience each time.
And you're kind of making up that narrative in your head.
And that was sort of.
where we were going with Astroneer in the beginning.
Something that I definitely think that we didn't achieve on Astroneer so far that I would have liked to was kind of more of what Brian talked about, which was injecting some more of those authored, slightly more scripted experiences within the procedural framework.
So things that you could encounter that create a little mini quest for you.
It's something that we're still very much interested in exploring.
But they do put a lot more pressure on creating that content.
It's going to be expensive to make, and people will burn through them quite quickly.
And so you're kind of always having to create more and more of them.
Sure.
But I think that's certainly a direction that the game could take.
Nice. There's a lot of questions here in chat about something called the Big Purple, but I think maybe we shouldn't talk about that.
I don't know what that is.
Brian, do you know what the Big Purple is?
No.
Okay.
I apologize for any visual lag.
Folks are saying it should.
We've got an Xbox hooked up to a capture card here.
So unfortunately, we're a little limited on the tech side.
That should be us.
I don't want to throw the poor.
Also, I guess it's my tethers.
They're saying my tethers are contributing to the...
So I'm just generally trying to stay out of like the forest and any high particle areas.
Sorry, guys.
You just seem well tethered.
That's...
So when people talk about the big purple, they're talking about there are these large structures that you can find on the surface that kind of relate to the, there is a central quest in the game.
So you can kind of, you can beat the game.
And those things relate to that.
Well, I'm sorry if we spoiled that for anybody, but it sounds incredible.
I may talk to you about just like the general design and UI.
And we touched on this a lot, but it's sort of the big striking point of this game.
I keep watching Brian to zoom into his backpack.
and I love it. I just, I want to watch you do that all day.
It's so smart.
It's, and that's been there, I think, since the beginning.
Right, Brendan? Like that was one of the big deals.
I remember when this game first, like started getting some buzz, it was all about like the gifts of these, like beautiful sculpted terrains and these very intuitive, like UI elements.
Has that ever been a hassle?
Like, have you ever really regretted?
Are you guys committed to making everything so, uh, intuitive and like, not, uh, not traditionally menu driven the way most games are?
Um, it's- So yeah, I mean, it has been part of the game since early access, since the start of it.
Um, and it certainly has been a hassle.
Um, but it's been a good kind of hassle.
I mean, it is something that we cherish about the game.
We don't- certainly don't regret it.
It's very important to the game.
But it does mean that, uh- What would be a pretty straightforward addition or decision in another game, just to add a UI element, just to add an extra item in the menu, is a much more difficult process in our game, or something like the backpack, which is kind of why we, like, you know, we used to talk about, hey, like literally, like just hold it to diegetic rule, diegetic meaning, meaning, we don't know what that means.
In world, yeah.
Interfaces.
We had discussed being very strict about that, so that even your settings menu would be in-world.
But just the idea of having to actually refactor the in-game art for literally every UI change, or that was quite difficult.
And it also means that for wherever you have text being displayed, we're localized into 14, 15 different languages, so that you really can't bake the text, for example, into a mesh.
without having to actually have different meshes per language.
So it's like, that becomes almost a very, between very difficult to even tractable.
So we now, the game now has kind of a mix of traditional UI for things like the menu front end and some things like those tool tips that you see.
But a lot of the, yeah, a lot of the, just the way that you engage with the world, if you're actually interacting with items in the world, that's all still diegetic.
And we really, really, That's something about our game that we love.
I think it's something about the game that makes it unique.
And it kind of creates for us, it was important because it creates a sense, it heightens the sense of intimacy in your world and connection with it.
We thought that it went along perfectly well with the fact that you could deform all the terrain.
It just felt right to us.
Right on. I wonder, let's drill down into that for a second.
If other devs wanted to try something similar and try to approach a game with a similar kind of diegetic design, what specific advice would you give them that you learned during development?
Like, were there specific things that were exceedingly difficult?
Like, I mean, text was a great example.
Or were there examples of places where it was initially very easier than you expected and more valuable?
Or what advice would you give after two or three years of trying to figure out how to do this well?
Um, yeah, no text is a big one in real life.
So we really don't put any text in any diegetic locations.
So even when you bring up your catalog to look at your research tree, that's kind of a traditional UI presented in a diegetic element.
So we're not shy, we don't shy away from sort of building a traditional UI screen that we can then render onto a surface in the game.
That's a totally, we don't really consider that a cop-out.
We're just like, you know, Our rule is that if it's something that the Astroneer would themselves look at through some sort of digital interface, then that's cool.
We can present it that way.
One sort of technical thing is that scale becomes a really tricky issue.
And so when you're interacting with things like with your mouse or your gamepad, you need things to be of a scale that's scalable.
that makes interacting with them possible and lets you see those things acceptably.
And so we play with scale a lot and people may notice this, that the resource nugget in the backpack right now is the size that is super tiny.
It's not at all the scale that it would be in the world.
So if you take that output in the world, it actually scales up.
And we play with scale quite a bit and we don't care.
It's just sort of things get scaled up and down as needed to make the interaction more pleasant or just possible.
Yeah, that seems like a necessity. If you're going to start making planets, you've got to have a planet that has giant mushroom trees.
You've got to have a giant flower planet. You've got to have just the weirdest scales you can possibly imagine.
There is a super good question here from Shadow Echo if you got a second.
They want to know, can you talk about the challenges of development for both console and PC?
They know for instance that there were some issues with the UI that were difficult to see on a TV.
So let's talk about like how did you guys handle trying to split this across multiple platforms and get it ready and what are the unique challenges of console versus PC players?
Um they're very, I mean the...
The main challenge was the interface differences.
So making the game as equally playable as possible on both a mouse and keyboard interface, a gamepad interface, it certainly adds to the challenge, especially with the diegetic UI.
And so for initially, I mean, the Xbox version initially was created after the PC version.
And so the very first interface we had was kind of like...
The best we could do with the gamepad, I think I created the gamepad controls initially and you know, we made something that felt pretty good for movement and then a lot of the item interaction was like, well, you hold a button to bring up a cursor, you know, kind of like Destiny UI style. And then we've since continued to make improvements that make I think the game a lot smoother to play with better shortcuts for gamepad.
But it's always difficult.
The control scheme, your ideal control scheme for a mouse and keyboard is always going to look very different than a gamepad.
So that's always a challenge.
And then the challenge, one challenge on PCs is that you just have, and this is an age-old thing, is that you just have a hugely, just a massive variety of hardware that you're...
game needs to run on.
When we launched Early Access at the very, very beginning, the first couple of days, we had some issues where people with certain old CPUs just couldn't even start the game because we had kind of inadvertently included certain instructions that were not compatible.
They were compatible with, for example, the Xbox, but not compatible with older CPUs.
So your level of QA you know, burden that you're undertaking to make sure that you're achieving, you know, an acceptable compatibility level is a lot higher when you're working with PCs. And then you just have this huge range of performance. Like your performance envelope is so huge. So, you know, it might run on my development PC, you know, our game thread update might be five milliseconds, you know, on my PC, which is.
three years old, and put on the Xbox, it's 20 milliseconds.
So it's just like, you really, like, ideally you kind of want to have a person dedicated to each platform you're working on.
Yeah, totally. Yeah.
It's wild to still be talking about that.
Like, I feel like that's been a thorn in game developer's sides for decades, just trying to make PC games work.
But I don't know. You still do it. It's incredible.
Talking about PCs and sort of all the different platforms, I got to ask, how are you feeling about the Epic Store?
Are you going to launch over there?
Are you going to go to Kongregate?
There's a lot of opportunities now to get off of Steam when you're looking to sell to PC owners.
How are you feeling about that stuff?
Yeah, I'm pretty interested.
I mean, I think when I talk about my GameDev friends about what's new in the industry, I'm pretty interested in how is...
How is the way that people buy their games gonna change?
I think that that's one area, especially on PC, that just kind of hasn't changed for many years.
And it's pretty well known by now that Steam is outrageously profitable to the extent that there's definitely a competitive opening there for somebody to come in with a similar platform and just try to undercut them, which is exactly what Tim Sweeney and Epic are trying to do.
Steam just has a, I think for, it's much easier.
And like you're already seeing this shift starting to happen with the AAA developers.
So you're seeing a lot of big games not appearing on Steam.
Yeah.
And because it's, you know, for the big companies that have all of their own infrastructure, they can do that.
They can just try to figure out how to distribute the game in the way that maximizes their own revenue.
And they can do all their own marketing and they have all their own.
multiplayer backend infrastructure.
For a smaller developer like us, a lot of the value in Steam is not just the distribution.
It's also that it provides a platform through which people can connect multiplayer and all the other features and the storefronts.
And it's built in marketing because you can work with Valve to try to get featured on the store.
And so for us, it's as we build out our own capabilities, as we are working on our own server support, and we have a lot more sort of back-end service set up than we did when we launched.
And so it's becoming more possible for us to exist on different platforms.
The main reason that we've never been on a PC platform aside from Steam is we didn't want to split the player base in terms of multiplayer.
Because right now you just connect via your Steam accounts.
We don't have our own account system and our own servers.
So that'll be...
And so to us, that's always been the driving factor, is that we don't want to split up the player base.
So if we can explore, when we reach the capability to be able to run the game on different distribution platforms, but still have all those players be able to play together, that's something that we're going to take a lot more seriously.
Nice.
I have a lot more questions about that, but I feel like it's time to look at chat.
Brian, how are you doing in that cave?
That looks rough.
No, it's okay.
I just forgot that, like, somewhere between the tutorial and me actually playing the game, I forgot how canisters work.
And now I don't have any canisters with which to build a ramp, a canister full of dirt, and I just need to, like, figure out how to get my way out of here.
This is very silly.
You're doing great.
Can you always just dig a tunnel upwards?
Yeah, that's what the effect goes.
There is a good question here. We may have touched on it, but I want to make sure we get it just in case.
Overboyin asks, are there any sacrifices you made to get the game working on controllers?
Ooh, that's a literate question.
Well.
I don't think we made sacrifices.
I mean, we've never...
Like, so if the question is implying, did you nerf the mouse and keyboard interface to make it work on controller, I think the answer is no.
Yeah.
The game is still very much, I think, a mouse-friendly interface.
And I think the controller players still have it, have a more difficult time in certain kinds of interactions, which is something that we always want to improve.
But no, the answer is, like, we've never...
I can't remember a time when we've been like, we just can't, we totally can't do this because of GamePad.
I think the only thing, the only consideration that we always keep in mind when thinking about controls and GamePad is the number of face buttons that are available on a GamePad.
So we definitely don't fill the keyboard with shortcuts.
So some games that are, a lot of games really, that are exclusively designed for mouse and keyboard.
We'll just use all the buttons, just use every key on the keyboard.
Yeah, you got it. Why not?
And we generally don't do that.
That's a lot of...
That's forward-thinking restraint, I think.
I remember the 90s when every PC game came with a map, a keyboard map, to show you what all the buttons did.
So I think it's just sort of wise to try and keep controls as elegant and minimal as possible, especially with a game like this.
There's one other question that sort of...
It's honestly beyond my knowledge, but I think it could get to an interesting answer, which is some people keep asking about something called the TrueFlat.
What happened to the TrueFlat?
Was there at some point a different system in place where there were TrueFlat landscape options or something?
Mike, can you shed more light on what TrueFlat was and where it went?
I mean, so yeah, it was sort of an accident of development, too, which was that you can ...
So there's a tool in the game, like your deform tool, and you enter a flattened mode.
Yeah. I can now demonstrate because I got a canister with dirt in it.
And the flattened mode just basically like takes whatever surface, whatever surface you're mousing over, you can extend that surface in all directions. And the players have discovered that there were certain like very specific angles that were kind of universal, absolute angles in the game space. So they would change.
relative to the surface of the planet as you move around it, but certain absolute angles that seems to get perfectly flat surfaces where there was absolutely no visible polygon edges inside that surface.
And those tended to be on either the, I mentioned that the game's on a voxel grid, so either any surface that was aligned with that cube face.
for certain divisions, so like sort of 45-degree angles between those spaces, would produce a surface like that.
We didn't, we certainly didn't, and then some players have noticed that since we released the new game, it's been harder for them to find those angles and those surfaces.
We certainly didn't do anything intentional to affect that.
As far as I know, the code is basically the same, but it is something, you know, there have been.
So the voxel side of the system really totally changed, but the polygonization side is the same algorithm.
So there might be some tuning changes that were made that have affected that.
So it's something that we'll look into.
There was a time in development where, I guess as developers, we were like, oh, it should be fine now.
Because there was a time in development where the flattened tool, if you weren't on one of these kind of true flat, You really couldn't get anything even resembling a perfectly flat surface.
It would be like gameplay flat as in you can walk on it.
But it wouldn't look perfectly flat.
You'd get some noise.
During Early Access last year, we made some improvements to that so that on almost any angle, you get what is.
I think to an untrained eye, it would look like a totally flat surface.
But I think that the players who are really astute, creative players can, you know, have been pointing out that they are still getting, it isn't the true flat that they are, that they consider true flat.
So it is something that we're aware of and we'll look at.
It's not the truest true flat, but that sounds pretty true flat to me.
I kind of want to know how this game has done.
such a great job of building and maintaining a community over the years.
Because I remember when you started, you got a lot of buzz from those GIFs.
It's a very attractive, very, very GIFable game.
And at the time, there was like really nothing like it.
But that was like two or three years ago now.
And yet here we are. You've launched into 1.0.
And you seem to be doing quite well.
And you've got a great community here in chat.
You seem to be good on Twitter and everywhere.
So I kind of want to know, you know, even if you weren't directly involved in it, like.
What did you learn about what it takes to grow and sustain a community around a game over the course of years of development?
I think treating everyone as much as possible with as much respect as possible is kind of your first and golden rule. Nice.
Yeah, the community was built initially from, I think the biggest thing was like our hashtag screenshot Saturday posts like from like three years ago.
And yeah, I don't know.
I think that we really respect our community, and we made an effort to reach to them through things like our blog, which kind of brought people into the studio and introduced them to the team as individuals, hoping to allow people to get to know who we are and how a day maybe looks inside the studio, which gives people more of a sense of a relationship with us.
We also, you know, we brought in Joe, Joe Tirado, who's our, who's like our community manager, and at least that's one of his responsibilities.
And so, you know, that's a full-time role on the team.
And so his job is to make sure that there's always somebody engaging with the community while the rest of us are working and making sure that we, he gives us very regular reports of like what people are saying.
So when you're on the forums and you're either saying something is great or you're complaining about something, we definitely hear about it, we're not ignoring it.
And we get like, you know, Joe's fighting for you, he's always there, being like, this is the biggest issue on the community's mind, this is what we need to think about.
And we take that stuff very seriously.
I think it's helped us a lot that the game...
This is a non-violent, non-competitive game, and I think that the type of people in the community reflect that, and they are just really nice people, and I really love this community.
Right on. Nice.
We're getting to the end of our hour here, so please, anyone, if you have ...
Great questions, please drop them in chat.
Brian, go ahead. Sorry to talk over you.
I have no questions. I was just saying, nice.
I think it's always cool when devs...
I think it's the most cool thing about that to me is that when devs recognize that the content of their game informs the community they get.
And it's cool to hear that, like...
You probably didn't say, oh, we're going to make a nonviolent game, we'll get a nonviolent community, a non-aggressive community.
But it's cool that relationship is out there and that understanding.
Anyway, I'm going to try and get the smelter up and running.
There's a good question here from Chunky Spaceman, who wants to know, with this game being procedurally generated, are the purple landmarks totally random, or is there some kind of system, like a grid or a latitude longitude, that chooses exactly where they spawn?
Yeah, that's a good observation.
The purple landmarks are not actually, they're one of the few things in the game that are not really procedurally chosen.
So their locations are not random.
They occur at specific kind of geometric points on the planet.
So if you think of the, so there's, I don't know, I won't give too many details, so the players aren't given, so I'm not giving everything away, but you can think of the planet as like a D&D dice.
Okay, I'm back on board.
Alex, just...
Are we talking D20, D12, D8? How are you feeling?
I didn't want to give that away.
Okay.
I think it's probably common knowledge now.
If you've never played the game, then it's something to discover.
All right.
So, I got so excited about D20s there, I lost the actual answer to the question.
If you think of it as a D20, then how does it actually know where to put those?
Then, like, the chambers would be at points.
I'm going to use the corms.
Oh, that's good. Yeah.
Someone in chat says it's a polyhedron.
That's the word you're looking for. Thank you.
Thank you very much. Anyway, I kind of want to know, and I think this question has been going through chat as well, and I sort of held off because it's unfortunately broad, but where do you go from here?
I mean, this is a solid 1.0 release.
It seems like a totally respectable dev time.
Are you going to stick with this project for a while, and do you have...
a thought for how you build out a game like this that is so, sort of like, it builds itself out in so many ways that it's hard to understand how you would immediately expand upon it.
So like, do you intend to stick with this game for a while?
Is there new work going on at the studio?
Where are you going from here?
Oh yeah, for now we're definitely sticking with Astroneer and there's a lot of support planned for it, both in terms of improvements and fixes and new content.
I think it's a great game.
It's a sandbox game, which means it's super easy to just add new things that you can play with.
We really look at it as a toy box, and so we just want to give people cool things to do and to mess around with.
And then beyond that, we certainly don't think that this is the end of Astroneer.
We'll see more of Astroneer in terms of more significant...
So whether that means major expansions or a new game, we don't know yet.
We're at least not ready to talk about it.
Yeah, fair enough.
There's a couple other really fun, small questions that I have overlooked here.
And so if we got time, I'm going to throw them out.
JDLENL wants to know, still want to know, who came up with the icons for the resources?
The resource icons were made by a super cool artist that we worked with named John K.
I feel like I've heard of John K.
He actually works, if you guys know Fangamer.
Yeah, right.
He does a lot of air stuff as well.
So if there's similarities in style there, that's why.
I'm going to swing by Chinny D's question.
Chinny D would like to say that in an industry where colorblind modes are not a standard, there are a lot of games where I can struggle to tell things apart.
Props to the dev team on great labels and icons where a colorblind mode just isn't necessary for me.
I also want to apologize to Chinny specifically.
I made a rough joke about being colorblind at the start of the stream, and mostly that was me riffing on me stumbling over words, and I did not mean to offend you, Chinny.
Sorry about that.
Anyway, so good job on the not needing color blend mode, I guess.
Yeah, I mean, that's one of the advantages of, I guess, the diegetic style is that we can use profile of the objects a lot more to disambiguate them.
Yeah, that's that's been pretty important.
That begs the question.
What kind of thought, if any, have you as a team given into accessibility options for this game?
I mean, it's it's a it's an important question that we keep.
It feels like every year at GDC there's three or four panels that are like, hey, just think about color blindness and accessibility and that kind of thing.
So how has that been a factor in Astroneer's development?
Yeah, it's been a factor.
So color blindness is something that we actively thought about.
But since we launched, I don't think that we did as good a job as we could of thinking about accessibility more broadly.
And since we launched, we did get some feedback about the control layout.
and where you have to use maybe multiple inputs at a time or hold down buttons being quite difficult for players who may not be fully able-bodied.
And so that's something that we've taken to heart.
And so we're going to try to do a better job to think about that as far as more options in the controls.
So that tends to mean wherever you can have an option to change something from a hold to a toggle, things like that.
I go a long way, so we're going to think more about that stuff.
Nice. Boy, we have so much good stuff in this chat.
I don't want to ask any questions because this is all fantastic.
Thank you guys. Thank you guys for helping do our job for us.
I guess you're asking great questions that help us learn more about game development.
Yeah. Actually, I want to talk about sales because we did talk about that, and I'm just kind of curious to get your take on it, Brendan.
When...
When you started out, you were such a small team.
And I can't imagine that your estimates for this game went out this far, but maybe they did.
Tell me, how has the reception of this game and the sales of this game so far met with your initial expectations for the project when you first started out?
I mean, well, so when we first started out, we would tell ourselves that we would never expand beyond 10 people.
And the team is now...
21 people in total.
And that's just been what we felt we needed to support this game.
And so this sale, I mean, and we've had the sales to be able to support that team, at least, you know, at least for now, still surviving.
But yeah, it's one of the things that we just blew our minds.
We, when it was the handful of us at the start, I think we were six people.
when we actually pushed the launch button for early access.
And I was like, if we sold 40,000 copies, that would have been enough for us to scrape by and at least, you know, it wouldn't have paid back anything that we'd already put in, but we would have at least been able to put food on the table and continue scraping by that year. So I was like, okay, if we can sell between 40 and 80 thousand, like that would be nice.
And so, you know, since I think we sold almost a million copies in the first year, it was crazy.
And I think that that put us on the one hand, of course, it's amazing.
And it's allowed us to build the company.
And on the other hand, we've totally failed at planning for success in that way.
And I think maybe a more experienced team would have looked at the social media response level that we were getting and known, like, okay, this game is going to succeed.
And had we known that, like, my biggest regret personally is that we didn't kind of prepare for that.
We didn't start hiring until after the game had come out into early access.
We really kind of were caught on the back foot in terms of the number of players, the amount of interest, the demand for new updates, which meant at the beginning we were quite slow kind of getting off the ground just because we had all of the.
like all the infrastructure of a company to kind of put together.
Yeah.
So it's been an amazing...
You know, all we ever wanted was to come together and build a little company where we could make the kind of games we wanted to make.
It's sort of a cliche story, but we're super grateful that Astroneer actually made that happen for us.
Yeah, it's always great to see it work out.
It's a rare occurrence, but it's fantastic.
Brian, you got any last minute questions you want to sneak in before we wrap this sucker up?
Uh, nope, I think it's a good time to, uh, um...
Someone says I need to put the damn medium windmill on a platform so I can get more power.
Okay. Yeah. I'll work on that.
Um...
Learn to play. No, I'm just kidding.
Learn to play.
Great.
Yeah.
Uh, I don't know. I like my little base. It's moving along slowly.
I can just... God, it's just such a peaceful game.
It's just nice to just poke around and, like, figure things out.
Um, although...
Lay down tethers. As many tethers as you can.
I just want some aluminum.
Tether everywhere.
Oh boy.
Yeah, streaming is always like, oh, we're here to talk about game dev, but I also have to not suck.
Anyway, thank you all in chat for watching.
You've been a wonderful crowd.
Thank you for your good questions.
Brendan, thank you for joining us today.
Yeah, thanks guys.
It's been a pleasure.
Yeah, some mild plugging that I have to do.
For those of you who are game developers yourselves, or interested in the art and business of making games, we would encourage you to check out the 2019 Game Developers Conference.
It's going on next month, March 18th, the 20th segment.
You can get registered if you scroll down and click on the button that says Register for GDC.
There's all kinds of great talks.
There's programming talks, narrative talks, community management talks, wherever you want to do in games.
It's a really cool place to check all that out.
And then, you know, Alex and I also do things with Gamma Sutra, so you can read Gamma Sutra as well for more answers to these kinds of questions.
We are owned under the same parent company, which is why we're able to do this kind of work.
It looks like Joe is dropping or someone dropped the Discord for Astroneer in, so I guess that's it.
I think all y'all know where to answer those questions.
With that, Brendan, have a good day, I think.
All right.
You too, guys.
Thank you, everyone.
Bye.
Bye.
Bye.
In space, no one can hear you.
Drop a tether.
I don't know.
