All right, let's do this.
So I want to thank everyone for coming out today.
One big thanks to GDC.
It's been a career goal of mine to talk here for a while.
And it's a privilege to be here today.
So my name is Zach Lowery.
I was the project animation director on Saints Row 4.
And I've been in the industry for about nine years this past February.
And there we go.
So over the course of those nine years, I've had the luxury of working on the Saints Row franchise.
Every iteration, every box title, every extended content.
And for those who don't know, Saints Row is an open world, third person, action driving combat game with a fully customizable protagonist.
Saints Row can potentially be an animator's dream come true.
Over the course of the franchise, it's gotten more over the top than almost anything goes.
So it's really fun.
Just to kind of set the tone for some of those over the top experiences that you might have in a Saints Row game, we've had cyberspace, Tron inspired levels.
Paramilitary luchadors, skydiving gun battles, nine foot tall brute clones, furry mascots who want to beat you within an inch of your life, driving a car through traffic while a tiger mauls you from the back seat, missions on Mars, and a gun that shoots a frickin' shark.
Now, this is only the over-the-top stuff that happened in Saints Row 3.
So when Saints Row 4 was being concepted, the entire team was tasked with one-upping the over-the-topness of Saints Row 3.
So of course our only response was, holy shit.
So the internet often jokes, where can they take Saints Row next?
Saints Row 1 started and you were an up-and-comer on a street gang and you joined that gang.
Saints Row 2, you went on to run that gang.
Saints Row 3, you had taken that gang to pop culture icon status and everyone in the city loved you no matter if you were murdering or driving over pedestrians.
So where does it go from there?
It went to the only logical place that it could go.
And that's that you became president of the United States, aliens kidnapped you because you were the only thing standing in their way from world domination, and then you were trapped in a Matrix-inspired simulation where you were given superpowers.
So this talk is going to focus on the unique challenges that the Volition Animation team encountered in Saints Row IV when trying to build our superjumping system.
There were a lot of superpowers in the game.
There was telekinesis, super sprinting, freeze blasts, all kinds of stuff.
But we're going to focus on super jumping here, because it's something that A, proposed the most problems for the entire animation team across the project, and B, when all is said and done, we had overcome our challenges.
Something that we're all really proud of.
So a couple of takeaways, and none of these are going to be mind-blowing by any means, but hopefully you guys can see how all this kind of worked together to get to the end goal.
So start with what you know.
I'm going to touch on that here in a moment.
Kind of an unconventional source or use of reference footage, kind of a reverse engineering.
Creation of pillars for a feature.
And then the biggest one is failure when learned from, which is the important part, can be an invaluable resource for understanding and executing your final product.
So the talk's going to go through a couple of steps.
We're going to cover the animation direction overview.
We're going to go through the challenges that we faced, talk about the initial approaches that we took.
Spoiler, those did not work.
We're going to go back to the drawing board and kind of rethink our inks.
And then we're going to show what we applied.
and show off some final results.
So animation direction overview.
What was the animation direction overview?
Due to an extreme time crunch between Saints Row 3 and 4 and THQ's need to kind of push out another product, it didn't change from Saints Row 3 to 4, which is kind of good because it allowed for some consistency.
Between Saints Row 2 and 3, everything had changed and there wasn't any consistency.
So this was something that, at first, we were kind of bummed out because we wanted to change some things, but we knew that it was for the best.
So Saints Row 3's animation direction overview was built around two very simple words.
And that was comfortable, which meant that our player character, nothing was new or surprising for the player character.
He had done everything multiple times, and he had gotten better and better through experience.
And the second word was confident.
Our player leaped before he looked. He knew that he was the best in any situation, no matter if he had never really been in that situation before. He was more blue collar and more street experience, and he wasn't tactical and trained. Hence the pose right there with the guy just slinging an M60 down by his leg.
Will Smith's character, Mike Lowry, who is in no relation to me, was the epitome of our inspiration.
So much so that the entire animation team began using the mantra of what would Mike Lowry do when we were looking for animation inspiration and character performance.
So we faced two major challenges right off the bat.
The first was blending superpowers with the previously established conflicting animation direction.
It was going to be really hard to be comfortable when you were just given superpowers, and this is actually the first time in the franchise where we were actually telling the person holding the controller that you have never done this before.
It was always kind of assumed that you had shot someone or drove over people in the streets before.
And then confident. Now confident and superhero, there's a very thin line between those two.
And that may not seem like it's important right off the bat, but it actually is.
Because we weren't making a Saints... excuse me, we weren't making a superhero game.
We were making a Saints Row game where you were given superpowers.
And there's a big difference there.
So superhero posing speaks to who that superhero is.
If you look at Spider-Man, the way that he bends his fingers, the way that he flares his arms out, even how he gracefully flies through the air, he embodies those god-awful demon spawns known as arachnids.
Superman.
In the comic books, he's always drawn with a smile on his face, broad chest, arms flared out.
He's a manly man and he's very confident.
Or the character Nightwing. The way that Nightwing fights or flips through environments and moves around speaks specifically to the acrobatic family known as the Flying Graysons. We weren't making this. We had a fully customizable protagonist, so we had to speak to the breadth of superpowers.
We couldn't pigeonhole you down this route and say you're going to move like Spider-Man or this or that. People wanted to create the superhero that they wanted.
And the second biggest challenge is knowing where to begin.
And when it came to superpowers, or super jumping, we were a very inexperienced team.
There were no one on the animation team that was like, oh, we worked at this studio over here, and we kind of made something similar to that.
So we were all just trying to figure out where to even begin.
This goes back to my first key takeaway.
And that's starting with what you know.
So it was a relatively simple problem to overcome.
We knew that we had a simple Saints Row 3 jumping system.
And it was specifically animation driven because we wanted to get away from the physics-driven jumping system of Saints Row 1 and 2, and animators wanted full control over what that jump looked like.
Saints Row 3 wasn't about jumping, so we just wanted it to look good.
So we had a simple takeoff animation that would take you back to the ground, and if you didn't contact the ground.
You would go into a fall animation, and then based on your velocity, we played several different lands.
Like I said, Saints Row 3 wasn't about jumping, but Saints Row 4 was definitely going to be about jumping.
So we took what we knew...
And we did a quick and dirty hack for the design team, so that they could prototype this out.
We basically took that jump system, scaled up the animations, and allowed you to go higher in the air to give you a quick sense of super jumping.
That's clearly not where we ended up, but we didn't want to be a bottleneck for design.
We wanted to just give them something that they could get in, move forward with the proof of concept, while we had a little buffer to figure out what we were going to do.
So while Design was busy with their hack-jumping system, we went on what was called the Great Reference Footage Hunt.
We were trying to gather super-jumping reference from any medium that we could find.
We were looking at comic books and YouTube and watching movies.
And this quickly became known as the Not-So-Great Reference Footage Hunt.
One thing that was quickly brought to our attention was that the Matrix was a huge inspiration for the entire game, so maybe we should start there.
And we all remember sitting in the theater watching Morpheus fly through the air, or jump through the air, and Neo do the same thing, and it was all really cool.
So we thought this might be a great starting point.
But what we quickly found out is that none of us had actually really watched The Matrix in several years.
As you can see here, Morpheus pretty much holds a single pose and is pulled through wires through the air.
There's a green screen involved, and really, what he's doing doesn't really matter.
The most motion that you see here is from the cloth simulation on his cape.
So this wasn't going to be our silver bullet, so we decided to go back and start looking at some other things.
And we found out that there actually isn'tâ€” excuse me.
It actually isn't a whole lot of super jumping reference out there.
We watched a lot of clips on YouTube and things were mostly flying more than jumping.
Footage wasn't long enough, it wasn't clear enough, or there was just strange results.
These are actually two results that come up when you YouTube super jumping, and we definitely didn't want to do either.
And it wasn't, you know, super jumping is something that we actually couldn't go out and videotape ourselves doing.
Or could we? Yes, this is actually me laying on the ground while an animator stands on a chair and tries to videotape me jumping. Now this proved one thing, and that I was pretty foolish.
But we did try and learn something from everything that had failed. And one thing that we learned here was that, you know, my center of mass or my root never really moves.
So this kind of could embody the fact that this is just being composited onto the screen. So it's something we wanted to keep in mind that maybe we need to play around with moving that on.
So we went back to the drawing board, and what we wanted to do at this point was, we're kind of sitting at a fork in the road where we needed to look at the technical investigation because the programmers wanted to know how we were going to break all this stuff down.
And we still had to figure out the art investigation, which is what I'm talking about right now.
So we wanted to approach this from a different angle and kind of focus on that tech investigation because we knew that the art would eventually come once we understood what we had to figure out.
So we switched mediums. We wanted to look at video games that had done jumping systems in the past and kind of approach it from a different angle.
So the three games that we settled on looking at were Crackdown, Infamous, and Prototype.
So we started with Crackdown, and the things that we noticed immediately with Crackdown was that it was simple and clean. It was basically three animations, almost similar to the hack system that we had given earlier. They had a takeoff, they had a state in the air that no matter how fast, or how long you're falling, his arms might flail a little faster and then it eventually loops back to going slow. And then they had various lands.
But the things that we didn't want to take away from this was that we felt the motions never evolved over time.
You were always seeing the same thing over and over.
And going back to me laying on the ground like a fool, this character's root stays in the dead center of the screen the entire time.
But there's a big caveat with this.
Crackdown's a great game and I love it dearly, but Crackdown came out in 2007 and we were coming out almost seven years after that.
So gamers were going to expect more than this.
They wanted bigger and better.
And while this worked for them, it wasn't going to work for us.
We wanted to take our findings and build a prototype of this in our Saints Row engine.
And this is a super quick and dirty prototype, by the way.
And it actually confirmed everything that we felt.
It was slow and basic. It wasn't going to be competitive.
The motions weren't evolving enough over time.
And this was not going to be fun for hours upon hours.
So a little bit later in the video, you can see that we started to play around with FOV and a sense of gravity.
And that was something that we also learned in here, that, again, moving the character around the screen allows you to feel like they're actually part of that environment instead of superimposed on top of it.
So from there, we went to look at Infamous.
And we quickly learned that Infamous does not have a super jumping system.
But what they had was really good.
And we wanted to keep watching it and learn from this.
We love the fact that no matter where the jump was done, whether it was over a car, off of a post, from the top of a building, it was the same jump.
It was simple.
There were no weird middle heights in there that didn't blend well.
And this is something that we wanted to jot down and take into our system.
And from there we looked at prototype.
And it's immediately noticeable that in prototype, everything is very primal.
It fits the character and the supernatural backstory that goes with prototype.
We love the sense of speed that you had on ascent and deceleration.
And then we also pointed out that this is very superhero, something that I touched on earlier.
And we couldn't do this.
It embodied their character, but our character was kind of whoever you wanted it to be.
But we took these findings and we built another prototype.
And we wanted to test out that superhero premise to see just how superhero we could be.
And it quickly proved not very much.
Our character's moving around very similar to Spider-Man in here.
So it proved that point pretty quickly.
One thing that this also shows is that we understood the technical side of how to break down the animations.
While the visuals aren't what we wanted, the text side of how the animations were broken up is pretty much exactly what we ended up shipping with.
So after these tests, we decided that we should try and incorporate everything that we had learned and go into the concept of, slide not working, creation of pillars.
Now pillars is something that, whoops, too soon, creation of pillars is something that is normally done at a project level and we really wanted to bring that down to a feature level.
So we created four pillars.
Motions must be grounded in reality.
We started to realize that the reason we couldn't find good reference footage was because we were looking for something that wasn't grounded in reality, but our game was.
So looking for super jumping was always going to result in superhero stuff.
Our motions had to evolve over time.
If people were going to be doing this for hours upon hours, we wanted to kind of mask the fact that you were seeing the same thing over and over.
The motions must look good and feel good at all heights and speeds.
And the motions must fit the overall theme and animation direction.
Now that last one's kind of beating a dead horse of this entire presentation.
So we took what we learned and we wanted to go back and look at stuff that was grounded in reality.
And I'm going to fast forward a little bit and just jump to where we actually ended up.
And that was with Olympic long jumping.
We found out immediately after looking at a lot of Olympic long jumping reference that it fulfilled pillars one, the motions were grounded in reality.
Pillar two, the motions changed drastically over time.
His body's probably going through three or four motion changes as he reaches his apex and then comes back down.
And pillar four, this could fit our art direction.
It was grounded in reality, but we could push it to become a little bit more heroic and we could show a little bit of his confidence in there.
So from here, we were failing pillar three, which was that it didn't look good at all heights.
Because what we took was our art direction that we merged with our tech investigation, and we built a fully charged jump.
Now, in Saints Row 4, if you've played it, you know that you can hold down the button, and as long as you hold it, that determines how high you go.
So we decided to start with building the highest jump that you could possibly do.
These are some snapshots here, kind of squashed to fit on the screen.
But this failed pillar 3, because when you tap the button and you only jumped like, you know, two meters off the ground or whatever, it looked like he was exerting himself way too much.
So we didn't want to brute force this, but because we were also running out of time and the project needed to move forward, we actually did exactly that. We brute forced it.
So we built the exact same motion path, just at a lower height, and changed up some of the posing so it didn't feel like you were exerting too much energy.
So it was nothing amazing, and it was just part of game development.
And then we took these two various height jumps that we had built and we kind of merged them together in our animation network.
And depending on the heights in between, the minimum and the max, we would merge those two together.
And this is kind of what the simple version of the superjumping system looks like.
The motions are grounded in reality.
They're evolving over time, and they look and feel good at all heights and speeds.
The motions also fit the overall theme and animation direction.
You can kind of squint your eyes, picture any customizable character in there, feeling satisfied by the amount of freedom that we've given you here.
So I want to touch on a brief bit of the tech side, just to show why we started what we knew and how we kept it simple.
Now what I just showed you was a very basic form of the jumping system.
So this is kind of a sample of our motion graph.
So we had a jump state down at the bottom left there.
And this was control by controller input.
Based on your input, this determined whether you were trying to do a standing jump, a moving jump, moving high jump, double jump.
And then from there, once we understood that, we'd fire off a takeoff animation.
And there were a few different takeoff animations, but they were basically just canned transitions.
And then depending on the amount of charge or the velocity that you had when you were moving.
We would go into a falling or jumping state, as we called it.
This was all velocity driven.
It was multiple transition animations that were dependent on your velocity or the jump that was executed.
And we would ramp into different parts of this or even scale the timing within there based on those inputs.
And then similar to the Saints Row 3 system that we started with, based on your velocity, we played a different land animation.
So in a nutshell, this was the super most basic version of super jumping that we had.
And it was good that we started with the simple version, because as we all know, something that starts off simple always ends up most complicated system known to man.
Because quickly, after this amount of freedom was put into the game, designer A comes into the room and he says, you know, it's great that I can jump around through the city, but I can't quite land where I want to land, so it would be great if I could dash through the air.
So then dash was added.
And then designer A comes back the next day.
He's like, you've given me dash, but now I kind of need something else.
And I know scope-wise we said we weren't going to do flying.
So I'm not going to ask you for flying.
But if I could kind of throw my arms out in the air and glide for a little bit, that would be great.
So then we give him gliding.
And then combat designer comes in the room and he's like, you know, all our combat takes place on the ground, but you're jumping all over the place and I can't, you know, throw an ice blast at anyone or use telekinesis.
So, you think we could do that in the air? So, of course, that gets added.
And then your designer A comes back and he's like, I'm dashing and I'm gliding and I'm jumping.
I keep hitting walls and I can't jump on the walls. So, you think we could add wall jumping?
So, wall jumping gets added.
And then he comes back the next day, and this one's going to make every animator in the room throw up, and he says, you know, our takeoff animations have about four frames of anticipation, and I know that's been a battle.
What I really want to do is hold the charge button down while I'm in the air so when I land on the ground, if I let go of it, I have no anticipation and I rocket back up into the air.
So maybe we could do something with zero frames of anticipation.
So we ended up going with that.
And a lot of double jumping. And then Combat Designer comes back and he says, all this is great, but I really want to be able to hold a button down, pause everything that's happening in this network, hold my fist in the air, be able to aim 360 degrees, and then fire myself off like a rocket. So, death from above was added.
So as you can see, something that started out so simple became the most complex network outside of our player locomotion that existed in the project.
And this would have been a terrible thing to try and noodle between if we had blown it out from the get-go.
Each line here is a transition between multiple state nodes that contain blend trees, other complex state machines inside them.
And the parameters, such as velocity, character heading, desired direction, are all controlling the shift between these states.
This is kind of what it all looks like when it comes together.
That network also didn't include wall running, which is seen here, which was handled in a different method and came online about two months before we shipped.
But I single-handedly believe that if we didn't add wall running, all the comments such as, you know, the most enjoyable part of Saints Row IV is just moving through the world, those probably wouldn't have been said.
So it was something that the animation team actually proposed to the designers and they really didn't want to do it, but we did it anyway, and then they were very thankful that we did it.
So in summary, the challenges that we faced were blending superpowers but previously established animation direction that was conflicting.
Finding reference footage for motions that were not humanly possible.
Inexperienced with this type of system.
And some of the solutions were to start with what we knew, develop a set of pillars for the feature, explore reference from all mediums and different approaches to how we use that reference.
And then the biggest takeaway, again, is that failure when learned from can be an invaluable resource for understanding and executing your final product.
I want to give a big shout out to the entire Abolition team and Deep Silver, Koch Media.
Without Saints Row I wouldn't be here today, and I want to thank everyone again for coming out.
That's all I got.
There's about four minutes for questions if we have any.
Hi, did you guys do any explorations with physically based or procedural animation?
No, we didn't.
Like I was saying, we were kind of in a big time crunch trying to get Saints Row 4.
It originally started off as like an expansion product and then THQ wanted us to turn it into a full product.
Scrapped a whole lot of what we had and we're rebuilding it in a very short amount of time.
Superpowers are something that everyone wanted to keep.
So there was really no time and we actually didn't have the tech up and running to do something like that.
Can you talk briefly about the way you blended between animations and engine?
Yes, so we have a proprietary tool set for building our state machines and stuff like that.
It's something that we built internally.
I kind of touched on it briefly.
Design's big request that they wanted was that controller input determine how high that you went.
And we tried it a few different ways to where it was like...
I wasn't anything magical.
It was really just like a linear blend between the two.
Anybody else?
No?
All right, well, my time is about up, so if anybody wants to ask any more questions that they didn't think of right now, my Twitter's on there.
Love to talk about it, and thanks again for everybody coming out.
Appreciate it.
And have a good GDC.
Big thanks to all the CAs and GDC again.
Thank you.
