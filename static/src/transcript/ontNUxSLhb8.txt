Welcome, my talk is called Storytelling with Verbs, Integrating Gameplay and Narrative.
I also like to refer to it as why narrative designers and game designers should be best friends, because we should be.
So before I get into what that actually is, hello, I'm Caitlin Tremblay.
Some of you may know me.
I'm a writer, which kind of looks like this.
I've worked on a variety of games in a bunch of different genres, including mobile, ARGs, escape rooms, indie, and AAA.
I was the lead writer on A Mortician's Tale, and I was a team lead narrative designer at Ubisoft Toronto.
Currently, though, I'm a writer and narrative designer at Cappy Games.
So if you know me, you know I have one very specific windmill that I like to tilt at.
And it is that.
It's that I fundamentally believe narrative design is game design.
In the same way that we have specialized subsets of game design, like combat design, weapon design, or system design, I approach narrative design like game design, but focused on how we're telling story.
Narrative design is designing stories from the building blocks of gameplay.
That's because at its core, interactive storytelling is a combination of actions or interactions and narrative.
For me, you can't begin to tell your interactive story if you don't know what your player is going to be doing.
What the player does directly determines how we can tell the story.
And what your player does is usually determined by your base mechanics, actions, or verbs, you know, the things that you're asking your player to do.
So when starting to plan what a quest should be or what kind of story to tell in a particular kind of game, I always ask first, what is the player doing?
Is the player fighting?
How? With magic, with weapons. Are they defending? What are they defending? Are they running? What are they running from? Or what are they running to? Are they hacking? Are they hacking individually or collaboratively? Because, yeah, that changes things. Or are they just talking? Or, you know, are they shooting things?
Each of these, while all in service of some kind of conflict, carry different meanings for players.
Even more passive verbs, like talking, imply something about a story.
And that's because all gameplay actions imply how the character you're controlling behaves.
They also tell us the rules of the world.
A world where guns exist and where characters are more willing to use them is a very different world where characters fight with sticks or where monkeys fight with knives.
It has different rules, different stakes, and it's a very different world and the way it shows how the characters respond to violence.
So like I said, all gameplay verbs imply how that character behaves in the world because they dictate what that character does.
Gameplay isn't maybe always giving us strict plot, but it is giving us these early building blocks of character, world logic, and story.
And gameplay can contribute to storytelling because gameplay mechanics are story.
In the same way we plan major beats of a story through acts, those beats are also composed of buckets of actions we're asking the player to perform.
And what the player does, the character often does as well, resulting in an inherent characterization of the playable character.
So in practice, I find there are two helpful ways of looking at this.
There's the literal story implied by the game mechanics.
And by this I mean it's the plot, the theme, the characterizations, all that kind of stuff.
And then there's the emotional arc generated by the game mechanics.
And so this is kind of like the arc of emotions, the emotional journey, all that kind of player-centric stuff.
So the first one is easier to talk about, I find.
So for this, let's talk about Assassin's Creed.
Assassin's Creed is a game about stealthily assassinating targets, and the story that is being told is one of an assassin.
That makes a lot of sense.
So let's look at it this way.
Here are the actions.
You talk to a person who needs somebody killed.
You kill the target.
Then you will be rewarded for doing so with money.
This sets up an immediate story that we can understand.
You are an assassin.
Even if we never told you Cassandra was an assassin, the gameplay tells you she is.
OK, so with this, we have the basic foundations for a story that is supported by and echoed in the gameplay mechanics.
How does the story change on what other actions we ask the player to do?
What if we ask the player to kill with a blade versus something like a gun versus something like a gun that is also a blade?
What if this was this?
Asking your player to use a sword or a knife versus a gun implies two potentially different world states and how this character operates in both those versions of the world.
And I'm not even just talking about setting.
Players will bring their own perspectives and thoughts on these weapons and what they mean about the world they're in.
A character who kills with a sword is already going to be set up differently in your player's mind than a character who kills with a gun, even if we haven't even told them anything about story or setting yet.
So these are the bones of the story.
Once we know the implications we're bringing to our game, then we can write story and character on top of that.
So that's one way mechanics tell stories.
The second is still storytelling, but it's not a traditionally designed story in the same sense.
And I also want to preface that this next example isn't my own.
It's one that I heard from Emily Short, and she's wicked smart, and so I wanted to share it with everybody here.
Think of Tetris.
As you're playing, you're rotating pieces, setting up scenarios, and waiting for the right piece to complete your lines.
As you're doing this, you're experiencing an emotional range that is telling your player's story.
So you might start off pretty calm, and you still are kind of calm.
Then you get excited, and then you get a little anxious, and then you get even more anxious as your blocks are growing and you haven't received the notorious straight piece yet.
And then you get frustrated when you fail to turn it properly in time.
And then finally, you get the straight piece, you slide it over, it drops, everything disappears, you feel catharsis in that moment.
And then you can return to your previous calm state.
But now with an added layer of pride, relief, tension, some kind of emotion layered on top.
That's a story.
It's emergent and it's player driven, but it's still a story.
So while you're basically only doing a set of actions, rotate, drop, clear, there is a clear emotional arc that feels like a story.
There's conflict.
There's victory.
There's defeat.
And there are mappable tropes over top of this, such as an underdog win, or total domination, or undefeated champ.
So for Tetris, let's look at it this way.
Anticipation leads to tension.
which leads to catharsis, which, guess what?
That's a story.
It's an emotional story.
OK.
But for now, I'm less concerned with the emotional storytelling for this talk as I am with the literal storytelling associated with game design, because that's one we can kind of more concretely and traditionally design for in a more traditional storytelling sense.
So let's go back to our initial question.
What is the player doing?
Let's look at defend purely as an example because I think it contains some really neat story ideas.
Certain actions like defend carry a very different meaning to players than verbs like attack.
Even if the player defending looks a lot like attacking, they still mean something different.
That meaning is where we find the kernel of story.
Defend often invokes a sense of protection, whereas attack can, but more often implies aggression.
Defending your home is a very different story than attacking somebody else's home even without getting into explicit character motivations So on one dev team we wanted a mechanic that was essentially about defeating waves of enemies We kept calling it defend even though that wasn't the name of the mechanic It was called something else entirely and to be honest, I don't remember It's a sign And it's because us as developers, defeating ways of enemies inherently felt like we were defending something, and we kept getting confused because whenever we said defend, the next question was always, okay, so what are we defending?
And we just didn't have an answer sometimes.
So the beat more often than not felt awkward.
We reevaluated the mechanic in light of this base story we felt like it was telling to make it more aligned and therefore clearer to us as developers and to our players.
So if you haven't played it, Loud on Planet X is a game I worked on where you play as musicians defending your stage from attacking aliens.
It's about protecting yourself in a hostile place.
As the player, you didn't choose to go to this new planet.
You were forcibly taken there by the aliens.
So the musicians are defending themselves against the attacking aliens, who in turn are just being dicks and attacking you because that's what they do.
So with defend, sure, you can be defending by attacking, like the musicians in Loud, but your primary motivation is to survive, not kill.
Compare this to the aliens in Loud who are just attacking without any sort of defense motivation at all.
For dev teams, and for me in particular, it's important to figure out what emotional response you want the player to have in that moment. Do you want the player to feel aggressive?
Or do you want them to feel like they need to protect something, be it themselves, a place, an idea?
Answering those questions will help determine what the mechanics should actually be, especially if members of your team disagree.
So for me, we answered those questions in part by looking at what the emotional response we wanted to come out of the experience was, and everything kind of fell into place after that.
So a quick disclaimer.
If I were to say something like, defend is more often about protection and attack is more often about aggression, this doesn't mean this is the only thing those two words and verbs can ever mean.
But what I'm trying to get at is that they do mean something to your players.
And it's important to try and recognize what that something is in order to get the best fit between the mechanics and the story of your game.
And not even just in a ludonarrative dissonance sense, but just to get the best possible fit between player actions and story.
Essentially, players will bring their own understanding of what certain words mean to the game.
And that, in turn, will influence the base kind of story the players are already being told.
OK.
So what about when you let your players decide which type of action to take?
Letting your player choose between two actions changes character in really neat ways that we can help guide as designers.
So let's look at Corvo from Dishonored.
So Corvo can either kill lots of people, or kill no people, or kill some people, you know, if Corvo's being kind of non-committal about the whole thing.
Dishonored's chaos system creates two entirely different stories of who Corvo is, or just as importantly, who Corvo feels like to the player.
One could be a more shadowy human, more calculated, a bit slower to act.
The other is maybe more brazen, aggressive, perhaps more impatient.
Because not killing when given the chance implies something about characterization.
So when players choose their route, they're choosing a bit of who Corvo is as well.
Dishonor would be a very different game, and Corvo would be an entirely different character if the choices were between, say, something like computer hacking and killing, or befriending and killing.
Even if the plot was the literal exact same, Corvo's characterization changes, either implicitly or explicitly, if he kills or if he doesn't.
Because what Corvo is doing is determining who he actually is.
So when setting up two different play styles for your player to use, think about what the choices say about the character and how the character is changed in both contexts.
The changing context can be really powerful for characterization and emotional engagement, and even shape the nature of the world your character is in.
A renegade femship positions authority, power, and heroics very differently from a fully paragon femship because how they enforce their power in the world.
It's these basic gameplay blocks that set the foundation for us to tell the story and write characters and plot that feels good to the player.
It feels good, and it makes sense.
And it's important to consider because gameplay is going to be part of the storytelling experience, whether we want it to or not.
It just is.
So now I want to talk a little bit more in depth about some personal examples I've worked on in order to kind of show how I put this thinking into practice personally.
All right, so let's talk about talking.
I've written and designed a bunch of interactive fiction and interactive fiction often relies on talking as its main mechanic.
In most games, talking is more than just conversing to gain information or to advance the plot.
The player then often has the potential to act upon the information given.
So what are the kind of actions we can give here?
With that question in mind, for one game, I designed an entire secret system where players could receive secrets from other characters.
If the player then chose to share that secret, then the relationship with that character would change.
Negatively, obviously.
This secret system added an extra dynamic to building or destroying friendships in a game about trying to fit in.
I focus on the fact that talking has reciprocal repercussions.
Basically, people are going to respond to what you say to them.
That's kind of what talking is.
So using talking as a way to create combat-like conflict made a lot of sense to me.
So if I wanted to use conversation as conflict, I figured there were three important facets of that.
Conversations are reciprocal.
There will be consequences.
Conversations can build or destroy friendships.
And conversations already have all this inherent drama to them.
Considering these points as my ways into building conversations as conflict led me to the whole secret system.
Ultimately, I was curious about what kind of drama already exists in the act of talking and making the act of talking with somebody even more dynamic and potentially full of conflict that serves a purpose beyond just plot progression.
Because plot progression can be dramatic, but nothing is more dramatic than pre-teen drama.
So then, what about listening?
Listening feels similar to talking in a lot of ways, and that's a typical part of a conversation.
But for a Martician's Tale, we use listening a bit differently.
During the funeral portion of the game, you can only listen to mourners versus navigating a conversation tree.
Listening forces the player to take a back seat.
Focusing in on listening instead of talking gave us the space to more fully explore the dynamic range of grief and how grief manifests in people.
The player isn't driving or guiding the conversation as they would in a conversation tree.
They're listening to learn, essentially.
So if I wanted to present listening as learning, I thought about emphasizing mourner's experience, not having best answers in a dialogue tree, all which ended up preventing any sort of gaming the system.
Rather than trying to win a conversation by finding the best answers, we focused on making the player listen to the mourner in an effort to more fully convey disparate emotional reactions to death.
So for me, I focused in on this idea of listening as learning, and the natural follow-up of that thinking shaped how I wrote those bits of dialogue.
Okay, so now instead of talking about games about destroying friendships and listening to mourners, let's talk about cults.
I've been lucky enough to also work on escape rooms and ARGs in my career.
I'm the little one in this picture.
Both escape rooms and ARGs focus on collaborative puzzle solving or deciphering.
Puzzle solving or deciphering as an action tends to require an extensive and detailed knowledge of a very specific thing, like codes, languages, numbers, all that kind of stuff.
So I will say, I learned so much about code breaking, encryption, and other really smart, fancy number things while working on these kind of games that I've obviously all forgotten.
I've also never felt dumber in my entire life because there's just so much stuff to know in the world.
There's just so much stuff.
But luckily for people like me, ARGs and escape rooms often capitalize on multiple players possessing the knowledge.
And importantly, for gameplay purposes, players like to share information with their team members or fellow players.
ARGs and escape rooms are so often successful because they don't rely on one person knowing everything, but rather because multiple people will know multiple things and then share that knowledge.
Effectively, everyone gets to be part of the big brain that solves the puzzle and wins the day.
So it's okay that I was dumb because other people were smart.
So rather than assuming one single person can and will have all the very specific knowledge needed to solve cipher puzzles, we often designed around the idea of sharing knowledge or puzzle solving as collective power.
Designing for puzzle solving as collective power gave us a few things that we could focus on.
Relying on knowledge sharing, letting skilled players be ambassadors and support other players, both which focused on encouraging collaborative puzzle solving.
And because sharing knowledge disperses power out to everyone who has it, these games often became about working together to stop some sort of evil.
Resisting oppressive governments and freeing a village from a curse were stories that actually came out of the mechanic of sharing knowledge as empowering everybody.
So with all these above examples, we didn't create a gameplay system in a vacuum.
Instead, we looked at the basic story behind the system and built the two simultaneously.
We designed what the player does in direct support with the story we wanted to tell and vice versa.
So from my experience of working with a bunch of different teams on a bunch of different kind of games, I have some tips that I generally try to use to encourage this kind of thinking.
And I especially use this when maybe not everybody is on board with the idea that narrative design is game design and that narrative deserves to be part of the pre-production process.
We do, and we can help.
So to kickstart this process, I run through a similar set of questions every single time.
What is the player doing?
What does this action mean?
How would a character behave in a certain situation?
And if you have a character already, how would that character behave in this situation?
Would they take the action you want your player to do?
If not, what type of person would take this sort of action?
And how would that character behave if they were pushed to their breaking point?
Because the way people respond to things changes based on the context around them.
So these are super basic, but they help set myself up in the proper direction before I get too deep into things like breaking stories, solidifying characters, designing systems, et cetera.
This is all kind of first steps for me that I try to do at the same time as these other things.
And I do this by working directly with the game designers and making them talk to me and making them answer all of my questions, because I have a lot.
Okay, so cool, right?
It is cool, but why?
Why does any of this even matter?
What do we gain from designing this way?
I mean, you're probably doing this already, whether deliberately or not.
But intentionally including narrative design alongside game design will help make development smoother.
I promise it will help.
It will also make our games better, because it can support in so many ways.
It'll help with story coherence.
Allowing narrative to be on the ground level of game design will give your game greater story coherence.
Ludonarrative dissonance has the reputation it does for a reason.
Players buck when the story and gameplay don't match.
Or when they've been asked to do something they don't believe their character ever would.
Evaluating the narrative context of gameplay verbs and actions will help cut out this dissonance right from the very beginning.
But the reverse is true too. What the player does is understood largely through the story attached to it.
Asking your players to do something without providing context will often leave players feeling confused and unmotivated.
And that's because story provides motivation and context for gameplay mechanics.
Because yeah, context is narrative.
If you've asked your player to cut down 12 trees every week, but never told them that you need to do this in order to get wood to start a fire at your survivalist campsite, then the motivation for doing so can become lost.
Or maybe the player will be angry at doing a quest that feels too repetitive if they don't understand why they're doing it is important.
Story attaches meaning and motivation to mechanics that may otherwise be confusing or lack player motivation.
If gameplay and narrative are designed simultaneously, then the player experience is less likely to be dissonant or confusing, and the player is more likely to be motivated to complete quests or even the game.
And all of this is becoming even more important as the types of games we make change.
With multiplayer and live games, we have less space to tell linear stories to players, and we have even less space to communicate the story to players.
Letting the gameplay verbs we employ do some of the heavy lifting gives us another storytelling tool when we often don't have the full range of traditional storytelling tools at our disposal.
So one example of this that I really like in a multiplayer live game is Dead by Daylight.
In Dead by Daylight, the survivors need to repair generators to power exits.
They must also avoid the killer who is trying to kill them.
And they can do this by using flashlights, using maps to find the exits, and healing themselves and others.
But they can never attack.
Rather than relying on cutscenes or character dialogue that is likely to be skipped almost entirely in multiplayer contexts, the game communicates that survivors are trapped, are not powerful enough to defeat the killer, and must escape all through the gameplay mechanics themselves.
We know the story through the actions the players make the characters do.
And just like dialogue in environmental storytelling, gameplay mechanics become one of our tools for telling story.
So yeah, let's design together.
When you design with narrative on the ground level, from a space of understanding that the actions you're asking your player to do imply some sort of story, then you can better capitalize on this relationship to create a more cohesive experience.
It creates more fulfilling gameplay experiences and more seamless stories with greater coherency for player motivation.
It'll also help development because all stakeholders are present to identify potential problems and work on solutions together before they actually become problems.
I mean, after all, we're all working on the same game, so why would we not design together?
Thank you so much.
