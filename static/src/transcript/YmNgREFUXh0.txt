How's everybody's GDC going so far? I'm having an awesome time. First time, so ridiculous.
Fun amount of buzz too. So I am here from Electronic Arts Burnaby campus where we developed FIFA and basically talk about how we deliver content to users really fast.
Try to see if we can get rid of that buzz.
So let's go, yeah.
So live content is better.
It doesn't matter if you're going to monetize your game or not.
It doesn't matter if you've got plans right now to monetize or plans down the future to monetize or no plans whatsoever.
Creating live content basically allows you to create an engagement to the users.
You create compelling content that actually draws the user in and they, like, want to play your game.
What do I mean by live content? I'm not talking about game patches.
Game patches are things that will go out and make code changes and whatnot.
I'm possibly DLCs, but to me that's not really live.
That's basically in chunks. You're still having to go through the certification flow on console and whatnot. What really I'm talking about is in-game downloadable content that's released on a regular, continual basis.
Basically, it creates a compelling reason for the user to constantly come back.
Examples in the industry. So when I was looking, I was mainly looking for console examples and there really aren't a lot of console examples for live content. There's tons of stuff for PC. There's a ton of stuff for mobile. But for console, Call of Duty, again, DLC, basically map packs, weapons. Forza, you can do car packs and also add-ons. Harmonix is probably one of the best ones for actually doing live content because they're constantly releasing new...
audio tracks from different band members and basically song packs and whatnot. So all of this creates a reason for, again, the user to kind of come back to the game. So how do we do it? Or how do we as an industry want to do it? Basically first thing is your game has to support it. Your game has to have a framework or be a framework to actually be able to bring that live content and display it to the user.
The live content has to be special.
It can't be just mundane little add-ons here and there.
It has to be something that the user actually wants to play, something the user wants to engage with.
Content delivery is not equal to the game or server updates.
Basically, do not couple your content delivery system to any sort of game updates or server updates.
If you do, you will slow your pace down and you will not create a reason for the user to come back on a regular basis, because they'll be waiting weeks, months, for that content to appear.
Use tools, not engineers.
Leave the engineers to solve the complex problems that we all have to face.
Use tools. They can be set up to validate. They can be used to clean the data and make sure it's correct. So FIFA live content. I'm going to quickly just show a video now just so you guys have an idea. Some people probably know what we do on FIFA. Others might not. So I'm just going to...
Possible...
Possible is open!
Where is the door?
We need to play 4-4-2.
Attack is the best defense!
I love the team going non-stop!
Pass. Shoot. Score. Rule it. Lose it. Win big. Or win...something.
Make dreams come true.
Okay, not that dream.
This dream.
Sometimes be like...
Other times be all...
Show the world you have the ultimate team.
Build your ultimate team today. Put your game where your mouth is.
So that's basically what I'm talking about when I'm talking about FIFA Ultimate Team.
It's essentially an items based game where you basically purchase packs, build a team, and compete against other people to get coins and that loop.
You're essentially...
Wanting people to be engaged in that loop and to basically constantly be buying it.
Wow. It's extended.
I'm just going to try something here.
Just give me a second.
Ah, there we go.
So what kind of content do we actually update?
So in a year, we're basically putting out 1,200 in-form players.
Those are basically players that have increased their stats, have been in-form for that week or that month or year.
2,000-plus player transfers, 100-plus tournaments, 40 seasons.
And seasons basically are made up of different divisions, and you move up in the divisions as you compete and get points and wins.
100-plus pack offer promotions.
those are all tied in with the challenges, 150 different challenges, 300 plus games of the week, 52 different match day update drops, so basically transfers and other database drops on match day. And then that is all kind of message to the users, approximately 1,000 messaging banners and 21,000 lines of...
Localized text. So we're producing a lot of content in a year.
And we're pushing that out to users on a continual basis.
Pretty quick as well.
So player updates. We actually have Team of the Week, which is players who have played really well that week.
Typically, Team of the Week, the producers will choose which players from the week.
They'll also give the community a chance to actually pick players as well, and typically one or two of the community picks will actually go into that team of the week for that week.
So the players will basically have different versions of their items, much like baseball cards will have different versions for really good plays and whatnot.
Team of the year and season, again at the end of the season or at the end of the year we also put out a whole batch of stuff.
So, team of the season, we release 18 to 36 new versions per week.
And then for the team of the year, we're releasing 11 players over the course of a week.
So every week, every day, we're releasing one or two players.
Just creates a lot of excitement in the game.
Basically high profile players and whatnot.
Man of the match, if someone did really well, they'll basically get selected.
Special versions are interesting.
Basically, it's...
versions of players that are like career high messi if he's made a special scores or what not.
We also have special items. Special items are interesting because they are actually versions of the player that are not released to the market but are granted directly to players that actually play our game. So professional players will show up and you can match up against them and you will see that special version in the game and be like you're actually matching up against that particular professional footballer. And then fut squad updates. An example is Ronaldo here. Started out as a gold version. Basically had two team of the week's released as well.
We had two Team of the Weeks released, we have a Team of the Year as well, so that was mid-year.
These are from 2014.
And then we've got a Man of the Match, so he had a spectacular game.
He basically just killed it, so we had an extra Man of the Match.
And at the end we actually had a World Cup, so during World Cup we were releasing special content.
The interesting thing about the World Cup one is that if you got that, it actually live updated.
So if he played really well, our stats changed on the actual item live.
So we were constantly updating that item.
And then basically you're getting a lot of people, the community, buying into it. So this is an example of team of the year messy. Team of the year Rinaldo basically getting released. Someone was like yes, yes, just another version of Rinaldo, never be able to afford. Team of the year Rinaldo.
but don't know what chemistry style to use. So people are communicating and talking in the forums as to like how to actually use that particular item. The day when Ronaldo scores a hat trick is one of the most horrible days for Sweden. But for Ronaldo, it was Tuesday. And then also like haircut upgrade. This is for our World Cup. If you notice, he's got a different haircut style.
So, yeah, we updated the hairstyle and the item and whatnot too.
Basically what we're trying to do is create massive community engagement.
We basically have the forums, Twitter.
We have third-party sites that actually link into our database and show the various items and whatnot as well.
There's a lot of forums on that.
And people will actually engage and really get that excitement going for the actual week.
And they'll have a lot of communication.
Thousands and thousands of posts on those websites.
Our own forum will have like tens of thousands of posts.
And if you ever want to like...
If a PAC promotion is happening and you go into Twitter and go to at EA Sports FIFA, it's just a constant stream.
Like it's just crazy how much communication there is.
Speaking of PAC promotions, we don't discount. Ever.
So what we do is instead of discounting, we actually...
create special versions of packs that have a higher probability of getting rare players that have more value.
So we don't want to get into that whole we're discounting and then people only purchase at discount times.
We're really trying to just drive that economy and making sure that people purchase and see value in what they're purchasing and it's not the Walmart sort of I'm only going to buy it on blue light special sort of days.
You need to tell users what's new. Messaging is key. If the users don't know what is actually being released and what's new and exciting, they're not going to engage because they have no idea. And we, because we are a football game, we tie back to real world events. For example, We've got transfers, Chinese New Year, team of the year when basically at the end of the year we're releasing stuff and the best of MLS. So at the end of the MLS season we'll be releasing these items as well. So basically trying to tie it in with real world stuff, things that are like, you know, particularly important to users or to gamers. One of the additional modes we have is challenges. These are actually really cool. Essentially they are...
replay the game shortly after the game has been played.
So we basically will take a game that's played, we'll set up a situation where you may be 20 minutes into the first, two points down, and your job is to score three and change history.
And it would be some major match that's happened that week.
This basically involves artwork, localization, tons of data coming in from our data teams to basically set up that match.
we can actually set this particular one was set up in 45 minutes. So 45 minutes after the actual game ended, we had it up, people were able to replay it, we had Chelsea, actually we had a deal on with the games, with the clubs, whoever won, I think it was Chelsea that actually won, actually was, whoever won basically tweeted out to their supporters to play the match.
And then we were tweeting out within like minutes of the game ending that it was going to be up. So again, drives a lot of people into the game. So 45 minutes, promoted at halftime and winning team promoted the challenge as well.
And we actually, because of that, because of the promotions and the quick turnaround time, we actually saw an 8% increase in users for challenges.
It was the first time we'd done a challenge in that quick of a time and gotten that much buy-in from both the club and also engaging at half-time.
So it was kind of interesting.
Messaging.
So basically, again, our key thing, messaging, telling the user what's new, what's important, why they should actually be engaged.
Top left-hand panel there, or I guess top right for you guys, is the team of the week.
That's basically where we message.
It actually has, so that's the area.
It's prominently displayed right in the FIFA Ultimate team.
We actually have message panels throughout the game, including right in the main menu.
So as soon as you launch FIFA, there's messaging.
And then we also have deep linking and actioning.
So it gives the player a chance to engage right away, again, driving people into that content.
And we're actually, because we're a global team, we have to support a global game played in pretty much every country in the world.
We have to support a fair number of languages.
So this is an example of one of our.
One of our messages, score 5 with Messi. This is for a challenge. We're basically supporting 18 to 23 languages across 11 SKUs. So 18 languages on console and PC, 23 languages on mobile. And that accounts for 11 different platforms that we're actually messaging on. And we can get that accomplished within one hour. That's fully localized, all the art. And if you look, for example, the Arabic.
It's completely different. You have to line up stuff special. Some other languages, Cyrillic, for example, the line up is not always fun. Basically we're able to get that in less than an hour and it crossed to everyone. We also have the ability to target users and basically say, you know, we can target users themselves. And then what we also found is It actually is a huge deal to actually create messages that are regionally specific or regionally relevant.
We're finding that, for example, we have three times more engagement on this particular message compared to just a generic message or no message.
And it's weird, having no message and having a generic message didn't have a huge difference.
People are still able to get there.
They're regularly coming back and looking at the challenges and seeing what's up.
But if you actually did a regionally specific message, this one, this is Spanish-Mexican.
and we actually had a special match that was played in Mexico. You're actually looking at three times the amount of engagement. Because now, again, it's relevant to the users that are there. They want to engage in it. So this is basically a quick view of how our stuff works.
and the reason why content delivery needs to be disconnected from or decoupled from game and server updates.
So, normal developer goes into the CM, as we all know.
That'll get pushed out to our test server.
Essentially you get, let me see if I can do this, here we go.
So this is basically our test cycle, QA testing on the machine.
We have legacy testing because we're actually supporting multiple versions, multiple years, and across multiple platforms.
So that'll get cycled through.
Once it's done, it'll get pushed to the stage server.
goes cycles through there, goes to the production server, cycles through there and then goes live essentially. That can take anywhere from a few days to a few weeks depending on how much code changes there are and how much testing is required. Obviously if you're trying to tie to real world events, a week of waiting for the server changes to go through is, you can't. You can't react to anything. So we actually have content production using tools that go directly on stage environment.
A lot of validation, a lot of code, making sure everything is correct. That gets tested by internal QA team. That can be done within, like, minutes. And then it's basically pushed out to the production team, retested, live. And it just, we can basically cycle and change stuff on a continual basis with some changes going live in seconds, other changes taking hours or minutes. So...
allows us the flexibility to really react to whatever happens. There was a transfer last year and I'm sorry I can't remember the name of the player but it was a sudden transfer. He announced it and nobody knew he was going to actually transfer.
We were able to make the change in the game, push out a new version of the player within minutes of the actual announcement that was the press release. So decouple this from server.
Deploys fast content generation in minutes not hours or days.
That's hugely important. The main thing that lets us do that is tools. Now we've had a little bit of a weird history with tools. We first started we basically did client applications. It's a C sharp app that ran on a client server.
Sorry, a producer's machine or QA machine, local machine.
Direct database access, a lot of APIs weren't set up, didn't have that ability, so the tools were directly interacting with the database.
Some content was managed through SQL scripts and data files.
And then we were coupled to the schema.
If schema changes happen, you're basically reworking the tool.
It's difficult to manage permissions mainly because we didn't have a centralized permissions management system for this. It could be built out. It just adds complexity.
And again, you can bootstrap your application and have it check for updates. We didn't do that, unfortunately. So it was difficult to manage versions. And you know, you basically have the QA teams, the production teams, everybody using the tools and you push out an update for a bug fix.
And you have to track down everybody to figure out who's got the old version and who doesn't. And it required a local setup. You need to set up perforce and everything on the actual user's machine. And some content was still coupled to deploy because we're using SQL scripts. So this was our dark days. We weren't pushing out a lot of content. We just didn't have the ability to push out live content very quickly. This is probably similar to what a lot of companies are at right now even. And are kind of working through that.
What we do now is totally different. We actually have a single sign on portal. Basically we only support chrome because it just makes life easier than having to support multiple browsers. But single sign on portal, producers can sign in.
We have basically angular front end, C sharp back end. Really nice to develop in and we can iterate really quickly. We're using rest APIs only on the back end servers. We do not couple to our database ever.
All content uses a tool now. There is not a single piece of content that goes live, that uses scripts. It all goes through the tool. It's all validated through the tool and producers and QA actually uses it during development as well. So now you're decoupled from the database schema. We have a centralized permission service so we can control exactly who has access to what tool and what environment. And it can be read access or read write access.
And it's always up to date. It's a website. You go to the website, if we push a new update out, just a website. So only need a browser. No more setup. You don't have to try to convince a producer or a manager to try to set up.
.NET 4.5 framework on their machine in order to run it and also possibly perforce and other things which they kind of sometimes run away from. Or you end up supporting them by actually setting up for them. So again, coming back to this, so tons of updates, everything through tools, by using the tools, we can actually get a lot of things done. So we can We're actually able to do that all with basically three content producers and one artist.
So a team of four basically puts out all of that content across 11 SKUs in a year.
And we're actually increasing the amount of content we're producing on a regular basis.
These numbers from last year, we've actually increased that this year.
We're actually producing even more and more updates.
And that's all optimization on the tools, creating better flows.
Here's some data. We're a publicly traded company so I can't share tons of data but I will share some. Plants vs. Zombies, DAU. So Plants vs. Zombies is an example. It's an EA game that is actually developed at Burnaby as well. They don't have a content plan. They basically just release updates. They have in game packs with stickers and whatnot but really they don't release new content on a regular basis. So what you're basically looking at here is...
The regular spike drops, spike, little bit drops, there's another content update, big content update, drop, another content update, and then a giant content update, drop. This is for the full year. Now, compare that to FIFA. So the very bottom line is actually PVZ, the DAU.
FIFA 13 was the yellow line. As you can see we kind of have the same sort of pattern as PVZ for FUT 13. It's basically because we weren't producing a lot of content. A lot of the spikes are on actual patches and DLCs or patches.
If you look though at 14, beginning starts out low and then we actually start wrapping up our content plan, our content schedule. And it's kind of, it is peaky but it peaks and kind of stays steady, peaks, stays steady. We're actually now in an interesting place. Every year we're increasing our numbers. This is weird, I think we just had a lot of issues with our servers but we've gotten stabilized now and it's basically steady.
What we're finding is throughout the entire year, we are not having that slow decline to nothing.
We get a decline at the end, just over...
I've lost my mouse.
We get a decline at the end here on pretty much every year, but that's in anticipation for next year's game.
So that's usually at like the middle of summer and it just kind of dies, starts dying down because everyone wants to buy the new one and not spend money in the old one.
One other thing is, in our game, your stuff doesn't transfer over to the next year.
You're basically new stuff every year.
And our users love it.
Weep.
Um, so...
This is basically an example of our stickiness.
Now we've got an increase in DAU, which basically means if you don't have good users coming back and you're basically just having people who aren't really playing the game, our stickiness would have dropped.
The nice thing is our stickiness is actually almost exactly the same as last year.
Even with the giant increase in number of users, we're actually getting good, decent players in the game, engaging and staying in the game.
So what's the benefit to the gamers?
Compelling always updated experience. They're constantly wanting to come back.
Added variety. Basically, it keeps the game fresh. It gives the user a reason to increase engagement.
What's the benefits for the developer and the publisher?
You basically have increased gamer engagement. What does that mean?
Increased acquisition.
Increased satisfaction in the game, people are happy to play it because they're constantly getting new things and constantly getting excited. It means that they're willing to stay in the game longer. And it also means you've got an increased monetization potential.
If you keep the players in the game and they're happy, they're more willing to actually spend money if you choose to monetize. So, takeaways. Compelling content to gamers fast.
You need compelling content. You want to get it to gamers as quickly as possible.
It means you can also iterate on content if you need to.
You want to separate the content from patches and deployments, because if you tie it to your patches and deployments, you cannot react.
You will slow yourself down.
Use tools, not engineers. And this is massively important.
Engineers should be solving complex problems, not deploying data.
Data should be deployed through tools and producers can create their own tools and they can play and they can actually have fun and create stuff that gamers will actually be compelling, will find compelling and they can iterate on it a lot faster. And make the content special. Give the gamer a reason to actually come back. So... And that's us now.
Happy.
Again, my name is Novy Dylan.
This is my contact information.
Please fill out the evaluation forms.
It will basically help me and everyone else know how I did.
Hopefully I did well.
Yeah, and if you guys have any questions, just come up to the mic and I can try to answer them as best as I can.
I've got a question. Have you ever had to roll back one of your updates that you pushed out?
So the question was, have we ever had to roll back one of the updates we pushed out?
Yes.
We have made mistakes. We, last year, we actually released a piece of content that basically killed FIFA. You couldn't even log in. It just, like, done.
So we had to really quickly make that change and roll back that change.
The nice thing is because we have the tools, we can quickly disable it and get everybody back in the game and then figure out why on a different environment.
Have you played with any kind of multivariant testing?
multivariate testing? Yeah, so like A-B testing? Yes. So our messaging system is actually set up to do that. And we're actually expanding that hopefully this year. So we do do that. Unfortunately, the rest of the content isn't yet set up to actually do multivariate testing. It is something we're planning on doing. But yeah, it's a technical problem on the back end. Everybody wants to do it. It's just a matter of finding time to get it done.
Have you ever had your community base decompile your archives and actually get information that's patched ahead of your actual release?
And if so, what's the impact that you guys...
Yeah, so, luckily we haven't.
So the question was, have we ever had our community basically decompile our archives and our patches.
Luckily we haven't. We've actually been really lucky on that.
Most of our games are not.
Like, we have a PC title.
But it's got fairly good protection around it. So it actually still hasn't been hacked. And it was released in September. Which is kind of amazing. And then the rest of them are very closed platforms. So being able to decompile your Xbox game is going to be nearly impossible. So we luckily haven't had that problem.
Hi. With the content delivery that you're doing so quickly, how do you manage that with the leaks? Do you have any restrictions? Do they have any rules? What's their process for you?
Yeah, so we actually have, so let me just Was it just managing content, basically making sure that we don't have content coming out earlier than it should?
Or just, you know, marks, players, anything. Just the sort of approval process and how much lead time do you need to give them.
Like if, for instance, they say the Premier League and another team doesn't want you to do North London Derby because they're like, well what about my team?
So that kind of thing.
So we have a very, very good licensing agreement where we have a lot of leeway and we kind of can make those choices ourselves.
We can basically choose to say we're going to put out North London Derby and there's really no choice.
We've got really good lawyers.
But ultimately we want to support all the leagues and all the teams and kind of give them good visibility in our game because it's just good for everyone.
It's a very impressive system, I've got to say.
But one thing regarding, you said three content producers, one artist.
What about the localization?
You said 23 languages in under an hour.
How do you do that?
You have the localized team on site as well?
So we have a localized team that's distributed across the world, and it's actually shared by all our EA teams, not just us.
So we have a system where we can drop it in, and it gets sent out to everyone.
Basically gets localized pretty quick like within an hour within half an hour to an hour on regular times now We have generic text as well if we need to get out stuff really quickly that we already have pre-generated we're going to drop in team names and Certain things if we have some more lead what leeway like we know that something's gonna happen in a week We can actually go and get some really specific like very detailed information that takes a little longer So it kind of, we're trying, because we're trying to iterate really quickly, we're keeping those descriptions down a little bit smaller so that they can get iterated really quickly too.
I would love to have that automated with an actual automated system but I think one of the other talks, the very first talk on Monday at 10, I cannot remember the gentleman's name, but he basically said right now machine learning and basically machine translation isn't good enough. Especially with context. And that's where you get real problems is the context. Cool. Awesome. Thanks, guys.
Have a great GEC.
Thank you very much.
