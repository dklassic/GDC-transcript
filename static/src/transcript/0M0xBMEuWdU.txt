Okay, guys. It's really nice to see so many familiar faces from companies I worked for previously. My name is Eugen Harton. I'll be talking about cheating. And currently I work as an associate producer on Project DayZ, and I've been focusing on security and deployment.
 I have a question for you. How many of you cheated in a game so far? Can you just raise your hands? Cheaters. Nice.
 How many of you spend money on cheats?
 Anybody?
 Interesting.
 OK, so I got a really famous tweet that made me really popular on hacker forums and cheater forums.
 It's called Gotta Catch Them All.
 I called cheaters Pokemons because I was collecting them in the ban library.
 And the basic thing about that is, like, it's a huge game of cat and mouse.
 Like, you're basically trying to get ahead and get those guys banned in as many ways as possible.
 And I really found out that unhackable game is a myth.
 I've been focusing on that for a couple of months now.
 And...
 Since I tried a lot of cheats over the time and months, not just daisy cheats like Counter-Strike, every game imaginable that was out there and became popular for some reason, especially for cheating.
 How many of you guys have cheated in a multiplayer game like Sandbox or just FPS? Speed hacking, for example, aim bots. Can you just raise your hand if you've tried that? A couple of guys, nice.
 So I'm going to talk about the basics.
 Cheating business.
 I did an analysis on the current state of the cheating business in really different ways.
 And I'll show you over a couple of slides.
 So what it is, cheating is getting a fair advantage in a game in different ways.
 Through exploiting, so it's bugs that we bring into our games that we leave them or forget about them.
 It's cheating itself, which can be done by many different ways.
 I'll talk about that later.
 It's scripting, memory injections, memory manipulation, memory reading, and a lot of other stuff.
 Gear and items, like all of the games, RPGs, FPS, whatever the game is, you get items, you get gear, anything that can give you an advantage in the game and progress you further.
 So people pay for services and gear directly that can be transferred through accounts and used in the game.
 So who are cheaters and what's their motivation?
 There are creators who are actually guys creating the cheats.
 Now there is an interesting thing, like most of the people do it for money.
 I'll talk about revenue a bit later, but it's really interesting the amount of money people make from making cheats.
 There are buyers, who are guys who actually have money and can buy cheats.
 The subscription can be pretty costly, and you'll see it in the next couple of slides as well.
 Wannabes, those are cheaters who beg on forums, on chats, and they're trying to get cheats for free.
 So, wannabes.
 An interesting category is griefers.
 Like, you see them in many other games.
 Like, the toxicity in DayZ is pretty high.
 You can see it in forums, you can see it in every social channel that we have at the moment.
 And we got a couple of personal connections on Griefers and Vandals.
 They've been trying to, wouldn't I say, destroy our game, but they've been trying really hard to make us look really bad.
 And they wasted a lot of time and money to do that.
 So, Sellers.
 It became a big business, so marketing is part of it.
 In cheating business, a big part of it is peer promotion, which is reputation building.
 When you look at forums, cheating forums, chats, private communities, hacking forums, whatever it is, there is certain kind of social status that you build through reputation, and you use that to sell hacks and become famous in that community.
 There's a lot of advertising going on.
 You can see it on YouTube, Twitch, Twitter.
 I've even seen a couple of streamers of ours cooperating with cheaters.
 So they increase their view time, because they are actually behind the scenes talking to them.
 So they can see effects in game, get good gear.
 And it's been a big problem as well.
 And social engineering.
 When somebody sells a hack, he wants to sell a hack for a reason.
 When you're a kid and you're buying something, it's probably your parents' money.
 If you're an adult, it's your money and you can do whatever you want with it.
 And you choose based on a number of things.
 However, the big thing in social engineering when marketing a cheat is creating an enemy.
 Whenever you visit hacking forums, cheater forums, or whatever it is, you can see that they target something that they think is evil.
 For example, in our case, it's Batly, our kernel agent that we use to protect the game.
 They make Batlaya into rootkit, which it isn't, really.
 And they make it an enemy.
 So what they do by buying cheats is actually fighting the big enemy, the big brother, that we are at the moment.
 Besides reputation, there are a lot of features that can differentiate the cheats that you buy or sell.
 And I'll be talking about different features in our game that you can see being used.
 You only know who sells cheats. Those are usually guys who do it for money, because it's a big business.
 There are two ways they do it currently, or most of them.
 Subscription model. So you buy like a subscription for a month, two months, a year, where a guy who's on the other side or a team provides you with cheats for a game that you bought a subscription for.
 The features can change. However, the basic business model of that is that they enable you to cheat over a long term of time.
 When you get banned and your license is no longer usable, they always can provide another cheat, although you have to buy a license.
 So there is a revenue coming in, even for us there.
 Where do they get sold?
 There's a big paranoia in the hacking and cheating community.
 I've seen a lot of website portals, guys like private sellers that To evade leaks of their cheats, keep it really simple or really complicated.
 They sell it through IMs, Skype, ICQs, IRC, forums, both private and public.
 A lot of the forums actually need a recommendation from other people in the forums.
 And there's a big infiltration topic there that I'll talk about as well.
 and web portals, which are the big guys who actually sell cheats for a lot of games, and they make the big bucks in general.
 So what does it cost to buy a cheat?
 For DayZ, it can go from $1 a month up to $500.
 If you can ask why so much, there are things out there that they are keeping in private communities, and people are willing to pay a lot of money for undetected cheats that stay there for a long time.
 What is the difference between the cheats?
 It's features, service, reliability, and communication, which is something that I talked about before.
 And it's about reputation.
 When you build it up and you're a seller of a cheat, you're the big guy, and you can offer it to different customers, and your customer base grows.
 Although you have to be really careful, because once you become big, you become a target for the developer, and you're actually trying to find out how the guy does it, what he actually does, and how it becomes a service.
 As I said, it is a full-time source of income. There are public services and private sellers.
 There are a lot of precautions that the guys do to make the cheat unusable and untransferable between guys, between people. So when we have a snitch in the cheating community and when he wants to send us a cheat, it's usually hardware ID locked. It's unusable, it's usually running in a VM and a bytecode, and it has a lot of anti-reverse engineering protection.
 When you're buying a cheat, especially in Russian communities, they use services like VK, WebMoney, and a lot of services that you don't get in Europe, or are hard to get, and the barrier of the language is really a problem there.
 So a lot of the sites require a citizen ID to buy a cheat, which is really funny when you think about it.
 They require a Skype call, so you will have to be...
 really outspoken in their language, and you have to be able to prove your identity to the guy on the Skype call.
 They require Facebook and Viki account checks, which is really interesting when you think about the paranoia they have.
 And the paranoia is real.
 So cheating business and numbers.
 Currently in DayZ, 1.39% of sold licenses are banned.
 There is a big extrapolation that I did on the data that we have from Banning, and which just confirms what I said in the start of the presentations.
 Once a cheater, always a cheater.
 There's a 76% bounce rate for a guy, for most of them.
 And so, when you think about it, the real thing is, most of those people who cheat would rather stop playing than stop cheating.
 Currently, we have a total of 44,000 banned accounts.
 That counts for both public and private sector of cheater sellers.
 In the database of cheats, or a library, to say, and detection methods that we currently use, there are around 400 cheats that have been sold or resold by different suppliers and different methods.
 When you compare the numbers to other services, since the business itself is growing. For VAC bans, it's 1.42 of total accounts banned.
 And here's the revenue numbers, which is really, really interesting.
 Revenue for some public sites goes up to 1.25 million a year.
 That's euros or dollars, depending on the site.
 It's a big business. It's a multi-million dollar business, and it's happening now. With the rise of survival games...
 like DayZ, where a game and the gameplay mechanic is based around permanent death, which is becoming a problem, the gameplay experience itself really suffers when somebody is cheating.
 You die, you basically lose everything, and you don't want to play the game anymore.
 When it comes to public sellers in DayZ, so you contact the site, for example, AimJunkies.
 I make hacks for DayZ, I want to sell through you, because you have a reputation to cover.
 You get in contact, you start selling cheats, you can make as much as 40k euros a month.
 And no problem, it's like not really that hard.
 For private sellers, it's a bit harder.
 It's usually private forums, IRC chats, or places where you can sell the hack privately in a small community of 10 to 50 people.
 And they buy a subscription from you.
 And some of those private sellers are making like 5k dollars a month, which is a really good income when you think about it.
 So what cheating business means in DayZ?
 It's gear selling. We heard a lot of that.
 ESP, which are raiders that show you items and players in-game.
 Item and player magnets, so that's teleportation of items and players.
 Remote damage, which is causing damage through really large distances by creating explosions or just teleporting bullets.
 AimBots.
 really common. Speed hacks, common as well. This is really special for DayZ. We're in early access, so we're pretty buggy as well. And there are loads of ways to cause server crashes, and a couple of guys found that out, and they've been abusing that over the past couple of months, crashing servers and different kinds of things.
 So how do they cheat? That's the big question. When you think about it, there are loads of ways to do it.
 However, you can categorize it in two ways.
 There are external cheats and internal cheats.
 There are attack vectors to inject in Windows, engine, through data or script, or the anti-cheat itself, which we had a problem recently.
 When you want to cheat, there are lots of ways to do it besides buying a cheat.
 If you want to learn by yourself, there are.
 a great number of tutorials out there that you can use on the hacking forums, cheating forums, or you can ask a guy when you build up a reputation and he'll tell you and give you advice how to build it up. Most of the people in cheating forums start with something that's really base. They either take something from a guy and try to modify it or they go all the way when they have a programming experience and they download something from GitHub and use it to hack a game. When you're talking about memory manipulation, There are a couple of programs on GitHub that do that.
 I've selected some of them.
 There are more of them, of course.
 We're talking about Xenos, which is really, really used a lot.
 Cheat Engine, used as well by a large number of people.
 And more, Reclass, MemorySharp, DLL Injector.
 Besides injecting a DLL memory manipulation, which means reading or writing to a memory.
 There are other ways to cheat, which is usually external programs or modifying the data, modifying the script that's running within the game.
 And we have a different kind of problem with DayZ, because we're a moddable sandbox game, and we won't have full conversions at one point.
 And if that's going to happen, and we're going to get there...
 we can expect that the problem of cheating is going to become more obvious.
 That's why we're focusing on different layers now, and I'll show those layers in a couple of slides.
 When you use a dedicated application or a driver, you're talking about direct memory manipulation or...
 abusing gameplay script, patching the data, or executable, or using gameplay exploits in combination with both of those things. We had a couple of funny stories from our development where they were able to create spectacular things, like tornadoes and explosions making like models almost from particle effects. And there was this one guy, because we have full physics system in game, who actually created like a shield by injecting.
 arrows in the game because they have collision, and created an arrow shield around this character, and he was running around the game, just hitting people with that shield.
 And when you see that, it's where I understand why the Twitch streamers actually abuse that, to increase their viewership.
 Contacting cheaters, making spectacles, using cheats in many different ways.
 It's almost like modding.
 People want to try that out.
 I had a friend who made a mod for DayZ, the original one.
 where he built a bat cave. A proper bat cave that would open up and he would fly out with a batmobile and just run out of that.
 So they just want to make the spectacle work. And even our griefers and vandals, they usually don't damage the game as much.
 Although there are a couple of those as well. But the spectacle is a big thing there for those guys.
 So when you have a...
 So, for example, you want to cheat in game.
 You find a way to modify Xenos driver with Blackbone or use cheat engine and modify it yourself from GitHub. You have to find a way to bypass the protection. There are always vectors in the anti-cheat in the Windows and a lot of other things that you can use to bypass the protection. Nothing is perfect. There is no unhackable game and Windows isn't perfect either. There is a thing called kernel patch guard that you can see in 64-bit Windows and There are loads of ways to abuse it, to turn it off, and it doesn't even exist for most of the versions of Windows in 32-bit. That's why running a kernel driver in Windows is really easy for most people out there. When you set it up in layers, like what you want to do is create a module that you can use to manipulate the memory or inject something into data or a library of a game, finding the right offsets is really easy.
 in the memory so you can abuse speed of a player, position of a player, damage of a gun, whatever it is, health, invulnerability, whatever it is you can use in the game to find a way to make the experience harder for other guys or make the experience better for yourself. Most of the cheats are a combination of exploits.
 They are based around gameplay logic. And when you get there...
 and injecting the game that are usually, for our purposes, since we're moddable and the script is really, really powerful.
 Execution methods for gameplay script.
 Now, there's been a big thing in ARMA communities, and Daisy as well, since we have our own script called SQF.
 And we're moving to other things now.
 With the SQF, you've got pretty powerful tools at your disposal.
 In the original structure, I'll talk about that as well later, SQS could have been abused for a lot of things.
 And there are execution methods for our script within the game.
 that enable you to even compile strings that you inject in a library or any part of the function of the original gameplay.
 Which has been a big problem for us, and we're trying to improve on that over the course of time, but it's not an easy task and it takes some time.
 When I was thinking about the future of hacking and cheating in games, I've been on a hacking conference a couple of months ago.
 I was discussing with the guys, like, what are the options.
 Windows is improving.
 Kernel of Badge Guard is kind of working.
 But there are still ways to hook on a process, to get in there, to work it out.
 And we created a small hacking hardware on the hacking conference.
 It was a USB key 3.0.
 And if you don't know, USB 3.0 firmware on the controller has a direct memory access.
 So what I see in the future are a dedicated hardware to cheat.
 and hack, really hard to detect. And firmware hacks on hardware that can access the memory.
 Some of the new motherboards and some of the new stuff that you can see out there can be really abused by the guys that want to do it. And it's not that hard when you think about it. So dedicated hardware coming for sure. Now the funny thing is, how do we protect the game?
 You have to consider the damage that cheating does to user experience of your players.
 For a game like us, DayZ, it means a lot.
 When you kill somebody in game, it's a problem because he loses all of his progress.
 So it's different for every other game.
 In survival genre...
 It's a huge problem.
 What you need to focus on is your terms of service, EULA, and fair use.
 So we can set the base of why you ban, what is the license ban, what is the fair use of the game, and identify the core gameplay where the problems might emerge.
 Protection has to be layered.
 I set out to talk about those layers, and I tried to name them as proper as I can.
 Prevention, detection, obfuscation, banning strategy, and legal.
 Now, for prevention, what is prevention?
 In our case, we implemented BatLieAgent, which is a ring zero kernel agent.
 Using kernel patch guard and OB callback routines, you can see that in a couple of other entities as well.
 It's something really that Microsoft implemented for what was abused previously as undocumented calls by different antiviruses and heuristics in general.
 Now, when you talk about OB callback routines, which is the prevention layer of making sure that you detect or prevent a hook to a game, to a running model process, whatever it is.
 Besides that, we use a DLL whitelist.
 Within the protection system that we enabled is a whitelist of DLLs that can be within the module of the Z or touching the module.
 And we're trying to unlink or dishook whatever is trying to get in the process.
 We did one more thing that's really interesting.
 Since when you talk about PatchGuard, which is a something that Microsoft implemented that I mentioned before.
 We disabled running of the game in Windows test mode.
 When you're trying to create a memory injection application or a driver or whatever it is, usually you have to, if you want to get it to a kernel level, you have to certify it and sign it.
 Now, buying a certificate is not really cheap, but for the guys who are making the big bucks, it's probably nothing.
 But even then, disabling the test mode was one of the better choices that we did over the course of the story of DayZ and our battle with cheating.
 Because unsigned drivers are really easy to use and really easy to get running because you only need some programming knowledge and access to GitHub.
 How do we detect?
 There are loads of patterns that you can use.
 Since the kernel driver and a ring zero agent that we use at the moment, you can detect through strings, which means strings in running scripts that they inject in-game, names of files.
 Hackers and cheaters are really like simple people in a certain sense because the reputation building is about names and being recognizable.
 So a lot of the things they do, they sign.
 You can see their names, their patterns in everything they do.
 They use the same certificates.
 They usually try even abusive words within the name of the certificate or name of the strings they use in the menus that you can see in the cheat itself.
 You can see driver memory patterns that you can detect through OBCallbacks as well and a couple of other Windows features, which hopefully if we get the time, I'll get into technicalities.
 You can detect bypass vectors.
 So there are loads of vectors within Windows that they can use to abuse the game, get into memory, read it, inject, and change the memory.
 Those vectors usually require some kind of change within Windows.
 So we can be looking for registry entries, UNSP journal, and a lot of other stuff that Windows uses at the moment to generate data and logs on what the user has actually done.
 Even when using OB callbacks and other Windows features, there is a big difference.
 Because these features have been designed for antiviruses and protecting the user.
 We're doing a different thing.
 And it's really, really a problem.
 We're trying to make the user not do certain things.
 And it's not about the antivirus, which is protecting the user.
 We're trying to suppress the user.
 And the features that Windows has haven't been designed to do that originally.
 However, the cheating as a problem is really huge and we have to fight it somehow.
 And this is the best way that we did it.
 We're trying to improve it. We'll see where it actually goes.
 Besides protecting the game and detecting any manipulation within the data, executable, whatever it is.
 You need to protect the agent itself.
 As I said in the beginning, we had a couple of injections that were based around exploits within the anti-cheat itself.
 There are technicalities regarding the user mode and full access within the hook that they can abuse.
 And two.
 understand what we do at the moment, I'll try to explain this.
 We're trying to protect the agent and the game from reverse engineering, so being able to understand what actually happens within the game.
 For the battle I anti-cheat, we remove part of the code and reintroduce them later.
 So the cheaters can never know what's actually happening and what's changing, and the obfuscation is really a big part of it.
 We're doing live updates to game.
 and the entity itself.
 And we're using the Authoritative Master Server for detection and processing of the data that we get through our agent.
 We don't want the detections to be part of the client that we're running on the user PC.
 Encryption is really needed.
 A big part of being game that's not abusable is engine architecture and server client architecture.
 Now when you look at all the other games and anti-cheats out there, which is besides BatLive, which we use, and it's amazing, easy anti-cheat, Warden that Blizzard uses, and a couple of other things that are either private or available for you to buy.
 The client-server architecture is a big part of it.
 Now, you cannot trust the client.
 It's a user PC.
 He can do whatever he needs to do or whatever he wants to do with the PC and with the data, memory, processes that are running.
 It's his, and he can be byte-patching all your logs.
 He can be byte-patching and manipulating the packets that he sent.
 He can do anything.
 So the agent itself is a big part of the protection.
 The server architecture.
 And what we recommend, if you're going to implement any of it, is extensive sanity checks.
 Now, there is a gameplay logic to a game.
 You know that there are certain outcomes that you can expect.
 There is a logic to the game.
 You shoot through the guy.
 You aim at him.
 You know that when you hit something, the bullet cannot turn around and hit something else.
 So you are detecting changes in logic.
 And we call that sanity checks.
 It's something that has been used for a while.
 Always consider performance and impact.
 When you're using the client as a terminal client, so the guy actually, or any simulation, isn't running on the client.
 It's only temporary.
 Performance is a big impact there.
 Since server is doing most of the work, it can cause performance problems for all of the guys that are playing the game.
 Extensive logging.
 It's a big part of.
 Bring in the anecdotal evidence into our banning strategy.
 And logging everything that happens on the server and the client, and even using fake logging on the client so cheaters have work to do, because they found it, they think that's our thing, like how we do it, and they work around it, spend weeks on something that really doesn't matter.
 Never trust the client.
 So use authoritative servers when you can for a multiplayer game of any kind of sandbox, or whatever it is. I was talking about protecting our agent and our anti-cheat. Don't forget about protecting the game data and executable. Make it harder to unpack, make it harder to extract offsets through obfuscation, consider performance as well, make it harder to identify the functionality.
 If you guys know about Starforce and how it works, it created the bytecode out of simple scripts that were running on a kernel level.
 And it's something to consider when you're making something like that.
 Extract the functionality.
 Run it in a different place.
 Try to obfuscate it as much as you can, especially the core functionality of the game.
 Find the right balance between performance and protection.
 Everything you add costs something, either on the client or server.
 I already mentioned that the big part of making progress within the strategy is obfuscation.
 Use client-side checks that are fake.
 Make something up so the guys have work to do within the cheating community and they're spending time on something that doesn't really matter.
 Remove it, edit again, just make them work for their own.
 Leave bypasses open to gather bands.
 Now when we talk about band waves and delaying the bands...
 Leaving bypasses open to gather bans is a success strategy.
 For real.
 People, even when you look at the public side, they start selling a cheat.
 It starts being recognized like, this is the cheat that's being used now.
 Let's buy it.
 Just wait a couple of days.
 Let them buy it.
 Ban them later.
 Just more guys who get into ban lists, the better.
 Fake the detections when needed.
 There was this one site, I'll talk about it as well, CFF in Russia.
 They are really hard in paranoia.
 They required a citizen ID from us.
 I talk about that.
 They required a Skype call.
 So I had to hire a Russian snitch who actually did the call for us and provided the ID and the VK account and the history of cheating.
 But he was willing to do that, and he got money for that.
 And there's a lot of things like that that happened over the past couple of weeks and months.
 And bandwaves are one part of it.
 So when CFF did give us the hack, it was hardware ID locked, so it was used only on one computer, we had to use anydesk to connect to the computer of the guy who actually bought it, do the OLE debug, and see what's actually happening within the cheat and what vector they are using.
 Funny thing was that when the guys found out after the bandwave happened.
 They removed the part of the code which was a real problem for us, because they were abusing user mode within Windows to hook on the battle.ai and the exploit within the anti-cheat itself.
 But they thought that's what we detected, which we weren't able to, and you're not able to most of the time. But they advanced and removed the cheat, and we didn't need to do anything, even though it would stay undetected for a while. We were hooking on a certificate that they had.
 Using delayed bans is a big part for guys who are testing cheats.
 Now, when you're a creator of the cheat, you're trying to find bypasses, scripts, vectors that you can use to make it viable. Delayed ban means, so whenever somebody uses a vector that has already been detected or found as usable, you use a delayed ban. Just randomize it. One to three days, one to seven days. He creates a hack, starts selling it, and you ban it later. And it's perfect.
 Just the basic thing about obfuscation. Waste time for the creator of the cheat.
 Make them think, make them paranoid, so they work a lot more on what they do and spend time on unnecessary things.
 You have to be really careful about false positives.
 They do happen. Be ready to use customer support, be mindful and every case that you ban.
 Be sure that you're doing the right thing.
 It's better to be safe than sorry.
 When it comes to banning, there are loads of ways to do it.
 There are time-based bans, permanent bans.
 I know a lot of games based on the exploit, or whatever you do, they use time-based bans.
 They give you time to cool off.
 It wasn't the option within the DayZ because of the bounce back rate we had.
 As I said in the beginning, we had a bounce-back rate of 76%.
 For people who are cheating, they'd rather stop playing than stop cheating.
 So, for us, permanent ban was the option.
 We ban a license, usually.
 Now, when banning, and when you were looking at the couple of the first slides, and types of cheaters like sellers, wannabes, cheaters who buy cheats, and griefers, and vandals.
 Vandals are a big topic because they...
 Even though it's funny to look at the Twitch stream and you see explosions everywhere and a guy running with those arrows around his body, it creates a different perspective on the game.
 And griefers don't limit themselves to the game.
 We have personal attacks and things happening that actually involve law enforcement.
 These vandals need to be stopped, and in our game we do it through hardware bans.
 So we identify the hardware ID, which can be spoofed like anything.
 But we do it in a really clever way, which I will not talk about now.
 And we ban the guy in a really complicated way.
 Even when he is spoofing the hardware ID, spoofing the license, using a different license, different IP, we're able to find a correlation between the data.
 They have patterns that you can detect.
 So those are the repeated offenders who want to damage your game.
 And it's really important to get them out of the picture.
 When you're talking about cheating and the story of DayZ, when I started this, it was January.
 We had a big problem with cheating in-game.
 It became insanely huge.
 The only thing you would see in the forums was like, cheaters everywhere, nothing is working.
 Just goes on the game.
 And when you see that, you know what's important and the first thing that you should do.
 You should focus on that and make it not a thing in your game.
 Now, when we implemented the agent, the rate of cheating has slowed down to something that we are able to contain.
 And the data suggests that at most one and a half percent of accounts, as seen in the band data, are usually cheaters.
 Even when you count the active ones that you know are cheating, but you weren't able to find the case.
 When you're fixing the problem, there are loads of people that need to get involved.
 We're talking about legal, production, hiring dedicated staff, and even cheaters in the community.
 When it comes to legal, when you saw the revenue numbers that are happening within the cheating sites, taking down the sites offering cheats is something that can be done.
 It sometimes doesn't happen the right way, and they can move really quickly when they have reputation and money to cover their sales and their assets.
 Now, when it comes to legal and how do you do that...
 So a lot of people within cheating business go corporate.
 So they are usually tax frauding.
 And it's a big part of what you can use within legal to get on their backs and get them in jail.
 Certificate use.
 Now, when I was talking about memory injection drivers, and since we disabled test mode of Windows for uncertified drivers, they have to use certificates.
 They buy them.
 We can revoke those certificates through certificate authorities for fair use.
 and made them just pay more, or actually use that within the case for legal.
 When I was talking about griefers and vandals, there are a lot of things that happened over the past couple of weeks in regards of personal harassment, DDoS attacks on our service, and it was a problem because we made it personal. Make focusing on your game inconvenient for creators and let them move on to other games.
 It's important to make the cheating thing as hard as you can, so that the guys who are actually trying to make money off you are not able to, or it's as hard that either their skill set is not sufficient, or the time investment they need actually doesn't return back on the money side.
 From the production, highly dedicated staff.
 That means programmers, community managers, and cheaters.
 Now, when I'm talking about cheaters, I mean people within the community who are part of cheating community and can snitch for you, buy you cheats, send you stuff, involve the community through reporting.
 When you talk about dedicated staff, it suggests that on the engine level, you focus on authoritative servers, especially for multiplayer games, which is what we are talking right now about.
 and focus on network and the controller within the engine.
 For community managers, there are three levels of infiltration that we are using currently.
 We infiltrate hack providers, sites, acting as an unknown user and the good guy who's just trying to buy a cheat.
 We're infiltrating hacking forums where the private communities reside, and we're acting as a.
 nasty hacker, a vandal, and we're impersonating ourselves within the community, gathering the reputation, getting the connections, making friends.
 That's how you get to the private sheets and the exploits, which aren't mentioned anywhere.
 When it comes to infiltrating the private communities, that's where the reputation really is needed. You need to make fake identities, create fake people to get within those communities.
 And they're really private. We're talking about three to four guys.
 who've been with each other for years, and they usually don't let anybody inside their group.
 So we have to bleed some exploits to get into those groups, and once you're in, you usually stay there.
 Timing is really important.
 When you infiltrate a community, as I said before, delayed bans and ban waves, don't just start banning immediately when you find out an exploit or any problem within the game.
 Wait for it and just gather some bands, get some data, be analytical about what you do.
 When it comes to community, I already said, make friends.
 I have a lot of snitches within the community who report things to me.
 I have some really friendly relationships with them, and they've helped us a lot when it comes to investigating, identifying the problems that we have, and the exploits that the guys use.
 We closed eight of those exploits within the last month just because of snitching.
 That's a good outcome. We're talking about expanding the system besides the NTG that we use, besides the engine changes that we're focusing on.
 rewriting the network, rewriting the controller, creating an authoritative system within the game, making the prevention layer work accordingly.
 We're also well thinking about, let's make this public.
 Besides snitches and communication through fake accounts, let's give the public, cheaters, an opportunity to report something and get paid.
 It's still in the making, but we intend to introduce a public reward system for the people.
 who are willing to help or just find it really interesting to create cheats through servers which have disabled protection. So get those guys to focus on creative cheating and choose one, get extensive logging on those servers, and get those exploits found.
 There's a risk to me made there, of course, but I think...
 What it actually means is extension of what I said before, making friends and get those people involved within protecting their own game that they have invested so much time in.
 Get public report system out, either through email or an application or web, where people can report stuff they found, a video, a cheat, and have your dedicated staff go through that, identify things that you haven't known about before.
 and get into those communities through means necessary.
 Now, there are lessons to be learned besides what I talked about so far.
 Try not to make it personal. I made a mistake before.
 I was taunting the guys on Twitter and different social channels, and they retaliated.
 And it's not only retaliation within the money side, cheating side, or...
 They made it basically personal on their side and went on a revenge streak, which means personal abuse and other things that happened.
 So don't retaliate, don't taunt, and beware of the repercussions that can happen.
 Now I'm going to ask you a couple of questions, or you can ask me questions, I'm not sure which I'm going to start with.
 How much time do we have?
 I'm not sure.
 Ten minutes? Okay. I'm going to leave you with open questions.
 Now, who wants to ask a question?
 Okay, can I get a microphone there somewhere?
 Just raise your hand if you want to ask a question.
 They wanted to get it recorded, so I'm supposed to wait for the microphone.
 Yeah, it's going to repeat it.
 Just raise your hand if you want to ask a question so they can see where to bring the microphone.
 Hi. So ruining other players' time is horrible, but what do you think about newer companies that are just throwing cheaters to a different server silently and just leaving them there to cheat themselves to death or something like that?
 Yeah, we actually, since we don't have a single point of contact within the client, you have a server browser, so you can connect to any server, it wasn't an option for us.
 When you look at Guild Wars and games which have made the obfuscation for cheaters really viable, I think it's an option that if you have the game that can enable something like that, and you can hide it between a layer, it's something that you should use for sure.
 Like, put them somewhere, let them play.
 It's something that we did, we created.
 cheater servers. And it's really funny when you log on that server, things that happen there, just amazing. Like the spectacle, cheaters fighting against cheaters, like shooting insane bullets, tornadoes running all over the map, cars that are ten times bigger. It's just like amazing. So yeah, if you get the chance, for sure.
 Hi, how do you think the cheat market evolved with the rise and development of the free-to-play games, which surely brought many more players into the online gaming?
 Do you think this evolved and how did it evolve, the market?
 The market itself.
 Okay, so when I was doing the revenue report and the numbers that I've shown so far...
 I was trying to go through the people who actually went corporate and see their tax records and government official sites, see how much tax they actually return, how much money they make, and I was extrapolating the data, trying to compare it to other different sites.
 Since I've been doing it only for a short time and focusing on that for only really like almost maybe a year at the most, I've seen an increase.
 However I wouldn't say I was there in the past.
 and there haven't been too much data on it in general.
 But currently, I would say it's a multi-million dollar business and we see companies in the future, I guess mobile and in general cheating for competitive games and games which have a asynchronous multiplayer, synchronous multiplayer or leaderboards.
 There's a real problem there.
 Because if it's a hook on your game, if it's what's supposed to be making it fun, the competitive aspect of the game.
 You need to focus on that.
 And there are ways to do it on mobile.
 There are ways to do it on PC.
 It's something that the person holds and can do anything with it.
 So you can expect all the things in the future.
 As I said, from hardware hacks, I can see an add-on for a mobile that enables you to root your phone and just root it out and get access to the memory and all the processes running and hack the game even on mobile.
 Hopefully that answered the question.
 Perfect.
 Any other questions?
 Yeah, so do you see an interest in industry-wide efforts, maybe collaborating between different studios, seeing best practices, sharing the name, well, maybe not the name of the snitches, but something that goes beyond just one company, each company doing its own effort in one side, and do something a bit more organized, industry side?
 So, it's basically the reason why I'm here.
 to share the data, share the experience.
 And I would like to see something like that.
 Although even when I was making the presentation itself, I understood that I didn't see, I think I, I don't think I can show it.
 So there was a, like a Kickstarter that happened for a couple of cheaters.
 They started a Kickstarter to get funds to get here in the room and troll me.
 They didn't get the funds, so they didn't go.
 Hopefully they are not here.
 So I was really limiting the information that I was sharing through the presentations, because I know that $500 that you need to pay to see the presentation, it's enough for them and they make big bucks, and it's worthwhile for them to see that and listen to it.
 So most of the conversation should happen in personal space, so anybody who wants to ask me questions after the presentation, it's more than welcome.
 So any cooperation is welcome.
 Within the cheating and becoming a multi-million dollar business, it's something that we should consider for sure.
 I have a question over here.
 Oh yeah, perfect.
 So you're hiring people from the community to basically play James Bond and spying around, but does that make you afraid of double agents?
 What are you doing against that?
 I usually, so when I get into the community and infiltrate it through either one of the dedicated staff or me myself, I usually cross-check.
 And so I have a couple of snitches. I cross-check their information, cross-check their data.
 They usually don't know about each other. I found a couple of liars. I called them lying.
 I didn't call them out on it because they kept supplying information.
 But yeah, double agents is a real thing. CFF, the site that I mentioned before, they actually prepared a special site that only appeared for any of our IPs that we use within the VPN.
 And we thought the cheat was offline, because there was no talk about it.
 And even when we contacted them with the fraud account, the fake account, they gave us a different cheat.
 So yeah, the paranoia is real, and double agents are a thing.
 So cross-checking and getting within the communities from different vectors is important.
 Yeah?
 One over here.
 Have you ever thought about baiting cheaters as in releasing your own hacks or cheats and then just banning them?
 Yeah, I actually part of the presentation mentioned like leaving the bypasses open.
 When I was at that point like delaying bans and and doing that sort of thing I was thinking about even building the reputation is based around releasing hacks.
 So yeah, it's something that I considered, but I'm not going to talk about it too much.
 I'll leave it in private.
 Okay, any other questions?
 Anybody?
 This is an extension of the double-agent question.
 What happens when your servers are infected with non-ideal code?
 I haven't been able to confirm any suspicion regarding that so far.
 There have been whole XCs that they built within the DayZ, where they were saying they infected servers and such.
 But I haven't found a case of that happening.
 I think it's a real possibility. All of our game is actually running on Windows, the dedicated servers. It's like 2,500 of them or something like that.
 So there is a possibility of human error, of software application layer error, of getting there and doing something really nasty. There are a couple of hoaxes that happened months ago, and I've seen it on other games as well.
 When you have a network engine within the game, you need to transfer files, especially for moddable games and synchronization through Steam network and getting the mods downloaded.
 And there are always vectors to abuse that, like even sharing malware through open channels.
 And even the server can be used as a rootkit, in general sense, for the clients running, and to transfer data to those clients of running malware, creating botnets, slavenets, and such.
 So yeah, it's something that I consider, and I've been focusing on security of the servers for a long time.
 I've been in SRE for 10 years.
 So yeah, I'm keeping an eye.
 Okay, any other questions?
 So I'm wondering, why are you giving this talk publicly?
 Shouldn't be this kept private between companies so cheaters don't know how you're trying to find them?
 So when you look at the data they shared, I tried to limit it as much as I can.
 But I wanted to be here with the developers to share some of it.
 But most of the things that we've done in the last six months, I'll be keeping private.
 So the data is real and it's recent, but the methods, as you have seen, I've limited it to just a couple of pointers.
 If you're going to do anything like we are doing at the moment, I've gave pointers but haven't said the real thing.
 So if you're a programmer, coder, and do it in TensorFlow, you can find it, and you can find the pointers and get in it.
 But yeah, I've limited it to as less information as I can, focusing on the data, on things that should help you get good at the game of playing the cat and mouse with cheaters, basically.
 Okay, any other questions?
 Yeah?
 Thank you. Do you use any ways based on statistics?
 For example, find AI bots with a lot of headshots from sniper rifles or something like that?
 Yeah, it's a really good question. So, when I was talking about sanity checks, those are basically based on statistics.
 Now, we haven't extended them as much as we would have or could have so far.
 But I'm really working hard to get those things moving and get things like you mentioned right now in the game so I can extrapolate the data and get it within the anecdotal evidence for banning lists.
 Any other questions?
 Okay.
 Have you been in false positive health yet?
 No.
 We got a couple of false positives that were confirmed.
 There was one outbreak, but I would say it's like in tens of bands, and we contained it.
 So yeah, false positives hasn't been much of a problem for us, so far at least.
 Good for you.
 Yeah, Eva thought about hiring a cheater, not as a snitch, but as a game developer, because they seem really into your game and know your game really well.
 So I actually considered it. We got a couple of CVs from cheaters, even the vandals that I mentioned before.
 No, I wouldn't hire a cheater.
 The reason is, we talked about it a bunch within the office with the guys.
 Now, the problems that I see, like, he's been an abusive person for a while.
 It's just a leak that I can't consider as a real help.
 It's a problem and a risk.
 And the help that I get from them, from snitching, perfect.
 I wouldn't want them in company, for sure.
 So, let's say you have a lot of cheaters in the game, and do you think that by communicating upfront some of the consequences come from cheating and the seriousness of that?
 I'm sorry for the microphone.
 Or would you rather keep it low profile so that other people might not be tempted to go into the cheating and go into, become more aware of this community that easily provides cheating?
 But it's fine, I understand the question now.
 We haven't been too much spoken about the consequences of cheating because we don't have much tools besides the license ban that we can use, and we haven't expanded on the idea yet, but there is something to be made out of it for sure.
 Either through sharing information or making it public.
 I'm not sure. When I look at the tribunal systems within some of the games or things when community gets to decide what happens, maybe there is something in the public spectacle of getting that out that can lower the initial number of cheaters or people who are willing to do that.
 But I don't have the data from our game. And even though I have spoken to a couple of other guys from companies, those are usually private data, so I can't share that yet.
 Okay, any questions or are we out of time?
 Even though we have questions, we have to stop.
 Okay, perfect.
 So, thank you guys for coming and if you have any questions, you can find me outside and we can talk a bit more.
 Thank you.
