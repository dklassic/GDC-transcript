Hey everyone. My name is Alex Lehman. I'm an art director at Riot Games and welcome to the first ever Tricks of the Trade Talk. As I said, I work at Riot Games. I get to work on League of Legends which is amazing. In my career as an animator I worked anywhere from commercials to feature film and now in games. And I'm going to be your host today.
 Left and right of me you see an amazing panel of animators and they're gonna share tricks that really made a difference in their career and the goal is that these tricks are applicable to your work tomorrow.
 You can go home and immediately try them out.
 So what is the Tricks of the Trade talk all about?
 You know, I always wanted to have a talk that's full of these nuggets.
 You know, where you just come to the talk and you get all these wonderful nuggets that you can try out the next day.
 Because we as an industry are a pretty young industry.
 Games in general is a couple of decades old, right?
 And animation in games is even younger.
 And we're all still learning.
 We're sharing all this information.
 And we thought, hey, you know what?
 By us sharing our tricks, hopefully you will share your tricks with us.
 And then we get some really cool tricks that we can take home, too.
 So if you have a good trick afterwards, please approach us and let us know about it. And then as an industry as a whole, we hopefully turn into this awesome animation beast that we can be. Okay, cool. How does it work? Well, simple. Six panelists, right? Each of us is going to present three tricks.
 And that means for the sake of time we really got to book it.
 Okay? So for you, here are a couple of tricks to get the most out of it. Don't worry about taking notes. Just enjoy the ride. If you want to look back, just go to the GDC vault and then you can frame by frame it. And with that being said, I'm going to start us off with our first three tricks.
 So when I started out and switched from feature film to game animation, I wish I had known this one. This is how I did one of my first animations. So this is a character set in the game League of Legends and I started out in a pose A and I hit my hit frame pose B and I go back into A. And sure enough, this is boring, bland, repetitive. But I see it time and again in a lot of games that people do this. It's actually pretty easy to fix.
 all you have to do is you have to find your C. Now C is actually this one pose where you tell the story of the character. C is what makes this character completely unique. How heavy was the punch? How high was the jump? This is actually pretty easy to find out and here we see it in action.
 Both of these loops are 45 frames long, so they have the same length.
 And on the left side you see a very repetitive blend between A, B and A.
 On the right side you see the A, B, C, A.
 And this is unique. This is Z.
 Only Z is attacking this way in our game.
 And it makes it really easy for us to find character in the animation.
 So the next time you work on a loop, find your C.
 responsive animations. Working on a game like League of Legends means that the moment a player hits a button you immediately want a reaction on the screen. So how do you do that? I want to share two small tricks for that. The first one is that I learned you don't need a long blend.
 like my first blends were like 7, 10, 12 frames, didn't work out. It's not fun. Actually I will show a two frame blend in a second. So if you are starting out in game animation, you know, feel free to cut into your animations. You'll be surprised what you can get away with.
 The second one is something that at first made no sense when I learned it. And that is that we put the anticipation at the end of the cycle. So this is how it works. The player hits the button. Immediately we fire off the arrow. And then the anticipation to put up a new arrow. Now this is what happens in the player's mind. The player sees, oh, he put up a new arrow.
 Well, I guess next time you can fire it off immediately. It is actually a mind trick that works really well. Let's look at that in animation.
 in motion. So here's my two frame blend and the anticipation is at the end. See it again. There's the two frame blend and then the anticipation is at the end. So the next time you have to work on a very repetitive animation, not repetitive, a very responsive animation, I highly recommend that you try it out to put the anticipation at the end and you see what you can get away with.
 Okay, trick number three. I was working on howling abyss which is a map in our game and I had to animate these simulated, these chains so I started simulating them because they were falling down into the abyss. Pretty complicated stuff. And that leads to very dense motion data. This works by the way also for motion capture. The problem is that this doesn't loop, right? You can't, the first frame and the last frame are not the same. So what do you do about it?
 Well, there's something that's called animation layers in pretty much every piece of software, but most of us use Maya, where you take all the controls and you set a key on frame number one, and you middle mouse drag it to the last frame, and you set another key. If you do that, then over time, Maya will blend into its own pose again. Let's look at that in motion.
 Here we go. So on the left side you see the simulated loop that came out of simulation and there's clearly a hitch. On the right side you see it blends into itself. This took me about 30 seconds. So next time you have to deal with motion capture data or dense animation data and you want to loop it, use animation layers. Okay. With that being said, those were my first three tricks and I'm handing it over to Simon Unger.
 I apologize. Hey, everybody. I'm Simon. I am from Phoenix labs. So for my first one I want to talk about force. So often in animation reviews we hear things like an animation doesn't have enough weight, it's not powerful enough. Instead I find it easier to talk about force and inertia. A character doesn't change direction if they don't apply force in the opposite direction. For example, character here, a foot contacting the ground, pushes up through the legs, alters the rotation of the hips, the spine, the arms, legs, it all kind of works down from there. If you watch this clip, it plays awesome. Watch how the center of mass is being redirected when the legs come out in front of it, apply force in the opposite direction and influence its inertia.
 if you think about how your current gameplay character works, it likely doesn't happen this way. This same thing can be applied to lifting a heavy object or a light object. The amount of force being applied in a specific direction implies weight. We know from this image the boxes are light because nothing in his pose is really communicating force or anything being applied to oppose gravity. Broken lines of action like this sort of communicate relaxed muscles and very little effort.
 On the other hand showing extreme weight requires communicating a lot of force being exerted. All of these lines of actions are support those opposing forces. Keeping this in mind when animating or even just providing feedback and throw that into your language and into your tool kit.
 My second one. Use metrics for focus iteration. No matter how big your animation team is, it's always a challenge to figure out how to use your development time effectively. When you're planning to focus your animation work and where your team is going to work, letting data do a lot of that leg work for you.
 Getting metrics on which animations get played a lot or a little in entirety or not at all, it's quickly going to generate a priority list for you on your team.
 lot of times the 80-20 principle applies here. 20% of your animations get seen 80% of the time. Make that 20% awesome and it will significantly improve the perceived fidelity of your stuff. The other 80% shouldn't be crap, but if you only have a limited time for polish, that 20% is where you really want to go.
 is handy when you're retargeting or reusing animation sets for different characters such as a male set for a female set.
 Typically you can get away with replacing only about 20% of that and you will have a female set or an injured set or whatever.
 If you don't have access to metrics or the programming help to mine those, there are analog ways to do this. Try filming people playing your game, making note of which animations get played the most and which ones you rarely see, how people are interacting with your game and pick out the most commonly played moves.
 Another method is to think of your game in concentric rings.
 In the center of that is the target or core of your game.
 Does the player need to capture the flag and return it to the base? Then running and capturing the flag is your 20%. The opposite side of that, defensive moves attached to that are probably live in that. But player celebrations when they capture the flag probably live outside of that and don't need as much polish. This also applies to other areas of the game. UI, oops.
 Oh, no. What happened? Sorry. It's not going back. There we go.
 This also applies to other areas like audio, UI, effects, everything. All the stuff attached to that core, the wind condition, the target of your game, that 20% needs to be polished to a T. Everything else you can spend a little bit less time on. Number three, head movement is more important than hip movement. Most character rigs use the hips as a top node controller while for subtle moves this is okay.
 broader stuff, this creates a very strange fulcrum point for your character. This becomes worse in games. We use a ground node for a lot of times blending for characters and that fulcrum point becomes even more exaggerated. You can see this in action here. When my video stops. Is it loading? How about Christian's talk? There it goes. So I'm going to talk about Oh, no. It skipped it. There we go. My video is too big. No.
 There we go. So here you can see it in action. Character change in direction. You can see where that fulcrum point is being applied on the ground. We're getting that erratic sort of head movement. Most living things have evolved a very complex chain of stabilizing mechanisms to stabilize eyesight for fight or flight situations. We are sort of in a sideways way used to seeing things move that way.
 When anything breaks that we dip really sharply into the uncanny valley. So if you think of any time you've seen maybe a crowd character change direction sharply or a CG character in a film suddenly realize it was very CG, chances are some erratic head movement was a part of that.
 great example of a step in the right direction. This little clip that was on Twitch from Paragon, you can see how they're sort of getting that, the legs out and trying to change that inertia, keeping the head kind of very steady. Again, sort of combining that use of force and steady head movement. And next So place a higher priority on that. Track your arcs, track your head. And how you blend between animations because ultimately our goal as animators is to make the character look like it moved, not like it was moved. And next we have Amy.
 I'm going to try to make this as quick as possible. I'm probably going to read. I've been in animator for 21 years now. Working starting off in feature film on 2D animated films. Now I'm in gaming and fully enjoying it. So let me move on.
 here we go. So being asked to bring in what I think about when I'm animating, a lot of the things that I bring in is obviously from the 2D background. These examples right now, the smears, help show the illusion of motion.
 And I find that, like, you know, sometimes you get into a point where you get strobing or staggering. How do we bring this into 3D? So smears and multiples bridge the gas, bridge the space between the gaps of slower frame rates. Without them, the viewer sees empty spaces that cause strobing during playback. This helps maintain fluidity even though it breaks the volume of the character. So next slide.
 breaking it again. Now here is real time. You might say to yourself, okay, how does this apply to realistic characters?
 Much more than you think. Biology allows for some drastic adaptations to movement needed in the most intense situations, be them repetitive or immediate. Working with limited or complex rigs, we can get stifled with maintaining the beauty of the mesh. Perfect poses and lack of deformation equals uncanny valley. Sloppy is sometimes better.
 Like a moving hold, even the most subtle irregularity adds life.
 Embrace adapting your keys to the motion you're creating, or your animation can be stiff.
 All right.
 Let's move on.
 There we go.
 Here is an example of breaking it in real time, pulling that character around.
 Now, this is all hand-key animation, but it's applied in a 3D sense.
 So you see really a lot of that pulling and pushing and stretching.
 It really lends itself to the feeling of the motion.
 If I did not include this, you'd still have the impact moment.
 You'd still have some of the weight.
 But this really just makes.
 it read better. In some instances it makes it more enjoyable to see. So tip number two, keeping track of arcs. So this is really quick and dirty in Maya. It's the edible motion trail. Whenever I do walk cycles or run cycles, I have a tendency to really do the contrapposto poses during passing. So I really get that hip and shoulder access moving around. That has a tendency to...
 this technique will show me whether or not my head is bobbling too much really quickly and it can also show me the subtlety of where things are going a little bit off track.
 All right. Next. Again, edible motion trails. Just to keep really quickly to look at the arcs of motion in action like a sword swipe or just general movement arcs in arms, legs and planting motions.
 So these can be memory hogs. I suggest you turn everything off when you're working with them. You can also turn the key frames so you don't see the actual key frames being marked on the line like in this example. Just to keep your memory going. But it's a quick check method that I use.
 that's not really dependent on making anything specific.
 Lastly, I've got a simple block in and layer example.
 So to just bring it down to a simple level, I just used a cape.
 So basically, I'm going through and I'm setting key frames, about four key frames on this, just to get the idea of the base motion in one axis.
 Then what I do is I select, let's see here, there we go.
 Then I select the lower bones, and just for a quick block in technique, I just drag those key frames down the timeline to offset them, and voila.
 you've got a little bit of instant overlap. I find that this is, again, this is really for the block-in process. So to add a little bit more complexity to that base movement, I go into layers and I just basically select the bones on each line, on each edge of the cape. And just adjust them, again, using two middle frames. Just pulling those around to make that cupping shape.
 And then I move on to do the next.
 I do another key frame to kind of pull that fluff up at the end, create that shape.
 And then voila.
 you've got overlap and follow through.
 And this block in took just under four minutes to do.
 So really quick way of running through and doing overlap and follow through.
 This can also be applied to other chains that have major overlap and follow through.
 It doesn't have to be just a cape.
 So another thing is when you're going through layers, like in this, especially in this method, you use smart bake. Because otherwise it will bake everything. But other than that, that should be it. Yes. So that's all, folks.
 Thank you. All right. Hello, everybody.
 I am an animator at ILM. My name is JD. Been there for 12 years.
 And these are my tips that you will hopefully like. So first off, we do a lot with CG shots and live action shots. Handheld camera stuff is very important. So in order to be consistent with live action shots and CG shots, you want to add hiccups and hand held imperfections in your cameras.
 For that I have a very simple thing. So you have your camera set up that could be layers or how are you going to do it with nodes. And usually I do six or eight or 12, every six or eight or 12 frames I set a key on the X and Y rotation channels. And then you do separate rotations. X and Y are different. Then you take the Y rotation, move it over by three frames and then you have an organic overlap so the peaks are not on the same frame.
 you do that and then you can have, you know, if you have a static camera, get a bit more wavy, a bit more exaggerated, a bit more subtle. You can put that in layers for shake, you can give it some flavor if you have a car drive by for imperfections on the car. Or if you do something on a bigger shot you can do full on handheld for POV stuff. You can go into action mode if it's a camera track to a chopper or just general handheld.
 Just keep it a bit alive and not so CG.
 second one is blur. So a lot of times live action we have a lot of crazy action shots where stuff is always moving all the time. It's very confusing. Gets on your nerves. So what you can do is you can artificially slow down certain elements where you can say at this point I want to see the face a bit better. So on the left always moving, always blurry. On the right I slowed it down just a bit here for the guy's eyes. You can do this on fangs, on claws on facial expressions anything that's a specific story point or emotion and that way you can guide the audience tell them now you saw this is important and now we can move on.
 Next one is act it out, sound it out. That's for me as a general reference point when I want to check the timing of my animation. So if I do a play blast I act out what I see in the play blast exactly what I see. Not what I think it should be doing but what you exactly see. So if it's something too slow or too fast you will feel it, it will feel wrong. But it's a bit tricky because you might have creatures, might have a dragon, something that flies around, you can't really do it. So a lot of times I just sound it out. So you can have a guy that.
 trips and falls. You just do over and over. You sound like an idiot but you do it over and over. You have that reference that timing in your ear. You do your play blast. You make that sound. You check it with your play blast. If it's off, you're wrong. Or you record yourself, put that into Maya and then reference that sound file as a general guide for reference.
 or you can use music. So whatever you want will be okay.
 So next up, that's Billy. Thank you very much.
 It's playing.
 awesome. That's me. And guys, you got to forgive me because I am freaking out. This is so cool. Look at this panel. Look at the fact that this is happening. I don't know what to think. So we're just going to jump right into it.
 Trick number one, simple retargeting.
 So there's lots of times in mocap where you get the data and you have to wait for it to be processed, wait for it to be retargeted.
 And at Sucker Punch, we always try to get stuff from the volume into the game as quickly as possible.
 So a lot of the methods surround that.
 So I found that you can actually go and take your animation and just take the mocap data and then pick one or two frames where the registration points happen for different characters, different sizes, and that actually will retarget the animation very effectively.
 Let's see, is it gonna play automatically?
 Awesome.
 So here is just normal portion character.
 super human character. And just going through finding the key registration points. Posing out the character on a different layer. And then there it is. Retargeted. Cool. So here's another thing for clean up data. I don't know if anybody here is familiar with Mirai. It's an old school. Yeah.
 All two of you. That's awesome. So I'm kind of like, I'm an old school guy. So one thing that Mariah did really well is it actually had the ability for you to plot out your motion and then just attach IK to that and do the clean up through the curves themselves. I know that there's the motion trails that you can use, editable motion trails. This is a trick with motion paths.
 which is a bit more responsive. And all I'm doing is taking the animation that had a hitch in it and going through and attaching a curve on attaching a CV on each of the key frame, key frames and then attaching my IK to that curve. And saying a key on each of the frames on the motion path itself.
 And then from there, it's really quick and responsive to go through and just clean everything up in 3D along the path itself.
 And another method, another thing that this is really good for is if we have multiple characters, multiple people that are acting on a mocap stage, and we want to make sure that they stay attached properly, and the data is like dense data that comes in from the stage, it's really easy to clean it up really very quickly using this method as well.
 And you just get rid of the curve.
 And now it's cleaned up.
 All right.
 Last one.
 Fresh eyes.
 Everybody, you know, you want to get critiques.
 You want other people to look at your stuff.
 And the main reason for that is it's a fresh look.
 Like you're looking at something looping over and over and over again, and you kind of like lose your objectivity, and it gets a little stale.
 So what you can do is one thing I like to do to kind of see the animation with fresh eyes myself is just play blast it backwards and watch your animation in reverse.
 Another trick is in Maya, just hit the 7 key so the lights all go out and just look at the silhouette of your character.
 You combine both of these and you really get some good results and it's kind of like a neat cheap way of getting fresh eyes on it. Now I will hand over the stage to Jay.
 Hey guys, I'm Jay Hossfeldt, lead animator at Epic Games.
 Currently working on Paragon.
 And we are hiring animators, so find me for a business card.
 All right, so I've been working in games for about 20 years.
 So a couple of my tips kind of deal with how animation integrates into games.
 So first tip.
 is so Brad Clark from rigging dojo showed me this. It's an amazing technique to pull out animation from dense data, whether it's mocap or it's just baked down animation for whatever reason.
 in the past I would take one of these animations and start deleting keys. The keys I felt I didn't need. And you end up with this manageable key framing animation system. So what you do here is you set a new layer with all your controls. Set it to override. Set that weight down to zero so you see what your first layer is doing.
 And with all your controls selected, just go through and key the poses you want, like the contact points, some of your key poses.
 Then if you go back, set that layer back to one, and you can see the new keys you set on that top override layer, you can now see the new animation you created based off that dense data or that mocap data.
 and so you can sit there and go back and forth and rinse and repeat and kind of fine tune this animation and the whole time you have that untouched mocap or dense data on your base layer to always reference. So this drastically changed our pipeline on our project. We use this a lot. And so here I'm going back, you know, making adjustments because that first part looked a little swimmy. And this can be used on, you know, blending to new animations, you can bring in new animations on layer zero. Next tip is so on Paragon in many games in the past we've had a restriction of melee moves or reloads need to be upper body only. Start at spine one. But what this does is it really separates spine one from the hips and it looks pretty ugly. But it works for game play design. It makes it responsive. But I didn't want to settle for this on Paragon. So I was looking at what we had in the anim set. And we had the strafes like a lot of games have the run right, run left, run forward, run back. So I took those same assets, didn't have to create new ones and just put an offset. Let me hit play here.
 So if you see the video on the right, I'm using those same four animations but I'm using the root rotation to offset it so that way all four strafes actually still keep him running in the same direction.
 It's very hard to see. It's very swimmy. Can you guys tell what's going on? So same four strafe animations but now you can see his hips have the ability to swivel right and left even though he's running the same direction. And so combine that with the upper body animations for swings and you can see here now the hips play a little nicer with the upper body. So course you can go on and add additive and whatever to make this even better. But it's just a cool kind of cheap technique to make that feel a little better. And trick number three.
 So this is something I've seen new animators when they come in and start working on games. They're told by programmers, like, hey, your animations, they're running forward, you need to have them run in place. And I've seen exporters and or animators just straight up delete that forward motion curve.
 And so they end up with something like this. And it looks correct. It's running in place.
 Run looks good. It loops. Whatever. That's actually incorrect. What you want to do is here's this forward motion curve. It looks like a linear straight path. But it's really not. So what you do is you subtract what the game is going to add to it, which is linear distance over time.
 You can put that on a layer or put it on an offset node. And what you'll see is once you subtract.
 that you actually still have some nice forward and back motion on your hips. And it adds that texture to the run forward motion. And it helps your characters not feel so linear when they're running forward and you get that nice natural motion.
 It works even better on characters that limp or might have like a kind of a stutter in their step. And that's going to pass it back to Alex.
 Like I said, this is the first time we've ever done this.
 And this is also the first time we ever stayed under 30 minutes.
 That means we have one more minute to run through some speed tips, because there were some tips that we had that we couldn't fit into the talk.
 we're 18 so far so we're going to try that. By the way, if you like this format, if you think this is a really good idea, please vote for it or give us feedback. Let us know what was good, what was bad about it and we'll think about it if we ever bring this back. But speed round, okay? Some crazy tricks that didn't make it into the talk. Speed tip number one, I learned this from an animator at Dreamworks, it blew my mind.
 Body language 8 out of 10 times precedes VO.
 study some video reference. You will see that people shake their head before they say no or they nod and before they say yes.
 Whereas animators most of the time animate that at the same time. Speed tip number two. Who is next? Quick.
 So we see a lot about motion trails, tracking arcs and stuff.
 Sometimes those are really heavy, cumbersome in a scene. I like to sometimes just throw just a straight piece of geometry in the scene to use as reference, especially if you're trying to get track compound arcs like an arm swinging a hammer, you can track the elbow, the arm and everything along like a circle attached to the character and using that to unify arcs.
 So even if you have an item picker sometimes it's faster to just do a hockey press and release. So it's on G on my pinky. So it's nerves control is on off to quickly see the controller, select them, adjust the pose and move on. Okay. Bone chains.
 Usually bone chains seem like dangly bits, claws, ponytails, whatever. Bones equal distance. You can get just as good of an effect if not better from using the golden ratio spacing of the bones. Because as you can see on that chain reference, a lot of the cool curvature happens at the tip. Speed to number five.
 Put it in the game. Don't spend too much time in Maya. Put it in the game. Please, please put it in the game.
 learn to code. I'm not saying become a programmer but just learning a few quick scripts, some things like Python has probably been the most valuable thing I've learned in the last year. Start with something simple and like I tried to solve moving animation from a selected object on to a locator and back again and then just move on to more complex things.
 tracking arcs, two dry erase markers, one color and you track every frame, the control of the nose, the hand or whatever and you can see what's wrong, where is it popped, take the second controller, retrace it where it's supposed to be, reanimate it and if it's not your screen even better.
 Okay, sometimes you want to bring in an animation from another file to preview or look at reference in your file and rather than import a heavy rig just export out a limbic GPU cache of the animation scene, bring it into your file and you can spin around it.
 speed tip number nine, rotoscoping is not a bad word.
 It's actually a really great tool to learn complex body motion. This is a 13 second animation that took me eight hours and I learned a shit ton doing it. So next time just try something out. If you're a student, try rotoscope something. Don't put it on your reel but learn a lot from it.
 So the six to eight frames at the very beginning of the shot is when an audience will understand your shot, will understand the characters and geography and everything. So don't put anything fast for the first six to eight frames, it's confusing. Same thing at the end, during the last six or eight frames, add anything fast, it's confusing because we're expecting a resolution to that beginning and there is none.
 Awesome. This is a crazy one. For any lead out there, it's not about whether you like something, it's about whether it actually makes sense, if it fits, if it's quality.
 We always say we don't need to like anything. I don't like the color purple. This is a perfect room for Lulu, our character in our game, because she likes purple.
 So I as an art director don't need to like it. If it actually fits the game, then it is correct.
 So contrast. So when you do, it's a simple thing. Just to make it more organic and less CG. If I grab this mic, let's pretend that's 15 frames from my hand from here to here. Don't do 15, 15. Do 15, 12, 15, 10. Just always make it different.
 Also don't go from pose A to pose B back to pose A. You go A to B to C. So it's always different. Always different timing, different positions. Makes it more real, more organic and that's it.
 Thank you all so much for sticking with us. If you guys have great tricks, let us hear about it. Give us feedback whether this format works and whether you gain something out of it. Thank you.
