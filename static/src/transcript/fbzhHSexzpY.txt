OK, so today I'm going to talk to you about how I got my mom to play through Plants vs. Zombies.
And who am I? I'm George Fan, I like my steak well done, and my Magic card's rare.
And I'm the creator of Plants vs. Zombies. Thanks.
So this is my mom.
She's a non-gamer. In fact, I think the only game she might have beaten is Plants vs. Zombies.
Her favorite food is lettuce. I once asked my mom, hey mom, what's your favorite food? And she said, lettuce. And I said, really? You could choose any food in the world and you'd pick lettuce?
She said, yes. So that's my mom.
And she's destroyed quite a fair share of zombies in her lifetime.
because, as you know, you kind of have to do that to get through Plants vs. Zombies, which is awesome because prior to playing PvZ, my mom's idea of what zombies was was totally different from everyone else's.
You see, before my mom started playing Plants vs.
Zombies, she was watching my dad play, and at some point she apparently asked my dad, why are you killing old men?
So, I don't know.
I just, I just really liked that for a moment.
My mom thought that her son had made a game about killing old men.
And in case there's any confusion whatsoever, Plants vs. Zombies is not a game about killing old men.
So anyway, how did I turn my mom into a zombie destroyer?
There are many things that contributed to my mom's beating of Plants vs. Zombies.
You got strategy, pacing, you got game balance, consistent rewards, and unit design.
But if the tutorial hadn't been done well, and she couldn't learn the game.
then all the time spent crafting the other elements of the game wouldn't have mattered in terms of getting my mom to play through.
So today, I'm going to focus on talking about PVZ's tutorial.
The other stuff's all very interesting too, but that's for perhaps another time.
So why did I choose this topic?
Well, as game designers, everyone has something that they're passionate about or spend a lot of brain cycles on.
And I do think a lot about simplicity and accessibility, and tutorials kind of go hand in hand with that.
So why is a tutorial important?
Well, it's because it's what gets a player into the meat of your game.
A player is not going to enjoy minute 30 of your game if they don't get past the first five.
And they're not going to get past the first five if they don't know how to play your game.
That's why it's so utterly important, especially for games that feature new game mechanics, to teach the player in an intuitive and enjoyable way.
I spent an enormous amount of time thinking about how to make Plants vs. Zombies playable by anyone.
So it's, and it's no small feat because as you know, it's a strategy game at its core and it can get pretty complex.
So I felt like my mission was definitely accomplished when my mom, who like I said, barely plays any games, told me that she'd beaten the entire thing.
So today I'd like to share with you some of the techniques I come up with and give you a glimpse on how I like to teach game mechanics to players and using my most recently designed game, Plants vs. Zombies, as a source of examples.
So here we go.
10 tips for making your tutorials better, also known as a tutorial on tutorials.
Okay, first tip. You want to blend the tutorial in the game. So we're going to strive to make it not feel like a tutorial at all. You see, when most people think of learning, they think of something like this picture here, which for most people isn't fun and is kind of a lot like work.
which is why doing something like this for your main menu, which clearly separates the tutorial from the game, tends to be bad.
Do you see how unfun that second option looks?
You might as well put this on your main menu.
You might as well put this on your main menu if you're gonna say tutorial.
So that's why I go to great measures to make sure I don't have any sections in my game actually labeled tutorial.
The weird thing is games are kind of all about learning. I mean, you're discovering new techniques and adapting to new challenges. Games stop being fun once you've figured everything out. And they stop being fun once you stop learning.
So OK. So humans like learning, and learning is inherently fun. But most humans don't know they like learning, and that's why we must trick them. We have to make the player think they're playing the game and not the tutorial. There should be no indication of where the tutorial ends and where the game begins.
So here's an example of a bad tutorial.
First of all, it says tutorial in big fat letters.
Then notice the one out of six on the bottom.
That's six pages of info, probably five of which is irrelevant at the start of the game.
And with this tutorial here, there's definitely a distinction between where the tutorial ends and where the game begins.
It's kind of the virtual equivalent of this.
Remember when this was all we had to go off of.
And nowadays, we can seamlessly blend the tutorial into the game.
So why don't we?
Someone once said to me that they felt like the main mode of PvZ was kind of like a really long tutorial for the other modes in the game.
That's a pretty good compliment.
And even better compliment would be if I asked someone, hey, what did you think of the tutorial in PvZ?
And the reply was, that game had a tutorial?
I feel like it's what we should all strive for.
And to help you remember, I created this character, the Tutorial Chameleon, to help drive the point home.
So let's all remember the Tutorial Chameleon.
Because that's what really the overarching theme of this presentation is about, which is to teach players without them even realizing they're being taught.
It should be noted that even though I'm advocating not having the player realize they're in a tutorial, that's still very different than not having a tutorial at all.
Okay, which brings us to number two, it's better to have the player do than read.
Instead of having the player read what they're going to do, why not have them do what they're going to do?
The best way for the player to learn is by actually performing the actions within the game and actually playing it.
Plus, playing the game is just so much more fun than reading about it.
Let's take Plants vs. Zombies level one here.
We needed to teach a few basic concepts to the player, like zombies walk to the left in a straight line and peas shoot to the right in a straight line.
And we could have spelled it out like so, and put these messages on the screen.
But instead, we wanted to let the player experience it in a safe environment, like where the player could actually feel like they're already playing the game.
So what we did was we crafted this really basic level with just one type of plant, one type of zombie, the pea shooter, one type of plant, the pea shooter, one type of zombie, the basic zombie, and just one single lane where you could plant stuff on.
Here, all the things a player can observe are, like they can observe that zombies take damage while they're playing.
They can observe that zombies walk in a straight line.
They can observe that peas shoot in a straight line and that zombies take about 10 peas to kill.
And they can experience this all within the first level without us actually putting any words on the screen.
And so the player learns all of this by simply playing the game.
And we didn't have to explicitly tell them any of it.
Here's another example of where we wanted to have the player learn by doing.
Hopefully you're all familiar with the shovel in PVZ.
It lets you remove one of your plants so you can put a new one in its place.
There's a lot of history behind the shovel in PVZ and how we decided to implement its tutorial.
And I want to go through it all with you to give you an idea of how much care was placed on letting the player learn by doing.
Here's something we didn't want to do, which is just to put a message up on the screen that says, did you know you could use the shovel to dig up plants to replace it with others?
Because for something so early and integral in the game, we really wanted to make sure players knew of it, because a message like this is pretty easy to miss.
And we wanted to make sure they knew how to use it.
So I began looking for a solution where the player would actually pick up the shovel and use it.
So this was our first attempt.
We knew we were giving out the shovel around level 1-5.
And we also, coincidentally, knew we were going to have, we were going to want to have a minigame show up on level 1-5.
So why not have the minigame teach the shovel mechanic, right?
It's a great way to get the player to learn by doing.
This minigame here.
it placed a bunch of weeds on your lawn, and then it had you use your shovel to get rid of the weeds.
This turned out to be not quite what we were looking for because it didn't really teach that, it didn't really teach that the shovel was for getting your plants out of the way so they could get replaced.
Instead, it kind of taught the player, use the shovel to get rid of harmful things.
And that's not the message we actually wanted to get across.
So, attempt number two was to have Crazy Dave come and put walnuts all over your lawn.
And that's a pretty good start for anything.
But the minigame itself had you using the shovel to make room for the pea shooters that would come down this conveyor belt here.
While it did a good job of teaching players to use the shovel to remove stuff to make room for other plants, the, the minigame itself wasn't very fun.
There just wasn't much strategy to it, and you kind of tended to use the shovel over and over, and that got old really quick.
So next we tried another minigame where Crazy Dave comes in and tells you he lost his squirrels, and that you had to dig up walnuts to find them.
And this didn't get very far either.
Like, again, the repeated digging was problematic.
and the minigame wasn't very fun despite it containing squirrels.
So this is where we finally ended up.
While all this other stuff was going on, we developed a minigame that actually was fun, which was walnut bowling.
The problem was that walnut bowling had nothing to do with the shovel.
So we kind of compromised and we just simply prefaced the minigame with a quick tutorial that says, hey, use your shovel to dig up these three pea shooters on your lawn so that you can prepare for bowling.
And this is what we ultimately settled on, because it made you actually use the shovel, it communicated that you remove plants to make room for other stuff, and it had a minigame that was actually enjoyable.
So, even though mini-game number two, the one where you remove the walnuts to put pea shooters down, even though that one might have taught the shovel mechanic slightly better, we decided it was more important for the player to have a good time.
So the lesson here is that fun prevails, yet I think the tutorial still worked well enough that everyone who played the game knew of the shovel and knew how to use it.
All right.
Number three.
Teaching, spread out the teaching of game mechanics.
Because if you intentionally staggered the teaching of game mechanics, it's a really powerful tool in teaching players how to play your game.
And once we realize we don't have to teach everything right off the bat, we can be a lot more effective at teaching.
I think, in general, it's best to think, does the player really need to know this at this point?
And if the answer is no, then you can delay the teaching of the mechanic until a later point in the game.
So in the case of Plants vs. Zombies, we were actually quite conservative.
I feel like a lot of other games might not do this, but we introduced peripheral mechanics really slowly.
So the introduction of the shovel was delayed until 1-5, which is five levels into the game.
And we didn't introduce the concept of money until you were ten levels in.
So on level 2-1 is where you first see a zombie drop a coin.
And then for the next 15 levels, you're only allowed to purchase one thing.
And this is all because I felt like the game was engaging enough that we didn't need to sidetrack the players with kind of a sudden store where you could buy a bunch of things.
So we only allowed you to purchase one thing, which was an upgrade that lets you choose more plants at the start of the level.
And it's just enough to demonstrate that money in this game can buy you cool stuff.
And it wasn't until 3-4, that's 25 levels in, where we finally opened up the store and gave you a choice of what to buy.
And even at this point, the store only opened up with a limited selection, like you see on the screen.
And we gradually introduced the rest of the items as the game went on.
And the most extreme example is that we We knew the Zen Garden was something, it was something, it was a mode that you kind of would play after you beat Adventure, but yet we still wanted to give the player, like make the players aware of it and give them a taste of it.
So we introduced the Zen Garden with a mini tutorial after level 5-4, and that's 45 levels into the game and five levels before the game is done.
And so why would we do such a crazy thing?
Well, OK, so Zen Garden comes with a somewhat elaborate tutorial that takes about three minutes to get through.
Now just imagine if we presented that near the beginning of the game, like spending three minutes teaching you an optional mode of the game.
I know if a game did that to me, that would be the perfect time to drop out and stop playing.
So when I first start playing a game, there's only a certain willingness to put up with things.
But as the game goes on and I become more invested over time, my willingness to learn actually grows.
And at that point, you can start introducing new concepts.
The other advantage is by delivering messages at a relevant time, their teaching effectiveness is increased.
So suppose you're trying to convey what a power-up does, that you don't get until level 10.
You know what the best time to convey that would be?
That would be right before you get it on level 10 and not at the beginning of the game.
because we learn much better if we're presented with the relevant information and are able to apply it immediately.
And yet another advantage to spacing out your game mechanics is it lets the player, it gives the player a chance to apply what they've learned.
I once played a puzzle game that introduced all of its mechanics within the first few levels of the game.
They introduced it one by one, one level after another, and one mechanic after another.
And before I got to toy around with the first mechanic, they already kind of moved me on to the next one.
And while I'd rather have that problem than a boring game with no new mechanics, I feel like that game could have been improved if it first taught you a mechanic, and then gave you a level or two to play with that mechanic before teaching another one.
So the key is to paste the game to introduce just enough that the game remains interesting while not overwhelming the player.
So for Plants vs. Zombies, we were originally shooting for one new zombie every level.
And we found that, we found it actually was more effective to space them out a bit.
And so, instead we tried one zombie every, one new zombie every other level instead.
And the format for that is we'd, we'd introduce the zombies on levels that would be kind of easier and that would let you kind of learn about the zombie in a safe environment.
And then, for the next level, we kind of, we kind of, once you, once you know how to handle the zombie, we'd present it again in combination with the other ones, the other zombies in a more challenging level.
And here's sort of a random tip I found.
I found that in-game stores, they can be a pretty decent way of getting information to players as well.
So say like you have a bunch of advanced concepts to teach, like a bunch of power-ups that all do different things.
You can try sticking them in the store if your game has one.
Because a player kind of goes into it thinking, I have all this in-game currency.
I spent time earning and I need to spend it in the best way possible.
So what they're going to do is they're going to do some comparison shopping and they're going to read all the store descriptions to figure out which item is the best to spend their money on.
That's only at the point where the player is kind of invested in your game.
So that's where you can kind of put some info, knowing the player is likely to read it.
It kind of boils down again to the investment versus the willingness to learn thing, but only this time, instead of the investment being time, your investment is now the in-game currency.
Okay, number four is to just get the player to do it once.
Sometimes all you need to do is get the player to perform an action once.
Once a player performs an action and sees the resultant behavior, it's often all it takes for the player to get it and to understand.
So sometimes you can flash a button that you want the player to press, or you can point an arrow at an important object, and sometimes that's all you need to do.
For instance, the first coin we drop in the game, we put a little bouncy arrow above it to kind of draw your eye to it and make the players more likely to click on it.
Here on the first level in the game, we flash the seed packet like so.
And whoa, whoa, whoa, check this out, okay.
And it draws your eye to the seed packet.
And once you click it, you'll notice the plant goes into your cursor and then the grass starts flashing like this.
And it makes you really want to click on the grass, doesn't it?
So now in clicking the grass, I've successfully selected a seed packet, put the plant down, and learned one of the fundamental actions of the game.
And all I had to do was click on whatever was flashing.
And now I want to run you through one of the biggest design challenges we faced when making PVZ.
So sunflowers, as you know, they're the economy in Plants vs. Zombies.
They're kind of like the backbone of the game.
But the idea of an economy in a video game is not someone, it's not something that everyone understands.
So about halfway through the development of PVC, we got a couple pieces of really important feedback.
These come from a PopCap employee basically pointing out that his wife, not coming from a hardcore gaming background, just totally didn't understand the importance of planting lots of sunflowers early.
Instead of starting out planting a bunch of sunflowers like this, which I do, she would neglect planting sunflowers and her lawn would look something more like this.
And this is fine for the early levels in the game, but you're not going to beat the game playing this way.
And here are a couple of more pieces of feedback that echo the previous ones.
These players had never heard the term RTS, nor did they understand that it was important to build up your economy.
And at this point, I realized this was the biggest flaw with our game.
I'd set out to make a strategy game that anyone could pick up and play, and now I was confronted with the daunting task of teaching the importance of economy to non-gamers, and I didn't quite know how to do it, and I wasn't sure if we could pull it off.
So I asked a bunch of people at PopCap for suggestions on how to fix this, and they came up with a bunch of good ideas to try.
The first was to consider making it, making the resources work more like in the traditional tower defense.
Because the guy, the earlier guy's wife, he actually, you know, she played a few of these and had no trouble understanding the traditional tower defense types.
Because in these traditional tower defense games, you automatically earn resources every time a monster is killed.
So as long as you're doing a good job defending, you'll have enough resources for more towers.
It's not a separate economy.
But this would involve, one, removing sunflowers and their separate economy from the game, which I didn't want to do because I felt like that economy was something that differentiated our game from other tower defense games.
And two, I just felt the sunflower was too iconic a character to cut, and I didn't want to toss it out.
So the next suggestion was to add in some tutorial messages here and there.
like trying to explain sunflowers on a more relatable level instead of like this kind of engineering text.
So, for instance, saying stuff like, sun is like fuel, you need it to plant other plants.
Stuff that kind of the general public could get or could relate to.
And I thought that was fine, and we did end up doing a little bit of this.
But I wanted to cover all fronts regarding the sunflower.
Suggestion number three was to start out with a column of sunflowers.
And I like that it gave you an indication.
So you would start the level with a column or two of sunflowers and players could kind of go off of that.
And I liked it because it gave you an indication of how many sunflowers you might need and it kind of reminded you to...
It reminded you that sunflowers are a good thing.
But I wasn't convinced that if we suddenly stopped giving them out at some point, which we would have to do, that novice players would adapt and know what to do at that point.
So the fourth idea was to actually have some spaces on the lawn reserve for just planting sunflowers and you can't plant anything else there.
And that's also a pretty good idea.
And it would kind of actually change the game a decent amount.
But.
I wanted to see if, I felt like it added a bit of complexity and I wanted to see if the problem was solvable without doing that.
So what did we end up doing?
I think the solution we came up with, I think it turned out to be quite effective.
So first you have to notice that at the time...
Both sunflowers and peashooters costed 100 sun.
So they both costed the same amount.
And the other thing that was different at the time was we started you out with 200 sun, which meant at the beginning of the level, at the very beginning, you could plant two of any combination of a peashooter or a sunflower.
And the reason for these numbers isn't, I just chose them because they seem like nice, round numbers.
And they felt good in play testing.
So a hardcore gamer kind of knows what to do here.
they plant a lot of sunflowers early on to build up your economy.
But imagine you're someone with not much gaming experience, and you see both the pea shooter and the sunflower lit up.
Which one are you going to plant?
You're going to plant the pea shooter because it seems more effective at fending off zombies.
The sunflower might seem kind of frivolous at this point, and so in planting just pea shooters, you're going to end up with a layout like this, a layout with no sunflowers.
So what did we do?
It was pretty simple.
We changed the sunflower to cost 50.
And we also changed the starting amount of sun to 50, so that now when you start a level, it looks like this.
So if you'll notice, the pea shooter is grayed out.
And there's only one option when you start the level, and it's sunflower.
So no matter who you are, the first thing you're going to do is likely to plant a sunflower and not a pea shooter.
Another nice effect of costing the sunflower at 50 is that the sunflower would tend to light up more often because when you have enough money to buy something, it lights up.
And so when you're at 50 sun, the sunflower would be lit and not a lot of other things would.
And when you're at 75 sun...
the sunflower would be still lit.
And so it would just light up more naturally over the course of the game.
And so due to it costing less, players would just naturally tend to plant more sunflowers, which is what we wanted them to do.
And for this technique, I kind of have to thank Fisher Price.
I looked at how a preschooler's brain works, which is just to press the bright, shiny object.
And it worked out in this game, so I guess we never truly outgrow that instinct.
So this one change let us satisfy both camps.
We were essentially forcing the first thing you planted to be a sunflower, but hopefully the novice player appreciated the guidance, and hopefully the hardcore player didn't feel like they were just playing on easy mode with everything pointed out to them, because we made it a rule of the game.
Like the game's flow naturally favored you doing the right thing.
OK, but we weren't done yet.
In this screenshot, you can see that both the sunflower and the walnut are lit up, and since they both cost $50.
And this is still pretty early in the game, and it was a situation I wanted to avoid, because we went through all that trouble to make it so the sunflower was the only thing lit up.
So I was concerned that novice players might still pick the walnut here over the sunflower, which would be a bad move.
So we tried changing the walnut to cost 75 so that it wouldn't be lit up at the beginning of the level, but it just didn't feel right at that price.
What we ended up doing was to have the walnut start the level charging up so that the beginning of the level would look more like this.
So in Plants vs. Zombies now, you'll notice that there's a few plants that start the level on recharge, so they're actually dimmed out.
And we would run into the same issue with the potato mine because it costed 25.
You can see that here.
And so we applied this initial recharge to all plants that had a longer recharge.
And that did the trick.
And hopefully this didn't stick out to anyone who played the game.
But if you notice it, that's the reason we did it.
So now for the first 10 levels of the game, the sunflower is the only thing highlighted at the start of the level.
And the solution worked, but.
Unfortunately, changing something as fundamental as the sunflowers cost meant we had to rebalance and retest the entire game.
I don't know how many hours I spent.
I played through the entire game maybe like three times, and also we slowed down to make the rate of sun more equivalent to what it was before.
We slowed down the rate at which the sun popped out of the sunflowers to kind of balance their newly reduced cost.
Because it would be kind of like...
like charging 25 minerals instead of 50 for an SCV in StarCraft.
If one numerical change like that could cause a ripple effect that would result in dozens of hours of work.
And then they'd also have to reprice a bunch of things and rebounce the entire game.
So this is just to emphasize the measures we went to in order to make the teaching of our game more straightforward.
OK, number five is use fewer words.
I sort of have this rule with my games that there should be a maximum of eight words on the screen at any given moment.
Of course, this is pretty much impossible to maintain, and I do break the rule from time to time.
But I feel like it's a good thing to shoot for.
And it's also important to keep your tutorial messages low on the number of sentences.
So you have to figure out what needs to be said to the player and say only that.
So let's go through an example of a one-sentence message with a four-sentence message.
So here's what we did in the game.
We have a nice, concise statement that says, click on a seed packet to pick it up.
And in contrast, here's what we could have done.
We could have had a bloated four-sentence tutorial message here.
In this first case, the player is likely to read that one sentence, process it, and use that knowledge to play the game.
And in the second case, how many sentences do you think the player is going to read?
Probably not all four.
I think, in fact, I think it's more likely they're going to read zero.
Because it's just something about our brains that when we see a big block of text like this, we tend to tune out.
And personally, I get that too.
Like, when I see big blocks of text presented like this early in a game, I tend to forward-pass them.
Because we think it's either too much work to read, or we expect that there's nothing important in there.
So, in Plants vs. Zombies, we made our plant descriptions as short as possible.
I tried to think of the one sentence that I would want the player to know and just say that.
So, for the sunflower, we just said, gives you an additional sun.
And that's nice and short.
For the cherry bomb, it says, blows up all zombies in an area.
That's nice.
And here's an example where I tried to distill a description down to just the most important sentence.
If you know this fume shroom, you'll know that it does AOE damage to all zombies in a line.
But notice, I didn't say that in the description.
All I said was, it shoots fumes that can pass through screen doors.
Because that's going to be the most important thing to know when you're facing down a horde of screen door zombies like this.
So knowing about the AOE damage is actually secondary to knowing that you can effectively take out a screen door zombie with it.
So when coming up with messages to say in your tutorials, it might be useful to think of it in a manner of speaking, which I've dubbed the sophisticated caveman.
So you speak to the player in a way that this guy would.
He's not an unsophisticated caveman.
He doesn't replace his eyes with me's, but he tends to get his ideas across in the fewest word possible.
So let's go through some examples.
Shoots peas at the enemy.
See, you can almost imagine him saying that.
blows up all zombies in an area. You got the shovel.
And perhaps this was easy for me to implement in PvZ because it's actually not too far from my natural way of speaking.
I believe, I believe last year at GDC I had a juicy quote. It was really bad and that made me really sad. I actually said this at a talk last year. And as you can see, it totally fits.
So whenever we had larger amounts of dialogue, I found it effective to break it into small chunks for the player to digest one at a time.
Crazy Dave says a decent amount of stuff in PVZ.
And we found that it was easier to read when it was broken up into little pieces that you forwarded through one at a time with each click.
Old Nintendo games did this nicely.
Maybe they did it intentionally, but maybe they just had a limited number of pixels to display on the screen.
And one more thing to note about Crazy Dave.
Our initial, our initial thought was we came up with this character so that he'd deliver the tutorial in the beginning of the game.
And a lot of games do this.
They have an in-game character that delivers the tutorial to you.
The idea is it's more personable and it introduces the character at the same time, which is hopefully entertaining to the player.
So we were originally going to have him pop up in level 1-1 here and teach you the basics of the game.
The problem was he first had to introduce himself before he even started telling you what to do.
And also the lines he said, they all had to be infused with his crazy character.
And so that actually made the tutorial less direct than I wanted it to be.
So ultimately we chose to delay his introduction until five levels into the game and keep the early tutorials really direct and concise like this.
It kind of goes back to this graph.
Like, when players start out playing your game, you really, you kind of, you want to put your best foot forward.
And if, if that best foot is your gameplay, then you kind of want to get out of the way.
And you don't want your player to be reading a bunch of dialogue.
You want them to be playing your game as soon as possible.
And then, and then once you have them invested in your game and after playing a few levels, you, you can start peppering in more and more dialogue.
OK, number six is to use unobtrusive messaging, if possible.
Don't break flow.
Whenever I display a message in the middle of a game, I try to display it in a passive manner so that the player doesn't have to instantly stop what they're doing and read the message.
Because I've had too many cases where I'm getting into the groove of a game, and a dialogue pops up, and it freezes the action, and it requires me to press OK.
Kind of like this.
So I try not to use OK dialogues that pop up without warning, unless there's something I absolutely need the player to know.
I prefer to present messages that are passively displayed, like at the bottom of the screen here, and that let you continue playing while you read them.
This is a good example.
It's a side scroller where the words, press z to jump, are written on the background wall.
So it actually scrolls along the wall as you move.
And the info is presented to you at a relevant time, right before you need to jump, right here.
and you can read it at your leisure so it doesn't break your flow.
And also, when you don't need to know the info anymore, it just naturally scrolls off the screen as you progress.
OK, number seven is to use adaptive messaging.
So can any of you remember this message displaying during your playthrough of Plants vs. Zombies?
It reads, one of your pea shooters has died.
Try planting them further to the left.
If you don't, it's probably because you were doing the right thing and didn't need to be shown this message.
This message is only shown to players who lose a pea shooter in one of the early levels and only if that pea shooter was planted in one of the rightmost columns.
So by watching someone play your game, you can kind of get an idea of the messages you might need to display.
The plant your pea shooter to the left message, that originated when we had a friend come in for a play test.
And I was kind of baffled as he...
kind of placed all his peashooters in the far right column and then the zombies would eat them and then he'd proceed to lose.
So we put this contextual message into the game because we didn't want other people to do what he did.
And yet if we displayed this message to a hardcore gamer who already knew what to do, it might feel kind of insulting.
Like if we straight up tell those players what to do, we don't give them the chance to feel smart and we don't.
when they already know how to do the right thing.
Plus a guy like this might feel insulted if we told him too much of what he already knew.
To him it would feel like hand-holdy or if we flashed the plant your pea shooters to the left message right in front of his face.
And meanwhile someone like my mom could really appreciate a message by, like a message saying try planting your pea shooters further to the left.
So by using adaptive messaging we can make sure people like my mom are covered while at the same time not offending Mr. Power Glove here.
You can use adaptive messaging to deliver appropriate info to players of all levels.
And here's another check we do.
From levels 1-3 to 1-8, if a player still has less than three sunflowers about a minute into the level, we display this message.
We say, try to plant at least three sunflowers.
Followed by this.
Planting sunflowers will improve your chances of surviving the zombie attack.
The point is, players won't see this message if they're already doing the right thing.
And just like everything else, there's always the possibility of going overboard.
There's no need to explain every single concept in a game.
We only need to do enough to get players to understand the basics.
I find that most things from minute 30 and beyond, they're actually better learned by experimentation instead of hand-holding.
Because figuring out certain strategies in games is the best part.
You don't want to rob the player of that.
So let's look at this example from Insane Aquarium.
It's the game I made before Plants vs. Zombies.
It's sort of an RTS disguised as a fish feeding simulation.
You click on the screen and you drop pellets of fish food for your guppies.
And at some point in the game, you get access to a larger fish called a carnivore.
It's that one on the right, the black and red one.
And they don't eat regular fish food.
And you kind of have to figure out what to feed them.
There were a few playtesters who, who never figured out what to feed the carnivores.
And someone at PopCap suggested that we, we put a little hint saying, feed small guppies to the carnivores, like at the start of the game.
And I didn't want to, I didn't want to be so in-your-face obvious.
And I, I certainly didn't want to rob the player of that sense of discovery that you get when you, when you do figure out how to feed them.
So instead, we did this.
We did this sort of adaptive messaging.
After your first carnivore dies of starvation, we say, warning, your carnivore has died, just to kind of draw a little attention that you're feeding them the wrong thing.
And at that point, if the player figures it out, it's all good.
But after your next carnivore dies, we display this, and it hopefully guides the player in a little bit more of the right direction.
It says, hint, carnivores won't eat fish food.
And finally, after the third carnivore dies, we just flat-out tell them.
We tell them to try feeding small guppies to your carnivores.
And for the players that figured this out before we gave them all three hints, they probably felt pretty good about it.
OK, number eight is don't create noise.
One more reason you want to be frugal with what message you're displaying on screen is so that you don't create noise.
Because as game makers, we're kind of competing with players for their attention versus all the other stuff they could be doing, like surfing the internet or something.
So what I don't get is when...
a player competes with itself for the player's attention.
Because we can only rely on the player being focused on one thing at any given time, if that, and so it's important to be aware of what you want your player to be focused on, especially in the early game.
You want to make it easy for your player to learn, and you don't want to be showing them a bunch of irrelevant text, like through cluttered UI or pop-ups or early achievements.
So this fake screenshot is why we were reluctant to add achievements to Plants vs. Zombies.
Especially ones that can trigger early in the game.
Because we want the player here to be focused on the text at the bottom of the screen, but let's just say they inadvertently unlock an achievement at the same time.
So now where are they supposed to focus?
They're like looking up and down and like they're confused.
If they read the achievement text, then they'll be missing out on the message we actually want them to be reading.
So the original PC version of PVZ was achievement-free, but every other platform it was released on eventually added them.
And I'm not saying achievements can't be designed effectively, but we wanted to avoid a situation like the above.
And so we opted not to include achievements at first.
And another reason to eliminate noise is every time we display a message that that player finds relevant, we're building that player's trust.
And likewise, every time we display a message that's irrelevant, we do the opposite.
So if we're forcing the player to read things, we want to make sure it's either enlightening or entertaining.
If we, if we bombard the player with one irrelevant message after another, then it becomes kind of like the boy who cried wolf, and then the player will just hit a breaking point and they'll tune out.
So we've, we've essentially lost their trust, and now the player is less likely to pay attention when we do have a message worth reading.
So basically, don't cry wolf.
And No.
And this, I just wanted to demonstrate how one carefully placed comma can change everything.
OK.
Number nine is to use visuals to teach.
So these last few sections, they kind of fall a little bit out of the realm of the tutorial itself and more into the realm of make your game intuitive and it will be easier to learn.
For Plants vs. Zombies, we really emphasize the power that visuals can have in order to teach the player.
So when creating the individual plants and zombies, I tried to adhere to a couple of rules.
My rule number one was that you should be able to look at a plant or zombie and know what it does instantly.
And the benefit of this should be obvious.
If we can communicate through visuals only what a plant or zombie does, the less we have to teach with words.
So let's go through a few examples of the touches we added, starting with this pea shooter here.
In this guy's case, I just, I simply wanted to make sure to give him a spout, so that it would look like he shot stuff out of his mouth.
For the screen door zombie, it kind of looks like he's holding a shield in front of him, which makes you think that he's tougher to kill.
And in the case of the spike weed, we put him low to the ground and added these nasty looking spikes coming out of him, so that it would look like it would be bad for zombies to step on this guy.
And in the three peters case...
He's got three heads, each of which resembles a pea shooter's head, and if you know what a pea shooter does, then you can kind of extrapolate what the three-peater might do, which is to shoot three things at a time.
My rule number two is, if I can't achieve rule number one, then at least you should know what a plant or zombie does after seeing it do its thing, after seeing it do it once for the first time.
So, looking at the jalapeno here...
At first you might not know exactly what it does, you might just think it has something to do with being hot, but once you see it explode in a lane of fire like this, you quickly understand what its purpose is, which is to eliminate all zombies in a horizontal line.
And same with the pole vaulter zombie.
You might not understand what he does when he runs on screen, but you quickly get it once you see him vault over one of your plants.
So at one point I was trying to decide how best, how to best visually represent a plant that did twice the amount of damage as a pea shooter.
And this was gonna be a plant that would show up relatively early in the game.
So I wanted to make sure to put some extra thought into it.
So what should the repeater shoot?
A lot of you already know the answer, but let's just go through this exercise.
If the repeater shot feathers, that would be pretty unacceptable.
Feathers are soft, and choosing a projectile type that seems softer than even a pea would not really be a good way of conveying double damage.
So what about something esoteric like neutronius?
I don't know about you, but I don't know how much damage a neutronius particle does.
Is it more damaging than a pea, or is it less damaging than a pea?
This is the danger of relying on ideas that aren't based on something that the general public understands.
Okay, so now we're talking.
We could shoot swords.
Swords definitely look like they would do more damage than peas, but how much more?
I would think like five times more.
And I could have gone with something like this, but I wanted to see if we could find something that could communicate exactly twice the damage.
But that said, a plant that shoots swords is pretty nifty, and if we're going for zaniness, we might choose something like this, as long as we could theme the plant properly.
But for this plant, I wanted to make sure, because we were giving out early in the game, that it accurately communicated what it did as much as possible.
This is kind of another direction, but also not bad.
I do find myself utilizing the idea that bigger is better quite a bit when trying to visually communicate something.
So, because a large pea just looks like it would do more damage than a small one.
Okay, so now we're getting close.
You have a plant here that shoots peas twice as fast as a pea shooter.
So every time a pea shooter shoots one, it's shooting two.
And if you put the two side by side, you could tell that, you could easily tell that one was shooting more peas and thus doing more damage than the other.
And if you kind of watch over the course of maybe like 10 seconds, you can even notice that one is shooting exactly twice as fast as the other one.
But that would actually take some observation.
So this is quite satisfactory, but we can do one better than that.
We can take the constant stream of peas that are going twice as fast and instead arrange them into volleys of two with longer intervals in between.
So this is what we went with for the repeater.
It fires volleys of two peas at a time.
and it fires those two at the same rate a peashooter would fire one.
In this case, you don't even have to observe for very long before you realize it's doing twice the damage as a peashooter because they're firing at the same intervals, yet the repeater is firing two in rapid succession every time the peashooter fire was one.
For puff shrooms, we kind of had the opposite problem as the repeaters.
as we needed a plant that did less damage than a pea shooter.
And instead of having them do an arbitrarily less amount of damage, I simply opted to limit the puffshroom's range to what you see here.
Most plants range in the game, they shoot across the entire screen.
So upon seeing the puffshroom shots just stop at the end of their range, it's something visual you can latch on to, and then you can realize that it's a less effective plant than the pea shooter.
But you'll still use these guys because they don't cost you any sun, and you can plant them all over the place.
One of the game's mechanics involves these gravestones, which zombies rise up out of at the end of the level.
And we needed a plant to remove these gravestones for you.
And looking at all these plants, which one seems the most like it might have something to do with the gravestones?
If you thought this one, it's what we thought too.
And thus, the Grave Buster was born because we visually connected a little bit the look of the gravestones with the look of the plant.
And the Grave Buster kind of chews on gravestones to get them out of your way.
In terms of using visuals to communicate, I find that Nintendo's games do this really well.
So let's study an example from Paper Mario.
In Paper Mario, Mario has two attacks in the game.
Jump and hammer.
Here's one of the bad guys from Paper Mario.
It's a Goomba.
You jump on him and then you defeat him.
Or you can use the hammer on him too.
It doesn't matter.
You can do both.
But then you encounter this guy, who obviously wouldn't be good to jump on.
So you have to use the hammer to get rid of him.
And meanwhile, the game has flying enemies that your hammer can't reach, so it's best to jump on these guys.
And the game is filled with enemies where the very instant you look at them, you know they can't be jumped on.
And likewise, you know you can't use a hammer on any of these enemies, because any bad guy that has wings or is up in the air, they're hammer-proof.
And what's up with this dude?
He's got both a spike and wings, and how do you even beat this thing?
So anyway, the lesson here, it might be to just base your game on an absurd enough world so that it's OK to take any enemy and stick wings or spikes on it.
OK, number 10 is to leverage what people already know.
If you leverage what people have learned from their everyday lives, you can make your games easier to learn.
So even when coming up with the theme for Plants vs. Zombies, we utilize people's general knowledge.
The game wasn't just a mishmash of two different things fighting each other, although it might seem that way.
I deliberately chose both plants and zombies for specific reasons.
The reason you have plants is, PvZ is based off of the tower defense genre, and I was looking for a way to get these stationary towers in my game, but also inject them with some personality.
Plants were perfect because people expect plants to stay in one place and thus they made good replacements for the towers.
I could have made them something like jungle animals instead, for instance, but people might think, hey, why doesn't that lion run up to the zombies and slash them?
Or why doesn't the gazelle run away from the zombies when it's about to get eaten?
One of the reasons I chose zombies is because people know zombies move slowly.
And in creating PVZ, one of my goals was to keep the gameplay on a single screen so that we wouldn't have to introduce scrolling controls.
So zombies fit perfectly as something you would expect to move slowly, and thus it would give the player enough time to strategize.
Another thing people know is that zombies are bad, and you don't want to let them get to your house.
We frame each level by first showing you your house on the left.
and then panning over to the zombies on the right.
And the action takes place kind of in between, but it's clear that at this point that you don't want the zombies to get from the right side of your screen to the left side of the screen.
For Insanity Aquarium, I leveraged the fact that I didn't need to teach people that fish need fish food, so I was free to spend my energy teaching the other stuff in the game.
Okay, in Plants vs. Zombies, we have a class of nocturnal mushrooms that fall asleep during the day.
so you can only use them at night.
I thought it'd be neat to have a plant that sort of broke this rule, one that would let you use your mushrooms during the day.
So we made the coffee bean because people associate coffee with waking up.
And thus when you see your mushrooms going zzz, it makes sense that you'd want to put a coffee bean on them to wake them up.
Even the first three zombies you see in the game, I use the idea that everyone knows that Metal is tougher than plastic, which is tougher than nothing at all.
So it's pretty easy to tell which of these zombies is tougher just by looking.
And also, that's the only visual difference between the three.
People also know that magnets attract metal, so it's no surprise that magnet shrooms pull the metal buckets off of zombies' heads.
We even chose our resource representation really carefully.
We chose sun because people know that plants need sun, and we chose money because everyone knows that money buys you stuff.
It may seem obvious, but a lot of games don't actually do this.
A lot of games try to get kind of cute with their icons and representations of things.
For instance, we could have chosen to have you collect brains here instead of money.
The problem would be that brains don't do the best job of telling the player that you're supposed to save them up to purchase stuff.
So it's little choices like this that, they seem relatively insignificant, but when you kind of make these, like, decisions that are a little bit off and put them together, they add up to kind of a confusing experience.
So instead, we chose to be as direct as possible and just have the zombies drop money.
there, I felt like there were enough other places to add flair in the game where we didn't have to risk confusing players by getting fancy in basic areas such as this.
Another thing people know is that diamonds are more valuable than gold, which is more valuable than silver.
So I chose to base our money system in the game off of that.
And even in the unlikely case that someone didn't know which was more valuable, I still made each one bigger than the next, so that, again, using the idea that people generally understand that bigger is better when it comes to money.
And if you're observant, you'll notice that we completely skipped the copper or bronze coin.
And that's just because we chose to do that because copper can look pretty similar to gold at times.
And in PVZ, we only needed three kinds of money, so instead of starting with copper, we chose to avoid any possible confusion and just start you off with silver.
Even the way we named our plants took advantage of what people already knew.
In coming up with plant names, we could have gone the route of pizazzing them up with names like the Vindicator, but instead we chose to name our plants a little more on the direct and descriptive side, because that's just one more avenue of communicating to the player what the plants would do.
So the P here is our game's basic projectile, and so it makes sense that the word P would be in all the plants in the game that fire them.
The Sunflower, Walnut, Marigold, Squash, they're all examples of names.
that are deliberately crafted to communicate what they do based on things people already know.
And to delineate the nocturnal mushrooms from the other plants, I made sure they attach the suffix of shroom so that even when you have a plant that looks a little bit less like your typical mushroom, like that magnet shroom on the bottom right, you'd still know that it's a mushroom through its name.
So you, thus, you would know that you could only use it at night.
All right, so we made it.
So here's a recap of all the points I talked about today.
One is to blend the tutorial into the game.
Two is to better have the player do than read.
Three is to spread out the teaching of game mechanics.
Four is to just get the player to do it once.
Five is use fewer words.
Six is use unobtrusive messaging.
Seven, use adaptive messaging.
Eight, don't create noise.
Nine, use visuals to teach.
And 10, leverage what people already know.
And the last point I was going to get into, but I don't think I have time.
You take all these techniques and apply them, and you can make your game as easy and pleasant to learn as PVZ was.
And some of these things, you can apply them to games that are almost complete.
But in general, you don't want to wait for the last minute to start thinking about your tutorial.
You really should be building the game for ease of learning right from the start so you can incorporate all these things.
So remember to think of the tutorial chameleon here and really blend your tutorial into the game.
Like I said, the best tutorial shouldn't feel like tutorials at all.
So to conclude.
I'd like to show you the main menu from our game.
And let's, let's zoom in so you can see the help button.
So we were laying out the main menu, and I put that help button there kind of by default, because I noticed that, I just noticed that every other PopCap game had a help button.
And I kind of figured we'd do something with it at some point.
And the button just kind of sat there through much of development, and when you click it, nothing would happen.
So when the game was all done, and it was time to put these, these help pages in.
I double-checked and I asked someone at PopCap, is it indeed a requirement for our games to have help pages?
And the answer I got was no.
So instead of putting your typical help pages there, this is what our help button leads you to.
It reads, help for plants in zombies game.
When the zombies show up, just sit there and don't do anything.
You win the game when the zombies get to your house.
This help section brought to you by the zombies.
So I felt like we did such a good job of teaching the game already that we didn't need a help section, so we just put something silly there instead.
So hopefully I've been able to give you some perspective on tutorials today, and may your games teach the player so well and so effectively that your help section can also be made into a joke.
And thank you.
