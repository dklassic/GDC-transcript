Thank you, awesome.
Hi, my name's John Linvey.
I am the community manager at Red Hook Studios, and we make a game called Darkest Dungeon.
I'm here today to discuss the following.
How to be a community camp counselor.
How we position ourselves relative to our players.
Why it's important to build a structural framework of discourse within the community.
giving your community opportunities to give back and celebrating those contributions, knowing the cohorts that comprise your community, taking the time to understand how to effectively communicate to all of your audiences, and to give players the means to continue the relationship that they establish.
So what does it mean to be a community camp counselor?
I would like to start by saying that I don't particularly like the title community manager.
It has always felt somewhat disingenuous to me when I've described myself as a manager of our community.
First, no one likes to be managed, especially not when that person is a total stranger, which is me.
More importantly, this kind of distinction puts a false dynamic, power dynamic, between us as developers and our players.
It also frames it as if the developers are up above them, and my job is sort of to come down from the mountaintop and say, this is how, this is the gospel of Darkest Dungeon.
So right off the bat I feel like that sets off a poor understanding of my relationship with our players.
I'm not really here to manage them in a traditional sense of the word.
I've found myself spending more time researching how to ask the right questions or how to clearly explain our game than actually trying to manage anyone that participates with us.
And this is why I like to refer to myself as a camp counselor.
My job is to encourage and maintain a healthy dialogue amongst and between our players and then to our team.
Instead of that like top-down hierarchy, we like to envision it as more of like a horizontal, we're all sitting around a table passing information back and forth.
And this dialogue works best when we're able to make our intentions well-defined.
And I cannot stress the well-defined part of that sentence enough.
It's an important distinction to make because there's still a really wide gap between players and creators in terms of how players understand how games are made.
And I feel this is the source of most friction within communities.
I don't necessarily think that players should know how games are made, but if we can just bring them in a little closer to help them understand the why or how behind certain design or creative decisions, we can give them the vernacular to clearly articulate what is or is not working in relation to our intent and expectations with design, mechanics, and features.
And that's what I mean about a camp counselor over a manager.
Having a little bit of understanding of human behavior can help your day-to-day as you can quickly identify issues with messaging or timing and be able to react more appropriately rather than trying to control fires, so to speak.
So this is how we position ourselves relative to our player.
I think we as game developers need to remember a key thing, and that all game communities start from a really amazing and beautiful spot.
Both the players and the developers love their game.
Sometimes they love it so much, they want to tear it all down and build it all over again.
And sometimes it takes 400 hours to realize that you can't recommend a game, and you know, that's okay.
That happens.
Regardless, that is the origin of our relationship with our community.
The key difference is that, as a studio, we are making the game that we want to make, and that sometimes does not always agree with the version of the game that our players want us to make.
A good friend of mine, Trent Custers and Lisey Kane from League of Geeks, who make a game called Armello, gave me, and they also have an amazing community, they gave me a great piece of advice.
They said, we carefully use language like, help us make the game we're aiming for, as opposed to help us make the best game we can.
One explicitly states that they are here to assist us in the task, and that they are not subject, they're here to help us in a task that is not to their discretion, but ours.
The other gives a false representation of the player-developer relationship.
So this is like super critical, and if you take anything away from this talk is that this small change in language between our community helps us make the best version of our, the best version of the game, to our community helps us make our game better, that is like the biggest gulf and like the most important thing ever in your messaging throughout all of the things that you do as a community manager.
This better frames the real relationship between the players and properly sets expectations.
Especially if you say this on repetition, like I said before.
And through our interactions, we equip them, we equip the community to ensure they have everything they need to help us make our game.
Now, this isn't meant to discredit our players.
Rather, it ensures that the relationship doesn't become abusive.
Players should never have us hostage when we're trying to implement changes or make important design decisions, but we should give them the tools and framework to help us properly identify the problem and not just have them offer us their solutions.
Players are really good at offering their solutions to problems, but they're not always the best at properly identifying what the root problem is.
Again, this is an issue of poor framing on our part as developers to elicit better player feedback.
And it's our job as community managers or people who work within the community to give them the tools to dig deeper into these areas and map out the entirety of a problem before we can begin discussing the solutions.
And that's what I mean by why it's important to build a structural framework for discourse within the community.
A solid example of why I spend more time learning how to frame a question goes to a common thread we saw in our community.
The thread typically reads like, X character is garbage and should be buffed, or this skill is worthless and we should do something better.
The conversation would then begin with how they feel about a character as bad.
They would then begin to offer solutions for the problem, or how to fix the problem.
And sometimes the discussion would be something like, write the characters in order from best to worst, and then it would be followed with even more solutions for those unlucky few people who landed at the bottom.
When I saw these threads, I remembered a really great conversation I had with a designer, David Serlin.
I respect him a lot. He works on a lot of competitive multiplayer games and game balance.
If you haven't heard of him, please look him up. He's super smart.
And he mentioned that lists like this are generally pretty useless, as they don't actually tell the designers as much as players think they do.
Primarily, it doesn't really account for the gaps between each of the numbers.
I also took issue with the discussion as it was narrowly focused on a character's power in combat, but not the overall utility in our game.
I make this distinction between utility and power as in our game classes bring more to a fight rather than just raw stats of damage or things like that.
And they can be even more useful in other areas of the game that exist outside of that combat system.
And I wanted to make sure that our players were thinking more holistically about a character rather than the narrow lens of how useful they are strictly in combat.
So for example, the leper might be a one, the jester might be a two, and the crusader a three.
So the value between the jester and the crusader looks as just one, but the actual power utility difference is maybe a five, but the ranking order system doesn't allow for that level of nuance, and we don't really get a lot of useful information from this because we're not accounting for that gap.
Because yeah, it reads like one, two, and three, regardless of where they are.
This is why you often see tier lists used in fighting games, right?
So we structured a community discussion to not place the characters in a ranked list, but rather to group them in a set of tiers, A through D, as an example.
A being they display their utility in all circumstances, require little or no extra effort to make useful.
B, meaning some need some special care, but generally are pretty useful in all cases.
And so on down to D, where it meant that you would never recommend bringing these to new players at all, and they required too many specific circumstances to be actually useful or reliable.
After the players did all that, I then collated all that data and presented it back to them.
So this took some time to do the survey, like say, hey, submit us your data, and then I put it all together in a table.
Showing where everyone fell on the list, on the tier list, as well as showing the delta for each class individually so we could see sort of how the points clustered across the array.
From that discussion, From that, we were able to finally begin having the discussion that we wanted to have in the very beginning of how are the character classes balanced and what is the state of the balance in our single player game.
As it turns out, the spread between all the classes from our sample size wasn't as large as people perceived it to be.
Even though we saw some characters with high variance in their rankings, what it did do is it sparked a discussion by those who rated it very highly with those who rated it very By framing the discussion this way, we were able to have the community talk in a shared vernacular, making it easier for us to disseminate the conversation into any required actions on our part.
More importantly, it allowed the community to share information which resulted in some cases of players finding new means to play characters that they had previously rated poorly with no real actions from us, which is, I think, a big win.
Now later we did use that feedback to make some adjustments in places, but by taking the extra two weeks to post the survey, present the data back to the players, it helped avoid pushing changes that would have shifted a character's balance too far in one direction, which could then result in the never-ending design yo-yo of balance changes and tweaks, which we all should avoid at all costs.
Players are a huge resource in seeing how your game is actually played.
Our players have helped us improve our game across the board, be it through class function suggestions, boss trophy trinkets, or the mountains and mountains of quality of life improvements that have accrued over the development cycle of the game, which is why it's important to give the York community opportunities to give back and to celebrate those contributions.
So far, all of my points have been about how to, like, sort of regularly structure discussion or the importance of taking the time to make sure the community has this framework or shared vernacular to have discourse.
But it's also important to find spots where you can allow them to contribute in a less formalized way.
As an example, back during our Kickstarter, we had backers submit party names for certain combinations of our characters in a specific order.
If you've played, you've probably seen this already, but as an example, all of our players start with a Crusader and a Highwayman.
And then when they make their first party, we give them a Plague Doctor and a Vestal.
When they arrange them in an order, in the order on the screen above, they get the usual suspects.
And everyone always talks about this.
It's a great little community facet.
Now these offer no sort of in-game bonus.
It's strictly flavor.
But it was flavor that our Kickstarter backers, that cohort of our community, was able to give to us and imbue on the game.
And like I said, it's a great feature.
Players respond to these things.
They always, like, when they discover them for the first time, it's like a nice moment of discovery.
So when this happened, the Kickstarter backers basically filled out a survey.
They had all the current available character classes attached to the name, and then we filtered through it, and, you know, cut all the obscene or nonsensical submissions, and then we just jammed them into the game.
When we originally did this, all the characters weren't in the game yet.
Since that time, we've added, I believe, five new character classes to the game.
And we never gave the community an opportunity to sort of give party combos for those existing ones.
So we got a form ready to have players submit a new batch of names.
And this paired up really well with our most recent Radiant update, which was a free update for all of our players and was designed to respond to some of the largest community concerns that had appeared over the year.
The other nice thing about doing the survey is that the process to get them in was pretty low impact on the team.
For instance, it was something that I was able to manage all on my own as the community manager, which is also a big win.
So in a sense it was a super clean way to allow for the community to have an opportunity to contribute directly to the game with very little formality compared to how I structure things throughout the community elsewhere.
uh... in a sense this is a slam dunk for us uh... you know it's just a great way to bank a lot of community goodwill and it's just a really simple thing for us to sort of do uh... this is sort of the form that we used When things like this work out, it's important to credit and highlight, especially when those additions come in.
And sometimes that's easier than others, like in the two examples above.
But be sure when you do give credit to your community, it's not first and foremost to the specific individuals, but to the community at large.
Now, this gives focus to the community.
quote, not just as the individual, which helps reinforce the shared culture that we're trying to build for everyone and not focuses just on the game, but on the community at large.
So those are some of the ways that I wanted to talk about being a community camp counselor.
Now I wanted to pivot a little bit to areas that are within the same theme, but might not relate directly to my previous points of like being the camp counselor.
And the first thing I would like to talk about in that understanding the cohorts that comprise your community is understanding that players attach themselves to the state of the game when purchased.
We discovered an example of this during our days in Early Access.
There's this concept called the endowment effect.
It comes from the field of behavioral economics.
Essentially what it means...
is that once you own something, you prescribe to it a higher value than what you would have normally purchased.
That's the very same thing for if you didn't already have it.
Another way is if I were to purchase something from you that you value, you will generally demand more money from me than what you had originally paid, even if that amount was zero.
So that's just what endowment effect is in general.
So even though an early access is a platform that highly advertises itself for games in development, ripe with future changes through the duration of early access itself, players still attach themselves as owners to the game in the state at which they purchased it.
It follows then that as we implemented larger feature sets that dramatically affected the game, players felt as if this was no longer the game that they had purchased.
And we did not add enough value through those changes to offset their endowed value that they had attached to the game since purchase.
We had this play out in our Corpse and Hound update, which is well documented online.
We've given past talks on it, and if you want it, you can go find more information on it.
But essentially.
We did this as a patch to sort of introduce big combat, more depth, give it more strategic depth, and a better way to promote party compositions and diversity and just sort of give the game more everything that it needed.
It was a super important thing for us.
But essentially, it created a large schism with the vocal parts of our community.
Half of them feeling as if we took away their game and that negative value was compounded by the additional value that they had endowed to it since purchase.
The result was not great.
To say the least, we had a very upset group of players who felt we had essentially ruined the game completely, and there was a very visible and well-documented backlash.
So after that, I was hired and we changed our strategy.
The plan was to give our community members more information to better communicate design goals and intentions on a regular basis.
By doing this, we could better equip our more active players with the tools to help ensure that the dialogue between players and us was always well understood by both parties.
And through consistency, the level of discussion would maintain that relative structure without constant guidance by me or the members of the team.
Again, I feel that the problem above is not one of management.
but one of communication and culture.
Many times it feels, when we do our big community discussions, it's more like group therapy than anything else.
And this isn't a bad thing.
I actually think this is super helpful to view it from this angle.
We present our intentions to the player.
The players then give us their feelings on the matter.
And then my job is then to sort of build a strong framework for that discussion to take place so that we can sort of push past the knee-jerk reactions and dig into the heart of the matter when it comes to feedback and talking through an issue.
Another interesting thing we learned as we encountered, or another interesting thing we encountered as we learned more about the cohorts within our community was the difference in expectations between players who purchased during early access and those who purchased after full release, which leads me to my final point.
Give players means to continue the relationships that they establish with us.
Emphasis on they.
Darkest Dungeon exited Early Access in January 19th of 2016.
This opened up the final dungeon, which had more monsters content than any other region in the game and ultimately allowed players to beat the game.
While in Early Access, we would push builds and fixes as they came up.
Sure, we had big milestone updates like the Corpse and Hound or the Abomination update, but we also just fired out builds as we iterated.
We were just crushing it.
If anything, our players were really hungry for every update, with a finger on the comment button.
Just something we didn't account for, though, was how this expectation was going to switch when we went from early access to full release.
Players who are not early access players and purchased the game at release apparently did not want weekly updates.
And if we rolled out too many patches close together, be it new content or non-crash-related tweaks and bug fixes, some of our full release players would then vocalize their dissatisfaction with us.
Is the game not done yet?
Another indie dev releasing a half-finished product?
We all have heard this before.
Conversely, our early access players did not want these updates to stop.
And if we waited too long to update, they would also express their dissatisfaction with us.
And playing a game while it's in development sure feels a lot like an online game with LiveOps.
Even though our game was a solitary offline experience, a single player game, we had players who expected LiveOps behavior from us due to our iterative release process through early access.
So we had to strike a balance between the two groups, maintaining our active and fruitful relationships with our early access players, without rocking the boat too severely or too frequently for those who expect a less organic or perhaps even a more monolithic structured product release.
So what we did is we began to do short public betas prior to release to sort of solve this problem.
It allowed us to retain our early access relationship, player relationship, player relationship, without harming our new full release player base.
When a new patch was ready, we would roll it out into a beta stage and announce to our players that they could opt in via Steam.
We collected their feedback, push updates live like we did during the early access stage.
And then as soon as we felt confident in the stability and the contents that they're in, we would then push it live to all of our players.
While this in itself isn't anything technically groundbreaking, we found it was a great way to maintain and grow positive benefits of long-standing relationships that we had formed with our early adopters, and without disrupting the live game unnecessarily.
When combined with the efforts to structure discourse on our social boards, allowing for our past iterative workflow to exist post-release, allowed new players to come to the table to our game in ways that they hadn't expected elsewhere with other games, which then feeds back into the community at large once more and sort of keeps that whole cycle going.
All these methods we implemented all started from the same spot, ensuring an open and honest discussion with our players.
By being a good camp counselor, we can make sure that not only do we get our intentions known to our players, but it also signals to them that we are listening and acting where appropriate.
All feedback has some facet of value, and when you position yourself as a camp counselor with the aim to listen and understand both parties, the team and our players, that's when the magic happens.
So to recap, be a community camp counselor, understand the position or how you want to position yourselves relative to your players, why it's important to build a structural framework for discourse within the community, give your community opportunities to give back and celebrate those contributions, whether it be through very rigorous formal framing or through just very easy low barrier means, and then also knowing the cohorts that comprise your community.
You need to take the time to understand how to effectively communicate to all of them and know where they are.
And you also need to make sure you give them the means to continue the relationship that they establish with you, whether it be from early access in that stage of the development, or full release, or the DLC, or whatever it is, whatever position that you have people on board.
Okay, and thank you so much for your time.
I will have a few minutes, it looks, for questions.
So if you want to, hop in front of a mic, and I'll be more than happy to answer any questions in relations to our community.
Thank you.
Go ahead.
Hey there, I wanted to ask a question about the thing about the giving credit back to the community as opposed to individuals.
So you're the naming thing, and I've got a couple things like that in my game.
So did you not mention the community members that came up with the names at all, and you just said this is a community-generated name?
Or how did that work more specifically?
So in specifics to the example that I gave about the party name combinations, I did not give any credit specifically to any of the members who came up with them.
What happened though is after we released them, I put a huge list of all the names that had made it in, and then players sort of like went through and looked at it and said, hey, like mine made it in, and then they sort of dispersed that information out.
For other things in which we've had, the boss trophy trinkets that I had mentioned in the talk as well, that was a specific person who just like on a lark made this big list of things I'd like to see and we read it and we're like, yo, that's awesome.
Let's do that.
So we did it, and then at first we said, when we made the announcement that those were coming in, we said, hey, this is something that came from the community and then near the bottom at the end of the wrap up, we would say, hey, thanks to this person.
So we still find ways to give credit to them, but the first and foremost thing to do is to credit the community at large.
Cool, thanks.
Yep.
Anyone else?
All right, cool.
Thank you very much.
