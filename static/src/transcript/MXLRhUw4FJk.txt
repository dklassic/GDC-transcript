Hi, my name is Rami Ismail, I'm one half of Dutch independent studio Vlambeer. And today I want to talk about the nuclear throne and performative development but in hindsight we gave a talk about the in progress back at GDC San Francisco a year and a half ago.
This is about everything we learned since. So if you're interested in like the middle part, how we felt in the middle of this, go check out that talk. If you're here, you have access to the vault. It's there. I'm not going to double up on that. Just by show of hands real quick, I have about a five minute intro and I have a 25 minute talk. Who here wants me to go through the five minute intro and who is okay with just believing that I'm probably okay to stand here on the stage?
There's two people. I will personally give you the intro after my talk is over. So this part I'm skipping. Really cool. There's a joke there. Really good joke. I tend to tell a joke here as well. This I'm still very proud of, to be honest. And this is Nuclear Throne.
So we're talking about Nuclear Throne. So what is Nuclear Throne? Nuclear Throne is a roguelike. It's a top-down action roguelike. If you play indie games, you might easily describe it, even though I don't like describing games as combinations of other games, you might easily describe it as Binding of Isaac meets Hotline Miami. So there's a lot of shooting, a lot of explosions, and it's procedurally generated. It's really hard.
And we've created over the past two and a half years.
And one of the things we did while making Nuclear Throne was we live streamed development.
And at first we just called it live streaming development, but as we went we realized that we were doing a bit more than just live streaming development, so we came up with a term for it, as you do.
We called it performative development, and it's development as content.
So it's not development as a process, it's also development itself as content to be consumed.
So other people can watch your development, they can engage with it.
They can chat with you, they can watch you code, they can watch you make art, they can watch you make music.
And it's kind of a radically transparent way of making a video game.
It's not really something that has been done a lot.
So, performative development comes down to live streaming with, live stream development with the knowledge that you have an audience and sort of making sure that audience is engaged. So Nuclear Throne was made over a period of two and a half years. We started back in February 2013 and it was part of the MoJam bundle.
Mojang Bundle 2. Mojang, Minecraft, decided to do a charity stream where they asked a number of independent developers to livestream development of a game they would make from start to finish during a, I think, 72-hour period. And then at the end, everybody who bought the bundle would get those games DRM-free. They raised over $500,000, which was awesome. All of that money went straight to charity, which was also awesome.
But the interesting part was that we were asked to live stream this development.
And we had never really live streamed before.
So we said, sure, why not?
After Mojam was done, it was known as Wasteland Kings.
And we eventually had to change the name because the Wasteland series was being kick-started and there was some legal dispute there.
It wasn't bad, there were no lawyers involved, just a friendly email from Byron Fargo who was like, OK.
We're doing Wasteland. I was like, what is Wasteland? I hadn't heard of Wasteland. Anyway, I Googled it and it turned out that Wasteland was made before I was born, so I gave up on arguing about it. So at the time we were working on a game called Luftrausers and when that released we realized that we were still having a lot of fun making this funny, weird little roguelike game that was Wasteland Kings. So we decided to pick it up again with a new title. We decided to, in the spirit of Mojam, keep live streaming.
So we're going to live stream development.
And one of the reasons we did that was because when we were doing the original version of Wasteland Kings, JW, my co-founder, was really, really sick.
He was having sort of a fever.
And the thing that really kept him motivated and sort of like alive was the chat, which was just super nice and super enthusiastic and super friendly.
So he was like, I like this.
Let's keep doing this.
So we kept doing it. In August we picked up on the project again full time and then in October we launched on Steam Early Access. But when we launched on Steam Early Access we promised two things. We promised a live stream every Tuesday and every Thursday from 1pm Central European time to 6pm Central European time and an update to the game every weekend until it was done. So we would develop things on the stream and then the same weekend you could go and play them. So this is what it looked like when we started.
I couldn't find a higher quality screen shot because we streamed in horrible quality.
So this is the best we have.
As you can see, we have IRC open.
The chat is on the screen.
Everything else is on the screen as well.
And I think Paul Feer, our artist there, is dancing in front of a giant stack of beer crates.
So we were very professional.
We didn't really have an example to follow.
Nobody really had live stream development before us.
We were like, you know what?
We're going to do this.
We're going to do two live streams a week.
Two live streams a week, and every live stream is going to be two people.
We had a team of six.
We had me as a programmer and marketing business, JW as a prototyper and programmer.
We had Paul Veer for art.
We had Yukio Kalio for music.
We had Jonas Turner for sound effects.
And we had a young kid by the name of Justin Chan who was doing all the promotional arts.
And we said, every stream is going to be two people.
And then every month, everybody has to stream about three times.
Right? That's about what that comes down to.
It turns out that live streaming is hard.
It's really hard.
But, I mean, this looked fun.
So we basically said, okay, we're going to set ourselves some goals.
We're going to try this. We've promised it when we launched.
So I guess we should probably do it.
So we had a bunch of goals.
The first goal was to engage the community, keep them interested in the game, even if not a lot was happening.
And we wanted to create this feedback loop where we would put out a version, see how people were responding to it, and then update the game based on that.
It was our vision.
We very strictly said, you do not get ownership of the game.
You do not get to tell us what we do.
We're going to choose what we do.
You get to watch, you get to give us feedback.
We'll take your feedback into account.
But if we disagree, sorry, this is our game, right?
And most importantly, we've always been very much about transparency and trying to show people how games actually get made.
We feel that we've tried to be way too perfect as an industry and it's time to show the humans and the mistakes and the interesting little things that happen during development.
So transparency was a core issue and a core hope.
And we hoped...
that it would lower our community management load, that we would have to work less on our community because our community would be educated and well aware of all the issues we were facing and they would be able to communicate on our behalf.
So yeah, live streaming is hard.
It turns out that organizing six schedules of which four are freelance and part-time is not easy.
It also turned out nobody gave a damn about our stream.
It turned out that all the quality of everything we did was horrible.
The audio was terrible.
The video was terrible.
And we are horrible casters.
We have no presentation skills and nobody of us dares to stare at a camera without feeling embarrassed or grinning at it.
And then on top of that, you know what's really hard?
Talking while doing something.
It's really easy to just talk and it's really easy to do something, but doing both at the same time, it doesn't work.
I can barely make this gesture with my arms while I'm talking right now.
It's really hard.
But the people that watched the stream, they loved it.
They were super into it.
They were asking questions.
They were having fun.
They were making jokes.
They were coming up with horrible ideas.
It was a great time.
And we saw that we were teaching people stuff, which was awesome.
We added a laser rifle to the game because people asked, and then it turned out that the bullets go through the wall because we had a program collision.
And the moment we explained that as a programmer, you might have to program collision, just the entire chat lost it.
It was beautiful. They were like, wait, you have to program that? We're like...
They're like, oh, now we get what games take so long to make.
We're like, yeah, yeah.
Anyway, after two and a half years of streaming, we did 98 updates to the game. We had 250 episodes of the live stream and NuclearStone's dev stream ended right before the game got launched. At that point our channel had 15,000 followers, we had 1,200 subscribers and each of them paid $12.99.
Those 1299 actually gave them a copy of the game.
We were the first and as far as I know only studio to ever sell a game through subscriptions on Twitch and I think since then Twitch has said that you should probably not do that.
We just didn't ask for permission because it was an API hack.
I got a few angry phone calls that day.
But they were very supportive. Twitch likes it when you experiment with their stuff, they just might ask you not to do it again. Also, we made $31 in ad revenue. I checked this morning.
Since we opened our channel in 2013, we became rich.
More importantly, we found ourselves an amazing community.
The Twitch streamers and the YouTube streamers, many of them ended up streaming our game because the people that were in our channel were also in their channels.
So they would just recommend our game just because they were watching our stream.
And because they were watching the development, they also felt very tied into the game.
They felt very tied to the development of the game in a way that a lot of developers can only get through Kickstarter if they update it properly.
There are other such things where people are very closely involved with development.
One YouTube creator, Sleep Cycles, made 588 episodes, and each of them are 30 minutes long.
I think at a time that he streamed Nuclear Throne, you can explore all of No Man's Sky.
On launch day, every single one of them streamed the game, except for one.
Most of them streamed that day.
And it was funny because that was the largest spike we've ever seen in development.
By far the largest spike in development.
You want to know what the second largest spike in development was?
A YouTube caster, Twitch streamer, North and Lion, made an episode about the game and it just blew our sales off the roof.
So, we made a game on Twitch.
And making a game on Twitch, you learn a lot about how you make a game for Twitch.
So, here's what we learned.
Your game does not matter.
Twitch is not about games.
Twitch looks like it's about games.
Twitch says it's about games.
Twitch is about the casters.
Twitch is about the personalities.
It's about the people.
They use the game as a vehicle to talk.
They use the game as a vehicle to connect to people.
Your game, not the star of the show, not even close.
If you are making a game and you want it to be on Twitch, you know what the number one most important thing is you can do?
Make sure that you can talk while playing it.
If you make a game that is so over the top that you are constantly revving at 100% with your brain, all the Twitch streamer will be able to say is, uh, or holy shit.
Depending on their audience, that might be enough.
For most Twitch streamers, not enough.
So you want to create moments of pause, moments of breathing, moments where people can communicate about what they're doing, their high-level strategy, their low-level strategy, where they can make a joke, where they can talk, where they can talk about their day.
That's your number one thing.
For Nuclear Throne, in fact, when we first started the game, there was a mutation screen that you could use.
And one of the interesting things about that screen was that it was very snappy.
You clear a level, mutation screen come up, you click your mutation and you go.
And when the game just came out, when it first hit early access, you know what everybody did?
They read the screen.
And they would talk about the options they would pick.
Now after three months, you know what happened?
Everybody knew which option they wanted to pick as soon as they saw it.
They would get four randomized power-ups that they could pick from, and they're like, that one is the best one.
So they didn't talk anymore. You know what happened?
They ran out of breath.
It was hard to talk.
So we added an effect that made it take a bit longer.
And now they had a little bit of time to talk again.
So you can optimize your game for Twitch.
And the most important thing when you optimize your game for Twitch, communication.
This should be true for every game ever, is communicate your design.
Make sure your declarative layer explains what's happening in the system, that between two states of your game, people know what changed.
That makes sense.
Make your game in such a way that it communicates, that it communicates the important things that are happening.
For Twitch, you have to consider that normally the feedback loop that we have is game and player.
You go from game through the visuals or the sound or whatever to the player's brain.
The player's brain creates an input based on that and then the game continues.
For Twitch, you don't only have to explain this loop, you have to explain the loop that is somebody is watching this player who already understands your game.
You also have to explain your game to them.
Your game needs to be a constant tutorial for whoever is watching.
And if you do that, you can make a game that's interesting to watch, because you know what the alternative is?
The chat will be asking all the time, what is happening?
You know what Twitch streamers don't want to do?
Talk about what is happening all the time, because that's not what they do.
So you want to give clear feedback.
You want to have text prompts for whatever is necessary.
You want to make sure that there are clear indicators of what mode somebody is playing.
We have a daily mode.
The number one request we got after we implemented this, is please put something on screen.
So that the audience knows we're playing dailies.
Because now every time somebody comes into our stream, they ask, is this the daily?
And that was it.
Every single person would ask that.
So we added that.
Customization of where text goes, where does the HUD go, where does all that stuff go.
Like, make sure that there's space for people to kind of customize that.
Now, you could also completely mess it up, which is awesome.
Here's some really good ways to mess it up.
Not allowing windowed mode.
They hate it because a lot of them stream through window mode.
If you can do it, allow people to output audio over a different output device.
Not just the speakers. Allow them to output over whatever.
Because a lot of streaming applications will allow you to select where the audio comes from, and not everybody wants it over the speakers all the time.
If you have a game, check whether it works on the second screen.
I just drag it to the second screen, see if it still renders.
A lot of games don't.
That's a good way to never get streamers.
Most importantly, you know what sounds really clever?
Putting a message in the game saying to follow you on Twitch or on Twitter.
You know what you should not do?
That thing.
You know why not?
Because that's up to the streamer.
If somebody joins a stream and they're watching it and there's a message to follow somebody else, what do you think they do?
You're going to get either confused, which pisses off the streamer, or they're going to get annoyed because they want to follow that streamer and not you. Either way, not good. Don't do it. So, those are the most important things we learned about developing a game. Here's what we learned about streaming.
If you are a developer and you want a live stream development, which could be fun, here are some things you should think about.
Don't broadcast potato quality. Everybody who laughed at this joke has spent too much time on Twitch or at least some time at Twitch. Potato is just a word they use for bad. I don't understand it, don't ask me. It's just a word you use. If you want to stream on Twitch, please, please, please invest in a camera, okay? A webcam. We bought a Logitech C920. Is that product placement? Is that bad? I'm sorry.
We brought an unnamed brand C920 and a snowball of a microphone manufacturer that is named after a color that is blue. And we searched for good light. Good light in the office. And then we set everything up. Altogether it was about $300. The difference between the stream before that and after that is absurd.
Also, nobody hated us in the chat anymore, which was nice. And we lowered, in our case, we lowered the amount of streamers per episode to just one streamer because now they would be less tired, which also was good. Now, if you are the one streaming, here's a really awkward pro tip. Watch your own VODs.
So when you record a live stream, Twitch saves an archived version.
It's called a VOD, or video on demand.
Watch it.
It's really awkward, and it will probably kind of make you very embarrassed for yourself, and depending on how well you can deal with that, you might cry at it, like I did.
Watch them. Do you feel you're engaging? Like are you interested in your own stuff? I wasn't.
Is your speaking tempo okay? Like I like this as a public speaking tempo on a stage. But on Twitch you kind of have to do this because otherwise people just get bored. You have to speak faster, you have to like kind of keep going and not stop talking because people kind of get weirded out by that. Are you allowing awkward pauses? Like a pause like this is good. A pause that isn't clear is bad.
Right? There's a difference. Make sure that you're not making awkward pauses. Like, keep track of that. Are you reacting to the chat? Twitch also saves your chat, so you can read your chat as you're watching your VOD. Okay.
You can watch your chat as you're watching your VOD, which is super useful because you can see if you're answering the chat.
Are they entertained?
What are they laughing at?
What are they responding to?
Is your video quality good?
Is your light good?
Is there no lag?
Is the audio good?
Is your white balance good?
White balance is a really weird one.
Just check if your white balance is okay.
Read the chat.
Just very carefully read the chat.
Now, I asked a bunch of other streamers.
I asked William Chair, I asked Sky, I asked a number of big Twitch streamers, what's the biggest thing that led to your success?
And they all give the same answer, it's follow a schedule.
It's just be consistent.
Just every day stream, every two day stream, every three day stream, but do it consistently so that people know when to show up.
And when you tell them what the schedule is, you know what you do.
You follow it. You know what the most annoying thing is? Sitting down for your favorite Twitch show, turning it on, and nothing happens. That's really annoying. So, the biggest challenge to doing a good Twitch show is the fact that you have to learn to just drop everything when the show starts and do the show. Whatever you're doing, with, you know, reasonable exceptions.
And then be yourself. Be genuine. Like talk about what excites you and it will attract people like you that are excited about the same stuff. And don't create too much of an act. Because if you do create an act, you have to stick with it. Which isn't great. But also, don't be too much of yourself. Like please keep like a healthy mental barrier between the hordes of the Internet. And And your own sanity, please. You can use a persona. You can create some distance. Make sure it comes naturally. Right? And think about this. Personas on Twitch very often include a healthy amount of exaggeration and a healthy amount of bravure. So you can use those. Just make sure that you keep a bit of a buffer. Which... Internet.
So community building takes time from both ends.
I think I just got the five minute sign, which is great.
So building a community takes time from both ends.
So invest proper time. Make sure you invest time.
This is not going to be done in one week.
It's not going to be done in a month.
It's going to take you at least half a year before you have a good user base.
And when you have a community, don't waste your time. Be there when you say it. Reward people that are there very often. Be considerate, be thoughtful, respond to inquiries about your day.
Offer good content. Don't do a shitty show where you're hungover from whatever you were doing the day before. It helps if you don't drink. Oh, and moderate your fucking chat.
Seriously, have moderators. Pick good moderators.
You know what will really push people away?
Assholes.
Get them out of your chat.
Like, if you're worried about their sale, fuck that sale.
They're not worth the hurt in the community.
Keep your community good. Keep it healthy.
Keep it positive. Keep it supportive.
Keep it something good so that people want to come back.
So that your community, when it spreads out, when it grows big, when it reaches other things, your community is not that poisonous piece of...
How much can a poisonous piece of crap that a lot of other games create?
Keep a positive community.
Make your moderators careful, by the way.
It's easy to mod somebody.
It's really hard to unmod somebody without hurting a lot of feelings.
So reward their time.
Keep track of other people playing your game.
Somebody's streaming your game?
Go into their chat.
Talk to them.
You know what the nicest thing is?
When a developer of the game you're streaming is in your chat.
They love it.
Viewers love it, the streamers love it, do it. Just go hang out. You get a lot of requests, Steam keys, small modifications to the game, usually like little technical glitches. Sometimes they ask for a special build, which you might or might not do. Stuff like that.
But most of all, just have fun. Just go hang out in other streams. If you enjoy a stream, say hi, talk to them for half an hour. And then the people from there might show up for your stream next time. Most importantly, you need to understand Twitch culture. And Twitch culture, who here was at GDC Europe or was in the industry in 2010? Okay. So, I'm going to talk about For those of you who remember the Indie scene in 2010, it was kind of different.
It felt like more of a frontier, it was kind of new.
Nobody really knew what was happening, every hero that you had was your age, because nobody really started before that.
It was kind of a frontier.
Twitch in 2014, just two years ago, was exactly like that.
You know the biggest difference between how Indie grew and how Twitch grew?
Twitch is a multi-million dollar corporation.
It's kind of a giveaway, right?
Like, they're huge.
The Indie scene didn't have support structure, stuff like that.
Twitch offers all of that.
It offers events, it offers support, it offers goals, goals so important.
Twitch streamers know what they want.
You know what a Twitch streamer wants?
A sub button.
A way for people to subscribe to their channel and pay money.
That's your goal.
If you start streaming on Twitch, you want a sub button.
That's it. And you know when you have the sub button, what is your goal?
As many subscribers as possible.
If you're an indie developer, what is your goal?
I don't know, like, SOS make games about mosh pits and, like, kicking people in the groin or something.
And then, Piero doesn't do that.
He makes really pretty games about, like, the moon and stuff.
Like, everybody has their own goals and nobody knows what they're doing.
So, what is your goal? Like, you have to figure that out on your own.
Twitch streamers don't need to do that, they just need to figure out what personality, what voice to use to get there.
So...
Twitch is this personality driven thing with clear goals, where games are not the star but the vehicle.
So to work on Twitch, you need to understand that, and you need to just be a genuine part of it.
You just need to be part of that. And it's not scary to be part of that. They're not that different. They don't bite. It's just a radically different culture and if you want to be part of it, you kind of have to go and understand it. So it means that you have to understand what a host, what hosting is. You have to understand what rating is, which sounds really scary and basically means you send a lot of people to somebody else's chat, but usually it's a positive thing. The modes, the events, hanging out in other streams, stuff like that. It understands, understanding the language.
Now the final big tip that I have is this is a tip my brother gave, my younger brother Saif. He watched my stream for a few weeks and he said, why don't you ask people to subscribe?
I don't know.
You want to know the biggest secret?
It's by far the most impactful thing anybody has ever said.
Just ask people.
Like, we're so, we like to be so humble that we don't go to, we always laugh at people going, oh, please follow or subscribe.
It's like, ha, oh, that joke, please, please follow or subscribe.
Say it.
It's like you have this big hallway and at the end is the end of the stream and you put a button that's follow or subscribe right there in the corner, right at the start.
We would call that bad level design.
Right? Unless it's a secret button, but it's not. You want people to press that button.
Well, you know where you put the button? Every 10 steps in that hallway until somebody presses it, and then you move it away. Stream, same thing. Just say it. Say it. Please. It's really hard. I know. It hurts your honor. Follow or subscribe. That's it. All you need to do.
So here's a call to action. Do you have questions?
I'll take one or two because he is doing like a, that probably means no questions.
Yeah.
Do you find there was a significant shift in quality depending on whether you screen the development of your game or whether you didn't and reviewed it again?
The quality of what?
Yeah, Nuclear Throne would have never been nearly as good as it is now without the streams.
Like, the biggest thing is like a lot of indies are really bad at playtesting.
You know what's a horrifying way to playtest your game?
Watching a stream where thousands of other people are watching, where you don't want to say hi because you're embarrassed for what is happening on the screen.
Like, you will fix that shit.
Like, no question about it, because you don't want to be in that situation again.
Nuclear Throne would have never been what it is without Sleep Cycles, who did 580 episodes, without Best Nap, who did so many episodes about the game. It was huge.
So the first thing you do is you make a Twitch channel and you start streaming.
And that was the first thing we did as well.
We started with streaming, right, on Mojam.
And then from there we just started hanging out in other streams and we started meeting people.
It was honestly completely organic.
It was not very intentional.
It was just a thing that we did where we just liked people streaming games we liked.
So we started saying hi and then people started saying hi and then at events like this, it turns out some of them would be here and we just say like, hey, we, we, I was in your chat.
A huge fan.
And then.
Yeah.
We had a great time.
It was a lot of fun.
We're not going to get into that in the next couple of days.
But yeah, it was a lot of fun.
And we'll see you guys in the next video.
I'll see you guys.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
You meet people. It's honestly no different networking. There's one really nice tip.
You know where you can find Twitch people? At the Twitch booth.
Because, as I said, Twitch is a multi-million dollar company that has giant booths.
If you're at Gamescom, just walk over. Hang out a bit, say hi.
If you recognize anybody because you've been watching Twitch because you want to be part of Twitch, then you might recognize people and just say, Hi, I'm a game developer. I like your work.
Make sure that you do like their work, by the way. If you want to know how you can really piss off a Twitch streamer, it is by emailing them that you really like their tone and then also saying please don't swear too much while their gig is swearing continuously. That will piss off people. Don't do that. Don't be that person. Don't do mass emails. Like Twitch is about personality, so think about that. Is this really the, like, yeah, that was it? If you have any other questions, he's doing it with two hands. That's very impressive.
If you have any other questions, I'm going to be right here for the two people that really wanted the intro. Feel free to find me there and I'll give you the intro. Thanks so much.
Make games. Stream it. Please like and subscribe.
