Welcome everyone to level and quest design collaboration from Skyrim to Starfield.
We're going to be talking about the ways that different areas of design can work together.
Your own studio might divide up work very differently.
You might have a narrative department.
Quest design might do something very differently from level design.
Level design might be doing more quest design.
Everyone does it a little bit differently.
But as long as your studio has two or more designers, this talk will have something for you.
So I'm Will Shen.
I'm the lead content designer for Something Wicked Games.
We are a startup with veterans and leadership from Bethesda Game Studios and Obsidian Entertainment.
Prior to Something Wicked Games, I was a design director at Bethesda Game Studios.
I came up primarily in the quest design department.
And by the time I was leaving Bethesda Game Studios, I was working with the next generation of design leadership there with Lead Systems, Quest, and Level reporting up to me.
Hey everybody, I'm Daryl Brigner, world director and one of the co-founders of Soft Reigns.
We're a small studio of 15 right now, coming from places like Riot, Valve, Sucker Punch, and Sledgehammer Games.
We're still early in production of our first title, which is a single-player, first-person sci-fi adventure game.
where, when I was at Bethesda, I was primarily a level designer during my time there, but I was also lead level designer on Fallout 4, Far Harbor, and also Fallout 76.
So Daryl and I have worked together over a very long career at Bethesda Game Studios for almost 15 years, together before we both left.
And this talk is going to be a retrospective of a lot of our work together, both with each other, but also a lot of our former colleagues.
We're going to be talking all the way back to Skyrim.
of the game.
So what do we mean when we talk about quest and level design?
Every shop does it a little bit differently.
So let's go over what we mean for our talk, for our purposes.
So this old-timey oblivion picture here is to sort of remind us that we are talking about the past.
Darl and I no longer work for Bethesda Game Studios.
They may do things very differently now.
But in the course of our career there, which spanned over 15 years, this is what we generally meant when we talked about quest and level design.
So quest design handled dialogue and text, what a lot of places call narrative design.
But we were also in the booth with the voiceover actors and directors to provide them with context.
Sometimes we would be in there for the entire session.
We also handled a lot of the scripting, specifically to make sure that quests move forward.
So whenever an objective appears on the screen, that is usually quest scripting telling it to progress.
We also worked with all of the NPCs to have them walk around, to come up to you, to speak to you.
And finally, the quest design department at Bethesda Game Studios was also the systems design department for a long time.
There was no separate systems design department until a few years before we left, and typically what systems design would be would be there would be specialist quest designers who would do the systems design duty.
When it came to level design on previous Bethesda games, if there was a location in a Bethesda game, typically a level designer owned that location.
There can be outliers to this with places like settlements and towns that can often be owned by quests and supported by world art, but typically if there's a location, a level designer is owning it and doing passes through it.
We're also ultimately in charge of the kit pieces and the logic that puts them together, since this is how we build out our locations and our layouts.
We work really closely with WorldArt when coming up with the logic and the systems that define the kits.
We share responsibilities with Quest when it comes to AI behavior.
Our stuff often tends to be on the side of moment-to-moment gameplay and kind of default behaviors.
How does a creature react if he's just dropped in the world with no other linkage?
How can we quickly set him up for patrols or wandering behaviors?
We are in charge of most all the combat encounters in the game.
Either we own it and are doing passes on it, or we had a hand in layering the combat into a space.
We do a lot of environmental storytelling.
We're ultimately in charge of how it's done in our location.
But we work very closely with World Art when it comes to detailing out our locations to tell these stories.
And we do a lot of gameplay scripting, whether it's setting up systems to have our gameplay triggers affect other gameplay objects.
We'll share those amongst the rest of the design.
We also do a lot of unique gameplay scripting within our own locations to either add more to the story or make it more memorable in some way.
And when it came to collaboration between level and quest on previous Bethesda games, level design is in charge of the location, all of the combat NPCs, and any layout decisions that might come up during collaboration.
Whereas quest design is in charge of all of the narrative, all of the non-combat NPCs, and any story decisions that might pop up.
So now let's take a typical example of this kind of collaboration in action.
So let's go back to Skyrim.
Specifically, we're going to take a look at a quest called the House of Horrors.
This was in Skyrim in the city of Markarth.
I worked on this quest with a level designer named Dee Langlois.
And it's a very simple concept.
You are being asked to investigate a house.
The house ends up being haunted.
There is an evil presence that comes from the basement.
So quest design here handled all the dialogue.
There is a primary character that is leading you through the house, so I did all of his dialogue.
I also handle all of his behavior, so he comes up to you and he walks you through the house.
And when the quest comes up and tells you that it has started and it progresses, that is all the scripting on my end.
Dee was handling layout, but also the scripting for the haunted objects.
So all the poltergeisty effects, the camera shake, that was all handled by Level Design.
And I want to mention art as well.
We had a few unique assets for the space, including the altar in the basement that also functions as a trap.
There is a unique animation for it, and we also did a pass on the lighting and fog effects inside the space.
But let's take a closer look at how it was made collaboratively.
So the main character in the quest is from a faction in the game called the Vigil of Stendarr.
That faction was actually originally concepted by Dee.
They were working on other encounters in Skyrim and I'm But the more we talked about it, the more it became very clear that there was an opportunity here to ground this character in the world, and also to have it have callbacks to other encounters that you might run into.
So we worked together, and I came up with the name The Vigil of Stendar.
Stendar is the name of one of the gods in Skyrim, so that grounded it in the lore.
And I renamed the character and his backstory so that he was part of this faction.
When I originally wrote up the quest, I just wrote that it was going to be a haunted house, and that was going to be super fun.
But that was all I had.
When we actually sat down to work on what that meant together, Dio is the one who pitched the idea of, hey, we have a full physics system.
I could script all of the loose objects in the house and just fly them around randomly to simulate a poltergeist.
And then as we were working on it, I came up with the idea of why don't we have the entity speak to you like a ghost as you're progressing through the house.
Art also added in some storytelling bits.
When we were doing the lighting pass on the space, the effects artist who was working in it was a fan of the Poltergeist movie, and she suggested that we add a little Easter egg of the randomly stacked chairs inside the space.
World art also helped with some of the storytelling.
I originally had the idea that you get trapped in the basement and that was just going to be a cage or some other very simple trap.
And the world artist assigned to make it came to me and said, I think we have an opportunity here to tie the story together by making an altar to the evil presence actually be the thing that springs the trap and it's tied into the altar.
And again, I originally was hesitant.
I felt like that would be a lot more work.
But he assured me, actually, it would be easier for him to make it all part of one experience.
So one of the big lessons I learned here was we're writing and designing the game together.
When I was getting a lot of suggestions from my colleagues about what we could do for this quest, I was originally very defensive.
You know, I thought that as, you know, I was a new quest designer, this was one of the first quests that I had worked on, and I thought if I didn't have control of everything and have everything perfect in my head, that I was a failure.
And so I didn't realize at the time that my colleagues were trying to give me the advantage of their expertise and perspective.
And once I let down that wall and started listening to them, that is what made the content so much richer.
So this is a very typical example of how we made all the content in Skyrim.
We had a piece that we all knew we needed to work on, we sort of came together, everyone added their bits to it, and then we would move on and do another piece.
But we were also experimenting with other ways to get work done.
So throughout Skyrim, we had several level designers starting to experiment with their own quests, making their own quests with the quest design tools, and just telling stories in that space a little more.
This leads to kind of an atypical example that I want to talk about here, where in the case of this example, I'm the level designer working on the location.
There's a different level designer creating the quest that ends up layered through the location.
The quest is Lost to the Ages, created by Steve Cornett for Skyrim's Dawnguard DLC.
Lost to the Ages has you exploring the existing landmass of Skyrim, revisiting some old dungeons as well as some new ones, collecting some quest objects for the end of the quest.
I had been working on a location for Dawnguard as well, where all of its story was kind of tied within itself, and it was all visual storytelling mainly.
This is the location here, and you approach it, and you feel some earthquakes as you're approaching the exterior.
You continue to feel the earthquakes as you explore the interior of this location.
And once you get to the main chasm here, you see that the whole Dwarven Ruin has been split in half by a massive earthquake at some point in the past.
You explore the rest of the location, wind through these caverns fighting Falmer and other creatures until you reach the summit where there's a massive dwarven machine that you then turn off and the earthquakes will stop.
At some point, Steve must have played through this location or knew about it in some way and came to me and said, hey, this is a really fun map to play through.
What do you think about if I were to add a quest NPC to your location?
that could kind of be a guide for the player through it, as well as, you know, explain some of the overarching Lost of the Ages quest narrative.
And I thought that sounded like an awesome idea, so Steve started to layer Katria, a ghost, throughout the location.
She starts out as a ghostly voice when you enter the tunnels, telling you to turn back, that it's dangerous here, once you hit the main chamber.
She reveals herself.
You see that it's a ghost you've been talking to.
And she motions down to her corpse and says, it's dangerous here.
She repeats it and says, if you need help, I can help you through the location.
If you say no, she'll end up at the end near that dwarven machine.
But if you say yes, she'll kind of follow you through the location fighting Falmer and other creatures as you're making your way to the summit.
And this made me kind of realize that we actually do have some objects in like unique elements in this location that we could use some explaining to the player which would benefit us because This is a little dwarven mechanism that when you impact it in some way it spins to the top of its pole and then opens a door unlock something somewhere else and We have some visual storytelling here for it, but I was like hey Steve Do you think you could mention this to the player?
through Katria and kind of explain some of this.
And he said that that sounded good, so he explained some of these elements to the player.
They didn't have a name on them, so he named them kinetic resonators, which I thought worked out pretty well.
Steve and I collaborated back and forth on different elements like this throughout the location, but it all comes to a head at the end where you're in front of that big dwarven machine.
There's five of those kinetic resonators placed throughout it, and you need to hit it in a certain order to solve the puzzle.
and then the doors will open, the earthquakes will stop, and this part of the quest is completed as well.
If you get a bad pattern, you'll get hit by a trap of some kind, an enemy will spawn, there's plenty of visual storytelling around the location where we're explaining the bad things that can happen.
But the coolest thing that ended up happening here was Steve layered Katri's story into the location story by saying She's the one who put in the wrong pattern that caused the massive earthquake, and it's also why she's dead at the beginning of the location.
So that ties in really well with the story I already had for this location.
He also layered in a journal onto Katria's corpse that not only explains some Lost of the Ages quest thread you can pick up to find dungeons nearby to keep the quest going, but also final moments from Katria where she writes about this location in her journal and gives the player some hints to starting puzzle solutions at the end.
So like I had said, many level designers are learning the Quest tools and getting more familiar with them.
And this starts to develop kind of a shared language between Quest and level design.
And this language deepens our collaboration going forward onto future projects.
So now we're moving forward to Fallout 4.
And as I had said, many level designers, including myself, have messed with the Quest design tools more and more and are developing that shared language with the Quest design team.
In this example, I'm going to talk about a larger scale, but back to a more typical example of quest and level collaboration.
So the quest is The Last Voyage of the USS Constitution, created by Ferret Bowdwin, who sadly passed away during the production of Starfield.
Ferret and I were teamed up to work on this location, and he came to me with a pitch of this World War I ship, the USS Constitution, moored on top of a bank here, rather than nearby in the water, where it actually is in real life.
near Boston, and he wanted the player to be able to explore the immediate area of the bank, be able to get inside the interior of the ship and meet the crew members, who are robots, and then get to the top deck and meet Captain Ironsides, who's a sentry bot.
And Captain Ironsides will ask for help repairing some elements of the ship, as well as the rocket engine, so he can get this ship back in the water where it belongs.
Farah also pitched some scavengers attacking at the start after you had finished meeting Ironsides, and then periodically throughout the quest as you're returning to repair different elements of the ship.
This is how the whole quest starts.
This is how it's established and everything.
What I want to talk about now is Farah and I's collaboration back and forth as we implemented the elements we kind of knew we wanted in here, as well as pushed on those elements to add to the gameplay and story in different ways.
First off, we had the different elements around the ship that you repair, including the engines.
I scripted up a system that would just use objects from around Fallout 4, because you pick up all kinds of random junk in Fallout to use the workshop system and craft things.
So I layered that into this system, and it worked pretty well.
Ferret played through it, and he's like, I like the repair setup, but what if we made it more personal to the player, where if they have a special stat on their character that could help them bypass the need to go get the resource or expend the resources, they could just repair it outright.
And obviously, that sounds like a good idea.
So Ferret suggested a bunch of stat checks for the different stations, and I layered that into the scripting.
And I think that was a big benefit to the quest.
We didn't have a lot of those in other places in Fallout 4.
Also, after visiting, or talking to Ironsides for the first time and kind of getting your quest info, future visits to this location required you to trek all the way through the interior of the ship to get to the top to talk to the crew members again.
Ferret and I went back and forth on maybe how we could solve this.
One was to move the fast travel marker to the top of the ship, but that didn't seem as in world.
And if you wanted to role play arriving to the ship and leaving, you still had to deal with trekking all the way up to the top of the ship.
So I pitched this idea and then worked with WorldArt to implement this automated robo elevator that kind of rises you up to the top of the ship when you arrive and takes you back down to the street level when you're leaving.
Ferret had also played through the different scavenger attacks.
And we were really liking how those were shaping up.
But Ferret wondered if there's a way we could add a name or a face to this faction.
And if there's a place nearby, we could have them hole up and kind of have a little base for them.
And I told him there was a good spot where I'd been spawning scavengers already, kind of down in an alley.
So I worked with World Art to kind of turn some buildings into an old diner that the scavengers had made into a makeshift base.
And then Ferret went in and layered in some named NPCs, some dialogue for them, so you can kind of get an idea of why they're doing what they're doing, why they're attacking the ship.
And Ferret kept working on this little chunk of this area with the scavengers.
And this ends up turning into a possible quest path, where you can actually sabotage Ironsides and the ship.
And that'll ultimately result in you getting double-crossed by the scavengers, if you take that path.
And also, World Art was adding a lot more elements to the World War I ship, the USS Constitution.
uh...
kind of almost last of which is these cannons that were pretty much facing right where the scavengers are attacking.
Everybody who played through this sequence wanted to fire the cannons in some way.
So Ferret and I started talking about maybe ways we could solve this.
And that's when he reminded me that the end reward of this quest is actually a weapon called the broadsider.
And it's a small cannon you can hold that shoots small cannonballs.
With that reminder that that was in the game, I was able to easily set up these cannons to fire down the whole line of them when you pull the the circuit breaker here, and then after a short cooldown, you can use it again.
And then Ferret went in and added in an optional objective to the attacks that would remind the player that these cannons are available for use after their cooldown.
So you have helped Ironsides repair the ship, you've dealt with the scavengers, he sends you over to flip one last circuit breaker from a good vantage point, and you pull the circuit breaker, it powers up the engines, and then the players get this reward at the end.
And this is just a gif, there's no audio.
But the rear engines kick in by themselves at first and kind of drags the ship off of the bank.
And just before it falls into the water, the front engines kick in and keep it afloat.
And if you were wondering, you can actually jump across the buildings to my left and actually hitch a ride on this thing and just ride it over to where it ends up.
You won't survive it though.
We had to put a kill trigger in.
The loader couldn't keep up with how fast the player was moving, so we kind of had to end it.
So Ferret and I's collaboration didn't end there.
We now have a World War I ship in the Boston skyline at the top of one of the skyscrapers.
You can see it now from everywhere on the map.
We were trying to figure out how to get the player up there in the least amount of changes to the game.
And I ended up pitching this idea and kind of going with an elevator that takes you from the bottom floor to the top.
And it's some empty rooms up there, and you can explore a little bit of them and loot some stuff.
After the state change of the crash, that same elevator just drops you out onto the wreck.
And then Ferret went in, added some post-quest dialogue to the crew robots, as well as Captain Ironsides, where Captain Ironsides doubles down on the fact that this mission has been a success, and by his calculations, in a mere century, will take to the seas.
So it really benefits you to kind of learn or develop a shared language with the people you're collaborating with, especially if they're in other departments.
It'll really benefit kind of the efficiency you hook up your content and kind of the options you have once you start pushing on it and putting it in different directions.
So after Fallout 4, Daryl and I get tapped to lead a DLC.
And so now we are not only making content, but we have to plan and review content as well.
So this ended up being Fallout 4 Far Harbor.
And during the planning phase of Far Harbor, we had a very concise, clear set of goals.
One of the big ones was we knew we wanted multiple endings.
The base game of Fallout 4 had been out for a while.
When we were planning this DLC and one of the big major points of feedback we got from both the press and our audience was they wanted more choices and consequences, a lot of that crunchy RPG story stuff.
So we knew we wanted multiple endings.
We also knew we wanted to add more non-combat gameplay and solutions to quest content.
We also knew that people were probably going to play this DLC after they had finished the base game, so we had to have high-level equipment added.
And then we also wanted to continue the success we had in Skyrim Fallout 4 by allowing the development team to experiment more during the DLC.
One of those experimentations was we had three factions, and we gave ownership to the story for each faction to an individual quest designer each, so a different quest designer owned each faction.
And one of the major things we did was give them more say over both the story, but also all the outcomes.
When we were planning the DLC originally, I only planned for about three outcomes for the ending.
And by the time the quest designers finished up Far Harbor, they had added about a dozen to 15 endings, depending on which variations you count.
Some of them were pretty small, but they were able to take choice consequences and reactivity a lot further than I thought was possible.
We also added in more of those stat challenges that we had originally put in for the USS Constitution Quest.
So we added those everywhere.
We also added in an entire new puzzle gameplay system.
This was inspired by 90s, early 2000s virtual reality movies and sequences.
So a lot of bright colors.
And the basic idea here was we needed to tap into and retrieve memories from an Android.
but we were able to complete an entire tower defense system within Fallout 4 in a matter of months by the end of the DLC.
Another thing that happened was we had artists who wanted to experiment with design.
So one of our world artists, Nadia Hashert, wanted to write the story for the space she was working on.
She pitched the story to me and Daryl.
We approved it.
Great little tale.
She wrote all the notes, but also used her art background to do illustrations to help sell the story.
And another big thing we did is we wanted to continue to allow level designers to experiment with quest design.
And so Dee Langlois, who I had worked with on Skyrim, was tapped to do both a large quest, a big side quest, but also a really large location that would encapsulate the quest.
And this ended up being the Braindead side quest in Far Harbor, which takes place in a vault and is a murder mystery involving robots.
So those were our plans, but we experienced a lot of setbacks as we moved to actually make the entire DLC.
So now I'm going to talk about how we went about solving some project-wide problems that came up during Far Harbor, as well as kind of things we didn't solve and what we realized after we had finished Far Harbor, the mistakes we had made in some cases.
So first off, the three different faction questlines that Will had talked about ended up requiring more elaborate battle sequences than we had originally anticipated.
We ended up calling in an experienced level designer, Steve Cornett, to come in and help out.
And Steve had not only set up kind of scripted sequences like this before, but as I had mentioned in the atypical example before, he's worked with the quest tools.
He's developed a shared language with the quest designers.
So he's able to implement the attack, as well as explain the needed elements to hook into the quests for the various quest designers that were running the faction quests.
They could communicate quickly and get this stuff done and kind of across the finish line in time.
Also, the puzzles that represented the memory sequences in the game, I worked on myself along with one of our senior systems designer, Kurt Coleman, who worked on a lot of the workshop elements in Fallout 4.
He and I worked on all of the puzzle elements for these puzzle sequences, and then I went in and made all five of the puzzle levels for the game.
And the issues we ended up having with these were that puzzles could confuse the players at times, but ultimately overstay their welcome for most players.
And the biggest issue was that we had made five puzzles, and the first three are mandatory, and the last two are optional.
And I took full advantage of the optional puzzles by using all of the gameplay elements to make it kind of as fun and challenging as I could.
I had been playing a lot of Portal 2 at the time and making a lot of portal maps.
That's also probably why a lot of this is in here.
But the issue with the player is they would end up going into the first memory sequence.
And after the third memory sequence, we'd pop an objective for them to come out to the main land, out of the virtual reality area.
But we'd continue to pop objectives for the remaining memory sequences.
And most players assumed they had to complete all five of them before they even left the memory sequence.
And I believe most players played all of them.
Also, our large location and large quest that was taken on by a solo level designer, Dee Langlois, ended up being too much for one person to take on the way we had scoped it.
We had kind of done what we had done on previous projects when a level designer took on a location and a quest, or just a lot from another silo, like quest design, and just buffered some more time.
And this time, we did it again and just buffered more time.
And we realized we actually needed to properly scope these, get buy-in from both quest and level production to actually get these completed properly.
This ended up requiring us to have D focus on the quest elements to get those finished up, while we brought in outside level designer help to finish up the location elements.
The end results of Far Harbor, after we had shipped, were that Will and I got to work together and lead a project, which was really awesome.
The criticism on Far Harbor was mostly positive, which was really satisfying to hear and kind of read on the internet in places and hear from people, really.
Our biggest sore spot were the puzzles and us not properly telegraphing the player, which ones were kind of mandatory, which were optional.
And our level design quests that we took on for this project needed more production buy-in from both sides to be properly scoped.
But in the end, our team morale was really high, and we were excited about whatever our next project was going to be.
The next thing I want to talk about is what happens to our collaboration and the way we work when the work starts to get really difficult.
So we're moving forward in time here to Fallout 76 now.
And the two things to keep in mind are we're scaling up internally, as well as working with external studios more than we had ever done before, as well as taking on a multiplayer project, which we also had never done before.
And the first thing I want to cover is the easy stuff.
And what I mean by that is the stuff that was at least as fast to iterate on or as fast to kind of get the content in to the game as it was in previous projects, compared to previous projects.
So during Fallout 76, we were able to do basic level design almost as fast as we had done it during previous Bethesda projects.
We were able to build out our worlds up to the level you kind of can see here.
We could add in encounters.
We could do all kinds of the things we needed to do on previous projects to kind of flesh our locations out.
But the biggest hurdle comes in when we need to deal with a multiplayer element.
If we want to play our level with another player or play through our location with a quest enabled, that would require the server to be spun up to support all of this.
And our iteration time, typically, at Bethesda during non-multiplayer projects, is about a minute to kind of see your changes in game, which is pretty fast.
And we came to rely on that.
We could also push changes to the game that was already running.
So we could do some changes almost instantaneously.
Once we had to deal with a server, we ended up dealing with kind of iteration times.
It could go anywhere from 3 minutes up to 10 minutes on a bad day if the server's having issues that day.
But basic level design, we could still build out the world and stuff without having to rely too much on the server spinning up, which really benefited us in the long run.
as far as building out the world.
There was other caveats to that that I'll bring up later.
We also got to start with Fallout 4 assets from the beginning.
This was a luxury we'd never been able to use before, other than going from a project into DLC, where you can just hit the ground running and work right away.
So we were able to do that on Fallout 76.
And that really helped us.
The combination of hit the ground running at the beginning, as well as have the iteration time to build out the world was really beneficial to us.
World art was also able to iterate just about as fast as we were for the same reasons.
We were able to get the world blocked out, the landscape, or kind of define where our locations were going to go.
And we had all the assets to kind of block all this stuff out right away.
This was really beneficial to us because the map, as we had scoped it for 76, was to be about four times the size of Fallout 4.
So all these benefits to world building were really helpful to us.
The next thing I want to talk about is the hard stuff, and that's the opposite of the easy stuff, which is the stuff that just took longer on this project for various reasons that I'll start to explain as we go through the different examples.
First off, the multiplayer hurdles that came up, especially for level design when it came to scripting our locations.
Even if you were knowledgeable with our proprietary scripting language from previous projects, adding in the hurdles of multiplayer could really cause issues with even somebody who's used to scripting, knowing which events and which functions fire on the server versus the client was enough to kind of make some level designers not want to script anymore because of the added confusion and the iteration time just to test if they did anything proper anyway.
Early on in Fallout 76, I decided to add some scripting elements to the location that were elements that I had done before.
That way, the only hurdles I'd run into were the multiplayer ones.
And I was also trying to figure out what an interesting multiplayer Fallout location would be, because that was a new thing for us.
And I settled on this set of haunted cabins.
This is Alpine River Cabins.
And you can come here alone, obviously, or with a group of friends, or just with random players.
And you'll discover that there's There's haunted picture frames that spin randomly.
There's doors that will slam closed every once in a while.
Distant screaming.
I'd spawn enemies randomly.
And keen-eyed players could spot power cables that would bounce between the the cabins as well as head up into the trees.
And if you follow them up into the trees, you'll find a treehouse overlooking the cabins.
And all of the haunted sequences are set to be automated.
So it's just firing through all of them, and players are experiencing them.
You can actually turn off the terminal sequence and then affect them yourselves.
So you can mess with your friends or other random players that are passing by.
What this ended up kind of proving out is that the difficulty and the hurdles that multiplayer added to not only our scripting and understanding that, but also our iteration time, and ended up limiting the number of unique gameplay experiences we could add to our individual locations.
And that was really something we did a lot in previous projects, was just add a little more scripting to bring up the story some or make our location more memorable.
This also ended up having a ripple effect of level design kind of unlearning that shared language they had developed with the Quest team because of using the Quest tools and doing scripting.
Since we were doing less of that, all of the stuff that was benefited from it started to dissipate.
Also something to keep in mind that I mentioned at the beginning of the 76 section is our scale.
We're starting to scale up more than we ever had before.
And to set the pace here is we shipped Skyrim with a little over 100 developers.
And the process we used to make this game is the one that Will and I have been describing through this talk.
already, but as you look here, moving forward into Fallout 4, we didn't scale up that much more.
We did bring in some outside help from Behavior Interactive on things like our rendering tech and some other graphics things, but our scale didn't change that much.
We still ran with the same process when we developed Fallout 4, but as we move forward into 76, you can see that our scale just kind of goes to a level where we were not obviously expecting it.
At this point, we are double what we were on Fallout 4, even if you include our external help.
We also are adding more external help from other studios that are kind of owned by the umbrella company that owns us.
And also keep in mind, the blue that defines BGS devs under Fallout 76 is not actually solid.
It's made up of four Bethesda studios.
So even internally, we're trying to communicate remotely and figure out how that works.
And now at this level of scale, it's impossible for any one person to know everybody on the team.
And it's also much more difficult than ever to know who does what, who you're supposed to report to.
So that just affects process all across the board.
In the end, Fallout 76 has a rough launch.
We end up taking another year, adding in human NPCs, dialogue for those human NPCs, instance interior locations, so you can actually have quest content that can change state of the world.
We end up adding all that content to the Wastelanders DLC, which ends up helping revive Fallout 76.
So moving forward, we know we have to deal with this new issue of scale and how do we work with this incredibly large team.
So let's talk about Starfield.
So by the time we ship Starfield, we have grown even more, probably by about the same amount from Fallout 4 to Fallout 76, as you can see here, well over 500 people.
But also, we are now working with a large number of external groups, well over a dozen.
And these groups are doing everything from effects, lighting, they're working on tools programming, systems programming, pretty much everything.
and they have to all be integrated into the development team for the work they are doing.
And another part of this is these are external groups, each with their own culture, each with their own leadership, and they are being brought in at various times throughout production, sometimes early on, sometimes to finish it.
So life becomes a lot more focused on our task tracking software.
We were using Jira at the time.
Jira definitely became a way of life as we tried to reconcile and handle all of the work being done across so many people.
And the process we ended up settling on was one that was departmental focused.
So we had all of the approvals handled by a departmental lead who also had a departmental producer.
So for example, Quest Design, there was a lead Quest Designer.
I was the lead Quest Designer for Starfield.
I had a design producer specific to Quest.
And we would go through all of the requests and proposals, approve them, and then send that up to a member of senior leadership who would also approve them.
Another thing we had to do was also start reconciling the schedule across all areas of production.
So every request now needed to go through all the producers because we needed to check all of the contingent work.
Asking for something as simple as a chair wasn't so simple.
Do you need animations for it?
Do you need sound effects for it?
How much does that add to the schedule?
Can it not fit because one of those teams does not have the time?
That all had to be wrangled.
And so that became a way of life for many people.
tool.
And then finally, because there's so much work going on, we needed to make sure that there was accountability for all of that work.
And so we needed to create a system where all of the departmental leads were the ones providing the feedback for all the work done, and also verifying that the work was completed, and saying, yes, it's finished now.
So this had an inadvertent consequence of favoring the department over the actual project and what the project needed.
And this makes a lot of sense because when you are first asked to be a department lead, you're worried about the department.
That is the thing you're told you're responsible for.
Suddenly you have to reconcile several people's schedules, you're responsible for them, you're responsible for their time.
and to collaboration requests.
So another consequence of this was, as we moved forward, was documentation became a way of life and became absolutely critical.
We used to be able to just sit down someone new to the team with someone who had already been on the project, and they would just learn all of the things they needed to know, kind of almost through osmosis.
But now we had to rely on all of our documentation tools.
So for example, we had a shared documentation tool with Confluence.
We were also using Slack.
We had to make sure and enforce putting communication in the major Slack groups, not only so that it could be asynchronous, but also so that everyone could see it, because we needed to make sure there were no hallway conversations that was hiding work that was being requested.
And finally, we had to do a lot more tutorials.
So I was in OBS Studio a lot making video tutorials.
So on Fallout 4, when I needed to teach someone the tool set, I would just sit down with them and answer their questions.
But now we were working with people from around the nation, sometimes around the globe.
I often didn't know when they would need me, and I often didn't know who might need me or what they would need to know.
So it became absolutely critical to do a lot more tutorials and how-tos about every feature of the toolkit.
Another interesting consequence, by the way, this is not a real Slack profile.
I grabbed this from Slack's website, so no secrets here.
But this is an example of a phenomenon that happened where not everyone knows you or has a relationship with you, especially if they're from one of those outside groups who's coming in to help at the end.
So your title became incredibly important.
There are many people I met because they messaged me because they saw my title and they were assigned to work on something maybe that day and didn't know who to speak to, so they came to me assuming, oh, well, you must know something about this because you have lead.
in the future.
So, what does level and quest design collaboration look like in this environment?
You know, game developers hate bureaucracy.
We now have a ton of bureaucracy.
So, can you continue to make memorable moments at this sort of scale with this sort of overhead?
So I'm going to have one last example of content.
This is the buried temple sequence at the end of Starfield.
So I was implementing the main quest in addition to leading the quest design team.
And this was around the time I had done the third iteration of the main quest.
So I had written and implemented the main quest about three times.
And we were finally at a state in the project where we could play through the whole thing together.
And it became very clear that we were missing a large final location that was going to tie the main story together and have a satisfying action-filled payoff.
We also didn't have a big space battle at the end, and this was a space game, we added a new space battle system, so we had to have some more elaborate sequence added there as well.
I had a problem.
I was both implementing the main quest and leading the quest design team, so I had absolutely no time.
The entire quest design team was already overbooked.
And so we went to a trusted senior level designer, Steve Cornett.
We've talked about Steve a number of times in this talk.
He was definitely our panic button multiple times.
He might still be the panic button now, we're not sure.
But we knew that Steve had worked on a lot of quest design since Skyrim.
And so we went to Steve and said, hey, quest design is overbooked.
We need someone who can pitch and implement the final quest of Starfield.
And I was on hand to help write dialogue and review the content with him so that we could get a tight iteration loop because we didn't have a lot of time.
And we also made sure we assigned him a separate level designer.
A level designer from BGS Montreal, Samuel Frontot, handled the layout.
Because as we learned previously, asking someone to do both an incredibly large space and an incredibly large quest in a small amount of time was not possible.
So we knew we needed help from the beginning.
So Steve pitched this idea of having a dimension hopping mechanic.
Starfield is ultimately a story about parallel universes.
And he thought we could take spaces from the main story and have you hop into them throughout the final sequence to tie everything together.
We also added in a final fight with an adversary, including a way to skip the fight entirely using the speech challenge system.
And Steve repeated the dimension hopping mechanic here so that you would be fighting your adversary throughout several iconic spaces from the main quest.
So this was really made possible by a collaboration, a very classic collaboration between old veteran designers from Skyrim and new designers who had come in more recently.
And the thing that made this work was necessity and urgency.
So as teams get large, they will silo naturally.
That happens.
But Necessity and urgency also naturally breaks silos because we knew we had to have this piece in for the main quest.
Main quest is an important piece of content.
It gets priority.
But we also knew we didn't have a lot of time.
So trying to do everything formally wasn't going to work.
We had a lot of experience with how long that bureaucracy would take.
And so we know we needed to suspend things.
So we moved mountains and shifted things around so that a small group of people could work on this very, very quickly.
Now, you don't need to wait for an emergency in order to do this.
The important thing is providing your team with a set of project-centered goals and project-centered communication, always letting people know constantly and consistently, hey, this is what the current problem with the project is.
All of the departmental leads need to know that when it comes to their individual work and their individual teams, we need to all collectively sacrifice for these higher level goals so that we can hit the things that we need to hit.
So let's talk about some takeaways.
Number one, write and design your game together.
You might have an area of responsibility, but your colleagues in your other specialties have a lot to add to your work.
They have other perspectives, and you do not need to be defensive or ultimately even in control of your own content.
We're all along for the ride.
They will make the work better.
Also, remember to develop a shared language with the people you're collaborating with, especially if they're in another department.
It'll help you more efficiently put your content into the game, but it ends up expanding your storytelling abilities and allows you to push the content you do end up with in the game into fun in different directions.
Give your team clear goals and let them reach for it.
Creatives really thrive in a sandbox where things are defined but there's a lot of room to play and experiment.
This will allow them to achieve things and surprise you in ways you didn't think were possible.
And also remember that when the work gets difficult, people will tend to do what is most comfortable to them.
And oftentimes, that's retreating back into their specialties.
This will end up having a negative effect on any shared language that has been developed.
And it will also end up focusing the content of your game on the stuff that's easier to do.
So make sure that if you want certain content in your game, make sure it's not super difficult to implement or you won't get as much as you want of it.
And finally, large teams will naturally silo, and emergencies will naturally break them out of it, but you do not need to wait for an emergency.
Clear, consistent project-level goals and communication will keep everyone focused on what they need to focus on, and everyone will do what's necessary to make sure that the project succeeds over their department or their individual teams.
So we want to take a moment here to thank all of the collaborators we've named in this talk, and also all of the collaborators we didn't name.
It takes a lot of people to make these games.
So thank you for everyone who has worked on us on various titles over the years.
And we want to give a special mention to Ferret Bodoin.
As Daryl said, we lost Ferret during the production of Starfield.
We had known him for over a decade.
He was a very fiercely optimistic person, probably the most optimistic person we had ever worked with.
He brought a lot of joy, both to the content he made and to the team.
So thank you so much, Ferret.
Thank you all for coming.
Please line up for questions.
Remember to fill out your evaluations.
This is our social media handles if you want to talk to us later.
Thank you so much.
Hi.
like I don't like What they can and can't do in an alias is just a pointer to something in the game world that the quest can hold on to and refer to even if it's not loaded.
But it's all little goofy things like that, which can either come from your studio having proper documentation so the language stays alive, or the way it happened at Bethesda was you'd sit down and learn how to use the tool or learn from someone else.
and then the shared language you just kind of develop.
It's not specifically terms, it's just an understanding of maybe what you're asking of them.
When you ask them a question you kind of know how much work you're asking from them.
That's kind of what I take out of shared language.
Yeah, definitely.
Hi.
First, I just wanted to thank you both for these games and your work.
Genuinely, these games and quests and levels raised me and taught me, made me who I am in terms of quest design and game development and just as a person in general, and I really appreciate that.
And coming from that, I'm very curious, because you've worked at this studio for a long time, and you've left now.
And I'm just curious, with this large amount of scale and this huge growth in the team that seems to have created a lot of stress and a lot of difficulty to manage, do you think that a large team inherently creates this?
Or is it the scope of the game from the beginning?
I'm just curious of what could have been avoided or what could be improved.
OK, yeah, so do large teams inevitably create bureaucracy and stress?
And could this be a salt of scaling?
So scale and team size are kind of the same thing, especially nowadays.
So the bigger your game, the more people you need.
I don't know if scale is necessarily the enemy of agility, but I do think that when Teams get larger, there are certain natural things that happen.
One of them I mentioned is siloing, but another one is, so there's a neurological theory called Dunbar's number, that's how many social connections that you can support in your brain, and it's theorized to be about 150.
So once you pass 150, it's impossible to hold everyone in your head and have a connection with everyone on the team.
So, you need to start kind of splitting things off.
And I think if you're very aggressive about chunking up the team so that it doesn't get above that size, you can have individual sub-teams within a larger project that can then have a collaborative sort of natural relationship.
Or another thing you could do is just be very aggressive about titles, formalization, and communication structure.
It's the boring part of game development, but it's like flossing or eating your vegetables.
Especially when you have a lot of people, that's what you have to do.
Makes a lot of sense.
Thank you very much.
Hello, just to echo what the last question asker just said, thank you for these games, they're awesome.
Great talk, that was a lot of fun and a great trajectory through your entire history of games.
My question is simple.
A big part of the talk is basically cross department collaboration, allowing people to do something that isn't their regular job.
talk.
I It can be hard.
You can't incorporate it all.
And they either have to know that or never learn it.
I don't know.
Yeah, yeah.
That's why it's so important to say who is ultimately responsible.
You need to be able to say, OK, at the end of the day, you're going to have subjective calls that you have to make.
And you need to know who's going to make that call.
So for level, the level designer needs to make the final call when it comes to anything that affects the layout and the encounters in the space.
Awesome, thank you.
Thank you guys for the talk.
My question kind of prongs two ways but might end up being the same answer.
I was surprised from your examples at how disjointed it seemed that quest and level design were in terms of like the level designers were working on the level independent of what it was actually going to be in the quest and it seemed to come together later on in development.
So my first question is typically when when did your guys' teams collaborate in the design process and other than I imagine it should be at the beginning of the design, when should these teams collaborate?
Yeah, when should the teams collaborate?
You feel like it felt like we were working independently and then came together.
And that was, in our experience, there were different levels of that.
So sometimes it was, hey, I came up with a quest.
I need a space for it.
Your space looks cool.
I'm going to take it.
and on Skyrim.
Hey, thanks for the really great games over the years.
You said something earlier that kind of prompted a question in my mind, and you mentioned that the quest designers were typically responsible for the combat NPCs, or sorry, the other way around.
The level designers were typically responsible for the combat NPCs, and the quest designers were responsible for non-combat.
But I'm curious how that worked in games like Skyrim or Fallout 4, where those lines got very fuzzy a lot of the time, because the player could fight anyone at any time, and especially farther back in Bethesda's history you go, the more of that there is.
And yeah, I'm just curious how you decided who kind of got to make calls on things like that, where you had NPCs that could, at any minute in these systems, kind of shift between those two dimensions.
Yeah, so how do you deal with having particular responsibilities when it's an open world and chaos can erupt at any time?
I think it ends up depending on what the purpose of the NPC actually is.
In a town, you can fight with anything and combat will erupt.
but an LD is still probably not likely in charge of anything in the town.
So, like, it's more about if the location and the NPCs that are there were set up to be a combat encounter already.
There can be cases where, like, there can be important quest dialogue on a boss you're going to kill.
We have to converse about that, decide, like, OK, before he dies, he's got to get this dialogue out.
Like, there's some back and forth when it comes to, like, like little detailed stuff, but typically I think it's a shared language thing where we just understand this is a combat NPC, this is a quest NPC and that's the line, but there's probably like rules there that we're not explaining about how we define those.
Hi, yes, thank both of you for your beautiful games and a really insightful presentation.
I was wondering if you could speak a little bit to the philosophy behind having quest designers handle the more kind of traditional narrative elements as well as like scripting and other quest design elements that are seen more across lots of different studios.
I'm just curious, what are your thoughts on that philosophy and do you see that as kind of the future as well of Bethesda Game Studios?
Oh, interesting.
Yeah, so why does Bethesda Game Studios have the Quest department handle both narrative and quest scripting?
A lot of that was just tradition.
You know, a lot of these processes started way back in like Morrowind, and so that was a much smaller team then and you just wore a lot of hats.
Like, Quest Design also did systems design for a long time.
And the level design department, I believe that was really formalized End of Oblivion Skyrim-ish?
Or Fallout 3-ish?
Yeah, and so the specialization occurred over time, and there was a level design department, and eventually there was a systems design department.
So I think the thing is, there's no standardization in the games industry.
We all do it the way we need to, and the teams vary so much in size that depending on where you're at, you could wear different hats.
So I think it just evolved very naturally.
Thank you.
Oh.
All right, it's time for us to wrap up.
We will go to the wrap up session.
Please follow folks if you want to head there.
But otherwise, thank you so much.
Fill out the evaluation forms.
It helps out the conference.
So thank you.
