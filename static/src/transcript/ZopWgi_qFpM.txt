All right, good afternoon, everybody.
Before I start, just a reminder to please mute your cell phones or anything else that will ring.
So my name's Ian.
I'm the CEO and co-founder of Fox Club.
We're a distributed team, completely remote, and we make mobile slots games.
So we started the team about three years ago.
And when we first started, my co-founder and I happened to be remote.
He was living in Germany, and I was living here in San Francisco.
And we did that because we both had lifestyle reasons for wanting to work from home.
And as we grew the team from there, we found out that there was no real reason to hire people where we were living, because we didn't want to be going to an office to work.
We liked working from home.
And so we continued building the team out completely remotely.
So now we're about 30 people, and our team is spread out in 12 different countries, encompassing a lot of different time zones.
And along the way we've learned a lot about how to run a remote team, how to hire for a remote team. And there was really a critical point when we scaled past 8 or 10 people to kind of the 20s where a lot of things changed for us. And so those are some of the main things I want to share. Before I start, how many people here work remotely now? Cool. And how many don't but want to work remotely? All right.
So I guess a lot of you guys already have experience with that. So we'll talk about maybe some of the things that have worked for us, maybe things that apply to you guys.
And afterwards, if anyone has ideas or suggestions, I'd love to hear them and chat some more after.
So I'm going to go through kind of three major things. One is, why is remote work attractive?
For us as people who work, why is it fun to work remotely? I think that's going to be pretty obvious and we'll do that quickly.
The second main one is really around hiring and team.
as a business owner or manager, what does it mean to hire remotely and why is hiring a competitive advantage for being a remote team?
And third is a lot of operational things that we've found to be successful.
So how do we communicate and collaborate?
What tools are useful?
And so the third section is a lot more tactical.
So just at a high level, right?
Like there's already 10% of the workforce overall that's fully remote.
30% is partially remote.
This is gonna continue being a huge trend.
We're big fans of Jacob Morgan and his overall thing about how work is changing.
And the central thesis here is that we have a generation of people who have grown up with technology in their lives.
personally, and we also have this tremendous improvement in how communication collaborate collaboration technology has gotten better. And so when these two things come together, there's going to be a push from the ground up of how work needs to change and how companies need to kind of interact with people differently, and remote is a huge component of that.
So let's start with like why we want to work remote, right? So for us, a lot of it is about family. My co-founder had a four-month-old when we first started the company.
And he really wanted to spend more time with his daughter.
And he was able to actually be a pretty present parent.
He wasn't the primary caretaker, right?
But he was there a lot.
And he was also a great CTO and co-founder.
There were some sacrifices.
He couldn't play dota anymore, and he couldn't really sleep.
But he did manage to make both those things work.
There's maybe a third of our team where family is the really big reason, being able to spend time and work more flexibly.
There's another third of our team who did this because we wanted to have a particular lifestyle I was one of those so I wanted to travel and work and work from different places And I really have been able to enjoy doing that and go to different places stay there get an Airbnb for two or three weeks And work from somewhere new and I really travel for food So as long as I get to go out and eat and come back and do my work It didn't matter where I was working from our director of engineering really likes EDM concerts.
So he'll go around to all these crazy locations, get completely ridiculous for two or three days on the weekend, and then somehow manage to get back and focus and get the work done.
And as a team, we rarely even notice it, because as long as the people are being productive, it doesn't matter.
Those two things, I think, really underscore one of the big things that we had to do as a remote team that we had to do differently, which was measure people on output and not on hours.
when people talk to me about how do you run a remote team, how do you manage people, like you can't even see if they're working, right?
It's like, yeah, that's true.
You can't see what anyone is doing.
And so the only thing you can do is look at what are you producing?
Are you producing your fair share of the work?
Is your results good?
Is the quality good?
And it turns out if you try to measure people based on that, it's actually not that hard.
We've been able to do that successfully across dev, art, design, UI, sound, and it works quite well.
And the third one is obviously if you just save on commute, you get an extra hour or two of your day back every day.
So it's great.
So we've sort of stumbled upon this by accident initially, right, because this was a very selfish motivation for us when we first started the company.
But now that we've done this and actually experienced what the growth looks like, we think that this is a huge opportunity, a huge competitive advantage.
And the big one is actually not cost, right?
We're gonna talk about cost in a little bit.
But I think that the biggest advantage we have is really around hiring.
And it's more subtle.
So.
You kind of have three major ways you can hire right now, right?
You can one, either be in a tech hub like San Francisco.
And you can compete with like the hundreds of really, really well-funded companies.
But the advantage of being in a tech hub like this is that you get world-class talent in every discipline.
You have the best people at what they do in one place.
And if you can find like the attractive mission for them, like the good goals for them to go after, and you have the money, you can get world-class anything you want.
That's one path.
The other path is you find something that's not a hub city, but still has a great source of talent.
Usually for that route, you want to find a really strong feeder, right?
So there's a lot of stories of like, like Montreal has tremendous technical talent, right?
Like lots of great devs.
So we see a lot of great dev shops in Montreal.
There are places with really great art schools and art pipelines.
A lot of the times in a place that's not one of the hubs, you can find great talent in one or two disciplines, but it's hard to find a world-class talent in everything.
So obviously, where's my story going?
If you go globally, you can actually find and cherry pick the best of the talent from everywhere.
We believe we've been doing that, and we've actually been really surprised and impressed at the quality of the people that we've gotten in really random places around the world that we never expected.
I worked at Zynga before, and so I calibrate a lot of our.
art talent and engineering talent against that.
And when I look at kind of the skill level comparisons, we have really, really world-class talented people.
And we've been able to find them for very attractive rates, right?
Because they live in places that are often not tech hubs and don't have the cost of living adjustments.
And they're really happy because we have a long-term engagement with them where they really like the work, the lifestyle we have and are like motivated to stay for longer.
So that's kind of the hiring bit.
We also think of hiring as like a long-term sales thing.
So the advantages that we offer in terms of lifestyle, work-life balance, communication, being measured on impact, right?
These are all kind of the benefits that we have.
And it's part of how like the, it needs to be sold throughout the entire hiring process.
So we've adjusted how we hire in order to suit that.
So what we do is with every discipline, we give them a quick test, like a one to two day test.
And the goal of the test is twofold.
One is, can you do the work?
That's the obvious part.
The other one is, can you do the work in our environment?
So we try to mimic our actual operating environment as much as possible during this two day test.
We set them up with the same tools. We communicate with them the same way that we would if they were fully with us.
We give them feedback the same way. And then we just look at the outcomes.
And it tells us, can you work in a way that's unsupervised? Can you do it in a time frame that's reasonable?
Are you able to communicate clearly? And it lets them know.
Is this kind of the flexibility I want?
Are they actually giving me the experience that I want in terms of work life, in terms of having ownership over my work?
And is this something I can do?
And it's definitely helped us both attract people who go through the test with us and say, oh, this is actually really good, I'm really excited.
It's also helped us find people who are like, well, this really isn't the kind of company I want to work for where we're kind of completely remote all the time.
So I'm going to run through quickly the main ways that we hire artists and devs and run through the test real quick.
So for us, because we develop in Unity, we found that the Unity forum and the Reddit, particularly subreddits for Game Dev and Unity Dev, are really good.
And then what we do is we give them a set of assets.
And so this is two examples of a successful candidate and a not so successful candidate.
And we give them the same assets, we give them the same spec that we would on the team, and we just look at the results.
So this one was basically, here are some assets that are really simple.
Can you make a slot machine that spins?
Sorry, I'm trying to play this.
So this is one where it's not super fancy, but spins like a slot machine.
And then this one.
Doesn't look so much like a slot machine.
Same level of feedback, same level of instructions.
So that was dev.
On R, the kind of traditional places that you find online contract R seem to work pretty well, and we basically start people on this test and then get them one project and then bring them on fully.
And we communicate that kind of up front with people in terms of here's what the expectations are.
Similarly, we tell them this is the target style that we're looking for.
And then here are the two portfolios of two people.
So one is, this is the portfolio beforehand, and here's another one.
And I'm not an art director, so like these two both look pretty reasonable, but neither of them is the style that we're really looking for.
But when we took both people through the process and we go black white sketches first Which is how we normally do it and then give them some feedback Sorry, the right one is a little bit hard to see but it's it's like a pretty reasonable line drawing And then we go through to color like by the time we get to this and there's two rounds of feedback Kind of the difference in style is pretty clear This is a lot more of what we're looking for on the left and this is kind of not really a good slots part And again, the overall thing here is get people to see how you actually work as much as possible and get them in on your process.
So just to summarize in terms of what we're looking for in terms of hiring, like the advantages or the core things that we're looking for.
One is communicating your culture upfront and how you work.
Um, the second one is actually, this might be part of just, uh, because we're a small growing company.
We've had a really hard time hiring people and then training them on it.
We've really found more success finding people with the core skills that we want and kind of treating them on the remote piece.
So like a lot of training seems to be difficult.
The third one is time zone. So I said up front that we have people across a lot of time zones already.
We found that with artists, with people who are able to work relatively individually, being in different time zones and working in different time zones, not so much of a problem.
For everyone else, developers, designers, UI, where you need a lot of collaboration.
Our rule is you can work from anywhere you want, but you've got to be working primarily core hours Pacific time So we've set Pacific time as our core hours And so you can travel anywhere around the world you want as long as you're working core hours there And if you have stuff that come up during the day, whatever you need to go take care of doctors kids That's fine. But we know when most of the team is going to be on and available and like ready to work together Cool, so that was kind of all the hiring stuff.
Next we have a whole bunch around operational and tactical things.
So, one of the things that we saw in terms of like when we talk to people is.
We coordinate around Slack in almost everything, and we're able to work pretty effectively online with everything.
But there was a whole bunch of work that went into getting to that.
And so when we talk to people now about, like, does this work, does remote work, we tell them it does.
But, like, when people try to do it, and they do it incrementally or they try it without having all the fixes in place, it seems like it's just impossible.
So, there was a lot of work that goes into finding out what the differences are between co-located work, which we're used to, and switching to remote.
So, let's start with Slack.
Everyone, everyone here use Slack?
Okay, yeah, Slack's huge, right?
Slack's awesome.
When we moved everything onto Slack, one of the big things that we realized was we have to have a ton of channels.
We have gotten super ridiculously aggressive with making new channels.
And the way we use channels is each conversation thread, each thing that used to be an email is actually a separate channel.
And so we basically have hundreds of channels.
The way we manage it is the start section in the top, right, your favorites, those are only channels that you would initiate conversations into.
So for me, I have all of our production channels start, all of our design channels start, sign off, kind of like planning, those are all my start channels, because those are the things I start conversations in.
There are like hundreds of other channels.
Dev, R, lots of execution channels that I'm in, but I'm not starred.
And so those are kind of all down here, and I don't look at those.
Like if someone needs me in one of those channels, they know to ping me with an at ping.
And so I can basically go through most of my day and not read any of this.
And that's how you can keep a lot of channels and have kind of message and thought segregation without being completely overwhelmed with the different things.
The other thing that we find really useful is muting most of the channels that you're not in, so that you can be in channels, you can actually respond to things, but you don't get constantly pinged.
We've worked with a lot of other partners who also use Slack and found a lot of different feedback that they've had, where like, you know, I can't get anything done because I'm on Slack.
Everything is on Slack.
And we believe that everything needs to be on Slack, but you don't need to be reading everything.
Otherwise, you're just getting the same problem as you had with email, with just content overwhelming.
And then once everything is on Slack, right?
Like, I'm not gonna go into all the details of all the integrations, but obviously you can integrate all your servers, all your notifications, all your kind of like dev related things into Slack.
Once we have that, then we try to bring as much of the art and creative side into it as possible.
So Jing is a tool that we found really useful.
And the main advantage here is that it paces as a link.
So you can take a screenshot, you can do some like quick editing on it to tell people what you're looking at, and then you can share it as a link.
Sharing it as a link over an embedded attachment or an uploaded file is really useful because if you bring this from Slack into another chat with someone else or you bring it into Trello or Google Docs, you don't have to find the asset and paste it around.
SoundCloud for audio stuff.
So the Slack doesn't have, like, they're constantly building out their integrations, right?
But SoundCloud is one of their better integrations, where if you have an audio file, you upload it into SoundCloud, it plays in line in Slack.
So the more you can get people to sit inside of this for all of their work, and the more seamless you can make it, the more, like, consistent it'll be.
So that's kind of, like, tactical Slack tools.
The other thing that, like, there's like three other main things that we found that are different between co-located teams and remote teams, and we've kind of like segregated those three problems into different solutions. So, when we, when we approach the problem of like, how do we figure out how to have communications that replace in-person communication?
How do we have like casual conversations where two people are talking about a problem and because they happen to be in an office, there's a third person that sits near them, right?
That is part of the conversation or listens in and decides they want to be part of it.
How do we replicate that? How do we replicate casual conversations?
So we tried a whole bunch of real time chat systems and end up on TeamSpeak as our solution.
And we have a pretty customized setup where every single person is full admin.
And so every single person can move every other person in between channels.
And the reason here is that we want to have as low friction as possible between two people talking to each other.
And how we set it up is we have a green channel where this basically means I'm working, but I'm available for conversations.
We have a yellow channel, which is I'm working, but I don't really want to talk to you for casual things.
And this is the equivalent of I have my headphones on, I have the little barrier up, and I'm over my computer.
And then we have red, which is just like I am not here, don't talk to me.
On top of those three things, we have a whole bunch of public channels.
And every channel is like a conference room.
And so we have the main one that people hang out in, like a main dev channel and a main art channel.
And people can just move themselves into the channel and start talking.
And so now you don't have to be asking someone, can I call you on Skype?
Can we talk?
You just go in and start talking.
If it's a long conversation, then whoever is involved go into a separate room so they don't disturb everyone else, just like you would in a real office.
And if it's something where I just have a question, then anyone who's around could answer my question.
The conference rooms also behave in normal conference rooms in the sense that people can see who else is talking.
So if I see our designer and our UI person having conversation, I can be like, oh, that's probably something I'm interested in.
I can just drop myself in there.
And so this is kind of our like really aggressive push towards open, transparent conversations everywhere.
Just like on Slack where all of our channels are public.
Every conversation is default public.
Every conversation here is default public.
We do have three private rooms that you're not supposed to invite yourself into, and those are for really feedback, like personal stuff, right?
Like one-on-ones and like performance stuff.
But everything else that we do is, it's an opt, it's like a, everyone is like default allowed into the conversation.
So that was the kind of open office.
How do we mimic the open office?
The second piece that we thought was really important to have a mimic or have like an analogy for was the water cooler or the hallway conversation.
So this is something where it's more about like team building or it's about having different disciplines know what each other are doing.
And the reason that teams like to be co-located is that you get more dispersal ideas and for casual things.
This is one of the problems that we really had difficulty with when we scaled from the 8 to the 10 people range.
When we were at 8, everyone was talking to just about everyone else.
And as we added each extra person, we started kind of dividing into smaller teams, and we ended up with like teams of like 4 or 5.
And so people started feeling really siloed.
and that was kind of a big issue for us.
So our solution to this is actually, it's not organic, right?
The rest of our solutions have been really technological and organic solutions.
This one was just process.
So we basically said, we are going to write down every decision in every public channel, and that's what led to all of our Slack channels being public.
So we said, we still want people working in the groups with the people they mostly need to talk to, but after every conversation, you need to tell everyone else, here's what we talked about and here's what we decided.
And that needs to be in a publicly available channel.
So someone else could either just come by and see it, or you can ping somebody and they can see the history of the conversation.
The second one was we made all the channels public, right?
The third one was we basically created like very formal daily and weekly updates for everyone.
So we created a weekly update where we had every discipline talk about what they got done, like what they are about to do.
I'm sure most companies have something like that within all hands, but we basically forced it to be a bit more formal and a bit more robust than normal because that's the kind of contextual information that normally you would expect people to just organically get But when you don't see each other, that's that's not something that happens by itself In terms of daily, we extend, like we use kind of a scrum where people have a stand up and talk about what they do, but we extend that into text as well.
So everyone talks about, here's what I'm doing, and here's what I'm doing for the rest of the week.
And we share that across the whole team.
We also use something called callouts, where you basically share things that are really cool that someone else did.
And that's specifically a low volume channel, so it's not a whole lot of content each week.
But it's shared across the whole team.
So lots of formal tricks to get people to see what the rest of the organization is doing.
And the third one is just in-person communication, face-to-face.
So what I've been talking about is mostly text and voice, which is 90% of what we're doing.
But there is obviously still a place for the in-person stuff.
And the two biggest things is, one, creative conversations, where you need the gestures, the facial expressions, the full range of communication, like motions and emotion, to communicate.
So for that, we still use Skype.
And for feedback sessions, where it's kind of Personal, it gets intense.
Helps a lot to be able to make eye contact, even if it's through like a video screen.
We also try to have as many in-person meetings as possible when we can get people together.
It's hard when there's no like center for us to be like, this is the convenient place everyone can get to.
But we'll have smaller meetups for people that are like kind of all in Europe or all in North America.
We had a session where a couple of us worked from France for a couple of weeks.
That was really fun. Got to get to the lifestyle thing and got to actually meet and bond.
We recently had our producer who's out in England come over here and meet with our art director for a week.
And that was really good for just like spending time together. So those things are still important.
We still need that in order to like build the relationships and build kind of interpersonal trust.
But it's kind of like an addition to everything else.
And then finally we have like the whiteboard.
A lot of teams use the whiteboard as a single common visual reference for what is our priority, what are we working on, what are our goals.
And this kind of goes in line with like communicating context gets harder online.
So for us, it's a combination of Trello and the meetings that I talked about where we formally step through everything.
Trello is really nice because we have every single person's tasks on there and we also have our roadmap on there.
So it's another opportunity for people to like eavesdrop on what everyone else is doing and see the context of what our overall plan is.
Three more tactical little things here.
One is we have the Scrum channel, right?
I talked about that, where in addition to our verbal update, we have a very short daily Scrum update.
That's also nice for people who work on the different time zones, especially artists who aren't working at the same time, so that there's kind of a history and more a public accountability of, here's what I said I would do, here's what I've done, here's what I'm going to do.
We have an AFK channel so that people can feel good about coming and leaving.
This is one of those places where whoever the leadership of the team is really needs to set an example.
Like if you're leaving and you're doing something personal, you need to demonstrate that it's okay to go out and do something personal in the middle of the day, as long as you're being transparent about it, as long as you still get your work done.
And it's also one of the ways to model the fact that, like, we believe in the culture, and we're not just saying, like, oh, you have flexibility, we're doing it, and saying that it's okay.
And then priorities and production update is what we talked about already.
I talked about the time zone.
We found that it's best just to pick a single one that people work from.
So that was a lot of operational stuff, like tactical execution, how do we get stuff done.
The kind of final bit is really culture.
And culture, I mean, every team has to build culture, regardless if you're remote or co-located.
But we have to work a little bit harder on a remote team to build culture.
So the kind of in-person gathering that I talked about is a big part of it.
One thing that we found really useful is having game night.
So we actually try to say, like, after our all-hands, we try to say, okay, all right, let's not work for an hour, play a game, play any game, like just do it with someone else, and we'll pay for whatever the games are.
people seem like... yeah, it seems like it's a good way to bond. We've had like D&D sessions, we've had Minecraft, we've had Heroes of the Storm obviously. Another one that was kind of a surprise to me but really shouldn't have been is that we had a photo sharing channel and that was like wildly popular. It's probably the best bonding like method that we've had. People really just like sharing and if you just copy Facebook but make it kind of in your team...
it really fills the gap where we want to have our personal lives mixed with our work and we like the people that we work with.
And Facebook really isn't targeted enough to share some of the more crazy things that you're doing or shared interests.
So that was a big useful one.
And then finally, be clear about the rules.
So this one is...
Kind of what I talked about with the afk channel where kind of the leadership needs to model the behavior that you think is good We want to We want to have like a culture right which includes all these unspoken things all these things under the surface But we can't just allow all of that to develop on its own, because people are generally going to be hesitant about it.
They don't want to feel like they're taking advantage of the system.
They don't want to feel like they're letting the rest of their team down.
So having even a small set of rules that are explicit, like these things are OK, these things you should do, and saying it, allows the rest of the unspoken things to develop more organically.
Cool.
So it looks like that's pretty much it.
I have five minutes left, if anyone wants to ask any questions.
Thank you.
Thank you.
Yeah, I just wanted to, great talk by the way, thank you.
I'm super interested in this stuff.
Could you just be a little bit more specific about, you said you formalized the weekly updates.
I wasn't clear on what form those actually took.
Sure, so we start with having the, like, our producer or dev producer talk about what everything, what specific tasks got done.
We talk about the roadmap for the next, like, month formally.
So, like, here are the releases that are coming out, here's exactly what's going into it.
We call out the people that did the work.
So it can be pretty tedious, right?
Where we go through what each person did for each release.
But the point is to let the devs know, here's what the artists are doing to contribute to the release.
Let the artists know, here's what the devs are doing to make the art that you made really go into it.
And so we actually go through a pretty thorough thing of here's what everyone did to do everything.
And on a normal team, I think that it feels like a waste of time.
But we found that even if it takes an extra half hour, hour, that that level of detail on each release, what we have done, and then what we are about to do, and who's doing what on each release, is really useful.
Yeah.
Oh, no, it's on a weekly call.
Yeah.
And we also record it for the people that aren't on at the same time.
So we just have a recording, and people can listen to it afterwards as a podcast.
Hi, thank you for your talk.
I have a pretty large remote team with varying degrees of tech savvy.
And sometimes I feel a little bit of resistance to change when I try to incorporate a new tool.
I know you mentioned quite a lot of tools.
Do you have any tips for sort of getting your team ready to adapt to those changes?
How big is your team?
About 10.
Okay. So, um, yeah, it was, it was a pain. Like we switched like the voice chat thing.
I said, where we use team speak, I literally switched chat systems, my team four times.
And we actually went to team seek, went to discord and went back to team speak.
And they were not happy about that. Um, I think some of it is just like with, when you want to make this work, you just need to push it through. So is your team, sorry, is your team partially remote and partially co-located or was there all?
Yes. So there's partially three of us in the office and then there's like six others.
So that's one of the main, like it's a really big problem actually, I think.
When we, when I was at Zynga, I actually worked on a partially co-located, partially remote team, and we had a huge problem where the co-located people didn't feel the same pain that the remote people did.
And for us, because everyone's feeling the same pain, even though it was painful doing the different transitions, people understood this is a problem that we need to solve, even though this is a very painful process, we need to go through it together.
So I don't have specific first-hand advice on how to do this, but I would say that the more you can get the co-located team to feel the pain that the remote team is having, I think that'll be a good way to get everyone on the same page, and they'll be more open to experimenting for a solution.
Thank you.
Hi, I was wondering how you prevent work any time from being work all the time.
Like how do you give people reasonable expectations about this is what we expect from you and if it's got you working more than the standard, well I'm gonna say 40 and we all know that's a lie, but like the standard 60 hours a week.
Like tell me that that's, like how do you manage that kind of scheduling?
Absolutely, and I think that's one of the things where I say it's important for the leadership to set the rules and follow the rules So we have the scrum in and scrum out chat And so when we come in we say like I'm starting work now, right?
Like I I'm starting work late today because I had to do something or like no I'm starting on time today And then when we leave we say I'm out for the day. So especially for me and my co-founder We really try to like to model that. If I'm starting work late, I'm just like, I'm starting work late today.
If I leave and I'm going to go play frisbee for four hours, that's what I say.
And so I think that a lot of that just comes from what the leadership does and how they demonstrate this. We do actually work a lot. One of the problems with Slack is that you can be working everywhere. I was texting my team on Slack right before this talk.
I think that to some extent it's okay if it's healthy, and the main thing is to respect the core hours.
So because we set everyone to Pacific time hours, we expect people to be around, and it's okay if you have a reason for not being there, but that's really when we expect you to work.
And if you're kind of past that, and we don't expect people to be responsive at that time.
And it's really coming from how you model the behavior.
Okay, thank you.
Hello.
I work on Call of Duty, so for us, like, security and preventing everything from leaking is really important.
And when it comes to working remote, I find that having, like, all the VPN and all this stuff in to protect my data are really a problem.
Is it something that you care about doing when working remote, or do you, like, play the bet of nobody's gonna do that?
I think we probably play a bit faster and looser with data security than you guys do.
We make mobile slots games and there's like a million mobile slots games on the market.
We are fairly careful with our art in the sense that we have like...
we're able to do stuff like removing it from Dropbox.
But like if somebody really wants to mess with your content, like anyone, doesn't matter if they're remote or co-located, I feel like if someone is maliciously trying to do something or trying to steal something...
I don't think it's actually that easy to stop, regardless of what we do.
So we've pretty much just based this on like, if, if we give you access to it, then we trust you to not screw with it.
Great.
Thank you.
Yeah.
Hi.
Great talk.
Thanks.
You said you have approximately 30 people in the team in total.
So how many developers and how many game artists and do you split them to the teams when they work on the different products maybe?
Sure, so we have like five or six devs, like a dozen artists and designers, and then we have like kind of me, design, couple UI, sound, like some miscellaneous people.
So the core development team is like six.
We work on, we do only slot stuff, so everything is on a single core engine.
So we have one GitHub repo that most of our code is in.
We have a dozen different games, though.
So in terms of art, we actually have a lot of different art pipelines that are happening at the same time.
So we manage our art pipeline pretty separately from the dev pipeline.
Was that to answer your question?
Thanks.
All right, maybe last one.
Hey, I wanted to know kind of how you get leadership involved in these communication pieces.
Because I think one of the problems that we most frequently have is that we need feedback from business leaders or different members of some of our other distributed teams that don't typically get in on the day-to-day work that's done by the teams.
Getting our teams to communicate is easy.
Getting our leaders to communicate with the teams or even with each other is very difficult. Any advice?
What type of communication are you referring to specifically?
So, you know, if we need to have business deals being made, I work for PlayStation, so, you know, we have different, you know, potentially new, you know, game discussions that happen to come out or, you know, platform decisions, things like that.
Yeah, so it's hard.
Because I do most of our organizing the weekly meetings, I feel an obligation each week to say stuff about what's going on.
But definitely a lot of the other leaders in the different disciplines get lazy about it.
So what I do is I just call them out.
I'm like, you need to say something about this next week.
Or be ready for me to ask you and tell everyone else what's going on, because I know there's something big.
I think that just whoever is running it needs to be able to call out people for, I think there's something interesting going on in your department.
say something about it.
Cool, thank you.
All right, thanks everyone.
