You So welcome to Everything's on Fire and No One Knows What to Do.
This panel was born largely out of the same ideas that Tom was expressing, the idea that we often feel as game writers, especially if we're working at a smaller company or working on our own stuff, that we struggle alone and we fight alone.
And I wanted to go into some of the challenges that we can face as game writers together to give you some hope that maybe when you're going through something similar to the things we're describing here, you will know you're not alone and everything is on fire, but it's going to be okay.
So we'll start with some introductions.
Gavin.
Hello.
So I'm Gavin Jurgens-Fury.
I'm a lead writer at InXile Entertainment.
My past projects include Diablo III, Torment Tides of Numenera, Wasteland III, which we're working on right now, and Horizon Zero Dawn.
Hi there. My name is Colin McComb. I'm the creative lead for Torment Tides of Numenera. I have also worked on Planescape Torment, Fallout 2, and Wasteland 2 as well as some other games for my own company. I'm Leanne Taylor-Giles. I've been in the industry for 10 years and I have a masters in branching dialogue systems that you can read if you would like to. I'm Chris Avalone and I'm very old.
I recently worked on Prey, I was part of the System Shock reboot, and also I'm working with the FTL guys, Subset Games, on Into the Breach.
I'm George Zaitz, writer and lead designer at InXile Entertainment.
Just finished up Torment Tides of Numenera, now working on Wasteland 3.
I worked at a bunch of other RPGs at Obsidian, and then a bunch of MMOs before that.
So we all, between us, have a lot of experience and a lot of experience in different fields ranging from tabletop, indie, mid-tier, AAA.
Basically, if you have a question afterward, we're gonna have the Q&A at the standing mics in either of the aisles there.
We will also be at the wrap-up room after the panel if you would like to come and ask us something in person.
Please do.
Okay, so just a quick question for the audience.
We know how many of you are here for the first time, but I would like to get a gauge of how many people have been in the industry for how long so we can tailor our approach.
So who's been in the industry for one to five years?
Hands up.
Great.
Five to 10.
Nice.
10 to 15.
Ooh, 15 plus.
Very nice.
Okay, so we have a broad range and we can talk about it from many different angles.
We're going to start off with identifying some games writing related terms that we find are very important when we're communicating to other departments especially.
So not just between writers, which is always a delight, but when we need to talk to people who maybe have a different understanding of how they express story.
We'll start with Colin.
Sure. So my big thing is collaborative storytelling.
We are just one part of a team.
I mean, obviously we're the most important part of a team.
But.
What we do, we can only do with the help of the programmers, with the artists, with QA.
And it is our job to bring them into the story, to make them feel like they own it with us, so that they feel empowered, so they feel some ownership, and so that they want to be a part of the project, and so that they love it as much as we do.
Because, God, I love.
Personally, I love stories. I love writing stories. I love telling stories.
And I want all of these people to feel that same sort of love for this thing as I do.
There is nothing more disheartening than talking to somebody and they're like, Eh, it's a paycheck.
You're like, Oh, but this is my baby.
So, it's important to bring people in.
It's important to have them discuss the game with you.
It's important to have them provide their feedback.
And it's important that they feel that they are a part of this process with you.
If they are not involved, we might as well just be writing novels.
And that's a lot less fun.
Thank you.
Kevin?
So the term I wanted to discuss today, sorry, I'm trying to master this microphone.
I don't think I have it figured out yet.
is uh, so every single place I've worked at except in exile someone has cornered me right around the first day or so and Pushed me into a corner and said I don't like game story. I don't like writing. Was it Colin? Yeah, it's generally Colin He follows me everywhere.
Usually at night.
I'm out front of his door.
And so what people usually mean in this case is that they don't like cinematics.
And I think because you guys are here, you know that there's more to game writing than cinematics.
So a lot of the time, what I try to establish on a team that I've come into, that there's a difference between cinematics and game writing.
And what I like to say that game writing is is sort of a bridge.
It's a bridge between what the designers intended and what stories the players are telling themselves.
As writers, we're there to empower the players, to make them feel like their choices have meaning, even though the designers have something very definite in mind for what the writers, or what the players will experience.
Great, I'm gonna take that a step further.
The term that I would like to define is emergent narrative, which has several different meanings depending on who you talk to.
My favorite is that 50% of the story is told in the player's head.
So part of writing for games is leaving those silences where the player can talk to themselves without even realizing and say, oh, that's what this means, this is what it means to me.
Because they're going to tell themselves a far more personal story than we can ever tell them since we're writing for a mass audience.
And that was one of my favorite things about working on Tides of Numenera was the ability to have that ambiguity and present the players with the option to interpret what was going on.
and react accordingly.
So remembering that the player is telling the story with you even though you're far apart in time or in space, they're still a part of that story and what they create out of what you have given them is very, very exciting.
So in my ever increasing effort to make sure Leanne never invites me on the panels again, when I initially got this question, I went through a range of emotions, much like dialogue responses.
I went from the angry, well, there's terms I never like to hear, like the word impossible.
If you ever tell me the word impossible, I'm going to kill you until you quantify it.
Also the word sorry offends me.
And also, we need to be on the same page when I ask for something by the end of the day, I need to confirm with you what end of the day means.
But from a narrative standpoint, I like to invent a term when talking with QA, because I feel quality assurance has been trained never to report a story-based bug.
They always treat it as a deep priority suggestion or, man, you know, this is kind of confusing to me, but I'm kind of afraid to bring it up because story is kind of nebulous.
For me, a narrative bug.
is a very, very real thing.
If there is some story point you don't get, if you don't understand how a character arrived at a certain location, even how you as a player got to a location, and it's never explained anywhere else in the game, those are things that QA should be trained to write up, along with really bad VO lines that the QA department will laugh about consistently.
Walk through your QA department, listen, see where your bad VO is, and either delete it or get it re-recorded.
So the term, I guess it's less of a term and it's more of a distinction, is story versus setting.
And I probably don't really need to define these for this room, but I'll kind of give my shorthand.
Story is the plot. It's the sequence of events with a beginning, a middle, and an end.
It's usually driven by the player or it's about the player.
The setting, on the other hand, is the backdrop. It's the place and the time.
It's all the details about the world.
It's basically the stuff that would be there even if the player didn't exist.
And as writers we need setting because it helps us to create a coherent and consistent game But the important point to keep in mind is just because you have a setting doesn't mean you have a story And that's a distinction that has been lost on a number of teams that I've worked on not so much the teams with these guys But sometimes in the MMO space that's been that's been misunderstood Fantastic So we're going to jump into the first question, which is relevant to that, so the setting versus the story.
How do you balance input from other disciplines with the story requirements?
Go ahead.
Wow, that bleeds directly from what I was saying earlier.
So as Chris was saying about QA, we want to request input from other departments.
We want to make sure, as I said, that they are feeling ownership of this because they have perspectives on the story that, We don't have, you're all writers here, we all know what it is to get too close to a story.
It is almost impossible to have a good overview of it when you're down in the weeds and you're writing because you're just seeing tree, tree, tree, and somebody who is new to it is seeing forest.
Or trash.
Or trash, yeah.
Or a fire.
So what we want is we want to get their input. We want people to come in and say, okay, so here's what I think this is. Here's a cool idea that I have. Artists, for instance, George said this in an interview just the other day, artists can provide us with insights into characters and ideas that we never knew that we were lacking.
We can just say, okay, make something cool and new and they will create something that is so awesome and neat that we're going to like, oh, you know what, we're going to reorient this entire level to make something really cool about this. We want input from other teams. At the same time...
At the same time, we don't want them to feel so much ownership that they're pushing us out and they're like, you just put the words on the page, writer boy.
You just take the script to the dialogue pass and that's how it gets written.
Exactly. So basically, you know, we want to get their input, but then you've got to filter it and decide, okay, does this actually match with the themes of the game? Does this match with what we're trying to do? And is this going to be a valuable piece of input moving forward? And it's your job as writers to figure out where their input plugs in.
Exactly. It is a question of picking your battles, which is something that I think a lot of writers struggle with at first when they get into game writing.
You have to decide what is crucial to the story. You have to decide what's crucial to the game.
And you have to be willing and aware that when you shut someone down, you are stopping them possibly from ever coming to you with an idea again, and you will possibly lose something very precious.
So I would say, once again, pick your battles.
Make sure that if you're going to tell someone that their idea won't work, and I would advise against that, tell them why, make them feel part ownership of the project, make them understand it.
It's an education, or it's an educating moment.
And it can be an ego thing.
If you've worked really hard on an idea and someone comes in and says, you know, I don't understand it.
And you try to explain it to them and they still don't get it, that's the point where you need to say, okay, but this person is representative of my audience just as I am representative of my own audience.
Things that resonate with me won't necessarily resonate with everyone else.
And so finding that medium between what they are looking for in the story that you're telling and how you're telling the story is a delicate balance.
Although, I would add that I did get input from somebody once and they're like, well, you know what, I don't like the direction this story's going and here's some ideas that I would have to fix.
It's like, well, that's good, but this is a philosophical RPG, not a...
Yeah, we used to have the three critique rule, like it's okay if one person brings it up, it's good to digest that, but then it takes two more people to bring up the same subject and you're like, yeah, that's definitely got to change.
Fantastic. Okay.
Our next question is, how do you stay flexible but still do your work when gameplay and level design decisions are yet to be made or keep changing?
George, would you like to start off?
Sure. So in my opinion, flexibility can really be a mindset. Think of, especially when you're writing a story, think of everything that you're writing as early on in the project as not complete. So when you're actually, this is a little goofy, but almost think of a story like a sculpture. That is at least what I do when I'm coming up with a story for a game. Initially you've got a big block of stone. It's completely shapeless. It can be anything.
Then, as you're starting to write the initial drafts of the story, it's kind of taking shape, and you can kind of see what it's going to be, but you've still got a lot of wiggle room, so when new ideas come up, you can still go in a number of different directions.
And it's only toward the very end of the project, when you've basically got, like, David in front of you, and you've got a fully formed statue, that it's very difficult to make significant changes at that point.
Now, having said all that, also, don't be afraid to push back, especially late in the project, against changes that you feel are too extreme.
But do it in the language of the producers, which means do it in terms of time estimates.
If you think somebody, you're close to the end of a project, and someone says, oh man, we really want to completely change the beginning of the game.
At that point, instead of...
going crazy, sit down and figure out exactly what the impacts of that is going to be in terms of days.
So okay, we have to rewrite these 20 dialogues, that's 80 days.
We have to change these levels, that's another 20.
Whatever it is, and then get, say it's 100 days it's going to take to do this, to make this change, bring that to the producer.
they will so appreciate that you've done it in terms that they can understand.
You may get the answer of, well, okay, 100 extra days, we can do that, it's in the budget, but at least you will have a reasonable amount of time to do the thing that you need to do to make the change and the producer will expect a reasonable outcome from you.
On the other hand, they might say, oh my God, we can't take 100 extra days, and then you might even not have to make the change.
So push back, but do it in the language of the producers.
Numbers are really helpful when you're working with something that is normally quantitative versus qualitative.
If you can put it in terms that, as George has said very well, that producers can understand, then you're going to have a lot more support to say, we need to do this X amount of work, because people can look at writing and say, oh, but you just need to redo the script.
That's five minutes.
You know, it's going to be fine.
It's just the time it takes to type it in.
That's it, it's really just, I mean, you don't have to search the letters out individually and put them on the screen.
You're not making a ransom note here.
So they tend to think of it in terms of that and they don't tend to think of it in terms of, oh well, if I had to redo my level from the start, okay, that's three months worth of work, right?
So having that ability to talk to producers is an excellent skill, I'm glad that George raised it.
And Chris, would you like to answer?
Oh yeah, so yeah, I'd be the third person to say that, you know, metrics will win a lot of arguments for you with production and getting the game done on time.
However, I've often found that when level design and system design is still in flux, there's still a number of core elements I can always still count on.
So I gear a lot of my writing efforts to making sure that at least the writing is supporting that, and that's very unlikely to change.
What George was saying about pushback when certain things are in flux, I think it's also important to ask why things are changing.
Because sometimes I've been on projects where people have been looking at it too long and they start getting bored with it and they feel it has to change before a player has ever seen the gameplay experience at all.
And that's the absolute wrong thing to do.
That's when you bring a focus test in to show them that people are really excited about what they're doing and show them these things don't need to change simply for the sake of boredom.
But to actually get some helpful advice, when doing writing for RPGs especially, what I try and do is create critical paths and quest lines that involve floating NPCs.
And these are NPCs that you can move to just about any map, anywhere, and the quest will still work.
So even if the level design is changing, even if systems might be different, you can place these NPCs anywhere and still maintain a coherent quest line.
Yeah, removing the narrative from the actual level flow can sometimes be helpful.
Reintegrating it is also very useful though.
You need to have consistency between the narrative and the level.
Otherwise, that's complicated.
We'll move on to the next one.
So what do you do when the game's story gets re-scoped during the latter part of production and how do you integrate the necessary changes continuing on from the same theme?
Well, as Chris was saying, it's very useful to develop a critical path document with the floating NPCs who can move places because chances are good your game will get re-scoped.
we're all very ambitious storytellers. And ambition is frequently the enemy of reality.
So you need to, if you have a critical path document with your flow chart and you're essentially figuring out what it is that you need to accomplish in the story, you can start pushing things toward the front because your game will get re-scoped unless you have done just such a masterful job of early production.
which, you know, if you have, please introduce me to your producer.
But this is actually a good opportunity for you because it allows you to re-examine the story, it allows you to re-examine the structure of the whole thing, and you can start re-pacing and you can start re-scoping and pushing everything into a more compact, more easily digestible story because, let's face it, we are writers and we tend to write long.
Sometimes edits make a script so much better and you didn't even know that you needed to do that.
I actually like re-scoping for that reason.
Sometimes it allows you to go, oh, I didn't need that to begin with.
Chris, did you have something to say on the?
Yeah, with rescoping.
So it's a lot of what we discussed before, but generally whenever doing narrative work for a game, I usually prioritize everything into A, critical path, B, this would be nice to have, and the player would certainly probably slightly miss it if it wasn't there, and C, priority is just like gravy stuff that the player would probably love, but they wouldn't miss it if it wasn't there.
So I break all the tasks into those elements and then as things need to get downscoped I drop the C elements and then the B elements, hopefully not the B elements, but I keep that priority system in mind.
When re-scoping I also ask why it's being re-scoped because I need to understand what material has already been done, what I can count on, and what I shouldn't drop from the story that actually is already done and I can make use of.
Go to Beadaholique.com for all of your beading supply needs!
Generally, whenever anything's being re-scoped, in addition to that floating NPC idea I mentioned before, about halfway through production, writers aren't blind to the fact that environment art might not be getting done, for example.
So I actually start making a secret list of all the environments that we already have done for the game and how we can change them slightly and still maintain new gameplay spaces.
Like, hey, we can still use Rome, but it'll be Rome at night.
That'll help you, won't it?
And the story goes on.
But yeah, that's just a few techniques I use.
Yeah, some of the story stuff is actually pretty easy to adjust as well.
And you can throw little bits of dialogue in.
It's important to know what bits of the story are important to be delivered when.
And so if you can just move that or even just quickly adjust a small bit of dialogue, that really helps in the whole re-scope process.
But Chris's process is actually better.
But he did raise a really good point that you need to know why it's being re-scoped because you need to tailor the story to what the re-scoping needs.
There is nothing better than like, oh, environment art's behind.
Like, okay, well I can fix this if they do 50 new levels.
And they're like, that doesn't help us at all.
But you can put an amazing story in there.
There's so much space.
But in terms of that, we are normally talking with producers when we're talking about re-scoping.
And it's very important to have a producer who understands the needs of narrative versus the needs of other departments.
And so I think we all have an opinion on what qualities writers need in their producers.
Casual murder.
Well, okay, so I've had a lot of producers and I think I've been lucky in that I've had pretty much all good ones. But I can say there's been a few that were absolutely stellar and I think the thing that made them stand apart was a shared passion. They are the ones that get mad on your behalf.
So if I, and an understanding of design does help too.
So if you are out there and looking to be a writer's producer, care about what they have, definitely give them feedback on the story.
And that doesn't necessarily mean.
stop them from brainstorming, for example.
But definitely if they're seeking feedback, get them feedback.
If they have design questions, get them answers.
Get passionate on their behalf and help them solve the problems that are stopping them from moving forward.
So I'm going to answer this one from a couple of different perspectives.
The first perspective is from an indie, a small team.
What you want most from a producer there is flexibility and range.
You want somebody who knows how to do art.
You want somebody who knows how to do programming.
You want somebody who knows how to do sound, so that they are able to reach out and get into each discipline and communicate with people effectively and step in to fill the gaps that are necessary.
If you're talking a larger scale game, though, what you need is somebody who understands scope, budget, and basically all the metrics that go into keeping a game on time and on track. Somebody who knows how to communicate both with upper management and with the lower ranks, that is crucial. Because if there is a blockage in any one of those things, you're headed down.
And as Chris said, being able to put things by priority and having a producer who understands writing priority as opposed to level up priority makes a really big difference when you're able to say, okay, but I really, really, really need to do this conversation that seems like it's not important at all because otherwise the whole narrative falls down.
Having a producer who goes, okay, we're gonna make this work and being a person who fights for you and advocates for the things that you want to do with the story versus the creative direction and everything like that, they're normally a mediator.
if they're working with you and for you, they're mediating between all the other inputs that are coming in, and in fact, they're helping you talk to the other departments as well.
And I wanted to say that saying it's a person who gets mad on your behalf is a really excellent way to look at the best producers that I've worked with.
They're the ones who allow me to sit in the room and be the cool, calm, quiet, collected writer who's like, oh yes, I see what you're doing there.
And they're the one who's going, no, this is unacceptable, we're not doing this, it's a waste of time.
And I just get to sit there and go, hee hee hee, this is fantastic.
So, having someone who can fight for you, and there's a bit of an assumption that writers tend to be dramatic, whether that's true or not.
So being able to be calm and collected is a real privilege when working with a good producer.
It tends to get your point across much more frequently than it might otherwise.
What qualities do writers need in their producers?
Oh, I'm part of this question too?
Wow, I'm going to be really undermining.
I actually don't like it when a producer gets emotional.
I actually like it when they firmly defend a position and they use metrics to defend it, because I've often found that if a producer gets too emotional about something, sometimes people are afraid to bring up problems with them because they're afraid of the reaction.
So, whenever I work with producers, I'm always like, you know what, just pretend like you're in Dragnet and just, you know, be the guy who just wants the facts and spout some facts back to me, and I'll reach a compromise that will usually involve me cutting my work.
And I will understand that because you're not being emotional right now.
So I'm going to say ability to know your people.
A good producer, at least in my opinion, has an ability to know each writer's strengths, weaknesses, and what they need to do their best work.
And probably the best producer I've ever worked with, a guy named Kevin Saunders, who just about all of us know, or I think all of us know.
He, on the first project I worked with him on, made it his business to observe me and figure out what he could do to make me my most productive.
And one of the things about me is I am super distractible.
So if I'm sitting in a room, there's like a bunch of people talking, yeah, it's like that.
I just lost.
So, and people coming in and out, lots of noise, I will get very little done.
So he observed that about me, and then he, behind the scenes, worked to get me my own little private office.
And it was not like some spectacular office, but I loved it because I could shut the door and I could focus and I got so much done.
According to Kevin's metrics, my productivity doubled just as a result of that one change.
So, and I am certain that that game, the writing on that game would not have gotten done and certainly would not have gotten done at that quality level if he had not done that.
So that's a big argument for producers who can understand their people and know what is gonna make them do their best work.
That's an excellent segue, George, in terms of getting to know new people.
How do you go about mentoring new writers?
What's the best way to instruct a veteran writer to mentor a new writer?
You want me or Chris first?
Yeah, you can go.
Me?
OK.
So a couple of people on this panel will know these things about me.
So the first thing I would do is, make sure that you are giving writers a lot of feedback.
In the initial dialogues that are coming in, when you've got a new writer that you've hired on, make sure that you're giving a ton of feedback.
What I will do, actually Gavin experienced this from me, I mean, he knows what I'm talking about.
The first couple dialogues that come in, I will read every word, I will read every single node, and I will give feedback, if necessary, on every single note of dialogue.
I'm somewhat notorious for my multi-page reviews of people's dialogues.
But it's really important on those first few dialogues that come in, because it sort of sets the standard for the rest of the person's work.
So like if you can get them to that level of quality that you need very early on, then they're going to continue with that.
And then I'll dial it back once the writer knows or has a pretty good sense of what they need to do.
I'll dial it back a little bit, although I still do try to read just about everything that comes in.
Another thing to keep in mind is try to stagger the introduction of new writers.
So if you have any control over how many people are coming on the project, six writers at once, like if you're trying to review dialogues in depth from six different new writers on a project, you're going to die.
So what you want to do instead is try to get one or two dialogues at a time, or one or two writers at a time, review their dialogues in detail, and then once those guys are up to speed, then bring in another one or two writers after that, which will help you out a lot.
I used to do postmortems for my managers without their knowledge.
And I would take those things to heart and go, you know what, if I'm ever in that position, I will not do any of these things.
One favorite thing was a fun technique called give a person a lack of expectations and then also give them negative reinforcement.
So But what I like to do with new writers is quite clearly lay out the expectations that I have for them for the position.
Also I try and make sure there's already a standards guide and a style guide set up for writing for the project.
And then Carbine actually had a really cool technique for bringing in their new level designers and world builders where they'd give them a series of very small, simple tasks.
Here's how you implement a small dialogue into the game.
Here's how you implement an inventory item.
Here's how you write the description for it.
And these are all very small tasks, but it helped build up the person's knowledge of the pipeline in terms of how to get narrative into the game.
For veteran writers that are mentoring new writers, We had an unusual system where sometimes veteran writers would forget that they were once new writers, and then they would never want to accept new writers or give them a chance because they couldn't see how that person could ever possibly get to their level, which is a bunch of crap.
So what I like to do is like when you assign someone to a mentorship position, you remind them that, look, You know what, you got to the level you were by taking it in stages, so please approach it in the same way with the new writer here.
And also, don't be afraid to think you might be insulting them by giving them too much information.
Give them everything that you think is even the most basic technique about narrative design, and make sure you're explaining to them thoroughly.
why you're telling them about this particular technique.
And then I also tell the new writers that, hey, you know what?
They might cross the line.
They might be over-explaining stuff.
But they're doing it in your best interest.
And what George was saying about feedback, generally I try and give feedback very, very rapidly at the outset.
And then I start backing off over the course of the project once I see that one particular narrative element or aesthetic is actually, seems pretty solid.
Like it might be like a daily review, then a weekly review, then a monthly review, until I feel I can count on that person to deliver to expectations.
And actually, Chris just reminded me, I got another one.
Early on in the project, if you can have some example dialogues that you can give to new writers at exactly the level of quality that you want them to be, that is super helpful.
Because a lot of other writers will, writers are very good at sort of hitting the mark that you give them early on.
Yeah, actually examples are better than technical standards documents.
Ideally, you want to have both.
I think it's very important to have that feedback very early on as you say.
It can be pretty confronting if you're a new writer coming into a studio to get pages and pages of feedback.
But in the end, it's a fine balance between relearning your ego at the beginning of a project versus eventually coming to the place where you can fight the battles that you want to fight.
And that's what I enjoy about mentoring writers is seeing them at the beginning and saying, OK, here are the things that need to change and here is why.
I'm not gonna tell you how to change them, but I want you to change them and come back to me.
And then tell me why you think we needed to do that.
And tell me what you think this brought to your writing so that they can start examining their own process and then they can turn that inward the whole time.
And as both George and Chris have said, then you move forward and give feedback less and less frequently until you get to the point where you're mentoring someone and you say, I think this should change and they say no.
And you go, okay.
And that's a wonderful moment.
You guys have anything?
Okay.
And then we'll move on to a very similar question.
A new writer is assigned to your project, but the first question they have is to question the premise of the game.
How do you mitigate this?
We all wanna jump in?
So you may have gathered that I enjoy getting feedback from other people.
So I would say you want to gather the feedback from these new writers.
You listen carefully to them, and you try and figure out what it is exactly that they are trying to tell you.
But on the other hand, Stephen King once said, if you give 10 people a piece of work and they all comment on the same thing, you know you've got a problem with that thing. But if they all comment on ten different things then you're probably good to go. So the important thing is to listen carefully. You get their feedback because a new set of eyes is always useful. It's always going to help you hone what the message of your story is or what it is you're trying to convey. At the same time if this new writer is unwilling to see the direction of the game and the game is already well into production and they are unable to get on board.
then you've got to get your producer involved and you've got to start talking to the producer and it's a sad thing.
This game has fundamental flaws.
That's right.
Please identify them.
Okay, those are not flaws, those are intentional.
Will not fix.
Do you guys hear a spaceship outside?
Yeah, there's a...
It's just building to a crescendo.
I think it landed, we're good.
Okay, good.
But no, bringing on new writers is always fun, it's always exciting.
And when new writers, you know, I would hope that they would question, you know, the premise of the game, because it's in questioning that we learn.
And if they are not questioning, then they're just collecting a paycheck.
And I want people to be involved in the process and invested.
And if they're not actually asking questions, that doesn't mean they're not asking them to themselves.
So it's always better to expose the questions they have and then you can work with them to solve it, rather than letting them go and work on their own and then perhaps being uncomfortable.
Or even worse, going and working on their own and not actually getting the game.
Yes.
Okay, you're asked to write for an existing franchise.
How do you go about inheriting it and how do you do justice while retaining your own voice?
So, flip side, you're the new writer.
Chris?
So we had this challenge with the System Shock reboot and then other franchises I've worked with, whether it's like South Park or Star Wars.
So the process we used with System Shock was, first off, put away your preconceived notions for where you think it should go instinctually.
Just shelve that for a little while.
The best way to approach it we found was just go talk to the original creators, see what their intentions were for the project, what they were thinking about the time during the creation of the project, get their feedback, go through all their podcasts or any sort of let's plays they may have done, get a sense for any commentary they had about the original game, try and figure out if there's any ways you can incorporate any of that.
And even though System Shock isn't the best example for this, Star Wars was where you basically want to make sure you know as much as possible about the franchise just so you know what's already been done within the confines of that franchise.
And you're not just recycling some theme or some quest or even some storyline that, you know, maybe Dark Horse may have used or another video game may have used.
It's important that you know as much as possible about that franchise.
During that process, my experience has been that you're going to be left with a lot of questions and a lot of thoughts and a lot of inspiration for where you think things should go.
And that's the moment you sort of find your voice in the franchise after you've established what the foundation is and what the parameters for the game is.
Man, I don't know how to follow all that.
Well, I'd say the only thing I could possibly add is definitely look for where you fit within the franchise.
You were talking about Star Wars.
I did a lot of Blizzard stuff.
And you want to have an idea of what your style is, and you want to be able to apply that style to whatever it is you're working on.
Because as writers and as creators, you need to stay passionate to do your best work.
And if you feel like you have no voice of your own, you're fucked.
You really are, because everything you turn out is gonna be garbage.
So take your style, find out where it fits, find the story you wanna tell, find the way you wanna tell it, and have fun.
Have lots of fun.
I would say it's important to find the voice of the project and then as you say, see how your style fits in.
So I have found it very valuable to look at things that I enjoy, see the voice that they've written and replicate that, see that it doesn't really work because it's not my style, and then merge the two together.
I actually really enjoy working on established properties for that reason, that the challenge of finding the voice and how to contribute to it in a way that is new yet at the same time consistent is something that I personally really enjoy.
And sometimes that research can get pretty specific.
Like I didn't realize exactly how many vowels George Lucas uses when actually describing planets or characters.
And embarrassingly enough, I was halfway through Knights of Republic 2 before I realized Wookiee is spelled with two E's.
And I'm like, George, really, all those vowels, man.
Will you just reign it in?
But you have to adhere to it.
Dooku, God, what a name.
Dooku.
Naming things.
Naming things is a skill.
Yes.
I don't have it.
Does the Wookiee language even have K's in it?
Anybody know?
Oh, that's a good question.
Now we're going deep, now we're going deep.
I'm gonna be worried about this all day.
But did they call themselves that or did someone else call them that?
Like you never hear Chewie go, rawr, krr, krr, krr.
It's true.
No, you don't.
Oh no.
He does roll his R's.
The name of their planet is a hairball.
Bit of a segue when it comes to fixing bugs.
What's the best skill a writer for a game can cultivate, George?
I would say attention to detail.
You as the writer of the game, and actually Chris was talking a little bit about narrative bugs earlier, you as the writer of the game are in the absolute best position to find inconsistencies in the narrative, problems with character voices, information flow that's bad.
If you go down a certain path, you don't get the same information.
All that stuff, QA, as much as we want them to find it, is probably not going to find that stuff.
So if you have, to the extent that you have, the attention to detail and the fortitude to go through the entire, all of your work, read through your stuff, play your game, pay attention to those narrative bugs, because chances are nobody else is gonna find that stuff.
You really need to think of yourself, not only as the writer, but also as the continuity director on your game.
So I'm not actually supposed to be answering this part of the question, but I'm going to very quickly.
How dare you.
when you are testing your dialogues, make sure you are testing for the suboptimal path of going through the dialogue because you know how your dialogue is going to flow. You know exactly what you want the player to get out of it. So you're going to be like, yeah, okay, test, test, test, yep, it works as designed. But a lot of players are not going to follow your optimal path.
and you need to follow suboptimal paths through your dialogues and through your stories to make sure those stories still make sense if followed in that way because if they don't, you've got a big game bug.
I'd say be excited. Be very excited by fixing bugs. And if that sounds strange, I really do believe that. They're like little crunchy treats, honestly, because they always come near the end. Fixing them does a tangible, gives you tangible progress. It feels great to squash a bug finally.
and then occasionally comes back and you can crush it again and it just feels wonderful and you can say thank you QA person, thank you for finding this bug, I feel good about it.
Plus you get a big list of things in Jira and you can tick them off and you get these tiny packets of success.
I love that.
It's so good.
Because you work on a game for so long, you know, you work on it for two or three years and you're like okay I think this is good and with bugs you can just go yes, I win.
I do, however, like a will not fix in its right place.
Working as intended.
On that note, we'll open up for audience Q&A.
Oh, wow.
Yeah.
We've got two mics, obviously, in each aisle.
So if you're talking like that, you can take the green light off.
Don't be shy.
Hello, uh, thank you for starting us off so strong. Two questions, one, um, how do you guys go about, uh, when you're early on in a project and you have the fortune to be actually on a project early in a narrative capacity and they're still settling a lot of the gameplay stuff.
How much, there's some questions about how much setting work you do versus how much story work you do.
Like, literally, if you're still doing prototype work, and you don't even know exactly what the game's going to be, but you're still working on the sides, like, how far do you think it's good to go with setting stuff?
The other question I have is, have you ever been to the Golden Gate Tap Room?
you know why i have a very good plan that doesn't look like a tap room is a great place for writers to meet and say that i have around union square something like that you know to create place the public service and i appreciate that In terms of establishing setting, if you happen to be on a project very early, you normally have quite a small team, which I enjoy.
And for me, the way that I go about creating the setting is I go and I talk to each of the people on the team about what is important for them in this game.
So what do they wanna say?
What do they wanna experience?
What do they want the player to experience?
And then I look at all of those and see where they connect.
And that's where I start with setting.
So most of the projects I've worked on have been in established settings. So like Planescape, Planescape Torment, obviously we had the whole Planescape campaign setting to work on. Fallout, we had the world of Fallout. Wasteland, we had Wasteland 1 to work on.
Torment Tides of Numenera, we had the Numenera campaign setting. So when the setting is prebuilt for you, you can focus mainly on the story. If you are building both the world and the story at the same time.
then I would say you probably want the setting to inform the story rather than the other way around.
Yeah, making sure that you have a setting that's very versatile is really important because you potentially are creating a new IP and you want to be able to create lots of stories in the setting.
So creating a setting around a story is generally not a great idea. I agree with Colin.
I can add nothing else except request next question.
I agree.
Thank you.
Thanks.
Hi. I have a quick question about skipping dialogue, because nobody likes to read things.
So how do you guys deal with skipping dialogue, especially for things like tutorials?
Like the ability to skip dialogue?
Well, if a player skips dialogue, right, and it causes some inconsistencies in story because they just never read what you intended.
It does really vary from game to game, of course.
I think you have to know as a writer what kind of game you're writing.
Some games are much more action-oriented, and so if you have long dialogue that the player isn't picking up almost automatically, you've written too much.
I mean, luckily with Torment we had, what was it, a 500 character limit?
People who love to read.
Oh yeah, we had to make different nodes if we wanted to keep talking.
So, I mean, that was a glorious project for a writer to work on.
But definitely I'd say, and feel free to jump in guys, know the kind of game you're writing for and don't try to overwrite because players naturally, and you when you're testing, will want to skip right through that shit.
And back to what Colin said before about testing the least optimal path, you can also test the optimal path.
So the number one choice in a dialogue, you can just go through one, one, one, one, okay, what did I get out of that?
some of the tutorialization should be coming through gameplay anyway so some of that is going to be on the systems designers to make sure that that is communicated properly. But if players are going to be skipping dialogue, then there's not a lot you can do about it except to try to build in proper tutorialization just throughout the game. So as to reinforce these points that you're trying to hit.
The other thing that you can do if you're playing a game that has a journal is you can lean on the journal.
We do that a lot.
So if players, if you put something important in a dialogue, always make sure it's in the journal too.
Because even if you've got a player who's reading through everything carefully, something could happen, the cat jumps on the keyboard, whatever it is, and they somehow miss whatever that critical line is.
So lean on the journal so the player can always go back to the critical stuff.
After watching numerous Let's Plays of my games and seeing people skip through everything, I realized that the gameplay choice that you should support.
And also I find tutorials very offensive.
So I always suggest that if you have to do a tutorial, either you do Half-Life 2's excellent silent tutorial, where they set up a lot of stuff visually, how to teach you to do certain things in the environment.
And also, if you don't have that available, then have the tutorial level something separate.
You can play off the main menus.
They can always go back to it if they are genuinely confused about the game.
Let me add one more thing, because that's an excellent point.
Like Legend of Zelda, for instance, Twilight Princess, you're constantly redoing these things over and over again.
Every time you get a new item, it's like, bam, you've got to go practice this thing multiple times.
And then when you finally run into the boss, you've mastered it.
So it's really just a question of constantly reiterating through gameplay, because if they're skipping words, then you don't want to throw more words at them.
Thanks, guys.
Thank you.
Um, when it comes to designing sort of branching narratives, um, how would you, do you have any advice around, um, balancing kind of meaningful decisions and branching paths with sort of fear of missing out? And like players who would just create save files after save files after save files to see everything.
Players are very smart.
They're going to realize pretty quickly if their choices don't mean anything.
So knowing what endings you can have that are actually going to affect something later in the game is the starting point for me.
I need to know where I'm going so that I can take the player on a journey rather than designing from the beginning and going, oh, that would be so cool.
Wait, I can't do it, and neither can the player.
Two things. One is try to be strategic about the choices that you offer to players.
So make sure that the choices you do offer have a lot of reactivity.
So if that means, like, based on your budget, if that means you can only afford to do, like, four big choices in the game, figure out what those four choices are, but pay the heck off on them.
Like, really pay off as much as you possibly can.
Have a lot of things that react to whatever each of those choices is.
The other thing is make sure as players are playing through your game, draw attention to the fact that, oh, this was, this is happening because you made that choice. Like literally you can say in a dialogue, well, because you killed that guy, now I'm after you, right? Whatever it is, like draw attention to that, because a lot of times players won't even realize that they've had a choice that they've made that actually has a big impact on the game, unless you're drawing attention to it multiple times.
And that's more likely to get them to come back and play through it again and see your different choices.
There's three things you can do.
Usually a narrative, even if it branches, always comes back to a certain choke point.
And you don't want to do that too frequently, but use those choke points to your advantage.
Like that's the moment you can use all the reactivity that George is describing in a very efficient way.
Two other things you can do is one is, if you can ever have the reactivity be systemic, but still narrative involved.
One thing we did with the original Planescape Torment is, no matter what player response you would choose, it would affect your alignment.
That's a really easy thing on the narrative side to juggle, but yet still have a big consequence at the end of the game, in terms of what your final alignment is for your character.
And also, like in the original design for the Tyranny RPG, we took that one step farther and said, you know what, no matter what you do in the world, it's gonna increment this counter as you become more and more famous, and then the storyline will come to you.
And that was a really easy thing to do.
Next question.
Hi.
I'm going to preface this by saying that this talk is my favorite eight letter word, producer, because I'm a producer and I'm from an indie company and we've never actually hired a dedicated writer, you know, small startup company. And my question for you is what are your tips for someone in a production role that has never actually brought on a dedicated writer?
So we're bringing on a first writer, what are your tips for working with that person?
Lots of whips.
That's a bad producer.
I guess depending on the writer's style.
First off, if you're bringing on a new writer and you have not actually made the hiring decision yet, make sure you like their writing.
It seems like an important step, but sometimes it is missed.
Yeah, some people miss that.
And they're like, oh man, the writing on this sucks.
Yeah, that's my fault, I'm sorry.
This guy is so experienced, but he's an asshole.
Also, watch out for that, yes.
Wait, so I'm sorry, you're going to become a narrative producer? Is that what you said?
I'm just a general producer. I'm not that fancy.
Okay.
I would actually say no whips because I found the worst producers are the ones that They think their sole job is to go around and beat the numbers and tasks Estimates out of you rather than trying to help you So I think the first question you should always ask with any sort of task or project is if someone's having trouble or you're uncertain about something see what it is you can do to help them because then they will what they will be more forthcoming with information for you and And that's important because usually when you're starting out a project, you don't have any metrics to work with. So the more data you can start getting from people and the more free that data flow is, then you can start establishing your own pipelines and task estimates.
You're like, oh, you know what, they say that companion will be done in three weeks, but really, you know, after doing the first one, we discover that's more like five or six weeks to do it. So now let's make that part of our estimates and realize maybe these other two companions aren't important and we'll move it off to a sequel or a DLC.
And generally I find that's a better way to approach it.
Show how you're making yourself useful and helpful, and you're there to help them out with their tasks.
I'm going to take in what George said before, exactly saying getting to know your people, hiring process is a process.
So getting to know your writer even after you've hired them, that's really the best thing.
If you were able to find a gathering of writers of some kind, Oh, where might one be?
You should probably maybe show up and like talk to a bunch of writers and just see who you get along with really well.
Like that's super critical.
any of the in exile people from the New Orleans studio by any chance? There are some here but they're at the VR summit. I'm from Louisiana. Talk to me afterward. Thank you.
I think one more?
All right.
So you mentioned being your own continuity.
Come hang out with us after a minute.
You mentioned being your own continuity director because QA won't find all the continuity bugs that might exist.
How do you think you can help QA to get better at finding those things?
Because obviously as big games get bigger, you can't do it all yourself, right?
So how we can help QA find the story bugs that they might not know to look for?
Is that the question?
Exactly, yeah.
Okay, so having a short summary of the game would be incredibly helpful, I imagine.
The main thing being you start off with a summary and then you write the game and at the end you go, where's my summary and does it still match?
So I would recommend that.
One thing we would give is we'd make sure that QA had a list of all the different ways every single quest could play out.
And the reason for that is because sometimes quests could play out.
incorrectly, but it seemed like they were correct to a player.
So we make sure that we always specced out, here's actually how this quest flow is supposed to go.
So if any stages are missing from it, that's a bug.
The biggest thing, in my opinion, is just make sure that you have at least a couple QA people who are actually reading the dialogue and actually paying attention to the narrative.
Because I can't tell you how many times there's like, QA people have been playing the game for months and I'm like, what did you think of such and such a dialogue?
They're like, uh...
and because they're just going through it really fast.
So have a few people who are assigned to actually play through the narrative and make sure they understand what's going on, make sure they're looking at the dialogues, understanding what is being written here.
And if they're confused at any point, write it up.
Even if they're like, oh man, I'm sure there's something I'm just missing, write it up anyway.
Because if they're confused, that means a thousand other people are gonna be confused.
True.
Yes?
Don't forget to mention the door manager.
Thanks.
Okay, that's it for us.
As you can see, we're gonna be in the wrap-up room, which is actually just outside in the overlook.
And we would like to mention that tomorrow is the launch of Torment, Tides of Numenera, on which we were all writers.
So take a look.
