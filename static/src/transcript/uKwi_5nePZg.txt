I guess we get started.
Good morning, everybody.
Thank you for coming.
My name is Sven Vincke.
I'm the founder and director of Larian Studios.
And so today I'll tell you a little bit about the making of Divinity Original Sin 2 and the bruises we obtained while we were making it.
To start, I'll give you a very, very quick history of Larian, just to give you some context for the decisions we made and the environment in which things were taking place.
We've been making RPGs since 97.
And our history can be split in two parts.
There's the part before 2010, and there's a part after 2010.
And the part before 2010 was the part where we depended on external funding to fund our projects.
So typically, those were publishers, but there was also work for hire.
And post-2010, we took our fate in our own hands, and we started making, we started self-publishing our games.
And so Larin has always been a company that tried to reach for the sky and often crashed, and that's where all the bruises come from.
But we never gave up, we kept on trying, and that has led to, I have to say, a very successful last five years.
But we feel we earned it because the first 15 years were very complicated.
So in 2014, we launched a game called Divinity Original Sin 1.
It was very successful, it was a Kickstarter game.
We raised $1 million on Kickstarter.
Game sold really well, had a high Metacritic, was GameSpot's Game of the Year.
It sold, I think, 2.5 million units by now, so we're very happy about that.
And it essentially gave us the rocket fuel that we needed to finally reach for the sky and not try to crash on the ground.
But before we could do that, we had to solve a few problems.
So after Original Sin 1, we came with the brilliant idea of making Original Sin 2.
It was a very hard decision to make.
And we said this one is going to be the big one.
This is going to be the most ambitious game that we've ever made.
And we are going to show the world that we always had it in ourselves to make brilliant RPGs.
To do that, we needed a much bigger team.
And one of the problems that we had been having was that the cost of living and of wages in the country where we started, which was Belgium, was very high.
And when we looked, for instance, to the east, we saw that some of our colleagues had wages that were almost half of what we were paying.
So that basically meant that they could have two developers for us, one.
And another problem that we've been struggling with was that of crunch.
As we were reaching for the sky, we often had to fix problems that appeared out of thin air and we needed to fix them and we were a small team, so that meant that we had to crunch a lot.
So we tried to get rid of that.
And another problem that we had to solve was we needed access to senior talent because in Belgium there's not much of a mature games industry at least back then there wasn't and we needed people that actually had done productions had shipped many games and we couldn't find them or if we found them it was very expensive to bring them over.
So, the answer was obvious.
We started looking outwards to other countries and we'd been working with a small studio in St. Petersburg in Russia who had helped us with the Mac port of Divinity Original Sin 1 and we approached them and we asked them, would you guys mind growing a little bit because we could use some help and they said yes.
And so that's how Larin St. Petersburg was born.
And then we started thinking about how can we solve this crunch problem?
And the idea popped up that if you were capable of organizing your processes one way or another, that you could basically offload the work that you had finished at five o'clock in the evening and send it to another time zone and they could start, because for them it was the morning, working on that.
Maybe you could have a longer production line per day without having people to work continuously.
And that's how Larin Quebec was born.
And then we had one last problem, which I didn't mention that we needed to solve, is we needed a lot of writers.
English is not my native language, as you can hear, and it was hard to find writers for us.
So we started looking at the UK, which was the closest country where people were speaking English, and we ended up in Dublin, where we started a small office with nine writers, and where we also decided to put our publishing team, because we were self-publishing.
And like this we ended up with four studios out of a small studio of 40 people in Ghent within the space of a year.
So all of this happened between September 2014 and February 2015.
And so while the Quebec and Dublin teams were being set up, the team in Ghent and the team in St. Petersburg started working on Divinity Original Sin 1, the enhanced edition for PS4 and Xbox One.
And so the idea was that each of these teams that we set up were basically going to be clones or mirrors of each other, so that you could literally pass work on as the sun rose.
And that was not the easiest thing in the world to set up, and it took a lot of time, but it started working, and we'll see some examples of that.
So by May 2015, we had teams that were operational in Quebec and Dublin.
The guys in Ghent and St. Petersburg were working on Enhanced Edition, and so it was time to start working on Original Sin 2.
And so it was the Quebec team who had actually never worked on the Original Sin game.
and the Dublin team, which was full of new writers, that were going to lead the charge.
And they started working on a small demo, which was produced in three to four months, which was going to showcase the pillars of Divinity Original Sin 2, and which we were going to use to show to press, to the community, what we wanted to make, and which we wanted to also take to Kickstarter.
And so the idea was that when the teams that were working on Original Sin 1 for PS4 and X1 were finished, they would then roll into the production that had been set up with the Original Sin 2 demo.
So the core pillars of Original Sin 2 were that we wanted to have a better story.
We got a lot of flack for the story in Original Sin 1, so we were frustrated by that and so we wanted to fix that.
We also wanted to improve the combat.
We got a lot of flack over the combat, especially from our hardcore community, after the beginning of the game, so as we went into Act 2 and Act 3.
We also found that our modding plans that we had for Original Sin 1 hadn't been that successful, and dominantly because we hadn't really supported it well, so we wanted to fix that.
We also wanted to have a higher degree of polish because we thought that the gameplay that we were presenting could be consumed by a lot more players than actually had play original Sin 1.
And multiplayer was one of the big innovations of original Sin 1 in the narrative RPG space, so we wanted to bring more multiplayer options.
And so all of these things translated in the following big axis of development.
We needed a more gripping story, one that was going to captivate you all the way until the end.
We needed a new style of writing so that people would see, okay, well, they mean it when they're talking about a better story.
We introduced what became known as the origin stories, which was essentially the ability to role play characters who had a set background, a set story, a different sets of quests within the world.
And we introduced a tag system, which was essentially, if you played Dungeons & Dragons, then you know what a background is.
It was essentially a background that you got in the game.
And then whenever you talk to somebody, they would recognize that you had that background and they would react as if you.
were that person.
And these were very important features that we were introducing to those two.
Another thing we wanted to do is, we felt that in Original Sin 2, our action point economy was ruined because we had way too much action points, so we wanted to be much tighter.
And this came from a philosophy that we wanted each point, anything that you, every single level up point that you used to feel important so that you would care about it.
And we also wanted to change the armor system, over which we got an enormous amount of flak.
We'll talk about that a little bit later.
the armor system, which was very unclear in Original Sin 1, and which we wanted to make a lot clearer in Original Sin 2.
We also wanted to tie the story to the narrative mechanics that were being produced in the game.
So we felt the game was so large that you needed to have a continuous stream of new mechanics coming towards you to motivate you to continue playing, and we wanted those mechanics to be present at every single spot in the game world and indeed in the story.
And then to top it off, we wanted to have PvP multiplayer, or at least the option of having PvP multiplayer while you were playing the game.
And this came from the idea that the core story was going to be something that was similar to Highlander in which there could be only one, although we didn't know at that particular time what the only one was going to be.
And we'll see that that was also a big problem.
And then finally, we wanted to have updated graphics, obviously, a more realistic visual style.
And as I said, we wanted to take modding into account from the get-go, because adding modding after the fact is very complicated.
But if you take it into your development pipeline when you start, in general it should work.
So the Kickstarter demo was really successful.
We made our million dollars in 12 hours, or in the first day, sorry, and we reached our goal within 12 hours.
And so we were excited by that because obviously it meant that the direction that we had shown to our community was appreciated and they wanted us to continue on that road.
And because we hadn't expected it was going to go that fast, we really hadn't prepared our stretch goals properly, but we said, you know what, we'll just take those core pillars and we'll build our stretch goals around that.
And so this is how these strategy goals came to be.
So if you look, you see love and hate, the Hall of Echoes, racial skills, the undead, the shape-shifting mask.
They were all part of this better story ambition and this ambition of tying narrative mechanics to the actual story.
And then obviously strategist mode and the extra skills trees, those fed into the combat ambitions and modding and game master mode, they were all there to supply the multiplayer vision that we had.
So the future was bright.
Original Sin, Enhanced Edition, Definitive Edition, sorry, Enhanced Christ, Enhanced Edition released.
It was very successful on PS4 and X1.
We had money, the coffers were loaded.
We had a team, we had four studios.
We had a direction in the form of a demo which was called the Prospect Demo, which was the very first version of Original Sin 2.
So it looked as if nothing could go wrong.
All right, so let's start with the story, which is arguably probably the thing that went wrong the most throughout the entire development and had an impact on a tremendous amount of things.
So these are actually the very first origin stories that we had.
These were present in the prospect point demo, so the one that we used for Kickstarter and that we demonstrated to multiple journalists and which we used to show if you were that person, suddenly all of the dialogues were going to change in the game because you became that person for the game world.
Now, Original Sin 1 had very little character development, especially when it came to the companions, and we isolated this as a very real problem.
So the brief was for each character in Original Sin 2, you needed to have what we called a fear, loss, betrayal, or wound.
You needed to have a mask or a way of coping with that, a mask for this fear, loss, betrayal, or wound, or a compensation mechanism for this fear, loss, betrayal, or wound, and that was the thing that was gonna grow throughout the game.
And this would give depth to the characters.
We wanted each character to have quirks and eccentricities.
They had to have interesting aesthetics.
They needed to have a good backstory, one that you would understand in just one line.
They needed to have motivations to go into conflict with the other characters in the game because we had this PVP ambition.
And they needed to have a story that was properly formed along according to an act one, two, and three structure.
Now, it took us quite some time.
to develop these origin stories, and there were many reasons, we'll talk about them.
One of the biggest problems, as a heads up, was the fact that we had to make this work in multiplayer.
And if you've played Original Sin 2, you know that we have drop-in, drop-out multiplayer.
So that means that, and sorry, I forgot one thing.
In Original Sin 2, you could also, we had this ambition that if you picked an origin story that was fine, you became that origin story.
But if you didn't pick it, you would encounter the origin stories that you didn't pick in the game world and you could recruit them, which essentially meant that we had a first person and a third person view on the same stories and we had to implement that.
And that led to interesting problems because we have drop-in drop-out multiplayer, so that means that if you start playing with an avatar, when you pick an origin story and you recruit a couple of companions, and then you have a friend that joins in and he becomes one of those companions, the story had to rotate.
It had to go from first person to third, from third person to first person.
which was pretty insane, but cool.
So it took us until eight months before release until we actually figured out how to do this.
We've tried and we tried and tried and we couldn't understand why we were having such a hard time, but it took a very long time because it turns out that to be able to make it work like it worked in original Cintu, you need to do a lot of things.
And it was so many things that we kept on looking for.
for simpler solutions until we actually accepted the fact that there is no simple solution, we're gonna have to do it the hard way.
So one of the main problems we had with these origin stories was determining who were you going to be, what was going to make you special.
And it was very easy to come up with a reason for an origin story to be special, but it was very hard to make that work with a reason that was also going to apply to custom characters which did not have an origin story.
Because when you create a character, you could pick up either an origin story, like the Red Prince or Fane or whatever.
But you could also create a character and say, you know what, I'm going to be a scholar, and I'm going to be a jester.
And that's going to be my role in the game.
And the game is going to have to make sure that I also feel special.
And I don't know why we had such a hard time, but we had, because it took us a long time.
I think one of the reasons was that we tried to avoid any of the tropes.
So we wanted to be special, and we had a team of nine writers, so we figured with nine writers, we're gonna figure out something awesome.
So I kept on giving people time, trying to look for something.
In the end, we ended up with a trope, but it worked well enough.
But it took very long to get this specialness in working in the game, let's put it that way.
Another problem that we had, Larin is a company that's been built to work bottom up so that everybody owns part of the game and can come up with their IDs.
And the general tendency is that if somebody has a better ID, then someone else will take the better ID.
And another tendency is that we try to make it better and better continuously.
And so that's why we listen to any ID.
And so we started with this attitude when we started making the core story for Original Sin 2.
And so because we were distributed over the globe, we started relying heavily on Google Docs, which has these awesome collaborative features and this awesome commenting thread feature.
And so in the beginning, the story was open for everybody.
So we had the scripters, we had the programmers, we had the artists, everybody was making comments about the story.
All these comments were conflicting with each other.
And we're very polite people and we answer to every single one of these comments.
So several months of answering on comments and not making any progress led to the decision that we kicked out everybody except the writers and then we started continuing to work on the story.
But we had nine writers and it turns out that nine writers don't agree about anything either.
So they just kept on arguing and arguing.
And we kept on patching, patching, patching on top of the arguments just to please everybody.
And then when you read what the resultant was, it was shit.
So it wasn't very good.
So finally, the politeness went out of the window.
We brought it to a very small group, basically two persons.
And when we did that, suddenly everything flowed very, very rapidly.
Obviously, we'd built already an insane amount of stories.
There's literally thousands and thousands and thousands of pages of course story that have been written.
So we had an enormous database to take ideas from.
And it suddenly all clicked.
And as it all clicked, we suddenly figured out, oh my God, this is how we have to do the origin stories.
And we suddenly had a solution.
And fortunately, this was, core story was finished 10 months before release, origin stories were finished eight to nine months before release.
System was invented eight to nine months before release.
So, the fact that our narrative was taking so long, the fact that we hadn't figured out how to do the origin moments, obviously had an impact on the, oh, I forgot to click on the thing with the timer.
Okay, well, I'll figure it out.
Sorry, so I have no idea how much time I've been taking so far.
So, the narrative delays that we've incurred had an impact on the rest of the production, of course.
And so we started with the things that we were sure of, and we said, well, we'll just fill in, and we'll confirm this is ready.
You can start producing on this bit, because that's not gonna change anymore, and that's not gonna change anymore, because of course, it changed all the time.
And so the scripters who needed situations and scripts, and the dialogue writers who needed dialogues to write, they got used to the fact like, well, let's implement this, and then a month later, they got an update, and said, well, this changes, and this changes, and this changes.
Maybe you have to remove the situation, you have to add to the situation, and it led to something that was very frustrating for them.
One of the problems, or the bigger problems, that we had was the way that we documented everything.
So you're seeing two documents here.
I think you're looking, I can't see it on my screen, but you're looking at, yeah, you're looking at what was called the narrative design doc.
We had the core story document, which was about 100 pages, and then we had the narrative design doc, which talked about every situation that you found in the game.
And then you had a QA doc, which basically contained the flowcharts and all of the permutations that you needed to do to be able to test the situation.
Now, we started with big ambitions on all of this documentation and we put a lot of effort into it, but of course every single time we changed the story, we had to propagate those changes and then obviously mistakes were being made.
So things were not making it into one of the documents and that led to the situation where QA starts testing something and says, eh.
there's nothing to do with what's actually in the game.
And given that at the end of the game, we had situations where we were running out of time, documentation was not being updated, so it essentially was one gigantic mess and took quite some time to clean it up.
So the interesting bit about this is that we were very well aware of it.
We tried changing the process during production, we failed.
We had months of discussion after production about how to do it.
We tried something else, it was a disaster.
And we are still iterating through the documentation process how to handle this.
This is not a very easy problem to solve.
We have something now that we think works, but maybe I'll be here in two years and I'll tell you don't do this.
So.
We had invested quite a bit in increasing the size of our scripting team because on original SIN one, we saw that we were undercapacitated.
And so we said, you know what, we have a bit of money, so let's dope ourselves and let's make, have more scripters than we're going to need.
Obviously, as we kept on changing the story, that margin became smaller and smaller and smaller, and eventually we became actually undercapacitated.
Now, the way that we had organized our scripting was we had later in production, because initially we had much more maps, but at a certain moment in production, we had three main acts, Act 1, Act 2, and Act 3. And so we said, okay, well, one studio is going to work on Act 1, one studio is going to work on Act 2, and one studio is going to work on Act 3, and then we're going to review that, and this way we're going to make the game in parallel, and we're going to be very clever about this, and we're going to finish all of this in no time.
Obviously it didn't work.
The reason why it didn't work was not because the scripters were doing a bad job, but they weren't getting feedback because the one thing that we hadn't paralyzed was the review process.
So reviews were happening by a small group of people, typically the leads and myself.
And we just didn't have enough time to do it all.
On top of that, the different time zones suddenly started working against us because we had limited windows of time that we could review with the team in Quebec when we were in Ghent, and we had limited windows of time that we could review when we were in Quebec with the guys that were in St. Petersburg and Ghent.
So decentralization of the review process was very needed, but it turned out that we didn't have people inside of the company that could do this, and as a result, we suffered heavily.
We actually solved this problem at some point by bringing everybody together again on the same zone.
So act one, so we put all the scripters on the same act, well, not all of them, but most of them on the same act.
and that made it possible to review the X in a whole.
And that accelerated things, and it's probably the thing that saved the project in the last year, because otherwise we were not going to manage.
To give you an idea of what it means to have a broken feedback loop with not enough reviews, A classic symptom was a situation that was made by one scripter, a situation that was made by another scripter.
They were standing next to each other and they didn't realize what was happening in the other situation.
So somebody could say, oh, the sun is nice and everything is shiny, and next to it somebody was dying.
And so you felt it very often, but this was one of the consequences of not having that review sorted out properly.
So once we started realizing that we were in trouble and that we were not gonna be able to make everything that we planned on, we had to make cuts.
Originally, Original Sin 2 had a map for the human lands, one for the dwarven lands, one for the undead, so basically for each of the races that were present in the game.
And what you're looking at here, if you play the original Sin 2, is a map of the human lands, which contained the city of Arx, Driftwood, and Forjoy, all on one map, which essentially became the entire game.
So that gives you an idea of the level of cuts that we had to do.
So each of these maps had a lot of action going on, and when we cut it, we suddenly started cutting in what was supposed to be the real estate for the origin stories.
So that meant that we had to go and change our origin stories again.
So this constant ping-ponging between adapting to the fact that we were going to be late and having to make cuts had an impact on the story.
The fact that it had an impact on the story meant that the rest of the production was going to be late.
And so we struggled quite a lot with that.
But eventually, we managed to have it under control.
Another thing that added to the stress, if you want, of development was that we had hired nine writers, but these people had not a lot of experience in interactive dialogues.
We only had a few people that had worked on the previous games, and the rest came from TV, from classic writing, or from television.
And the idea was that the combination of all those writers was going to lead to something beautiful, and it did.
But we underestimated how much training they were going to need to actually implement all of the dialogue trees that would fulfill all of the ambitions that we had.
And so this is an example of a dialogue tree.
The tricky thing about this is that when you zoom in on one of those dialogue notes, there's still a whole bunch of stuff happening inside of those dialogue notes that needs to be filled in.
And so there were all the fights between, well, fights, discussions between our scripters and our writers.
The scripters typically set up a situation.
They put all the flags and conditions correct.
And then the writers were supposed to expand on that.
And then typically they broke all of the flags and the conditions.
And then it went back to the scripter who complained that they broke everything.
And then it went back to the writer.
And the writer said, well, this is not cool, so I'll change it.
And then we came and we said, well, we changed the story.
Can you please change the dialogue?
And so like this, yeah, there was a bit of stress.
And then an interesting thing happened.
And at the beginning of 2017, this was nine months before release, we said, OK, we're not going to be ready, because we originally planned on releasing in June 2017.
And we were talking about what cuts we were gonna make to still manage to be ready.
But then another thing happened.
There was, we're a company that looks very heavily at the timeline of competitors, of what they're gonna be releasing when, because we prefer to release in what's called the blue ocean.
We don't like to go in the red ocean where everybody's fighting with each other.
And there was a game, Shadow of War, which was going to be released, and we were very afraid of that one because we analyzed it as being game that was going to talk to the same target audience, and so we wanted to stay away from it.
And they were moving around with their release dates, so we're like, eh, no.
And another thing was happening, because there was other games that we fought that appealed to the same target audience, and they were.
all announcing their release dates and they were all taking up all the spots that everybody had analyzed on the timeline as being Blue Oceans and said, holy hell, we need to say our release date. If we don't tell the people our release date, they're going to take every spot and then we're going to end up going against someone. So we announced that we're going to release in September.
and that was our release date, and lo and behold, you saw other people starting to move their release dates around us, so that was good.
And Shadow of War had their release date two weeks later, so that stressed us out.
So we move our release date because we're in trouble because we have too much work, and what do we do?
We say, hey, we have more time.
So why don't we voice record everything, right?
Which was not planned.
We wanted to, but we said, okay, we just can't do it.
We don't have enough time because then the script is not ready and nothing's coming out.
But why don't we voice record everything?
So we took a napkin and we started calculating.
And he said, you know what?
I mean, act one is pretty much finished because it's out on early access and people are enjoying it.
we pretty much have a good idea now of what we're gonna be doing, so we're not gonna lose all that time.
The writers have figured out the tone of voice of the game, so they're gonna manage to write.
So why don't we hire multiple studios to do the recording in, and just finish the script as they're already recording, and then feed them the lines.
Let's make an automated system that's gonna be able to handle that, and should work, right?
It's a piece of cake, and worst case, plan B, you always need a plan B, we'll add a third or a fourth studio.
How hard can it be?
So we learned from DOS 2 that it was important to have, sorry, DOS 1, that it was important to have a automated pipeline for doing your voice recordings.
And so we had a system, we had some changes made to it, and we said, oh, let's do a field test to see if we can actually handle this.
And the field test was, it was successful.
The script was generated from a build server, and that build server ran at night.
And then in the morning, he had a voice script that collected text from all kinds of files, and you could send that to the voice studio, and the voice studio had UUIDs that they had to associate with the clips that they were recording, and then they uploaded it to a server, they sent it back to us, we imported it on the build server, and the next day, everything was inside of the game.
So, seemed to be a very good system.
And we knew, of course, that if we were going to still continue to write on the game, as they were recording, there was going to be wastage.
But, you know, we said it's the downsides are vastly outweighed by the upsides of doing full voice on the entire game.
So here's an email that I'll let you read that we sent to...
Sorry, the email I have...
It's not email, sorry, excuse me.
So by the end of June, no, I'm sorry, I can't see it, so this is my problem.
Okay.
So this is the calculation that we did, all right?
So we figured that we were gonna have...
Act one finished in a certain time, act two in a certain time, act three in a certain time, that we're going to be able to calculate everything.
And on June 28th, we told the voice studio that the recording was going to have to be around something around 600,000 words.
And on July 12th, we had an emergency call with them to tell them, well, it's not 600,000 words, it's going to be a million words.
And to be precise, it was 1,079,562 words, which was a bit more than we bargained for.
And so you may wonder, how the hell do you end up in a situation like that?
And that's a question we talked about a lot.
So it began with a word count.
Now, to explain everything that happened, you need to understand how we design our situations.
So we have this concept, which we call n plus one design.
An N plus one design basically means there's N permutations or N ways that you can solve a quest.
And then there's always a fallback situation.
The reason why we always have that fallback situation is because we have a very open game in which player agency is everything.
And that means that killing an NPC is, for instance, something that should be possible.
As a matter of fact, you should always be able to kill any protagonist, any antagonist in the game, with very, very, very few exceptions.
And what that means is that even if you have a very nice story that you're trying to tell, the player might come in, launch an Armageddon spell, kill everything, and you still have to be able to tell your main story to the player, and he expects to be able to continue throughout the game.
So N plus 1 design is a solution to that, and our scripters are expected to make every single situation bulletproof, put armor on it, make sure that it has all the requirements of N plus 1 design.
So, scripters obviously are humans, and as they are going through a development pipeline where the story is changing all the time, they start taking shortcuts.
They say, you know what, I'm gonna put this situation in, I'll script it, and then I'll just wait for them to be 100% sure that the situation is fixed, and then I'll put my N plus one design on it.
Otherwise, I'm just gonna lose way too much time, and I know how this goes.
So by the time they started realizing, oh, they're actually serious, they want to release the game, and they actually know what the story is, which is cool, so we can actually finish our work, let's put in the n plus 1 design permutations.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Boom.
Right, like literally a nuclear explosion.
The scripter, because N plus one design often means like let's copy, paste, copy, paste, diggity, diggity, diggity, but there's lines appearing everywhere.
Ding, ding, ding, ding, ding, ding, ding.
And the scripter, the way that we work is the scripter stops the lines, so he puts it between brackets, and then the writer afterwards knows that if it's between brackets, he needs to replace the line, except we had never made a dashboard that counted the amount of stop lines.
So a lot of this was invisible for us.
We didn't see what was happening, but it was happening.
And a producer that started noticing, and he first thought that his database was broken because he's like, so this is impossible, I'm doing double accounts, something like that.
And another reason why the number of words was exploding was in each of those notes, if you remember that dialog design tree that I showed you, we had actually not one line of text, we had multiple lines of text for each of the tags that the players could have.
So if you were a lizard, you would have a line.
If you were a human, you would have a line.
So and that, the scripters had also postponed, or the writers had postponed.
So that was being added.
So that basically meant that often a line became nine lines.
All right, and like this, our word cone just, Yeah, it went all over the place.
And yeah, it was problematic.
So that wasn't the only change, the only reason why word counts kept on going up because maybe a dialogue had then finally been finalized and all the n plus one cases had been done, but there was still somebody adding extra lines to the game because they were, the reviewer, sorry.
We were late with the reviews and because we were late with the reviews, we still had feedback to give to the scripters of things that they had to change or feedback to give to the dialogue writers of things that they had to change and that too was adding to the word count or not necessarily to the actual word count of the full game but it meant that the lines needed to be rewritten so we had quite a lot of iteration going on.
And then, yeah, the inevitable happened.
That voice system that we had, and that localization system that we field tested, it started breaking.
It wasn't made for such rapid iteration.
It couldn't handle so much change.
We kept on hacking it because we had this actor that needed to be recorded, so we changed this or this in the pipeline, and eventually it went, it...
it all like a pudding fell into one another.
And so we kept on patching and patching and patching it, and it was quite the effort to maintain everything, and we certainly re-recorded all of the lines more than we should have, but we made progress, and inside the room where all the riders sat, you could see magic happening.
We could see where we were heading, and we could see that it was worth it, but the rest of the team was getting very angry at us, because why are you still changing it?
And how is it possible that even now you don't know all your lines?
So, and there was another cause of extra words, which is that we were still adding features.
We had until September, right?
So, we had this, this was one of our stretch goals, the undead, and because our origin story system had been so late in development, we hadn't even been, we hadn't been able to start on.
the undead stretch goal.
Now, the thing about the undead stretch goal is that you need to understand is this was to a feature that involved multiple mechanics and it was to be the showcase of how systemic or narrative system was.
So to explain that.
If you were a lizard and you talk to people, they talk to you as if you were a lizard.
If you were an undead, they freak the hell out if they were afraid of undead, and so we had to have different behavior.
The idea was that you were going to be able to handle this because you would have a mask of the shapeshifters.
The mask of the shapeshifter was cool because it changed your tags, and it showcased that if you changed tags, the dialogs changed, so they rotated.
We thought it was a very awesome feature because it showed exactly how deep the game was, and we absolutely wanted to have it in there.
One thing that we hadn't thought of was that if you were an undead and there's jokes or there's lines that talk about your face, you would have to rewrite it also because you were an undead, even in the narrator notes, which was something that was very rare.
And so this here was an example of the path that was done over the entire game to be able to handle the undead.
And it turned out there was a lot of words describing the senses and the bodily structure of persons inside of the game.
So there was a lot of rewrite happening as a result of that also.
We'd been searching for the voice and the tone of the story for more than a year, and we finally figured it out.
And we were all convinced, at least in the narrative and the writer team, that we needed to apply this throughout the entire game, because it was going to make the game that much better.
So we fought with the producers' heart to get all of this stuff in.
What you're looking at is what defined my summer in 2017.
This is the file that was eventually generated somewhere in mid-July.
It was a file with 80,000 lines of text in it, and more than a million words.
And the little ones that you see meant that something was ready to record.
And when the little one was put there, it meant that the situation had been reviewed, the dialogue line had been reviewed, it was okay, we were never gonna change it again in our lives.
Which we didn't.
But that meant that between July and August, as we were recording, by now in multiple studios, we just were going there, one, okay, this is not okay.
I'll change this, change this, change this.
And so it's fair to say that half of Original Sin 2 was written in those couple of months as a result of all of the delays that we've been accumulating.
Luckily for us, we had a lot of writers and then we could handle it.
But still, it was an insane job.
It was Jan, our writing director, that to give you an idea of the level of iteration that we applied on this game, one week before release, I said, do you think I can still get this actress?
And we changed the middle of the origin story of Sebil, and indeed it was a lot better.
And then he asked me, how do I do this voice recording pipeline?
Because he didn't want to go to the producer.
and that the script had changed.
So now imagine, yeah, so now I have this slide here because the producers deserve a lot of respect for despite being grumpy and deservedly angry at us, they did cover us at every single moment in time.
They made sure that everything worked.
They figured out solutions for all of the problems that we encountered.
And you can for sure say that without them, nothing was going to happen.
It would have been one gigantic mess.
Now imagine that you're working at Larian Studios and you're working in QA.
And you have a test plan, and your test plan is changing the entire time because somebody's changing the story the entire time, and even as you are supposed to test your finals, they're still flagging, this is ready, oh, this is not ready, let's change this, oh, this is ready.
Your job is almost impossible.
So our QA team was actually, they were amazing.
They had roadmaps that went through the game, that tested all of the permutations, and they did a pretty good job, but it was arguably, well, needless to say.
Not everything had been tested when we shipped because it was impossible, because since we kept on changing things continuously.
We did have some automation and that saved us.
We had world testers that basically went over the entire game automatically.
So there were NPCs that were doing combat automatically.
All the levels were tested automatically.
The one thing we didn't have, and something that we're investing in now, is something that tested the story, that tested the critical path.
So it needed to be played.
And the game was so large that if you started on Monday morning, of one week, then the Friday of the week after, you did one run through of the game.
So you can imagine how much QA it took just to be able to do a permutation.
And so as a result, we didn't have that much view of how the entire story played out because it just took too much time to go through it.
Luckily for us, it didn't matter that much that certain things didn't work because you couldn't necessarily notice when you played the game.
Divinity had so much reactivity that if something didn't react, you didn't know if it was supposed to react or not react.
There was only one thing where you could see it, and that was in the journal, and that's the one that really hurt us.
Because if you looked at the journal, a quest remained open forever.
and that was a clear indication that something wasn't working.
And that was, it actually, without that, we would have had a 94 Metacritic instead of a 93, and we got a seven out of 10, one seven out of 10 from Polygon, rightfully so, because she was on a, yeah, she had a really lots of problems in her questing, and that was actually a result of all of these changes.
So it's not something that I would recommend.
On the other hand, if we wouldn't have done it, then the game wouldn't have been as good and as well received as it was.
So there was more going on than just a story, but story was probably the biggest thing that went wrong during Original Sin 2. That's why I spent so much time talking about it.
We also wanted to improve combat.
And so we wanted to improve multiple mechanics.
And so we decided that the armor system should be better.
And we were very enthusiastic about it, because we tested it.
We tested it at PAX.
And we saw that people instantly got how armor worked.
And it was very intuitive to them.
And so we were very enthusiastic when we launched it on early access, except the community hated it.
They really hated it.
They wrote books about it.
And we were very stubborn.
We didn't want to change it because we said, well, they don't understand it's so accessible, everybody understands it, blah.
And yeah, lots and lots and lots of discussions.
There were an incredible amount of iterations inside of the company trying to save the armor system, but essentially it remained a broken thing and it's something we shipped with, and maybe we shouldn't have shipped with it in the way that we did.
The problem with it was that if you combine a damage shield together with control immunity, you limit your design space tremendously.
And that's something that you don't really feel in the beginning of the game, which is what we had in Early Access, but you definitely feel it as you move towards Act 2 and Act 3.
Another thing over which we traded a lot were the surfaces.
We, in Original Sin 1, was the game in which you could, there was oil, you put fire on it, you got an explosion.
There was water, you put electricity on it, you get an electrified surface, you put fire on water, it was going to, you were going to get a cloud, a steam cloud, and people liked it a lot because you could involve the environment in combat.
So we figured that we should expand on this.
And so this is one of many, many, many flowcharts of systems that we tried to get to surfaces better.
And the thing was that, and we had those things executed.
So our VFX team started putting the effects for it.
And we had like, there was one level I couldn't find a screenshot back for this talk where you had all of Fort Joy with all kinds of different surfaces.
And then the game started, of course, what does this surface do?
And that was the core problem of it.
people couldn't understand what was happening with the surface, it wasn't one of the basic elements.
So eventually we dropped all of that and we stuck to the surface system of original SYN 1 and the only thing we added were two adjectives, blessed and cursed.
And even, to be honest, even to this day I still don't know what cursed and blessed do because they changed all the time.
It wasn't very clear.
So, it was something we traded on a lot.
One of the biggest problems we had with early access was what was not on early access.
So we released Act 1 on early access.
And the reasoning was, we want to make sure that players, when the game ships, are going to have new content to play through.
Otherwise, there will not be any excitement if they already consumed all of the content.
And we had people that kept on playing, playing, playing.
Like, they had already stacked up hundreds of hours just on the very early first act.
And so the problem was that we were getting a lot of data from the for Joy from Act One, but we weren't getting any data from Act Two and Three.
So to explain how we got into the problem that I'm about to show you, one of our main goals with the systems design was that each stat point was going to matter, and that the leveling up would be a very tangible thing so that you would have a continuous desire to improve your character and get better equipment and better skills.
And we had a world with very few bottlenecks, so the only way that we could guide you was through level scale, no, not level scaling, level gaps.
So if you were level two and you fought a level four creature, it had to be very hard, but we still wanted you to have a chance to defeat that creature because if you managed to do that using the systemics of the game, you were going to feel good about it.
So what we did is we had a very steep leveling curve, so it was about 20% per level of extra damage hit points and so forth.
And that meant that you would feel it very, very strongly when you went to level up.
But it also meant that if you were a level too high, it was going to be very easy to kill something if it was at a lower level.
And that's the thing that went wrong.
So this is data that we obtained from early access.
This is a heat map of where people were walking.
This is a heat map of where people were dying.
And so that was really good.
But we didn't have this information for Act Two and Act Three.
And so what we did is we invited play testers to the company, volunteers, to try things out.
and we tracked the data from them.
The problem was that we couldn't find a lot of volunteers that were ready to spend two weeks in the studio because that was the time you needed to play through the entire game.
So the only data that we could capture was the data that we got from our internal QA.
And so our internal QA, they know this game very, very, very well.
So to give themselves an extra challenge, without telling us, they started having parties of three characters instead of four characters.
And they went through the game.
And then obviously they had a bit of a challenge.
And so what we never saw was something that became very apparent in the first week of release was that the game, if you did everything.
accrued too much experience, something that hadn't shown up in any of the tests that we did before because QA was following their critical paths and we had some runs that tested everything but given the amount of time that it took to test all of it, the data never really popped up.
game comes out, our min-maxers start doing everything in the entire game.
By the time they're at the end of act two, they're two levels higher than they're supposed to be.
By the time they're in act three, they're way too powerful, they're just breezing through it and say, oh my god, boring.
And that was completely against the design that we had where we wanted you to feel every single point that we were putting in the level.
So we panicked, we literally panicked.
Because we knew how important the leveling curve was.
And we intervened.
We released the patch four days later, and which we hadn't tested, and we just introduced spikes.
So we just upped the difficulty level in the middle of Act Two, at the end of Act One, and at the end of Act Two, if I'm not mistaken.
So these are the spikes that you're seeing there.
It worked, it certainly worked.
Game became harder and our reasoning was like, okay, these are the guys that played through really fast.
There's a whole bunch of people that will play through a lot slower.
So we're going to test the leveling curve now and change it as much as possible so that the people that are trailing, if you want, through the game.
are going to have a better experience.
And so over time we managed to smooth it and round it and we solved the problems because there were some other problems going on also.
We got everything sorted out.
But it was another reminder that if you don't visualize your data or you don't have enough data to make decisions on, it becomes really, really hard to tweak your game.
Here's another change that came in very late, AI 2.0.
So we learned from DOS 1 that our combat was very slow.
People take a lot of time figuring out what they're going to do and it's a lot of fun.
And to make sure that people wouldn't get bored as they played the game, we tried to make every single combat handcrafted and very different to the other combats that you were encountering in the game.
and so the prescribed approach was to make tactical puzzles out of each combat which you could solve in many many ways. Now you need to know that the approach that we have to the design of skills was to introduce concepts early on then teach players how to combo them and then later on give them some skills to top it off.
And what that meant for the AI was that it was very easy to foresee what players were going to have in the beginning of the game.
It became much harder in the middle of the game.
It became almost impossible at the end of the game because we had, I think, close to 300 skills.
And it's also a classless game, so you can just mix and match any skill that you want.
So in the past with Original Sin 1, we had a very simple primitive state machine where it was if-then rules that were made by combat designers that were going to decide what the AI was gonna do.
And that meant that if you figured out some kind of strategy that was successful against the AI, you could keep on doing it because probably the combat designer had not applied the whole in the AI's thinking throughout the entire game.
And so in October of 2016, So 3.9 a year before release we say you know we maybe should have a real AI. Now uncharacteristically so I was against it because I thought it was too risky that we weren't going to manage to get it done in time because there was going to be a lot of fiddling with weights and if the approach didn't work we had nothing.
And the other thing that I didn't like about it is that it meant that we actually couldn't really finalize any of the combats in the game until the AI was going to be ready.
And they told me it was going to take two months, but I didn't believe a word of it.
Rightfully so.
So this was one of the cases where our multi-studio structure is safe today.
We had a programmer working in Ghent.
We had one paired with him in Quebec.
And together, they spent a 17-hour day.
And so they worked and worked and worked on the AI.
And by somewhere in January, February, we started having something.
But they did work on it like this until the very end of production.
But AI 2.0 was fantastic.
It really added to the gameplay that was present in the game.
There was a whatever strategy you came up with, the AI could do something cool against it.
It was very clever also about abusing glitches in the system that we didn't even know that existed.
Probably the most famous example was the bartender that drank all the alcohol to buff himself.
not dealing with the content because it was in combat, right?
So, or we had an AI that shot a barrel of oil, not, sorry, an AI that shot a barrel of oil to slow you while you were hasted to get rid of your hasted status and all these kinds of emergent behavior came from the AI.
So I think it was a very big element in the success.
So I'm very happy that the programmers that argued for it won this particular argument.
So all of this problems, and there were more, but I'm running out of time.
All of these problems obviously had an impact on our release, and in our particular case, we had multiple release dates.
Our very first release date was our Kickstarter, because we went to PAX, we went to journalists, we released a demo that they could play.
And that's how we had all of our previews.
Our second release date was our early access, because then we went to the public and we said, here's act one of the game that we're trying to make.
Please play it and let us know what you think.
Our third release date was internally called as Krill release date, because somebody had clicked on the button to release the game prematurely.
So this was two weeks before release.
Luckily, luckily we had a phone number from somebody at Valve that we could, so that we could call to rectify it rapidly, because it would have been a disaster.
Then we had the actual release date, which in our case was plagued by power outage in the entire city.
So we had to do all kinds of stunts to get the game actually released.
And then we had the definitive edition release date is when we came up with an improved version of the game, which released last year.
So that was literally the fifth release date for those two.
Now on release, we paid the price for the word count.
And the thing, is that on this one?
I think it's on the next one, yeah.
We paid the price and that we were review bombed.
And we were review bombed by very angry people in Russia that said, where the hell is my Russian localization that you promised?
And we said, well, it's gonna release on 21st of September because the translation companies have suffered some delays because somebody has been changing the script until yesterday.
And we haven't talked about translation, but those guys were heroes also.
Because there's translation, there's proofreading.
And with a game that's this big, proofreading takes a long time also.
And they were angry.
They were so angry, and you could see it.
So what we did is we said, you know what, we'll just release the beta text, right?
I mean, you'll see it's a really good translation.
It's just not 100% finished.
And that actually worked.
We went to Twitch in Russia.
We talked to Twitchers and to calm down the community.
We said, like, this is what they're doing.
They had a few problems and this blah and so forth.
And it worked.
I would certainly not recommend it because we were at that moment, we had a 96% user rating on Steam and we were, I think we went down to 70 or something like that.
So we were suffering very, very, very hard.
But it was our own fault, of course, because we changed so many things.
So.
If you hear all of this, you would say, well, what a disaster, right?
But there's a couple of things that you need to realize when you think about Originals Sin 2.
This is a 120-hour game that was made in two years' time.
So that is, I think, quite an achievement of the team.
And it was a game that went really right because it scored very, very highly.
It sold very well also.
It's still in the charts to this date.
So, and it was a testimonial that all of that iteration, and all that of the refusal of compromise on quality that it paid off, even if it caused a few production problems.
So my lesson was that not compromising on quality is a good thing.
But you need to figure out how the hell you're going to make your production work with it, because otherwise, you're going to keep on running into problems.
And it's problems that you don't want to have.
So what are the big takeaways that we've applied to our own processes on the next things that we're working on?
and which also not all work.
So first thing is documentation.
Balance and documentation for a big RPG is really important.
You're gonna spend, you're gonna create thousands of pages of documentations for QA, for your scripters, even the briefs of the writers.
So you have to figure out a way of not having too much documentation because the less documentation you have, the easier it is to maintain it.
On the other hand, you have to be able to inform everybody about what's supposed to be going on.
So you need to have sufficient documentation.
This is a very, very hard problem.
If anybody knows a perfect solution for it, please come tell me.
White boxing.
White boxing refers to the, how do you make a game that you can review without having to put all of the production values in there?
It turns out that for a game like Original Sin 2, it's very complicated. We've often observed that if a level design is not far enough and decorated enough, a scripter is not going to put effort in making all of the permutations that he needs to do. And that is...
Yeah, that is a very surprising thing. We've fought against this, but we never solved it.
So, figuring out a good white-boxing process, and I think we have one now, is very important.
Automation. Invest in automation as much as you can. It is the saving grace when you're iterating.
I mean, because if you don't have to have a human going through everything, and you have something that can automatically test your game, you're going to save so much time.
Your processes need to be built for iteration.
You need to tell people up front, this is what we're going to be doing.
We're going to change until the end, right?
If you don't do it, you will have a lot of frustration, you'll have a lot of fights, and you can avoid a lot of these fights by just being very open about it.
Yeah, the two-minute cook syndrome, I think that's obvious.
You need to have some dictatorship involved in making a game, but you still have to open up the lines so that people can understand what you're saying.
Feedback loops, we talked about that.
Invest heavily in it.
It's very important.
Real world circumstances.
We saw a few examples of that.
Hard to organize, but definitely worth it.
But topic on its own.
Never stop improving.
That's the thing that we really did well, I think, and it paid off for us.
And then you have to accept that iteration takes time.
There's nothing to be done about it.
You're never gonna get it right from the first time.
If your production is completely production focused, then you will lose opportunities to make your game better.
I think that when you make a game, you should strive to make it as good as you can.
And sometimes you have to just take risks.
And they can blow up in your face.
I had one blow up in my face this morning, actually.
More to be said about that probably in the next weeks.
And then, yeah, visualize.
Visualize as much as you can.
Make sure that you can see data, that you can see disasters happening like the word count that we had.
And yeah.
So these were the top things that we used to change our processes.
Whether or not they work, we'll see in the next postmortem, but that's going to be it for today.
So we have four minutes left for questions.
So I guess we jump to questions right away if there's any questions.
Thank you.
Is this on? Hi.
Hi.
Um, so, I love this game and I've played it a lot.
I've noticed you didn't mention Act 4 at all.
Did that just, like, appear?
How did that work?
No, so what we call Act 1, 2, 3 is basically the three act structure, the narrative one.
So multiple maps are actually involved in Act 2.
So Council of Seven and what we call RC Main, which is where Driftwood is, those are all one act for us.
Oh, okay.
So the last act, the one that you're referring to as Act 4 is actually Act 3.
Ah. So that's why.
Thank you.
All right, you're welcome.
Good talk, thank you.
So I have a question about the backdoor.
I noticed that in the game, you can have one character talking with the enemy, while the other's putting something very heavy into the backpack of that enemy.
And so later, when the fight starts, that guy could not move at all.
So kind of, I don't know why you have this backdoor.
Is that deliberately designed?
Because I don't believe it's simply a bug.
So could you explain why you have that?
There are other backdoors like if you shoot in distance, at a distance, you would not, your movement would not be locked, but you can, especially using the sauna forest, that character, you can actually all summon a...
We did it on purpose.
So why do you have that?
We did it because we know that players like to glitch a game, so we think it's a way of promoting player agency.
If they figure it out, they're very proud of it.
It's similar like, oh, I'm gonna talk to him and then I'm gonna steal everything.
We leave that in because we know players like it, even if it's obviously an exploit.
Okay, so.
So it's literally by design.
Okay, what about balance?
Do you think it's kind of harmful to balance the game?
We're not really focused on the min-maxing.
We think about a game as something in which you should have fun, especially if you're playing in cooperative multiplayer, which is where most of these cases appear.
You just wanna play, like you were playing Dungeons and Dragons, you know?
You're playing a pen and paper session.
You're goofing around.
You're having a lot of fun.
There's reasons to continue in the world.
And that, I think, is the most important bit about RPG design.
Thank you.
You're welcome.
Here?
Yeah, yeah, sorry.
Sorry.
Hello, I'm just curious how you balance the crafting connected to the combat, because there is clearly a connection between the two for the arrows, the bombs, and this kind of shit.
So our crafting was one of the things that we weren't very happy about and so we think that we could have done a much better job on the crafting so this is something it's a topic on its own.
It came later it wasn't really embedded in the full design of the game and you feel it when you play the game also so we try to do that better for definitive edition but.
To be fair, crafting is a real big problem when it comes to balancing.
And because a lot of people don't like crafting, a lot of people like crafting, and it's hard to mix them.
So if it were up to me, I wouldn't have... well, it was up to me, so...
But I would have to think very hard again if I would put crafting into the game.
Because then that solves the problem, obviously.
Okay, thank you.
You're welcome.
You talked a bit about how you flattened the AP system, but it seems like the new system would be harder to balance just because you have fewer action points.
You lose granularity.
Could you talk more about why it was important to change that?
Yeah, so we noticed that people didn't care about the action points anymore when you had like eight or nine action points because obviously it was easy to scale.
But it just you didn't feel that there was no sense that it was important.
With two or three action points what we saw is people were arguing, were reasoning about it.
I'm going to do this and then I'm going to do this and that's literally what we wanted to promote.
So you're right I mean that just daggers on its own was already a problem, right?
What are you going to do? One dagger is one action point, the other one is two action points or not.
But then what do you do with weapons that take two action points? So those kinds of discussions.
But we thought it was more important that people would reason about their action points and we took those problems with it. We knew that that was going to be a problem.
Gotcha, thanks.
All right, well we have time for one more question, then we have to go to the wrap-up room according to my notes. Also you have to fill in your session evaluation things.
Five stars please, thank you.
So one last.
I think she was here before me.
You talked about reducing the too many cooks situation.
I was wondering if you had any more ideas or things that you did that helped the whole studio get on board with that?
With the too many cooks, well, we explained it.
So we said, guys, you have to leave us alone, because otherwise we can't get our stuff done.
And this is a really good question, because it's a hard problem.
So on the one hand, you don't want to be top-down heavy, and you want to maximize what you get from the bottom up.
On the other hand, you still have to be able to work with it.
So I think this.
I don't have a ready solution for it.
I think it's a balance that you're gonna have to walk continuously and you're gonna have to adapt as you go and you'll make mistakes, I mean, which is fine.
Making mistakes is fine in this.
And communicate a lot.
That's the only solution I have.
I mean, we're a studio that went from 40 to we're now 200 people, which has been quite a ride, but it's also complicated our lives tremendously because some of our processes are still built for 40 people and that doesn't work with 200 people.
So we're discovering as we go.
All right, OK, if you have any more questions, we can talk about it.
And I don't know where the wrap-up room is, but there is a wrap-up room and a wrap-up room, if somebody can show where the wrap-up room is.
Thank you.
All right.
