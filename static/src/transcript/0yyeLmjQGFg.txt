afternoon. It's 1.20. Good producers start on time, right? So let's get that. How's GDC so far?
Awesome. And the volunteers do an awesome job. You guys should give them a hand.
Some of you might have been volunteers once.
I had an opportunity a long time ago now, back when GDC.
Who went to GDC when I was still in San Jose?
Anybody?
Thank you.
I'm glad I'm not the only one.
We've got a few.
Awesome.
It's grown a little bit since then.
Today we're going to be talking about high performance producers.
We're going to be talking about production generally.
I hope you're in the right place.
If you're not, it's your last chance to get out.
I would hate you to have to sit through an hour of this if it's not what you were planning for.
Please make sure that your phones are off, you know, all that jazz.
And at the end of the talk, we always ask that you rate us.
We love being reviewed, and especially as producers.
I imagine most of us in here in production, it's sort of our trade, right?
So I'd appreciate getting some kind of review at the end, preferably better than worse, but we'll see if I earn it or not.
So I've been at Gearbox, what, 10 years now?
I've been in the industry about 20 years.
I was at Origin in the late 90s, was on the team just when we were launching Ultima Online.
I worked in flight combat sims, right on the tail end of Wing Commander.
Seen a lot of cool stuff, but I'll tell you what, some of the coolest stuff I'm seeing is happening right now.
I mean, we birthed a lot of things industry-wise between MMOs and had the benefit to go up to Dallas where shooters were created and working with some of the best shooter developers out there right now.
But the stuff I'm seeing in the indie scene is knocking me out.
How many of you here are on teams of like less than 50, let's say?
Fantastic.
There's so much exciting stuff happening that you guys are doing.
It inspires me.
So please keep doing that.
I know everybody's ambition.
Well, I don't know.
It seems like we're doing well in indie space, so I'll let it go with that.
There are 44 slides if you're counting.
Hopefully you're not counting too close.
Let's get started.
So let's just clarify.
I always like to define things.
We're talking about high-performance production.
So rather than just have assumptions, let's check those, I'm saying that when I talk about high-performance producers, I'm not talking about just any producers.
And I'm not talking about people who are in easy jobs.
Not that production's ever easy.
But there are some that you slide in by.
This is not for people who are just getting by.
This is for people who work.
in high-pressure environments where time is critical, where speed is key.
I would say that's the case for everybody.
It's not, you know, it's more true for some than others.
And if you feel like you're under the gun all the time, there's just a few techniques that you can use, some of which you may already be employing, but some which I use and that I just want to talk about here with you guys.
You know.
Operating at greater speed or greater power than others, things of the same kind.
When you are out there in the industry, you want to be noticed as someone who's extremely valuable in production.
Someone who, when you're added to a team, you are a force multiplier.
And it's because you have tools in your toolbox that not everybody has.
Now, high-performance producers are very active, but they're not hyperactive.
And sometimes we kind of go too far in the other direction.
Sometimes we forget that we also have to be the voice of reason a lot of times, or we have to be the ones reigning in feature creep or everybody's great ideas.
The thing about games is everybody has an idea.
And we need producers to be mediating those so that things can be done feasibly and on time.
Some characteristics of hyperactive producers, just so you know when you're around one, or if somebody's mentioning it to you, maybe you see this in yourself, impatient.
Now it's okay to be impatient about a lot of things.
In fact, I tell producers at Gearbox sometimes, it's okay to be unreasonable about things when you need to be.
But if you're characterized as constantly impatient, then everybody just goes tone deaf on you, and you don't want that, right?
They have difficulty focusing.
And you're going to see this mirror is actually very close here with ADHD, which I think can be a gift in game development, but also presents a lot of problems when you're working in a team environment.
And this is one of those first big ones that it presents a problem with, is in building trust and stability.
When you have someone who's bouncing off the walls all the time, or always seems to be cranked three notches up more than anybody else, while that could be.
you know, good leadership sometimes, if it's a constant, then again, people tend to go tone deaf.
We don't want that.
And also, this type of person, who many of us probably have worked with, tend to favor quantity over quality.
They believe that you have to go wide early.
One of the reasons for this, at least in my experience is, Because they don't focus on one thing at any given time and need a lot of things to think about, they tend to put a lot into the pipes.
And so you just kind of have to watch out for that.
And if this person is, say, your manager, you can do a lot to help the project by just pointing out to that person, this is what you're seeing in them.
And they also tend to over-centralize control.
Because they get so many things in the pipe that are all in their head, this can not just happen with producers, but with anybody on the team.
If you see these characteristics in somebody in command and control, and in this idea of low self-accountability, that they're pushing a lot of decisions out, but they themselves aren't holding themselves accountable, again, you can point out to them, this is something I heard in the GDC talk, you sort of fit this mold, let's talk about it.
I don't imagine anybody's really seeing that, but if you are, it's good to have that chat.
So high trust teams.
When we talk about high performance, how do you get to high performance?
How do you get to speed?
And how do you do it so that things are being done in an accurate and precise way, both, and minimal error?
That's kind of the holy grail at speed.
Well, the first key is high trust.
And we hear about trust a lot.
But it's not like this nebulous thing.
It's not this thing that just you and your best friend have or you and your family have.
We have key things that we use, tools that we employ to build trust with people on our teams.
And it surprises me, actually, how infrequently I see producers, especially, trying to employ these methods to build trust, rather than just assuming that it's something that will develop.
Uh-oh.
Always more than one way.
So let's grade that.
Now, in the description of the talk, this is going to be a bit interactive.
And I'll tell you right now that the last slide is an example that I hope all of you use to grade yourselves.
I want you to come away with a custom.
report card for you to use much like you might, how many of you are employing Agile and Scrum in here and are using burned down charts and enjoy using that data?
It helps us out a lot.
Well, we should use that same methodology.
You're already employing it.
Let's use it for evaluating ourselves.
Also to help us build a lot of credibility with our teams when that's why we're doing that.
So let's grade trust a little bit.
First, what have we done to earn the trust of our managers?
We don't tend to think too much about earning the trust of our managers other than making them happy.
And personally, I don't really want.
the people around me trying to make me happy, I want them doing a good job.
If they're doing a good job, I'm happy.
So I would imagine that it's the same with you.
If you're doing a good job, you hope that your manager and your manager manager is hearing that and is happy.
But specifically, what are the things that you've done to earn that trust?
And how about of your team?
If all they ever see you for is because there's a touch point where they are tracking something, if you are asking the people on your team, when's this gonna be done, how long is it gonna take, all those things, well they already expect that, but that's not really the way to earn trust, that's the way that they know that you're gonna be there and that you're basically doing your job, but it's not much beyond that.
It's like what good are you to them other than pulling data from them?
You need to go a step beyond that.
Ask yourself this, do you feel your organization trusts you?
Does it trust you enough for you to make these decisions on your own?
When we do our performance reviews at the end of the year at Gearbox, we have a question very much like this.
And in your reviews, do you get asked a question like this in your performance reviews?
Very, very few.
Sad to hear that.
I would wish that everyone gets asked this question so that it's more transparent to your leads how you feel and the responsibilities that you have in the job that you're doing.
So think about this.
Think about it sincerely.
Have you been trusted to make decisions beyond just the role that you're in?
Are you ever asked into someone else's office who has responsibilities that are maybe greater or different than yours and asked to consult on something?
Are you a person who's gotten into that kind of seat yet?
And if not, why might that be?
And what sort of conversation can you have about it?
And very often...
This is a key point in why that may be.
If you're not getting asked to have those conversations, a lot of times it's hard for us to reflect on ourselves that we're exhibiting that exact same behavior to other people.
How often do you invite others to help you make critical decisions?
And how often do you decide that you really just need to make that decision yourself?
I mean, that could span anything.
And do you give others that opportunity to earn your trust?
You can ask these exact same questions to your leads.
And if they are a good lead and manager, they should be very happy about having this conversation that they likely don't have very often.
And what opportunities can you create?
I'll tell you that at Gearbox and everywhere I've worked, anytime there was an opportunity for me to do something beyond just what was right in front of me, I'd jump at it.
I love learning new things.
I like doing new things.
I'd imagine a lot of you are the same way.
What can you do to create those opportunities and also do it so that they're not a distraction but are adding on to existing efforts?
A lot of times the first easy one to do is in morale.
I've challenged producers box recently to see who can come up with the coolest morale building events and I'm really looking there are some amazing things happening right now I mean I found out that we have a what is it like a destruction room people can go into and just break everything and get it recorded on video and now we're using that for our effects team I had no idea it's amazing I want to see what else people can come up with then no I'm not worried that that's what they chose to do Now, LeBron James, I don't know if any of you are sports fans in here.
LeBron James has a special handshake he does with every member of his team in the Cavaliers.
He has built incredible trust with his team.
And when we talk about high performance teams and high performance people, I mean, you really can't get better than LeBron James and the Cavaliers.
Now, I'm not saying everybody in here needs to develop their own special handshake with everybody on the team.
But the fact that he's doing it, and he's certainly better paid than I am, and taking the time to do that with his team, that really says something about the level of commitment that even a star player like that, somebody who we might think of as a rock star in his industry, who's willing to take the time to do something like that with his team, you better believe that team likes playing together, and that they have a lot of trust with each other.
Let's talk about another area of high performance, sales culture.
This is not one that we tend to be comfortable even thinking about in the games industry outside of those marketing people who do marketing stuff.
This talk is more targeted towards people who are in development.
We developers, we do the hard stuff.
But the fact is that people in sales do really hard stuff.
And there was a period when I had decided to leave Origin along, when was that, in early 2000s.
I knew what I wanted to do, but I didn't know how to get there.
And I knew that even though I'd been in the music industry before that, I didn't know how to pitch to people in the tech industry.
So it took a few months.
And I read up and I spent some time with people in sales and asked them for literature to give me what could I do to kind of bone up in sales.
And I learned quite a bit about sales culture and it wasn't what I expected it to be.
So a point I'm going to make here is, there's a lot that we as producers can learn from that kind of culture that has to perform, that has to deliver something all the time, all the time.
They're measured in hard numbers.
We, while we, you know, kind of peripherally get measured in that way, we're usually observing the team.
It's rare we get measured in the way that a salesperson gets, gets measured.
And I wonder what it would be like if we were.
So certainly demands high performance, very results driven.
It is very customer focused.
I was surprised at how team-oriented, say, people who work in a luxury car dealership or any sort of, especially in luxe areas, how team-oriented they are and how much sharing there is between people in sales culture.
It's a good thing as a producer to have in your background.
But of course, when we think about the individual who comes from that sales background and then putting them into a team with other game developers, very often I think this is what we think of.
So I just did a simple search for the ideal salesperson.
And believe it or not, this was one of the top things that popped up.
I thought it was kind of funny just what would happen if I put this person into one of my teams.
And I think he wouldn't make it very far into the building, actually.
But I like where his heart is, that he is determined, disciplined.
He thinks about the impression that he's going to make.
He thinks about how he's going to interact with his customers or her customers.
And then I think about what we really need is that in somebody like this.
This is Rod.
For those of you who don't know, this is somebody I respect a lot.
This is Rod Ferguson.
who runs Coalition, his background is Gears, he's making Gears 4.
He has all those same qualities, but without that sales edge.
And so you don't notice it in a great producer.
They have those qualities, but you don't think about it that way.
So you need to think about...
what your goals are, how are you going to be measured?
This talk is about you grading yourselves.
How are you going to measure yourself?
And you need to know what you expect of yourself first.
So another basketball, forgive me for the basketball references, but here we have Michael Jordan, arguably the best, if not one of the top two basketball players and athletes ever.
It's OK, we can argue that point if you want.
But he always visualized what he was going to do and thought about what he expected from himself.
Are you doing that?
And I liked having a Chow Yun Fat picture because I was looking for this Confucius quote anyway.
This is a critical one when we think about evaluating ourselves again.
It's the you don't know what you don't know problem.
But there's wisdom in realizing you don't know stuff.
So, and you've probably heard it if you were at other production talks today, and just in life, you're told, you know, always ask questions and tell people when you don't know.
And it surprises me again how often I come across people, and it does tend to be newer people who should be saying they don't know more often, who are so afraid to.
And so we need to tear that fear down so that we can mentor and have better, more highly performant junior people in the industry.
One of the difficulties in preparing for this, though, was what is a game producer?
So I looked around.
I did a bit of a internet search around, and I like to hit up the same places.
So I went to Gamasutra, and I found this really interesting couple of competing articles.
And I'd love for you to go and read these yourselves after if you haven't already.
This first one from Ernst and Bosch, who was at Blizzard, is about the kind of traditional role of producer in the industry.
The one that comes from Trip Hawkin, when he brought in producers from the music industry, thinking about the A&R, the artist and repertoire process, and managing talent.
and how that competed with this notion of the project manager.
The producer is project manager.
So one of the difficulties when we talk about measuring ourselves as producers is that there is no standard still in the industry of what even a producer is.
We have producers and development directors and project managers and development managers.
And there's at least a dozen different roles that all amount to what could be the same thing at some other company.
Now, I don't know even if we're going to get to a point where we have standardization for this, but it's one of the hiccups that we have when trying to figure out how to explain to people in other parts of the industry what it is we do.
They might think you're one thing when actually you're something else.
And it's also why I said I want this to be a customized evaluation of you for yourselves, because only you know, can know all these things of what you expect of yourself, what others expect of you, what your role, how it's actually defined.
But there are some basics that everybody needs to know.
And here's some questions you should use to evaluate yourselves in project lifecycle and product lifecycle management.
Are we all familiar?
Well, at least the way I'm using these terms, who's not familiar?
And I know it's always hard to hold up your hand when I'm asking who's not, but it'll help me target in a little bit, are you familiar with project lifecycle management, that concept?
is not familiar, who's not had like a formal course or something in project life cycle management.
Okay, thank you, thank you.
It's a fair number of us, that's good to know.
And then, and so I will assume then that product life cycle management also is a no.
So I'll talk a little bit, not too far in depth, we don't have time for it, but I'll talk a little bit about it.
I won't say all these questions out loud.
I'm leaving them here, and they'll also be up.
These slides are all going to be available to you online later.
I don't want you to hear me say, you know, repeat these things.
You'll all be asleep in 10 minutes.
We don't want that, OK?
But these are important questions to ask yourselves for both the project and product side of the house, OK?
And I'm going to try to leave room for questions after as well.
Absolutely, though, this should be a baseline.
So on the top left there, we have kind of your typical requirements gathering, waterfall approach to project management.
And on the top right there, the agile lifecycle, which as you go into these product increments are your sprints essentially.
And then you have a larger arc for development.
With both of these, it's not reflected as much on the waterfall side.
But there's some iteration there also.
Although I have to say, I'll never forget my first day at Origin, I walk in, and as I'm walking around, I go through the James Combat Simulations group.
And so these are all project managers.
Well, the person who was managing that project at that time, we'll just call him Brian, because his name was Brian, he had printed out this Gantt chart that literally took up the whole wall.
And I mean, this thing was probably 12 feet high by 18 feet long.
It was an amazing piece of art.
And it stayed on that wall for a while and it was never updated and it was monolithic just like that thing on the top left is.
A key thing about either of these, how you participate in managing your teams through whichever project methodology you use, is this one that's kind of front and center here.
This is one that actually gets ignored a lot of the time, and if you can be someone who masters this part of what happens in project management, you're gonna be ahead.
All right?
And I want you to evaluate yourself on how much you've participated in this part of it.
It's about costing.
It's about the cost of making a change depending on where you are in development.
And you can see how the cost skyrockets about the time that you're hitting beta there.
I also have the reference here.
Now, this is applied from broad software engineering.
It's not specific to game development, but it is from a design background.
I haven't actually measured what it is at Gearbox, but I'll bet it's not too far off.
And now here's the product life cycle as opposed to the project life cycle.
When we talk about wanting to have a long tail, this is where you're launching your game and how long it lasts in the marketplace and how quick you are to respond to launching the next product that comes on the heels of that one.
But since our industry is so diverse now, how many of you are in mobile, are in mobile development?
Awesome.
And how many of you are in, say, more PC-focused, like Steam development?
And how many of you are in console, AAA?
See?
Where it looks split, like in thirds to me.
And there's a different product lifecycle.
really for each of those.
And now even the segmentation within those, whereas it was more static in console before, is so different now.
We see console actually looking a lot more like mobile with some free-to-play games in console.
So we have to be really adaptive as producers where we could, again, I said, there are those who could kind of more coast, not that our jobs are ever easy.
But if you don't have to apply, say, this mobile product lifecycle to a console game, what we thought used to be hard in console development, with just releasing patches, is getting much harder.
And so it's one of the reasons teams are growing, why it's getting harder to manage these things.
I see somebody who knows that intimately.
And here's another one about why this needs to be so customized for you.
What type of management style is expected of you?
Now, you may not know.
You might not be aware what kind of organization you're in.
You might have some inkling of it.
And you may not have had a formal way to really think about how you're being treated in the organization and how your boss expects you to treat other people.
But it's good to know the difference between these.
You probably know it innately.
You probably have a lot of assumptions about it.
But it's good to be able to put more of a formal focus on it.
So in organizational behavior with management, there's basically two kinds of management.
We have transactional management, and we have transformational management.
And often you'll see if you have...
I happen to be in kind of a matrix structure as far as my reporting goes.
My boss is Randy Pitchford, the owner of the company, and then I have another person I report to who's in kind of a different part of the company, and they have completely different styles.
And I have to shape...
the way I approach things differently because I always want the best result for everyone.
But you can't talk to somebody who has a transactional management style as if you're talking to somebody who has a transformational management style.
You're gonna hit a brick wall.
So.
Knowing how to shape both reporting up and then how to work with the people around you to adapt your style is really important.
You need to add those tools to your toolbox and you need to practice it constantly.
And one of the things you need to do is pick up on who responds best to what kind of feedback.
And that goes for the people you're managing directly, up, down, across, everything.
What I'd like you to do for yourselves and your evaluations of yourselves is provide examples about where you've needed to employ each of these.
And they should be very specific examples, not like, you know, sometimes I have to go see somebody, you know, I have to go see so-and-so on the floor and tell them that they're going to get a bad review if they don't get something done.
By the way, you should never do that anyway.
You know, if...
That would be nice and, while that would be nice and specific, I want examples where, first of all, you think, in that case, you think you're keeping things moving, but also that you're improving performance of people, right?
So I want you to think about instances where you've employed these, where you've needed to employ them, and the result was good for everybody.
High performance means you're going fast.
How many of us have heard of an OODA loop?
A couple.
OK, good.
I'm glad that I'm introducing this to the majority of you.
From one of your missions, I hope from this point forward is you're going to master this concept.
It's not a particularly difficult concept to grok, but it is difficult to master.
One of the hardest things about it, and I have a few notes here where I'm going to touch on it, is ensuring that you're constantly employing it, that you're being mindful and employing this process.
It will make you a superior producer and a superior person as well.
So, if you want to be fast, okay, you need some framework to be fast within, because you need to know how to match what you're seeing with what you've seen before, and remember how to act now that you're seeing the new thing.
But what you also have to do is avoid some serious problems.
I'll mention what those are.
what the lingo is for those in a second.
So, an OODA loop is observe, orient, decide, and act.
Observing is, each one of these things, by the way, while it's easy to say the word, is hard to do.
Observing, we see things all the time.
But as you know from the concept of flow, we know the idea of flow from Csikszentmihalyi.
It's sort of like where you get lost in what you're doing, and you can daydream and get a thing done, or you're driving, and you forget that you're driving, but you get there.
What's hard to do is be an active observer.
Once you've noticed something in your environment, what's even harder to do, though, is to orient yourself to it.
You might observe something and see something, but it doesn't occur to you that it's out of place or that you need to do something about it.
So the will, the decision to do something about it is very hard, especially if you're in an organization where you feel like you might be punished for deciding to act where it's not part of somebody else's decision, where you have to use your influence to do it.
And the will to act can be the hardest thing.
So you as producers, you need to stamp out that lazy inaction.
I'm going to talk about inaction a few times.
The best way to do that, by the way, is with the positive, using the care, which is to always reward people who are not afraid to act when they see something, and to especially do that if it's quick and smart.
But if you see people who are moving fast to act on things, that is one of the, you know, if you are mentoring people and you see that they are willing to actually take the initiative to do something, reward them for it.
Let's skip ahead.
This is what it looks in the more formal cycle.
You can go online and find this as well.
I wanted to show it to you here, since this would be the first introduction for many of you.
The OODA loop is what got us through some asymmetric warfare that we had to get through when we went to Iraq for Operation Iraqi Freedom.
We don't have time for that talk right now, but when you approach a new situation in a new way and you need a new frame of reference to deal with it, you have to orient yourself to that new thing in a new way.
This gives you a framework in which to do that.
So that kind of orienteering, orientation, is you take that new information, you apply it to some pattern you already know, then you intentionally break that pattern.
You apply a new, you come up, you use your imagination to think of other reasons why that thing might be happening.
Come up with a plan for how you would deal with each of those.
Now you have a war game for how to approach it.
You notice here, uh, in shelter constantly, you've got, who's this?
Do we not play shelter?
Yeah, the stranger.
He pops up.
You have to notice that he's there.
When you have a big vault, he's pretty easy to miss.
This OODA loop is basically what you're doing if you didn't have the sound that clued you in that he was there.
You always need to be doing this.
To be a master producer, to be truly highly performant, you've got to master this.
You've got to get used to noticing things that other people are not noticing.
Now, when you come in in the morning and you see somebody who looks like they may be a little off that day, make sure to stop by their desk.
You noticed it, probably somebody else didn't notice it.
Their immediate lead may not have noticed it.
Pass on information to other people around you any time you notice something that may be slightly out of the ordinary.
If you feel like it's been a day too long since some task was reported, well, I don't like to over-focus on tasks.
You know, everything, you have to be the one to catch all those details.
It could be indicative of any number of things.
It happens to be, this is very native to Agile.
And you will run better meetings for Agile if you're employing this as part of it.
Exploring what the possibilities are outside of what the people who are in your scrum meetings and in your sprint planning sessions.
I do this a lot.
Even when I know answers, or I feel I know the answers, I still ask the questions.
Because it gets people thinking, using their imagination outside of what they believe is already the answer, outside of the solution that they already want to pursue.
And I try not to do it too often where people pick up on it and think that it's just a distraction.
But any time you think, you should trust your gut.
Any time you think that a solution is being pursued because it's maybe the easiest and isn't the one that's gonna work best for everyone, for the team, for others, for the people who are gonna pick up that code after, you need to do something about it.
You have to have the will to act.
You're not going to improve if you don't increase your self-awareness.
And I say that...
in that I am always trying to increase my self-awareness.
I'm not making an assumption about where anybody is, but this is something that's a lifelong pursuit.
We have to pick up on, in ourselves, when we're being overly cynical, when we're steering away from pragmatism, when we're not using our executive function to task switch, when we're getting too stuck on something.
So it's important to take time if you could every morning, every evening, whatever.
Think about are you doing this?
Evaluate yourself and how often you're trying to do directed things to improve yourselves.
And then situational awareness, now going back to the OODA loop.
You have to learn how to filter, right?
So every room has a baseline.
This room has a baseline.
You know, the hallway has a baseline.
Your studio has a baseline.
You have to notice anything that is perceptive outside of just that background noise.
And normalcy bias is the thing that prevents us from acting when we see something really weird.
Now, a lot of you might have already heard of normalcy bias.
This is where, oh, I'm used to if I'm walking in London, I forget that cars come the wrong way.
Well, to me, I look the other way, I walk in the street, boom, I'm hit by a car.
Well, to me, it was normal that there were no cars coming from the other direction.
To me, it might be normal that I hear a couple of bangs outside in the parking lot or something, right?
But I should still go look and see what it was.
I hit on this one before around discerning and action.
The best producers, and you need to notice for yourself, when something should happen and it doesn't, and it kind of itches at you, you have to immediately follow up on this.
So if you want to increase the speed of your teams and of what you're doing, notice that things aren't happening that should be happening, and don't accept that they're not happening.
Don't accept that the meeting didn't happen, that was supposed to happen.
Don't accept that the asset that was supposed to be in last week isn't in this week.
You can't accept those things.
You have to seek out the reasons and be a conduit or be an agent of change for those.
Inaction as a decision is important to think about for high performance.
So, have you ever talked about inaction with a member of your team?
The fact that they didn't do something.
It's so easy for us to talk about wrong things people did or that we feel they did, but it's so difficult for us to a lot of times even notice that they didn't do something they should have.
This, I think, is a pretty good one, especially because it's John O'Cleese.
It's on the same basic topic, and just going to the bold part there, that most people who have absolutely no idea what they're doing have absolutely no idea that they have no idea what they're doing.
If you're just starting out as a new producer in the industry, you might not...
Be at all aware of the habits that you're developing that are affecting other people around you.
You might not be realizing which habits you're even picking up on.
One of the reasons I like bringing new junior people into Gearbox is because we can more shape them, having developed all those bad habits somewhere else.
But we also have to be mindful of what people are picking up on from us, especially if you've been around a while, you shortcut to a lot of things.
It's not obvious to the people around you why you're doing what you do.
Sometimes you have to stop and take someone, especially junior person aside, and explain to them what they're seeing.
And a way to know that you don't know.
is that you're getting surprised a lot.
So think about, when is it that you're getting surprised?
I won't linger on this too much right now.
But I want you to actually think about this.
Take stock of, write down notes.
Here's the last few times I was surprised because of something that happened.
Other people might notice that you're getting screwed real often.
There are some cases where I've had to pull people aside in my organization and say, hey, it's like three times now that you got surprised that so-and-so didn't show up, or that seems like you're having a hard time getting out of the door, well, you missed that meeting that didn't get called because they just assumed you'd be here for core hours.
There are a lot of things like that.
as well as technical things, that if you find this happening a lot, it's probably you filling in those dark areas of the picture that you didn't know were there before.
These are pretty straightforward, okay?
The detail is so important in game development.
So, you know, these are going to be, I'm going to skip ahead to the next one, but you're going to see these reflected in this kind of report card structure that we have.
If you get the chance, mentor as often as you can.
It makes you better.
It builds trust with the people around you.
It helps you check your assumptions, and you get to answer a lot of good questions.
You should, if you don't already have mentoring as a formal thing in your company, and I'll have to admit at Gearbox, we really don't have it in a formal way.
Though I do encourage it, and many of us encourage it.
And we try to connect, as you would, any time you're in organizational management, you're gonna connect with senior and junior people so that sharing can happen.
But any opportunity you have for it, you should engage in it.
Grade yourself for how well you think you did when you were mentoring.
And write down any specific measures you can imagine.
These are the same measures that you use in your end of year reviews or any other performance review.
One thing that we might not do because we're afraid to is ask the person who mentored you how they think you did.
A lot of times we're nervous to do it, they're much more senior than we are, we don't do it, we should.
And you can only get better if you do it frequently enough that the memory of the lesson lingers with you.
If there's one athlete that's better than LeBron James right now, it might be American, although American Pharaoh hasn't raced in, what, a year and a half or so now.
Strong mentorship is like a great gene pool, OK?
So.
American Pharaoh's siring, you know, very high dollar rental fees, as well as American Pharaoh's dad actually is doing even better for the owner.
But if you want to have a really strong structure of trust and to be able to go fast in your organization, mentor a lot.
Also if you want to go fast, you're learning lessons.
Now this talk's not on.
post-mortems and after-action reviews.
So if there's a different talk you can go to on post-mortems and after-action reviews, please do it.
And there's a lot of literature online.
How many of you have engaged in formal post-mortems before?
OK, a lot of you, awesome.
They tend to vary in terms of quality, and they don't always have actionable results.
And that's the only thing I really care about with postmortems is were there actionable results or not.
I don't just want to see everybody and get around and have a cathartic moment where we all complain about what happened on the project.
Well, that can be fun over beers, and so we can call that a postmortem.
That's not a postmortem.
It's not a postmortem unless people have actually learned and you've put in measurable outcomes, an action plan that can be followed.
Again, these slides will be up for you.
This is the after action review process as applied to post-mortems.
And it walks you through a lot of what you already know there.
But again, you have to have these measurable outcomes.
You have to know how you're going to measure them.
And you can practice them.
You don't have to wait till the end of a project.
So that's why I like experiments.
And it's why I like doing what we call mid-mortems.
But you can do an after action review at any time.
and then go the next step.
Invent things where you can have post mortems.
And do it in ways where they're fun and hard.
That helps you battle complacency with the team, right?
It's easy to get in the rut.
You got a lot to do on a project.
Come up with stuff that can be measured that isn't necessarily obvious to you already.
And in terms of speed, when you do those things, and it doesn't have to be something new that you made up, I mean, you can do this with some activity you're already employing on your project.
Practice increasing the tempo.
Don't give everybody as much time as they would usually have.
Cut in half, cut in two thirds.
Make it a less risky thing so they know that this isn't what's gonna get their neck chopped if they don't get it done in time, okay?
But get people practicing.
This is just like speed modeling for artists.
Get them practicing moving faster in less risky ways.
I love talking about Musashi.
The only thing I'm gonna point out here from Go Rendo Show, which is a book of five rings, is this one of know the ways of all professions.
So cross-training is so important.
If you wanna be a great producer who's fast, you want to understand everything you're hearing.
And when I talked about separating out from the noise, separating it out signal from the noise, one of the best ways to do it is to increase your knowledge of what other people do.
I'm going to go through a couple of analyses that I did with some software a friend of mine is building.
This is not a pitch, but there's no cost to this, so I'm not pitching a software.
You can go do this as soon as this is over if you want.
It's called Skills Engine, and he's building a machine learning platform for skills analysis for things like job postings and helping schools develop curriculum that gets people jobs as soon as they get out, because they're very targeted to what people need to know to do their jobs.
And you can put a resume in here and see what you get.
I'd love to get feedback, by the way, if you do that with job postings from your companies.
Now, we don't have time for me to go in detail over all these.
So I'm just going to kind of point out some high level things.
First of all, all of these, I pulled in job descriptions from some of those different jobs we talked about earlier.
Development director, development manager, producer.
I have an EP posting in here as well.
And they all tend to focus around the same basic skills, some of which we don't measure in ourselves that often, which really did catch my attention.
And they only vary in terms of the skill you need to use very slightly when you go to the executive producer domain, where you're dealing more with budgets and P&L and product lifecycle, as opposed to project lifecycle for producers.
But we can, I pulled some things out of here to tell you how I built the categories for this report card you're gonna see in a second.
All right.
If I look at the top things, so if I go back one.
If you look at the top knowledge areas for this one, which is Treyark AP, okay.
This gets grouped.
I'm going to skip that.
But these were all activists.
Sledgehammer, B Knox.
skip ahead and I'll show you, even though these are all AP roles, the way that they were correlated to other industries and other jobs were all a bit different, right?
Which also tells me all of you, again, need to understand the context of the job that you're doing because it's always gonna be a little different.
Even in a big organization like that, that you would think have standardized roles more, it's not as standardized as I would think.
One is very art heavy and creative.
How are you going to evaluate yourself in being able to talk through art issues and having requirements of you being more aware of what's happening on the creative things in the industry.
One is much more technical.
One is more general management oriented.
And here is the, which is funny by the way, dev director and dev manager turned out to be exactly the same except for years of experience, which even coming from EA didn't know that.
This one turned on its head a little bit, critical thinking over things like information gathering, which should be, I think probably should be obvious.
But since there's so many EPs who work their ways up from APs, needing to notice those things that are missing becomes so much more important when you get to the EP level.
Noticing the things that aren't there, because you have to be the ones to construct the ways that other people are doing their work and what the goals are for the project.
Skipped ahead.
Sales and marketing was one of the top four hits for EP.
You have to pitch.
You have to understand the sales cycle.
You have to understand finance.
That was for EP.
OK.
It's 2.10.
I want to get you guys out of here on time.
So I took all that information.
and put it into this table.
And my thinking here is, when you're writing down your notes for your examples of when you yourself have exhibited something from what we've just seen, what's just been presented, write down those instances.
Keep notes of these.
And if you do it periodically, if you do it in a way like you're running your Agile teams, you can now track this.
You can track the data just like you would your sprints or your milestones.
and then jot down how many instances would you expect of yourself in the number of years you've been in the industry, in your role, in the job you have?
How often do you think you should be exhibiting that?
So for example, if you're responsible for P&L and know you're gonna have a budget meeting once a month.
and you can really kick butt and having all your numbers together and be able to explain how well the team's doing, that's, you know, basically once a quarter you're going to be expected to have a great instance for that topic, right?
Think about it for yourself.
And I hope that you can build your own customized report card out of this.
If you have any questions, you want to talk further on any of these topics, any of them are great.
Please get in touch with me.
Talk amongst yourselves.
And next year, I want to hear if you've employed this and if it's helped you at all.
Thank you.
We do have nine minutes if anybody wants to ask questions.
Otherwise.
OK, we got one.
Oh, and please don't forget the reviews.
Shoot alright, so Gearbox has a great reputation for your internship programs and I wanted you to talk a little bit about.
What you mentioned is the carrot.
What type of reward do you implement, both for your core team members and for those more temporary team members?
Sure.
So we've had a program since before I was at Gearbox called the COGS program, Contractors at Gearbox, which is our formal internship program.
And we give, when we run that program, it's not constant.
We run it quite frequently and across different disciplines.
We have...
you know, basically interns come in and work on our games, typically in some area that's fairly safe.
Like I talked earlier, if you want to do kind of rehearsals in areas and try things out, you do it in a safer way.
So we tend to have interns come in and work in teams where they're paired up with a mentor.
it might be sometimes to try out some new concept that we wouldn't have the time to do otherwise.
Very frequently those interns are hired full time and do fantastic work where actually they are executing on R&D things that they were doing.
So for the intern it's pretty much the opportunity is the carrot. What about for the core team members?
Well, for the core team, it depends on what you mean when we do the internships or just generally?
No, for your full-time team members, your leads, your Sure, well I mean that's okay so it's a little out of the domain of the topic but I'll I mean I don't know if you want I don't know if everybody wants me to give them like the gearbox pitch or something like there are what I'll say is it's important you know the people who own the studio came from the trenches as developers and worked their way up so they always wanted to be fair to everybody else who's in the studio so it's really important to them and to us who are in the executive leadership in the company, that everyone in the studio be rewarded for the work.
So they all, you know, everybody in the company is full time, sees back end, and it's in a very fair and flat kind of way.
Well, it's in a very fair way.
It's in a calculated way.
Thank you.
Sure.
Does anybody who happens to be from Gearbox have anything else they want me to add to that?
Or did that sound okay?
All right.
Yeah, next question.
Oh, wait, hold on.
We've got one on this side.
Yeah.
OK.
You mentioned something about people having initiative and working on things that, you know, what if those initiatives aren't on the, like, from the backlog and not from the sprint and stuff like that?
Like, they did something that wasn't supposed to be done at the moment.
How would you handle that situation?
Yeah.
So as long as, well, let me answer that one first.
And then that's OK if it's like a two part.
So if people do things that aren't specifically assigned to them in the sprint, if they get the sprint done, no problem.
The assumption is if they're going to do that, then they are going to get their work done that they've committed to in the sprint.
And then if they want to do something beyond that, we'll totally support them.
I have people who have had ideas to do different things, and I've told them to go for it.
I'm talking about a situation in which they didn't meet Oh, well, I mean, you know, it's between them and their lead.
Okay.
Right?
So, I've never, I can't think of a time that a lead was surprised in a situation like that.
And I also can't think of a time when somebody didn't get something done but was spending their time on some other thing.
So, that I don't think has really come up yet.
But I would expect that everybody be comfortable just talking with their lead about how to basically negotiate their time on that thing.
The baseline is they're gonna get done whatever it was that they'd committed to.
And the other one is, in a perfect world, do you think producers would be phased out if everyone is self-sufficient or something like that?
would you still need producers?
Let me just rephrase to make sure I understand.
I think you asked, in a perfect world, would all producers be self-sufficient?
No.
If all team members are self-sufficient, would all producers?
And don't need producers?
See, I think actually that's a interesting question.
I think it's a fallacy, because the best producers are not observed that often.
I think the best producers create a flywheel effect, and that flywheel doesn't slow down.
And they're there to protect the flywheel.
And once it's going fast, and you've built the organization, and have the right people in place, and process, and all those things, your job is to care for it.
And then you can turn your attention to other things that aren't as observable to people within the team.
Thank you.
Sure.
So how do you feel about the frequency of reviews that you conduct, be it one-on-ones, biweekly with artists, or doing yearly reviews and sitting down and doing goal settings?
How do you feel about a good frequency for doing those?
Is there some subtext in there having to do with the frequency of how often you have reviews?
No, just curiosity.
That's a good question.
It's a hard one.
I mean, not everybody's Lisa Simpson and wants to review like every day and know exactly what grade she got in every class.
We try to be good about having an informal review process, just making it very clear where everybody stands at any given time.
With that said.
With that said, I wish that we were doing reviews more often.
You know, we have once a year performance reviews.
And on occasion, we also do 360 reviews, which we haven't done in a little while.
We need to get back to it.
It has to do with kind of democratization.
And when you have a a social organization that's intended to be a meritocracy.
You want people to understand, you know, where they fit amongst their peer group and if are they earning the merit of being there with their peer group.
And that if you don't get that kind of feedback very often, there's really no way for you to know.
And there's in fact dangers of having a culture like that if you're not.
providing reviews fairly often.
So we encourage our leads to ensure that they are interacting with the people they work with, so that's always very clear.
But you have to balance it, right?
I mean, you have to balance it with a formal review process versus informal, because it can be a distraction and it takes a lot to gear it up.
So I don't think it's optimal today, but at the same time, it's provided, I think, decent conversations for us to make it clear where everybody is.
And again, they get that touch point from their leads, as often as the lead does it.
So really, it comes down to making sure leads are doing it more often.
Thank you.
Sure.
What qualities are good mentors looking for in good mentees?
Oh, that's a good question.
Open-minded, fast learners who can develop technical skill quickly if they need to.
I had a five-minute warning before. Am I out?
Okay. I know we have a couple more questions.
If it's okay, I want to answer your questions, but can I do it off the stage?
Is that alright for both of you?
Cool. Alright, thank you guys.
