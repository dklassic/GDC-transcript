First of all, I'd like to remind you to turn your cell phones into silent mode.
And by the way, this is my second talk here at GDC, and it is completely the same as the first one, so you may have probably heard this one.
Okay, now let's start.
My name is Vladimir. I am from Russian game development studio Picsonic and I have about seven years of mobile experience and games for social networks and I'd like to share with you my experience of answering specific questions at Pixonic.
And actually, I think that these questions bother every game studio, no matter what games you're working on, what platform or what genre.
Still, you have to answer them, and they are as follows.
Okay, we've got some revenue flow now.
How exactly are we going to keep it?
Or how are we going to increase it?
What should we do next?
How to grow, to make your game grow?
So, I understand that answering these questions could, the answers to these questions could vary greatly depending on your field of expertise, on the market background, history of the company, and all that stuff, and this is just my version.
First of all, let me tell you a bit about our context.
Where are we here?
We are situated in Moscow and we've been making games since 2009 and War Robots is our biggest hit so far.
It is a mobile shooter PvP game where players pilot giant robots fighting each other with various weapons like missiles, lasers, cannons, machine guns, all that stuff.
And the game was released in 2014.
It is pretty popular right now.
By the way, this slide is outdated a bit.
Now we have more than 120 million installs on all the platforms.
And about 1.5 million of players pilot robots in our game every day.
Why the game became popular in the beginning?
Why it became successful?
I think that at the time when it was released, there were very few mobile shooters on the market and players actually wanted to play mobile shooters.
they had little choice.
The game wasn't very good at the time.
There were a lot of flaws and the metrics weren't good, but still, we had our community growing.
We had our Facebook groups growing.
The word of mouth about the game, it was spreading.
And we had to answer these questions, I said it in the beginning, that how exactly are we going to grow?
We are mobile and we are free to play.
And we are game developers, right?
So we wanted to add new features to the game.
But what features exactly?
And for the sake of my argument here, I'll talk about two models, two approaches.
There could be different classifications or there are a lot of ways to classify features.
But...
I like to talk about the hype model, as I call it, and it is characterized by a high spike of revenue in the beginning when it is released, and a quick drop down afterwards.
Usually, most of the content in the game released behaves like this.
The second model, it is what I call value growth model, and it is all about sacrificing short-term gain for long-term profit.
It could be difficult to understand if this feature is successful from the beginning because you don't have a high revenue spike from the start, but it will definitely bring you money afterwards.
Basically value growth model, it is a bit trickier to design this kind of features because it is about designing needs that are impossible to fulfill in the game.
They should be continuous.
And it is like the very basic human needs like the need for food, for sleep, for sex, all that stuff.
So, hype model I think it is a bit easier to design and to analyze if it is successful or not after the release.
which one of these models is better.
I don't know, frankly.
And there are advantages and disadvantages of both approaches.
But first of all, what you should understand that it should correspond with your goals.
If exactly you want to get returns fast, in this case, you probably should use the hype model.
as a methodology for the designing of your feature.
And if you're going to, if you're ready to wait to get more money, in this case, value growth is much better for you.
Basically, it is like a marshmallow test offered to kids when you have just one marshmallow and you can eat it, or you can wait to get the second marshmallow.
And in 2015, when we thought about it, we actually failed that test.
We ate our marshmallow and we wanted to grow quickly because we needed money for user acquisition.
We wanted our marketing budget to grow quickly.
Now let's try to compare the examples of features for each kind of model.
And the example of the hype model which was made in War Robots is Gacha.
Basically, gacha is like a chocolate egg with a toy, or here you may know it as a kinder joy.
You have a random reward inside the egg, but even if you don't like this reward, you still have the chocolate.
And it is useful for you.
Every chocolate egg you buy, it is still useful to you.
The third principle you can use, that actually real toy manufacturers can't use this principle, but we can, it is creating illusion of randomness instead of real randomness.
What I mean is, imagine that you are throwing a pair of dices and you get snake eyes five times in a row.
This is how real randomness works.
It doesn't have to be fair, but we humans are upset with it, and we perceive this as something unfair.
We want it to be regular.
That is why, if you are designing the experience of players using random mechanics, if you're creating an illusion of randomness, but it is regular all the time, it will be much better for you and for players in your game.
So we started releasing Gacha.
The first one was on Halloween 2016 and it was a part of the event.
At the time we had just one type of chests and players played battles, earned special event currency called pumpkins, and opened the chests with rewards.
There were different rewards inside it, robots, weapons, currencies.
And the only UX feature we've added at the time was that you could open multiple chests with just one tap.
That's all that we did.
We introduced it on the event just to have an insurance.
If players didn't like this, then the event would be over and the game returned to its previous state.
But it was successful for us, and this is why we continued.
We made a second iteration on the New Year 17.
when we've added our version of the chocolate in the Kinder Joy, which is when you are opening every chest, a special progress bar fills a little.
And when it is filled completely, player gets super reward that is useful to everyone in the game.
That's how it works.
That's how works the fact that every opening of the chest, no matter what will you receive inside, will be useful to you.
The third iteration was on Lunar New Year 17 and we've added two more chests to address the needs of our game community.
Some players actually wanted these chests to be a bit cheaper and some players wanted the rewards to be better, and we've added premium chests with a higher price, and cheap chests with lower price, just so that you could play it as a lottery.
And actually, this was the first time when our game community signaled that they don't like how exactly we are designing our monetization, where the game is moved.
And This wasn't a problem for us at the time because the metrics were good, there were no problems at all, and we just continued.
The fourth iteration was on War Robots Birthday, and we tried to avoid adding new event currencies.
And from now on, the chests were opened with hard currency, with usual hard currency of the game.
In this way, we've created a loop where a player opens the chest, gets the hard currency, and they can use it to open the next chest.
But this wasn't a successful thing for us because players' feedback was that in-game hard currency was too valuable for them.
They didn't want to spend it on opening the chests.
That is why we returned to the previous state, but we recreated loops with our event currencies on the 4th of July.
Now, why we experimented with this feature so many times?
Why we did it in so many iterations?
The answer is actually on this chart.
It is our revenue chart.
And you can see that every time we've added gacha to our events, every time it was a spike in the revenue.
That is why we understood that we actually want to add this mechanics to the game permanently.
And we did it in September 2017.
It was designed as follows.
There were three special currencies, key cards, red, green, and blue.
And they represented time-limited seasons.
So that when one season ends, and for instance, you get compensations for red key cards in different currencies or other types of rewards.
And now we have to use green key cards to open chests.
In this way, we actually prevented key cards from stacking up on players' accounts.
This was a very successful feature for us.
Actually, I might say that this was the most successful feature for our robots in terms of financial games because we had two or three times increase of our revenue at the time, and we thought that it is a new plateau for our robots actually.
We now had the fuel to continue our experiments with monetization and we've added more features like wild offer system, I'll talk about it later, and the other versions of indirect sale system because basically what gacha is in our game, it is a way to sell your content indirectly to players, to hide the real price of this unit, because player doesn't know how many chests they have to open to get this unit.
And we've added component system.
It was our way to sell half of the robot. From that point you could offer players 5,000 components when, for instance, they need 10,000 to craft a robot.
But the market changed, and there was a big media scandal around Star Wars Battlefront II, and I remember that some players even joked about it, like, imagine if Darth Vader cost not 40 bucks, but 300 bucks, implying our the most expensive robot in the game.
We looked at it, but still game metrics were good.
There weren't any problems on the game metrics.
The retention was fine, the conversion rates, monetization, everything was good.
The only problem was on the iOS rating.
This drop wasn't very big, but it was significant for us.
And we've definitely, we've won in terms of money with this feature, but we've lost something.
And first of all, players actually reached every developer they could through social media and wrote them, you're bad, you suck, we don't like what you do with the game.
And people started to be ashamed of what they're doing.
It's like, imagine you're working on one of the best mobile shooters in the world, and you don't like what you do.
That was a problem for us, and it turned into slower production.
The features made after that were made slower because people were really afraid to get another wave of hatred from our community.
That was the first time for us when we understood that we are doing something wrong and we need to change this thing.
Now, to the second model example, which is wild offers system.
Basically, what is wild offers?
It is a system that generates offers to players with discounts, and it can offer different things like robot setups, weapons, equipment, resources, all kinds of stuff.
But these offers are generated randomly.
with some algorithm inside of the boundaries set by the game designer on the backend.
For instance, a game designer determines like the discount should be no less than 10% and no more than 25%, for instance.
Or you can offer this type of robot, this kind of weapon, but you can't offer this type of robot.
And that's how it basically works.
The design pillars of this system were as follows.
First of all, it was iterative approach.
In the beginning, we don't know anything about our user and we just bombard them with offers.
We are firing a shotgun of offers to them.
And you can see here an imaginary dialogue between the system and the user.
And at first it just...
offers different kinds of animals to them.
But at some point, the system understands that this particular user likes lions, and now it tries to offer them accessories for lions.
In this way, we get from grapeshot shooting to very aimed sniper precision offers.
The second principle is bargaining.
It is basically, if you're turning down the offer, the next offer you'll get will be better.
It will have lower price or higher value.
But if we used only these two principles, the best behavior to address this system would be to turn down every offer, to decline every offer, till you get the maximum value for the lowest price.
That is why we've added the third principle, which is randomness to avoid predictability.
We've inserted random noise offers to make this system hardly readable for users.
And here we can see some absurd things.
White ones are the noise offers, and spelled in black are the real target offers.
And they are just here to disguise our algorithm, that's all.
Sometimes, actually, they work, sometimes players buy them.
This system, of course, it has some drawbacks.
And first of all, it generates a lot of data.
Imagine you have to save all the transaction history with this system for every user.
And it's quite heavy on the backend.
And it's even harder to analyze this ocean of data.
And the best way I think here is segmentation.
If you are dividing players into cohorts and try to find correlations between player behavior and some offers, then it will work.
The second problem is revenue cannibalization.
Since the basic tool of this system is offering discounts, if discounts are too high, then you probably will cannibalize your revenue.
So you need to control this thing.
and sometimes it is difficult for us to understand what player needs, because we know his payment history, we know his transaction history with the system, but sometimes it's hard for us to understand their play style, their desires in the game.
Maybe this player likes brawler robots, or this player likes sniper robots.
Right now we have the only trigger here, it is a workshop system where you can craft.
components for robots.
And we know that if a particular player crafts a lot of components of this robot, then probably we can offer him more components of this robot or maybe we can offer him the whole robot itself.
We did some optimizations of the wild offers.
First of all, we've increased the frequency of generating offers.
In the beginning, it was once per day, and we've increased it to twice per day, offer shown, and actually it worked.
The second thing we did was faster movement between price tiers, from low price tiers to high and vice versa.
So that now, if you buy a $5 offer, for instance, you maybe will get a $40 offer next.
just so that the system tries to make leaps between tires to move quickly.
And finally, we've increased the cap of the initial offer when we don't know anything about our user to $20.
In the beginning it was $10, because on average it is the most comfortable price for most of the players, just statistics.
But when we increased it to $20, it resulted in a higher revenue.
You can see below the real revenue chart of the system after the optimization we did.
It was just in one release.
Now, let's try to compare these two systems in terms of revenue.
And here you can see the paying user percentage.
The yellow chart is gacha, and our green chart is wild offer system.
and you can see that they resemble very much the initial charts I've showed you in the beginning.
By the way, the drop down of the weld offers afterwards doesn't relate to its design.
We screwed it up, but in a very different way, and it's completely different story.
Now let's see at the revenue.
Let's look at the revenue.
Here you see a gacha system in light green and wild offer system in yellow.
Probably it would be easier for you if I show you just these two sources here.
You can see that in the beginning, Gacha generated a lot of revenue, most of the revenue of the game.
But later it declined, because it has lost its value to our players.
What are the results of this new approach?
First of all, our morale started to grow, and not just because of making these two features, we did a lot of UX improvements requested by our players in 2018, and right now our user rating is higher than ever before, and that is, of course, good.
Our revenue is much more stable and predictable now, since we don't have a lot of fluctuations made by the gacha before.
And it is much easier for our marketing team and analytics to plan user acquisition for one year, for instance.
What we've learned from these two examples.
First of all, long-term planning for us works much better, because it helps us to build trust between our studio and investors.
They see much more stable behavior of the game.
And actually, if you think long-term, it is easier to get the desired result some time afterwards.
You shouldn't definitely underestimate the influence of your community, because even if it isn't shown in any metrics, still it will be significant.
After all, we are all humans.
And for us, uncontrollable growth was not a very good thing.
We wanted to grow, of course, and it helped us, but it's hard to plan long-term budgets, and it's hard to plan long-term development of the studio if your revenue chart is very fluctuating like this.
Well, basically, what I wanted to say here is not just gacha is evil, no.
You can use gacha, and I know a lot of games where gacha is designed in a way according to principles of value growth.
Actually, I just wanted to demonstrate these two approaches and to tell you that you always have to understand the consequences of each approach.
For instance, we could do the same, we could design Gacha along with value growth principles, but in this case, probably we didn't have as high revenue spike as we got, because in this case, we couldn't squeeze so many payments from our players.
So, that is all. Thank you.
If you have any questions, please ask.
Oh, there is the mic.
Yeah, I had a question. So your wild offers.
So what we've seen is like in a lot of games where you discount your currency and your offers that like over time people kind of just devaluate them and then you have to constantly be creating more. Yeah. So it is a problem with your wild offers.
How, how do you go about kind of managing that? Um, like, what are your thoughts about how you, how you, how much you discount and how often you discounted? Okay. Um, what I've found is that in-game currencies lose value to players if you do it irregularly.
And player knows, for instance, that, okay, I didn't have to buy it right now because I know there will be a sale next month and I'll buy it then.
If it is more spatial, more random, and they don't know what exactly will happen next month, in this case, it is okay.
It doesn't devaluate.
I think so.
Yeah, here you go.
Sure.
So I was wondering, this is really fascinating.
And you mentioned one of the big problems for Gacha is the backlash coming from the community.
But sometimes people backlash when they realize they are paying different prices for the same item in the game as well.
Did you see anything over there?
Because I think it's a really clever get around of the issue of hiding the price.
And you're essentially having price discrimination, making sure people are paying what they're willing to pay.
But do you see people responding negatively to that?
Or they're generally not really talking to each other about, oh, you got $5.
Why do I need to pay $10?
Do you mean that people get different offers and that is why they could be upset so that they don't have an offer a particular, for instance, their friend?
Correct.
Yes, this is a problem and it relates a lot to some kind of payment terrorism.
For instance, if you differentiate the prices between countries, then a lot of players will have a way to deceive the system and to change the country to get lower prices.
But if it is not related to anything like the country or the language or something like that, you can always say, and that's what our support guys say, that this is the complex algorithm.
It takes some time to get you the right offer.
Just wait, you'll get it.
And mostly it works.
Okay, thank you.
You just are not familiar with war robots that deeply, but you went through this slide that I thought was really interesting, but you went through it pretty fast where it's like before, like basically you were selling gacha for hard currency for a period, but then in the next iteration, you offered gacha with three different currencies.
Can you elaborate on that and just like how it worked exactly?
Yeah, key cards.
Oh yeah, the key cards.
So how did the key cards...
They were seasonal or event based?
they are still earned from battles, but they change one after another.
Red key cards are compensated, and then you have to earn green key cards.
Because actually, we didn't want our players to stack up a lot of key cards on their accounts, because it would be difficult for us to sell things in the future.
That was sort of similar to my question was I was curious to know how you design that kind of the token and economy of these different soft currencies versus the hard currency So can you explain a little bit about the thinking and the design of how many of these currencies you had?
I mean you spoke just right right now about how you didn't want people to kind of hoard these things How do you build sort of mechanisms where people are sort of incentivized to get rid of them?
And then you mentioned also that if players understand that these currencies kind of come and go, that they lose value over time.
So that's curious to me because the game we're building is very heavily influenced on currencies and things like that.
So we'd love to hear your thoughts and your design around the soft currencies and sort of how that fit into the hard currency side of things and your revenue model.
You see the only purpose of key cards was just opening chests.
So it doesn't lose value because you can't spend them on anything else.
So they're non-tradable and you could...
they were acquired through grinding, just playing the game?
Yeah, you can acquire them through grinding.
But if you don't use them for...
we have a season like a couple of months, I think.
I don't remember exactly.
But if you're using them...
If you don't use them when the season ends you get the compensations in other currencies for that keycards, so Even if player doesn't use this they are still valuable to them. Okay. I'll look to ask more questions later. Thanks Hello. Have you experimented with the length of the offer that is available to the user after he receives it?
And what is the optimal time? And the same question goes for the amount of offers that is available to the user at once.
Yeah, we've experimented with the length of showing the offer.
At first it was just one hour, because we wanted to make it, to create some time pressure.
But actually it didn't work well.
And right now it just has offers shown for half of the day, and then they are changed with next offers.
So for us, time pressure didn't work well, especially because...
The timer wasn't related to player opening the screen of offers, but it was related for player to opening the game.
And in this way, actually, some offers, players didn't see them at all.
That was a bug, we fixed it.
So right now, we just, we are showing these offers for half a day and then change with another.
Hey, so great talk. I was wondering though, you mentioned a couple of what seemed like really high price points at one point, $40 or $300.
I was wondering, does it seem like you make a significant portion of revenue from those handful of players who can spend that much money?
Or is it mostly coming from players who can spend a lot less?
We aren't unique here on mobile market and most of our money comes from people that spend a lot.
They are frequently called whales, but that's not a very good name for them.
I think these people treat your game as a hobby and we usually, if we like something, we are ready to spend a lot of money on it.
Yeah, so I think we have most of the revenue from people who spend more than $1,000 in our game.
Thanks.
Okay, that's all, right? Okay, thank you for coming.
