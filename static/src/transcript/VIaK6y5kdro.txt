Right, right, yes, now, so this is going to be a populist post-mortem.
Little bit strange, this one, because of, you know, slight substance abuse.
Those memories of 20 years ago are slightly hazy, but, you know, we'll do what we can.
And it's really a tale of, you know...
Development born out of slightly my incompetence and slightly good luck and part of the talk I'm going to separate it into three basic sections.
How I got to start Populous and some of the amazing things that happened to get me there. The Populous development and we'll have a little bit of a dive into some of the technology. I feel a bit embarrassed saying that after David Braben's Leap Talk, which is proper assembly code and stuff like that. And then we know what happened afterwards, and then we'll have about 20 minutes for questions. So really, let's wind back to the days before Populous, because I didn't have a career at a university in the games industry.
I had a little tiny office here.
This is called, it's a street in Guildford called Bridge Street, and I had an office in that top window.
It looks a bit like Amityville Horror Building, and indeed it was, because on the floor below my office, there was this old woman called Cath.
She hadn't actually left her flat for 10 years, and the screens from her hemorrhoids being dressed.
on a daily basis still haunt me today.
And I had that office because I had a girlfriend whose father suggested that I set up this business.
And the business was called Taurus Impacts.
And bizarrely, what this business did was to ship baked beans to the Middle East.
That's how I started in the games industry, by shipping baked beans to the Middle East.
Now, unfortunately for me, although I make one cent per can, baked beans aren't the most popular food of choice in the Middle East, surprisingly.
So it was a hand-to-mouth existence, and many times I dipped into my stash of baked beans to actually feed myself.
And things were kind of trucking on okay.
And then the first of a sequence of unbelievably lucky events happened, when I received a call from none other than Commodore.
Now, I was a computer games fan at that time.
Commodore made the Commodore 64, which I played every single day.
So when I received this call from Commodore, I was astounded.
And they said to me.
Oh, we've heard about your company.
And I thought, really?
What, you've heard about our baked bean exporting company?
Sounds unlikely, but anyway.
I've heard about your company.
Would you come up and be our guest for the day?
And we'll show you around Commodore.
And we want to talk about this new piece of hardware, the Amiga 1000.
And so they brought me up, and with my business partner, there's Edgar at the time.
and we were shown around and shown the factory and they sat down in this big boardroom and they said, well, you know, we're going to send you 10 Amiga 1000s, it's going to be some of the first Amigas that people receive and, you know, we really want to see your products on our machine.
And that's when it dawned on me that there was another Taurus.
spelled T-O-R-U-S, that produced a networking solution, which obviously Commodore were very keen to have on their machine. They didn't want baked beans on their machine, not in any form or way. And that's when the first moral question came to me in this boardroom. Do I lie? Do I say, yes, we're keen to put our products on their machine, or do I tell them the truth and bring out my sample baked bean can from my case that I've carried up? I chose to lie.
That meant that a shipment of Amigas arrived in the next week.
We had 10 Amigas.
There was only three of us, so we didn't know what to do.
We sat on them.
We made big bookcases out of them.
You know, it was a generally fantastic time.
But they kept phoning up and saying, we want a product, we want a product.
And indeed, I did do a product.
Not a game, because at that time, Commodore were absolutely fanatical that the Amiga 1000, despite having glitter chips and copper chips.
you know, but despite being the perfect games machine at the time, it wasn't a games machine at all, it was a business machine that was going to take on IBM.
So what I did was a database program.
Now you can see from this advert my press persona of over-promising was already blossoming at that time because this was the ultimate database for the Amiga, that was far, far better than Ashton Tate's database at the time.
And, you know, that kept us going for a little while and we sold a few.
copies and it was a really hand-to-mouth existence, but we were running really, really short of money.
And that's when the second unbelievably lucky event happened, when I was down the pub.
Now, pubs and games development back in the 80s were very important places.
They were places you went when you were bored with sitting in your office and you could drink and plan and do that.
And I was down the pub at one time and a friend came up to me and said, oh, you've heard you've got Amigas.
A friend of mine has developed a game called Druid II Enlightenment.
The friend he was talking about, bizarrely, this is a bizarre circular event, was none other than Simon and Dean Carter.
Now anybody that knows a fable series will know that Simon and Dean Carter, actually Simon Carter still works with me today, they had developed this game when they were 12 years old and they wanted someone to convert it.
I was that person that did that conversion.
I knew nothing about computer games at that time.
You can see my trick of getting games to work at the right frame rate, because there's a clue here, by making the screen ever smaller, so that if the frame rate wasn't 30 frames, I'd just halve the screen, basically.
Anyway, development went on, and Druid 2 took about six months.
I got paid 4,000 pounds.
for developing Druid 2, and that started this fascination with writing games.
It kind of gave me the confidence that, yes, you know, maybe if I had an idea, I could write a game.
You know, the game was finished and came out, and we renamed Taurus Impacts, stop shipping baked beans to the Middle East, and we renamed it Ball For Productions.
Now, the team at that time was principally the people at the back.
the person on the left, your left, me in the middle, you probably didn't recognize me because I have this stuff called hair at that point, which I endlessly look at, and then most importantly the person to the right was Glenn Corpus, he was the person that had done all the graphics on Druid 2.
Now you may notice that Les in that photograph doesn't look like a CFO.
I mean, he probably will regret that photograph the rest of his days because he thought he was doing, you know, it was a funny photograph, but there you go.
So that was the team, that back row.
And one day, this is the actual pinnacle moment where Populous was kind of born.
One day, me and Glenn had been playing Virus, David Bradman's game.
Brilliant game, insanely hard, but absolutely brilliant.
And Glenn was fascinated how David had put the landscape together.
And he started to draw these little isometric blocks.
And I came into the office and I said, oh, that's really good, send me those blocks and I'll start playing around with them.
Now, at the time, I was smoking vast numbers of cigarettes, I'm proud to say I still do.
drinking huge amounts of Coca-Cola and consuming vast amounts of pizzas.
The idea of girlfriends or social life was completely out of the question.
So, you know, I literally sat down and obsessively started working on this landscape.
And that's on my trusty Amiga 1000.
And that's when I really started seriously coding.
Now, Populous wasn't written in...
a proper man's language. It was written in a fluffy girl's dressable language. It wasn't written in assembler code or machine code. I mean even the name, the words machine code, it sounds, you know, hard and thrusting. It was written in fluffy girl's blousy C. And actually I did, you know, go down the pub with David Braben and Jez San who were, you know, proper coders and they really, well they almost laughed me out of the pub for programming in C.
But there was one bizarre thing about the structure of my C code, and here's a little kind of snippet I've simulated.
The whole of my code, because of my trusty monitor, had to fit in 79 columns.
Why?
Because my monitor, if at any time a single character went on the right side, would do a spasmodic wave dance.
So, you know, the idea of tabbing or comments, completely and utterly out of the question.
But anyway, I started coding and started playing around with, you know, creating first of all this landscape.
And it was literally a landscape which was, you know, green hills that Glenn had drawn and animating water that animated between two frames.
So the tech was simply, and very basically, a 64 by 64 map of bytes, each of which held a block.
And a second map, which was called MapWho, I had never really learned about linked lists.
That was out of the question, that I knew about how to do linked lists in very advanced.
64 by 64 map of bytes of MapWho, that just held.
literally held what was on each block, and a 64 by 64 byte of something called map steps, which we'll talk about in a few seconds, and up to an astounding number of 256 peeps or people on the map at any one time, which was, you know, seemed like an incredible number at the time.
So, this is the block file.
As you can see, you know, there was, you know, Glenn was pushed the limit of drawing graphics here.
And you can see the tiles set across the top.
There were 16 basic tiles, if you include the swamp tiles.
And then it was very simple how it worked, is that a block would either have a blank block on it or it would have one of these houses put on top.
And then I had a second file called a Peeps file, which contained all the pointers.
or the animation of all the people, of what they do, and the animation of all the effects, and our very important boss creatures, which was a feature that came in incredibly late.
Now, interesting, in my mind, and when I did finally talk to the press, I was, even in those days, talking about, look at the expression on those people's faces.
Now, as you can see, the one pixel eye, you could actually wink at you, which I felt was a huge advance forward in facial animation.
And I'm sure if there had been a pixel for the mouth, I would have been talking about lip syncing.
Now, let's talk about the actual game.
So this was about, I suppose it was about a month into the development of the game, and that's when the first, really all I had was a landscape, was the green thing with the animating mortar, and I had the ability for little people to move around the map.
And I had implemented...
this map step thing because I wanted the little people to move around kind of naturally and exhibit signs of what I thought was curiosity.
So I had this map step array, which basically said if someone walked onto a block, one of these little people walked away, it incremented map steps by one, and whenever anybody walked around they looked for the lowest number around them so that the little people seemed to explore the land.
Bye!
hit my first big hurdle as a programmer is that at that time there was no raising and lowering land, it was just a landscape of little people moving around.
The hurdle was this, is these little people used to walk up to the shore and then try and get over the water, but they couldn't, you know, they collided with the water.
Now in today's world I could have just gone on to Google and typed in wall-hugging routine and downloaded a wall-hugging routine.
That was completely out of the question.
There were no books or reference books in those days.
There was literally other than, you know, highly complex academic papers.
There was really not much to inspire you for in gameplay terms.
And so after struggling with it for what seemed like an endless amount of time, it actually was about two days, I kind of gave up and I implemented a system where with a mouse, you could left-hand click.
to raise the land and right-hand click to lower the land.
So that when a little person met the coast, I could just click the land up and they would carry on to their objective.
And I played around with this and I thought, this is really nice, it's really fun just raising and lowering this land.
And it was only because I couldn't do the wall hugging, I just wasn't a good enough programmer to do the wall hugging, that that...
what was called nippling, obviously slight sexual obsession there, nippling of the landscape came about and it was only because of that and that was really the birth of what I felt was, you know, what is the core of populace.
So after playing around with that, the very next thing that I did was I implemented via the RS232 lead, multiplayer.
So Glenn and I...
could play around with this.
And at that time, it was just a very simple raise and lower the land.
And as we were playing around with it, we realized that it was really great fun to actually raise the land and sink Glenn's people in the water and raise my people out of the water.
And that's how this core mechanic really came about.
Then using the The next thing that happened is that we had all these people moving around the landscape, but they didn't, you know, they just constantly moved.
And there was more and more of them, so I needed to reduce the number of people down on the landscape.
So we thought, very simply, very simple mechanic, if a little person was over a blank piece of land, they would turn into a house.
We wouldn't have to, I wouldn't have to process them anymore.
I wouldn't have to, you know.
wind through the peep sloop, they would turn from a person into a house.
And then we realised the more land that you had, the bigger the house should be.
And so you can see here in this example, you can see that they have settled and they've settled on a nice flat piece of land, meaning they had a hut.
And again, that gameplay was absolutely evolving, partly, almost mostly, out of the need not to process the little people.
And then we thought to ourselves, how do we get those people out again, out of the house again?
There was two ways that we did that. You can see the little flag here was the indicator.
The first way was to remove the land underneath them.
Now, bear in mind, we weren't thinking about a God game.
We didn't think you were a God at that time at all.
So you could just click the mouse underneath their house and it would raise the land up and they would have to come out again.
using map steps, they would then search around for the next flat bit of land.
Or you could make their land bigger.
And slowly this game was evolving and Glenn and I would play at least a game a day of this, and it was a huge amount of fun.
But there was a frustration, you know, it was all very well just sort of nippling up and down and changing the landscape, but there was this feeling that you couldn't control it.
the people in any formal way.
And whilst that was really, really nice, it was also really frustrating.
And that's when we created, I think you can just see it, there's a little anchor in the middle, something called the Papal Magnet.
Quite why we came up with the name Papal Magnet, I can't really remember, but it was probably alcohol-fueled.
And Papal Magnet, when you turn the Papal Magnet on, instead of people coming out of their house and finding a place to settle, people would come out of their house and go towards the paper magnet.
And that means you could get lots of people in your paper magnet, and then you could turn that mode off, and then those people would create lots and lots of houses, and it felt really, really great.
But again, you know, we played around that with a number of days, and it was really good fun, but they still felt there was something missing.
And that's when we came up with the idea of natural disasters.
Why don't we have a volcano?
Why don't we have...
an earthquake or a swamp or something called Armageddon, why don't we have all these things and mix them all together and allow the player to set them off?
But we didn't have a kind of currency for which the player to do that.
So we had, you know, quite a few sessions where you could just cast infinite volcanoes and infinite amounts of earthquakes and you kind of got, the game got less fun.
And it was only when.
we hit upon this idea of manner.
Why do we do this simple mechanic?
If a person is moving around the landscape, they're generating no manner at all.
But if a person is settled in a house, if they have the bigger the house was, the more manner it generated.
And that's where you can see the scale on the top right-hand corner slowly increased.
And it increased.
by the number of houses, the number of settlements that your land had, and that triggered off these events.
And then suddenly, what was a frustrating mechanic, flipped into a really enjoyable mechanic.
But still, there was still this feeling, slight feeling, there was something missing.
One of the things that was missing was kind of an endgame.
There was no...
you know, you could build these colonists up and you could have this earthquake and you would endlessly bombard and earthquake each other.
And that's when two very important rules, and really just about the last rules came in, one of which was called the Knight, and that was the ability to turn your papal magnet, which up to that point was just a way of collecting people and then spreading them out again, into a warmongering knight that would go out and attack the opponents.
And suddenly that became a huge amount of fun because it was a race to get mana to save yourself against volcanoes.
It was also a race against the clock and the opponent before they could strike out different volcanoes.
And then the very last thing to come in was the Armageddon spell because our multiplayer games were going on for hours and hours on end and there was no winning.
side, so we introduced this Armageddon spell which is right up the end of the of the of the manor scale, which would literally push everyone out of their houses and they would collide and fight.
And now we were really, really enjoying the game.
You know we thought it was pretty fantastic, mainly because it was multiplayer.
Now while all this was going on...
Glenn was working on the interface and he did a brilliant job of, you know, defining the book as being the map and you can see the icons round the side were the gameplay so you could use the keyboard or you could use the icons.
It was a nightmarish programming job to get the mouse to translate from the isometric view to the flat view.
I'm sure you people would do it in 10 seconds flat but this took me almost three days to program which seemed like an insane amount of time.
We were about six months, I suppose about six months in.
I mean, if you take that in true coding terms, it was probably half that.
But we've been playing the game so much that we haven't been doing too much programming.
And while all that was going on, we were also doing some crazy things, like we invented the populous Lego board game.
So you can see here.
that we had these rules, we had, you could, depending on the number of little houses, you had little Lego bricks, which you could use to place down, which simulated the placing down of blocks in the game, and you could cash those Lego bricks in to build houses.
It actually was a completely rubbish game.
And it actually didn't balance the game at all.
But when we came to doing press, it was a fantastic story.
And we actually had.
We actually had Lego themselves come to see us, but that's another story entirely.
And while this was all going on, Les Edgar, the RCFO, the bloke in the funny picture, was going out to publishers.
Now, at that time, this was 1989, and there was a pretty much an obsession with, as there is now, there was an obsession with shoot-'em-ups and killing and firing.
you know, space, a bit more advanced than Space Invaders.
So every publisher that Les took the game to, and a variety of terribly written demos too, you know, most publishers turned around and said, well, we're just not interested in that.
You know, if you got them to shoot each other, we might be interested, but, you know, originality is not what the public wants at the moment.
They want, you know, I can't remember what the genre, they want this, they, you know, they don't want, you know, something new.
And eventually, Les took Populous around to a company that had fairly recently started up in Europe called Electronic Arts.
And met up with someone called Mark Lewis and David Gardner.
And because they had a hole in their spring schedule, they said, okay, we'll give Populous a try.
And we signed our publishing contract.
Now, Unfortunately, whilst we were, you know, fanatical games designers and games players, we were in no way fanatical contract negotiators.
And Electronic Arts spotted my weakness straight away.
And my weakness was this.
Go right back.
These little puppies.
So they only had to wait, you know, the one hour.
40 minutes before my nicotine addiction kicked in in the full, before bringing up the most essential clause in the contract, which was things like royalty rates, to actually get what was a pretty atrocious contract.
I think our royalty rate was 10% arising to the dizzy heights of 12% after 1 million units, and pretty much for no funding up front.
But we got the publishing contract, and then at last, we finished the game off, and it went into testing.
Testing in those days was nothing like the testing today.
It was nowhere near as robust.
They had this 24-hour period, which was this intensive test period, which was slightly scary.
It's equivalent to CERT these days.
Populous went into this CERT process and as part of that, they had to test the complete game from start to finish.
And interestingly, they phoned us up at about hour 19 and said, oh, well, you know, Populous is such a big game and, you know, there's almost 500 levels.
you know, we haven't got time to play through them all, we're pretty confident that they're fine, but could you give us a cheat to get us to the last, the end game sequence?" And that's when we realized we hadn't quite finished the game, because we'd forgotten entirely to put any form of end game sequence.
Literally, you got to the last level and nothing happened at all.
Now we did have this thing called the Goblin Lord that came up and judged you between each level, and after a serious design brainstorming we decide that an absolutely appropriate and completely emotionally engaging end of game would be for the Goblin Lord's left eyebrow to raise three pixels and him to go, well done mortal. And this was a frantic programming effort that managed to get it back into SERP within a few hours.
And so, Populous was born.
It was born out of, really out of my inability to program a certain feature.
It was born out of this fanatical play testing that me and Glenn, that me and Glenn went through.
And it was born out of, you know, a passion fueled by cigarette, Coca-Cola, and pizzas.
But the story doesn't end there.
In fact, there's several interesting stories because.
What that enabled us to do was to be introduced to the press.
Now, I'm a great fan of the press.
I think they're fantastic people.
They have a very hard job, and I've always admired them.
And at that time, one of the magazines that I loved the most was called Ace.
And this journalist was going to come down.
The publishers, our publishers, had phoned us up, and they had said, look, we want to, we've got the AIS review, but before this journalist wants to give you his final score, he really wants to meet you.
And he says, he's coming down tomorrow, and you know, please make him feel welcome.
Well this, I became insanely nervous.
And so when this guy came down, I obviously immediately wanted to ask him what he thought of the game, but I just didn't have the courage to do that.
So my obvious tactic was to take him down the pub.
Now, we went down the pub about 10 o'clock in the afternoon and it wasn't till about four o'clock in the afternoon I had drunk enough, 14 pints as it was, and I had thrown up in the toilet.
And then I thought, right, now's the time.
Now I'm going to ask David what the score is, what he thought of Populous.
So I went back into the pub, and he was sort of slightly swaying on the seat.
And I said, David, I've got to ask you, what did you think of Populous?
And he said, I think it's the greatest game I've ever played.
And the first thought that came into my mind was, he must never see populace ever again.
He must have made a huge mistake.
And then that's when the next piece of luck came about, because fortunately the Drummond pub is a sufficient walk away from the Bullfrog offices to mean that we would, it would be more like a stagger with the 14 pints inside us.
Because David then challenged me to a match of populace.
This was insane.
I mean, God, the thought of A, that, he would play Populous again and then change his mind from it being the greatest game he'd ever played, and B, that I was in any way capable even to see the mouse, let alone control anything.
So we ended up collapsed in an alleyway on the way back to the office.
And to my mind, I don't think David ever played Populous ever again, but we did get a great score.
And that was a fantastic, you know, it was a fantastic feeling to get that first great score.
And then.
the game was released.
And, you know, that was really my first game release, and, you know, I went down the shop, and I saw the game, and I started this tradition that I have now of going down the shop and buying a copy and going back and playing the game as it was.
And, you know, a fantastic feeling of accomplishment.
There was one slight snack, which I'll come onto now.
The time of release was the time when Salman Rushdie, you're going to think, my God, where's he going to go now?
Salman Rushdie had written the Satanic Verses, and he had a jihad against him.
Now, we were sitting in our office, bathing in the glory of our wonderful reviews, and you know, the fact that the game had been released, when, I'll just skip forward to this bit, when...
we got a phone call from the newspaper called the Daily Mail saying were you aware because you've made a game about good and evil that you were likely to get a jihad against you.
So all our glory about oh we've created this game was immediately crushed.
We actually, I remember Glenn and I thinking I'm sure I saw a terrorist on the corner of the street because you know they've got a jihad against us.
for doing this computer game. Bizarre though that was.
Anyway, that little thing went away and while that was going on I had all these bills coming in.
You know, although the game had been released, we, you know, Bullfrog had no money coming in at all.
And our, you know, skillfully nicotine-fueled contract negotiation had admitted to say that we needed money.
until nine months after the launch of the game, because of this tricky clause that publishers used to have called returns.
Of course, when you want a cigarette, you don't think about returns.
And they had to, that allowed them to offset the payment of the first royalty for nine months.
And I had my own little house, this was my house in a place called Avondale.
I'd brought it on my credit cards.
I'd worked out that I could pay the deposit for the mortgage on my credit cards.
And ever since buying it six months previously, I hadn't made a single mortgage payment on it.
It was really an early example of subprime loans in Guildford.
And so all these bills were coming in and I was getting more and more frustrated.
And that's when the phone rang and someone called David Gardner from Electronic Arts, phoned up and said probably the most, the worst thing he could say to me, he said, Congratulations, Peter, you're a millionaire.
Wasn't quite true.
I think the electronic hearts were the millionaires.
But anyway, he said, we've got a mountain of cash here.
He almost suggested that he was looking at it.
Mountain of cash, we're going to send it to you.
Don't worry about it.
This was about three weeks after release.
Well, what happened next was it took nine months.
for those royalties to come.
By which time I'd worked on this sneaky formula of applying for new credit cards, maxing those credit cards out, and then applying for another credit card so I could stop my house being taken away.
But the happy end of the story is that finally, the royalties came in, and they were absolutely fantastic and amazing.
And in the year of launch, Populous accounted for a third of all electronic arts revenues.
It was, you know, one of the top ten selling games of all time, and it's held that position for, you know, many, many years.
It was launched in Japan, and the Japanese went absolutely insane about Populous.
You know, they had...
Populous comics and Populous dolls and Populous figurines.
They even, and we were invited over for this, and this was one of the most bizarre things I think I've ever been to in my life.
They even hired a full symphony orchestra to play the music and the sound effects from Populous in a one and a half hour concert.
Now bearing in mind that a lot of the sound effects in Populous were inspired by Cass Hemroy, problems downstairs, you know, it wasn't one of the most melodic things I've ever heard.
And eventually, you know, Populous was converted to the Archimedes, the Atari ST, to DOS, to PC, TurboGrafx, Game Boy, NEC, SNES, Sega Mega Drive, you know, just the list went on and on and on.
And it really did launch me and us into...
you know, properly into the games industry.
What we did was, with that success, was then to start expanding the company up.
You know, the company went from essentially three people to six people to 12 people to 20 people.
And we started working on games like Powermonger.
Powermonger was a really interesting title to develop because it was kind of obviously inspired by Populous, but it was much more like an RTS game.
It would have been a fantastic RTS game, it hadn't been for an insanely stupid idea of mine.
And that was, okay, we'd have this landscape and we could have, you can make armies and those armies could go out and attack, sounds very RTS-y, they could attack each other.
Again, it was multiplayer.
This was kind of even before the sort of Warcrafts and the Command and Conquers, and that was all fine.
But the one thing that I did wrong was the way you issued commands to those armies wasn't by clicking on the map.
No, it was by carrier pigeon.
What happened was you clicked on the map and then this little carrier pigeon would fly over the map.
with the order for that army, taking about ten minutes to get there, land with the order.
I thought it was charming.
I thought, you know, that's really...
But, you know, it just sapped every ounce of gameplay out of that game.
But you could shoot each other's carrier pigeons down, so it ended up like a duck shoot.
It wasn't like a RTS game at all.
That went on to Populous 2.
You know, fascinatingly at that time, there was a kind of shame in the industry for working on sequels.
I know that sounds insane in today's world, but it really was.
You know, when journalists came to see you, you're not working on a sequel, are you?
If you sold out.
And, you know, popularist too, rather than me focusing on the obvious thing, which is what people enjoyed, and that was, you know, this little people mechanic and raising low in the land, I thought mistakenly as a designer, people wanted more destructive effects.
So I think.
Populous 2 Mr. Beat then.
Then the, you know, one of my favourite games, Syndicate, famous for introducing mini-guns into games and shooting innocent bystanders.
And classically, and this shows you how the times have changed because political correctness allowed us to mini-gun down prams with babies in.
You know, slightly unthinkable in today's world.
Magic Carpet, Theme Park.
and the high octane which I'm sure no one's heard of.
That then led us to, it was in just after Magic Carpet that we sold the company to Bullfrog and then just after I finished Dungeon Keeper that maybe I left, I left Electronic Arts and started up Lionhead.
We then went on to make Black and White and Fable, blah, blah, dee, dee, dee, da, da, dee, and all that.
And so that's the kind of story of Populous.
And if I have any conclusions, it is this.
It is, you know, sometimes there's a great way, and there's some fantastic examples, Minecraft being classically one of them, where games are born.
They're born out of playing them and tweaking them and finding out what works and what doesn't.
And Populous was a fantastic.
I think a fantastic example of that.
And sometimes what you think of as a solution, and a problem which is insurmountable, can often lead you to a solution which discovers your game.
It was a wonderful classic time.
And now I think we ought to try running Populous, because I have got it on an emulator here.
And we'll just see if this works.
Scary.
It's off screen.
It's not a good start.
Here it is.
Here she comes.
There it is, the Amiga interface.
Wow, that's so exciting.
And there's Populous, that's started up.
This was our cheap icon, which was a little tiny screenshot.
Gosh, the tension is killing me.
There, there it is.
And one other person that should be credited is the amazing, fantastic, incredible Ron Hubbard, because he did the introductory music.
Let's have a...
There you are, the intro sequence.
This took me quite some time to do.
There's a bit of a shoddy bounce for it.
I don't know if that's the plan.
We have to bizarrely escape out.
And we have to go back in again.
Sorry, otherwise we have to watch the whole thing.
So we'll have just a two minute demo, and then we'll just open it up for any questions.
Interesting, I am still working on Populous.
One of my hobbies at the moment is, I'm, this is purely for my own thing, if anyone's in Electronic Arts, you, please don't sue me for doing this, but I am making, I have, I could show it to you, I have got a 256 player version of Populous, which is this massive map where you've got lots of islands, it's pretty cool.
So here we are, here's Populous and you can see the basic mechanic that I was talking about.
This is nippling, two lefts, one right, and you can see I'm expanding up, this is my strategy, is to expand up, God I feel so emotional playing this, it's amazing, expanding up the expanding up the little house into a castle because castles produced people about four times faster.
And while this is going on, the incredibly complex AI over the other side of the map, oh, I'm running out of mana. See, I've got to use mana to build up. Across the other side of the map is doing exactly the same and doing a slightly better job.
Incidentally, the trees spread.
according to life, the algorithm life.
So if there's two trees next to each other, they spawn again.
No one understood why I did that.
I still don't understand why I did that.
I just had the imagination of, you know, these fractal patterns spreading across.
So here we've got my house, and I can just sprout the little villager, and he can go off, and you can see the map steps working now.
and then I can just build that back up to a castle, that pushes him off again and that's the core of the gameplay of Populous.
Now, I have one thing to reveal, which I don't know will work, but I have a cheat in Populous that I used in the National Populous Championship in Japan.
And that was to put the mouse up in the top left-hand corner and type goth monk.
N-O-N-A-M-O-G.
That's exactly what happened on stage in Japan at the National Populous Championship.
It's supposed to push everybody out of the buildings.
There was this insane competition where I was invited over to Japan and this Japanese kid...
was literally wearing this samurai, you know, this samurai, you know, I will die if I don't win bandana.
And we had to play face to face in front of an audience of about this big.
And this kid was just awesome.
But I had this plan.
I would get to the right moment when the camera wasn't focusing on my mouse.
I'd move it up to the top left and type gothmog and he would be ruined and annihilated.
exactly the same thing happened that happened now. I don't think Gothmog ever actually worked.
Which is very sad. Anyway, that's the tale of Populous. If anyone has any questions, I'll just turn the... If I can remember how to do this, I can actually turn this off. Oh no, or is it this on? Two players.
Oh, no, it doesn't matter. I could turn the computer player on to play my side, but there you go.
Anybody have any questions? ... ... ... ...
... ... ... Hi, Peter. I'm Ryan from Untold Entertainment. Thanks for your talk.
I was watching your talk and I watched Eric Shahi's thing this morning and...
And it struck me that these days we talk about iterative game development as if it's like a new thing, but you guys were kind of flying by the seats of your pants back when you were developing.
Do you think that that's a product of its time, where there's less pressure?
Or do you think we overthink design now with our big Bibles and our game design documents?
I think we've got both existing.
I think we've got both things.
I was really struck last night in the Interbit Games Awards.
I was really struck by one thing, is that that seemed, those people could have existed as they were, they could have existed back in 1989 when I was developing Populous and they would have felt completely at home.
Is the way that games like Minecraft and the way that, you know, a lot of games that won awards seem to be, have iterated, Desktop Dungeons being one of them, seem to have iterated is through play and iteration, and that's really how Populous was born.
And that's one spectrum.
That's one side of the spectrum.
And the other side of the spectrum is very formalized development.
And especially nowadays, when you're dealing with motion capture, motion capture just changes everything.
It really does change all the production, because you can't mess around with actors.
It costs millions of pounds if you do.
And that process does formulate a different style of game.
I suppose the dream is, and we always have.
and this is another complete talk by the way, so I won't go into any detail, at Bullfrog, up to, you know, even up to Fable 3, we still were slightly too iterative in the way that we approach games.
We would, you know, we still thought about pillars, and these pillars were things like in Fable 3's case were things like the ruling pillar and how it would feel to be king and there would be a pillar about the interface and how wonderful it would be not to have a 2D screen and interface and a pillar about emotion and touch.
And then from those pillars, we would all go off and iterate round on those pillars and experiment and create prototypes around those pillars.
And then about nine months before finishing the game, bring everything together, all those things together.
every single game I've worked on, there's the same thing we say.
And people in the audience, if you worked on Faber, you'd recognize this.
Oh my God, the game is 20 hours long, we thought it was 10.
And so we're still iterating now, but unfortunately it's very, very hard to get drama and quality with that sort of approach.
So at Line-M, we've really looked at that approach and we're changing that approach now.
Any other questions?
Hi, my name's Taylor, I'm from Electronic Arts, and I would love to see the larger multiplayer populace that you had.
Right, I should show it to you now.
Not from legal, so it's all good.
Would you want to see it now?
You really do, gosh.
Now, this is like looking into a computer.
an old man's dirty underwear drawer.
So one is we've got to compile it.
Oh.
It's not a good start, is it?
Let's be honest.
Okay, here we go.
It's called Feed Me.
Now I've got my PR person down here. I'm not breaking in PR confidentiality things, am I? Because it's not going to be, it's just a personal project. Right, okay.
Oh my God, it's a fatal error, you can't see it.
We've got to fix the bug as we're talking. That's hardcore, yeah.
Here we go. Let's do it.
No, directory error. Shit.
Come on, you're all programmers, you know how to fix this.
It must be there.
Look, I'll tell you what I'm going to do.
I'm not going to put you through this.
But actually, if I just run it, why don't I just run it and not compile it?
No.
Oh, you see.
Debugging.
I'm actually feeling very hot now.
Yes!
Look at the frame rate, everybody.
It's atrocious.
It's about 3 frames a second.
But yeah, it does actually work.
I haven't got Glenn here to do the lovely interface graphics, but it does actually work.
And you can play it across the network and all of that stuff.
There we go. Any last questions? We've got about five minutes left.
Hi, Peter. Ben Morrow, Idle Games.
I've played your games since I was very, very young.
I've played lots and lots of Populous.
I know I'm on.
I got in lots of trouble, missed school.
The question I wanted to ask, having played Fable and essentially realized that I'd become some kind of estate agent or landlord eventually, is whether you have any thoughts with all your experience about how...
you not only create an experience that works in the beginning as players discover, but evolves into, you know, that gives a great experience as the player learns higher and higher levels of what to do with the game.
Yeah, it's very interesting. It's an interesting question and I kind of agree with you in that there was...
Fable III, in a way, was a hugely important game in my career because I think it was...
And I'll be absolutely honest with you here.
The team did a fantastic job.
They did an amazing job.
But it was the only game, other than Populous, that was done in less than two years.
And because we were bringing things together very, very late on, I think there was a lot of edits.
And it was too harshly edited.
So the ruling section was way, way too short.
And things like house buying.
wasn't properly balanced.
And what that meant was, what we've done is, and I'm going to end up not answering your questions, and what we've done is really thought of a way that we can balance and get to what the game is before any coding is started.
And so we've come up with this tool, which allows us to define But still be very, very creative.
Every moment of game play on a minute by minute basis before the team actually starts developing the game.
And very interesting what that means is that you have the pillars that inspire this flow that you create at the start, and then those pillars are changed at the end.
So I really hope this time that, and I've been talking about this this week, I really hope this time that the dream that I know that I sell to people in the press will hopefully match the game that comes out at the end.
And because I passionately believe when I...
I'm not doing PR when I do it to the press, I passionately believe in that.
Now, I'll answer your question, what was it?
LAUGHTER That seemed like a rather good answer.
Did it? Oh, well, there you go.
It was pure luck.
Thank you very much.
Next question.
It's kind of sad, because it seems like it's going away, at least in mainstream gaming.
But what motivated you to work on games that have so many aspects of simulation?
And did you have any idea that it would be so successful?
I think even maybe The Sims is a good example, how hard it was to sell.
And then now we have three iterations of it later.
I think it was a per... I mean there was a couple of things that I really loved.
I've always had, I still have this unbelievable passion of creating a world that seemed to live.
And, you know, that world, whether that world be, you know, something like Populous, at the scale of Populous, or whether it be Power Monger, which was a little bit closer in, or whether it be...
theme part, which was very close in, or black and white.
These worlds, I think my fantasy is, if you set a game in a simulation, it allows players to do stuff that I have never thought of.
But I still think, for me, that's a very addictive gameplay quality.
At the time, at Populous time, when I said that to publishers, they just looked at me as if I was completely insane, because there wasn't anything.
like that at the time.
And it was really strange with Will Wright, who is an unbelievably clever human being.
And he, Populous and SimCity came out a month, within a month of each other.
And he was thinking about simulations as well.
So, it kind of proved I wasn't completely insane to think of that.
And I still love that.
I mean, what you all don't realize about Fable, is, and if you actually manage to, there isn't a cheat to do this, but if I had Fable here to demonstrate, there's this incredible thing with Fable, is that in a level, you can, if you go into god mode and fly up, you can see people, the other side of the landscape, the little villages, get up in the morning, go to work, buy things from shops, go back into their house, cook meals for their family.
I was never see that, but I still love that mechanic.
Do you think it's going to start going away now that there's these huge checks involved?
And you can't handcraft the player experience so well with these emergent behaviors going on in the background?
I think that simulation still exists in games.
It's probably there in things like Call of Duty.
But we have got an amazing spectrum of games being made now.
You know, really, in the last two to three years, we've got all the Facebook stuff and all the app store stuff.
And that is an incredible place to experiment with that.
And whilst I think that games like Farmville, and this is a very contentious view, but I think games like Farmville are a brilliant piece of design, those sort of experiences need to evolve.
If I was involved in that, I would definitely rat hole on simulation.
Because for me, you know, those little people in Farmville and Frontierville and all of those just randomly moving left and right, they're just missing a beat.
And that beat is that this is my little field or my little city, and I can see that the farms I plant, plant down have an effect on the little people.
I think there's a wonderful, glorious thing there.
I'm not saying that Farmville and that lot are not brilliant design, by the way.
Thank you very much.
Thank you.
I think this will have to be the last question, if I'm right.
Yeah.
I was a big fan of Bullfrog all throughout the 90s.
And one of the things I thought was so cool about that company was the vast range of genres and gameplay styles that you explored.
And this actually might share something in common with the previous question.
But one thing that seems to be quite common is designers who have been at it for quite a while, they almost sort of, there seems to be this magnetic pull.
sort of eventually towards, I guess, character-driven, first or third person, kind of close in genres.
And I'm wondering if you think that, if there's something sort of inevitable about that, or maybe why your career has gone in that direction, and would you ever see yourself?
Yeah, I see what you mean.
And there is, you know, I think, you know, the industry is very cyclical.
And a lot of this industry, and a lot of other industries.
especially entertainment-led industries, you know, they do follow my leader an awful lot.
You know, if there's a successful science fiction film, then you have a glut of science fiction films, same with horror films.
And it kind of could be the same could be true of the computer games industry.
I'm a huge optimist, by the way.
I think we're just coming to the time with all these new input devices and the cloud and, you know, the ability for...
us to get to people's friends list, I think that is really going to mean that we have changes in these genres.
But at the moment, this particular phase we're in, there are a lot of first-person shooters.
I love them, by the way, I absolutely adore them, I play them an awful lot.
I think that just having a little Battlefield 3 looks just totally awesome to me, and I can't wait to play it.
But I do feel that we as an industry, we owe it to...
the consumers and the people that play our games, whether they've just come to the industry or they've been there a long time, to actually innovate and iterate and to be brave with what we present to people.
Anyway, thank you very much.
Remember your evaluation forms, and also remember to turn off your phones.
