Ladies, gentlemen and those who are neither, welcome to the very last day of GDC.
Thank you for coming. Swery is on next, around the corner, if you're not sure why you're here.
Carol, the stagehand, demonstrated her death stare earlier to me, and I don't recommend being on the receiving end of it, so please turn off your mobile devices now to be safe from that fate.
And I've been asked to remind you that at the end of this session, you should turn off your...
Sorry, you should turn off... you should fill in the evaluations that you should receive by email, which is the most interactive part of the talk.
I'm Alexis Kennedy. I am the CEO of Weather Factory, which is super fancy considering there are exactly three of us at the moment.
and two-thirds of Weather Factory is in this room.
My co-founder Lottie is over there in the front row, or head of PR and marketing is back in London doing PR and marketing.
And I'm here to talk about making art while making bank.
Carta Simulator is the game I'm mostly going to be talking about, but I'll touch on some other stuff too.
And the key point here is the rejected alternative title for this talk, which was this.
Hands up if you think art is important.
Hands up if you think food is important.
If you put your hand up both times, you're probably in the right room.
If you're making free alt games, purely experimental art for art's sake.
then good on you, you're doing the Lord's work, and I wish you well.
If you are making games purely as product, and you're not interested in doing anything creatively unusual, this talk is likely to be less useful.
What we try to do at Weather Factory is experimental narrative work, and experimental means a rocky road, but it also means some opportunities, commercially as well as creatively, that you don't get elsewhere.
This is my Here I Am slide.
10 years ago, I founded Failbetter Games in London, where I made Forn in London, I was creative director on Sunless Sea, we did a bunch of other stuff.
And after seven years, I had built Failbetter into a machine that made Forn in London games and continued to make Forn in London.
They're still doing that to this day.
And for that reason, among others, I talked a lot about this at my GDC talk last year.
I decided to leave and stepped away and did a sort of rolling year, learning as much as I could from working for a variety of other studios.
And one of the things I learned, although I worked with some really great people and I'd do it again, is that I'm not suited for AAA.
So I founded Weather Factory with Lottie, with a brief, as I said, of making experimental narrative games.
And Cultist Simulator, our debut game, We made it in 11 months, the budget was less than 200k USD.
It's done very good business and it's been nominated for two BAFTAs.
So I'm speaking to you in the brief bright moment after we were nominated for the BAFTAs before we inevitably lose them to Florence and Obra Dinn but you know.
So Let me talk about what it means to make experimental games that are also commercial games.
Fallen London was my first project.
And the idea behind Fallen London is unbelievably stupid.
It is a content-heavy free-to-play browser game.
The whole point about free-to-play games is you want people to shell out repeatedly for reproducible things, so you skin the same hat in 90 different ways and sell all the different gifts.
Fallen in London, there was a talk on this, I think it's over this week, has a tremendous appetite for content because content is what fuels a lot of the free-to-play purchases.
That was a stupid idea, as was designing it for web rather than mobile devices because in 2009, I didn't know anything about anything and I didn't realize that mobile was going to be a thing.
It doesn't have a genre.
It's very hard to elevate a pitch for in London or describe it in a sentence.
Super grindy, sorry about that.
And very divisive.
People do tend to love it or hate it.
This wasn't a design intention, but for a long time it looked like something that had been built by one and a half people in a back bedroom on zero budget.
Nevertheless, when I left Valvetta, it was making enough money to pay a team consistently.
Those aren't the kind of numbers that get Zynga excited, but for a zero budget passion project, it's seven years after launch, that's pretty good.
So the C, as any of you who've played it, or watched a Let's Play will know, is the world's slowest RPG.
Which isn't really a traditional box point.
It's also got permadeath.
It's not sensible to put permadeath in an RPG, but we did.
It's once again got no discernible genre.
It's sort of an RPG, but I'm stretching the definition to say that honestly.
And once again, it's very divisive and it did good numbers.
Again, not good numbers if you're notch, but very good numbers if you're six people in a small room in South London.
Cultist Simulator.
So the first two, just for clarity, were Fail Better Games, my last studio.
Cultist Simulator is Weather Factory's debut title.
And once again, it's very hard to describe in a sentence, but it's deliberately obscure.
It's more like sort of occult solitaire than anything else.
And not only is it deliberately obscure, it has no tutorial, which is a choice we made with some nervousness.
Make a deliberately obscure game with no tutorial.
Doesn't have any kind of genre, C for divisive.
And these are the numbers we're talking about.
Very small budget, very good sales, considering especially what a tough market is out there.
And we have denominations.
So, what it means to be experimental.
I'm gonna read this comment because I enjoy it.
The approach is great, the ideas are great, and the setting and world building are interesting and refreshing.
Why thank you, Reddit commenter.
Reddit has a bad rep.
But as a game design student, If I would have handed this in at any point during the year, they would have failed me instantly.
This is key when you're talking about experimental stuff.
Doing things that no one else is doing, things that people wouldn't normally do, is an advantage, all else being equal.
It means creative innovation, it means commercial innovation, which in a market as tough as the one out there right now, is a big deal.
But, there's a catch.
Very often those things look stupid.
Worse, often there are good reasons you put a tutorial in the game.
Often there are good reasons why you were taught in your first year of game design the things you should do.
And this is the catch.
Until you actually do the thing, it's very hard to work out what's stupid and what just looks stupid.
So to try to narrow down the things that have worked in the more experimental stuff that I've done over the years and the stuff that doesn't, I want to introduce you to my failures.
These are not all my failures.
These are only some of my failures.
You won't even have heard of most of these, very good reasons.
I wasn't creative lead on all of these, but I signed off on every one of them and I bear responsibility for their failure.
Black Crown Project was back when I thought that free-to-play narrative was going to be the wave of the future and replace novels because I was insane.
Story Nexus is the shared narrative platform which is going to make us a lot of money and instead nearly tanked Failbetter at the time.
So I think probably I've had twice as many failures in my career as successors.
Here are the things that I think the successors had that made them successors.
One is that they were both distinctive and divisive.
I'm gonna talk about the difference between that and a bit, but both those things are important.
They were all reasonably good.
Sounds a bit like I'm being flipped when I say that.
And people differ on the quality of some of them, but none of them were actively dreadful.
All of them very important, super small budgets by the standards of game dev and very short timelines.
Cultist Simulator, 11 months, Sunless Sea, 16 months.
Fallen London, from the time we wrote the first line of code to the time we launched in public beta, was I think four months, although it's been worked on ever since.
And a suite of design techniques to which I'm going to give the super fancy name of Apothenian design.
And I'll come back and talk about that in a minute.
So why all these things?
Why are they useful?
Why are they important?
Particularly if you're an indie dev, it's vital to lean into your limitations.
All studios have limitations.
Indie studios are basically made of limitations.
I used this slide in my talk last year, but I love it, so you're getting it again.
This is one of the characters, one of the primary characters from the popular science documentary, Aliens.
It's the M577 armored personnel carrier, and it's made of all kinds of fantastic science ship, and it's basically indestructible, and it's very expensive.
You probably remember that it doesn't make it all the way through the film.
This is Rebecca Jordan.
She's nine years old, she has a second grade citizenship award, and she has one very important limitation.
She's really small.
So her lifespan is much greater than that of the M577.
And as an indie studio, you're not the APC, you're new.
So find what your limitations are and lean into them.
Some of those limitations are common to everybody who's reasonably described as indie.
Small budgets, limited resources.
There were two talks on the wind physics of God of War, this GDC, and I'm sure both of them were excellent for specialized audiences, but I've never made a game with wind physics.
So all our limitations are different, but they tend to overlap in similar places.
and that's what this talk is about.
So being distinctive, and the problem with this slide is that giving you advice on how to be distinctive is of limited use because if I tell you all what to do to be distinctive, assuming it's good advice to do it, assuming you go out and do that, congratulations, none of you are distinctive.
So find what makes you distinctive, find your specific limitations and lean into them.
But because they've given me a free pass for GDC and everything, I have to give some specific advice rather than talking happy generalities.
So let me give you a couple of pieces of advice.
One is this.
So this is the key art for Cultist that the insanely talented Catherine Unger did for us.
It doesn't tell you anything about the experience of playing the game.
Sorry, let me rephrase that.
It doesn't tell you anything about what you actually do in the game.
It does tell you something about the experience of playing the game.
It evokes some of the emotions and some of the setting details you're gonna deal with.
And once you've seen it, you tend to remember it.
Very, very annoying thing.
If you're a writer, as I primarily am, art is much more distinctive than text.
A wall of text looks like a wall of text from a distance, but art immediately looks distinctive.
And lots of indie games, for this reason, use a distinctive art style or distinctive key art to stand out from everything else out there.
And here's a really important point.
You don't have to spend a lot of money to find something distinctive.
Again, leading to your limitations.
Sometimes you do, sometimes you can.
Some games need to be beautiful and need to look like all the money that was spent on them.
But here is, this is Rineira, one of our cultist acolytes.
And Catherine Unger, in the little time she had at the beginning of the project, because we didn't have her for very long, quite reasonably very sought after, established this art style for our cards.
This, my co-founder tells me this is, this is something sort of like vector art, I don't really know what that is, but it sounds important.
And the key things about this is, about this art, first of all, it's very distinctive, people use this art style now for Twitter avatars or Steam avatars to identify themselves as cultist-simulated players.
And everybody who's seen it knows it.
It's also really cheap to produce in mass quantities.
You can whack out several of these in a day quite easily, which when you have our budgets is vitally important.
So that's one good way into being distinctive.
Here's another one, a much more general one.
Genre.
Genre is a tool for communication and a tool for marketing.
If I say that I'm making a side scrolling to be at the RPG, you immediately know a lot of what I'm trying to do.
And you immediately have some idea if you're likely to like it or not.
But, so people will tell you that you should find a genre, that you should fit your game into the places where other people like those genres, you should try to establish commonalities based on that.
And that all can be good advice.
But there is another route, and the other route is explicitly to eschew genre.
And even if you explicitly eschew genre, we're still talking about cultist simulator being sort of a simulation, or sort of a card game, or sort of a rogue-like, or sort of a horror game, or try to get to those audiences.
But if you identify yourself firmly with a genre, it's very hard to stand out from all the other things that are in that genre.
So eschewing genre is one way to be distinctive.
Divisiveness, right, those of a nervous disposition may wish to look away now, because I'm gonna show you some orange text.
It's not something that a dev ever wants to see.
God of Simulator is actually wedged at 77% most positive on Steam, and is unlikely ever to budge from there.
It'll never make it into very positive, it won't sink into mixed.
But every time we run a sale, we get a rush of people who, haven't heard about the game through word of mouth, haven't been recommended by a friend, and many of them don't know what they're getting into and react with confusion, dismay, or anger.
And that anger is reflected in a syncytomix.
This is what divisive means.
So look at the number at the top there.
This is someone who spent almost 60 hours.
I know, right?
But they have actually a very long list of reasons they don't like the game.
I only showed you the top part of the review, but it's like 1500 words.
They feel very, very strongly about it.
Reviews for Cultist Simulator tend to come in three varieties.
People really like the game.
People just bounce off the game.
or people nearly like the game but too many of the unusual design choices you made or the rough edges annoy them.
You know, this is the third.
Very divisive game.
In a picture, why is divisive good?
How many of you see a blue dress?
How many of you see a white and gold dress?
The weird thing for me, I don't know if the background has changed it, but I used to see this as blue and black.
When I was putting the talk together, I saw it as blue and black.
And when I started practicing the talk, I saw it as white and gold, and I can't flip that.
So for poorly understood reasons, this presents to about half the world as white and gold, and about half the world as blue and black.
And the reason that many of you recognize this image is that it went viral.
because everybody who saw the dress as blue and black could not believe what the white and gold folks were on about and they wanted to explain to each other why they're wrong.
And if you are an indie dev trying to build a community, yes, the thing about communities, and this leads into the dark arts, honestly, is that a community is defined by other people not being part of that community.
Any community that doesn't have an edge is the human race.
And the thing about a community that has strongly defined boundaries is it feels very strongly about its identity.
Now, in the age of Brexit and Trump and the polarization of politics in the UK and the US and elsewhere, this is gonna evoke some alarming thoughts.
So you must only use this power for good.
But the thing is, In the case of Cultist Simulator, in the case of games with thoughtful, non-toxic communities, often this power is usable for good. I said earlier that there are three kinds of response to Cultist usually. Love it, don't get it, nearly love it but hate it.
And very, very often, I'll jump into the Steam forums.
There's Steam forums in all places.
And I'll see a thread that begins by somebody saying, I don't get this game at all.
I put cards in slots and words happen.
And occasionally, it's a reasonable summation of the game, honestly.
But occasionally, people will come in and go, lol, sucks to be you.
This game is for smart people.
But that doesn't often happen.
fortunately, what very often happens, heartwarmingly so, is the thread will fill up with people saying, yeah, it's a tough one, this.
Where particularly are you running into problems?
Have you tried this?
This is how we fix the problem you're talking about.
Read everything really carefully.
No, seriously, read everything really carefully.
It all means something.
So if you have a divisive game, then your community has very strong boundaries, your community will feel very strongly about being part of the community, and your community will often want to recruit other people.
Right, make it a reasonably good game.
This is the most important advice I can give you.
No.
No.
No.
No.
No.
No.
No.
No.
No.
No.
No.
So we're talking about making games which are creatively and commercially successful.
If you go far into the art end of things, a lot of conventional metrics for what is good. Is it fun?
Does it sell? Does it attract review scores of limited use? But where we are on the boundary between the two...
You can't say that too loudly.
It has some effectiveness.
If you are doing something creatively interesting and unusual, then people will give you a lot of leeway.
But only so much leeway.
Your game still has to be good.
Again, this is a pretty general piece of advice.
So let me talk specifically about a way to make your game better if you are making a experimental game.
Feedback is vital.
Feedback from the community is the lifeblood of games, of indie games dev.
I've gone to like five talks this week where people have said absolutely correctly that feedback from the community is what can make a good game into a great one.
or an incomprehensible one into a decent one.
But you can design your game in a way that makes it easier for people to give you feedback.
For example, cultists, the core loop is you put cards into slots and then words happen.
And then you combine with other cards, you have outcomes, those produce more cards.
It's a virtuous cycle of more cards giving you more combinations and experimenting with those and finding more things.
And that core loop was available for the moment I had working code, even when it looked really shonky.
In fact, the core loop was available before I had a beta or an alpha.
I put a prototype doing with a crappy JavaScript gray box interface on the web for free.
I just said to my existing community folks, here's something that I think might have something going on.
I think it might be interesting. Do you want to have a look at it?
People looked at it, people gave feedback.
So before even the game had an alpha, I was testing the core feedback loop and seeing whether there was something there.
You've been to a bunch of talks this week already, I should think, that emphasize the importance of this.
I won't get into it, but talk to your community, get all the help you can from your community, learn from them, particularly educate them.
So there's two reasons that's important.
If you educate your community about your design decisions, then they will give you better feedback and they will educate other people to give better feedback.
So for example, in Culture Simulator, One of the things you start doing very early on is to drag your job card into your work slot.
And it produces some money.
You do that over and over again.
Over and over again.
So you see what I did there, right?
I did an art.
You have to drag the work card into the work slot over and over again.
So my community started pointing out that there was no automation for this.
They have to do the same thing over and over again.
And I said, yeah, well, I'm doing an art.
I want you to feel that it's tedious so that when the opportunity comes to start studying forbidden magics, you're like, oh, yeah, this is the cool stuff.
And they said, that's true, but also RSI.
So rather belatedly put in a double click option so you can send the card directly in the slot.
I didn't want to pull back all the way on making it a deliberately repetitive unpleasant thing.
But if you educate your community about why you're doing things rather than just saying it's my vision, then they can respond meaningfully about which bits are a problem and where you need to fix them.
And here this is key.
Cultist Simulator, when we were first discussing it, could have been more like an RPG than like a roguelike.
The loop of cultist simulations, you play it for basically an evening, maybe two, maybe an hour if things go badly, and you complete it.
And you try it again for a different goal, different set of start conditions, see how things shake out differently.
And there are several reasons we chose to do this, one of which is my continuing besotment with FTL.
But one of them was that so that we didn't burn out our testers.
If you make a 60-hour game like Sunless Sea that you play through once, you need a steady stream of alpha and beta testers if you want to keep getting feedback from it.
Nobody's gonna keep playing the first 15 minutes of your game, and the first 15 minutes are the most important.
But if you make a game where you have to do constant runs, then you can keep on using the same community, the same community you spent all this time educating.
You can keep on getting meaningful feedback from them as you add features to the game.
So that's a couple of design choices there specifically intended to make the game more likely to attract feedback and make it easier to manage feedback around it.
They're all to do with the game design, not to do with the cool ops stuff like automated feedback and heat tracking that I've seen in other talks this week.
That stuff sounds great as well, don't get me wrong, but this is a design talk.
Right, so I showed you a bunch of projects at the beginning that I worked on.
Three succeeded, more than six failed, seven, eight, I can't remember what it was.
The thing about experiments is they often fail.
If they didn't, they wouldn't be experiments, we wouldn't need to keep doing them.
So.
Oof, every time I look at this, I get chills.
Jake Burkitt did a Twitter poll last year, and he asked people how long they'd been working on their game.
Now, that's how long people have been working on their game, not how long did they take to finish their game.
So more than half the people who responded, Twitter poll, it's not scientific, but you probably recognize these numbers, said they'd spent more than a year on their games so far.
These are also Jake Burkett's numbers.
If a game makes $100,000 on Steam, which isn't a hit, but most games aren't hit, and if one person has been making it for one year, then that's the hourly wage at the end of it.
If you have a team of more than one person, or if you are working at it for more than one year, those numbers get much worse very quickly.
So the thing about experiments is, keep them cheap, keep them small.
Sure, there are lots of ways to manage your risk.
You can get a publisher who's prepared to take a chance, harder and harder, and they want a lot, but it's the thing you can do.
You can throw something out there in early access and then lean into it.
A lot of the successful games I've heard about this week have been people who have an initial winning formula and then iterate and keep on providing free updates.
All these things work.
But if you're doing experimental stuff, if you're trying things that you think genuinely may be stupid ideas, keep them cheap, keep them small, don't get lost in the vision.
And there's another advantage of that.
That advantage has to do with improving homespun wholesome anecdote that might even be true, I don't know.
It is said there was a pottery teacher who one term told half her class to make the best pot they could over the course of a term and the other half of the class to make as many pots as they could over the course of a term.
And after a term, half the class had all made each one really badass pot.
The other half of the class had made each of them a lot of badass pots.
As you keep on making pots, you get better at making pots.
If you're polishing a pot endlessly, it's probably not going to be that much better.
And particularly with games, when the whole life cycle is different, you go through pre-production...
You go through production, you launch it, you get feedback of a different kind of nature from press than you get when it's in early access or beta.
You start it over again, you change your tools, you change your approaches.
You learn things in a different way when you finish and launch a game.
So finish and launch as many games as you can on short budgets, and that reduces your risk, and that means you learn more stuff.
Derek Yu has pointed out that finishing a game is a whole different skill set.
It's probably exaggeration.
It's not the same skillset as making a game.
Actually finishing it is hard.
It's very worthwhile to practice that.
Right, last section, but the longer section.
What is apophenia?
Many of you know, all of you may know.
Those of you who don't, this is apophenia.
Those don't look like faces.
until they look like faces and then they don't look anything like anything except faces.
So apophenia is the human tendency to make patterns and to find meaning in gaps.
And if you're a game designer with a limited budget, apophenia is great.
So the three rules for apophenian design are One, don't simulate what you can imply.
Two, show your mechanics to your players, make your design visible.
And three, lean into your limitations again, cut, limit what you do.
We talk about each of those.
All digital games, with some trivial exceptions, run on computers, they're all software.
Computers are all good at simulating.
Software is designed in large part for simulation.
So simulation is always a temptation when you're making a game.
You try to make the thing that you're modeling as much like the real world thing as possible.
You think, I'll just add more behavior to it, it'll be more sophisticated, it'll look more like the actual thing.
We try to do photorealistic graphics, or you have two separate talks on wind physics for your extremely gorgeous, I love God of War, don't get me wrong, I'm not dissing God of War, but the point is that isn't available to most of us.
Simulation is very often a temptation.
So for hundreds, and in some cases thousands of years, other creative forms.
who can't simulate anywhere except between the player's ears, those artforms have been finding ways to use apophenia to leave gaps in the work that the player can insert their imagination into.
And if the player inserts, or the viewer, or the reader, or the listener, or whatever, if a player of your game inserts their imagination into a gap, two things happen.
One, They feel that they own the experience, it's a more creative experience, and they're gonna be more engaged with the game.
Two, the CPU cost is a lot lower.
You get a lot more bang for your buck.
So let me give you some specific examples.
What happened here?
If you've played Cultist Simulator, you'll recognize this experience.
If you haven't, what this player has done is they've completed a dream action in the game that has unexpectedly torn away the veil of the world and shown the mansus, the place behind the skin of the world where the secret gods, the hours rule.
Whoa.
Of course, in the game, we haven't simulated that at all.
What we've done is we've shown the animated graphic that indicates completion of a task, and then we've done a rather nice transition, and then we've shown this big, fancy, evocative graphic at the end.
We haven't shown an avatar lying down to sleep, putting the covers over, closing their eyes, and then a bubble comes out of their head, and then you see the Mansus in there, and the Mansus expands to the world.
There's a lot of gaps.
And filmmaking, the Kuleshov effect is this idea of long and venerable standing, that if you show two visual elements in sequence, people tend to draw a line from one to the other or make an assumption.
If you show somebody and you show a coffin, then the reasonable assumption is that somebody is in the coffin.
If you show a tabletop and then you show a dream world, then sometimes you can suggest that the character's gone in the dream world, even though there's no character visible in the game.
That was just in here in case the animation didn't work.
Top tip.
Textually, so writing is great for this.
Text also is cheap because writers, God help us, are cheap as chips.
Glover and Glover is the firm that you end up working at in Cultist for a chunk of the early game, potentially the whole game.
And we never specify what kind of firm Glover & Glover is.
It's got clerks, it's got desks, it's got windows, it's got management system, it pays people, it's run by a family.
But it might be an accountancy firm, it might be lawyers, it might be a shipping firm, it might be something else.
We never talk about it.
But everybody... That's not true.
Many of the people who play the game will have had a soul-destroying office job at some point.
and they'll bring their own experience to Glover and Glover and they'll make assumptions based on that. So use your player's experiences.
And just the pros there as well, the second line there gets quoted a lot, people like it.
And curl my hands into the correct shapes, a lot with a little there, the hands aren't bent, they're curled, there's muscular tension there.
into the correct shapes, we got a sense that you're conforming to something, and we also hint at the occult sense of correct shapes elsewhere in the game, comma and begin full stop.
Not, and begin the day.
The day proceeds, it's very boring, and this happens, and I looked out of the window and I saw a ship, and blah blah blah.
As the edit has it, get in late and leave early.
Leave the gap for the player to assume experience.
Well here, I could have been unhappy, I'm not unhappy.
That gets quoted a lot too.
We don't tell the player, so this is a retirement ending, this is one of the alternate endings in the game.
If you end up getting to sort of mid-level in the game, getting a promotion or two, and then you decide to retire, you get this rather melancholy ending.
But it's not a bad ending, it's kind of a victory.
And the key thing is we don't tell the player that, we let them bring their own experience to it.
So text is really good at leaving these spaces.
You know what else is?
Game design.
So here is the core mechanic of Cultist Simulator.
You put cards in slots, you hit start and something happens.
There are a limited number of slots on the board.
Fun fact, there are usually about five, six, sorry, there are a standard five, six verbs on the table.
And a verb cycle normally takes about 60 seconds, which means that if you have all the verbs going at the same time, something happens about every 10 seconds and you can see it coming, which is what makes the game addictive, which I stole from Civilization.
Thank you very much, Sid Meier.
And, But you've only got one work verb, or one explore verb and one dream verb.
And the work verb is work in two senses.
It's work in the sense of go to Glover and Glover and earn money.
It's also work in the sense of the great work, the magical work.
And so you can use two kinds of things in work.
your job cards and your abilities to generate money.
And you can also use rights to perform occult operations and summon things or murder people or whatever you feel like doing.
The point is you can only do one of those at a time.
If you're doing occult operations, you are not going to work and earn any money and vice versa.
And this is the core of the, one of the creative intentions of the game.
It's the division between your day job and the secret wonders of the night, which a lot of indie devs who've worked part-time on their own projects will recognize.
And I'm not even being cheap there.
When I first did the Cult Assimilator prototype, I was about to do a bunch of contract work, creatively engaged by the difference between the things you love doing and the things you have to do.
But the point is, Cultist doesn't give you a speech about that.
There's no opening text crawl that says, the choice that the humanist must make is between dreams and life.
It presents that mechanically for you to absorb and enthuse about on a Steam review, hopefully.
Here's another game that does something beautiful with mechanics, very minimally.
Heretic Operative came out last month, strongly recommend it, sort of Elder Signs Omens board gamey sort of thing.
The only two numbers you need to worry about here that our NPC has are the one by the black cross, which is corruption, and the one by the orb in two hands, which is tranquility.
And magic in Heretic Operative works like this.
Every time you cast a spell, you gain corruption.
Corruption reaches 100, you switch sides.
Every turn, whether you cast a spell or not, your corruption goes down by your tranquility.
So if you manage to spend some time not doing magic, then you'll return to normal.
You don't spend magic points, you don't take health damage, it's just the corruption stat.
If your corruption crest's 50, I think, you become curious.
And that means your tranquility drops.
If your corruption quest's 75, your tranquility drops again because you become open-minded.
And your tranquility can go negative.
What that means is your corruption start rising every turn because you're just too open to the things you shouldn't be open to.
That's lovely.
That tells you.
A lot of the things you need to know about the way magic operates in the game.
And it's also a really interesting mechanic.
Lovely design.
But that is Apophelian mechanical design.
That is using design to tell a story.
The problem with leaving gaps, of course, is that the player...
Don't always go where you want them to go.
If you leave a gap, sometimes they'll wander off into the distance and not fill the gap, or they'll fill it with some other nonsense.
Or sometimes they will engage in a creative dialogue with the designer because the author is dead and all that stuff, and that can be great.
But sometimes they just don't feel what you want them to feel.
So the key here is theme.
I'm a theme-first designer. Not everyone is.
But if you are doing an experimental game, a theme to hang all the mechanics on is great.
And everything in Cultist, everything in Sunless serves the theme.
The art and music all are done in the service of the intention of the game is going to be about yearning and apocalypse and experimentation.
Now your creative direction, decide your theme.
find two, three words to express it.
Make sure you keep tugging the theme back to that.
And it's the equivalent of pointing the player's head in the right direction the whole time.
They're going to end up looking in the direction you want, and they're going to end up tending to think in the ways that you want.
Second point, apophelium design.
Do this.
Design can be beautiful.
Mechanics can be beautiful.
Cultist, it's very clear what's going on.
You might not understand all the ramifications of what you're doing, and you might not know all the combinations that will fire things off, but you very quickly learn the basic metaphors.
And here's something new.
In the last five years, 10 years, players are constantly more sophisticated in their appreciation of design and mechanics, especially the kind of people who play weird indie games you find at the shank end of Steam.
And you will see people having much more nuanced discussions increasingly that this design sucks, this game is stupid.
You will find people pointing out the things that work and the things that don't. If you make the design visible, if you make your game like a skeleton watch, then that conversation becomes more thoughtful, the players can see what's going on.
It makes it easier to educate your players on the design, which is something we said we wanted to do earlier.
Gets you both the quality of feedback, allows them to educate other people.
It allows them to give you better quality feedback so they can see what you're trying to do.
You don't have to tell them your design intentions if you can actually, they can see what your design intentions are.
They're hidden under layers of simulation, that's not the case.
And the final point, cutting.
You have a time and a budget.
Even if you're making your game as a hobby, it still has a time and a budget.
The time is your life, and the budget is all the money you will ever be able to dispose of in your life.
Everything's a timeline and a budget, and quick-paced experiments, much, much more so.
At the beginning of a project, you'll have a list of features.
and you'll know that you won't be able to put all of them in the project and as the project goes on, you'll find more features and it's very rare for the feature list to shrink as you go.
So particularly if you're making a strongly themed experimental game, you want to cut down.
to the things that are necessary to have an effect.
Richard Garfield's talked about a complexity budget and thinking in terms of adding features, even if you can afford them, there's a limited amount of complexity you want in your game.
I think it's a similar thing with a sort of thematic budget.
If you put too many features in your game, isn't so much about something.
But it's really, really hard to cut.
And there's a fundamental tension between creator and producer.
And I'm not being snarky about producers here.
My fiancee, a business partner, is sitting over there in the front row right now, and she's a producer, a very good one.
But designers tend to want to put more things in and make more things because we're really enthused about them.
And producers are the guardians of the budget and the timeline and tend to remind us that we only have finite hours, days, weeks.
And very often when Lottie and I work on cultist, I would say this has to go in the advanced research stuff.
It's absolutely part of my vision.
Do you understand?
It's so important.
It leads into the primary pillar of experimentation.
And Lottie would say, okay, but you did say that last week about that other thing.
You said it was also absolutely vital that nobody's noticed it's missing.
And the trick we found useful for cutting effectively was this.
Allow the grieving period and see how you feel at the end of it.
If you acknowledge the possibility of cutting something, even if you don't take it out of the list, if you say, you know, this is now going to a maybe or it's now going to a no, flirt with that possibility for a week.
The end of a week, being a designer, you may well have thought of five other things that would achieve the same effect for less cost, or you may well have decided that it's not necessary to the vision after all.
Or you may think, no, good Christ, all the ripple effects of taking this thing out of the game would destroy the whole experience.
We should definitely leave it in.
So give yourself a grieving period to think about whether you should take it out and allow yourself a grieving period once you do.
Producers allow your designs a grieving period too.
So to review.
The things I think have been successful, they've all been distinctive, they've all stood out in some way.
They've all been divisive, they've all had strongly bordered communities that have been advocates for them.
They've all been not dreadful, because however much you argue that something's art, it's difficult to make it commercially successful if it's dreadful.
And the best way to get to that is to design the game to help you gather feedback.
All of them have had small budgets and constrained timelines.
One day I'll make a gain for $5 million and it will be dreadful, but I haven't yet.
And all of them rely on the suite of fancy named terms I've just talked about.
But, this is why I named my first company Vellbetter.
And I still love this quote, but I like this quote more.
So I want to help you learn from my mistakes.
Here are a couple of things that we'd have done differently on Culture Simulator.
I said at the beginning that it can be an advantage not to have a genre.
Now that was true, but like many true things, it's a little bit more complicated than that.
Way too much text on this slide, actually.
You've all stopped to read it now.
So I'll stop and let you do that.
So the point is, if something isn't really a genre, it's actually probably several genres welded together.
So Cultist Simulator, for example, was kind of an RPG and kind of a roguelike, and kind of like Sid Meier's Pirates and kind of a bunch of other stuff.
But it had a lot of RPG elements, a lot of roguelike elements.
And that was intentional, and to a large extent that was good, because it meant that you had the story part of a RPG, the peril part of a roguelike.
So you really, every time you venture out on the black ocean in Summer Sea, you feel the fear to begin with.
But the problem with that, of course, as all the reviews very reasonably said, is that that's great the first three times.
Then after that, because it's not really a roguelike, it doesn't have enough variation in the beginning.
That was my big design mistake.
you repeat the same story, and however beautifully written the story, it's not interesting the fifth time you read it, it starts to feel like homework.
So if I had identified earlier where that fault line ran and the problems of having something that was both kind of an RPG and kind of a roguelike.
I could have started building in mitigating factors earlier.
This is something I said in my Yama Sutra retrospective, in fact.
If you're doing something that draws from different dramas, there will be a fault line because some of the assumptions and expectations won't match.
Find that fault line early.
Find it earlier than I did, and you'll do better.
Same thing with cultists.
The reason that Cultist has no tutorial is that I wanted the experience of playing Cultist to be the experience of the character.
I wanted the player to be slowly trying to understand what lies underneath the surface of the game, and to have moments of discovery and of terror in the same way that the character who's starting to uncover the occult and the hidden worlds has moments of discovery and terror.
When that works, it really works. That's what people like about the game.
But it doesn't always work.
Sometimes it's just not accessible enough to people.
And sometimes two of the genres rub up against each other badly.
So it's an exploration game.
There's new tutorials so you can find things out as you go.
But also, one of the big influences on it was RNG clicker games, having that sense of slow, perhaps, sorry, clicker games with a bit more RNG, having a sense of slow accumulation of resources and being able to spend resources on things.
I wanted the resource management in there because I like resource management in narratives and because I wanted that sense of peril for the exploration that would come with knowing the game could be ended.
Very often, halfway through Cultist Simulator, either in a game of Cultist Simulator or in a player's experience of Cultist Simulator, you get to the point where you sort of understand what's going on.
You've done all the exploration stuff, and you're still trying to get the loot you need for an expedition.
Now I fixed some of that later on.
I took a lot of the RNG out of the game and I made the game shorter, but there's this fundamental tension there between the exploration stuff and the resource management, the RNG clicker stuff.
I think that could have been fixed.
I think if I'd been a better designer, it would have been fixed.
I think if we'd spent twice as long on the game, it would have been fixed.
And I think if I'd been more aware of it earlier and had directed my efforts toward mitigating it, it would have been fixed.
So look for the fault line if you're doing stuff that's cross-genre because I don't always think of that.
This is something the GDC board actually asked me.
It seems a bunch of the criticism of the game there in the UX, is this something you felt was as designed, or was this a fallout from the process and decisions you made?
So the answer is a little bit of column A, and a little bit of column B. And in fact, a little bit of column C.
The game's intentionally obscure.
Some of the.
limitations of the UI are there, because I didn't want everything to be visible.
So it for other reasons.
So there are no tool tips in Cultist Simulator.
It's partly because I didn't want people to get that sense that you could mouse over something and get it.
You have to click on it.
You have to dig a little bit deeper into it.
The other very pragmatic reason was we wanted to do a mobile version.
So I didn't want to bake tool tips into what people expected from the game was tool tips on mobile are hard.
And because I learned that lesson, we did a mobile version of Fallen London.
But part of it is intentional.
Part of it is mechanical limitations because the whole flow of the game is about putting cards experimentally in slots and kicking start to see what happens.
That works wonderfully when you're translating a text into another text using a language.
or when you're putting different ingredients in rites to see what creatures they'll summon.
That works great.
But because I've tried to do everything in the same mechanical metaphor, it's less ideal when you're sending people off on an expedition and you're mixing expedition locations with people and funds.
It's harder for the player to understand what's going on.
It's stuck in that one particular metaphor.
But that did also make it much easier for me to make the game because once you have the framework in place, I could just keep on cranking out content and it's a very content-driven game.
Most of the behavior is specified in the JSON text files.
Final thing, of course, is lack of polish.
This is a peril you run up against when you're making a game that's experimental on a short.
timescale with a limited budget, especially if you are primarily a writer and UX is your weakness as it was mine. I got a very talented UI designer, Martin Narokar, in to help with that, and Catherine Unger made the game look great, but it's not my strength.
And this was my big lesson, is that I said earlier you can only go so far with its art so it doesn't need to be good, and that goes double for UI.
You want to give players an idea of where the edge of the piece is, so they know when they're going off piece.
They're dealing with an unfamiliar experience with lots of peculiar design choices.
You don't want to disorient them.
Also, I've said a couple of times in this talk already, educating your players about your design intentions is vitally important, because it allows them to give you better feedback, and it allows them to educate other people.
And if the UI is murky, it's like looking through a smeared glass window.
So, ideally don't obscure your design intentions between the UI like I sometimes did.
Finally, I'm not alone in this.
If you are doing an experimental game and a small team and somebody on the internet says, oh, it's just rubbish, isn't it?
It's very tempting to say, You don't understand my vision.
And if the UX is clear, if people can see what's going on, it's much harder for you to hide behind that in a moment of despair or arrogance.
So it keeps you honest, keeps the players hand-roused to hang on to, and both requires and allows you to be clear about your design intentions.
In sum, be newt.
That's my talk.
Thank you very much.
And we have 6 minutes and 27 seconds for Q&A.
Hi.
Hello.
Hi.
Thanks so much.
I'm curious, you touched a lot on the why of not including a tutorial.
And I think it was a great decision.
But I'm curious about when in the development process that decision was made and how it might have required you to revisit some of the mechanics or changes or if at all.
Excellent question, and it was, when in the design process did we decide not to put a tutorial in?
So I decided this very early.
And one thing I didn't touch on in the talk, because it's more a design talk than a production talk, is that if you leave something like a tutorial out, well done, you've saved 10K off your budget, which is a bonus.
So that was the intention from the start.
But about two months before launch, my co-founder, and our publisher both started to get very nervous about it because a lot of people would start playing the game casually and they'd just bounce off it.
And when we took it to an event a lot of people said I keep putting the cards in the slots and nothing happens. And Lottie and Humble both said Maybe we should consider putting a tutorial in.
And I said, no, vision.
And more seriously, if we start telling people what they can do early on, they won't experiment.
They'll expect to have their hand held later and it won't be as interesting.
And so often when you've got a design tension like that, it was resolved by finding a third way, which was to radically limit the number of cards you could put in particular slots.
It used to be you could put any kind of card in any kind of slot.
And we said, no, the only things that can go in the work slot are abilities.
dobs right and that meant that nearly every combination the game that's possible has some sort of effect so the player doesn't feel they're banging on the wall and listening for an answer they feel they're there they always get a response the game is having a conversation with them so that's the answer to that.
Hello?
Hello!
Hi.
I thought it was really fascinating how fast the turnaround on a lot of your projects have been.
You said 11 months, 16 months, as little as four months for the general release of Fallen London.
But you also mentioned that you feel like something you would do differently is try to include more polish or things like a tutorial maybe.
What is the process for determining when you're done with the game?
Like when it's going to be released?
Is it purely budgetary concerns?
Like it has to come out now?
continue as a company or what is it?
So another excellent question is how do we decide when we're gonna finish production on these very short timescale games?
And the answer is to play chicken with deadlines, I think.
I'm a big believer in deadlines promoting ingenuity.
I take them seriously.
And when we took the game to events early on, we actually had our deadline printed on the banner.
I said that it would be... we did the Kickstarter in September, I'd done three months production privacy, released in May and we said 31st May was the deadline and people came up to us and said that's a bold choice, printing your deadline on there, but it holds us to account. We didn't crunch, we worked a bit of overtime towards the end and we got ratty with each other, but we just cut like crazy. In terms of polish...
Next time I think we would do, this is what we discussed, fewer features and a bit more UI work.
I think that's what would have made the difference, is prioritization.
Working to tough deadlines also really sharpens your estimation skills.
It's much easier to work to deadlines once you've worked to deadlines.
But all that said, next time we're thinking about is keeping a sort of a bucket of undefined time that Lottie will be the guardian of rather than me, but I have to make the case for spending time on, but we'll see how that goes.
That's great, thank you.
I have a question about failures.
Specifically, do you have any advice for drawing the line between calling something dead or starting over and trying something new to work with the same idea?
So the question is where do you draw the line around failures when you call something dead?
My answer, this may not be the question you're asking, but it's always ship it.
If you think it's going to fail, finish it up and ship it anyway, because even if it sells exactly zero copies, you will learn something from the process of finishing it and you will eschew regret.
I think, I mean I said all those things are failures, some are more failures than others, I think a little bit melodramatic.
Below, for example, never made its Kickstarter target.
Silvertree did make its Kickstarter target.
It raised money for the company, it kept people employed a bit longer, but it was not well received because we didn't do a great job of it.
I think, yeah, let your audience decide if it's a failure I think is the best answer I can give.
Thank you.
Thank you.
Thank you.
Hi.
Great talk, I love the game.
One question, what does the bird-worm slider do in the options?
Just trying to get a canonical answer.
It allows you to choose between bird and worm.
No, there is a...
We're all friends here, right?
Hidden in the game...
I think it's pretty fancy to call it an ARG.
It's not really an ARG, it's a series of puddles that lead to a series of rabbit holes.
And if you fiddle around with the bird worm slider and poke around, you might find the beginning of that.
Okay, thank you.
Hello, so I played both Sunlight Sea and the Cautious Simulation.
I think both of them are very great.
Thank you very much.
And I just think also the mechanic is something that I am really impressed.
Like the cards, combine the card and the TRPGs gameplay and like put the cards into some actions to do something.
I just wonder how you get that idea.
I've always loved cards, even before London was card based.
I think for two, for three reasons, really.
No, it sticked with two, it was a short of time.
For two reasons.
One is that if you are a writer who likes short, concise, pithy text, then cards are great because they give you a natural limit to write to.
And also, if you are working on very low budgets, cards are great, because to add content to the game, you add some text, you add some behavior, and you add a little image.
I guess the third thing is that they come with a bunch of expectations that fit into the metaphors that you can then play with.
Like, you know, cards, you often have a limited number of them.
You often get rid of them by playing them.
And it also allows you to subvert those expectations.
Like in Cultist Simulator, some cards have a timer on them.
Contentment, for example, only lasts 30 seconds.
And after 30 seconds, when you first see your card on the desktop suddenly burn up in a wisp of flame, you remember that moment.
So did you get it from the very early stage of your design?
The very, very earlier stage was the Graybox JavaScript prototype.
And I don't think I thought in terms of cards then, but because I wanted to do something where the mechanics were exposed, we very quickly got to the idea of a desktop with some sort of tokens or board game-like pieces on.
And at that point, cards, for all the reasons I mentioned below, were immediately the option.
We had a lot more time, a lot more trouble narrowing down on the tiles, the verbs.
There were going to be gems.
There were going to be drawers.
There were going to be stones.
But cards were there as soon as you said it was board game-like.
Thank you.
I'm sorry, Alex.
We have run out of time.
And we do need to move the questions across the hall to the wrap-up session.
Thank you.
Thank you very much.
