So my name is David, and I made a indie game with a very talented team, and I'd like to talk about that.
Probably some of you haven't played it yet, so the easiest way to describe Six Ages is it's a King of Dragon Pass-like.
in the true style of games referencing other games.
But this is a genre of probably only two games.
So I'd like to talk about what makes Six Ages unique, and by extension, what made King of Dragons Pass unique.
So some people say that the game is sort of a cross between a choose your own adventure and civilization, and really neither of those is true. On the other hand, I don't think Touch Arcade is completely wrong. It does combine narrative and a turn-based economic game, but it's trying to do things that neither genre alone can do.
The shortest description of the games I've seen is, it's a strategy book.
This is what one of the players said.
So the game is, in fact, a combination of strategy and book.
You're guiding a small clan of the Rider people, rather than any one individual, or even a group of heroes.
Your clan recently migrated because during the Gods War, your city got buried under a glacier.
The core loop of the game is to take actions, which are sort of the turn-based strategy side.
For example, a venture there, like expanding your fields.
As these actions take time to do, events will occur and you respond to the events.
So the strategy game is sort of a skeleton on which we can add stories.
So that's sort of what it is, and I'm going to talk about how it works.
Unlike civilization, it's all about cows.
We actually do track a few more economic variables, but really it's all about relationships.
Your clan's relationships with the neighboring clans is as important as any economic resources.
You can go to war, but unlike civilization, you definitely cannot conquer all your neighbors.
What you do instead is influence your relations with them, for example, by sending an emissary with a dialogue there, and equally importantly, with story decisions.
The game tracks a lot of different relationships between clans.
One of the key things, I think, is that favors are one of the currencies of the game.
So as a book, there are over 400 interactive scenes.
There's three of them shown there.
The scenes usually have four or five responses.
It's not choose your own adventure, though.
In the interactive fiction lingo, it's probably a floating module.
There is no single line that goes through the entire story.
But these floating modules do connect.
largely through the political and economic model and we'll also try to have as much intention to these as we can. For example, we might choose a particular clan to intensify the stakes of a situation.
These scenes can also end up with multi-year storylines.
For example, you may have a chance to see those rootless riders in the center again, depending on how you treat them.
And we try to draw the entire story to a dramatic and emotionally satisfying conclusion.
So the game has about as many words as the first four Harry Potter novels, but not all in a row.
It's got a lot of repeatability and there's a lot of variation.
We set the story in the world of Glorantha.
This is a extremely detailed and realistic world, and it helps us have an immersive background.
You can sort of think of it almost like a character in the story, like Hogwarts is in the Harry Potter stories.
Glorantha is a complete world with a mythology and cultures.
It's sort of as if our background was already play-tested.
And the late Greg Stafford began writing about Glorantha over 50 years ago.
I'm picturing there the 800-page guide to Glorantha, which is over 6.3 kilograms of information, or 14 pounds if you're American.
But we actually sort of play in the spaces between that, extrapolating from kind of just a few paragraphs in that.
The setting gives us the main conflict in the game, which is that the main god of your neighbors killed your main god, and that's what set in place your migration.
It also gives us a pantheon of deities, which provide magic.
This impacts the economic model, including combat.
But we try to make magic more than just sort of something mechanical.
It's not always going to be, well, you get plus 2 in combat.
We try to make it feel like magic.
And that means it needs to have a much fuzzier feel.
One of the best examples of that is that we have the ability to let the player enter the world of mythology, cross over to the other side, and play through a myth.
They reenact the stories of the god, and they get magic.
And the outcome of this is usually quite fuzzy.
You're basically making your own story.
And if you've actually played King of Dragon Pass, these are sort of the myths that you know from the King of Dragon Pass days well in the future.
The goal of all of this is to make an immersive experience.
Sort of the summary of this is I want you to be playing the story, not the game.
And just a quick reminder that just because it's largely text-based does not mean it's not immersive.
Our approach to immersion is that we try to make the player know what someone in the world knows and not have gamey things intrude on that.
One of the things we have to do is introduce you to what you would know if you're in the world.
And we start off with a clan questionnaire, which helps introduce the history of your clan.
It's not a show, don't tell, but it's a do, don't show.
So we can avoid an expository lump.
And this also makes your clan's back story the player's back story.
It's sort of like character creation in a lot of games.
And it does not only initialize the story situations you're putting your clan into, but some of the economic model as well.
The problem is that the players are probably not members of the writer culture and we don't want to penalize them because they don't know as much as someone in the world would know.
So the solution is to have advisors.
These are leaders that will basically have three roles in the game.
They'll provide information.
They also act as your playing pieces.
And they have their own personalities and become sympathetic characters, which helps enhance immersion.
Because the advisors are so key, the player gets to choose them from a pool of leaders.
So advisors will give in-world information about, like, the state of the economy and the relationships.
They'll recommend actions, and they'll also remind you to do things that you would do if you're running a clan.
As the game progresses, your advisors will get older and eventually die of old age.
They have skills which are used to overcome obstacles and also relate to the kind of advice you give.
For example here, Ave 2 is heroic and magic, so...
She would probably be someone to listen to if she's talking about magic, but if she's talking about a diplomatic situation where she has only a fair skill, you might want to listen to one of your other advisors.
Advisors all have personalities.
We â€“ and their advice, as you can see, can sometimes reflect that personality.
We do try to prioritize skill-based advice on the assumption that that's what the player needs in order to succeed.
So to give advisors personalities, there's 33 personality traits in the game.
They are randomly generated.
Every advisor has only two personality traits, which is kind of pretty limiting for humans.
But we want to make sure that over the course of the game, they can be noticed by a player.
Some of the traits are contradictory, so we make sure that when we randomly generate them, a character gets only something that makes sense.
You can't be both optimistic and pessimistic, at least not within the scope of this simulation.
And while a character's religion is not actually a personality trait, that also fits into the valid combinations.
If you worship the war god, you're not going to have a personality trait of peaceful.
So why do we have personality in the game?
Well, as I mentioned before, it drives advice.
But more importantly, it'll drive action.
Your advisors are people with their own personalities and their own agendas.
And they'll go off and do things on their own without you asking them or even wanting them to.
So we try to be fair to the player and only have something like this happen after you had a chance to witness their personality.
And if it's visible at the bottom, you can see a little bit of script that a character has to be on the clan council for at least two years before this scene will show up where the goat fan starts inviting people in and you, the player, have to deal with the situation.
Personality can also be a positive thing.
It can be a modifier in many situations.
Or you wouldn't send a merciful character or a peaceful character off to intimidate someone else.
you might send your harsh character.
So advisors being people sometimes have conflicts with each other.
The situation here, one of your advisors has told the buzzard people they should try harder to fit in, and another one is reminding him that the correct term is not buzzard people but adoptees.
I think in the game, some of the best writing is in advice.
And that's probably because it allows us to have a viewpoint instead of just presenting facts, like we have 12 cows less.
So let's look behind the scene at how strategy and story work together.
We have our own domain-specific language.
I called it the Opal Scripting Language, after an old code name for King of Dragon Pass.
It's a domain-specific language, and it was kind of designed around something that would be easy for our writer to use.
At the top there is a conditional response.
This condition depends on several functions.
We generate a list of clans, and then we filter it to see if we have any clans that are not feuding, because this response wouldn't make any sense if we don't have anyone we could trade it to.
As the script executes, the first thing that happens is a choose clan function.
And that just puts up user interface where the player gets to choose a clan.
Once they do that, we start doing things like looking at the relationship with that clan that the player picked and calculating a modifier.
There's also modifiers based on your own allocation of clan magic and just as a shorthand where it says .ritualmagic, that's our clan, .ritualmagic.
This makes it a little easier for us to read.
And, whoa, that's too fast.
Once they have chosen and we calculate the bonuses, there's the test, which I was talking about earlier.
This is going to take whoever on your clan council has the best bargaining skill and challenge them to make a bargaining roll, basically.
And this has two possible outcomes.
They could win or lose.
And we also set a degree of success.
It's by convention the variable Q, which lets us have like really terrible failures or marginal successes.
And I think this one here is a marginal success.
They get a handsome price, but it's the smallest possible handsome price.
So the scenes are our major building block of procedural content.
There's also some other types of scripts.
For example, news can also be interactive, but it's not illustrating.
It doesn't have advice.
Scenes in general can have conditions on them.
This one occurs only if a variable is set to true.
A lot of the time, a scene is a consequence of something else.
Oops, I skipped ahead.
Things can happen when conditions occur.
This one's checking if a variable has changed value and can do appropriate things.
Scenes are often consequences.
Here we're triggering another scene three seasons after right now.
And this is also one of the ways we get those longer story arcs will trigger scenes that will happen in a couple of years.
It also lets us have bonuses that will expire after a certain time limit.
One difference between Six Ages and a lot of games is that we'll only show relevant items.
And that's because you're someone in the world, and you don't really know what might have been.
If only you had more clan magic, you could have drawn on it, but it's not something you would even consider.
There's no might, what might have been.
The scenes are managed in a scene queue, which is a priority queue.
The granularity is a turn, because we're a turn-based strategy game.
And this is basically how we can add time to the narrative and handle those long storylines.
Because something may change once you've triggered something in the future, the character that it relates to may die, so you will have the ability to pull scenes out of the queue.
Generally, we look at what's in the queue and run it.
But if there's nothing right now in the queue and it's time to run a scene, we will pick a scene basically at random.
These unscripted scenes are how the emergent narrative comes into play.
Most scenes in the game are unscripted, but, which doesn't mean they're truly random.
There's always conditions on them.
We don't pick a scene that's already scheduled to run in the future, because that would start making unnecessary repeats.
On the other hand, we do have the capability of repeating scenes.
Not every scene makes sense to repeat.
And even if they do, we try to keep a scene from happening.
I think it's nine years, nine game years, between a repeat of a scene.
Otherwise it would start feeling, well, repetitive.
Scenes can have conditions because they don't make sense, either maybe in a certain time of the year.
It doesn't make sense to have something that's not related to crops unless it is crop season.
Doesn't make sense to have someone offer to sell you something if you couldn't afford to buy it.
And some things just don't make sense until you've played for a while.
So one of the goals of the game is to have a very high replayability.
And procedural content is a great answer for that.
You really don't know what to expect between games, because scenes repeat only rarely.
You don't get the same set every game.
The text itself is also procedural.
And we have what I would categorize into two forms of placeholders.
The alternatives are just a way to keep the text different each time.
For example, here you could be getting a gift of cedar wood or yellow dye.
And contextual placeholders are filled in with the value of a variable.
In this case, other clan is whoever it is that came to you offering this gift.
The value of it is g, and the tilde there just means this is something that's worth spelling out as the word, like, t-w-o, two, and either cow or cows, to make it grammatically correct, depending on the number that's being offered.
It's not just these contextual placeholders.
Pretty much everything in the game is contextual.
If a clan is coming to give you gifts, it matters an awful lot whether that's a clan that you might have an alliance with, or if it's a clan that's feuding with you.
So we really are leveraging humans' ability to extract patterns from things that may not officially be related and find the relationship between them, which is apophenia.
So I may have skimmed by the fact that there's a lot of tags in the game.
These are a way that we can help categorize the scenes, and that helps integrate the story in the economic model.
I told our author to make up tags as needed, and we ended up with 135 different tags.
These are all attached to scripts.
The at sign just makes it stand out.
And there's sort of a way to solve the problem, what scenes should be affected by a bonus?
So if you have done something where the spirits are going to give you good luck with animals, we need to know what scenes relate in some way to animals.
So we tag them with the animals tag.
At the same time, a tag may not apply to an entire scene.
It may apply only to a specific response.
You may have the choice to either rely on the gods or rely on spirits.
And if you chose the spirit branch, then we'll add the spirits tag, and that makes sure that the appropriate bonuses will apply.
And some tags ended up just being informational, just to look at a scene and say, oh, this scene relates to Act 3.
We have an act structure loosely, but it's not enforced by anything.
There's no code that checks that particular one.
So one of the challenges in making an economic model and a story that relate to each other is if there's a consequence, did you notice it?
And we want to make sure that on the flip side, if the economy has a problem, is this something that we can have matter in the story explicitly?
And the solution that we ended up with is something I'm calling concerns.
Their purpose is to make problems in the economy very visible to the player and give us something that's an interesting story decision when you have to deal with that.
They can actually either be something that's bad, which is a stress, or it can be something that's good, which we call a bounty.
And they're always something that should be meaningful.
It's not just going to be a little plus one that.
actually does make a big difference.
If they keep playing the game for 30 game years, a plus one will accrue and be very significant.
But that kind of thing is very hard for humans to perceive.
So they're going to be big enough.
And an example here is when you have the chance to have your crafters make story tent fabric, that will end up distracting them from their other chores.
And you'll get a craft stress.
concern. This means you'll have a penalty on your craft productivity for, in this case, five seasons. These concerns are cumulative. You can actually cancel this out if you've got a bounty in some way.
The concern idea actually originally came from the fact that we wanted to show the economy visibly to the player, and we ended up leveraging that into a larger thing of concerns.
And they still do get shown.
Concerns are all shown in the dashboard next to the menu buttons.
And they're also something that your advisors will typically comment on.
Concerns are usually kind of an ongoing thing, like that five-season craft stress.
But it turns out we have sort of shorter things that we leverage the concern system for, like a warning.
If you're running short of warriors, that's not something that's an ongoing problem.
It's just right now we're short of warriors.
That's a warning, and we'll also show that in the dashboard, and of course, advisors will remind you that you're kind of getting low.
Unlike a lot of games, you don't actually have to worry about telling your people what to do.
We assume that an agrarian clan knows how to feed itself.
At the same time, there still can be problems that arise with that.
But you don't need to worry about counting the beans, because it's actually really hard.
Again, it's something that's hard to wrap your brain around, at least for us modern people, because food comes in mostly in harvest time.
if you, even if you knew the exact amount of food that you had, you'd still have to sort of do mental calculations to compare it against the number of people and, but wait, this is the, this is the winter time and we don't, we're going to be not getting much right. So it turns out having less information, that's sort of less transparent is way more useful and we show the number of seasons of food you have.
Again, if this is problematic, we're going to let you know.
But most of the time, you have a few seasons, it's far more useful than knowing that you have 1,000 bushels of food or something.
Every game has to test.
A few things that are different in a game like this is that we have a new form of logic error, which is problems in the story.
Apophenia is a two-edged sword.
The players will expect patterns to be true when they may not be, in a way.
And the fact that everything is context sensitive makes that more of an issue.
We may have a scene that runs just fine unless you happen to have an ally and you attack them.
And if the game doesn't notice that you attacked an ally, the players suddenly no longer immerse.
They think, oh, this is just code.
This isn't a real story anymore.
So.
Our testing has to focus on the story problems, and as well the fact that everything, the context of a scene could be very different every time it's run.
And one way I try to make that easier for us to test is to do a lot of automated testing.
I can run through every response of every scene and make sure that there's no gross errors, like crashing out or.
ending up with a zero as a value when it shouldn't be.
And there's a bunch of sort of stress tests on that.
If you have no goods at all, does the scene make sense?
Exhaustive QA just means we go through every response of every scene and every branch, and possibly with different variables set, and make sure that it makes sense as a story.
Another thing QA did was to make.
aware like what's not in the game.
This is all testing the trees.
And we'd still need to know if the forest makes sense.
Some of the challenges of my approach to showing you only in-world information is that it may not be as transparent as a lot of games.
Difficulty is something that we try to mention with advice.
Players of King of Dragon Pass often complain that they didn't know why something failed.
So we've added the.
Typically, an advisor will explain either how you could have done better next time or an explanation for why something didn't work.
We also try to show as many consequences as possible in the dashboard or here in the magic screen lists all the weird little bonuses you might have accrued.
And you can also lose immersion by stopping playing.
And the game doesn't have arbitrary save points that you have recognizable places that you were.
It saves automatically.
So you're picking up and where the hell was I?
Advisors, again, will try to remind you of that.
And there's also a saga, which is automatic note taking, which you can refer to to see what you had been doing.
And finally, the goal of the game has been kind of a problem.
Unlike King of Dragon Pass, where the title is the goal, the goal is kind of behind a plot twist in this game.
It would kind of be like telling you at the start, hey, little farmer, you're going to blow up the Death Star.
And we can't really do that.
But.
So I'm going to wrap up.
And Six Ages is a game that really tries to balance both story and strategy as equal partners.
We try to make a game where you're playing the story and not the game.
One of the key ways that we get there is by having advisors who are empathetic characters.
The overall story is multi-generational.
Our procedural narrative exploits apophenia to get even more meaning out of our assemblage of scenes.
We try to do everything possible in our scripting language.
And we have the concept of concerns, which are sort of a quantized unit that helps integrate the story and the strategy game.
So what questions do you have?
I think I have a few minutes left, about two or three.
Please get up to the mics so people can hear you on the audio.
Hi.
Thanks for sharing all this.
So you put a lot of effort into the replayability and the procedural narrative and the logic behind what could repeat and not repeat.
But the game is kind of a long game.
It sounds like you're literally playing through years and years.
How much was the return on investment for that?
Do people really enjoy replaying it?
And was it worth the effort?
So the King of Dragons Pass answer to that, because that came out a lot longer, is that it's insanely replayable, and people have been playing it, the same person has been playing it for years in some cases.
A lot of it was more just so that you could lose the game and try again and see a somewhat different story.
So I think it's been worth it just for that.
It's not a single story that you go through.
People probably don't need to play it as many times as they did with King of the Dragon Pass, but I think it was worth it.
If I can follow up the oh, was it lost?
If somebody lost the game and they tried to recreate the same path, you know, except for the very end, is there enough random event in there that it would be different anyway?
I think every game is going to be different. The overall goal of the game ends up being the same every time.
Although you can get there, even that's got some variation.
So winning is not always identical either.
Thank you.
Thanks for your talk.
Um, regarding QA, I imagine it must have been a tremendous task.
Is that something that the, uh, the engine or the scripting language that you guys developed helped you do, or was it just, you know, um, manpower that got through?
It was pretty much other...
We did have the unit tests that automated a lot of that.
The scripting language...
The script compiler can find a small category of errors itself, and I would add more to that.
one of the, it wasn't quite the language itself, but a lot of errors ended up being something that would happen multiple places.
So I would, we'd find an error, and then I would sweep for similar scripts and correct it before QA found it.
Okay, thanks.
You mentioned that despite the randomization, there's still a clear story arc to each play through.
Do you have time to elaborate at all on that, on how you accomplished that?
I don't think there is.
Well, there's no single story arc that you'd ever get.
There are some sort of tentpole scenes that we think you need to get to get the full experience.
But those are never going to be exactly the same.
The context is almost always going to be different for those.
And you can certainly go through, even some of the, they're not tentpole scenes, but there's some significant smaller storylines that may never occur in any one play.
So it's mostly that, you know, as in King of Dragon Pass, you're trying to end up being King of Dragon Pass and your story's always going to be, always going to be at the end becoming King of Dragon Pass, but the story along the way is very different.
And these things will, random scenes, even the same scenes will come up in different orders and that the context makes it very, very different.
Thank you.
Okay, I guess we went over a little bit.
Thanks for coming.
