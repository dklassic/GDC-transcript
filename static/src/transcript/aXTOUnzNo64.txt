So yes, this talk is about efficiency for game designers.
It's gonna draw a lot on what I learned making my first game, Gunpoint, which looks like this.
We'll see how the volumes go.
Thank you.
Do we have sound?
So it's a game where you're breaking into these high security buildings.
You have to get past all these security measures, and the way you do that is by using a crosslink device.
are...
I'll just make that better a bit.
Now, all the electronics on the level are wired up, so you can see which light switches connect to which lights, and then you can also drag those connections around, so you can set a light switch to open a door instead of turning on the light.
Or you can set a security camera to open a trap door instead of setting an alarm.
Or you can set a light switch to trigger an alarm.
I don't know why you would, but you could do that.
So, that was...
Also you've got to play with upwinders a lot and punch people in the face repeatedly.
Those aren't the integral concepts behind the game but they did go a long way to making people like it.
When I started it I had done some programming in school but I'd forgotten all of it and it was in Visual Basic so it was completely irrelevant to game making as far as I know. I certainly couldn't remember a line of code.
I'd completely forgotten all of it.
I didn't know what I was doing, I'd never made a game before.
And I didn't have a game budget, I had my life savings, and I spent a chunk of that to come to GDC one year.
But other than that, there weren't any major expenses for the game.
$30 to buy GameMaker.
And I only worked on my weekends, and that's kind of the important one, because the title of this talk is Lessons Learned Making Gunpoint Quickly, and Gunpoint took three years.
And Gunpoint is only three hours long, so that's not like a great rate in calendar years, but I was only working on my weekends.
I was doing a full-time job while I was making it, so I was a writer for PC Gamer at the time.
I my best guess is probably about a year full-time development equivalent to.
And since I was also learning how to make games in that time I feel like that's relatively quick for what it is.
And in particular it's good because it succeeded on pretty much every level I cared about.
So it sold well enough for me to quit that job.
I was able to leave PC Gamer and become a full-time indie developer, which I have been for the last, it's been nearly two years now since it came out.
And it went down really well in the press, got really good reviews.
I'm happy with it, which is quite important.
We've been porting it to Mac and Linux.
took nearly a year after launching it and during that process, that was done externally but I was having to test, obviously to check that the build was coming along OK and you could still play through the game and this is after having spent 3 years making it, which also involved a lot of testing and every time I needed to test a new build, I was like oh god, I can't face playing it again and then as soon as I started it up, it would be like oh yeah, this is quite good, I quite like this And I think pretty much every time I've played it through, something has happened that's never happened before and has made me laugh out loud.
So that's my personal metric for success in terms of me being happy with it.
And the last one is it didn't destroy my life, which is often a bonus in any game development process, despite the fact that I was doing it on top of a full-time job.
So I think it would have been easy to completely burn out doing that, right?
That's why I only worked on weekends.
I didn't work in the evenings.
I was trying to kind of keep some kind of sane balance and keep my mental health.
So it was, it went very well for the amount of time that I put in.
So that's me defending my credentials to give this talk because it's quite a kind of grandiose title, I think.
I kind of regret that.
So.
Also, the other part of the title is lessons learned making gunpoint by me about my process and stuff and I'd like to just sort of make sure it's clear that that's the tone of this, I'm not sort of trying to dictate how you should do everything, it's just stuff that I found useful and it will involve a lot of stuff that I learned but then kept forgetting it's kind of like I mean being efficient we probably already know that's a good thing right but actually practicing that day in and day out is trickier and there's a lot of things that it's difficult to keep reminding yourself of how to do these things right and so that's going to be mostly what this is about so when I say efficiency I'm talking about this value for players divided by work for developer.
and also it's not an equation you never plug numbers into but it's just kind of the definition of the word in this case and values of the incredibly vague.
If I was still a games journalist, I would be unhappy with using that word because it's too vague, but that's intentional because I could put fun in there, but not everyone is trying to make a game that's fun that's not everyone's objective anymore and that's a really good thing.
And.
the kind of calculations you can do the sort of tricks and the uh... the ways of thinking about uh... redesigning a game to be more efficient or to uh...
uh... figure out a better process for making it aren't specific to making a game that's fun. They're not specific to making a game that's kind of uh... even enjoyable. You could try and make the worst game in the world and all this efficiency stuff would probably still apply to your attempts to make it terrible.
That's probably a niche case.
For me personally, I define value as it's not really fun.
For me, I'm kind of, I always hope to make a game that's exciting, so I'm after a very particular kind of, I guess, intense fun.
So it's kind of related to that, but I feel like fun sounds a bit narrow.
I always imagine a really satisfying shooter when you say fun.
And for me, I'm looking for that moment where...
We're playing a game and you suddenly kind of your mind lights up when you kind of grasp what you can do and you're like, oh my god, I can do that, that's incredible.
So that's my definition of value and it'll probably be different for everyone here.
But hopefully it always applies regardless.
And work for developer, you can find that as, for me it was just my time.
I did everything except the art and the music on Gunpoint, so programming and writing and design is all me.
But obviously if you're working in a team, then other people's time also factors into that, and actual expenses, which I didn't really have to deal with.
But yeah, that's a hopefully pretty simple concept, but it's worth just defining what we're talking about.
So the first thing I learned was to forget about looking for good ideas.
Like, before I started making games, when I was a journalist, obviously I spent a long time analyzing them.
I spent about nine years analyzing video games and trying to articulate why they were good and why they were bad.
But the thing that was missing from all of that analysis was I didn't know how it was made, or how difficult things were to make.
And so I could only judge whether something was just a good idea or a bad idea.
And so I thought, well, making, like designing a good game is just trying to think of the best ideas, and then you make those.
You make the best ones.
And what I quickly learned actually trying to make one is that...
that's it's basically impossible to consider or it's stupid to consider the value of an idea without considering how difficult it's going to be to make so just looking for the good ideas without considering how hard that to make doesn't get you to the best game because you're going to have to make them it's going to be a real actual cost to it and and that cost will determine how much you can make of your game, how much you can work on it I think almost every game is released at a stage where it would have been nice to work on it a bit longer and there were things that you could have done to make it better and so efficiency is about maximizing that, it's about figuring out how to do the most good in the shortest amount of time and it's up to you which one of those you want to optimize, like all these things could be used to take the same amount of time to make a better game or they could be used to make a game of the same quality in less time or some combination thereof So to illustrate, I'm going to talk about Heat Signature a little bit.
This is what I'm working on now.
This is my next game.
It is a top-down space game.
You're flying through this infinite galaxy.
You are encountering all these randomly generated ships, and if you dock with one, you go inside, and then you see all the crew walking around.
You can hit them with a wrench, as I just did there, and I think I'm about to...
Oh yeah, so that guy's gone.
Then I smack him in the face with the wrench, and you're trying to like...
either steal something, or in this case I'm trying to assassinate that guy who's circled in red.
And it's all about kind of like these randomly generated ships and their systems.
And when I shoot this guy, my bullet hits the fuel barrel, it blows up part of the ship, we get sucked out into space from the vacuum, and then I remote control my pod to come and pick myself up so that I can go about on my next mission.
So it's a big kind of randomly generated, it's going to be kind of a roguelike type thing.
I think I'm just about to catch myself, yeah.
So that's it, I'm back to the start now.
And something people often say in the comments and the videos of this on YouTube and stuff is Hey, you should have planets you can land on in this game.
And I agree, that's a really good idea.
That's a thing that would add a lot to the game.
It would be a major change in scope and context.
It would be a huge deal if there were planets that you could fly up to and land on.
That would really massively expand the scope of the game.
it is a good idea for heat signature.
But my best guess is it would probably take about five weeks to make.
I mean, it's really, really hard to guess, and I'll talk about later about how to deal with that uncertainty.
But I've given it some thought, and I think it's such a huge thing that it would take that amount of time.
I think most of the first week would just be thinking, how the hell do I do this?
It might involve compromising the...
the actual kind of some of the things I'm going for with the game which is kind of consistency like you saw when I boarded that ship we didn't change into a boarding mode or anything the camera stays where it is you just zoom in a little bit and it's all one game so landing on a planet a planet would consume you know the entire game world you couldn't ever see it on one screen except by zooming out absurdly it would just be extremely difficult to integrate so it's a good idea but it's very very difficult and if I was going to spend five weeks on something which I am because I'm still working on this game I would much rather do something like this bunch of stuff.
And this is a lot of ideas where each individual one is not as good an idea as having planets that you can land on.
They're all just a bit more modest in their scope.
they're all less ambitious, they just don't really amount to, or each individual one doesn't make such a huge difference to the game.
The first one here is in this time I could add space stations that you can dock with, I do plan to do that.
And that actually fulfills a lot of the goals of adding planets, like I think when someone says they would like planets in the heat signature they're kind of probably responding to the fact that it seems like a big mishmash of random stuff floating around in infinite space which is completely accurate.
and having space stations that are like at fixed locations that you can dock with and you can go aboard and like go to a shop and you know restock your supplies buy new upgrades um get a new mission from some kind of job listings board um that actually i think checks a lot of those boxes i think it make it will give the galaxy a kind of feeling of geography, there will be places that are important to you, there will be a home base of some kind.
And so it does a lot of things that a planet would do, but because it's a space station, it's man-made, and that means space stations basically look a bit like spaceships.
And I already generate spaceships, so I can use all the same kind of ship generation algorithms to make a space station of some kind.
I'll have to tweak them a little bit, so it'll take about a week.
but it's not a a massive massive job and because i think it's weak and i think it's five weeks i don't want to lose other stuff so i can have randomly generated weapons i can do upgrades for ship i can uh... given to your doors to the ships that you can mess with so you get to a central computer and then you can like me but those doors to seal them in locker garden and i cannot hold galaxy maps you can keep zooming out and see what stations are in a sense for the kind of the geography and that like the context for your missions and I could create factions that all these ships belong to and the factions would fight each other on site and you'd be working for some factions and trying to undermine the others this is like a large chunk of everything I have left to do on the game and it still doesn't add up to being as big and difficult a thing as the planets thing so these are a bunch of small efficient ideas and they make the game better than the one big good idea.
Even though the idea is better than each of these individual things.
And I think when I say, if I just say it in abstract, the reason I've gotten into a lot of detail on this is that if I just say in the abstract it's better to work on a lot of little efficient ideas than it is to work on one big one, in a lot of cases, of one big good idea.
then it sounds like I'm saying be less ambitious.
It sounds like I'm saying don't, you know, shoot for the moon, don't try and make your game amazing, just try and make quite a good game.
And that's not at all what I'm saying.
I'm saying make a much better game.
Make a really incredibly exciting, complicated, amazing thing by focusing on efficient ideas because they will make you, they will make your game more ambitious without actually increasing the amount of difficulty of creating it.
So when you're trying to judge whether idea is valuable and how its value relates to how difficult it's going to be to make. Like I say, value is very vague.
If we were to take fun, for example, then when you consider some idea you're thinking about making, and you probably have an idea of how fun it will be to do once.
When you experience this thing, it will be this much fun. Landing on a planet will be this exciting. Or going around these space stations I'm thinking about adding.
This will be this good.
that's probably the intuitive thing. I think that's the part where that's what we think of when we think about estimating the value of an idea but there are some other considerations like how many times will one player get value out of it?
Like if you're going to have if you're making like a sort of scripted encounter where you're like the player character in some game is fighting a boss and they're gonna it's gonna be a shitty quick time event and you're gonna press triangle to punch the boss in the face and you're working on like how satisfying that punching the guy in the faces then it's worth thinking about how many times is the player actually going to experience this probably just once if it's a actual plot moment but if that's part of a you know take down that you do in that kind of game uh... where every time you attack an enemy you're going to be doing that punch then one player is going to experience it hundreds of times perhaps the next one is how many players will experience it and this one there's some kind of uh...
this might be slightly controversial I can imagine my friend Jim Crawford who makes frog fractions giving a whole talk about the opposite of what I'm about to say.
But I think it's worth at least knowing, at least thinking about how many people are going to experience the thing.
So if that punch moment that I was talking about was taking place on the critical path then like in the main.
threat of the game, the thing that every player is going to encounter, then that's all of the players, that's the most.
If it's something that only happens if you happen to open like a secret door and then a guy ambushes you and that's when the punch occurs, then only a tiny percentage of players are going to experience that.
And that doesn't mean it's not valuable, it can still be worth putting a bunch of effort into something that's very, only a few people will find.
But if you're going to do that, that value value, sorry, that value will have to be much greater.
If you're going to work on something that only 1% of players are going to see, it better be fucking great.
They better talk about it to everybody they meet.
And they'll be more excited about it if they know that they were in the 1% who experienced it.
But it's still going to have to be memorable.
It can't just be punching a guy in the face.
So, I guess it could be.
But that's probably not the best way to do it.
And then the last one is, is it the type of value you care about creating?
So I talked earlier about what those types of value might be.
Like for me, it's excitement.
I really care about stuff that, like I say, opens your mind up to possibilities and makes you think, oh wow, I didn't realize I could do that.
suddenly kind of, I love that moment when like the mechanics that you've learned kind of flower in your mind and you can kind of grasp how how much freedom and creativity they give you but you haven't quite thought it through yet so it seems kind of magical because you don't understand it yet. I love that.
So that's the type of value I care most about creating.
But gunpoint was full of uh... it was a the story gunpoint is a kind of noire tale about uh... betrayal corporate espionage murder affairs uh... and then when you play it you're opening a door in someone's face to knock them out and it's basically slapstick and so it's got slapstick in it it's got uh...
it's got uh... quite a serious plot and it's got a lot of different types of things that are kind of tonally quite incongruous but they were all things i liked, they were all things i cared about so i worked on those things and hopefully they kind of fit together So I've been talking quite in quite a black and white terms about value and how long things are going to take and if you've actually worked on a game, you know that these things are by no means certain.
You often have very little idea ahead of time how hard something is going to be and sometimes you don't know how good something is going to be when you're thinking about a feature or some addition.
it's difficult to know how much it will add.
Sometimes it's difficult to know how hard it will be.
Sometimes it's difficult to know either.
So, obviously you have to deal with that.
The way this is written, that's the most facile thing I've ever said.
But what I'm hopefully going to explain is how to deal with uncertainty, how to factor it in.
So, if you have an idea that you are pretty sure...
it's going to be good you can sure it's going to add something it's going to be an exciting addition to the game.
But you're not sure whether it's going to be easy to do you know it's going to be quick.
Then.
What I kind of the conclusion I came to is that you just try it just give it a day or whatever period of time seems appropriate to explore it to see if it how hard it really is and then you'll have more data on.
the size of the task, like how complex it's going to be.
You probably won't know everything about how long it's going to take, it won't give you certainty about that, but it will give you a lot more information to work with and you'll have a much better idea of whether it's worth it.
So my example for this is...
come on. I'm going to be back so it's my voice.
And I knew come was going to be short and you I can make about 20 levels in the time I had I don't know a strict deadline, but I didn't want to spend years and years making hundreds levels.
So I knew the game was probably going to be about 3 hours long I knew people complain about that and I want to shut them up.
So I thought about I knew it would be great if I could have a level and you that would really kind of just make it.
harder to criticize gunpoint for being short people still would I knew they still would but I wanted the line in the review that says gunpoint is too short to change to gunpoint is too short but as a level it's because then it's a positive you see.
So I knew it would be it would be massive if I could do it be a really huge win but I would like to say as a novice coder I was barely keeping it together making a game.
So the idea of making a level editor was actually pretty daunting, because now you're making an application.
You're making a piece of software that essentially creates a kind of document and saves it in a new file format that I would have to invent.
And it would have to have an interface and buttons and stuff.
And so it was daunting and very, very uncertain.
I knew it would be good. I was very uncertain about whether it would be possible, whether it would be quick, whether it would be feasible.
whether I could do it in an amount of time that would actually make sense and be possible for me to do.
So I just, I did, I took a day.
It was a Sunday. I decided to just try making a level editor, just jump straight into it.
I had a pretty, I had this kind of idea for how those buttons would be laid out and stuff, just sort of rough concept of what form this level editor might take, and this thing where you kind of drag and drop items from the...
from the interface into the world that was kind of stolen from Portal 2, sorry, yeah, Portal 2.
When they added a level editor to that, it had this really lovely, intuitive feeling of just picking stuff up and plonking it down.
And at the end of that day, I had...
it working basically i had the buttons they had the sprites for the from the objects the represented i can click on them i can drag them into the world and and just worked it was by no means a finish level editor and i had about five things you could place but i could save them to disk like as a kind of text file essentially the text files are just lists of all the objects in the level and they just say where they go uh... so it's incredibly primitive but it worked and so i knew then I still don't know how long it would take, but I had a pretty good sense that oh, this is doable. If I can make something that roughly works in a day, I can make the whole thing in some kind of reasonable amount of time.
I'm going to let this play out because I really like the solution to the level I made here, which is to smash the window, and then the guy hears the sound, runs upstairs, walks to the motion detector, which you've wired to the door, and then you get in.
The level editor.
The question was, did I make the level editor in GameMaker? Yes, I did.
In fact, I made the levels in Gunpoint in GameMaker, and then at the end I did the level editor because it was a lower priority thing, and I made that in GameMaker as well, and it was way better than GameMaker's level editor.
For Gunpoint at least, it's much better to use.
And so like, shit, why didn't I do this first? Because then I could have made the levels in it.
So the other possibility is what if you're certain that the thing will be easy, but you don't know how good it will be so that the value of it is the unknown, but you're pretty sure you know how to do it. It's similar to something you've done before an example for this would be.
come when I was going to pause that so I don't know before so okay, let's play. Come point has a load of gadgets that you can buy like upgrades to get it so you buy between missions.
And most of them optional the things that you can buy if you want and they will change your play style will facilitate different ways of playing the game and setting up that shop was a challenge setting up the inventory system was kind of a challenge. But then once I designed like.
a gadget, I think maybe one of the first ones he did was the hushcracker, which lets you jump through a window silently, so you still smash the window, but it kind of muffles the noise.
Once I'd done that, I kind of knew, oh, that's how long a gadget takes.
It takes like maybe a day in total, which is very quick and very easy, and they add a lot to the game.
They let you kind of tailor your play style.
And then I was watching...
a talk by Jonathan Blow and Mark Ten Bosch and they were talking about their kind of design philosophy and kind of describing the way they approach making games and sort of taking out some principles that they think are kind of generally a good idea and the one Jonathan Blow was talking about was interconnectedness. When you have a bunch of game mechanics in your game you should think about having them talk to each other in some way, having them link to each other and I was thinking what are the elements of gunpoint? Like guns and rewiring stuff how can I mesh those together?
well you could rewire guns and so I tried making a gadget that would do that and I couldn't, it seemed exciting but I had no idea really like how would that work, what would it be like, what would it really add to the game, would it just totally break the game because if you could wire a light switch to somebody's gun and then just flick that to make them shoot their friend then that seems kind of disastrous I just did it because I knew gadgets are easy, you can do them in like a day making this upgrade is going to be pretty simple and I don't know how good it's going to be and so I tried it and in this video I've just first I rewired that guy's gun to the light so he couldn't shoot me. If you wire a gun to something it triggers that thing when the guy tries to fire if you wire something to a gun then when it's triggered the gun goes off so what I'm doing here is I'm going to wire that front guard's gun to the guy behind him When he tries to fire, it won't fire, it'll trigger what it's linked to.
What it's linked to is the gun pointing at the back of his head, so he's going to shoot himself in the back of the head.
Let me see if it actually happens, ever.
I'm saying exactly what I just said on this video.
That's why I'm not doing it right away.
Okay, here we go.
And that's it.
Thanks.
Here is everything I just said in graph form.
So if you're certain something will be quick, but you're not certain it'll be good, then try it.
If you're certain it'll be good, but you're not sure it'll be quick, then give it a day.
you know, see how long, how hard it is going to be.
If you're certain it will be quick and you're certain it will be good, of course just make it.
And if you're not sure of either of those things, then just forget about it because you're a game designer, so you can probably think, do better than that, right?
You can probably do better than the idea that you don't know will be good and you don't know if it'll be easy.
I think also on the point about uncertain value.
uncertain time, the outliers for that are going to be the things that take years, right?
The things where it seems like, oh yeah, that should be doable, and then when you actually try and do it, it just goes on and on and on, and it never quite...
never quite works.
For Uncertain Value, I think the outliers are the ideas that turn out to be amazing.
That long shot thing, as you can see, it's pretty funny.
It also led to, like, maybe 70% of all of my favorite moments in Gunpoint. Like, all of the best stories about crazy things that you can rewire, crazy traps you can set up, crazy like, stunts to pull off.
It led to a huge amount of those. It was a massive addition to the game. It really, really made it loads better, in my opinion.
And so that's why stuff that, where you're uncertain about the value, it's worth just biting the bullet and making it, and spending the time, as long as it's not a huge amount.
So the third thing I learned was the art of not doing things.
This is a screenshot from Gone Home.
And if I show you three screenshots from Gone Home, um...
Gone Home is a story about a young girl coming of age, kind of discovering her sexuality, and kind of learning her place in the world.
And it's a story about relationships.
It's a very sweet, and sometimes funny, and touching story about people and their relationships to each other.
And there's something missing in these shots.
There's no people in it.
they decided to not do people in a game that's entirely about people there are no people in it it's incredible how often we don't consider just leaving something out and it's really easy to assume that something has to be in there like it's just so integral to the whole thing that you're doing but of course you need people in a story about people but you don't gone home is amazing and it tells that story really sensitively and brilliantly and for my own example Something I should have considered not doing for gunpoint is the gun.
That was a thing that perhaps understandably I was assumed well that kind of needs to be in there, the gun right?
It's called gunpoint.
When I first, when I came up with that name, I was thinking it would be much more about holding people at gunpoint.
So in the game you can, later on you can buy a gun and it costs a huge amount of money.
And you only get six bullets for it ever.
You can't buy any new ones.
And people love that though.
Totally accepting and understanding of that.
it's main use the whole point is it's supposed to point to the people and when you have your gun pointed a guard they won't shoot back because they're in that movie standoff situation where well if I shoot him what if his gun goes off and kills me and you're supposed to be thinking the same thing in actual fact if you do shoot them you're fine but I really wanted that I thought it would be a really tense moment you have to hold down the button to keep your gun pointed so it's just like if your finger slipped off the button you would instantly be killed and it does have that tension to it, you know I made it, it's in there, it's in the game but I didn't have a lot of luck designing puzzles around it.
It wasn't that great of a puzzle mechanic.
Once you have something at gunpoint, there's a limited number of things you can do in that situation.
You can kind of shuffle backwards, you can shuffle forwards, you can press a light switch.
That's about it.
Anything else involves putting your gun away and that gets you shot.
So it wasn't a great puzzle mechanic.
And once I made that, it sort of became clear it wasn't really the center of the game and calling it gunpoint was probably a bit silly.
But I stuck with it because I had the word gun in it and people like that.
So...
the problem with it is that you can fly the gun as well like my idea was to use it to point to people but also let you fire it because you can't fire it then that's uh...
kind of tense situation of holding it holding some of the gunpoint loses meaning like in order for pointing a gun to be meaningful you have to have the option of shooting them if you don't have that then you know you're bluffing and it kind of makes it a totally different situation so you can just shoot people and of course it has to kill them everyone in gunpoint dies in one hit uh... including you And that means, of course, you can just shoot a guard to get past the puzzle.
You can solve the puzzle by just shooting the guard.
Or you can shoot out a window to get through that.
And so, I knew you'd be able to do that, obviously, and I thought of a great penalty for that, which is that if you fire a gun, the police hear it, and they will show up in like 30 seconds.
And when they show up, they will put a sniper on the subway exit, which is the only way out of every level, and that sniper can see infinitely far, has infinitely fast reactions, and a perfect aim.
And will kill you in one shot, no matter what.
So the game is kind of over at that point.
But I don't, that's why you're screwed because there's a sniper at the exit.
And I didn't want to come down and say game over, right?
Because you're still alive, you've kind of failed your mission but I hate it in games when you fail your mission and it just says, well that's the end of your life then.
Like when Sam Fisher fails in Splinter Cell and you set off one too many alarms and it just kind of fades to black and just says game over.
I'm like, what happened to him?
I want to see what happens to Sam Fisher.
So I didn't want to do that.
But the problem with that is, of course, like the player is screwed, they can't get out of the situation.
What I want to happen is they go to the exit, they get shot, and then they realize, oh yeah, I'm screwed, I better go and just restart that level or go back to like 19 save games because the game auto-saves constantly.
The problem was, that was a little bit weird having a sort of game over situation that doesn't tell you it's game over and cause some confusion.
People were kind of like, how do I get out of this situation?
I have to tell them, you just can't.
You're just fucked forever.
but the bigger problem with the gun and gunpoint is that when you shoot someone it solves the puzzle in a sense of the word the time limit that impose the time it is a really big stressful penalty it's a really is a big deal and that's why used I want to play to feel kind of stressed and it's a it's a cost of doing something that you never need to do you never have to fire a gun so if you don't you don't because you decided to and I'm happy to give you a very big penalty for that make it scary and stressful and you might get frustrated or you might have an amazing close escape.
The problem is that.
the gun also lets you solve puzzles really quickly so if I give you a time limit for using the thing that lets you get past a puzzle quickly you can then just use it again to get out of the time limit because you can just shoot everybody and blow out all the windows and take what you want and then just leave so the penalty I was giving you was kind of undermined by the very thing you've just shown me you're willing to do so it's kind of a mess, there's probably a better way to do it but I spent...
like in front of the gun itself wasn't a huge cost but just was consequences all those little fiddly things of hang on the sniper shows up how does the plan no that's crude or how does this might be shot like that I never got the animation working from to come up the steps and so he just kind of teleports in but then that's terrifying because it's almost an and shoots you in the same instance you don't even know why you died and I don't he's like all could little consequences and it was a difficult cause design problems cause technical problems and it was a big messy thing and I wish at some point I just thought Maybe I just shouldn't give you a gun. Maybe I should just leave that out.
Just not that big a deal. It's a game about rewiring things and I kind of knew that.
I'd made the whole game about rewiring things, but I just couldn't let go of the gun for some reason.
Probably because it's called Gunpoint.
So the fourth thing I learned was the best place to save time is in the concept.
I'm not going to spend too long on this one because it's kind of...
It is a really big deal. You can save years of your life at this point, but...
it's of limited relevance to probably most of us because only some of us are in the situation where we actually get to be the guy who decides that what the new project is going to be what the new game is going to be and decide everything about it that's pretty rare privilege and even for those people you only get to do it like once every one to two years right so but when it does come around it's worth The time you spend re-evaluating your concept and thinking again about what you want to make next, what your next game should be, whether you're thinking individually or whether you're discussing it as a team and brainstorming and stuff, that time is going to pay off massively.
One more week thinking about what you're going to make could save you a year of going down the wrong track or could just come up with a much better idea.
When I finished Gunpoint, I was going to do a...
I switched to unity for a while and I was going to make a kind of side on heist game in unity that would be a little bit like gunpoint but you'd have grappling hooks and you would, in fact I think I downloaded a video of this so I can show it to you hopefully, can I?
No I didn't.
We were on, oh god now I've lost what slide I was on.
This is terrible.
I'm just going to tab through a bunch of these. You might remember some of these scenes from earlier in the talk.
Here we go, I don't have a video of what I want to show you.
But there's no point in seeing it anyway because I've kind of abandoned it.
it was a game much more in the vein of gunpoint but made in unity so much harder to make and I was really really excited about it. The game mechanics seemed really exciting to me but also I had this kind of, I had a story in mind which I won't tell you because I might make it one day but there were certain elements of the story, not so much like the plot but just the setting and the characters and this world that I was thinking of that were just like...
driving crazy I was just it's not so excited about I kind of felt sick.
I get excited about it and just be excited about for entire day and I was so sure this is my next game and definitely do this.
It was so amazing and then I tried to make it and it took a very long time and I spent I think it was the time I spent about a week trying to get a grappling hook to unwrap from around a lamppost. I suddenly realized like this is just too hard I just need to do something else.
Actually I didn't give up on it at that point I was just thinking.
It was around that time that I was talking to a friend of mine about an idea I'd had years and years ago.
One of those things that, I don't know if you guys do this, but sometimes you kind of think about the game you'd make if you had infinite money and a massive team and if you were, you know...
the perfect overlord of a of infinite resources and my idea was like I love spelunky and I often thought about like what's spelunky like in 3D this was kind of probably before Minecraft existed and how would you do that kind of random generation and make destructibility a really important thing in a 3D game and I thought I would love a game where like you're just in the infinite galaxy and you're like you're in a spacesuit and you have a jetpack and it's super powerful and your spacesuit is super tough and you're like a human missile you just slam yourself into the hulls of ships and just like breach in and kill everybody and steal everything and it would be like inside the ships it would be like a randomly generated first-person shooter and outside you'd be jetting around and stuff and I knew I was never gonna make that I just wrote down some ideas for it for fun But then I was talking to my friend Graham and I think he mentioned it like he said I still think about the idea you had once and I was like hang on you just made that 2D I think I know how to do that in GameMaker right now and I think I could prototype that in like 2 days and so he did he was in the middle of this other game but I said you know this is going to be quick to find out whether this is any good or not and so I just started it in GameMaker and it very quickly became clear that it was eminently doable and it was really exciting and the second you go inside a spaceship that has been flying on the galaxy it's just a really magical moment and when I started to show it off in public as well weirdly even before I showed that you could go inside spaceships people are more excited about that than they were about the co-op grappling hook thing I've spent the last five months on.
So, and I kind of, I started to agree, I started to get more excited about it too.
I was thinking it would be a quicker and easier, maybe smaller project, but the more I work on it the more Heat Signature is just like lighting my brain on fire and it's just so expansible and flexible and I can do anything with it and it's just so exciting to work on.
So that was a situation where I had a concept, I was very sure what was going to be my next game and really I should have just spent more time thinking about what I wanted to do.
I didn't really consider anything else, there was like a strategy game I thought about maybe.
But I should have spent more time just reconsidering the concept because that's where I will probably save a year of my life by making this game instead.
and the thing I learned was how to stop being a perfectionist and it's probably something a lot of us suffer from maybe I might not be as afflicted with this as some people the other way of saying it is fuck it, that'll do I I do have this problem and I've kind of learnt a range of ways of trying to snap myself out of perfectionism trying to just let it go, just trying to move on and The main thing is every time I come back to work, I just ask myself, is this thing I'm working on the most important thing left to do?
If I can only do one more thing before it just gets cast out into the world without any further input from me, is this what I would be working on?
And 90% of the time the answer is no, there's something much, much more important I should be working on.
And so I keep like a to-do list that's in priority order as best I can.
I try and, you know, put the most important things next.
And I constantly reconsider it.
And I also have to...
use mental tricks to get over the pain of having to cut features.
Like, when you put things in priority order, then...
What you really need to be doing is when you're adding a big new idea to a game you should be cutting something out right you only got some amount of time and probably planned it reasonably well so that it's not going to take forever and if you can add something major you should be taking something away but emotionally I can't do that I'm too attached to everything that's already there and I don't want to like not write down the great new idea I just had so instead I just try and put them in priority order and it's kind of a trick I learned from.
uh, writing about games, I would often be way over the word count and I couldn't bring myself to just cut out whole paragraphs so I'd just go through it and I'd just like indent the paragraphs that weren't quite as good as the other ones um, and once you do that, and you realise you look at the word count and realise oh, all those ones I indented equal the number of words I've gone over.
So if I cut them all right now, then I'm done.
The whole thing just fits and it's fine.
Suddenly it's much easier to make that call.
Whereas if you're going through and actually committing to deleting it right then and there, it's a nightmare.
So if you do a...
If you have your to-do list in priority order, if you try and put all your ideas for the games in order of which is the most important thing not yet done.
then the great thing about that is that you don't ever have to cut anything you can just pretend you're gonna do it all it's all on the list I'm gonna get to it one day and then when you're like when you're halfway down that list and you've done the most important half of those things it's really easy to cut the rest because it's been three fucking years just like I just need to fucking release this So that's what I did with Gunpoint. Gunpoint, you know, there's...
The to-do list for that is twice as long as the things I actually did.
I just got to the point where I'm like...
I just gotta get it out there. I don't care about this goddamn camera bug.
Which is what I'm going to show you.
This is the camera bug in Gunpoint.
It might not even register as a bug, but probably anyone who works on, like, game feel and kind of tweaking things is looking at this and kind of...
When you climb up a wall and get onto the roof, the artist, John Roberts, has done this brilliant, beautiful, smooth animation for clambering up.
I love it, it's kind of sprightly and cool.
And I've completely shat all over his work by...
In code, you don't smoothly climb up, you teleport to the roof.
I teleport you there, then I play the animation of the climbing up happening.
And the camera is following your true location, not the animation, so it just snaps to being above.
And if the view is scrolling, then you get this annoying little jerk.
And the fact that it's looping constantly as I'm saying this is really pissing some people off.
and it's pissed me off for like two years I was like, ah, I've got to fix that at some point and it's... it is an easy fix but it's maybe not 100% trivial because there's nothing in the game that does any kind of camera tweening or panning or anything like that I don't think I'd even heard the word tweening at this point and it was always on my to do list and I knew I always felt like it was essential this has to be done before I ship I can't release the game with this goddamn bug in it and I never fixed it this is from the currently released version of gunpoint it's still in there I didn't even patch it out because by the time I finished I was like my god that's the smallest concern in the world compared to the other things that were wrong with gunpoint at the time that is nothing which brings me to a quote but This is a common aphorism, particularly amongst games journalists.
Games journalists love to say this, I used to be one, because when you're a games journalist, your job is to analyze a game and say why it's good and why it's bad.
And if you notice some subtle little thing in Legend of Zelda or Half-Life 2 that...
you love, then it's really easy to massively inflate its importance because A. It was something you noticed and you felt good for noticing it, but also B.
You want to seem slightly more insightful than everyone else and like, ah, I noticed the subtle thing and I think that's so fucking important. If you didn't notice that, you don't appreciate the game as well as I do. And for me it was like, there's a moment in Half-Life 2 when...
Barney throws you your crowbar and this is you know the iconic weapon and you're going to use it for the rest of the game but you're standing directly beneath him, he throws it to you you've got good aim and when it hits you it just goes into your inventory and you bring it up But I tried stepping back and letting a crowbar clatter to the floor.
And when it clatters to the floor, it does so with the perfect noise for a crowbar clattering to a concrete surface.
Which is nuts, because who the hell would back off when Barney throws the crowbar?
Like, why is the sound for that so perfect? Why did they make it all such high fidelity?
I was like, this is amazing! This is what's so great about Half-Life 2!
They put this such rich fidelity into it, and it's the moment when you back off when a crowbar clatters to the floor.
That's what really matters.
No, it fucking isn't.
like the little things can be important. I'm not saying that they're not.
They can be really special and really nice, and I was really obsessed with this moment.
But this statement says they're more important than the big things.
No, they're not! The big things are much more important. That's why they're the big things.
The gravity gun is really fucking important. The story in Half-Life 2 is really important.
Like, loads of those set pieces are really important.
And the little things are important, but they're less important.
So...
To summarize the thing I was saying earlier about trying, about getting over that camera bug.
It is easy to stop polishing the silverware once you realize how much of the house is on fire.
And that is how I kind of snap out of getting obsessed with those little details now.
I try to remind myself how much of the house is currently on fire.
And that means, when you, instead of like, polishing the way that the character sits down in this particular chair, look at level three, which doesn't exist yet.
Or level four, which actually can't be completed anymore.
I was trying to do, I was working on a rating system for gunpoint so at the end of the level it gives you metrics of like you were this quiet and this fast and this violent and for the speed one I needed a par time for each level and so I had to play through the game and find out what my time was for those levels and then use that as the standard to judge other people by which is something I like to do in life.
when I played the game through I couldn't play the game through, my game didn't work it had broken in about nine different ways since I last played the whole game through and so this tiny thing I was working on of like the part time for the level should really be an accurate reflection of my own personal abilities was actually not the biggest thing I needed fixing, the biggest thing I needed fixing was the game and the sixth thing I learned was how to feel good about yourself at the end of the day This is something I really sucked at first because I was new to programming and I was initially for the first year at gunpoint I was working totally on my own and I was working the weekends and so during the week I'd be thinking all the time about the game, what I was going to do on it and I had loads and loads of ideas I wanted to put in and then when I got to the weekend I would have a specific idea of I want to get this feature in this weekend, I want to get elevators working, I want to do this.
and then sometimes I would do it, sometimes I would fail to do it and sometimes I would just be not even close, like not even ten percent of the way to getting that thing done and it would just be soul crushing, I would just feel terrible and I just felt like an idiot, I just felt like this is, like I was supposed to get this done this weekend and I'm not going to get it done next weekend or the weekend after and that's even more crushing when you're working part-time because that's not that's not six days away, that's three weeks away So I would get really pissed off at myself and feel stupid and feel frustrated.
And eventually I realized, like, this is kind of ridiculous.
Because if I had, if I employed a programmer to do this for me, and I said, OK, a task for this weekend is to get elevators working.
And they came back to me on Monday and said, look, it turns out to be a much bigger job than we realized.
I'm only 10% of the way through this. It's going to be really difficult.
It might take another four weekends, realistically.
My reaction to that would not be, you fucking idiot, what's wrong with you?
It would obviously be, oh, that's interesting.
Thanks for looking into it.
That's valuable data.
We didn't have that information beforehand.
I didn't have it, you didn't have it.
We didn't know how big this job was, and you have done the valuable work of going out and finding out how big that job was by trying to do it.
And now we have more information, we can make better decisions.
Nothing has gone wrong, really.
what has happened is the new information is a shame it's bad news for us but it's nobody's fault it's not a problem someone's created it's the thing that we've just learned about the task that we're undertaking and now it's my job as a designer to or as a producer depending on how you want to classify it to decide do we still want to do that is that feature still worth doing do we have to do it if we do have to do it is there an easier way to do it can we rethink and if the answer to all those questions is no and we do have to do it then I just have to figure out how we fit that all into the schedule and what else we're going to cut how we figure out how to do that.
And so, it took me an embarrassingly long time to apply that logic to myself and realize that when I fail to complete something by a massive degree I should be nicer to myself about it. I should say, okay, you put in the hours, you tried it, you got more information this is useful stuff, I've done my job.
So if you are your own boss, be a good one.
And obviously I realize that this is a luxury in my case.
You know, it's been great to be my own boss and to be in control of my own, how I am treated and stuff.
And obviously I'm also, I'm gonna talk a bit about how many hours you work and that kind of stuff.
But I want to be very clear that I appreciate it's a luxury for me to be able to decide how many hours I want to work.
I work like.
eight hours in a day or something.
And I know that some of you probably work for, in an environment where you don't get to decide how much you work, and probably many of you are sometimes asked to crunch, and probably many of you don't want to crunch, and probably many of you are just in a situation where that is inescapable.
And that's okay, but if anyone is trying to make you feel personally bad for not getting the thing done, if anyone's trying to make you feel like it's your fault that this job turns out to be a bigger job than you thought, then fuck that person.
And if it's you, fuck yourself.
So at the end of the day, I just ask myself two questions.
I ask, did I work eight hours and did I work efficiently?
And the number of hours, you can plug your own number in there.
Some people work a lot more than that, some people work less.
Probably most people work more.
And that's not necessarily, like, unhealthy.
Some people just like to work, you know, 12, 14 hours in a day.
I actually, I do do that if I'm really just on a particular problem that's obsessing me and that I'm really kind of engrossed in and I want to spend that time.
But it's worth kind of setting a standard for yourself, just deciding for yourself, what is a good workday, what should I be doing every day?
And that applies even if you are working in an office job where it's 9 to 5 and your hours are imposed by someone else.
There's still a difference between showing up for eight hours and actually working for eight hours, right?
And if you...
didn't work those 8 hours and the reason was you're on Twitter, then you can feel bad about that.
And if you didn't work 8 hours for some like, you know...
family reason or you were ill or something, then obviously you don't feel bad about that.
That's just something that you just need to ask the question, find out if you didn't work eight hours, why was it?
And then decide, do I need to do something about that?
If you didn't work eight hours because you got distracted, you do need to do something about that.
You need to change your working process, you need to change your access to distractions, you need to change something.
And the same for the efficiency question.
Did I work efficiently?
because it's okay if you didn't get the job done, but if the reason you didn't get the job done is because you worked in some stupid way, you just bashed your head against one tiny problem without looking at the bigger picture, then you need to ask yourself, is there something I can do to avoid that in future?
That needs something to change.
Whereas in the example earlier with the elevators, I think I said, if that thing is taking, you know, 10 times longer than you thought, then that's not the answer to either of these questions.
You don't care.
You worked eight hours, you worked efficiently, that's all you have to ask yourself.
You should feel good about it.
So to recap, first point was choose ideas based on value divided by work, i.e. choose efficient ideas.
Those are more important than good ideas.
Second one was that quick ideas are worth making.
Good ideas are worth trying.
If you're uncertain about how good they'll be, just make them.
If you're uncertain about how long they'll take, try making them, just to give it a go for a certain limited period of time.
Do a kind of feasibility study and then decide whether to carry on with it.
Number three is not doing things is instant and free, and it always works.
So it's always worth considering not doing something.
Number four, overcome perfectionism by knowing how much is broken.
Stop polishing the silverware by realizing how much of the house is on fire.
And number five is if you put in the hours, never feel bad about yourself.
So I think this stuff is important because your life is precious.
I think it's okay to waste it making video games but it's a shame to spend a lot of it on things that go unappreciated.
So that's it, thank you very much.
We have time for questions so if you want to go to a microphone if you have one but if you don't that's fine too.
Hello. I have a question about burnout, specifically from the perspective of working a full-time job and also working on a game on the side. You talk about how you committed to working only on the weekends and working eight hours and feeling good about that. I'm wondering, one, whether you had a time period before that where you were working too hard and experiencing burnout. And two, after you developed that process, whether you still encountered burnout and if you did, how you dealt with that.
Yeah, that's a good question.
So it was if I started working too hard and then came up with that.
that schedule to counteract that, and whether I ever did experience burnout.
It was kind of the opposite. I started much, much more relaxed than that.
So when I started it was at like one weekend a month maybe, because Gunpoint was just a hobby project. I was just curious about whether I could design a game.
Actually I kind of wanted a job at Valve, and I knew that they don't care about your qualifications, you just have to make something and show them what you can do.
So I thought, well I should make something and show...
than what I can do.
But it was always going to be a free thing.
It was just like a trial project.
It was going to be like half an hour long.
And I was going to make it in like six months maybe.
And so I was only working one weekend a month on average.
And it was much more like, oh, I've got nothing to do this weekend.
I think I'll try GameMaker again and just dabble with it.
Which I know I have a lot of friends who are kind of at that stage now where they have a hobby project like that.
And so it actually, it ramped up.
as it became a bigger deal, as people started being more excited about it when I showed it and I started to realize I might be onto something, and eventually people started telling me I should charge money for it, which is a weird situation. I asked them, I said, like people kept telling me you're mad to give this away for free, you're an idiot. So I did a new trailer and said, look, am I an idiot? Should I give this away for free or should I charge for it? And I got a thousand comments on that blog post and 99% of them said I should charge for it.
So I did. So it became a professional thing as it went along and I was probably working more and more intensely as it went along.
And to your burnout question, towards the end it did start to get...
I did start to reach a really critical point where I've been working on it for nearly three years.
I was still doing a full-time job.
Full-time job wasn't getting any less stressful or less difficult.
It was a relatively easy job compared to game development.
But...
it was taking its toll. I'd just been working out so long and I was just working every day of every week all the time, no time off, couldn't go to GDC or anything like that because that would be a huge expense in time and at that point I took a sabbatical from my job where I, because I've been there for many many years, I was able to take three months off unpaid leave and at the end of it I was guaranteed my job back if I wanted it.
and as soon as I stopped doing the day job and was able to just work on gunpoint like six days a week and actually have a day off in a week that I got it finished in less than two months I released it and it was out before my sabbatical was up and it sold well enough in that period that I could quit my job right away and I gave my notice such that I think I had to give two weeks notice, and after the first two weeks, I already knew it sold well enough for me to quit my job, so I gave my notice then.
And I think, technically, I was supposed to go back for one day, and I never did.
So I still owe future publishing one day.
Thank you.
I'm wondering if you can describe at all your process of imposing constraints on yourself, because it seems that in some ways, you had the luxury of few constraints, in that you had the source of income from a day job.
I imagine there wasn't an external force sort of holding you to a release date.
But working efficiently is all about working effectively within constraints.
So how did you impose whatever constraints you needed to work effectively?
So you're asking did I impose constraints on myself?
Yeah, my biggest constraint was my own boredom.
I was worried about getting sick of the project and working on it after I was sick of it.
I knew it would be less fun.
And it was.
I did get sick of it.
So that was my time limit.
That was my deadline.
I also stupidly did an ounce release dates for it.
I was like, it's going to be done.
I first I was like it's gonna be done by May and then it wasn't done by May and it wasn't done by the end of the year and then I started thinking like I know I'll release I'll give a release date that's actually an earliest possible date so I would say it won't be done sooner than May thinking like everyone will understand that and of course when May comes along they're like where the fuck is it I thought you said it would be out by now So then I just stopped giving release dates completely.
But I still have my own internal sense of like, this, I hope this doesn't take more than, you know, six more months.
Or, gunpoint, that point where I was getting stressed, that I was talking about just now, it was because I looked at my to-do list and it looked like I had a year left and this was three years in.
I'm like, I can't do another year to get this goddamned thing out.
So that was my only self-imposed constraint, I think.
I mean, other than that, just.
I guess like getting bored of it is one thing and also patience is another thing.
I didn't have a lot of patience.
I was very antsy to work on it.
Like all day at work I'm thinking, daydreaming about what I'm going to do on it.
And I only get those two days a week to actually work on it.
So that felt like a huge constraint.
I was like, I want to be working all the time, but I couldn't.
So yeah, I think that's the best I can do for that.
Hi, I was wondering, can you talk about how you efficiently use your time to find and then work with your artist and sound designer?
Oh yeah, I did that by, because it was a hobby project, I was thinking I would release it for free.
Once I started considering charging money for it, I still didn't know for sure if I would.
And so I couldn't promise anyone any money for it.
So I was in a very difficult position.
I thought I'd never get any help at all with it.
But in the spirit of like just let's make a free thing together, I put out a trailer with my terrible programmer art and I asked in the trailer itself, in the voiceover for it as I was recording it and explaining the game, I said obviously you can see I need art help pretty badly.
If anyone wants to help me then just like send me a sample of what you might do for this.
I think at that point I was pretty sure it was going to be free.
I don't think I actually mentioned even the possibility of money.
So I said I can't pay you, it's all free, I'm doing it for free, you're doing it for free.
And 30 artists applied to that, which is awesome.
And that's how I found John Roberts, who...
did, his sample actually was like, this is now, I'm just suddenly realizing is very emblematic of our whole working relationship.
I'm still working with him on Heat Signature.
And his sample for it was like a cyborg on a trench coat with like a robot face and a silence thing, which is totally inappropriate for company.
There were no cyborgs in it. It's like, it is in the near future, but it's all humans.
And right now John and I are having a disagreement about whether Heat Signet should have aliens in it.
And he thinks it should have aliens and robots and I want it to be all humans and all realistic.
But he had, he worked at Frontier Developments at the time on like, I think, Kinect, Disney and Adventures, and some other like Kinect games that David Braben was doing.
and he was a 3D artist, he'd never done pixel art before he did the art for Gunpoint, which blows my mind.
And then, once his art was in there, the game looked way better, and I did a new trailer explaining the game again, and saying, you know, some people said I should have music, should I have music?
And if you want to do music, send me a sample.
And I think we got...
I can't remember how many, I think maybe like 40 composers applied for that, which is amazing.
And that time I did say, I don't know if we'll sell it, but if we do sell it, we'll do like a revenue share thing, and we'll figure out a fair split.
And obviously we did decide to sell it, and so at the moment I decided to do that, I sent around an email saying, here's what I think would be a fair revenue share for all of us.
And everyone agreed to that.
And then it came out, and it did really well, and so they have benefited enormously from that arrangement for sure.
Thank you.
Hi, I was just wondering if you could talk a little bit more about finding that balance when you have a day job and this is the side project of trying to work efficiently around the other thing without impacting your work in the other job.
Yes, the question is about working around a day job and managing your time efficiently.
My great advantage in that, and I was very lucky, was that my day job as a games writer was...
I'd consciously avoided responsibility, never gone for promotions and stuff, I just wanted to be a writer, just like a workhorse, just churn out words and do nothing else, didn't want to be responsible for anything.
And so...
that was just like writing but had the added benefit of my job was pretty much it could be 9 to 5 if I wanted it to be so at the time I started I was doing over time and I was you know if I was working review I'd usually spend some of the weekend making it better and you know maybe playing the game more thoroughly and that kind of stuff but a it was a job where if I wanted to I could just say I'm just a 9 to 5 now that's it I know whenever.
pressured me about that, no one ever complained or was disappointed that I did that.
The people I worked with were just lovely, just really nice people.
And also it's a job writing about video games, so it's not the hardest thing in the world.
Apologies to those who do.
It's not a game we just play games right about all day there's a lot of like organizational stuff and management and stress and stuff but in the just workhorse right to position the worst thing that can happen is that you have to write a lot of words very quickly and you know that's something I've enjoyed doing anyway and it just wasn't very kind of high stress position and I got to play video games.
Deus Ex Human Revolution came out, I was massively excited about that game and I was down to review it and I was working on Gunpoint as well and it was at the point where Gunpoint was getting to be really technical, just difficult, hard work okay, we're going to wrap this up after this and I was getting so stressed working on that at the weekend that I was like, God, I can't wait for it to be Monday and I can just play Deus Ex Human Revolution all day So we have to stop it for questions there, but we can go to the wrap-up room in 3,000 if anyone wants to ask me anything else.
Thank you very much.
