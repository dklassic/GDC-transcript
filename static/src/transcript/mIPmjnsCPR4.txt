So I'm assuming, this is mic been tested, you guys can all hear me and everything.
All right, excellent.
So welcome.
Let me start with this.
I'll just sit down and watch this too with you guys.
Do it!
Just do it!
Don't let your dreams be dreams.
Yesterday, you said tomorrow.
So just do it!
Make your dreams come true!
Just!
Do it!
Some people dream of success while you're gonna wake up and work hard at it.
Nothing is impossible!
You should get to the point where anyone else would quit, and you're not gonna stop there!
No! What are you waiting for?
Do it!
Just...
Do it!
Yes, you can!
Just do it!
If you're tired of starting over, stop giving up.
All right.
So that might be inspiring to you.
It might be funny to you.
It's kind of both to me, right?
But the reason I'm showing it to you is because that kind of stuff is important, right?
That initial burst of motivation, that call to instantaneous action.
But it's not a process, right?
Just doing it, waking up tomorrow and changing your life or whatever.
There's a difference between this kind of momentary motivation and true long haul productivity.
And part of being independent is that we're trying to escape from this world, right?
All those things that go along with business seem like maybe like hell to some people in this room.
Rigid schedules, deadlines, strict separation of work and non-work time.
One of my friends even said, I'm making games because I enjoy it.
I want to enjoy the process.
I don't want to be too hard on myself.
And we can do it however we want.
We can have flexible schedules.
We can keep odd hours.
We can work only when we want to work.
We can interleave work and non-work time throughout the day.
And this might be enjoyable for a while.
But in the end, the reality is, any of you who've shipped a game know, shipping a game takes a lot of hard, extended work.
And it is our job, really, at the end of the day, if we want to keep doing this over the long haul, if we want to make a career out of it, a life of it.
And this is a rhetorical question, I'm not asking for a show of hands here.
But think about how many people in this room, at some point in their careers, failed to ship their game and had to go back to work because they ran out of money.
I have several friends who have had this happen.
And there's nothing enjoyable about that, right?
So these business guys, they aren't idiots.
If they could squeeze extra productivity out of their teams by letting them work out in bed, they'd do it in a heartbeat and install beds in every cubicle.
And this guy here, he's looking at his watch in this picture.
That's this classic kind of over-scheduled business thing, the kind of thing we want to avoid.
You know, we hear business adages like, time is money and all that kind of crap.
But even if we don't care about maximizing money per unit time, we also need to consider this, right?
You only have enough time in life to ship a limited number of games.
And so my central thesis is that making games is our job, it's our business, it's what we busy ourselves with, it's our life's work if we're gonna take it that seriously, and we should behave like we're working when we're making them.
And we should manage ourselves the way we'd manage an employee.
And like a business might do, we can start by taking an inventory of past performance of employee number one.
which might be ourselves or our team or we've been working over our whole career.
I've done this for myself, and I'm going to walk through it now.
And I actually did this for all 19 of my games, but it's a lot of data to put up on the screen.
So I'm just going to give a quick highlight, picking three games out of the 19.
She talked about Passage before.
That came out in 2007, long, ancient history.
Only 4,700 lines of code.
Only took me 14 days.
to get it out and shown at the Gamma event that it was made for, and then another two months total to finally put music to it and get it out to a wide release.
Most popular game by far, downloaded by 500,000 people, and brought in pretty much no money.
Thirteen games later, in between Passage and the Castle Doctrine, which I'm showing you because it's my most commercially successful game, a big success for me, commercial success is relative, right?
For a team of one.
Came out in March 2013.
a whole order of magnitude more lines of code here.
47,000 lines of code, 13 months instead of 14 days to develop it and get it out to the public.
And then a total of 25 months, once it was out to the public and I was updating it and so on.
20,000 downloads, much smaller in terms of impact, but much bigger in terms of $247,000, which was a lot of money for an individual at the time for the development cycle that it was.
Now fast forward a few more years, one hour in life, my project that actually just came out two weeks ago.
89,000 lines of code.
33 month development time to initial public release, and who knows how many more years I'm gonna be working on it doing weekly updates into the future.
So before I did this analysis, I had this graph in my mind generally, right?
Like, as someone who's supporting my family, making video games, like I'm making a little bit more money in each game, and it's kind of going up, and like, wow, the Castle Doctrine made more than anything else, that's a good trend.
Except for Cordroom Inuit there, which is like this bad outlier where I lost money.
But that's not a common thing for me, right?
Game after game, I'm making a little bit more money, and it's even curving.
It looks like it's curving, doesn't it?
Parabolically, that's good, right?
And I also had a general sense, and until I did the analysis, I wasn't quite sure, that the projects are getting more complicated as they go along.
The number of lines of code, and it's true, the number of lines of code per game are kind of going up on a similar curve, working on bigger and bigger things, with one hour of life being really complicated, right?
Multi-sharded server, multiplayer simultaneous world with real-time interactions and all this kind of stuff.
So I'm getting better and better as an engineer.
I'm working on bigger and bigger and crazier and crazier things.
But I'm also spending more time.
So this graph is also kind of going upward at the same rate.
And that allows us to talk about productivity.
So how many lines of code did I produce each week that I worked on the game?
Development productivity, not monetary productivity.
But hey, look, it peaked at sleep is death.
It's been pretty sad ever since then.
Only producing the castle doctrine, I only produced 500 lines of code per week.
That's pretty bad.
Pretty sad.
And then you can look at financial productivity.
How many dollars did I make per week that I spent on the game?
And that also peaked to sleep as death and has been going slowly down.
Even though I made way more money on the Castle Doctrine, I spent so much longer on it that I really only made $2,000 a week working on it, which isn't so great.
OK.
So we can go deeper than this and a lot more detailed because of the magic of version control.
So I've been using version control throughout my whole career, even before I started making games.
Back passage and those early games were done in CBS, if anyone here in the room remembers CBS.
And then I eventually moved to Mercurial, and now I'm using Git for one hour, one life.
And so I have detailed logs of the entire production history of every single project going back to my entire career.
And you can see the logs that come out of version control tell exactly how many lines were added at what hour, minute, and second of the day.
So that allows us to do a more detailed analysis of something like this.
This is my entire career in a graph.
Lines of code.
Lines of code per week.
And it's kind of noisy, right?
So we're not going to get that much out of that.
But let's break it down by month instead, bin it by month.
Lines of code per month.
And then we can annotate it with the different games that I've worked on, right?
And so you can see there are some games that are super productive on, other games less so.
Some games are really spiky.
And a lot of it's ancient history.
So I don't have details about why.
Like, look at Sleep is Death in the middle there.
There's a drop in the middle.
I don't remember exactly what happened there, why I had two big productivity spikes and a drop in the middle because I don't have my calendars anymore from that era.
So for the rest of the talk, I'm going to focus on One Hour One Life, the most recent project, because I remember what happened over the past three years.
So these are lines of code per week from the entire One Hour One Life three year long development process.
Now first of all, when you look at this graph, there's a little bit of a problem.
Like see these troughs, right?
Where there's zero lines of code several weeks in a row.
And at first I saw this, I was like, oh no.
Did I really go through some weeks where I didn't get anything done?
I didn't think it was that bad.
But then I realized when I looked at my calendar that these were my family vacations.
It's like, OK, well, that's good.
I didn't work during family vacation.
Go away to visit relatives to New York or whatever and see family for three weeks or two weeks, and that's fine.
I saw some other zeros on the graph.
I was like, oh, no, well, what about that week?
That wasn't a family vacation.
Oh, well, those were some conferences I went to.
That's cool, too, right?
That doesn't explain all the zeros on the graph.
I'll get to a couple more of the zeros in a minute.
But at least most of them were accounted for.
OK, so let's annotate the rest of this graph.
So in the beginning, I'm in game honeymoon, new project, getting a lot done, client server, everything's going well.
And then I come back from vacation, it looks like, actually, and get into this slump, where productivity, I'm feeling burned out.
It's game number 19.
And I know I've got a long way to go.
I know this is the biggest project I've ever tackled and stuck in the thick of it.
And then I have a zero week there that you see at the end of the slump.
And that's also justified because my lifelong friend of 25 years moved to Davis to join the project with me.
I said, you know, dude, this is a big project.
You can make the artwork and the music for this, and we can work on it together.
It was sort of this dream come true for the two of us to work on a big project together.
So I spent a week, you know, getting them set up and so on.
And then we had this kind of adjustment period, right, where like it fits and starts.
We were moving into a new office.
We were trying to develop an art style.
We showed the game at GDC and then tore all the artwork out and redid it.
tried to figure out all the way the editor needed to be changed to work with the kind of art he wanted to make and everything.
But then we finally kind of hit our stride like halfway through the first year and we had this period that was like I call on fire, right?
Big solid productivity week after week after week after week.
What happens at the end, right?
You can even hear the music at that little part of the graph go like wah wah wah wah.
And that's one of the roughest periods of my life because that was the couple of weeks before I took my best friend of 25 years off the project.
Because things just, it was clear after a year and the fighting and stuff that was going on toward the end especially that like, ah, are we really gonna do two more years of this?
Are we really gonna struggle through two more years of working together?
You know, working together is hard.
I mean, a lot of people have had similar things happen.
But for me, I was a friend of 25 years.
I mean, people say, don't work with your friends and it's good advice.
So, huge emotional blow, huge project blow, and then I'm left sort of picking up the pieces by myself, turning it back into a one person project.
redoing all the art, redoing the music myself and everything, kind of a regrouping phase.
But I do it, I get through it, going away on a family vacation, I think the game is pretty ready to release to alpha testers, come back from family vacation and have a test release.
I get out to my alpha testers, they like it, it's cool, they're having fun and it's interesting and I'm excited to keep the momentum going and they're kind of getting bored with what's there and they have bugs that need fixed and so on, so I go into this, kind of the most insane crunch of my life, right?
I'm like, I want to release the end of the public soon.
The alpha testers have it.
I want to keep momentum with them so that there's a pool of them still playing when I release to the public.
And I end up doing these 16 hour days all week long, coming out only to eat meals with my family and not sleeping very well.
But really pretty productive, right?
Then there's a little ledge there at the end of the insane crunch.
I'm going to put a red line there.
So that was the first time in my life where I've ever had.
like a full-blown mental and physical breakdown.
I've been pretty mentally healthy my whole life, and I didn't really know what it was when it hit me, but there was a time where I was like, shaking with a sense of existential doom, laying in bed quivering, thinking I was having a heart attack or a stroke.
I didn't really even feel connected to the game.
Finally went to the doctor and had my heart examined, and it turns out there's nothing wrong with me other than stress.
And of course, you can see this graph is a pretty stressful graph.
So it's no surprise, but to me.
It just felt like I was going to die.
I didn't connect it to anything.
I actually went to the doctor.
He measured my heart rate.
At resting heart rate in the office, it's 116.
He's like, I think what's going on here, dude?
But it was just stress, right?
So that was a wake-up call, right?
Having this big productivity spike that literally maybe almost killed me, or at least felt like it did.
So then I kind of regrouped.
And the rest of this talk is about this regrouping process and exactly what.
it took to get back on track and have a more sane work-life balance and everything, and be able to get through this giant game eventually.
So let's look at some of the other figures that are available to see exactly what happened during this insane crunch, because that's an interesting period to analyze.
So here's a lifetime graph for me from all the way back to 2004 of lines of code per hour of the day taken out of version control and processed with a script.
And this is a actually it's kind of a cool graph to look at but it's kind of a sad graph for me because I'm Supposed to be working in the morning. That's the agreement I have with my spouse, right?
So we have three kids and you know I'm supposed to spend the afternoons with them and kind of be done at lunchtime essentially But you can see my productivity I mean I get up early in the morning and start working at 7 8 9 and so on and you can see my productivity in The morning, it's really pretty poor where like at 9 a.m. It's worse than like 6 p.m. Like how is that?
I'm not working 6 p.m.
And you can also see me scrambling around noon or 1 p.m.
when I'm like, oh my gosh, my workday's supposed to be over, I'm supposed to hang out with my kids, like trying to actually get something done, right?
Now, during crunch, during the insane crunch at the end of one hour in life, this gets even worse, right?
I'm still working in the morning, doing these 16 hour days, getting up and starting at eight, but my productivity at 10 a.m. is worse than my productivity at 9 p.m. during that crunch, right?
And you can also see me scrambling at noon, freaking out because the workday's half over, getting most of my work done toward the end of the day.
Really inefficient use of time.
I'm in the office 16 hours, but I'm definitely not getting 16 hours of work done.
What about days of the week?
So throughout my career, these are the days of the week, lines of code per day of the week that I worked.
A little sad, because Friday is the most productive day when I'm like, I didn't get enough done this week, I gotta scramble and make up for it.
During crunch, look what happens.
So this is really bad, right?
Look at Wednesday.
I'm working 16 hours on Wednesday, but I'm probably spending most of it messing around on Reddit, I guess.
I don't know, but.
And Friday becomes far and away the most productive day, and it's even leaking into Saturday when I'm freaking out at the end of the week.
So how did I fix this?
So let's get back to basics here.
Like, how do you ship a game?
How do you eventually ship a game guaranteed?
Like, what's a guaranteed method?
Because shipping a game is hard.
We all know that.
And so assuming you have these prerequisites, like you have the required skills to do whatever is necessary to make the game.
and you know how to get through the process of making it.
And your game is appropriately scoped, so you're not having scope creep and adding features and changing the game forever and ever.
All you have to do to ship a game is work on the game, and work on the game, and work on the game, and work on the game.
The thing will eventually get done, sort of by definition, right?
Of course, the hard part is doing this and keep doing it and keeping your butt in the chair over the long haul that's required to ship the game and not getting distracted along the way and dragging the process out way longer than it needs to be.
But where do we go to get advice about how to keep our butt in the chair that long?
Independent video game development is this rather new thing.
Like, what can we even compare it to?
What other creative process even requires like three years of sitting at the same desk doing the same project, right?
It's a pretty crazy thing that doesn't have many parallels.
The closest thing that I could find to it was writing, like writing novels or something, right?
Like the writer just has to keep coming back and writing the next bit of the novel over and over.
So I took a look at a novelist who had an interesting technique, Roald Dahl.
19 novels, very prolific guy, wrote a bunch of other stuff too.
You guys are probably familiar mostly with his children's stories like Charlie and the Chocolate Factory and witches and Matilda and all that.
But a really good writer and this is what he has to say in his own words about, and this is him sitting in his writing shed in his backyard.
Well my work routine is very simple and it's always been the same for the last 45 years.
The great thing, of course, is never to work for too long at a stretch, because after about two hours, you are not at your highest peak of concentration, so you have to stop.
Some writers choose certain times to work, others other times.
It suits me to start rather late.
I start at 10 o'clock in the morning, and I stop at 12.
Always, however well I'm going.
But I always stay there till 12, even if I'm a bit stuck.
You have to keep your bottom on the chair and stick it out.
Otherwise, if you start getting in the habit of walking away when you're stuck, you'll never get it done.
So Roald Dahl famously worked only two hours in the morning from 10 to 12, like he says.
It also turns out that he worked in the evening for two hours from 4 to 6.
And that's all he'd ever let himself do.
And he'd force himself to only write during that time.
for a grand total of four hours a day, even though he was a very prolific writer.
And it also sounds like he was very, very strict with himself about stopping when he told himself to stop.
So that's tool number one in this sort of productivity renaissance suite of things, right?
And it's a pretty simple one, limited focused work hours.
Don't work all day, don't do these 12 hour things, don't even work eight hours a day.
No one can be productive for all eight hours.
Most people are wasting most of that time.
Pick a focused, limited, doable work hours.
In my case, I picked five hours.
I think four hours maybe for a writer, because it's pure creativity.
There's some kind of rote engineering tasks and other things that need to be done when you're making a game, so five hours is pretty good.
You can pick your own amount.
Mine is from eight to one, Monday through Friday only, never on the weekends.
And some more details about what this means, right?
We say I'm gonna start working at eight.
You start working at eight.
You don't sit down and warm up for an hour and a half by checking the New York Times or checking Reddit or whatever, looking at Twitter.
you actually start working.
And you decide what counts as work up front.
You say, oh, today I'm programming, or today I'm working on art, or today I'm working on the website, or today I'm trying to get in touch with journalists, whatever it is.
And you only do that task.
You don't get in the middle of your level design task and then go off and email some fans or something in response to them or whatever else you want to do.
And during this time when you're working on a task, you don't check email, look at the news, forums, Discord, Reddit, interacting with players, shopping, looking up random things, wandering away, calling your mother, whatever.
You just don't do that stuff then at all.
You just forbid yourself.
And you stop at the appointed time, which I'm calling the truly hard part.
So a couple of tips.
How do you avoid Reddit or Twitter or whatever it is that is your main distraction of choice?
Some people literally need to disconnect the Wi-Fi router in the house while they're working.
Of course, we want to look up stuff about what we're working on sometimes, and so that's not that convenient.
But I think if you're working limited hours, it's much easier because you can say, I'm going to stop at one.
I can go look up at, I can spend as much time on Reddit as, I can find out who won the Oscars after one, right?
Like I'm free, I don't, I can be guilt-free and spend several hours on Reddit if I want to get the whole rest of the day, right?
And that helps us get over this, like, oh, I need to look this up now.
The other thing is to keep a non-work list next to your desk.
These are the things that is tickling my brain right now that I feel like I wanna go look up.
And I forgot to look up or I forgot to do or I need to go check this or I need to email that person or whatever it is that's not work stuff.
You write that down on this list and then once you're free, after your big solid chunk of work, you're like, ah, now I'm free to go do these fun things that I wrote down on my list.
So why is quitting the hard part?
Once you get going, it's really hard to stop.
And Roald Dahl says he forces himself to stop.
It's hard because of flow.
And we often, as game designers, we love flow.
We seek it in our designs.
And it's this great thing where you kind of fall into the work and you lose yourself and so on.
One of the hallmarks of flow is losing track of time.
So I think flow as a benefit for a creative process is a bit of a fallacy, because losing track of time is enjoyable, like it's great.
But enjoyable isn't the same thing as productive.
And I think a lot of people use flow, myself included, as a crutch to keep going, to avoid procrastinating.
Like if I can only get started on this thing and get going, I don't want to stop because I actually have momentum right now and I'm not looking at Reddit or whatever it is.
But you maybe don't need that if you have other ways to stay on track.
Because you want to consciously choose how you spend your time, right?
You don't want to go around the rabbit hole and some one weird problem or polishing one sprite and then realize two hours have gone by and be like, was it even worth that much time?
You want to pay attention to where your time is going, how much time your current task is consuming, and make choices about whether to keep going.
And that's where this comes in.
I've got one up here, timing my talk.
It may go off a little bit before the end.
But a kitchen timer, a physical kitchen timer, not a digital timer.
And you use this to periodically wake yourself up out of flow in a very tactile and auditory way.
And the idea of a kitchen timer for productivity comes from the Pomodoro method, which I'm sure some people in the room are familiar with.
But the Pomodoro method is about breaking your workday up into these little chunks and deciding what to do for each chunk individually and taking breaks between the chunks.
But this really helps you pay attention to where your time is going, pay attention to how much time you spend on the current thing you're working on.
Like, oh my gosh, I was cleaning up the edge of that sprite and it took a whole half hour.
I thought it was only going to take five minutes.
Like I better like, you know, quickly finish that and get on to the next thing.
Come up for air, right, break out of flow.
Get a chance to get a better perspective and get out of the, climb out of the rabbit hole for a little bit.
And even more important, taking regular breaks and getting up out of the chair is because sitting is killing you, right?
I don't know if, probably a lot of people in this room have read the recent research on the health effects of long-term sitting.
I definitely have personal problems with my legs and circulation after sitting for so many years.
And it's taking years off your life, and this is a sitting industry, a sitting endeavor, right?
Sitting at a computer, making stuff on computers.
It's really bad for you.
So getting up regularly out of that chair, away from the screen.
Also giving your eyes a rest and other things, right?
And so that's the second tool, right?
Get up every 30 minutes.
Set this timer to go off.
And every 30 minutes, you do a stretch.
You go get some water.
You walk just down the hall, whatever.
It's not a long break.
And then every hour, what I do is I go out, literally out of the house, and go for a walk around the block for a little bit more of an extended break, get circulation going, clear my head, be outside for a little bit instead of inside all day, which is actually really amazing.
Like, outside is amazing.
And it also helps me with the things I'm working on, because I get a fresh perspective on this hard problem I've been working on for a whole hour.
Maybe I'm stuck on something, I don't know how to fix this thing, or I don't know how I'm gonna get this artwork working, or whatever it is, and going out and walking for a few minutes, like, oh, all of a sudden, sometimes the solution will come to me, right?
The quiet of being out there in a different environment.
A couple words about stopping, right?
Like, it's hard to stop, I said that before, and you kinda feel like you shouldn't stop if you're on a roll, I'm getting stuff done today, actually.
But if you've been super productive for five solid hours, like you can stop, you deserve to stop, you should stop.
You're definitely not at your highest peak anymore.
You're making more mistakes and all that stuff, like what Roald Dahl is talking about.
But you should also be doing other things with your life every day, right?
Like having hobbies, spending time with friends and family, sleeping and eating well, having time to dream, you know, doing other things, right?
You know, this is a creative endeavor, right?
And we need to kind of, you know, let the dog off the chain and feed it some meat every once in a while, right?
So, and if you haven't tried drone racing, you really should.
But okay, so that's this process, right?
But we still have this deal, thing we have to deal with, which is the complexity of what we're doing, right?
So, games are some of the most complicated engineering projects in existence, with all the working parts that it takes to make something.
And how do we, like, cut our way through this thicket, right?
Like One Hour in Life is a perfect example of this.
I mean, so many moving parts, I can't even remember all of them now.
There's all these different servers and scripts to keep the servers updated and all this kind of stuff.
Like, how do I even figure out what to do next?
How do I figure out what to start working on at 8 AM?
And I use this tool.
And I think it's the best tool in existence for this, which is paper notes.
So first of all, why not digital?
A lot of people want to use some kind of digital tool to track their process.
Paper is actually way faster than digital.
You can draw diagrams.
You can cross stuff out.
You can jot down something really quickly.
And note that this is not a notebook, right?
These are loose three-hole punch sheets, and you can flip through them quickly.
You can reorder pages at will.
You can make a stack and put things that aren't so important on the bottom of the stack, bring the most important tasks to the top of the stack.
And you can pull a page out and put it on your desk or pull three pages out and spread them out on your desk.
You're not sitting there fighting with some notebook that's trying to close on you all the time.
And the finished notes can get out of your way.
You don't have to flip through them every time you look through the notebook.
They are going down.
I have this little section up here, which is finished, a page that sticks out.
And it's all torn up because I've used it so much.
But the finished notes, I've decided I'm done with this page.
I don't need to look at it anymore.
Go under there.
And eventually, if that stack gets thick enough down there, you can move it into the recycle bin, or you can put it in a three-ring binder if you want to save it, or a filing cabinet.
So that's tool number three.
Loose sheets, keep them on a clipboard to keep it from getting too messy, and file away unfinished sheets, and have a pen handy to write down what you want to do.
And at the end of the day, or toward the end of your five hours, you.
write down several things that you want to work on tomorrow to get yourself started, and that's at the top of the stack.
And then once you're done with that, it just disappears.
So those are these three tools that I think are really important and really help me to consistently ship games.
And I think if you use them, you'll be able to ship as many games as you want throughout your life, while maintaining, of course, mental and physical health, and not ending up shaking in bed thinking you're dying.
But there's a problem.
I'm giving you this method.
I hand it to you today.
You walk away feeling inspired.
maybe more or less inspired than you felt by the video, the Just Do It video at the beginning.
But we don't stick with methods that we start, right?
Here are Google searches for the term nutrition by week of the year.
If you look closely, you can see there's a big spike around New Year's resolution time.
And then interesting nutrition trails off until it drastically tanks around the next holidays when people don't care about nutrition at all.
And then they wake up on New Year's Day and try to search for nutrition again.
So people, we just generally don't stick with new things, right?
And you kind of know you want to, you've decided to, there's this temporary renaissance, but then these old habits creep in, and then you start feeling guilty, right?
You're like, ah, I knew I wanted to keep up with that thing, and I didn't, I'm not doing it anymore, I went two days without doing it, and that guilt makes you feel negative towards the method, and you kind of ditch the method.
It wasn't for me, it didn't work for me.
So how do you do it long enough to make it habitual, right?
And this final trick comes, again, from a writer, this time from Jerry Seinfeld.
So he calls this method don't break the chain, where he got a big wall calendar with the entire year on one page with all the months.
And they have small ones now that you can download.
If you look up don't break the chain calendar online, you'll find all these PDF files for different years.
And it has the entire year on one sheet.
You hang it in a visible place.
And you give yourself a red X.
for every day that you keep whatever habit it is that you want.
I mean, this can work for exercise or eating healthy or whatever too.
But in my case, it's like if I get up at 8 a.m.
and I start working at 8 a.m. without looking at Reddit or whatever other distraction, and I take my regular breaks and I work through the entire five hours without doing anything else, I give myself a red X.
I've also given myself green circles here for things like days I'm taking off for real.
Like I decided I'm taking a family trip or, you know, taking a day off for Thanksgiving.
And knowing that you're going to show the calendar to GDC in public really helps.
You can see, though, there's one little embarrassment there.
On December 13, that's the day I decided I should spend just a few minutes researching cryptocurrency.
And maybe two days later, I actually owned a part of a Bitcoin or something, right?
So.
And once you get a chain of red X's, you try to keep them going as long as possible.
And it's just one day at a time, right?
It's just one more red X.
It's just like, you know, you're taking one step at a time.
So that's the method, right?
Stupid simple, strict regular, limited work hours, regularly scheduled breaks that use a timer to wake up and remember the break, stack of paper notes to keep track of this complicated process, and keep it all going by not breaking the chain.
Okay, so finally, results.
from this method for me.
So before, when I was crunching, doing this crazy crunch, line of code per hour of day, and this, I said, was a very depressing graph.
Look at my morning productivity.
It's awful.
Look at my even 9 PM and 8 PM productivity.
After I implemented these methods, my lines of code per hour of day looks like this, right?
So that's a much healthier looking morning work routine.
I'm still kind of scrambling at 1 PM as my day comes to an end to get a lot done or whatever.
And I do work into the afternoon sometimes when I shouldn't.
I know I'm still working on that.
Stopping is the hard part, like I said.
Days of the week.
So during crunch, it was this awful graph.
Look at Wednesday, less than half productivity on that day.
After, oh, half hour is over.
Time to take a break.
After the productivity renaissance kind of methods were installed, you can see it's a much healthier looking all week long productivity with Tuesday being my best day.
Don't break the chain.
Stop when you said you're going to stop.
So I don't know.
I mean, I'm kind of at the end of the allotted time here.
But we can kind of go over a tiny bit for some questions.
Just one quick one.
Yes.
Why don't you work Saturdays and Sundays?
I love that time as before the rest of the family gets up.
three or four hours. I'm up at 4 30 every day. So I love the 4 30 to 9 before they get up on weekends.
So yeah, it's a good question. Um, I guess, you know, I do sleep on Saturday and Sundays, pretty much as long as my kids do. Um, and so, yeah, I get up and do stuff with them usually.
So that, I mean, I, it's kind of like, yeah, Saturday and Sunday is the time they spend with me really. Um, so in my family, that's just the way it works. I can see how sometimes.
if your sleep schedule is different than theirs.
Your kids are probably younger, so that's...
Yeah, I mean, my oldest is 14, my youngest is 7.
Yeah.
You know, I gotta get up and play League of Legends with them, right?
So...
Thanks. Great talk.
Yeah, thank you, man.
So, all your data is based on lines of code, right?
Did you count the sprite work, like...
Yeah, so, yes, this is all based on lines of code, and it's very...
it's very sort of biased and kind of unbalanced because of that, right?
Like there's all sorts of other things I'm doing, like I'm working on the website, or I'm making, being interviewed to promote the game, or whatever, those things count as work, right?
And this doesn't cover any of that, it doesn't cover the artwork either.
So I'm not, there's not a good way to analyze what number of megabytes of images created or something.
I guess I could do that too.
And there's also music that was created, like how do I analyze that number of minutes?
You know, it's like a separate graph.
And those things usually, I mean, coding is sort of the thing that sort of carries throughout the whole project and sometimes maybe I'll spend a week making music, but then I've spent like, you know, a month or two writing the music engine, right?
So you know, it's, I think, I don't know, I picked one, I picked the easiest one.
And I'm not sure about the other stuff.
Hi, my name's Jeremiah.
This is dope.
Thank you so much.
So I have a day job and then I have my creative awesomeness.
How would you change up this model for that type of thing where you have to balance one and the other?
Yeah, that's really tough.
I haven't done that for a long time myself.
I guess the last time was back when I was in grad school or something where I had these school responsibilities and still was trying to keep creative projects going.
So I know it's really tough.
I have other friends who are working and trying to ship games at the same time.
It's a real struggle.
I mean, basically, the reality is you can only get so much productivity out of yourself in a given week.
And, really, I think probably lowering your expectations about how much you're going to get done in your own projects on the weekend, which is really when you should be...
I mean, if you come home from work after eight hours spent and exhausted, you should be relaxing, you should be kicking back.
Hang out with friends, eating dinner, going to bed early, and that kind of stuff.
Not trying to crunch on your own game in the middle, late at night, and going to work tired the next day.
So weekends is probably it.
And be real realistic about making sure you have plenty of leisure time in the weekend.
Maybe Sunday afternoon only.
It's really tough.
I don't know.
But don't beat yourself up about like, that's the trap, I think, is that you get into this.
Some of my friends, I definitely see this happening with them.
You get into this, I didn't work on my game for a whole month.
I feel terrible, and every time I think about it, it makes me feel terrible, and I just don't even want to think about it for a while.
And then you just kind of get away from it, and then it becomes even harder to get back to it.
So picking a sane and doable amount of work and sticking with it so you feel good after each time, and then you reinforce this.
I felt good after Sunday afternoon.
Next Sunday afternoon, I'll feel good again.
And you get this positive reinforcement as opposed to beating yourself up and feeling like a failure, right?
So that's the only advice I can give there.
Okay, that graph was amazing, the one that you showed the timeline of the whole project.
After you had that breakdown, why did you come back to the project?
What brought you back as well?
Yeah, so I have financial realities.
You know, I'm a career independent game developer supporting a spouse and three children.
And, you know, we're trying to buy a house in Davis, California, which is not cheap at all.
And so we've been saving up for it for like seven years and still renting seven years later when we thought we'd be in our own house by now.
And so, you know, my family's really depending on the project, right?
That's another reason why it was so stressful is because when my friend came on board, I was paying him effectively a stipend or a salary during that time.
And so all this money kind of went out the window to my wife's chagrin.
And once I finally decided we weren't gonna work together anymore, it's like a year not only of time, but of money wasted, right?
Like those were our savings from previous games that we were almost, like we can't even pay another year's rent now.
What are we gonna do?
Like, so all those pressures were on me.
Not only that, I forgot to mention I was turning 40 right around that time.
So, like, and my child had just gone through puberty and he's like six foot three now.
You know, all these things were like.
Things were changing, things were happening.
My friend of 25 years, but still, I couldn't stop.
This game I'd worked on almost three years now, I had to ship it.
It was a good game.
I think it was a good game, it was worth shipping.
You hadn't lost faith in the game.
No, I hadn't, no.
But I realized that for such a big project, I needed a new, a breath of fresh air in terms of the way I was gonna be managing it from here on out.
Thanks.
All right, it looks like that's it.
Excellent.
Thank you, folks.
