Hi, I'm Brandon Sheffield.
I am the director of Microsoft Games and I'm here to talk to you about taste and how to cultivate it in your games and how you all have it probably.
There are too many games like these.
They all look basically the same and give no sense of character or taste whatsoever.
You look at a screenshot and you think, yeah, I've seen that, I know what that is.
These games, on the other hand, regardless of whether you like them, come from a foundation of taste.
You can see that someone had a perspective, something to communicate, and they went with it.
You look at a screen here and you might think I haven't seen that, I'm curious about it or that's too weird for me.
But either way, it's got your attention and as we all know, getting attention is extremely hard right now.
We should make more games like these.
There's a greater risk but potentially greater reward as well.
And why be an independent game developer if you don't want to take risks and do interesting things?
You may as well just go join a company.
If you show your taste and your passions, people will react to it.
People love to have opinions and they love to share their opinions against yours.
Especially these days with YouTubers and Instagrammers and Instagram stars and all these things, people are increasingly defining themselves by what they like, whereas they used to say what they do.
They used to say, I'm a carpenter or I'm a mechanic.
Now people say, I'm a foodie or, you know, I'm a film buff.
If you show your taste, they will react to it.
In between these two examples, there's something more like, this reminds me of something I liked that I thought nobody else did.
You want people to feel as though you made your game just for them.
Our game that we just released, Odeer, comes from the tradition of super scalers.
I can't necessarily say this is the best representation of completely different tastes because driving games exist, but we did it in a different way.
The technology is old because it's all pseudo 3D.
There's no actual 3D in it.
It's all scaling sprites, and we added some weird shaders and stuff.
So we took...
something that was old and added some twists to it and it made people say, oh man, this is just what I was waiting for, or you made this just for me.
On the other hand, we had tons of people say, what is this Atari trash?
But either way for us, it shows that we're staying true to ourselves and we made the game that we wanted to make.
It's not important that people agree with you, but that you know what you like and you make that.
If you mix the unexpected with the familiar, you've got a great platform to stand on.
Obviously, Overwatch is a great FPS that has layered on top of it someone's taste.
If this game, just being a great FPS, if that's all it were, if it used assets from the Unity store that were generic, it wouldn't be nearly as popular.
So people say that taste is something that you have or don't, and I completely disagree.
I believe it can be cultivated and that all of you are capable of self-analysis.
And I don't believe it's objective, it's entirely related to the individual.
So here are a few exercises to bring your own taste out.
Very important.
Think about your top 10 favorite songs or albums.
Write three sentences about them and why you like each one.
What was going on in your life when you heard them first?
Why did they resonate with you then?
Do they resonate the same way now?
Are there any tensions between when you listened to it back then and when you listen to it now and is that interesting in any way?
Watch a movie that your friend likes but which you don't or the reverse.
Talk about your feelings while being respectful of the other person's views.
Don't force yourself to break down why it doesn't work for one of you but does for the other.
Don't focus on why someone else is wrong.
Focus on why you believe what you believe, why you feel what you feel.
Go to a thrift store and find three things of interest there.
You don't have to buy them or anything.
Just find interesting things that appeal to you or seem weird.
What makes them interesting?
Who do you think owned these things?
Why did they get rid of them?
What were the circumstances there?
If you're lucky enough to be able to travel, go anywhere, even if it's a few towns over.
Avoid tourist spots and instead go to a specific restaurant, a thrift store, find something on Yelp, somewhere else that's very local.
Don't take the easy road.
Get lost.
Walk around.
You'll learn a lot about people and about yourself.
So how do you apply this to games?
Once you know who you are and what you like, it comes really naturally.
Why should this character be blue when it could be red?
Is there a reason for this person to be a man?
What if it were a woman?
What if it were genderless?
What if it had a dog?
What are people who you know who have dogs like?
How would they react in this situation?
Make sure you're asking and answering these questions constantly.
Make choices that matter in your games.
Don't do something because it's popular.
Do it because it means something to you or to your mom or to your team or to your third grade teacher.
When you make something for yourself or for someone you know, it's more likely to resonate with others because it will be genuine and real.
People respect taste. They crave a connection to it and want to be complimented for having thoughts and feelings.
Everyone has the capacity to do this. Some people have an easier time than others, but everyone is capable of identifying what they like and acting on it. I don't care if your taste Taste leads to a rhythm game with only smash mouth covers.
Just make something that means something to you.
If you make a game infused with your carefully considered thoughts, feelings, hopes, dreams, and taste, your game will be so much more interesting than the next clone of something popular.
There are so many bland and flavorless games in the world.
Let's not make any more of them.
Thanks.
Thank you.
One moment.
Next up is Tanya.
Hi everyone, I'm Tanya, the captain of Kit Fox Games, a small studio in Montreal, Canada.
You need to know how to take care of yourself and meet your hard deadlines.
Everyone in this room thinks probably that their number one priority is to make a great game.
Yes, we all want to make a great game.
But it's actually your number three priority, I'm afraid, because your number one priority, unfortunately, is to not die.
And it's important that you survive making this hopefully great game, because your next game will be better.
Okay? Get that through your head that you need to survive because you're going to keep making games, god damn it, and you're going to make them better and better every time.
So who here has trouble with deadlines? Oh wow, really? And do you have trouble taking care of yourself while you're meeting the deadlines? All right, so I'm going to tell you a secret.
All right?
It's really hard.
It is really, really hard.
And I'm not going to lie.
It's a constant struggle.
And any time you succeed, you should absolutely take a moment and appreciate what you've done.
Because taking care of yourself is hard.
But you can do it.
I believe in you.
And you need to believe in yourself, too, because that is step one of my miracle cure for death.
I know that it's possible because Kit Fox doesn't crunch.
We do a couple of weeks of overtime here and there as needed, but we made both Shattered Planet and Moon Hunters without burnout and these other much superior games were also made without burnout.
So it is possible.
All right.
So now everyone believes.
It's possible.
Great.
What next?
So the next thing is those of you who haven't set specific work hours, cut it out.
because it's bad for you and you do less.
You will actually accomplish more if you stop working so much.
And you'll thank me, believe me.
If you're not prioritizing your tasks.
That's the next secret.
We're getting into deep secret territory at this point.
If you have a deadline coming up in a couple of weeks, it's really important that what you're doing right now is actually important, and not just urgent, because if you start focusing too much on the emails in your inbox and the things happening tomorrow, you'll never actually get into the steady workflow that makes your game good.
So reprioritize as often as you need.
And estimate your tasks.
Some of you don't estimate your tasks.
Did you know that?
Like, you don't actually think, how long is this gonna take me?
And then when you're done with the task, you don't think, how long did that take me?
Do that.
And that is secret number four, okay?
If you're not estimating, you should, because it's a skill that takes time.
And if a deadline is coming up, and you can tell it's more than two weeks away, you're not gonna make it.
So, okay, your first thought is going to be, let's work more.
It's three weeks, three months away, but you know, if I just work harder, it'll be fine.
No, you're gonna die, okay?
Because three weeks of 60 hours, scientifically, is less productive, creatively, industrially.
It doesn't matter what work you're doing, you're doing it worse.
and your brain doesn't realize it because it feels awesome because you're putting in everything and you're bleeding all over it and it's great.
But too bad.
Those of you who have the magical thinking problem of thinking that you are special and exceptional to this, you are wrong.
They actually did a study on people who think they need less than seven hours of sleep.
They don't exist.
Five out of 100 people who think that are correct.
So 95 wrong.
Yeah.
The good news is that these secrets are actually just standard production.
And production is a skill like any other skill and it's a really boring one that nobody thinks is very exciting, I guess, because programming, designing and art is much more exciting for my time, at least.
But as long as you keep trying to get better, then you will, because that's how skills work.
And it's important that you don't give up because you're going to keep making games.
Even if you realize I haven't taken as good care of myself as I deserve, that's all right.
Forgive yourself, be kind to yourself.
Because we are primates.
Primates need food and shelter and belonging.
Primates need to be taken care of in a way that games don't.
Burnout isn't really about working a certain number of hours.
Everyone has different work habits.
A few long nights aren't going to kill you, but a few long months might, especially when combined with death or disease or other problems that are real.
Burnout is the feeling of becoming slowly dulled as layer after layer of exhaustion accumulates, weighing down on you.
Burnout is the void left behind where the rest of your career would have been.
Burnout is the exhausted bitterness where your passion and your excitement used to be.
But you could choose differently.
You don't have to suffer to make great games.
The moment we are in right now will not come again.
We are here in Moscone Center of San Francisco, USA, planet Earth, breathing this air and contemplating these great games because we're alive.
And everyone here watching this at home or in this room will die.
So, even if we create a masterpiece beloved for a thousand years, our existence here and now will be gone forever.
So it's up to you to protect what time and love and joy you have left in you and not use it up making yourself feel more productive.
If it helps, envision your dedication to self-care as a sword.
See the darkness of burnout gathering around you as a shadow, stealing away your concentration and your still-beating heart.
Be disciplined, warrior of light and courage.
Fight on, take care of yourself, and survive to make more games.
Thank you.
Thank you, Tonya.
All right.
Please welcome Jared.
All right. Hey, y'all. I'm Jared Huntley. I'm a instructor, game programmer from Cleveland, Ohio. I'm working on a game called Art Club Challenge. Co-authoring a book, I help manage the local community in Cleveland. And today I come to you with my background as an indie musician. I've probably played a couple hundred shows. Right now I play bass in my brother's band, Jewel Big Green. At some point I was hit with this idea.
My brother is an indie musician. He travels around for self‑promotion. He's self‑funded and he's pursuing a creative endeavor. I'm an indie game dev. I travel around for self‑promotion.
I'm self‑funded and I'm pursuing a creative endeavor. So...
all indie game devs are indie musicians. So if anybody asks you what you do, just tell them I'm a rock star. And you can point them to me. So after my discovery, I was doing some research into the subject to see what else is different, what else is the same, what we can learn from each other. So quick point.
I'm specifically talking about the genres of indie rock and metal because Cleveland is the metal capital of the USA.
Anyways, what can we learn from indie musicians?
So, first, how do you get started in game development?
How do you get started in music?
The way to get started in music is just to pick up the instrument.
There's nothing that compares to picking up the instrument, playing out a tune, making mistakes, learning how to function with it.
It's the same with game development.
There's nothing like making mistakes and just doing it.
It might be you get a music instructor, you might find lessons on YouTube, but there's nothing that compares to actually playing with the instrument.
Next, this is an argument I've heard maybe a hundred times about the title of indie game developer. I've heard people say, well, you need to have sold a commercial game. You need to have studied it in school. You need to have this or that. This is my take on it. You make games, you're a game dev. With music, you ‑‑ pick up an instrument, you're a musician. You're not a great musician. You have a lot to learn. You have a lot to go from there. But there's no such thing as a hobby musician.
I don't see why game development should be any different. And especially in today's world, I don't like titles that exclude people and make people feel like they don't belong.
Also, on that point, just because you make games doesn't mean you're immediately qualified to run a profitable small company.
That's a completely different topic.
We'll visit that later.
And lastly, is inspiration.
I typically hear games described as X game plus Y game or X game plus Y game minus Z game.
What about games inspired by your favorite place, your favorite dish, the sound of your grandmother's voice?
It's fairly common to have songs inspired by a hard breakup, an awesome trip or friendship.
I think great games that are doing things like this are Sybil, Imaginal, Emily is Away.
I'd love to see more games explore just these common human experiences.
So now that we've learned some things from how we're similar to indie musicians, what are some things that we can do to work together?
First is hire indie musicians. I see this fairly often.
just hiring a band to do music for your game. But one of the things that I'd like to add on to it is don't overlook your local bands and your local music scene. On top of having a custom tailored sound track to your game, it's part of your identity as a city, state and country.
Next is creating an art manifesto. I know there's game collectives and game manifestos, but if you look at classical manifestos, they often included people from different disciplines. It was about artists supporting movements with their chosen mediums. So what would an art collective with a potter, an indie game, an indie musician and a dancer produce? Those are the weird questions I'd like to see answered.
Lastly, go on tour with the band. Think about this scenario where you have an indie band that does the soundtrack for your game and then when they go on tour, you go on tour with them. As they're up there playing on the stage and they have their merch booth, you're selling your game in the back. It's a built‑in fan base. It could be an alternative business model.
So in closing, there's a lot of other fields that we can learn from.
There's a lot of other cousins out there.
I could've easily given a similar talk on the aggressive inline skating scene.
There's a lot of different, we're not all gone.
There's a few of us.
Seriously.
But there's a lot of other cousins out there that we can learn from.
I know that the game industry is different and things are different, but we're not as different as we think sometimes.
Also as I mentioned, Cleveland is a musical city, so it's no coincidence I'm up here talking about music.
So diversity in the industry means supporting different people from different places.
As we support more diverse people, we'll get newer and more rad ideas.
And lastly, I'll leave you with one indie music tradition.
This one is as old as time.
If you're ever on tour passing through Cleveland, hit me up, let me know, we have a place for you to stay, we'll hang out.
You all rock.
And thank you.
Thank you, Jared.
All right.
Please welcome Sadia.
Good evening, everyone.
My name is Sadia Bashir, and I'm the founder of Pixel Art Games Academy, which is the first and only game development academy in Pakistan.
During my professional development, there were no place to learn and experiment new ideas in Pakistan, and I could feel the pain of learning everything on your own.
So I started this academy where people can actually learn and experiment new ideas and actually make new and awesome amazing video games.
So today I'm going to talk about a few things that, my topic is three things that can save Indians from a pitfall, and especially if you are in emerging industries like Pakistan.
In most emerging industries, you don't really have much of professional veterans, and you can't really learn anything from professionals, maybe, but most of the things you learn is from your own mistakes.
So I'm going to talk about few things that I learned from my own mistakes and also from my seven year experience in professional industry and my research thesis of contemporary practices of video game development in industry.
Often we think a great game idea is something that make our game successful.
And we believe in that creative vision that this is going to sell our game.
But a process is something that makes a complete product.
I have seen many studios and many projects fail just because they could not actually utilize their resources properly in their process.
And this drove me, this get to me the bottom of, I'm sorry.
This drove me to get to the bottom of production processes and learn what can make a product successful and what can actually sink the ship.
So I'm going to talk about three things.
And the first thing that I would like to talk about is conceptualize at an early stage.
Often we start our games from an idea from a team member and we immediately try to prototype it and implement in the form of prototype.
And here we miss an important step, which is the conceptualization.
Chances are you have a great idea and great vision behind your idea, but creating your idea into a complete framework and a balanced game design is something that's imperative.
So here's a few things that can help you to actually conceptualize your idea at an early stage.
Define your goals clearly from the player's perspective.
You should know that what thing can make your, what would be that one thing which actually help your player to, which makes your game fun for a player as well.
Define the similarities of your game with other games.
It's perfectly okay to draw inspiration from other games, but do not try to copy the entire idea.
Create a game progression, level of difficulty, and level of achievement in your game, and keep checking if your game is still fun.
Second most important thing is the freezing the requirement of your games.
Most of the time we keep adding new ideas and new features in our game even until the end of very end of our production processes and we ended up with the feature creep in our products.
It's very important to freeze the requirement and scope of your game at certain point of your production processes to avoid feature creep.
Third and most important thing is about quality of a product and a quality of a process.
Most of the products, a quality of a product is very much dependent on the quality of a process. Most of the game developers do not really think about formalizing their development processes, which I think is the most important thing to do even before starting up your game.
In my research, most of the Indies shows that they use ad hoc and agile game development processes for their games.
Agile development processes actually use much more iteration in design and testing phase, and you have to go back to the requirement and design phase for each iteration.
The most common problem with agile development processes are unlimited iteration, which often lead you to untracked changes, unclear planning, future creep, and extension of development processes, which may actually lead to an increased development cost, which by the way is bad news if you are an indie developer.
So I would recommend you to use hybrid game development processes, which is the mix of agile processes and a traditional development life cycle processes, which is traditional software development life cycles.
So in hybrid process, we aim to minimize the iteration between phases so you can actually minimize the cost of creating a game.
There are many...
There are many ways to create a complete game.
That will not actually guarantee the success of your game, but it will guarantee that it will reduce the cost of your game and it will help you to optimize the use of your resources.
You may fail in the end, but I hope it will not be a disaster.
Thank you.
Please welcome Marvin.
Applause Holy dilly, that's a lot of people.
G'day everyone, my name is Marvin Exposito.
I'm a game designer from Brisbane, Australia.
I'm here to talk about subverting expectations and sharing with your dad.
Um...
So I've been making games now for about two years.
I mostly make games based on terrible ideas.
So that's games based on incredible mundane boring things like cats that get into trouble or maybe games that are slightly weirder like giant muscly ducks getting into trouble or games especially about things that are both weird and a little bit mundane.
And sometimes people send these suggestions to me on Twitter.
That's my Twitter up there, at bonerman underscore ink.
And here's an example of one of those games.
This is an office fart simulator where people, where you need to fart in an office without, you know, avoiding detection.
Pardon me.
As you can see, your co-workers don't quite like it when you drop your guts, as we say down under.
And this is a game about being an adult and paying your bills.
This is basically what happens to me whenever there's a Steam sale on as well.
The reason I bring these games up is these games are fake games.
They don't exist in the real world as a real playable game that you can download or buy or whatever.
They exist solely to deliver a punchline, which is exactly how Shower With Your Dad seemed later 2015, Do You Still Shower With Your Dad?
That's the full title, started out.
It started out simply as this GIF.
It was a joke on Twitter that went too far and ended up being my very first ever commercially released game.
Thank you.
And for my first ever commercially released title, I was pretty happy with how well it's done.
So far to date, it's sold over 325,000 copies.
It's got a 95% positive rating on Steam from over 6,000 reviews.
And I attribute a lot of the game's success to the way that the game used subversion.
Now, when I'm talking about subversion, I'm not talking about...
What have I done?
this thing, which you might be familiar with if you're a programmer or have worked with programmers.
I'm talking about the definition here, which is where you establish a set of rules or a pattern and then you undermine it or you turn it on its head.
And this is something that happened through both the marketing of the game, albeit accidentally, and intentionally through the gameplay with positive results.
So this is what the Steam Greenlight campaign looked a little bit like when it first came out.
So, when the game was first announced, it had this incredibly gimmicky title and this incredibly low quality trailer.
As I was recording this trailer, people were actually sending me messages on Steam and so you could hear the little notification noise as a part of the trailer itself.
So people had built up this image in their minds that this was going to be this garbage, low-level, quality game.
But the main thing it did was it got critics and the press talking about the game.
So you can see there, normally when you see a game on Steam Greenlight, you'll see the most views when it's first announced, and that kind of tails off over time.
Because of the coverage it got, it actually got a second bump, almost as big.
as the initial sort of press it got.
And so people were talking about the game.
And at that point, this high-quality trailer, which was a parody of Kanye West's Power, except Shower was the theme, was released.
The video was done by a guy called Everdrede who's currently working on the Tingler as well with Zoe Quinn And also did the trailer for Undertale, but this incredible high quality trailer came out a few days later And you can see that well it didn't get as many views Because of this high quality trailer it actually got more yes votes compared to the number of views It was a higher quality of view to the Steam Greenlight page than the initial low-quality trailer.
So I was able to maximize the audience of who saw or who heard about the game.
So by building up this facade and then subverting it, I was able to make the marketing of the game a little bit more memorable.
And this is something that happens throughout the core game itself.
So if you're not familiar with the game, it's a fast-paced dad-matching game.
We have to guide your child to its dad.
And there's a power-up there. You can see it's shaved the dad's.
That's the entirety of the power-up.
But that's the core gameplay loop.
This is something that just happens as the game goes on.
But then eventually, the next thing you know, you're in a point-and-click adventure game where you are a pantsless cop dad.
And the idea is that you need to get the shower up and running again because the hot water system isn't working.
You know, very much inspired by Frog Fractions.
And the reason why these sort of moments are memorable to people is because it turns out people really fucking love surprises.
So this is the results of a scientific study, I forgot which university it was but there's a link down the bottom left there if you want to look up more about it.
What they did was they got these test subjects, these people, hooked them up to MRI machines and then at regular intervals squirted liquid into their mouth.
It was either juice or water.
And everyone had a preference for either juice or water.
But what they found was that if you squirted liquid at an unpredictable rate, that actually drove enjoyment way more than if you got a preference for juice or water at a predictable rate.
So people just loved the surprise aspect of it a lot more.
But the subversion is just one aspect of the game.
Obviously the incredibly long, ridiculous title acts as a hook.
It's got a very accessible price point which encourages gifting.
And the core gameplay loop, I reckon, anyway, is interesting enough on its own.
But hopefully that inspires you to add a little bit more surprise and subversions in your game.
Thank you.
Thank you Marvin.
All right.
Please welcome Gemma.
Hi, my name's Gemma, and I'm an indie developer.
And ordinarily, in a venue like this one, that might sound like a weird sort of confession or even an attempt at humor, drawing upon the shared background level discomfort many of us might feel about this career path and medium we've chosen.
Some sort of gallows humor, I guess.
But for me, this is a genuine statement, which I actually find myself having to reinforce time after time to others as much as to myself.
For example, A little while ago I was at a gathering of Stockholm indies, one I've attended for a couple of years now since that's the city where I live.
Chatting away in a 400 year old beer cellar about this medium we all love, when the developer I'm talking to starts in surprise.
You're an indie developer, he says?
I thought you were just a student or something.
It's an assessment which is not negative per se, but is also not at all rare for me.
In correcting him, I had to explain how I've been in industry for six years, how instead I lecture students at universities, and how at the time I was working to found what is now a studio called Kaleidoscope.
Despite having worked on around a dozen indie-scale projects, people still get surprised when I tell them that, apparently despite appearances, I am an indie.
And I suspect I'm not the only one for whom this is the case.
It's a problem which at first felt like one of gender bias, given that I do identify and present myself as female.
Then I began to wonder about somehow broadcasting my own imposter syndrome, telepathically infecting the outside world with taints upon my own confidence.
But when I worked to get over that particular kind of nonsense, I began to wonder if it's perhaps because of something else.
What if the reason some of us don't pass for Indie is because our community and culture is still being misrepresented?
Whilst we can all sit here and know that, from practical experience, and at least to some degree, the Indie sphere is a diverse one, the outside world, and therefore the stereotypical view of an Indie developer, arguably still see what we do as something like this.
namely white men either crunching away in bedrooms and small offices surrounded by toys, or cafes and trendy co-working spaces surrounded instead by modern art.
That said, part of our development process does take place in a London cafe, so for Kaleidoscope at least, there is a small element of truth in Jonathan Blow's muffin there.
My point being that whilst these are not bad things in and of themselves, there are a slew of cultural trappings wrapped up in particularly the formal interpretation of what indie is, which at best misrepresent most of us and how we work, and at worst glamorize some rather horrifying working practices.
Though amusing at first, images, articles, and ideas like that of the ramen scoffing bedsit dweller still saturate search terms relating to our own career niche.
Nothing about this should really be aspirational.
And yet for some, this notion of caffeine addicted, stay-at-home indies who have to be reminded to put clothes on and go outside in an embarrassing number of articles is somehow the lodestar which we and they are navigating towards.
Insofar as we have any label, I'd rather espouse and aspire to the positive aspects of it, thank you very much.
But why are these ideas of India's label and how Indy we are even important?
I offer two main reasons, one of which is personal.
Indie game development and the communities within it are a part of my identity.
And when somebody I'm meeting for the first time cuts through pointless small talk to ask a good question, like, what do you choose to do with your limited time upon this earth, I like being able to say that I enjoy interactive and accessible experiences for people to enjoy, to learn from, escape to, or whatever it is that they and I fancy doing at that time.
Another reason is broader reaching than that, and to bluntly summarize, I don't think that something as inspiring as what we should do should be seen, again stereotypically, solely as the domain of privileged individuals who can afford, financially or physically, to spend months on voluntary crunch.
Working out of a backpack and generally letting standards of living slip for oneself and for one's collaborators just to get the game done doesn't work for everybody. Nor do I think anybody should feel pressured into that kind of lifestyle or be judged for having priorities elsewhere and therefore not being able to match up to that ideal.
Do we really want indie to be seen as a single, homogenous strand of game creation?
Or can we perhaps shift the focus ourselves?
A five-minute soapbox is a tough space in which to try and offer solutions.
But insofar as people do listen to us as indie creators, I think it's our duty to talk more about just what it is that we do, privileges, hardships, and all.
So as to dispel the illusion that we're still all living an indie game-the-movie lifestyle.
I'm afforded some social privileges myself.
My place is that of one who can occasionally travel to game jams and conferences, and can devote a portion of her life to passion projects and to advocacy work.
But in other ways, I am an atypical indie, as I suspect the vast majority of us actually are.
So for venues beyond this one, let's see if we can shift the conversation a little bit, move the idea of indiness away from something which is literally all-consuming to one which is more realistic and frankly more respectful.
Because our chosen place is that of indies and this space is what we make of it.
Thank you.
Thank you so much, John.
That was great.
All right.
Oh.
Jerry.
Jerry.
Jerry.
Wait for it, Jerry.
It's going to happen, Jerry.
Hang in there.
All right, please welcome Jerry.
I don't think that bit ever gets old.
I'm Jerry Bellick.
I'm a professor of game design at Miami University.
I'm also working on my MFA in experience design.
And at Miami, I'm part of the interactive media studies department.
We're hoping this fall that we will officially have our game design degree in place.
I'm also an independent game designer.
Being a teacher does not eliminate that part of my identity.
I primarily do work in the medium of alternative controllers, hardware, electronics, but what I want to talk about is why we need to Venn harder in the industries of games and academia because they are not crossing over nearly as much as I think that they ought.
So I think one of the biggest problems is we are lacking enough synthesis of all of the incredibly unique experiences that all of you have. It's starting to happen, and universities are starting to get interested, and they're starting to figure this stuff out, but we are going to lose a lot of incredible stuff considering the huge percentage of people that have come into the game industry, whether independent or in studios, through incredibly unique paths and different kinds of of experiences.
So schools are taking it more seriously, but we still got a really long way to go.
There are opportunities, however, for all of you to be involved without giving up your professional careers and your industry work.
Academia wants you to stay involved in the industry.
It's important that you do because that is where you're going to continue getting the kinds of experiences and unique perspectives that are going to benefit the students and the game designers of tomorrow.
And you might accidentally like it.
It's not bad.
Educators can keep this up on their own.
A lot of them don't have the experience in the first place, and we need a constant cycling and influx if we're going to keep that fresh.
The disparity right now can feel a little bit awkward.
So at Miami, I teach game design, development, pipeline, production, but as I said, alternative controllers are kind of my jam.
And I started a class this semester teaching alternative controllers as a form of design, and it is the most interesting work that I have seen so far of any of my game design students.
There's some practical reasons for that, but I also think that it has something to do with alternative controllers being the lens in which I view game design.
It is how I have explored game design intimately.
where I am most passionate and I think students are really responsive to that.
You don't know what it is you know until you teach it and I think often you get really surprised by what it is that you do know. There is so much fresh territory and all of you have dug in such interesting places and we need you to take your personal lens and let students look through that for themselves. There are so many insights that you may have that you think are trivial that would be profound in the hands of the right minds, brain hands.
I am sick of this argument when it comes to game design degrees.
It drives me absolutely insane.
We're trying to get them jobs.
We're trying to teach them unity.
No, they've got to make games.
It's bullshit.
I don't believe game design is a technical vocation.
It is art.
It is design.
It is craft.
Tools are great.
Their design work should motivate their exploration into the technical.
So what is a game designer?
I don't know, but we can't forget to teach the design part of game design.
Design exists for people, to evoke, to provoke, to help, to heal, to create meaning.
So how can we complain about derivative, boring, cookie-cutter work, copies of copies, if students are handed powerful tools but never taught how to think deeply about their work and about themselves?
I believe they do have the life experience.
Undergrads are young, but they have still seen a lot.
They've done a lot.
But they need our help to understand it and to parse all of that information that swirls around their weird little souls.
So we're still trying to figure it out.
And I don't know that I have the answers.
I have ideas about what the answers might look like, but I can't do it alone either.
We need collaboration, especially between industry and academia, and lots more crossover between them.
Getting more professionals involved in education is not just for the students, it is also for the faculty.
Triple A independent.
game designer, developer, artist, journalist, producer, whatever your role is, it doesn't matter. The variety pack is ideal. So what can you do? Well, there's adjunct teaching.
You can teach little courses over a semester and you get a few grand and you get to meet lots of students and lots of teachers and lots of people and it's great. Universities are usually deeply understaffed. We really need that. Do more than one class in a semester.
Just make a package deal.
I did a semester-long residency at Eastern Kentucky University.
Got a full teacher's salary for the semester, got lots of benefits, did workshops, did all sorts of fun things.
It was brilliant.
And I got to be in a new place for a whole semester.
My talented friend Lisa Brown did that at Harrisburg University for a whole year.
And does she want to be a teacher her whole life?
No.
She's a teacher.
She's a teacher.
She's a teacher.
She's a teacher.
She's a teacher.
She's a teacher.
but it was great and the students are better for it.
You get benefits, funding, all that good stuff.
Collaboration with faculty.
Video call sessions with classes.
Right now we are working on a game capstone, which is really, really hard to do.
Trying to emulate the trials and tribulations of small teams or studios working to create professionally viable game experiences.
And Young Horses is doing that.
It's taking only a few hours of their time, but they're allowing us a way to examine what it is they want.
What are their values?
What it is that they care about?
And how do we create something or pitch something that actually makes that happen?
Teaching may sound super duper scary, you may feel unqualified, ineloquent, and a bunch of strange people staring at you, imposter syndrome, all that good stuff.
So here's some tips. You know who else is scared? Undergrads. They're super scared. Way more scared of you than you are of them.
You only need to be a step ahead of them in most things. The real stuff is your experience, your wisdom, your lessons learned through blood, sweat, tears, and time.
So let's go back to our event really quick. What we are missing— What we are missing to push the current and future students to open up to express themselves and to make games even harder to define is all of you.
To help build the bridge, overlap the space, and share your unique experiences and perspective, the future of games is counting on you.
So join us.
Take a little break from the hustle and bustle before, you know, someone destroys education.
Thank you.
and get in touch with me if you need more ideas. Thank you, Jerry. All right.
Please welcome Bree.
Oh, God. Okay. Hi, my name is Bree Code and I wanted to share with you everything I've learned about public speaking because somehow I've managed to travel full time for the past year and a bit speaking at conferences but I have absolutely no talent for this. The first time my boss asked me to speak on camera, I forgot my own name.
I did.
15 minutes before the second talk I ever gave, a man asked me if the seat next to me was taken and I was so nervous I couldn't understand his question and I couldn't answer and I just stared at him until he walked away.
But with each mistake like this I've changed the way I do things and I have like a really strict process.
So a week before the first good talk I ever gave, I met with my friend Jason to get feedback and he patiently listened to me talk about it.
how great my slides were and how great I was for finishing them a week early.
And then when I was done, he told me that out of my 60 slides, only one was interesting.
He told me that I had to rewrite the whole talk, and he was right, because that slide was the only slide that was honest.
I learned from Jason most things I know about how to write a talk, but especially I learned to start by thinking about what I care about and to work from there.
Every talk I've given that fell flat was one where I was trying to say what I thought people wanted or needed to hear, and now I just talk about what I care about and it gets much better.
I also decide who my audience is.
I discovered that my talks are less clear and less effective when I try to speak to everyone.
So now I just speak to inspire underrepresented people and not to try to convince any dudes who are stuck in their bad ways that they're wrong, because like our sworn enemy said, there are a lot of bad dudes out there.
Once I know why I care about a topic and who I want to talk to, I make an outline.
The outline is simple, but I follow a very specific order.
First, why do I care about this talk?
What am I trying to accomplish?
Why do I care about that?
Second, what is this thing that I care about?
What are the details?
What is my argument?
Third, what does this mean for you all and for myself?
What are the practical applications of this information?
What are the next steps?
And I'm a typical programmer, I'm methodical, and I'm detail-oriented, and I'm boring.
And what I write, the first draft, is really boring.
But I found a management study of techniques that turn boring leaders into interesting leaders.
If you Google, can charisma be taught, you can find it.
And I methodically go over each point in my outline, and I apply these techniques.
I turn my ideas into stories, or lists, or questions, or metaphors, or contrasting points, and then people seem to like them better.
And then once my outline is ready and it's more interesting, I just take each point of my outline and put them on a slide, and it generally works out to about one to two slides per minute.
And then I go through and replace each idea with a picture.
I get rid of as much text as possible, and I do that because I accidentally spent one talk just reading my slides to the audience and not saying what I'd planned to say.
That was really terrible.
And then in a talk this fall, halfway through I lost access to the notes on my screen.
because there's always technical difficulties at conferences.
And then I was horribly stuck without my notes.
So now I know that the pictures not only need to be guides for the audience, but also for myself.
And then when my slides are done, I practice a lot and get feedback.
And I discover important things when I practice, not just with the writing, but with myself.
The first time I wrote a one-hour talk, whenever I practiced, I kept panicking halfway through in my own apartment by myself.
And I couldn't figure out why, because I'm very comfortable in my apartment.
And by practicing enough times, I noticed that I was always panicking exactly at the 20-minute mark.
And I realized that I was just never actually stopping to take a breath in.
And I thought I was panicking, I was just out of breath.
And then that made me panic.
So now I remember to breathe.
It's amazing.
Which brings me to my final point.
I will always be nervous before my talks.
Emotions exist for a reason, and we get nerves before we talk because that energy helps us to deliver at least a slightly more energetic talk.
So now when I feel nervous, instead of thinking, oh God, I'm so nervous, what if I faint in the middle of this, it's gonna be terrible, I think, oh God, I'm really nervous because I'm doing a talk and I need the energy, and then I'll feel better when it's done.
And this helps me deal with that overwhelming anxiety that made me forget my own name on camera that first time.
and I'm still really uncomfortable on stage.
I forget to stand up straight, which I probably did, and I forgot again.
And sometimes I forget to talk into the microphone.
I've done that more times than it's really embarrassing.
But I'm working on this, and I welcome your advice.
And you can contact me on Twitter anytime if you have questions or advice, or if you need encouragement for your own talks.
Thank you.
Thank you, Bree.
Please welcome Colm.
Hi, everyone. My name is Colm Larkin, and I'm the founder of Gamberness, an indie studio from Dublin, Ireland.
So I'm going to tell you a little story today about sharing your work, sharing your games, and why that's important and why that helped me.
I made a game called Guilds of Dungeoneering.
Came out in 2015.
It was with a very, very small team.
We had no budget.
And against the odds, I guess, we were quite successful.
And for me, my favorite parts of that success were appearing in print magazines and when we released on mobile, being on the front page of the App Store.
That was amazing to me.
And as I think back about why I was successful, I believe it was because I was sharing my work.
When I started making Gilded Engineering, I decided to develop in the open.
And I started a thread on TIG Source, which is a game development forum, and started just sharing playable versions of the game and asking for feedback from day one.
And that was great.
And I was basically following in the footsteps of people I admire and games I admire, like Fez and Minecraft and Papers, Please.
And not only that, but I shared the idea for Guild of Dungeoneering before I ever started working on it to get feedback on that.
And for me, sharing let me stop wasting my life not making games and actually finish some games, well before Guild of Dungeoneering.
Let me become confident.
And then when I did make a commercial game, I believe made it much more successful.
So I just want to take a little time and talk to you about three things about sharing that I think are very important.
So the first one is that your idea is not that special.
So it's pretty common to have this romantic notion that you need an incredible idea to make a successful game, or that the idea is the only thing that matters.
And I don't think that's true at all.
I think execution is key.
Iterating on your idea with feedback and sharing early, I think, helps you shape the vision of your idea into something interesting.
I don't think an idea is actually all that important.
And the second thing that I think is important about sharing is that no one is going to steal your idea.
So this is a very common fear, I think even maybe an excuse we make to ourselves so we don't have to share things.
you know, someone is going to see your idea and make a better game.
And I don't think that's true.
I mean, even if you share your idea and someone goes and makes a game based on that idea, your two games are going to be completely different by the time they come out.
And if, you know, the worst happens and someone just wholesale copies your game and your idea and everything you've, you know, been sharing, well, I've got some good news for you because you basically have the moral high ground there and you have this public record of, you know, what you've been making.
you get to go get some free PR and tell your story to the press, and that's cool.
The final point I want to make is basically to share your work embarrassingly early.
I think embarrassing is a very important word there.
If you start sharing things you're proud of, you think are great, you've made a mistake, you're sharing too late.
It's very important to start sharing when you're really embarrassed about what it is you're showing.
And there's a few reasons for that.
So if you start sharing really early, there's a few great things that happen.
So you'll save yourself time, you won't end up going down some kind of rabbit holes of development thinking this will be good, because you're getting feedback immediately on whether that sounds interesting.
And you'll get more basic feedback on basic parts of your game.
So like the idea itself.
the concept, the setting, the very bare mechanics, well before looking for feedback on more late stage stuff like polish and graphics quality.
And this part is very hard, and practice makes perfect.
start doing this and it will get easier.
And the reason I think it's so hard is that you are basically sharing your rough work, your really bad work, and you're kind of comparing it mentally to the best finished work of people you admire.
And that is very difficult.
And I would suggest just trying it and forcing yourself to do it because it gets easier.
And more than that, it really helps.
So I believe sharing and doing this has made...
me a better game developer has made the games I'm making better too. So I hope you try it.
Thank you.
APPLAUSE Thank you Colm. All right.
Please welcome our final speaker, Jane.
Hello, everybody.
My name is Jane Ng, and I do 3D art at Campo Santo.
We shipped Firewatch last year.
I usually talk about environment art stuff, but today I'm going to talk about something very different.
I'm going to talk about this.
This is a real candy bar. If it's not clear what's going on there, the tongue part is the candy.
So do you think it matters if that candy is any good at all? No, right? Because very few people will want to try to eat that, right? This is a terrible product. And this is what I really want to talk about today. Product and why it shouldn't be a dirty word for Indies.
Now, a while ago I saw this tweet and I forgot who it was from.
It doesn't matter.
I'm sure most of you have heard or seen something like this in your own circle.
There is, in my opinion, a general aversion to talking about our games as items of commerce.
But we really should just stop feeling weird about it.
In fact, if you sell your game in any way, shape or form on any platform and you need to pay your bills, and I suspect a lot of us in this room do or want to, then we need to talk about it.
Thank you.
Why? Because this is the age of Let's Play videos and refunds.
A lot of people, even people who love your game, don't have to buy anymore to check it out or experience it.
Now as indies I've always been very grateful how supportive we are to each other.
And you know, you always can get help with your game idea or if you need feedback on a prototype, you know, there's always help.
But I rarely see anyone ask, hey, what do you think of my copywriting?
Or even would you pay money for this if you saw this on Steam?
I know it's a very uncomfortable thing to ask or even to think about, because it is very uncomfortable to acknowledge that a great game experience is not the same thing as a good entertainment product that people might want to buy.
Now in our ideals, we think that great games should be rewarded, that we think people should buy great games.
And we want it to be true so much that we sometimes forget that this is not, in fact, a causal relationship.
In game design, we are often urged to make decisions in the interest of the player, and that's great.
And all I'm saying here is that we spend a little time considering our game outside of the game experience itself from the perspective of your potential player, someone who has not even played your game.
Now, how would your game look to this potential player?
Is it attractive?
I strongly believe that you can have a game that people want to own that is also 100% yours.
Evaluating your game honestly from the perspective of a consumer is not compromising the creative integrity of your game at all.
And this is not just a business thing.
So don't fret about how, oh, but I don't have a business person.
In fact, I think a lot of this is really more of a design problem.
And don't forget that product design is a big field outside of games, and a lot of the lessons do apply to video games.
The good news is, most game developers are very well equipped to tackle multidisciplinary design problems.
And a lot of aspects of making a good product can involve your whole team, and it can be really fun.
And there's no one right way to make a good product.
The amazing thing about being indie is that you can do it however you want with your values.
Now some key points about some aspects of great products.
Actually this is way too big of a topic so I'm not going to talk about it and I'm also not an expert.
And while we can probably agree on what is terrible, what is great is relative and it depends on your audience.
And the key thing is to not neglect it.
Do spend some time thinking about what makes a great entertainment product for you.
For me personally, every time I see a game that I want to throw money at, then I feel like that developer is doing something right.
And I do try to spend a little time thinking about why I feel that way and try to learn from it.
So a good product is seductive.
A good product makes people want it on their physical or digital shelf.
And you need to consider your whole package and it needs to be attractive to people you think would like the game inside the packaging.
So in short, just make sure your great game isn't a Jar Jar Binks candy talk.
