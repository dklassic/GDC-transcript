This is Hutch, fantastic mistakes and how to avoid them.
Thank you very much for coming.
I'm Andy Watson and I'm the COO of Hutch.
And we'll be talking about the mistakes and learnings of Hutch, focusing on the last five years that have led Hutch to becoming a profitable studio.
So you don't have to make the same mistakes that we've made.
The reasons behind this talk, I wanted to talk about Hutch because I think the growth profile is very different to a lot of other studios.
I think most studios have a really big hit or significant amount of funding, whereas Hutch has had a very modest success in the beginning and have grown quite responsibly after that.
There's some common themes that I'm going to keep coming back to.
Lean culture, for us, lean isn't about building cheap and ugly games, it's about building for design efficiency.
Once you accept that designs are an assumption, and you can build the core value of the game, the MVP, and focus on the viable, you can increase your speed to learning, to understand the value to players.
I'm not talking about the soft launch though.
I'm talking about before you've committed to making your game.
Break one rule.
This is an internal term we use, and it's about understanding your references, understanding the risks you're taking, and only innovating in a way that adds value to your players and to the game.
and invest in your team. This seems really obvious, but you'd be surprised how many studios don't do this. Your team are the ones making the day-to-day decisions, so sharing positive and negative performance with them and never taking learning for granted.
Just a little bit about Hutch. We're a company of 60 people spread across two studios. The London studio focuses on the creative aspect of games development, allowing our Canada studio to focus on tools, technology and ports.
Hutch was founded in 2011 by five ex-Sony developers.
They'd been there between five and ten years each, all working on console games, but they'd never actually managed to get a game released.
And they wanted to go through that cathartic exercise of getting something into players' hands.
So the studio was really born out of a sense of frustration.
So all their experience was that Sony, and Sony is all about innovation, so they saw an opportunity to innovate and make a mobile-first racing control system.
So they made a paid game in Smash Cops, and they were a little bit lucky with featuring, and they made about a million dollars.
And in 2012, they saw the market evolving towards free-to-play.
So they integrated some light free-to-play mechanics into Smash Cops to create Smash Cops Heat.
And they found it quite a humbling experience and realised they're only just dipping their toes into the water of free-to-play.
They made a little bit more money, but they realised if you want to make the most of free-to-play, you need to build something from the ground up with free-to-play knowledge and really invest in bringing free-to-play experience into the team.
And that's when we built Smash Bandits.
So I joined halfway through the development of Smash Bandits, and I'd worked at Glue, Playfish, and EA Mobile on some really big, successful free-to-play products, but also some massive flops.
So I understood how brutal and fragile the free-to-play market could be.
But there was this emergent culture that you needed to innovate to succeed was a pillar at Hutch as opposed to learning from successes at the App Store.
And it was creating this reliance on featuring.
So we were always swimming upstream.
And we were building great games, but we weren't building great businesses.
And every free-to-play game needs to be able to exist as a business.
And champions of gameplay was another pillar.
And champions of gameplay is great, and it's something we still do.
But you cannot do that at the cost of building a deep metagame.
and copying and referencing other games were almost dirty words, and that was founded in the desire to innovate, and that really affected the development of Smash Bandits, and that's the first game I'm going to talk about in any detail.
But this is called Fantastic Mistakes, so I'm going to get straight into it.
Smash Bandits is a great game, it's just not a business.
What we wanted to make was an endless runner.
Casual, accessible, mass market with short gameplay sessions and a deep meta game with significant monetization potential, durable and consumable content.
What we actually made was a highly skilled core gameplay experience, not casual or accessible at all, with a light metagame that didn't create enough reason for players to monetise and incredibly difficult to operate as a service.
we weren't lean at all.
If you look at the screenshots, it's full of great gameplay.
It had a procedurally generated open world environment that went from cities to water levels to canyons, which is insane when we look back at it.
It had no soft launch.
We used SmashCop's performance as validation for it, and we indulged the studio's desire to create and be creative and innovate.
Ultimately, we built the game for ourselves.
And we broke all the rules.
There's nothing like Smash Bandits in the market.
It had a new gameplay system for free-to-play, a new metagame system.
There was nothing in the market that players could reference.
They had no familiar experience.
And we didn't understand the model we were trying to use.
It wasn't accessible, it wasn't mass casual, and it had really long session times.
So when we look at the revenue and the downloads, you see these shark fin revenue charts, which grow a little over time, that shows there was a little bit of learning, but every update was focused on innovation and skill-based features.
There was very minimal metagame stuff, we were really just skirting with free-to-play.
And the company has always been consistently able to get lots and lots of installs, but not been able to monetize them.
That meant our LTV wasn't growing enough with the updates, so our LTV to CPI ratio was never enough on Smash Bandits to be able to do meaningful UA.
And if you look at it, we've got this console mentality of these big updates, so big releases, so we weren't understanding our references and it was just feeding our desire to innovate.
And all of this could have been avoided if we'd understood what players really wanted and created value for them.
So it comes back to those core themes.
Evolve a lean culture.
Smash Bandits could have been validated in two months rather than waiting the nine months to release it.
And then we would have built a better game or a different game.
We didn't break one rule.
We broke all the rules and had crazy levels of innovation.
But we were starting to invest in our team.
We were transparent with what worked and what didn't work.
And the team were beginning to learn from these mistakes.
And you can't teach that.
Seeing a great game that doesn't work as a business is an incredible experience for the team, and you can't buy that experience.
And the team were beginning to understand what risks they could take.
So we moved on to make MMX Racing.
MMX Racing we made in nine months with nine developers, and it cost about a million dollars, and to date has 25 million downloads.
What we wanted to make was a drag racing game with monster trucks.
We felt there was an opportunity.
In the drag racing space, we felt all the players were focused on the rev counter and the gear changing mechanics, and we wanted to focus the player on the truck and the environment.
So we stayed really close to our reference points.
Drag racing games are simple and accessible.
and we ensured that MMX Racing was simple and accessible.
MMX Racing was a really successful title for us and we learned a lot.
We supported it for 18 months post launch.
It cost about a million dollars to make and to date has grossed about 10 million back.
So we stayed close to our references, but Hutch will always innovate, but that needs to be justified and you need to understand the risks.
We did make mistakes with it, so we did a big multiplayer update.
The whole game of MMX Racing took nine months.
Multiplayer took eight months after launch to make.
And we guessed what we thought the core value was and built it.
And we did validate with an audience.
And it was nowhere near as good as it could have been.
And ultimately, with MMX Racing, supporting it for 18 months was too long.
And we kept the team on it for too long.
When you look at the downloads and revenue charts, you'll see we had this massive launch.
This is just on iOS.
We did four million downloads on iOS alone.
But we didn't make the most of it because we didn't validate early.
We did multiple updates with WWE, car crushing, fusing systems, chat systems, and multiplayer.
You can see there's no real significant impact on the revenue post-launch because we didn't validate with a live audience.
And you can see that on those charts.
The one big update that we did that had the biggest change was we changed the tutorial and that increased our LTV by 30%.
And that's what pushed us over the LTV to CPI ratio that allowed us to do user acquisition.
And it coined this term in the studio that featuring is for a week, but LTV is for life.
And later on that led for us to make top drives.
And I'll talk about that a little bit later.
But, so because that biggest change was down to the tutorial, we could have made that earlier if we'd been lean and we'd validated early and we would have had a better product for it.
So we'd improved in some ways, we'd understood our reference and we'd built out that core experience.
And we'd done it without overindulging our sense of need to be creative.
But once you accept that all your designs are an assumption, you're really only guessing what players want.
And if you don't validate, you're gambling, and you're assuming you're right, and you just continue down one path until you launch it, and then you find out.
But what players actually want can be really quite far away from your initial assumption.
So by validating early with a live audience, you get one step closer to understanding every time and improving that product, and the earlier the better.
And there's more scope for improvement.
And this all seems really obvious, but not many studios do it or even believe it's possible.
And if you wait until your soft launch period to do it, it's already too late.
You can do this stuff before you commit to developing your game, so you know you're developing the right game from the beginning.
So we wanted to solve all these mistakes going forward.
we'd released MMX Racing in 2014.
And the team was supporting MX Racing until late 2015.
So after that massive launch, and our UA understanding it had proved, we were quite confident with our free-to-play strategy going forward.
We had the opportunity to work with this amazing external team, the team behind CSR Classics and the product owner from CSR Racing.
Now CSR is a $200 million franchise, so that's great expertise and it was only 50 miles away.
in Brighton. And we had this great idea. Drifting is massive. Jim Carner has huge views on social media and drifting has become more prevalent in popular culture thanks to the emergence of Ken Block. And there are great examples of drifting games doing well in Asia with games like Drift Spirits. So we saw this opportunity to make the player feel awesome with an accessible drifting mechanic.
So it felt like the stars had really aligned for Race Kings and we were all really excited.
And we were going to validate early in a way that we hadn't done before.
And we were going to do it before we'd made a commitment to the project.
And we were going to build a business as well of building a great game.
And we were going to invest in understanding references.
So Race Kings was meant to be 8-ball pool combined with Racing Rivals.
Both huge titles, both top 20 grossing.
8-ball pool had this accessible multiplayer betting structure and Racing Rivals had this deep metagame with a player-focused experience.
We were going to combine those to make a competitive, synchronous, multiplayer, drifting game.
So we set out to make Race Kings with nine developers in a year at the cost of about a million dollars.
So very similar to MMX Racing.
And our teams are an autonomous mixture of art, design, production, QA, engineering and analytics.
And that's a model that's worked really well for us in the past.
What actually happened is it took an average of 12 developers, 3 years and 3.8 million dollars to build Race Kings and it was only downloaded 6 million times despite having the best featuring we've ever had.
So the main banner on the iOS store and Android stores worldwide.
So put that into context, our other titles have been downloaded 160 million times.
So it was our most expensive development to date and our worst performing title.
So what went wrong?
We were misaligned with our development with the external studio.
We wanted to empower them to make a great game as they'd done before and we knew they were capable of.
And we wanted them to benefit from the learnings we'd had on Smash Bandits and MMX Racing.
We wanted to justify our investment in drifting by validating early, but we'd underestimated how necessary the process we'd been through had been to our learning.
And it's very difficult and sometimes impossible to teach that.
The product lead had come from CSR Racing and he was new to Hutch, and we weren't fair to him.
We expected him to represent our culture and our values.
But he'd come from a $200 million franchise, and he wanted to make a $500 million game.
We had come from a $10 million product and we were looking to take that next big step to be a $50 million product.
So his desire to make this massive game meant innovating across the board.
So Race Kings was built as if success was a foregone conclusion and he was addressing the design decision, design problems that a $200 million game would have.
And this created a real cultural issue for us, because our culture is about empowering the team.
But they'd only worked on massive successes and they were prepared to innovate everywhere because they had so much confidence.
But they didn't understand how fragile free-to-play could be.
And we as a company were running before we could walk.
We were only a company of 30 people and we weren't geared up to run another studio.
So we had this ambition of validating early, but it's not always that easy.
The business value for RaceKings was set in this high visual benchmark, licensed content and synchronous multiplayer, and that takes time, and time increases your risk.
And if that's the value, how can you create an MVP?
So instead we did user tests, focus groups, player diaries and expert reviews.
All really useful, but none are a replacement for early validation.
Getting that quantitative data early and from a live player base before you've made that commitment to building it.
Now a lot of studios have talked about validation, about the MVP, and they say the audience is too sophisticated now, that the market has progressed, and a lot of studios get bogged down on the M, the minimum of MVP.
But at Hutch we focus on the viable nature, not the minimum.
So towards the end of development of Race Kings we took two people off the project for two months to make a prototype.
and you can see it on the right, and that had no tutorial.
It had two tracks and five trucks taken from MMX Racing.
So those two people in two months, but a game that had better retention, better engagement, longer sessions, and more sessions with players progressing further in the game than the 12 developers did in three years on Race Kings.
It's because we started down this road on Race Kings and we didn't take those steps of validation to get closer to what players really wanted.
So while that was happening, all happening externally, in our London studio, we were ready to move on to something new.
We split the MMX Racing team in half, and after a few game jams, we started on Top Drives and MMX Hill Dash.
MMX Hill Dash, we wanted to make hill climb racing with great social features.
So we had a team of five developers for five months and a $400,000 budget.
And to date, it's made back $12 million.
So it's back to those themes again.
Reduce risk with a small team and a short timeline and validate early.
Break one rule.
So strong reference came from hill climb racing and we understood what risks we wanted to take and where we wanted to innovate.
And invest in your team.
We were really transparent about the problems we were having on Race Kings.
So the team was always learning.
So we were very focused on the early validation.
So six weeks after the team came together, we had a prototype live on the Google pizza program.
So it had three cars and five tracks.
And what we thought when we launched was one week's worth of content.
But it had great metrics, and it justified continued development.
There were players playing every day.
for 30 to 40 days.
And from that, we knew where to put the value in.
So we put the value in some of the graphics to help with user acquisition.
We could improve the economy, which improved our monetization, and we had a better Fatui and UX improvements, which improved our retention.
So when you look at our revenue and downloads, you'll see the LTV to CPI ratio is the best we've ever had to date.
It was scalable.
We could scale user acquisition for the first time at a major level in the company's history.
And we had this content treadmill that was really cheap, and we could keep on going for a long time.
And that's facilitated it making $12 million.
The mistake we made is we didn't appreciate it at the time.
We thought it was going to be a mash casual game, we weren't expecting to be able to do user acquisition.
Hill Climb Racing was justified by having 500 million downloads and we only had about 20 million on MMX Hill Dash.
And you can see there's a big drop off after launch from in the revenue and it was only picked up later.
So that was a missed opportunity for us by not understanding the model of what we had at the beginning.
At the same time, we were making Top Drives.
So Top Drives was made at a slow pace over a long period of time.
We wanted to move away from those shark fin revenue graphs, and we wanted to validate early.
Now Top Drives, the design called for it to be an always online game.
So we built the client first, and we faked all the server, and we put it live, and we validated it.
And that prevented a wasted effort on an expensive server stack that we might never have needed.
And then when you look at the Top Drives performance, Top Drives performs unlike any of the rest of the titles in our portfolio.
It has grown since launch, with our greatest revenue days coming months after launch.
Like Hill Dash, we've been able to scale user acquisition, but this is based off a different audience profile.
It's got a smaller audience with a much longer LTV, with a low CPI, which is generating $100,000 days, and can be serviced by a team of four people.
So again it comes back to those core themes of lean, validating early before you've made that commitment to your product, managing your risk, creating the value for players, getting closer to what players really want.
And our team loves doing this.
They get to work on multiple products and see how players respond and they know when they're working on a title, they know it's been justified because we've done that early validation.
And break one rule, understand your references.
know where to innovate and what risks to take and where to be creative.
We have this term at Hutch, it's called being hit driven and not dependent and we're trying to get that next 250 million dollar hit.
But as we're always lean and agile and we're always validating early, we can take lots of shots at goal without risking the company and we're focused on getting two games a year. And every title is increasing our revenues and we're learning and stacking, allowing us to be hit driven and not dependent.
And we've built that into our culture.
So our culture is player-centric.
Everything, the player's at the center of everything we do.
We're data-informed rather than data-driven, and we're entirely transparent with our team.
We present everything back to them.
They get the board pack back.
They see all revenue, user acquisition, and performance data.
And our growth and insight team present back to them on a weekly basis on any topic they want to hear about.
They're empowered, they're autonomous, and trusted to make the right decisions.
And our process is lean.
Understand what compromises you have to make.
And our business is mobile, free-to-play racing, which provides this clear sense of focus on what we're making.
So we've made some fantastic mistakes, but we're proud of where we got to, and these core themes have been honed organically through our learnings, and allowed us to avoid making those mistakes in the future.
There's a few more minutes for some questions if anyone has any.
Do you want to come up to the mic?
When you mentioned about the budget for all the production, is this including also user acquisition?
And also, can you share a little bit about the channels that you use for user acquisition as well?
No, those budgets aren't inclusive user acquisition, they're just development costs and content.
Channels for user acquisition depends what game we're talking about, it's usually Facebook.
We work a lot with some, we have some good partnerships with some specific ad deals, dealerships that we've made that are bespoke to those games as well.
Hi, I'm just wondering if you could elaborate a little bit.
You talked about, it sounds like you put out the games super early, maybe even before they're done.
What does the actual process of validation look like?
What kind of things are you looking at to determine whether or not something's worth doing, I guess, worth finishing?
Also, shout out to your Canadian studio, I'm from the same town.
Thank you very much.
So the question was, what's our process to go through for early validation?
So it's a combination of things.
We first, we look for something that we think that we can make internally and that the team can really get behind.
There's a lot of, it's really easy to justify different types of genres of games, but there's certain games that I don't think that Hutch would ever make very well.
I can't see us ever making, taking on Clash of Clans with that style of game.
So it has to be something that works for us as a team.
We build it internally and it has to be something that grabs us and be fun very quickly within a couple of days of a game jam.
And then it has to be something that we believe we can validate early.
There are some games that can't be.
So Once we've done that, we basically just build a profile of what is the core experience of that game, what is that core loop, what are players really getting grabbed by.
We build that in a maximum of two months, and then we use usually Google's beta program or early access systems, or we just soft launch it in specific territories that we know represent certain performance profiles.
And then we look at retention, engagement, session lengths, and that in relation to what we've done.
And because we've done this so many times now, we've got like a, we know, we've got benchmarks of what we know we can get at that sort of level of development.
Because obviously you can improve some of those metrics over time.
how you act on that feedback you get from those early validations.
You talked a lot about listening to players and what they want.
And in the experiences I have, that mostly amounts to removing friction from the experience and not necessarily figuring out how the game should change.
How do you try and get that out of your users and make those decisions to make changes or improvements to the titles?
That's a great question. So we use a combination of qualitative and quantitative feedback.
So there's the metrics and all the stuff that you're looking at when the game's live, and then there's the talking to players through the Google beta process is great for getting feedback, but we also do a lot of focus groups, user tests and stuff like that where we can physically watch people playing.
A lot of that is great for understanding pretty small stuff.
Quantitative feedback can give you an indication of where players are getting stuck or where they're dropping off, but you don't really know exactly why.
So understanding that feedback, it depends.
A lot of it can be emotional, like this is too hard and I want it to be easier.
But then when you watch their actual data, it doesn't back that up.
Like a lot of players, if you look at communities, you'll see there's quite vibrant communities and we have this on top drives where some people will feel like this event's too hard, I don't like it, but then they're the ones who are winning that event and they're pushing really hard and they're driving it and that's a real incentive for them.
So it's understanding what the true nature of your game should be.
what you expected from your audience and where it's differing and then trying to gauge whether it's an emotional response from them or whether it's something that's tied into that commercial value that you can kind of move forward with. Does that make sense? Yeah.
I'm short.
So first of all, thank you for having this as COO and talking about failure.
It's not often in companies or teams culture to be able to say that, so huge kudos to you.
Thank you very much.
that speaks volumes of your true culture.
And I guess my question to you is, could you elaborate a little bit more of how do you see that playing out within your team and organization to really set your team up for success and celebrating wins as well as what failures look like so people are more approachable with it, so it's not this dark cloud and people would just come out front, admit it, move on, learn from it, and how do you build that safety net within your org?
That's a great question.
So it's a lot about making, so there's no, it's about creating a sense that there's no shame around failure.
The free-to-play market is incredibly brutal and the vast majority of games that go into it don't work.
And we've had to be incredibly honest with our team by accepting that we're all incredibly fallible and we all make a lot of mistakes.
So when we're sharing this data on a weekly basis with the team, they're understanding what's working and what's not working so that they can be empowered to make those decisions.
But it comes from right from the top.
So our CEO who's sitting there with the silver mane of hair, he makes tons of mistakes all the time.
And he won't mind me saying that.
It's worrying, actually, how many mistakes he makes.
But he's incredibly open with what mistakes he makes.
And we're just very open with that.
And once you accept that, and it goes back to the kind of validate early, that every design is just an assumption.
You're just taking a guess.
And really, I don't think there's any games designer or any studio really on the planet that can set out and just hit that mark of what should work and what shouldn't.
There are no developers here that, there's no studios in the world that haven't had multiple failures.
If you look at Supercell, they kill a lot of their games.
You look at King, they've not been able to follow up with a better game than Candy Crush, and that's an eight year old game.
Once you accept that and you talk about failure and you just make sure that it's okay to be a part of that and it's almost celebrated in some ways because you're learning and celebrate that learning, then you get a truly quite vibrant culture around it and the team can really start learning what risks are worth taking and where they need to innovate.
Thank you.
Thanks.
Any other questions?
Brilliant. All right, well, thank you very much.
