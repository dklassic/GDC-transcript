Hi, welcome.
Quite the room, oh man.
I'm not nervous, I swear.
Yeah, thanks everyone for coming.
I know it's early, so we'll make sure to keep the energy nice and high so we don't all fall asleep.
Yeah, welcome, welcome to our talk.
There's plenty of other talks going on, so I appreciate you all coming here today.
Today we'll be talking about Call of the Lamb and how we use Twitch integration to reach a massive audience.
So we'll run through some of the integration features, as well as the design and development of the Twitch integration, plus the release data, and then, yeah, post-launch.
So I'm Harrison.
I'm the lead gameplay programmer at Massive Monster.
I've been working on Caught in the Lamb for three years, and I set up the Twitch integration on the game side.
I've worked on a few commercial projects before, but nothing as exciting as Caught in the Lamb.
And I'm Thomas, also known as Streaming Toolsmith.
I basically help gaming companies improve live viewership by creating interactive experiences for viewers as they're playing your game.
Some of my past work includes stuff like Baldur's Gate 3, Disco Elysium, League of Legends, and obviously Cult of the Lamb as well.
So, this talk is all about Cult of the Lamb and how we used Twitch integration to drastically improve its popularity on Twitch.
So just to make sure we're on the same page, everyone needs to know what Cult of the Lamb is.
First of all, if you don't, shame on you.
Second of all, who better than Harrison, one of the people who made it, to tell you all about it.
Yeah, so Cult of the Lamb is a dungeon crawler mixed with a base builder.
Imagine Binding of Isaac meets Rimworld.
You play as a little lamb and you run a cult of woodland creatures.
You explore dungeons, defeat rival cult leaders, perform rituals, clean up poop, do daily sermons, all to gain power to become the one true cult leader.
Yeah, so one of the big questions is, as an indie studio, how do you stand out?
So before Caught in the Lamb, Massive Monster had made two games, The Adventure Powers and Never Give Up.
The Adventure Powers was a 2D platformer that was moderately successful, whereas Never Give Up was a work for hire that never really made recoup.
Yeah, so Caught in the Lamb was sort of a last resort project for the studio.
It kind of needed to do really well to keep the studio afloat, and it had to be something real special.
So the theming and design of Colton & Lamb was an iterative process.
If you've seen some podcasts from the directors, then you know that the Colton & Lamb that we know and love today, it didn't start that way.
It was quite an iterative process.
And eventually, over time, they landed on the theme of cute and culty.
So I wasn't at MM until about halfway through Cult of the Lamb, the development of Cult of the Lamb.
So I'm speaking on behalf of the directors, a couple are just over there.
Marketing and social presence was always at the forefront of the design of the game to ensure that it would stand out, really.
And a game about a cult will do that.
So going back to that big question of how do you make your game stand out, especially as an indie, one of the ways of doing that is by leveraging social media and streaming platforms.
So Cult of the Lamb has an incredibly strong social media presence, especially on Twitter and TikTok.
I'm sure most of you have seen one, if not several, of The Cult of the Lambs Twitter spicy tweets.
That's all thanks to Josie's handiwork, who sadly isn't here today.
They're obviously also doing really well on TikTok with lots of meme videos.
Jared from Devolver actually gave an amazing talk on Cult of the Lambs social strategy last year here at GDC, which I recommend you check out if you have access to the GDC vault.
So while we have all of these standard, let's call them social media platforms, that are good for getting a first impression of the game to viewers, Twitch and other streaming platforms are much better at converting viewers to actual players.
So Twitch in particular has 140 million users per month, which is just insane.
So there's crazy potential there to get lots of eyeballs on your game, even if you're just an indie game.
So Twitch offers several integrations that allow you to integrate your game with Twitch or vice versa.
One of those is Twitch Drops.
You're probably all familiar with that.
If not, Twitch Drops are basically just a way for you as a viewer to watch streams and then you get rewards for that game that you can then use in-game.
The other big facet of Twitch integrations are Twitch extensions.
So they allow you to offer interactivity for your viewer, and other platforms, other streaming platforms anyway, don't really even come close to what Twitch offers in terms of extensions.
They either have nothing at all or something very basic, in my opinion.
So the concept of Twitch extensions themselves have existed for a while, but in my opinion, they're still vastly underutilized, even though they're super exciting for viewers.
So going back to converting viewers to players, interacting with an integration kind of turns your viewers into players.
They're not playing your actual game yet, but it is their first real touch point by interacting with the game, and that's going to help with conversion.
Yeah, so I watch a lot of Twitch.
I've always got it glued to my second monitor.
And yeah, I watch a lot of different streamers and different games.
And like Thomas was mentioning, I find that Not many games actually have Twitch integration, even though it's been around for quite a while.
So I find that when I do come across a streamer playing a game with Twitch integration, I usually, yeah, I like to stick around, see how they're interacting with integration, as well as the viewers, and see some of these cool little stories that come out from it.
And that's exactly one of the reasons why I got into this in the first place, because I saw the vast potential of Twitch integrations, but no one else was really building this kind of stuff, even game developers themselves.
So I figured I'll just start building it myself.
So Twitch extensions come in many ways.
So there are a couple of forms.
The one we used mainly is the one you see up top.
So that's a video overlay.
All of these are basically small applications that run either on top of or next to the stream in some type of way.
Installing these extensions on Twitch as a creator is super straightforward, so you basically just have to do a couple of clicks in the creator dashboard and then you're good to go.
Viewers don't even need to install anything, they basically just go to a channel that has the integration enabled and it just pops up for them by default.
So going back to the concept of a Twitch integration specifically for Cult of the Lamb, we wanted to play into the similarities between cults and Twitch channels.
So I say that with all of the love and respect for any potential Twitch staff or creators here in the crowd, but there are some parallels to be drawn between especially very big Twitch channels and an actual cult.
So Cult of the Lamb was pretty much a perfect game for a Twitch integration, both conceptually as well as thanks to its really fun and quirky art style that makes it stand out.
Yeah, so we'll take you through our little journey from signing the contract with Thomas to releasing Co-Op The Lamb and the Twitch integration.
It's sort of a post-mortem in a way, although we are actually still developing the Twitch integration.
So we'll go through what went well and also what didn't and some of the issues we come across.
So going back all the way to the beginning around July 2021, Clara from Devolver Digital introduced me to a couple of games that they wanted to pursue a Twitch integration for.
Sadly, none of those games panned out because of developer or timing issues, but then seemingly out of nowhere, Cult of the Lamb popped up on our radar.
And I think we all immediately felt that just the concept of the game was a natural fit for a Twitch integration.
So let's talk about the Twitch features for Call of the Lamb.
If you're unfamiliar with it, Harrison is going to walk you through each feature in more detail in a second.
But basically, each of the three features focus on a different interaction model, let's say.
So the first one, the reward totem, that allows the community to collaboratively contribute towards a shared goal.
then help or hinder allows viewers to dynamically alter the gameplay in really exciting ways and finally the most exciting feature to me anyway is viewer followers where viewers get to actually appear in game as a cult member and express their own identity because they're able to customize their follower as they join Yeah, so we'll take a little bit of a deeper dive into some of these features, first being the reward totem.
It allows viewers to contribute towards this totem using channel points.
Once the totem is full, it will look like something like that for the streamer, which they can then interact and they get some resources or maybe something a little more exciting, like some Twitch exclusive follower skins.
Once they've claimed it, it then resets, and that loop can kind of continue.
The streamer will receive a little notification in-game when a viewer contributes towards that totem.
So it might say, like, blah, blah, blah has contributed to the totem.
And it's another incentive for the viewer to just make some notice from the streamer.
There's also a global cooldown between these contributions.
And the reason we did this is so it balances the game between these streamers that might have 50,000 viewers compared to the streamers that might have 10 viewers.
Because if 50,000 people are contributing, it's just going to throw off the balance of the game.
And in a way, it's also like a bit of a race for these viewers to contribute and get in quickly.
Yeah, next up is the help or hinder.
So roughly every 10 to 20 minutes in game, the streamer will receive a little notification saying that the viewers are deciding your fate.
For the viewers, they will receive this little UI on their Twitch screen, and it allows them to vote to help or hinder the streamer.
It takes about 30 seconds, and it's a majority vote.
Once they're voted, it then moves on to the next phase, which is, again, a majority vote, but this time it will be three options.
based on whether they chose help or whether they chose hinder.
They then vote again on these three options, and then, yeah, the majority vote will then trigger in-game.
So if they chose, let's say, to kill a follower, the streamer will then see their follower just die, and it will be like, Julian died, thanks to Twitch chat.
So to me, the most powerful moments of Help or Hinder are when viewers kind of get to come together and help the streamer overcome challenges.
So they kind of get to save the day during playthroughs.
We have a video coming up in a second that really illustrates that concept as well.
OK.
So let's do a little show of hands.
So if you're watching your favorite streamer, would you choose to help or hinder?
Would you choose to help?
OK.
What about hinder?
Yeah.
So, same, right?
I think it's more exciting when you're watching a streamer.
You want them to suffer, really.
You want them to, like, to make it harder.
But it turns out 91.3% of people watching and voting for Help A Hinder chose Help.
That's so boring.
And I think it's mostly because we have a lot of communities, like small streamers, and these viewers, they don't want their streamer to be hindered.
Goody two-shoes.
I'm will be Okay, so we've seen the core interactions of the integration, so let's see them in action.
Good luck.
I can't do anything.
I'm gonna do a follower raffle.
Dude, this game is so sick.
The Twitch integration is so fire, too.
Either you got in or you didn't.
Let's see.
Look, Tia!
Yay!
Alright, Tia, you can make your character.
Cute!
It is so dope.
That's cute.
That's very you vibes, to be honest.
Nice.
Okay.
It's the first game that I've seen that has done channel points, which blew my mind a little bit.
But honestly, as a streamer, it's the one thing I always want.
Give me the extension.
Don't do the in-chat stuff.
Do it on their own screen.
It's been great.
Turbo Scrub, come here, buddy.
Turbo Scrub, what's your f***ing problem, dude?
My faith is shaken.
I can see through your lies.
You're a fraud.
Twitch chatter deciding your fate?
What are you doing?
Hey.
Chat, what are you doing?
Deciding my fate.
He's got, like, full descent.
He's gonna, like, run away.
All followers have been cured thanks to Twitch chat.
Aww.
Hi, Turbo.
Wait.
You're not just found a bunch of s***?
Wait, did he get cured of his dissent?
Was being dissenting a disease?
Oh, look, he likes me again.
He f***ing loves me.
He fixed him.
Oh my God, that's amazing.
We've got work to do.
Hey, but we can collect the totem reward from our Twitch viewers.
Thank you so much.
Let's see what we get.
Spin the wheel.
A new follower form.
Now we can make mices.
Eventually I'll learn these symbols.
Oh no.
Twitch chat, chat, you're deciding my fate.
Be nice.
Not everything has to be negative.
We don't have to hurt Bog.
We don't have to make my game harder.
You received a demon.
Thanks to Twi- SEE THAT'S AWESOME!
You gave me a demon?
How do I rece- How do I accept the demon?
Oh wait, there he is!
Lookit, I got a demon!
Yes!
The Twitch integration I've been waiting for, for seven years of streaming.
It is so good having the raffle handled in the game.
So I don't have to like stop every time we want to like customize one of our characters for the stream.
It is beautiful.
I absolutely love that.
So for the clip we just saw where the follower was dissenting, that interaction wasn't planned or scripted in any way.
It just happened organically thanks to the integration features working together.
So it was basically just a random moment that I came across during watching just streams on launch.
And those little stories and moments basically happen all the time thanks to the integration.
So let's talk about design.
By design, I don't mean UI and UX of the integration, but rather the conceptual design of it.
Much like how good games are designed, Twitch integrations also need to be thought of and designed in good ways.
So the following two principles are a couple of design principles that I try to stick to when creating integrations.
They might not necessarily be yours if you end up building one of your own, but they did help me to create successful integrations in the past, including Cult of the Lamb.
So the first one is really obvious, I guess.
Make cool shit.
So you want to create something awesome and exciting for viewers and streamers alike.
You want to avoid viewing a Twitch integration as purely a marketing tool, because that's going to set you on a path where you think about features in certain ways that are going to probably be a little gimmicky for viewers, and that's not going to feel right for them.
You also want to give viewers power, the ability to influence gameplay in meaningful ways.
And you also want to make them invested in the game in some type of way.
So we did that with the Twitch Totem that allowed them to contribute towards a shared goal.
And lastly, it's important to think of game balance when designing something like this as well.
In general, it's okay to make things harder for streamers, because streamers usually are good gamers, or you would hope so anyway.
But you don't want to make things too easy because that's going to cause viewers to see the streamer playing a game that's vastly easier for them and that might not feel very good for them.
So you have to consider game balance as well when creating something like this.
Then second of all, building on existing systems and features.
This is kind of a big one, especially for indie developers where resources are very limited.
Yeah, Massive Monster was and are still quite a small team, so we were really limited on resources.
We were still developing Call of the Lamb, and when I mean developing, I don't mean just fixing a few bugs.
We were still coming over quite a few design hurdles and whatnot, making the game fun.
So we really couldn't put too many resources into creating the Twitch integration.
And hindsight is obviously 2020, but I think this was the right decision, both from a conceptual as well as a business standpoint.
So you want to build on stuff that you've already made anyway.
So the game already had the ability to customize followers within the base game.
So that was a natural fit to put into the extension instead and give viewers agency to express their own identity.
Similarly, the totem is basically just an extension of the base game shrine that you build when you first start playing.
So it's basically just another skin with a progress bar on top.
You don't also want non-streamers missing out on content.
This means that you don't want to build entirely new features or game systems that are only accessible throughout the Twitch integration, because the vast majority of your player base won't be streaming the game, and then they'll see all of these cool features that they can't even access unless they're streaming.
For example, we created these really awesome looking Twitch exclusive skins, and they were only available at the start through the Twitch Totem, so only through streaming the game thanks to the Twitch integration.
A lot of people really liked these skins, even when they weren't streaming, so we ended up having to add them to the base game as well.
Okay, onto the development and the fight between Thomas and I.
not The game integration took only roughly a month, and yeah, we were able to do that basically near launch, and fortunately we were able to do that during console cert.
So console cert takes like a month to two months, and because the Twitch integration isn't on consoles, we were able to do that like parallel.
We also only spent roughly about a week on testing the Twitch integration, which in hindsight probably could have been a little longer.
But it's harder to simulate high volumes of traffic, and spoiler alert, that's kind of what we dealt with.
Suffering from success.
Yeah.
So now that we know what Twitch integrations are on a conceptual level, especially extensions, let's talk about its architecture.
So you have three major parts for an extension.
First of all, you have the game integration.
So that's the game code that ends up running within the game.
That's the part that Harrison developed.
I'm not a game dev myself, so I don't want to muddle up the game code.
Then you have the backend service, which basically just lets the game talk to the backend, and then that backend a bit.
So this is built with web technologies using HTML, CSS, and JavaScript, and this is hosted on Twitch.
That also means that you need to stick to certain guidelines and policies set forth by Twitch, and that they also need to be submitted for review to Twitch.
So you can kind of think of the extension marketplace, let's call it, as some kind of app store that they control.
So what we're seeing here is the extension, but not the extension on Twitch.
So because I build a lot of integrations, I have a couple of aces up my sleeve that make development easier.
So this is the extension debug viewer that kind of mimics what it would look like on Twitch.
Yeah, I'm Australian, so my internet is just trash.
So this allowed me to basically mimic, like what Thomas was saying, the Twitch side of things.
So I didn't have to open OBS, I didn't have to stream, I didn't have to do any of that.
So the extension debugger also allows you to masquerade as certain users or on certain channels.
So allowing that to happen also means that it's very easy to share a very specific view that you're seeing through just sharing the URL on Slack.
and we And this was used by Harrison to kind of reference things and as a debugging tool as well.
So it allowed him to trigger different events easily like totem contributions that would otherwise have to be done on Twitch.
So with the mock game and the extension debugger I showed just now, we were able to simulate Twitch and the game without having to stream on Twitch, without having to actually play the game.
So this allowed us to develop things in a much quicker way.
So before we released Cult of the Lamb, we soft launched about a week prior.
So this allowed us to test with a small handful of streamers the game, basically.
And it gave us the opportunity to iron out any bugs, both in Cult of the Lamb and the Twitch integration itself, and also optimize.
Fortunately, we had our publisher, Devolver, basically do all of this process.
So it's super handy having a publisher that's hands-on.
One of the more interesting things that Devolver did in my opinion during that soft launch was that they heavily promoted the Twitch integration usage for those streamers in the early access period.
And this kind of caused a natural trickle-down effect, let's call it, where streamers who weren't part of the early access period saw these streamers using the integration and then just installing it themselves was just a matter of a couple of clicks.
So that means that everyone was pretty much locked and loaded, let's say, for the actual launch.
And this means that to this day, I would say 9 out of 10 streamers at least are using the Twitch integration for Cult of the Lamb.
Okay, so remember this beautiful timeline from earlier?
It was a little bit more like this.
it was The integration was melting and nothing worked.
I think the main issue we faced was that Cult of the Lamb was just too good of a game and was too popular.
So there were a couple of issues where even games that weren't actually streaming to Twitch were sending over data to the server.
So I was able to patch some of that stuff on my end but ultimately we did need to update the game code as well to fix all issues.
Yeah, it wasn't my crap code.
It was just too popular.
So yeah, we had like lots of streamers that weren't streaming that were sending data and just lots of little things which created high server load.
There was even a point where bit transactions were failing and bit transactions are actual viewers money.
So we had to make sure we fixed that.
Yeah, so despite the rocky launch, and it was a little rocky, people still loved it.
People just ate it up.
And a lot of people even bought Call of the Lamb just because of the Twitch integration.
All righty, so that brings us to release of Caught the Lamb.
So a week later, on the 12th of August, we launched Caught the Lamb.
So we'll go through some of the stats on Twitch for the first month of how Caught the Lamb did and how it boosted the game's popularity.
It's also worth noting that we did launch with Twitch drops, so viewers were able to jump on streamers' streams and watch and get these exclusive Twitch follower skins.
So that may have helped boost the numbers a little bit.
So the first that we're looking at is the max viewers for the first month of launch.
So on the day of launch, we had 150,000 viewers, which honestly is just mind-bogglingly huge for a non-multiplayer indie game.
And like I said earlier, around 90%, I would say, of those streamers were using the Twitch integration.
Yeah, so I was browsing streamers, watching them play Call of the Lamb, as you do when your game launches.
I just wanted to check out what they thought.
And at one point, we come across this one streamer that was talking to a viewer, and they were like, hey, I can add you to the game.
You choose a follower form and a color, and I can add you in.
And it's like, we made an integration for that.
It was kind of frustrating, but also really funny to see at the same time.
But I think it also speaks volumes to what we ended up building was something that streamers actually would want in an integration.
So for the next one, we're looking at the average viewers again for the first month of release compared to other games.
We're basically just trumping all other games without integration.
Now, I'm not as delusional to say that that's only due to the Twitch integration.
Obviously, Cult of Lam was just a really good game that managed to stand out regardless.
But for the sake of argument, let's say that it did help at least a little bit.
So to me, this is actually the most interesting step there is.
This is the amount of average channels for the first month of release.
So this is kind of an underrated statistic, but it was really crucial to Cult of the Lamb's success, because this means that a lot more channels were streaming Cult of the Lamb than compared to any other game.
So we would have these really small, intimate channels of, let's say, 10 to 50 viewers or something, also streaming Cult of the Lamb.
and this means that the value of the interactions we provide throughout the integration are even more powerful in those kinds of communities because those tight-knit communities kind of know each other and it's way more exciting for viewers to see familiar names both in-game as well as when to vote on someone to marry or kill or send to the fight pits.
So these are the first average viewers for some of our friends.
We've got Gungeon, Darkest Dungeon, and Inscription.
And as you can see, they launch, massive views, and then there's that natural trickle-down effect over the month of launch.
Inscriptions is weird.
Theirs has gone boom, boom, boom, boom.
I assume there's some big streamers streaming their game there.
So with indie games and probably a lot of games, that natural trickle-down could eventually end up to zero viewers, basically.
And then we have caught the lamb.
So that first part is the soft launch.
So the viewers are going to be a little bit less.
And then we launch, which goes super high.
And then we have that natural trickle down effect like the other ones.
But one thing to notice is that our trickle down effect, it kind of stays at a decently high viewer amount, around the 20,000 mark over that first month.
I'm not trying to blow smoke up our own ass here, but we think that most likely the Twitch integration did help because it made streamers keep streaming the game, they loved the integration, they wanted to keep streaming, and viewers wanted to keep watching these streamers and check out how their viewer followers are doing and stuff.
And that's probably why that tail kind of doesn't hit zero.
Okay, so yeah, a few more fun numbers.
In the first month of release we had 13,000 unique people streaming the game with over 46 million views, which is huge for an indie.
14 million unique interactors with the Twitch integration with an average of 8 clicks per interactor.
over 400,000 viewer followers created with 28,000 totem contributions.
So keeping in mind, this is just in the first month of launch of Cult of the Lamb.
So these numbers are probably in dot max value or something by now.
So this brings us to post-launch, and you might be wondering how we're going now.
Well, we're still doing well, but obviously not as well as launch, because hype dies down naturally.
There's no way to avoid that unless you build the next evergreen game like League of Legends, Counter-Strike Go, and so on.
But like Harrison said, we're still holding a pretty high viewer count, as well as a high streamer count, which is really important to Cult of the Lamb's success on Twitch, especially compared to other indie games.
Now obviously we haven't sat still since launch.
We've done a couple of major updates.
The first one during Relics of the Old Faith allows viewers to send follower messages.
It's basically just a little native Twitch UI that you use and then your follower kind of waddles over to the streamer and shows a little speech bubble showing your message, which is really cool to interact with the streamer in a direct way.
Then you also have the follower gallery, which allows you to look at all cult followers, both NPCs and viewers.
And you basically just get to see their levels, stats, whether they're a coprophiliac and like to eat poop, for example.
Why'd you look at me?
And they can also use that to vote, again, like I mentioned earlier, on followers when they're choosing to sacrifice or kill, convert to a demon, and so on.
We also added some additional help or hinder options to keep things fresh.
For the next update, Sins of the Flesh, we added the ability for viewers to choose outfits during the customization process.
It's basically Cult of the Fashion at this point, where they get to look pretty.
We also added mobile support, which was a highly requested feature.
So if you remember that early slide where I showed the different extension types, We started with the one on top, so the video overlay, meaning it's desktop only.
Then the community basically, since launch, kept asking for mobile support, so we had to add it eventually.
And additionally, some more help are in our options, again, to keep things fresh.
Now for the upcoming update, that's our last Twitch update.
It says Operation Health.
If any of you are familiar with Rainbow Six Siege, they had an Operation Health that basically just focused on fixing longstanding technical issues.
That's what we're doing with this update as well because since launch, I had to implement quite a lot of dirty fixes on my end just to keep things running.
The aim for the technical rewrite is basically just to get rid of that and make the extension as stable as possible, make sure it holds up without any issues.
Yeah, so with Operation Health, the idea is to, and it's a little bit of a secret, but rewrite it in a way where we could use the extension for future games.
And we're not just doing the technical rewrite, we're also improving several extension flows like, for example, customizing a follower is going to be easier for viewers.
And if you play Call of the Lamb, you probably know there's a very fun minigame in there.
We're adding Twitch support for that as well, so be on the lookout for that.
Yeah, so as you can see here, we launched Sins of the Flesh on the 16th of January this year, so a couple of months back.
And keeping in mind, this is a year and a half after we originally launched Cult of the Lamb.
And yeah, so a bunch of streamers come back, hundreds of streamers, and a bunch of viewers as well, over 35,000 viewers.
And it's worth noting that all these streamers were using the Twitch integration.
Okay, so that brings us to near the end of our talk.
Here's a few other games that have Twitch integration.
So definitely worth checking them out, especially if you're interested more in Twitch integration.
Baldur's Gate 3 being one of the most recent and popular.
And this guy worked on it.
He did the Twitch integration for that.
We've got a few key takeaways, some of these a bit more obvious than others.
The first being that streamers and viewers love it.
You're not going to encounter a viewer that doesn't like Twitch integration.
And also it's worth noting that people stream it, people watch it, and then these people that watch it, they love the integration and they want to stream it themselves.
So they buy the game and then they stream it and then people watch it and it's just this vicious loop of sales.
It's also never too early or too late to start a Twitch integration.
It might be a little too early if you're still in the conceptual phase where things are changing at a rapid pace.
But other than that, you can pretty much add it to your game at any point.
Obviously, there is an ideal release window, which is early access or full release.
But if you can't make that, then I would suggest combining that with a big content or DLC update so that they can kind of boost each other's popularity.
Yeah.
Also, make sure to test more than we did, if you can.
What are So all of the initial hype has died down and without an integration, viewership would probably hit zero or close to zero anyway, but we're still alive and kicking.
So thanks to the Twitch integration, even to this day, constant stories and fun little moments are created by streamers and viewers by them just interacting with the integration.
Okay, that brings us to the end.
Sorry for saying Twitch integration like a million times.
Thank you all for coming.
A big shout out to all the GDC staff and lovely, massive monster people, Julian, Jimp, and Jojo.
My name's Harrison, and this is Thomas.
Yeah, go implement some Twitch integration.
Thanks.
Yeah, if you have any questions We've got some pins and bracelets and things that will give you a few if you ask us something Also, if you don't get to end up asking your question, we'll be outside for more questions afterwards.
Yeah Yeah, great talk, amazing to see you guys.
I have two questions.
The first one is who approached who to start developing the Twitch integration?
And how do the updates of the game impact the viewership on Twitch?
So for the first question, the question was who approached who at the start of the project, right?
So like I mentioned, Clara, who works at Devolver Digital, she does influencer relations.
She reached out to me because we previously worked on Baldur's Gate 3 together, and she basically just proposed a couple of games that she thought a Twitch integration would work well for, and then we ended up with Cult of the Lambs.
So the publisher in this case reached out first.
Yeah, for the second question, it was how do the updates impact the viewership?
They impacted quite a lot.
When we update, we don't just update the Twitch integration, we also update the game.
And we do a lot of marketing beats around that.
So I feel like if we just updated the Twitch integration, it probably wouldn't impact viewers as much as it would as a full game update.
But when we do a full game update with Twitch integration, it probably brings in 20,000, 30,000 viewers on Twitch.
And that lasts for a good month or so.
Thank you.
Hi, great talk, really enjoyed that.
I was curious, how do the streamers sort of know that there's Twitch integration?
Do you guys like advertise that ahead of time to be like, hey, come stream our game, we have integration?
Or is that more of like a discoverable thing on Twitch?
Okay, so the question was, how do streamers discover the integration in the first place?
So I think with Call to the Lamb, we're very lucky in the sense that we got that snowball effect going in the beginning where people just see the streamers using the integration and then just installing that on your own channel, like I said, is a matter a couple of clicks, basically.
There is a whole marketplace, I guess you could call it, for Twitch integration, so you can look for specific game integrations.
In my opinion, there might be a little bit of discoverability issues, but I'm sure Twitch is working on that.
So it is pretty easy for streamers to get involved with the integration.
So for Call of the Lambs specifically, I guess you could say it was word of mouth, basically.
We also do have in the pause menu a Twitch button, so you can click on that and then it shows you all about the Twitch integration as well.
Cool, thank you.
So, good talk guys, thanks a lot.
When you say, obviously a streamer is going to want to interact with their community, and the fact that the extension provides that is a huge value for them.
Do you know, or are you provided by Twitch any statistics, like hard data, as to whether or not the use of the extension actually improved viewership or retention for their channels?
Okay, so the question is, does Twitch provide stats on probably how the extension is doing and how it would compare without the extension, if I understand correctly?
Yeah, like if their viewership was higher than normal while they were using the game with the extension?
I don't think they have those numbers specifically.
Twitch does offer a lot of analytics for your extension specifically to see how many streamers installed it and so on.
That specific detail of data I don't think you can get but also conceptually it's kind of hard to gauge how an integration or how the game would be doing without the integration because it either exists with the integration or without it so you can't even compare one streamer to another because it's basically apples and oranges at that point.
Okay, thank you.
They do offer some stats but I'm not sure if you can get that deep into it.
Okay, thanks a lot.
Hello.
Great talk.
Love the game.
So, kind of a couple questions I was thinking about.
Is there a lot of update or upkeep, I would say, with Twitch integration post-launch?
Like, you mentioned patching the servers when testing and stuff.
Do things like that kind of come up consistently, like when you're getting a lot of traffic through the Twitch integration, or a lot of people are using it, or just maybe errors happening like that, like post-launch and keeping up with it?
Yep, so the question was, does it require a lot of upkeep, Twitch integration, post-launch?
I would say in Call to the Lamb, at the start it did, just because of the popularity we had and I had to implement all kinds of weird fixes that I kind of regret now, but you know, you do what you have to do.
So in that sense it did require a bit of upkeep, but in normal scenarios, so let's take Baldur's Gate 3 for example, that barely requires any updates The most updates I had to do was during their early access period, where they had these big content updates, like for example, adding a whole new class like a Druid or something.
So that did require some upkeep, but that's more upkeep in the sense of basically just supporting new data or updating texture sheets and so on.
Yeah, like when doing big updates for the game.
Luckily, Twitch doesn't change their APIs that often, and they also communicate it well beforehand, so you know what to expect within a couple of months if you do need to update something down the line.
Sorry, kind of quick follow-up.
And I know Massive Monster is pretty small studio-wise.
Like, the game that just launched my development team in early access, like, were eight people.
So this is something super interesting to think about.
And I'm kind of thinking, like, oh, God, if I go to my programmers and producer, are they going to be like, hell no?
So the question, I guess the question was, like, How much work was it on you?
Yeah, how much work, yeah.
So when we launched Call of the Lamb, I'd say there was probably like five, six, seven of us.
So it wasn't a huge team.
On the game integration side, it wasn't that much.
At least I didn't feel like it was that much.
And I did majority of it.
There was a bit of UI I wanted to do.
It was mostly Thomas.
He had to do a lot of the heavy lifting.
So if you find yourself with Thomas, you should be OK.
If you're going to do it all yourself, that's probably a bit of work.
But yeah.
Awesome.
Thank you.
Hello.
Thank you very much for the game.
I have enjoyed it immensely, both as someone viewing streamers play and as a non-streamer player.
I was curious about some of the tools that you talked about for testing the integration without having to actually use Twitch.
I'm guessing that the game shell probably doesn't take too long to develop given that it's mostly just API calls and stuff, but simulating the actual Twitch environment, how long did it take to develop that tool?
So the question is, how long did it take to develop the extension debugger specifically that I showed during the talk?
That's kind of hard to answer because it's still an ongoing thing, I would say.
So basically, the way Twitch extensions work is that you include a helper script that Twitch provides, and that allows you to hook into Twitch API features like requesting a follow, requesting your identity to be shared, all of that stuff.
So it's basically a matter of me looking at that helper and kind of, like, reworking that to work locally, basically just mimicking all of its functionality.
So it did take quite a while to develop.
If you're a game developer and not really, like, niched down into this, I would recommend not even starting on that because it is quite a lot of work.
Fair enough.
Thank you very much.
Hi.
I was wondering, as a UX researcher, what kind of, to come up with the cool shit that you guys made, like, what kind of, you know, what did that ideation process look like?
Was there some concept testing with users from the soft launch or beforehand?
You know, was there like play testing of the integration?
Yeah.
Yeah, so the question was like, was there playtesting and whatnot?
How did we come up with the ideas and stuff for the Twitch integration, if I heard correctly?
Well, I wasn't really a part of the actual initial design.
I think it was a lot of communications between Thomas and the directors with the design, maybe a bit of Devolver as well.
When it comes to the updates for the Twitch integration, We did a lot, I kind of went through a bunch of streamers playing Call of the Lamb.
I was like, hey, what would you like to see in the Twitch integration?
And as well as we have like a community manager that, yeah, like brings all that information in and you kind of just hear as the game exists, people like, hey, we want mobile support for the Twitch integration and whatnot.
So that's kind of how we come across the ideas for updating it.
Specifically for coming up with the initial feature set, I would say that there was no, like, formalized process, let's say.
We pretty much just came up with features that I ended up pitching in an initial meeting.
That is pretty much what we ended up with.
So I think it's also a matter of just looking at the game, what fits into the spirit of the game, and basically just finding a natural fit for integration features rather than, like, trying to shoehorn them into the game.
Right.
What works for a cult.
Thank you.
Thank you.
Hi.
Similar question, or kind of off of that.
Do you know which features possibly had the most impact on viewer retention and stuff like that?
And then kind of more extrapolated from that, are there any kind of advice you can give to those of us looking to do a Twitch integration?
Like, don't bother focusing on X, Y, Z features.
These are the ones that will probably be the most bang for your buck if you have a limited time.
Yeah, so the question is, what features basically was the best in a way for Twitch integration?
I would say the viewer followers were absolutely the best, because that just made the viewers really connected with the streamer.
They were in the game, there was like a million reasons for them to come back and keep watching the streamer.
So if there's any way that you can implement the viewers, I guess permanently, into the game that the streamers are playing, then I reckon that would probably be the best bet.
Yeah, allowing viewers to express themselves in game through NPCs or something is, I think, the best feature you can go for if you only get to choose one.
In terms of success, I would rate the feature set for Call of the Lamb as viewer followers, then help or hinder, and then totem contributions.
They all kind of feed into each other, but if you have to pick one, pick something that allows viewers to become visible in the game in some kind of way.
That's cool.
Thank you.
Thank you.
Hi, I'm working on my own little itty-bitty Twitch integration project and I was wondering if you could elaborate a little bit more on the thought process behind like balancing between the average three viewer Joe and like the handful of really big streamers.
I think much.
Oh, I need to repeat the question first.
So the question was how do you balance a Twitch integration compared to basically the balance of the game, right?
I think it's Much like game balance, I guess it's, I'm not a game designer myself, but I think it's more of an art rather than like a science.
So in general, like I said, during the talk, I would stray away from, for example, giving the streamer or during the Twitch integration, like a lot of resources or something like that.
So if anything, make things harder for them, make them suffer a little, it's probably gonna cause viewership to increase anyway, because people like to see people suffer.
Well, apparently not because people like to help instead of, you know.
So, yeah, no real tangible answer there, I'm afraid.
It's basically just an art.
Yeah.
Thank you.
Hi.
Thanks for the talk.
It was fantastic.
Loved every minute of it.
So, can you go a little bit more in depth about what you would have done if you had more time for testing, either tech side, like what processes you would have taken, or design wise, like how you would have used that data?
Yeah, so the question is, what would we have done a bit better if we had more time for testing or if we just tested better, really?
So we didn't have a QA at the time.
So we had like a QA company, but they were focused on testing the game because we still had quite a couple of little bugs in the actual game itself.
So yeah, that was the focus.
So we didn't test the Twitch integration too much besides just playing it ourselves, I'd probably say.
And the issue with the integration was, yeah, the high server load and whatnot.
And I hadn't actually really done server-related code stuff before, so I was sending way too many calls and things.
So that's something that I've learned now is to not DDoS the server.
But yeah, I guess we would just test thoroughly.
Maybe we would test how many calls we're sending a bit more as well.
Maybe debug that a bit better, because I know there was points where I'm like, oh, yeah, you're right.
I am sending 1,000 calls a second.
And yeah, like the traffic, I'm not really sure.
Do you have a way to like simulate?
There are ways to like simulate a lot of traffic, but nothing can really get you to production level type of traffic, even like with the big tools out there.
Plus also just simulating traffic in of itself isn't enough because you're always going to run into weird edge cases that only happen in production.
So yeah, in a nutshell, more play testing, I guess, and at least trying to simulate production traffic using tools like artillery or I think there's one called K6 or something, so yeah.
Okay, thank you.
Thank you.
Hello.
First of all, I really want to thank you all for doing the talk today.
I really appreciate that.
As a visual UI artist, I'm curious on how you implement a lot of the UI stuff in terms of really making it clear to streamers how to be able to use these features as well as also be able to really use them to interact with their viewers.
Yeah, so the question is around developing the UI.
Would you say that developing the UI of both the game or the integration on the Twitch side, or just the game?
Mainly just the game.
Just the game?
Yeah, so with the game UI, we kind of just use the UI in Cog the Lamb is very We use it everywhere.
We try to use the same stuff, if that makes sense.
I didn't do the UI.
The developer Will did, so I can't answer too much about it.
But in the sense that we try to do less is more, really.
We keep it really clean.
One of the things that we implemented, which you probably didn't see in that video because we didn't launch with it, I don't think, is that when the viewers are creating a follower, The streamer actually sees their little follow being updated in real time.
This was super handy because sometimes the viewers have like they're left They've left the channel and they've won the raffle and the streamers just sitting there like what do we do now?
I were just waiting for him.
So by having the little viewer follower update in real time.
It was just it was a good way of Keeping that going, yeah.
Hopefully that answered it a little bit.
In terms of initial discoverability from within the game for the Twitch integration, you basically can't miss it.
It's in the pause menu, like a big-ass Twitch purple button, so it's kind of hard to miss.
I would definitely add an in-game section on that where you basically just connect your game, manage settings and all that, and from there you can send them to the extension on Twitch itself, which you can just link to and have them install it that way.
Awesome, thanks so much.
Thank you.
Hi there, great talk.
So you said that Devolver approached you and gave you a couple of games that they thought would be good for Twitch integration.
So was that something that Massive Monster had planned from the beginning, was to have Twitch integration, or was it something that Devolver approached you with and said, hey, we think that Twitch integration would be good for you, and then y'all accepted it, or was it something that was pushed on you?
Okay, so the question was, did Devolver approach me with Massive Monster wanting to implement Twitch integrations beforehand?
Right.
Okay.
I can't speak to that, but I assume no.
It's been a while, but I don't think Twitch integration was on their roadmap at all, because like Harrison said, they were just still very focused on just finishing the game and polishing it.
So it basically was Clara's idea from Devolver, and she kind of pitched it to them.
while I pitched the ideas to her, and then we all got into a meeting together.
Got it.
Thank you.
Thank you.
Hi, great talk.
I'm doing similar thing in Japan.
So did you think about any monetization through these streaming features?
I'm the extension gets a little bit.
So an extension developer, any bits that are used within the context of an extension, the extension developer gets 30%, if I remember correctly, and the streamer gets 70% of that.
Like Harrison said, we had to disable bits transactions, especially at launch, because there were too many issues with it.
And obviously, cheating people out of their money feels bad for everyone involved.
I would also probably not count on How did you decide to, with limited resources, do a desktop extension versus a mobile extension, and how should other gamers or developers plan that?
Yeah, so the question was, like, why did we decide to do desktop rather than mobile or not doing mobile additionally?
Mostly everyone is, or I'd say, what, like 90% of people are using Twitch on their PC when they're interacting with, like, in the chat and stuff.
I feel like mobile, it's not as easy.
You kind of have to, like, hide the stream to interact.
Yeah, it just makes more sense for us to do it for PC and not worry about Mobile too much for the game integration.
It's nothing at all me.
It's up to him to do them the mobile So it was like I guess it was just not really something that we needed to worry about too much to start with Yeah, but then we did get a lot of people requesting the extension of mobile.
So like yeah sure and The people requesting it were probably a vocal minority, so I would say Twitch doesn't make this information public, so I don't know for sure, but definitely the overwhelming majority of the people who are interacting with your integration do so on desktop.
So people were asking for mobile, but I would recommend against implementing a mobile integration, at least at launch.
Just launch with another type of extension, see how people interact with it, and then you can add mobile down the line if people are actually asking for it.
Perfect, thanks.
Hello, I thank you for like the talk and also your game is like super funny.
I have seen myself die and all of my friends streams But I just wanted to ask you guys like like since after launch was was your like Connection between streamers like enhanced and have you taken like more feedback from streamers particularly in like the twitch integration features and have you implemented like Any changes or has it influenced any of the design choices that you made with these twitch integrations?
Yes, so the question was, like, did we interact with the streamers that were using the Twitch integration, and did we listen to some feedback and stuff like that for future updates?
No, no.
The answer is yes, we definitely did.
Like I said, we have a community manager that, you know, that's, like, their job is to discuss and chat with streamers and whatnot.
Of course, streamers, whenever streamers have issues with the Twitch integration, to talk with as many streamers as we can really.
I think it's mainly a combination of both just talking to streamers but also like kind of instinctively feeling what kind of features would work well and what kind of features would need to be updated at some point to be valuable to streamers and viewers.
Yeah.
Thank you so much.
Thank you.
Hi.
Thanks for the talk.
I was wondering, how do you manage feedback, especially when it's negative, when you have such a short period for testing and fixing before launching?
So the question was, how do we manage feedback?
What was the testing?
Yeah, like, how do you manage feedback when you have, like, such a short period of time?
Oh, yeah.
Yeah, so it was hard, because we were, like, fixing lots of bugs from Kotlin as well as, like, oh, there was these Twitch integration issues.
So it's really just prioritizing the feedback, getting as much of it as we can.
At the time, we didn't have a community manager, so it was all of us just listening to people streaming and stuff like that.
During that week of soft launch, we were all basically sitting in Twitch streams and just watching and stuff like that, just getting all the feedback in, fixing stuff basically as quick as we could, and then just pumping out updates straight away once we fixed stuff.
for you.
Fortunately, when it came to the actual design feedback, we got a little bit.
That thing I was mentioning about the followers and updating, that was a big one because streamers were like, I don't know what's going on.
It's just like a wheel.
They're just waiting.
And sometimes viewers take five minutes, 10 minutes, 20 minutes, and they're just waiting.
So yeah, that was pretty important.
Thank you.
He was there first.
Thank you for the talk, very eye-opening.
Thomas, are you taking appointments this week?
I am.
Find me outside.
That's why he's here.
Thank you.
Sponsored.
I was curious if there were any features for the Twitch integration that were scrapped while testing or maybe after post-launch.
And there's a second part.
Are you thinking of using these integration features for any other streaming platforms or is it just Twitch?
So the first question was, did we scrap any features we came up with at the start?
And the second question is, are we looking into providing this integration for other streaming platforms?
For the first question, I don't think we scrapped anything.
I think we pretty much just hit the nail on the head right away with the features that we wanted.
I can't think of anything that we had to scrap.
Probably some of the weirder help or hinder options that I suggested during the pitching stage, because obviously they need to be implemented by Harrison and the team at some point, so I usually think pie in the sky when I pitch stuff, but obviously there's also the real life world where they actually need to be coded and implemented.
Yeah, I don't think we actually scrapped anything.
We kind of just... I think Calderland was fortunately quite an easy game to do Twitch integration for, like with the design.
So we were pretty set in stone with the features, yeah.
As for the second question, providing this integration on other platforms, like I mentioned during the talk, Twitch is kind of really ahead of any competitors when it comes to this kind of stuff.
So while you could do some of these things, for example, help or hinder by just voting through chat commands on YouTube or Kick or whatever, Thank you.
Hey guys, great talk.
I'll be using a lot of this information to convince some stakeholders later, so thank you.
I just want to ask one question.
Thomas mentioned the server, so do you need a server to use these Twitch extension features or is it kind of an extra just to make it run smoother?
It kind of depends on what you want to build, how you're building it, and if you're working with me or not.
Because if you're just building your Twitch integration on your own, there certainly are tools that allow you to just connect directly to Twitch.
For example, with the channel points thing, they have a whole event subsystem that your game can connect to directly.
They're also working on a, basically just like a Twitch SDK that you can use in your game.
I think it's in closed beta right now, but don't quote me on that, but it does exist.
The way I approach it is that I write all of these backend services to make talking to Twitch, let's say, as easy and frictionless as possible.
So for example, if Harrison were to have to implement Twitch authentication himself, meaning linking a Twitch channel to the game, He would have to run a redirect server himself locally.
There's a whole OAuth flow you need to take into consideration.
So being able to abstract that away to separate backend services makes the game integration a lot easier for the developers I work with.
But it certainly can be done yourself if you're just going at it solo.
Thank you very much.
Hi.
You mentioned game balance.
I suppose it's pretty complicated to give power to the viewer while at the same time maintaining the game balance.
After this first experience, if you have to do it again, would you still try to really maintain the game balance and maintain the game as it is?
Or at the opposite, maybe try something a little bit more crazy and say, okay, let's develop another way to play the game if you are a streamer and Yeah, keep the game balanced in some way.
do with I guess if you tell the streamer that that's going to be the case and you make it obvious that, yeah, I guess it's, um, you want it to be fun.
So screw it, right?
But yeah, balance is pretty important as well.
Yeah.
Sorry.
Also, if you make things that make the balance go out of whack, you're probably designing features that are like really crazy.
But then that goes back to my earlier point where you don't want to alienate players who aren't streaming.
So they don't get to experience that.
So I'd probably advise against that.
Yeah.
Okay.
Thank you.
Thank you.
I think that's it.
Cool.
Thanks, everyone.
