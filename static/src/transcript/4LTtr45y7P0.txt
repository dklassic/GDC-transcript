I've been told to tell you in advance that you should silence your cell phones if you haven't already, and that also, please, when it's all over, if you can fill out the evaluation form, that would be really great.
And so without much further ado, I'm just going to launch right into 30 things I hate about your game pitch.
First, let me give you a little bit of background about why you should even care what I think about your game pitch. I've been in the industry for 20 years. I started off as the creative director for Red Storm Entertainment. I designed Rainbow Six and Ghost Recon, but for the last 14 years, I was a senior game designer at Sony Santa Monica. I only recently left to go independent. And for a lot of that time, I was one of the guys you pitched to.
probably, and I heard several hundred pitches during that time, so that there was a lot of stuff that I saw.
And it gives you a unique perspective on it, because if you're the person doing the pitching, you may only do a handful of pitches in your career, but if you're the person receiving the pitching, then you see a lot, and you get to see patterns in how people pitch.
And so the genesis of this talk was last year at GDC, I took a whole bunch of pitches and I was talking to one of the people I was listening with, and we were just shocked at how many mistakes people made, and particularly people made, even who'd been in the industry for a really long time, people with 10 or 15 years experience still doing really bad pitches.
And we always try to give people a fair shake.
We weren't trying to hold things against them.
But at the same time, there's some really obvious things people were doing.
And so that was the genesis of where this talk came from.
So when I was looking at pitches, there were really two big questions.
There's really two things that I want to know.
And that is, is this game worth making?
And can this team make it?
And anything that's not directed toward answering one of these questions in some form, it doesn't really need to be in your pitch.
Or if it's in your pitch, you need to play it down in exchange for answering one of these questions in a meaningful way.
So since I only have 30 minutes and I have 30 things, let's let the hate begin.
Number one, I don't give a crap about your back story.
A lot of people start off their pitches trying to introduce you to their game world.
You hear 20 minutes of the complete political situation on some fantasy continent or what the childhood of your protagonist was.
And this really doesn't help sell your game at all.
If you think also about what you go about when you try to buy a game.
You may enjoy knowing all the information while you're playing, but at the point of purchase when you're deciding whether or not you actually want to have that game, you don't know all that backstory.
And if your game can't stand alone with a huge dump of what the backstory is, that's a problem.
And it's a problem that can be addressed even at the pitching stage.
So...
First off, 20 minutes of lore will not sell your game.
A rule of thumb, look at how the original Star Wars begins.
You have a really quick text crawl.
It sets up what the situation is, and then you're on into the action.
If you need to set things up, try to set them up that quickly.
Number two, I don't give a crap about your inventory system, either.
And another pattern that I would see when people would pitch is that they would explain in great detail systems that are very standard.
So if it's central to your game that you have a really unique and different inventory system, if that's something that's really different about how your game plays, by all means, yeah, showcase that.
But the pitch is not a place to just do a general dump of every mechanic you have, because a lot of times if you say, oh, yeah, we've got inventory management, that's all you need to say.
So number two, don't explain standard features.
If anything's there, it needs to be there because it is really core to the concept.
Number three, I'm not going to design your game for you.
A lot of times people would come in to do pitches, and they would start off with questions.
What sort of game do you want to see?
Or they would give you two different options, like we're thinking about making this first or third person.
What do you think it should be?
That's not the place to do that.
If a company is interested in hearing different options, they may ask you about that later on in the pitch.
But when you start things off, you want to pitch what your creative vision is, what the game is that you want to make and why you want to make it.
Don't ask the person that you're pitching to to answer questions about what they're looking for or what they're trying to accomplish.
If they want something different, they'll tell you or they'll ask you.
So number three, don't ask me what I want, tell me what you want to do.
Tell me what game you want to make.
Number four, game pillars are not hooks.
One of the things that we would always look for to determine if a game was worth making is, what is the hook?
What is the unique thing that's going to make this different, that's going to make it stand out from all the other games that are out there?
And a lot of times, people would think that if they would say, oh, here are our pillars, that that would satisfy the need for what the hook of the game is.
We want to have a really strong fantasy story in a really detailed world, and it's going to be all about hand-to-hand combat.
Yeah, those are pillars.
Those help keep you on track while you're making the game.
But an important part of pitching is to tell the person you're pitching to why somebody would buy this game instead of something else that's already out there.
So very early on in your pitch, one of the key things you need to emphasize is, what is it that makes your game unique and different from everything else that's out there?
Number five, you never explain to me what the player does.
And this often is tied into the lack of a hook.
You have, I would receive game pitches and people would like talk about how beautiful the world was and what the setting was and what their story was and what their monetization model was.
But when it came time to actually describing the moment to moment gameplay, the experience of the player, it would never be mentioned.
Or they would mention sort of offhandedly, oh yeah, it's a platformer.
Okay, what kind of, how is it different?
Why do I want to play this platformer instead of the hundred other platformers that are already out there?
If you don't have something unique, you need to think about what is going to be unique before you get to the point where you're actually pitching.
And describe your mechanics.
Be able to talk through moment to moment what it's gonna be like for the player to hold the controller in their hand and what they're actually going to be doing.
Number six, in the real world no one can double jump.
And what I mean by this is don't use realism as a way to excuse elements of your design.
A lot of times when you're pitching, you'll be discussing why you made certain creative choices, why you have a certain vision.
Whenever somebody would say something along the lines of, oh yeah, we made this choice because you can't really do this, we wanted something that would...
Unless you're doing a real hardcore simulation, unless the whole selling point of your game is that it's absolutely true to the world, don't excuse design decisions.
by saying, oh, that's the way it really is.
Because for the most part, almost everything you do in a game is unreal in some way.
And so justify your design decisions with real reasons, rather than just appealing to realism.
And something that's related to that, many times I'd get pitched a game and it would have a frame story.
It's a game show.
If you pitch something as a game show, I start thinking, well, why do you even need a frame story?
Because game shows themselves don't have frame stories.
The frame story of a game show is that it's a game show.
So if you have a game, and it has a really cool mechanic, and it's fun to play, you don't necessarily need to put a wrapper around it to explain while the player is doing it.
If you really have a reason to do a game show game, by all means, do it.
Don't let me stop you.
But don't feel the need to justify actions by some sort of artificial frame that you put around it.
So if your frame story for your game is that it's a game show, you probably actually don't need a frame story.
Just leave that off.
It makes everything simpler.
Number eight, it's a parody. I always get very suspicious when I'm pitched a game that says ‑‑ where the person explains that it's a parody, because I wind up thinking Is it really a parody?
Is it really just a crappy game?
Did you really start out to make something that was serious and good, and then discover that you didn't get it?
And so you say, okay, I'm gonna lampshade it.
So again, I'm not saying don't make parody games, but announcing up front that it is a parody sets off alarm bells.
It makes me suspicious that there is something in the game that is off or wrong, that you don't feel like it could stand on its own without being taken as a joke.
Oh, I just completely screwed up my presentation there.
Number nine, you never mention your glaring obvious tech risk.
And this goes into, can this team succeed in making it?
A lot of times, if you see a lot of pitches, and if you've been working on the publisher side a lot, you kind of know what's feasible and what's not.
And you know what things are hard to do and what things are easy to do.
And if somebody comes in and says, yeah, we want to do a 1,000-person multiplayer game with real-time firefights, then alarm bells go off.
And it's fine to do something that's really technologically ambitious.
It's fine to do something that's really dangerous and hard.
But if you say something like that that sounds dangerous and hard and then you don't explain how you're going to pull that off, then that really makes people nervous.
So taking a big risk is great, but if you know you're taking a big risk, then you need to tell people that you're taking a big risk and you need to acknowledge what you're going to do to address that big risk.
This is an interesting one.
Number 10, your proof of concept doesn't prove your concept.
A lot of times people do prototypes, and you'll see prototypes when you're getting pitched.
And you need to be very careful what you're prototyping, because a lot of times what you prototype is the easy stuff, and the easy stuff is not the stuff that needs to be prototyped.
So if you show me a prototype and you're like, hey, here's a character that's walking around.
I'm like, that doesn't tell me anything.
It's very easy to get a prototype working where a character is walking around.
If you're going to prototype, it is important to try to focus on the things that are unique and different and hard.
Show what it is that if you have a unique combat mechanic, that's what I want to see in prototype.
I don't want to see, oh, hey, the character can open doors, because I know you're going to be able to execute on the character opening doors.
So when you think about prototyping or doing proof of concepts, prototype what will showcase the hook of your game and things that may convince the person that you're pitching to that you're able to mitigate the risks that are inherent in what you're proposing.
Number 11, having lots and lots of shitty art does not make your art less shitty.
If you have, if you don't have an artist on staff, if you don't have somebody who can produce high quality images, then try to pay to have just one or two.
You don't need to have a lot of art to sell the vision of your game.
Often, you can sell the look of a game with a single really good image.
And you're much better off spending the money or the time, if you're the artist, to produce that one really stellar image that sells the look and tone of the game than to cram your presentation with a lot of stuff that's really mediocre.
So yeah, one or two amazing pieces is better than a dozen mediocre ones.
Don't call it in the trap of trying to think that more art is better if that's not something you can easily execute on.
And related to that, make sure that I can tell what's placeholder and what's not.
One of the worst things you can do is put stuff in your presentation that is just good enough that I might think that you intended it to be in the final game, but it's really not.
So, if the person who put this image on the internet is around, thank you for letting me use your image because it was...
It was them showing how they actually would showcase just pure mechanics with pure engineering art.
Engineering art is great because there's no way the person you're pitching to can mistake that for what's really going to be in the game.
So an obvious placeholder is better than bad art that looks like it's final.
Number 13, this is a weird one, because this kind of goes against the rule of not having crappy stuff that you can be pitched with.
You polish too early.
And part of the reason this image is in here, this is from a game I worked on where we did final art for all the ships before we had our combat model down.
And all the stuff got thrown out.
And so if a game is really, really visually polished, but the mechanics are still really broken in prototype, that also is an alarm bell.
Because it suggests that the team is not putting all the effort where it should be.
And it also suggests that a lot of work is gonna be redone.
So again, if you want to showcase what you're capable of in the art department, that's great.
But make sure that it doesn't overshadow the fact that your game in the prototype phase may still be really, really incomplete.
A few still images of showing what your art team is capable of is much better than a prototype that is broken in a variety of ways, but that looks amazing, because the person you're pitching to knows that's all going to have to be thrown out when the game actually gets nailed down.
So make sure that work in progress actually looks like work in progress.
I find this one particularly painful, because part of what I do as a designer is write.
Your sample dialogue sucks.
And this is a problem particularly if you're trying to pitch a game as having a strong story.
If you're trying to pitch a game that has a strong story, then part of what I will be judging you on is whether or not you can actually write.
And so showcasing a dialogue system that has a bunch of really kind of crappy placeholder dialogue does you no favors.
You're much better off not showcasing the dialogue system and instead just showing really good dialogue.
Show off that you can actually write something.
Not the generic, hey, do you have a quest for me?
But showcase a dramatic scene where you can actually judge the quality of the story you're able to deliver.
So if you're selling the story, do your presentation in a way that convinces me that you're actually capable of executing on what you're selling.
This is a bigger deal last year.
You're pandering to the latest tech craze.
Does this game really need the tech that you're using?
Does it need virtual reality?
Does it need augmented reality?
Back when the move was a thing, we saw lots of pitches for move games where the move made no sense at all.
If you want to make a game for these platforms, make sure that what you're doing with the new technology, with whatever the new hotness is, actually makes sense in the context of the game.
pitch a game where it feels like you've had an existing game on the shelf and you've retrofitted some new tech idea because you think that'll help you get interest because in all likelihood that will actually fail.
Number 16, this happened more often than you would think.
I was with Sony, and you just pitched a phone game to a console publisher.
And about 10 minutes in, the response would be, why are we even talking?
Why are you wasting your time?
Why am I wasting my time?
Do preliminary research to the people who you're pitching to.
Some publishers have a particular kind of game that they are interested in.
They're interested in horror games, or they're interested in like 8-bit games or they're interested in arty games.
There's a whole, and some people, some publishers are also interested in having a broad spread of different titles.
So if they're already doing a horror game, they're probably not interested in your game.
So do some preliminary research to find out what it is that people are interested in so you don't wind up pitching them something for the wrong platform, the wrong genre, something that already goes against something that they've announced.
Gone Home already exists.
And this is from a couple of years ago, right after Gone Home came out, it seemed like every other pitch we got was going to be, hey, we're gonna do a new version of Gone Home, without any way to distinguish what it was that was at all different about it.
So, again, along with the idea that there's being technological hotness that people are chasing after, there are also hot games that come out.
So in addition to Gone Home existing, so does Minecraft.
If you pitch a Minecraft clone, okay, how is this different from Minecraft?
How are you taking something that already exists and moving it in a different direction?
Because if you just say you're going to remake your version of something that's already successful, then the immediate answer is, well, why would somebody buy this instead of what already exists?
It's already putting you behind in terms of convincing people that your game is worthwhile to make.
This also ‑‑ it wasn't Marvel, it was a completely different license, but somebody actually came to us and they had this whole game pitch based around an intellectual property that they didn't own. And at the end of the pitch, we're like, well, this is actually pretty cool. And then they said, can you help us negotiate the license to get this intellectual property? And the answer almost always is no. We cannot help you negotiate your license to get your IP.
If you want to build a game around an intellectual property, those negotiations should happen in advance before you go to a publisher.
If you have a publisher who already has access to some IP, they may be interested in hiring a developer who will build a game around those.
But asking a publisher to help you get an IP that you've already built a concept around is a really, really dangerous thing to do.
This was big when free-to-play was the big new thing.
We would get pitches that consisted almost entirely of somebody describing their new monetization plan.
And again, nobody buys a game for a monetization plan.
The details of the monetization plan may be really interesting once you get into development.
If somebody is interested in your pitch, they may say, hey, this is really, really cool.
Can you tell us more about how you're going to make money off of it?
But going into what your pricing tiers are, if you have some unique way that you're going to sell in-game goods, that's a relatively minor part of selling somebody on the idea of your game.
And a lot of that will fluctuate during development.
It's worthwhile to say up front, oh, yeah, we're planning on free-to-play.
We're planning on in-app purchases.
A basic idea of what the monetization plan is going to be affects how you...
You think if the game is feasible or not, but actually going into detail of how the system is going to work usually doesn't belong in a pitch.
So make the game, then figure out what your pricing tiers are.
Don't start from the principle that you're going to build out your whole monetization plan in advance.
This is a huge one.
You have no idea how much money you need to make this thing.
or this is the same thing, or how many people, or how much time, never go into pitch without an idea of what your scope is going to be.
A common question you'll be asked is, how many hours of gameplay does this have?
How many levels?
How many lines of dialogue?
Whenever I was taking pitches, I always had a, was running a calculation in my head of how much money this game is gonna cost to make.
And because that's where all the feasibility comes down to.
It's like, can we afford to pay money to actually pay for this thing?
And if you have no idea how big your game is, or how many people it's going to take to make, how many months you're going to run, it makes it impossible to assess the feasibility of this game as a project.
You could have a pitch that a game that's really, really, really amazing, but if you don't know what it actually takes to build it, that suggests that you're never going to be able to execute on it.
Related to this is that you come in and you don't have a team.
You don't have anybody besides yourself.
You don't need to have your complete team in place.
A lot of times when you're pitching, it's because you want the money to be able to hire people.
But you at least need to have a roadmap for how you are going to hire people.
And at least have an idea of who the leads are going to be.
You know, if you have one or two people who you would like to hire, you want to give the person that you're pitching to the idea that there is actually going to be a body of people who are capable of executing on this idea and not simply it's a pipe dream that you have, that you're hoping to make without any resources to execute on it.
When you're specifying what sort of stuff it is that you, how much you need and how this game is going to have a roadmap to success, make sure your business plan that you're presenting is realistic.
If you're saying that you're going to sell as much as World of Warcraft.
that's not going to happen. Your game is going to fail.
And so if you need to have those sort of sales for your game to make financial sense, then your business plan makes no sense.
So when you're putting together what your business plan is, make sure that it's not based on outliers.
If you're saying, hey, here's the scope of our game, here's how much money we expect to make, pick a middle-of-the-road title, one that's like a moderate success.
Whenever he assumes the game is probably going to succeed a little, people tend to go into these things with a sense of optimism, but don't have a business plan that's based upon some sort of wildly unrealistic outrageous sense of success.
Here's another one.
You seem like you'd be a huge pain in the ass to work with.
I actually sat in pitches where afterwards we would sit and talk and say, man, that was a really great game idea.
That guy was a huge asshole.
And this is more important than you think, because a publisher-developer relationship is a relationship.
It's ongoing.
At a minimum, you're going to be working together for six months.
Quite often, it can be 18 months, two years, three years if things go wrong.
Things get stressful.
There's a lot of money involved.
People get nervous.
If you're not able to be friendly and agreeable in a pitch meeting, What are you going to be like when you're sleep deprived and you're a week out from alpha and nothing works?
So remember that your pitch is also an addition.
It is making you, you're showing to the person you're pitching to what sort of person you're going to be like to work with.
Are you going to be a colleague that they actually want to be involved with?
Number 24, you expect me to know off the bat who you are.
There are a lot of games out there, and a lot of game developers.
And I may not have played your previous games.
Start off giving me a little bit of background.
Tell me what you've worked on before.
Don't assume, and don't be offended in particular if I haven't played your game before, even if it was well received.
There's a lot of stuff out there.
Number 25, you get annoyed if I ask you questions.
And this is hard sometimes because if you've pitched and you've rehearsed your pitch really well and you know exactly what you're going to say and you have your whole thing scripted and down, and then somebody like five minutes in raises their hand and asks you a question you're going to answer later on, it's really, really annoying.
But.
If somebody's asking you questions while you're pitching, it means they're interested in your game.
And it means that they want to know more.
And so try to roll with the flow of how the pitch goes.
If it takes you off script, go off script.
You're not being judged on how well you stick to script.
It's how well you convey what needs to be conveyed for the game.
This is a weird one.
We're watching the pitch on your phone.
It's really hard to look at a PowerPoint if it's like this big.
And so, be sure you have the adequate technology to pitch what you're pitching.
Even if you're pitching a phone game, it is often worthwhile to show stuff on a tablet to the person you're pitching to.
So please, bring a tablet or a laptop to your pitch.
Number 27, you bought a laptop, but you didn't bring headphones.
I was talking to somebody.
I no longer take pitches because I'm freelance.
But somebody showed me their game a couple of days ago.
And I thanked him because we were in a really noisy place, and he had headphones.
Sound is at all important to your game.
If it means anything, assume you're going to be pitching in the noisiest bar at GDC.
Because a lot of times, that's what happens.
And actually, please bring headphones.
Because if you hand me your earbuds, I don't want to put them in my ears.
Number 28, this only happened once.
You show up hungover or drunk or high.
Please don't do this.
Hungover is probably the most common one, but I've seen the others.
And it really, my immediate response is, if you're not taking this seriously, then why am I taking this?
And it also suggests that if you're not able to pull it together for a half-hour pitch, what is it going to be like over the entire development?
I've gotten the five-minute warning, but fortunately I only have two more.
Don't trash other companies.
People will say, oh yeah, our last publisher was really awful, or we really hated him, or we don't want to make a game like this other game because it's crap, or don't do this.
Don't trash other people.
There's ways to talk about why your game is great, or why you're a great team without talking about negative things about other people in the industry.
Because again, development relationships are always very stressful, and what will run through the publisher's mind is, how are they going to talk about us when they're making a game for us?
And finally, make sure you take a shower.
I shouldn't have to tell people this, and I know it's hard at GDC.
You're walking around a lot, but I've tried not to hold it against people, but...
Yeah.
And this goes into the, if you're doing a VR demonstration, please wipe off the face plate before you give it to me to put on.
Or don't give me your earbuds.
Be mindful of the fact that we're talking and interacting with a lot of people.
And it's a small thing, but it goes a long way to feeling like you respect the person you're pitching to.
So just a couple of positive things at the end, because that was a whole lot of negativity.
Be enthusiastic.
Be excited about your game.
You're the person who's the most excited about your game.
And if you're not excited about your game, then who is going to be?
Show that enthusiasm while you're pitching.
Be upfront and honest.
If you're an inexperienced team.
Be sure to say that.
You're not going to be able to fool most people you're pitching to.
You're not going to be able to snow them.
They've seen things many, many times.
Be up front with what's hard about your development.
Be up front about what your challenges are, what your risks are.
That makes it seem like you know what you're doing when you're up front about the problems you face.
Sell your hook really, really hard.
What is it about your game that makes it original and unique and different?
Because that's the thing that will make it sell.
And above all, know your scope backwards and forwards.
Know how much it's going to cost, how many levels, how many hours, how many characters, how much dialogue.
You don't need to have created all these things.
You need to know how many of each one of these things you're planning to have in your finished game.
And I have like three minutes.
So thank you very much.
This is me.
As I said, I'm no longer with Sony.
I left Sony this past fall to go freelance as a design consultant.
My website is gameontherails.com.
You can follow me on Twitter at BBEpton, or you can just e-mail me if you have questions.
And I think we probably have time for, like, two or three questions, if anybody has any.
And they've asked me to ask people to come to the microphones, please, and please speak into the microphones because it's being recorded.
Could you talk a little bit about time, about how much time people would budget for a pitch?
Typically, when we were doing pitches, half an hour.
Again, it depends. If we were doing a pitch at GDC, we'd assume it would be half an hour.
If we were going on site, which would happen sometimes, that's going to be longer.
We might spend an hour or two hours, but usually if you do a site visit, then you're actually digging into what sort of tools are they using.
The pitch itself might still only take half an hour, but then there'd be all sorts of follow-up questions.
So in general, have something, your high-level elevator pitch, but if you're doing a PowerPoint presentation, 30 minutes is good.
Hi, I'm from Lebanon and the Arab world in general is a publisher-light, investor-heavy industry.
So we tend to be pitching studios more than we do individual games.
What approach, what advice can you give in terms of that?
I know it's not something you have experience with necessarily.
Yeah, so if I understand your question, it's like, how do you pitch to investors as opposed to publishers? Is that correct?
Studios rather than games.
Oh, studios rather than games.
So, in general, I have a longer version of this talk that's an hour and I can't fit everything in, but if you can gauge who's in the room right at the very beginning...
If you have senior management, then you want to talk about high-level vision and capabilities of the team.
So this is the grand thing we want to build, and this is why we're great and why we can execute on it.
If you are talking to people who are, if you have a designer in the room or an engineer or an artist, my job is to go along as the designer and evaluate the design.
Then that's why you go lower and more into the nitty gritty.
So what I'm saying, for your case, where you're pitching the studio.
What you really want to be doing is pitching the capabilities.
So you want to be saying, here's the people we have.
Here are what they're able to do.
If they've worked on other games, these are the other games they've worked on.
And then talk about your creative vision, your high level, this is the grand thing we want to accomplish.
Not necessarily with one game, but with multiple games.
This is thematically what we want to do, or this is in business terms what we want to do.
That's how I'd approach that.
Oh, thank you. Just a quick question. I went to Game Connection America this year and well, even though according to the 30 dots over there, we pretty much cover everything. But at the same time, since we don't have any published games, we sort of hit a wall where people were always, yeah, I cannot finance you because you don't have anything published. So do you have any sort of recommendations for people who are starting from scratch?
The question was how do you get published when you're starting from scratch?
The challenge there is that it's on the can this team execute front, because they don't want to take the risk, because they don't believe that you can pull it off.
In that case, a lot of what you may need to do is put extra effort into your prototype.
And that, unfortunately, means spending more money up front to show that you're capable of producing something that's, you know, 30% finished before you actually go to pitch it.
It's very hard to pitch just a straight-up idea if nobody on your team has a track record of delivering.
The further along you get in your prototype and the more complete the prototype it is, the easier it is to sell with an inexperienced team.
That's one reason as an inexperienced team to try to do something really small.
Because then you can sell something that is more nearly complete when you're proposing it to somebody.
Thank you.
You say what you need to do while you're in your pitch, pitching your game, but what's the best way to get a certain company or people to actually be willing to meet with you to pitch your game to them?
Contact them before you come to GDC.
This was a big one.
So research companies, a lot of times it's going to be hard to convince them to do any sort of travel or that you're going to do any sort of travel if you're pitching completely cold.
A lot of times the way pitches would come in to us would be there would be an initial contact point, and because we were a publisher, we would advertise, you know, this is who you need to contact.
Right to the initial contact point, it explained that you have, that you're a small company, there is a game that you're interested in pitching, and at that point you include basic information that shows that it's even worthwhile to take the pitch.
At that point, typically what we would get might be one or two, three pages about what the intended game is.
That's just a very high level concept description.
And then more information on who the team is.
Because again, the two questions are, is this worthwhile?
Is this team able to execute?
And so setting up front like, hey, I'm teasing you with something, you think you'd be interested in seeing this?
Look at us, we're actually kind of competent.
You should actually maybe trust us to do this.
That, for us, was enough to at least get us to do a follow-up email, a little back and forth, and then try to do that prior to GDC or E3 or.
Try to do it in a way that gives you a quick and easy meeting with somebody without it turning into travel expenses because nobody is going to pay for travel expenses for anything that's at the early, early proposal stage.
My question is about trailers because I assume you get to see a lot of trailers in Flightliner work.
When you watch trailers, how much patience do you have to watch them?
And what elements are, let's say, more interesting or more relevant to you?
Do you like to see gameplay? Do you like to see a narrated, hard-sale type of trailer?
What's most effective?
If you're pitching to investors or higher level management, a trailer can be really good for it because it's pretty and shiny.
And it sort of shows off your ability to polish.
If you're pitching to people that are more down in the trenches, they'll tend to ignore the trailer.
I was more interested in prototype and in concept art than a trailer because you can hide so many things in a trailer.
And so what I would say is that.
Unless a trailer is something you can do very easily based on an existing prototype you have, an existing art you have, that's probably not the best place to put a lot of effort into your pitch.
Because it will sell the game potentially to an inexperienced investor, but not to somebody who is really going to be digging deep into whether the game is going to be viable or not.
Thank you.
Are there any metrics that you think are important to bring to a pitch if you have them, or any you'd avoid?
What do you mean by metrics?
Like daily active users or previous sales on previous games or...
Oh, absolutely.
I mean, if you have a track record, and particularly if you have a track record of success, that is absolutely something that you should talk about.
As I said, I have a longer version of this talk that is not entirely negative, and I talk about how to sell your company, and one thing is, who are the principal people in your company?
What are their experiences?
What games have you shipped?
If those games have been successful, how successful were they?
All that stuff is great, because that really shows that you're able to execute on what you're proposing.
So yeah, if you have stuff like that, that's perfect information.
Thanks.
Sometimes when you have been working on a game for a long time, it's difficult for you to find back to the hook of the game.
Do you have any tools to like finding back to the hook and defining the hook for a game?
I'm not sure I understand your question.
The hook of the game.
Oh, the hook.
How to find the hook?
Well, that's the $20 million question, isn't it?
Yeah, I mean, so what I tend to do as a designer, and this is outside pitching and designing, is that Take whatever your core game is and then push it off axis a little bit and see where that takes you.
I'll use the first big game I worked on, which is Rainbow Six.
We knew we wanted to do a first-person shooter, but we wanted it to have a slightly different feel.
The hook started out with the idea that what would it be like to play a shooter where twitch reflexes didn't matter, where it was all about patience and tactics.
And that came out almost from the very beginning, but it was the idea that we took something that was established and then said, oh, let's just take...
What if we change the rules a little and push it a little in this direction?
Or push it a little in that direction?
There are a variety of things that can be a hook.
I mean, a mechanic hook is always good.
Sometimes just the look of a game is a hook.
One of the best pitches we ever took at Sony was for The Unfinished Swan, and it was so stunning because it had an original mechanic and an original look at the same time, which was like two hooks.
and two that were interrelated.
And so, if you have a really compelling character, if you have a really original look, if you have a original gameplay twist, but look at ways to take something that already exists and push it in an unexpected direction and see where it takes you and iterate on that.
Don't just pick the first one that comes to mind.
Try to find different ways to push things in different directions.
Thank you. Sure.
Is anybody else?
Okay, perfect.
