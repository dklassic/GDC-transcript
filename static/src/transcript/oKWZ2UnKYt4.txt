So 2017 was a very good year for open world video games.
We saw great games like Assassin's Creed Origins, Horizons Zero Dawn, and obviously, Zelda Battle of the Wild.
All these three games deliver a great player freedom experience, but also an epic story.
Today I will show you what we create, some kind of experience in Assassin's Creed.
But first, some little word about me.
So my name is Jean-Marie-Santoni-Costantini.
I'm a gameplay programmer at Ubisoft.
And I work in video games for 12 years now.
I work in a lot of Raving Rabbid games.
And now I work on the Assassin's Creed franchise for two years.
So Ubisoft created Assassin's Creed.
10 years now, and the formula was very good and not appreciated by the player.
Okay.
So Ubisoft created Assassin's Creed 10 years ago and make it very cool and very appreciated by the community, but after all this year, it seems we need to renew the experience and bring some new stuff for the player.
Meanwhile, the competition brings some new ideas about player agency, about player freedom.
And we felt we can inspire from this kind of games to improve the Assassin's Creed experience.
An Assassin's Creed experience, it's a linear narrative.
That means the designer won't expect the player to do specific stuff in a specific order to achieve a mission.
Meanwhile, for the competition, Now we have more an open objective approach.
That means we ask the player to do something, but not to do how he has to do it.
That means the player will create his own experience, he will tackle the objective to do the mission and what they want.
What you try to do in Assassin's Creed Origins is to mix these two approach to create a new kind of experience.
To achieve this, we use goal-oriented NPC.
And especially, you use goal-oriented NPC to create narrative moment.
To illustrate this, I will show you a typical quest that we can play in Assassin's Creed Origins.
No.
You know what the plan is.
So in this situation, you have a player who is coming and sees some rebel waiting to close to a campfire.
The important thing is to hold the fire.
The dialogue will start.
What is happening here?
Down there, one of our own has been captured by Flaketai.
Flaketai?
You're plotting an ambush?
Just waiting for the right moment.
We could use an extra sword.
Our gratitude goes a long way.
So we have a narrative set up that means the rebel will make an ambush.
So now the NPC takes their horse and prepares the ambush.
This is done by using goal-oriented NPCs.
And this is what I will tell you in the first part of my talk.
So now the target arrives and the fight can start.
The rebel will fight with the player.
You should have killed me!
Now you've died!
And we have a fight.
At the end of the fight, the player will free the prisoner.
The important thing is to see that this situation can happen anywhere in the world.
It's not especially at this place.
Any player will have a different place where the situation will happen.
So the player should have the dialogue to the player.
We pass to the next step of the quest.
And at the end, the NPC will take the first horse close to him to lead the player to the next objective.
So the NPC will adapt to the situation.
He sees our horse, he will take one.
He sees our horse, he will just get on foot and he will go gently, smoothly to the next part of the quest.
So, what we're using, you're going to see in PC in Assassin's Creed Origins.
First, what we want to achieve is to standardize NPC behavior, because we don't want to have different behavior for NPC between the open world and between the mission.
We want, for example, for a soldier to have the same behavior in the same way.
We don't want to create a coherent world for the player.
We don't want now to have anymore soldiers scripted with a different behavior for a specific mission.
Next, because now our mission are all playing the same time, we want also to manage the open world cow.
That means at any moment in a mission, you can have an animal or something that can happen, something the mission general doesn't expect.
And we want the NPC to continue to do what we ask him to do.
To achieve this, what we need is having more autonomous NPC.
If we go back to the quest shown previously, let's take a larger view.
What can you see here?
We can see some soldier escorting a cart.
Inside the cart we have a prisoner and we have the rebel waiting to ambush.
What we've done here, we gave a role to each NPC and we adjust to let them act to make the situation happens.
It's what I will do.
So the cart advance, the ambush starts.
Even if the player is not involved in this situation, the NPC will do what the job order says for them.
The cart will flee because he feels there is a danger, and we have a chase that starts, and the player can participate or not.
The situation will continue to happen.
If we go back to the description of what the soldier is currently doing, we have a sentence.
soldier on earth escorting a cart.
From this we can extract a goal is the cart, we can extract a behavior is escorting, and you can also extract the way the soldier is currently doing the escort, it's on earth.
If we assume these three elements, we create what we call in production a contextual behavior.
Contextual behavior are narrative situations that we push on the NPC.
So I have an example.
If you want to create a basic setup where you have some attackers that want to steal a chest, just say, okay, attacker will have a contextual behavior attack.
Just give a different contextual behavior to the NPC that have to defend the chest.
We don't want to script this kind of situation.
We just want to make the NPC do what they have to do and respond to the world and not do specific stuff.
So how to create a contextual behavior in your game?
If you go back to the three elements that compose a contextual behavior, let's focus first on the goal.
First, the goal should be unique.
But.
The NPC can have some sub-targets.
As an example, if, for example, you ask an NPC to protect an NPC, the goal will always be the NPC they have to protect, but while you're fighting, the NPC can have some sub-target, the current opponent that you're currently facing off.
Next, we want the contextual behavior to be persistent.
That means, even if the player goes very far from the situation, from the gameplay situation, we want the contextual behavior to continue.
We want the NPC to continue to act.
So for this, we need the goal to be persistent.
And next, the goal can be something specific found close to the player, or it can be found with any criteria.
For example, any guard close to the player.
Some example of goal that we have in your game, so it can be the player, can be a unique NPC, it can be a static location, like an outpost, or it can be any of these two guards.
Now about the behavior.
The behavior is the action associated with the goal.
We want to have the same behavior between the open world and the mission.
That's why we try to make the same behavior for both.
Some example of behavior that we have in our game is we have the search, for example, and Percy's searching for someone.
You have the ambush, so the NPC is crouching, waiting to make the ambush.
And you can also having some NPC following their leader for an epic ride across the desert.
Next, we have the parameters.
So the parameters will adapt the logic to the context.
So it will give the situation more credible for the player.
We don't want to expose all parameters to designer because we want to have, again, some coherent behavior.
So if now we expose all the parameters, we can have some unbelievable behavior.
Some example of parameters that we have, you can have the speed.
Another example is what we call the awareness state, is how the NPC is feeling the danger.
So if the NPC is feeling a danger, he will have his weapon and shaft ready to start the fight.
Some example of contextual behavior that we have in our game.
For each example, you can see the goal, the behavior, and the parameters.
So in this case, it's a different contextual behavior.
So some NPC was assigned to defend the fort.
Here, the important thing is to see that Mission Designer doesn't control where the NPC will go.
That means each NPC will be assigned by himself to a patrol point, and will be wandering inside the fort.
Another example is a search.
So in this case, we have some NPCs searching for the player.
So it's the same thing.
The NPC was spreading around the world by themselves.
And the next one is the bodyguard.
So some NPC are protecting the unique important NPC.
So if the unique important NPC is doing something, the bodyguard are waiting for him.
And as soon as he starts to walk, he will start to follow him.
Here again, the important thing is the mission designer has enough to manage this kind of issue.
That means the bodyguard knows how to wait for his target, how he has to follow him.
To achieve this kind of behavior, to achieve this kind of control, we need to use the environment to help the NPC to act.
If we go back again to the ambush situation, let's see.
OK.
Let's take a larger view.
In fact, we have what we call the AI network.
The AI network, it's a network.
that helps the NPC to find some position to do what request.
So for here, we can see we have the NPC position that can be used for an NPC that want to ambush on foot.
We have also some NPC positions, if the NPC has to do the ambush on horse.
And also we have what we call the trigger area.
When the target will enter the trigger, the ambush will start.
Because the NPC have these three elements, they can do their ambush by himself and do the one thing.
This kind of setup will have a lot in your game.
For example, we have another ambush setup.
For the defend, we have a trigger zone that defines the defend area.
That means the NPC will stay inside the fork.
The NPC will be leashed inside the trigger.
And for the bodyguard, which is a table where the NPC was writing something, we have the position where the bodyguard will wait for the very important NPC.
So common rules that we have for any contextual behavior in your game.
We want any contextual behavior to be interrupted and resume automatically.
If, for example, the player shoots someone, the convoy will stop.
The NPC will start an investigation.
One of the NPC on earth will go ahead of the convoy to protect the driver.
And after a certain amount of time, the convoy will resume automatically.
It's not an edge case, it's a global behavior that should happen systematically, in a generic way.
Another rule that we have for any contextual behavior, we want contextual behavior to be readable.
So in this example, if the NPC has some horse close to them, he will use the horse.
But if for any reason the horse was killed by someone or he was not here, the NPC can continue to do the ambush by just getting the on foot position.
This is not managed by the designer.
It's not an edge case.
It's what's expected for the generic behavior to adapt to the current environment state.
Another example of contextual behavior that we have in your game is the goto.
The goto seems very simple, because it's just asking an NPC to go somewhere.
But in fact, it was the most complicated contextual behavior that we had in the game.
Because we use a contextual behavior goto to create some narrative moment with the player.
That's why most of the go-to was why we dialogue played between the NPC and the dialogue.
We want also the NPC to take a vehicle if there is an opportunity, depending on what the player is currently doing.
And we are also something that can manage all the edge cages.
We don't want anymore to have mission designers to manage edge cages depending on what's happened.
If, for example, the vehicle is broken or if the NPC cannot continue to advance, we don't want them to manage this kind of edge cage.
It should be generic for any mission.
Some example of contextual, of go-to contextual behavior.
So we have the walk and talk.
So the NPC is waiting for the player.
I am Aya's cousin, Thanos.
Ah, yes, Thanos.
Nice to meet you and Farzan.
Tell me what is happening with Aya.
Why are you being so discreet?
Genade sent his men on a house-to-house exchange.
and at the end of the dialogue automatically the NPC will switch their speed look there's Thanos he thinks he's a was a driven woman stalking deadly prey it so happened that i also had reason to bring down When Aya was successful, I stepped in to protect her.
We are grateful.
And we are grateful that you have eliminated Eudorus.
He was an odious individual.
I should tell you that in addition to Eudorus, I put an end to the philaketai of Alexandria, Gennadius.
Gennadius?
So NPC we adapt to this.
Next, we don't want to have mission fail if the player goes very far for the area.
So we have a message that says, hey, you have to go back to continue the quest.
This is not a mission fail, this NPC can wait for the player for a long time.
And also in the final fight, NPC will start to fight with the player.
At the end of the fight, the NPC will raise you and continue to follow you.
About the pros and cons about using contextual behavior, the major pro is we speed up the debug phase because when you fix something inside a contextual behavior, we fix for all the game.
We don't have now to go to every mission to be sure that every mission has a good quality.
It's something generic, so every mission.
We fix the issue in animation.
Same thing for the improvements.
As I done the development, we get some feedback for the playtest, and we can now change the logic behind some of the context inside the code, and we should ensure all the game will get the benefits of this.
Also we want to have the virtualization, so if the player goes very far, the situation continues to happen, so it's very important to make a credible world.
When the player goes far and comes back, the NPC is still here, he's not unspawned.
About the drawback of fusive contextual behavior, we have obviously the tech dependency because what we give to mission designer, it's some kind of black box.
If something is not going like mission designer wants, you have to go to the tech guy asking, hey, I want to do this, but it's not working.
It cannot debug by himself.
And also because we have created some generic behavior, it's difficult to create exotic mission.
So now I will show you, because you create this new approach about using NPC, I will show you what we have to change, the way we have to think in design mission in Assassin's Creed Origins.
Now we have NPC, I use system, that mean it's, the NPC as part of the system, it's, that mean the NPC will do stuff from the system.
In opposite way, mission designer are used to create specific moment, linear theory of event to be sure that NPC will act in the way that we want.
It's two opposite way.
And naively, we believe that we can find a balance between systemic and skipping something.
But at the end, it was some kind of conflict between these two approach.
To illustrate this, I will show you a typical quest scheme.
It's a very simple quest, but to start the quest, the player has to jump into the boat.
Would you accept me as a traveling companion?
I will take a new title.
How about Tuttmose the Fierce One?
I travel a lot.
So, the NPC is not here on the boat.
I cannot start the mission.
Why is the NPC sometimes not on the boat?
Just because the NPC is doing generic behavior.
That mean, if he's attacked by a crocodile or something else, then maybe the NPC can die.
Maybe the boat can be destroyed, or maybe the NPC will just flee because he don't want to die.
It's the generic behavior of the NPC.
But is there issue some bug?
But no, but in fact.
It's just the generic behavior.
But what can I do to do some work around about this?
We can maybe give an invincibility to the NPC or give invincibility to the boat.
But we don't want to do this because if, for example, the player takes a boat and do something else inside the world, but he will get an invincible boat.
It's not what we want to give to the player.
And in fact, this kind of issue we have a lot in your game.
For example, we have a request that want to have an NPC with a specific fighting behavior.
For example, an NPC which stay like a turret, shooting with her boat, and staying in the same position.
We want some NPC fleeing indefinitely, just waiting that the player is involved in the situation.
We also saw requests about having an NPC that plays the same direction indefinitely.
And this kind of issue, we have a lot of, a lot of, and quite an infinite.
So at the end, what we can say, we had a mindset clash between the designer and the programmers.
Designer wants to have control.
They want to be sure that they can control the situation and ask his NPC to do what they want.
But as opposite, programmers deliver generic system.
Mission designer wants to have exception, because in the mission they want to create some twist, they want to create some, they want to surprise the player, but every time you have some recur for mission designer, it was difficult because programmer are just very occupied to just make the normal case work properly.
And during the production, we oscillate between these two approach.
It was difficult, it was not tough, because every time we have to make some choice to make the designer happy or the programmer happy.
But at the end, we found some good recipe, because we have some review, and the review was good, and we didn't see that the narrative aspect was not...
well, the narrative aspect is good at the end, and the player didn't see that generic behavior.
They see, okay, we have good narrative, the quest have like handcrafts, so it's good for us, that means we found the right balance between too generic and having something that deliver a cool narrative.
So, if I have to tell a conclusion about this, I want to share some takeaway.
It will be very useful for us to get it while the production, because we just came from the experience that we get.
So first thing, we need to embrace the system.
That means you cannot do some work around about the system.
You cannot have some shortcuts.
If something is not part of the system, it should not exist in the game.
Prefer flexibility over control.
So we prefer to give some flexibility to the quest to be sure that the quest can happen even if it's not the specific case that mission designer wants, but now we prefer to get the flexibility.
Ask the player what to do and not how to do something.
It's better if the player is playing his own way and not exactly what we want him to do.
Define a clear toolbox for the mission designer.
When we design quests, because we are currently doing the tech in the same time we are doing the quest, it was difficult to define what would be the tool.
But very early on in the production, try to define what will be the tool that the designer can use.
And the most important is forget the golden path.
Because now in an open world game, what we want is we want the player to create his own story.
So we don't want to be sure that the player will do the thing the same way we expect.
You have to let him to create his own experience, and he will be very happy.
But the next step for future development in Ubisoft, obviously, we continue on this way.
because it's the future for systemic open world game while maintaining a good narrative.
We want also to improve the collaboration between team because it is very important to have good collaboration between the tech and the designer to be sure that the tech will be well used by the designer.
And we also have to explore new ways to tell a story because we have something to do in open world to tell a story to the player not in a linear approach but more in something systemic.
Thank you.
You have questions go ahead and go to the mic we have about four minutes.
Nope.
Great.
But it's really easy.
The AI network that you described, is that just a trigger for those?
Or do you see something like when you were describing you have an ambush point, and you have a trigger for the ambush.
Did you just pretty much just populate the world with those, so that those would happen before everything?
Because if the target would travel forward, that ambush would be triggered.
Yeah, in fact, the goal of the network is to create opportunity to make situation happens.
So we have the trigger zone, and because the NPC are linked to the trigger zone, it's something that the designer created.
You want to be credible to have NPC item close to the point.
Something that the designer push in the world.
Yeah.
If you want more information about all the virtualization systems, I have another talk about the Meta-AI in Assassin's Creed Origins.
It will be done by a colleague of me.
I think it's Wednesday.
It's Meta-AI, it's a virtual, fine, Meta-AI in Assassin's Creed Origins this week, on Wednesday.
If you get more information about all the virtualization system and how we continue to update NPC very far from the player.
Yeah.
I have a question.
One of the examples you showed of both in between the settlements, I was wondering to what extent do these systems involve civilian backgrounds and then it moves to the sediments as well or do they always spawn before any player scenario?
It's a specific NPC that wait for the player to talk with him.
Hmm, yeah.
The quest keeper in the boat that you mentioned before, you're gonna die.
Did that really occur in a way that I understood it in the last time?
Sorry?
The quest keeper that was in the boat, if that quest keeper dies, how does the quest actually become delivered in that example?
We can make the NPC invisible, it can be one of the solution, but to trigger the quest, the player have to sit on the boat.
So that's.
Yeah.
But what we try to create is generic behavior, and this generic behavior will answer all the, from you, we have, bring an answer to all the stimuli that the NPC can get inside the situation.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
But.
OK, for example, designers sometimes want to override the reaction.
It's something you can allow if it's credible with the rest of the world.
If, for example, you ask this NPC should have different reaction regarding the player because it's in a role.
or it's coherent, we have the possibility.
But every time we have to ask the question about what do we need to this override?
Because we want to keep coherence in the world and we don't want to have too specific stuff.
All right, thanks a lot.
We are out of time. We need to move on.
If there were a couple more questions, you can accost Jean-Marie off the stage here or out in the hall would be better.
So let's appreciate Jean-Marie for putting this together for us.
Good material.
