Hi, so I'm Tony Howard Arias.
I am the co-writer and game designer for Scarlet Hollow, which is a choice-driven horror visual novel that sits at the intersection of Twin Peaks, Gravity Falls, and Life is Strange.
It's really weird to be in front of a crowd like this after the past couple years, so forgive me if I get a little nervous.
And I'm here to talk about ways to think about player choice in your choice-driven narrative games in terms of both making it feel like the decisions in your game matter to your players and not burning yourself out or being unable to finish your project because of just, like, scope creep.
So to do a bit of an overview, when you're working on a choice-driven game, it's always going to be a balancing act between maintaining your cohesive narrative, making sure your choices fall within the cohesive story you're trying to tell, the struggles of exponential scaling, so if you have too many major decisions, incredibly easy for that to just get out of hand and lead to an unfinishable project, and then, of course, delivering impact for your choices.
And impact is the term I'd like to use here to describe the measure of your players feeling like the choices in your game matter.
Something I want to stress to the above point is that as narrative designers for video games, we are not tabletop GMs.
And by nature, our medium is limited by finite choice because we can't just go off and immediately react to what our players are doing.
So you have to make sure that your choices count.
Building on that, creating impact is a function of knowing when you need to put in the blood, sweat, and tears it takes to really make your narrative branch out in interesting ways, and knowing when to use misdirection and illusion to make your players feel like there's a lot more while still managing the scope of your project.
um something to speak to on that note is that you know your back end, you know how things work, your players don't, which is both a blessing and a curse. Cause in some ways they will assume things work differently and that it's easier to make more branching than you actually can, but you can also find interesting ways to surprise your players and keep them guessing.
All of this, creating impact, comes down to player emotions.
At the end of the day, it doesn't matter if you have a massive fork at the beginning of your story that leads to 100,000 words of different content in either direction, because if people don't feel like that's the case, you haven't succeeded at your job.
So focusing in on those emotions, knowing your players, paying attention to their feedback, and understanding why they feel the way they do is vital here.
Now we're going to talk about impact, kind of of three varieties or techniques.
I like to refer to these as cascades, callbacks, and heuristics, and we'll be going in depth in each of them, and we will be defining each of them as we go.
We're going to start with cascades, which...
I would define as what most people are talking about when they reference a big decision in a game or say that choices matter in a game.
Choices in a cascading decision generally promise to permanently alter the game or world that the game takes place in in a major way.
So taking an example of the first big cascading decision in our game, you run into monsters in the woods and you are stuck with the dilemma of saving a farmer or saving an adorable 17-year-old pug who, depending on how you've built your character, maybe you can talk to the pug too.
Most people save the pug.
In terms of what this looks like in our game, we've got the top path where you save the pug early on.
You can see death of Duke the farmer.
This leads to a breakaway scene with the police.
It also leads to an encounter with his son later on, where you have to sort of justify and come to terms with the decision you've made.
And Stella, your companion who owns the pug.
continues to carry her around with her the rest of the game.
So we're also differentiating that branch via different art assets.
And then on the bottom you see the bummer path that not a lot of people get to see.
Pug gets grabbed by monsters.
Awful heart-to-heart conversation in the woods about what it's like to lose a dog.
But you don't have to justify getting someone's dad killed.
Yay.
So there's a bunch of advantages to using Cascades as a primary technique.
The first is that they're pretty easy to set up.
They are a situation with a limited number of choices.
You should probably put a lot of care into what those choices are, but the setup is simple.
They're also attention-grabbing.
They're memorable, and they're the sort of thing people talk about.
People will talk about whether they saved the pug, and they will admonish the folks who did not save the pug online.
And because they're limited in scope, you usually only need to keep track of a single flag.
Players, when they see one of these decisions, also know what they're going to be presented with.
And if you actually pull it off, because these things are really hard to pull off.
It's super impressive and again, people will talk about it.
And that leads us to the challenges.
The first is a scaling issue.
Impacts that deviate too far from each other present exponential scaling problems with your narrative, especially if you have multiple cascading decisions like back to back in one game.
Players have also been burned by games that say choices matter, like many, many times before.
It doesn't matter how well you handle it, because folks have been burned, some people will get mad at you.
These decisions, because they're major turning points, are also very emotionally charged, and again, some people will get mad at you for that.
There's also, getting back to the scaling challenges, there is a delicate line to walk between making your cascades feel important, giving them impact, and being able to finish your game.
It's also easy to over-promise and under-deliver because, again, people are familiar with this and they're going to hold you to very high standards, and pulling it off is both extremely labor-intensive and...
subject to high levels of scrutiny, because there are always going to be few cascading decisions, and people are going to know what they are.
That being said, we've got some tips and tricks for pulling them off, too.
The most important one is for any sort of major decision in your game, you want to think about how you can write it to be modular.
And when I'm using the word modular here, I'm talking about making it so that.
bubbles of new content that come from that decision can slot into the main narrative.
So you're not, instead of making, say, a tree or roots that expand forever, you're expanding a bit with new content, you're contracting to a common point, and you're expanding again.
While you're doing this, it's important to think about what purpose these decisions serve for your narrative.
In a lot of ways, they can flavor your player's experience with your game.
This slide indicates another.
big cascading decision we have in episode three of our game.
The premise of Scarlet Hollow is that you are coming to town for an aunt you've never met's funeral.
You've been invited by your cousin who's on the left there.
She's a terrible person.
She's really mean to you.
And a major theme of the story is about what your relationship with her is.
Do you try and build a bond?
Do you brush her off?
And in episode three, we have this central set piece that's a ghost hunt, and there's a decision of, do you invite her along with you?
If you do, you get to experience this ghost hunt with her at your side.
If not, you get this other spooky guy on the, I guess it's the right for you guys, to follow you as well.
This kind of comes back to a later point on this slide, which is you should always avoid making people feel like they're losing content when they make these decisions.
One of the biggest impacts you can think of a cascading decision having is a character death.
And if a character dies, you should make content about their death, so it doesn't feel like people are min-maxing their playthrough to get as much content as possible.
Talking, going back to what I mentioned earlier with kind of bubbles and coming back to a common ground, if you're making a choices matter game that you intend to finish, your story is always going to have to revert to the mean in some way.
It's always going to have to join back together.
but you can focus on making the process, the journey of that mean reversion more impactful.
So again, with the episode three choice here, you get two very different perspectives on an hour long segment of the game that change the themes of the story and shine different lights on different parts of our mystery.
The next type of impact I'd like to talk about are callbacks.
These are really straightforward.
A callback is a reference to something that happened earlier in a story, specifically to a player choice.
But it makes this reference without interrupting the flow of the narrative or creating new scenes.
The choice it can reference can be big.
I like a cascade.
Stella mentions, oh, you saved my pug.
That's great, or is sad about it.
Or it could be small.
So the small example we have here is in episode one, when your cousin tells you that she is a coal magnate, you can respond by saying, hashtag girl boss.
And then in episode three, she references the fact that you said hashtag girl boss, if that's something that you said.
You can track all of these things with Boolean flags.
That's pretty much it.
There's a lot of advantages to using callbacks.
The first is that they are one and done.
So adding more of them is just linear scaling over time.
You don't have to worry about five callbacks taking 20 times the energy of one.
You just do them.
It changes a line or two of dialogue, and you're done.
Because when, because writers, game writers often think about creating impact in terms of those cascading decisions earlier, these aren't as common, so your players also don't expect them, which makes it easy to under-promise and over-deliver.
So with the episode three moment, a player sees that we tracked the fact that they said hashtag girl boss in episode one.
Suddenly, they're taken aback, it's unexpected.
They start wondering, what else are we tracking?
So even though that's a small callback, it makes the breadth and depth of the experience seem a lot more significant.
They're also personalized, and they make your players feel good.
There's challenges with them too.
You can't rely singularly on callbacks because then you have a script that is mostly just a straight shot and doesn't really deviate.
People won't feel like their choices matter.
You also need a lot of them for your players to notice.
In Scarlet Hollow, we probably have.
somewhere between 500 and 1,000 of these things scattered all throughout in the first couple episodes.
And by extension, because you need a lot of callbacks to make them effective, they require a lot of flags and booleans in your code to cover all of your bases.
Again, we use like 1,000 and track everything players can say.
Writing-wise, they can also require you to have a bit of encyclopedic knowledge of your own narrative.
and it can really break your brain if you rely on them too much, just keeping everything straight.
That being said, there's a few tips and tricks for using these things.
Something that we really like to do is specifically using callbacks to make our dialogue feel less awkward and to make conversations with characters flow better.
If you say something that you'd already said earlier in the game to a character and they call you out on that or they act...
a little confused.
That's something that doesn't actually take a lot of effort to put into your game, but it makes your characters feel more organic.
And again, it makes the depth and breadth of what you're doing seem that much more impressive.
I also just make it a general best practice to flag literally every single line of dialogue you can say in Scarlet Hollow with a unique Boolean, because you never know when something might come in handy later.
Um, so, you know, pretty standard code stuff there.
Make sure you name your variables in an easy to search and easy to break down way.
Make sure that you're, you know, defining them and storing them in the right places.
Um, all that good stuff.
The third type of impact I'd like to talk about are heuristics.
So if you've taken an introductory psychology course, this term might ring a bell to you.
A heuristic is essentially a problem-solving technique that relies on simplification to quickly arrive at.
something you might think is a good enough answer to a problem or question, often at the expense of accuracy.
So to use a pretty standard example, you might think, I've only known one person, or I haven't known anybody who's been struck by lightning.
I don't need to know the exact rate at which Americans are struck or killed by lightning every year to be able to say, it's really uncommon.
It probably won't happen to me.
An example of a heuristic that isn't working well is, I saw two news stories about people who were struck by lightning.
It must happen all the time.
The most common example you'll see of these things in games, especially visual novels, are affection meters.
But doing that across one axis, has some issues.
My biggest issue is it can't handle bootlickers.
I think we've all played games where you're in a dating sim and instead of treating the character you want to romance as a human being, you spend some time thinking about what can I say to make this person like me, regardless of whether or not you're actually being authentic or you have those shared interests, which is something that I don't like.
So our approach to this in Scarlet Hollow is we use a five-axis and ten-variable heuristic-based relationship system to measure the player relationship with every major character in the game.
So to just talk about some of these axes, we have one that's like openness versus closeness, which is representative of the emotional trust and vulnerability of a relationship.
And then we also have one that's, you know, agreeableness versus adversarialness, which is politeness versus headbutting.
We have, um, you know, boldness versus passiveness.
How brave does someone else think you are?
Um, and then major decisions, uh, major decisions like ones that lead to cascading impact can change these variables in big ways.
Going back to the episode one decision with a dog we were talking about, if you let Stella's dog get grabbed by monsters, she closes up emotionally.
So it will be more difficult to get her to open up about her feelings, but she won't necessarily be hostile to you because that's measured across a different axis.
And then on top of those major decisions, we also change these variables in smaller ways for pretty much every dialogue option.
So you have two things working together, big relationship-defining events that move meters a lot, but then there are smaller ways to influence things.
You don't need 10 variables to do this, and there's definitely some that I use more than others in our game.
You probably want more than one or two.
Some of the advantages to using a heuristic-based system in your game.
First one is that people use them all the time in real life.
If you think about your best friend and how you feel about them, you probably think about the general vibe they give you, instead of pulling up a list of every interaction you've ever had with them and remembering specific events, because that would be too much.
So people are wired to think.
using Heuristics, and if you use a system like that in your game, it can make your characters feel more organic.
You also don't need to memorize or remember a thousand specific details like you do with callbacks, because again, you're using a system to simplify some of this. We have an example of how we call our system here, where it's character Kanika. She's kind of the scully of the group.
has a very different vibe depending on how brave she thinks you are, how emotionally vulnerable she is with you, as kind of the events of the story chip away at her disbelief in the supernatural.
So here we're actually able to call on multiple aspects of the relationship system to decide.
Is that wall of skepticism breaking, or is she holding strong?
You can also use these, you can use heuristics to add flavor and nuance to both cascades and callbacks.
So with Stella and her dog, if you're talking about what happened in the woods, she might have different things to say, different things she trusts you with, depending on how you've built that relationship.
So within that major kind of cascading impact, you have all of these little smaller deviations that again make the ocean of your game feel a lot vaster.
Another really cool thing with them is they're essentially modular by nature.
So you can slot them in wherever without deviating too much and you can construct them as sliding scales so you have a wide range of character reactions and relationships you can pull from.
Using a few examples, what if somebody thinks you're super brave but really likes you in a romantic way, they might try and toughen up to impress you, versus if they don't think you're brave but they like you in a romantic way, they might be, you know, a little more open about their concerns.
There's a bunch of challenges with these two.
They're difficult to set up, so if you have hundreds of dialogue choices like we have, you need to think hundreds of times about how each of those choices impact another character and how they think about you.
They also need cascades and callbacks to reach their full effectiveness.
They're also only as good as your writers are.
This is true of any kind of impact, especially in a game that's mostly writing, but it's much more pronounced here because your writers in any given scene might need to take...
Keep three variations of how a character feels in mind, and think about how those variations might flow into each other or change the flow of a scene.
This can create a lot of extra complexity in your narrative, which is a good thing, but can make it harder to write.
And if you over-rely on these and over-simplify the kind of human relationships you're tracking too much, it'll make your narrative feel too gamey.
See my earlier bootlicker comments.
So some tips and tricks to using heuristics.
Once you have them set up, they're one of the more flexible tools in your arsenal.
You can use them to do a lot of things.
Some of the stuff we use are calling on them to contextually change.
music in scenes.
Going back to this last slide, this is spending some quality time with your cousin.
The image on the left is you asking her a probing question when she hates you.
And the image on the right is asking a probing question where she's starting to trust you.
So in that scene, if you're entering...
entering it with like a relationship that's warming up. We play you know a soulful guitar track that kind of reflects on the way her thoughts about you are changing otherwise it's her normal sort of plucky tense strings music.
We also use them all the time to just change sprites.
Like, we call on these things a bunch to change dialogue and to change what information people are giving you, but the same line of dialogue with a different sprite, especially if you're not using voice acting, completely changes the way your players will read that line of dialogue.
So, pretty low effort there to change the flow of a scene and to make it feel more or less oppressive, warmer, colder, all of these other things.
Mentioned this before, you can use them in conjunction with flag decisions to make them feel a lot more impactful.
So if somebody lost a friend, how much are they willing to open up with you about it?
How does your relationship with them change their perspective on the events that are happening to them?
Another cool thing is you can use a heuristic-based system to change what options are available for big decisions that lead to cascades.
So this image is from the end of episode three.
You're confronted with a ghost that your great-grandmother killed, who wants years of your life to kind of be able to move on to the next world.
Normally your options are to leave the ghost behind where it can be a dangerous haunting that can hurt people or to make this huge Sacrifice, but if your cousin is with you and you have built that relationship in the in that right way She'll stop you from stepping in and will take that burden upon herself. So that's That's a way to kind of take the accumulation of hundreds of decisions over the course of a five or six hour game and really make it add up to a new thing.
More cool things.
Yeah, saying it again, combine your heuristics with flags.
You can also combine your heuristics with other heuristics.
So we'll have a lot of checks that are based on, okay.
One, what level of emotional openness does this character have with you?
But then also, what are the other flavors there?
With your cousin, a pretty common one is she'll start to warm up emotionally, but she'll still be combative because she's a combative person.
So we'll look at both the information she's willing to share, but then the tone that she's willing to share it as well.
And then another really neat thing you can do too is you can use your existing heuristics data to alter the way that, sorry, new decisions affect those numbers.
So going back to that hangout with your cousin, your cousin doesn't respond well to people who are nice for the sake of being nice, and often kind of being overly nice harms the emotional bond you're forming with her, but once that bond's been strengthened, you being nice feels more genuine to her.
So those other axes on the relationship chart will actually change.
based on what other data is already in the system.
So you can create rubber banding effects.
And again, this is a way to simulate real life.
The same thing said by someone you can't stand versus said by your best friend is going to feel very different and going to impact those relationships in different ways.
Just general takeaways from this.
When we're making Scarlet Hollow, we make sure to use all three of those kind of perspectives on impact for how we shape our narrative, how we shape decisions, and how we shape relationships.
It's so easy to focus on just doing one thing.
But if you want players to really feel like the choices in your game matter, you have to come across, you have to come at it from like every single angle.
It's not just enough to have a really effective cascade, they need to be caught off guard by, you know, a very meaningful callback.
They need to be caught off guard by, I thought this playthrough was mostly the same in terms of major decisions, but actually it's different in terms of how characters are responding with me.
When you're crafting these choices, it's important to remember that you're making a narrative game.
You should be constantly asking yourself why your narrative benefits from interactivity, and you have to use the answers to those questions to guide your design process.
It's easy to just throw 50 choices on a screen, but you have to think about what the choices you present your players.
will tell you, tell them, and tell your game about how they're engaging with your story.
And the most important question of all is that throughout all of this, you should always be thinking about scale.
What's the most important way that you can add just a little more impact to a choice or scene without breaking your back?
Again, it is a balancing act.
and it is very easy to get yourself stuck in a hole where you're never going to finish your game.
That's the high level.
Happy to take some questions.
Once again, I'm Tony Howard Arias.
I'm one of the co-founders of Black Tabby Games.
You can reach me at email at tonyatblacktabbygames.com.
You can follow me on Twitter at Tony Howard Arias.
I only lurk there.
I don't really post.
And then I post all the time on our studio account, which is at Black Tabby Games.
So how do we move on to the Q&A part of things?
It's there.
Oh, there's microphones here.
So if anyone has questions.
Hello, quick question for you.
Yeah.
How do you think your players would respond to you exposing the heuristics during gameplay?
badly. Um, we we keep those hidden uh for a lot of reasons. One, I don't want people nitpicking about it. Two, uh we designed our heuristics the way we did specifically to avoid people gaming the system. So all of the kind of branching decisions in our game, all of the ways relationships can grow are written from this baseline kind of design like core design rule that there isn't really a good or bad relationship. There isn't a good or bad answer to a major decision or dilemma. And if we provided heuristic data to people, they would just assume that wasn't the case and it would break immersion.
Hello, I have a question about planning and management.
When you talk about all these heuristics, I just keep thinking about my experiences with it and saying, okay, at this point in the game, they could potentially have six love points or four love points, or when they get to this point, if they don't have enough love points, that decision won't give them the points.
You know, there's just so many different contingencies.
How do you and your team possibly keep track of all of that and see all of the different pathways that the character can go?
Yeah, so one of the main things that we did when we structured this is it was important to us to specifically have two variables for each of our axes.
So we're able to look at it less in terms of raw points and more in terms of ratios, right?
Like...
for openness versus closeness or for love points versus not love points, you know, what's the ratio of one to another?
And that's something that you can standardize a bit more. And, um, you know, if you're standardizing it, you don't have to plan as much.
Okay. Thank you. Yeah, of course.
Thank you, I love this.
You talked about having a thousand booleans that you're tagging every single line.
Do you have any systems at your studio for naming all of your booleans or your tags so that they are readable by other members of the team or that you yourself two days later don't forget what it is that you wrote?
I do my best with that.
So we're a two-person team, and I do all the coding.
Generally, I try and name it with a convention along the lines of episode number, name of the scene, character name, and then a descriptor.
And then when I'm defining these, I define them in a central spot for that given scene.
So if I remember.
at the very least, oh, I think you could say something along these lines in this scene.
I can just click to that part of the script.
Hi there.
That talk was really, really great.
Thank you.
I'm a narrative designer for a game called Weird West.
And I've been thinking a lot about player choices, too.
And I was curious if you could speak a little more to, I was thinking sort of of the heuristics of the player's choices.
if they choose things that are more confrontational over time, are you giving them more confrontational choices, or do you have a set number of archetypes for player choices, for them to express themselves like, here's the brash choice, here's the honest.
I was just curious in general how you think about player choice flavor.
Yeah, so, um, I try and avoid thinking about archetypes too much, uh, because I feel like that kind of, uh, pigeonholes the design process in a lot of ways. I think it puts you in a lot of scenarios where You should have more, uh, options to respond in dialogue than you do, and then a lot of other scenarios where you have too many. Uh, so I try and go on a case-by-case basis and just think about what are the range, if I say we're DMing this game instead of coding it, what's the range of player responses I could expect?
And then I also watch too many people stream our games, so I use that to sort of broaden the perspective of what kind of choices people are consistently making.
Yeah, and then I also like, I personally...
avoid using heuristics to block people out of saying specific things, and instead, I'll let them say that, but then if they say something out of character, that's something that the other characters will comment on or maybe confront them with.
because again, I don't want to strip agency away.
The closest thing we do to that is we use a trait-based role-playing system where you pick like two out of seven tags when you create a character and those are sort of the more archetypal responses that you get.
Thanks very much.
Appreciate it.
Yeah, of course.
Oh, and before I take more questions, I should just remind people, remind attendees to fill out session evaluations by visiting Swapcard, GDC's virtual event platform, mobile app, and selecting session feedback button for each session they attend.
Feedback is very important to speakers and show management will weigh in to speakers being accepted into future GDCs.
Back to questions.
I think we're on this side now.
Oh, that was it.
If people have more questions, I will be heading, thank you so much.
I will be heading to the tables outside and I'm happy to chat for a while. ♪♪