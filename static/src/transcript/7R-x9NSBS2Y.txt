I'm Charlie Cleveland, the design director of Subnautica.
And I'd like to remind you to fill out your evaluation cards at the end to make sure the quality of talks is improving.
And I just wanted to mention also that you don't need to take notes for this talk, because the slides are all online.
So just take a picture of that URL.
And the handouts and reference and all the slides are up there.
So let's go.
So yeah, the great thing about GDC is we look really cool in retrospect after we spent way too many years making a game and trying a lot of things that didn't work.
So I wanted to give a disclaimer that this talk makes the development of Subnautica look a lot easier than it was.
It took about 5 years to make this game and it was a really hard development for a good portion of that.
And our previous game actually took 8 years.
So we're now just getting to the point where we think we know how to make games and our games are becoming more successful.
And you know, I don't want this to look like it was an overnight success.
There's a there's a saying that You know, an overnight success rarely happens overnight, and that's definitely true for us.
So, let's get started.
Before Subnautica, we spent eight years working on a first-person shooter, real-time strategy hybrid called Natural Selection 1 and 2.
And at the end of that development, I was totally exhausted.
We had a lot of guns in that game and it was a competitive online shooter.
So people were always going on the forums and yelling at us for balance, you know, yelling at me basically.
And it was just a hyper competitive game.
And I love that stuff.
I love the guns, I love the strategy, I love the tech trees, and intense team versus team combat.
But I just felt like I didn't want to spend another section of my life adding more, basically doing the same thing.
And I was feeling really burned out creatively.
And right around that time is when we had the Sandy Hook shooting.
And yeah, maybe you remember this picture.
I definitely remember it.
And of course, we've had so many mass shootings since that time, and now we have the Christchurch one, not even a week old.
You can't even keep track of them anymore.
And I just didn't want to add more guns to a game, or to the world.
Even if they're virtual guns, even if I believe that virtual violence does not create real violence, which I do believe that that's not true, but I just didn't want to spend more time doing that.
And that's where the original idea of Subnautica came from.
We were also really inspired by Minecraft.
So to me, the idea of making an open game, something more sandboxy, something where the designers and the developers didn't push you down one path.
We see that a lot in AAA games where there's pretty much one way to play the game.
And any kind of surprises in the game were pre-designed and you're just pretty much going along down the line.
So Minecraft showed this new way to build a game, you know, expansive with player stories and player creation.
And I was thinking, oh, we should, we can make a game like Minecraft, but we can do it underwater.
We also got inspired by Clay, the makers of Don't Starve and Oxygen Not Included, Invisible Ink among others.
And Clay, the thing I love about Clay is that every game they make is a different genre.
So they never repeat themselves.
And there's a few members on our team, including myself, that really got inspired by that.
So we wanted to try something completely different.
So we had this nonviolent idea, player has no guns, though truthfully there is violence in the game, it's just of course the creatures are attacking you and then you basically can't do anything about it.
So yeah, you're definitely not at the top of the food chain.
So that's the background of why we made the game.
And I just wanna talk a little bit about how we built it, just briefly.
We started development on it in early 2013.
It came out in early access in late 2014, so it's almost two years.
We had a $3 million budget, roughly.
and that was all the money that we had earned from our previous game, Natural Selection 2.
And we spent about four years in early access, and we released 30 or so headliner updates.
And these headliners are the concept is where you build an update around one feature, and that feature is really marketable, and it's appealing, and you make a video, you make a website, and it was a way for us to draw attention to the game.
because we're not known in this area at all.
If you want to know more about how we did this early access development, Jonas, who's here, he gave a great talk yesterday, I've heard it was amazing, a talk called Subnautica Postmortem, yep, and it'll be available on the Vault, so if you want to hear about early access, go watch that.
I'm not gonna talk much about it, I'm just gonna say one more thing, which is...
I guess that we, let's see, yeah, we spent three million to get it to early access, and then another seven after that, which was all funded from the headliner updates from players buying the game, which was incredible.
It was a wonderful rollercoaster ride.
And our players ended up by showing us what the game really needed to be.
And to date, we've sold about four million and counting units on PC, Steam, Xbox One, PS4, just launched on PS4.
So it's done super well.
We feel extremely grateful and lucky.
So this talk is about making original games, not about all that business stuff.
When I talk about original games, what I really want to talk about is this idea of making a game that's never been seen before.
You can make a sequel, sequels can be original by my definition, but I want to talk about making something that is unique enough that you don't have a model to look at.
So this illustration shows, you know, maybe when you start the game you have an idea and you think you see something that you want in your mind.
And that's way off there in the jungle, off to the right, three o'clock.
You have all sorts of assumptions about what the game will be, you have dreams and hopes and desires.
And you start building the game and you're kind of going along that line and you start to get lost.
And your players, maybe if you have them, they're saying, do this, do that.
What is this game really about?
I want more of this, more of that.
And that can be a really desperate, terrible place to be in because you still don't know what your game is.
How can you possibly know what it is?
How can you take feedback if you don't know really what you're building?
So, eventually, I mean, so this talk is about how to get through that jungle.
If there's one thing I hope that you have a takeaway from, it's less about the design of Subnautica and more about how to find your own way through the jungle.
And I'm going to show you how we did it, and I hope to tie it into a larger framework that you can use for your own games.
Okay, Jesse Schell wrote a book called The Art of Game Design, Game Design Lenses, a book of lenses, and in it he talks about using lenses as a tool, as a way to look at one aspect of your game.
So for instance, he might talk about the lens of skill.
So if you look through that lens of skill and you look at every aspect of your game and you say, how much skill does this level require?
How much does this one? Is this too easy? Too hard?
You can start to get insight about just skill in your game.
But that's useful because if you just think about your game in terms of fun, that's super generic and it's not very helpful to anyone.
So he talks about, here's how you do the lens of chance.
Here's how you do the lens of accessibility.
And to me, one of the most important ones is the lens of emotion.
Genova Chen of that game company talks a lot about designing games with emotion first.
And to me, that's really about that lens of emotion.
You have to figure out what emotions your players, what emotions you want them to feel.
Then you notice what emotions they are feeling, and then you want to figure out how to get them from where they are to where you want them to be.
So I think this lens of emotion is where, I mean, this is where we started with Subnautica, and I think it was probably the most important decision we ever made.
A lot of design talks talk about pillars, design pillars, and I'm not going to give much information on design pillars, because, well, I'll give a summary, because some people may not know.
A pillar is where you create a concept of usually a feature or a set of mechanics around your game.
and you have a couple of those pillars, and those, you choose that at the beginning of your game, and that guides the development of your game for all of eternity, basically.
So I am a big fan of design pillars.
We've used them in every game.
But if we apply the lens of emotion to a design pillar, I think they get a lot more powerful.
and a lot more important and relevant.
So right here, this is, here are the first, they're the only three pillars that we ever had for Subnautica.
And this is actually a screenshot of the very first document ever written about the game.
And you can see the first one is Vessel Design Building, and that's kind of like a gameplay system.
And then to the right, in parentheses, Intoxicating Creation.
So why do we have Vessel Design and Building?
The reason is because we want players to have the feeling of intoxicating creation, so I say.
Okay, we have three pillars here.
I won't go through all of them because we actually only focused on one of them.
So we thought we were going to do three.
We ended up by doing one, and we thought that would be exploration and discovery, you know, parentheses the thrill of the unknown, the why.
and we actually focused only on that.
The other stuff came in in a secondary way, but I think that's actually one of the reasons why it works so well.
So, starting with emotion, thrill of the unknown.
The first thing we did was started with the music.
And this is how I like to work.
Just because it's about Subnautica, I thought I would show it to you.
And it's about the emotion.
So the first prototype was just a menu with a song, which you can hear right now.
So I don't know about you, but when I heard this, I mean I went through so many different artists and I tried to find something that was evoking the idea of the feelings we wanted to create with this game.
I mean I feel like I'm underwater already, it's just one track of music.
This is Solar Fields and it is shamelessly stolen and never published anywhere so I think it's okay.
You can even hear like a little like I don't know radio signals or something in the background.
I don't know I've never really played this for anyone else so I don't really know if you guys feel it but that's what I feel. So that was how we started with that emotion and whenever I needed to I could just go back to that and think you know to reconnect with what the point of this game is.
So after that musical exploration, starting with the emotion, we ended up by building our first prototype, real playable prototype.
And I want to give a little background on something popular here in Silicon Valley called the Minimum Viable Product, the MVP.
So if you're making a car, it's really hard to go make a car, because a lot of times you don't know that you're making a car.
So you, instead of building a car, you start with a skateboard.
Something that serves the same purpose, it's transportation and it will get you where you need to go, but it doesn't have all the bells and whistles or the technical complexity of building a car.
And plus you don't really know you want a car yet, you just know you want something that gets you from point A to point B.
So you release a skateboard.
You can see the unhappy face.
Like users are like, it's just a skateboard and it's not that great.
And so you go back and work some more and you add the handlebar on it.
Now you have a skateboard like this.
You get a little happier.
Then you add a couple, you add the seat, and you add the pedals.
And now you have a bicycle.
People are starting to get a little happier.
Then you go on.
Suddenly, you have a motorcycle.
Finally, you have the car.
So this idea of minimum viable product is that you can release that skateboard to your users right away.
And it is functioning in the way that you want it to.
It is transport.
It just doesn't happen to be the best version of it yet, but it is transport.
So I actually think making MVPs for original games is extremely difficult, which is why we don't do that.
We build, this is my term, the minimum crappy playable, the MCP.
So it's not full featured.
It's a piece of crap.
But.
If you don't start with making something crappy, you're just going to be frozen.
Or at least, I'm always paralyzed.
So, you know, it's a heady endeavor to create a game.
But if you just create something crappy, just something crappy that's playable, okay, done.
It gets you moving, it gives you permission to make something crappy and start, you know, the wheels start turning.
And the amazing thing about making an MCP is that something that starts like this, which are the first, I would say, MCPs for Subnautica, eventually turn into something like this.
Just like that skateboard and car.
It's the same process.
OK, so start with emotion, build an MCP.
The next thing that we found really helpful for this game, we've never done this before, is this idea of building minutes of fun into your game.
So we started with five minutes of fun.
That was that main menu.
You just load it up.
It's not really fun, but it's five minutes.
Maybe you listen to the song, and then it stops playing, and then you close it.
The next prototype, I think we did, what was it?
Five, okay, yeah.
Listen to main music at the main menu.
The next prototype, you say, okay, how do we make this last 20 minutes?
Like, we have no idea.
We just know we have a main menu, we have a song, we have the feelings.
Where do we go next?
Well, what we did is we said, okay, let's swim and explore one biome, collect some loot.
You know, you can't do anything with it, but you can go collect some loot.
Okay, that'll take players about 20 minutes to get through.
And they'll kind of say, yeah, it's all right.
Then you go to 40 minutes.
Okay, what do you do now?
Well, maybe you, maybe the game starts on top of a raft.
and it has a fabricator on there, it's really ugly.
But you can swim, you can collect loot, you can craft your first knife, and then you can use that to harvest kelp.
Okay, that's about 40 minutes worth, and so on and so forth.
Then you get to one hour.
And the cool thing is, when we did this process at least, I think it's replicable, it gets exponentially expansive.
Like the amount of time that you get with each prototype, the amount of gameplay time, goes up and up and up.
Because all the systems start to work with each other.
And of course, you know the game now.
You know more and more about it.
So one prototype gets you 20 minutes, the next one might get you another hour worth of gameplay.
So now maybe you see some creatures swimming around, you harvest this, we have no alien creatures, we had narwhals, they were just like copied from, I don't know where, from the asset store or something, I can't remember where we got them, just earth creatures.
And now you have a submarine and you go on and on and so forth.
And we use this technique to go all the way to what, I don't know what we have now, 30 hours of gameplay, 40, 50, 60 for some people.
Okay.
So early on in those prototypes, we didn't know what the goal of the game would be.
And it was way too much work to try to figure out what that goal could be, because we knew we wanted a sandbox experience, or somewhat sandboxy, and we had no idea about story yet, but we needed to get players going.
So...
Someone had the idea, well, maybe just put in some treasure chests and players, if they collect five, then they win the game.
And well, we don't really have time to program that in, so they'll just notice if they have five and then they can quit playing.
Which is really weird, and it sounds really stupid, but this actually freed us up completely to just focus on the low-level stuff.
Swimming, crafting, oxygen, the environments, creatures.
We didn't have to think about the high level.
So, you know, you hear a lot about placeholder models, and I think we can start placeholder, using placeholders for other things, like goals, try it, house rule.
So this is recent footage.
I don't have the old footage here, unfortunately.
But in our early prototypes, we had a bug in our oxygen meter.
So you're diving underwater.
You have, say, 30 seconds of oxygen.
And when you start to run out, the HUD starts to go black as you lose consciousness.
It's very dramatic.
And as you get to the surface, well, I'll show you.
I'm going to show you what happens here.
It takes, there's a pause where your screen is totally black and you're not dead and you seem like you're not alive, but then you get to the surface and then you come back to life.
So I'm going to show you that real quickly.
Oxygen.
So swimming, swimming.
The HUD is just starting to darken.
Out of oxygen now.
Okay, not at the surface, not at the surface, not at the surface.
Should be dead.
Surprise.
Okay, so this was a bug that we decided we had to keep in there forever.
And in fact, we never even decided it because no one ever complained.
People loved it. It was the weirdest thing.
We didn't even discuss fixing this.
I don't even know if...
It's like maybe this is the first time we've ever even mentioned it.
And the reason why that was so great, I mean, maybe it doesn't look that great in this one clip, but if you watch a YouTuber experience that, and they're like Fiero at the top, they're just jubilant that they made it with all their loot, it fit really well into our emotional idea of the game, this thrill of the unknown.
And that one is less on the thrill of the unknown and more on just positive emotion.
People were so happy to have that that we, again, by being emotionally driven, we kept it.
There wasn't even a discussion.
So early on, we also had some ideas, or we had a problem where we knew that our world could not be infinite.
We wanted it to feel infinite, but we obviously had a boundary.
And so we were trying to figure out what to do at the world edge.
So right there.
One of the ideas we had, we floated around, was making cliffs at the world edge.
Of course, we could do invisible walls.
None of those things really made a lot of sense to us.
Someone, it might have been Jonas, actually, had the idea to drop the world down into an abyss, like negative infinity depth, which is what we did.
And What was so cool about that is that it actually helped our theme, something that was a limitation, the fact that we don't have an infinite world, yet we want it to feel infinite.
By dropping that height map down to negative infinity, it actually gave players the feeling that the world actually was infinite.
And players go out there all the time and they encounter these kind of crazy creatures too.
We put those in there to make sure you don't swim down too far.
So that was an example of something, a limitation that we actually turned into, essentially a strength of the game.
We also put in this HUD, this is just a scuba mask, and you'll see a recurring theme in this talk is stuff that we tried that we didn't realize was great that actually turned out to be great, but it's us noticing that it was great.
So the scuba HUD, you know, you're underwater, you're a scuba diver.
You have a scuba mask.
And one really cool thing about that is it actually makes you feel more claustrophobic, which tied really well into the feelings that we wanted to get out of the game.
And then we put this guy in, this huge reef back.
And the funny thing about this reef back is I always thought he was really lame.
And he doesn't do anything.
He's just this huge sea cow.
He just makes some noise, and he floats around.
You barely even can see that he's moving.
But we put him in, and I want you to see a clip here of, this is EatMyDiction1, and he was one of the first kind of medium tier streamers that covered our game.
And watch his face when he sees this thing.
Oh, it's scary.
Can you stop being a broken bitch?
Oh my God!
I found Cthulhu!
I found Cthulhu!
I found Cthulhu!
If Halo 5 isn't downloaded, I'm gonna be so mad.
Okay, it looks like Halo 5 is downloaded.
Um, okay.
Okay, he's not depressed anymore, or broken anymore.
We have the perfect amount, right?
Oh yes, they don't move right now.
Yeah, yeah.
Wonderful.
Just wonderful.
Let me, let me, uh...
Right there.
I'll have to sign in again.
Sign me in.
Okay, I have, I have Halo 5.
We are good.
And when we saw that, we knew that we had to add more big creatures in the game.
It's a huge amount of work.
I was fighting it the whole way.
But it's hard to relent.
You had to relent when you see reactions like that.
So we added this crab squid.
Huge amount of work.
We added this sea dragon.
I don't even want to think about what was required for that.
And then of course this guy, the Reaper Leviathan, who's probably responsible for half of our YouTube views and maybe corresponding sales and definitely all the jump scare videos.
So we also put in some small creatures, but the cute fish, or cuttlefish.
So we discovered that big creatures work well in this game and we embraced it.
So, more on the map, and making an open world game, we knew that we didn't want to limit players, and we didn't want to tell them where to go, but we did want them to kind of be drawn downward, because down is how you advance the game.
Down is where all the mysteries lie in Subnautica, but we never want to tell you that, we want you to discover that and go there on your own.
So the first thing we did is we made the world infinite.
I mean, the map terrain is not infinite, but technically you can swim as far as you want.
It just turns into nothingness.
So we kept that in there and players just, they turn around and they come home because it's really boring.
And then here is you can see the same map with the height data and you can see if you know what the Aurora looks like.
It's around four o'clock, it's that big kind of oval shape, the crashed spaceship.
So when the game starts we choose a random start location and that's that green area in the middle.
And the cool thing about this random start is that...
people actually thought that our world was procedurally generated.
Many players thought that, which was a huge win for us because they felt like they could replay the game, and they probably could replay it a little bit, like, you know, maybe a couple times.
But it added to that feeling of mystery.
So let's see, they start there randomly, and you can see that's the side view of the height map, and the green is where they spawn.
And what we ended up by doing is putting, just basically making the map almost like a pyramid.
So you start at the top, and of course you have the water up here.
And as you swim out, as you explore in any direction, you're just gonna naturally follow the line down.
So this meant that, and we tried other approaches too, but this one ended up by having players just go where we wanted them to, basically go to the interesting stuff and follow the world down.
And then of course we did put all this other, the ghost leviathans out there too, which I already mentioned.
Okay.
So, another huge kind of reframe for us in this game was this idea of never telling the player what to do and respecting the player's time.
And this ties into the idea of an intrinsic reward, you know, intrinsic over extrinsic rewards.
So Jamie Chang and Chris Hecker both wrote excellent articles on this subject, and they really inspired us and got us to the next level with our game.
So an extrinsic reward is something you probably are familiar with, like gamer rank, achievements, leveling up, you know, gold. It's like, you know, tangible specific rewards that are given to you when you do the right thing.
An intrinsic reward is like maybe a positive emotion, or maybe like you feel good when you play the game, or you enjoy spending time with your friends, so that's why you play the game.
If you're motivated by an intrinsic reward, I like to think that you're having a more meaningful interaction with the game.
And I was really hoping that we could fully embrace 100% intrinsic rewards in this game.
It's a little scary because, you know, we've all been taught as designers that extrinsic rewards drive player behavior and motivation.
And there have been a lot of studies on this, and they do drive it in the short term.
I mean, you should definitely read these papers.
It's all in the appendix if you want to dive deeper on this.
I won't summarize it here.
but it does drive player motivation in the short term and it drops it in the long term.
That's the summary, it's not fully accurate, but let's just say it's largely accurate.
So we wanted players to play the game because they love the game, and we were willing to take a risk and not handhold them and not give them quests along the way.
We didn't want them to feel like they were tricked into playing the game.
So one of those, one of the ideas there was we had to start thinking about, like, instead of tutorials or helping players learn the game, we had to flip that idea on its head and realize that when players discover the game, that's actually the fun part.
So, you know, coming back to this pillar emotion, you know, the thrill of the unknown, it just goes away once it becomes known, right?
Like, it's like the horror, like the monster in a horror movie.
As soon as you see it, the thrill goes away.
So we definitely didn't want to just tell people things.
It was okay if they discovered it on their own, but we were never going to just explain it to them.
So this is the idea of this mantra that we had, at least I would basically yell at other people and tell them, never tell the player what to do.
You're telling the player what to do.
And this idea of not feeling bad if players have to go to the wiki.
And that was something that kind of crippled us early on.
We're like, oh, but what if players have to go to the wiki because we didn't explain something.
Well, Minecraft did it and it was amazing.
So we realized that that learning is by far, like that learning is actually the fun part.
So as long as players are learning, I mean it's still not great if they have to go to the wiki, you'd rather have them learn in game.
But as long as they're the ones learning and we're not just telling them, that's by far more important.
And a corollary is that the more frustration players would have, the more exhilarated they would be when they finally overcame the obstacle.
So we had to change how we thought about frustration.
It wasn't just necessarily bad as soon as players were frustrated.
It's like, well, actually, this could be good as long as they don't stop playing.
If they stop playing, then you know it's bad.
We actually put some telemetrics in there to get a better example of that, to know more about that.
Okay, let's see here.
Checking my time.
Another technique we used a couple times in the game and I would like to continue to use more is this concept of training wheels.
When we first released into early access, we didn't have any survival mechanics.
We had no hunger, no eating or drinking.
and our players were like, ah, how can you make a survival game without, you know, hunger and thirst?
And we didn't even know we were making a survival game, but someone tagged it on Steam, so they said it was a survival game.
So they convinced us to put the hunger and thirst in.
And the really cool thing about it, something, again, this talk is all about how we just stumbled on the good stuff, but it's noticing the good stuff.
We noticed that players, early on in the game, because we had no direct goals, they understood that they needed to eat and drink immediately, because if they didn't, they would die.
So early on in the game, they would go out, find fish, get water, come back, cook it, eat it.
And then they have some time where they can just kind of explore interfaces or just kind of go out on their own.
Then a little indicator pops up again and says, oh, you're running out of food.
They go back.
Over time, as they learned how to master their calories and water, like most survival games, it gets easier and easier.
So it kind of like falls away.
You don't have to think about it anymore.
You start farming.
You have machinery that's cranking out water for you.
So this whole kind of like motivation of telling you what to do early on, it just kind of slipped away like training wheels.
which to me was the perfect solution because we wanted players to come up with their own goals.
But we didn't want them to feel aimless in the beginning.
Another way we use this concept of training wheels is through our crafting menu.
So in the beginning, like, you know, we were heavily inspired by Don't Starve, their crafting.
We have a similar crafting menu.
But in the beginning, we only give you a few options.
I mean, I can't remember how many are there at the start, but there's only a few relevant ones.
And over time, we add many, many more options and even entire new menus.
So you have the fabricator menu to start.
That expands and expands.
And then we added like five other menus over the course of the game.
But in the beginning, the stuff that we really want you to do is get loot.
And if you craft one of the only options there, which is like the O2 tank or the fins, then that kind of promotes a get loot style of game, you know, of gameplay.
Or, you know, we wanted you to fix that radio, which was there in your escape pod.
That kind of kicks off one of the storylines.
So instead of telling you, like, go fix the radio, we just put as one of the only options, a little repair tool.
And guess what, there's only one thing you can repair that you can know about when you start the game, and that's the radio.
And then we have pipes and air pumps, and those kind of encourage you to build a mini-base.
So those are kind of more of our directed goals.
These are things that we wanted the player to do.
We knew it was good for the early game.
It helped players get comfortable, get on their feet.
But we didn't want to control them the whole game.
We wanted them to start coming up with their own goals.
So over time, we added many more options.
And what's happening is the menu is getting more, because it's getting bigger, Like the and it's being populated by player choices essentially by scanning fact fragments and things We have less and less control over that. So as this expands these other goals, they tend to be more player driven So we have a high capacity O2 tank that lets you go deeper.
We have a radiation suit.
Oh, you see the radiation suit.
Maybe I'll go, maybe I can get through that radiation now next to the Aurora.
Ah, maybe I can board the Aurora.
But the players feel like they created that goal themselves.
And they more or less did, but we influenced it.
Then we have a pathfinder tool.
Oh, maybe I should explore some caves.
air bladder, maybe I can explore some deep open areas because the thing lets you come back up really fast, so you can go straight down, use all your oxygen, then pop straight back up.
Or the laser cutter, maybe I can go explore wrecks.
So this is a way that we can kind of guide players, but kind of do it invisibly and have that control, that guide kind of go away over time.
Okay, a lot of people have talked about the story in Subnautica and how it's structured and how they had a different experience than someone else.
That makes us super happy and I would say that we pretty much organically fell into this approach.
And the way we did it was most games would have a linear story or no story.
And what we did is we had multi, multi-linear stories, like seven different stories.
So the first one, this is the Aurora storyline.
So the explorer find the exosuit, the prawn, and find blue tablet.
That one kicks off at a random time.
So this is, you know, left to right is time, and the gray box is what the thing that triggers the beginning of the storyline.
So then we have another one, Sunbeam Story.
When you repair the radio, that one kicks off.
So whenever possible, we had storylines kick off by player action.
Sometimes we have random timers, but either way there's variance there, and that's what's the most important.
We have the Degasi Story, or Visit the Floating Island, I think that one, that's what it was.
Escape pods, when you find the first escape pod.
the infection story, the precursor story, and the emperor story.
So the thing that's really cool about this and the reason why it's different, but you know, different players have a different experience, even though, you know, it's all just basically a bunch of linear stories, is because their experience, let's see, is that showing there?
Yep, okay.
That vertical line is their experience of the story at any given moment, right?
As they go left to right.
But all those events, These are all kicked off at different times, so the slice that you're experiencing is different for different players.
So if you want to do kind of open-ended story, this might be an approach.
Okay, another way we subconsciously guided the player is the first time you exit your escape pod.
You know, we wanted you to get to that Aurora.
So I didn't even know this was in there until I was researching this talk, which is interesting.
There's so many little details in this game that were just contributed by everyone on the team, which just thrills me.
But this is what happens the first time you exit the Aurora, or your escape pod, rather.
So we have that audio stinger, it's like, this is important, you know, dramatic, and you look right at the aurora.
Did you put that in, Brian?
No, okay, I don't know who put that in.
So, and the way that we did that, even though we have the random start that I showed you before, your escape pod is always just orienting towards the aurora.
So it was basically almost no work, but it imprints on your mind, ah, maybe I should go check out the aurora, even though we'd never dare tell you.
So later in the game, we, Scott, I'm sure you remember this, we were really struggling with how to deal with this giant submarine at the bottom of the ocean with all these huge creatures.
You know, we'd spent all this time putting in those damn huge creatures, and we didn't want guns on the sub, on the Cyclops, but you know, those creatures are attacking you, so how are you gonna interact with them?
How is that fun?
And this required a reframe.
And when I say reframe, we had to change our mindset around the whole thing, which is obviously a recurring theme here.
We wanted to, you know, we thought maybe we could, instead of you, instead of this being gameplay, this can be an experience of being under attack.
So like in Das Boot or Hunt for Red October, you have those really tense scenes at the bottom of the ocean.
And you can hear the sonar pinging, and you can hear the creaking.
And we thought, well maybe we can just, you still can't fight the creatures, but they're still fighting you, but you can hide from them.
And you can hit all these buttons and toggles on your sub, and we can actually make it feel like a cat and mouse experience.
And in fact, the emergency suite won't be terminated.
So this is a ton of work, like all the UI and the motion detectors and the klaxons and all, you know, later we'll catch fire.
Warning, freedom of attack.
But it wasn't guns.
Warning, fire detector.
So that was a reframe, another reframe.
And here's another one.
Conflict is magic.
We had so much arguing on our team over this five years and I was starting to wonder if maybe we're doing something wrong or maybe I don't even wanna be in games anymore.
This is so unpleasant.
And what I realized was, after I read Creativity Inc. by Pixar, is that the conflict is actually critical.
And it's actually really wonderful, actually.
So here's an example.
You have your creative team who wants the best aesthetic and all the features.
Then you have the tech team who wants their game to run well and run on everything.
And then of course you have biz that wants it all on time and on budget.
That's if you have biz.
I mean, I know not everyone does.
But so if any of those needs are not met, then you get a bad result. So if creative and biz, they win, then you get a buggy mess.
You know, if tech and biz get it, you get a tech demo.
And otherwise, you go out of business.
But in the middle, if everyone can compromise and argue their way to something that you're all grudgingly agreeable to, that, I learned, is where the magic of games.
That's where magic happens.
And so instead of avoiding conflict, I started to learn, well, okay, we just have to be nicer about it, but we can't avoid it.
Don't avoid it.
And this is all to say that, you know, starting off with this idea of a, a game without guns and an underwater game.
You know, we never set out to make a horror game, and our fans tell us, you made a horror game by mistake.
Or maybe I tell them that, because it's clear that we did.
I mean, I would actually say technically it's more of a terror game by mistake, but that's not really, people don't really talk about terror games.
So, the fact that we did make a terror game by mistake, I think is the reason why this game came into its own.
And it's only because we actually listen to the game.
And this is what Stephen King says about listening to his characters, which I find creepy.
So there was some quote he had in his book on writing.
He talks about in Misery how he didn't know how he wanted the book to end.
And he started just listening to Annie.
What's her name?
Is that her name?
Annie?
And the characters started writing themselves.
And they wrote the ending.
And that really rings true with me, because I feel like that's how it is when you're making original games.
You kind of think you know where you're going, you have some place on the horizon, and some place like it's a mountain, and there's many paths, and you don't know how to get there.
But if you listen to the game, it will tell you where it wants to go.
Okay, so that was the design part of Subnautica, and now I just wanted to talk a little bit about like a bigger framework for making your own original games.
So last year I felt like my life was really stuck, and I felt like maybe I'm addicted to making games.
Maybe I need to investigate that and stop it for a little while.
I just spent all my time doing it.
And I felt like my life might be off track.
And I read this book called Designing Your Life.
It was actually written by one of the co-founders of EA.
And they're two Stanford professors.
And in this book, they talk a lot about this concept of a wicked problem.
And they talk about how people's lives are actually wicked problems.
And these are problems that are highly resistant to solving.
In fact, maybe there is no solving of a wicked problem.
Because our lives certainly cannot be solved.
They can only become subjectively better or worse.
So I was reading about these wicked problems, and here are their main characteristics that they talk about.
Now keep in mind, you know, wicked problems, they're not saying it's only life, people's lives.
They're also saying, you know, nuclear weapons, homelessness, you know, poverty, you know, climate change.
These are all wicked problems.
So what do they say about them?
They say they're not understood until after the formulation of a solution, okay?
You don't know when you're done.
They say there's no stopping point.
So it's not solved.
Solutions are not right or wrong.
Each problem is essentially novel and unique.
And every potential solution is a one-shot operation, which means you can't ever get better at it.
There's no trial and error.
And there's no body of existing solutions out there, unlike if you're building bridges or highways or skyscrapers, there's all this engineering work out there.
You can just go look up solutions.
Wicked problems don't have these things.
So then I thought, this sounds kind of familiar.
This is pretty much exactly like making any original game.
And I realized that actually, original games, making original games are original problems.
I mean, they're wicked problems.
And we have to think about them in a completely different way than any other type of problem solving.
So each original game is unique.
There's no end point.
It's never solved.
Again, no trial and error.
And there's no existing solutions.
So this is the whole idea of being in the jungle.
This is not knowing what you're making, and yet you still have to go ahead and make progress anyways.
There's another quote that I really liked.
And I think that's really true.
Games are insanely complex.
If you want to do something new, it's going to be even harder.
So this book talks about their framework for design thinking, which they did not create.
This is a known discipline, essentially.
And design thinking, some of the things they talk about are try stuff, which is prototyping, and what they call building your way forward.
They talk about reframing problems.
knowing it's a process, which is to say that sometimes you take a step forward and a couple steps back, sometimes you have happy accidents along the way.
They talk about wayfinding.
Wayfinding is the idea that you think you know where you're going, or you've got it on the horizon and you're just going to aim there, but you have no idea how you're going to get there.
And they say, ask for help.
Then I started thinking, well, the stuff that worked really well in Subnautica fits pretty well into these categories.
Trying stuff, that's the MVP and MCP.
Minutes of fun, that's building your way forward pretty much identically.
Placeholder goals.
Okay, reframing problems is probably the most important thing that we ever did, which is reframing player learning, intrinsic rewards instead of extrinsic, embracing conflict, rethinking how the sub works, knowing it's a process.
A lot of this for us was embracing those happy accidents and noticing them, the listening.
And yeah, the awe through the big creatures and the training wheels.
We just noticed that those worked.
And wayfinding, probably the most important one, which is the whole idea of knowing where you want to go, at least emotionally, and just aiming for it.
So that just leaves one.
So we've covered a lot of tools about finding your way through that jungle of making original games.
And I would not say that it's gonna make development easy, but I'm hoping it's gonna make it a little bit easier.
And it's easy to forget that other people have walked this path before us.
And that we don't have to do this alone.
So I hope that you remember that there's help all around you and what's difficult or impossible for you may suddenly become easy with a little bit of help from someone else.
Especially here at GDC, the friendships that you make here will last you your entire career.
So if you'd be so kind, would you please take a moment and introduce yourself to your neighbor?
Okay, I hate to cut you off.
Wow.
That was amazing.
Okay. One moment. Yeah, we're back. I didn't think that was going to take so long. Wow.
Holy moly. You guys are energetic. Okay. One more thing. Wow. It's gone. It's done.
Okay. That's it. Okay.
Thank you.
So I think we have maybe ten minutes for Q&A.
Uh, yeah, 10. Okay. I don't know. I don't know where the mics are, but here, here.
Hi, John Manning from Secret Lab.
Hi.
So can you talk a little bit about how you implemented the story over the course of your open access, your early access?
Because how did you deal with player spoilers?
How did you take care of things like changing your mind as you built out the story?
Oh man, so the question was like how did we unveil the story basically in early access knowing that sometimes we needed to change things?
very painstakingly and carefully.
I mean, one thing we realized is we didn't care about spoilers.
Obviously, in early access, you can't, but there was always some team resistance saying, well, do we really want to spoil this right now because it's going to remove all the juice from the game?
We basically just let people be spoiled, and if they didn't want to be spoiled, we thought they just shouldn't be playing early access.
But I, unfortunately, don't really have a good, terse answer for you on that.
I wish I could help.
Conflict, need a lot of conflict.
Hi, over here.
Hi.
I have to say, this is just an amazing game.
Oh, thank you.
Really great accomplishment.
Thanks for the presentation.
You mentioned something about telemetrics and telemetry that you used in the game.
How much did that influence early development and what were the things that you were actually looking at?
So Jonas, I think, talked a lot about that in his talk.
But we did look at it a lot.
Our discussions were often, players haven't found the Seamoth yet, and it's four hours in.
Because we had the data among the team.
So I think it was really important that everyone had access to that, so we could all talk about it.
and it wasn't like, as you probably have come to understand now, this wasn't like this top-down designer-driven game.
No, it doesn't seem like that.
No, the team is talking about this stuff and as soon as they had that data, it just informed all their discussions.
So we used it and we used it a lot.
Cool.
And it's actually pretty easy to implement.
Yeah, I'll take a look at the other talk as well.
Okay, yeah, great.
Cheers, thanks.
Hi there.
Hi, thanks for the talk.
Could I just ask, did you have to iterate much on the rendering or the design of the hands?
Were there any decisions there about the uncanny valley?
I'm sorry, say that one more time.
So the rendering and the modeling of the hands in the game, because they're kind of always there, and there's this whole worry about the uncanny valley.
Did that just work, or did you have to iterate on that a little bit?
I mean, Brian would probably have...
I think it just worked, yeah.
I don't think we ever had a problem with the hands.
Maybe the legs were a little more difficult.
I don't know, but...
All right, thank you.
Yeah, I think it never really worked that great in VR, but sorry.
Thanks for sharing. Carl from University of Wisconsin Stout.
My question is related to research and design.
Did you take any inspiration?
Did you go out and snorkel or scuba dive?
Yeah. First hand experience?
I did, actually. I'm an avid scuba diver.
That scares the living hell out of me still.
It's funny, I don't get scared about Subnautica, but I get really scared in actual scuba.
Yeah, I mean, I think we have a couple members on the team that are scuba people, but we didn't really do too much.
We had like, I don't think we ever had a field trip or anything.
No, I mean, our art team, Corey especially, researches the heck out of underwater life, but I think I was probably only one or two people that actually scuba dive.
Yeah.
Thanks.
So, yeah.
Hi there.
Hey.
like talked about the inspiration for a lot of your gameplay mechanics came from like kernels like the hunt for red october where you're evading that there's those tense moments where you're evading when you design this game because it was so from the ground up what was the kernel for the original concept like was there a particular experience that the like home came out of like the What was the initial inspiration?
You know, I don't know if there actually was one.
I mean, I love the Abyss.
I love James Cameron films.
So those were always, you know, there.
But gosh, I mean, we were definitely influenced by Avatar.
We wanted to make a dreamy, dreamy, surreal world with a lot of like alien nature.
I don't know if there's actually one specific experience.
It's more of a feeling than an experience, honestly.
Cool.
Yeah, and underwater Minecraft was like an early direction.
That was like probably the original, and it just wasn't good.
Okay, so you said let's not do that.
Let's not do that.
Oh, okay.
The building, I could've gone into depth on that, but the building basically got in the way of the exploration because we actually had subs that you could build pieces onto, like modularly, and it would change their properties, like how they navigate.
And then you couldn't actually explore because they were so clumsy.
So we realized that the game was about the discovery and exploration, not about building.
Yeah, it shows.
Okay, good.
That's good, I guess.
Hi.
Hi there, my name's Matthew Owens, I'm a designer with EA.
I thought it was really fascinating, your concept of placeholder goals, along with having placeholder models.
How did you go about the process of getting the permanent goals?
Was it more of a process of discovery, where the right concept came to you over time, or did you have to really sit down and say, what the heck are we actually doing with our game?
I mean, we don't really have any real goals in the game.
I mean, they're there, but we would never tell you.
So I mean, you kind of, all the story, I mean, you could say that the story is the goal, and that's all just there if you want to find it, and we've got breadcrumbs all over the place to help you find it, but there's really...
I mean, I wouldn't say, you could say that there's goals in the Fabricator, like I really want to build my first Cyclops, or I want to build, you know, I don't know, this underwater base that looks like in this configuration, but they're all implicit.
There's nothing, I wouldn't say that we have any actual goals in the game that we decided on.
All right, cool, thank you.
Yeah, you're welcome.
Hi there.
I've got about a billion questions, but I'm going to just go with this.
I wanted to actually thank you guys a whole lot.
playing this game as a frustrated explorer and oceanographer, it really scratched an itch that I knew was there, but I didn't know how to frame it.
But like I say, I just want to thank you guys a lot for putting this out.
Very welcome.
Hi. Hi. You talked a little bit about the pyramid-shaped map to sort of...
influence and motivate players to go deeper.
But how did, like, my question's about the biomes, like the discreet and very unique biomes that are very distinct from each other.
Did you guys design that through the lens of emotions, because each of them sort of evoke a certain emotion, or did you have certain gameplay things that you wanted them to do?
I mean, it's a lot fuzzier, so the question was about, like, did we use the design pillars, basically, for making the biomes?
Yeah.
I hope so. I wasn't really involved too much with level design. So the art team, that's actually something that I cut out of this talk, but early on I realized I had to remove myself from the world design, which was a really weird realization because art wanted to, art had ideas, like they wanted to make this like huge submarine, right, because it looks so cool.
level design wanted to figure out how to get that submarine to fit.
And, you know, like we need, they need to make biomes that are big enough that, you know, they don't have the, you know, giant plants that are going to stick up and your sub gets stuck on them or whatever.
And they would ask me, like, How big is this world supposed to be?
How long is it going to take to get from one biome to another?
And I didn't have any answers for them.
I would ask Corey, our artist, our art director, I have questions for him on crafting ingredients.
So we were stuck in this circular dependency.
And I realized the only way we could make forward progress on the world design would be for me to leave that discussion and let them make the world that they think that they can make.
So artists in Love Design made the world that they loved, and I had to fit the gameplay to the world.
So I wish I could tell you more about that, but I actually deliberately had to leave those discussions.
Thank you.
Sorry, it's a terrible answer.
No, it was a great answer.
So a lot of your design, or I don't know how much of your design, came from streamers and YouTubers on Early Access.
Would you always go down that route knowing what you know today?
Yes, only because I don't think of them as...
It's not about how popular they are or anything like that.
It's just about watching someone play the game.
Of course you can see the likes and dislikes and the number of views that will influence you sometimes.
But I don't feel like...
I was kind of worried that this was going to come across like we were just chasing the jump scares.
And I don't think that we did.
I mean, I guess we probably did to an extent, but I don't think we ever made decisions with the game that we weren't 100% behind.
We would never, you know, we would never just say like, oh, people want this, like someone modded in a Torp, like, I don't know, some kind of blade gun or something and people loved it.
We wouldn't put that in.
I'm a big fan of early access.
Okay.
I like it when the player has the fun and yeah, of course.
Yeah.
So good job.
I think, I mean definitely, I can't imagine, this is the world we live in now, right, with streamers.
So we probably make half of our income from streamers, pretty much directly.
So it used to be when a video went up, our sales would just go, you'd just be 100% correlated to that.
So I think it would be folly to ignore it.
And I think they're here to stay.
And we love watching them.
It gives us energy when we see what people love, even the non-famous ones, too.
So hi.
Hi.
Question regarding the data bank and the fact that you can scan all the creatures and stuff.
Where did that fit into the whole design of the game?
Good question.
Why did you decide to do that?
Yeah.
I was actually really against the scanner.
So the question was, how does the scanner fit into the game, into the design pillars, I guess.
It doesn't really, honestly.
And I never really liked it.
But the team really liked the idea, and they put it in.
I think it works well for the feeling of exploration.
Every time you see something new, you want to go scan it.
And it also is a nice replacement for combat, because you can't really interact with the creatures too much, but you can scan them.
And just like combat, you have to see how they're moving, get close to them, make sure they don't hurt you, and keep them in your sights long enough to get them scanned.
So I think it actually is a nice proxy for very simple, light combat.
So I wholeheartedly love it now.
Thanks.
Yeah, you're welcome.
Is that it?
I think we're probably out of time anyway, so.
Thank you everyone.
Have a great GDC.
