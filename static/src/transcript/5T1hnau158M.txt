Wow, when they invited me to come up here and talk, I was kind of expecting maybe a classroom with 20, 30 people in it.
Thank you all so much for getting up this early.
If I hadn't been assigned this slot, I would still be in bed right now.
There are a couple things I'm supposed to remind you of.
One is please shut off your, put your phones on do not disturb or whatever.
The other is there are evaluations.
Please fill those out so the organizers will know whether to bring me back someday.
So this is what we're here to talk about.
Somehow, I got old and this game I worked on 15 years ago is now considered a classic, classic game post-mortem.
And who am I?
I was the second employee at Treyarch.
The founders, Peter and Don, were friends of mine from college, so like they say, it's who you know.
Lucky to know the right people.
And also lucky that when the Spider-Man games came around and Activision gave us the license to do those games, I was in the, I had just come off the, working on some Tony Hawk ports, so I was in the perfect position to take over as lead programmer on those titles.
And that gave me the opportunity to put a unique thumbprint on things, or get a unique thumbprint started.
That metaphor makes no sense.
After Spider-Man, I went indie, and this is not so well known, I made a solo project called Energy Hook that was continuing to investigate the idea of swinging game mechanics.
It's probably more famous for having a Kickstarter funding goal of $1.
I am in the Guinness Book of World Records video game edition for the highest percentage funded Kickstarter project.
Some insane percentage.
It raised $40,000, which is not much compared to the budget of Spider-Man 2.
It did not do well.
It got mixed reviews to be kind.
And so I've got some imposter syndrome going on right now.
It's like do I really should I really get up here and talk about how to make a swinging game when some some people really didn't like Energy Hook.
That said.
Let me tell you the story about, oh actually, let me, sorry, getting ahead of myself.
Speaking of EnergyHook, I have open sourced it.
I just set this up yesterday.
I took all the stuff in the project that I'm not allowed to share, took it out, put the bulk of the project up here.
If you go down to the bottom of the page, energyhookgame.com, you can start downloading the EnergyHook Unity project now and play with some of these.
I'm glad you guys are excited about that.
And then you can start playing with the ideas you would talk about.
If anybody wants to use that source code to violate a certain famous intellectual IP, I can't stop you.
Bad news, I did not get it up to Unity 2018.
It's still in Unity 5, so if anybody wants to do that for me, let me know and I'll put that up instead.
Anyways, the story is that when I was at Treyarch, I was lead programmer, Spider-Man 1, things had been going along and I wasn't happy with the swinging.
It didn't feel like Spider-Man to me.
And this was, and so I would come in late at night and try to make my own ideas, make my own prototypes, and eventually those prototypes took on a life of their own.
And by the time Spider-Man 2 rolled around, we were able to...
keep iterating on those and eventually end up with what is now, you know, considered a classic game. And up until last year when the Insomniac guys made made their Spider-Man game, it was the reigning champion of Spider-Man games.
So 15 years, pretty good run. And let me get into it. I am mostly going to talk about intrinsic motivation today. And extrinsic motivation is playing playing the game or doing a thing because you're getting some kind of reward, like money, levels, unlocks, in-game currency to buy new stuff, achievements, leaderboards.
Extrinsic motivation can be easier to talk about.
It's easier to analyze, it's easier to tweak parameters and see if your customers are coming back or not.
And so, And it's what people, it's generally what people talk about when they talk about gamification, taking things and adding game elements to them.
They're talking about adding leveling systems.
What they're not talking about is Jesse Schell's definition of fun, which is doing things because we don't have to.
That is intrinsic motivation.
That is, I am just doing this activity because it is a joy in itself.
Intrinsic motivation is harder to talk about.
It's harder to analyze.
It becomes more of an art than a science when we start talking about intrinsic motivation and why is one activity more pleasant than others.
So we've got these Spider-Man games.
And this is back.
2000, there's one on the PlayStation where swinging is kind of like jumping.
You jump from building to building.
Your webs are cosmetic.
Spider-Man 1, the game I first made, swinging, you're flying through the air and your webs are attaching to the sky and the webs are just cosmetic.
And these activities were kind of anemic.
They're kind of not doing it for us.
And then for some reason, Spider-Man 2 does it for us.
So how do we get there?
I'm gonna skip that.
I think it's a combination of some insights and some luck.
We still need game designers to have insights and to prototype those and to see how they feel.
And we need luck.
Like, I've made a bunch of prototypes over my career, and very few of them have had the impact of Spider-Man.
And so it's sort of a seat of our pants development system, right?
We're not able to say, oh, if we...
If we increase this number, then scientifically we'll get to this better experience.
It's more of a...
You make a prototype.
You say, hey, will this work?
We try it, it doesn't work.
We try something else, it does work.
And over and over again, this process is sort of how we get there, and some people are going to be more likely with this process than others.
One thing I can say though, is in this process of making intrinsic, of attempting to make intrinsically motivating prototypes and activities that people will just do for the sake of doing them, is to keep extrinsic motivation out of it.
It's tempting to start adding your score systems and your achievements and your leveling up into these early prototypes, but don't because A, that That corrupts your data.
You don't know if people are coming back and playing longer to get those points and the extrinsic rewards, or if they're doing it because it's a, if the core is a fun activity.
And B, the extrinsic motivation can actually damage the intrinsic motivation.
You probably heard, it may be an apocryphal study, but you may have heard of the study where there's two classrooms.
One set of kids draws for free.
The other set of kids is paid to draw.
And the set of kids that are paid to draw, the next day, they don't want to do it anymore.
I tried to track down that study for this talk.
I couldn't find it.
It may be mythical.
And obviously, we all know from making games ourselves and looking at analytics, when you add extrinsic motivators to a game, it helps people come back.
But there's something powerful about that, and it comes back to what Jesse Schell said about fun.
Once you start making it an obligation to play your game because you're getting those goodies, then people start talking about farming and grinding, and they're doing it not because the intrinsic activity is giving them joy, but just because they're trying to get the next level.
So what turned out to work for us with Spider-Man 2?
So I'm here, I'm going, I feel like Spider-Man, this game is not satisfying me personally.
I think that's probably where a lot of you can also find motivation to improve game mechanics and make them more intrinsically satisfying.
And for me, the webs that attach to midair were a big part of the problem, but also it was just sort of the slow, sedate feeling.
Back then, I thought it was about realism.
I thought, this isn't realistic.
This game should be realistic.
And I'm lately learning that that's not what it was about.
It wasn't so much that people wanted realism, it's that people wanted to be Spider-Man.
When you imagine what it's like to be Spider-Man, webs attaching to the sky is not part of the fantasy.
It violates the fantasy of being Spider-Man.
Because it turned out that there were a whole bunch of physical impossibilities that people are just fine with.
Gravity in Spider-Man 2 is about 10 times Earth normal.
That's the only way we can sort of.
make the speed of the game, the speed of Spider-Man, have sort of an exciting, dynamic feel.
Spider-Man can jump an amazing number of stories in that game.
It feels like he's not jumping as high as he is.
And Spider-Man can steer in mid-air, like in a lot of games, Spider-Man can steer in mid-air.
Here is a real-world situation where I'm at camp with my daughter on a rope swing.
Look at that!
Yeah!
Give me a hand up there!
Yeah!
Video!
Video is your seat!
I did not come as close to that tree as it looks like, but I can tell you, I was not able to steer in mid-air.
And yet, in our video games, when we can steer in midair, lots of games do it.
Spider-Man 2 certainly wasn't the first.
Although physics has nothing to say about that, it just feels right.
I think it's a little like when you go bowling, and you let that bowling ball go, and it's heading towards the gutter, and with your whole body, you sort of tense up.
And it's like you think you can push that bowling ball just with the effort of your mind.
Video games make that real.
In general, people.
have, what's the word, that our preconceptions about physics are often wrong.
Like a child will assume that a heavier object is gonna fall faster than a light object.
And we have these broken notions of physics.
And when a video game takes those broken notions of physics and gives them life in a virtual world, it doesn't bother us.
Another good thing about Spider-Man 2 was we decided to do something that had never been done before.
The advantage of doing something like this is...
We gave game reviewers something to love, and it's part of the reason, I think, that Spider-Man 2 was, as people look back to it to this day, it's like, wow, this came out of nowhere, there's nothing like it.
Once I start to master this thing, it's incredibly expressive.
But like I said, I made a bunch of prototypes over the years, and most of them, although very few of them are maybe as unique as Spider-Man was, they're all unique, they're all, I want to do stuff that hasn't been done before, right?
And most of them don't resonate with people.
So it's a huge risk.
Maybe the risk-reward is worth it in the long run? I am not sure.
Let's talk with Flo.
Who here is familiar with Csikszentmihalyi's Flo State stuff?
Yeah, I figured a lot of you.
One of the hardest parts of this talk was learning how to pronounce Csikszentmihalyi.
There is a YouTube video, fortunately, with 80,000 views, that teaches people how to do it.
For those of you who don't know, what he calls flow is that feeling of being in the zone, of intensely concentrating on something so hard that time sort of loses meaning and the rest of the world goes away.
It's something that a lot of games like to mine and benefit from.
One thing about the flow state, if it's too easy, you get bored.
The rest of the world comes back, time comes back.
And if it gets too hard, you get frustrated and stop.
We never had a problem, really, with people being bored.
of the Spider-Man swinging, the frustrating and too hard part was what we were sort of constantly battling with through the life of the project.
Okay, sorry about this high-density information slide.
There will not be a test.
So when I'm first thinking about Spider-Man and getting ready to make that first prototype, I'm like, okay, I have this idea.
I don't want the webs to attach to the sky.
I want them to attach to points in the world.
I want to be basically a bob on a pendulum.
But that is an insanely difficult problem for players to play.
We were asking players to.
in a simulated 3D environment, when they're given a certain trajectory, pick a point in the world to attach a rope to, which will then give you the direction and speed to end you up where you wanna be.
Like, I can't think of a mass market game that we intend millions of players to play that has a mechanic that challenging.
And so I think, okay, maybe there's some way we can assist the players in doing this.
Existing at the time, we had the Quake grappling hook mod.
That was one example of movement and swinging together, where you pick, where first person shooter, you pick with the center of the screen crosshairs exactly where you want your grappling hook to attach.
We also had Jak and Daxter, which had points in the world.
that were clearly marked that you could swing from.
It was a sub-game, a mini-game in Jack-O-Lantern, just a tiny part of it.
I thought, well, maybe we can go somewhere between those.
Maybe we can have lots of points at intelligent places, corners of buildings, let's say, that probably Spider-Man's only gonna wanna swing from the corners of buildings, right?
You don't want to swing from the middle of the building because you'll just run right into it, but if you're always swinging from the corner and you're going parallel to the building, you'll be able to use those points to slalom.
That was my first prototype was going in engineering level and marking certain points as ideal points to swing from.
And that prototype wasn't there yet.
that wasn't quite good enough.
It was good enough, with a couple other modifications, it was good enough to sort of get to the point of like, okay, let's keep investigating this.
Let's see if we can make a game out of this.
But it had issues.
It's like, how come my web sometimes don't attach to anything?
How come my web sometimes attach to this corner over here when I thought they'd attach to that corner?
Tomo Moriwaki, the creative director, and Eric Pavone, one of the designers, said, well, let's just keep adding points to the levels and see what happens.
And they found that the more points, the more of these invisible points we added to the levels, the less confused the player got.
The more it's like, yeah, that's kind of where, kind of in the general vicinity of where I wanted my web to attach.
And so we carried that on, we carried that on all the way by then having a programmer say, okay, let's, what if, what if there's infinite points and we're just intersecting with surfaces?
Sending out rays, sort of like feelers.
where they intersect the surface, that's the point we swing from.
And we can bias the way the feelers go by pushing the joystick.
Let's try that.
And that felt really good.
We were finally at a point where it was less mysterious.
You almost always had a point to swing from unless you were above the buildings.
And the point usually was around where you wanted, and usually not stupid, usually not crashing you straight into a wall.
After Spider-Man shipped, a game came out called Bionic Commando Rearmed, sequel to Bionic Commando, probably one of the very few 3D swinging games out there.
They had a different solution, and they marketed their game as more of a skill game.
They didn't actually call Spider-Man 2 out by name, but they said, this is a swinging game, and this one is about skill, like Spider-Man 2 wasn't hard enough.
And what they did was it was an over-the-shoulder.
aiming shooter, the center of the screen, where your crosshair was, would determine the vertical plane of where you attached.
And it was sort of like, sort of like you're chopping down and where you're...
and where your hand, where your invisible feeler hits an object, that's the point you swing from.
So it was much more precise, and it was much more clear how you were picking points in the world.
It also did require a lot more skill.
I thought it was a very cool game.
As I understand it, it did not make a profit.
I don't necessarily think that's because it was, like, hardcore.
I think it was mostly because it didn't have Spider-Man in it.
I mentioned Energy Hook.
I had a, and this, I can kind of, you can kind of visualize the way the beams work in Spider-Man by playing Energy Hook.
My solution to sort of compromise between precision and a lack of difficulty in energy hook, is that in energy hook, this...
A, I made the beams visible, the feelers visible, that are determining which points to swing from, but B, the cone of feelers starts out very narrow and precise, kind of like bionic commando rearmed, and then it expands as you hold the button down.
So...
skilled players, precise players, pressing the button as necessary will target the things they want, and then if they have trouble finding a spot, eventually the cone widens up so it'll intersect with something and you'll swing from something.
Got a little video here to demonstrate it.
There's the cone getting wider, just from a standing position.
Here it is in action.
So particularly with bridges, the narrow beams enable much more precision than the feelers from Spider-Man 2.
And then when you're going next to a wall, the, sorry, all tongue-tied, when you're going next to a wall, the wider cone helps do the slaloming action that we're familiar with from Spider-Man 2.
Let me hydrate.
So picking the right points in the world's not enough.
Beginning players still have trouble with the game.
And so we ramp way back on how fast the player can move.
how high he can jump, we increase air resistance.
And this makes the game more accessible for the new players, but it would make the game a little less interesting for the advanced players.
So that's why, as you go through the game, once you've demonstrated that you have the chops and you're ready for it, we allow you to have more speed, higher jumps, further jumps.
And in other words, we kind of introduce shopping to the game.
Spider-Man could go into a little store and buy superpowers.
I talked about how we shouldn't violate the super, violate the Spider-Man fantasy, and that kind of like violates it.
I can't imagine, you know, in a Spider-Man movie, seeing him going into a store and buying superpowers.
But the benefits this gave us in terms of Being able to ramp the players up slowly into the difficulty curve, sort of like acclimatizing them like lobsters into the challenge, helped a lot.
There's a bunch of other valuable things about buying upgrades.
which is you get to learn the parts piecemeal as you go through the game.
And now it's time we're adding extrinsic motivators is actually kind of cool.
We're far enough along in the project that we feel safe about adding these things.
Spider-Man 2 had a tutorial.
A lot of people complained about tutorials.
You know, perfect world, your game mechanic is so simple or so well designed that people can learn it without a tutorial.
Some games though, you really want it and I've definitely found with a lot of my games, I have a game I'm working on right now where if I accidentally break the tutorial, I see it immediately in the game's analytics, like session length drops, retention drops.
I say, oh no, what did I do, what did I break?
I look in, it's like, oh, I accidentally broke the tutorial.
Okay.
So, some players are getting so frustrated with the Spider-Man 2 and the Kleenex.
Oh, everybody know Kleenex testing?
Who doesn't know what Kleenex testers are?
So Kleenex testers are testers that you bring in, watch them play the game once, and then throw them away.
Will Wright's term, I think, and because they get poisoned.
Once they start learning the mechanic, you can't have them see the mechanic again for a second time and say, oh yeah, cool, I fixed it because now they're able to play because the reason they're able to play the second time is because they did it before.
So some people are getting so frustrated, some of the Kleenex testers are getting so frustrated playing Spider-Man, they'd see that next objective and instead of swinging there, they would just stop and they'd run through the street to their next objective.
We called it the running man.
No offense to the Insomniac guys, you're still here.
It still can be a problem.
My nine-year-old daughter, I was watching her play Spider-Man.
She swung a few times, and then she's like, I don't care, I'm just gonna have fun running through the streets.
Streets look much more cool in the new game than they did back in the Spider-Man 2 days, so I can kinda see how you'd wanna do that just to enjoy the graphics.
So one of the best things we did when trying to get the players to learn the swinging system was this.
Okay.
Hold up.
Last time I checked, you were still Spider-Man.
You know, fancy outfit, fights crime while swinging from building to building.
So where's the swinging?
If you're just going to run everywhere, then I'm going to be forced to say hurtful things that I'll regret later, and neither of us want that.
So just swing.
It takes some practice, but I'm sure you can do it.
eventually with time.
How many people don't know who that is?
Nice.
Yeah, so Bruce Campbell does the tutorials and in between commentary, voiceover narration in both the Spider-Man games I worked on.
And a theme of this talk is actually what I would tell young Jamie, it occurs to me.
Like young Jamie thought realism was important.
young Jamie thought you shouldn't make fun of your players.
But here we found that if you make fun of your players, we saw this in Kleenex testing, they'd be doing the running man thing, we'd eventually detect it and say, they've been running too long, Bruce Campbell would give them crap, and they'd say, he's on to me, and they'd start swinging again.
Cheek set me high, stole the word flow, and so now we can't use it when we're talking about games behaving fluidly.
So I'm gonna call that fluidity.
Sometimes people, I think, sometimes game definers conflate those two terms, flow and fluidity.
So flow is being in the zone.
Fluidity is having a game that's curvy.
It doesn't stop you, jar you, it's not linear.
I have no scientific evidence for this, but I think we just prefer curvy, non-linear things. I think that's why when we animate, we always use tweens, even if they're UI elements.
There's just something about a UI element coming in and gracefully coming to a stop rather than linearly coming in and jarring to a stop that we appreciate and that goes for our game mechanics as well.
So with Spider-Man, I had to retool some stuff.
The original Spider-Man engine.
evolved from a game called Draconis, which was a fighting game.
And all the animations drove the behavior in that game.
It wasn't like a lot of the shooters at the time.
It was to move from one spot to another, we play an animation and then update the character's route.
So I had to turn that around.
There were also lots of places in the engine which just literally stopped the character, set his velocity to zero.
That was a simple process of going through and commenting out a bunch of lines of code.
And things started feeling better there.
When Spider-Man would land on the ground, at first he would just stop.
That didn't feel as good.
When we took that velocity canceling thing out, he lands on the ground, he takes a few steps.
That felt a lot better.
Another way we introduced fluidity, Spider-Man 1, Spider-Man automatically stuck to walls.
you just brush a wall and he sticks to it.
And in Spider-Man 1, that was great.
It was what we wanted, Spider-Man sticky.
In Spider-Man 2, that would be really frustrating.
You're swinging along and suddenly, boom, you're stopped.
So turning that off was one of the biggest things that turned that initial crappy prototype that didn't get greenlit into a game that we could continue exploring.
And then taking that, There was a problem with that though.
The problem being even when you bounce into walls, it still looks dumb.
Doesn't feel particularly Spider-Man-y or superheroic to bounce into a wall.
And the way we dealt with that, we didn't have any magical technology to prevent you from bumping into the walls in the first place back then.
But what we did do is, is a play cool-looking animations when you did hit a wall.
Little surfer moves, your hands on the wall, you do a spin, your feet run along the wall for a little bit, and suddenly, even though the game mechanics are exactly the same, physics are exactly the same, character's motion, trajectory, velocity all the same, suddenly it feels good.
It's like, yeah, I meant to do that.
We took it even further later when we brought in the wall running.
And you can just see how that wall running, it's like you can sort of imagine this continuous looping thread through the world as you traverse the level.
And that feels so much better than a janky angular motion.
I was, young Jamie was really afraid of just how hard the game was to control even after all the effort we took to make it accessible.
And as I'm thinking about this talk, we had a snow day up in Washington.
We had a bunch of snow days up in Washington a few weeks back, and I went out with my daughter.
We were on our saucer sleds going down the hill.
Saucer turns backwards, as saucer sleds do.
I can't see where I'm going.
It's scary, I don't know what I might hit.
But it was also fun as hell.
And a lot of people came up to me after Spider-Man 2 and said, you know, I...
have trouble controlling it, I'll like swing and I'll go somewhere and it won't be where I intended to go, but I don't care.
I'm having fun. I don't really care where I end up.
And it suddenly clicks, oh yeah, this is what Richard Garfield and Greg Kostikian are talking about when they say how uncertainty and randomness in games is important.
Speaking of dumb young Jamie, I used to be like, oh, randomness in games is bad.
Chess is the perfect game.
It removes as much randomness as possible, so it's all about the player's skill.
And it wasn't until later, hanging out with Richard and reading Greg's book, that first book, Luck in Games, by the way, is required reading for game designers.
where they pointed out that randomness actually is what games are all about.
Uncertainty is what games are all about.
Greg goes as far to say that uncertainty is pretty much what makes games game.
It's not a series of interesting, it doesn't have to be a series of interesting decisions.
Candyland is not a series of interesting decisions, but it's still a game, it's still, you're playing Candyland and you don't know if you're gonna win or lose, and that uncertainty can keep you going to the end just to find out the answer to that question.
The challenge for game designers at this point becomes How do we control that uncertainty?
How do we get it to the point where it is possible to master, where we don't have players going, this game is too random, but still keep that feeling of life and feeling of not knowing what's going to happen there.
Final thing, cosmetics, more required reading, read Steve Swink's Game Feel and Martin Jonasson's and Petri Berho's Juice It or Lose It GDC talk.
Young Jamie, very into just the math of things.
Like, Young Jamie probably would have thought that Spider-Man 2 would have been just as fun if you were just a sphere on a line segment navigating through a world of colored blocks.
Young Jamie was kind of dumb.
that would not have sold the Spider-Man experience.
To sell the Spider-Man experience, you need all the cosmetic stuff.
You need particle systems, animations, audio, motion blur, wind trails, camera changes, all of these things.
All of these things are there to sell the experience and make us start empathizing also with the hero.
Suddenly we feel the danger the hero feels.
You wouldn't feel any danger if a sphere or a pendulum bob falls from a great height.
But when a human, even if he's a cartoon, falls from a great height, you feel for him.
You feel it in your gut.
I don't know why, but we have this empathy for the cartoon character.
And the more we can sell that experience, the better.
Yeah, it's beyond the scope of this talk, really, but these two resources are great for it.
But just as an example, just in the audio track, we had the whoosh of being really high up.
We had a whooshing sound that increased and decreased depending on the character's velocity.
And when you would boost your character, there was also, on top of that, a whoosh.
noise for the speed boost.
I'm going to finish with Insomniac's game.
A journalist, Nick Robinson, AKA Babylonian, took some video of me playing the Spider-Man game for the first time. The new one.
I'm going to play this a couple times, but you can sort of see the contrails in that very first shot, and you can see the way the camera gets closer and further away from you.
Oops, went the wrong way.
And we did not have the technology to do motion blur like that back then, or at least it was not ready for prime time yet.
You can really, in this very final shot, you can sort of, I don't think that's a video compression artifact.
You can see the motion blur at work.
All those things really do a great job of selling the experience.
And the more graphic detail you have in the city, the more it feels like.
Yes, I am a person.
I am this many stories above the ground.
I am in danger.
I'm going to die.
And so that, in a nutshell, is a lot of the things I learned while working on Spider-Man 2.
I will leave you here with one last bit from Bruce Campbell and then we can have questions.
Well, hang on.
Stop the music.
Cut.
Okay, you and me, we need to have some words.
The swinging.
What?
You don't like it?
You think you're too good for it?
Maybe like not good enough, right?
Is it the pressure?
You got a little performance anxiety going on?
Well, that's all right.
Now, personally, I don't know anything about that, but I've heard it's rough.
Anyway, let's ease up on you for a little bit.
Just slow everything down, take away the pressure.
Just breathe.
Just get to class in your own good time, OK?
So yeah, you guys have any questions?
OK.
Thanks a lot.
Thanks.
Thank you all for coming.
I appreciate it.
Thank you.
Hi.
OK.
Thank you.
Thanks.
All right.
Bye.
Thanks.
Bye.
Bye.
Bye.
Bye.
Bye.
Thanks.
Bye.
Bye.
OK.
Bye.
Bye.
Bye.
Bye.
Thank you.
Thanks.
Bye.
So I teach at a university in the Netherlands, and one of the things I've been trying to do while I'm here is pick up some tips on how to get our students to be a little more creative, because we're like laser focused on putting people into the industry, and the result is being great for what we were trying to achieve, but like their ideas are getting a little more risk-averse.
And there was something you said there that, Extrinsic motivation is kind of easier to balance and parameterize than intrinsic motivation.
And I'm wondering if you feel like maybe, you know, we picked up the Ubisoft rational game design stuff and we started implementing that.
So there's a lot of information out there on how to balance and how to break your game down.
But the more you're talking about that, the more I was realizing that's all extrinsic motivators.
How do you structure things?
How do you guide the player?
Do you think maybe we're getting so good at extrinsic motivation, we're not spending enough time exploring what we can do to get more intrinsic motivation in there?
So the question is, has, I guess, our obsession with gamification and extrinsic motivation, is that one of the many things that sort of hurts creativity?
I don't know.
I mean, I personally feel, after seeing a lot of the interesting game mechanics fail to be financially successful, I think a lot of the risk aversion is just from, we tried that and it didn't work.
Let's do something safe.
Let's make a Battle Royale clone.
But, you know, that said, though, that's not safe either, because then people just say, oh, been there, done that.
That it's also a huge risk to try to slavishly copy something else.
So, yeah, game making is hard.
That's cool, though.
It's cool that you're trying to push for creativity.
Hi, so one of the other things I really liked about the game was the combat mechanics and such.
And so grabbing people, putting them in a web, hanging them on a street lamp, and then a human punching bag or something.
But did you work on that at all?
And then if you did, did that ever kind of evolve over the course of the project and evolve from the new web-swinging mechanics and such?
Spider-Man 2 combat mechanics.
So I was definitely not as intimately involved with those as I was with the swinging.
And how did they evolve?
Just like the rest of the game, they did evolve as we go.
One of my favorite stories about it was games with two punch buttons or a slow attack, fast attack.
were very popular back then.
And most action games had that.
And so Activision was like, a higher ups at Activision were like, why don't you have more attack buttons?
Like, this isn't a real game.
It's only got the one punch.
And we had to work back and forth with them on that.
And that's sort of where combos with the web attack button and the punch button came from was like how can we get a breadth of different attacks and moves and animations without wasting one of our precious buttons.
You had mentioned adding extrinsic motivations behind the intrinsic flow of web swinging.
In that process, were there any unlocks that you realized before or after the fact would be good or bad?
Like, for instance, some unlocks of certain speed values or something like that that you realized should have been?
part, like included in the base, and then through testing.
Could you stand a little closer to the mic?
I'm missing some of what you're saying.
Sorry.
Did you realize that there were some extrinsic motivations and unlocks added for the web swinging through testing that you re-added back as part of the base of the web swinging?
Because you mentioned speed and jumping and boosts and stuff like that.
Right, so are you asking sort of like, is stuff, oh, we should make that power part of the core gameplay, that shouldn't be left out?
No.
Closest, closest thing to that, actually yes, closest thing to that was not so much powers, but originally the city unlocked gradually.
like parts, zones weren't available, a little like GTA 3 back then, you couldn't get from the one island to the other island.
And beyond just having a, and instead of having that staged, we went back to just like, okay, here's the area for the tutorial, and then once that's open, boom, you can go anywhere.
That was one thing like that.
But as far as like, oh, we really should have this, I don't even remember.
There were some tricks and stuff in the things that weren't really necessary for the core gameplay.
And we left them to be things you unlock later and learned about later.
Awesome.
Thank you.
Did you play the Mega Drive or Genesis Spider-Man?
It was a good game.
I have not played any Mega Drive or Genesis Spider-Man.
It also had a good swing.
Did they?
So I'm also a professor in game development, and in my Intro to Game Development class, I actually use the Spider-Man 2 swinging mechanic as an example of all these different disciplines coming together to make something that has a right, specific kind of feel.
So my question is, because you talk about...
having animation, having sound design, having game design, having all these mechanics and tech all coming together, how big was the team that actually worked specifically on the swinging mechanic, and how did you communicate the philosophy and approaches and the balancing to that team?
The question is, how big was the team that worked specifically on swinging, and how did we handle communication within that team?
And I don't have an exact number.
Dozens of people touched the swinging at one point or another during its evolution.
One, where places where we thought communication were close, tight communication was essential, there were parts where we, yeah, we will put Jason Bear, who is implementing the coding side of the animation, right next to James Ackery, who is making the animations, and they will...
He will provide a pose and Jason Baird will integrate that pose and vice versa and making that piece as a unit.
But then maybe you have something like audio which is a little more separate, a little more like here's Tom Hayes in his sound room.
making the audio and then handing us the sound files later, which Jason or somebody implements.
Yeah, all over the place.
Hard to have a good, tight answer.
We're flexible.
Thank you.
Is that it?
We done?
All right, thank you, thank you so much.
It was great to be able to talk about this again.
Thank you.
