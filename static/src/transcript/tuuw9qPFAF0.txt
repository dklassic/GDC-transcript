My name is Nick Van Vught. I'm the community lead at Yukon Games.
We're a mobile game studio located out of Toronto, Canada, which you can probably tell because after one day in San Francisco, I have a sunburn.
Today I'll be talking about balancing community and business from a community-focused angle.
I've been asked to remind people about silencing their noisemakers, and please remember to fill out your evaluation forms when you get the email notification.
They're extremely useful in helping improve the Community Management Summit.
At Yukon, we're currently refocusing our brand with Kings of Pool and Sony partnered titles such as Who Wants to be a Millionaire and Jeopardy World Tour.
But it's not just these games that we have experience in.
We have a decade of history in the mobile market with RPGs, MMOs, action adventure, sports and casual titles that we've worked on in the past.
I've been at Yukon for almost seven and a half years now, but our company history reaches even further back than that.
So what am I talking about when I say the tightrope of needs?
It's better to not think about walking a tightrope like this.
It should be more enjoyable like this.
Community managers act as intermediaries between the community that we're responsible for and the company itself, be that the product team, designers, project or general managers, anyone who's making decisions as to what the game looks like or how features are brought to life.
The problem is that for the most part, this is often in direct conflict, especially in mobile free-to-play.
The needs of the business, with key performance indicators like revenue, engagement, and retention, are almost always at odds with our responsibilities.
Our community's needs can easily be outweighed by the company's goals.
The biggest problem is that most people see the relationship between product and community like this, and not like this.
And please forgive the cheesy photos.
This isn't a presentation about holding hands and singing Kumbaya.
In fact, most of the decisions I've come up against from the product team have led to massive increases of complaints and concerns.
But ultimately understanding where both perspectives are coming from can ease not only your working relationship with these people, but help your community get what they want and need out of this relationship.
There are three techniques I've used to attempt to better bridge the gap between these two worlds which I'm going to be talking about today.
The first is to think like a product team member.
It's not necessarily about changing your ideology to match theirs, but to see concerns from their perspective.
Next is to investigate vocal members of your community, preferably ones that can help your product team understand player concerns.
Finally, increase community visibility.
This will help your product team along with the rest of your company understand what players are passionate about.
Before we can dig into those ideas, you have to understand why the product team may not take everything you say so seriously.
One of the biggest reality checks I've done at Ukin was investigating players who would email us or post on social media that they were quitting the game.
As a community manager, whenever I've heard that someone's going to quit, I've thrown up warning signs to our product team.
For my gut reaction, it means that something that the product team has introduced is not performing as well as they had planned.
It can often feel empowering to prove to the product team that what they're doing is wrong and that the dissent from the community should be heard.
But that's not always the case.
Many users would email us over and over again saying that they were going to quit if the feature that we introduced was not removed or changed, but this couldn't be the case.
If players kept threatening us and yet continued to play, it was at direct odds with their threat.
I was a bit frustrated.
It felt like regardless of how many players threatened to quit, no one on the product side seemed to care.
So I decided to do an investigation for my own sanity, cataloging hundreds of emails over multiple years of the company's history where players specifically threatened to quit.
I then cross-referenced the data with our user reports and found that 13% of the users who threatened to quit did so within 24 hours, 5% within a week of contacting us, 4% more within two weeks.
An additional 4% at the 30-day mark, nine more percent at 60 days, but overall, 65% of those users didn't quit.
I then cross-checked the email churn rates against the industry gaming average churn rates, and it was even more clear that the players who were threatening to quit had a 50% lower chance than even the average, making this even less of a concern for our product team.
Even though we had the metrics indicating that some players were lapsing, the 65% of players who didn't lapse were the most interesting.
These players give context to community complaints and give the product team a better idea of what the vocal members of the community were tolerant of.
Sometimes players just need an outlet to vent and we have to act as the punching bag.
While doing the investigation, I wanted to look into the day-to-day volume of the complaints that we were getting from our players around the time we rolled out specific features.
You can see little bumps in the complaints each time we introduced something, or nerfed the economy, or rolled out something new.
And since the product team knew that it could be more aggressive and not lose players who are unhappy, they continued to roll out features that had a bigger impact.
This include more nerfing and introducing more aggressive features.
And that's where you start to see these bumps.
These fluctuations accounted for more than a 50% increase in our daily email volume, with over 40% of that volume coming from new tickets alone.
When comparing these peaks and valleys of community concerns to our MAU, the pattern becomes a bit more clear.
Our contact rate is increasing not only because players may be vocal, but because we're gaining more daily active users.
And it's hard to look at the big picture from an analytical standpoint when you're used to being bombarded by negative emails on a daily basis.
A similar pattern can be seen in our revenue growth as well, though, with an increase of over 10% week over week during some of the more vocal increases of complaints.
For a product or development team, the negative feedback is inconsequential if it means that the changes that they're making are having a larger impact on the KPIs that mean the most to the company.
Some players may leave or be driven out by these changes, but as long as the metrics are moving in a positive way, it's difficult to point at negativity as being bad for the company.
So how are you supposed to keep players happy and work with your product team if you spend your whole day dealing with the fallout of their choices and responding to players whose understanding of how the game works may shift on a weekly or even daily basis?
I think when I tell people that they need to think like a product manager, they feel a lot like this.
But I have an art degree, they say.
I promise you it's not nearly as terrifying.
It's easy to think the product team and developers as the enemy.
They have a tendency to make your life more difficult, and all the anger from their decisions is usually directed squarely at you.
And I can't believe that I'm using a prequel GIF in this presentation, but I've often found myself thinking like I'm on the light side of the force trying to battle against the evil that is the product team.
I also feel like being a community manager has aged me just as poorly as it has Yoda.
The first and easiest solution to combat feeling like it's you versus them is to think like a product manager.
What I mean by that is just understand what their motivations are and find ways to appeal to them.
Get into their headspace and approach feedback and concerns from where they will inevitably position themselves. As I mentioned before, the key performance indicators that appeal most of these teams include revenue, engagement, and retention. But the most important by far in free-to-play is revenue.
Since we're talking about vocal players and spending players, it's important to put this in context on an even larger scale.
So when looking at the total number of combined posts in our game's most active forums, we were able to find out the percentage of users who had posted and were participating in community discussion.
About 0.6% of our total active users.
Then when you break down that 0.6% into how many of those vocal players had also spent within the game, and remember, these are the users that the product team actually cares about, you're looking at an even smaller fraction, under 1% of the 0.6% we've already established.
What this effectively means is that of all the players who have active accounts in the game and who have spent at least a dollar, we were only hearing from 0.006% of them.
And those are the people that product cares about.
So this number can help you immediately understand why they might not care about a vocal player's concerns.
Knowing how to communicate with your product team means helping them target the KPIs that matter most to them and figuring out what spending players want out of the game.
This can help you better connect with your players and give them what they want.
The fastest way to put this kind of ideology in check was to run an in-game survey asking players for their opinion on a feature that wasn't performing as well as designed.
By default, the feature would automatically play the game for you.
No user input required.
We had heard some grumblings from players in the past who were a bit confused about the automatic option, but it was never enough to lead to any definitive changes or warrant a major overhaul.
We wanted to ask players directly if the manual option would make the feature more appealing.
So I asked a few quick questions to determine if the lack of traction was due to the feature's design and if there was a way to tweak it to make it work better for players.
68% of the respondents were positive in their reply about a potential change, allowing a manual override, with 17% being neutral, not caring one way or another.
Although the 16% negative to change was intimidating, the remaining 84% who were positive, or at least neutral to the idea of implementing a manual option, was enough for the team to attempt to salvage the feature.
Based on the feedback alone, we implemented a change and introduced the option for players to toggle between automatic and manual, giving them the freedom to choose how they wanted to use the feature.
Doing so improved day one retention by 40%, all because we listened to player feedback.
So this was enough to show product that we can work well together and provide them with the feedback necessary to improve the metrics they hold so dearly.
In order to circle back around and close off my Star Wars reference, with these kind of results, you start to feel like the response from the dark side is more attuned to this.
So let's switch gears and talk about investigating vocal players.
Most high-spending players provide feedback that's contradictory to a product team's ideologies.
Suggestions for features that allow them to play for longer or not have to spend any money in the game come up frequently through our channels, but there are still many pieces of user feedback that are extremely valuable to your product team.
I wanted to spend a bit of time talking about a user who I'll call Martha.
Martha is an extremely vocal player who plays both our Jeopardy World Tour and Who Wants to be a Millionaire apps and emails us a few times a week just telling us what she thinks about the game.
Anytime we mention her around the community team, the result is pretty similar to this.
Since November, Martha has emailed us 80 times.
And that doesn't count back and forth responses, which usually average anywhere between 10 to 12 times every single time she emails us.
Now, Martha isn't mean to us, she's just very vocal and has a lot of feelings about the game.
If she was a non-spending user, the feedback would be lost to our product team.
But fortunately, Martha has spent $3,000 in the game.
This isn't a huge whale in mobile terms, but it's someone with enough purchases under their belt to warrant some attention.
The problem was Martha had been complaining for a while that she hasn't wanted to spend recently because nothing we were offering her was a good deal.
We wanted the game to perform well and we want our VIPs to feel like they're getting a good deal, but if Martha was complaining about this, I felt at the very least it was something we should look into.
Product is usually looking at overall trends that show change in the KPIs that they're tracking, but they don't usually look on a per-user basis unless there's an anomaly.
Since we had a connection with Martha, I wanted to spend some time seeing what her behavior was like in the game.
I found this incredibly helpful in making a better connection to what's important to our players, so you can understand why they're passionate about certain elements in the game.
Using products tools, I didn't see anything outside of the ordinary from looking at her action count or number of sessions or even win rate within the game.
But when I started looking at her soft currency, I noticed a glaring issue.
Effectively, Martha's soft currency wallet, which allowed her to keep playing more games, was completely out of control.
For months, it just continued to climb higher and higher to a point where she didn't have to make any more in-app purchases to play the game.
The general wallet size of our players wasn't segmented in a way that allowed us to drill down into specific player concerns like this, so I manually checked other high-spending players who were around the same user level as Martha.
We had around 150 unique users who fit a similar trend.
They had climbing soft currency wallets and weren't spending as much as they once did.
The only commonality is that they had maxed out the content in the game and had found an exploit that effectively allowed them to play almost indefinitely.
Here you can see the massive amounts of soft currency these players were getting.
Regardless of how much they were putting into the game, they always got more out.
And to decode this graph, the purple you see is the entry cost to play a stage, and the pink is the rewards.
So I was able to identify a player concern that tied into a product concern targeting their most important KPI.
This made it easy for me to then work with the product team on a solution.
Our vocal players and VIPs were going to affect their bottom line, and in order to find a solution, we needed to implement a change.
So we decided to put out a new stage that should address some of the end game balancing concerns that we were hitting.
It needed to be accessible after the current highest level to encourage players to spend for larger rewards.
And it also needed a lower return to player investment, a higher entry cost, and a higher win rate.
If players were winning more often, the thrill of that success may outweigh or outbalance the less frequent big wins that they were used to.
From a product perspective, implementing the stage was a huge hit.
Breaking down the results from the level buckets who had access to the new stage showed that average revenue per daily active user increased by 22%.
A downside was that total engagement along with the number of matches played on the main screen decreased, but this made sense as we were throttling the number of games users could play in these stages by increasing the stage cost.
Although engagement is an important KPI, as I mentioned, it's nowhere near as important as revenue.
Finally, the amount of soft currency spent in this level group doubled, meaning that we had introduced a feature that was successfully addressing the bloated wallets of this player group.
leading to more opportunities to spend within the game.
Since implementing the new stage, Martha has started spending again and hasn't complained about any in-app purchase options.
Finally, let's talk about increasing community visibility within your organization.
There's a common misconception to protect the company from player negativity if it isn't directly bug-related.
Negativity can cause issues with company performance or morale, but without being aware of the temperature of your community or knowing which issues players are passionate about, product may make incorrect assumptions about what your community enjoys or doesn't enjoy within the game.
In my opinion, qualitative feedback should always come hand-in-hand with quantitative.
Each and every time we launch a new game, we create a Slack channel that automatically funnels feedback from reviews and emails.
We intentionally pull reviews from Google and iTunes that are three stars and below to get the most constructive feedback we can.
We also leave the Slack channels open for the entire team to view and encourage anyone in the company to join.
The functionality we're using also allows QA and product to notice glaring issues as they happen.
We track user device information and the speed in which player reports come in.
Again, it's important to consider these comments in context and with a grain of salt.
Not every comment holds the same weight as the next, but it still allows your team to see what is going on and get the general temperature of the community.
The fortunate part is we didn't even have to twist the arms of our product team to join.
They wanted to hear what our players were saying.
And we found that traction on player feedback through these channels was much more effective than a weekly email summary, which can often get lost in the day-to-day.
Increased community visibility on its own can be a bit problematic.
Even though we were pumping a lot of comments of varying quality into the channels, it's easy to get bogged down by negativity where players don't offer additional feedback.
Make sure product is aware that there's lots of comments that have no additional context and could potentially be there to ruin morale.
There are quite a few comments where players imply that the game is bad, dreadful, terrible, garbage, trash, or that it sucks, but no additional information is ever given as to why they don't like the game.
Community is more accustomed to these comments and can mentally weed them out instead of getting hung up on them.
But it's important for the product team to be aware of the toll a bombardment of negativity can have and find coping mechanisms in the same way that the community team has to.
At the very least, this allows the product team to understand and sympathize with what the community has to go through.
It's helpful for the team to also understand that these comments are just the tip of the iceberg for negativity.
Likewise, we sometimes get the exact opposite, where players will sometimes shower us in praise and give us one star, which causes a lot of confusion for our product team.
It's difficult to explain to them that there's simply a disconnect, and even if we were to ask for more information or details or encourage players to rate us higher if they are indeed enjoying the game, they will often ignore us.
On the plus side, this type of feedback can help product understand where to place rating prompts within the game and help identify when issues with the first-time user experience happen.
So despite some confusing comments, exposing our product team to our players' feedback created a level of compassion that I was unprepared for.
Shortly after being exposed to one of our public-facing community channels, one of our product team members was encouraged by player feedback to preemptively curb complaints by creating a Make It Right campaign.
The thought was that before players could even complain, we would communicate the changes being proposed and gift them with some currency to avoid some frustration.
In mobile free-to-play, this type of campaign can happen for balancing changes, but this was the first time a product team member at our company was the first to preemptively suggest it without community needing to scramble last minute.
Logging in, players would be greeted with a pop-up that said that we appreciated them as members of our community and alert them to the fact that there's been a change in the game.
It also had an explanation of what players were getting out of this change, in this case a free gift.
And finally and most importantly, where to find this gift, which honestly is a lifesaver because players can never understand when something's added to their account.
So were players happy?
I mean, the short answer is no, but it wasn't nearly as much dissent as we were used to because we were preemptively transparent about what was happening.
Players will always hate changes, especially when those changes affect their ability to play more frequently or change the payouts of features within the game.
Even with the Make It Right campaign alert, we still saw a nearly 300% increase week over week in complaints, which sounds bad, but compared to other features we've rolled out in the past, this was a walk in the park.
For instance, in this example, we had an issue with a feature that wasn't communicated well, and then also broke, which led to an over 1,000% increase in emails.
The point is, even when it's not perfect and players are still frustrated, it helps to know that you're doing everything in your power to make things better by helping your product team understand the frustration that players are experiencing.
Here's another example of increased visibility, where players consistently complained about a cool-down feature in one of our games.
In Who Wants to Be a Millionaire, you can use something called an expert, who has expertise in specific subjects, and will assist you in responding to questions as a lifeline.
Players can collect experts and upgrade them to increase their efficiency, but due to a built-in cooldown, they'll have to wait for them to become available to use again.
There was no communication about a cooldown anywhere in the game, and when a player's expert couldn't be used, there was no indication as to when they could be used again, which led to a lot of player confusion.
We would receive multiple complaints every day asking what they were, how did they work, and why they couldn't use them anymore.
So we alerted the product team about the concern and decided to work on better communicating the cool-down feature.
Where before players had to guess which of their experts were resting, we now had a little clock icon as indication.
And additionally, where there was no cool down timer before, we now had a very noticeable alert that said when the expert was going to be made available again to our players.
Now there certainly couldn't be any excuse as to why players didn't understand expert cool down, right?
I mean, it's all well and good that we tried addressing such an overwhelming concern like this, but players were more confused than ever.
We were getting more and more complaints indicating that players had eventually adapted and learned how to use the previous lack of user interface and we're now struggling to understand how to use something that made the feature much more clear.
Here's another graph indicating the volatility of complaints about this feature prior to us implementing the fix.
And you can probably tell where this is going because here are the metrics from after we implemented the fix.
A major spike like this isn't unheard of, but it felt completely opposite to the results that we were expecting to see.
As community managers, we have to try to assist our players in better understanding changes, even if it's a painful outcome like this.
Last winter when we implemented avatar customization in Who Wants to Be a Millionaire, players were again very confused.
The idea was to give players the opportunity to show off events they've completed by decorating their profile with hats and unique borders.
But product had assumed that the functionality of the feature was very clear and self-evident, but based on the feedback we were receiving, this wasn't the case.
Players were introduced to customizations, but the feature was sparse and only displayed a default option that was enabled automatically for everyone.
There was no FAQ or even pop-up about the feature.
Players were just supposed to unlock more customizations as they played.
We convinced the product team to show players what kind of rewards and customizations they could unlock by showcasing them directly on the screen.
Players could now see what kind of customizations were available.
And somehow, we even managed to convince the product team to throw in an FAQ tool tip, just to help with any other stragglers who still had questions.
The initial spike, there you go, was the first week rolling out the feature, a considerable increase week over week on our email count.
The initial confusion wore off and we were able to respond to players with custom macros, but we were still receiving dozens of reports every week until we implemented the update.
Once we introduce the FAQ and the additional visual aspects to help clear things up, emails about the subject in the last month have stopped almost entirely.
Player feedback can be a bit of a mixed bag.
Sometimes it works out, and sometimes it doesn't.
The important thing is to let the team know what the community is passionate about.
Let their voice be heard in order to better get across concerns, and ultimately attempt to make the game more clear, even if there are road bumps along the way.
Remember, it's important to think like a product team member.
The number of emails we get aren't a main indicator of an improvement's success.
Look at the metrics and see how these features are performing.
It's my hope that with some of these insights, you'll be encouraged to work more closely with your product and gaming teams in a way that enforces and encourages collaboration.
Remember to think like your product team.
Understand what makes them tick and how to be able to effectively communicate what your players want.
Investigate vocal members.
Identify if these players are able to affect or enforce any change in your product team's eyes.
Finally, increase community visibility.
Don't wait for people to ask how the community feels about a change made in the game.
Give them every opportunity to see how it affects perception as quickly as possible.
Working together helps your team understand the point of view of more people in your organization.
And in a perfect world, your team will start considering how the community may react to features before they release them.
Maybe one day you can hopefully call yourselves best friends.
So thanks so much for listening.
This is a goofy photo of me and the product team.
We really do work together literally every single day.
I talk to every single one of them, and we try our best to make things work.
In the interest of time, I can take some questions outside, I think would be best, or at the Overlook, 3022 and 3024.
Thanks again, everyone.
