Hi, I'm Josh Manke.
Thanks for coming and welcome to my talk on matchmaking for engagements.
Hopefully you'll enjoy this and it'll be engaging for you.
So let's get into the talk.
So first let's define what matchmaking is.
We're talking about the kind of matchmaking where players in multiplayer games want to get in matches to compete with each other.
So you have a group of players, they wanna play.
They submit some information to the matchmaker about themselves that the matchmaker can use to create a good match.
The matchmaker takes this information about many people and then puts them into matches and creates teams for them to play.
OK, now, so what is engagement?
Well, the dictionary tells us that engagement means to be greatly interested.
And so we want our players to be greatly interested in our games.
And this is accomplished through gameplay.
Matchmaking is there to guarantee that the gameplay is experienced as intended by the players.
So a lot of the time we're just preventing disengagement by making sure that players can play the gameplay and have a good time with it.
So now on a good question to ask is, how is matchmaking then related to engagement?
So we'll go back to our players.
They wanna get into a match.
Here they are, they jump through matchmaking, matchmaking puts them into a game, they enjoy your engaging gameplay, and then afterwards they jump back into matchmaking because they are engaged and they want to keep playing.
Now, where matchmaking comes into this though, is what happens if they go into a game, but the latency is so high on that server they're playing on that they can't really play the game right.
that could disengage them.
Or maybe they're just not good enough to enjoy the gameplay.
They're so bad compared to the other players in the match that they aren't even able to play very much.
Or what happens if they just wait so long that they never actually get to the gameplay?
So these are some things that we tend to try to prevent and avoid with matchmaking.
We want to cause those to not happen.
But a good question is, how important are each of these characteristics?
Latency, fairness, wait times.
Which ones are more important?
That's what we're going to get to next and what I'm going to want to talk about a bit.
But first of all, a good question we can ask is, why do we care what's important?
Can't we just throw it all into the matchmaker, let the matchmaker just sort it out?
And the answer is, not really.
And here's why.
We create a situation if we do that called having too many buckets.
So as a player we want to matchmake on skill, say.
That's already reducing the number of players that I can matchmake with.
Let's say my skill bucket is only 15% of the whole population, okay?
But now, and then we're like, well we also need to be careful with latency.
So that's another, it's only 10% of players that I can match with because of my latency. And then we want to do some fun, fancy, cute, reputation matchmaking.
and let's say there's only 5% of the players that my reputation makes me able to match with.
Once we've broken out all these different buckets of players, we've reduced that player from being able to match with the whole population to just 0.08% of the population.
Suddenly, even a large population becomes very small if you do that.
That's why you need to be careful about just letting the matchmaker do it at once.
Because we used Halo 5 for the analysis in this presentation, I'll quickly review what Halo 5 is about.
So Halo 5 is a first-person shooter.
It's the matches and data we used came from competitive matches.
It's most of them are team-based.
It's usually four versus four, but it can go up to 12 versus 12.
A lot of our matches are team deathmatch, although there are some objective matches as well.
Now because skill and fairness are often some of the more important characteristics we tend to matchmake on, I'll do a quick skill system review.
This talk is not going to go in-depth on skill systems, because that would take forever, but it is worth reviewing them to understand how they work into matchmaking.
So we have a player, but we want to know how good that player is.
So we put a number on them. That number should represent their skill.
Now, we use the skill to compare players to other players.
So given two players, we can then figure out the difference in their skill from each other. Now a good skill system, if it's working right, the player with the higher skill should win most of the time. We also want to take this same concept to the team level.
And one way, simple way to do that, for this talk at least, is just to take the average of each team. Take their average skill, average the numbers on both sides and then take the gap between them.
And I call this the team skill gap.
And it helps tell us which team is going to win most of the time.
Now we care about that team skill gap because that tells us how fair the match is. If the players have the perception that they can win the match or not, that is probably important to them.
But there's another type of fairness or another type of skill gap we care about besides the team skill gap.
And that focuses on a single player and their experience in the match.
We want to know what's gonna happen when this player comes around the corner and runs into another player on the other team.
Are they gonna have some success against that player?
Are they gonna feel overwhelmed?
And to represent this, we reduce the team, the other team's skill again to an average.
And we just compare the player on one team to the other team's average skill to get an average feel for what's gonna happen when the red player encounters a blue player.
And in this case, again, that should feel pretty good because the blue player has a skill that is higher than the other team's average.
And in this talk, I'll call that the personal gap, the personal skill gap.
So we have two pretty important skill gaps we care about, the team skill gap and the personal skill gap.
So now what we want to talk about is how important are these different characteristics?
We've talked about skill, we've talked a little bit about latency, wait time, and you've probably also heard of people being worried about losing streaks.
These points here are some of the more commonly used items in matchmaking, or at least items that developers tend to think are important.
So the question is, are they really important?
And that's what this presentation is going to try to find out.
So how do you find out if something is important?
The sort of industry standard these days is to use something called A-B testing.
But the problem is matchmaking actually breaks A-B testing.
I'll go maybe a little into that later, but it has an issue with it.
And so we can't just use off-the-shelf A-B testing to test what's important.
But we can do something called an observational study.
In this case, we could look in our already existing data and find situations that match what we would like to test.
We find matches where the ping was really bad and see how players reacted.
Or we find really unfair matches or really fair matches and see what the players did afterwards.
So we still have some very powerful tools to use and to be honest a lot of the most important studies that have been done in science have been more observational than more controlled experiments like A-B testing.
So let's start with the personal skill gap.
Again, that's where I'm a player, I run around the corner, I see an enemy, and will I have any success against that enemy when I have an encounter with them?
The idea being, if personal skill gap is really important, what can we observe in our data to see if it is important?
Well, one theory is if it's really important, then players will play more matches when the personal skill gap is smaller.
As long as they have some success and they're able to play the game, they'll play more.
So to further illustrate this, we have a player who plays a lot of matches, and he's playing a lot of matches because the gap, the personal gap from match to match was small. So he was happy. He kept playing.
We contrast this with a player who has matches that have large personal gaps.
This player is more angry. He's going to play less matches.
So we should be able to construct an observation, pull some data out and see if we actually notice this in our data.
So we'll go into our data and we'll see what actually happens and see if players do play more matches when those gaps are lower.
So we grab a player, grab all of our players, but let's just for example show what happens with one player. We grab Bob. Bob's played several matches, so we know how many he's played here.
Now we know Bob's played seven matches and now we want to see what was the gap in those matches, right? So we write down what the personal gap was for Bob in all those matches. Now if we do this for all of our players we can start to build a data set.
That data set kind of looks like this.
We want to know for every player, what was the average personal gap they experienced across all their matches that month?
Like ideally that would be low.
And then see how many matches they actually played and see if there's a connection between those.
So write down Bob, we've already said that he's played seven matches.
We average those gaps out and we see that the average across those values is 67.
So Bob has had a gap of 67 and played seven matches.
We then do this for other players like Alice.
Alice had a higher skill gap, personal one, in those matches that she played, and she tended to play less matches.
Maybe that's related.
So we'll keep doing that across everybody who played for the whole month.
And then we wanna bucket those to make it a bit easier to graph.
So we can't just plot them all on a graph.
We could, but it could be kind of confusing.
We wanna find a trend though.
So instead, we take all the players who say had a personal average skill gap of 50 for that whole month.
And then we average how many matches did all the players with a skill gap between say 50 and 100, how many matches did they play?
Well, they played 100, so we'll write that down.
And then we'll do that for all of the other buckets.
For each bucket, we'll keep note of how many matches the player played.
if they had an average personal skill gap.
So again, we're connecting what was my personal skill gap experience to the number of matches I played.
And so we did that and we graphed it.
Let's see what it looked like.
So if you look at this graph, you're like, wow.
You'll notice that as that average skill gap goes close to zero, meaning the perfect sort of matchmaking of perfect fairness for the player, the number of games the player's playing is the highest.
They'll play more games if we keep that gap low.
So you might think, well, we're done.
We've shown that personal skill gap is definitely important.
The problem is we're not done.
This is bogus. And let me explain why.
So whenever you do an observational study, a good sort of trick you should try first is to reverse whatever your hypothesis was, whatever your theory was, and make sure that that reversed hypothesis can't also be a thing.
So in this case, our original hypothesis was if the average gap is small, players will play more matches. So if we reverse that, we ask if players play more matches, will that make the average skill gap that they play smaller?
And the answer is yes, it will, because we are in Halo 5, we are skill matching. So on average, as you play more matches, the average will tend towards zero.
If you just get a one-off match here or there, it may be extreme.
You may have some one-offs there.
And so we may find players who have these random matches out there who only played one game, but we don't know if they only played one game because the match was bad or if the match just happened to be an outlier and they only just happened to play one game.
And it's because they didn't play a lot of games, it didn't average out.
So we can't use this approach right now.
And that brings up a general thing to be careful of.
You want to make sure that whatever your metric is.
It's the effect and not the cause.
So our metric is an average matches played.
Unfortunately, playing more matches causes better matchmaking.
So we can't use that approach, unfortunately.
So what can we do?
Well, let's go to a different approach.
We can, maybe we can't average over a bunch of matches, but we can probably just look at one match and see what happens.
So let's see if a bad match makes them quit out of the match.
And because if something's important to a player's matchmaking experience, we'll suppose that they will actually leave the match if it's bad.
And again, we'll call this quitting, quitting out of a single match.
Now, I know there's more to engagement than the player just leaving one match.
But still players leaving matches is bad.
It ruins the match for everyone else in the match, not just the quitter, and it probably leads to disengagement later.
So we'll start there because that takes care of our issue that we had with the correlating the two cause and effects.
So if personal gap really is important, players will quit if it's too large.
That's what we want to now show.
They'll quit out of a match.
Now, how do we do that?
So this is what we're talking about, just to review.
We have our players.
They go into the matchmakers, they ask for a match.
Matchmaker puts them together.
However, that dark blue player, his skill is way worse than the red team.
And so he's not even able to play really.
Every time he just tries to do anything, he tries to go grab a weapon off the map and he just gets killed.
So he's not really actually able to enjoy the gameplay and he quits.
And we want to look in our data and see if this actually happens.
So let's again see how we would set that up.
So let's talk about what kind of data we're gonna gather to do this study.
First, we need to know what match it was.
So we're looking at individual matches now, not a player across a whole month.
So we need every match.
We need to know the player because we're looking at did a individual player quit out of a match?
And what caused them to quit?
Well.
Our theory is a high personal skill gap will cause them to quit.
So we'll be looking at the personal gap for this particular match.
And then we will look at did they actually quit the match? Did they leave the match early?
So we'll have data kind of like this. We'll have a match ID, some random number.
We'll have a player's name. In this case, we've got Alice.
And Alice played a match and the personal skill gap she experienced in that match was 100.
And did Alice leave the match early?
No, she didn't.
So Alice was okay with the gap of 100 in this particular match.
Now we do that for Bob also.
Let's say Bob was also in that same match, but Bob was much worse than Alice, and therefore he did leave the match early.
And we continue doing that for all of the players for all of the matches in the time period we're measuring.
And again, we're gonna bucket it just like before.
We're gonna take all of the players who experienced a gap of up to 50 throughout all their matches for every single match and see whether or not they quit. And we'll do that for each of those skill buckets for personal skill and then we will graph that and see if personal skill does lead to quitting. And it turns out it does. It turns out at least in Halo 5 for us, the higher the personal gap, the more likely a player will quit.
So that is important to us. And if you do the same study, look in your data, And you see a similar graph that tells you that you can reduce quitting by matchmaking on that personal skill gap. By reducing that gap, you know you can reduce quitting. So in fact, in this case, it reduces the quit rate by over 20 percent, which is a pretty big deal. Another fun thing you can do with this graph is you can pick out using this data.
which skill gaps are okay and which ones aren't.
This graph sort of suggests that at first players aren't as sensitive for a few hundred worth of that skill gap.
And as it increases though, then they become more sensitive.
So you can both use the graph to tell you it is important and you can use the graph to tune your matchmaking.
So the takeaway here is that personal skill gap is important to matchmaking.
And if you tune that gap, you can reduce quit rates to whatever you think is more important for your players.
So we've spoken about the personal gap.
We've seen the personal skill gap is important, but what about the team gap we also spoke about?
So this is less about a player being able to engage in the match and more about, as a player on a team, do I feel like my team even has a chance to win this match?
Is that important to our players?
Are they okay playing matches that, yes, they can run around and they can shoot people and they get some kills, they can do some objectives.
but they know pretty early on in the match that they're just not gonna win this match.
What'll happen, right?
So if the team skill gap is important, then again, we'd expect something like this.
Players go into the matchmaker, it puts them in teams, and it turns out that the blue team is worse than the red team, so much worse, that they can feel pretty early on that they're not going to win, and this causes them to disengage, and they leave.
This is potentially even worse than the single player quitting out because now we can have several players quitting out of a match. And we want to do a similar observational study in our data to see if this happens as well. To see if players are going to leave early because they just can't win. They might as well just leave. So again let's get our data together. We want players and we want to know for this match what was the team skill gap.
and then did they leave?
So it's very similar to our last one, but instead of looking at the personal gap for every player in every match, we're looking at the team gap.
So we've got Alice again.
She played a match where there was a gap of 100 between her team and the other team, and she did not leave.
Whereas Bob, he played a match where the team gap between him, his team, and the other team was 250.
His team had less of a chance of winning, and he did leave.
And again, we're going to bucket this so we can graph it conveniently.
We'll look at all cases, all matches, and with all per player, where there was a gap of up to 50 and see how often did players leave in that gap.
Now, because it's now we're still looking at this per player per match, a match can have four players in it.
Each of those players could have some chance of leaving.
And in theory, that would be around the same average chance of leaving.
So as a quick hack, it's not the exact right math, but it's close.
We multiply the chance of a single player leaving by the team size, which gives us a rough approximation of the chance of any one player leaving the match.
And we graph that again to see if team fairness is important.
And in fact, it is.
And in fact, it ends up being even more important.
like the quit rate with just a 100 rating difference will double on our players in Halo 5.
We can have a guaranteed quitter when that rate quit when that skill gap gets up in the 400 range.
So again this tells us here that as the team skill gap increases the chance of players quitting out is going up very quickly and it's very important to our players.
So the takeaway here is, yes, the team gap is important, even more important in some ways than the personal gap.
It will lead to more quits.
And we can use that graph again to tune which team graphs, team gaps are appropriate for our players.
So go ahead and do that in your own games.
Find out how important this is so that you can improve their matchmaking.
Now, some of you may have actually done similar observational studies already.
And you may say to me, you know what, we've already tried that, doesn't work.
Skill gap in our game, at least, we know it doesn't matter.
And my answer to that is maybe. Because there's something else that we did that we were curious about. See, we actually switched skill systems recently.
And our old skill system, which is closer to what is the standard today in the industry, we still run that in parallel with our new skill system.
So we could go into our data and run the same observation using our old skill system to see if when players have a high skill gap in our old system, do they quit out of matches? Because if they don't, that means that it's not that skill doesn't matter in our game, it's that the skill system doesn't capture what's important to players in terms of matchmaking.
So let's see what it looked like. So as you can see here...
The old skill system is flat with respect to quitting.
As the skill gap increased in our old system, players didn't care, they didn't quit.
What that means is that skill is important because as the blue line shows, players do quit as it increases, but it's not being captured or controlled by the older skill system.
So don't just give up on skill because your data says that it's not important.
You need to first consider whether your skill system is capturing what's important to your players.
And so you're asking, well, what is important?
What's the difference between these systems?
So let me discuss what the two systems were.
Previously, we used Classic TrueSkill.
In Classic TrueSkill, which is a solid system, I've used it for years in many games, it only looks at the winning team though when it decides to evaluate how well the players did, which players are better and worse.
And it needs a lot of matches to do that.
It can be up to 80 to 120 matches or more when we're talking about 4v4.
True Skill 2 also incredibly values the winning team.
It's a very important part of how it decides who is good, but it also takes into account several other factors that enable it to be much faster and more accurate than classic True Skill.
It looks at how many games a player has played so far.
It looks at the party size, and maybe even more importantly, it's looking at kills and deaths, which in Halo 5 are very important to player engagement.
So we have objects, we have events that are in our skill system that are also important to how players are able to engage within a match. So and again, having this data available also makes the system much more quickly figure out how good our players are, so that when we're looking at those gaps in our data, they're more likely to represent an actual skill gap between our players.
Now, just to be clear here, this is still just one number per system.
We're not like using a whole bunch of extra numbers.
We're not creating lots of extra buckets.
Both of these systems boil down skill to just one number.
So again, the takeaway there is don't just discount skill gap being important to your players.
Think about your skill system first because which one you're using does matter.
So let's do a recap of the importance of skill gap.
We've seen that personal skill gap is important in Halo 5.
We found that we were able to get a four times drop in quit rates by matchmaking carefully on that personal skill gap.
Also, team skill gap is important.
Fairness is important to our players.
So both of those, both whether or not our players are able to come around the corner and have a chance of a good encounter with an enemy opponent, and whether or not the match actually feels like I can win as a player.
Those are important to our players.
We're able to have the quit rates drop by about six that way.
Now you may ask which one matters more?
Well, the data tends to suggest players are more sensitive to that team balance skill gap.
And luckily, team balancing ends up being a little easier as long as players aren't in full parties, you can shuffle them around and get a good team balance, even if your initial matchmaking didn't come out as good. So it's a little bit easier, but yes, players tend to be more sensitive. You're more likely to get a quit out of a match with a bad team gap in there, team skill gap.
So find out which is important to you. Go look in your data, see which skill gap matters to your players, and then use those graphs to tune how you're going to matchmake them.
And again, remember, your choice of skill system does matter.
Don't just discount skill because your skill system isn't detecting any sensitivity.
Think about whether your skill system really is measuring what's important to your players.
So up to this point, we've been using whether or not a player will leave a match to show us how important these different characteristics are, in this case skill so far.
The question is, can we go beyond though, just what happens in a match?
Because maybe a player quits and maybe he goes and plays again.
Yes, it does kind of ruin the match for everyone else, but we still want to know, can we go beyond just a player leaving a single match?
And the answer is yeah, we can take a player, we can observe them going into matchmaking, they experience the gameplay.
Hopefully they're engaged, that personal skill gap is small, so they keep playing match after match.
Now, in theory, if that's not the case, they would stop playing for the night.
They may finish the match, they may not even quit out of it, but because of their experience in that match, they may decide that they don't want to play any more Halo 5 that night.
And this is also important to us, maybe even more important, because if players are quitting not just out of matches, but out of your entire game, it's kind of ruining your population overall and just making the game worse.
So we want to go and measure this basically.
We want to see, are players not quitting just the match, but do they leave for the night?
Because if, say, personal skill gap is important, wouldn't they stop playing?
So how do we do that?
Well, we set it up very similarly to our other experiments already.
We get each of our players, we've got Alice here.
We know what her team skill gap was for that match, or we know what her personal gap was for that match.
And instead of asking, did they stop playing, did they leave the match early?
We ask, did they stop playing for eight hours?
Or did they take off and not show up again?
And we look in this case that Alice had a match with a gap of 100 and she kept playing.
Whereas Bob had a gap of 250 and he stopped playing.
And we wanna average this over all of our population, our players, our matches.
bucket it again and graph it and see if the skill gap not only causes quits out of matches, but does it cause them to quit out of the game?
And it turns out it does cause them to leave the game for the night. As this personal skill gap, that's what this one is, as the personal skill gap increases, so does the chance that a player will not only quit out of a match, but they may leave the game for the night.
And this can go to be as high as a 40% chance that a player is going to turn off the game for the night because of a large personal gap.
Which means it's very important to our players to not have matches where they are so much worse than the other team that they can't really engage.
So let's look at the takeaway from that.
The takeaways are kind of the obvious ones, right?
Players will disengage if the personal skill gap is too large.
And we can again, use these graphs to tune and pick what type of personal skill gaps or team skill gaps are okay for our players.
And again, the nice thing about this is we can go beyond just looking at one match.
Now, I want to switch gears a little bit and talk about a more controversial topic that comes up once you start digging into this data.
And that deals around stacked parties.
The question here being, you got what I call a pre-made stacked party.
This is a group of four friends who are playing together in the party.
When they go into matchmaking, they go in together, and that's fine.
The issue here is that these aren't just four average players or even four very good players. These are like four of your best players. They've decided they're friends, they're going to get together and play, and what this causes is they will play against another group potentially, another pre-made group, a party of friends that are playing together, and that party could be very good, but they're just nowhere near as good as that stacked party.
And what happens is that the stacked party will stop that pre-made party, beat them very badly, and this leads to, if we believe our data already, players disengaging. And not just disengaging out of the match, because, and to be honest, players do quit less out of matches while they're in parties, like this good party here.
but it will still cause them to disengage out of the game entirely, which is even worse.
So what can you do about that?
Because it's, and I'll give you a hint that there's not a lot.
There's not a lot of great solutions at this point to what you do.
You can ask yourself, well, should we just not allow those stacked parties?
Because they're gonna be scaring players out of our games.
And if you do that, you end up making some of your best players, so you're making it so they can't play together.
And that's probably gonna make them sad.
But if you allow the stacked parties, you're being unfair potentially to everyone else they play against, which is a much larger group than the small group of stacked players that want to play together.
And again, there's no super great solution here, but I will just demonstrate what this can cause.
So if you allow these stacked parties, at least I've observed in our data, I've gone and just watched some specific stacked parties and seen what their effect on the population has been.
you can actually watch a single party of four players scare away up to 20 players per hour.
And the problem with that is the math just doesn't work.
If you ask yourself, is it okay that we allow four players to play at the expense of 20 players per hour, leaving your game entirely for the night?
The answer to that is usually that's probably not a good idea.
So what do people do about this?
So in Halo 5, what we do is we just set our matchmaker to allow fair matches.
and it won't allow unfair ones.
So if there's not a good match for that stacked player, they'll end up with a very long wait.
This ends up being better for our population overall, but it can be very disappointing to those players who'd like to play together.
Now, other games have similar solutions.
League of Legends, you can also result in long wait times, but if you're a solo or a duo player, just two of you, you can go into a solo-duo queue and play only against solo players or players of two.
But this doesn't protect your players that are in larger parties that also don't want to get stomped by those.
And it does shard the population, resulting in slightly longer matchmaking for everybody.
Overwatch has another interesting solution.
They basically say, no, if you are too good, you cannot play with your friends.
They just won't even let you matchmake.
They if you're a grandmaster and above in Overwatch, you're only allowed to queue either alone or with one friend.
And this also has some relation to what sports leagues do in order to keep matches more interesting.
They add hard or soft salary caps to promote competition. They tell teams you can only spend so much on your players in order to prevent these same types of issues. So it's not without precedent in general in competing. But again, there's no great solution here, but it is something to think about.
What do you do with these stacked parties? How do you let them matchmake? How do they affect your population? It's worth digging into that data.
Okay, so we've covered skill probably to death at this point.
We've looked at it from a lot of angles, quits versus leaving the game.
And so let's get back to our other items we were curious about.
What about latency?
Does high latency cause players to leave the game or does it cause them to quit for the night?
And you know, the answer and the data to that was, no, not really.
It turns out for our players, they were not very sensitive to ping.
We didn't find a lot of quits.
We didn't see players that are leaving the game for the night.
Seemed to be a pretty.
not that strong correlation. Now this may be because we have some safeguards on ping globally already, but we didn't find a lot of connections there. All right, so we'll cross that one off for now. Now what about wait time? Do players get frustrated with lots of long waits?
And with wait time, you can't do a quit thing. Most players don't tend to wait a while and that causes them to quit out of a match. But you can see if having long wait after long wait causes them to leave the night early.
And it turns out that no, we did not observe that.
We, our players didn't seem to mind even longer than usual wait times.
They would keep playing.
Their, the amount of time they would spend for the night did not seem very correlated with how long their wait times were.
And what about losing streaks?
Because this is something I hear a lot about.
Almost any time I join a company and we talk about matchmaking, someone brings up, we gotta break losing streaks.
But you know, it turns out we did not see players tend to leave early because of a losing streak.
They would, the only thing that we found that was correlated with a player that would scare them away for the night was whether or not the match itself was fair.
A really unfair match, they would leave for the night because of that.
Bye.
they were not likely, if they had a string of matches where they lost, that didn't tend to correlate with players leaving early for the night for quitting.
So it may be that our players are just more concerned with how fun the match itself was, and the fact that they lost isn't as big of a deal.
So it turns out, at least for Halo 5, what our players really seem to care about is that team skill gap, which is Do I have a shot at winning this match?
And the personal skill gap, which is, if I come around the corner and I see an enemy, what will my success rate be in that encounter?
Can I experience the gameplay?
The other aspects that are commonly thought of as important for matchmaking sort of fell off for us, which kind of shows us that at least in Halo 5, we should focus on those team and personal skill gaps.
Now that doesn't mean we let latency be ridiculously bad or wait times crazy long, but it means that our current sort of guidelines on those other objects are pretty on latency and on wait time are already pretty good.
And you should be able to discover this as well in your own data.
So let's review the core approach that you would use to do that.
So again, choose a characteristic, something that you think is important or may be important to your players and you wanna find out.
Then choose a metric. What are you going to measure against that characteristic?
We used quit rates and we also used what players quit for the night.
So we compare, you go ahead on your own and compare whether a high ping results in quits or results in players churning out.
and create those types of data points.
So for every player, for every match, look at what that skill gap was, did they quit?
Or what was the ping?
And did they stop playing for the night?
And bucket those up and plot those characteristics, and then use those plots to tell you if it's important and how important it is, and at what points you're okay matchmaking.
At what cutoffs do you have in skill and in ping or whatever it may be.
And some overall sort of takeaways to think about.
First, what you think is important, what everyone's been telling you is important in matchmaking, it might not be important.
It might be even more important.
So use some observational studies to look through your data and find out what is important and then tune your matchmaking to reduce quits, to reduce people leaving for the night, to reduce whatever metric you've chosen is important to you.
And don't forget, again, I'll just reiterate this, that when you're dealing with skill, the skill system you use does matter.
So reevaluate your skill system and make sure that it takes account of events in your game that are important to players, that gameplay is somewhere in there.
That's sort of a, like, maybe a surprise takeaway for some of you, that your skill system may not even be capturing that.
Now, I talked a little bit about A-B testing, because I earlier mentioned that it can't be used.
And the reason kind of why it can't be used goes into some pretty complicated reasons.
I can't cover all of them in one slide, but some research that Microsoft Research did showed that the optimal skill gap to matchmake on, for example, depends on the population itself at the time you're matchmaking.
The problem is an A-B test will split that population.
So what you will learn from that A-B test is what is optimal for the way you've split, but that split may not be what the merged population is like. So you can't really do that. You're learning the wrong optimal settings for the wrong population. So what you can do instead, and what we're looking forward to trying at some point, is what you do is you flip a coin every hour and choose every time you flip that coin whether to go with A or B.
And where A is like, A is how we're matchmaking right now and B is the new thing we want to try.
You flip the coin because you need to have some randomness.
You don't want to have like the time of day be messing up, causing correlations in this data.
So you just flip that coin over an extended period of time, every hour, and you flip back and forth between these methods and watch how the players react during those methods and then check your metrics between those A and B the same way you would for any other A-B test.
That way you are measuring on the correct population.
And that is it.
Thank you for coming to my virtual talk here.
I hope you enjoyed it.
If you have any questions, you can put them in the comments below.
You can contact me through Twitter.
I also can be emailed at Microsoft and take care.
