Hello everyone. Thanks for coming. I'm curious by a show of hands, who is here on a student pass? There's quite a few. That's nice. Thanks for coming to the career seminar. This is the final talk of the day. I planned this thing. So if, please rate all the talks so that we know what kinds of things you like.
and can bring back next year.
And this final talk is three postmortems of three different types of games from three different people.
And we'll just get started, because it'll be pretty self-explanatory, with Ah-Joo Moon.
Hi, thanks, I'm Audrey Moon, and so there's definitely going to be some contrast in our project types.
I'm going to be giving a post-mortem on a like very personal interactive art piece, and since it's kind of a different project, I'm going to go ahead and just play the quick 30-second trailer so you can get an idea of what I'll be talking about.
What do you see?
I don't know.
Alright, so the name of the project is Into, and, um...
So first let's start with a bit about me.
So Audrey and I do development, design, and storytelling.
I'm kind of like a hybrid artist with a big background doing UI UX design.
And so coming into this project, I was mostly doing it solo and experimenting with kind of like a lot of new design techniques, and also a lot of like kind of just weird coding tricks so I can just.
kind of quickly rehash a narrative experience.
Then let's talk about, let's see.
So when I started the project into, it actually came, it was branched off from another project I had started working on that was kind of this science fiction story and it dealt a lot with about.
thinking about the separation of consciousness from bodies and had elements of body swapping.
And I was thinking, oh, it's this really cool contemplation on existence.
But so I thought I was having a good prototype going.
I took some time off of work to, I was thought, oh, I'll spend like three to six months working on this project, get a prototype together, see what happens.
two weeks of spending full-time work on this project, I realized, like, a lot of internal truths. I was like, oh, this story is all about how I am transgender and I'm having all these, like, hidden feelings inside of me that I was putting into this story that I hadn't yet dealt with. So after I realized that, you know, it kind of hit me pretty hard. I wasn't ready to tackle that subject matter yet. And I also had realized with the scope, there were some technical things dealing with animated characters and inverse kinematics and some screen space effects that I just wanted to practice on before putting onto this giant, larger project.
So, yeah, that's what brought me to this project.
Into, or I turned my autobiography into a fictional second-person surreal coming out of age dramedy, and now my life is happier.
This was like...
I enjoyed the name and it worked for me since it was just a little art project that I wasn't expecting to make money off of, but it was kind of a terrible naming choice because, for example, it's released on Itch.io and the search engine on Itch.io just excludes the word into from searching.
So you cannot search it by typing in like the actual title, only if you type in one of the words in the subtitle.
And yeah, so since this project is dealing with some design and technical implementation choices on the project and it deals with a lot of personal things I was dealing with while writing it, it's going to be a post-mortem, like a little bit on the project and a little bit of a post-mortem on this chapter of my life.
I'm not dead. It's not like actually a postmortem, but on me.
And so let's see when I was kind of forming the ideas, I had ideas coming from all over the place and That I was thinking about different design and technical issues and eventually this kind of perfect storm came together of, oh, I need to make this project because it's kind of what I'm interested in working on now. It's technically feasible for me and it's relevant to my life.
And one of the things that got me started with wanting to make an interactive narrative project in the form it is, is because I've been playing through Kentucky Route Zero and a couple of other things with some friends at the time, and I was realizing like how awkward it is to go through dialogue and click through dialogue boxes, especially textual ones, with other people that like read at different speeds.
And the same thing is kind of true with anything like Mass Effect or any other game that lets you pause for choices.
Like, they work well, but really, like, if all you did was post a video of it and someone didn't know it was from a video game, and you had all these pauses in between conversation options, it would be kind of like, well, why are there all these awkward pauses?
There's like a dramatic moment where someone says something and the other character just stares blankly into their eyes while they're like, thinking of four different sentences.
And so I was thinking about how to design a project that isn't necessarily going to be full time or fully controlled with time like a film.
But in the design itself, it actually accommodates it.
So no matter how long you wait, it will feel like it was a natural lull in the conversation.
And so basically, one of the solutions to that was, well, what's a conversation like?
when you're pausing in between every sentence you say, well, that may be like hard conversations or maybe awkward teenagers talking to each other.
And so, like, that was one reason why I felt like this was something to tackle, because I had this little like memory of my life that I was kind of incorporating into a fictitious story.
So it's semi-autobiographical.
But basically it was like a young, awkward version of me trying to have conversation with someone in fiction.
And I felt like, well, that's the perfect thing because I might want to just sit there for like five minutes while thinking about what to say next.
And so with all that stuff going to my head, it all started with a dream.
I had a dream one night where there were just these like two characters in my head.
I knew who they were.
and I saw their bodies on each side of the screen like this and eventually they came together and merged in the middle.
And I woke up in the middle of the night at like three or four a.m. and I was like, I gotta figure out how to do this screen space effect because it's exactly what I was wanting to learn to put into my other project.
So I got up, I fleshed this scene out and I thought, well, this is really cool.
And I ended up writing the whole and ended up being the climactic scene in the project and I wrote the rest of it To lead up to it So yeah I had to work with a multiple camera setup and death mask to get a lot of effects in the first thing I Implemented was this is only part of the scene But it deals with when the characters start to reach into each other and then fade into each other and then Once that was in place and I had this death map shader going I just started putting the death mask everywhere. I was like cool, like I have this shader let's just see where I can put it. So dialogue conversation prompts became masked out views into just trying to get an idea of like what is on the character's mind and always kind of focusing the conversations into the character's heads. And then another aspect of this was dealing with human bodies and making characters touch.
So I also started going through a lot of different experiments with inverse kinematics.
And this was one of my first attempts at hand coding the inverse kinematics.
Obviously it kind of worked, but the math was a little wrong.
And so then I, that was for a Mixamo character asset, then I pulled in like the default Unity kid.
And it was, yeah, it started off you seeing the top left, like for some reason it kept going sideways, reaching for the cylinder, and also spinning.
And eventually I did, touch was achieved.
And I was able to make characters touch things and I could control their acting.
However, it was like, obviously a lot of struggle to get it to work as complexly as I wanted to.
So I was looking, I found this cool plugin.
This is one of the demos.
It was like, hey, you can make bodies interact with each other even.
And so I started working.
It's, I think, called Fabric IK.
And it made it really easy to just do anything with having the characters interact with actual objects or each other.
And in the first scene, it's actually characters in this art class together.
So I started putting together this whole system of like, Basically, it initially started with a broader design where you could dynamically have the characters draw different things in a still life around the room, and eventually it just turned into a thing where they're writing notes to each other.
But it was just neat.
As soon as I figured out one way to do this IK system, I was able to use it in every scene in the game.
Yeah, and so compiled together with the depth max effects of the prompts, you get this kind of situation where the clickable target.
is this fade out thing when you hover over it, it kind of like shrinks the thoughts together.
And then you get to see visuals that looks like they're actually kind of writing a note to each other.
But also, this was my first project to do voice acting with, which was fun.
And I wrote a screenplay, which was interesting.
I got a Google Doc that had the format and it was kind of fun.
I don't know if a screenplay is necessary, but this was a short project and it was easy to work with and it was easy to like.
hand the script to people who's doing voice acting.
And one of the important things was, before making anything final, I did all the voice acting just on my own, on my little microphone that's on my earbud mic, just because I was kind of rewriting and developing the script as I went.
So it was important for me to not put any effort into anything that I didn't think was final.
So eventually though, brought in the talented sound designer Jocelyn Reyes who did the music and the sound and also the recording. We recorded the voice acting in the closet under the stairs of the house I was living at the time. Gabrielle Genevieve who's an artist here in the room was the other me so we were the both the two characters on the different halves of the scene and Lucie Vitage-Lulou is an artist that's currently working up in Montreal from France.
happened to be crashing on my couch at the time and it turned out you know she knew a lot about art and we just I just had her ad lib what it sounds like to be an art teacher and it actually that was this was a good example of like collaborating with someone um bring up really unexpected twists because her ad lib was like really humorous so I added a secret in the game where you could like instead of it just being muffled you could like listen to this ridiculous rambling about like what life is.
And but it was kind of cool.
I definitely found out working with voice actors, it was useful to not talk a lot about, oh, what is the character?
What happened to the character?
What are they thinking about?
Because like you're recording things out of order.
and it doesn't necessarily matter.
It works a lot more to be very specific about, like, I want you to sound like this emotion or even like sample voice act for yourself to the actors so they get more of an idea.
That made it a lot faster to work with.
And it was also kind of funny because with Gabrielle and I, we were like recording some breathing and we were in this little closet.
And so we got like really, we were hyperventilated and got really spaced out, breathing together in this closet.
And but it worked out perfectly because the next scene where the two characters like lying, the next thing we recorded were the two characters lying in bed together and like having this kind of spaced out conversation. So we were also like feeling kind of loopy at the time from lack of oxygen. So it worked out perfectly. And then it has a lot of like very careful framing of the scene and a key component in that because the camera view never showed like the full body of the characters.
as there's a lot of cheats that you can do.
The characters are always facing away from the camera, and you never saw below their bust, so it didn't matter if they were merged into each other.
Which I guess is actually what happens in the end, I just realized.
So it's like foreshadowing if you go into developer view and look off screen.
And then, The next up was, there is a bit where the characters will turn over and you'll see their eyes look at each other.
But this is an example of when the character is faced away, it didn't matter if it wasn't realistic.
By the time the head is turned, the eyes look like they're in a natural position.
And this is their default resting pose that happens all the time.
So if you play this project, just know their eyes look like this all the time.
But you don't see them.
And so bringing all these elements together...
I had a lot of, it was a lot of fun, there was a lot of issues.
One was the fact that the pacing was so slow and mellow and it was just such a different project that it was all about the feel and the aesthetic and just pointing and clicking.
There's not a lot of gameplay necessarily.
So I ended up having to like design against games in a lot of ways.
At least in the beginning it was almost like a tutorial to open it up and there's a long prolonged.
section of just music with color fill screens that show the credits to kind of and then gradually um over time opening up more and more control to the character to the to the player so that they'll realize more readily like um oh i'm not this isn't like a first person game where i'm like going to be all over the place there's a very limited access constraint and so starting from a smaller place and gradually opening up to it made it like a very smooth transition and made it like I felt like people just got more out of it immediately.
And also, yeah, I did a lot of rewriting, like I said.
I did all the voice acting myself to begin with, like temporary, poor recordings.
And it was interesting because as I was putting lines into the project, I was realizing, and it was since it was so personal too, I was realizing like, oh that's kind of like a messed up way to think about myself. I need to rewrite it. And so I was doing this whole thing where I was like writing and designing this project, but also kind of designing myself at the same time. And then when bringing collaborators on, it was like some of the first time to have these conversations about these things. I hadn't talked with anyone, but I was like, we were talking about the game, we weren't talking about me. So it also like had this buffer where it was easy to have this conversation.
And that was like a really fortunate way to be able to design a thing and also work through these like tough feelings for myself. I was able to very carefully design the project so it included all the words that I wanted and also releasing it was actually me publicly coming out so I was really fortunate not everyone that does come out gets to control that message and the narrative and the audience in that way.
And I guess I was just really scared, so I had to have as much control as possible.
Yeah, so that's all I'll talk about for right now.
Again, I'm Audrey Moon, and you can find me on Twitter at Animal Phase, or I'll be happy to talk to you after the panel.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
A play button?
All right, thank you.
Sorry.
I feel like a bit of a caveman on this machine.
My name's Dan.
I'm a contract producer, designer type troubleshooter guy.
And this is about Spider-Man Homecoming VR Experience, which we released at some point last year.
I think it was in the summer.
Everything's been kind of a blur since then.
Okay, so it's updating. Oh, there we go.
Alright. Am I a second behind on this thing?
No, you're okay. I'm okay? Alright.
Because of the time of the talk, I will not be playing the full Spider-Man theme.
That's why you just got that little trumpet.
I hope you enjoyed it.
So this was, as far as we profiled it, what I like to call a do-or-die project.
So what is a do-or-die project?
Deliver on the dates or you proverbially die.
It's a thing that, if you don't meet the conditions, you're screwed.
There are no good things to happen.
Stakeholders have to be appeased at all times.
So if you've got something, usually on a high stakes project like this, a film director has to be appeased, an exec has to be appeased.
These guys have to be happy at all times, otherwise.
you know it is just bad and it had to fit in a constrained budget so we couldn't ask for more money you know it was just the way it was so this is how it tends to feel when you do these kinds of projects so how do you survive these well you got set realistic goals so for us we had to scope very carefully not make promises we couldn't keep and if people were very passionate about a certain idea that seemed a little too, you know, not realistic enough, we would have to shave it down a little bit.
However, you also have to stay flexible.
So it's very easy when you're running against the clock to just quickly say no to things, and it feels safe, and it feels like you're protecting the team, and all that kind of stuff.
But sometimes you've got to just center yourself and go, all right.
there's this thing someone wants.
My first instinct is to say no.
What is another solution instead?
So you're not saying no, you're figuring out how to solve the problem creatively.
Which is difficult to do when you've got a do or die project.
And yeah, figuring out when to say no.
The things that are most impactful are usually features.
I mean, that's easy, you all know that.
So it's just really identifying when those things are.
So here was the brief.
It had to work for first time VR users.
It had to be intuitive, nothing crazy to learn, nothing overly complicated.
You could give it to your grandma, she could figure it out.
It had to be on Vive, Oculus, and PSVR, same day.
It had to have realistic visuals or, you know, realistic in game world, so I guess high definition of visuals.
It had to live in a, like an arcade cabinet equivalent in cinemas a month before the movie released. So this one we learned kind of a week into agreeing to the project and then we sort of had to, you know, figure it out real quickly. And for the live version we had to have a three minute kind of trimmed version because of the throughput.
Because it was a marketing piece for the movie, we had to consider that aspect very carefully.
And we couldn't have vomit-inducing motion.
So, you're talking about Spider-Man, the first thing you think is I'm gonna be swinging through the city, probably be, you know, our first idea was we're gonna do an infinite runner with swinging through the city in VR.
And everything we saw about trying to accomplish that, led to, you're probably gonna vomit.
So, yeah, the marketing team were not happy about that.
So, we had to identify what were our targets.
So, first time VR users.
Must direct the user quickly.
We had to limit discovery based progression and level design.
So, none of that, here you're in a room and there's nothing else, and oh, what do I do with that thing?
we pretty much had to tell the user what to do beat for beat.
And this was, again, to satisfy the person's grandma who's a Spider-Man fan, wants to play it, and just figure it out.
Trying to get on all three of those platforms is a bit of a challenge.
So we just targeted the PSVR, because that's the lowest spec one.
But the realistic aspect was a bit of a challenge, because at the time.
Substance Designer and Unreal 4 shipping to PSPR, there was some compatibility issue where all our substance textures just didn't work.
It just crashed the build.
So we had to go back, gut all the substances, export the textures, and then shove those textures into Unreal's shader model and do it that way.
So we lost time from that, but you know.
And for the arcade release, or sorry, tour deployment.
we had to shave from five months development time to four, which was a little scarier, and we had to sort of let the QA cycle get hit, which, you know, for a short experience actually isn't that scary, but you know, when planning things out, we were concerned for reasons you will see shortly.
If the player took, so for the arcade deployment for that three minute time frame, we had to build in a mechanic to push the player forward.
So if they stood around too long doing nothing, we had to either move on to the next task or teleport them to the location that they had to be.
Thankfully, not many people dealt with the teleporting side of things, because it felt very unnatural.
But that was the only solution we could come up with at the time that we could execute.
And yeah, for the vomiting, no freeform swinging.
Because we just didn't have a design solution that we knew would prevent people getting nauseous.
And we couldn't take the time to do the R&D for it.
And yeah, no swinging, focus on web skills, physics gameplay, no frame drops, or 90 frames a second.
we were pretty scared.
So we just shrugged and tried to figure it out and got to work.
So what do we propose?
Okay, you'll have to forgive me, this text is very tiny.
The suit, it's very small.
You know what, I'll crack my neck a bit, hold on.
All right.
So the suit is one of the things in the movie that's really special, right?
So Spidey, he's really known for his special powers and so on, but in the movie, the suit was like this big, ooh, he's got a fancy suit.
It was all high-tech.
So we sold the idea of what if we sell the entire piece about, hey, you get to try Spidey's new high-tech suit that Iron Man built for him.
So that was how we packaged the piece.
but there was one snag.
The client wanted a mirror scene, like in the Batman VR experience.
And a mirror scene means you have to build a full, you know, upper body rig at least.
And that meant inverse kinematics.
And we were a little bit worried about that.
So that was a thing.
And then the next bit was, because we're not having swinging, what are we gonna do?
What can we do to make this feel like a Spider-Man experience?
So we went with web types, playing around with this web shooter, slinging things, throwing things, shooting things with webs, that kind of thing.
So then physics came into play.
And we weren't allowed, when we proposed that we wanted to do something kind of gamey with like AR targets, that didn't fly.
So we then had to go with real world props on a rooftop.
in Queens, in a realistic art style.
So all of this stuff was getting more and more scary.
We asked if we could set it in Manhattan, because we could use big buildings to limit draw distance.
But that was shot down and we were asked to put it in Queens and Queens, if you've never been to New York, is a bit flat.
So if you're high up, you can see everything.
So that was another, oh God, how are we gonna deliver this moment?
And because it's a marketing piece, we had to feature a major character in the movie that wasn't just Spidey.
Initially, we were given the go-ahead to put Iron Man in there, which was kind of exciting, you know, because we're all Marvel nerds back at the office.
But, a little bit of the ways into the project, there was a publicized legal hurdle.
And we couldn't use Iron Man anymore, so we'd scope for Iron Man, and we'd scope for this final moment where you swing out alongside Iron Man, like best friends, and you know, title card and all that, and we had to scrap it.
And the only other character in the movie that's a big enough character was Vulture.
So then you got the villain of the piece showing up, you got Spidey, you can't fly away with the villain like he's your best mate.
What do we do?
So we had to then scope this whole extra section that was a dramatic moment for the player, you know, as fighting which you'll see in a bit.
And the swinging, we couldn't do it without one swing or two you know, it just felt wrong.
So our compromise was instead of free-form swinging and having the latches off the safety for, you know, player comfort and all that we directed two specific swing moments.
And that seemed to work because in VR, people will not tolerate extended nausea, but one or two shots and that's it, you can sort of get away with.
It's not advised, but we didn't get any complaints, thankfully.
And yeah, the arcade tour build thing, because that sort of hit us a few weeks in on a very short project, the compromise that we offered was, hey, why don't we make it beta level quality?
In hindsight, as we started rolling through, we realized we couldn't ship beta quality code to a marketing level piece on a worldwide tour to promote a massive film.
So, we sort of face palmed for a few moments and then realized we had to scope a couple of polish features out, you know, which is as you do.
So.
The high level, physics, massive draw distance, IK, in VR, 90 frames a second with no drops, realistic-ish art style, four months development cycle, no additions to budget.
So, yeah.
This was us in the studio, trying to figure out how to do this.
Here's a previz of what we put together.
So this was within the first two weeks.
Because feedback loops are really difficult in movie client-based relationships, we had to come up with something that could get approved really quickly.
So we put together a Previs, which is something very useful for film people.
They use it regularly.
Hello, Peter. This is your new suit. Please put on the mask.
Welcome to your SM-3000 suit. I'm here to explain your suit's capabilities.
Please review your appearance in the reflective surface to your left.
Initiating your new web shooter.
Rapid fire mode. Press and hold your trigger to shoot a steady stream of webbing.
Based on your performance, you are awarded a B. Please remember to train harder.
Initiating web sling. Beginner mode. Press and hold your shooter to tether objects to the web.
Initiating web bomb mode. Please hold the trigger to charge a larger bomb.
A unique energy reading is coming from your location. Please get to a higher viewpoint.
You have no idea what you're getting yourself into.
Structural integrity failing.
Your webbing is strong enough to repair.
Back off!
So yeah, that was pretty much it.
And as you can tell, some of those pictures were from other games.
And the voices were from people who worked with us.
But yeah, we needed something that the film guys could resonate with quickly and Previs is a pitching technique that the movie studios use that actually saved our asses.
From that, they were able to very quickly tell us, even though that Manhattan setup looks kind of nice and atmospheric, we don't want it, it has to be Queens, blah, blah, blah.
But we were able to knuckle down and figure something out straight away.
So how did it all go?
We shipped it, everything worked out, got it on time, all our targets landed, nobody died, thankfully, and we all got drunk after.
The only things we really lost in development, which was just part of the decision-making process really, was we lost full-body IK.
So originally, we wanted Spidey to have a full-body presence and one of the issues that we found, and I'm sorry I don't have a gif about this, I wish I did, you'd look down and we just didn't have the R&D time.
in the pipeline to have someone work out when feet go janky.
Because full body IK, you've got to sort of approximate where the feet are going to be.
And we had some ideas like if you mount the controller pivot sort of to the head, and if the head moves, then the body sort of does this.
But we didn't have time to prototype that, but in hindsight it felt like it might sort of be weird and tanky.
Yeah, so screw it.
We just did upper body, and if you look down at your body, it's pretty much just hands.
And the only other thing we lost was this sort of depth feature we had where you look at things, and you'd get a little readout on the AR reader.
But that never happened, so whatever.
So here's some screenshots of what it ended up looking like.
This was the suit in the case, which didn't fly in in the end because Marvel felt that was off-brand.
So you just show up on the roof and there's your case and there's the spidey thing.
This is a reflection scene, so at the player level you just got the wrists, but the IK body, because we were having some runtime issues with it, we just isolated it to where you'd only see it in the reflection.
And this scene for the frame rate was actually pretty stressed.
So that's why we opted to go with that as well.
The physics playground stuff kind of worked out.
It's a little weird up there because there's tires and why the hell are there tires on a roof?
We could sort of excuse the construction spool and we had lots of balloons there to add color.
That was also excused because it's Peter celebrating him getting a fancy new suit that can do fancy gadgety things.
This was the first controlled web sling.
So you can sort of repel yourself up to the crane at a certain point in the experience.
And a lot of people get a little bit weird with it.
This scene is when you're looking down from the crane.
And one of the things I enjoyed the most is that I'd have friends over who play a lot of games, and at this scene they would take off the helmet and go, nah, fuck off.
LAUGHTER Yeah, it was a lot of fun seeing that.
And funnily enough, people who didn't play games...
loved it out there, they didn't give a shit, but most people who played games were put in the headset for this, just yeah, they couldn't do it.
So how did we get it all done? Alright, so the stakeholders, you know, thinking about our audience in terms of the client, we knew I mean the company who built this are born of a movie trailer house, so they understood the movie culture very well.
My role there was to help understand how to make games.
So using that knowledge, we built a Previs, that worked great, and yeah, everybody was happy.
One of the things we had to do because our development was somewhat, I wouldn't say hampered, but could have been hampered by VFX assets that we needed to build everything.
So for example, Vulture and Spidey were built from, built down from VFX rigs.
which are usually these multi-million poly beasts with many boned rigs and texture technology called UDIMs, which is basically multiple atlases within an atlas and it's absurd.
Like you just can't put that in a game engine.
So we needed to set targets for the film people so that we could then deliver what we needed to do.
So if we didn't get, say, the vulture asset in a certain time, we'd have a modeler, you know, have to build him from scratch on reference.
The only time that that, I mean, I wouldn't say it failed us, because we got through it, but the only time it didn't work out was with the UI on Spidey's wrists.
Because in the movie, it's this crazy thing that, if you imagine the weapon wheel from Ratchet and Clank, where it's got like the eight little dudes on it, the little icons.
This is like a 50 icon weapon wheel.
So yeah, obviously we weren't gonna have that.
And yeah, we work close with the client to balance things out.
So they kept asking for things because they wanted this thing to be the best thing that it could be.
And you know, their world is asking for things all the time and getting them.
And we would have a negotiation.
We would say, okay, you want this, this is what it's gonna take.
take from the project, we can give you this thing instead, or we can give you this thing if we take this other thing away.
So it didn't become a no, it just became an exchange, a constant discussion, and it worked out.
When we really couldn't do anything, we would tell them, look, we really can't do this, and they would try and support us as best they can.
But yeah, the most important thing, it really was the right people.
And I know that sounds like a tight cliche, but never before have I felt it be true than on this project.
We made sure that we picked people who had the right mentality to deal with a constant deluge of change and stress and things that you would normally kinda look at in a list and go, yeah, I'm not gonna do that.
That's not gonna happen.
So, everybody on the team.
had a problem solver attitude and it went a really long way.
People who had reductive thinking tended to be more stressed out.
They seemed to be, they couldn't deliver anything beyond the thing on the piece of paper because their brains, the way, I guess their outlook, their philosophy on how to tackle these moments was holding them back.
And You know, I feel bad for him, and I've caught myself in that mentality, so, you know, like I can be sympathetic to it.
Yeah, that mentality is just a killer.
Like you really need to be in a problem solver mentality to get through a project like this, and do a good job.
You know, if you get into that reductive place where it's like, wah, I agree to this, you know, I'm not gonna go beyond this line, or any of that kind of stuff, you're not gonna get through it.
Yeah.
So, but we agreed to this, all that kind of stuff.
It's indicative of a mentality that isn't about solving a problem, it's about protecting yourself.
And that's a very understandable place to come from.
But you gotta think about how do I solve the problem, not how do I protect myself necessarily.
I mean, obviously there's a line there.
But when you're thinking about building something, start with solving the problem and then figure out, okay, am I doing this?
in a way that's constructive for everyone, not just constructive for me.
And yeah, that's what I ended up taking away from this the most.
Yeah, and that was it.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
because we're running low on time.
So here we go, right into it.
Cinemora was a video game that came out in 2012.
It was originally planned for arcades, but it wound up getting released on Xbox 360, Windows, PS3, and Vita.
It was a collaboration between the Hungarian developer, Digital Reality, and the Japanese developer, Grasshopper Manufacture, who you may know from Killer7, No More Heroes, and Stuff.
All the code and design and story, and most of the art was done in Hungary, and a little bit of the art, like concept stuff, and all the music and sound stuff was done in Japan.
So five years later, Cinnamora EX, an upgraded version, was released on Windows, PS4, Xbox One, and Switch, and I'm basically gonna talk about how we got from the first one to the second one, and what we did along the way.
All right.
So, it's a side-scrolling shooter.
It looks really nice.
It's got really good music by Akira Yamaoka.
Just imagine all that stuff.
On the original game, I naturalized all of the text.
And naturalizing means, basically, I took the original stuff that was written in Hungarian, and I rewrote all of it so that it would appear to have been written in English the first time.
The story was pretty challenging, because it was very complicated and convoluted and high-concept sci-fi stuff.
and it was constantly calling back to itself and referring to things that happened earlier or doing things out of order.
And in a shooter, like a scrolling shooter where you're supposed to be doing twitchy action, it's a tough sell, and there's about 10,000 words for this shooting game, maybe the most in any shooting game that I can think of.
So it was an interesting project, and I had to translate an ancient poem.
That's what you see in the middle there.
It was part of the poem, In the Sieve of Time.
This game has a, as part of its core mechanic, it has a time rewind system because it's, the protagonists are a group of humanoids who can control time, basically, and they're being hunted to extinction by regular human beings.
So it was very important to them that they get this poem in there.
But this poem is 100 years old and has never been translated.
It's by this guy whose name I can't pronounce because it's Hungarian, which is Endre Adi, or something like that.
That's him on the left, not on the right.
That's not him.
So in order to do this, I asked for the original Hungarian, the director's own translation, a list of things each individual word could mean, and combined that with a Google Translate.
to kind of put all these elements together to come up with...
Oh, also, I read some of his other poems in English to kind of try to get an idea of his style.
And really, a PhD should have done this, but I did it instead, so sorry.
But it was kind of cool to be able to be like, yeah, in this game, I translated a poem from Hungary's most famous poet for the first time ever.
So then, Cinemora EX was announced, and I found out about this by watching Nintendo Direct.
And I was like, wait a second, I should probably get in on this.
So basically there was a lot of stuff that I thought we should fix with the original game that bugged me, and so I basically tried to bother everyone that I could until I got to someone at THQ Nordic who was publishing the new...
version of the game and I was like, you have to let me fix things.
And eventually they said, okay, but there were only two months left in the project.
So I'm pretty much framing this as a way to look at an existing game, perhaps your game, and see what's wrong with it, what can be fixed, and giving up on things that you can't fix.
So I'm going to go down some of the things that we did try to fix, because there was a bunch of stuff that we could have fixed.
I originally made a presentation highlighting all of these problems and showed them to the folks and then we had some back and forth and fixed some stuff.
And one of the biggest issues was hitboxes on backgrounds.
So in this game it's hard to tell kind of what's in the foreground and will kill you if you run into it and what's in the background and you can just fly right by.
So if you look at the left screenshot here, I've circled this thing, it's kind of hard to tell what it is, but there's a turret there that you're shooting.
So you can shoot that, which should mean that it's solid, but if you fly through it, it won't hurt you because it's actually in the background somehow, but its hitbox is in the foreground.
Now on the right, there's this train boss that you fight, and you can shoot all the way through this part of its body, no problem, but if you touch it, you're dead, and that's very confusing.
And I found that this is part of a bigger issue because some of these...
things had their hitboxes extruded many in-game kilometers into the foreground because some of them were too big or too small, like in the case of parts of a certain boss, they'd be too big, so they would shrink it down or pull it further away.
Or sometimes they just weren't on the same 2D plane as the ship.
Basically fixing this.
would have meant going through every level and looking at every hitbox and everything, and it was not gonna happen in two months.
This is also part of why some of the life bars on bosses appear in weird places and start to float away and stuff.
It's because of that distance problem.
So, how could we fix this at all, given there were two months?
So, the solution that I came up with, more of a band-aid than anything, was Okay, we can't change the background.
Well, what can we change? We can change the ship.
The ship is one thing.
The background is millions of things.
So, you know, we made it so that the ship takes less damage if it hits something.
And so that way, it was less frustrating, but also less work, because we only had to change one thing instead of a whole heck bunch.
Talking about the story, it was hard to follow.
That was a common thing among reviewers.
There were some people who really put in the time that loved it, but generally it's just, look at all those words, there's a bunch of them.
And there's an A to continue button down there, there's a lot more.
I would have liked to do a rewrite, but that would have involved a lot more people because the original director was not on the remake.
And since I was really only the naturalization person on this project, though I've written my own scripts for games before, it would have been a lot more approvals and more complicated.
So instead, THQ decided to record English voices.
Originally, it was in Hungarian, no matter what language you played it in, Hungarian was the language.
And I thought that was really cool, and I was kind of against this idea.
But...
When they did it, I have to admit that it makes the story easier to follow.
And I think it was because this decision was made by the executive producer Reinhard Polis, who is not a native English speaker. He's from Austria.
And he mentioned that reading English subtitles is a lot harder and takes a lot more concentration than listening to people talk. And that makes a lot of sense, especially when you're, like, swooping through these environments and there's all this stuff going on.
And, like, if you look on the right...
you want to look at that big, like, Mithra-style environment thingy.
You don't want to look at those subs on the bottom.
So it was a sensible decision.
Co-op and multiplayer stuff is something that I had nothing to do with.
This was Reinhardt again, but it was a pretty natural addition to the game.
But there were some problems, because this is a single-player narrative.
So how do you have two players in...
that context, because usually you're just one plane flying through, and there will be other people talking to you, but if there are more planes there that have other personalities than the game, it completely breaks narrative flow. So they decided on a drone character that would make a lot of sense, because it's just a robot, doesn't affect the narrative, and you don't even have to introduce it, really, because So there's such a long history of shooting games having a drone ship or something that you didn't even need to talk about it.
And they made it control differently, more like a twin stick shooter to try to kind of make it more interesting.
And Reinhard, who was in charge of this feature, for him the most important thing was making sure that you could switch between both player types.
regardless of which player you were at any time, so that everyone could try out the new mechanics.
Also, there is only one health bar, which is basically the time.
And so we had to deal with that with two players as well, and we just basically made both players take damage, affect the main health bar thing, but they could also both collect power-ups, and usually in the single-player game, you can't collect all of them, so it kind of balanced that out quite nicely.
And then mini-games were added as a kind of thing to solidify multiplayer as a solid addition to this game.
Let me check my time.
Doing okay, I got six minutes.
So there were a lot of tiny details, like power-ups would spawn on death, and they spawned forward and away from you.
So if you see on the left there, those power-ups, when you died, spawned far away from you and are now behind a boss, and you can never get them again.
So now they spawn a lot closer.
Bullets are hard to see, especially enemy missiles.
I've circled them over here on the right, but they're still hard to see.
This is still true, unfortunately.
Glow surrounding bullets was bumped up a fair bit, but there was no time to do more.
And there's way more stuff that we could have done.
Then results.
So Metacritic scores were really interesting.
The press scores went down for the new version on average.
The things that the press said were much nicer than before.
but the scores went down.
Metacritic is weird, and the producer and I were talking about how maybe we should do a talk about how Metacritic is bullshit.
But the fan scores, the user scores, went up universally across all platforms.
And I went through and read these reviews because I was really curious about this, and I found that fans and reviewers both liked the changes that we made without realizing it.
There were a lot of things that people complained about before that just weren't getting complained about or not complained about as much.
And you could tell that the feeling in general was improved, which was exactly what we wanted to happen.
And frankly, the user score going up is enough.
Also, it sold well, so that's fine.
So what did I learn from this?
I learned to fix what you can.
Fixing things intelligently is incredibly important, especially with complex projects.
Like we don't, with my own company, this was a contract for me, but with my own company, we are constantly doing this.
We've released one of our games called Gun House, I think seven times on seven different platforms.
And every time we do it, we improve stuff, we fix the tutorial up more, we fix the menus.
And every time, the game is getting better, and the general impression of the game improves every time.
And for us, it's been really important.
So I think that your existing games are ripe for remaking if you want to revisit them.
Cinemora obviously had a bit of a leg up because it's a relatively known game, like middle tier, and it had some good developers on it.
But yeah, it's worked for us as well, and we're going to keep doing it.
And I recommend it if you have the time and opportunity to do so.
So subtle changes can really matter, but don't get bogged up in the details.
And that's it for me.
I think we could take like a question.
Is that no questions, then you're free.
