Hello, good afternoon and welcome everyone to this panel dedicated to the life and works of solo developers, aptly called Solo Development Myths, Reality and Survival Tactics.
I'm your moderator for today.
My name is Erik Bartelsson.
I'm editor-in-chief of the gaming B2B website, premortem.games.
Before we get started, I would like to point out that this panel was co-organized by Alessandra van Otterloo, who would also be doing the moderation.
But unfortunately, she had to return home due to family circumstances.
We would like to wish her well from all of us here.
Okay, let me give you an overview of what we're going to do in the coming hour.
We have four amazing developers, all solo developers, that will share their insights on the challenges and opportunities of doing game development by themselves.
First, they will take turns and do a short presentation on one particular topic.
After that, after the micro talks, we will dive in deeper and talk in more detail about the realities of being a solo game developer.
And after that, if time permits, we will be taking questions from the audience as well.
There are microphones here and there.
But I'll let you know when it's time for the questions from the audience.
First, let me introduce to you the four solo developers on this panel.
Joe Winter, creator of Song of Iron, Megan Fox, developer of Skatebird, among other titles.
Neil Jones, creator of Aerial Nights Never Yield and Thomas Sala, developer of The Valkyneer.
So to kick things off, I would like to invite Joe Winter to take the virtual stage and talk about starting a project. Joe.
Hey, thank you very much for the intro.
And I'm super excited to be here.
I'm gonna be talking about the beginning stages of development.
And, but first I guess it's good to talk about why I'm here and what I've done.
You can go to the next slide.
Who am I?
My name is Joe Winter.
And I've been in the game industry for 15 years now as an animator.
Here's a bunch of the games that I've worked on.
But the reason I'm in this panel, you can go to the next one, is Song of Iron, which is the game I released at the end of last year, which is my first solo project and my first indie game.
I was really excited to work on and I used a lot of these things that I'm about to talk about to get it to be a thing that I could actually publish and release.
You can go to the next one, Thomas.
Again, I'm talking about the beginning of the game, of developing a game, and it's one of the most exciting times to develop, especially as a solo developer, everything is sort of to you, like it's all up to you to make whatever you want.
But I think it's also one of the easiest times to quit and sort of leave a project behind.
So I really want to focus on the survival tactics that helped me get through it for Song of Iron.
and you go to the next one.
The first one is art from the start.
This is, I, there's a various, there's tons of good reasons to do art really early on in a game, but as far as surviving the early development, I think you can go to the next one.
It's really important because it gives you something tangible to look at, something tangible to see, to share with friends or the internet or whatever it might be.
And it also, it just makes it feel like you're developing a game compared to doing a bunch of tutorials.
If you stick with.
you know, the Unreal mannequin or whatever sort of generic stuff, you can really feel like all you're doing is tutorials.
And when you look at your game versus other stuff, it all feels the same.
And so you won't feel as as proud of what you're working on.
You go to the next one.
It doesn't always have to be super elaborate art.
This is some examples of something I'm working on the side right now.
It's five.
things. It's a tree, a rock, a bush, and some grass, but it's able to populate an entire environment. It has a mood, it has a feel, and the game kind of has an identity already.
So if any problems come up, I can always come back to this and feel really good about what I'm working on, and that will keep me going through what could be hard times in the beginning stages.
The next thing I want to talk about is limits.
You can go to the next one, Thomas.
Like I said, these limits will set you free.
I think as any solo developer, we really have to understand that we have limitations.
We only can do so much.
There's only one of us.
So it's really important to do this really early on.
You can go to the next one.
With Song of Iron, I set some really broad and really extreme limitations.
I can go back one, sorry.
Broad and some really like sort of wide reaching limitations on myself.
No customization, no inventory, no multiplayer.
It's going to be a side scroller.
I wanted a linear story.
So it was really simple.
And so I've kind of got this really narrow pie slice left of what I could possibly make from a game and I can go to the next one, but as that pie slice sort of goes outward.
you're gonna constantly find more and more and more potential with, like, no matter how narrow of a scope you create, there's an infinite amount of game to be developed there. And there's a couple more lists of what I did for Song of Iron. So it's just like, don't be afraid of cutting yourself off from a good experience. There is good experiences everywhere and restriction always makes creative things kind of blossom when you wouldn't expect it.
And then the last thing you can go to the next one Thomas is I'm flying through this and I'm trying to do this exact thing right now which is keeping my momentum.
This is I actually think one of the silent killers of early projects. You can go to the next one, it's just the idea that the beginning of any development.
It's fueled by inspiration of something you've seen or excitement of making a game in general, and it's so easy for all that to go away if you hit a pitfall along the way.
Sometimes this is just getting overly caught up on.
some tech you really want.
I remember I basically quit a project because I couldn't get a cape to look good.
I'd only been working on it for a few months, but the week I spent on this cape basically took all my momentum away and I lost all passion for the project.
So there's a variety of reasons this will happen, but I think it's really worth being aware of.
and watching out for yourself getting stuck anywhere so that you can move on to something else. Do some art, which works great for the first point. Do some other system, whatever it might be. Watch out for those things you can trip over early in development.
And again, these are really fast micro talks, so that's it. We're moving along. But it's just, I think those three things are huge key things that kept me going at the beginning stages of Song of Iron and honestly built towards making the game a success for me in the long run. Thanks.
All right.
All right.
Thank you, Joe.
You really put the micro in the microtalk here.
Race through it.
All right.
Thank you.
We will go over to Megan Fox.
She will talk about platform deals.
Megan.
So yeah.
Hello.
I'm Megan Fox.
I'm glassbottommeg on Twitter.
I made Skatebird go to Skatebird Rocks.
You want to learn more?
You've probably heard of it.
I would be a score, yadda yadda yadda.
Anyways, I worked, used to be AAA.
I worked there for three years.
That was Playwell Studios, and it was also NetDevil, and there was some other name.
Went through a lot of names.
Made LEGO Universe, if you remember that.
That's about it, though.
Then I've been indie ever since, about 10 years.
My first game was Jones on Fire, which was totally solo, except for, I think, music.
After that was Hot Tin Roof, which was less solo, Spartan Fist, a bit more solo, and Skatebird, which is less solo but started more solo.
A lot of my stuff is, the way I start is I try to neck it down to a point where I can make this game on my own if I need to, and then based on initial hype, I will pull on contractors or whatever to do that little piece of work that I can't do myself.
A lot of other solo developers might instead use asset store stuff, which also works if that's what your preference is.
Also, it's usually cheaper to do that, but it just kind of depends on the kind of person you are, which brings us to platform deals.
What Joe was talking about with making it pretty first and how that helps him, it'll also help you with platform deals.
Generally speaking, you want to make a polished prototype.
You want to do marketing first, which was a talk I just did, which basically just means make it pretty and make it look like a complete game before you start showing to other people so that they can...
kind of anchor in the idea that this is a complete game, it's huge and big, instead of seeing the shitty prototype and having to imagine how this is going to become something larger.
It also helps before you have a deal, if you've got some amount of buzz.
That doesn't mean you have to have a lot of buzz, but if you've at least announced something that looks pretty and looks like a complete game, even if it very much isn't, you'll have an easier time talking to platforms because you can say, look at this thing, which theoretically exists, and you understand it, instead of.
look at these two cubes which are awkwardly bumping into each other, I promise this is going to be a great game. Give me $300,000. That's a much harder conversation. Also, platform fit matters. So obviously, what Apple cares about is different from what Xbox cares about. Sony, you might think they're identical to Xbox, but no, what the kind of game that Sony cares about is very different from the kind of game Xbox cares about. They all have their own style and vibe.
and you kind of need to pick your targets well.
That doesn't mean that you shouldn't like throw a wide net and try everyone, but you're more likely to get with whichever platform is closest to the vibe you're considering.
So look at the other games they funded and try to work out what they tend to like.
Usually you can figure something out from that.
Now, how to make the approach.
That's going to be, well, if you have a friend, that really helps.
That's generally going to be somebody who's made a deal before.
If you know someone like this, you probably do.
And if you don't, you don't.
So harping on this isn't useful.
You can also approach at a convention with a demo.
This is a little harder.
Your pitch better be fucking locked in perfect because you're gonna get disregarded really quickly if you're not careful.
Usually you're not looking for like a big two-hour demo at this point.
You're looking for like it sells the game in 30 seconds and maybe there's five to 10 more minutes of gameplay if they care.
Because if you can get people to sit with you that long, it's going to be amazing.
Usually this kind of meeting is something you set up ahead of time with a platform person, which you've hopefully interacted with an email.
And it'll be a coffee meeting, that kind of thing.
And theoretically, the block will say 30 minutes, but you've got like five maybe.
So again, pitch better be locked down.
Your other option is to be a licensed platform dev and then cold email the part, the group in question.
And good luck.
This can work.
If you need help finding these emails, again, talk to someone who's done the deal before.
But you really want an intro if possible.
So yeah.
Now as far as these deals look, there's variance in this.
Most of them are going to be limited to no upfront and all back end, which means Xbox or Sony or Amazon might say, we will give you the $100,000 or whatever when the game launches, which means you have to get from here to there without that money.
There's a bunch of ways of doing that.
I've used Kickstarter in the past.
Your strategies may vary, but you generally need to plan for this if you're going for platform money.
That doesn't make it impossible, but it does mean that your strategy needs to consider that.
Also remember that some deals can overlap and some don't.
So don't go pissing off one platform because you think you're going to get to deal with another platform.
Clearly, you might think Sony and Xbox don't overlap.
That's not necessarily true.
It depends which deal.
And even Apple and other stuff.
Apple, it's harder to get to if you don't start with them first, but often that can go to other places.
So again, don't burn bridges, just don't.
Which is pretty much the gist of how to do, how these deals work.
More detail, you know, is more involved, but five minute macro talk, so yeah.
All right.
All right. Thank you, Megan.
And now it's time for Neil Jones and his presentation on porting. Neil.
Yo, what's good, everybody?
Thanks for being here.
I want to shout out Joe and Megan. Those presentations are awesome.
I agree with everything they said, but, you know, in a more deep, sexy black man voice.
So, yeah, can you go to the next slide for me, please?
Oh no, that one.
Yeah, so I'm Neil.
I go by Aerial Knight online.
I created this game called Aerial Knights Never Yield.
It's a super dope, amazing game.
I'm super amazing.
Everything about it is amazing.
You should definitely check it out.
But no, I came from, you know, just a student type of background, just like I'm sure most of you in the audience.
where I tried for 10 years to get into the game industry. It's really rough. It's really hard.
It's a struggle. You know that. So I kind of made the pivot to trying to make games by myself.
So like what was previously stated, I started off just trying to make something simple, something I could do by myself. And I went through the processes that were just explained.
And I made it to the point where I was ready to do ports.
I landed a publisher.
I had this dope trailer.
Everybody was hyped about my game.
But now I had to get it onto all these platforms.
And as you see on the slide, Never Yield.
made it onto the Epic Game Store, Xbox, Nintendo Switch, Steam, PlayStation is coming out later this week on mobile devices or next week. I don't know what day it is. It doesn't matter.
But it's coming out on mobile devices as well. The important thing that the thing I want you to take away from porting is that it sucks. It's terrible and it is the worst experience.
because you would think that it's easy.
If you look online, it's just, you know, hit the button and it's done.
But no, each of these platforms have really specific requests, not even just as far as code and making sure that it works on the platforms, but as far as marketing, as far as your contact with the person who is your direct contact for that platform.
You need specific trailers.
There's rules, and all of the platforms have different rules.
It's just a really rough experience.
So one, only go down that route if you have to, and two, start with a base platform.
Base platforms, I like to think of it as like Pokemon.
Like, pick a base platform that you're happy with because you're gonna be stuck with it for a while.
But if you go on to the next slide for me, please.
The pros and the cons.
The pros, everybody knows pros.
More platforms, more revenue.
But the cons is, is it worth it?
Do you want to put all of your energy into launching on PlayStation at the same time as you're launching it on mobile?
because there's going to be a price difference.
There's a different audience.
You have to juggle both of those communities at the same time.
And, you know, community management and talking about the game also ties heavily into the platforms.
When do you want to launch on mobile?
When do you want to launch on Switch?
Do you want to do all of these at the same time?
Are you going to do this alone or are you going to hire people to help you?
And you can go on to the next slide for me, please.
Um, so yeah, I listed out a bunch of reasons.
These, this not even have the reasons, uh, why, why porting sucks.
Um, but you know, you have to track bugs, update the game and like all of these updates, uh, aren't one-to-one, even if they're on a similar platform like steam and, uh, Epic game store.
Uh, just because it's a PC doesn't mean that the store fronts, uh, support the same kind of.
way to update it. So it's work no matter what platform you're doing these updates for.
So if you launch on five different platforms, there's five different versions of your game that needs to be made. And each of them might have different bugs, and you have to track what's going wrong where.
And a really important thing that a lot of people try to keep track of is just keeping the experience the same.
That's a big struggle I faced with doing multiple platforms, making sure that the experience was the same from the Switch to the PlayStation to mobile.
And again, there's different rules.
So the Switch doesn't have achievements and trophy hunting, but PlayStation does, and Xbox does.
Are those achievements gonna be the same?
Are they gonna be different?
Or what is easier, what's harder to do?
And if one achievement doesn't work, as people who play my game, you have to address that, even if it's just for one platform.
And launching at the same time. This is the biggest sticking point.
From my experience, I don't think I would want to launch a game on multiple platforms more than to at the same time again as a solo developer. I had help from a publisher to get to the point where I could launch on multiple platforms. But even with that, it was still an extreme hassle and put more of a burden on me unnecessarily when I could have done a rolling launch.
Launching on multiple platforms at the same time is a really big burden to put on yourself.
And if you can, I would say just pick one or two platforms, start with that, track the bugs, get all your fixes out the way, and then launch on your next platforms.
I'm almost done. Can you go to the next slide for me?
Asking for help. As solo developers, we want to be, you know, that fantasy of I did it all by myself, you know, I did it with no help.
I'm this master coder, master artist. You know, I'm that person. I'm that dev.
But it's not bad to ask for help.
I think all of us get help in some form, be it the asset store, or when it comes to porting, or getting trailers made, we're getting help some way, somehow, anyway.
So if you're doing porting.
there's no harm in reaching out to a smaller studio or another individual who can help you with that burden.
So you can put more of your focus on marketing, which is something that indie devs are terrible at.
And you can go to the last slide for me.
So yeah, just to sum it all up, just choose your starting platform wisely.
Remember to Pokemon reference, uh, take your time, uh, so that you can focus on the platforms you did launch on, um, and you know, take your time rolling it out for other platforms.
My, uh, my mobile version is launching a year after the base version.
Um, and, uh, get help.
And it's, it's always cool to just reach out to people and ask for help.
Thanks.
All right, thanks, Neil.
Thanks.
And to talk about that post-launch period, here's Thomas Sala.
Hi, everybody.
I'm Thomas Sala.
I created a game called The Falconeer.
And I'm busy creating another game called The Falconeer Bulwark.
I've been in the industry a long time, doing all these side jobs, work for hire kind of stuff.
Ended up doing a lot of VR, mobile games, serious games, educational games, even.
I am from the Netherlands, so sorry for the accent.
I co-founded the studio back in 2001 before self-publishing.
So at some point I got really inspired by all the Indies and what everybody else was doing and I went, I want that.
Eventually I did. It's an interesting journey.
I kind of started that by doing modding for Skyrim.
That's how 12 years ago, 10 years, 10 years ago.
I also don't like texture.
So that's something I'm talking about tomorrow in another talk.
I'm going to talk about what happens after release.
So you finish your game.
You've ported it.
You might even have had a platform deal.
And now it's going out into the world.
So let me start off with the first thing.
If you ever finish the game and release the game, you need to give yourself an applause because that is a momentous achievement.
And that is something that often gets lost because there is no such thing as a good launch.
I've there's a magical, magical thing of a perfect launch.
I've never seen it ever.
When you release a game, it's going to impact you by the nature of being by yourself, regardless if you have a publisher, a great family, a support network, you're going to get hit.
And things will go wrong, you know.
It is a given.
Part of that, which is going to happen, that if you are by yourself, and I've found this distinct from working in a studio, is that your expectations are going wild.
When you're together with a group, you can moderate each other, you know, you can get realism.
If you're by yourself, you're going to walk down the street after your game is done, before it's launched, and think, I'm getting a game award.
It's just your mind is going, imagining all the stuff that might happen, and then you're not allowing your...
Okay.
Also, again, I hear there's emotionally stable people.
I am not one of those.
So if you're super stable, this is not, you know...
Excellent. So your expectations will never match reality, no matter how good the reality is.
We will always look, but yeah, this other guy, he sold a million or this guy or person or she sold 10,000 copies. I'm only selling a thousand copies. There is, you know, that is, and it is, it is momentous. You can't run away from that. And it will hurt you and it will cause, how do you call it?
emotional situations we need to deal with and affect your mental health basically.
To be honest, when I launched the Falconeer and it was an Xbox launch title in 2020, I spent a week or longer just on the couch under a blanket, shaking. And this actually happened.
You know, part of that is your own expectations. Things go wrong, you see your own mistakes, you are your own worst enemy. You will see every mistake you make.
Then you have reviews. I make the joke, you know, a good review goes like poof, it's great.
Oh, a little endorphin. Oh, someone liked it.
And a bad review stays with you for days.
So, and you will always have bad reviews and you will always have good reviews.
So that becomes, you know, the more successful you are, the more reviews you get.
It doesn't matter if it's a user review, or you go on Reddit, because you're gonna, and search your own game and find someone it sucks.
Doesn't matter.
Each one of those is a cumulative hit, and you're by yourself.
And like I said, there's no personal distance, because you're also the only one responsible.
If you are in a group, you can help each other and say, you know, okay, it's the art, or it's the publisher.
You can blame someone.
If you're by yourself, you're gonna blame yourself.
And it'd be true.
That bug, that killed it.
I launched, got sick, fixed the AI, but accidentally made them killer.
So that showed up in the reviews.
No one to blame but myself.
And said that, you know, quickly fix this before, you know, with the final update, before it goes into cert.
Nah, I should have done that.
So everything will hit on a personal level.
This is also your art.
Well, I'm a big favorite saying.
This is not art like that, art with a big A.
You're making something.
It is your emotional expression into the world, and there will be pain.
So a good thing to do, I have no other than, is prepare for this.
Know it will happen.
If it's big or small, you know, if it's just your first itch game, you will have all these things happen.
You know, if it's your, you know, you got a platform deal and you're going to E3, for me, I think it will always happen.
So make space for them.
Find a support network and figure out how to survive that.
I think it's something we should say at organizations like GDC, mental health is important.
And we need to figure out how to do that.
So that's one.
So then you've launched.
You've waken up after two weeks, read all the reviews, and you want to run.
But you've got to be a good dev.
You've got to support your game.
And you've got to grow it.
We live in a games as a service world.
And I've said this, it's easier to do games as a server if it's just you.
There's no committee, nobody's there.
A bug comes in, you see it, you fix it, you update it, and you send it off for certification, if you're on console.
That is a mixed bag, because it requires you to open up to all the negativity that's come and come.
And the most useful things are the worst one.
The worst bug you made, another person said, Thomas, you know, your mouse and keyboard sucks.
Why did I buy this game?
Because Thomas made it on console.
The thing is, you start talking and figure out you have to listen.
And that hurts.
So that is another thing, which is prepare yourself.
And my advice to some people is just don't do anything.
Just hide.
I'll get to that in the last slide, why I don't feel you should do that.
There is a positive there.
There's trolling.
their stuff, you will find comments on your Steam reviews that will make you go, that won't go out one year and you know, that will remain with you and keep you going, you know.
And that is, you know.
I don't have, we don't have time for examples, but you will find them.
And so you cherish them and you know, you thank them.
And they will help.
So going in isn't all evil.
You know, you can find great people.
They'll come to your discord and will help.
And like I said, it's a development.
You've spent a year, two years, three years, four years, five years in a bubble.
It's just you and your this is going to be amazing.
And trying to hype yourself up.
You're gonna be, you know, all the stuff Joe said, it's gonna go bad, you're gonna get stuck, and then you're there, you've been in a bubble, and then you have to go out.
So that bubble's gonna burst regardless because it's artificial.
After if you don't have all the support for the Falconeer, I've done.
dozens of updates, a bunch of DLC, and suddenly, you know, some things actually help your sales.
You can actually, you know, it gets better if you have bundles and special editions.
And when you have more DLC and more updates, people will enjoy it.
And you know, you get to be a good dev because there's nothing that people, when people, someone comes to you, this sucks because it's buggy, they actually want it to be fixed.
And if you then fix it, you know, they can try to love what you made.
So you've done all that.
then you need to prepare graciously to detach.
At some point you need to make a new game and there's a graceful exit at some point.
I don't know how to do that.
It's just slowly drift off and do it.
But I like to think that I can do some things graciously.
And what I want to end with, because I'm not as fast, when you're a solid development, everything you make is yours.
You are not spinning off stuff that, you know, let's see if it sticks.
You know, that's the term we use in the games.
Let's make a demo, see a prototype, see if it sticks.
But, you know, I've consciously chosen to call myself Tomasala and not, you know, whatever studio, it's just me.
You're building an over, I don't know how to say it in American.
You're building on yourself.
And everybody that's going to go back in history is going to see every game you made.
So it's not about firing, forgetting.
It's about building out your catalog so that people come from you.
Because that is you are.
And I like to say.
I aspire to be something like a fantasy author.
You love your favorite fantasy authors.
They make seven book deals because they know people come back and one of the books in the middle might be not as good, not to your liking, but you keep coming back because you're invested in the world.
I truly believe for solo development that is a valid path to aspire to.
And it makes sure that whatever, you know, the gracious exit being that you're happy where the game.
ended up. You made sure the bugs got fixed. It's your best games. And you know that if you make something even better in the future, and people go back to play your first game, it all fits and makes sense. And it's something you're proud of. So yeah, building upward.
So that's my microcontroller.
All right, thank you Thomas.
Well, we have prepared a couple of talking points that we'll dive in a little deeper and see what makes you guys tick.
What motivates you, what scares you, what drives you and what's going solo means for your mental health and your creativity, your finances.
So let me kick off with a question directed to all four of you.
So when you started your journey as a solo developer, was there anything that caught you off guard?
But you didn't expect.
Let's start with Megan.
Yeah, so.
Whenever I made Jones on Fire, whenever I made Skatebird, what it was supposed to be was a little itty-bitty game I could manage on my own.
Because previous game I just failed, I had to let everyone go, it was just me again, just like Jones on Fire.
And then it grew, and I still didn't have a team, it was just me.
So that was fun.
So we had to find, well, I had to find a way to flex and meet audience interest and expectation.
without undercutting what makes my studio work, which is I don't have employees because I don't have the kind of burn rate or income to make employees work.
So that whole thing, I don't want to scale.
I can't scale without destroying what I am.
So I ended up collaborating with other tiny indies, other people that are essentially like me.
We kind of Voltron together to make something bigger and then we go our separate ways after.
I found that other people that are our size tend to do that.
It works pretty well, but yeah, your mileage may vary for me.
That's how I got around it.
But.
It was terrifying at first.
All right.
Neil?
Yeah, so I didn't know how depressing it was.
Like Tom had said, I started making the game and I was really hyped up about it.
Then I got real sad in the middle of making it.
Then I got real excited like towards the end and then I didn't feel like finishing it, but I got pressured because people were expecting it.
But when I finished it, it was just like, Like you said, I didn't feel like doing anything.
I was just like sitting there sad, watching Scandal.
It's a good show.
But yeah, I just watched like the whole season of Scandal, and I was just like depressed.
And I didn't want to look at any of the reviews.
But people were giving me good reviews.
I got like awards and stuff.
But I didn't care about any of it.
And I wasn't expecting not to care about any of it.
I thought I was going to be super excited about everything.
But you know, you know, you finish the game and it's like the thing that like has been you for so long and it's not you anymore.
It's like just out there.
And it's like it's pretty depressing.
I wasn't expecting that.
That makes you want to do another game.
It doesn't.
Joe.
Yeah, I mean, I'll echo the emotional roller coaster.
That's definitely a thing that I think I might be one of the people that Thomas has heard about.
I feel like I'm a fairly stable, emotional person, but this surprised me a lot.
And honestly, I owe Thomas a huge thanks because he was messaging me on my release, telling all the bad viewers to to, you know, go away and.
And just, you know, he was walking me through it and it honestly it's a it probably it saved me. I, you know, it was so great. But what the other thing I'll mention is how like how much stuff is outside of what you think of when you're thinking about making a game.
There's all like the porting is one of those things and talking about hiring people or getting contracts like there's all these little things you have to be ready for that I didn't you don't think about when you're just like animating something for fun and all of a sudden it's a project and you have expectations and so.
being prepared for that sort of stuff once it starts going somewhere is worth it you know having a lawyer all that kind of crazy stuff it's they will save you the stress of the unknown which is all that sort of stuff all right thomas i think for me the biggest surprise was uh that i could actually do it because I'm a very insecure person, so I always think, I can't do this, I can't do this, and I'm not a good programmer.
And it turned out, if you do something good enough, you can actually do it, and you learn, and you get better.
And I do a lot of what's called wall-bashing.
It's just boom, boom, boom, until something works.
And at some point, I said, oh, it's becoming a game.
And that's super motivating.
And when you're stuck, you can actually get yourself out of slump just by, but I'm actually doing it.
And that is, I find that mysterious, and I still do, that at the end, like I said, when you finish a game, you need to applaud yourself, because it's like, you look at it and go, I made this?
Yeah, you have no idea.
It's like.
Really? When did this happen?
Well, three years or something.
Yeah, three years. Like Joe said at some point, the person that started it isn't the person that's finishing it.
Yeah, that's a big surprise that you can actually do it.
Look at you with the deep comments.
I got to write that one down. That's going on T-shirt.
Yeah. It's fun as well to be a solo developer. We'll get to that.
Absolutely. It absolutely is.
All right, the next question is, I guess, for Joe and Megan.
As a solo developer, you're by definition, you're alone, right?
And so how do you bounce ideas of, of, you know, how does the creative feedback loop works for you?
So for me, it's a family and friends.
Mostly family. I bounce a lot of my partners and if I can't sell them on a game idea and get them to understand what it is and why it's fun, I tend to take that as a big warning sign.
The regular people in your circle tend to become unwitting and possibly unwilling victims for you to inflict your ideas upon and just, hold on, does this sound cool? Okay, but wait, what if I did this? Does that sound cool?
And they're like, okay, okay, I'm going to go to my job now and you're like, okay, this is my job.
Yeah, it gets, but yeah, the kind of them.
And if you've got a local development group, anything like that, that helps, but that may not be like, I live in a little tiny town.
There's no game development group here.
So it's kind of just us and yeah.
I like you call them regular people.
Joe?
Yeah, I mean, ideally you have a huge group of people to slowly rotate through so you don't burn any of your friends out of like your constant interaction, but for me it really was just a few friends from the industry, mostly animators.
So there's sort of an inherent bias from them they're all developers which will skew their opinion a certain way they're all animators so they're all just judging my animation, and not worrying about if the game is good or not.
So they're like with any feedback though you're, you're translating what people are saying right.
and just running ideas through people to see if it sounds good.
I think one of the best tests if an idea is good, if they like it and then they re-explain it to you, like what you thought, or if they go, but what would be also cool would be this, you go, oh, so you don't really care about this idea, you're already off to some other thing.
It's this great, are you paying attention and listening or did I lose your interest even telling you the idea?
And then something that kind of popped up for me late in production, as far as kind of getting feedback, was this, and Thomas kind of mentioned it, that I had said it was like this idea that there was different people creating this game, even though it was always me.
And one of them was the designer who came up with all the ideas and built all the systems.
And then late when I was burnt out, I was stressed.
I couldn't, I didn't know if the game was good anymore.
I had to just trust this older version of myself.
or this earlier version of myself that thought it was a good idea.
And I just kept building the game, believing that I was right before.
And I just couldn't judge the game anymore.
So I became my own sort of person, I guess, too, in a funny way.
Well, it works.
Thank you.
So this one is for Neil and Thomas.
What's the effect?
We touched upon this a bit.
What's the effect of being a solo?
Of being a solo dev?
What's the effect on your mental health?
Neil?
No, no, Thomas goes first. So he can like be a downer.
Everything.
I think I'll try to be cheerful. So it's a huge effect on your self esteem insecurities. And it does force you to confront all that because there's nobody else to you know, you can't really explain it to other people when you're already on that train right.
So It is, you are, you're going to do a lot of growing and learning and stuff.
So it's, it's, it's intense.
I've now done it once.
So, you know, uh, looking forward to the second time, because I, yeah, the Dev for Cloud, um, CloudPunk, I think it was, he said that thing where you hate it for three months and then you start to love it again, it took me over six, six months, you know, to re-engage with it.
Uh, but now I, I love it again.
And I, I feel it did, you know.
I'm back to enjoying it, I can even look at it again.
So you do grow, you know, and now I'm happier than ever, because there's great advances, you can be with your kids, you're at home, all the stuff we forgot.
I'm just making it permanent, you know, I don't ever want to go to an office again.
So, yeah, it's heavy.
If you get through it, it is great in a sense as well.
But is it a bit of an up and down as well, depending on where you are in the development?
You're now in a situation where you start out with a new game, right?
Yeah, definitely. The new game phase is the best.
Everything is hype.
You have to think about, oh, they're epic, you know, just one creative ride.
And it's just, you know, look, the bloody 20 percent.
It's where all the heavy work gets done.
And what Joe said, where you lose the ability to gauge if your own game is shit or not.
And you run around going, it's shit, it's shit, it's shit.
And we about five days ago, it's shit.
And you do something like a giant crap town.
Excellent.
Oh, it's epic.
And then it's shit.
So it's a roller coaster.
Yeah.
All right.
So Neil.
Yeah, we keep saying that it's depressing.
I think everybody gets to that point.
But what made me feel better, because like Thomas said, after my game came out, I was just real sad.
And I couldn't even look at it.
I was like, it is what it is.
It's done.
My name's on it for all the reasons Thomas said.
I put my name on it.
and I just was I just kind of washed my hands of it. I was like maybe I'll look at it later.
A couple weeks later I started going on Twitch and just watching people play and watching how excited people were about it.
And it got me back into it.
I was like, well, maybe this is good.
Maybe I did do something here.
And then I got an email from like this mom who was like, my kid been playing your game.
And then he found out that you look like him.
And he was so excited.
And I hopped on a call with the kid and he was like super excited and stuff like that.
And he said he wanted to start making games.
And I followed him on itch.
And I was like, I can't wait for you to make a game.
I'm gonna be the first one to play it.
And it was like really inspirational and I like, oh man, I kind of want to make a game now.
That's awesome.
Nice. So this next one is for, I guess, for Megan and Joe. So how do you handle the internal discussion between your inner producer, the one who wants to do everything on time, and the inner designer who wants to keep working on it and make it better and better? So how do you handle this?
Well, Megan.
Okay, so I'm one of the weird ones that likes organization.
I use toggle to time box tasks.
And often I'll pre-plan a day with like, I need to do this, this, and this, they each get their own tasks.
So that at any given time I can look on there and go, okay, this one is what you're working on.
And this is what comes next and so on and so forth.
I also use Trello to list out all the things that I think I'm going to need at the start of the game.
So that at any given time I can look at this and go, it's about maybe a couple of years or something left.
And I can see it shrink.
And when I get to the last six months, I can go, okay, this isn't important and this isn't important.
I know that's a terrible idea.
And I can kind of shrink the list down to something that maybe is doable by our launch day.
And then of course we delay twice because it doesn't matter, but still, at least I'm within like six months to a year instead of three or four years over.
I'm one of the designers that, I like limitations.
I like painting within the lines.
I also like drawing the lines, but I'm more creative if I start by drawing the outline of, okay, this is.
roughly the shape, and then I figure out how to work within that space. That's how I work.
I don't know about others, though. Well, you're actually your own producer there.
Yeah. Joe?
I don't think that we could be much different probably from our methods. I very much, and I kind of talk about it in my thing, I'm very much a work on what feels the most important at the moment type of a person. I do not have a schedule. I've loaded Trello like three times and then forgot I put anything in it kind of thing. But for me, it's a much more fluid and it's much more fast-paced work.
style to work on what I'm the most interested in. I think when passion's involved, work is always done quicker and more on target. I think what helped me be like that is setting those really strict limits on myself early on. I had a really clean picture of the scope of the game. So I I was good at never trying to add anything that would distract and would kind of outscale myself.
But once I got in that box, I just sort of did whatever was feeling right. I would track some stuff once in a while. I would be like, I'm doing a lighting pass on the entire game. I got through a third of it. It took me this long. I'll just multiply it and I'll guess that it'll take me another week or whatever it might be. And then I would extrapolate that a few times and be like, I should be able to be done by lunch.
And that's, I mean, it sounds so crazy, but it's, it's, it's really just a, uh, uh, an excitement and a passion fuel development for me.
And I, I always love working like that with animation, with whatever it is.
And I feel like I work better that way.
All right.
But the best is when you learn something new and then you're like, Oh, I can add this to my game and you just throw it in your whole game.
No, you can't do it. Resist, resist.
But it's so fun.
I know. Save it for the next one.
I do have a huge notes of like, when I have more time in the next project thing.
And that helps because my game is supposed to be a trilogy.
So it was really easy, which maybe helped to go, this can be in part two or something, you know, like it would still work, but I'll just save it for the next part.
But you did set a sort of release date, right?
Or you had a schedule to...
Did you make your release date or?
No, I delayed.
I had like a tentative spring of last year that got pushed out when I knew a little bit more about how the true pace of the game was going.
And then I delayed like one more time by a month.
It was just like, I'm just gonna be coming in way too screaming hot.
And so before I announced, I pushed it like one more month.
All right, okay.
So it wasn't that bad.
The whole development was like two years and a few months.
So indie side things, that's pretty fast I think.
All right. So this one is for Neil and Thomas.
How do you manage the combination of having complete creative freedom on the one hand and your own limitations as a developer on the other hand?
How do you manage them? I'm looking at you, Thomas.
So I am not Megan, I can't do lists and I can't do limitations.
I made a game about wanting to be free and that's a struggle.
So I found this way to get myself to perhaps just by allowing myself to faff off and I learned that's a new word, it's a proper word.
And intellectually pursue whatever I want to pursue.
I just allow...
Just like I think the theme is there's limitations are important.
So I have limitations.
I use no textures or whatever.
And then allow myself within those rules to do whatever they want.
You know, I need to wake up.
I literally, it's something running in my mind.
I'll go to bed and I wake up.
I gotta do this.
And then I have to do it, because that's what I enjoy.
I gotta go do it.
So if that means, look, if this is possible, or I've connected, you know, at some point, someone on Discord said, you know, why don't the ships and the guns have spotlights or floodlights or whatever?
I'll just sit there and go.
Gotta do it.
And I'll allow myself just to take the day and do it because it's enjoyable.
And you're a frail, creative person.
You need to go out, you need that acknowledgement that I can make something cool, even when you're stuck in making systems.
And those are the worst things for me.
So I went to my partner and said, okay, the next three to six months, I am baking systems.
I'm going to be angry.
I am going to be sad, I am going to be frustrated, it's really hard, but I got to do it.
So, you know, you got to breath and get through that.
But I also do that, but even then, it's like, okay, now make a crazy cool town because that's, you know, I'm down, got to make something cool.
And that's, you know, sometimes you gotta let yourself go and try to be free.
And then afterwards, it's a damage control.
Just look, people ask, why is the falcon here so big?
Why is there so much?
It's just me.
I got to make something and then afterwards, okay, I got to give it a space in the world.
And okay, so there's another cool place.
Nice.
I don't know what to do with it.
Uh, but that, that's how stuff grows for me.
Yeah, it doesn't feel like limitations at all, right?
I could be very harsh for it, but it's usually very unlimited.
What about you, Neil?
Yeah, same with me. No list, no list over here. I kind of just time, I box myself in the levels.
I kind of, you know, after I started the game, I figured out how many, how much time is it going to take me to make a level.
And then I kind of based that off of like how much time until I want the game to come out and then with, you know, adjustments, but I will pretty much just have an idea.
And I was like, well, whatever I was going to do, I need to do this now, because this is all I'm thinking about.
And that's kind of how the update, I had this giant free update that came out.
That's kind of how that came about.
People didn't like the ending.
So I was like, well, this is gonna bug me forever.
So I spent like three months making a whole new ending to the game and changing the story and doing a bunch of new cut scenes and stuff like that because it's all I could think about and nothing else mattered.
I knew, you kind of want to...
you know, want to have a happy ending with your game.
I can use better phrasing than that.
You want to you want to have a good conclusion as far as the story of how you made your game.
And I really wanted it to be like, you know, I saw the flaws.
I heard the feedback and I made adjustments that made me happy and people who played my game happy.
So the fact that the the game ending the first time wasn't.
good enough? It wasn't good, it was trash. But was that because of your limitation as a developer at that point?
Yeah, I ran out of time. And my original ending, I was like, Oh, I'm gonna be all, you know, artistic and mysterious, and whatever. And I show people the ending. I showed my friend Dan who did all the music. And he was like, Yeah, you could do that if you want to. And I changed the ending, like eight times. And I kept showing it to people. And the last, the last ending before the update.
I was like, you know, I ain't got enough time to change it again.
I don't care if y'all like it. I think somebody out there will like it.
And I was wrong.
But I think, you know, it's all for the best.
Nothing wrong to admit that.
So guys, we're kind of running out of time, I think.
So to wrap this up, a final question directed to all of you.
Taking everything what we heard today...
Do you still want to continue as a solo developer?
Megan?
Yeah, hell yeah.
I really like working.
Working as a solo developer, working as a small micro whatever, means that I can survive off a very, very small success, which means that I keep doing this forever.
Hopefully, at least the bar is lower to keep surviving.
And I can work on weirder stuff.
Like if I was working on a 10 person, about a hundred thousand dollars a head, million dollars a year kind of studio, there's only so many game concepts you can make that have a million dollar a year revenue that keep you alive.
Or you got to score a bunch of publisher deals and then they're going to tell you, oh, you can't put a bird on the skateboard because that's dumb.
And well, I like dumb stuff.
So I'm going to keep making dumb stuff.
So yeah, definitely.
All right, Neil.
No, I go back and forth every day with it.
I don't really think any development is worth it unless it's a hobby, just because the...
The money isn't what people think it is.
There's a lot of hidden costs, a lot of tax costs that you don't consider.
I think I'm still going to make some stuff, but I definitely have a cap.
I think by the time I turn a certain age, and I don't know, pick a random number, I'm going to say I'm retiring from this or I'm kind of done with this.
And it's not good for your mental health.
I need some kind of team or something like that to take some of the stress and some of the responsibilities off of me.
But as me personally, I think everybody got their own kind of thing with that.
Sure, yeah.
Okay, Joe.
Yeah, absolutely.
I think part of the learning process was learning about the emotional sort of rollercoaster.
And that's why a lot of us are talking about it because it was a big surprise and it's sort of one of the realities of solo development.
But that's not to outshine the, you know, 24 months of total enjoyment I had building the game, learning new stuff all the time.
Me and some of my other solo dev friends talk about how this is the game we're playing now instead of.
playing Call of Duty all night together.
We're all sort of on Discord while we work on our games and there's, I've been playing games forever and now I'm making them for the same enjoyment factor.
And I don't, unless I have to stop, I don't plan on it.
All right, then don't.
Thomas.
I'm never gonna stop this.
I recently started, yeah, I took a long break, you know, six months, which is, and I got depressed from not doing anything.
And I started up again and then people talk mojo and whatever.
Can I do something again? Can I be creative?
I started making something and it all came flowing back and it was faster than ever, you know, it's just like a city builder and it's exciting and it's all that buzz and I want that, you know, and then preferably without the stress and mental health issues.
But that, you know, that is the core of my life, just making that.
And I love people. I love having people around me. I love working with people.
I'm just not super organized and, you know, kitted out to be a super good team member.
But I love that, you know, you get a publisher, you know, during Corona, that's a bit tough.
But, you know, why would you take a publisher?
So you have someone to talk to.
For me, that helps.
So yeah, I'm definitely going to do it again.
I enjoy it a lot.
Cool.
I think we have time for one or two questions from the audience.
Do we?
Yeah?
If you have a question, could you please walk onto the microphone and speak into the microphone?
I think you were first.
Yeah, sorry, I was really excited when you said that for the first time.
So one of the things for me is, as a solo developer, I kind of fell into leading my own project and everything like that.
At first, it just started as a passion project.
As mentioned earlier, the whole idea of doing it all on your own is that it's an idea.
Usually behind the scenes, there is a small team or people that you're getting help from.
So my question is, for the indie side of things, when you know you're completely on your own.
Do you have any advice or personal experience in terms of making sure that the people you help are properly compensated, especially when it's coming out of your own pocket?
Slash, is there a way to get funding for your individual game?
Yeah, there's a lot of different ways to get funding.
You know, there's a bunch of funds out there that you can kind of apply for and get just a little bit of money.
But as far as like getting people to help you and paying them, I had a rule that like anybody who touched my game outside of me was gonna get paid.
I would ask them and say, hey, this is what I need.
If their price was too high or like not too high, but something that I couldn't like afford on my budget, I would just say, you know, thank you.
You know, you're awesome.
I just can't afford it with the money that I'm working with.
So I would either save up some more money to try to kind of meet that cost or kind of find someone within my budget.
If I can add to that, I always say everybody I meet, I started it while I still was working, doing it in the evenings.
This is a high-risk business.
Do not borrow money, boot up your house or do anything.
This is your mental health as well.
One of the stresses I had at the end is, we're running out of money.
I've got three kids, I've got a mortgage.
Luckily, I had a publisher step in and help me out there.
Be careful with what you do and be careful with the people you're around, with what you commit to.
If you don't have the money for other people to help you, don't do it.
And when you have people working for you, allow them to be creatively free so that you respect their progress, their input.
And if you can't do that, I have problems with that, then don't do that because you're not going to be a good employer or whatever.
And the other thing is, you know, there are lots of ways to get money down.
And I hear people do rev share. It's good.
But make sure you pay people and that people don't work for free ever.
I have to cut you short. Thank you.
Because we only we were running out of time.
So I'm trying to get as many questions as we can in the couple of minutes we have left. Please.
So I'm working on my first solo game and I'm actually making a tabletop RPG.
I was wondering if any of you have experience with the tabletop side of things, because I know, you know, from the talk, it's a lot different than making a computer game.
And if you could, if you do have experience, what can I carry over from the talk when it comes to looking to publish my first tabletop game?
All right, I'm looking at the panelists. Any tabletoppers around?
Joe?
I don't have a tabletop experience, but I, and if somebody else does, please jump in.
But I think almost all of it's gonna carry over to some degree in a lot of ways.
Some of this stuff is core, just business practices, like getting yourself out there as early as you can, having fun the whole time, understanding like what it truly takes to make a tabletop game, not just...
designing it and creating the pieces, but like what does it mean to distribute that? Because that would be something that's pretty different for us, where we probably are all digital only, I'm guessing. I know Thomas did a little printing, but I think for the most part, it's all, it all is pretty relevant, except for the delivering of the product.
Which is where you really run into problems. I've had a couple of friends that have done board get, like me personally, I've never done it, but I have a couple of friends that do this.
The gist is you need to be in a position where you can spend years playtesting, because it will take you that long to slowly figure out what works with a game and what doesn't.
So you're probably going to want to develop a close group of friends that you can do this with.
You can either be online with one of the tabletop simulators or in person. I've seen both work.
The really hard part though is the publisher, because there's this massive bar between I'm going to sell my own game and I'm going to get a publishing deal.
Getting a publishing deal is super hard, almost no one scores them.
Be prepared for that not to happen.
So again, like Thomas said, don't risk your own money towards this.
Keep it very cheap.
Try to keep it as an evening's thing until you have a game that is like there.
And then try to go to the publisher and it may not work out.
But that doesn't mean don't try, just go in with eyes open.
Thank you very much.
Thank you.
Final question, I'm afraid.
After this, we'll, in the breakout room, you can talk to Telmus if you want.
Final question, yes.
Hi, question about narrative design and sort of designing the mechanics of your game.
When do the mechanics inform the narrative you're trying to present and where does the narrative inform the design that you're presenting?
Go ahead.
I think that the thing with those kinds of questions, they're different for everybody.
And you're by yourself, you get to decide.
I've heard many good talks on narrative mechanics, conflicts at GDC before.
But yeah, there is no right answer to me, you know.
It is what you want to do. Be the artist.
It's a story-driven game, a mechanical game.
They all fight.
Yeah, that's pretty much what I was going to say.
All right, so I'm afraid we have come to an end to this panel.
I would like to thank Megan Fox, Joe Winter, Neil Jones, and Thomas Sala.
For...
Thomas will be around afterwards to answer any additional questions.
Please fill in the evaluation form.
Thanks again, and enjoy the rest of GDC.
Thanks, guys.
Thanks, everybody.
