You just say two words.
I'm going to do the exact same thing, and then I'm literally going to hand it off.
So Adrian, all right.
Adrian Crook, I've known for many years.
He runs a successful consulting company that consults on mobile free-to-play games, and unlike most consulting companies, actually know what they're doing and give really good advice.
And so Adrian.
All right, all right.
I was going to stand.
I'm going to probably take it from here, though this seems like we can see each other, which was my worry.
Just to introduce the panel, of course, you know who I am, you know who Dave is.
We have Punny beside me here, COO of Kongregate, and we have Mario, Managing Director of PikPok down beside Dave.
So, we only have half an hour, so I really want to get started before we waste too much time.
I think a good place to start for the panel would just be fairly broadly around the idea of evergreen content, and if it's possible, and how you strategize for it and design around it in order to hopefully lower your development costs.
Thoughts on evergreen content in general?
Yeah, in general.
I mean, I know it's like a holy grail kind of thing, like the idea that you build once and it just serves your players forever.
But is it possible?
And what have you seen work and not work?
So this was, like one of our founding philosophies since RIFOX was this idea that we were gonna make evergreen games that people could play over and over again and we were not gonna be a content-driven company.
And that was gonna be how we managed to not only control our costs, but be more innovative than other companies.
And that's like, you can see that in something like Triple Town and Alphabear, right?
Both of those games are heavily, heavily, heavily driven by an evergreen core mechanic that you can play over and over again.
And there's still to this day, you know, I don't know how many hundreds of thousands of millions of people who play Triple Town even though we haven't updated it in forever.
It's a, you know, but what we've learned unfortunately is that as the free-to-play market has matured, it's getting harder and harder to make money if you simply are like, I have a great evergreen core mechanic and here's a couple things that plug into it.
Like that.
you can have good retention that way, potentially, if you're lucky, but you almost certainly won't have good revenue.
And so what we've started doing is we still want the evergreen core mechanic because we still think that gives tremendous value, but we're starting to try to be a little bit smarter about what we plug in around that.
So in AlphaBear 2, which is hopefully coming out later this year, still evergreen core mechanic, just like we had before, but now we have like a narrative that goes along with it, which is sort of this like pseudo back to the future-esque, you broke time and you have to fix it thing.
Um, and, uh, there's a whole campaign, which we had in Alphabear 1, but it didn't really feel like much of a campaign, and now you're actually, you have like Mario World style maps that you're navigating through, and, um, and there's a bunch of extra modes that plug in that all reuse the same core mechanic, but they have different flavors and different things, and so, like, there is a lot more content in our games.
to sort of support a richer modernization.
But that said, there's still that core that means that we don't have to be constantly, like I don't have to pay a level designer.
We actually do have different, quote unquote, levels in Alphabear, but they're very, very easy to make because they're based, again, on this evergreen core.
And that's the idea, is like, you know, we can't get away from making content, but we want to make it so that level design and playtesting of the levels costs as little as it conceivably can, and that art budget is really, really low, and on and on and on. And that, I think, we've been able to be successful about, and I think you can still do that as long as you have the proper trappings around it.
I remember years ago seeing actually a slide from Congregate that linked app updates basically with retention.
So if you're not making frequent app updates, is that something you think hurts retention or how do you still sort of ping people to?
There's no getting away from that.
You have to do frequent app updates.
And again, the question is, can you make it so that the update doesn't cost you a ton to do?
So you have a new event that people can get excited about, but that event is mostly just a tiny bit of new art.
Some level designer spent an hour designing a new level for it, or whatever.
As opposed to, I had to spend a month of engineering time just preparing this one thing.
And if you look at most of the successful free-to-play games out there, a lot of them are like this, where you look at they do an update.
tons of new content.
It's not really tons of new content, right?
Like it didn't actually take that long for them to make the content, but it feels meaningful because of the way it plugs into this evergreen core that they've built, so.
I guess related to that is making sure you get the most out of the content that you build as well.
So if you do stuff for a Christmas update or a Halloween update, one of the things we try to do is making sure that that content automatically resurfaces the next year.
And that way, not only do you have to...
not do an update, necessarily a binary update for your players to get access to that content.
But you don't have to get into the coding of it again and if you don't have a live team on it, you know, you're not having to relearn all the code.
So it's been important for us to do a little bit more work up front when we do some of those kind of seasonal updates or events.
to make sure that that content automatically comes back around the next time and you get that repeated value over the life of the product.
But you're essentially doing new Christmas, let's say, content every year anyways.
You're just saying it adds to the library of Christmas content, let's say, that you have in the product?
It depends and sometimes plans change.
You know, we had one game this last Christmas that we were planning to do something and we just ran out of bandwidth.
So we ran with last year's event content, Christmas event content, and actually the player base loved that because they got access to the characters and stuff that they may have missed out on last time that they knew existed.
So yes, we're trying to stack up updates and make seasonal stuff more and more, but very important if you're going to do the work to have...
a Christmas themed thing get that value every single Christmas, every single time.
Apple, you know, likes to see the icon update and see something actually physically change.
So we have done some instances where we've done a binary update, but literally the only thing we've changed is the icon.
Because all the underlying stuff is already there anyway and automatically switches on.
Yeah, the depressing thing about free-to-play games is, even a good game is only going to have maybe 1 or 2% D90 retention.
So, in a way, if you're not reusing the content, like, you're giving up on something fresh for the 99% of people who are seeing it for the first time.
So, you can be smart, right?
Reuse the stuff each year and do something new.
You shouldn't just put out the same thing again and be like, hey, hope you don't notice.
Like, you should add something to it, add a new character, add a new...
Boss battle added a little bit of a new like hook to the fiction or whatever the case may be but If you're smart about it, you should not be doing that new each year, right?
You should be able to build on top of what you built last year add some new competitive elements about it or some new reward system, but You know like a again a year later 270 days later chances are ninety nine point eight percent of those users are seeing it. It's new to them So be smart about reusing the content Yeah, that's something that some of our designers were a bit worried about when for games that have regular events and they want to do something new every time.
And we do want to keep bringing new content for those regularly engaged players, those long-term engaged players.
But like you say, if we repeat an event which has great content every three months.
97% of the players experiencing that content haven't seen it before.
So we've had to make sure that we're not putting our whole content pipeline to work for the 3% that are in there long term.
But just to contradict myself.
the 1% to 2% that is there a year later are literally your most valuable players.
So they're going to remember last year that it was the Valentine's event with that particular character that was the boss or whatever.
And so a year later, you should not reuse.
You should actually look at what you did before, look what's working.
Hopefully you've got analytics in place so you can understand where the engagement was.
Stop doing the stuff people don't like to do.
But if you're building a new event, each each holiday season or Halloween or whatever, you're basically not getting the full...
value of the investment that you're making in providing that content to that audience.
I've also been very impressed, like I agree 100% with what you just said, Penny, but I will say this, that I've been playing Star Wars Galaxy of Heroes a lot recently and been pretty impressed by their metagame design.
And one of the things that I've noted that's interesting about that is they'll launch this event and they'll make a really big deal of it and everyone treats it like a big deal even though if you really analyze how much work went into making that event it doesn't seem like that much work.
And then what they'll do is that that event will be a rare event and they'll have you, I don't know how it will show up, whether it shows up once every month or once every six months, I don't know, it depends, they have different frequencies.
But what's interesting is that they'll make it so that the thing, the award that that event gives, you don't get enough of it the first time you play that event.
You have to play it like five times.
And if it's only coming up once every three months, it's like, oh.
I'm going to have to play for quite a while before I actually get the final big reward of this event, which is almost always a character that you really want, one of the Star Wars characters.
And the fact that I'm playing the same event five times over is not a problem for me.
I'm not like, oh, it sucks that it's the same event.
It's actually a good thing that it's the same event, because that way I don't have to relearn it and waste a lot of time trying to get the character that I want.
So that's an actually, as far as I'm concerned, an excellent example of how they're controlling their cost.
They build this thing once, they have you play it five times over the course of a year, and you're perfectly okay with the fact that it's not changing during that time.
I'm gonna change the speed a little bit.
In the early going, when you're in development, you haven't launched yet, is there a particular KPI that you're using to sort of design features, like you have KPI, let's say you have in mind when you're designing features, knowing that you can't, potentially you can't satisfy all KPIs. And I'll just sort of get to the point here. One of the games we've been consulting on now for about three years is a game called Hempire. It's like a weed growing game. It's done pretty well and we're involved with it today, even in a live ops perspective.
But one of the things we didn't do was a good solid meta game right from the start.
We just we had to allocate.
We didn't have much money.
This is two guys in the suburbs of BC that came to us.
One was a real estate developer.
And they have no game experience.
So we essentially had to use their money very.
carefully and so you know very compelling early game a very strong community because the weed community is super strong that we hope would stand in for like the Long-term metagame and it did but now we're working on the metagame. You know when the product launched almost a year ago now, so Have you had to make similar trade-offs like that where?
You know maybe can't touch on you know day one Day seven day thirty and beyond with that initial feature set, but you you know what were those trade-offs, and you know what feature or KPI did you prioritize?
I think it's hard when you start thinking about, okay, we're going to launch this, and then two weeks later or a month later we'll drop these features and this content, and then a month later we'll drop this, because it never works out like that.
For one, users always get through your content faster than what your team thinks they will.
And on top of that, there's all the stuff that comes up, issues and opportunities when you launch something.
So it's really difficult now, we've found, when our teams are saying, oh, well, we've trying to make compromises here, we want to push this back, because we'll just do that in the first update.
And the reality is it's probably update three by the time that comes in.
So you have to be really careful about what you push back to make sure you don't undermine yourself at launch.
I think for us, the two key metrics that we look at to try and make sure we have to a good place before we launch are.
day one retention and opt-out.
And for us, retention buys you time.
If you have good retention from the outset, even if your other metrics aren't quite where they need to be, you can keep that launch audience around hopefully long enough to get those updates out and get those other KPIs up.
And as long as your updow is high enough, you can at least monetize those users that are sticking around Well enough, hopefully that you can fund that ongoing development. So updow and and day one retention are pretty big for us so This isn't necessarily shared by everyone at congregate But in my opinion the only thing that matters is the shape of your retention curve Because the difference between a good game and a great game happens in that first week.
And pretty much any game, even a terrible one, if it knows what it's doing, can manipulate a player into getting a good D1 retention.
They've just seen terrible games with good D1 retention.
But the users are very smart.
And a week in, no one's sticking around in a bad game.
And a game that is rich, that has a lot of interesting systems, or maybe a multiplayer component that is compelling, or it has a strong aspiration, it's going to have a great week one curve.
And A game that is all bells and whistles and doesn't deliver on the promise, it just is a hook, won't survive more than a day or two before retention just takes a nosedive.
Monetization is important, super important, but if you've got someone who will stick around, then you can monetize them.
Usually, if you've got a great game, it's also very easy to monetize, because whatever is compelling is usually also something that you can also monetize in one direction or another.
And so for me, it's about, do you have a great game?
Does it have depth?
Does a player experience it in a way where they can see their own journey through the game?
And that draws them through the experience.
And that if you just optimize against D1, or looking at a CPI, or looking at ARPDAU or something, you're not looking at the full picture.
But if you're going to pick one thing, for me it's that the curve of the retention is the most important thing.
Because even if you start low, if it's flat, you're good to go.
Regrettably, we're not as sophisticated as the other companies here.
We're small, and we have limited resources.
And so there are certain things that, while we think would be very important to understand, monetization is actually a pretty critical example.
We literally are not in a position to understand them.
And those of you who are small but have been doing free to play for a while will probably sympathize with this.
It's like, if only 2% of your users are spending money, then you need to have statistically significant data on your monetization.
at least on the spend component, the dollar spend, IP component of your monetization, you need so many thousands of people to download the game. And to get those has historically required spend that, you know, in soft launch that we're not capable of making. Like I can't afford to spend $50,000 acquiring test users for my game. You know, I mean, in theory we could, but we choose not to.
because we're scared and we'd rather spend that money somewhere else.
So that has meant that even though we think monetization is fairly important, we tend to ignore that and say, like, well, if the retention is good enough, particularly the long-term retention, that will at least give us time to fix the monetization later, assuming, and this is the big if, this is the only thing that I think I'm really adding to this conversation, assuming that you have the hooks for it.
One of the critical mistakes we've made in the past is that we made a game that was...
delightfully fun, but there was no good way to monetize it.
It didn't have the proper structure, the proper bones.
Triple Town is a great example of this.
Triple Town did not have the bones to become a game that could be successfully monetized.
The core was too satisfying in and of itself, and nobody cared about anything that was outside of the core.
So we were never, despite the fact that it had amazing retention and tons of downloads, we never actually got that game to the point where it made a lot of money per user.
Did you try loot boxes?
And that's just a joke. That's just a joke.
Guys, sorry. Sorry. Wow.
The second day you were like, argh!
So, we tried a lot of things.
But anyway, so the...
We didn't necessarily try everything that we should have.
But anyway, the bottom line is that that was our major screw-up.
So now when we're launching a game, we're like...
We try to make sure that it'll have good long-term retention to the greatest extent possible in soft launch.
And we also make damn sure throughout the design process and especially in the beginning that we're building something that we think has the bones for like...
If we screwed up the monetization...
if we find out after worldwide launch that we screwed up the monetization, that the bones are there, that it's like, okay, well, they're not buying this thing, but we can add this thing, and they might buy that.
We could add this thing, they might buy that.
And we also take ads way more seriously than we used to, because that's something that you don't need nearly as many users.
Like, it's not just, if you've done your job correctly, not just 2% of your users watch ads, right?
So you can get statistically significant data on ad watching way earlier in the process.
And so we take getting people to watch ads way more seriously than we used to.
And anyway, so that's our solution as a small, less sophisticated company.
But I think data, or relying on data is maybe, it's dangerous, and again, Congregate's usually known for its data, but for me it's more about, you don't need statistical significance, I think, to build a strategy around monetization.
It's more important that you really empathize and understand the motivations of your player.
I actually don't remember where I saw this, but there's this idea of the scent of blood, just an awful visual, but bloodhounds catch the scent of blood and they will dive into holes and dig to find their quarry.
And so if you really understand the gold at the end of the rainbow, you can take the player through that journey and provide many opportunities to monetize if you understand the gold that they're searching for in a holistic way.
It's not just a, here's a paywall.
whether it's a game where there's friction around progressing very quickly, and so timers obviously make a lot more sense in that scenario.
If it's a power game, being able to have a number that goes up more rapidly than your competition, and then deconstructing all the ways you can create systems around that doesn't require statistical significance, but if you wanna validate that you've made the right decisions, then obviously that's important.
But you can't...
You have to take responsibility for the actual design of the modernization.
That's a difficult thing to do, but that's not something that you should be saying, okay, well, we'll just guess.
You should actually be doing the hard work to understand the player, their motivations, and build systems that are going to allow you to create interesting systems and features and content.
I couldn't agree more.
That's basically what I meant by building the right bones.
Absolutely.
Okay.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
So I'm sure a lot of people are sitting here wondering how you can build a game, yes, cheaply from a development perspective, but how do you not spend, you know, six, seven figures on UA?
Like, that, I think, is something we'd all love to know, is, you know, have you had success building a game that you haven't needed to blow your brains out on UA over?
So, it's a discussion that comes up a lot at Kongregate, because...
In theory, if you want to control the destiny of your business, you want your strategy to involve user acquisition, if you have access to capital to drive user acquisition.
So if you have access to capital, it's an asset you require in order to be able to access user acquisition.
That informs the whole framework around how to think about designing your game in order to tap into that opportunity.
And what it does is it reduces the risk, right?
Because now you can control whether or not, like if you just happen to launch the site.
the next Supercell game and you just get slammed in featuring, there's still a path to success.
Maybe it takes a little bit longer.
But if that's not your situation, then you optimize around featuring.
And then there's a whole strategy around understanding what Apple's looking for, Google's looking for, what are following platforms that can allow you to capture some of that investment back.
But that's like a two-hour discussion.
Yeah, and I know on Hempire we were lucky because we had about a half a million dollars for that initial UA period.
Right, so then you can get something off the ground, and then month to month after that, it's all just reinvested profits.
For Pickpuck, we only started doing paid UA last year.
So we built our whole portfolio, and the success that we've had has been driven completely by organic downloads.
And I guess for us.
We try to build games that we think people will be looking for and will appeal to broad audiences generally.
So we have a lot of sports games in our portfolio because we know that there are basketball fans or football fans or soccer fans or whoever and we know that those leagues are turning over and people are watching those games and people are searching for games on that kind of niche.
or that kind of interest on the store.
So we played into that as we've built out our portfolio and tried to make games that are inherently appealing and not necessarily being just another, here's another obscure RPG with a weird name that nobody's searching for.
You know, we're making things that people can get and wrap their head around and they really have an appetite for.
So that's worked out really well for us.
Now we're finding paid UA is a great addition to that and that's helping supercharge the business.
But you can totally make games that don't require user acquisition as long as you can build something that is going to be appealing to a large audience and it helps if you can position it in such a way that Apple and Google feature it as well.
which is a whole nother discussion.
It's a whole nother panel.
Yeah, that really is, I mean, you can't really understate that.
I mean, like, we've never done paid QA in large part because we haven't been able to afford it historically.
And we, a huge chunk.
of our launch strategy for any game is make sure that Apple and Google wanna feature it.
Which is obviously a huge risk, because if that's a big chunk of your strategy, and these are big companies whose priorities change, and whose employees change and stuff, and you could be screwing yourself, right?
There's no guarantee you're gonna get featured.
But there's certainly things you can do to increase the probability, and we absolutely do them.
We maintain as close a relationship as we conceivably can with Apple and Google.
Like, that is, I will drop any meeting for a meeting with them.
and everyone who I would drop that meeting with would totally understand why I was doing it.
If Apple has a new thing that they're pushing really hard, it really honestly doesn't matter whether it's a natural fit for my game. If I can find a natural use case for it, I will.
Because that increases the odds that they'll want to feature the game.
And on and on. There's a bunch of subtleties too. Apple obviously cares quite a lot about visuals and usability and all that thing. And it's not to say that they would never feature.
Clearly, obviously, they would occasionally feature a game with terrible UI, but if your game does have terrible UI, you're way less likely to get featured by them, right? This is something that they care about as a core thing. So, you know, fortunately, we also believe that having a good UI is a really good thing for the game in general. So this is not like a conflict of interest or anything, but we make a point of emph- like, we always put a little bit extra in making sure the game feels like something they would be delighted by.
And on and on and on and on.
So that's a big part of our strategy, and I don't think you can be a successful indie if that isn't a big part of your strategy.
But additionally, the other thing that we've become, I would hope, a little bit more sophisticated about.
When we started off, we were like almost every other indie.
Oh, we'll make a great game and that'll be enough.
Obviously, that's not enough.
And so now we've started to ask questions exactly like you were saying, like, OK, well, why?
Why would someone want to play this?
How will it stand out in a crowded market?
But also we'll say things like, well, what is the unique thing that will make people want to talk about this game with their friends, which is something that is obviously very hard.
If that was an easy question to answer, then everyone would do it, and everything would be viral.
But that's obviously not the case.
But nevertheless, it's still worth asking.
A lot of people just assume that precisely because it's a hard question, what's the point in even trying?
And No, you should always try.
And AlphaBear, arguably, would not have been a tenth of the success it was if it wasn't for the bear speech sharing thing that happens in that game, which took over Twitter for like a week at launch.
And we do that for every single game.
We're working on an MMO now called Steambirds.
And in Steambirds, it's the same idea.
This is a hardcore game.
There's a lot of hardcore games out there.
Like, why will people play this one?
And it's not enough to say, well, it's different.
There has to be more.
So we're like, OK, well, how do we get streamers to be interested in it?
What do we put in the game that will make this interesting to stream in a way that no other game is interesting to stream?
What do we put in here that makes users so proud of, or so annoyed, or so amused by something that just happened that they're willing to share an animated GIF of it, and on and on.
And we have these conversations.
And these conversations are not a small part of the design discussion for the game.
They're a very significant part of the design discussion for the game.
And that sort of thing is something that, even though we all recognize you should probably do it, is something that I've noticed that for whatever the reason it tends to like fall to the wayside.
Because there's just so many other things that you absolutely have to do that that stuff ends up being like, well, okay, we'll get to that.
You can't. I would argue you just can't.
You can't have that attitude that I'll get to that eventually.
That has to be a core part of your thinking about the game from the beginning.
Unless you're in a position to do tons of paid UA, in which case good for you, but we're not.
I will say that when we started Hempire, there was no chance Apple would feature us.
I mean, they still will not.
But that was also part of the strength.
There was a lot of white space in the store.
And I remember looking at a sensor tower, kind of competitive competition index for certain keywords, App Store keywords, and you could tell there was a lot of white space, like a high search volume, low competition for those particular keywords around weed just because EA or Zynga is not going to make a weed game anytime soon.
And so that was one of the ways that we knew we had an audience we could serve relatively cheaply.
So there's...
it's sort of a trade-off, we're never gonna get featured, but we also have a way of potentially tapping into an audience that's being underserved right now.
I would kill to figure out what that next thing beyond weed that's similarly underserved is, but even when we started, we weren't sure we'd be able to be on the App Store, so there's a bit of risk associated with that too.
Right.
We're sort of almost out of time. We had a couple minutes Let's see So many questions here at originally we thought this was going to be an hour long So I've got way too many questions As far as third-party tools go is there is if I assume it's better to you know Buy than build are you building a lot of your own third party or sorry internal tools. Are you?
Are you buying them?
So we've had a long history of going back and forth between third party engines and building our own stuff and I guess for us, shifting all of our development a few years back to Unity has been the best thing that we've ever done.
It just makes, it has its limitations, it has its quirks, but it's getting better and better and for us the speed at which we can develop and the opportunities it lets us respond to.
That has been huge for our business.
And actually, one of the successes of our Into the Dead game was the fact that it wasn't built on our own engine.
It was one of the first games that we built on Unity and it was only built on Unity because we prototyped that game with artists.
So we couldn't give them any programmers.
Being on Unity allowed us to be much more flexible with the resources that we applied to that game and take it to many more platforms.
So if there's an opportunity, whether it be engines, whether it be sound assets or art assets, as long as you can put your own spin on it and you can bring your creative potential to it, Don't reinvent the wheel.
Get the off-the-shelf solution.
And your life will be way easier.
What he said.
That's perfect.
And so does that apply to outsourcing as well?
And I know a lot of your company is distributed, like remote.
How do you think that plays into cost savings versus potentially giving up that creative control and collaboration?
We've, man, I'm not gonna have time to answer this properly.
So to be clear, our company is remote, but we don't consider them outsourced.
Everyone, regardless of where they work in the world, they're like almost two of a man or a woman, full-time.
working on our stuff and we treat them like a member of the family and so they're not really outsourcing. When we have tried outsourcing, which we have actually tried, where there's like, like we need you to port a version of AlphaBear or we need you to do this or that, like this separate entity of, you know, whether it's one, two, three, four people, um, that's been very hit or miss for us. Sometimes it's worked out well, often times it's worked out very poorly, um, we have a unique culture, I think, um, and, and, uh, and the fact that we're distributed makes things more complicated and...
getting someone to plug into our culture, who know, you know, even if they've been following us for a while and knows a lot about us, can be very difficult.
And we have high standards, I'd like to think, high standards for our games, and that can also be very difficult with an outsourcing situation.
And so we've done it, but we tend to avoid it because, for those reasons.
Yeah, the quick answer for us is we don't really outsource very much.
And certainly when we have, it hasn't been cheaper.
to get the same quality as doing it internally.
What it does do is it allows you to respond to opportunities that you don't have the bandwidth for.
So it's certainly something we are leveraging more and more and working with more and more external teams because we can't do everything internally, but there are flexible business deals we can do to work with teams that don't do it cheaper, but at least let us do things that we otherwise don't have the bandwidth to do.
Our entire company is built around working with outside developers, so I think for us we don't even think about it as outsourced or not.
It's all just about relationships and nurturing productive outcomes where if you find the right alignment in terms of the business structure, it's very easy to get everyone doing their best work.
So we have not had a problem with it, and we don't really think about it as something that is like...
weird and they're like outside and it's like we literally work together on this project and it's worked just fine for us.
I think that's the critical distinction though.
You are literally built in an entity whose purpose is to partner with other developers and it's no surprise that you do it well.
We had to do it well in order to survive.
Exactly.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
And, you know, I'll just finish up.
We work on lots of different projects, but I'll just keep referencing Hempire, because we've been most involved in that.
We started with a group in South America that offered sort of cost savings, and they produced some excellent work for us, and then we transitioned the team internal once it became like a sustainable thing.
So that did, you know, work to sort of thread that needle of like keeping costs down initially, but then now we have more expensive resources, but they can do more, and they're more flexible because they're under one roof.
We have hit 330.
So if you want to ask these guys a question, we'll be out there probably on the other side of that wall.
But thank you for coming out.
