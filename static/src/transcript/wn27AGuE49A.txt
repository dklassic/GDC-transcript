All right, so we're talking about playgrounds and level design, applying playgrounds.
Briefly about me, my background's in modding, which will be relevant later, and I also work as a multiplayer level designer, including these games and some others.
But we're here to talk about playgrounds, real-world playgrounds, and what they can teach us about level design.
Specifically, what they can teach us about level geometry.
Before we get too far into details, let's get academic.
Playgrounds are persistent community spaces for non-prescriptive play.
Playgrounds are not an obstacle course to beat, or a puzzle to solve, or a story to tell.
There are aspects of obstacle courses and stories to playgrounds, but playgrounds are not consumed through interaction. They persist.
A good playground facilitates many stories, many obstacle courses, and many forms of play.
Playgrounds are also fundamentally multiplayer spaces, and they scale according to player need.
That means player count, game mode, and...
Oh, I'm blanking on the third one.
player trust.
Next slide, of course.
So Raf Koster and a team with Google explored the idea of a trust spectrum in games.
And a similar idea also applies to playgrounds.
Here we can scale up from solo and parallel play to cooperative activities and upward to large group competitive and cooperative activities.
There's also some overlap between the idea of playgrounds and sandboxes.
Often we talk about sandbox level design.
The main difference is that sandboxes, it's kind of a neutral space where you bring toys.
Playgrounds are the toy itself.
Sandboxes are also often consumed through interaction, while playgrounds persist.
Sandboxes are often really good at parallel play and solo play, but they don't offer the most rich cooperative or competitive experiences.
The core of this talk is about level geometry, but keep in mind that the way we build our levels and the way we shape our levels affects multiplayer systems.
If we played Deathmatch on a King of the Hill map, it would still probably feel like King of the Hill, because level design and game systems work together.
So here's a playground for my neighborhood.
It's pretty basic, pretty simple.
If you live in North America, you've probably seen playgrounds like this all over the place.
And the important thing here is we can't convert this layout directly to our video game levels, and we also probably wouldn't want to.
But there is still something we can learn from it.
So here's the same playground up close.
Let's break it down.
As the fundamental unit, we have a module, or a self-contained chunk.
At the heart of this module is a platform elevated up.
This serves as a kind of goal.
Keep in mind this playground is for young kids.
For me, standing on that platform is not a meaningful vantage point, but for a five-year-old, you know, it is.
In order to get up to that platform, our goal, there's a skill check that the player must pass.
A route up, in this case a staircase.
The important thing to keep in mind is that the skill check is not a binary pass or fail.
You can fail, trip and hurt yourself, but most use will depend and fall into a range of skill.
For a three-year-old, you'll be pretty slow on those stairs.
For a five-year-old, okay.
For a ten-year-old, maybe you can go two steps at a time.
And if you keep the multiplayer context in mind, if I can take those stairs two steps at a time and my opponent can't, now I've got tactics I can exploit.
Now that we've reached the platform, we have routes back down, and these function as rewards, in this case, slides.
These are also opportunities for subversive play for the skillful player who can run up the slide.
Subversive play is basically whenever a constraint of the design can be used against its intent, or when the player thinks they're doing something against intent, whether or not it actually was.
Hard to see, but there's also a set piece in the back.
This is a little steering wheel.
A good set piece helps for landmarking and theming a module.
Cool, so now that we have this language of modules, we can build into more complex structures.
So this playground's a little more interesting because here we have several modules that combine into a larger structure.
As our first module, we have a staircase going around the right.
We've got a rock wall that we're seeing the back of, and we've got some slides.
This connects to a second module with this sort of twisted ladder pole thing.
This goes up to a third module with a twisty tube slide, a long slide, a ladder going down the interior and a big rock wall.
And that ladder connects to our fourth module with a small staircase, some monkey bars and a little jump up stump.
And that takes us back to the ground.
In the abstract, if we rearrange this, we see this formula is a hierarchy, or trees.
As a playground, it's pretty cool, but it's also still pretty simple.
If we played a game of tag here, the lack of loops would be a problem.
We'd reach one end of the structure, and the only way to go back to the other end would be to run around on the ground or backtrack.
But now that we have this abstract language, it's pretty easy to imagine a version that connects as cycles.
In fact, now with this abstract language, we can imagine infinite, sprawling, huge playgrounds if we so wanted.
How do we convert this to level geometry and level design?
Here is where we get to modding.
Most of my experiments have been for Quake, the one from 1996.
For those of you who do not know, that is a screenshot of the first level in Quake.
When applying Playgrounds, the really important thing is that we have a robust skill set to draw on, that we can apply.
and Quake has that.
Quake also has advanced skill checks for its movement systems, which we'll get to in a little bit.
There's also an active player community, which means there's a lot of feedback that we can get.
The maps are also fundamentally multiplayer in that they support solo, cooperative, and PVP on all maps.
Once we adjust the layouts to be more in the playground format, we have something that's much closer to the playgrounds I've described than many other games that exist.
So taking those ideas together, here's a basic playground.
Again, if you've played Quake, if you looked at the other screenshot, this looks nothing like a normal Quake level, but this is a Quake level.
And once we overlay and break it back down into the ideas of modules and the skills involved, this should look familiar by now.
Rearranged, and if we swapped out those skills, the same hierarchy and loops could describe a playground.
Pushing these ideas further, adding monsters and items for more rewards and skill checks, and we get some pretty neat playgrounds.
Importantly, once we add enemy respawning and item respawning persistence, this level becomes a place to be rather than an obstacle course to complete, like most Quake levels.
Importantly, while there are objectives to complete, there are many ways to achieve them and many ways of adding new goals and new ways of playing.
This is a test.
So the player got a ring of shadows, which means the monsters aren't seeing them.
Normally the ring of shadows only lasts about 30 seconds, which wouldn't be enough to beat the level, but this player is also doing crazy stuff.
So...
Alright, there you go.
The speedrun, normally that map takes about 10 to 15 minutes for a first playthrough to go through, but in the speedrun, using the advanced skill checks of rocket jumping, circle jumping, ramp jumping, a player is able to beat it in 27 seconds.
And that's not something I planned, but it's something that's possible within this playground format.
And it's a way of adding new goals and new ways of playing on top of the experience that are separate from what would traditionally be a standard obstacle course.
At this point, some of you may be thinking, but Andrew, I'm not making that kind of game.
How does this help me?
And the reality is that probably you aren't making this kind of game because this is a very strange thing I'm exploring.
But if you are working in 3D environments and you have player avatars, and you're worried about camera, character, and controls, then you can still apply Playgrounds.
If you're involved in prototyping or early pre-production, you need metrics test maps.
The standard metrics test map is basically just a 3D equivalent of a meter stick.
It tells you how far, how fast, how high, and so on.
But it doesn't tell you whether your metrics are fun.
So, metrics playgrounds.
Here's an example of a metrics playground I built for a game where we wanted to get the fundamentals right very early on.
We had a lot of fundamental rich moveset that we wanted to explore.
We had a tight third-person camera, we had double jumping, clambering, crouching, sliding, sprinting, all sorts of things.
We wanted to make sure that all those things worked cohesively and none of those abilities stood out as sore thumbs.
As we started adding more gameplay mechanics and discovering what our game was, we dropped them into the level as well.
We had gunplay, so there were things to shoot at and things that shot at you.
And this was a way to sample the entire experience of the game in one spot.
Would our final levels look anything like Playgrounds?
Probably not, and that's okay.
The value of Playgrounds here was to help us identify the fun of the game rather than worrying about the level design just yet.
Returning to our idea of playgrounds, I've really only scratched the surface with my example so far.
Really, we've gotten at the non-prescriptive aspect through our approach to level geometry.
There's a lot more work to be done around the persistent community spaces as well.
To me, playgrounds are an interesting metaphor for what we can do with level design around multiplayer.
It's an example of how level geometry affects system design.
And it's a way for level geometry to allow multiplayer to be more flexible to our players' needs.
Thanks.
Let me see if I can get that YouTube video to play.
No.
If you have questions you can come up to the mic.
And if you don't, that's all right as well.
Hello.
I was just wondering if you had any examples of games that kind of have similar structures.
Because one example that I was thinking of when you were showing your final example was Apex Legends has one level.
It's like water treatment.
Like that whole area looks very similar to the map that you showed in one of your last slides.
Yeah, I haven't played Apex Legends yet, but I feel like Battle Royales are one of the cases that's exploring it.
More of a playground approach, and it's very exciting for me to see that.
I think they are still pretty rigid in some ways. They're more flexible than traditional PvP experiences.
there is more flexibility around, like I play PUBG as a road trip sim.
I don't play it to win.
And the fact that it lets me do that without ruining somebody else's experience is amazing.
Like that's unheard of like 10 years ago.
So it's exciting.
Does that answer your question?
I was curious if you had any other examples.
Oh, oh.
Mario 64 with co-op.
is pretty cool.
There's a speed run of Mario 64 with co-op, I think, hacked in.
That's just amazing.
But it's another case where the level is consumed through interaction.
So it's still not 100%.
Thanks.
Hi.
Do you think that this playground concept is something that is in any way applicable in a two dimensional environment?
I haven't done much 2D level design, so off the top of my head...
I don't know, I feel like you could take something like Spelunky.
Were you here for the previous talk?
Okay.
So radically non-linear level design is Audrey's talk.
Or Aubrey.
Okay, Aubrey.
And...
Yeah, I feel like a contained arena, almost Pac-Man-like, probably would let you do some interesting things there.
Thank you.
Hey.
What kind of concerns do you have for making sure that the parts of the playground, like, feel attached, rather than just, like, independent parts who just happen to be put next to each other?
Well, it's specifically that they build up into a hierarchy.
A lot of this is that there's gravity at play and that you can fall back down, and to get to the higher points, you have to take a route up, and that naturally creates connectivity between these nodes.
I'm not sure that answers your question, though.
No, that's fine. It's just like something feels like, like, separate puzzles that just happen to be put together, and there's like, what kind of thought is put into making sure they feel fine as a whole rather than independently?
Mm. A lot of it's just playtesting a lot, because if it's too far of an outlier, then nobody's playing it, nobody's using it, and it's, yeah.
All right.
Hi there, awesome talk.
With regards to this, one of the things you had mentioned was you have the set pieces and stuff with regards to actual playgrounds.
And we've got these, with your playtest examples, the different elements that make up your level.
When we're getting more along in pipelines for level production, we start to add more geometric features.
We start to add more things that draw the eye more.
How do we, like if we were going to theoretically make games that sort of center around these kind of node-based ideas, how do we try and preserve that node-based, like keeping the focus while adding our geometric on top of that?
I don't think it inherently has to be as geometric as I've done here.
A lot of that's for the sake of fast iterations and, again, helping players realize this isn't standard Quake.
Don't expect standard Quake gameplay.
You could do, and I have done, experiments that are much more traditionally pretty and less LEGO blocks.
The specifics of solving for a high-fidelity environment, it's going to be case by case.
Do we need to switch to Jerry or do we still have time?
I'm not sure what time it is.
We started, I think you have a couple more minutes.
Okay.
Who's next?
You can go first.
Hi. So you mentioned that playgrounds are where you bring toys and sandboxes is the toy itself.
Yep.
Do you find that there's any room for overlap between the two or in the case, like, is there any examples that you can think of?
Yeah, yeah, I feel like often the term sandbox has been used to mean playgrounds in some cases.
Like, I'm thinking of Bungie games in particular, like sandbox designers around weapons and the Halo series.
To me that's almost more playground design than it is sandbox design, because it's not...
I don't know, there's some fuzziness in the terms there and there's...
definitely some overlap. I think the main thing is how persistent the space is.
So, talking about how you use playgrounds as a form of establishing your metrics, do you consider this to be the most important part of this playground technique or that it...
sort of like spreads out throughout the entire design of it.
So like for example, you said earlier that you create a playground to establish your metrics.
Does that sort of design element showcase itself as good as it seemed with the metric establishment that you had showed earlier?
When you say showed earlier, do you mean?
So like that image where you had showed that playground that you built.
Yeah, this one?
Yeah.
So does this sort of playground establishment translate better for establishing metrics, or just in general design?
Or does it, in your opinion, spread out basically evenly all over the place?
Um, like for me this doesn't replace other metrics test maps because you do still want to verify, hey, does my code actually work?
Am I actually jumping five feet? That kind of thing.
I feel like though the context that's provided by this kind of a fun experimental play space is very valuable in determining whether you're, um, whether it's actually fun.
definitely a problem I've run into in the past.
The only metrics test map we had before this was a big, open, flat box.
And as a result, everybody was running really fast and jumping really high, and attack abilities were going miles.
And obviously, because if you don't have context around you, you can't tell how fast you're moving.
And as soon as we did this, it was like, oh, whoa, slow down.
So hopefully that answers your question.
Yeah, thank you very much.
Hi everybody, good afternoon, it's great to be here.
Professor of Game Design at Miami University in Oxford, Ohio.
It still doesn't make any sense to me, but that's just the way it is.
And I'm a play engineer.
So a lot of what I do is designing physical, hardware, electronic, digital experiences.
So kind of running the gamut.
If you've ever been to Alt Control GDC, for example, that's something I've been involved with for quite a few years.
And this is real world level design.
Sort of.
It's going to be a bit of a bait and switch, so that's fun.
This is probably a little more accurate to it.
So what we're really going to talk about is a few lenses that I use to look at designing in spaces and how that connects to digital worlds, real worlds, where the similarities are, where the differences are, and specifically looking at the boundaries of designed experience and the experience bleed.
So this is something I use with a lot of the work that I build.
But two big inspirations for me that I'm sure you're all very familiar with are Disney and Nintendo, two masters of design.
So Disney's always been kind of at the forefront of immersive and experience design way before they were buzzwords.
And Nintendo, I think, is a really major innovator in games.
Breath of the Wild, especially, I think is really impressive with how unique and thoughtful the open world design was.
And I think there's some really interesting similarities between them.
You may recognize some of these images as supplemental to a Nintendo presentation on the Breath of the Wild world design.
And what I see are concepts very similar to how theme parks have approached large-scale layouts, especially the idea of attraction or magnetism to landmarks and the use of obstructions to block or control the reveal of something, called a berm in theme park design.
So if you look at the attracting elements in this view, you can see that the positioning, the scale and the density of the landmarks all affect how they attract us without confining us or creating a golden path.
The large landmarks help determine where additional points of interest can be placed, or if you're at Disney, where you would put a churro stand.
So here's a picture at Magic Kingdom, and you can see how similar that is to that screenshot in Breath of the Wild.
Once again, it's this very deliberate use of position, elevation, scale, and density that's going to attract us in different directions.
Now, there's no wrong path here.
There's just your path.
And you can examine this at any scale from any position, whether you're at Disney or you're running around a game like Breath of the Wild.
Imagine gravitational fields of varying sizes pulling people to and fro as they wander around this park.
Cinderella's Castle perhaps being the strongest pull, taking people in a wide arc as they move around during the day.
So this is kind of the modern definition pertaining to design entertainment, also applies to like Hollywood sets.
But a berm, even at Disney, isn't always about blocking things, but it's also about controlling your view, which I think is a really important similarity to Breath of the Wild, where they used what they called a triangle rule as a way of hiding landmarks, like a berm, but then revealing.
And in fact, the reveal of Cinderella's castle when entering the park was really, really important to Walt.
When you get to the train station at Magic Kingdom, that was actually built as a berm to control the reveal, similar to the Breath of the Wild's triangle rule.
So when you get up there, you can't see anything inside the park.
And then you go to the left or the right through a tunnel, and then you come upon Main Street.
And finally, Cinderella's castle is revealed, perfectly framed within that space.
Now, all of that is happening within the gates of the park.
It is the boundary of the Disney experience, and everything beyond that boundary is completely under their control, much like in digital games.
So the boundary in this context...
is what allows them to then create that buildup and that reveal to crescendo to very powerful moments.
But it's not actually where the audience experience is beginning.
For the experience bleed, that's everything for Disney leading up to those gates.
Disney influences that experience bleed through their mobile app, their airport shuttle, their automatic luggage transfer, and a hundred other ways, so that the closer you get to Disney, the more magical it feels, and the more things are just kind of happening for you.
So I think it's really useful to identify the boundary of your design so that you can start and use that as an anchor point for examining and influencing and designing for the experience bleed that leads up to that.
Now, the imposition of a boundary is pretty different for a digital game.
You've got this rectangle of light.
You've got some inputs that you touch.
So digital game design primarily focuses entirely on the revealing of their world rather than having to deal with blocking ours, because you're in control of absolutely everything in there.
Breath of the Wild doesn't have to worry about making sure there's a mountain over here so that nobody sees downtown Los Angeles.
But basically it focuses on that because they can't block ours.
So when theme parks use berms to block out sites permanently, the reason they're doing that is to reduce contradictions.
If I'm in Tomorrowland and I can see Frontierland, that would completely break my immersion and those elements would start to cancel each other out.
With consoles, especially mobile ones, it can seem a little bit hopeless because there's so little control over that environment.
And as a designer, you can consider this not your problem, but also the real world is not going anywhere.
And the lack of control does not mean a complete lack of influence.
I think Nintendo has thought a lot about this when pursuing mobile and social play.
The use of Amiibos, or how Joy-Cons are able to reconfigure for different styles of play.
These are different methods for them to exert influence over the experience bleed of the games that are played on their system.
And you don't actually have to own the platform to influence that player experience.
In an ARG like I Love Bees, it was an entirely auxiliary design devoted to bringing fans into the Halo universe, and yet a completely different type of experience.
But it still provided a connection and a portal that allowed them to be even more engaged with the game.
But it doesn't have to be quite this extreme.
A lot of you are already working on different ways to influence the experience bleed through social media or marketing or even exhibiting at events like this.
Even at a booth at GDC, you can influence that experience bleed for your game.
You can attract surprise and delight in audience into forgetting about the meeting they need to go to or how nervous they are about their talk.
This is Butt-Sniffing Pugs, a completely digital game, but in order to provide...
a better experience in order to attract people, in order to change people's perceptions and forget about things that they were doing, they put that effort into influencing that bleed by putting down the astroturf and making that alternative controller and turning it into something where it isn't just fun to play, but it's actually fun to watch people play.
So the point is this design lens I think is still really applicable to digital because you can't get rid of the real world.
So how can you make people forget about it for just a little bit?
Here's a GIF of Luftrausers by Vlambeer.
I built as an experiment an alternative controller to shift the style of play from deep mental focus to an embodied form of play.
So I created cardboard wings, put tilt switches on the ends of them for steering, buttons at the end of the wings for firing, and a foot pedal to accelerate.
And this is to get people to embrace the external experience.
It was an entirely new feeling and a lot of fun to both play and watch.
It became a fundamentally different experience, similar to what we sports accomplished when playing games like tennis.
We found that failure was a lot more fun, and it actually shifted the skills needed to be good at the game.
So it was a great spectacle, but also very exhausting.
So I think it's also good to take a look at other mediums and communities and fandoms for how they reduce the contradictions in their experiences, and how they transition their audiences to fully say yes to the designed reality, whether it be a game, a film, or whatever it happens to be.
A Rocky Horror audience goes much deeper than simply putting on costumes.
Many bring an array of props like rice and rubber gloves and noisemakers.
Some venues or events will even provide some of these props so that people that are new to these experiences are more encouraged to get involved.
and be fully prepared for when that film begins.
Now the boundary in this case is the film itself.
It's what's displayed on the screen.
You could just walk into the theater, sit down, they press play, and bam, there you go.
But it's these other acts, these influences that change that bleed that makes it much more enjoyable and a really special thing for the fans.
There's a lot of places that are exploring this in a lot of really interesting ways beyond just theme parks.
Meow Wolf in Phoenix with immersive art and storytelling.
Sleep No More in New York with immersive theater.
Two Bit Circus in LA, a modern arcade with amusements and layers of metagames throughout the space.
or Can Can Wonderland and the Twin Cities, which has artist-designed mini-golf, unique games, and interesting entertainment experiences.
And of course, Escape Rooms, which have become an entire industry unto themselves.
But escape rooms are often the most guilty in not considering the experience bleed.
The boundary is obvious.
The door opens, you put in the room, the door closes, the clock starts, bam, there you go.
This is actually the first escape room I designed called Utopia Room, and we managed to win an award for it, which was awesome.
But sadly, my influence stopped at the boundary.
And I had no ability for that experience to bleed beyond that door.
And for players, the experience when going to something like an escape room begins long before they enter that room.
It may be when they finally find a parking spot.
It may even be before then.
They're in a state of anticipation.
which is a really perfect state for designers to start whispering in their ears.
But without any influence, it's also really easy for players to put them in a state that is not conducive for that, and you end up with something really jarring.
So in this case, the onboarding, I think, is really, really important, to help them forget the world they came from and be prepared to enter that new one.
So the bleed being ignored really hurt the experience even after the boundary.
Personally, I would have a lot of trouble adjusting if I open a closet, suddenly stumbled into Narnia without so much as a coat, Tumnus appears, tells me that I have 60 minutes to keep the White Witch from killing us all.
First five minutes, I'd just be sputtering around trying to get my bearings, and I want that 60 minutes.
I want all 60 minutes to be fulfilling and engaging and not stressful and jarring.
So I'm not saying that you're not already doing a lot of these things, but that looking at the experiences you design through some of these lenses can help you notice spots that you've missed or areas that you haven't been paying attention to before, not to mention as more and more devices collect in our homes and all around us with Internet of Things and smart lights and TV reactive LEDs and smart speakers and who knows what else.
There are going to be more and more ways for designers to reach out of the digital into the physical world and put more and more influence.
So imagine a software update where you can approve your Switch to talk to your Hue light bulbs and set the mood a bit when you're playing Breath of the Wild.
And maybe they stick a projector on the back of your TV so the weather pattern is always on your ceiling.
So you get that nice, warm, beautiful sunny day or the ominous clouds rolling in and things can get spooky.
And maybe this is really dumb.
But it also kind of seems a little fun, too.
And I think it's worth continuing to reevaluate these things and look at what's possible, whether you design in real spaces like myself or in the digital.
And as consoles change and what we plan changes, other tech is gonna change.
We'll be able to use a lot more of this tech and blur that boundary between the digital and the rest.
This is a game I created called Cylindrus.
It's a four-player wireless game with a 2D field wrapped around a cylinder, creating this continuous space.
So the real world, in this case, becomes part of the constraints.
It becomes part of the mechanics.
The level itself has to exist on a physical space and therefore cannot be infinite.
And this forces you to incorporate moving around that digital or virtual world in order to better understand it.
But essentially, it's still just a video game slapped onto a cylinder.
This is one called Please Stand By.
It's a 1950s television set with a completely digital component, but all of the interface is using the physical and the rabbit ears, the hitting the side of the TV, using the knobs.
It stands out because it is out of place in time, but not in space.
It's a familiar artifact that belongs in a space.
So even though the game is digital and just made in Unity, it could be played without any of those other components, the controls for this experience live within the bleed.
And that experience will bleed into your memories related to such a familiar artifact.
I want to leave you with the final thought of how do you use the space between your players and your game, because it does not have to be empty.
Think about where the boundary is for what you have created, that point where you have full control, and then think about what happens before there and how people come up to that.
Thank you very much.
Yeah.
Thank you.
So if anybody has any questions, hopefully we have a couple of minutes.
But yeah.
