Ladies and gentlemen, I'd like to introduce Will Wright.
I'm the sim version.
Welcome to the game design keynote.
Our speaker this morning has had a remarkable career sustaining his interest in simulated environments and characters.
artistically, technically, and commercially for more than a decade.
All the more remarkable in that the genres he's chosen to work in are pretty much self-defined.
His games, or possibly their sophisticated toys, have amused and inspired millions of players, his business partners, his fellow designers, and even the mass media.
His influence extends from the world-building subtleties we see in modern real-time strategy games, all the way to the halls of city government.
Titles like SimCity, SimAnt, and The Sims are not only vastly entertaining, but they appear to me to be art.
And I mean that literally.
In the complicated, popping, icon-rich matrix of an imaginary city, and in the bland features of suburban life, I see a sly and witty portrait of America, of ourselves.
Please welcome the master of what none of the rest of us can quite figure out, Will Wright.
Thanks, Al.
Hi, everybody.
Thanks for showing up today.
First, I have a quick announcement.
The talk that Ken Perlin is giving on character animation, which is happening right now, will be repeated today at 2.30 in the same room.
And if you're doing anything with character animation, I highly encourage you to check it out.
It's really cool stuff.
So today, I want to basically talk about this.
This is a quote by Jack London.
You can't wait for inspiration.
You have to go after it with a club.
So I want to cover a lot of the stuff that I found as a designer to be inspirational.
People, topics, subjects.
metaphors for the design process, a lot of things.
I'm going to get through this rather quickly.
So this is going to be somewhere between a PowerPoint slideshow and a low frame rate movie.
So I don't really expect you to remember a lot of what I'm saying.
Really, I just want to make some brief impressions on you, maybe trigger some associations that you find useful in your design process, or pique your interest to explore some of these topics further.
So let's start with the chair.
Now, first I want to ask, how many people in this audience have actually designed a chair?
Oh, a fair number.
That's kind of surprising.
Turns out a chair is a very difficult thing to design.
It has a lot of needs, requirements.
And excuse my gratuitous animations here.
I kind of discovered that feature in PowerPoint and couldn't restrain myself.
But.
So at any rate, a chair wants to be comfortable, portable, aesthetic, strong, stable.
All these things basically have to achieve some balance to make up a chair.
And it's really the designer's task to bring these things into some agreement.
There are a lot of ways to do this, and I really don't want to talk today about the design process or design methods, because there's a large body of work on that, and it mostly involves a lot of yucky flowcharts and stuff.
I'd rather keep this talk at a somewhat higher level and look at the inspirations for how we achieve these balances.
So, the first thing I want to cover is this fellow named Christopher Alexander. He's thought about this a bit in an interesting way.
He's an architect, urban planner, and to me at least, he's a design superhero.
A lot of you have probably heard of this guy.
He's written a couple books that I've found very influential, Notes on the Synthesis of Form in a Pattern Language.
In Notes on the Synthesis of Form, he contrasts the old design styles, what he calls craftsman design, to the more modern professional design.
In the old craftsman style of design, basically, improvements were made almost generation by generation, incremental improvements, like this plow for instance.
In professional design, the designer sees themself as part of this role.
The craftsman doesn't really think of himself as a designer.
He calls this the unselfconscious design process.
The professional is very conscious of the designer's role.
And that's good and bad.
And he's tried to identify...
some issues in there.
Basically, the Craftsman seems to be better at optimizing the lower levels of this.
The needs for this chair I've actually built into a hierarchy here.
And you can actually kind of organize them.
So comfort, portable, aesthetic kind of go into the use category, which comes down to the function, eventually ends up in the chair.
Designers tend to approach this hierarchy of design from the top down in general.
And the Craftsmen tend to approach it from the bottom up.
And what happens sometimes in professional design areas is that there's a disconnect between these two.
One example of this is this place, the Bronx Development Center.
This is a center that was built for handicapped kids.
And the original spec for the center called for a warm, home-like atmosphere.
It was supposed to be some place the kids would feel very comfortable in.
Of course, what they ended up with was this gleaming aluminum structure.
And what was interesting about this was a year before it opened, the architects were just all beside themselves, heaping praise upon the building.
It won several architectural awards before anybody ever set foot in the building.
Now, a lot of the local people who were running the center were kind of in an uproar.
This is the interior.
They couldn't actually occupy this fully for a year because of all the safety issues.
They had to replace most of this glass with safety glass.
They had to fill in the railings.
These were handicapped kids, you know, remember that we're living in this.
But aside from all the criticism, the architects were still talking about what a wonderful design this was.
And they were basically very disconnected from their users.
And so this is the type of thing I think Alexander was trying to point out.
And in some sense, we're starting to see this a little bit, I think, in the game industry.
We frequently will be designing games targeting hardcore gamers, reviewers.
when our average players want something that's maybe a little simpler, a little more approachable, and we have to make sure we don't lose them in this process.
His other book, A Pattern Language, was an attempt to make a set of design rules that you could apply to any design process in architecture or urban planning.
He actually would go into communities, mostly in third world countries, and study their customs and the way they related to each other at the very low level.
That's the low level of this tree here.
And then come with local solutions that he would then seamlessly try to put together into higher and higher level solutions.
He would eventually build a village.
you know, from the bottom up. And so he was really trying to find a formal process that would work from the bottom up.
Interesting, he's kind of, in later writings, admitted to the failure of this. He thinks it's still overly structured.
The design is more of an intuitive process than this.
Now, games, of course, have their own tree.
What's interesting about this tree of design is that over on the right side here, all these leaves on the tree, Any one of those can sync the entire design.
For instance, if the game doesn't install, the installation branch fails.
If that fails, the function branch fails, and the game is useless.
So the designer has to pay particular attention to all of these, but knowing what time to think about what branch is of vital importance.
Excuse me.
Now the tree we're dealing with actually is quite huge.
It could be that the tree of design that we have to deal with as interactive designers is larger than any other design task, because we can do almost anything in our medium.
The designer in this tree is frequently surfing up and down the branches of the tree.
And it's very important that you know what branch you need to be at, what level you need to be at.
Sometimes, it's very important that you're way out at the end, down one of these tiny branches, fixing an interface element, because in fact it's causing this whole branch to fail.
Other times, that's very inappropriate.
If it's something way over lateral to where you are, that's causing the real problem.
So, I think you have to kind of take a top-down approach.
and then know when to come back into it, bottom up, and know what level of detail to pick.
This is actually the idea of the designer surfing up and down this tree.
It's not unlike Minsky's society of mind model, where consciousness is the agent that's going through and resolving all the disputes between the branches.
So this is another kind of view of what we do.
You frequently hear spinning the plates.
And the designer really is in this fairly intense balancing act.
And the designer, by the way, is the top one.
The bottom one is the producer.
And most designers are kind of reluctant to admit that.
But believe me, that's usually the case.
The next thing I want to talk about is the dynamic duo of Charles and Ray Eames.
Now, they did a huge body of design work from the 40s to the 70s, a really remarkable pair.
Some of their best-known work is The Powers of Ten, the short film we see going from the galaxy down to the molecule, and the Eames lounge chair.
But in fact, they did a huge body of design work.
They also designed houses, furniture, books, films, toys, consumer product, artwork, fabric, and museum exhibits.
They were some of the first interactive designers.
What was interesting about their body of work is how they let ideas and inspirations flow from one subject to another.
You could clearly see things that they would learn working on furniture would flow into product design, or on architecture, into artwork.
They were actually getting a lot of crossover between their design work by working in different fields.
For instance, this chair they designed, they designed a method for bending plywood and forming it.
And later, when the war started, the army had them apply the same technique to building splints for injured soldiers.
Charles Eames was an avid photographer, and a lot of his photography would find its way into other work.
A lot of his photographs ended up on this thing in the lower right here, and it's a very interesting combination.
It's called the House of Cards, and it's a combination of a card deck, a construction toy, and a little art exhibit all in one.
So of course, they also made a lot of chairs.
Now, chairs are interesting, because it seems like in the last century, chairs have become kind of an icon for the design process.
A lot of famous designers have a signature chair.
And so when I was actually putting this slide together, I started thinking, what would it be like if game designers made chairs?
What kind of chairs would they make?
So I took a little side path on this.
I'm guessing that Miyamoto's chair would be something that's like almost perfect in form and function.
It'd probably be some really bright neon color.
And also, no other designer could reproduce it.
I think John Carmack's chair would probably be something rather technical.
You know, very tricky to build.
You know, very intricate.
But it's okay because he's going to give the blueprints to anybody who wants them.
I think Sid Meier's chair probably wouldn't look my much, you know, but it would be really, really comfortable.
You know, once you got in this chair, you just wouldn't want to get out of it.
Now Peter Molyneux's chair, I think is going to be kind of unorthodox, and it's going to continually try to have this twisted psychiatric relationship with me.
Now I think my chair...
would probably look a little more like a toy or something.
Might not be recognizable as a chair.
In fact, you could probably use it as construction blocks and turn it into something else.
I suspect it would also have some interesting failure states, like when you tried to lean back in it.
But I've actually found as a designer, it's actually very useful to go off and design other things beside games.
It's amazing how many times ideas are sparked by going and designing something out of matter instead of out of just bits.
Something that my daughter and I have done for many years is build these combat robots.
And it's interesting because we try to build a new robot every year.
This is like for Robot Wars and Battle Bots.
And it's interesting to try and mentor her through the design process.
We talk about the designs together and we try to do things that are just kind of weird.
Most of our robots always suck, but that's okay.
Another thing I've been experimenting with a little bit is toy design.
This is a construction set I've been working on for architecture.
We design little houses.
What you're actually seeing here is the box design which I did.
And this is a technique I've done with a lot of games and it's actually very useful.
As a designer, when you're starting out an idea and you think you have a clear idea of what you want, it's very useful to actually build a box yourself.
Write all the ad copy.
Write the bullet points.
This helps get yourself very clear on what you're thinking of.
It helps communicate your vision to other people on the team.
But more importantly, it...
makes you realize that the user who might buy this game is starting to build their middle model of the game before they ever touch the box.
When they look across the store and they see this box, that's the point at which they start building a middle model of your product.
You know, if that model that they're running in their head is interesting enough, they'll actually go over and pick up the box and start reading the bullet points.
At that point, their model is getting more elaborate.
And again, the model in their head has to be interesting enough.
They have to have fun playing their own model of your game to then go and buy it.
So that, I think, is a very important point.
And it says a lot about kind of putting vision and clarity on a product.
Now, these are my design friends.
This is Mr. Hierarchy, Network Woman, and Landscape Boy.
They show up all over the place, at all different levels.
And these are topologies that, to give you an example, in SimCity, we have a land use model.
And there's a definite hierarchy of buildings and structures, what evolves from what.
Tech trees and other games would be an example.
Networks, of course, are pretty obvious in SimCity, the road network, power lines, water.
And then there's the landscape, both the literal terrain and all the statistical landscapes, the crime, pollution maps are all landscapes.
Now, in SimCity, as in most games, these topologies are woven through at all levels, not only of the design itself, but the design process also.
So these are kind of patterns of space that, as designers, we can use over and over.
And they help to clarify kind of, is this a hierarchy or is this a network?
So there are also, besides patterns of time, of space, there are patterns of time.
And this, I found to be the most important pattern of time that I've come across.
And.
I'm not really quite sure what to call this thing. I've heard it called the interaction onion, the nested feedback cycles, a lot of things.
But the idea here is that at any point in time, your player is embedded.
in multiple cycles of increasing time of feedback.
So for instance, you know, over the next few seconds I'll be hopping, pushing the button to hop in Mario.
Over the next minute or so I'm trying to get past this particular obstacle.
Over the next few minutes I'm trying to complete this level.
Any game can be seen this way.
Now, we need successes and failures for each level of this time cycle.
The interior cycle, success there basically buys you the ability to play at the next outer cycle.
So basically success is a prerequisite for you to move to the next cycle.
You have to be successful at the short-term cycles to be successful at the long-term cycles.
And this is important not just for the player, but especially for the designer.
Which is to say that if the first ten seconds of your game is not fun, it doesn't matter how fun the ten-minute cycle is.
And so you have to make sure that you're putting the right emphasis on these inner cycles.
The minute-to-minute experience has to be really fun before you can really start thinking about the strategy, the longer-term gameplay.
I think console designers get this a lot more than PC game designers, because frequently the first thing they'll do is they'll spend a month working on the control structure.
How does it feel?
And that's exactly why they're doing this.
On the Sims, this is roughly what those cycles kind of mapped out into.
We have the basic control structure at the bottom here.
You know, once you learn that you're successful, you can then move your character and then interact.
Then you go to the needs. At that point, you have all you need to go and start meeting their needs.
Now, at this level, if you fail, you know, they're going to go pee on the floor and collapse and starve and all this bad stuff.
But if you meet the needs, then you've bought them happiness and free time to move to the next level, where they can start developing skills and get a job and work on the economic side.
So, basically, you need a lot of...
success and failure at each stage of these time cycles.
And frequently I've found that the failure side really is more important than the success side.
You know, we think of failure as bad, but really failure can be quite fun if you make it interesting.
I think failure is bad when it's repetitive.
It's either too often, or there's too little variety of it, or when there's inexplicable failure and you have no idea why you failed.
But this is something I learned early on.
And so in The Sims, we tried to have a large variety of failure states, not only in the shipping game, but failure states that you could download.
We could expand the failure states through new object behaviors.
Try as we might, no matter how many failure states we put into the game, the users discovered a lot more.
So hook and crook, they invented them.
Sometimes they rewrote code to get them.
Occasionally, they would reinterpret our bugs as failures.
We had this one particular bug where Sims would spontaneously burst into flames for no good reason.
And this is a bug.
And the users thought, this is so cool to have spontaneous human combustion.
So it's nice to have the users on your side.
So they're looking forward to the failure.
They're not dreading it.
So I kind of, at some point, started calling this the Calvin factor.
The very first versions of SimCity I made had no disasters.
All there was was a bulldozer.
And I couldn't help but notice how, invariably, everybody would eventually discover the bulldozer and then go attack the city with it.
And they'd be laughing maniacally while they're attacking the city with this bulldozer.
And so then I started thinking, well, maybe I should start feeding this, get it out of their system.
And so that's when we started adding the disasters to SimCity.
But really, there's this idea of subversion that I think is deeply appealing to a lot of gamers.
I know it's appealing to me when I play games.
So I think the idea that we can engineer subversion, or at least allow subversion, is great.
I mean, I find it in a lot of games where I don't even know if they consciously did that.
There was a game I played a lot, Tribes.
It's a team-based shooter.
And you run around shooting all the people.
And at some point, I got kind of tired of playing the game.
And I started thinking, what else could I do in this environment?
And so then I started playing the game for about a month, trying to make peace between the two sides.
And so I'd go over to the bad guys, and I'd hide behind a hill saying, hey, don't shoot me.
I'm coming out.
I want to make peace.
And I'd have the repair thing, and I'd come up and repair them as kind of like a token of goodwill.
And I would usually, I could get like three or four people to agree to this of opposite sides.
But if you want a challenging game, find a game with 15 testosterone-filled boys that all have guns and try to get them to stop shooting.
That's an amazing challenge.
And it was really cool that I could play that game in this.
Toys are also really cool. Toys are like so subvertible it's great. And my daughter and I do this a lot.
Not too long ago she had a Barbie laying around and I had my Estes Rockets laying around.
So this is the type of stuff I love to do. I try to instill this in my daughter.
It turns out the parachute wadding sets our hair on fire though.
OK, let's move on to something else.
Disease.
Now frequently we talk about our games as being addictive, or we talk about viral marketing.
I'm really hooked on this game.
I can't get over it.
And in fact, disease is actually a very useful metaphor in a number of ways, I found.
One of the chief things that influences how well a disease spreads are the vectors.
Who catches it from what?
I've tried to map out the vectors for the Sims here, because I think this is one of the critical reasons for its success so far.
Started with Computer Press, you know, getting good reviews, which got some of the hardcore gamers to pick up the game.
These hardcore gamers, which were almost entirely male, would buy the game, they'd play it for a while, oh this is kind of cool.
But the most important vector in the whole spread here was this second one, where these hardcore male gamers were spreading it to their mostly female girlfriends and spouses.
So in this sense, the Sims was quite similar to like a sexually transmitted disease.
But once it hit this group...
which is mostly female, the lateral spread at that point was tremendous because a lot of these players had never played a computer game before. This is their first computer game experience. And imagine the first time you played a computer game, how cool it was and how much enthusiasm they would have for it.
And therefore they start telling their friends much more than the jaded, hardcore gamer.
So then they were spreading it to their friends and family and that was where the game really took off.
And of course at that point it reaches this mass where then the mainstream press...
starts noticing it and taking an interest, which feeds back into this casual group of game players.
Now, another thing about disease is it turns out to be very critical.
I was running some models.
And the amount of time that a disease is contagious turns out to have a huge leverage on the eventual amount of population that you infect with that disease.
In this model run that I did, the only difference between these two spreads was that the first disease was only contagious for one week.
The second one was contagious for two weeks.
And if you look, the first week, I mean the first one, only spread to about 4% of the population.
The second one spread to over 20% of the population.
Tremendous leverage here.
Now with most diseases also, once they're done with you, you either have immunity to them or they've killed you.
From the disease's point of view, it doesn't really care which.
From an industry point of view, I think we should care.
We don't want to go killing our users.
In the terms of the games industry, that probably means, you know, oh, they're burned out on games.
You know, I had such a bad experience with that game, I'm not going to buy another one.
In fact, we want to, you know, have them still available for the next game coming down the pike.
So we want to try not to kill the users with these things.
Another inspiration.
or a whole set of inspirations I actually get from other subjects or other games I've worked on.
I did this game SimAnt a while back.
And ants turn out to be really fascinating for a number of reasons.
But they communicate with these pheromones that they drop on the ground.
And the other ants are able to locate food or the colony based on this.
They actually drag their abdomen along the ground to drop these trails in a process that's, oddly enough, known as anal communication.
But what was interesting about SimAnt was how robust.
and fault tolerant the behavior was.
I was just amazed at how hard it was to kind of get them off their tracks.
And if you've ever had ants in your house, you've probably experienced this also.
It's an amazingly robust intelligence.
And so I started thinking, is there any way to apply this to people?
Can we have people driven by these environmental fields, much like the ants are driven by their pheromones?
Another idea that kind of came in and made the thing really work is the idea of fitness landscape.
And this is an idea from evolutionary biology.
How many in this audience have heard of fitness landscapes?
Not too many.
Well, I'm going to give you a very brief introduction, because it actually would take a long time to fully explore this.
But the landscape you're seeing here represents a large range of possible creatures.
Every spot on the landscape is a potential creature.
You can see the axes on the bottom, size and speed.
So I can take any spot on landscape and say that is a particular creature.
So this creature is fairly large and slow, so we'll call that a cow.
Somewhere else in the landscape is something else entirely.
Over here, we have something that's fast and fairly small, so we'll call it a squirrel.
Now, evolution can be seen as these species evolving over time by hill climbing the landscape.
So the height of the peaks represents a higher fitness.
And it just simply means that they'll reproduce more effectively than the ones on the lower slopes.
So over time, what will happen is this population will start moving uphill.
And as it moves uphill, it's actually evolving.
No one animal ever moves on this landscape.
They're always born and die in one spot.
But over time, the species moves by the people on the upside of the slope, reproducing more effectively than the people on the downside.
And so naturally, you get these kind of clouds of motion.
So eventually, over time, what would happen is these cows would evolve up the slope and turn into something like a giraffe, because now they are large and fast.
Now you'll notice the giraffe right now is stuck on this local maxima, which is a big problem depending on how you're applying these landscapes.
So once they're on a local peak like that, there's nowhere to go but down.
And so the giraffe will be stuck there unless the landscape changes.
So in the Sims, we built what we called a happiness landscape.
And we had objects actually building the fitness model for the people, in fact, the happiness model.
So we have Bob here on screen.
He's hungry, mostly, a little bit bored, a little bit lonely.
But because he's mostly hungry, his landscape looks like this.
The fridge becomes the highest peak.
And so he's basically hill climbing.
He says that my most happiness will be achieved going in this direction.
So he walks over to the fridge, gets a snack.
And when he does that, the peak collapses.
And this is how we avoid the local maxima problem.
Now at this point, he's been fed, and now he's just kind of lonely.
And because he's mainly lonely, he looks over here at Betty and says, oh, social.
I'll go hang out with Betty.
And then he does that.
And of course, as he hangs out with Betty, you know, gets enough of Betty, that starts to collapse.
And now it's bored.
So this is generally the way the Sims work.
It was inspired from the SimAnt's pheromone model.
But then later, this fitness model came in to solve a lot of the problems, and eventually turned into this, which worked out very well as a behavioral model.
We can also apply these landscapes at a little bit higher level, the gameplay level.
This is a map of what we were considering the Sims gameplay landscape to be.
Now this is the landscape that the player is going to go over time through.
The heights of the mountains here represent difficulty.
And so the starting is at the bottom.
To get to the top peak, you really want to go right up the middle.
Now, over on the right side here, this represents social success, and on the left side, material.
Those were like the two main things we wanted the player to be balancing.
So frequently, when somebody would come into the game and they would start saying, oh, buy more stuff, buy more stuff, they would actually veer off to the left here, and they would end up on the material peak.
Now, you'll see that if you get on top of this materialistic peak, you actually have to drop down in fitness or in success, in these terms, to get to this higher peak.
So you get kind of stuck on the sidetrack.
Same thing on the social.
So in some sense, we were modeling this thing like a bowling alley.
And these are the gutters.
If you don't aim straight down the middle and keep this right balance, you're going to get stuck on one of these local maxima.
And that was kind of at a high level a very useful metaphor when we were designing this game.
Another application of this metaphor is market landscapes. It's the same thing as the fitness landscape except now instead of talking about fitness, we're talking about profitability.
So you can take this landscape and say that this is some arbitrary combination of business strategies or products and then we can put companies on it.
It's the same sort of thing. These companies are going to hill climb to the highest peak.
The peaks will always be changing. So for instance, if the peak that Apple's on collapses, they're going to go to the next highest peak, which in this case would be like John Deere, and they'll go start making farm equipment or something.
These landscapes in biology and in economics are actually much, much more elaborate than this.
I'm showing you these simple two-dimensional landscapes.
In reality, they are thousands of dimensions, or millions of dimensions.
They're really, really hard to visualize.
So this is just kind of a very simple look at what the dynamics on them are.
The dynamics still apply, even as they go to higher levels of dimensions.
Now we go to something completely different.
Japanese gardens.
Now.
Japanese gardens, I've just recently come to realize, are an incredible reservoir of design knowledge.
The amount of design density represented by a Japanese garden is just astounding.
And I think there are a lot of lessons here.
And I can't completely verbalize all the applications I see to our field, but this is the type of thing that I think we should be looking towards to learn from.
They started out representing the.
geological diversity of Japan.
You see craggy mountains, coastlines, whatnot.
The real art of these things is how much care goes into the design of these, but yet how transparent that design is.
They capture the essence of nature.
It feels like you're in nature, but yet this is a highly designed artifact.
The design submerges.
It becomes totally transparent to you.
In that sense, it's like a very good user interface.
You know, the best user interfaces are the ones you spend the most time on, but then they become invisible to the user.
You don't even think about them when you're using them.
At first glance, these gardens would seem to be trying to model nature.
And some of the early Japanese gardens were modeling nature.
But over time, they started doing something a little more subtle.
They were trying to model your response to nature.
They were trying to evoke the same feelings you had when you were in nature without building an exact replica of nature.
So in that sense, they were kind of like impressionistic paintings.
They have the same hierarchies that we've been dealing with so far.
Hierarchies, networks, landscapes.
Very elaborate symbologies come together in these gardens, overlapping and intertwining all the time.
Some of these are cultural.
Some of them are mythological.
Some of them are actually influenced from other media.
A lot of them represent kind of the aspirations of man.
And so if you learn how to read these gardens, it actually becomes a fairly interactive experience as you walk through and look at these symbols.
Some of the most elaborate symbols come from the rocks.
One of the older books on Japanese gardens lists 48 rock types.
And they have really cool names, like the Absolute Control Rock or the Never Aging Rock.
They have other ones that are scenic, like the Hovering Mist Rock.
Some of them are basically there for symbolic interpretation.
Other ones are there for scenic impact, give you a certain feeling.
Some of the older gardens were very literal.
They would use these symbols to actually play, I mean, literal, very literal, in that they would play out poems or books in the garden.
If you knew how to read the symbols, as you walked through it, you would actually see a famous play or poem read to you through these symbols in the garden.
The newer ones became more sensory based.
They were back to trying to replicate the experience you have in nature through texture, through color, through sound.
The things they do with space also, I think, have a lot of application.
They're continually trying to make the space seem larger, even though these are designed in very small spaces.
They do a lot of perceptual tricks.
Frequently, the backside of the garden will be coming up faster.
on almost a curve that gives you the perception that it's receding into infinity.
The paths are frequently built very crooked so that you actually walk slower.
And it kind of warps your sense of time as you're walking through the garden.
You feel like you've walked farther when you haven't.
They also will design keeping different planes of design in mind.
There's a horizontal plane.
And most of the symbology for the aspects of mankind in our day-to-day life are in the horizontal plane.
The things that are more aspirational, the more action-oriented things, are built in the vertical plane.
They also designed through another dimension, which is time.
They designed these gardens thinking about how it's going to be in each season.
A lot of the gardens will plant specific things for each season so that every season something is in bloom.
And it's almost like a clock that you can go to, and it's always different.
Now, this is the point where I started thinking, you know, I've seen this before.
And then all of a sudden it hit me.
I was thinking Zelda and Mario 64.
And a lot of Miyamoto's games, a lot of the elements I've seen in his games, are so directly applicable to these gardens. And I don't think it's surprising at all, because I spent a week in Kyoto with him, where he lives, and we spent a lot of time walking through these gardens. So I can't help but think that a lot of the things that have gone into his games were inspired from these gardens.
Don't these look like mushrooms?
Probably the biggest lesson, I think, from these is that of simplicity.
It's amazing how much they can do with so little.
There's a quote, it's one of my favorites, that your garden is not complete until there is nothing else you can remove.
which is actually a very good principle to apply to UI design, if nothing else.
We spend a lot more time working on our UIs, removing buttons over and over through many iterations.
We iterated the Sims interface like 11 times, and every iteration we got rid of a few buttons.
So that simplicity really pays off.
Probably the height of this was reached with the Zen Rock Gardens.
Now at this point, they stopped trying to imitate the outer forms of nature, and they were trying to symbolize the inner essence of nature.
Now at this point, the garden became more of an abstract tool for mental projection and imagination than it was a garden.
And so in this sense, it's actually kind of what they would call a mindscape.
And they're still moving in that direction.
What's interesting is that as we're taking our models...
trying to make them more and more detailed, match nature closer and closer, these gardens are actually going the opposite direction.
They started with very detailed representations of nature, and they're trying to go the other way, more and more abstract, trying to get down to the essence.
And basically inviting the viewer in.
to have more of a participatory experience.
I mean, they really understand, I think, the principle of the middle model, where part of the game is in your head.
And right now, they're trying to put more and more of the experience in your head.
And so it's amazing how subjective viewing these things has become over the years.
And also, they've evolved quite a bit over the last 1,000 years or so.
They're always changing.
And this is something that I would like to think our industry will be doing 500 years from now, that we will be around this long and be this open to change.
And they've been pulling in inspirations from all over the place continually.
A really good application of a lot of these principles shows up in Go, which I think is like the ultimate game.
You know, it's just these two simple rules, but this huge amount of strategy evolves from it.
Now I want to kind of carry on a little bit more and talk about abstraction and what that buys you.
How abstraction buys you imagination, imagination buys you projection.
And projection, down the road, can buy you empathy.
Basically, we run our games on a two-processor system.
Processor A is the player, running this in their head.
Processor B is the computer.
Now, it used to be that our games were like the top here.
About 20% of the game was on the computer, and about 80% was in our head as we were running these simple games.
Now it's almost exactly the reverse.
Now we have these extremely detailed games, and we're running about 80% of that world on the computer and only 20% in the user's head.
Now, I'm not against these detailed worlds.
I mean, I think they're great.
I wonder, though, if there's some way that we can find a way to get more use out of the user's head, that imagination that used to fill such a vital role in these games.
And so I think it's up to us to struggle for ways to engage the user's imagination more within the game.
I think Scott McLeod made this point brilliantly, where you can choose the level of abstraction.
And in doing so, you're inviting the player to come in and say, OK, imagine all the details I left out.
And we found very good application of that in The Sims, or actually before that, in toys.
You see that a lot.
I think they choose the levels of abstractions for these toys very carefully.
And you'll notice that the toys that tend to have the most long-term play value tend to be the more abstract ones where the kids are using their imaginations.
We tried to use this in The Sims.
We tried to keep the characters fairly low res.
And in particular, the way they talked, if you've heard them, they talk in this kind of gibberish and you see icons above their heads.
Because we knew that the second they started speaking real English and you started hearing the same lines repeated over and over, that the whole illusion of intelligence would break down.
So instead, we fell back to abstraction.
And in doing so, everybody can't help but sit there and imagine what the conversation is that these people are talking about.
We're actually very good at finding patterns.
How many people see a picture here?
That's pretty good.
There's a dog over here.
We're even good at seeing patterns where none exist, which from our point of view is probably the most interesting thing to leverage.
When we can figure out ways to get the users to fill in the blanks for us, that is just a tremendous win on a number of levels.
I want to play you a quick sound clip here, mainly because it's funny, but also because it's an interesting example of how effectively somebody can pull together a model.
Somebody apparently, and somebody sent me this over the email, hooked up a bunch of Arnold Schwarzenegger clips to their keyboard so they could just play it like a keyboard, instantly making him say stuff.
And then they would call people up and attempt to have conversations with him talking.
OK.
Now, what's interesting is that all the ones I heard, the other person had no clue they weren't talking to a person.
They were filling in the blanks so brilliantly.
So I'll just let you hear this conversation.
Good morning.
Hi.
How are you?
Is it Ken?
Yes.
Oh, hi, Ken.
It's Angel.
Yeah.
Is it Ken T?
Is it you?
How are you?
Fine.
Did you call me yesterday?
Yes.
Oh.
You know, you talk about basement by restaurant.
Yeah.
I'm going to go to the bathroom.
I'm going to go to the bathroom.
I'm going to go to the bathroom.
I'm going to go to the bathroom.
I'm going to go to the bathroom.
That's the only shelf. You know the shelf for the... we do a shelf and the table.
Yes.
The shelf and table we put in the basement.
That one we live over for the cross-leave.
We bring it downstairs.
That's all we got. We don't have nothing.
And another one is a... I just bought a...
Stop whining!
Hello?
Yes.
That you call me. You said you want to know what's in the basement.
Stop it!
Hello?
Who are you?
Yes, my name's Angel.
Are this the health department?
I'm detective John Kimball.
Huh?
I'm a cop, you idiot!
No, it is a... it's a... it's a health department?
Yeah.
This is Angel speaking. You called me, you want to talk to me?
Yeah, I'm a police officer.
Huh?
I'm a cop, you idiot!
Oh.
Who is your daddy, and what does he do?
I don't know, you're not the KMT. You talk to me. Sorry.
First, I would like to just get to know you.
I want to ask you a bunch of questions.
Yeah?
I want to have them answered immediately.
What the heck?
Who is your daddy, and what does he do?
I called him here.
He called me yesterday.
Is it you?
Yes.
Oh, something I did wrong number there.
Probably.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
And we could probably build an AI that talked roughly at that level.
And it was just the key to it was she thought she was talking to a real person.
So in fact, I really want to build an answering machine that does this now.
That would be so cool.
Okay, now I want to move over a little bit to stuff that we've learned from the Sims.
I want to show you a little bit about our community and also some of the directions we're going to take it into the future.
I've looked, you know, as I've seen our community grow, I start seeing it more and more as an ecology.
You know, we have this pyramid where we have fewer and fewer people at higher and higher levels, but they're all being supported by the levels beneath them, and they're feeding the levels above them.
And, uh...
Basically, I want to talk a little bit about how we grew this community.
You know, some of it was a lot of experimental stuff that didn't work out, but a lot of it worked out very well.
About eight months before we shipped the game, we started a mailing list, and we got our SimCity webmasters, you know, that were interested, involved, where weekly we would send them updates on what we were working on, and what features we were cutting or adding, and they would give us feedback about it.
And we got them just totally bought into the development process.
And so, they became our first hardcore webmasters.
About four months before we shipped, we started building custom tools and actually posting them so people could start building custom content for the game before it shipped.
And we got a small number of people actually starting to build custom content for the game that were going on these websites.
Some of the tools were this one for doing custom character skins, this one for doing custom wallpapers and floor patterns, and for doing custom heads and head meshes.
Then about two months before we shipped, we started doing these live webcam events.
And in these, we would play the game internally and broadcast a webcam to all the players.
And they would sit there on the chat room and tell us, oh, can they do this?
Can they do that?
And then we'd make them do the stuff that they were asking.
So they were kind of indirectly playing the game.
They were getting a good sense of what the gameplay was like indirectly through us.
But more importantly, they were capturing these thousands of images coming down that they could then use for content on their website.
And the websites, there were so many images that they were getting from this web stream that all the fansites could have different screenshots.
And then people were coming and viewing the websites more and more, trying to drive the web traffic before the game released.
On release day, we roughly had about 50 fansites, which was remarkable.
We also had quite a bit of content that people could download on day one on the fansites, thousands of character skins already ready.
Now, the next step was to get the casual players involved in this community.
So we started this weekly thing we call Sim Day on Thursdays, where we have a download on our site for free to anybody whose product registered the game.
And so we'd have new objects every week.
And the percentage of people that came to download those objects was like over 60% of all the people who bought the game.
So it was remarkable participation.
And we were also able to experiment with some ideas.
There was no real cheat in the game.
from within the game. So we delivered a slot machine that had a cheat. That was the first thing they got. And a lot of people at the beginning were saying, oh, they don't get sick. And so we made a guinea pig and they got sick. And then they didn't like it. Oh, they get sick now. But, so, after that, we kept releasing user tools. We have one for doing custom paintings. A more improved one for doing custom meshes. One for doing custom objects.
A year after ship, we have kind of a new strata appearing, which are the tool builders. We actually have a lot of fans now building custom tools for the game, helping us. Since then, we've also opened our story exchange, which I'll show you in a minute, and we've run contests continually. So, these are some of the user tools. The first tool they did, of course, was the thing that removes the blurring on the naked. That happened about one week after we shipped.
This is for doing brain surgery on them, basically, changing their personality.
Their own character editing tools, which in some sense were better than ours.
And then some fairly elaborate object editing tools.
And some of these are just now being released.
And the guy who's working on this one has been working on the thing for about a year.
So we have this unpaid guy out here for a year working on this tool for us.
And it's great.
So today, this is kind of what our community looks like.
We've sold over 3.5 million units so far, a little over a year.
What's interesting is we have about 700,000 of those people are actively out there in the fan community downloading stuff or going to our website.
So we've managed to engage a very large proportion of those people.
If you get a million copies of a game out there, and you can just engage 1% of those people, That's 10,000 people.
If you can get those 10,000 people building cool, interesting, creative stuff for you, that's just a tremendous benefit.
Now, one thing that's, I think, for The Sims, one of the most important reasons we've had such a huge participation in the community is that it's very similar to how, when you abstract a character, you're inviting players to come in and imagine what they want to.
The Sims is the same thing at a higher level, where, in fact, the entire product is very neutral.
very Hollywood themed neutral suburbia, but it's very easy for anybody to overlay whatever they want to on top of it.
You can do your horror stuff in it. You can do gothic stuff.
You can do superheroes. You can take it in all these different directions.
And so what this does is this allows the fan community to diversify.
Rather than having just the best fan site as the one that everybody goes to, All the fan sites are different, and they can all compete as peers, as opposed to competing in an arms race.
And so I think this was of vital importance in the eventual community that we ended up with.
This is another view of it.
One of our challenges, of course, is to keep getting casual players to kind of go through this boundary and get involved in the community.
And the downloads have been probably the most effective tool we've had for that right now.
This is a vicuña, which is a close relative of the llama.
Yeah.
Now, I want to talk about our fan sites real briefly.
At this point, we have over 600 fan sites.
And a lot of them are really good.
They're in 14 languages.
About 90% of the content that you can download into the Sims.
are on these fan sites. It was fan created, which is amazing. That's a staggering number.
We try to spotlight these fan sites once a week. We pick a really interesting one that hasn't been spotlighted before and put them up. And usually we bring their site down with the amount of traffic because we just get tremendous amounts of traffic to our site and everybody wants to go see the cool newest fan site. So we try to give them a lot of exposure.
I'm going to give you just a brief overview of some of the fansites to give you a sense of the diversity of the community.
This one's called Mall of the Sims, and this one in fact is kind of an association of about 50 small fansites with this overlay, and it's actually like a mall with a store directory and all that, and there's an office where you can apply to get a slot in the store.
This is the Sims Resource.
This is kind of a superstore.
This is one of our first big sites.
This site alone has almost 3,000 custom skins, 1,000 furniture pieces, 5,000 walls.
They even run live tech support on this site in their chat room every night.
So here we have a fan site that's not only providing content for us, but they're providing tech support for us.
This is kind of a Generation X site, SimFreaks.
This is kind of where the younger crowd hangs.
This is the Artsy site, Seven Deadly Sims.
They have themed stuff for each of the Seven Deadly Sims.
So you get a lust for the beds and whatnot.
They also run this thing, Sims Deathmatch, which is kind of a cross between the Sims and Celebrity Deathmatch, these little animations where you take your favorite sim and have them fight Godzilla or whatever.
Superheroes were big.
They were one of our first big things in the world.
Horror, big.
More horror.
Historical, more historical.
We have gay fansites.
We have retro fansites.
And then we have valley girl fansites.
We have university fansite, where you go to learn to play the game.
It's full of tutorials and whatnot.
Of course, adult fan sites.
We have these little fashion boutiques, where it'll be one person who's totally into this game, and they'll spend a month making one skin and have this whole unveiling ceremony when they show the skin in these fashion shows and stuff.
And some of them are actual fashion designers.
And these are like little boutiques, and certain people just love those skins.
And they actually have customers that come and download all their skins.
We have the upscale sites.
So this is the museum store, and they have the Edward Hopper collection.
We have lowbrow sites, tattoo parlor, tropical, a lot of different themes.
This site is just for armadillos, if you can imagine that.
They have an armadillo pet, and armadillo pictures, and armadillo topiaries, and armadillo skins for your people.
It's just armadillos.
This is a parody of The Onion, actually a rather good parody of The Onion.
that's the Sim. And you can even send your Sim, your custom Sim in here and find out if they're hot or not. And they get rated by all the other viewers. We have the Sims Estate and Realtors. Now this is remarkable in how boring they made this site. I mean, it's as boring as a real real estate site. And it's remarkable in that sense. I mean, but yet they have a lot of houses you can download here, all these different architectures that are available for download.
The fan community is so large at this point, there are about five large sites that do nothing but report on the fan community.
Every day, there will be five or ten news items about cool things that have appeared on the fan sites.
So, next thing I want to talk about a little bit is what we're currently working on with Sims Online and how we're going to take some of the lessons from this fan community and try to apply it to this.
I'm going to have to speed up a little bit here.
The Sims Online basically, it's going to feel like SimCity at the high level, but you'll be able to dive into the game.
One of the key things about it is that we're going to try to make most of the content that's currently available on the web compatible with this game.
So we're going to leverage that huge amount of content that the users have already created and the diversity, and let them use that diversity in this environment.
Both at the character level, but then down also at the structure level.
We're not going to tell them that they have to build houses.
They're going to be able to build businesses, nightclubs, casinos, and we're counting on of course bordellos and whatever else they can imagine.
We're trying to design this game so that the players' real incentive is to entertain the other players.
the biggest earnings in the game will be getting people to come to your lot and spend time there.
So whatever it takes to attract people and entertain them to your lot is what you get rewarded for. Like the fansites do right now.
And so this game is really more about creativity than anything else.
Another thing that is interesting for me when I started doing multiplayer games, I've never done a multiplayer game, so I'm kind of like working in the dark here.
But it seems to me like one of the most interesting things about multiplayer games are the social networks that develop amongst the players.
In fact, the real game I think most people are playing is on this social topography that they're slowly mapping as they get to know people and cliques and groups and guilds and whatnot.
There's actually been quite a bit of work in this, visualizing social networks.
This is a graph of a fourth grade class where the links indicate how strong the relationships are.
And you can see that the boys over here are triangles on the left, the girls are circles on the right.
There's this one boy that has a crush on that girl, with a little line going across.
These two little girls up here that don't play with anybody else.
So it's kind of interesting how many insights you can get into a system by graphing it.
These are Costa Rican families that hang out with each other.
You can graph it at higher and higher levels.
In The Sims Online, we're going to actually be building these graphs on the fly as you interact with other characters.
So you will be able to bring up this graph at any time and explore it.
You can then put yourself in the middle, see who your friends and enemies are, click on one of your friends, they'll move to the middle, and then you can see who their friends and enemies are.
So this is like the six degrees of separation, but it's an interactive exploration of the emerging social web.
And a lot of the gameplay, in fact, will occur on this topography.
Social structures will get higher, too.
We'll have clubs and neighborhoods, and they will have their own relationships.
And so there'll be kind of a different resolution on the social structures down from the individual up to the club and neighborhood level.
Now I want to go back to the sims.com briefly and talk a little bit about that, because I want to move more in the direction of story.
We have 1.7 million product registered users on our website, which is a remarkable number.
This is out of 3.5 million copies.
We get 100,000 unique visitors per month.
One of the things we did in the game before we shipped it is we added this feature where people could tell a story in the game.
They could take snapshots and caption them.
And it was saved out as HTML, which they could upload to our website with like two clicks.
It was extremely simple.
And we were hosting all these.
And anybody without the game can view these, because they're just HTML.
It's JPEGs and text.
So people started, after getting tired of playing the regular game, they started playing the story game, where they would build these cool stories while playing The Sims.
Right now we have 18,000 of these stories uploaded.
There's kind of a meta competition where these things are rated on our website.
We're getting 100 new ones every day.
So on our website, there's a thing called the Sims Exchange.
And they're rated, and they're also segregated by different categories.
You can upload it and say, this is fantasy or horror or tragedy.
And there's kind of a competition going on between the players to put together the best story.
I just want to show you some of our stories real briefly here.
This one is Revenge of the Lawn Gnomes.
So this is Bob living at home, nice guy.
He carved these lawn gnomes, and they love him.
Unfortunately, he has a heart attack one day, kicks the bucket.
Then his awful son, Anthony, moves in.
And he's kind of a party animal, stays up all night, plays in bed, does all these things that upsets the gnomes.
But the most upsetting thing is that he mistreats the plastic flamingo on the lawn.
So the gnomes decide they're going to get revenge through all these different failed attempts on his life.
We wanted to push the TV in the tub and electrocute him, but she walks in the room.
This goes on and on.
Most of these stories are like 50 frames.
I'm just showing you the short version, believe me.
Eventually, they hire a mercenary army of flamingos that come in and then jam up the door with objects and set fire to the house.
And then old Anthony joins them as lawn ornament.
So this is pretty typical of our early stories, using the in-game elements, going for humor.
Next story I want to show you is Snowflake Lodge.
Now, this one is kind of a, I know what you did last summer type of thing.
And this one's remarkable for the amount of custom content that they managed to use.
We don't have snow in the game, by the way.
They managed to do this.
They built this giant snow lodge.
So basically, these teenage friends come to this lodge for a weekend.
This screen, for instance, there's not a single item on this screen that we ship with the game.
They created all the skins, all the objects, the wallpaper, the windows, the floor, everything was user created.
We don't have ski lifts.
So we don't have skiing.
Somehow they turned The Sims into a skiing game.
They made custom meshes.
They made custom groundscape, custom trees, and all this, and made The Sims ski somehow.
I mean, it just blows my mind.
So, but basically the story here is that her dead lover appears to her in the night, one of the people who showed up at the lodge.
She meets him in the forest.
They decide they wanted to get married before, and so they finally get married.
The next morning, the guy that she came with ends up dead on the lawn.
They kind of panic.
They don't know what to do.
They basically bury him inside a snowman.
And of course, the next day he wins the snowman contest.
As the sun comes out, he starts melting, you know.
So this is a good example of how the fans are feeding on themselves now.
Basically, the content artists are producing enough content where the storytellers can now grab that and do really cool stuff with it.
These are the credits at the end of this story.
They're actually writing credits as to what fansites they got what objects from.
So there's this nice synergy, I think, happening.
Now, this next one's a little weird.
Starbucks sucks.
Now, what's funny is this isn't Starbucks in general sucks.
It's one particular Starbucks on 47th Avenue in New York sucks.
And this guy just goes on and on about how he has to wait in line, and people answer their old cell phone right at the front of the line, and hold up everybody, and weird people hang out there all night, and homeless people come in and drink the cream, and all this stuff.
But then at the very end, he says, oh, by the way, there's this little coffee cart down the street that doesn't suck.
And I'm always wondering who uploaded this story, if it was the guy with the coffee cart or not.
Okay, last thing I want to show you real quickly is technically the least impressive, but emotionally, I think the most impressive.
And this was somebody's story about how their sister got out of an abusive relationship, a true story.
I won't read it to you, it's very long, but it basically describes how her sister got into this relationship, the guy who seemed okay at first, he turned into a jerk.
He started verbally abusing her, eventually got more physical, and then how eventually she, you know, got the gets together to call the police and get him out of her life.
But you could tell that the game was kind of this catharsis for getting this off her chest and hoping to, you know, spread the word to other people who might be in a similar situation.
And the fact that a game can be used for something like this is astounding to me. I mean, I really...
like to think that more into the future, our games can enable this type of communication.
Now, the last thing I want to talk about here real briefly is interactive storytelling. I've always been really happy in my little sandbox doing these open-ended games, these simulations, and I've always really avoided the idea of interactive story. But at this point, as you can see, our fans are going to basically drag me into it whether I like it or not.
So I've been thinking about this quite a bit lately, how we might enable this.
What's happening right now is the simulation is going off and doing one thing, and the fans are saying, oh, to hell with that.
I'm going to tell my story over this direction.
And frequently, they're having to take these sims that just want to pee and eat and sit in front of the TV, and they're grabbing them.
No, stand over here.
I need to take this shot.
And so they're like these little actors on strike that you're trying to manipulate to take the screenshots.
And so what we need to do is try to get these things more to convergent.
Bring them back into line.
So we've got basically this open-ended space, you know, you can go in any direction in, but it's very flat dramatically.
Now drama, you know, is linear, but it has this added dimension that we don't have.
And so how do we get this added dimension of drama in our open-ended space?
I think really the path to this I see is not teaching the computer to tell a story, but rather teaching it to recognize a story.
If when you were playing these stories out in the Sims, if the computer could actually get some sense of the story that's in your head, it could then start helping you a bit.
It might at first be just a very simple thematic recognition.
It might look at the things you've bought in the Sims and the interactions you've chosen.
Oh, you tend to kiss a lot, and you buy this type of stuff.
I think you're doing sort of a romantic story.
Or you buy, you know, hearts, heads in jars, or shackles in your dungeon.
And it might say, oh, that looks kind of like horror.
And it looks at what you're doing.
It might even drive events to resolve it later.
If it's not quite sure if you're doing a horror or comedy, you might walk into a room, and then there's a chainsaw and a cream pie, and it's looking to see which one you pick up.
Now, there are a number of approaches we can take towards this.
One might be language parsing.
In language parsing, this is the way computers try to understand natural language.
They'll look at the string of words, and from those, try to build higher and higher levels of features, and eventually parse it into a complete sentence.
I suspect there might be something similar possible with story parsing, where you look at an event stream and look for higher and higher levels of structure coming up to build, the computer can build its understanding on.
Let's assume that, for instance, we could do this.
If the computer could parse this story, then it could actually start changing the presentation of the story in something like The Sims.
We could start having the camera angles change.
We could have the lighting change, the music.
So if it thinks you're doing horror, the lights start to come down.
The spooky music starts.
You see lightning in the background.
The camera gets really close in, ambient sound effects, all this stuff.
The next step would be probably for the computer to actually start driving the events.
Rather than the events being random, they are now events there to support your story.
Another way to look at this is that we have users always in the game trying to find these success landscapes.
If the computer can detect what goal that a user is trying to pursue in the game.
then perhaps, so say that a million people are playing this game every day and after they play it there's some fitness test. It can measure how long you've played, maybe you scored at the end, you give it a one to ten, oh I really like that experience today.
Then it goes back up to the server and it compares all the results.
So at the top level we can have the server discovering these rules of story.
It's not like we're trying to engineer story grammar.
What we're trying to do is develop a system to where we have enough information.
for the servers at the top end to discover this.
This is very much like SETI at home.
We're doing a vast parallel search, except in this case, we really are using parallel things like SETI at home.
So I think long term, this might really be practical.
And of course, you can look at different players, and they're going to want to play the games in different ways.
So a mapping that might work for me won't necessarily work for you.
So at some point you'll want to classify the players.
It might say, oh, that's the type of player that really enjoys the comedy experience.
So they get this mapping, and they'll be evolving a certain mapping for that group of players.
These other players we know like to kill and torture their sims, and so we're going to give them a completely different experience.
So that's about it on this.
Oh, one more thing.
Once you've done this, assuming we could do this, which is a big if, I know it's a very difficult target.
Once you've finished this, once you've done the parsing, presentation, computers helping you tell the story, in essence, you've made a movie at the end.
which you can then share with your friends.
Maybe you can even go back and edit the camera angles.
Other people at the game, you should be able to send this movie, very much like Quake movies were doing, which was a very cool idea.
If you have the engine, it's a very small amount of data I have to send you to send the movie.
Or it could be saved out as a JPEG or an MPEG and given around to other people, posted on websites.
So really, what I think this is going to end up being more like is the Truman Show.
where you're Truman, kind of living your life out.
There's boundaries, but the boundaries are as far away as we can make them.
And the computer is back there, sitting there, looking at what you're doing, saying, that might be dramatic.
What if I had this happen?
It may be trying things on you all the time.
The computer might be sending NPCs into your life, seeing, oh, I see this love story developing.
I better make the jealous ex-girlfriend appear at the door right now.
So always trying to keep the dramatic tension going.
So that's about all I have to say on that.
I just wanted to close with one more remark.
And that's that in game design over the years, I found that two things really have made the biggest difference that I've seen in design.
And that has to do with self-confidence and determination.
A lot of times, you'll come up with a really crazy idea.
And you'll start telling people about it.
And they'll say, that sucks.
That's horrible.
And frequently, that's not always the case.
I've only had two games.
where I had that experience where most of the people I told my idea for the game, they said, that's a horrible idea. And those two games were SimCity and The Sims.
All the other games I would describe to people and say, oh, sounds great, let's do it. And they were all on board. They understood it. So basically, if you have an idea like that, and you go around telling everybody and they tell you it sucks, well, pragmatically, it probably does suck. But...
there's really a chance that it doesn't, that you're actually going to jump outside the box.
If other people don't understand it, that's probably a good thing.
And that's where the determination comes in.
At that point, it's entirely up to you to have the determination to fight, kick, and scream, do whatever it takes to get that idea out there.
And maybe, you know, maybe it'll be a success.
So thank you.
