Hi.
Is this on?
Okay.
I'm Chris Graft, editor-in-chief of Gamasutra.
We are a website about game development.
And we have here Zach Barth.
Welcome Zach.
Yeah.
Zach.
Zach is the maker of games that make me feel like an idiot and also a genius.
These games include, just in case no one knows, you just showed up randomly to this talk at 5.30 on Monday, Spacechem, TIS-100, Infinifactory, Ironclad Tactics, these aren't all of them either, Opus Magnum, Infiniminer, Shenzhen IO, which is up for the IGF.
excellence in design this year.
What do you think about that?
That's pretty neat, huh?
Yes.
We'll see.
So hopefully you can get a few insights from Zach that may or may absolutely not be applicable to your current.
I can't guarantee you're going to learn anything here.
It might not feel lesson.
Yeah.
So anyhow, first thing I want to ask, because your games are so unique, so I want to hear how you define them.
So what is a Zachtronics game in your mind?
Oh, okay.
So there's a term that I've seen online, the Zacht-like, which I'm not really a fan of.
I can't say that you like that when it's, you know.
So, the term I like to use is Zachtronics-style puzzle game.
So, notably like Ironclad Tactics is a game by Zachtronics that does not fit that really.
And like from like a marketing standpoint, like.
all of our other games and then Ironclad Tactics.
It did not sell very well.
So, but the rest of our puzzle games have done, you know, they're sort of like in the same magnitude as each other.
Probably the biggest thing that defines them is their open-endedness, right?
Like they're, I mean, even the word, the word puzzle game is really useless.
because there's so many different kinds of games that fall into the bucket of puzzle games.
So our, but our puzzle games, things they have in common is they're usually about like an engineering topic.
We give you a set of tools, and then with those tools we give you a set of challenges that are created.
They're, I mean I don't know what defines an open-ended challenge other than that there's a lot of different solutions that you can build to these challenges.
So I guess by definition they're open-ended.
Yeah, and an interesting description I heard you actually say, they're like about optimization.
Yeah, well that's like a second order thing.
Like you can play a Zachtronics game and never worry about optimizing, but they facilitate optimization because there's so many different puzzles.
Like a puzzle game with one solution, there's just one solution.
So if you get there, you're done. That's literally all there is.
If a puzzle has like a thousand solutions, maybe you can come up with criteria where some of them are better than others.
And if you can create criteria that make some solutions better than others, now you have an optimization game and people can try to, like, go from a bad solution to a better solution instead of merely getting the solution.
So that optimization, in practice optimization is a large part of it for a lot of people.
We recently added something called hermit mode to Opus Magnum.
One percent of our players turn on hermit mode, which is where it shuts off all the histograms and leaderboards.
There's a lot.
We've actually gotten a fair number of people who are like, I like these games, but I actually get either derailed or demoralized by seeing other people's scores.
And so we reluctantly added this feature.
But it was good.
There's 1% of people that are maybe actual hermits.
Yeah, exactly.
You know, it's cool.
You should be able to play the game that way if you want.
I think that's fair.
It's worked out.
Yeah.
Well, that's very thoughtful of you to do that.
So, one of the games in your early career, and I want to talk about this, it's, of course, Infiniminer.
And I would like to know what it was like making something like Infiniminer, coming up with that concept and then seeing it totally explode and...
In the form of someone else's game.
In a bank account that was not yours.
Yeah, yeah.
I mean, one way to describe it maybe is that it was like a car crash in slow motion.
Like over the course of like a bunch of years, just...
There's a lot of complex emotions that come with something like that.
Like there's stuff I've talked about publicly, and then there's like, I don't talk about all my feelings publicly.
Let's talk about all the feelings you haven't made public yet.
There's too many.
So I don't really remember a lot of it super well.
Because it's been years.
I mean, it's been like...
I don't even know when Infinimary came out.
Like 2009?
Right, like it's been a long time. There's a lot of stuff. There's there's a lot of moments that I remember I mean there I was I was a CA And was was working the IGF. That's the volunteers here I was working the IGF festival award ceremony when notch was up and won Every award or whatever and I was sitting in the back just yelling at people who were trying to record it We like turn off your camera. Don't record this And like, I just had to be back there watching it.
And it's like, wow, that's like a weird thing.
Like, it was weird and it was complicated.
And like, it's like my- In the back with a bottle of wine, just like start sickly clapping.
I wish, right?
Like, no, not even.
Just had to sit there and watch it.
And there's just weird stuff.
Like the time I was at Target with my wife and there's like a whole rack of like Minecraft shit.
Oh God.
And it's just like, oh yeah, those are t-shirts for kids.
Like, that's good.
Well.
Sorry I had to...
No, it's okay.
I mean, it's...
There's a lot of stuff there, right?
And so now I'm totally okay with it.
Just because, like, it happens, right?
And like, as we can see, like, it doesn't necessarily make your life better or make you happier to have a success like that.
And like...
Just, just, just, that's not based on anything that's actually happening.
That sounds like I'm trying to be mean, but it's true, right?
Like success, like we act like success is the goal, but like success is not everything.
Like there's more to life than succeeding financially.
It helps I guess, but.
It's not going to help you make more money, unfortunately.
Yeah.
And that's why I brought it up, not just to pick at the scab.
But the idea of success as in India, especially today, it's such a hard-fought thing to achieve.
And you fight tooth and nail for something, and then you see, in that particular case, it snatched away in such a dramatic way.
I don't know what my question was.
Yeah, that's okay.
Yeah.
Yeah.
There's not an answer either, so it's okay.
Yeah, you already gave a great answer, so yeah.
So even though, you know, there was Infiniminer, you've managed to keep on making games and You know, how do you, what's your mindset, you know, when maybe post-infiniminer even, you're just like, okay, I'm just gonna keep on doing it, and you keep on doing it well, and you maintain productivity.
So how do you get in that mindset, and how do you put it into practice?
So notably, Infiniminer was a free game.
I did not sell it.
We didn't sell games back then.
I just made it.
And I mean, perhaps if it had been a couple years later when we were selling games, maybe it would have ended up differently.
So Infiniminer comes out.
It does its little thing.
I was honestly more upset with Infiniminer that I made this game that people liked it, but it wasn't really good enough.
And people liked parts of it that I wasn't able to really capitalize on.
It was in C sharp and it was unobfuscated.
So then like the source code, like I was publishing the source code without even realizing it basically.
And like people were making like hacked versions of the clients that ran the way they wanted.
And like, I'm making games because I want to do something, like I want to exercise my vision creatively.
And it turns out that when you're just kind of putting games out there in this weird amorphous way, like you're not in control necessarily.
And so I made this game and I wasn't in control.
I was really upset.
I was like, fuck it, I'm gonna stop making games.
Am I allowed to use profanity in this?
Fuck yeah.
Yeah.
OK.
Yeah, so I actually, there's like a post if you go back to my old blog.
It's like, I'm going to stop making games for a while.
Sorry, guys.
And it was like, really like, what the hell?
I don't know.
I was in a weird state, I guess.
But like a year later, I was like, man, I've got to make some games.
And that was when, after seeing games starting to be sold, I was like, we should make a game and sell it.
And so I got some friends.
Usually I just would make games by myself and then force a friend to play it.
I don't mean to interrupt, but it's interesting.
Here you go.
You know what I might do?
I might make a game and then have people give me money for it.
No, it's crazy.
I made my Flash games, and people are like, you should put it on Kongregate.
You can get money for that.
I'm just like, no, I don't want it.
I really wanted nothing to do with that.
And in retrospect, it's crazy.
I'm like money hungry now.
Yeah, I got it.
What's that, SpaceChemMuncher?
Yeah, exactly.
Yeah, well, so we made SpaceChem.
I recruited some friends to help with it.
I guess like Braid had come out at that point, and like World of Goo.
And it's like, OK, there's like a pattern here.
We can make a game and sell it.
We applied to be on Steam.
They rejected us.
Imagine that, right?
Yes, seriously.
i don't think you have a problem anymore so we were like you know what the hell with it like we'll make our own store and sell it ourselves we made space cam uh...
i everybody was all rev share cuz back when you did that is people still do that but was all rev share i paid some dude uh... five thousand dollars i think to do all the art that was the total cost unlike if we're lucky will make ten grand off this game and then like the game comes out like it starts picking up steam rock-paper-shotgun covers it you know we hundred thousand dollars three hundred dollars i said to myself i was like if we make a hundred thousand dollars game equip my job i worked at microsoft i was not a fan uh...
when i quit my job we're gonna go into your or whatever i guess that we can call it that we're gonna make it and so we got a thousand like i'm not enough actually to run a studio i need my as i can be at the three hundred thousand we're gonna do it and we did And then, like, yeah, okay, we quit Microsoft and we started up the studio, and that was sort of how we made that transition.
And I think from then on, it's just been every day, like, get up, make games.
And then you go to Target and you see Space Jam shirts, right?
Yeah.
The kids are wearing them.
You've got to make your own, unfortunately.
Yeah, so I mean, it's interesting.
And I think it's something that a lot of people in this room could probably relate to is there is, I don't know if it's exactly imposter syndrome or what, but just like, yeah, I don't want to sell this.
No one's going to buy it.
Did you have that in your head then?
Just because there's no way that someone would give me money for this?
It just seemed crazy.
like people were really buying indy games in the ones that were like the they stuck out for an unclear reasons like why breed right like the circumstances right and so like yeah i just didn't is i wasn't even that i mean i am talk full of imposter syndrome but like it was just like it just didn't make sense right and i was like when when minecraft is selling with like the thing where it gets more expensive the longer you go on and like nobody knew what was going on in humble bundle was like a thing then they're like oh we're not going to pay for games anymore except we will and it's like Like, no one knew what was going on then, right?
Like, by comparison, everything is really rigid now, I think.
Like, it's either free to play and you're a horrible person, or it's like, you sell it on Steam.
And sorry, that was meant to be an aggressive comment.
I don't actually believe that.
But yeah, like, it was crazy back then, like the models of how you might make money or might not.
Like, I wasn't in it for the money.
Yeah.
But it's so much easier now, though, right?
In some ways, I mean, it's not easier because it doesn't, it shouldn't be easier, right?
Like you're, I don't know, there's a fixed amount of money and you're competing and there's a bunch of stuff and people only buy stuff they know about and that's a tough game.
But like, there's models for it at least.
I don't know if it's better, I mean I don't have to say which one's better or worse.
I'm glad I got to do my thing when I did, because I think that was important for me.
What about with, I don't even want to say it, but Indiepocalypse.
People talk about that, and really all that means is just there's a shillet of games everywhere.
How do you navigate that?
I don't know.
I don't have to.
Okay, next question.
No, no.
We launched SpaceChem back before.
It was different.
When SpaceChem got on Steam, when they let us on Steam, it was like they just cut us a check.
right because there were that there were that many in the games there were enough in the games that like when you listen all of them we would always be there like and they're on steam and they'd be there every sale and that was back when like the discounting was crazy like they do like one day only discounts and stuff and but you get a lot of money just by being physically present like if you came out with space cam today like it without any of our previous games like I honestly don't know what happened like and that's a lot of our stuff now I think sells well because like it's we have like this track record and we've made the same game over and over again and and it's just people know about it like that really it's I don't know I don't yeah it's tough yeah okay so that partly answers my question how do you make a game so fast you just you just make the same game over and over again. That helps. That's okay. So that's part of it, right? That is my question. How do you make games so fast? Because you've been an indie for like 10 years, right? Yeah. I mean, that's kind of also not that long of a time. But yeah, at least a whole bunch of games. Yeah. And I mean, our current goal is like, I want to release two games every year.
right like that's that's i can't do it that's not that's that's a little unrealistic but that's what i want right and i think that like wanting that to be the case is the first step right like wanting something like that uh... we cut a lot of corners we like recycle a lot of just like things that we've learned like there's a reason all of our games look exactly the same i guess right like and we just copy and paste, we're literally copy and pasting code out of previous games to make our new game, it helps And I think part of it also is that like a lot of, that's why I did a talk at NYU, and like the thing they teach at NYU Game Center is that you should like make prototypes and iterate and iterate.
Like we just like make a game and just put it out there and like see what happens, right?
The way you find out if your game is good is to release it.
Right? And like, that's the real test.
And like, I can't tell if our stuff is fun.
Like, I could bring some people into the office, they're all gonna look like they're miserable.
It's a Zachtronics game.
Like, they do not test well.
It does not...
It is impossible to tell if somebody is having fun by watching them play one of our games.
But...
Like, they're fun enough, I guess.
I don't know, it's tough.
So like, I don't try to play that game, right?
Like, we just put it out there and just try to do that.
And like, it works for now.
It's not necessarily always gonna work.
I'm not saying you should do that, but that's just what we do.
Yeah, there's gonna be so many, like, people just copying their own games over and over again after this talk, yeah.
it's okay one thing i heard i was about and for lunch recently and one of the things that uh... that rob walker said was that they've they've crunched the numbers in these don't make enough sequels that people with triple-a people know this that if you make a sequel is going to do it's going to do okay in games it's a licking a movie is the rules that'll do like a lot not necessarily as well but pretty well i can games it seems like sequels is keeping better and better better right? Like if somebody, if your game comes out, it has like an audience, there's people who are going to find out about it after, but like it's old and they don't want to jump into an old game. You make a second one, now they're like, okay, now is the time to jump in on that, right? Like now's the time to get a, become a Space Chem fan because Space Chem 2 or whatever. No, we're not making Space Chem 2, don't worry.
Or I'm sorry, either way.
But yeah, it helped.
And so I think in that regard, I would never want to make a sequel.
It seems like a horrible thing to have to do, right?
But we're effectively making sequels in a way that I love, right?
Which is that we get to do the part that I love doing from scratch, which is coming up with the world, the mechanics, the puzzles, all the systems.
Like, our games thrive on new mechanics, because figuring out the mechanics is the core fun part of it.
But we're kind of making sequels, and I'm okay with it.
And I think that really is part of the... that's what's helping.
Now I'm wondering if all your games are in the same universe.
They are not.
I've got headcanon for it, but yeah, they're not quite.
Well, so SpaceChem exists in the Infinifactor universe.
When you start up SpaceChem, or Infinifactor, there's a little SpaceChem pyramid thing hanging from the rear view mirror of your truck.
So that's like what about that.
Yeah, everyone. Yeah. Okay.
Yeah. So, um, one other thing with the way you've been telling story in your games and it's so much more narrative. It feels more cohesive as your games have gone on. So what's your push of that? Because your games are super systems based, mechanical, and you might think this doesn't really lend itself well to telling a story, but they do.
Yeah, I mean, so this is something, it started with Space Chem even, right?
We wanted to create a world for the game to exist in, that you could go into that world.
And this is something that we've really, like, refined and worked on over and over and over again.
And like our current writer, Matthew Burns, in the back, raise your hand.
Everybody clap.
So he.
He is the genius behind all of our story and our writing stuff and our music and our sound.
And I think that in the past couple of games, like the two of us have really, so our workflow now is that when we make a puzzle game, like if we made like, you know, like Shenzhen IO, right?
The way we did Shenzhen IO is that, the story in that is that we came up with like the world and the core concept.
And then I told Matthew to go come up with a list of puzzle ideas for me.
So I didn't have to even do anything.
But no, come up with narrative puzzle ideas.
And so in the world of Shenzhen I.O., it's like the near future, like, kind of blown out version of, like, just crazy stuff getting made, you know, like getting engineered and made and shipped and sold as products.
And so, like, come up with, like, 40, like, crazy product ideas that you're able to write about and that are, like, descriptive enough that I can create a puzzle that represents that.
And so, you know, he came back with this list of things, and then we went through and brainstormed them, and I checked off the ones that I thought I could make into a puzzle and struck out the ones that seemed too tough to make into a puzzle.
And.
like we split off but then we come and bring it back together is that we take a puzzle and like a story thread and then weave them together and then like try to build little things that connect them together and then like add in things like the solitaire, you know I wanted to make a solitaire game for Shinjin Ayao and so we like work that into the story and like just kind of just stick everything into the story and so it's not like a lot of games like kind of pretend they're movies when they do story stuff and they think about it as this linear thing we try to build like this world and then just like plug everything into it.
And you plug the player into it too.
We were just talking before this talk.
And it's like, I was talking about how I like desk games, where it simulates you, the actual you, just sitting there, you know, just like, I'm at an office.
And then the more that we talked about it, it was kind of like- It's like shitty VR.
You're actually at a desk.
Yeah, wow, it's so real, tactile.
Yeah.
Yeah.
Yeah, and even with Shenzhen, there's the, how'd you come up, like, the manual.
It's like an employee manual.
Yeah, it's a 40-page binder.
Well, OK, so yeah, yeah.
It's a 40-page binder filled with, like there is no tutorial in Shenzhen I O.
It comes with a binder.
So it has, like, and there's not even a tutorial in the binder.
There's like.
application notes there there's lots of things that are real electronics thing like application notes which are kind of like tutorials on how to do something there's data sheets which give you technical information about your parts uh... we've got like spec sheets which are per puzzle things that tell you like in front you know like the client comes to you and says here's the information we want you to build this thing and so it's stuff like that and so we compiled it all into this binder but then like we had an actual writer write it and so like we it's it's this huge vehicle for us to tell story and create a sense of place And it's an iteration, the way it came to it, it's an iteration on TIS-100, which came with a paper manual instead of a tutorial.
And that was surely out of laziness, which is that I didn't want to make a tutorial that tries to teach people how to do fake programming.
So we're just like, we'll document it.
People can figure it out.
And it's fun.
I mean, that was around the same time that completely independently, Keep Talking and Nobody Explodes, or whatever, they came out with their manual.
And it's like, yeah, people like flipping through stuff.
There's definitely a trend now for physical stuff.
We're all used to everything's on phones, and you can't really touch it.
So people love, hipsters love physical shit.
Yeah, I have to go to Kinko's, print out the binder for the...
We did a deluxe edition where we actually made a binder.
We got binders printed and we had everything printed, so it's like a deluxe binder.
We did like a thousand of them.
We mailed them out by hand ourselves in one day.
It was insane.
But if you go to the IGF pavilion, Shinji and I are always there, and we actually have one of the original binders, please don't steal it.
We have one of the original binders out, and so you can see the gold standard of what this was supposed to be.
If I had my way, I would get a binder out to everybody, but not everybody wants it, and that's really hard, it turns out.
So, we got like five minutes before we're gonna open up for Q and A, so if you wanna keep anything in mind.
We did talk on, or you had talked on the Gamasutra Twitch stream about intrinsic rewards and design and the thing with your game says that you it's so satisfying without, you know...
feeling like gross.
There's no like gotcha mechanics or anything like that.
We were joking that like, Zach Barth, why do you hate progression mechanics?
Yeah, yeah, yeah.
Rumor has it that you're anti all progression mechanics.
So can you talk a little about being rewarded as a player and enabling a player to feel that?
So the reason I know I never would have made Minecraft is that I would never make a game about punching trees.
right and I I'm not a fan of like the RPG based progression mechanics and like that kind of stage that feels fake right like I don't I drive me crazy and so at least when it comes to design my own games.
They're really skill based right there really about actual skills, you know they're not real world skills like I don't really care for teaching some of the really program but like when you're playing our game the work you do that to solve the game or whatever the when you're playing the game you're going to be doing a real skill.
It might not be a real, real skill that exists outside, but within the game, it's going to be a real skill.
Like, we're not just going to pat you on the back and make it on your resume.
Yeah, exactly.
Yeah, like we're not just going to pat you on the back and make your numbers bigger.
So you're actually doing the same thing the whole time, but it feels like you're going like this.
We're going to actually force you to go like this.
And like, I can't imagine designing games that aren't like that, and I think that's a limitation of me personally.
Like, if we could do that, I would be much more rich, right?
Like, that's where the money is, is games that make people feel like they're awesome, you know?
But it's like, I just demand it, that you just have to be awesome.
Sorry.
I think there's like an authenticity in it and obviously like that's the strength of our games and that's why we sell them right is that like some people it's like the Dark Souls thing right regardless of whether Dark Souls is actually like something that's just patting you on the back and pretending that you're great or it actually requires you to be great like that's that people so there there there is a there are enough people that feel that that's a thing they want that we can keep doing what we're doing for now Yeah, and talking about the people who you make games for, obviously you have some kind of magical formula where you can just really appeal to one specific niche audience who will buy your games over and over again, right?
You're a marketing genius.
Yes.
I stumbled into something.
So how much of your design and the games that you make are driven by what you know your fans like?
None of it.
I don't make games to please people.
I think that's the flag.
I'm not doing this for you guys, sorry.
I'm doing it for myself.
And so obviously that's a lie, right?
Like I'm a designer and you have to think about who you're designing for.
But also the thing that really motivates me is not the desire to please people.
The thing that really deep down, like the little speck of dirt at the heart of the pearl is that I just have to get this stuff out there.
I can see it and it has to become real.
And that's really it.
You just have to bring it to fruition.
Exactly.
You guys are just along for the ride.
So yeah.
Y'all been played.
So, do you think that we should do some questions?
Yeah, we can do questions.
I've been told that we can run over slightly, so that was a mistake to take advantage of.
But we have rules, we have ground rules.
Oh God, okay, I'll be the mean guy.
Okay, so you can ask questions, but it has to be a question, and you really can't take more than five seconds to ask the question.
So, get straight to the point, we're gonna ask the question and we'll get you an answer, and then we can do lots of Q&A.
So, if that's okay.
Can you please talk about the process for how you go from these effectively programming things to making them actually fun?
Because nobody makes a game about coding in C.
Yeah, okay. So question, how do we make programming fun?
The answer is that we don't.
We don't make something that's... well, that sounds bad.
So it's debatable whether they're fun.
Oh, that's the microphone. That's right. I don't have to lean in.
So...
There's a reason we haven't made a game about programming in C, right?
It's not fun.
And so we design tool sets that strip away all the stuff that actually sucks about real life.
Our version of electronics is like monopole, like weird electronics, you know?
Like, it makes it easier, it makes it more fun.
Like, we strip away the bad stuff.
So you mentioned that the design of the world came before the design of the puzzles, at least in Shenzhen.
Yes.
When talking about specific mechanics, how does that play into the process?
Is that, do you think of the mechanics as part of the world, or is it more at the time of creating the puzzles?
Question, where do the mechanics come from?
Answer, the mechanics are probably the first thing, right?
So when I say the world comes first, I'm also lying.
The first thing that comes, like, is that, in my head I have to think of a mechanic that I'm like, man, I really wanna see a game with that mechanic.
and that that's where it comes from so with with change and I it was like man what if T I S like what if the T I S nodes like in T S 100 were actually things you can move around like that's the kernel of the idea I don't know what the language is going to look like I don't because the language is like a reflection of the rest of the game we have to build a language that allows you to build the things that like we want to build from a story standpoint so that comes later but like there's that core idea and that's a mechanical thing like I I'm I'm the creative director or whatever like I'm a mechanics focus person it's probably obvious so that's what comes first like truly first you What's next?
Stuff.
So when you're designing puzzles for your games, and I've been particularly in mind Opus Magnum, to what extent, because there's a huge breadth that you can optimize in different ways for, when you are building those puzzles and designing them as the creator, to what extent, like how much, how optimized are you going in the process of figuring out what that puzzle is when building it?
So do we optimize our puzzles in advance?
Or I mean, like, when you build the puzzle, are you figuring out what are the maximally optimal ways and different...
You just, I mean, that's the beauty of... So the way we make our puzzles, I've talked about this before, I just come up with something that looks solvable and interesting, and then we ship it, you know?
And so, like, it's... I am not the best player, I'm not optimizing it, like, does it look interesting? Cool.
Secrets revealed.
Do you ever play any of the user generated levels in Steam Workshop?
Oh, no.
No.
I'm not a fan.
There's this guy called Notch that made a level for Shenzen.io.
So I'm torn because I love our players, obviously, because they're playing our crazy shit.
So that's cool.
There's definitely a demand for more puzzles.
I'm really, I have a really specific thing I'm trying to do with our puzzles and oftentimes, like, our players are not going for that.
Like, a lot of the Shinjin-Ai puzzles are like, build this algorithm or do this programming thing.
I'm really, like, I guess that's what the game looks like I'm doing, is making these things about algorithms, but it's like, I really want to make a puzzle about building, like, a sandwich-making machine that's like, plays a little patriotic song and puts up a little flag.
Like, that's what I'm excited about.
And so, it's hard for that to show up in user-created puzzles.
So, it's not a good answer. I'm sorry, guys.
So I saw your Google talk and I was curious if you've given any more thought to taking kind of like a useful subset of reality and trying to gamify it.
No.
And kind of like teach.
No, no.
There's plenty of other people trying to do that.
Gotcha.
So you're just punting on the idea.
not really punting on it. I think that what we do is beautiful in its own right.
Like, if you learn something that has no bearing on reality, you're really just doing it for purely intrinsic reasons.
Like, there's something in that. It's like, uh, it's, it's, yeah, it's beautiful.
It's also probably more profitable, so.
How do you tune difficulty, and in particular, how do you know when something's too easy?
Okay, question. How do we tune difficulty? Answer poorly.
It's... Oh, God.
We collect stats. We collect metrics about how people are actually playing through our games.
So that gives us a question of, like, do we really screw this up?
Is there a level that everybody's getting stuck on that we don't want them to get stuck on?
So we have feedback in the form of that.
In general, like, Opus Magnum wasn't meant to be an easy game, it just was.
When we came up with the mechanics and started coming up with the puzzles, it just was as difficult as it is.
I actually was worried that people weren't gonna like the game because it was too easy, but I wasn't about to make it harder, because I didn't, like, that's not how it works, right? You just, you come up with, like, a system and you just get whatever you get out of it.
So, it turned out that went okay, so.
Yeah, you briefly touched on this in terms of your Sektronics genre kind of being a little bit niche, but what do you think about marketing?
Do you market your games at all, or think about marketing?
Question, do we market?
Answer, no.
We're, we don't, we don't.
Like, they market themselves, I don't know how you would market.
I don't know if I believe in marketing.
Well, like, I mean.
It doesn't matter if you believe in it or not, it exists.
I guess.
But like the Opus Magnum...
GIFs.
Yeah, the GIFs.
Opus Magnum, like every time you beat a puzzle, there's a button you can push and it like poops out a GIF on your desktop of like your solution.
And then people are like, it looks beautiful. People put them on Twitter.
Like that was a marketing decision, I guess, but it's also a game design decision.
Like no marketing person could tell you to do that.
Right. Like I don't I don't think it is marketing. I just think about it is like making a game that's like like games are meant to be played by human beings like you design for the person designed for all aspects of the person. Yeah. That's marketing genius. Yeah.
He doesn't even know it. We are we keep going for like a couple more minutes.
Okay. Now.
As an aspiring game dev that's also doing well in what like tech development. How did you find the time and energy to work on your own game before you?
Oh yeah, okay, so we did SpaceChem when we were at Microsoft.
So Microsoft is nice in that they have a good moonlighting policy, that as long as you're not touching your stuff, you can do whatever.
I don't know if it's still that way.
Also, I'm not a lawyer, so I don't know.
But at the time, it was legit.
And we, you know, I would go to work.
I was on Office, which is like the opposite of exciting.
But like one of the nice things about it is that there wasn't any crunch.
And so I would go to work from, you know, 10 to 4, and then I would, I would, just kidding.
I would go home and then I would frantically work on SpaceChem.
And then like on the weekends, we would all get together at my house, which my wife's chagrin, and we would all work on SpaceChem.
And we did that for a year and then SpaceChem was a thing.
So like, you just do it if you want.
Honestly, I think it's the best way.
A lot of people.
It's not a lot of people.
Some people are like, I'm going to quit my job and make indie games.
It's like, that is a bad idea.
You're probably not going to succeed on your first one.
We did it while staying at jobs.
It was amazing.
Nobody risked anything.
We had fun.
We didn't feel like pressure to perform or make money or anything.
We just made this thing because we wanted to.
So that was 10 years ago.
Things are different.
So you want to make games about real skills, but not real, real skills.
How do you balance the level of abstraction of actual engineering problems?
Oh.
How do we balance the level of it?
I mean, I don't think we come at it that way.
Like, I don't try to take a real system and then like tune it until it becomes something that's playable.
It's, I just sort of imagine it as like, I've described it before, is that like, I'll read about something, but then I'll get lazy and not understand all of it.
And so like, but that makes me think of like what my version of it is.
And then I just make that happen.
So, it's a very creative process.
And that's why I think it would be impossible, like, I mean, we tried making educational games that suck, because you can't do that.
Like, you're trying to actually port something real over, as opposed to just having this, like, fantasy version of electronics.
Hey, could we get a Sigmar's Garden standalone game?
Maybe on mobile?
Wow.
Probably not, I don't know.
So we did Shenzhen Solitaire on iOS.
Spoiler alert, did not sell many copies.
We did on Steam, did not sell many copies.
You probably already own Sigmar's Garden in the form of Opus Magnum.
So that's the thing, right?
So probably not.
All right.
That's single tier.
All right.
Not everything we do makes money, unfortunately.
I think that's it.
Did you have a nice time?
Yeah.
This was fun.
This was fun.
Let's do this again next year.
Yeah.
Oh, yeah.
Yeah.
I think.
So I have some Opus Magnum iron-on patches.
So if you've beaten the main campaign of Opus Magnum, you don't have to beat the final chapter with the production puzzles, but if you've seen the credits and beaten the game, you can come up and get one of these for free.
after this talk.
I have a lot of these.
I ordered way too many.
So not that many people beat this game, it turns out.
So yeah.
Thanks, everybody.
Yeah, thank you.
