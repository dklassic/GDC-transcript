Hey, my name is Tim Keenan.
I made a game called Duskers, which this talk is about.
Before that, I made a game called A Virus Named Tom.
Before that, I worked at DreamWorks Animation for 10 years, making everything from Shrek 2 to How to Train Your Dragon.
And before that, I worked at a AAA game studio called Rainbow Studios down in Phoenix.
And that's about it.
So this talk is called Finding Duskers, as you guys can see.
And the reason that I named it that is because I think that the process that I went through when I was making this game was a little less traditional that you go through a design process where you have your design doc and you have all these ideas.
And it was more about finding the game and discovering what it was.
And you'll see that there's like benefits and detriments to the way of doing that.
But it worked out for me, so I figured I would go over that with you guys.
So I guess the first question is, what is Duskers?
So Duskers is a game where you pilot drones into derelict spaceships to try and figure out why everybody's dead.
And I didn't want to play the entire trailer for you, but I figured I would give you just a little bit of gameplay footage here.
If, oh, no.
We're gonna do this.
So that's not as sexy as the trailer but I didn't want to make you guys watch the full trailer.
But that just gives you kind of a quick idea. You're piloting those drones and you're the drone operator and you're dropping motion sensors and doing all these things to not die. So that's all great. I made a video game. That's awesome. Why do I get to stand up here? What makes Duskers interesting? There are a couple really weird things that came about in the design process. We added a command line interface to the game. We don't have a soundtrack.
and we kind of made a real-time strategy game that defies almost every convention for real-time strategy games.
And it's not that I intended to do this.
This isn't part of my original design, and as a matter of fact, if you had told me I was gonna do this, I would have been like, oh God, what have I done?
But it actually ended up turning out okay, and the reason why is because this was all part of the game, this is what I was listening to about the game, and the game led me here.
And this talk is gonna kind of show you guys how in the world we ended up here and why.
So the game was well received. A lot of people really liked it. And this slide is a little bit easier. All of these represent some kind of end of the year award or game of the year, best of 2016, what not. You'll notice down here in the corner we are nominated for excellence in design. So if tomorrow, even if this talk is bad, if you guys could just like cheer and come to the IJF ceremony when Duskers is called out, that would be great.
So, when we got all of these things, all these awards and accolades and stuff like that, it was great.
And I was trying to figure out, like, what did we do right?
And I think the two things I heard the most were these two words, is innovative and cohesive.
Not in these words exactly, but a lot of times we'd get, like, I've never played anything like this, and everything in the game, the atmosphere in the gameplay, and the sound design, and everything just kind of fits together in this, like, perfect whole.
And that, I think that's what we did well.
And I think the reason we did it well was because of the design process that we went through.
And this is sort of the three things that I want to talk about.
The ugliest slide you'll ever see at GDC.
But, before we get into that, I noticed that design pillars was in every single one of them.
And everyone might not know what in the heck I'm talking about when I say design pillar.
So really quickly, what is a design pillar?
So the notion behind a design pillar is it's something about your game that's like super core, and everything in the game should sort of revolve around it.
And actually that's why I designed pillar as kind of a weird bad word because it to me is kind of emblematic of this process that we have.
That's really good for some games and not for others whereby you would erect these pillars first and then you would build the game.
And I'm gonna show you guys that I didn't do that.
I was just sort of building the game and then I would discover a pillar and then I would kind of put it up.
So traditionally, like I'm saying, they're established before production, and they kinda use features and high level mechanics.
And the caveat here is that I'm not dissing on this, I'm not saying this is necessarily a bad thing.
This is really good for games in established genres, around tight deadlines, and I'm gonna say, a lot of AAA games where you've got a budget, and you've got a team, and a lot of burn, and you can't just like, wander around and think about feelings and stuff like that, you really gotta kinda do these things.
So they're definitely not bad.
So, I went on the internet and I googled design pillars and I clicked on the first video, because I'm a researcher.
And this is what came up.
It's actually a good video, but he was giving an example of what design pillars are, and this was a game, this was a beat-em-up, kind of Double Dragon style, and we've got arcade style, we've got non-linear branching stage progression, and we've got local and online multiplayer.
And for me, and you'll see as this talk goes on, this stuff is kind of dry.
I mean, I'm not really super inspired to make a game that's just non-linear.
And I've never heard a friend come up to me and be like, Oh my god, you gotta play this game, it's non-linear.
And so, I kind of feel like if you're gonna make a game and this is gonna be the heart of your game, it's gonna kind of shine through.
So these things should be way cooler, right?
So then, again, I googled and tried to find a design doc, and I found what I think might be Assassin's Creed 2, I don't know, this isn't official.
But fight navigation social stuff. This wasn't bad. This is a little bit better But again this seems like you know these features on the back of the box and not something that's like going to inspire me And I'm going to be able to tell my team about necessarily so I guess that starts to beg the question What did duskers do differently like what did we do and real quick?
We created design pillars throughout development rather than at the beginning, so that I could kind of feel the game and have it evolve.
We had design pillars that were emotions and feelings rather than features and mechanics.
And I'll tell you why I did that.
And then I think you're supposed to do this anyway.
Stay true to design pillars with every design decision, but I don't think everybody's as OCD about it as they could be.
And sometimes that's because there's a marketing guy or there's like, you know, other reasons.
But if you're really like, bat shit crazy about this, it can really pay off.
And that can really show, I guess, your artistic intent will come through even though it's subtle.
And this will make sense in a second, maybe.
Beg, borrow, steal, sorry, I forgot about this one.
So throughout this talk, I'm gonna kinda name drop a lot of really cool game developers.
And that's because what I tend to do is I just talk to smart people and then I steal their ideas.
So.
Given that you're at GDC and you're sitting at a bunch of people at a design talk, it might be good to shake some hands because eventually, you know, when you're in your own thought process, it's hard to innovate just by yourself.
So it's really good to just bounce ideas off of other people and it really works out.
It did for me.
So, alright, let's go through these things one by one real quick, and then I'll get to examples of how we did this in Duskers.
So, creating design pillars throughout development. I call this listening to your game.
So, instead of establishing things up front, what I try to do is I think of it like a dance.
I might be sort of leading this dance, but if you've ever done any traditional dancing ballroom dancing or swing or whatever There's there's a partner there And you've kind of got to feel each other and you've got to kind of go with that flow and especially if you're imagine if You're inventing a new dance right you're gonna step on each other's toes a couple times and things are gonna be bad but you can't just you know, bulldoze your way through it.
You've got to kind of feel it.
And so what I felt was is that I listened to Duskers.
And as Duskers went on, it was telling me.
And I don't mean, I do mean like almost every aspect of this.
I don't just mean we sat in front of like some focus testers and you know, we got some data.
That's really good too.
And listening to other designers, but some of it is like almost psychological profiling on yourself.
You're like figuring out what in the heck you're actually trying to do with this game.
So.
have design pillars that are emotions and feelings.
Alright, now this is, I think this is really important, for me anyway, because things can be so much more pervasive than, like, non-linear.
Like, imagine if I'm going to my sound designer, and I'm like, alright, this game's gonna be non-linear.
Like, what are they gonna come back to me with, right?
If I'm like, this game is all about empowerment.
I think that gives them more.
And that can actually start to lead, or anxiety, what have you.
You can actually start to use the UI, and you can give the art direction, and all of those things can feed off of that.
And that goes into this whole cohesive thing, right?
Where things start to feel cohesive.
It also leaves room to explore different solutions.
This goes into the innovative thing, right?
Like if non-linear can be implemented in a couple ways, but if you're trying to implement anxiety, right?
There's lots of different ways to do that.
So the odds that you as a designer will come up with something unique and different because that's who you are, it's kind of greater.
So this will lead to sort of innovation.
And then it also, just by default, it focuses on player fantasy.
And every game doesn't need player fantasy.
I think you can play Tetris without imagining that you are a block or something like that.
Or.
the guy that stacks the blocks.
But I do think a lot of games can really lend themselves, like player fantasy can make them very strong.
I think that was a big thing in Duskers is that people really felt like they were a drone operator.
And so I think that when you're talking about emotions and feelings, that's what you're trying to get the player to feel.
So if that's your design pillar, that kind of makes sense because it's sort of one-to-one, right?
And then finally, stay true to your design pillars with every design decision.
And in the, I don't know if you guys have seen the movie Finding Nemo, but there's a scene where all these fish are swimming in different directions, and then they start telling them all to swim down, and they're getting towed up, and then when all the fish start swimming down, they become so much more powerful, and then they basically break the beam and they get out of the net.
Ironic, I worked at DreamWorks and this is a Pixar movie, but when I was at DreamWorks, they said the same thing.
I would be working on a shot.
And I would be like, no one is gonna notice this.
I'm spending like two days on, you know, this thing in the corner and no one's gonna notice.
And they were like, yeah, you're right, no one's gonna notice that, but in aggregate, they're gonna feel it.
And everything about this movie is just gonna be visually beautiful and like that's gonna come across.
And I started buying into that.
And you'll see that I had like a very, I had some strange, like very esoteric sort of artistic intents with this game.
And I wasn't overt about them in any one way, but because every design decision focused around that.
it came through and people actually regurgitated that back to me and that was kind of amazing.
I don't know, as a designer and as a creative, it's not often that I can do something.
Usually it's like, oh, did you feel anxiety when you were playing it?
And they're like, yeah, I think I did.
That's usually what it is, but I was getting people coming to me, saying my artistic intent, and that was blowing my mind away.
And I think that's why, is because everything revolved around those things.
Let me give you guys a quick example of a game that was very inspiring to me.
Adam Saltzman and Robin Arnaud made this game called Capsule.
And if this will play. This game blew my mind when I saw it.
Everything in this game is working together.
There is a bend of the CRT monitor, there are boops and beeps, there is a scan line that goes down.
The UI, the sound design, everything about this game screamed to me that I was in this claustrophobic little bubble in space and I had this crappy little CRT monitor and my instruments and that's all I had.
And this blew my mind and I was like, if they can do this, then I can do this.
you know, and that's when you steal ideas.
So, and actually you don't only have to steal ideas because at the end of the development of Duskers, I got Robin to come over and help do sound design.
So you can steal people too.
So there's like a whole stealing, it's like it's endless what you can steal.
So I just kind of wanted to use that as a quick example.
So now let's get into the fun stuff.
Let's talk about Duskers and how all of this stuff.
affected Duskers. So let's just at the beginning of Duskers I had this idea. It was like you were Han and Chewie and you owed some gangsters money and there was this Bermuda Triangle of destroyed spaceships and you were gonna go in and basically tomb raid them and there were gonna be tower defense mechanics because you were gonna make sure that as you opened up doors the bad things didn't come out and eat you and so your little drones would you know fire on them and all and you know so this was originally like kind of the concept and that's the thing this this talk isn't really about Ideation this is kind of like once you're kind of going like how do you find your way?
and so Not much of this made it into duskers actually As a matter of fact I remember at the beginning of this in my initial prototype So let's start with the simple premise, right?
Piloting drones into derelict spaceships, right?
So what I made initially was this simple, all right, so we're gonna steal more ideas here.
So I made this, I jokingly called it boxes in space.
It was just cubes with a headlamp, and you were going through this derelict spaceship.
And Randy O'Connor, who did Escape Goat 2 and a whole bunch of other stuff, he was playing it, and he was like.
And after just a couple minutes, he got done with it.
And he was like, I'm really tense right now.
And his shoulders were up and he was just really tense.
And I was like, wow, that's really impactful for a game with so little effort into it, right?
So I started exploring a lot of things.
I started exploring the combat and all that stuff.
And those things would kind of work, but they didn't have that effect that that simple initial prototype had.
And I actually remember...
Remember struggling with the the combat system actually and Alex Austin. He's right there Who did gish and he's doing sub-roaster right now. I was like man. I'm really struggling with the combat Like I don't know what to do, and he was like why don't you not focus on combat?
And I'm like what a dick like That's such a jerk answer, but it was so right.
And I didn't focus on combat, and actually the game doesn't focus on combat at all, and that's probably one of the best things about the game.
So, steal ideas, people.
So, now that the, so the combat wasn't working, but the drones were, so let's focus on those drones, right?
And moving them around in space.
That's when I got the idea, or actually, I was suggested the idea, and no one will take credit for it.
No one will admit that they did this.
But they were like, what about a command line interface?
And I was like, that's a horrible idea.
And then I was like, This is probably my last game, I'm an indie game developer, why don't I do that?
So I threw in the command line interface, and then the player fantasy started to become about being a drone operator and commanding these drones.
And it was really starting to feel really good.
And this is when Pete Angstadt, who did Cannon Brawl, and he's doing, is it Kingdoms and Castles?
Yeah, and he worked on Abzu.
So when you're getting design help, it's not always that you want, yes man, it's not always people that are affirming your ideas.
A lot of times it's really good if they think your ideas are shit, because you have to then justify what you're doing or change what you're doing.
So he completely crapped all over all of this.
He said drones are a horrible idea because people don't care about drones.
If a drone dies, it's just a piece of metal, right?
If it's a scientist or a space marine or whatever that's a human and they die, people care.
So that's a bad decision.
Command line interface, hey man, real time strategy games.
Drag select, right click, that's a convention.
Why is it?
It's because over like decades, people have figured that this stuff works, right?
So hey, let's make people type this clunky interface.
That's really obnoxious.
That's a horrible idea too.
a drone operator.
He was like, nobody wants to be Tank, everyone wants to be Neo.
This is a Matrix reference.
Everybody wants to fly through the air and kick people in the head and shoot them with machine guns.
No one wants to be that guy behind all the computers, the operator, right, that you call.
And I realized I wanted to be Tank at that point.
But I was like, so how do I justify all this stuff, right?
Like, this was solid.
This wasn't him being a jerk.
This was really good feedback.
And these were really good arguments.
And I had to come up with a justification or I had to change these things.
I couldn't just be like, oh, I'm just kicking over design principles left and right because I'm an indie.
It's like.
you have to actually justify this stuff.
And I was like, why am I doing this?
Why am I doing all this stuff?
And it goes back to Randy feeling tense, which was the strongest thing I'd had in the game so far.
And I was like, this stuff feels tense.
Why does this stuff feel tense?
This stuff feels tense because this stuff feels real.
If I hit up on a keyboard and a human moves up, that doesn't happen in the real world.
That can happen with a drone.
Using command line interfaces to control robots feels visceral and it feels real.
Being a drone operator to me feels more realistic than flying through the air and kicking people in the head.
So, all of a sudden, it's all started coming together, and I was like, that's what it is, is that this game feels real.
So that became a pillar for me.
And again, that's sort of like a feeling or an emotion, right, is this realism, that I'm really the drone operator.
So now the question is, all right, we've come this far with realism, now I'm talking about how these things can be pervasive, where do we go from there?
How do we take realism and apply it to the rest of the game, okay?
No music.
I come from a film background, and if you take a soundtrack out of a film, the film sucks.
It's like chopping off your legs. I don't know if you've ever watched a scene from a movie and then watched it without the soundtrack.
It's amazing how much you lose from that. So this isn't like, oh, I think I'll do this. This is like a strong decision.
But that was my pillar, it was realism.
And music is non-diegetic.
And what I mean by that is I don't walk around and hear a score playing in my head every time.
It would be awesome if when I walked into a room something like that happened, but it doesn't.
And so it's non-diegetic, and it doesn't fit in my game.
And that was a really scary decision, but I was like, hey, if I'm gonna do it, I'm gonna go all the way.
I already put a command line interface in the game, for Christ's sakes.
So that became a decision.
Another thing is that at the beginning of the game, people, I started realizing I have to go further with this because people were like, oh, I'm the drone, or okay, now I'm playing as the drone operator.
And to steal another idea, David Rosen, who does overgrowth, was like, why don't you have the player walk up to a bed of monitors and sit down and then you zoom in on a monitor.
Now they know they're the drone operator.
And I liked that at first.
And then I was like, no, that doesn't work at all because then I'm not the drone operator.
I'm playing the drone operator who's already in the game because I'm not moving my head.
I'm not in that room.
I wanted your monitor to be your monitor.
I wanted your keyboard to be your keyboard because that's real to me.
So what I did was when the game begins, we'd show a boot screen because we're letting you know this computer you're sitting in front of is your computer.
This is you.
You're not playing the drone operator, you are the drone operator.
And so you can see how this is just this notion of realism is just starting to pervade every molecule of this game, right?
Same thing, we originally had this closed circuit TV look.
And actually, and so slam imagery is a lot closer to what you actually get when you're talking about robots and how they see the world, you know, casting out dots and doing edge detection and stuff like that.
And I remember tweeting out, like, the comparison picture.
and being like, what do you guys like?
And most people like the CCTV better.
At that point, I mean, we changed things a bit from here.
But I was sitting there and I was like, you know what?
Like, that's just not what the game is.
That's not real.
There's not a camera hovering above the drone, right?
I would be getting back data, and this feels more real to me.
So again, like a strong decision that we decided to make so that everything is going in the same direction and everything is revolving around this realism pillar.
Right?
So did this come across?
I would say that it did.
We got so many people, all of our fans, they put on headphones, they turn off the lights, and the monitor is their monitor, and they imagine they're in a spaceship.
We have some people that'll go down into their basement or they'll turn off the heat so that they're cold and they have to wear like fingerless mittens.
It's crazy, right?
And you can even see in the second quote, they're talking about the lack of in-game music and how that made them focus on this stuff and made it feel more real, right?
So this is something like, How can I convey this?
And it got conveyed, right?
It's like you can do this, and it's kind of amazing.
It's like a drug.
So let's keep going, right?
So we've got this realism pillar, so what else can we do?
Piloting drones into derelict spaceships, all right?
Let's steal more ideas.
So I was on a plane with Jim Crawford who made Frog Fractions 2.
And I was telling him about this game, and he's like, oh, derelict spaceships.
He's like, you know, I don't know if anybody's done like zombies in space.
And I was like, I don't want to do zombies in space.
But it made me think about the derelict spaceships.
And like, how I'm making a game with all these derelict spaceships.
And like, the theming of it just seems a little bit weird.
And I also went to a talk that Robin Haneke did, who did Journey, and she's doing Wattam and Luna right now.
And she was talking about emotions, and she was saying how, Can we get deeper with our emotions?
Can we not just do like fear and joy?
Can we get like at something deeper and more subtle?
And that's like a challenge to an indie developer, especially an arrogant one like me.
So I was like, maybe I could do that, right?
And that, so I started thinking about it.
And I was like, what emotion would that be?
Cause right now I got Chewy and Han, right?
And it's kind of like a buddy comedy.
But really, if they're all derelict spaceships and people aren't around, that's more like Moon.
I don't know if you guys have seen the movie Moon, but he's isolated on a space station, basically, doing a tour, and all he has is an AI there with him.
And that kind of makes sense.
And so I started thinking about it.
And I'm like, all these aspects of the game that I was talking about before, there aren't people.
There's no one there.
There are robots.
There's a command line.
You're a drone operator.
you're alone. This is isolating. So my next pillar became isolation. You could say that's a little bit weirder than fear or joy or something like that. Can I convey isolation to people when they're playing my game? That would be cool. So let's try.
I mean, it's really interesting to start playing with this idea of technology.
It kind of reminds me of Facebook, right?
Like where technology enables us to connect to each other, but then we have like less face-to-face conversations, right?
So this technology is enabling you to explore these ships, but it's uncaring.
You put the motion sensor down, it's just like it's red or it's green.
It's on or it's off. It's not like, hey man, look out, there's bad things.
It's just like boop, right?
And there's something, there's a disconnect that happens right there, right?
And it's kind of interesting.
And look at what we have.
We've got a command line interface.
You don't talk to people like this.
This is reminding you every time you type in a command, you're not talking to a person, because people you talk to differently.
And the slam imagery that I'm talking about, that's not how we see the world.
Remember the closed circuit TV?
I mean, it's grainy, but that's how we see the world.
It's like video, right?
We don't see the world like edge detection.
So that's reminding you, even when you look at this, it's like I'm trying to interpret data from something that's not human.
nobody here is like me, right?
So it's kind of amazing, all these things already fit in, right, with the realism stuff.
All these things kind of intersected, so this was a perfect pillar, so this came up as I was designing the game.
But now the question is, okay, can we push things further now that we know about isolation?
Can we create things that are interesting like this, right?
So here we go.
Alright, we've got drones. Can we make these drones feel more like you're isolated?
Can we do that? And I think we can, right?
If you've seen movies like Cast Away, I call it the Wilson effect where Tom Hanks has this volleyball and it's Wilson and it's got like this blood hand stain on it or something like that and he talks to it.
I'm like...
What I have to do is make you act crazy and then realize that you're acting crazy, right?
So originally this was gonna be R2D2, like you were gonna tell it to go into a room and it was gonna argue with you, it was gonna beep and boop and be like, you're gonna be like, get in there, right?
And it was gonna be fun.
But the problem is is that drone has autonomy and intelligence, right?
If you're doing that, you kind of have someone to talk to really, right?
So what if I could make it that you imbue the drones, you anthropomorphize them, you imbue them with personality?
and you are aware that you're the one doing it, then you would feel crazy, and you'd be like, I need to talk to people.
So what we did was we started giving them names, and we gave them call signs that were different, higher pitch, lower pitch, but it never did that on its own, only in response to a command.
But every time you asked it to go into a room, it would give its little tweet, and you'd be like, that's.
That's Ron, right?
And that goes into the room.
Also the fact that they only did things that you asked them to do, made this weird pet slash child relationship.
It would go into a room, and if there was something bad in there that attacked it, it wouldn't run away.
There was no autonomy.
It would just kind of sit there and be like, this hurts, Dad.
Why did you put me in this room?
And everyone felt really, really bad when they did that, when they would suck it out the airlock or whatever.
They'd be like, oh no, Ron.
That was my bad. You were such a good drone, right? And they knew Everybody knew that I did it was them. They were like, this is just a drone I hit up it goes up, but somehow I love this thing and I'm crazy and that was really important Logs, okay. This is another thing where we're let's talk about realism and isolation, right?
If you're if you're not around people all the time, you'll forget it eventually you'll be like I'm playing a video game, right?
But if I bring up a log where people are talking you're like, oh wow. Hey, there are people. Oh, but they're all dead and I'm the only one left.
And so it reminds you that you're alone, right?
And then the realism part of it, if there were like NPCs that were talking to you, that you know, you can't ask them a question and have them talk back.
But if they're in a log, that feels real because someone could have written this and I can't talk to them because they left the log behind, right?
So this is kind of where both of these emotions are kind of working together.
And it's so this is part of this like sort of cohesion thing, right?
So did it work out?
Right?
I mean, I literally have, like people mention the word isolation in reviews.
This guy's talking about tabbing onto Facebook and writing emails in the middle of playing the game because he felt so alone and that there wasn't anybody to talk to.
Like, that blows my mind, right?
That like you can sit here and you can target these things and you can convey them if you make like bold decisions and you stick with those decisions throughout everything that you're doing.
And like people will get it.
It's kind of like, I don't know, it's kind of amazing to me.
So, I don't know where we are on time.
I think we're okay.
All right, we're okay right now.
So let me go into, you can not only steal ideas from other designers and your mom and stuff like that, but the community is totally willing to let you steal their ideas.
So we had radiation in the game, and it would flood in a room and you would have to get out of there.
and players were complaining about it because they were like, oh, I don't know when it's gonna happen.
And I'm sitting here thinking about my realism pillar.
And I'm like, when you went into that spaceship, we tell you that it's unstable, so you gotta close doors behind you and just get ready just in case radiation floods.
So basically I wasn't listening to them.
But then after they kept whining about it, I was like, I guess whining isn't a good word to use.
after they kept telling me about this issue, I was like, you know what?
Everything in the game right now is about planning, is about having a plan and adapting to survive, right?
But when you adapt, you always create a new plan.
And so if a monster would chew on the door, let's say, you'd have about 60 seconds to figure out a new plan.
That's why the game is real time, is to create that tension, but really it's a strategy game.
So the problem with radiation, was they weren't creating a new plan.
The new plan was instant, and it was get out of that room and close all the doors.
It wasn't, okay, if any of these rooms flood with radiation right now, what am I gonna do?
Like, let me come up with a plan just in case that happens.
So I was kind of violating a pillar that I didn't even know about, which was that everything was about having a plan and making a new plan.
And so what I did was I added in an audio cue of the ship creaking.
And then I did a really fun thing where it doesn't always flood with radiation So that you sometimes you would just freak out you'd come up with a plan and nothing would happen But a lot of times it would and so now you're sitting there and you hear this thing and there's this Pavlovian response And then you're coming up with a plan So that was the community basically telling me because they had played the game more than me what a pillar was So and this came late in development and that most of the things adhered to this But there were a few things that didn't and so I went back and changed them and everybody liked those changes So yeah, so in summary Create I created design pillars throughout development instead of starting with these design pillars I had these design pillars that were emotions and feelings rather than like features and mechanics And I tried to stay true to those design pillars with every design decision Even if it made me make decisions that I thought were a little bit crazy, and I feel like that that all paid off And that's kind of my talk How are we around questions?
Okay, well I guess we can take about two questions and then the rest we'll have to take in some other place.
So, I don't know if anybody has any questions.
Oh man, I thought everything was thoroughly explained in this talk.
That was great.
So it sounded like you had a lot of different ideas going through it, but they all seemed really good.
And that might have just been because this was a curated talk.
So I'm wondering, the one thing it said you abandoned was the combat.
Was there anything else during the development that you thought was a pillar and then later didn't end up really working out?
Yeah, no, there were a lot of things.
So that slide, I only added it like literally today.
Cause I was like, I didn't talk about all the things that didn't work out.
But if you look at that slide, like my whole story of like a buddy comedy kind of thing didn't work out.
The combat didn't work out.
The tower defense stuff didn't work out.
It was just like, it became that it was, there was an optimal strategy, which was place your turrets at the pinch points, which are doors.
and open the door, you know.
So it was like those things didn't work out.
And those were, I think what happens is that, I think at the beginning when you're designing, you need something.
You can't just sit there and be like, you know, what are, so you, it's almost like you just need to pick a direction and start swimming.
And then eventually you'll be like, okay, I'm going in the wrong direction, but at least I know that I'm going in the wrong direction.
Right?
And so I think that's, initially you just kind of need some stuff.
If that answered it, I don't know.
Go ahead.
So, Duskus has a pretty unusual control scheme.
Yeah.
And I was wondering, just over the course of development with testers and then later with players, if you got a lot of kickback on that?
Oh yeah.
And how did you, I guess, prime your players or just adjust to that?
Yeah, so that was a big thing, and I actually couldn't believe that.
These people invested in my game, and they knew all of these things, which is nuts to me.
But the thing was is that at the beginning, we kind of, you're kind of afraid of it, so we put the command line interface in, but I still had mouse for a lot of other things.
And then eventually, it's just like, make those strong decisions.
Eventually, people would grab the mouse, and they would do things, and they would want to do certain things with the mouse.
And I kept backing it out and backing it out, and then eventually I was like, we can't have any mouse.
Like, as soon as we let them use the mouse, they're gonna wanna use it for other things.
And right on the beginning, there was just no mouse anymore.
Like, the opening menu, we have like, you know, the bracket with the letter so you can hit it, or you can do up and down.
And that was really important, and that took a while to come up with all of that, even, cause I was just.
I was afraid that it was also development time because it sounds weird, but most interfaces on PC are using mouse, and so to actually go back and redo it the way that it used to be done took a little bit of processing and stuff like that, and things weren't out of the box.
So I kind of wanted to avoid it at first, but we just kind of had to go all in.
And once we did that, once we made it that the opening menu, you didn't use the mouse, it was fine.
Everyone was complaining about it, and then all of a sudden we took it completely away, and then no one expected it, and it was fine.
Well, fine for the kind of audience that would play this kind of game anyway.
Alright, those are my two questions, so I guess the others, I guess we'll have to take...
Right. Somewhere. In the other corridor. Okay, thank you.
