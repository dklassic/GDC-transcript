Hello, everybody.
My name is Justin Ma.
I did the art and half of the design.
And I'm Matthew Davis, and I did the programming and the other half of the design.
We are pretty much the only two creators that were on FTL.
We had a few important contractors, like music and for writing, but it was pretty much just the two of us the whole time.
It was about an 18-month project that we started shortly after leaving a bigger studio about two years ago now.
I'll start by introducing the game for those of you that don't know what FTL is.
There's a screenshot that's pretty typical of what you expect in Faster Than Light.
The core concept is that we felt that a lot of games were putting you in the pilot's shoes instead of the commander's shoes in science fiction.
We watched Star Trek and Firefly and we watched the captain and he's the center of everything and it's not the pilot and so we wanted to give you that Captain Kirk feeling, the controlling your crew and telling where to aim and what to do.
And so we have the...
basic game screen that you see all the time is just centered on your ship in the left there and then the enemy ship on the right. And it's a kind of a tactical combat where you're targeting different systems and you're managing your power and you're commanding your crew to go repair stuff. And it's all very kind of abstracted out because there's no actual ship movement.
It's also largely procedurally generated, and so each time you play the game, it's very different.
And very high difficulty is another hallmark.
It was something that we did intend it to be very hard from the start.
So just to introduce this talk a bit, first we're going to go through our design process to come up with how FTL would work, the whole process from the beginning until the game.
And then the second half is going to be on how our experiences with actually releasing and turning into a commercial product, which wasn't initially in the plan.
So first, the first half, which we call designing without a pitch, I have to clarify, but pitch, you know, pitch can mean a lot of things.
In this specific situation, I'm saying it means that a very clear idea of what the game will be.
The game mechanics, the structure, the pacing, all that sort of stuff.
With FTL, we did not have that. We had a more sort of nebulous, overarching feeling that we wanted to achieve, which Matt will go through.
All we had in the beginning was one page.
I wrote a quick page of just kind of a summary of the type of game that we could picture.
But it didn't describe the game.
It described more of just an atmosphere and a theme, if you will.
And the bottom quote would be pulled straight from it.
And it's kind of really captures what we're going for, this concept of we're out of food, and half the ship is on fire, and there's these aliens in the docks.
So we need to vent the rooms and kill some people, but we save the day and meet scorpions.
So the idea is that you have these very layered problems with a lot of different exits and solutions to them.
And that was kind of a core concept, but not much of a game on its own.
We focused on spaceship simulations.
So there's some things we knew we wanted, like we had crew members you'd move around, you had certain systems you'd have to manage.
And there's probably a text-based adventure thing involved as well.
But that on its own, not really a game.
We could go anywhere from there.
And we didn't really know where we wanted to go, but we were eager to get going.
The one kind of image, whenever we try to describe it to friends, as we started, was that maybe it would end up kind of like a SimCity, but for Basel, Galactica, or the Enterprise.
We'd have thousands of crew members, and you'd have morale, and food, and kind of a big picture control instead of the micromanaging that we ended up with.
very abstract representations of everything, morale, food, etc.
Yeah, that kind of stuff. And then with FORAX, which is very traditional for the space stuff, would be more trading in open world, maybe even building up a fleet, just a lot more open-ended with a lot more content than what we ended up with.
And with the prototyping, there was also one moment when we were kind of picturing almost a diner dash in space, where it's just these, if you picture one scenario in FTL where you're like, you have that, half your ship is on fire and you have three borders or something's happening, we would just pre-set up those scenarios and it would be like different levels that you'd get scored on once you beat it.
And that was when we were really kind of desperately trying to figure out a way to turn things into a game, which we'll go into shortly.
but we had to start somewhere and so the initial focus was because we were eager to just start programming and get going on it, so the initial focus was a single ship.
That's largely because, you know, practicality's sake.
What's the easiest thing to start working on is a single, small ship.
So this drawing was probably the first drawing I did for FTL and you can see how we knew that we wanted a sort of cross section if we're showing the interior of the ship.
We weren't certain how big it would be.
You could see they're labeled by color for like, engineering versus medical or even living spaces.
So there's a lot of things that we weren't sure about this at this point.
I even was playing with the idea of having a cargo ship attached to the bottom, because I like the idea of in Aliens, when you have to abandon everything and you basically ruin the whole point of your mission.
Obviously that wasn't used.
The strange part is with this image is it was pretty much the description that was on the previous page and that image were all we had for design docs when we started programming.
Like, that was what we started with. We had very little as far as structure in mind.
Yeah, so we just wanted to dive in and see how things felt because...
I mean, initially we thought this was going to be a three-month project just for fun on the side, so we wanted to just start jumping in and trying things out. So the first thing we thought, you know, if we're going to have a ship and a layout, the easiest thing is a grid. So all the rooms would be on the grid. We thought this would be a temporary feature, which turned out to be in the final release as well.
And that's pretty much a running theme on FTL, is we would have this simplest way to quickly get it into the game, and then intend to maybe improve or make it more complex later.
But there are some systems, especially like the grid, that stayed right to the end.
Very surprising.
Even a lot of the code, which can cause problems as well.
So, as you can see in this picture, I was enamored with the idea of working with a negative space in the ship, being able to see if the power goes out to a certain room, you could see the actual power lines that have gotten disconnected.
If there are engine breaks, you can see the various things.
You could see oxygen flow, like there'd be a series of overlays where you get to see what's working on the interior of the ship.
And so...
You know, none of that very detailed atmosphere was used, but you could see how I kept trying to want to desperately add that in.
Kind of a native desire to always think bigger than what you end up with.
Yeah.
As pretty much everyone in the room probably knows.
So Matt's going to show a little bit of the first playable that we actually had running.
So here is the first version of FTL.
You can see it has a lot of the same hallmarks, like crew members that move on a grid, basically, the different systems in the room.
However, there's no real game.
All it is, the only goal is to survive a torrent of asteroids.
Open up that shield.
So to clarify, the little squares are breaches, and red squares are fire.
We also have algae, which is kind of the anti-point of fire.
It sort of heals crew members and spreads in no oxygen.
And there's a lot of things that are different, obviously.
The positional shields, we really both wanted sort of X-Wing versus TIE-Fire style shields.
If you open a door, you can vent your crew out into space, which happens quite frequently and accidentally.
And a little bit more...
Oh, there's a bug.
So you can also see an early version of the systems.
We knew that we wanted power management, but in this build it wasn't particularly successful.
There wasn't really much point to changing it.
Yeah, you could overclock your systems, which is interesting, and that would drain fuel.
But that wasn't really fun in the end.
You pretty much just always have to overclock it if you want to survive.
You can notice the cat portraits.
Those are Matt's cats.
which you'll see as we go through the screenshots, they stay a lot longer than they should have.
Yeah, they stay pretty long.
What else? Anything of interest?
I think that's the important stuff.
We basically, the first things we added was movement, the systems, fire, oxygen, and like, so from that we started to feel like, okay, now you can feel like there's problems going on in your ship, how can we make you feel like you're a captain, like, guys, go to the engine room.
So those were the first things we had to...
We knew that ultimately there would need to be this ship simulation and the stuff that we started with that we felt was fun for a ship simulation was oxygen being probably the very first system in the game, followed by people that could walk around your ship. And it was just, it was always built from just, let's make a really simple representation of a ship and then we'll figure out where we're actually going to put the ship and what type of game that ship is going to exist in.
Yeah, I remember being very shocked by the scene in Battlestar Galactica where they bent part of that ship and all those people died.
So that was like something we knew we really wanted.
So from this build, which I don't know how long it took.
About a month.
About a month into our work.
We found out that the micromanaging, well the managing of crew around your ship, dealing with problems, that was pretty enjoyable, focusing on the interior. When problems were very scalable, you get a very small thing which can cascade into a series of impossible to recover from problems, and all that was really exciting, and we thought it worked pretty well. What didn't work pretty well was the abstract.
lack of game goal, there's no real game there.
The micromanaging, I don't know if you noticed, but you can move crew based on squares and fire spread based on squares.
So you need to like surround fire and then move around and then work as a group to move like that and that was not fun at all. You would be pausing constantly even more than the current version of the game and just getting three crew members to fight one fire.
otherwise the ship would just completely be destroyed.
Yeah, so I mean it was, I was, if you like micromanagement it was kind of fun, but it was not the direction we wanted, this sort of, this commander feeling, not this like very detailed focused feeling.
So, where could we bring the game from this point?
We felt the most important thing to add next would have to be combat, because that would have to be in the game in some form or other, so we may as well try and add combat to the mix and see how that feels.
We went initially for the very traditional type of combat where you immediately picture with a space two-dimensional shooter type thing where you zoom out and you can manage your ship on a 2D space and you're just kind of shooting at each other.
It wasn't very tactical in that you couldn't target specific systems, you couldn't really do anything other than broadside each other.
and you'd have to be zooming in and out on the ship to manage your crew.
So you'd manage your crew, zoom out, and position them, and then when you zoom in, half your ship's on fire, and half your crew's dead while you were managing the space battle.
But it was also a lot of fun to zoom in on the enemy ship and see half their ship was on fire as well, and nobody was having a good time.
One other aspect, we were pretty, we really wanted to have multiple ships and this would be an easy way to have like a mini fleet battle.
If you played like Weird Worlds or countless space games, an image like this is probably pretty familiar.
It also will allow us to do the sort of shield, the positional shields as well as positional based weapons like weapon cones so you have to organize and strategize where you want to put your weapons based on strategy and you can also turn your ship to sort of protect a certain side.
And at this point we were actually generating a long list of different weapons and designs that we thought would work really well with this type of combat.
And that's basically the same.
Oh, there was another thought with the, because of the lack of crew control, because you're zooming in and out, there was a moment that both power and crew control we'd considered automating it.
So you would, when you zoomed out, your crew would still do their thing, so you wouldn't actually zoom in and find half the ship dead.
But it was not something actually implemented, but it was intended for if that actually went forward.
But when we stopped to consider this, well, there were a lot of things we thought were fun, like zooming in and seeing the enemy get destroyed. And some of the positional combat can be interesting. We felt the vast majority of it wasn't fun. And at this point I actually thought the entire game wasn't fun. The micromanagement didn't work, it was too heavy, and then when you're zooming out to do combat, the combat was muddy and didn't work well, and the micromanagement failed.
everything, nothing was working together and we weren't capturing the feeling we wanted at all. It was hectic and and difficult to know what was even happening. Instead we realized as we thought about it that the commander aspect, if you're gonna capture Star Trek, if you're gonna capture a Firefly, the positioning of the ship didn't matter. It was flying around wasn't something you ever watched. The most you ever heard a captain yell was Delta formation and that was the extent of the of the movement that you ever saw on Star Trek.
And so we started to consider if removing ship movement was even possible.
And it wasn't something we could really pull on other games for.
The overriding image in my head was Tetris.
And this idea that you're sitting here dealing with a bunch of cascading problems as these bricks are falling, and your enemy or your opponent is dealing with their bricks falling.
And then every once in a while, at least in some versions, if you're successful, you get to throw a bunch of bricks at the other guy.
and that was the basic concept of what we could see FTL working on and that you're both frantically fixing your ship and every once in a while you get to throw a bunch of problems at the other guy.
One of the other things that we realized was just that we have to be able to show everything on one screen.
There's no two ways about it.
The moving between screens to get additional information just would not work.
And so from this point, we tried to focus on those feelings as well as consolidating the UI.
We became almost phobic of making you ever open anything other than the one main screen.
Yeah.
So then this was after Matt had the Tetris idea, which really, it was at that point where like, wait a minute, this could actually work.
And okay, let's go back in and try really hard, because I think it could possibly work.
This screen was...
the first version where we tried to implement that.
You can see we still have multiple ships that you can potentially fight.
We still had the very unusual system management which wasn't particularly functional, and some basic weapons.
From this point, this is a mock-up, it wasn't in-game, but you can see at this point we came up with the idea to another turning point in the game was having the power bars, the way the power bars work, having them be representative of many different things. It was, it's the...
how much power is being used, it's the strength of the system, it's the potential strength of the system, it's the damage, it's whether you're repairing it, it's whether it's on fire, so like all these things are shown in this very small icon which previously was throughout the whole ship.
So this was a first trying to add those into the game as well as trying to figure out how we could potentially show weapons and how much information would need to be shown with them.
And you also see an early version of what I call the croissant ship.
and also the collapsible menus.
So we were still worried that there would be too much information at any given time, so we were playing with the idea of things being hidden and popping up when necessary.
And that also was abandoned for the same reason of being just too much movement.
And you really need to see everything.
There's no moment that you're like, oh, I don't care about my weapons in the middle of a fight.
So the idea of collapsing was definitely necessary.
Now we sort of figured out the basic layout that we wanted to show the information and how to have the weapons fit on the screen more cleanly.
We also realized that at least for now we'd have to do a single ship combat. We just wouldn't be able to add multiple ships for the time being.
Other things to note, this is when we started to realize that the size of the ships were a problem.
We really felt this project was just going to be just for fun, a small thing.
So there's a couple structural things which came back to bite us in the ass, such as the very limited screen resolution.
And so once we realized we were going to use this screen resolution and that we were using this pixel art, things like slightly shrinking the ships or the rooms even, we realized it really wasn't an option.
Like, it just doesn't look good.
And so we had to realize we'd shrink the ships down.
But that didn't happen yet.
If you want to go.
Sorry, just a big one on this one was the consolidation of systems into rooms.
We used to have systems in individual rooms.
I mean, individual squares in the room.
So it wasn't really the engine room, it was the engines inside of that room.
And so if you had to work on it, you'd have to go over to that corner.
And there was all these white spaces, like this long hallway, and this giant middle bit, which did kind of stick around, but really started putting systems like cloaking into it later.
And it was this consolidation, so that the system was the room, and there was no distinction between them, really helped that.
the streamlining effect and the whole commander feeling.
Because it stopped being, you know, go to A1, B1 of the engine room and do something.
It was just, you get to the engine room.
You get to the shield room.
And it was very straightforward and a much more elegant solution than trying to pack the rooms with individual details.
Which at one point we were really trying to get very detailed on, sorry.
And also, that was a precursor to us realizing we needed room-based movement for the crew, which didn't come around until a bit later.
We stuck with the micromanaging for far longer than we should have.
And in this mock-up, this was the full-size version of this proto-Kestrel, which...
I was, this was me trying to really go back to the atmosphere inside the ship and if we had a much slower paced game, which was, you know, we could have gone in that direction, we could have had a lot less combat, more trade, all that kind of stuff.
If we had gone that way, I would have wanted to have the...
inside of the ship be very atmospheric. You could see there's in the airlock there's some little spacesuits. You guys go walk over there put on a spacesuit go outside and fix a breach or take off a drone that's attached itself to a ship. If a system is under duress it would be smoking and eventually break and shatter or whatever. And so or like you'd see the captain go walk over into the cockpit and sit down in the chair and then start typing. And so all these things were you know ideas from bygone age, which I was still trying to cram into the game, but we quickly realized that that wouldn't be possible, especially since we started really figuring out the type of gameplay that we wanted to have. And so this was...
uh...
when was this? Six months. Six months into the development when we had like when it when we were uh...
preparing to submit to IGF China 2011 we basically in three weeks turned a whole bunch of weird ideas and gameplay systems into an actual game uh... and so that crunch period was like pretty intense but it was uh... it was very useful for the whole game and for example during that period uh...
my brother, who's also a game designer, he was like, you gotta get rid of the circles.
You gotta get rid of the circles.
And we're like, what's wrong with the circles?
I like the circles.
And then, so at this point, we added crew members and we also separated the subsystems because we realized we wanted the power management to be more functional and more interesting at the core of the game, and that wasn't the case earlier.
So you see, even though we got rid of the circles, the crew just kind of stand there awkwardly in this version.
And adding consoles was such a major change for the atmosphere.
Like, the biggest thing for me when we first added that was that instead of the enemy standing around awkwardly while you destroyed them, you saw the little guys typing furiously away to destroy you.
And it was just really kind of a scary atmosphere moment that this was a living ship with people doing things on it.
Which, as you can see from this screenshot, it just doesn't really have that same feeling.
And so at this point, we, about six months, we felt like we had the core game.
We sort of fumbled around through our ideas constantly and eventually arrived at what would progress to the final game.
We had some events, we had seven events, you know, like you fight a pirate, you're fighting a pirate in an asteroid.
With that and this sort of very basic sector map, we had this core game, which we felt like could potentially work.
And then so for the rest of development, a whole year was just spent polishing that game idea.
In this final screenshot, you can see the game at release, which we basically just added tons of content and polish.
The ship doesn't look as hollow.
There's various alien races and places you can explore.
We abandoned the kitties for little crew portraits.
tons of weapons and more complication due to ion versus locking your system for for when you use it and of course the weapons they that were exterior to the ship which added tons of atmosphere to the game as well so That is the end of part one.
Just to sort of recap a bit, we started with this very vague idea for a concept.
And we used that as a sort of guiding principle, a guiding light for the whole project.
By having this one singular focus we were able to abandon everything else that didn't fit in line We we felt like we really wanted multi multi ship fights, but eventually that just had to go We want spatial movement, but because that didn't fit in that core feeling We were we felt the freedom like we could just ditch it and keep on moving keep on going to that singular goal And so if anyone wants to use this specific thought process in their design, I mean, technically that focus could be anything.
It could be a certain type of visual aesthetic.
It could be one game mechanic that you want to be really focused on.
It could be audio, or it could be a story.
So by having this one focus and letting that direct your whole experience, you can basically approach your builds slightly distance and be able to look at it and find out what's actually fun, what should we actually keep that will make the game into the experience that we want, which you.
you know very often you can get bogged down when you spend months designing a certain whole gameplay system and it just doesn't work and you just keep spending months and months like trying to make it cram that in and and so it was helpful that we didn't have pages of design documents before we got going for that reason.
Yeah, we just had this one idea, and then we just dove in.
And it probably doesn't work for everybody, but it definitely helped us stay agile and actually find a game mechanic and a gameplay system that A, we didn't know it could exist, and B, we hadn't had seen precedent for it.
I hear there's other games that we ourselves hadn't played other games like this.
So it allowed us to sort of stumble on that and be open to seeing what was interesting in it.
For part two, we'll kind of talk about a lot of the stuff that happened in our final six months of development as we got to kind of in the public eye through our Kickstarter and a beta.
We finally kind of came out of our cave, if you will, to see how the game and the design got changed because of that.
At this point, right about the time that we released it for China IGF, the FTL was at a point that it didn't have a lot of the stuff still.
It didn't have boarding, it didn't have cloaking, it didn't have teleporters, it didn't have a lot of the features that you know are really important to the game.
And the biggest problem with it then was this lack of the layers.
I still, at this point, didn't think the game was fun.
It was, we found success that I'm grateful for at the China IGF, but I was still really nervous about the game and felt like it just didn't keep you busy enough and there wasn't enough going on.
And so the main goal going on from there was this layering of more things to keep you busy.
It was fun though and just the, there was a potential there.
It wasn't any more like we even considered abandoning it.
We just knew that we needed more content to keep it going.
Sadly, about a year into development is when we were running low on funds.
Since it started as a hobby project, we never really intended to go as long as we did.
And so, we turned to Kickstarter since it was kind of...
It was not quite as well known back then.
It was...
We launched about a week after Double Fine's...
Double Fine Adventure game, and we had just known it from friends who had done, like, film projects or starting a farm and that sort of thing.
And Double Fine just drove thousands to Kickstarter.
And we were lucky enough to be sitting there with a game that people thought was kind of cool.
And we ended up with 20 times the 10K that we needed to finish the game.
And it was about 10,000 backers that did that.
And it really influenced the game for the better.
But it also caused a few extra stresses that we might not have known going into it.
the first thing I want to talk about is how that having 10,000 people watching us changed the game. And we were very used to being able to cut and move around very agile by ourselves in our cave without really worrying about what other people thought. But when we had this giant audience come that kind of changed everything. We had overnight fans like talking about our game which was really cool and really weird that there are these other people that were just as excited about this game as we were.
And so it really drove the motivation, but at the same time it was this immense pressure.
There was only two of us, and people put their faith and their money into our hands, and it was absolutely terrifying, and many sleepless nights knowing that we had to create this product to make these people happy.
The expectations of course varied.
It was difficult sometimes to balance it, as you'd expect, 10,000 people have different thoughts.
But we took the time to talk to everyone that we could.
Anytime we got a question posted to our forum or emailed to us, we took it very seriously and answered it and tried to talk through it.
And that really helped us as well in just kind of explaining our own thought process.
Even if the idea were like, that's not at all what we want, but I've never really had to explain why that's not at all what I want, and so it was fun to have to verbalize it and really structure the game in that manner.
One of the biggest things that was difficult for us with the Kickstarter was that we had these list of things we said we'd put in the game.
We put it up there as, of course, these would be fun.
Stuff like the aliens and ship customization.
This idea that you would, when you start your game, instead of choosing a ship, you'd have more of a shell.
And you'd add weapons to it and add systems to it and kind of min-max what you want for your ship.
It sounded fun on paper, and it's still something we get requests for literally every day.
And they, once we got it in the game though, it didn't really work.
And it just, it wasn't as fun, there weren't that many options.
When you have every option in front of you, it kind of muddies the options that are actually available.
And there was an obvious choice and a less obvious choice.
we were ready to cut it immediately, but because we had 10,000 people who expected it in the game, we were very worried about cutting it prematurely, because it was something that they might want.
And so we put on probably another week or two of development time and balance time, trying to see if there was a way to crack this nut and make it work.
And it's hard to say the time was wasted, but at the same time, it was a little bit wasted.
We had a lot of stuff to do before we could release the game, and we spent more time than we should have on ship customization.
especially considering the fact that we had also promised for a release date which was not too far away. So like every week was super important during that period. Our release date, we finished the Kickstarter in April and the release date was supposed to be in August.
That's largely because we also thought, you know, we would just get around $10,000, maybe a bit more if we were lucky, and that we would just work with our small focus for the game, which was considerably smaller than the final game, and then so that leads us to...
Which leads us to how the money actually changed things.
The extra...
twenty times what we needed to kind of do the vision we wanted for the game was awesome and it let us really think about the bigger content of what we could do. But it's also really difficult because you have a game and you have a vision for a game and the scope of the game and it's kind of complete in your mind, the design is there and just because you have some extra money doesn't necessarily mean you can improve the game. It just doesn't necessarily work that way. You can't just throw money at something and it gets better.
A common request would be something like multiplayer, for co-op or competitive.
It's just we never saw it in the game and we still don't think it would fit in the game, but it's something that people kind of think about when you have extra funds and maybe you could fit it in now because you have more time and you could hire people to do it.
Just for some perspective, our Kickstarter was also before the whole Stretch Goals was a standard as it was now.
So we had zero plan for previously for what we would do if we would reach X amount of money.
So we hadn't even thought about it.
The idea that that could even happen was beyond us.
We thought 10,000 would be kind of eeked out.
We didn't think that 200,000 would come rolling our way.
And so we had this difficult balancing act of how do we improve the game?
How do we take advantage of this awesome new clump of resources?
But at the same time, how do we hit our release date and keep everyone happy?
And so the easiest way to do that was to kind of improve or...
double the content that we already planned that fit into the pre-existing design.
And so some of it was aesthetic, stuff like the music.
The soundtrack is absolutely brilliant.
We could have gotten by without it, but we all know that the game wouldn't be as good without it.
And without Ben, we wouldn't...
He was able to devote a lot more time, because we could pay him a lot better.
And so you could stop working full-time.
He was generous enough to work pretty much for free up until this moment, and so throwing funds his way let him stop working full-time and put a lot more time into the soundtrack, which ended up really awesome. It's something that people love and we love.
One of the things I'm most proud about coming out of the game is that we helped make this awesome thing of music come out too.
And similarly, we were able to contract out an extra writer to expand the events.
As we were going further into the game, we realized that the text-based events were extremely difficult, more difficult than we expected to kind of get out and keep the variety up.
We thought, mistakenly, that there was some, it's just text, you just write a few more and then you have a lot, and then there's a lot of variety in the game.
How hard can that be?
But it's amazing how many words we needed.
Even something like 15,000 when we brought on the writer wasn't anywhere near enough words in the game to create the variety that we needed.
And so with the extra money, we were able to get the guy.
Shubair from in England to help us out and really expand the game greatly which was awesome. He also helped us expand kind of our alien and ship world in general and that he gave a lot more backstory and a lot more we just had little sprites that had no purpose. They were created for game design reasons like we thought it would be cool if an alien could power a system and that was the extent of why that alien existed and the writer really helped us flesh it out into something that mattered and changed the game.
So about two months after the Kickstarter, we were ready to launch our beta.
The beta was for 3,000 beta players that paid about $25 to get into that private closed beta.
At that point, we thought the game was actually, I finally felt the game was really coming together.
We had every layer on, and it was a lot of fun.
The only big problem was that there wasn't a lot of replay value.
There wasn't a lot of reason, other than finding new events, which as I just said, we were having troubles filling out, to come back and play.
And so we needed stuff like the ship unlocks and the achievements and the things we would add that would help drive people to come back.
And we were hoping that during the beta, we could figure out what made people play the game and then kind of capitalize on that.
So since there were the 3,000 players that paid $25, and more than anybody else has paid for FTL, these were our most hardcore fans.
These were people that loved games like FTL and wanted games like FTL.
We had already started with a game being very difficult.
As we talked about in the beginning, it was intended to be something that was challenging.
It was harder going into the beta.
We did reduce the difficulty, but we reduced it down to a level for players that...
love that type of game and are good at that type of game.
So that's why we still ended up with the difficulty that FTL is known for.
We feel that balancing to that group, the group that plays it for 300 hours, was a good idea. The game was taken off because of that difficulty.
The people that love it really appreciate that it's tailored to that type of experience.
And it also helps that replayability issue.
If the game was too easy, then you beat it, and then you're done.
And if you beat it every time, there's not a lot of interest there.
But getting your ass kicked every time you played actually kind of drove you back to play it more.
And so it got that replayability that we needed.
For example, the easy mode was added.
a few weeks before release or something, like a month before release.
And so, like, that's why, you know, that's why it's labeled easy versus normal, because normal, as opposed to being absurdly difficult mode, but that was the experience that we were actually trying to create for people.
Because we wanted to make a game that we ourselves would enjoy.
That was the highest goal early on.
Yeah, not all 3,000 of them loved the difficulty, I guess.
There were a few that wanted it slightly easier.
They were also very effective.
I mean, anything out of a beta that you'd hope to get is effective bug hunting and feedback.
And these guys were awesome for that as well.
What was interesting going into the beta is that we had a lot of these visual effects that we had put into the game very early that we weren't sure about.
The stuff like that jump animation that was made.
eighteen months ago now that was put into the game in an hour to just we need a jump animation let's get let's get that in we always intended to go back and change it and the same idea that we had about five backgrounds and half a dozen planets and that was all we had in the game and we always assumed that that's all part of the visual polish we do leading up to release but it's something that nobody mentioned during the beta.
There were tons of complaints and issues and feedback that we got, but not one of them had anything to do with our really crappy jump animation.
And so that animation's still in the game.
All that stuff kind of fell to the back burner.
There was no reason to do it, we felt, because that's not what players wanted.
what players were talking about, it was the gameplay.
It was more content, it was more balancing, it was the stuff that they were really latching onto that mattered, and so we pretty much forgot about that, threw it out the window and focused on that.
Yeah, or the fact that the only ship that actually has thrusters that do anything is the Kestrel.
No one has ever mentioned that to us either, yeah.
As a result, though, you can cater a little bit too much to this group of hardcore players.
And one of them, as we talked about, as I just said, the gameplay that we were expanding, kind of started to lean on feature creep.
We had, at this point, the bombs and the iron weapons and a lot of different types of weapons, but it was so many types of weapons that we still envisioned, and if we had piled those into the game, any new player, or even medium player, wouldn't figure anything out.
Am I a roguelike-snatcher?
everything's open from the beginning. It's just there it is when you start the game and we didn't want to overwhelm it with this top-heavy advanced gameplay which is what the new weapons would be. Naturally they lead to tiny small places you'd need it for, little strategic holes that we wanted to plug in the gameplay but it was just not necessary and it would make the game bloated and we were warned by some of our play tester friends as well that we needed to just leave it the way it was and and make sure it was just balanced.
One thing that happened from it was in the very beginning, we made it very simple decision for how to unlock player ships.
If you've played the game, there's events that you randomly come across.
That if you have certain equipment, like you have your engines and your med bay and your teleporter.
then you can unlock a player ship.
And the event plays through into the level story, and you can kind of figure out what you need based on what happens in the story.
Like, oh no, he died.
If only we had a better med bay.
It's not that obvious, but enough to kind of make you figure it out.
And it was more of a quick solution so we could get it out the door to the beta players and figure out something from there.
But the beta players really liked it.
They thought it was a lot of fun to discuss the puzzle of how to unlock the ships.
Our forum had long threads of people really talking about all the different ways they might be able to do it and kind of solve this puzzle.
And so we thought that was really cool and they were enjoying it and so we kept it in the game and we made all the...
ship unlocks like that. But once the game came out and it stopped being this very small audience of people solving the problems it just became a list of things you had to do. People just can google the list of everything you need there's no more discussion and it becomes a waiting game of just hoping that the random universe will give you what you need to unlock the ship and it's one of the most common complaints and it kind of fell out of the the beta appearing that it was fun but in the actual open world it wasn't.
So, as we neared the release, we realized we really just had to focus on a single focused game.
So, like Matt was saying, we really just needed to stop adding stuff.
We really needed to find out what is a good, you know, structured system that has enough events.
enough variety, enough weapons, enough things you could learn as you play the game, and enough skill caps and all that kind of stuff.
And so, part of that, as you can see in this image, like this is in the final game even, that super clean, simple power bar, which represented a lot of things, became ridiculously bloated, and there's a lot of information being conveyed, so that could be, like Matt was saying, really terrifying to new players and that sort of thing.
Or old players. I mean, look at this, so...
The poor power bars, we just piled onto them.
Yeah.
But that was because we were trying desperately to have everything in one game screen.
And if we added more things that were requested, or even planned, like hacking systems, or various things that could really make it feel quite bloated.
So we knew in this time that we really just wanted to have a good, coherent, solid game, release it, and there you go.
There's our game.
So, just some of the ideas that got cut that we had really wanted to be in the game, or the sort of like...
In the same way that you have the asteroid field as a special environment, you have these special encounters, such as cloaked saboteurs, who would wander around your ship, and you'd need to have a person in that room to be able to see them, and they'd lay bombs, and they would destroy parts of your ship, and you'd need to find them, or have a slug guy to help you out.
Various monsters, like an aliens monster, an egg that hatched, or would infect crew members, or spread, and become a disaster aboard your ship, potentially killing everybody.
I really liked the energy-based...
entity which would wander around and suck out energy from your reactor and that kind of thing.
The sad part is all of these I still think would be awesome and I would love to have in the game but at the same time just because it would be good doesn't necessarily mean it would improve the game. In the end we felt like it wasn't even cutting features because it would make it because it would be not fun, it was cutting features because it was good the way it was. Why poke the deck of cards or the the house of cards if you don't need to and...
that it's sad. It really was precarious. To look at some of these but we know that it was the right decision to keep them out.
The other things like gas-based weaponry like uh... kind of like bombs that would explode in the room and then gas would spread out based on how doors would be opened and it could do various things like knockout crew members or heal them or uh... damage systems, ink, stuff like that.
something else that we always initially dreamed was being able to go to a station, kind of like Starcraft, and be separate from your ship and have certain systems maybe that would be helpful for station boarding as your crew members are trying to rescue a VIP from inside a prison facility or something like that. And so there's a link at the end, but we actually put this slide online in addition to a document which has Matt's original kind of stream of consciousness.
idea for the game as well as just this giant laundry list of features that we wanted and we didn't get to add.
So, but in the end, we had to come to the release date.
And we were able to get a game that we were happy with, released September last year.
And we released it on Windows, Mac, and Linux, which had its own slew of problems and difficulties, which we don't really suggest new developers to do three operating systems for their first game.
But it worked out in the end.
And it was especially interesting to us because we had never intended for this to be a commercial product.
It was just this weird flurry of growing interest.
And so to be able to release the game was amazing, especially since there were so many situations where we just felt up.
I've got to scrap this, go find a job, go do something else.
And I also have to thank this community, because about two years ago I was here.
I went to the IGF, all the indie game talks, and I was really inspired.
And I knew from that point on that I wanted to make indie games.
I just knew it.
And then that convinced me to quit my job, and luckily I was able to work with Matt.
to be able to do this, and then two years later, I'm coming here and showing off our game, which is crazy to us, and potentially and hopefully could inspire some of you out there to make something awesome.
Although I'm not encouraging you all to quit your jobs.
Yeah.
We're a good example that you don't necessarily have to know what you're doing to stumble upon something kind of cool.
So, thank you to everybody who helped us and our family and friends to keep us sane.
And thank you to everybody else.
We probably ran a little fast here, but we'd be excited to answer anyone's questions for as long as you'd like.
Hi guys.
Firstly, just a great game.
My sons and I have put many hours into it, and they've unlocked everything in the game.
It's great.
Now obviously, the randomness of the game can be a bit punishing at times.
But as you said, it makes you come back to the game.
Did you try to solve the negative feedback loops that can occur when you get damaged, you have to spend money repairing your ship?
and then you can't spend the money to upgrade your ship and then eventually you know you just have to quit the game and start again or did you sort of think players would just do that?
I mean, I personally, I really like that that is in the game.
And I do think it's a sort of different type of person who would get in a situation like that and be like, oh, quit, restart.
And as opposed to us, who would be playing that, and you get in that awful situation, you barely scrape through, and then you keep going, and now it's a considerably more intense experience.
You now have one crew member.
And I love that that's in the game, even if it isn't ideal for some people.
At the same time, there is a slight balancing for it, and the scrap increase through the sectors is actually very high.
By the time you get to that last sector, or the seventh sector, you're getting so much money, you'd be amazed how much you can buy last minute, right before getting to the box.
So the quitters don't win in the end, you've got to kind of stick at it and get to the last level.
I mean, if you don't enjoy that, you don't have to.
Some people do.
Like other people I hear, they just replay the first sector until they find weapons.
And if that's the way you want to play, go for it.
Thanks.
Go for it.
So like you said, one of the biggest complaints is the locked ships and everything.
Have you guys thought about a way to deal with that now as an update, or maybe even allow people to purchase them just for cash?
Well, we will never do...
We never can do that.
Oh yeah, we will never do any form of...
Just largely because, like, the same way we wanted, you know, we were making a game that we wanted to play, we wouldn't particularly enjoy that.
It's a little bit of an odd situation because we really did want to move on to a next project.
And even now we're still working on the various things that are associated with the game as well.
It's maybe possible to be able to do small updates, but it really wasn't something we were planning to do.
It was just keep adding things to the game because it could just...
I don't know, it could ruin the experience that we were shooting for.
It's kind of that house of cards thing.
I'd be worried about tipping anything and making a decision that would actually make it worse.
I think it is functional the way it is.
And if I had to go back, I might say more stuff like the layout B unlocks, where it's kind of gameplay based and achievement based.
But I think that it if anything I would probably just want to reduce the randomness But keep the same style because it's kind of fun to unlock it through the event and it's kind of a story that you help This race and that's why you get the ship. There's still elements of it We like it's just stuff like the crystal the crystal ship that is just purely a exercise in randomness is excessive I would rather remove the randomness than remove the design entirely Over there, okay As you stated that you're a team of one programmer and one artist who kind of shared the design, sounded like 50-50, did you have any major creative differences as you went through the project and how did you address them?
We were pretty lucky in that this sort of same focal point for the game, we kind of both intrinsically had the same image, even though we weren't able to describe it to other people, like we wouldn't be able to explain the game. So we got really lucky that we just for some reason had a click like that. In terms of design... Nothing major, small stuff.
just small details, we would definitely get in fights about small details, but nothing, yeah, the major direction of the project was always very singular and focused.
Impressively so, still doesn't make any sense to me.
So you're always able to kind of come back to that and say, well, what serves the vision best?
What serves the vision of?
I'm just saying that you were able to come back to that and just kind of ask what serves the vision best to resolve those things.
Yeah, yeah, I just made a comment.
Cool, thanks.
I think when people talk about your game and they're trying to describe it in a hurry, I often hear them describe it as a roguelike in space.
And it does have roguelike elements.
I didn't see you mention permadeath or any of these specific elements in your initial kind of grand division.
Was that something you just kind of wandered into or did you always want permadeath to be part of the game?
That actually, while it wasn't explicitly said in that initial vision, and if you go read that vision it's not there, there's another document, I don't know if we put it up, that has five gameplay elements that I thought were really cool in games.
And one of those five was permadeath.
Permadeath was intended from the beginning.
I think that having that...
Basically.
Actual, like your decisions mattered.
It was so vital, especially for being the captain of the starship.
Like, I wanted, when you're making the decision for your crew, that that decision mattered.
That there was depth to it, and you were stressed about it.
And you wanted to be in the shoes of that captain.
And without permadeath, you don't have that.
And so the consequences of your game play and your actions is something that I really enjoy, and I always, and we both really enjoy.
And so we always wanted and intended to have in the game from day one.
It definitely works in this game.
Yeah, thank you.
Awesome game, huge fan.
So at the beginning of the talk, you talked about how you're reducing the pitch down to the core concept.
If you were to, since you guys are working on your second project now, or going to be sometime or something, who knows, something's going to happen, we hope.
Would you do the same thing again?
Would you modify that process in any way?
I mean, I have a few various ideas that we've discussed for what potentially could be another project.
Some of them involve more, like, I want this type of gameplay structure, and some are more...
just the sort of experience, but I do think that that, even just thinking about it now, yeah, like pretty much always we're just, I at least am trying to find, what do we want the player to feel like when he's playing this game, and that, that, cause probably, I wouldn't be surprised if we also just started cutting things that didn't fit into that experiential feeling, so yeah.
And as a programmer first, I probably lean towards just diving into it, getting things working and moving and tinkering, because the code is just as related to the design as the design is.
So I think that just go for it and move forward on this kind of core random idea is definitely how I would still want to approach it.
Yeah, we probably still wouldn't make some sort of project where we have global design documents for every single aspect of the game and then try and make that.
I couldn't picture even trying that.
Yeah, thank you.
Hey, as a fan of FTL, I'm really glad that the process kind of worked out to produce what it did, but there's probably countless anecdotes about how the process of just sort of, we have an idea and we're just going to kind of attach features as we go, could go horribly, horribly wrong.
What process did you use to kind of prioritize and vet out which features you would work on first or develop first, and then kind of where the line was of what went in the game and what didn't?
It was never anything particularly formal.
I think that it kind of what we covered in the first half with this idea that if it served that core feeling, it would work.
There wasn't...
In terms of like specific features that would still all fit within that feeling, I guess just a whim, just like what we felt like at the time maybe.
Which isn't helpful, I know.
Just like, well, you know, I really feel like there should be some weapon that can counter shields and the defense drone, aka bombs, you know. So, like, just playing the game a lot, figuring out what you feel is missing, and that sort of thing. Thanks.
I forget the order now.
I think we're over there. We'll go that way.
You talked about your Kickstarter backers coming on board with your testing early on.
How did you deal with that shift in feedback from just being a very close-knit team of two to suddenly having 5,000 people's worth of feedback?
How did you prioritize which feedback was important?
We didn't deal with it very well, I can tell you that.
But we worked too hard, mostly.
I mean, we used getSatisfaction to have the actual feedback coming through.
With 3,000 people, there was a vocal 500, maybe 250 in the beginning.
And there was actually enough of a flow that we could manage that while developing.
We were lucky enough, I was terrified going into it that it was going to be this mass of people just barraging us with questions and concerns.
But it did actually end up with a manageable flow that we didn't really have to stress about that too much and be able to do it.
We stressed about it a lot and did it.
Part of it is also just that we had a core group that would go and answer a lot of the basic simple questions for us.
Just like people who just were active in the forum and the Get Satisfaction page.
And just really help us out in that way.
In terms of prioritizing...
I, as a programmer, I was focusing on the bugs.
I would always look at bugs.
Bugs had to come first no matter what.
Everything else had to be put back.
And it was definitely, and luckily Get Satisfaction, the website, as I advertise it for them here, has a problem section and an idea section and a question section.
And so my day would start in the problem section, and if I solved all that stuff, then I would move on to the other sections.
So did you find the community was quite disciplined in not posting duplicates of bugs?
So you get 10,000 bugs that were the same, and then?
Again, a great thing about Get Satisfaction is that when you type in your initial bug, it runs a search to find if it's already posted.
It doesn't even let you post without running a search.
In general, though, they were pretty good about it.
And in general, they were pretty good about not posting bugs or ideas as bugs or vice versa that can sometimes get in the way.
But they were a great community.
In terms of the design which I was spending more time on, most of it was just ended up being like, you know, this isn't something that fits in our view, you know, like we just, it was, a lot of suggestions were either, you know, things that we had thought about, things that we conceived but could never do and very few things that we never even thought of.
But for example, like I wrote.
save, we wrote save game in the little screenshot there.
Oh yeah, that save game was the big issue.
We didn't have it in the beta.
You couldn't save and quit from the very beginning.
And we didn't want to add it.
And we were fighting them for like months.
And that was the most complained about thing, to not have a save game.
They're like some sort of temporary save feature.
And eventually that was the one thing that we really like caved on.
We're like, fine, here you go.
Have your save game.
Yeah, OK, thanks.
First of all, I want to thank you for the great game.
I spent, personally, I spent a huge amount of time trying to beat it on easy mode.
I managed to do so.
And the question is, could you please share a percentage ratio of user base on different operating systems?
I'm sorry.
Operating system.
How many people?
Percentage ratio, yeah.
Yeah, percentages.
Do you have any idea?
Oh, I have no idea.
I'm sorry.
Vast majority of Windows.
The vast majority is Windows, as you'd expect.
And then I would.
5% maybe for Linux?
I would, no, no, smaller.
And I would guess that Mac and Linux is nearly equal.
The Linux community really did respond to us putting it on there, and while it was extremely difficult for me to release as the programmer the three operating systems day one, the Linux community really made it worth it because they were so grateful for having us take the time to do that.
But they were definitely still a small minority compared to the Windows team.
Thank you.
Linux on Steam really boosted it as well.
We doubled the Linux users at this point.
So you guys had quite a large following after the Kickstarter and everything.
I'm sure you guys are aware of the community that kind of popped up and created mods for it, especially with new ship layouts and everything.
I was kind of curious your opinions of that, and if you guys were to make another game in the future, would you kind of accommodate something like that from the beginning?
When we were starting, you know, like I was saying, we, ideally we, you know, for this community, ideally we would have structured the game to be able to support modding.
So like, you could see, if you follow that community, there's a lot of struggles to sort of work within the sort of crappy framework that we gave them.
So there's very limited things that they can do.
In terms of...
In terms of like for the next project, I mean obviously it would be smarter to do that, especially if we will get a lot of fans who enjoyed FTL and be able to have the same sort of situation of people wanting to like, you know, own it and like work with it and that sort of thing.
We definitely should.
Will we?
I don't know.
I would, a more moddable game is inherently a probably better developed game.
It's easier for us to add content if we have convenient ways to mod and alter it.
Less easier to break.
So I would hope if only for selfish reasons that it would be easier to mod in the future, or a future game would be.
And it is a lot of fun. It's a little frightening at first, seeing a community take apart your game.
We spent a year and a half slaving over it, and then digging through your private notes and private scripts.
It's like going through your underwear drawers.
and then posting, look, you made a typo in this completely private packaged file.
And it's a bit creepy or weird, but we've gotten used to it.
And it's a lot of fun seeing the amazing what some of the people come out with.
And the devotion to the style and the art and the new layouts and stuff, a real impressive understanding of the game.
And it still blows me away.
like one guy who actively knew that he was turning the ship into an AI ship, a player ship, so that it could be AI ships, by definition, regenerate systems.
So there's one ship that you can regenerate everything slowly.
So it's awesome to follow it.
Thank you, guys.
Thanks.
Hey, guys.
In the earlier phases of your development, when you were doing all the prototypes and you had the basic prototype and the spatial prototype, et cetera, before the Kickstarter, did you look for a lot of feedback from people outside your group?
Or was it just you two?
How did that kind of work?
When did Matt, or when did Amit Shih jump in?
About five months into the project, I think, is when we first...
other than our girlfriends who would see it from the beginning.
That was about it for a while.
Then there were maybe two or three people that we gave it to at about the five-month mark.
And were definitely incredibly important to the balance and design of the game.
about once we got close to that IGF build where the game was more complete then we started reaching out to various indie developers and people who that we had contacted and they helped us test a lot as well but we didn't do any sort of massive QA in any sort at that time or trials.
Thank you. One more? Okay.
What was it like living in China and how did that affect your game?
Yes, so for those of you who don't know we were both living in China for a few years before we started Working on FTL. We were working from our separate apartments for most of the time. We didn't have a studio or anything and then Near the end of development. I at least came to live in the US for a while How did it affect China's awesome? I mean China's a it's it's a especially Shanghai Yeah, Stronghide is such an international city, and there's a slightly lower, cheaper cost of living.
And so as an independent developer, that was big.
The fact that we could live on a shoestring budget, and you can go get lunch for $0.50, less than that, and it would be a good lunch, too.
And so there was definitely just the financial benefit of China was awesome.
And it was fun being over there.
It's a great place.
Yeah, definitely.
I mean, I'm not exactly sure how much it has affected development, other than enhancing the feeling like we were in a cave.
Like, because we, like, it was just, especially during those times, we...
I left the apartment every once in a while.
There was no point. I didn't...
We released the game, and then like two months or a month after we released the game, I came to California to go to IndieCade.
And that was the first time I met any of our Kickstarter backers or really met anybody who knew what FTL was, even though that we had been building publicity and things for a year prior to that.
And so it did definitely enhance that cave-like feeling of developing over there, which was not necessarily a bad thing.
I guess that's all we have time for.
So thank you, everybody.
Thank you.
