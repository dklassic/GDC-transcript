I've been lecturing a bunch around funding and pitching.
Actually, last year I did a session on funding models in particular.
And I've really tried to do a lot around educating developers, primarily on the business side of things.
We got some attention a few years ago with Execution Labs because we were one of the first pre-seed, sort of early stage investors in game studios.
We did 25 investments and it was a tremendous learning opportunity for us in terms of understanding the challenges of indies and startups.
And a lot of the learnings that I tend to talk about come from that experience.
And these days I spend much more time on mentorship and advisory stuff, consulting work with studios, but also helping regions and sort of upgrading the...
business knowledge and skills in regions around the world.
One of the fun things that I'm involved with is Gameplay Space.
Gameplay Space was founded about four years ago and it was done as a kind of complementary entity to Execution Labs.
Execution Labs was a private fund, and so we were quite mean in that we said no to almost everyone who pitched.
Since we were investing other people's monies, we had to be really focused on commercial viability and the growth potential of studios.
We constantly got requests for mentorship and support and help and connections, and we always had to say no because we were focused on the studios in the portfolio.
And so we created Gameplay Space, which is a co-working space dedicated to game development.
It's a 10,000 square foot space with over 100 developers working in the same space.
It's a non-profit.
so much different kind of mindset. It's a very open environment where we say yes to everyone in terms of coming to share and exchange and inspire each other.
It's just a big open space.
This was during construction when all the developers weren't there, but we host lectures and we often invite publishers or platform holders to come and give presentations. We run more detailed workshops and host networking events and showcase nights and all this kind of stuff.
It's a really kind of powerful entity, but most importantly it is my channel by which I force developers to eat broccoli.
And for those who are paying attention and reading the session description, you may recall that I snuck in there at Broccoli Lover.
little quote and in part it's because I oftentimes I think of all the business entrepreneurship stuff as the broccoli that we all need to eat but very few of us actually like broccoli or Brussels sprouts or whatever even though it's nutritious and good for us and makes us healthy and live long it's like I just want a hamburger and I you know I don't want to deal with those issues.
in the same way that many developers just want to code and design and do all the cool fun stuff, but really don't want to deal with the business stuff or don't understand how critical the broccoli is to their health and long-term viability.
And so also a lot of the lessons that I see not only comes from execution labs, as well as going around and doing a bunch of consulting work but also in this test environment of gameplay space where I try out a lot of these concepts and working with the teams.
I mean, I don't have a sort of a report to give you, but overall, the studios that operate from Gameplay Space are quite successful in doing, I would say, better than average relative to most startups or indies.
So before we get too deep, this is where I warn you that I'm not a lawyer, and so, you know, obviously everyone is in a different country and has different legal and corporate law contexts and tax issues and all that kind of stuff.
And so I'm not a legal or tax expert, so, you know, obviously you have to do some conversion in your own brain in terms of what's relevant to your own region.
That's my sort of universal image for lawyers.
Anyways.
All right, so if we look at the title, the title was called Studio Design, Building a Foundation for Success and Avoiding Disaster.
We went through various more kind of click-baity versions, but we settled on this sort of midpoint title.
And let's break it down.
So first of all, studio design.
And I think what's important here is this notion that a studio is something to design.
There is sort of things to do and decisions to make and it matters.
And this is not generally what we see.
Oftentimes you see that it's kind of a mistake, or not a mistake, but a byproduct.
We're working on a game and like, oh, I guess we need a tax ID to fill out these forms for Steam.
Oh, well, we have to incorporate or get a company to get a tax ID.
And it's sort of like a byproduct of wanting to make a game.
So if I say a show of hands, who ended up sort of happening into a game company, like sort of, not by mistake, but like, I guess we need this thing.
All right, everybody else was like super laser focused.
All right, well, you're surprising me.
because most of the time it's like, it's like, ah, we don't even know what's going on and we had to do it and developers don't necessarily realize kind of all the elements and things to think about and so you can kind of do, I mean, a word cloud.
Normally our word cloud is focused on all the design and gameplay issues, not necessarily all the questions and things around business and marketing and all of that stuff.
And I think what I've certainly seen is that the more successful studios, it tends to be intentional.
It tends to be deliberate decisions around these elements and questions.
They tend to do well.
Oftentimes, when I say that, I sort of get the remarks like, oh, well, it's chicken and egg.
And, you know, once you become successful, then you can go back and think about a roadmap.
treating your employees right and strategy and all this kind of stuff.
And people tend to think that the success comes first and then all the sort of more intentional choices come after.
And while that may happen, I mean, lightning can strike at any point.
It is much more common when you make intentional and deliberate decisions to begin with and that sort of puts you on the path for.
success with a higher degree of probability.
So I think even just accepting that there is intentional and deliberate choices, that you have to design the business and design the studio and put the effort and resources into that, I think is already, you're way ahead of most studios or developers who kind of, it's all very tertiary and aren't even thinking about it.
So that's just sort of the first part. The next part is this idea of building a foundation for success and I think success is a very tricky word.
that if we went around the room and asked people, well, how do you define success?
What does the success look like?
We may have all slightly different versions of that success.
Maybe we can kind of bucket into certain categories.
You know, well, I wanna be profitable.
I wanna make an award-winning game, or, you know, I wanna pursue my dreams, you know, so maybe we can start bucketing it, but it's dangerous to kind of talk about success without defining it.
And I think there's no right or wrong answer here.
I mean, if you look at runners, You know, the things that the sprinter does is much different than the things that the marathoner might do.
You know, they're both athletes, they're both runners, but they are training and eating and preparing and being coached with very specific definitions of success in mind.
And I think many developers, it's like, oh, we think we have to go to the gym and maybe do something, and they're not quite sort of understanding what direction they're going in.
Or there's conflict, there's conflict between founders' definitions of success.
I mean, we've seen this firsthand with Execution Labs, where we would invest in a team, and as we worked together and went further, we would uncover sort of deep-rooted conflicts in terms of what each of the founders was trying to achieve.
And so that's sort of an interesting process to get to that.
One of the best examples I've seen of this issue actually comes from Henry Smith.
who famously did a game called Space Team a few years ago.
Coincidentally enough, Henry works from Gameplay Space, but this was actually before Gameplay Space existed, so I can't take any kind of credit for his achievements there.
So it was a cool, for the Zoderno space team, it's a mobile game, and it's a multiplayer mobile game, kind of local in the sense that we're all holding our phone and it's telling, we have to like scream at each other and say, okay, push this button and turn this wheel, we're trying to like not have our spaceship crash.
And it's a really kind of wacky, innovative game and he's won tons of awards and got a lot of attention.
And one of the things people would say to him is like, oh, aren't you disappointed because your game was a failure.
Henry had released the game for free.
without any monetization. I mean there was a little like donate somewhere deep in the menu but essentially the game was not set up to make money and and they would say, oh Henry we're really sorry like you know you failed and he's like well no I didn't fail it was a huge success because Making money was not my priority.
I had these specific priorities.
So this was his definition of success.
He had been a AAA developer.
He worked at BioWare and a bunch of other cool studios.
And so he wanted to become an indie and he had never done that.
So he said, oh, my goals are to learn how to.
program in iOS and deal with the App Store. I want to make something small so I can kind of have a better sense of judgment for my future games, get my name out there.
And so he went on to say that actually, despite the fact that he didn't make money, the game was a huge success because it far outpaced what he had set as his own definition of success.
So that's just a really nice example, and if you want to read that case study and see all the numbers, you can just Google Space Team Retrospective.
But in the case of this lecture, we're going to assume that everyone here wants to make money.
This is the business track after all, and a lot of the stuff that I do tends to be this kind of intersection of doing cool stuff, making great games, but also being entrepreneurial about it and generating revenue and being successful from a commercial financial point of view.
I just gave the Henry example as one of the few cases where a developer has kind of clearly outlined what they were trying to achieve.
but we're gonna focus more so on the business success type definition.
Alright, so the last part of the title is this idea of avoiding business disaster.
That's the more clickbaity piece.
And I can tell you an endless amount of horror stories and disaster stories and all kinds of craziness, but I'll be more positive and sort of turn it into lessons.
and I guess sort of tips or advice.
So we'll frame this as lessons without necessarily getting into all the dirty, juicy bits of how we learned those lessons.
All right, so lesson number one is that finding your co-founders is more important than that initial cool concept.
So now we're going back really at the very initial phases of the startup process.
And oftentimes, developers are kind of frozen in being able to move forward because they feel the burden to come up with the cool, awesome idea before they have the confidence to go ask people to join in their journey or become part of a studio, etc.
And in fact, it should be the reverse, right?
You should find the people that you wanna work with and quote unquote get married to and build something with, and then together you figure out what that amazing thing is.
And generally, when we were investing, we really saw it as a sort of three team, co-founding team, minimum necessary.
It was always we wanted to do someone in a creative leadership role, someone in a technical leadership role, and someone in a business leadership role.
Now the business leadership role tended to be the harder one.
And in fact, in some of the deals we wanted to do, we actually turned back the team and said, you need to find your business co-founder.
And they would be, oh, but we're so talented and so skilled and our art is amazing.
Yeah, you are, but you need someone at that sort of same leadership level that can fight with you about the business stuff the same way that the creative and technical people can kind of fight with each other and debate.
And so, and then they would go out and come back with their, you know, business co-founder and then those studios would perform phenomenally well.
And so, I see this also with students, right?
I said, as a student, I mean, sure, you're working on your portfolio and you're building interesting projects, but really you should be spending that time finding the people that you want to collaborate with and build a company with.
And so, this idea of finding your founders or your partners first before finding that one awesome little cool idea is an important lesson.
And I've seen that a lot with different studios.
Alright, lesson number two is to set up the studio right the first time.
And this is kind of related to the issue we mentioned before, which is like we're setting companies up as a byproduct of needing a tax ID to fill in our Steam forms or whatever.
And so what tends to happen is that companies are formed in the cheapest, quickest, easiest way possible.
Now this is highly dependent on what part of the world you're in, and certainly some regions of the world are much more difficult, and much more expensive to set up companies, are much more painful.
But, you know, certainly in Canada or US, you know, oftentimes you see people setting up, you know, just sort of a sole proprietorship type structure or an LLC.
And then that structure doesn't serve them well as they move forward.
And so you do have to think about what are you trying to achieve or what that success path looks like.
And for example, if you think you're going to go out in a future date and start raising funds through venture capitalists or angels, generally they will only invest in a corp, in a C corp, just because it's easier from a tax point of view.
and the issuance of shares is much easier.
And so if you're not a C-corp in that particular case, then it becomes a burden or a hurdle for them to do the deal, and then they'll force you to convert your LLC into a C-corp, which is easier to do in certain cases or others.
And so, you know, having made deliberate decisions and not sort of doing it as a, oh, by accident, you can think ahead in terms of what you're actually trying to achieve and setting up the right corporate forms.
Of course, this is where our lawyer friends come in again.
And this is also kind of a sub-lesson of always use professionals, right?
Unless your mom or dad are accountants and lawyers, or that you were one in a past life, I cannot overstate the benefit of actually working with proper professionals to set your companies up straight and the shareholder agreements and co-founder agreements and contracts and all that kind of stuff.
I mean, we can spend a whole day talking about, you know, setting things up properly.
And for those who watched Indie Game the Movie a few years back and all the drama with Phil Fish and Fez and all that kind of stuff, that whole movie wouldn't exist if Phil had used a lawyer is basically the sort of the key lesson there, because they didn't set things up right and they didn't have contracts and IP assignment and all that kind of stuff.
So I'll stop there because it's a fairly deep topic, but setting things up right is critical.
And I see it all the time where it doesn't happen.
All right, next one is, lesson three is pursue project designed for success from the start.
Now of course, this has that loaded term success, so that means we actually had a discussion amongst ourselves as a team, as co-founders, what is the success we're trying to achieve, and then we're designing a project or roadmap of projects to achieve that kind of success.
And so what generally happens is we sit around and we think about, okay, what games do we want to make?
So I like ninjas and robots, let's make that.
And what games can we make?
So what skills do we have, what resources are available?
And we stop there.
And it tends to be that the games that we want to make and can make.
generally are a commercial disaster.
The chances that those ones actually have commercial potential and a chance to succeed is, well, I don't want to say nil, but very difficult.
And so many developers don't continue to say, what games should we make?
And this is where you're sort of matching the question relative to your definition of success.
And of course that's a much harder bullseye to hit, is the intersection of the things that we want to make, that we can make, and that we should make, and here should being, you know, that allow us to achieve our definition of success.
I will often see this, particularly with younger teams, coming out of school.
So oftentimes, schools that have game programs, they might have like a senior project or a group project, and you have a bunch of the students working together in a cool game, and then they're having so much fun, or the game is getting a lot of praise, and they're like, oh, let's go be a startup and live the indie life and work on this game and ship the game.
And then I'll go in and look at the game and say, well, listen, that is a fantastic student project, like, you know, great, and like, yeah, we got A+, and it was amazing, and I said, that game will sell zero copies.
because it was not designed, it was not set up to be a commercial success, it was designed for the parameters of the course.
It was designed to get an A+, you know, from the teacher.
And so that's what I mean that you have to think about the projects you're working on and they have to be sort of designed to achieve the success you want from the beginning.
It's a similar story with Game Jam games.
You'll do a game jam and you'll have this burst of creativity over the weekend, and you'll make a super cool prototype, and you may maybe win the game jam or you get a lot of praise, but it's very difficult then to take the game jam game and turn that into something that's commercially viable.
It has happened, but I mean, I haven't looked at the numbers, but there are literally tens of thousands of games now that have been made through the game jam over the span of whatever it is, ten years.
But I mean, I can probably only count a handful that have actually gone on to being commercial release.
So the percentage is extremely, extremely small.
But it's excusable because you're not sort of doing the game jam to make something that's the nugget for a commercially viable, sustainable, business-oriented game.
You're there to innovate and be creative and have fun with your friends.
So the context of a game jam is just a different context.
So that's, again, the point of thinking about what you're creating and does that actually link to what your definition of success is.
And many studios don't do that.
All right, next lesson is, and related to this previous point, is do your competitive and market analysis and do it often.
You know, this comes up as part of the pitching process.
When you're pitching publishers, when you're pitching investors, they tend to want to have a sense of where you position yourself relative to the competition.
If you're going into the marketplace, who's already there? What are gamers playing?
et cetera, because they're trying to gauge what your chances of success are.
And also the whole genre or category, is that a generally successful category, is it a less successful category?
And many developers won't do that until I force them to eat the broccoli and like, oh, I guess I have to have that slide, and then they'll go off and sort of do some analysis on App Annie if they're mobile or Steam Spy and so on.
One of the best examples of this was Ryan Clark down in the corner there.
He ran a Twitch and YouTube show called The Clark Tank, and he was sort of broadcasting his competitive analysis.
So he had had great success with Crypt of the Necrodancer, which sold a ton of copies, and so he was an indie success.
And then he realized, well, geez, I'm gonna spend another two, three years of my life and a bunch of my resources and money, like, I better not screw this up, and I need to think about what kind of game is selling, what's not, what genres are going up, which ones are going down.
And so he embarked on this process of competitive and landscape analysis, and he sort of did this weekly show where he would go through the Steam bestsellers list.
and look at the ones that were going up and the ones going down and kind of think through why was that and what trends were going on.
And thankfully he shared that process with his viewers.
He paused a bit when I think he went deep on his new game, Industries of Titan.
but Industries of Titan is a direct result of that process.
Now, I really hope the game is a massive success and then I'll sort of use that as a continuation of the value of doing that, but he's sort of been the most visible example of this competitive analysis process.
Last year at GDC and the Indie Game Summit, there was another lecture I thought was really good called Know Your Market, Making Indie Games That Sell.
It was an indie developer named Eric Johnson from Infinite Monkey.
It's available on the Vault, I think it's one of the free ones.
And he did some really deep crunching on numbers and was looking at median sales relative to certain tags and genres.
I guess this font is a bit small.
I can barely even see it.
So, you know, action RPG is the tallest bar as one of the examples of a genre that's performing well.
I mean, this is data from a year ago, so maybe that's sort of higher or lower.
I mean, this is why you want to do competitive analysis frequently, RPGs and so on.
But, like, puzzle platformer is this tiny little slice at the end.
And so this is an example where a lot of developers will say, oh, let's make a puzzle platform.
It's a genre that we're fans of.
There's so many classic great examples of puzzle platforms we all love.
And it's relatively easy to make.
All right, let's go make it.
And then you don't realize that in fact, the landscape for puzzle platform is hyper-competitive, super saturated, and from a revenue point of view, just does not represent a meaningful opportunity to generate sales.
just as an example. And then he did another one where he was looking at, this wasn't genres, I think it was like specific attributes or tags, and you know again here the really high bar is it's moddable or team-based, online, multiplayer, etc. But on the far end where you can barely see like one line of pixels of blue is four-player co-op.
And this was you know I wasn't surprised by this because if any of you watch some of my past lectures I always beat up on four-player co-op even though even though it's a fun style of game from a commercial perspective It's a very challenging genre to be in it doesn't lend itself well to To sales because again it assumes that I have friends and then I have a sofa and I have four controllers and etc But here was some of the data to kind of validate that.
So now, if we were sitting around saying, let's make a party game, a four-player co-op, we love those games.
We remember Towerfall from years ago.
Let's go do it.
And it all sounds great and fun, but you never stop to do your analysis.
It's like you're gonna have a hard time getting investors, getting publishers, getting people to back the game.
Unless you're independently wealthy and can just do whatever you want.
That's going to be a really hard time to build a successful studio behind.
Anyway, so that's from last year, just a great example of doing this kind of deeper analysis that we rarely see from developers.
All right, lesson number five.
Accept that you are not in the game making business, you are now in the fan building business.
And this is a very deep, very fundamental, philosophical shift that I try to, you know, again, force the broccoli on.
But again, if you've determined, or if you set commercial success in building a sustainable, viable studio, generating revenue, and making great games, You're almost not in the game making business, right?
You're not just sort of sitting there making a game, you are really making a community, you're making a fan base.
I mean, this year at GDC is the first year we have the discoverability series of lectures.
A lot of the stuff that we hear about tends to be about community engagement and using all kinds of tools to engage a community.
But I think actually it goes way deeper than that, and it's about thinking about your business primarily as a fan base building business.
and that everything you do really is about capturing that fan base, delighting the fan base, engaging with that fan base, and then sort of having them follow you through the journey of the studio.
And a great example of that is a Montreal-based studio, Kit Fox Games.
Actually, Tanya, who's the one here in the black cardigan, is giving a couple of lectures at GDC, and so is Victoria, the one doing the sort of dabbish movement.
And their current game is Boyfriend Dungeon, which has been getting a lot of buzz and hype.
They had a massive Kickstarter, but it didn't happen overnight.
They started, I think it was 2013.
They did a barely break-even mobile game called Shattered Planet.
Moon Hunters did moderately better.
Shrouded Isle did better still.
Now Boyfriend Dungeon's their next game.
But importantly, they were sort of focusing all of their fans on Kit Fox.
And that Kit Fox itself was having this sort of a sense of identity and a brand and a focus.
A lot of the games they do, or all the games they do, are based on procedural technology, procedural level generation.
Tanya is a former MMO AAA writer, and so their games are very writerly and narrative-focused.
And so even though their games look different, different style, different genre, they were able to sort of go after fans who like those kinds of games and sort of funnel them into the Kit Fox world.
such that those fans were ready for the next one and ready for the next one and ready for the next one.
So when they launched the Boyfriend Dungeon Kickstarter, all of their fans just sort of piled in, and within, I think it was like four hours, they had more than surpassed their Kickstarter goal.
And so this is kind of a part of a long-term planning process.
And last year at DEVCOM there was a great quote from Sarah Lynn Smith, who's the Senior Director of Global Community at Blizzard, and she had this great line about, you know, embrace the great fandom frontier and how Blizzard sees or they believe that game building is community building.
And so what we often see, whether it's community or marketing, is that thing that you do after you're done with your game making.
Or it's the thing you make a little tweet on Saturday when you're not busy making the game.
And so I think you really have to see it as sort of inseparable.
It is completely coupled.
The process of making the game is the process of making the community and vice versa.
And so that means that you need to have the right people, have the right resources, implement the right tools, plan that labor.
It's not the other stuff that you do when you have a spare moment.
It is central and core to the success of your game, but more importantly, the success of the studio.
So it may seem like a slight sort of, maybe it's a shift in my thinking, but understanding that building community or building fan base is your business.
All right, related to that, lesson six, and I've talked about this before, build momentum by building scaffolding.
And so the idea of scaffolding is that you are building that kind of momentum.
So Kit Fox, again, serves as a great example in that they had a vision, they had a roadmap.
All of the games they were working on were procedural, narrative-driven, etc.
They had a target audience in mind and were able to sort of funnel that towards them.
They come to GDC and get invited to other conferences that talk about procedural stuff.
When investors or publishers want to look at studios that do that kind of thing, they go see Tanya and the Kitfox team because they've built a reputation for it within the industry.
You know, whenever there's articles on Kotaku or Polygon that want to talk about the trend of procedural games, they give Kitfox a call.
You know, the tools that they build, the technology that they work on evolves and grows over time.
When they hire people, they hire people that have the right mindset or experience to do those kinds of games.
And so there's all kinds of momentum that's built on many different fronts that sort of builds or increases the probability of ongoing success for the students.
This is the idea of like you're building the scaffolding.
to support the foundation of the studio.
And you don't get that if one day we start a company, we say, oh, I like racing games, let's make a racing VR game.
And it doesn't work well because VR is not selling.
All right, well, let's do, we hear Pokemon Go is cool, so let's do a Ninjas Go, it's Lego, but whatever, Ninjas AR.
And so we abandon all the racing stuff and all the VR stuff, and then we go do ninjas running around the street.
And then, well, it doesn't work because we're not Pokemon, so let's go do a Steam game.
And so you're just sort of resetting, restarting different tools, different technology, different talent set, different fan base.
You're not really building any momentum.
As a tangible example of that, I think it was last week or the week before, Kit Fox announced that they were publishing Dwarf Fortress, the one with the sort of the graphical tileset.
Dwarf Fortress, for those who don't know, is I think it's like a 15-year-old game.
It's like an ASCII-based, super deep procedural simulation-based game.
It's only available through the developers' website and as a Patreon thing.
But Tanya met Tarn, who's the creator of the game, at some of the GDC panels, and they both are working on deep procedural simulations.
And it was a really natural fit then for Kit Fox to work with the studio behind Dwarf Fortress.
And they communicated that wonderfully to the fan base.
And everyone was like, this is a match made in heaven.
This is wonderful.
You know, I will buy it immediately as soon as it's available on Steam, as opposed to any kind of backlash or what the hell's going on.
because of that scaffolding, because of that momentum, because of the cohesion of the vision and roadmap lent itself to that, just as an example or a manifestation of that.
Alright, lesson number seven is to always pitch opportunities, not problems.
And this was a kind of a fundamental point at my lecture, on my funding lecture last year, in that so many developers see funding and pitching as a solution to their missing money problem.
We're all working hard, we're problem solvers, we're working on our code, and then we wake up one day, oh crap, we're missing money, we gotta go solve our lack of money problem.
And they just go out into the world, they come to GDC, and they look for the people with the money and say, hey, I have this problem, I'm missing money, do you wanna give me a bag of money?
And everyone's like, I don't care about your missing money problem.
And so last year, if this particular area is of interest to you, I did this kind of deep, deep look at the forking of opportunity relative to investor.
And the first fork is really the split between, are we talking about a commercial opportunity or non-commercial?
And I gave examples of what a non-commercial, right?
You're working on a piece of art or something, a more serious game or social impact game.
And so there's other sources of funding for that.
But if you're looking at a commercial.
a project, a commercial opportunity, then you really have to decide whether this is the projects that the thing that represents the opportunity or is it the company that represents the opportunity. And the important thing to understand is that that fork dramatically shifts how you pitch, who you pitch to, how the deals are structured.
terms, sources, all that kind of stuff.
And so 99% of the developers who are trying to solve their missing money problem don't understand that that second fork even exists.
Right, to them it's I'm missing money, I go get a bag of cash.
And you first have to understand, you know, well is it the project or is it the company?
My whole lecture from last year is specifically about that, so I'd encourage you to go see that, but just quick, quick, quick.
On the project side, this tends to be games as products.
It tends to be things that are premium.
It tends to be things that are consumable, often Steam or PC and console, and sort of represents a linear success curve.
You know, I sell units and I sort of succeed in a linear manner.
Whereas on the company side, this tends to be things that are games as a service.
that are highly scalable, multiplayer, in theory, are endless and infinite in their consumption.
So stuff like Fortnite and League of Legends and Hearthstone, et cetera.
Often this means free to play, but it doesn't have to mean free to play.
And so, just super quick, unless you are pursuing projects and your vision is to do things that are highly scalable, exponential growth potential, don't even bother trying to get equity VC angel investment in your company, because they won't even listen to you.
If it's really about the project and it's sort of a product, then you want to look at project sources, which is publishers and Kickstarter and government funds and all that kind of stuff.
I'll stop there because there's a whole lecture on that from last year.
Alright, lesson number eight.
Match your business model to the game's needs, not your preference.
I'm business model agnostic.
Premium is great if it makes sense.
Free-to-play is great if it makes sense.
Ad-driven is great if it makes sense.
It really is a question of what business model will enable the game to succeed.
And more often than not, I see the reverse, which is, which business model does the developer want to implement?
Often, or historically, this has been sort of the issue of people not being comfortable with free-to-play, or not having the experience for free-to-play.
But the most sort of tangible example I see of that now is multiplayer-only games that are premium.
A multiplayer-only game is screaming to be free.
It's screaming to be free to play, because as a developer, the most critical thing is getting players into the game so your lobbies aren't empty, that there's matches or whatever the game format is.
And if you don't get those players in the lobby, then your game is gonna take a quick nosedive, and it's sort of a spiral of death.
And it's the multiplayer-only, premium-pricing spiral of death.
There's other examples, but that's sort of the most obvious one.
And then oftentimes I'll advise a student, I'll say, hey, why are you doing that?
Like, this game really should be free to play.
Like, ah, well, that's tricky and we don't really know how to do it.
And, you know, we need to make some money, so we're going to put 20 bucks on it.
It's like, dude, nobody cares.
Like, that's not how you're supposed to make that decision.
You have to make the decision based on the model that will actually enable the game to succeed.
Once you figure that out, then you go back and say, well, geez, how do we make this work?
How do we deliver it?
Who do we have to hire?
What expertise?
What do we have to learn?
And then you sort of solve that problem, but the end user, the marketplace doesn't care what your internal challenges are, what you like or don't like, or which one you worked on on your last game.
And so I see this mistake.
quite often is that you're making your business model decisions based on excuses or sort of lack of understanding as opposed to looking at the game and saying what do I really need to do to make that game succeed.
Alright lesson number nine, do not focus on launching, focus on launching successfully.
Right, so game developers, trained as artists and programmers and designers, are so focused on the product and sort of delivering or developing it and then shipping it.
And they forget that they have to do the marketing or they don't have the time or resources or understanding how to do the marketing.
And so they're like, well, hey, my job is a game developer and my business is a game making business, so I'm focused on making the game and getting it out the door.
And sometimes they'll rely on publishers to worry about the marketing piece.
Sometimes they'll just sort of pray to the gods of Walmart or Steam that it all works out.
And this is the whole sort of joke about, if my game goes out into the world, will anybody even notice it?
And that's the whole discoverability challenge.
And so the point is, as a studio...
Since we've already sort of accepted that we're in the fan-based building business, we're not just in the, I make games and put them out the door business.
You have to be thinking about all these things.
You have to be thinking about what do I need to do in order for the launch to be a successful launch?
and getting the game out the door will not achieve that.
Listen, making games is difficult.
It's a great accomplishment to get a game released.
You know, high fives, pop the champagne.
I mean, it really is not easy to do that.
But again, if you're trying to build a successful business, a successful studio, a viable studio, that's not enough.
Right, you have to be thinking about the successful launch.
That also means you need to be thinking about that from a budgeting and scheduling point of view.
And so I often talk about this in this sort of metaphor of the bridge halfway built.
This bridge is completely useless, right?
Well, the goal is to get to the other side of the river, and so we need to plan.
the timing, the resources, the labor, the beams, whatever, to get to the other side.
And so many studios don't see the other side as the goal, they see the middle, which is finishing the game, and then they're there in the middle of the river, and they're like, oh crap, we did not plan for there to be a soft launch, or we thought early access was only gonna be one month, but now it's gonna need to last six months, and we have no more cash flow, and no more, you know, we can't pay our staff, or whatever the case may be, because they didn't realize that they're not trying to be in the middle of the river, they're trying to be on the other side of the river.
So this one, you know, can surprise you at the last minute, and everyone's feeling happy that they've made a game, and then it goes out there, and then you blame the Indiapocalypse, and all this kind of nonsense.
But the reality is you build half a bridge and that's not success.
And so you have to be planning, scheduling, budgeting, to get fully across to the other side of the river.
All right, the tenth lesson, final lesson, is this idea of having a giving or ecosystem mindset.
So I've been in the game industry, well, 23, 24, this is my 23rd GDC, and I believe deeply in the passion and the drive and the love of games and the love of game making.
that the industry has.
I've always been very giving and sort of sharing and a lot of the things that I've built like execution labs and gameplay space and previously I was actually the head of the IGDA, the International Game Developers Association for many years.
And so I sort of have this deep sense of community and ecosystem.
And in Montreal, where I'm based, we have that.
Everyone is so supportive.
Everyone is helping and ready to give advice and feedback and help each other out.
And I'm saddened when I do go to other parts of the world where that sort of ethos is not there.
And in particular, you see that sometimes where one studio has some success and they go off in the mountains and hide.
And they want to protect that success from the rest of the...
the ecosystem.
And so I'd encourage you, as you build successful businesses, as you grow and learn, to share that with the other developers in the community, whether that's virtual or down the street, and sort of help the whole thing grow.
I mean, systems are such complicated sort of black boxes with so many inputs and outputs.
And having this kind of giving an ecosystem mindset, well, that may sound a bit sort of fluffy and soft.
I think actually does contribute to the success of a studio, sort of being a part of the fabric of the community.
And then I'll throw in related to that sort of a bonus lesson, don't be an asshole.
I mean, we see that often these days.
I mean, there's a lot of...
sort of tension around labor and crunch and studios shutting down and all that kind of stuff and people making bad decisions or surprising hundreds of staff that, oops, tomorrow we're shutting down, this kind of stuff.
And so even though this talk has been more of a, you know, it has been a business-oriented, commercially-oriented talk.
I think we can all do that in a less asshole-ish way.
There's a great book, The No-Asshole Rule, and actually Robert Sutton has written a bunch of books on this stuff.
But I'm going to assume everyone in here is not an asshole and is super nice.
But I guess the ultimate lesson, and so I don't have to end on the asshole comment, but really the ultimate thing, of course, is to make great games.
that ultimately, even if you make all these deliberate choices and decisions and think about your business, all that kind of stuff, none of that replaces the need to make great, visionary, compelling games.
It's just what we see today is making the great games isn't enough.
You do need to think in this much more holistic, get to the other side of the river mindset.
But fundamentally, it starts with making great games.
Thank you very much.
All right.
So we do have some time for questions.
If you have questions, can you just line up in the center?
There's a mic on the floor.
I'm happy to address any of the points or lessons that I made here.
But of course, if you have sort of slightly different questions, I'm happy to dig into that as well.
All right, we have someone.
Don't be shy.
All right, go ahead.
Hello.
So you mentioned about the three co-founders, the technical guy, the artistic guy, and the business guy.
And my studio is exactly the example you gave in blacking the business co-founder.
What would the business co-founder do at the first one year of development of a game?
I may be making a fool out of myself by this question, but I think that I'm okay with that.
Yeah, listen, it's a great question.
And that business person, and oftentimes...
The business person may not actually have a business background.
It could be another designer, programmer, the producer is taking on the business responsibility.
So I'm not saying you got to go get an MBA student and like, okay, you're the business person, put a suit on.
And so I should have said like.
someone taking on the role of the business leadership responsibility?
I mean, ideally, they have some business background or marketing background.
And so it's a great question because this sort of hints to the notion that you are not accepting yet or understanding yet that you are a fan-based building business.
So that person not only has to start thinking about the branding of the company in the studio, already has to be thinking about the audience of the project, should already be doing competitive analysis before you even start coding, and having that sort of debate amongst the teams, saying, well I think we're going to do a Ninja game.
Alright, have we done a search and looked at Ninja games?
Let's dig into the numbers and see what makes sense or not.
Or you do a prototype, and so then they're gonna start running user group or playtest nights to get real user input.
And then they're gonna go to the shows to talk to publishers and investors.
So that person is fundamental to the whole start of the business, the whole start of the company, and the whole start of the project, and needs to be there from the start.
It's not someone that you bring in two years later and say, okay, make some tweets and go market this thing.
Because chances are that you've not made something that's relevant or marketable or doesn't have the right hooks to get you there So you need that person sort of arguing with you from the from the very beginning And just to be sure you do recommend that person to be not one of the other two like Taking on the role you do. Yeah, because it's like being a separate person because it's hard to argue with yourself Because if fundamentally you're a designer, and then you're like, oh, I'll put the suit on from time to time, and then you're like, oh, we should make it this, we should put free to play, but no, let's make, like the designer in you will always win that argument.
So there needs to be another person that sort of says, well, I'm gonna fight for what's viable and dig into the numbers and sort of, so it has to be someone else.
Thank you very much.
All right, thank you.
Go ahead.
Hi Jason, Mike Lynch from Rensselaer Polytech.
Good to see you.
Good to see you too.
Question for people who are doing teaching.
The schools I think are coming up really short on conveying these kinds of lessons to seniors who are about to go out there and maybe start a studio.
What can schools be doing more to make that kind of mindset happen among game designers?
Yeah, what wonderful wonderful question. So so I mean obviously academia is its own kind of complex system Ideally what I'd like to see is that schools that do have a kind of a senior or final project That the end goal of that project is to ship it I think they should actually go through that.
Some schools might do that.
I don't think many do.
University of Indiana does, I just found out.
Okay, so they're trying to put that in place.
That's a problem for us because it's infrastructural and resource bound.
There's copyright issues and whatever, but just the process of, a bit like Henry, where he said, oh, my goal was to learn and make estimates instead of go through the whole cycle and stuff.
So I think actually having the students ship it is an important learning step.
But it's also the idea of including sessions on marketing, community management, entrepreneurship, and ideally, that's for all of the students, not just the ones that are taking sort of a marketing minor or something.
It's like everyone in game development, game whatever in the school, should all be taking like a fundamentals of game economics and business and marketing.
I think it would be a great approach.
Thank you very much.
Yeah.
All right, next.
Aye.
Thanks for the talk. My name's Kyle, and I recently started an LLC by myself, so I know that's one thing I shouldn't be doing.
But it depends what your goals are. It depends on how you define success.
But in terms of my own skill set, I am a business person first. I'm probably the person that everyone hates.
Like, yeah, I got this idea. But I have a little bit of technical expertise, and I have a little bit of creative expertise.
And it seems like when you were talking about rule number one, it seems like everyone has predefined roles.
One person does technical, one person does business, one person does creative.
Is there an opportunity for blended roles?
And if there are blended roles, do you think there's different rules if you're starting a studio which has blended roles rather than defined roles?
Yeah, I think blended roles is fine.
And the reality is when you're a three-person studio just getting started, like everyone's doing some mixture of everything or things that they're not sort of trained to do.
The main, it's more about, call it the arguments or the debates that the leadership has to have.
It's less about on the ground, who's doing the coding and who's doing the art asset.
Like I'm less concerned about that.
It's more about when the founders are debating with each other what the road map should be, who our audience is and what kind of genres or platforms do we go after.
When you have those debates, you need someone taking the perspective from a creative point of view, what's going to be beautiful, what's going to be interesting, what's going to make a great game.
You need someone from the technical point of view who says, well, that may be interesting, but there's no way we can build that.
Or Unreal doesn't support that yet.
Or we need this tool that we can't afford.
So they have to sort of fight from the technical perspective.
And then you need the business person to fight, say, well, that sounds crazy, but it's going to cost us $20 million.
It's never going to work.
So it's more about the tension and debate amongst those people when you're making those kind of high-level, company-level, vision-level decisions.
It's less about.
we're sitting around doing the day-to-day work of making a game.
I'm less concerned about the blendedness at that level.
Okay. Thank you.
Cool. Thanks. All right. Go ahead.
Hi. Thanks for the talk.
I have two questions, but I think we may have time.
One, out of curiosity, what do you see as the role of agents in starting up a company?
Is that something that you'd like to see, something that you don't like to see from an investment point of view?
Are you an agent?
No.
Are there any agents in the room?
Yeah, I mean, there are some agents that are great, super, super valuable, that have huge networks, and so on.
And then other agents, which are maybe less reputable.
But that's fairly common.
I think ultimately depends what you're trying to achieve.
And an agent is not really gonna help you build community and worry about your fan base and make those hard decisions about what's competitive analysis all that kind of stuff.
And if you want the agent to go after a publisher or investor, I mean, that's always a little bit tricky, but in the right context could help.
And I think the issue is...
you know, when you're sitting around saying, oh, we don't know anyone, and we don't know how to get a publisher, let's go ask an agent to help us.
I mean, the agent vets you first, and they're trying to determine whether or not they can sell you and sort of find a deal for you, and so on.
And unless you're some rock star, have a huge track record, or the game has progressed far enough that it's something really beautiful or something really interesting or a huge opportunity, then the agent's not going to take you on anyways, or they shouldn't.
I mean, it's like the joke about, like, I don't want to be part of a club, any club that would have me as a member.
So it's like a little bit of...
of that because the point where the agent looks at you and says, oh yeah, you've got something amazing, I'll represent you, that should be the very moment where you say, you know what, I think I'll represent myself. But that's, I mean, that's just me and sort of having confidence in what I do.
So oftentimes agents can be very powerful, but you really have to think about the context you're in, whether or not you need them, or whether they'll even take you on.
So they're not always the quick fix.
Okay, cool. And then just a second question.
I know a couple other people have also asked about it, but is when you're looking at investing, is three really the Goldilocks number in terms of just ownership in the company?
Like if there's like five or seven, you're like, what is this socialist combine?
Versus if there's like a sole owner, it's like, well, this guy's clearly just going to be a dictator.
If there is a group that has a more diverse ownership group, they still have the clear like...
We have one person leading the business, one person leading the creative, and one person leading the tech.
Is that okay?
Yeah, I mean, so, another great, great question.
I mean, yeah, three is kind of the Goldilocks number.
Two tends to be too few, and then you don't have this sort of this, like the balance of the triangle in sort of those fights.
One is definitely a red flag in that many investors will not back a solo entrepreneur just because there's so much burden, so much work, that's just like it's a Herculean effort alone.
I mean, publishers, it's a different story because they're not investing in the company.
They're just like, hey, can your team deliver the project?
And so it's a different discussion.
I mean if it's four founders or five, I mean it's fine.
What tends to happen is the more founders you have, the smaller the slice of ownership of each founder.
And so the cap table, the capitalization table gets quite messy.
And then if you took some money from your uncle and he's sitting on there and you know, whatever.
The main thing the investor wants to see is that the founding team still own a significant portion of the company such that you're motivated to put in the blood, sweat, and tears to make the company succeed.
And if each of you owns, you know, one-eighteenth of the company...
Then really how committed is each of the founders and so on I mean I like like that's in my response There's in a very traditional business sense and certainly we're starting to see other Implementations like I think there's a lecture. I don't know if was yesterday about like a Collective like a like an employee owned collective But that's a completely different structure and that's tuned for their success to have a more sort of democratic, you know employee led And that's beautiful, but also they will never ever get VC money because it's incompatible with that structure.
But my guess is they would never even ask for it.
They're just on a different path, and so that different structure was suitable for their definition of success.
Whereas if you do think you want to build a business and take on investors, et cetera, then you're playing by the more traditional rules, and you don't want to have 25 co-founders each owning 125.
It looks weird when I look at that cap table.
I wanna see that you and the other two co-founders each own a significant portion so that you're gonna go to hell and back and this is gonna succeed and you're committed and you have skin in the game and so on.
Yeah.
All right, thank you.
All right, another question.
Thanks for the talk, Jason, appreciate it.
So traditionally, in that sort of structure you're talking about where you have three co-founders, but usually there's one that's really strong, like a strong personality, right?
Oh.
Or no?
Not so much?
Maybe.
Maybe?
So I guess that's the question is what has been your findings as far as like the balance of personalities, the balance of...
Yeah, I mean now we're getting into sort of, you know, I can tell you endless stories about sort of the interpersonal dynamics of the co-founders and where it's been amazing and where it's been very sort of toxic.
I mean I think the idea is that the co-founders are in relatively equal footing.
So that when you're having these debates about the future and vision and so on, that it's not just one person that says, well, I'm the star here, so you shut up.
And we're gonna do it my way, because then now you have that more dictatorship model.
So this goes back to the notion of finding your co-founders first, in that you really, I mean, this is a marriage, and you wanna find the people that, at a personality level, you combine with.
at a skills level, you're complimentary, and that you feel like you can actually rely on each other and trust each other and build a company together.
And it's not just my buddy or my brother or whatever.
It's I'm really being deliberate about finding those people.
And it's not easy.
It's not easy to find those kinds of people that sort of plug in nicely to make that co-founding team.
And I've seen it where one person is sort of a little more toxic, but they were buddies in high school, so they kind of do it anyways, and then you're like five years in and one's trying to buy the other one out, and the other one's trying to sue the other, and it's just a nightmare.
So that really goes back to like, find the co-founders first before that.
But yeah, I don't know.
See a counselor if you're having sort of intermarital issues and stuff.
All right, well I guess we're mostly out of time.
Thank you everyone.
I hope you go up there and eat a lot of broccoli.
Enjoy the rest of the show, and fill out your surveys, please.
