Wow, look at all these people here, this is amazing.
I thought I was up against a clay talk, so I figured nobody would be here this morning.
So, in fact, I was thinking of just popping over there, if you guys have a minute, I'll be right back.
Yeah, all right, get going.
Okay, hi, I'm Kim, I'm just gonna flip my screen, because it's being grumpy here, there we go.
Top secret AI notes here that you can't know about, so they're up here now.
So a lot of you may know me as ZanyTomato, that is my online handle all over the place on Twitter and my Gmail account as well.
So if you want to look me up, that is me, except on YouTube.
So whatever content is there, ZanyTomato is not me, just putting that out there.
I've been making games basically my entire life.
I think I made my very first game when I was about, I don't know, six years old, so early 80s sometime.
And since then I've become incredibly fascinated by how it is we make games and how we as people react to games.
So my background is more specifically in how human perception works in games.
I have a PhD in computer science specializing in software engineering and AI and I also have an undergraduate degree in cognitive science, which is basically an interdisciplinary study of the mind.
So if you like, I pay attention to how people think in games and that's what I'm always interested in when I'm making games.
Most recently I've been working on a little game called Rockets Rockets Rockets.
It's a game about rockets.
I'm going to talk about it a little bit more in a moment, but just picture rockets and you're probably getting pretty close.
But we're here today to talk about AI.
So one of the big applications about how the brain works and how we perceive situations is of course in how we perceive other intelligences.
And so I spent a lot of time working in AI systems, big and small.
Today we're not going to talk about academic AI, which is a very kind of big, huge, unwieldy beast that doesn't tend to parcel up and fit nicely into games.
Instead, I'm going to focus on some of the work that I've done around smaller systems.
And essentially what this is, it's a very short talk, so I'm going to try to give you as much as I can a dense overview of some of the key tips that I have learned through about ten plus years of working in AI.
So we're all game developers in this room.
In some capacity we contribute to the wonderful thing that is video games.
And as game developers we have one job.
That job is to create an experience.
And everything else that we do is in support of that experience.
We should have never, at any point, we should never deviate from supporting that core experience.
And AI is, of course, no exception.
It, too, must be made to support this experience.
It is not about having super clever AI.
It's about what does it bring to the game that you're making?
What problems for you does it solve that you otherwise wouldn't be able to solve through simpler means?
And I say this as a lifelong AI developer.
I really like AI and I like all the complicated problems.
But it turns out, simple is usually better.
So good AI adds a lot to a game.
It can take a game world, it can enhance it, it can bring to life a single player experience in ways that otherwise you might not be able to.
It can be a great companion, an awesome component.
It can contribute to the wonderful depth that is the visuals of the world, the animation, all sorts of different ways does AI impact our world.
There's been some really, really interesting and clever examples throughout the history of games.
Half-Life 2 had some really interesting stuff, and as well, its counterpart, the original, had a combination of scripting and AI that was used cleverly to avoid interrupting gameplay.
Very well-tweaked, well-integrated with storyline and player, enhanced the experience.
Not perfect, but nothing I'm going to show today, including my own game, is anywhere near perfect.
Thief was all, sorry about the low res image, it was all I could afford.
Thief is also a really great example.
It showed AI actors that responded very realistically to light and to sound.
They had actors that voiced the current state, so they were giving feedback constantly to the players.
Neat, interesting system.
Sims is another, kind of a different variation on using AI, but here you see clever abstractions being used to represent core human-like behaviors.
And as all of us being humans in this room, it's something that we can respond to very well.
It's something that we inherently understand, being human.
Bad AI. Bad AI, no cookie. Get it?
Yeah, it's only going to get worse from here, hang on.
Bad AI, of course, is a threat to flow and immersion.
It breaks the very thing that we are setting out to do with our games, to create that experience, to support that core experience.
It's a distraction, right? It's the, hey guys, listen!
Through the entire game.
Now, we all have our war stories, right?
You know, there's the Dead Rising, right?
Where you've got the, you give a survivor a weapon.
It's a zombie game.
You give a survivor a weapon.
And they're like, man, brilliant.
I was running for my life, but allow me to stop and fight every single thing on the way now, because that makes sense.
Or StarCraft, you know, you've got your troops clogging up choke points, Mario Kart, some of the crazy rubber banding.
You know, again, none of these things are necessarily wrong.
It's just in their execution, they're breaking what is supposed to be the core part of the game.
Now sometimes it's funny.
For those of you who aren't familiar with the basket trick, you can find a basket at your favorite local shop in Skyrim and you can pick it up and you can put it on the head of the shopkeeper and then you can proceed to rob them blindly.
And that's basically what they'll do.
So hilarious, right?
I mean, it's pretty funny.
But it's not really canon.
It's not really in support of this wonderful rich world that they have developed.
And sure, we can have some fun with it.
But the fun has a limit.
One of my personal favorite games, when I was in university, I spent my time on the 007 speedrunning this game.
That was just what I did for relaxing.
And nothing was more painful than the Natalia level.
Trying to shepherd her to the end of that level was just great.
I'm finally, finally wrapping up the therapy from that.
Very, very difficult.
And it's still, interestingly, still one of my top 10 games of all time.
So what I want to do today is I want to frame AI in a particular way.
I want to frame it as a perception problem.
It is how we perceive AI in the world that actually governs the quality of the app.
Not how complicated it is behind the scenes, not all the clever tricks that we have done, not how it might hold up against Deep Blue or whatever the current best chess engine is, et cetera, not how well it does on Jeopardy.
All we care about is how the player perceives it in the moment.
That's what we're trying to control.
It is our job as game developers to manage that perception.
But before we do that, we need to know a little bit about how the brain works.
So let's segue a little bit into the brain.
There are a ton of things you actually need to know, but I'm trying to pull out a few salient elements that I think you want to keep in mind when you are creating AIs.
The first is that brains are incredibly stubborn.
We are not, at the best of times, very good at fighting our natural tendencies.
Have you ever tried to break a habit? Have you ever tried to quit smoking?
Or, you know, whatever, say um too much while you're talking?
All of these things are incredibly difficult to do.
We're worse when we're in a flow state, which is hopefully where our players are going to be.
Our brains are hardwired to find patterns.
We can't help it.
As a culture, we talk about stereotypes as being an incredibly negative thing, but there's a flip side, there's a positive.
Stereotypes are what allow us to efficiently navigate our world, to deal with the onslaught of information that is always being fired at us at any given moment, especially in today's modern time.
Unfortunately, it means we suck when it comes to random at small scales, because we're so intense, intensely bound to finding a pattern, that we will find it in even the smallest thing.
Now you can actually embed some form of personality in repetition, etc.
But generally it's set as a flag.
Something is going wrong when there is repetition.
There are some things that we tend to repeat.
You know, if you come over here and you punch me in the head, I'll probably say ow.
Then maybe a few other things.
And if you come back later and you punch me in the head again, I will probably say ow and then WTF.
But the ow part is consistent.
It's OK that I repeat that.
But very rarely are there those kinds of gems that you can repeat.
And that includes visuals and all sorts of things.
And that's because things stand out if they don't fit.
Our entire brains really are giant pattern matching systems, which means that they are very good at policing when something doesn't fit a pattern.
Everything that our brain wants to do is to take a look at everything around us and fit it into a pattern.
If you guys grew up watching Sesame Street, this was one of our earliest victories, right?
You guys, come on, sing it with me.
One of these things is not like the other.
That's all I know.
We anthropomorphize.
Brains attribute human-like behavior no matter what.
They also attribute intelligent behavior, too.
Interesting.
If brains are automatically going to attribute intelligent behavior, maybe as AI developers, we should just get out of the way of the brain.
There are also storytellers.
By the way, for those of you who didn't go to the Clay Talk, it's about Invisible Link, but that's a hat from Don't Starve.
So games will, games, bigger brain, brains will take the most flawed input and they will weave it into some narrative.
Our brains do not work like our memory in our computers.
We do not have discretized memory slots into which we fit different components.
It's nothing like that.
It is really...
A schema, a series of schema for weaving together narratives.
If you've ever looked at any of those self-help books for improving your memory, and they talk about taking different objects and weaving them into a story, that's why.
You're leveraging what your brain naturally does.
Scary thought.
They're so good at weaving narrative, and our brains are so afraid of holding contradictions and cognitive dissonance and all of those crazy things, that our brains will actually unconsciously shift our memories.
So whatever we perceive at reality at any given moment is only the reality that your brain has decided to show you in that moment.
So sit and think on that when you're falling asleep tonight, it's disturbing.
Speaking of disturbing!
So, a lot of you have probably heard of the uncanny valley.
The uncanny valley is when we start to get something that is lifelike enough, but not quite enough.
It's looking more and more real, enough that our brains are starting to put expectations on just how real that should go, and yet it's not quite there.
And so, other systems in our brain are going, whoa, something weird going on, I should avoid that.
As game developers, this means that as you increase fidelity, you increase your responsibility to uphold that fidelity.
This means different things in different aspects of games.
But in particular, in AI, the more you model, the more likely something will stand out as artificial to your brain.
You guys seen this before?
It's great, right?
It's still funny to me.
I just, I always love this.
So what the heck's going on here?
So good, right? So good, so good. So this is creepy Watson if you weren't familiar with the So Watson is, of course, behaving strangely.
If even if you were to flip the camera around and he looked like this, that would be more believable because now there was an opportunity to weave a narrative around how he was getting to where he was going.
But he's not, right?
He's just doing all of these crazy, creepy things.
He's teleporting around the room.
It breaks our expectation because our brains are trying desperately to weave a narrative and the only one that they end up with.
That dramatic music will kill that.
The only one that they end up with is, of course, this creepy character.
We can't resolve it.
So that's a great example of the fidelity that we were set to expect, given the world, et cetera.
I mean, he even turns his head to follow, is messing with our brains and setting our expectations too high that this current demo is not delivering on.
So really, a suggestion of behavior is much better than a complex model.
Brains will assume that the complexity is there.
Most of you have probably played Pac-Man or at least seen it.
For years, massively complex behaviors were attributed to the four ghosts.
What is it? Inky, Blinky...
something in Clyde, inky blinky slinky, I don't know, whatever, four ghosts, them, there.
And it turned out that on the grid, each ghost really had a home spot, and the home spot was a corner set out from the actual map that you as a player could traverse.
And then it had little behaviors for switching between chasing and evading, etc.
But really, when you boil it down, it was an incredibly simple series of of steps that were driving this, that gave rise to what otherwise seemed like highly complex behavior.
You don't need to do a lot.
But it's very important that this be consistent with the player's mental model.
Now, you aren't in control of your player, but you are nonetheless setting them up to be receptive to the world that you are trying to create believability in.
You are the one that is in charge of mitigating the distance that sits between them and their screen in such a way that they are able to get pulled in.
And nothing, at least very little, is going to interrupt that.
So Steambirds is a game where you're flying around and you're trying to maneuver yourself such that you can shoot down your opponent.
And the AI in this one, this was written by Andy Moore, it's like right there.
The AI in this one again is another great example of a very straightforward, simple system.
And yet it was perceived as very, very complex and he tells a really great story, which I'm going to bastardize since he's sitting in the front row.
where he had a class that was assigned this game to deconstruct the AI.
And these poor students were working on it, and working on it, and working on it.
And I'm like, just this AI, man.
Like, how?
How did this work?
This is incredible.
I can't.
We can't seem to figure this out.
And so the professor did the only thing that a professor would do, invited Andy in to talk to the class.
And as Andy was taking a closer look at the AI, he realized that he had transposed the x and y coordinates.
He said, oops.
But why did this work?
Because it fit the player's mental model.
Even though it was actually a typo, undocumented feature, it worked with your expectation of how the game was supposed to work.
Contrast that with my recent game of Dragon Age Inquisition, which I love, by the way.
I don't mean to slight the game.
This doesn't fit with my mental model.
I don't know about you guys, but chest surfing is not usually present in these sorts of worlds.
One thing that I think Dragon Age does get very right, they get a lot of things right, but in particular relevant to chests, is most games historically just, you know, leave chests out in the middle of the wilderness, unattended. They at least assign somebody to guard it.
It's kind of, I mean...
Yeah, anyway.
You get my point.
So work with the brain.
Do less, get more.
Less is more, less is more, less is more.
So let's come back to AI as a perception problem.
What does this mean for us?
Distill your AI needs.
What are the broad sweeping behaviors that you need?
Start simple, resist complicating.
I say resist.
Complication in and of itself or more complex systems isn't necessarily bad and may be right for you depending upon the game.
But resist the urge to just jump into something more complex.
Start simple.
Use the brain.
I'm wearing Star Wars shoes by the way, just I hope you appreciate it.
So let's take you through an example. This is what I did. I did a bunch of different things on Rockets, Rockets, Rockets.
One of the things that I did was I wrote the AI for it.
If you are not familiar with the game, it is dogfighting meets figure skating in space.
If that wasn't clear, it is a fast-paced game of rocket tag.
I grew up in the 80s, as I alluded to earlier, so this is very much for me, and I won't speak for the rest of the team, but it's very much a tribute to those games that I grew up playing.
I like colorful games, I loved Tron when I was a kid, I like things that challenge me, that are worthy of my time to spend with my friends, or even just the little bit of actual gaming time that I get these days to spend it on something.
So I was trying to go for that.
It's a couch-based multiplayer game.
It is very fast.
It has a lot of momentum, you just push in the direction that you go, but there's a little bit of momentum that you need to counteract, so it takes a bit of learning.
It's very close dogfighting, you're bumping into things.
I'm going to show you a quick little video of it.
Let's see if this works.
Dogfighting means figure skating in space, told you.
And this is Stanley.
This is the AI that I wrote.
So Stanley Parable is one of my all-time favorite games, and I was playing it a lot when I was working on the AI, and I decided to name the AI Stanley.
So if you haven't bought Stanley Parable, if you haven't met Davey Written, he's amazing, go buy that, go meet Davey.
Fantastic.
So I set myself three rules.
I said, always have a working brain.
All behavior must be controller-based, so effectively think of that like I wrote a controller API, so that anything that the player had to do, which naturally would be done through the controller, Stanley did as well.
And respect the player. I was not going to pander.
As well, it's a lot easier to make your AI easier later.
It's incredibly hard to write legitimately challenging AI.
So here are the steps that I did.
First step, watch people play.
This is something that I think is often overlooked, but you need to know how humans play if you're going to make something that looks like a human.
And I wasn't just trying to get a sense of how people played, I was also very interested in how other people might expect another human to play or not play.
And I started to form from this a general idea of what an AI opponent would look like.
Now bear in mind this was a very early iteration of the game, there were lots of different things that were wrong with it, but it doesn't invalidate the step of spending time with your game to figure out how humans are interacting with it.
I defined some broad behaviors that were happening on the screen.
avoiding, if that was a little bit confusing, it's just sort of like going the other direction.
But you know, chasing, evading, just kind of looping around, ramming in.
And I started stupid.
don't get me wrong, I really want, I had all these grandiose plans for this incredibly complex system and I really really wanted to do something complex but I started stupid. I wanted to give the brain the best chance to weave its own narrative.
I wanted to see first what it did before I stepped up and went no no no no no no AI engineer, I got this and got in the way of the brain.
You can obscure intelligent behaviors that are naturally emerging if you go complex too fast.
This is the very first version of Stanley.
It just follows the player.
When I pushed this build, my teammates were like, whoa, how long have you been working on this?
This is great.
I was like, yeah, I'm on to something.
Excellent.
Excellent.
Got a little more complicated.
Just don't worry.
I then took that and I started studying it for appropriate and inappropriate behaviors.
I didn't care that my algorithm was stupid, I cared that I created a simple model free of confounding factors, that I could see what then went into creating an intelligent component.
And there were all sorts of things that I noticed that were going crazy.
I'm just going to go through a couple of them.
You can go back through the slides later and take a boo at that.
So one of the big important things is intelligent randomness.
I mentioned earlier that the brain detects patterns like that.
We're always on the lookout for patterns, which means that you want to use things like normal curves, not uniform distributions, because, you know, generally things in life are the result of multiple contributing factors.
And if you think about rolling dice, there are a lot of different combinations that add up to the same values, which gives you a bell curve.
So your randomness should be more natural just in doing that.
But also you need to ask yourself that just because something was awesome once does not mean it'll be awesome the second time.
The second time the player's brain might go, wait a minute, seen this before.
Bullshit.
How am I allowed to swear?
Sorry.
Now, I caught myself not taking my own advice.
I wish I had been to this talk before I started this.
This is really just for past Kim.
I haven't worked out the details of how that's going to work, but...
So I went complex.
I actually started with a navmesh and I was screwing around with it for way too long.
It was getting really ticked off and I couldn't make it work.
It's just, the behavior was unnatural.
Stanley wasn't behaving like the humans.
I'm like, oh man, maybe all these years of AI, I don't know what I'm doing.
Damn it.
I'm gonna take away my PhD.
And so I said, screw it.
Toss everything.
Nuke and pave, baby.
Nuke and pave.
So I took it all out, and I switched to raycasts.
That's it.
This is my top secret reveal of all of GDC.
That's all Stanley's navigation is.
It's just raycasts.
Now why did the raycasts look like this?
Well, I thought about humans again.
What do humans do?
We tend to navigate on the basis of what is in front of us.
We make bigger, broader, farther reaching judgments on the basis of what's farther out.
and less so about here. I mean, we really only need to fit ourselves around things.
We don't need to be like, Whoa, there's a wall way over there!
And also because the game was fast-paced, people were naturally looping around and bumping into things, and so I wanted Stanley to do that too.
Because if he was too perfect, people would, uh...
Bullshit. Sorry, I already said it once.
The game also has a very natural dance that emerges.
You're swooping in, you're swooping out, you're swooping all over the place.
I wanted to take advantage of that.
It's very easy to do repetitious things in AI.
So I started out with an algorithm just that had him doing loops.
So I mean, I slightly lie.
It's Raycast plus some behavior patterns, right?
I have a hierarchical state machine driving all this under the hood.
But I was able to hide those things in the natural repetition of the game.
And because I had studied the game in the way so many people played, I knew that this was going to work.
And then I iterated.
It's my favorite slide, by the way. Isn't that cool?
I really like that.
And it seemed to work.
The game is currently on Steam Early Access, if you want to give it a try.
It seems to have passed the rocket Turing test.
Yes, I know that's a Turing machine, not the Turing test, but I was just so proud of the slide that I left in it.
I do know the difference.
Catch me in that wrap-up room if you want to talk about it.
People thought that they were playing humans again and again and again and again.
And holy cow, that doesn't feel really good.
And just to wrap up, I'm going to share some quotes.
Really enjoying online multiplayer, but I'd like to be able to choose who I'm playing.
The game is local multiplayer only and only ever has been.
So this is a game, oh my god, time passes, crazy fight.
Wow, this AI is actually a worthy opponent.
It can't talk.
Various Let's Play videos have some incarnation of this.
Various descriptions of complex hunting, evasive, responsive, and vindictive behaviors that I never wrote.
Great AI update.
Wow, this AI, thank you.
And my personal favorite.
A lot of variations of that one.
So he's challenging.
He's definitely challenging.
OK, rapid fire wrap up.
Support the core experience.
Watch people play and get in their heads.
Identify broad behaviors, not intricate, detailed ones that are probably going to collapse on closer inspection by this smart little brain thing anyway.
Start simple.
Resist complicating the AI.
Figure out what your brain and your players' brains give you for free and work with that.
Try going simpler before you go complex.
Remember, once an AI has done something stupid, it is incredibly hard to overcome that bias, commit to something simple, easy to do a good job, something complex, easy to screw up.
Thank you.
