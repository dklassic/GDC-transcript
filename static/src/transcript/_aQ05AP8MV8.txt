So this is Ori and the Blind Forest, Sonic polished through distributed development.
I'm Gareth Coker and this is Andrew Lackey.
We did music and sound respectively for the game.
Before we begin, please turn off your mobile phones, pages, whatever you communicate with these days.
And when you get your email to do the survey, please do that at the end unless you think we absolutely suck.
In which case, don't.
OK. So, the gist of our talk is about a small, global team that, we think, delivered some pretty big results.
But before I go any further, can you raise your hand if you're a composer?
Oh my goodness. OK. How many sound designers?
And how many people who don't do either music or sound but are indie devs?
Or just devs in general?
Yay!
Okay, cool.
We've got a nice range of people here.
Thanks for showing up.
Great.
Okay, so who are we? Andrew, tell us about your company.
Yeah, so I'm a sound designer, been doing it about 15 years, and eight years ago I started Wabi Sabi Sound, and we cater mainly to the game industry.
It's where our love and passion is, and we split our time somewhere 50-50 between doing full game ownership of...
meaty cool indies like Ori and The Blind Forest and The Witness and we also do contracting for some great AAAs you've probably heard of so that's that's kind of our our MO and we're located in Atlanta, Georgia And as for me, I've been working in music for games and films and advertising since 2010.
And before Ori, my bread and butter was doing, I did a lot of movie trailers.
I've done way too many.
I'm kind of tired of it now, but it pays the bills, so whatever.
And since Ori and the Blind Forest, I've worked on Minecraft with their Greek Mythology expansion pack, and I'm currently working on ARK Survival Evolved, which is obviously very different to Ori, but we are here to talk about Ori today.
So, why give this talk?
We think that something very special happened...
During the long development process of this game, which was about four and a half years, if you include the prototyping.
And here's a nice little shot of our Metacritic score, and our user Metacritic score has not been trolled to death by PlayStation people, and it actually matches our real Metacritic score, and we're quite proud of this.
So one of the cool things about the project is that everyone came together in a really unique and special way.
And what ended up happening was the art ended up elevating the audio, and the audio ended up elevating the art.
It all became very synergistic.
And I think...
What Moon Studios has done with Ori represents what is the indie dream for a lot of people.
A lot of people are doing their games over Skype now.
You guys are all sitting in your rooms, maybe in your pajamas, like doing games with all these people around the globe.
But I think it happened in such a way on Ori and the Blind Forest, we thought we'd try and talk about it and give you little hints about what you guys might be able to do to help you guys with your projects.
So our team.
is based all over the globe, as I've alluded to.
So just to give you a quick rundown.
So sound was in Atlanta.
Music was in Los Angeles.
Programmers were in Australia and Israel.
Animators were in England.
Art team was in Germany.
I think I'm missing a couple of people.
You're missing the founders.
Yes.
Tel Aviv and Vienna.
Yeah, exactly.
So all over the place.
20 people on the team in total from about eight different countries.
This is the team and we met them for the first time at the launch party.
I never met Andrew in person.
We worked together for a long time, but this was the first time I met him.
And he's responsible for how good the music sounds in the game.
And it was unusual to have such a synergistic relationship with someone, especially on my first game.
It was nice to have a wingman like that.
I would probably prefer to have met him in person, but it just wasn't doable.
You seem nice.
Yeah.
It seemed nice.
And then there's these guys, and I've never met any of them.
I don't think Andrew has.
And most of these are our incredible art team, which serves a lot of the inspiration for us.
I hope we will get a chance to meet them soon, but they're a long way away.
So, we learned a lot in the process, and that's another reason why we're here, because when you work on something in this way, there's a lot of experimentation, and there's a lot of things that go wrong, a lot of things that go right, and it's kind of a voyage of discovery.
And distributed development is something we're going to be seeing a lot more of in the next five, ten, fifteen years, because the tools have become...
a lot easier and a lot simpler to get integrated into teams.
We wanted to talk about how Moon Studios' structure.
Everyone gives feedback at Moon, and Andrew's going to talk about that in a little bit, and how getting feedback isn't just like a checklist of bugs and points that you need to cross off.
It can also serve as a source of inspiration.
KISS, if you don't know what KISS stands for, I didn't know what KISS stands for before Andrew wrote it in.
It means Keep It Simple and Stupid.
And as you're going to discover, Auri's systems for audio are very, very simple.
But it didn't prevent us from, we think, delivering good audio.
And the last thing is sticking to our guns on what mattered.
We had a few disagreements with our creative director and we told him, just trust our audio vision.
And we're going to talk about that too.
It's important to know, this talk is not about Sonic Polish 3 Interactive Music, because there is no interactivity in the music, and I will go into that a little bit later.
There's no fancy, wonderful, third-party tools.
That's what all the other talks were for, and I hope you went to some of them.
That's not what you're gonna get here.
The game was largely made with the Unity 4 stock audio engine.
And I want to remind you that this is like focusing on a game that's delivering a single player narrative experience.
The audio approach here might not be best suited for multiplayer.
So the agenda, Andrew's going to talk about the culture at Moon Studios, and then we're going to follow up with case studies on sound and music that take into account Moon's culture.
And we're hopefully going to try and tie that all together for you.
And then if you have any questions at the end, please feel free to ask them.
So now I'm going to pass over to Andrew to talk about culture.
Yes, again, just want to echo Gareth's sentiments.
Thanks for showing up.
This is really a pleasure to talk about Ori and the Blind Forest.
It's a very special project and also a very special process of creativity and seeing something start very modestly from a modestly resourced but extremely talented team get to where it was.
It's a true Cinderella story.
So it's fun to talk about it.
And it's fun to talk about how this group of creatives somehow found each other on this.
tiny but huge planet and made Ori and the forest, in the Blind Forest. It's quite remarkable and it was an amazing opportunity to be a part of. So let's jump into it. So, you know, in kind of common lexicon, Moon Studios is a flat organization, much like you may have read about Valve. However, the focus is on the was very strong about what we were doing.
And so I just want to kind of give a little bit of like where the ground rules were and what was what was flexing and what wasn't.
This game from our founders was going to be a beautiful, very tight, metrovania platformer.
We knew exactly that that's what we were doing. It was hammered home all the time.
We knew, which I think is very important, why we were making it.
And that is for the hardcore fans of the classic 2D platformer.
We knew if we could satisfy that crowd, make it as pretty as we knew we could sonically and visually, we would be OK.
Now that doesn't mean it's easy to do, but this was the ground rules.
Day one on the project, this is what was presented to me.
This is what we're doing.
However.
how we're making it, outside of it being chosen that it is being done in Unity, it's a battle.
And everybody in this room probably feels that, yeah, of course, that's kind of why we're here.
We like doing game design because we're figuring out how to give new experiences, even when we're wrapping a new experience around a classic type platform, like a 2D platformer.
So, let's dig deeper into what makes Moon special.
And as the concept of ownership...
Sorry, here, let me get one more point in here.
In a flat organization, this is, I think, probably ubiquitous with most flat organizations, is that you remove a management layer, so you have zero management, but...
The management falls back on every individual in the organization.
It's only going to succeed if everybody in there is managing their resources, whether it be individually or through group dynamics, to the betterment of the project.
So, it's an everybody-is-managing-when-nobody-is-managing kind of idea.
Now, to the point where I think Moon is very, very different, or at least the first time I had ever worked in this type of environment, was that Moon has a culture of rapid iteration, and everybody who's capable and available and has a legitimate amount of interest is expected to review everything.
What you come up with, as Gareth alluded to, is we did this entire project basically in Skype through chat channels like this.
And if you see that circle there on the left-hand side where it says moon and it says 2135, that might be about an hour's worth of messages.
because there is constant feedback, there's constant discussion.
Skype was our big water cooler, if you will, that was constantly going the entire time we were developing the project.
So what does that really look like for a sound designer or a composer?
I think it varied a little bit between us, just based on the levels of granularity that we're kind of individually going into the engine and designing.
But sorry, let me skip around a tiny, tiny bit.
What does that mean?
Let me just quickly go back to this one.
If I'm creating a sound, and I feel like it's important that somebody would want to hear it and make a judgment call on it, like an attack or a UI sound or something that I think is relatively important.
throw it in the game, you know, obviously make, you know, do my, do my best shot at it, throw it in the game, alert the team, whoever's online, if they're not doing anything crushing that they just absolutely have to get done, they're going to take a listen and give feedback.
And when I say somebody, it could be a QA tester, it could be the creative director, all the way up and down the line.
It's important to remember that this goes both ways.
It's not just for the, it's not just the audio when we put stuff in, it's like, so when artists put in stuff and I don't like it, okay.
Composer doesn't like the art in one part of the game.
It's unprecedented, it's not normal, but when it's consistent across the entire organization and you get used to it, then it can work.
Yeah, and I'll give a quick example too, just to try it on that, because I think it's a really cool point.
And we're going to get into more examples as well, but there was a visual effect put on into the game very, very, very, very late in the first ten minutes of playing it.
And if you guys have played the game, it's very mood setting, it's got what it's going on.
And this effect was done for something else. It was a global effect that came in, and it really ruined the mood of the scene.
And I made a squawk about it, and it got out.
So I'm just showing you, and we've gotten better examples here.
But just through the process of group dynamics, other people were able to agree with that.
We got some kind of inertia around, yeah, this really is affecting the way the mood of this place is going.
You know, on the sound design side, I would have had to really amp up the effects to get that to look proper, and it was going to ruin both sonically and visually, I felt, the mood of that area.
So, making that work, you know, as a developer or as if you're kind of in charge of bringing people into the team, you obviously got to look for competent, talented people.
That's true of any organization.
You also have to find people who can champion their own causes and are self-motivated.
You do not get a to-do list.
There is not, you know, for the most part, a bug tracking system or a task list.
We don't do agile development.
Like, there's not really a structure around this.
It is a very organic process.
You gotta have some thick skin.
Keep in mind this is a multinational team.
Not everybody speaks the same language.
Not everybody has the same cultural mores.
You're a global citizen when you're working on a project like this.
There's great benefits to that.
Sometimes there's...
you know, implied tone and whatever, you know, you just kind of got to get past that.
And there's a very simple rule around, you know, what we, how you kind of navigate that, and an ability to be agile.
And then this one here that's, I think, particularly important and doesn't get discussed, and I think I kind of discovered it for myself along the way in here, is a real...
attention to empathy around an issue.
So I'm going to get into a little bit of that, because I'd really like to just pause and if I can kind of give one nugget of experience, advice, or whatever it might be through this talk, I think this would be the one.
And that...
Empathic listening is a concept that, as an aside, my wife's a psychiatrist so I get a little bit of the group dynamics and that.
This is something that we've talked a bit about.
Empathic listening is something that says that, well, understanding what somebody says is obviously important.
You need to understand what they're saying.
But understanding why is actually the key to progress.
Understanding why something might be an issue for somebody is really...
at the heart, at the root of what actually needs to get fixed.
And especially as sound designers and as composers as well, when you're working with people who do not have a lexicon for sound, they're probably not as adverse to talking about sound.
They don't, just don't have the experience in it, but they have real true motivations and feelings about what is and isn't working.
So they're bringing something really valuable to you, but not necessarily bringing it to you in a message or a package that you can really necessarily understand really well if you just listen to what they're saying.
So in this way, if you're not understanding why, it's a great time to start asking questions.
starting just to, you know, everybody's opinion is gold and valued.
We get, you know, it doesn't mean you have to agree with it, but just having this attitude of there is something here that's important and valuable.
And, again, I got to the heart of the issue, which I'll give a little example of that.
Now if, say for instance, you know, a common one we get in sound design is, you know, because we use electricity a lot, you know, I used some electrical sounds for, source sounds for Ori's spirit flame, the main attack sound, and I got that feedback, it sounds too electrical.
Right? Okay. So, my opportunity field, as far as what I'm going to do next, is anything but electrical sounds, right?
However, with just a little bit more digging, I could understand that why, is that, well, this sound actually sounds too sci-fi.
So then, that suggests a much bigger palette of sounds that we want to stay away from.
This stuff is being interpreted as sci-fi, so when I turn to where am I going to go next for material, I'm going to be reducing the opportunity field of what I'm going to pull for because I'm going to be thinking not not electrical, but not not sci-fi.
And that's a really simple example, but it's, that gets to the heart of what I think is important here.
And remember in this kind of structure, there's a lot of feedback coming at you.
So and you know, just the final point on that is that when you do that, you encourage more interactions and you encourage more valuable feedback to come to you.
And as we'll show in some of these later slides, it.
that feed, that amazing feedback that helps get polished can come from anywhere.
So here's a kind of an anatomy of an issue, just to put a finer point on how this would actually happen in a, in a moon style development environment.
You have the offended that says, this thing sucks.
And sometimes it's, they actually say that.
Sometimes it's worse than that.
Sometimes it's worse.
And then.
And then the offender would say, no way, it's awesome.
Now that's not empathic listening.
But there's a fine line between sticking up for your work and being empathic.
And then you've got moderates.
In a group culture, you've got moderates who are going to be able to give a little bit more refined opinion or at least give a little bit more angles on what's going on here.
which I think is really crucial as well.
And your ability to kind of process that, re-engage with the group with questions, and try to get to some result that you feel like is actionable in your next stage.
Then you're going to have no opinions, which that's fine.
If you don't have a deep feeling about something, you don't have to participate.
And a bit here that I'm sure any hardcore manager in the room would probably just think is totally crazy.
But effectively, the game is managed this way in terms of priority and what needs to get done.
If an issue is raised, it only gets resolved if A, everybody's happy.
Sometimes that happens.
be offended gives up, it's not worth it anymore, like I've, you know, I've gotten as close as I feel like I can to what I feel like is right for this, but the group dynamic is such that I gotta get on to the things or whatever.
Or we just run out of time.
Now, I mean, Gareth will back me up on this, that this is the way we polish the game. It seems counterintuitive. It's pretty much constantly that way, and if you want, if you're passionate about a certain issue, you have to push it and justify not only why you think it should be pushed, but why it will benefit the game as a whole, and that's pretty much what we did for two to three years.
The concepts we are going to be telling you today and telling you now are not particularly complicated, but it's the execution of them on a day-to-day basis that we managed to nail.
over the course of the development.
And we're doing a lot of iterations, even though somebody might not be 100% cool with something.
And they might be kind of like, all right, I'm giving up.
We've still done a lot of iterations on something.
So we don't want to gloss over that point that one iteration was done and we just kind of left it because we gave up.
But.
We can go into more of that in terms of questions later if you have some.
So the grand motivator is the game's success.
And I know that's something that probably every studio has in mind.
But when you remove the management layer, and you remove some of these other techniques and mechanisms for development, this becomes the grain that everybody has to latch onto.
If you get so mad in a chat or whatever, the thing that's gonna keep you in there, or if you feel so offended or so frustrated, the thing that's gonna keep you still engaged in that process is the success of the project.
And, you know, sometimes you just have to make those concessions, and you are.
probably making that concession because you're doing some mental factoring that says, you know what, I've pushed this engineer as far as they can go, they've got other stuff to do that's more important as far as I can tell, so we're gonna let it go.
And so that's having a little bit broader idea about what means for the game's success.
And this kind of goes back to the other piece, that the team is kind of organically elevating and prioritizing issues.
If somebody's playing something and it's like, oh my gosh, that thing, like, you know, just jumped out at me at the blue and took me totally out of the experience. I'm gonna email Andy about it.
Or, I'm sorry, Skype Andy about it.
That is the way we prioritize issues. And if, and if since it's in the main chat and other people are like, yeah, I heard that the other day and it's terrible. That's how this whole process happens.
of what gets prioritized and elevated in terms of what needs to get worked on.
So, it's very punk rock. It's anarchy.
But it has roots in just basic social group dynamics, and it works.
Even on a global distributed scale.
If you get the right...
So, let's get into some sound studies.
This was probably the most contentious.
The language of whether the Spirit Tree, who's the omniscient narrator of the game and tells the story effectively, whether that voice should be English or whether it should be a made-up kind of language that is native to the fantasy.
It was, well, let's just go into some videos and show.
So I'm going to show effectively, we had a big Skype brawl about it, that's what I call it.
Big Skype brawl.
And as Gareth was saying a little bit earlier, we just had to show and not tell.
And so we just did it both ways and let the team hammer it out.
We will always remember the great storm.
That night when Ori was lost to the winds.
Okay, so there was a big discussion about that, and it ran really pretty close to the lines of whether you like your films dubbed or whether you like subtitles.
This is actually one of the few, maybe the only area where I actually disagreed with you initially, because you were pining for the English.
Andrew and I had kind of a telepathic relationship with what the game needed, but this was one area where the signal kind of got.
mixed up a little bit.
We were just like, we have to make both.
And it can mean you've got to do more work, but if it makes the decision easier, we're trying to make the decision easy for everyone in the organization. And the easiest way to do that is just to make the thing, and then you have an A-B choice.
Like, it's pretty clear which one is better, right?
So...
Actually, put your hand up if you like the English.
A handful of people. Okay.
Well...
Yeah, well, I mean it's a good it's a really good. It's a really good It's a it's a really good example because to point to paint the picture a little bit clearer about what the discussion on the team Was I would say there's probably about 12 to it was a big part of the team that was engaged in this in the Skype Raw and at the time we were working really hard on the story, and we felt like we had a really great emotional journey through the first third of the game, but we were really in this process of really finding what the rest of the message in the story was going to be.
So yeah, a lot of people felt like the best way to tunnel that message to the widest number of players was most likely going to be English.
So people that were in that camp were advocating for that.
And then, of course, the other side of that argument was that it really ruins, or really takes away from the specialness of the Nibel fantasy.
And from a visual standpoint as well, you don't have to have subtitles when it's in a language.
So the art gets to be featured better.
That was the flip side.
all of us would like to not have a bunch of text on the screen, so it's like there is a trade-off by going with the universal language.
I think, you know, we've all seen the art for the game by now, and it's tremendous art, and we've got boxes and text on the screen.
There wasn't a perfect solution for this one, so we ended up... this is why it got discussed for so long.
I mean, this next video is another example.
And like, and to just put a little bit finer point on that, eventually I did, when I was hearing, especially from, you know, we're a multinational team, and when I was hearing from them, like, eh, we just don't really want the game to be English.
And I was like, oh, eh.
Eh.
Okay.
Cool.
So I'm starting to go, you know, that kind of convinced me.
The inertia starts shifting.
The decision starts to get made.
This is another great example.
The, so we have another made up language in the game that's a spirit that follows Ori around and there's also text and it's a narrative delivery.
By that time we had the whole language thing figured out.
We had a, you know, kind of an okay solution to the gibberish language.
We had an emotional vector where we could pick sad, happy, excited, and then we were randomly selecting out of that.
Well, one QA tester was like, I see the word Ori, but I don't hear Ori.
And I was like, yep, shit.
You're right.
And, you know, the dialogue's done, the actress has been at, and we're, you know, we're on to other things.
There's mixing to do. There's, like, you know.
And I couldn't shake this guy.
And I also couldn't, again, just put it away and say, we're not doing it.
It had to stay open, because I was like, I know you're right.
And yes, we had to get the actress in at the last minute.
We had to re-engineer the solution.
And wow, what a difference it makes.
Here's an example.
Oh!
In the food.
We're unboxing a whole new version of Sonic!
Sonic Polish.
It's the little things.
So let's go on to another study. So this one was this pit Gareth and I against the creative leader of the project. He was a very strong-willed individual, by the way.
So this, yeah, yeah.
Going against Thomas, our great leader, can be a challenge, but this was one where we teamed up.
My thing with this was like, when your composer is telling you that less music is required...
like the composers in here probably, you know, probably all like writing lots of notes and like making things sound big.
But this was one I was like, we need, the music needs to take a step back for this scene.
But Thomas, this is a scene where you face off with, where Ori is hiding from Kuro, the game's antagonist.
And Thomas wanted like typical boss music, like quite adventuring.
And I wanted to do something stripped back where sound was taking the lead.
And it came back to think we had to make it.
We made it twice.
And it actually wasn't that difficult because I just used one of the other adventuring music cues to demonstrate it.
And what we've done is put together a video where first you'll hear the ambient approach, and then you'll hear the adventuring approach.
So let's play that, and then we'll talk about it after.
Now the ambient approach.
Now the adventuring music.
Okay, so now it's a little hard to tell why we felt so strongly about this, but this piece is about two-thirds of the way through the game, and to that point, this is the Ori and their antagonist basically having yet another face-off, but this one's different.
Before, it was basically just Ori just trying to stay out of the way and run as fast as possible.
that wasn't really what we were doing here. We were changing it up. We were playing a bit of cat and mouse with Kuro. So with adventure music, you're motivating the character to go, go, go, go, go. Right? But when you enter this scene, you've been taught throughout the language of the game to this point that you better go, go, go, go, go.
when the player gets to the scene, they're probably going to try to run that across there as fast as possible.
But we wanted to message that this is a little bit more of a splinter cell-y kind of moment here.
Like, you're going to have to figure out a different way to go.
And this was something that, you know, like, you know, Gareth and I understand, because we understand the language of sound and music better.
in a way that the creative director could not, didn't understand, because to him we were going outside of the language, the kind of general thematic feel of the game.
But we were able to convince that, hey, look, we're making a shift here in terms of gameplay mechanic.
we need to also shift the music and the sound to approach that, to address that properly, and really make the full experience of giving the player a different thing to think about, a different way of alluding the antagonist.
So we won that battle, right?
Exactly.
We're proud of that one.
So So just to summarize my part, it's team effort.
Team effort.
I don't feel like I have to say any more about that.
Lead with the principles.
Stick firm with what you know is right, but be a sponge and be inviting.
And, you know, Sonic Polish is about, you know, the vision and the feedback and the iteration, so I'm kind of restating it there.
I didn't go into a whole lot of detail about the sound design and the choices and all that.
There's a good article about it, Making the Magical Sound of Ori and the Blind Forest, and I'm happy to answer any other questions, but for the scope of this, we really wanted to talk about the culture.
All right, so I'm going to turn it back over to Mr. Gareth.
Okay.
Hello.
As one of the things about the music, I have been on since before Ori was Ori, since when it was a prototype.
I've been part of the project for four and a half years.
And this is something I feel really, really strong about.
Indie devs, devs in general, studio devs, get your composer involved early, especially if we're dealing with story.
Stories have arcs, they have ebbs, they have flows, and these take time to develop when you're making them.
They don't just come overnight. I wish they did, but if they did, we'd be pumping out a lot more games than one every four years.
So, music is a key part of the development process, and you are only helping yourself if you get the composer on early.
Just don't expect them to work full-time unless they're in-house.
Okay, so there's three things that we were able to nail down because I was on the project early.
Style, interactivity, and palette.
And if I don't think, if I'd been on as early as I was...
We just still figure this stuff out, but figuring out early means when it comes to crunch, you can just pump out the content really quickly.
Like, doing all of this early and doing all of the experimentation early meant that when it's like, okay, now it's time to write two and a half hours of music, you can do it pretty fast.
But you can't—you can do it to a lesser extent, but it's less comfortable.
So just about the interactivity, here's some lovely press quotes about the interactive music.
The interactive soundtrack matches perfectly with the gameplay.
Or in the Binding Forest, there's a wonderfully immersive soundtrack that always feels like it reacts to what you're doing.
Coker has crafted an impeccable score, always adapting to what's on screen.
There are no layers or stems.
There's no music system of any sort.
That's partly for creative reasons, partly my choice, and also I just didn't really have the skills.
I'm not that good with Ys, and I'm not that good with Fmod, I'm just not.
So I was like, we're going to have to make it work for that reason, and also we just didn't really have any time to build anything in Unity anyway.
It ended up being that what we delivered was 125 cues in the game delivered as stereo mixes.
That's it.
And this is the important part.
The score creates the illusion of being interactive or reactive with very elaborate and relentlessly tested trigger points.
I would say I put about 500 to 1,000 hours into the game.
I didn't keep a running tab on it.
It's like that's a minimum and a maximum before it shipped.
And I think that's really important that composers play the game that they work on, especially in a single player narrative game.
And, I mean, the other thing here, all week you've probably been to various talks where you've seen stuff at the expo with incredible tech and wonderfully advanced systems for music and sound playback.
But at the end of the day, if you don't have quality content, you can have the greatest system in the world, I think, and it will not be as effective without content that's well thought out.
Sometimes it's best to not constrain a composer within a system before you even start.
So if you can get your composer on early to figure out exactly what you require in terms of an interactive music system, some games require interactive music.
This one didn't.
And, but if you're bringing a composer on to the end, you've probably already built your music system and you're, you're, you might be hamstringing your composer before they've already started writing a note.
And what you want is to give your composer the entire world and then, like, bring it down.
So here is an example with interactivity.
This is what we didn't do.
And this is regarding combat music in the game.
So this is just a crude example where we're going into a combat queue like every time Ori sees a, Ori gets near a monster and then it's playing sting when you beat the monster.
This just doesn't work.
And because imagine doing that.
How many people have played Ori in here by the way?
Okay cool.
So in Ori there is quite a lot of combat and If you had a stinger play, or just combat music, you're going in and out of combat, you know, four to five hundred times over eight to ten hours, it's going to get really annoying and gimmicky unless you've got like fifty different battle cues.
And we just came to the decision that it didn't work.
And if I could just kind of chime in there too, it also gave Gareth the ability to really build out really strong melodies over a long period of time.
the music wasn't constantly interrupting itself.
And so the player could be kind of floating along in this narrative of the music without having to be kept reminded, like, OK, now I'm fighting a thing again and a thing again and a thing again, because you fight a lot of things.
It was a really good choice.
The other thing with battle music, whenever you play games, whenever battle music plays, it's like, I need to kill something.
And in Ori, you can get through the majority of the game without killing anything.
So as a result, the decision was made to only play battle music when you absolutely have to kill something.
I think a lot of people don't realize this, especially the first time playing through, because mash x to kill something is quite satisfying.
But the game actually, once you reach a certain point in the game, there's an ability that you get that makes traversing the world much easier.
And that really encourages you more not to fight.
And I think it would have just cheapened the game so much if we put such an emphasis on combat.
The game is a platformer. It is about movement.
Combat was secondary in this game.
So, next, this is about style, and this is one for the sound people in here.
So, we generally avoided using percussion in school, because most of the percussion was supplied through Andrew's, sorry, through Auri Sounds, which Andrew created.
So, the result of this is that music is always taking a big picture view.
It's like, this is Ori and this is the environment that he's in.
Whereas, and then what's actually happening right next to Ori and what's around Ori, that's the, that's the micro view.
And we pretty much, either, pretty much for the whole duration of the game, music and sound is either doing one or the other.
And I would say for about 80% of the game, music is taking the big picture point of view.
And we found this, we discovered this early on, which again, when it comes to crunch time, it's like, yay, I don't have to write for the percussion section.
That's like a whole section I don't have to worry about, which is 25% less work.
So here's just a couple of examples of our music and sound for those who have not played Ori and the Blind Forest.
This is a video issue, not a game issue.
With the jittering.
So this is just one example, and we're in an underwater area of the game, and it's quite satisfying to just swim around it.
Yeah, there are monsters, and the sound effects are telling you monsters.
You don't need anything else to tell us that there are monsters nearby.
It's enough for the player.
Here is another example.
This is one of my favorite areas in the game.
the first time you get charged up.
Which is the last thing you'll see.
So this area, the focus of this area is on wind.
And, uh, the music has a lot of wind that would leave a lot of room for the percussion sound effects.
So that's just like a little taster of like, you know, when we're combining the music and sound, you know, take into account your sound designer, like what they might be doing.
Don't make your music in isolation, like always think about what your sound person might be doing, because it's gonna make things easier for him or her when they are getting, when they're getting down to the mixing phase.
However, one of the problems with not using percussion, so Auri is a platformer.
Platformers have constant movement and flow.
So how to create momentum in the music without using percussion?
Because percussion is one of the easiest ways to get movement in the music.
It can also be a pretty cheap way if it's used too crudely.
So we use...
an extensive amount of pulses in the music, but trying to avoid the, the cheap string ostinatos that are all over a lot of music right now. So I used a lot of tuned percussion, a lot of plucked instruments, a few synths as well, and, and, and the piano. And in all of Auri's music, you'll hear, especially the platforming music, you will always hear some kind of very subtle undulating pulse.
And on top of that, then we have long sustained sounds.
So while you're moving around, the pulses are reminding you, subconsciously, I think, that you're playing a platformer.
But the longer sustained sounds help bring you into the world and the environment.
Now, I've got a couple of examples of this.
And you're going to hear first, you're going to hear the pulse-only mix.
And then you're going to hear everything together.
So here's the first example.
And now here's the orchestra mix, full orchestra mix.
It puts the pulse quite far in the background, but over the period of a two to three hour play through, if you take the pulses out, that is felt by the player.
Here is another example.
This cue is a little bit faster and it's a little bit harder, but it's still the same concept of play.
Sorry, this clip went on a little bit long, but, and now coming up is the full mix.
It took a long time for me to figure this out.
I'm not sure I would have come up with the solution if I'd come on late.
I might have.
I might have stumbled upon it.
But I had access to the game from so early.
So I was able to try out so many things.
Like, what feels like good platform music?
I've got to add, like, this is not like my thing, this is the only way to score a platformer.
But this, I feel like, is the only way I could have scored Ori.
And I think.
Without the experimentation process at the beginning, I'm not sure I would have arrived at this, because this pulse and sustained tones combination was the result of hours and hours of play testing.
And I'll add to the huge, huge, huge, enormous thank you, Gareth, advantage to...
the sound design was that Ori is a pretty interesting piece of material, material spirit in an organic field, in a real life environment. So without, with him using so much restraint in the music example, not using so much percussion, it gave so much more space to be able to hear Ori sliding down a wood tree or walking on rocks.
which you then feel. It transports you into that. It makes you feel like you're a part of that.
It's back to that micro, macro thing. It draws you in.
Exactly. Yet the Brilliant score is still giving you everything you need emotionally, pulse-wise.
It's, I think it's a huge key as to how that synergy wrapped, intertwined.
So the last thing I wanted to talk about was our cutscene approach.
So Normally, there's a lot of ways, I guess there's a few ways you can approach cutscenes.
The worst way is you get handed a video by the developer and it comes with temp music and hey, rip off the temp.
That's not very satisfying, please don't do that.
The next is you get a cutscene and maybe there's no music, that's okay.
So on Ori...
We had storyboards, and the storyboards were given to me, and I was able to extend or shorten the storyboards, so in order, and, so I could make a piece of music that had a nice flow and arc.
This helped define exactly what the cutscenes are.
And we're going to show an example of one of the cut scenes, where I took different approaches.
And this is an example of where the music actually would have influenced the art.
Because the music ended up being done for the cut scenes first, and then the cut scenes got made.
And if we'd gone in one direction, the art would have been quite different.
So here is a cut scene where...
Kuro, the antagonist, is facing off against Ori.
It's one of the first times they meet each other in the game and here's the first approach that I took.
This is what concepting looks like by the way.
Right, that's like one approach.
It's pretty clear that's the villain, right?
And Thomas, our director, saw that and was like, this is really good, but it's the wrong message to send out.
And if that scene had been developed by artists, and it takes a lot of work to do the art for the game, and it would have been a lot of wasted work if we'd gone with that direction, because we ultimately didn't go in that direction.
It's very dark, and the art creator for the scene would have had that dark feel in mind.
So here's the mock-up for the second approach.
Now it's less obvious that Kuro is the villain.
There's obviously it's still a big moment and it's still quite scary but it's not like it's not blindingly obvious anymore.
Our villain is misunderstood and this is the first time we want to tell the player that's like it's yes Kuro is.
Kira is your antagonist, but there's a little bit more to it than that.
And then what happens is the art gets put on top on the final cut scene and it makes it easy for the artist to get in.
I hope they were inspired by the music.
And I think if we'd gone in the first direction, the scene would look a lot different than it is now.
It's still a little bit scary, but it's not all black and white and silhouetty.
It's just a lot of blue.
So here's the final with the recorded orchestra and everything put together.
All right, I'm just there.
OK.
So what I learned in this process, and you're going to get my big message today, the composer can and should be testing for things that regular QA testing cannot.
So.
And especially in a small team, you've got no one really, you've got people testing for audio, but they're testing for like, does the loop work?
There's no audio here.
Why is there a glitch here?
But who is testing the emotional flow from level one all the way to the end?
Who's responsible for that?
The composer is responsible for that.
And really, that's your number one responsibility.
And the only way, the only possible way you are going to find that out is if you play the game you're working on.
And yes, it requires a lot of hours.
I spent so many hours.
And I, you know, I didn't invoice Moon, please pay me extra money for playing your game for 500 hours.
But it's part of your job.
You've got to play the game.
And if you don't have time or if you're bad at games, go to, go find a student who is into games and they'll probably be really happy to play games for you.
So.
The big thing is you've got to play the game you're working on.
Now, don't get me wrong, there are examples, hundreds of examples, of amazing scores, I'm sure, where the composer didn't play the game.
But my feeling is that you will get your best effort, the developer will get your best effort if you are playing the game actively and looking at the grand emotional experience from A to B.
If you're doing a film, you would sit with the director and do lots of playbacks with the director, and they would tell you what they like and didn't like.
It should be the same for games.
I know I'm pretty sure that it isn't, and it's something I feel really strongly about.
All composers in the room, please play your games.
And all devs in the room, please encourage, not just your composers, I mean the sound team too.
Andrew put a lot of hours into the game, and Andrew and his team put a lot of hours into the game.
And it really does make a difference.
It is more work, but we're making games right, and it should be fun.
This is just a little note.
I said all of Auri's music was trigger-based.
We didn't really have a BPM engine, and that's something I would have liked to have done because it made transitions really difficult.
And lastly, getting on board really helped me and helped the team.
And also having the amount of input and being able to give the amount of feedback.
Makes me feel valued. And we all want to feel valued, right?
When we're, when we're working on a game, we want our opinion to feel important.
And when you are on early and you have a big say in the, in the development process, I don't feel like I'm just getting this list of stuff that I need to deliver.
I really felt like I was able to help shape the experience.
And I know Andrew felt the same way.
So, just to conclude, testing and iteration is king.
It takes time, but it's king.
Do not underestimate the audio department.
We're storytellers too, not just asset creators.
And all the feedback is valuable, no matter how much you don't like it.
Just a little quick example.
One of our artists said to me...
I don't like the piano in one of the cues.
I'm like, what do you know?
I know you don't play any musical instrument whatsoever.
But actually, that person's feedback is valuable because they don't know about music.
And I was like, well, it cost me 10 seconds to try it just to turning down the piano, and it was better.
Sometimes the person who doesn't know about music is right, too.
And Moon's thing about defining what the game is early on really helped us at the end, like when it came to crunch time.
I've rushed the ending a little bit because I really want to open it up for questions.
I know we've only got five minutes, but we are the last presentation, so hopefully they're going to let us stick around.
Okay, so if you've got questions, line up.
Otherwise, that's it from us.
All right, go for it.
I was wondering if you could tell us something about the process of implementation of the audio.
Sound, music, or both?
If you're able, both?
Andrew, you probably best.
We were fully integrated with the tools, and we were getting builds on a minute basis, getting data in the tool, implementing.
But as we said, we were using stock Unity engine.
So it was that.
Anything specific you want to ask about?
Well, how fast were you able to implement it in the game and share it with the whole team?
Instantly.
Instantly, yeah.
So, I would just drag it onto our Mii's Tortoise SDN and...
We, we, uh, I would just drag and drop WAV files, update within like 15 seconds, upload, get a good internet connection if you're doing distributed development, it's really important.
Um, but, uh, yeah, I could get feedback within like 10 minutes if I wanted to.
Um.
Yeah, that's true.
I mean, it was, you would get feedback within 20 minutes, 10, 20 minutes if, um, you put something on the Skype chat.
Thank you.
Hi, thanks so much. My question's for Gareth.
I was hoping you could talk some about your musical inspirations.
How much for this specific score, inspiration from other composers affected you?
Kind of how that worked.
It's less about, for me it's less about other composers.
I think one of the dangers when, are you a student or are you...
I'm a student.
Okay, right. So, stop listening to soundtracks.
If you like the Ori soundtrack, that's great, but when you're doing your own work, stop listening to soundtracks, because they've been influenced by temp music too, and the best thing you can do is find some weird stuff from all over the world, because that's the stuff that's going to make your work unique.
Now, once you've done that, then you can go back and listen to some soundtracks.
So I lived in Japan for three years, and I got to travel around Asia a lot.
that's a real musical treat.
Like, there's just a bunch of instruments I'd never even heard of.
I, like, look at them and I'm like, you can make a sound with that?
And I was like, OK, well, I'm going to remember this and store it in the memory bank for the future when I have a chance to do a project which might benefit from it.
And so, once I'd done that, then, to answer your question, you're tying in the weird and wonderful stuff.
And for Ori, Thomas Newman's pretty clearly an influence.
And one of my favorite composers is Michael Danner, especially his score for Life of Pi.
I think it's a masterpiece.
He did win the Oscar for it.
And if you haven't heard the Life of Pi score, please go listen to it now.
If you liked Ori's soundtrack, you will like the Life of Pi soundtrack.
So I hope that answers your question.
Yeah, thank you so much.
Hi, guys.
So the game's freaking amazing.
Thank you.
The music is beautiful.
The sound is perfect.
team. Sounds like it was a really awesome team to work with and I'm curious if at any point it felt like work.
Oh yeah, I mean, there was, yeah, I mean it's, it was, uh.
Let me first say that I have a love affair with that game.
And it's deeply personal, as much as it is a great career project.
But the struggle is real, man.
I don't know.
Development is hard, making games is hard.
And when you're, especially when you're in the indie world, you don't have a lot of the cushy environments that, you know, and the established modes of creating or structuring a project in which you can get comfortable and have some level of prediction or understanding about what your future looks like.
This game was developed without a future. I mean, really, without knowing what the next month was, and that's through four and a half years of development. To give one example, this game was supposed to be, and had been talked about, and had been developed to be a three-hour experience, all the way up until E3, prior to the year of releasing it. So we tripled the scope of the game at some point with...
at that time, 6 months left in the schedule.
Now, I've been around the block a little bit, so I kind of knew that really wasn't going to probably work, but that didn't mean that I didn't have to have my stuff done if that actually did happen.
So, yeah, there's not, you know, it wasn't a comfortable, you know, situation always.
And again...
The punk rock aspect of the development culture is that, well, hey, look, this isn't, you know, these schedules are not realistic.
The logistics here say this isn't going to work out. These are not fun conversations.
You know, this is, you know, I don't have staffing for this, budget, blah, blah, blah.
These aren't always fun conversations, but that's part of being a professional.
You know, I mean, you're going to have to do that kind of stuff.
I'm gonna chime in here.
There was a point, like at the beginning...
it was difficult because none of us have really done the distributed development thing before, like not to a game with this much ambition.
But I think at some point during the development process, yes there's always problems, but that's normal in games.
But at some point I think we all realize we might be working on something special, and then it starts to become fun.
Then all of the problems cease to matter.
Because, yeah, it sucks, like the late nights suck, the all-nighters suck, but...
We were fortunate and Moon cultivated an environment that made us feel like we were working on something special.
I mean, it was chaos at the beginning.
Now it's less chaotic. It's more organized chaos as opposed to, like, anarchy and chaos.
Yes, thank you.
Hello, thank you for that.
I think, is it, how many, how many more can we do?
Last one.
Okay, so we'll just, we'll answer this and then we'll move out to the overflow and do it out there.
Actually, I have two quick questions. Thank you for that fantastic sounding game.
My first question is about the Skype workflow that you showed.
And it seemed to be quite intense and so being in that constant flow of information, like giving feedback, getting feedback, how do you at the same time keep your creative privacy and your focus to, uh...
keep some time to create stuff.
Okay, so with the Skype stuff, like, I don't read, I've not read all 2,000 messages, half of them don't even apply to me.
I don't care what the programmers are doing.
I'll never care what the programmers are doing, as long as the game works.
I'm kidding, I'm kidding.
But what I would do, I would create, like do composing, I'm like, it's time to procrastinate.
All composers know about procrastination.
And I'll read the Skype chat.
And one of the things I started doing was like, control F, music.
Control F, sound.
Oh, it's nothing. Okay, back to work.
So, you get used to finding a way to manage the constant matrix data stream.
And what ended up happening, there was obviously too much information in Skype, but the good stuff ended up getting put into documents in Google Docs.
So, it's just like an open discussion for people to brainstorm, and then it gets organized after that.
And also, if you were missing a chat, if somebody was like, this sound sucks, blah, blah, blah, then somebody would probably private message you and say, hey, you got to check out the main chat.
Stuff's going bad.
It's going real bad.
Yeah.
Yeah.
That's good.
Hey, Gareth, I really hate your music queue.
Change it and have a discussion about it.
So I hope that answers that.
Yeah, and so thank you, everybody, for coming.
And please fill out your feedback.
And please go join us in the overflow for more questions.
Thank you.
