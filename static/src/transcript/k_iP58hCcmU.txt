Good morning, everyone. My name is Brian Francis. I'm GDC's Community Manager and a contributing editor at gamasutra.com.
If you need to refer to me in the third person, I use the pronouns he, him.
Today, for our second day of live speedruns, we're going to be running Yooka-Laylee and the Impossible Lair with game developer Chris Sutherland and runner Dave Stereo.
Chris and Dave, would you like to introduce yourselves?
Sure, I'm Chris Sutherland. I'm a director at Playtonic Games and I'm responsible for some of the character movement work as a software engineer as well in Yooka-Laylee and The Impossible Lair.
And I'm Dave Stereo. I am a live streamer. I stream primarily on Twitch.
Speedrunning is the main gig. I do everything from platformers to long-form RPGs, Pretty much any genre of game that interests me, and it is a privilege and a pleasure to be working with Playtonic once again and GDC.
Right on. Thank you both.
For the folks at home, I'd like to briefly explain why we're hosting Speedruns at GDC.
As I mentioned for those of you who were watching yesterday, speedrunning is a fascinating and thriving part of the game community that feels closely connected to the art of game development.
Runners become intimately familiar with the game's mechanical oddities, rewriting the experiences in the name of completing games faster and faster, unearthing secrets that sometimes surprise even the developers who worked on those titles.
If you saw yesterday's run, which I think is archived in Swapcart and you can go back and watch, you can see just how much you can surprise a developer, especially when They did not necessarily work on the programming or level design.
Of the games we've picked this week, Yooka-Laylee and the Impossible Lair is a game that hews closest to some of the original versions of speedrunning.
You may recall that as recently as the 90s or the early 2000s, game developers who made platformers would include rewards for players who could beat their game under a certain time.
I'm thinking of Metroid Fusion, but there's probably other games that I didn't even play that did that.
That's a practice that's evolved and spread into a number of other games.
Chris Sutherland has been working on these platformers for a long time, and we're excited to see his thoughts on what Dave Sturio does to his game today, which is to say I am here because I can't wait to see the look of horror on his face.
With that out of the way, let's get started.
Dave, please take it away.
All right. So I'm going to start in three, two, one.
I'd say, yeah, you can let me in the impossible layer within speed running.
There are different categories that you can do within each game.
We are going to be doing the 24 B's category.
So pretty much in this game.
The main goal is to save all the bees and then go to the impossible layer, which is the first and the last level of the game, actually.
It's kind of intended that you sort of fail the impossible layer first time around and then return to it later, because each bee you save allows you to take a hit of damage within the impossible layer.
It is actually possible to beat this impossible layer with 0 B's, which would be the traditional what you would call the Any% category.
But the community sort of said that that category wasn't really the most accessible to form a...
A speedrunning community on. I mean like there are people that do the the zero B category, but we kind of wanted a more accessible entry point into speedrunning this game.
So 24 B's tasks you to find uh half the amount of B's because there are 48 to find and you can either get them by completing chapters or you can um there are ones in the overworld because there's individual levels in this game as well as an overworld.
Right on. Chris, I'm going to have a question for you in just a second about what Dave just explained.
I'm going to go to the chat real quick and just give a shout out to folks like Takagura, who's saying good evening from Tokyo.
Dave has some fans here like Matt Hatchet and...
A9a, ZN2, I'm also sorry there is a leaf blower behind me, and I can also see that folks like Kyle, LeClair, Michelle, and Sean have all taken notice of my co-workers up here lying on the cat hammock.
They will not be commenting on this run. If they do, you will hear them loudly. One of them really does like to share her opinions.
Chris, before we start pulling other questions from chat, would you mind breaking down the bees system for us?
And what was sort of the original intent of the system that Dave is here to exploit?
So the idea here is that if you play through the whole game you'd get all 48 Bs and what we wanted to do was really have it so that A player could, as they progress through the game from start where they got zero Bs to where they got 48, there's effectively for each B they get there's a it makes it slightly easier to tackle the impossible layer so there's almost like well linear or roughly linear that it becomes more and more easy the more and more Bs you get. So that's what we wanted to do and that's the idea behind the impossible layer so when you go into the impossible layer The second time, not as in here, you'll have a shield with the number of bees you collected, and every time you take a hit, like Dave's done here, you would lose a bee, and that would allow you to continue. So you effectively have 48 hits if you had all bees.
to get through the lair.
So we wanted to have a system where, from the start, you could play through it and complete the whole game, like Dave said, but also, players, as they progress through the game, it becomes an easier and easier challenge, so they can opt to try out the impossible lair at any point throughout the game.
That's interesting. That's a pretty big difference from the first Yooka-Laylee game, which was a big hit on Kickstarter.
This is also kind of a different genre for Yooka-Laylee, because the first game was sort of a love letter to the...
The Banjo-Kazooie games from your studios, you know, former Rare employees.
But this one is very different.
Yeah, that's right.
Yeah, we... so...
We'd, among ourselves, had worked on Donkey Kong Country back in the day, and so we wanted to kind of take a step back and say, well, if we'd carried on building games that were 2D platformers, what would we have built? And one of the changes we wanted to make was not just having the 2D levels, but expanding things like what you can used to think of as the map world. And so what we see in Impossible Lair is the map world is effectively a 3D game in itself.
And so you have a kind of 3D exploration or a top-down exploration zone, 2.5D looking down, camera looking down.
And then from there you go into each of the 2D levels, play one of those and come out again.
So that's kind of one of the ways we wanted to make, kind of put a spin on it, make it a bit different.
And there's a number of other things we did as well.
Right on, going to chat, speaking of all that, Dave Sabada would like to just say that this game was a joy to play through and that they loved how the overworld was designed and they loved the impossible air design.
Matt Hatchett weighs in with, this game has a great soundtrack, which I can hear right now, it is great.
That's right. Music by Dave Wise and Grant Kirkhope and our own two in-house sound designers.
Chat, just a reminder, if you've got questions for Chris or Dave, we will take them. If you're a developer who wants to know more about how speedrunners do their thing, throw them in.
If you're a runner or just a person who wants to know about working on games like Yooka-Laylee and the Impossible Lair, throw them in. We will ask them. All right, Dave, you've got your first B, it looks like.
Yeah, so like each in order to complete the level, you need to break a bee free from the capsule.
So around halfway through that level, I actually grabbed a snail shell that you can shoot out of Vyuka's mouth.
And I was actually able to snipe it from, you know, pretty far away to end the level early.
Yeah.
Yeah, so that's bee number one.
Like I said, you can get bees from either completing levels or solving overworld puzzles or skipping overworld puzzles.
And I'm going to be grabbing all of the overworld bees that are available.
And we're actually going to be doing some very unintended well intended.
All right. Yeah, this is all unintended.
Or actually, I think the height of these fence posts are deliberate so that you can kind of kind of sneak around.
Oh no.
Also, I'm doing some unintended things here where I...
And this, what's this?
See, this is like not expected at all.
Yeah, so you can ground pound on certain slopes, which allows you to get a roll up top.
And right now we went from the Chapter 2 area to the Chapter 17 area, but except we're going to kind of go out of here, and we're going to go to the Chapter 10 area.
And this is because there are things called paywalls, and...
I actually gotta make sure that I don't fall out of bounds here or accidentally hit the water when I don't want to.
So, there's five coins in each level that allow you to get these paywalls that allow you to open up different areas of the world map.
I need to do something pretty precise here.
Fall into another body of water so I can swim underground.
But this is so that we can skip all of the paywalls.
This is this giant skip that I'm doing so I don't have to collect any coins in any levels and I don't have to watch any cutscenes pertaining to opening the paywalls.
In this 24 Vs run, there used to be one paywall that we needed to open to get into this desert area, but now we no longer have to do that.
Also.
I can mess this up to where I start infinitely flying up into the sky of the game and you will infinitely fly forever.
So I need to make sure that I can start this ascension where because I need to reach some loading zones that are above me right now.
So let's you'll start to see the camera panning up in a little bit.
Right now.
Yeah, right now, and then if I can get into this loading zone...
There we go! Alright, good. I didn't fly away infinitely.
So now we're in...
It's a trigger, a loading trigger, just where that door is by rising up into it.
Yeah!
And now we're gonna skip this whole, uh...
...see-saw puzzle area...
...by getting enough height on this guy...
and then just kind of getting up there.
So you're not expected to be able to jump over there.
You're supposed to go around the long way, but this works, I guess.
And this level actually has a pretty insane skip where we're going to sort of utilize the speed that ropes give you that allows us to get so much speed that we can clip out of the boundaries of the level. And we believe that it is framerate dependent, so I'm actually going to be enabling v-sync to sort of modify the framerate that a lot makes this trick a lot easier. And that's going to be right here on this rope.
We're going to intersect it right at the top when it's swinging.
And if I can time a jump, I will fly to the right side of the screen.
This trick is pretty precise, pretty difficult.
And the speed that you get from the rope is variable.
So I'm going to have to adjust on the fly.
This might take me a few tries, but it's worth it when we get it.
Well, we while we get the while we get this try going, I mean, for Chris.
Oh, there we go.
Yeah, it kind of took an unintentional death, but...
I gotcha. Dave, thanks for the insights.
We're going to come back to you in a bit for more.
I can talk about that particular exploit there.
I mean, this is basically an hour of being beaten up for all the things we got wrong.
But that one in particular is my fault.
See, that's an interesting one, because as a developer, what I did there was the ropes, and you move up and down them.
They don't actually check for the solid collision at the top.
There's just a point where it says you got to the top of the rope.
But of course, if you're a designer, you place the rope maybe slightly inside something.
And I think we, you know, we had the ability to set how far you can go up the rope.
There is obviously a weak point in some ropes if they're placed not quite right, then you can, when you jump off the rope, which you go with a bit of speed, you can jump, end up inside a solid collider, which then the physics system will then imbue you with some enormous extra speed on top of the speed you've got to try and force you out because you're Quite far in it. And I think that's what's throwing Dave out.
And so, yeah, it's obviously those things combined, which will then fire Dave off at some super speed and then across to the other side of the map.
This is actually the hardest trick in the game and kind of throwing me for a loop here, but we're going to get it. And like I said, it's totally worth it when we actually get this.
Yeah, this is interesting. This is something I hadn't really paid attention to because I'm mostly used to watching GDQ speedruns where you know, you sort of notice, like, oh, this trick's hard.
Oh, we got it in one go because they're really like trying their best for the run.
But not that you're not trying your best, but as I was watching our Skyrim run yesterday, I was like, oh, wow.
Like, it's interesting that because you've shaved time off elsewhere by, you know, doing so many skips, like these become the time consuming activities.
We are going to, while you work on that Dave, we are going to go to chat so that you can focus on this while Chris and I discuss things.
Dave Sabato would like to know, blending the 3D map world gameplay with the 2D levels was really cool. Any plans or ideas around further exploring that concept?
Um, nothing specific that we're announcing yet, but yeah, I mean we liked it as well. We liked the fact that there's those two sets of things. It meant actually that there was a bit more work than we originally thought. So here, Dave's managed to do this now. Yeah, what he's done is he's he's projected himself outside of the map.
and into an area where there was some water. And what he's using here is another exploit, again related to the way we program these some of these things. So rather than saying a volume of water where we display it as like you might say there's a box around and say this is a volume of water, the way we do that is we mark up the the top and bottom of an area of water by saying this is the entry point. And so if you to get into the water you have to pass through the entry point.
And so if you somehow bypass the entry and exit point whilst you're still underwater, you can appear to the game like you're still underwater, which means you can effectively swim in the air. And that's what Dave's been doing there as an exploit.
Um, next question for Chris while Dave just rampages.
Sorry, I don't know if I answered the last word question, but uh...
No, no, no, it was a, it was sort of a yes or no.
Um, question for Chris, what kind of QA testing goes uh into game dev, uh, games like this?
Um, do you look, intentionally look for breaks that speedrunners were employing, or do you intentionally put them as easter eggs for speedrunners to find?
That's a great question because you might look at this and think that we didn't have a QA team, but in actual fact what happens is there was a lot of QA on this and a lot of the things that, maybe not all, but some of the things you'll see today as exploits, we might have seen those come in in a bug, but we kind of take a view on them that If it's something that, for the normal player, isn't going to encounter and it isn't going to spoil the game if it's not going to wipe their save, if it's something that's quite unusual, it's quite hard to get, and yet it gets them some excitement and makes the game more interesting in a way.
Then we'll leave that in, because we know that speedrunners will like to find it.
I know you're probably the same as me, if you find something in a game, you think, yes, I got around the game because they weren't expecting me to do that.
And actually, that's a great thing to have.
So we do actually leave in a lot of these things, and even when they're pointed out sometimes, it's tempting as a programmer.
You know, you look at it and you think, I should fix that.
And we've had to say a few times, let's not fix that.
People have been keen to fix things.
And we've had to say, no, don't fix those.
In fact, I've been about to fix things.
And people in the team who are speedrunning fans have said to me, please don't fix this.
This will spoil the speedrunning experience.
So we've actually held back deliberately.
Josh Good would like to know what type of level design influences did the team pull from?
They've heard a lot of comparisons to Donkey Kong Country, Tropical Freeze, brought up due to Impossible Lair's use of contextualizing platforms.
Yeah, so that was definitely an influence and we kind of looked at all the 3D platformers that were out there at the time like Rayman and also back to games that we worked on in the past like DKC and we tried to kind of...
pick the bits that we liked from those and say how would that influence our design of the game and how would we approach, you know, the same problems that they set up, how would we take an approach on that. So that was just one of the things we've done which we'll see later is when you play each of the levels here it's actually got an alternate state.
There's a slight spoiler but it's a big one.
So you'll play through a level once and then you'll re-encounter it.
You'll be at some kind of transformation you'll make to that level where you'll be able to place it underwater or maybe it's inverted in a different way.
And essentially it's a different level but...
From the player's perspective, it's had something different done to it.
So, yeah, so having that, again, that's another twist on what the expected norm is on 2D platformers.
So you go back into a level and you see the familiar bits, but it's all really quite a bit different.
It is like playing a new level.
So there's 20 base levels and they are all got alternate states.
It's fun, we talked about remixing earlier.
I think that may have been before the show, but the remix, like kind of the remix factor, you know, you as devs remix your own work and then speedrunners are further remixing your work for sort of the purpose of other people's entertainment.
That's right, it's very much like that.
We know, I look at the stuff that Dave's doing here and he's playing a lot of these levels completely out of sequence because that's...
It's a game that's both fast but also fun to watch.
And it is like somebody's taking your game and it's a bit like they've kind of put it on the decks and they've given it a bit of a remix and they've kind of gone, actually, the way you set it up, that wasn't as fun as doing it like this.
And, you know, it's almost like a meta game.
The Speed Ring is like a meta game on top of everything else.
I kind of almost think of it as like, you know, when you're in a city and you know all the streets and lanes and the sidewalks and then...
All of a sudden, you know, there's an elite group of people who can get really up high on the top, and these people who do parkour can navigate the city in a completely different way.
And that's what we're seeing here, is that Dave's now on a place where he probably didn't expect anybody to go up and stand. And yeah, it's quite amazing the kind of things people are doing.
Dave, I know you're involved with GDQ. The next time you do GDQ, please make shouting parkour, parkour, parkour, parkour, parkour, a donation tier for one of your runs.
You got it.
Dave, we do have a question from chat for you from Kyle LeClair. Are there any specific games or genres that you feel are a bit difficult when it comes to speedrunning but you'd like to see more of?
Oh, anything in particular that I would like to see that is difficult?
So like I kind of said this in the intro, but like I'm into so many different genres of speedrunning, all for different reasons.
Like I love platformers because it's highly execution based.
And, you know, I guess not a whole lot of like randomness.
But I also speedrun long form RPGs, you know, like the 100 hour RPGs that you can beat in a single sitting.
Mm hmm.
And it.
It requires different kinds of skills, and that's what I like about it.
But for genres that I feel like need more...
Hmm...
I am actually not entirely sure because you find that speedrunning communities sort of pop up within all genres. Like what I like to say is, you know, if anybody comes in chat and ever asks like, hey, um Is there a speedrun of this game?
My answer is like, well, can you beat it?
Because if you can beat it, there is a speedrun of it.
And one thing you really like to see is, you know, devs like Playtonic, where like they will leave in things for, you know, they're like, hey, speedrunners might find this useful.
That is super appreciated because there are entire communities that will form around these styles of play.
And yeah, it's just super appreciated.
Yeah, I do recall that when I did an interview with some devs, like, I believe it was Ryan Clark.
I could be wrong. It was him or the Axiom Verge, Thomas Happ.
There was talk about how, you know, working with speedrunners helps them do some bug testing, but also it led to them leaving in things like in-game timers to help runners sort of do run their timers and modify their timers based on the need in the game.
But that was sort of the extent of what I heard for like, oh, how can devs help speedrunners? And the runners are just like, uh...
Bubbles Del Fuego had a great comment yesterday which is like, you know, it's sort of like you can't say what makes a game good for speedrunning.
It's like saying, how do you make a good movie? You just make a good movie.
Which I thought was helpful.
Real quick, Michael Gibbs in chat would like to know, Chris, how is your experience developing Yooka-Laylee different from that of Donkey Kong Country, but with modern development tools?
Oh yeah, that's a great question because...
I think one of the few things I noticed, one of them is we're building with an engine this time, so we're using the Unity engine here, and one of the things we had was, whereas back in Donkey Kong Country era, you know, a lot of the work was done by the engineer who was decoding systems and puzzles and enemies, whereas there was a limited amount of tooling for the designers, whereas now a lot of the game is built from designers, so we've got a design team who put together all these levels, and we kind of built the component parts for them to do that.
So, you know, whereas a lot of it relied on, you know, and the last phase of development was, used to be just solely on Engineers and everybody else could go home and we'd just be there trying to fix everything.
Now it's actually the design team who are actually fixing as much as the engineering team.
So they're going in and fixing bugs and changing things around, or sometimes they'll move things around just to stop a bug from happening.
But that's been great from putting so much pressure on the engineering team.
It's also meant that because they have hands-on time with development, they can iterate with things so much quicker than having to go back and forth to an engineer and go, how can you do this here? Can you do this? Can you change this?
And they can make those changes themselves now.
Dave, you're doing actually something interesting here that I wanted to highlight, which is that speedrunning isn't just, you know, breaking the game, it is also...
Knowing the timing of how some of these games work like platformers, having it down to a T so that you can sort of do what we're watching now, which is just, this would be beautiful ukulele gameplay, even if you weren't ground stomping onto ledges back in the overworld.
Um, how do you sort of feel as a runner about sort of like the two different kinds of techniques, you know, breaking it, you know, looking for those exploits and versus just practicing sort of these, these moments in order to optimize your run.
Yeah, so like, um, I kind of unintentionally duped there, but you know, we get to hear more of the awesome song.
Um, so, I, the one thing that I really like about Yooka-Laylee and the Impossible Era's speedrun is, uh, you know, like, like you said, there are the mixtures of, uh, like the, the platforming elements where it's just pure movement and figuring out, like, okay, how do you utilize the enemy placement and whatnot?
Like, cause all of the enemy placement is very deliberate to be able to, uh, You know, to do some of these quick movements and I'm sorry.
What was the original question?
Like, how do I balance?
How do you feel about, like, you know, sort of the two skills you have to master, you know, finding exploits and also mastering Twitch, these Twitch skills?
Oh, yeah. Like, you know, we sort of talked about this in the pre-show, but like I love discovering what is capable within the software.
Like it's almost like discovering like the new laws of the universe.
So like.
Like, that was the thing that fascinated me with speedrunning at the beginning.
Wasn't so much the moment-to-moment platforming, but just like, discovering like, you know, some of the crazy glitches that can be achieved within the software.
So it sort of stemmed from the love of that, and then when you get into the actual practice of speedrunning, you get kind of addicted to like the fluid movement and whatnot.
And yeah, so honestly, it's sort of like a 50-50.
But yeah, to me, that's what makes an awesome speed game is it is conceptually awesome, whether it be with strategies or glitches, and then just mechanically it is fluid and just feels good to play. Before I get back to questions from chat, Chris, I have a question for you. Something I've noticed watching the parts of speedruns, especially in this game where Players are doing things a little more conventionally, is that how often they will deliberately take damage from enemies, which are supposed to be a punishment, they're supposed to slow down the flow of a run and work against the ways that you want players to navigate a space.
But for runners, they're a way to cancel frames, they're a way to get past a certain point efficiently, without having to wait for an enemy cycle to clear, an animation cycle, excuse me.
What are your thoughts about that, watching? I mean, like, I know it's sort of your own philosophy that any way players get through levels is good, but, um, I'm curious about your thoughts watching them sort of go against your design, your core design.
rules.
and she's flying around and you've got an opportunity to try and catch her, which is a feature we added to try and give some kind of panic in the player, because you've then got to make a strategy choice.
You've got to decide, do I carry on with Yuka and maybe find a bell in which I can use to regain Lely, or do I risk trying to chase after Lely and try and pick her back up again?
And so...
You can take a hit, lose Leli, and then carry on.
So you can go, in that sense, you can barge your way through something.
If you're confident enough in what the next steps are, you can do something like that.
Can I also touch on that a little bit?
Sure.
Like the whole damage boosting?
But first, I actually wanted to ask, Chris, was this known about that you could do this here to get up there like that?
I don't know that that was, but it looks like if we did, we would definitely have left that in.
But that's an interesting one, that's a side effect of what you've done there is there's a drawbridge that comes up there, but you've...
As you're approaching, going over the drawbridge, you've turned around, fired the thing from your mouth onto the switch, which has triggered the switch, and because the drawbridge is made from a physics object in the game, then you're able to stand on the end of the drawbridge as it lifted up, and then by sitting on the top of that drawbridge, you're then able to jump up onto a place where it looks like you wouldn't be able to get to otherwise.
Yeah, so like I guess I should explain, uh, the there are secret exits in some of these levels, and that's how you're supposed to get some of these overworld bees is find the secret exit within a level, except we're actually not going to touch a single secret exit, unfortunately, but they are fun to find. But going back to what we were saying about damage boosting, that's one thing I really like about the categories of this game is, uh, You know, if you're doing 24 B's or 48 B's for, uh, Yooka-Laylee, the impossible layer, uh, you have that many or that much opportunities for damage boosting within the impossible layer to kind of just like, you know, go past all the hazards and whatnot and not really care because you have many hits to deal with.
Um, I like 24 B's in particular because it becomes a big risk reward of, uh, Like, do you want to go for damage boosts?
Or do you want to save bees for the end?
Also, this is a very cool little glitch that we have here where we're gonna do another air swim.
Gonna get out of bounds and uh...
There are a lot of death barriers though, so I kind of need to swim out far here.
And I'm swimming in a very particular manner to avoid all of the death barriers.
I use these kind of lines on my left side to kind of gauge how far I am before I start turning inwards towards the level.
But yeah, this one's really cool. I like this air swim.
I mean, these must take a lot of trial and error to find, because like you said, if you go to the wrong place, then you might just die.
Yeah, you need to like figure out how to navigate all around it.
And yeah, it's definitely trial and error to it.
And then like coming up with visual cues when you're like seemingly in the void.
Yeah.
I will say, as an observer of this, I love how whenever Dave exits the level, A, I like suddenly get an appreciation for like Yooka's animation, his swimming animation, like because there's nothing but his little shimmying body, and also some of the background assets, you know, seeing how they're staged in a 2D game like this with this 3D.
I'm like, oh, that's so pretty, and like in a way I couldn't see before.
So that's just a peanut gallery comment for sure.
Chris, a question from Josh Good. Hey, Josh.
Loved having you in our run yesterday too.
Did the team's engineers end up creating any custom tools for art and design, i.e. was there a custom pipeline for managing game models, textures, etc.?
I guess we rely a lot on the Unity engine but we built on top of that so from the designer side of things they use a visual scripting tool which we use NodeCanvas for that but we also built upon NodeCanvas so we did that in the first game we built upon it again in this one when we have our own custom nodes and Basically, the things that they need to do a lot, and often we'll go and build something custom for that.
So we have that running as well as standard code as well.
That makes sense.
Kyle LeClair would like to say that they find it interesting that a good chunk of early cheat codes were tools used for playtesting purposes to help make things easier, and they were left in afterwards.
And now developers leave in bugs instead of making it more challenging for speedrunners to conquer.
Yeah, that's right. Yeah, I mean, I think there's been yeah, there probably have been games where people have left in Skip codes and all sorts of things by mistake. Yeah Easily done probably from I don't know if you remember anything from rare I do recall that I think I think donkey kong country had some kind of I forget if it was only accessible through um you know, game gear and those old cheat tools.
I seem to remember, maybe the first version, I think it was a very early NES game that Captain Skyhawk, I think, had a cheat code left in where you could maybe select the level.
If I recall correctly, it may have only been the first version. Of course, then you couldn't update things online, but there would be a subsequent ROM that came out.
Yeah, I do recall, I recall at a certain point, because I grew up in the Game Boy era, when those codes were, you know, it's like, Oh, we're going to give them to players.
Cause that's how you, once you beat the level or in the code, that's how you can get back to that level if you die from the early game boy era and the save states were implemented.
But yeah, I Kyle, I appreciate your comment, like linking, you know, those two little weird oddities of, of, of game development history.
Dave, would you be able to update us on where you're heading next and what we should expect?
Yeah, so you kind of see me constantly fast traveling back to chapters one and two.
This is because since we actually never use any of the traditional paywalls, the areas of the world map don't open up on my map. So I actually only have fast travel for chapters one and two throughout the game. So I constantly need to re-reference chapters one and two. Um, But back in the Chapter 17 area, we talk to a frog that opens up the alternate version of Chapter 1, which I actually thought that was pretty cool.
So, like, you get introduced to alternate chapters, I believe, in Chapter 3.
And, um, just the fact that the first chapter's alternate version is unlocked towards, like, the later parts of the game, I thought that was really cool, because you're kind of left wondering throughout the entire game, like, I'm going to be doing a video on how to get this alternate chapter 1.
And then you're just rewarded at the end of the game, or end-ish part.
But yeah, so we've... I believe we're at 13 Bs now.
This is going to be our 14th one that we're getting.
So we're about halfway there.
After that, I was just going to chip in.
I love that when we're calmly discussing the rules of these games, we've been so...
So normally saying, oh, we're going to gather some bees today.
Like it's a perfectly normal thing.
Oh, you know, we talked to a frog back there and he did this for us.
Yes, because talking to frog is something we all do in our everyday lives.
And if you if you are talking to frogs, I don't object.
Just, you know, maybe let the rest of us know.
I mean, what are their secrets?
Do they know things? Let's find out.
Chris, do you have any?
This is just a question for me, you know, watching Dave like sort of get through this part of the run.
As an engineer, are there any observations you've had about this process and some of the exploits we've seen about how they intersect with your work?
Yeah, I mean, one of the things I see a lot is Dave using the ground pound jump.
So you can, when you do a buddy slam, we call it, which is like a ground pound move, when you hit the ground, you can trigger into the fast roll.
And we added that move in, but when...
What we didn't realize actually until a few weeks after we put it in, is that because when you're in a roll you can jump, then the consequence is you ground pound, you go into a very fast roll, and you can also press jump at the same time, and then you'll actually have a very large and fast forwards jump. And Dave uses that quite a lot. You'll see him ground pound, jump, and get like there's a stair, he had a great boost of speed, and he can use that. Although we don't actually rely on that.
being used I don't think in any of the areas of the game or hardly any. It's something that players can, we left it in and because one of the things we thought oh this is really cool it just seemed a shame to take it out and also it wouldn't make sense to take it out because because you can jump from a roll and it wouldn't make sense to you to not be able to jump at that point so it felt like we had to leave that in.
Yeah, I think it's interesting that there's sort of an upper boundary for even though your movement system is capable, your traversal system is capable of such speeds, but the level design isn't built around it, versus if you compare to games like Celeste.
I don't know much about Celeste speedruns, but I do know that just playing that game as a normal player was, oh my goodness, like, trying to achieve some of the physical skills needed to finish that game was, it was something else.
Yeah, I love that you brought up Celeste because I am actually I have had I have like you know maybe 2000 hours like I I've speedrun Celeste a lot and that is another game where like I just the casual play is so different than than the speedrun but yeah like it's designed the entire way for you to play both ways. But for Yooka, the whole like it was really cool in like the early days of speedrunning this game when it first came out because like you know we didn't even know about the buddy slam jump roll or like you know using the buddy slam to get high speeds and then then it was like So like if you buddy slam and you just continue to just normal roll and you don't chain jumps in with it, you will actually kind of default to a sort of slower speed.
So like just just the act of like discovering the fact that you need to chain jumps with the the buddy slam roll and like just sort of how that that reroutes your muscle memory for the levels and whatnot.
It was a really cool process to to practice it and get down.
That makes sense.
That makes sense.
We're gonna dive, we're gonna scroll back through chat for a question from Matt Hatchet.
This may be a little bit outside your purview Chris, but, did Playtonic have any particular inspiration for Capital B?
He gives Matt serious guru vibes, I assume that he's from Despicable Me.
So, um, that character's created by Steve Mayles, who also created Banjo-Kazooie.
So, um, he's got a pedigree of creating a great set of characters.
So, um, I don't know what was in Steve's mind when he created him.
and maybe you've been watching too much of that film but I think it was more that he wanted to create something that was intimidating and was obviously a bee and so I think you know that was his intent. There's also the sense that well from the last game Capital B was a kind of a large It was a big boss in the sense that he's big, and he's a boss, but he's also a boss in terms of cooperation as well as a boss in terms of games.
So he had to fit all those ideas into one.
So yeah, that's how that came together.
But I don't know exactly where the source of his inspiration was.
Gotcha. I assume Illumination will not come calling about any particular link.
Chris Joshgood is back with another question.
What was the weirdest or most intriguing bug that the team encountered during development?
Oh, um...
I think we're probably seeing some of them today.
Some of these ones where you jump and you get propelled to the other side of the map and then you're suddenly underwater, those ones are pretty weird.
I think those ones, anything like that where there's physics involved, those can be strange ones. If there's genuine bugs, they're often the ones that are trickiest to work out because there's some weird physics interaction as there's two...
Objects that have been placed too close together and you get stuck between them or something Um, so yeah, those those are the kind of weirdest ones that I can remember Um, uh for my part, uh, chris I would like to ask kind of kind of a question with the engineer games engineering and aesthetics kind of lineup Um, both ukulele games have this incredibly polished sort of very cute Uh aesthetic, um that that goes hand in hand with you know, this very precise 2D platforming, 3D for the last game, 2D for this one.
As an engineer, while the art team is working on these very pleasant and good-feeling animations and sound effects, what is sort of your role in making the game feel, the interactions you have on the controller, sort of line up with this sensation?
Because I know that's sort of a thing that crops up, especially when designing movement or jump reactions, etc.
Yeah there's a lot of things that go on in terms of, you know, I'm working with a team of people who is probably, so we've got an artist and a designer as well and we'll work together to determine what the correct visual is and sometimes we'll put something in and it will look good but it won't play good. So you might have, you can, I mean the great example of this, common example of this is if you, when you jump it makes sense from a pure animation purpose that you would say, oh well he'll squat down first then he'll jump but obviously from a If player experience point of view, if your character had to wait before they took off, then that would be quite frustrating.
It might look great because they'd be crouched down, but for this kind of game, it would be quite frustrating.
So you have to jump immediately, which means you kind of have to do...
You might have to modify the animation to make it look like he is coming from a compressed position rather than actually he has been coming from a compressed position.
So that's one example, but there's a lot of those kind of little things where you have to tweak the way you do the animation because it's just better for the player.
And what's interesting is there might be another game where, you know, the crouching is a good mechanic, you know, but it's just not a fast game where you're trying to aim where you're jumping or something.
But.
But that's where the animation and the gameplay might line up more, but not for this game.
Let me see here. Folks in chat, we are still taking your questions and comments.
If you'd like to know more about breaking games, if you'd like to know more about making games, we have two folks here who are excellent at each of those.
Let me see, what do I want to know more about?
Uh, Dave is there, or uh, not Dave, sorry, Chris, is there anything about our current uh, state of the run that has you, uh...
Is there anything you're sort of going to be taking back to the office and going, oh my God, I didn't fully realize this, but after this run.
This level is interesting.
I mean, I love the music on this level.
It's one of my favorite pieces of music.
But the thing about this level is it's actually really difficult.
Well, I guess that's through all of them.
But this one in particular is because it throws at you a lot of these little red minions or little minions characters, which are you can't really see them here.
But when you play it normally, they're just.
It seems to be an endless number of them always coming towards you.
But Dave's just going so fast, he's just...
He's blitzing through and they're not even getting a chance to catch up.
So you can hardly see any.
And there's one there actually.
No, I got him!
So those ones, yeah.
And those characters you can't roll into, the reason they're challenging, because they've got big chompy mouths.
You have to jump on them or hit them from the behind.
And I just want to say it's kind of funny that, you know, this level is fairly difficult because it pays homage to Donkey Kong Country 2 because it's called Wild Webwoods and Webwoods in DKC2 is a notoriously difficult stage.
I also speed ran Donkey Kong Country 2 for a hot minute.
It's my favorite game in the trilogy and yeah, it's true to the Webwoods name.
um dave uh michael gibbs would like to know uh what is the most challenging here dave's gonna do something he's just i think he's trying to get that um there's a b that's in the overworld he's trying he's trying to get it by throwing a bomb across let's see it that which is normally you'd have to get there via the secret exit i think but he's trying to just do it by throwing this bomb across let's see if you can do it he's probably gonna be able to who am i kidding there we go that's semi-precise but we'll end up getting it Um, before I get back to Michael's question, I just want to say something I've been paying attention to this run is how each of the bees have like a slightly different art model and how they live. I think we saw lovely and lively be an, you know, variation on Leslie Anne, you know, one of the, that's from a name more common in the UK.
Yeah, so the names of the, so the bees that you collect, they're actually named, there's, of the 48, there's some of them are the dev team, and some of them are, actually some of them we've ran in competition for people to become part of the game, and they could become a bee, so I think there's a three or six, I can't remember the exact number.
of people who follow us on Twitter and we were able to, they entered the competition and they were able to get chosen to be in the game. So that was... As bees. As bees, yeah. Yeah. We're gonna get back to Michael Gibbs question. Dave, what is the most challenging exploit in any game that you've performed?
Oh, what is the most challenge?
Oh, OK.
Uh, are we going to have to stop the run and go play a whole other game?
So you can demonstrate?
I'm going to have to like, think about that.
But OK, so one of the things that I like to tell people about is like, OK, it's a good game like Final Fantasy seven, a game where you think the fights you get into are random.
But like, what if I told you they weren't actually random?
And that is manipulated across the entire seven and a half hours of the run.
And it's based on perfect movement by walking or running, because you can walk or run steps, and it affects your danger value differently.
So like, needing to have perfect movement for seven and a half hours is...
Pretty challenging. Like, I love the game-long manipulations.
Uh, those are pretty challenging and, uh, very satisfying to hold.
Um, but, and that's just one aspect of it, where, like, we use it to so, like, to such an extent that it's kind of hard to explain. But, like, let's say you have...
a fight that's supposed to initiate on a field, but if you were to initiate a quote-unquote random encounter on the exact frame in which that that story fight happens, the game kind of freaks out and cancels both fights out. So like if you force random encounters on exact frames running at a 30 fps game, you can do other skips with it. Like just that level of precision with Certain glitches and skips is really... that's what I like.
It's also interesting because those are not, you talk about precision and all that, and those are not games where movement precision is normally a skill that the developers are trying to orient around, but you know, that's what speedrunning does, changes up the skills.
Dave, follow up question on that before I go back to chat.
Are there any particular, I know there's a lot of like RNG sort of exploits, you know, where you're sort of hoping that the game poops out the right number in order for you to get something done at a record time, otherwise you have to do a reset or try to re-trigger the thing. Are there any of those that stand out to you in the games you run?
Yeah, so particularly in like RPG speed runs, You know, that's that's the whole name of the game.
I like to say that RNG is not the main decider.
Like RNG kind of opens the door, but execution allows you to walk through it, is what I like to say.
So things like damage rolls or if there's like certain drops that are certain percentages or like, oh, I need this.
person to target this character that I have and it's a one third chance.
I will say, though, in Yooka-Laylee, it is very nice because and I think Chris can kind of talk about this a little bit more, but like the actors and stuff, they sort of load in when you get closer to them.
So like it's a very consistent game and all of the the movements are like the same and predictable.
And it's really nice for a platformer to have minimal RNG.
Yeah that's right, so we tried to make it, I think we were talking earlier, so that when you play you can play through and there's a kind of certain smoothness and if you know the exact timing you can get through first time. In order to do that it means that Those things have to be ready in that pattern when you encounter them and so like some of them will activate if there's a set of them that you need to get through in a particular sequence that set when the first one comes on screen that whole set will activate with those um otherwise it's generally when they come on screen but if you If you didn't do that, or you didn't have a whole level-based synchronicity, then it would be a kind of weird experience, because every time you play it, it would be different, and so it wouldn't be consistent. And so we wanted it to be consistent, and feel like, oh, I can just one more go, and I can get that done. Otherwise, if it's random, you just feel like you're not quite sure whether, you know, one time it was more difficult than another, it doesn't make sense. Gotcha.
Tian Gerber would like to say in chat that they like the direction that Playtonic took in The Impossible Lair compared to the original game.
They're a sucker for Donkey Kong Country type platformers.
And they would like to ask if you're looking at any other genres or sub-genres for sequels and spin-offs, but as far as I know you haven't announced anything yet.
So I'll tweak the question to be Chris, is there another genre of game from either your past dev experience or a genre you particularly enjoy playing yourself?
that you'd love to play around in, hypothetically.
We don't need to, you know, pretend that we're confirming anything here.
Yeah, I mean, I suppose there's an...
I mean, I've always been a fan of platformer games anyway, 3D and 2D, so that's kind of always a draw for me.
But I mean, I think there's no...
I wouldn't say there's any particular area we'd not go into.
I mean, we're not probably going to bring out a gritty shooter next.
I wouldn't have thought.
Who knows?
Cut to one year from now and I'll be saying yes, gritty shooter is now released. Ukulele gritty shooter is now grey-green graphics.
Yeah, that's that could be next year.
No, I think I mean, I'm kind of happy on most games, so I think there isn't anyone that we would, in general, stay away from.
So, it could be anything really.
In my, uh, I'll, I'll, I'll, uh, I'll help nudge the question along.
In my, in my, in my past experience, I've gotten to work on 4X strategy games.
And, uh, you know, I would love to work on something in the RTS genre, maybe because I grew up on those games and some of the stories in those games.
Uh, Dave, you're a speed runner.
If there's any particular game genre you could like contribute to as like, as like working on in some capacity, I don't know what other, what you do outside of speed running, but, uh, I'm just curious what, what genre you'd love to work on.
I would like.
Something that's sort of like I've been sort of craving a game like this that molds like a rhythm game, you know, kind of like a guitar hero with maybe Maybe like a a Zelda or a platformer. Um, kind of we're like we're like the battle system I mean like not not sort of like Crypt of the Necrodancer style because I mean that is an amazing game that blends like You know Zelda and uh, uh, like rhythm game aspects, but like I sort of want like I guess maybe like a turn-based combat game that or a platformer that uses like sort of bursts of rhythm game challenges as its combat. That's sort of like an idea that I've had just like bouncing around in my head. Like, I don't know. It's a good answer. Yeah.
I love how Dave can talk and play this game at this speed.
I can't even play this game at this speed, let alone talk at the same time.
That's the secret when I throw questions to Dave, is that I'm trying to see how much I can make him think and move his hands at the same time.
So far, the answer is mostly pretty well.
Um, let me see here.
Uh, we've got about 20 minutes left in the session, which means we must be coming near the end of the run-ish.
Uh...
Roger that. So Dave has thankfully confirmed that.
Just a reminder for folks watching, if you have any more questions for Chris and Dave, feel free to ask them.
Uh, you know, I'd say for any developers in the crowd, if there's any particular problems you've had while working on your games and you're curious how Chris would solve them, throw them at us. I'd love to ask those kinds of questions.
Um, uh, Chris, I have, we can swing back.
QA is sort of the, the specter that hangs over, uh, the speed running genres head, because unfortunately sometimes you'll, you'll watch you and go.
And I'm sorry to say, sometimes you'll just hear like, Oh, lazy devs are hot.
QA missed that.
And even for like the best intentioned runners, you know, sometimes it just slips out and I've, I've heard it, but like, well, the truth is like, you know, A making games is already hard.
And B, you know, so many bugs that ship in games are known by the developers and fixes just didn't fit for one reason or another.
Oh, I guess we're going up against Capital Lee.
Chris, what are sort of your, like, from a resource management standpoint, how, with the millions of bugs that can pop up because you are mishmashing code and art and animation together, like, sort of how does Playtonic prioritize bug fixing and how does it sort of manage, you know, what could be like an unmanageable pass?
Yeah, so I mean it is the case that games do ship with bugs that are known and the reason is often that sometimes the impact on most users is quite small. If you think if you've got a load of bugs and you don't generally end up fixing all of them, that's the actual reality. People might think If you're not a game developer, you may think otherwise and think, we'll just fix them all.
But to fix them all, your game would be taking months and months longer.
Well, in reality, you don't tend to fix things if they are very, some of them very minor, obviously.
Sometimes things were, even if they're more significant, if they're...
If you have to go to a particularly unusual area or somewhere, nobody will ever go.
And as long as it's not a game-breaking experience, then sometimes those are left in.
And, you know, like we talked about before, if they're sometimes left, we'll leave them in if it means the speedrunning community would benefit from them as well.
I was trying to make sure that the casual user doesn't encounter them and doesn't feel that the game is broken as a result.
If that's the case, then we fix it.
Otherwise, if somebody feels good as a result of finding a bug, then there's an element of thinking, well, maybe we should leave this in.
Roger that. I was actually going to follow that up on, because you've been in game development so long, you've sort of seen the cert requirements for consoles change in so many ways over the years.
And especially with another generation upon us, though, don't feel free to, that's not, I'm not prying for information about the next consoles if you know anything, but how have you watched, you know, what companies want out of developers change when it comes to cert?
Yeah, I think cert requirements from my perspective seem to have been kind of loosened off in the sense that maybe there's less and less rules. I think that's just feedback from developers because over the years developers have said, hang on, I've got all these rules from this platform and all these rules from that platform and so what platform holders have tried to do is say well...
We want you to develop on our platform. We're going to make it really easy. So we're trying to be trying to minimize them down to the things that are really kind of showstoppery things, things that are bad. And what you'll tend to find is, I don't know if anybody will actually tell you this, but when you go into certification, you know, there might be a certain set of things that say you will fail on those. The reality is it's kind of like a scales. So sometimes you'll be able to pass as long as you can, there's certain rules that they will let you break.
if the rest of the game is fine.
That's not something that they may not officially say because it depends.
They'll take a view like we do, which is what's the consumer, what's the effect on the consumer, and they think, well, actually, it'd be better to have this game now and have this minor little thing, which is an issue, and they'll flag that up for you. And sometimes they'll say, well, this is an issue, but when you resubmit it, you're going to need to fix it.
So if you have a patch or something, make sure this thing is fixed.
That's really interesting to hear. When I used to work for a mobile game publisher, I sat next to the QA people and I heard, you know, who worked both on our games and a number of other games, and I heard some stories about working with different platforms that sort of line up with that, you know, about what was sort of allowed to go in.
But obviously, just like you, that's all got to be anonymized because we don't want to get anyone in trouble.
Exactly.
I will say this, I appreciate that the various platform holders of all stripes have done more and more to use leniency as a way to help more developers ship more fascinating games.
Definitely.
Not that I would look back at the older game eras and go, oh, like...
They were too strict, like it should have been more accessible.
Like, you know, like you can't just like I definitely can't judge for things when I was either just a child or not important yet.
In that sense, there are other things you can look back at history and judge people for.
So let's be clear about that.
But that's not, you know, game bugs are sort of low priority on the.
historical ethical scale.
Kyle LeClair would like to know, how long did it take you to craft the titular Impossible Lair?
And how did you decide what sections and challenges to include?
That is a great question because the Impossible Lair, I explained the concept and the idea that it's something you can take on at any point.
And we wanted it to be, well it has to be...
relatively difficult because it's called impossible layer. So the challenge was how do we make it, how do we, how do you do that, how do you make something that is impossible yet it is possible and that was something we didn't even know. I mean it was kind of right towards the end, we tried lots of different kind of ideas and and setups and in the end one of it was kind of looking at some of the harder areas that were in the game and some of the other levels that we decided to take out and we said, well maybe we can build something around those.
And so that's how it formed, but we wanted it to be something that felt like it was doable.
And so it's really, it's not like any one section is impossible, is really, really difficult.
I mean, you know, exceptionally difficult, but there are, there's a lot of...
difficult sections chained together so you have to know oh this I've got to do this jump and that jump and that jump so when you're um you know once you've done it hopefully or once you've got half part way through and you think oh I failed here hopefully you can think oh if I just did this I'll get through next time or if I learn the timing.
Now just to go back on that point, one of the other things we did in the impossible air section as well, and here is a bit like this, is we tinkered with some of the timings of some of the objects. So whereas normally in parts of the other levels you can go straight through and it's kind of there's a hint to the player because you want the player to kind of Do the thing that makes sense that there's sometimes a gap and this one's particularly difficult It doesn't look difficult from where Dave's playing There'll be platforms here and you're trying to go up and down these moving platforms and dodge things But we wanted to make it we actually the timings of some of these things is actually very challenging Deliberately that this one here this platform that Dave's on if but when Dave jumps the platform will go down So what Dave's got to do is trying to not jump but at the same time you've got to avoid these spikes and sometimes you get caught because it's just very difficult to get past them. So there's lots of things to take into account.
But yeah some of the places where there are timings, I think there's some cases where you think oh now is the time to jump obviously but if you jump in that obvious point you'll find that the way these things sequence and come back is then puts you in a really bad position.
Sometimes you actually have to go when is the wrong time.
Um...
Uh...
I had a thought.
I was going to...
What did you say?
Oh, yeah!
Oh.
Go for it Dave, go for it.
Oh, like so like, just a random question.
If you guys could answer this.
How would one get into QA if they are interested?
Oh, that's a good question for chat as well.
If you have- chat if you want to weigh in for anyone else who's here.
Chris what's your thoughts on that?
Yeah, I mean, I guess QA starts people, I mean, we have a, I guess we have one QA on full-time, but we often have QA teams who are contracted in or work with our publisher who's got a QA team.
So it might be that you contact a publisher if they've got a QA team or maybe there's a, sometimes like I say, there's independent companies who are just a QA and you can kind of contact them and talk to them.
I guess it's a slight, you know, it's a...
People, I'm not... Nobody here would think this, but, you know, the general public, I would say, oh yeah, QA, that must be great, because all you do is play games.
But of course, what they don't do, don't tell you, is they're playing the same game, the same level, every day, the same way, again and again and again.
And so it becomes, you know, it can become not as fun as it sounds.
But at the same time, you get to play all the cool stuff.
and you see it sooner before it's done.
And actually, sometimes you'll get things back from QA and they'll suggest things or ideas that you think, oh, we hadn't thought of that, we should do that.
So that's another good reason.
To augment Chris's answer, so I haven't worked in QA myself.
Like I said, I've worked alongside them, but I've talked to some of my friends in QA or...
or co-workers about that process.
The first one is that so many of them, you know, want developers who don't want to use QA as a stepping stone to other parts of development, although there's nothing wrong with that, there's just a lot of people who say, oh, you want to be like an air designer, which is something I do as well.
And then you get a lot of, oh, we'll just start in QA and work your way over, and then the QA people are like, but then we don't get people who want to be QA and...
That's its own skill set.
But augmenting that is that my uncle, who's a software developer, sort of once encouraged me to, you know, get training in something like Ruby on Rails, for instance, and then go to job fairs to get QA jobs at other software companies, you know, like smaller software companies.
Because, obviously, when you think about game QA, you might go, oh, well, you need to be good at games to do QA.
And what I know from all my QA friends is, well, being good at games helps, but being able to do reliable testing, to organize a testing methodology that fits for your company, those are sort of skills that are top tier for especially entry level QA, you know, being able to prove that you're not just, you know, here to play games and that you're approaching it from a software development mindset.
That's my understanding, externally.
Chris, if you want to yes-and anything I just said, feel free to.
No, that sounds... that's great advice, actually.
Yeah, definitely. I'd say I'd agree with everything you just said.
Yeah, and I'll only augment Chris's point about QA contracting firms, which is that sometimes the way QA for games is hired is not, you know, the traditional HR process for...
The rest of the development studio, whether it's outside contractors or temporary workforce places, like I worked for in Los Angeles.
Oh, what's the Target CW is the firm that I briefly staffed for one point.
I know they did some QA for other not just game companies, but other software companies in the L.A. area.
So I hope that helps. My question was going to be, Chris, from a what was sort of your intent here was was when you when you started development on this game was the impossible layer, the idea that, you know, the player would start.
off in this very difficult scenario and then go through a traditional, um, you know, a DKC type adventure, was that always where design went? Or did you sort of go—or did design sort of, uh, start from somewhere else and you realized like, hey, orienting the game around like sort of in a known endgame, a final mountain you were trying to climb.
Was that sort of where, did that come later or early in the process?
It was relatively early on, the idea of the Impossible Lair came.
But we knew we wanted to build a 2D platformer.
But we wanted to kind of think about what would be interesting and unique.
And so we came up with this idea that, well, what if you could just complete the game?
Right at the start and what if it was And then that you take the idea of what if the game is impossible and you think well you can't be impossible But then if it's it seems impossible and then you know the idea of what if you take something it is seemingly impossible at first But then over the course of the game you make it more and more possible So that's kind of where that started to come from and that's how you're gonna kind of put together. Gotcha I also just thought of something that may help you, Dave, or anyone else looking to get into QA.
I'm also aware that some game companies in different spaces bring on...
It's kind of an interesting space.
What they do is they'll bring in playtesters from the play community who are at the upper end of what their game does in order to check for experiences or solutions.
It's sort of like not full QA, because QA is obviously about testing much more specific things.
And this is sort of, hey, play the game normally and let us know what you know.
But playtesting is a good...
From some developers I've spoken to, that kind of player-focused QA testing is where some of them got their start.
Partly because of the relationships they built with developers in that process.
I just thought of that. Sorry.
I think, Dave, this is our last Encounter with Capital B, right?
Correct, yep.
And then after that, there's a sort of like escape sequence.
And yeah, that's gonna do it.
Oh, the classic, uh, I love the Metroid, you know, the classic, like, you beat the final boss, get out.
You know, I love that.
Uh, Chris, um, how do you make those good, I guess?
Like, how do you make like the, you know, they're kind of own for the player, like, congrats, you beat the hardest challenge, but now you'll die if you don't get out.
Like, what's your thoughts on making those valuable?
Exactly, so this section here is particularly difficult because you've got conveyors as well which are disorientating because they're switched direction whenever the capital B lands.
But once you get beyond this here, you get to a section which is the escape section.
I think I know some people have watched this.
It was sad to see some people online when they said, oh I just got to the, um, you know, to get to this section and they think they, there was, then they found out there was another section and they thought they'll never be able to get through another section. But the next section is actually quite a bit easier.
But because it's placed at the end and because you know you had to get through the rest of it until then your heart is racing when you're in the next section and so it's a bit like the I always think of it as the end of Halo or like you said the Metroid examples that you what you're facing is a lot of smaller challenges and they're a lot simpler but at the same time you know that there's still a chance you could make a mistake and it's that fear of that mistake particularly because we've got a counter that's going to count down in the next section as well.
It's everything's in there to try and make you slip up and try and just make that kind of you know that you're on edge and try and make that mistake.
Right on the neck. Go for it Dave.
I was just going to say, like, as you constantly see, like, all the hazards behind you, like the level collapses in behind you, just all of these elements, the music, the timer, the fact that it's at the end of the end of the level, you might have like one B left or sometimes even zero B's.
It's really good at creating tension.
Yeah, this is oh yeah, this is I can already see it.
One of my favorite one of these sequences, I think, is in the Ori or the first Ori game from Moon Studios.
I'm blanking. I'm getting well, I can't remember Ori and the Will of the Whisper or I can't remember the names right now. Water section.
Yeah, like the last, you know, the end of that game has one of these two.
That's because the score on that game is just so incredible.
Like, God, I can't get over how beautiful that game is.
It makes this moment.
It's a really special take on this moment, actually, because, you know, we just sort of talked about three different.
Side-scrolling games that use these, you know, Metroid has a science fiction angle it sort of gets to use like, you know, like you blew up the base and, uh, you know, it's exploding around you.
So that gets to be part of that moment.
Um, Ori, Ori has this kind of heartfelt story at the center of it, you know, about family and the monsters that threaten you, but how they're, you know, the monsters have pain too.
Um, so the catharsis of these moments is really something, uh, um, and this is more of a, obviously a goofy example of that because Capital B is just running his weird corporation here in his weird factory.
Um, So it's a different take on it.
What a good, yeah, Blind Forest.
Oh my God, thank you, A9AZN2.
I've only played Blind Forest.
I haven't played Will of the Wisps yet.
But we'll get around to it at some point.
Hey, we're all staying home.
I should get around to it at some point.
Well, Dave, congrats.
It looks like you finished the run.
Yeah, thank you.
Thank you, thank you.
Good job.
I think that was about 55 minutes based on the show timer we have going back here, which I don't know, I have no idea what the record is, but you know what?
Beating this game in 55 minutes is something I can't do, so congrats to that.
Well done.
Excellent.
Thank you, thank you.
And hey, shout out to the devs, they're getting, you know, we're going to let the credits roll here, I think, while we wrap up our conversation.
With five minutes left, we're going to go ahead, oh, Matthew points out it's a fire escape at the end of Blind Forest.
If you've got questions or comments, feel free to drop them in now.
I know we're a little bit ahead of you, but we really want to get, you know, you're here at GDC, we want to help you learn things.
That's the core of what we're doing here.
Dave and Chris, do you have any questions or comments for each other before I go to chat?
I'm just amazed at Dave's skill at playing this game.
I'd like to thank him very much for all the just amazing techniques and exploits that he's been able to do.
Very good.
Oh man, thank you, Dick.
I appreciate that.
You know, given, you know, we had a couple deaths here and there, but you know, it was all in good fun.
And you know, I got to extend the thanks to you and the rest of the Playtonic team for giving us something really special.
This game kind of just came out of left field for me.
It's like I enjoyed the first ukulele and then Impossible Air comes out.
And I like instantly this game clicked with me.
And I was like, all right, this this is something really special.
And yeah, you know, thanks for giving me something really fun to spend my time with.
I had questions. Hmm.
I mean, I guess my question would be how long did it take you to get through the impossible layer the first time with Zero B's?
I know you've done that.
Yeah, that Zero B, oh God, the Zero B, that that took me at least 100, 200, maybe more.
And it was so funny, I remember trying for about.
Like an entire weekend just attempts doing only I wasn't even streaming.
I was just doing off stream attempts because I wanted to get a GDQ submission.
Actually, I couldn't do it.
And then Monday rolled around and I hopped on stream and ran.
I was like, you know what, let's let's let's do a zero B attempt.
And it was the first one, the first attempt of the day I got it.
And that was the first time that I did the the impossible later.
It was.
It is exhilarating.
And, you know, I get massive like Breath of the Wild vibes from this, where like Zelda Breath of the Wild, you can go to Hyrule Castle at the start of the game in your underwear and just beat the game.
And like to have that, like that sort of like beat the game at any point in a 2D platformer and the way you were able to contextualize it narratively, you know, with the bees and then also mechanically with the bee shield.
Hey, we got sub hour in the end game time.
That's pretty cool.
Like, I don't know. This game is an achievement and I really like it. I really like it.
We do have a bunch of questions from chat coming in, but we only have 90 seconds left, so I'm going to grab one final question before we get out of here.
But before we do that, I'm going to ask everyone, please make sure you leave a writing for this session before you leave.
That helps us out a lot.
If you have any specific notes about how this was run, let us know. We'll use it to improve the process.
We also like getting feedback.
Dave and Chris, we're getting so many questions coming in.
I'm going to encourage folks to reach out to you afterwards to ask a lot of them, but I would like to know where should they reach out to you?
Where can they find you at? How should they contact you?
I'm on Twitter as Chris underscore Thoth.
You'll find me there.
Dave, yourself?
Yeah, likewise.
You can just find me on Twitter.com slash Dave Stereo.
I also stream daily on Twitch.
Yeah, Twitter is generally the spot, or if you want to come into the Twitch channel, say hi.
Right on.
Chris, our final question of the day for the day is for you.
How many dreams does Joe Jones crush with The Balance Sheet?
That sounds like from one of our dev team members. That's from Michelle and Zovino.
Don't know, I don't know, I don't know that, I don't know that. She might be friends with Joe.
Yeah, probably, yeah. How many dreams? Can you quantify the number of dreams?
Many.
Many.
All right, well folks, thank you so much for watching.
Thank you to folks, thank you to Matt Hatchett and all these other folks, Brendan Lutchen asking questions at the last minute.
Like I said, if you have any more questions for these two, find them at the links we just gave.
And with that, goodbye everyone.
Thank you.
Bye.
