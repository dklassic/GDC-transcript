The talk is called Gunner, the sound of Gunner, exploring the intertwined relationship between sound and game design.
If you have a comment or question during the talk, please tweet at us at our handle seen a bit later.
We won't read it until after the talk, but you know, we'll be happy for it.
Also we'll probably do a Q&A afterwards here or in your next room.
My name is Martin, and I was a sound designer and producer on the project.
I've been involved in a number of indie games and work most notably with Quillway Studio.
We've done Among the Sleep and The Plan, working on Mosaic.
Among the Sleep is the most famous, most known as the baby horror game.
And my name is Ditto.
I used to do a bunch of game jams before sort of moving to Stugan and like Kalsan briefly in Sweden where I was working on this bigger project that we're not talking about today.
But as a side project to that one I started Gunner because I needed something to like blow off steam on.
Yeah, so we'll get into that more later.
Yeah, what is Gunner?
What is this game?
That's a tough question.
It looks sort of like this.
Yeah.
So Goner is a platformer shooter with randomised roguelike elements.
It focuses a lot on the minute-to-minute running and gunning and shooting and action aspects of a roguelike game like that.
It's a cacophonous game.
It's filled with visually and auditory candy from the first splash screen you see.
to pretty much the last death animation Tally scoreboard where you give up in frustration.
So making this bad boy took like 12 months, 18 if you count the porting to switch part of that that happened just after releasing on Steam. And it was published by Raw Fury.
Last year we won the IDF for best audio, excellence in game audio, and it was super nice.
Thank you.
But we basically felt that this project was something we were really proud of, and after the fact we wanted to also explore a bit maybe what made this game work so well, and why we're so content with what we had made ourselves in a way.
So we figured out that doing this talk we could have the chance to...
explore and analyze a bit why the sounding game clicked as well as it did.
So for today we'll be exploring our working relationship both professionally and personally and kind of how related how the game ended up where it is.
So yeah, first things first, I used to be so alone before this project, like I never really worked with a group before.
I did a bunch of game jams, but it was always just me doing them.
And that has a lot of both benefits and flaws to it.
To begin with, I never collaborated with anyone else before, so for this project I had to learn how to communicate, which you can sort of see that I'm still struggling with, so I'm working on it.
The good thing about doing so many game jams is that I did try both.
Apart from programming and animating, I did a bunch of game design and sound design as well.
So even though that was always on a hobby level, I had some previous experience with sound design already.
I've never been alone.
I mostly work with a lot of different teams and it's super fun.
I like it quite a lot and I worked with anything from medium-sized studios to around 15 to 10 people.
All the way down to a project like this where we were essentially, most of the part, three people.
And through a lot of these different games, I've developed quite a lot of different tools for being able to work on a number of them at the same time.
And one of them is very relevant and we'll talk about a bit today because it's relevant for the process of making sounds for Gunnar, which is what we like to call constraints.
Oh, shit.
Yes.
So.
Starting up any project, I set up a bunch of constraints for myself, and I guess this is pretty common for creative projects in general.
Those constraints then inform every decision that you make throughout the project, since they will be things like the motto that we had for this particular game was, if you can't do it quickly enough, there's probably a better way of doing it.
Which sort of means that since this was a side project from this bigger project that I was talking about, everything I did for this one had to be really quick because it was like a late night project for me.
And that motto kept throughout the whole project.
So everything we did was because of that.
And so, for instance, to further on the constraints that I set up, Everything was placeholders.
It just actually had one line of code that would call everything sound-related in the whole game.
So every time you hear sound in the game, it's because of this one line.
Because I thought I was changing it later, so who cares what it looks like right now, right?
But it just never ended up being changed.
Yeah, we were going to look at the F model while doing some sort of middleware function.
But we kind of never got around to it, and it sounded good.
So it was sort of, yeah.
kind of works.
Like, don't flog a dead goat, as you say in Norway.
And another one of these constraints was these, like, wobbly graphics that the game are built upon.
And this also came from, like, I draw these animations in absolutely max half an hour.
So if I couldn't draw a thing in less than half an hour, I would, like, scrap that idea and try to draw something else, right?
A good example of that is like this.
You have a big friend on a hill in the game that was supposed to be a friend living in a house but I couldn't draw a house quickly enough so I turned it into a whale.
So that's Sally.
Yeah.
Yeah.
Yeah.
Yeah.
I also worked for a number of restraints.
I think the most important one that got to define this game was, I was basically working mostly off this synth, which I'd had around for a while and was not really happy as a compositional tool, but I wanted to limit myself to using exclusivity for making sounds.
It basically meant that the way I work with games usually is, I put a constraint that I like to call frames, where it's sort of like the philosophical...
what the sound sort of means in this game, what it sort of tells you.
Like if a door opens, what sort of feeling should the door have in the context of the game?
And for the pure sound aspect of this, the frame basically means that if you imagine this screen over there as being the 2D plane of every possible sound that exists because of physics limits, what you can hear, then a frame would be like a smaller part of that which is placed somewhere rather than not arbitrary.
And when I'm experimenting, whenever a sound kind of ends up within that frame, this is the right sound for that game, because it's sort of predetermined in a way.
And it enables me to experiment a lot.
So, for this specific project, I was focusing mostly on the sounds synthesizers can make.
And it was fun. We'll get back to the process of that.
But we also had a different kind of frame, which was the philosophy of implementation.
Basically, we decided pretty early that realism is not really our strong suit.
I don't know how to make gun sounds.
So we kind of decided that we could rather go for whatever felt good.
A sound didn't have to be the right sound to fit on anything.
It just had to be sort of like, imagine having a hand of popcorn, and you take one popcorn and it feels really good.
And you kind of want to have another bit, so you take another bit.
So the context of the sound was more, does it feel pleasing?
Do I want to hear another?
Rather than, does this successfully replicate the sound of a double-barreled shotgun from 1922, you know?
Because who cares?
At least for this game, it was pretty funny.
So make it candy was the kind of thing that I always kind of want to juice it up to make it kind of fit Ditto's school animation style.
Also, another limitation which I'm pretty strict for, and this is the reason why I even started on this game, I really don't like footsteps.
It's the most boring thing that I know, really.
The way this game works, as you can see here...
Yeah, I didn't have a better animation for it, but you can sort of hear it when the drop that falls down on that thing.
You can see the world is being made around the character.
That pretty much means that instead of the indication of movement coming from the character moving itself...
is the sound of the world building around you.
And conceptually, I found that really interesting and got super hyped up on working on this game.
That was like the last little bit of Constraint.
It's more like a pet peeve than anything else, but it's fun.
So Constraints for us was actually a super good thing, because we could make billions of sounds.
Like already before, while you guys were sitting to wait to hear us talk, I was sitting with this and playing around a bit.
It sort of very quickly turned into...
Let's see now.
This is pretty much a process of me making sounds for this game.
I'm sitting here and just kind of putting in random sounds from the synth.
And then I play through them randomly and record what I play through.
And I take out whatever I like in the end.
And so the finished product would sound something like this sound you hear right now.
And if you listen closely enough, you can hear the double-barreled shotgun in there.
So basically, I mean, the OP1 made it like a super narrow aesthetic, but I could work really fast.
And we had a huge pile of sounds within a pretty short month or two, because for every five sounds we would need, I would make a hundred.
So we would have basically billions of sounds, and with that came a lot of freedom to work within the bounds of the constraints.
It sort of felt in a way that, because the aesthetic was so predetermined, we couldn't really make sounds that were really wrong because...
We had to have a really clear frame for that.
Yeah, and it felt like we were playing with one of those boxes where you kind of recognize and put in the shapes, but we basically had all squares and all square holes, so it was just...
No matter where you put what, it sort of...
fitted or at least were the basis of something we could use.
Yeah.
And we both have really fast ways of working.
Like me from coming from Game Jams, obviously like everything I do have to be really quick.
So the way I've learned to make Game Jams is very, how I've learned to make games is very quick and iterative and quickly discarding of things that doesn't work and quickly just harboring of things that sort of work.
And Martin having worked on so many different projects, he has to be able to jump in between projects very quickly, sit down and work for a couple of minutes on this thing and then jump into something else.
So all of the constraints and all of the processes we came up with for this project was always with that in mind.
I was talking about earlier that it was a side project from the beginning.
And that sort of...
feeling kept through the whole project, where everything we did was just to try to make the iteration as quick as possible.
And that became sort of a process.
We sort of had the good luck of being funded and getting help from a publisher, Raw Theory.
And basically being a small team and having a very low living cost, as I always did, and it was a very low risk for everyone involved, and it enabled us really like a low pressure . .
development as we had a low burn rate. And it also enabled us not to kind of have the focus on other aspects like marketing business which none of us have a lot of experience in and we don't really feel that we're that good in it either. And we realized that this is a luxury that of course not everyone has and so it was worth mentioning that for us it really worked and made this project work the way it did.
Yeah, because of these conditions, we had these cushions to keep Goner from being like a...
It was like a game jam for the whole production of it, which was more than a year.
It was like a year-long game jam, which sort of resembles pre-production in other more classical ways of looking at it, but this was like pre-production for all of the production.
And this was very comfortable for me, since I thought I was always working on placeholder.
And since, like, if what you're doing is placeholder, it doesn't really matter how you do it.
So you just do it quickly rather than well.
And then, like, if I wouldn't have been that free, like, if I didn't think it was placeholder, I would probably have become more hesitant to experiment like I did.
And I think that goes for all of us.
It's also good to know that we never really had any strict story to begin with.
We didn't have any core of the game other than the actual genre of a platform shooter.
So everything, because of this feeling of jamming on it, just grew organically out of experimenting what felt right there and then.
We never had this, this is the master document of what this game is.
Although it became a quite profound and deep game for us.
That came out of...
frustrations and good things that happened along the way.
So in a sense, we kind of explored a concept we felt rather than produce an actual product, you could say.
So as an example, we have a few different ways we worked.
Yeah.
So this one is a bit weird.
This is maybe the staple of our process.
So every Friday we would have this.
A little challenge towards ourselves.
Like, can we come up with something that totally breaks this game?
Because we're working so strictly within frames all the time, is it possible to break these frames for how we're designing this game?
So every Friday we would try to come up with an idea that could potentially break it.
Something that is stupid enough to do that.
And we call these Fridays the Fuck You Fridays.
Or FIF for short.
Absolutely.
Things that came out of that that was really cool was like the...
Well, actually that was really shitty, was the poop head.
That just turns everything in the game brown.
Everything sort of sounds like...
Yeah, everything sounds like...
Yeah.
Nothing good.
And it's probably like the worst example of what ended up in the game in the sense that it sort of fitted, so we put it in, but we both felt that this is a really shitty thing to put in the game.
But then again, we had other things that really defined the game for later.
In the beginning, making more masks and heads, because heads give you abilities.
We had something called the Flip Head, and it's basically...
Whenever you would jump, it would also start somersaulting you around, enabling you to do sick trick shots and have a lot of fun.
Yeah. And suddenly you can kind of shoot yourself up in the air with a shotgun or do like, yes, last minute saves. And it was... That's a good example versus the poophead which wasn't the best example of all. But yeah. This is kind of like another example which is basically what we decided to call the loop. So Ditto is basically super good at... It has a knack for a lot of things, so...
The loop is basically us iterating and editing off each other, whereas he would select and find things that we had made, or I would come up with an idea, a suggestion.
And quite often it could have worked really well in the context and came out of the blue, especially with the sound when they chose things.
He basically had a part of curating the huge hoards of sounds we had.
And it would also make it easier for me to look at the sounds in retrospect, seeing it as like, okay, so this is a cool sound for that.
I didn't know we could use it for that because it was called 1922 Shotgun, but we're using it for jump sound.
But it's fine, you know?
Within the context, it works really well.
Yeah, and so like, this is sort of what the loop would look like for us.
We have two examples of those, which are...
And we'll go through really quickly.
So the example one is I make some kind of content.
Martin sees the new content, and he makes like 100 sounds on his open one in 20 minutes.
He throws the sounds at me, and I will sort of try to throw the sounds in as placeholder on the game, wherever I see fit.
And then I come in and give feedback, and it sort of iterates.
It will be quite consistent that whatever we did or put in the game, like a third was kind of throwaway and we needed to work more on.
A third was pretty good and we can work on and iterate it to make it something good.
And a third would be, like we just basically mentioned, that the third would be something that you would find, like a little nugget amongst all the poop, that was just like the right kind of sounds that I wouldn't have been able to see.
So that was a very interesting and liberating thing for me because I was just, you know, when you make something yourself.
you get very tight on it.
And it's actually nice to have someone see it from a distance and be able to pick up stuff like that.
The other example is basically.
No, let's show an example of it in real person.
So an example of this in the works is when I made the snake.
And Martin would make a bunch of sounds for the snake.
But none of them really fit with how the animation looks.
You can see when he jumps into the snake and it swallows you.
So it would take.
random sounds that were made from something else and sort of mash them up and see what fit until I find something that worked together with the animation.
Then he would remove a third of that.
And the second example is, basically we have all these sounds.
I would be pleased to have these sounds because I love it.
Can we please use it for something?
And Dito would be nice and put it somewhere.
Usually he made something that would go with it.
The second world, which is like Janko Robo, are mostly made around these ideas because we had a lot of rusty, weird sounds.
They kind of informed the decision of how the enemies would react and stuff, which made me really happy actually.
And one of the examples is that.
It's what we call chicken legs.
And chicken legs, we decided he should have these cool sounds that sound like a little bit of panicked Russel when he gets hurt and he starts running around and he will spawn like exclamation marks and they will blow up.
You can kind of see it here.
So I have to jump on the other guy first.
Hang on, hang on, it's coming.
Here we go.
Yeah, it's coming through.
Yeah.
You know, Ditto is perfect to me.
No, no, man.
You're perfect.
Dude.
The thing is...
During the production we basically started really becoming each other's heroes in a way.
I would actually at some point recommend Ditto to test a game I really like the sound design for.
And he was like, are you shitting me? That's my game.
And we basically grew to kind of know and appreciate each other's tastes and ways of working that kind of fed off each other.
And the best thing is...
I could work on the game design and throw ideas and try out things because I knew that whatever Dido would choose out of that, if he chose one of a thousand ideas, it would be the perfect idea.
I always believe there is a correct way of doing everything.
Martin obviously knows the correct way of doing sound design because he is the god of sound design.
Which meant that I could do whatever...
It's true.
That meant I could do basically what I wanted with the sound design and if he did something wrong, then he would...
And I can pick up on that and remove it before we actually release the game.
Which means that I can do a bunch of naive and blue-eyed things that would then fit the game for what it is.
I think it's worth mentioning with Ditto, sitting and actually implementing things and trying and failing, I think for you it doesn't work too much with game audio.
Basically the most important thing about sound for games is basically realizing that the implementation...
is extremely important and you could have the best sounds in the world, but if you don't actually put them in correctly and if they don't kind of make sense in attenuating the way someone plays and informing the player what happens, it's sort of everything all for nothing, you might say.
So it was a very helpful thing to kind of be able to play around with implementation and not having to do it myself again because then we kind of had to, I could sort of sit over and say, like, this works, this doesn't feel right.
We tried doing this and yeah, we kind of tried and failed all the way.
But we kept on trying to try to impress each other, but it wasn't all good because, you know, Ditto actually burned out at the end of production.
Yeah, turns out like jamming takes its toll on you.
We always thought like the, so from the beginning we thought the game was going to be like a month more and whenever that month ended we added a month to the deadline.
You probably know how this goes, everyone know you.
Which meant that I was game jamming, or rather, crunching for a year.
And that's not too good on your health.
And it was also a big part of the way we were jamming off of each other, where we always tried to impress and surprise each other.
That's really hard if you don't even know what's expected of you, like I was.
And also I was trying to be a producer on the team, but I wasn't a very good producer Every team is different, and Ditto had, of course, a few needs that I sort of neglected to see.
And it sort of ended up with us being very fond of each other, but we didn't still share the tough things all the time, which led to this pressure on Ditto that made him burn.
I think it's worth, though, that when you're analyzing a process and presenting it to others, it's not always that valuable as it is.
of course what worked for us wouldn't necessarily work for other people.
And it's not really exact science, so we can look at this and we don't really know what would have happened if we had done anything differently.
But in our experience, this is kind of what we did that we want to keep doing forward.
Complete trust is nice.
Like, it's super nice to work with someone and you just...
They would catch you if you fall, they would catch a bullet for you, they would take your stupid ideas and make them beautiful, and give you a pat on the head and tell you everything is fine.
It was super beautiful that, and it's definitely one of the better work relationships that we've ever been in, and it really fed into the whole creative process of working together.
Yeah, and on top of that, having such explicit constraints means that you can be as crazy as you want with the decisions that you make, because you have something that informs you if you're still within the frame of what you're doing.
And we have a few things we would have liked to have done differently.
And it's taken notes.
We should have...
We want to be better at communicating in the future.
We want to actually take care of each other.
And instead of just being tough and cool, we also want to share feelings.
And when things aren't going that well, actually help each other a bit.
And also actually plan a little bit ahead.
You know, have kind of dead milestones that we actually enforce.
And even if we don't have to follow them all the way, at least we can have the perspective so we are better at facing ourselves.
And for you, we kind of recommend trying out these things that we found working pretty well.
First thing is hierarchy is bullshit, like, at least it's old school, so you can try to work on it and try...
Just because you do sound design, or just because you're a game designer, or just because you do marketing in a game, doesn't mean that you can't tinker with something else, and that again is based on trust, and it's a beautiful thing when everyone in a team feels they can contribute on everything, really.
Yeah, and once again, have some sort of plan, maybe.
It's always good.
And so actually, trust the loop.
Trust each other.
See what happens if you leave something completely to the other person.
At least when you have this tight collaboration, like we do, leaving something to your partner and seeing what happens if you leave them completely with that.
It's really cool.
Yeah, try that out.
And if nothing else, like.
do something Friday's yes yeah but it is actually a the most important take away with for key Friday's every fun is that it's nice to not be super serious about the game all the time so trying to actually actively destroy your game where does it sound it could be fun at the at the worst at the best maybe yeah with some ideas that you never thought about otherwise yeah that is for us thank you so much