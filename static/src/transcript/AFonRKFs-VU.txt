My name is Brian Francis. I am a contributing editor at Gamasutra.com. I am a community manager with GDC.
I am the invisible voice inside your head who just realized he needs to tweak the volume on something and I'm going to do that.
But we are here today playing a game called Dauntless. It's been out...
In playable for a bit, but it just launched formally back in May.
We are playing it on PS4 today.
We are playing Dauntless because we have the opportunity today to talk to some fine folks from Phoenix Labs about the game's design and development.
Those fine folks from Phoenix Labs are in the lower left-hand corner of the screen.
They will be taking your questions.
I'm going to quickly go queue up for something.
While I queue up, I need to introduce one other face in that corner because he's here and deserves to be acknowledged for his time.
Alex, how are you doing? Uh, how's it going? You know, how are you doing? I'm doing all right. You don't need to acknowledge me. You just need to pay me. Other than that, I'm all about it. But I don't pay you, Alex. That's true. No, I'm paid by the fine folks behind Game Developers Conference, gamasutra.com, and a number of other fine properties. My name is Alex Farrar. I'm a contributing editor at gamasutra.com, and I work here with Brian on this fantastic GDC Twitch channel. But more importantly, you want to know about who our guests are. So I guess this is going to be tricky because you're all...
Let's try to start here on my left.
I think with Hunter.
You just pointed towards an empty audience.
You just pointed to no one.
Hunter, how are you doing?
I'm doing great.
How are you guys?
Good.
Could you introduce yourself for us, please?
I'm sure the audience knows you.
Yeah, my name's Hunter Howe.
I am the design director at Phoenix Labs working on Dauntless.
Nice.
And then below you, we have Nick.
Hey, everyone.
I'm Nick, director of marketing here at Phoenix Labs.
Uh, thank you for joining us. And Andy is also hanging out with us in the call. Andy, how are you doing?
I'm great, yeah. I'm Andy Burt. I am the head of PR here at Phoenix Labs.
Um, kind of a question for Hunter and Nick, although Nick, you just said you've been around a while, so you, maybe you'd like to explain it.
Could you explain, um, I think this is an interesting case where Dauntless has grown with Phoenix Labs as a company.
It's kind of a case where, uh, it feels a lot like when we were streaming Astroneer, and like, something that they said on that stream was we basically built the company.
Like to build the game in a specific way where they were talking about like the team the tech the engineering Could you explain the origins of Phoenix Labs?
And why you decided to make a game why you all decided to get into the dauntless business, I guess Yeah for sure. So we've been Making games together albeit not at Phoenix Labs for better part of a decade Myself Jesse Sean Robin the co-founders bunch of other folks here Have all collaborated on franchises like Mass Effect The first thing that we did was we created a new game and a new experience that brought people together.
Point in case we didn't actually have Dauntless as a concept when we started the studio, we had this vision and this philosophy that games bring people together, and shared experiences bring people together.
We were just talking about the early days of World of Warcraft.
Those great moments where you walk through Stormwind and there's this Onyxia head mounted, or like Guild First defeating a raid, like capturing those awesome moments was something that we wanted to do.
And from there we had a couple different concepts.
Coincidentally at the time we were playing, I think it was Monster Hunter 4 for you at the time, and we were all really enjoying it, but really not enjoying trying to get The shared experience aspect going together on the DS form factor, and we saw the opportunity to create Dauntless.
And from there, I mean, it's been a living, breathing game for multiple years now.
And it's just been a lot of iteration, a lot of patching, a lot of feedback from the community to help improve the game experience into what you're playing today.
Yeah, real quick for anyone watching, this is mainly about game development, game design.
So if you have any questions for the developers about anything about Dauntless, specifically about its design and development, just put them in chat.
We'll relay them.
I want to know a bit about the networking side of this thing.
I mean, that's sort of the most exciting part about Dauntless is there's been a lot of press around the game being one of the very first, if not the first, cross platform, like fully, you know, progression tracking.
online game for PS4 and Xbox One PC and everything else. I'm curious to know a bit about how that came to be and sort of how did you think about designing the network systems based on your experience with games like Monster Hunter? Yeah I mean it's a great question and as soon as we basically had our what we call the vertical slice experience of Dauntless so like pick a weapon, fight a behemoth, rinse repeat.
The first thing, like one of the first things we did was get it off of running on a local machine here and get it running on servers online.
And I think it was 2000 and... oh, what year are we in? 19.
So it's either 2014, 2015.
One of the first playtests we did was over the holiday break in December.
And we set a goal upon ourselves that we were all going to leave the office, we were all going to go home to our families for a couple weeks.
But we wanted to play the game, and we had to have things like your inventory, quest and progression, the different behemoth hunts, all of it running on servers online through cloud computing so that we could effectively do that and not have to be in the office.
So kind of since like really early on, Dauntless has been a quotey fingers live game, even if it hasn't been like open access to, you know, the public in the early years.
Yeah. So that was.
Sorry, go ahead. I'm just curious what you specifically mean by cloud computing.
Yeah, so we use a combination of cloud services like Google and like Amazon, you know, like AWS to do things like matchmaking, player inventories, the game data itself, progression, like these are all kind of like workers running around in the background that are running on servers not stored inside our four walls.
So that we can offer the game effectively, like, worldwide.
You know, kind of a limitation of having, like, the data center is that everyone has to come to you.
And it was important to us that we go to the players.
So we have servers in North America, South America, Western, Eastern Europe, Australia, kind of, like, strategically situated all over the world, so that no matter where you are, you get a really good connection to Dauntless and can play it with your friends.
Nice. There's some good questions in the chat and I want to get to them, but real quick before we get off this, tell me, were there any... what sort of unique challenges do you run into when you're trying to build a system like that that runs server-side and tracks things like inventory across... like it seems all account-tied, right? It's all tied to a person's account regardless of platform. Was that specifically challenging in any interesting way to try and get that working across all these different platforms?
Yeah, I mean, it would be a great question for our tech director who's unfortunately not with us today, but...
I'm gonna go abduct a server engineer and just pull him in here and put the headphones on and press that.
Yeah, Ryan, you're on stream, answer this really good question.
Um, yeah, I mean, it was, um, it's super challenging in so much that there are just a lot of systems all talking together all at once.
In terms of building and scaling, I mean, we had, not in a bragging way, but we had a lot of players show up in the first, I mean, since launch, really, but in the first, like, week, two weeks, we had a ton of players show up and really stress how we built and architected everything.
But we had a lot of partners show up to help us figure out how we scale the game from, you know, where it was a couple months ago to the reality of, you know, millions of players today.
And, you know, a lot of these problems, you, we did a lot of, uh, like bot testing and swarm testing to like, oh, what happens when a million people hit the matchmaking API all at once?
Um, but in reality, like that can only get you so far.
It's not until you have real players doing real behavior against your game on live that you get like a true sense of how the platform holds up.
And a lot of these times, it's not like a problem that you'll see immediately.
Like sometimes services don't fall over gracefully like instantly and you're like, oh, that's a problem. Let's fix it.
It sometimes takes days and weeks for things to kind of unravel.
And it was just, you know, like we had a war room situated in the office here.
And you can imagine like the command center from 24.
We had a lot of monitors with like up to the second game health.
So as soon as we saw like the slightest indication that something was degrading, you know.
A swarm of engineers would hop on it and fix it as quickly as possible.
And just for the cross-play components alone, right, it's insanely complicated when you think about just something as simple as, like, oh, a friends list.
Yeah, you got your list and you add your friends.
It's like, well, what about how, you know, the PlayStation friends list works?
How does that integrate with your friends list?
What about, you know, all of these different platforms handle all that stuff in different ways?
They all have very strict guidelines that they want us to follow to ensure quality for their platforms, but they conflict sometimes, and they are different from the way something might be architected.
So, a lot of people had to spend a lot of time and, like, super smart people, like, tackling a really big problem.
It's just, like, you know, super gratifying to see all of those pieces come together, but it even gets, like, reflected in, like, the UIs need to be able to accommodate, like, different presents.
of like on like different platforms and like well you can't show this icon in this case because that's against this compliance thing but you can show this icon so we need a proxy icon for and like it goes like the the specific like details there of following all of those rules and making it work and being a good player experience it's just like it is not to be underestimated like the the effort that goes into making cross play work at all and there absolute heroes on the team that managed to pull that stuff together. And I'm continually in awe of all of those boxes they needed to check. Yeah, totally. I mean, it seems like a complicated and fascinating topic. Enough that we could spend the whole hour talking about it. I promise we won't. But as long as we're talking about sort of how you guys got ready for launch and how you tested everything.
This feeds really well into a question here from FantasyMeister.
They seem to think that you had a pretty smooth launch compared to much bigger publishers, and they want to know, how'd you pull it off, especially considering the fact that it's crossplay?
That is super flattering, because at times it felt pretty hectic around these parts, but...
I mean, it was a lot of planning, honestly.
Like, we quite literally have a scrum team here at the studio called Ready for Scale.
and it was, I mean that was their mandate was to make sure that our launch went off as smooth as possible.
That's not to say we didn't have the occasional bug show up or the occasional outage that we had to jump on, but that team spent, I mean Hunter correct me if I'm wrong, but like the better part is six months preparing for this moment.
And we had separate teams put together for cross play specifically, separate teams together for console specifically.
I mean, it's been a work in progress since...
Gosh, like, I mean, right around this time last year, we...
You know, as soon as we got the PC open beta out and into the players' hands, we took up the torch on console.
So, careful planning, collaboration...
It's kind of cliche to say it, but...
We... I mean, we spent a lot of time just preparing for the launch itself.
Yeah, and like...
One of the, like philosophically, like you need to, and I've heard some of my co-workers espouse this value, is like you don't try to plan, do all of your planning such that like nothing goes wrong.
Because things will go wrong, you put so much more of your focus in how are we going to react when things do go wrong, because it absolutely happens. And so like if a pod falls over and a bunch of people get booted out to...
The main menu, like how can we handle that elegantly, how can we be ready, how can we see that when that's happening and spool up another pod to replace it.
It's really a philosophical, I think, value set that those guys sort of, and ladies, rally behind as a way to approach the problem.
Because you just can't.
You can't get everything right, you can't predict all of the things that are going to happen, it's impossible.
Nice.
Yeah, I wonder if, um, we should dig into the design a bit, because this game is, uh, it's just a fascinating piece to crack apart.
Brian, what do you, uh, what do you, what's your, what's your deal now?
You like two guns?
I've always loved gun slinging.
Two guns on fire, no problem.
Yeah, two guns on fire, what the fuck.
I would categorize this game as having a very nice, efficient loop compared to my old MMO days which I'll talk about in a bit.
Which is you choose the weapon, you choose a loadout, and then you choose the kind of boss you want to fight.
And then from there the bosses have these nice... like this fight is very...
It's every boss, every monster you go to hunt is very boss fighty in that they have animations you are trying to pin down and positions.
you're trying to memorize both of these. My friends, my anonymous internet friends here, um, appear to be much more experienced at this than I am.
But even then, just trying to learn and pick up, like, these encounters makes it feel like something you're playing sort of on your home console as opposed to sort of MMO bosses I'm used to which sort of feel like things that exist on the Internet, if that makes sense.
Like, it feels like a live AI creature that, uh, is co...
It's complicatedly interfacing with everything I'm doing as opposed to something that's just sort of checking if I hit it or not.
It's hard to sort of pin down that in words, right?
But it feels a little more dynamic and active than a WoW boss battle.
It feels a little bit more like a Dark Souls fight or something.
Let's dig into that for a minute.
How did you guys... like this game feels much more focused and dynamic than even a monster hunter or something like that where you have to chase a monster from zone to zone and wound them and weaken them?
Can you talk a bit about where that comes from and the thinking behind that idea?
The encounters are, I think you hit the nail on the head where it's like Monster Hunter and Dark Souls style action combat where you're worrying about where's the creature going to be, how do I roll, how do I get my iframes up so that I don't get hit by that attack and I can continue to DPS the guy down.
At the same time, we really like, on some of our more complex encounters, to integrate things like raid mechanics, where you will have to avoid particular zones, or you'll have to grab this buff, and this buff is really useful to be able to deal more damage in this time. Who's going to get the buff? And we're working on actually some new modes now that'll increase the number of unique modifiers and behaviors that are on.
encounters to be able to mix them up and have them be different.
That Ember main encounter that you just had is a very learnable, masterable event, and we want that. We want you to be able to come back to it later and see you got the C rank, or you got the B rank, or now you got the S plus rank because you take no damage and your DPS up time is really good because you know where the boss is going to be. But we want to continue to challenge people. So it's like, how can we develop?
you know, behaviors and content that we can layer on top of these so that we can remix those fights in interesting ways.
Huh.
That's so interesting.
I um, can you talk a bit about sort of the design philosophy that goes into creating a boss like this or an encounter like this?
I mean, it seems to be significantly more intense than your average, like even single player boss fight with different levels and different approaches and you always have a different set of players in the mix.
So like, tell me just as a, as a, like a Ballpark, how long does the team spend designing and tuning a specific encounter?
I would say that a specific behemoth will take somewhere between three to five months.
Somewhere in that zone.
And that's going along a long sort of...
I don't want to call it an assembly line because that's relatively diminishing.
It has a lot of different stages of development, right?
It'll start off and it'll be something, you know, what feel do we want to evoke?
You know, what are the, you know, what's the tone of this encounter?
Is it a majestic beast or is it stalking you?
Or like, what kinds of, what kind of vibes do we want to give the players?
And then it goes into, okay, well, what moves, you know, will sort of reflect that tone that we're trying to hit?
Okay, he's very stompy, so we want to figure out some AoE moves, etc.
And we develop that toolkit.
And there are some things that are true across all of our Behemoths, where we're like, okay, well, what happens when he enters his rage state?
And then we can decide some interesting new mechanics that get layered on when they enter the rage state, when they hit particular damage, taking thresholds, and they really want to fight back against the Slayer.
Okay, this scary move sort of gets added into their toolkit at this point.
So it will mix up the encounter.
And then they enter their Aether state because they're a Blaze behemoth.
And he'll start shooting a bunch of Blaze attacks at you.
And we go through that process of identifying all of the different moves that will make up that tone.
And then obviously it's up to a pretty big team of modelers and animators and effects artists.
tech artists to make that come to life, with the designer trying to tweak and tune the behavior all the way to the end.
Yeah, what do you think makes a good encounter?
What is your ideal challenge for the player?
What are you trying to create with each one of these beasts?
I think it sort of changes on where...
We think a lot about the funnel of a new player, obviously, you know, into your game and the journey that they're going to go on. And so what's appropriate for somebody early, you know, it's going to be like, okay, we need to teach you how to interrupt a behemoth. So we have that fire dog that we just saw has this very interruptible moment where it'll charge at you and certain attacks make it get staggered and fall to the ground and you get a big DPS window.
So that encounter is all about that mechanic.
But then there are late game encounters where it's like, OK, this bug is really hard to hit and shoots a million lasers at you.
And it's like, OK, the key here is that we want it to feel more like a bullet hell game or something like that, where you're doing a lot of dodging.
And there are beams and there are projectiles and there's more beams, but they do this behavior instead.
And so that's all about dodging and learning these.
these particular behaviors and patterns.
And so all the encounters are sort of trying to do something different.
But I would say that, you know, if we can hit on like raid mechanics and on great action combat with like dodging and strafing, then we're hitting a sweet spot that I think makes Dauntless sort of sort of special.
Yeah. Yeah. And I got to say, like we were mentioning earlier, this game feels.
It feels quick. It feels responsive, dynamic.
It feels very different from a lot of sort of multiplayer boss games that I've played in the past.
So I'm curious, why do you think that is? Is it just the progress in broadband and internet?
Or is there something specific you guys did, or a number of specific choices you made, to make this game feel and be so responsive?
I think it's the pressure.
Yeah.
Go ahead, Nick.
Jump in on a couple thoughts.
I mean, I think a lot of it has been just kind of our focus on the type of gameplay experience we wanted to create.
Like, we're big fans of high fidelity, like pixel perfect dodging, pixel perfect attacks.
When you, like, you just saw, like, we just did, like, a perfect dodge roll through that Nashor attack, like, feels super good when you master that skill.
But to support that, obviously, we have to, you know, to your point, like...
structure the game in a way that supports that kind of play style.
And yeah, I mean, just kind of from day one, we didn't want to have like the tank and spank, quotey finger, I'm going to stop doing quotey fingers.
We're going to, we didn't want to do the tank and spank style thing where it's just like, you know, a number calculator flying up while you're hitting this raid boss, waiting for the next phase to go off.
We wanted to capture that like really good feeling of, you know, like Bloodborne, Dark Souls, Dragon's Dogma, where like dodges feel good, blocking feels good.
And you're rewarded for that execution and that mastery.
And a lot of those games are single player, right?
And so it's simply like bringing that kind of gameplay into a multiplayer space that I think makes it a little bit different.
A lot of those multiplayer games that have encounters like this might be a shooter, right?
But aren't necessarily that style of action game.
Nice.
There's a fantastic question here in chat, let me grab it.
Chucky wants to know what are the challenges it comes, or what are the challenges you faced when it came to keeping frame rate decent on consoles?
I am not the right person to ask about that one, but there are a lot of, there's certainly a lot of performance optimizations that had to be done by, you know, technical artist types that understand how to speak to that, you know, more eloquently.
But the optimization process is not something that you typically front load in a game, right?
That might be an interesting philosophy to adjustment to think about, but usually you're like, let's get it playable, it doesn't matter, hide the polygon, your polygon count sins will not be seen by the player.
You can hide geometry in places, it's fine, we'll fix that later.
And then you do get to that point where it's like, okay, we have to do a lot of cleanup of a lot of of a lot of things that we did to get the game playable quickly to nail the gameplay.
And we all as like developers, right, have really beefy machines that our companies provide to us.
And it's really easy in the demo process to just like not think about that because you don't experience it. And then Some time over the course of the project, someone's like, we've got the min spec box, right? And that gets marched into the office and plugged in and everyone's like, oh, okay, let's try to figure out what do we need to do now? Now that we know what we want our game to look like, what we want our game to play like, how are we going to make it fit? And so that's just the process of cleaning up a bunch of stuff and it's also sometimes changing.
We're going to be doing a lot of mechanics to accommodate.
We're in a place like right now where you potentially need to tune down some kind of mechanic that is emitting a lot of particles.
And we're really happy with the way this looks right now.
We don't really have the time to refactor it.
So, okay, let's just tune down the number of volcanoes that Helion can spawn at once.
And that will mitigate the problem.
That fight is very hard.
That fight is also hard.
And so it's sort of a give and take with a bunch of different disciplines to hit that stuff.
It's a continuing, ongoing effort. We are not easing up. We still are doing work on performance and I imagine we'll continue to for a while. Yeah, and to kind of build on that just a little bit, you know, Hunter touched on it.
A lot of the machines that we use here at the office are really beefy and run the game really well.
So it's kind of easy to lose sight that a lot of folks, I mean I think one of the most predominant GPUs that runs Dauntless on PC is Intel Integrated.
Which a lot of the work that we did for console has helped us actually drive down and optimize our min spec on PC.
So we get a lot of win-wins there and even as it relates to...
The Nintendo Switch version, which we're working on right now, we debuted it a couple weeks ago at E3.
We had to do further optimizations to get it running smoothly on the Switch, but we were able to take those learnings and pipe them back to the console version and to the PC version.
So, anytime we kind of get a win on any platform as to how to optimize something like VFX or particles, we're able to kind of share that across all the platforms.
Because, you know, to your point earlier, it's cross-play, it's all one build.
So what we do on one platform has to roll out and apply to the others as well.
Yeah, it feels like a lot of devs who want to get their games on Switch are already on it, or are well on the way. But I'm curious, for those who haven't, based on your current work, is there any advice you'd give to other developers who are working on Switch games? Are there original games or ports about what you've learned about how to build and adapt your game for that platform?
We're still pretty early on, like we've been dedicated to developing on Switch for maybe a couple of months now, if that.
So I will caution that anything that I say should not be best practice because we haven't quite executed yet.
But we chose to partner with Iron Galaxy to help us co-dev the Switch version.
They've done a phenomenal job with other games like Skyrim, Diablo...
um bringing it to the switch and they have a lot of expertise into the you know not only like the console and the hardware but also the form factor um and um we wanted to effectively tap into that expertise and help us deliver something unique and memorable um on the switch as well i feel like one of the reasons this the switch is um Not to overly philosophize, but one of the reasons the Switch is so successful is that it has a form factor that totally befits hardcore games.
I remember, I've developed games for the Wii back in the day, and that is a very unique platform that lets you do a lot of interesting things.
but it also does not let you take thing here and put it on there, right?
Because it's like, well, how does that work with the motion, the sensor bar?
Right. And that like, you just simply can't do things like that.
But for the switch, right.
It's like it's got the sticks.
It's got the buttons in the same layout.
It's actually like relatively.
It's not as big of a departure as it would have been historically to think about the like the Nintendo platform as really fundamentally different than the PlayStation or the Xbox.
Yeah, totally. Um, Brian, you are killing it on stream right now. Is that a glaive you're using?
Uh, it's a spear. I call it the warpike. Sorry, dealing with some controller mobile controller challenges. So I'm going to create directions. This is not the game's problem.
Trust me. All right, well, let's you focused on that. Um, yeah. So let's talk about the, uh, the design. I'm curious to know, you know, one of the things that caught my eye about this game when it launches is free to play.
For me, it's very much like Monster Hunter, which I loved with a deep passion for about 20 hours and then I was done.
But another thing about it was that it seemed like in a lot of the marketing materials there was a lot of hype around a smooth progression curve with a lot of really challenging stuff near the end for high level players.
It was pitched as a game that has...
You know, multiple layers and depths of content for players, depending on how much, how far they want to go.
Now that you're like, you know, about a munch...
Wow.
About a month out from launch.
He's thinking about lunch over there.
I'm getting real hungry over here.
But now that you're about a month out from launch, I'm curious to know, how is your progression plan and your, how has the game stood up to the players basically?
Like how quickly are they getting through the content based on your expectations and how has that informed the way you design the game?
That's a great question. I think generally, so we've been testing progression for a while, and we had a very big progression revamp to the game right before launch. So we were able to analyze a lot of the player behavior ahead, and so this is our, you know, most finely tuned iteration of the progression of Dauntless, and it will continue to evolve and change.
But we had a lot of data to look at and a lot of player sentiment to analyze to be able to get to where we are right now, which has been a lot closer than we have been historically, which is one of the advantages, obviously, of having a beta environment, a closed alpha environment, to just be able to accumulate that learning over time.
But.
But yeah, the ramp for a new player is a really tricky thing for a game that is intending to be extremely skill-based.
Like, you don't want to challenge the player too quickly.
You also don't want to make the player feel like there's nothing for them to sink their teeth into at the same time.
Like, if you imagine somebody who comes across...
Dauntless on a stream somewhere, and it's like, oh, that game looks interesting. I'll give it a try.
I've never played games of that genre.
Put them into the same progression as, I am the king of Dark Souls, and I am a master of i-framing stuff.
Yes, you rang?
There he is. It's Nick.
Put those players through the same progression.
That's a really tricky thing, because The iframe king is going to be like, ah, it's a game for babies.
The other person is going to be like, this is legitimately a new thing that I'm trying to wrap my head around as a gamer, period.
And so the goal with a lot of our progression rework was to let players pace themselves through the game a little bit more at their own speed.
So you can blitz through the progression pretty quickly.
You can also...
find a lot of side quests to do and get your feet and not necessarily push yourself to that next behemoth if you don't feel ready for it.
A lot of what we have to do also is think about matchmaking queue health, right?
And so there are a lot of different monsters to fight in the game.
And if you make people, you know, skill out of these too quickly, then they sit here and like, we want you to be able to find a party really quickly.
So how do we incentivize people to keep doing this fight?
But then it's boring for those people, so how do you incentivize them more?
And so there's a lot of different variables to take into account.
And at the end of the day, you're usually sacrificing one or the other.
There's nothing that's perfectly going to hit all of them, but letting the player drive their progression with more agency themselves is much better than a really prescriptive campaign type encounter, which is what we migrated away from in our previous iteration.
Yeah, it makes a lot of sense. It sounds like, if I understand you right, there's a core progression that has a lot to do with skill and that kind of thing. And then there's lots of side stuff to do for people who want to break from that, or time to practice things, or just to not be under that kind of pressure. Yeah, I mean, you can live in that ecosystem for a while without moving forward, and it's okay, and it's still fun, and there are still objectives for you.
Yeah, tell me, as soon as you launched, have any players sort of capped out? Have they gotten to what you consider end game content yet? It's tricky. I would need to look, because we did not do a complete progression wipe at launch to take all of our legacy players and delete all their progress. So those people, we added a bunch of new systems, like the mastery system, for example, is one of the longest tail.
things to do in our game, which is essentially like, have you crafted every weapon? Have you crafted every armor set? Have you interrupted this behemoth a thousand times? Have you like, it's like a achievement system and also like core, like player level tracker, like rolled into one.
And so there are people that have maxed out that system and have played, you know, an ungodly number of hours since launch.
and why we're continually on the grind to keep adding new systems and new content, new behemoths, new weapons to the game, and we'll continue to do so.
Absolutely.
But there are probably still some things that no player has managed to check off every single box.
I have yet to see a naked no-hit run of Rescuri yet, so there's still that somewhere.
But to kind of build on that a little bit, In addition to what I would call the core experience to Dauntless, which is fight these behemoths, craft these weapons to get better and stronger so that you can fight the next set of behemoths, Hunter and the design team are already hard at work on what is going to be a new gameplay experience that sits alongside the core, call it story and progression.
We're going to be launching it in mid-July.
It comes complete with its own season and heralding all this new content and stuff.
But, effectively, it's going to be what is this Trials mode.
And what Hunter mentioned before is looking at ways that we can kind of flip what the player knows about Dauntless on its head.
Oh, I know Embermane. He's the fire kitty who charges that I have to interrupt him.
Oh, good thing I'm good at interrupting.
Oh wait, why are there thunder clouds everywhere?
Wait, why are there thunder totems everywhere?
What's going on? This is so much more challenging now.
And the point of that mode is to give players who have maxed out on progression a weekly reason to come back and a weekly challenge for them to overcome.
Nice. Yeah, do you feel...
pressured at all to keep the game? I mean, clearly you feel there's a demand for content that you must fill, right? There's a voracious hunger for new systems, new monsters, that kind of thing.
Do you feel, do you, boy, do you feel like you're working more now that it's live than you were when it wasn't live or less? Does that make sense? Like, is it more work to support a live game than it is to develop a live game or vice versa? I think there's...
There's definitely more gravity to it, right?
Like, when something happens on live and, you know, there's millions of players playing, the gravity of that situation is much more pronounced than, say, like, you know, in our previous pre-launch realm in early access where we had, you know, tens of thousands, hundreds of thousands at peak sometimes.
I don't know if it definitely...
I wouldn't say it's easier or harder.
It's just different.
If I can use that as a cop-out.
Sure.
I ask because this whole year I've been thinking about that story about Fortnite and how they famously have a very quick update schedule.
And then a story came out a little while ago that was saying that that's due to the fact that they're working...
way too hard.
They're crunching all the time, or at least some people there say they are.
Anyway, specifically just for journalistic dignity, Polygon reported that the QA team was working at what they classify as a very high level.
And corollary to that, which is I'm sure something you all have watched from afar, is...
Their direct competitor, Apex Legends, has been mocked by certain people, not by me, I love that game, for not updating as fast, you know, on a weekly basis like Fortnite does. Like Battle Royale, it seems right now, the people playing in that genre want things as fast as possible. Certainly I do, you know, I like Apex, I want new content, but do you think, has there been any change as live game developers, do you think, in how your audience is, how fast they want content, I guess?
Um, I think, and Hunter can elaborate, I got this, so there's two points in there to unpack.
The first one I'll let Hunter elaborate on, which is, um, I think there, there's kind of multiple ways that we can design content for players. Creating a behemoth creates, you know, a, not a finite, but let's call it 20 to 30 hours worth of gameplay for a player. You know, you got the lesser version to beat, the regular version, the dire version, the heroic, the heroic plus version.
You got to craft all the gear out of it because you're a completionist and must have everything.
So that kind of has like a finite experience inside of it but to Hunter's credit and his team's credit he spent a lot of time thinking about designing kind of like at the system level so that when we you know do things like add new weapons or add new behemoths okay how are we thinking about piping our learnings and these designs back into previous experiences.
So that with each new behemoth we create, we use the knowledge and the design there throughout the rest of the game and elsewhere.
I think the second point to make there is, we, you know, it's, the topic of crunch and the topic of work culture in the games industry is always such a tough subject because you hear these horror stories about people working, you know, 80 to 100 hour weeks, never seeing their families, having to, you know, have to go to work, and it's just, it's just a really tough subject.
to go to doctors mid crunch and to be totally transparent, like we pushed really hard leading into launch for a couple of weeks, always in a very respectable, sustainable manner.
Like we more than anything at this studio believe in sustainable game development.
We treat each other like family.
We look out for each other.
If someone's having a day, we get them out of here.
We figure out how we can cover for them.
Because ultimately, like, I mean just personally and candidly speaking, when Jesse picked up the phone to talk to me about joining the company, he said, Nick, I want to retire with you.
Like, I want to make games until I retire, and I want you to be a part of it.
And that's like, I mean, the reason why I picked up the phone and talked to Andy is like, dude, I want to do this with you until we retire.
Like, we want to make games because we love making games, and I want to do it with you because you're an awesome dude.
and I want to support you and I want to support your journey.
I'm not retiring anytime soon.
No, no, no, no.
That's what does really well.
That mentality and that respect for each other permeates every person and every team here at the studio.
That's fantastic. I'm glad to hear it.
Tell me, is there anything specifically you like, how do you?
This is something that comes up in other conversations with developers, and it's hard for anyone to talk about because so much of this industry is driven on true passion.
Like, people really want to make games, and they really want to make games that are incredible.
And often they will work very hard on them.
So at the studio, how do you manage that?
When people are working, how do you tell the difference between passionate work and overwork?
And are there any specific systems or processes you have in place to control for that?
Yeah, I mean, it was kind of a, you know, mentorship and managing teams is a very, I'm sure you know, very complicated, nuanced, lots of different opinions on how best to approach it.
And personally speaking, I don't know if there's any one right way to do it, but there's a reason why the studio is 90 people and not 2000 people.
Like, we want to have a one-to-one relationship with each of our peers.
And just personally speaking, like on.
The publishing team, I spend a lot of like most of my time with my people.
Like one on one's personal conversations, mentorship, like, what do you want to do?
What's your passion in life?
How are you feeling about your work?
Am I challenging you?
Like that kind of that kind of relationship and that kind of behavior, again, is like it permeates every team inside the studio.
And it it starts with the top down, like Jesse, Sean, Robin, the other senior leaders at the company.
That's how I'm mentored, and that is how I reflect, that is how I mentor to the publishing team as well.
Yeah, fair enough. I wonder, last question about this and then we'll move on to, I think we want to talk about some of this incredible art style here, but you know I've seen that there's been a a high influx of players. I think you guys are at 5 million, 6 million, something like that.
The numbers look pretty good for this game. Has that changed the pace of your production at all, or do you feel any pressure to ramp up now that the game is sort of taking off, or is it still business as usual?
A little, like column A, column B. I mean, we crossed 10 million unique players and you correct me if I'm wrong, I think it was 10 around E3 a couple weeks ago.
Yeah, that's what I was thinking.
Which is a tremendous accomplishment and everyone here is super proud of it.
And it, I don't know if it changed, I don't like using the urgency word, but I don't know if it changed the urgency at which we work.
But it certainly changed how we deployed some of our efforts and our resources.
Like to, like to expand on that a bit, I think it was striking when the iron was hot.
Like we...
We set up this launch, we believed that end of May was going to be perfect for us as a studio and a good time for the industry.
And it turned out that both of those assumptions were accurate.
And we're like, okay, the strategy is sound, it's time to double down now that we've got everyone's attention, everyone's playing the game, the game is holding up, people are having a lot of fun.
We're getting 80s and 85s on our review scores.
We're firing on all cylinders, now is the time to double down on it because we have a captive audience, essentially, to talk about Dauntless.
Right on. There's a question in chat I want to get back to. I haven't let it sit here for a while, but it's good.
Fantasymeister wants to know, how many art styles did you go through before setting on this one?
Oof. If any.
That predates me.
That also predates me as well, and I'm looking over my shoulder. Our art director is not at his desk.
Oh man. Well, we'll come back to that.
Yeah, I mean, I can touch on it a little bit.
Like, we have an art book, and it's not me shilling the art book, but it's a great exploration on how we discovered the style of Dauntless.
And what was super important to us early on was having a more stylized appeal to the game rather than, like, something like Final Fantasy that's hyper-realistic, like, photo-realistic visuals.
I love Final Fantasy. This is not a knock on Final Fantasy.
Because being a live game, we knew this game was going to exist for, you know, five, six, seven, ten years, potentially.
And we wanted to create a style that would stand the test of time and not be a reflection of the tools that we had at the time when we created the game, essentially.
Yeah, it seems like it would do you a favor in terms of making the game... giving it more longevity, and giving it more of an iconic look that doesn't necessarily...
Um, sort of fall by the wayside as the years go by.
Uh, I was distracted because Chocky here has a really good question.
Uh, are there any interesting systems?
I'm sorry, I gotta interrupt you.
You've got a goal when you're on fire to put out the fire.
I just, it is, I am having a really hard time listening when you're on fire.
And how, how long has that been going on for, Hunter?
Oh man, it's just.
I just needed to say that, I'm really sorry.
Brian, just tuck, tuck, and roll.
Just roll, just keep rolling.
Yeah, nice.
Let's not pretend this isn't how it actually went, close to some fire, just standing there.
Yeah, big shoutouts to Brian, it's hard to play a video game and talk on stream at the same time, especially when you're supporting a team of three other people.
You're killing it.
Literally.
Chucky wants to know, are there any interesting systems or programming languages to power the back end of Dauntless?
Is there anything interesting going on back there? Any funny stories? Any weird things going on?
That is...
Oof.
We are now completely outside my realm of knowledge.
Of course.
I know like, two lines of my sequel, Drop Table, that's about it.
More than me.
Yeah.
Great work.
Yeah, there's certainly a lot. I mean, I know we use a lot of Python, a lot of...
Let's see the other one. This is how much I know about it.
Python, C, a lot of Unreal blueprints.
Sure. Yeah, well, we should talk about something that you have a lot of experience with. Let's talk about getting this game out in front of people and publishing it. I'm so curious to know, why did you guys choose to work with Epic on this?
Yeah, so we've been using Unreal even, I mean, before we worked here at Phoenix Labs.
But when we decided on using UE4 for Dauntless, I mean, we began like a really good relationship with everyone at Epic. So we had our, like, we had a pre-existing relationship with them.
And over a year ago, Epic started sharing confidentially their kind of vision for what the next step for them was as a company.
You know, like they've got Fortnite, they've got this massive, not even game, cultural experience happening right now. And they wanted to find out what was the next big step for them. So they talked about things like the store, which they've launched. They've talked about helping other developers bring their games to market. You know, there's a lot of a great independent titles on the Epic Games Store alongside the bigger titles like the Borderlands of the World.
And as we talked with them about the future of Dauntless and how we wanted to bring it to console, this idea for cross-play started coalescing between our team and their team.
And Tim, Joe, Hector, everyone at Epic was hugely supportive of it and wanted to find a way to make it work.
essentially use us as the vehicle to get the first game to launch with cross-play, as opposed to it being an after-the-fact type deal with first party.
And it was, yeah, I mean, it's cliche to say it, but...
Like we resonate with the type of people at Epic, the company that they are.
Like a lot of our philosophies are their philosophies, their approach to game development, very similar to ours.
Um, and our goals were aligned and, um, it just, it made sense.
Hmm.
That, yeah.
I wonder, was it tricky like to, to go to the two stakeholders before launch?
Did you, did you just go through Epic to, to get all that stuff plugged in?
Or did you have to go to Sony and Microsoft?
and actually talk to them directly about making this a cross-play game at launch.
It was a little bit of both, if I'm being completely transparent.
It was new for all parties involved, so we were all kind of figuring out in real time what was the best path forward. So yeah, we talked to Epic, Epic talked to first party, we talked to first party, all three of us talked together. I mean, at the end of the day, what was most important to us was Kind of what we talked about at the beginning of our chat was bringing people together with Dauntless and it just felt really bad to us to say that but then not to have crossplay.
So I mean it's like literally we're like, man, the game is in open beta on PC.
What's next?
Console.
Okay.
And crossplay.
Like there are console and crossplay have always been married together because we want to bring people together.
And we're really fortunate in that.
First party being Microsoft and Sony, and Epic all believed in that vision, and we worked together to make it happen.
Do you think that would have been possible if you hadn't worked with Epic?
It's a tough question.
I mean, it's kind of a what-if scenario.
I mean, everyone at Epic was super supportive.
I also don't want to undermine our own capabilities as a publisher and a developer to get stuff done.
I mean, like, I don't know if I could say yes or no, but I can say that, like, if we didn't have Epic, it would have been a monumental task.
For sure.
And they were there to support us every step of the way.
Yeah, I ask because, you know, there might be other studios out there that are thinking about doing cross-play at launch.
I sort of try to get a sense of what kind of a task it was, how Herculean, and what went into it.
I wonder, do you have any advice or any tips for other developers who might want to do the same thing in their own games?
Yeah, I mean, kind of two things.
Working with Epic has been phenomenal, and that's not because I'm being paid to say that.
I love working with those guys. I talk to them every day.
I think what they are trying to do with the Epic Games Store is great for the industry.
They're adding competition to a space that desperately needs it.
Competition only makes us better.
And the way that they treat...
their developers is much more game and developer focused.
I mean, even looking at things like their sliding royalty rate for games.
So for people who don't know, if you want to use the Unreal Engine, you have to pay to license it.
If you want to publish on the Epic Games Store, they essentially waive the licensing fee.
as a way to deepen your partnership with Epic.
So I am a huge proponent of it.
In terms of the how to get it done, I think we are at a tipping point in the industry where games like Fortnite, Rocket League, I believe Minecraft has some elements of cross-play, Dauntless, and I believe Call of Duty also announced cross-play at E3 a couple weeks ago as well.
Like the more games that have it, the more of a precedent it sets.
And I think the more player expectations will be set there.
And I think that again, that's all just going to make us better as an industry.
And I think there's a since there's a path there now, right?
Like and there was not a path there.
Like when even when Dauntless was like just getting started.
Right. That was not like a dream that you could necessarily have.
It is so much easier of a thing to think about from the beginning.
To my point about technology and like design choices and just being able to accommodate multiple platforms like now games can start and be and be and be built from the ground up as a cross play cross play experience, which is a super cool place to be, you know, in the evolution of our industry.
I think it's going to also just.
open up much more social games in general. You can just build it from the ground up knowing that you'll be able to do this thing on this phone and also on this Xbox. That's a new design space that we are just dipping our toe into, it feels. Yeah, I hope you're right. We've got to wrap this up. We've got about five minutes. So anyone has any good questions, drop them in chat. We'll do our best to get them in. Brian, how are you feeling? Do you have any burning questions?
No, I'm feeling good.
I'm just hoping, unfortunately I'm not going to start another hunt before we go because these hunts are wonderful but they also take time.
Thank you everyone in chat for reminding me about the reloading speed.
They have a lot of feelings about it.
I'm a pro gamer, guys.
Yeah.
Like and subscribe to this channel.
You can tell because he's on Twitch.
I guess we can humor everyone.
Man, I had a question about roadmaps, I guess.
But I think we should humor chat with one question.
There's some questions about a God Hand fix.
Do you all have any opinions about God Hand?
Tell me about God Hand.
I'll tell you about God Hand.
I've heard about God Hand.
The God Hand is an exotic weapon in Dauntless that lets you fire a laser beam.
And it's very cool, and also it's a little broke right now, and in our next patch it's fixed.
But the real bad thing is just that you could shoot that beam forever.
So enjoy that while it lasts.
And while it lasts I think we're patching tomorrow.
It's literally a matter of hours.
Perfect.
What inspired the god hand for our last five minutes?
So we have this, we really wanted chase loot in the game. So it's like, oh, this weapon feels really, really different. And part of that is, I think, partially inspired by Destiny Exotics.
Like they're just like super fun to collect this weapon. It has this like unique behavior and, you know, unique art. And it feels like this little special thing that I like stumbled across and now is like uniquely mine.
And so we have exotics that people can try to farm, you know, blueprints for later in the game.
So you have to go up against the hardest behemoths over and over to be able to have a chance of getting those exotics.
And the pike, I'm not sure if we saw it on stream or not, the pike also shoots a rocket.
So you stab, stab, stab, charge up your ammo, and then you can shoot a rocket, which interrupts behemoths, deals damage, etc.
But it replaces the rocket with a beam instead.
We like it.
In the same way that we like behemoth encounters to be modular, such that we can remix them in interesting ways, we just released our weapon customization system, so you can unlock mods that let you tweak passive behavior of weapons.
So we also unlocked...
Unloshed.
That's my own unloshed mod.
We're almost to launch, I promise.
We let you be able to swap the specials.
So instead of shooting a rocket, you're able to do like this, this big buff zone if you want to play a more support style with the weapon instead, because we find that people really gravitate towards a weapon in the same way.
That's like, I really like to play mage or I really like to play rogue.
It's like, I really I'm a pike user and we want to offer as many choices to those pike users as possible.
We don't want to have like.
30 weapons and they're all really shallow.
Because people identify so much with their weapon and that playstyle that it affords, we want all of the weapons to actually go really deep.
So we're trying to introduce more weapons, but we're also trying to enrich those weapon playstyles over time.
That's a far more...
Ramply answer to what's a god hand?
Nothing what's a god hand with you with that amazing joke I'm gonna start shutting us down even though I have more questions that I want to ask the chat has some great questions Thank you all for watching. Thank you all for joining us on the GC twitch channel. We super loved having you Thank you to the dauntless player base for dropping by and asking questions Thank you for our normal viewers for coming by and asking questions if you liked this channel if you'd like If you're a bouncing goat, which I'm just learning about in chat from some gifs earlier today, but you also love game development, please click the follow button because we are going live with lots of other interesting games throughout the summer, throughout the fall, throughout the winter.
As long as they keep letting me do it, I'm going to keep doing it.
I'm going to keep asking developers questions and try and get interesting answers for you and share knowledge, help other game developers make games. That's kind of our goal here.
If you have other questions, I've seen some stuff, there's some more god hand-ish questions around here.
Andy, where should they ask him?
Go to our Twitter, play Dauntless. You can also go to our Reddit and our Discord. We have pretty active communities in both.
Right on. We would encourage you all to check those out.
And from there, all I'll say is, because this is GDC, we've got a long ways off to the next GDC. Feel free, if you want to learn more, I don't know if there are any Dauntless devs who've given GDC talks, but there might be some in GDC Vault.
Yep, we've done a couple.
Yeah, they're in GDC Vault. If not, they might even be on the GDC YouTube channel.
And also, you know, you can join us at GDC next year if you are a VR developer.
If you're working in VR or AR, we do have XRDC coming up at the end of the year.
We'd love to see you there.
With that, that's all I got.
Have a good day, everyone.
Hey, thanks for having us.
Thanks for having us, absolutely.
Thanks for coming.
Bye, guys.
Bye.
Play God Hand.
