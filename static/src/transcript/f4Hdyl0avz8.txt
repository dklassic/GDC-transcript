We are going to get going if you all promise to silence all of your noise-making devices.
I know you're going to do it. You're going to be really good. Okay.
My name is Kristen Cox.
I'm a game director at ArenaNet.
I've been making games for a little over 14 years, and for about the last 10 years, I've been primarily focused on microtransaction design and microtransaction strategy, or leading teams that are responsible for microtransaction design or microtransaction strategy.
Most recently for Guild Wars 2.
But my career has mostly been large scale MMOs.
So a lot of the examples I'm gonna give here are gonna be from large scale MMOs, but a lot of the stuff I'm talking about should be fairly universal, hopefully.
So, today we're gonna talk about microtransaction design.
I'm actually gonna do you one better.
We're gonna talk about good microtransaction design.
You're all gonna get your money's worth, which is gonna be nice.
So, It's important to ask what do I mean by good, because that could mean a lot of things, especially when we talk about design.
In this case, I'm talking about designs for systems and items that please players, that inspire players to engage with them repeatedly, and that increase the quality of your game as a whole.
So that's what we mean by good design, and in fact, that's a pretty broad definition for good design that could be applied to basically any type of design, and that's because microtransaction design is game design.
It's a specialized part of it, but it's not really all that segregated.
But it is a specialized part of game design, and it comes with a couple of special considerations.
Some are really simple perception shifts, and some are really highly unintuitive.
So the bulk of this talk is gonna be me walking through some of those considerations, those special considerations that I feel are the most important when it comes to doing good microtransaction design.
And it's gonna be organized around these big ideas loosely.
So let's dive right in because there's a lot of stuff.
There's like 95 slides.
Okay, understanding value, the most fundamental.
So one of the most basic questions that we ask in design is why.
Why does this system exist?
Why does this player want to go into this cave?
All the way up to why are we even making this game?
Good design comes from having good answers for why.
Answers that focus on players' needs and what they want, rather than the designers' needs.
When design decisions are motivated by solving developer problems, like we need this game to be longer so we don't get dinged in the reviews, we inevitably end up with weak design and weak player engagement.
This is why when we ask the question, why are we making this microtransaction, it's really, really important that the answer never be because we need to make money.
Okay, but yes, you're saying, we do need to make money.
Actually, that's important to us.
Of course it is.
Game developers have lots of needs.
Money is actually usually kind of a fundamental baseline need for you or your company.
or anyone else that's trying to sell something, that makes sense.
But we're talking about design, and we're talking about you acting as a designer in this scenario.
And so if you want to do great design, you're going to have to set aside your needs, and you're going to have to set aside your company's needs, and you're going to have to focus on your players' needs.
I'm not saying this as some kind of anti-capitalism, let's make art, not money, that's not what this is about.
Your microtransaction items are going to be more successful if you focus on player benefit more than your need for cash because the first rule of selling anything, the first rule of commerce is that people only buy things that have value to them.
Basically we went one too far.
Players don't care about your needs.
I just went right by it, because you all know that, right?
Players are applying a pretty brutal value assessment to everything that you release, and your need for cash, your cash flow, how much revenue you're making.
It just doesn't factor into that assessment.
They really just don't care.
A great example of this at a high level is the decline and failure of the monthly game subscription business model.
There we go.
So why do monthly game subscriptions exist?
Well, if they do exist anymore, they sort of don't.
I thought about this a little bit, came up with a list.
This is not like a completely exhaustive list, but I think it's a pretty good list of the top reasons that monthly subscription fees existed.
So that list obviously has pretty high developer value and pretty low customer value.
It's really strongly skewed towards the developer slash publisher.
As audiences for online games got bigger and they got more sophisticated, their ability to see funding continued development as a community effort diminished, right?
The games got bigger, the companies got bigger, players expected companies to take care of themselves, it wasn't about, hey, we're all getting together you know, be scrappy and sort of support our favorite devs, it actually became a business.
And so at that point, subscription fees became even less attractive to players.
Of course, I'm not suggesting that this is the only reason that the industry made the shift from subscription fees to free-to-play when we're talking about big PC MMOs, but it's more complex than that.
But from a design perspective, if we're just thinking about design, subscription fees come from a place of really weak customer value, and that contributed to them underperforming pretty significantly in the face of newer models.
So many of you probably noticed, when we talked about the value of monthly subscription fees, I left something out that might have seemed important to you and that was access to the game.
And I did this because I wanna talk a little bit briefly about inherent versus derived value.
So items are systems with inherent value, right?
They provide some benefit to the purchaser that was not created by the seller.
An example of this is cosmetics, right?
Like hats, players want to express themselves, they want to look the way they want to look, and the hat provides that all on its own.
Your game probably didn't invent the idea of hats.
So you get that for free to some extent.
So items or systems with derived value are once removed from their benefit.
Monthly subscription fee is a really simple example.
The value is the game, not the subscription.
The only reason the subscription has any value is because the seller decided to gate the game behind it.
This creates a situation where the opportunity cost evaluation that the purchaser is making is removed from the actual value.
And that puts a higher amount of pressure on the thing that you're purchasing to be that much better.
The value needs to be clearer and it needs to be higher.
I'm not saying derived value systems are inherently bad.
Of course they're not.
Currency is a derived value system.
They do a lot of really great things for us.
But you need to be aware that you don't really get that for free.
Once you remove the evaluation the player is making from the actual purchase that they're making, you have to go a step further.
You have to have more value for them than you normally would.
The example of the monthly subscription fees, a few games did really, really well with this model.
You know, in hindsight, a very small number, but some of them did really well.
Because the value of those games became such an overwhelming value proposition for the players that they were willing to basically do whatever it took to get access to the game.
And a lot of that came down to cultural zeitgeist and social pressures and things like that and also the quality of the game, which is really high.
Now I assume that every game that released under this model kind of assumed that yeah, our game is so great that people will definitely jump through the subscription hoop to get to it.
What's kind of ironic about that is they were probably right, not about the subscription hoop, but they were probably right about the value of their game.
Because when we actually did make the transition in MMORPGs from monthly subscription fees to free to play, a lot of games actually operated under both models.
And pretty much all MMORPGs that even had a little bit of success had a much higher average revenue per paying user a month than $15.
Like double, triple that.
Players were actually willing to pay a healthy amount of money, $15 a month, $30 a month, to play those games because they valued those games and they valued the things in them.
They just didn't really value the subscription fees.
In general, players actually make two really distinctive valuations.
One happens before the purchase and one happens afterwards.
Before the purchase, players rely on you pretty much exclusively to communicate the value of the microtransaction item or system that they're going to buy.
After the purchase, players evaluate how satisfied they are by that purchase.
And a big part of that evaluation is going to depend on the gap between what you promised them and what they feel they were delivered.
And you really need to get this right.
Because microtransactions absolutely 100% depend on the second evaluation.
The first one's important, kind of, you have a funnel you have to work on.
But the second one is really key.
They are microtransactions.
We have to have repeat purchasing.
So you really have to get that one right.
And you can really hurt yourself a lot if you don't control the first one.
There's a couple of ways this usually happens.
One is implied value by marketing.
Right, so attempting to manufacture a usually vague kind of value for marketing, like oh, this item is sort of associated with this good thing, and if I buy this item, then I'm gonna get more of that good thing.
This is a really common tactic to sort of juice up your first evaluation.
Of course, a lot of times when this kind of idea is taken to an extreme, it's pretty absurd, it's pretty crazy to be like, man, if I just eat this Snickers bar, then topless women will be everywhere.
Obviously, that doesn't make any sense, but we do it all the time.
And this really erodes player's trust.
It happens in microtransactions as well, sometimes not as extreme as those examples.
But.
It can be really simple things like, oh, I'm gonna feature a pro player using this item and just suggest that if a normal player used it, they would play as good as the pro player.
Or it can also be really manipulative.
I mean, you could say, we've doubled the drop rate on this item in a random box, but you know that the double drop rate is still so incredibly low that the average player is never gonna get it.
You know, a lot of these things I'm talking about are actually pretty classic marketing techniques, but that's not really a good argument for using them.
Players don't care that other industries use them.
They just care how they feel when they're evaluating their purchase after they've made it.
The second way this happens, happens a lot in microtransactions, and that's obfuscating value.
The most egregious form of this is intentionally making items or systems hard to understand because if they were clearly understood, the player wouldn't be seeing them as valuable as you're selling them for.
This can actually happen unintentionally too.
Games are really complicated and if you have a game with a really complex progression system or a lot of complex systems in it, this can just happen.
But whether you intended to do it or not, obfuscating value is pretty bad for player trust because, weirdly enough, people don't like to feel tricked.
So let's talk about random boxes.
When we're talking about obfuscating value, these are gonna come up.
Remember, good design comes from satisfying player needs.
And random boxes do fill some very specific player needs.
But they're also incredibly easy to design in such a way that their value is really murky.
And that can lead to confusion and eventually resentment.
And once a player opens a random box and they feel ripped off, they are much less likely to buy another one in the long run.
So how can we avoid this?
How do we design a better random box?
So let's go back to our whys.
Why do players buy random boxes?
It's not because they love to gamble.
I mean, it's part of an answer, it might feed into your design, but this is not an acceptable answer to this question if you really want to dig into what motivates people.
Sure, people do like to gamble, but they still don't buy things that don't have real value for them.
And adding a random element doesn't prevent people from evaluating their satisfaction after they've consumed your item.
In fact, players are really sensitive to value outputs.
So.
These are two random boxes from Guild Wars 2.
The numbers aren't real, don't get too excited.
But they are two random boxes from Guild Wars 2.
They both cost $1 to purchase.
Random Box A outputs about $1.50 on average when a person opens it, so the thing they get out of it is worth usually about $1.50.
Random Box B has their output at about $1.75.
So a really clear thing happened here.
Random box A came out into the market and people were like, oh this is interesting.
I've seen you talk about this and it looks kinda cool.
I'm making my first evaluation, I'm gonna purchase it.
Then, pretty quickly, players obviously made an evaluation that this box was not worth it.
They were not happy with it and sales went way down.
Conversely, apparently, for this type of thing, $1.75 was the sweet spot, because when we released the second box, not only did it sell really well right away, and we already in that first week saw a lot of repeat purchasing, but then we got a word of mouth effect where we had even new purchasers in the second week, and they became repeat purchasers as well, and it did significantly better.
The players didn't have access to the drop tables, the players don't hear the $1.75 amount.
They're evaluating this based on just their satisfaction after they open the box.
And it can be tricky to figure out exactly what's gonna be satisfying for players, but you need to be focused on trying to hit it.
So, players are really sensitive to value, right?
But where does that value come from, right?
What do they want random boxes for?
I said they satisfy a couple of specific demands, so what are they?
Well, they fall into two categories.
The first is jackpots.
So in these random boxes, mostly what the player opens, when the player opens the box, they get sort of small, incremental, consumable rewards, but then there's a really small number, maybe even as low as one jackpot item that's really, really awesome that they're going for.
These boxes provide players a chance to get something that by necessity must be rare, if your game actually supports rarity markets, or they allow players to get something expensive for cheap if they're lucky.
That's the draw, that's the value for players buying this kind of box.
Balancing the price of an individual box versus the value of the jackpot is sort of the key for these boxes.
The jackpot is the thing the players are evaluating you on.
In these kind of boxes, the non-jackpot items, they kind of just fall away.
Players don't really see them as having value.
You may try to argue like, no, they're totally worth $0.25 or something apiece, but it doesn't actually affect the way people evaluate these.
They just look at the jackpot item.
So if a player looks at your jackpot, random box that cost a dollar a piece and they decide the jackpot item is worth $50 to them and then they don't get the jackpot item after spending $50, they're going to feel ripped off.
And they're not gonna wanna hear about rarity rates across the entire population.
They're not gonna wanna hear about, but on average you would have gotten it at that rate.
They only really care about their own experience.
And so trying to hone in on figuring out how players are going to value that jackpot is sort of key to pricing these so that you get that great second week repeat purchasing.
The second type is grab bags.
These are random boxes where all of the items in the random box are pretty similar in value.
They actually usually come out at a fairly even rate.
Grab bags allow players to get something for a cheaper price when they don't have a strong preference for exactly what they want to get.
So if players are like, I just want...
customization options. I just want to have more things in my wardrobe, but I'm not really willing to pay a premium for a specific thing. Then they can open a grab bag and just get something random, and they're pretty happy.
Players judge the value of these based on the entire content of the box, right?
Is this set of things that I might get good?
Do I want them?
Would I be happy if any of them came out of the box?
A good way to sort of price these, and we'll get later in the talk, I'll talk a lot more deeply about pricing, but a good way to sort of find your value for these is to think about what is the lowest value item that comes out of the box, and is it still a good deal if I get that item when I open this box?
Of course, random boxes do get used to satisfy other needs, and they might satisfy a need that's super specific to your game.
But what's important is that you have a clear audience that sees clear value in your random box, and that you remember that random boxes cannot be used to satisfy every need.
That's more of a developer need.
That's not a player need.
So there are some player needs they do satisfy really well and they're great for that, but we can't sort of force players to use them to satisfy other needs that they'd rather not use them for because that makes them angry.
We've seen over the past year a couple of cases where pretty poorly designed random boxes have caused a lot of player backlash in really high profile games.
And that backlash affects every game.
even games that use random boxes well, or you think, I designed my random boxes perfectly and I'm always thinking about my customer value.
Those very high profile backlashes affect you too.
Random boxes are really good at some stuff.
They make some players really, really happy.
Some players really like them.
But if we abuse them, they're gonna become synonymous with cheap money grabs and we're gonna lose them.
They really could just go away completely.
We could lose them out of our toolbox.
It really wouldn't be that hard.
We've definitely seen a similar kind of thing happen with other tactics and other options for game design in the past.
So it's not out of our own possibility.
But avoiding that really comes down, like I said, to understanding what your players want and what they value and player motivation.
So that's a good segue.
We're not thinking about money right now, we're just thinking about great design, we're thinking about value, but hey, how do you know what your players value, right?
Why do people want things?
We can zoom all the way back out and just talk about why people do things at all.
And lucky for us, there's been a ton of research into why people do things, human motivation.
And since we're talking about video games, we don't have to worry about basic motivations like food and shelter, because most people don't use video games to satisfy those needs, thank God.
And we can just focus on models that deal with more high-level human motivations.
And I actually like this, it's actually sort of helpful for me to remember that when we sell things in video games, we sell microtransactions, we're not selling anything that anyone truly needs.
So when people decide to buy things that we make, they're making a really free evaluation that's pure and they're deciding just based on how good is this item and how happy does it make me.
I kind of think that's great.
So there's a bunch of models for high-level human motivation, but we're gonna use self-determination theory because this is GDC.
And I figure a lot of you are familiar with it.
I also like it, right?
It's pretty great because it's all about these high-level motivations and it really cares about the kinds of things that drive people to put a lot of time and effort into stuff that might not seem like it has any sort of obvious, extrinsic value to them.
And its focus on that kind of intrinsic motivation makes it really, really suited for doing design work around rewards, progression, and monetization, which is great.
For anybody that doesn't know, just really, really quick, STD tells us that many high-level human behaviors are driven by intrinsic motivators and not extrinsic rewards and punishments.
Further, intrinsic motivators exist to satisfy mostly three high-band human needs, the need for autonomy, the need for mastery, and the need for relatedness.
So when we look at microtransactions, we can break a lot of them down into these three categories.
So here's a list of some examples of the kinds of things that satisfy the mastery need, the autonomy need, the relatedness need.
So that's actually pretty simple, right?
If your microtransaction just satisfies one of these needs, then you're doing great, and it's gonna have value, and people are gonna buy it.
Cool, but what needs are best suited to be met by microtransactions?
And should you try to meet all of them with your microtransactions, or should you only try to meet some of them?
Should you try to meet the same ones that your game is meeting with other means?
All of this stuff is, somewhat dependent on the exact game that you're making, but let's go through some sort of core guidelines.
So aligning your motivations with your core gameplay can give you a lot of great synergy.
For example, collectible card games all by themselves offer a lot of autonomy satisfaction, right?
The more cards you get, the more options you have in battle and that makes you feel like you're more free and you have more choices.
You could sell card packs.
That also increases the autonomy satisfaction.
This is the classic model that Magic the Gathering uses.
Both their core loop of collecting cards and their business model revolves around satisfying an autonomy motivation.
But complementing your core gameplay need satisfaction can also be successful.
When collectible card games moved more into the digital realm, we see more of them try to also satisfy the relatedness need by offering like avatars and custom borders and things like that.
And that usually gets filled entirely by microtransactions because the core of the game just doesn't really offer much of that.
It offers a little bit, but not much.
You need to watch out for some cultural biases here.
There's some pitfalls.
If your core gameplay mechanic is aimed at satisfying the mastery need, and a lot of them are, because games tend to focus pretty heavily on the mastery need, and your intended audience is largely Western, you may want to avoid selling items that satisfy the mastery need as well, because traditionally, Western cultures are uncomfortable with the idea of money being exchanged to gain mastery.
especially in context where mastery is seen as earned.
We really value effort.
And when you start to create a situation in which we say effort equals this signifier of mastery, if you sell that as well, you're gonna trigger some very deep-seated cultural resentment.
basically you're gonna make it feel unfair.
So an example, a real world example, is if you had a fighting game, and as players won matches, their fighters leveled up and they had a number associated with them and they became more powerful, the more matches they won, and then you sold away to increase that number as well.
most Western audiences would think that was pretty unfair because you already set up a situation in which that number is a signifier of ability and it's a signifier of effort, it's a signifier of wins.
And so you're muddying the water, you're making that signifier not mean as much, you're making it difficult for people to understand what mastery really means in your game.
You could maybe argue that that microtransaction that I just described is actually providing an autonomy satisfaction, because you're trading time for money, and traditionally we think time for money trades are autonomy satisfaction meters.
But if that's true, you need to make that clear.
The example I just gave, as I said, very muddy.
Like, I don't understand what this number means anymore, I don't really understand where my mastery level is at.
So if you want to trade time for money, go for it.
But make sure you make it really clear to the player that you're not replacing mastery.
There are examples of selling mastery satisfaction really well in a way that doesn't feel inherently unfair.
I'll give you one.
The MMORPG Blade and Soul, which is made by NCSoft, has a system of weapon upgrades that requires the player to acquire a whole lot of a specific resource in order to upgrade their weapon.
They can go out and get that resource in the game, or they can buy it.
and you just purchase it from their store.
But once they have all the resource, the weapon does not actually get upgraded unless they beat a boss monster with the weapon.
So yeah, you can speed up the process of gathering your resource, but the thing that you're sort of signifying in the player's mind, the thing that makes the weapon get upgraded, is beating that boss monster.
And that fulfills a very satisfying, intrinsic mastery need as well.
You also want to understand what needs your game's reward systems are going to be aiming to satisfy, as attempting to satisfy the exact same needs with rewards and microtransactions can lead to the two systems fighting with each other.
We suffer from this problem pretty significantly on Guild Wars 2.
So because in Guild Wars 2 there's no stat increases on gear at the end game, rewards for high-level content are mostly cosmetic.
We also sell a lot of cosmetics for microtransactions.
This creates a situation where our most dedicated players are motivated to complete the high-level content by the cosmetic rewards.
They are intrinsically not motivated to purchase microtransactions for cosmetic microtransactions and vice versa.
They're fundamentally just sort of fighting with each other.
We've alleviated this a little bit over time by sort of carving off types of cosmetics for rewards only and types of cosmetics for microtransactions only, but it's really not ideal.
And it makes things particularly difficult for the next section, which is pricing.
Because it is confusing for players when something is worth effort, but it's also worth dollars.
So we've been talking about designing microtransactions and just thinking about value in this really abstract way, and now we're gonna take it into a very concrete world and we're gonna talk about putting real currency values on your microtransactions.
In this section, you're gonna see a lot of these graphs.
This is a type of demand curve, but it's probably not what you're used to seeing just from a microeconomics textbook.
There's no supply curve because we don't need it and we don't care about it.
I can get into exactly why, but it's not important to us right now.
The blue line is gonna be demand.
That's just how many people or how many units would you sell at the price, which is down at the bottom.
I've added the white line which is revenue, just to make it a lot easier to see where those, how those different prices affect your overall output for selling the item.
So just traditionally in economics you wouldn't really see revenue graphed that way, but we're gonna do it here just to make it really easy for you guys to grok quickly where the highest revenue generating price is on each graph.
Microeconomics basically tells us that pricing is really, really easy.
You just gotta plot this demand curve against a bunch of possible prices, and then, cool, we make our little white line, we see where the peak is, that's it.
You've got a price.
So simple.
Unfortunately, forecasting demand to this resolution is really, really hard, especially if you don't have really specific historical data.
And pricing can be unintuitive because you don't always know actually what demand curve you are plotting.
As an example.
Virtual currency bundles.
So virtual currency bundles, in case you don't know, are hard currency.
Basically, in a lot of games, the player can purchase a currency that they can then use to buy microtransactions.
Instead of having the player pull their wallet out every time they wanna buy a hat or a booster or every little thing, instead you sell them big bundles of your virtual currency that they can then spend on little.
micro-transactions as they wish.
A lot of games use this system.
And virtual currency bundles seem like they should have the most traditional demand curve in the world.
They're just such a pure, there's such a pure demand for them, because they are themselves just an abstracted currency.
So, the higher the price, the less people are gonna be willing to buy it.
The lower the price, the more people are gonna be willing to buy it.
This seems really obvious, and I actually see most games just operate on this principle automatically, assuming this is absolutely true.
Actually though, virtual currency bundle demand curves look like this.
So, they're really different than that traditional demand curve.
They're highly inelastic, actually, which it seems like they shouldn't be.
That's very odd.
So, let's dig into why, and I'll talk a little bit about this graph specifically to illustrate this.
This graph is based on this set of data, which is obfuscated, but it comes from a game called that I worked on in which we ran a little experiment on our virtual currency bundle offerings.
So we just looked at first time purchasers so we didn't sort of muddy the data with people coming in a second time.
But basically on week one, we offered all of these different virtual currency bundle offers from $1 to $100.
Then on week two, we took away the $1 offer and on week three, we took away the $5 offer.
And I know this is a lot to digest quickly, but what this graph is telling us is that about 70% of first-time purchasers always purchase the cheapest bundle available.
But when the cheapest bundle available is set to a higher price, doesn't significantly change their behavior.
You don't really gain any additional purchasers by having the cheaper bundle.
People are just gonna buy whichever one is the cheapest that they come across.
And that seems really weird.
And you might be like, wow, you just had some really weird game that had this crazy thing happen, but no, it seems like this is pretty much true across the board.
It is true for every game I've ever worked on, for sure.
But also, back in 2012, Emily Greer from Congregate, which is an...
There used to be solely web-based game portal.
They've branched out to a couple of other platforms.
They have lots of games on their platform.
She presented a bunch of data for 150 of their games which showed that yeah, this is the virtual currency demand curve for pretty much everything.
So why, that doesn't really make any sense.
Well, the thing is that it's not the virtual currency demand curve.
It's the fifth step in the funnel demand curve.
We are not really getting to find out what motivates people who just want virtual currency because we had them go through all of these steps to get to the point where they chose which bundle they were gonna buy.
Some people have messed around with this a little bit on mobile and done some really cool things where they actually have you pick your bundle first and that actually helps alleviate this problem.
But the funnel still ends up churning out a lot of potential purchasers and it mostly churns out the people who are interested in only buying the cheapest option.
So by the time they actually get to the point where they're making the purchase, you've already lost most of the people that you could sell a $1 bundle to.
That's actually unfortunate.
I wish it wasn't true.
We should all be working on making this funnel better, and it is getting better over time, but it is true, and if you're actually gonna make decisions based on a demand curve, better know that you're making a decision based on this demand curve and not this demand curve. And that can be a little bit tricky if you just look at the surface level. So.
Demand curves are tricky, yes.
And if you're introducing an entirely new class of microtransactions into your game, or you're launching your game for the first time, you're gonna have to figure out how you are going to figure out how to price them, because you don't have any historical data to build your demand curve off of.
So let's just walk through a fictional example, step by step, on putting a price on a microtransaction item that's new.
So in this example, we're gonna say that you have a racing game, and that game is heavily focused on players creating custom paint jobs for their cars.
It's a big part of the game, and you've designed a microtransaction that allows players to store multiple paint jobs per car and just switch between them at will.
So that's a pretty cool microtransaction that fits into your primary motivation, awesome.
So, first, to figure out how to plot this demand curve, we just need to figure out what kind of demand curve it is, because there's two basic types of demand curve.
There's elastic, and there's inelastic.
So elastic demand curves are what you probably think of when you think of demand curves, right?
This is the thing that's like guns and butter in your like microeconomics class in college.
You're like, yeah, if more people wanna buy it, if it's cheaper, and that's true for some things.
There are some things that have sort of a universal appeal.
An example in games for this is boosters in games with number-based progression, right?
Would people like their progression to go faster?
Yeah, pretty much everyone would use a booster if they had it.
But whether they're going to buy it is based almost solely on whether they think the price you're charging for it is worth their benefit. And the lower your price is, the more people who are going to decide, yeah, that's totally worth my benefits.
It's a really basic demand curve. But there's a lot of things that actually have an inelastic demand curve.
This is a curve in which changing the price doesn't significantly affect the number of people who are going to buy it.
This happens a lot with things that have a niche demand.
A good example in video games is cosmetic items.
If your game offers me the ability to change my head into a pumpkin, and I hate pumpkins, and it doesn't matter how cheap that pumpkin head is, I'm never gonna want it.
But if the only thing I care about is pumpkins, and I'm obsessed with pumpkins, and I need to make my character the pumpkin queen, then I'm gonna be willing to pay quite a lot of money to change my head into a pumpkin, because that's gonna go a long way to satisfying my very specific need.
So your pumpkin item is actually gonna have a pretty inelastic demand curve.
The size of your market is gonna be smaller, but the people in it are not gonna stop buying your item until it gets relatively expensive, and people who don't inherently want your item aren't gonna enter the market until it's really, really cheap.
So that's an inelastic demand curve.
Our example item, this paint job storage item, is actually somewhere in the middle.
It's gonna tend to be a bit inelastic.
Because you are cutting your market off a little in that if someone is playing this game of yours and they don't want more than one paint job for a car, they're never gonna want your item.
So it's not universally appealing.
So it's gonna be inherently a little bit inelastic.
But since we said that one of the core motivations in your game is customization and personal expression, you're gonna have a lot of people who are interested in this item and it's gonna be at least somewhat elastic.
I talked a little bit just now about size of market and that is your next big consideration.
So how many people could even ever want this item?
We start by saying like if this item was free, how many people would want it?
And if any of you have ever designed rewards in a game, you know that free does not mean everybody wants it.
There's still a demand curve for stuff that's free.
So, but it's pretty simple.
So we just use this simple kind of chart.
how big is the market, how many people are gonna want it.
And we also look at how that relates to elastic and inelastic because if you have an item that almost nobody wants, but it's really elastic, that means you're gonna be selling very few of them for a very low price, you might not wanna do that.
You might be okay with it, it depends, but it's usually, that quadrant's usually not so fantastic for return on investment.
Our paint storage item has got a smaller market because as I said it's only people who want more than one paint job.
We've cut everyone else out of that market and it's sort of here in the middle of elastic and inelastic.
So, now that we know that, we can get the shape of our demand curve.
Okay, you know, we kind of know the size of the market, so we can plot that.
And we also kind of know the shape of the elasticity, so we can plot that.
We still don't really know what our possible prices are, though, and how exactly they're going to affect demand, and that one is tricky.
Figuring that out usually involves a lot of research and maybe some forecasting if you have that available to you.
You're going to want to look at a couple of things, particularly what is your average revenue per paying user for whatever time period you usually look at.
Some games look at average revenue per paying user a day, average revenue per paying user a week, average revenue per paying user a month.
You want to use that as a baseline because if you're like, in general, we expect people to spend about $10 a week on our game, and you introduce an item that costs $15, you are asking players to pay more than you expect them on average to pay in a week for one item.
And you got to have an idea of how that's going to affect your overall market.
So you can look at some projections for that.
You can also look at some comparable titles, you know, look what other people are doing in the space.
There is enough free to play stuff that you're probably not making something that can't fall into some category.
You wanna do this anyway because your players play other games and if you try to say, hats in our game cost $100 a piece.
You better have a really good reason for that because that is not the baseline people are used to paying.
So using those two things, just looking at what your projections are for the game, what the market is, we can at least get a good idea.
It's not gonna be perfect, it's not gonna be exact, but we can plot some possible prices and actually do this revenue graph.
And there, we've got it.
We've now plotted what our revenue is and we've got our peak, our revenue, optimized price.
You've done it, now you've figured out your price.
Or maybe not.
Because I have one more question.
Should you charge the revenue optimized price?
This is not a question that I think gets asked enough in monetization design.
This chart you're looking at, I'm going to dive into a little bit here.
It's a little bit more of a complex economics concept, but bear with me.
So microtransactions all exist as monopolies.
They all operate as monopolies.
If I don't like the price of the boosters for your game, I cannot go to another game and buy the boosters there.
That's not available to me.
So we're all operating in monopolies.
Monopolies push commodities to be more inelastic.
If we're actually being totally honest, all microtransactions are inelastic.
We would never consider anything we sell to truly be elastic in an economic sense, like a pure economic sense, economic theory.
Because we operate in a monopoly, so everything is inherently somewhat inelastic.
Without competition, purchasers are more likely to continue buying something even when the price goes up, but that doesn't mean that they are happy to pay that price.
The concept of socially optimal price comes from what's known as a necessary monopoly.
which games are not, but I think it bears understanding.
Necessary monopolies are monopolies that exist because competition is too inefficient for the market to bear, but the thing they're producing is really important and we need it.
So a really good example of this is the pharmaceuticals industry.
So we actually don't have enough high-end biology researchers and medical researchers to fund 12 or 15 different pharmaceutical companies researching the same drug.
It doesn't exist.
It's too inefficient, and the market can't support it.
But we need life-saving drugs.
And so we have a necessary monopoly.
And we allow that to happen.
This chart is actually from policymaking around pharmaceuticals.
And basically what we've got is if you produce a life-saving drug and you plotted the revenue optimized price for that drug, it is going to be very high because it is life-saving.
And if people need it to live, they're going to be willing to pay whatever they can, which is going to be high.
Now a lot of people won't be able to afford it, and so they'll die.
And that is going to incur a social cost.
And so when we see the socially optimal price, that's the price where we sell this life-saving drug for just enough money to cover the cost of creating the drug.
That's the best for society because the least number of people die.
I'm using the pharmaceutical example because...
Calculating this, calculating social cost, is really, really complicated.
And unfortunately, one of the easiest ways to understand it is when we calculate death as the cost.
That's actually a little more binary and cut and dry.
There are other industries that this affects, like telecommunications and utilities providers that is not so dire.
But it's really complicated to actually calculate social cost.
Here it's a little bit easier to understand if we just say, yeah, this is the point where the least people die.
I'm not going to talk about the fair return price because I don't want this talk to get political.
You can look into it.
In video games, we're not talking about a social cost that's death, thank goodness, but that doesn't mean social cost doesn't exist in your game.
One of the biggest things that you need to think about when you are pricing something is can you calculate your social cost?
You should be asking this question.
You should be thinking about it, even if you decide that you don't care about your social cost.
You should at least be considering it.
It's not as obvious and severe, this social cost, as it would be with life-saving drugs and all of that.
But sometimes players will pay the revenue-optimized price, but they will feel taken advantage of every time they pay it.
It's really easy to say that if someone bought something, they must have thought that it was worth the price they paid, but in a monopoly, that's just not true.
And charging prices that players perceive as too high can cause a perception problem, and it can cause community backlash, and it can build up over time.
If you take one thing away from this talk, it is that your games are not free markets, and if you are doing economic evaluation of your games and you use free market economics to do it, you're lying to yourself.
You're not getting accurate information.
You need to be using monopoly economics, because that's the actual market that you exist in.
One example that I see of this in games a lot is very high prices for things like name changes and server transfers.
It is true that those are incredibly inelastic and people will pay a really high price for them because when they need them, they really need them.
But they have a tendency to create a situation where the player feels taken advantage of.
like their account or their player is being held hostage because they really feel like they need these things.
It's not a mistake that when players are most likely to purchase a server transfer is also correlated with when they are most likely to leave your game forever because it's a really high-pressure situation.
So social costs can also, that's a pretty specific example, but social costs can kind of creep in to your entire microtransaction catalog because players have different purchasing power.
You gotta understand that players have spending limits.
At some point, no matter how high their demand is, they're gonna run out of disposable income.
So if the only thing you think of is how enticing is this item, how much do people want this item, you're gonna end up cutting a lot of people off.
Because when you price something at the revenue-optimizing price, you are cutting some people off.
That's sort of inevitable, especially like in free-to-play titles.
Somebody's gonna be on the other side of that line where they can't really afford the thing that you're buying, that you're selling.
But you have to also account for the fact that when you price potential customers out of an item, that incurs a social cost.
And if players continually run into a situation in which everything they want in your game is out of their reach because they can't afford it, they're probably going to become frustrated and they'll probably leave because in a lot of games, the loop of purchasing things through microtransactions...
is a core fundamental part of the game, and players see it that way.
So if you are saying you can't participate in this, you're never gonna be allowed into this part of the game, players do see that as being cut off from things, and they don't love it.
Further, if you attempt to squeeze players right to their purchasing limit over and over and over again, they're eventually going to feel taken advantage of.
You'll basically optimize revenue on a series of individual items, but you'll end up cutting your potential revenue pool significantly.
You'll just leave off a big group of them, and you'll probably burn some of your players out.
Spending burnout's very real.
It has a very intense negative emotional effect.
And it also leads to a lot of people leaving games and turning out permanently.
And this is kind of silly, right?
Because microtransactions have such a low continued production cost, which like, we don't even have to think of supply, I don't even have to put it on charts because it's so negligible to what we do.
We have incredible control over pacing and variety of items offered and pricing that like no one in physical goods can ever have.
So we can actually optimize for this.
We can care about social costs too and actually balance against that.
and hopefully have longer engagement with our players and more potential customers with a wider spending pool.
When we launched Guild Wars 2, we thought about this a lot.
We were creating a premium game.
When we launched Guild Wars 2, it cost $60 to get the game, to get in the door.
But we knew, we'd planned from the beginning that we were going to support the game through microtransactions.
We had a live business that we were preparing and we had plans for right from the beginning.
But then again, like I said, $60 to get in the door.
Everyone who was coming into the game had just paid us $60.
And we were creating our first catalog, the very first thing we showed players in our cash shop.
We were constantly asking, how will this store look to someone who just paid us $60?
They just got in on $60.
We needed to be aware how these items' values were going to be compared to that initial $60 cost.
Even if maybe in a vacuum we would have done some things differently, we had to be aware of this sort of community and social situation in the game.
So we wanted the game to feel accessible and sustainable to those players even though they just paid a premium price and we are essentially saying you're signing up for a game in which there's gonna be a live business.
That's the way that we're gonna support it.
So this is gonna be a part of that business and a part of your gaming experience.
So we focused on having a lot of high value, permanent unlocks, to set a standard of high value and high quality, because that we felt paired better with the fact that they just paid $60 to us and they were interested in a premium experience and they were interested in things that were gonna last the lifetime of their account.
But we also put a big variety of low cost consumables into the game because we wanted to make sure players were primed for the fact that there was going to be a lot of accessibility to the cash shop and there was gonna be a lot of options for all of our players.
And we also have a dual currency system that's freely tradable so players can actually trade their, our virtual currency for the in-game currency at a floating rate that's determined by demand.
So for us, also very important to say, hey, even if you're not gonna be buying our virtual currency.
you can be trading your gold in for that virtual currency and still use this system.
There's gonna be something cheap enough to make that realistic for you.
Okay, so just a few more things about pricing before we move on.
The price you set for your items needs to reflect the value.
We sort of talked a lot about that, about what value is and how to determine it.
But it also, the price you set, has a large impact on the player's perception of an item's value.
And first impressions are really important.
Human beings have this thing with numbers, they're sort of special in our brains.
When we attach a number to something, it's really hard to dislodge, it's harder than an image, it's harder than a sound.
I guess it's not as hard as smell for some weird reason, that's like the most difficult one.
But numbers are really sticky.
And once we associate them with something, it's really hard to change it.
So once you put an item out there with a price, you're kind of stuck with the perception of that price, even if you change it later.
I think this probably goes that same, but you should never raise prices on items.
That's obviously not gonna go over really well.
Discounts go over better than raising prices, of course, but it's very hard to permanently change that association.
So even if you eventually lower the price of an item, it's never gonna have the effect that it would have if you launched with that price.
You're still gonna be sort of fighting against that initial perception.
For similar reasons, frequent price fluctuations are not great.
I even mean running frequent sales events can be significantly detrimental to the way players interact with your store.
It erodes players' confidence when they're purchasing.
So if prices are constantly changing, you're introducing a new question the player has to answer, which is, is this the right moment for me to buy this?
Should I wait an hour?
Should I wait a day?
Should I wait a week?
I don't know because the price is always changing.
And that's an additional question you don't really want them to have, right?
You want them to be the easiest possible decision they make to make that purchase.
The last thing we're gonna talk about with pricing is indirect pricing, mostly just talked about putting prices on items, but there's also a very common practice in microtransaction design to do indirect pricing, so we're gonna go back to talking about random boxes.
I talked a little earlier about them, we talked about jackpots and we talked about grab bags.
They both are also indirect purchasing systems, but they do it a little bit differently.
So jackpots are usually built around the idea of items that derive their value from rarity.
Of course, this requires, as I said, your game to have an actual concept of rarity and for your game to actually put value on rarity.
But let's assume that it does and you have jackpots.
But if it doesn't, you're probably not gonna do super great with jackpot items.
Jackpot random boxes basically allow you to price an item by calculating the amount of money a player will spend in order to get the jackpot.
You don't want to fall into the trap of trying to calculate the price by determining how many of the item you wish to exist in the world.
That just isn't going to translate.
We talked about it a little before.
Players just don't care.
They only care about their personal experience.
You want to anchor this as much as you can to if I am an individual player buying this thing, how am I going to feel about its value?
Also, hey...
watch out for random number generators.
I know they're really simple and they're like now, they're just everywhere and you can just grab them basically for free.
So people use them all the time, but if you have an item that comes out at a one in 50 drop rate, that means 36% of your players aren't gonna get it in 50 drops.
It's gonna be more than 50.
Yes, 36% of them are gonna get it in less.
than 50 as well, but that's not gonna really placate the ones that had to pay more than that.
Random number generators are not the only way to go.
I would implore you to think about other things like set schedules, token systems, anything that you can do to gain a little bit more control as a designer over crafting the experience for your players so that you can have more control over their perception of value.
Random number generators, sometimes they're totally fine, but you know.
humans are really bad with actual random.
Okay, so grab bags.
They're not built around rarity markets, so that's not the way that they use, they create indirect pricing.
Grab bag actually function the best when the items come out of them at about the same rate.
So even though that's true, they still are an indirect pricing model.
Let's use an example.
So let's say you've created a cosmetic item, and for instance, it's a monocle.
And then let's say you plotted your demand curve for that monocle and you looked at your ARPPU and you looked at your potential market and you did all of this research and you found that the monocle was really niche and really inelastic and the optimal price for the monocle was $80.
You'd probably look at that and think, man, that's a lot of money for a monocle.
That's way out of whack with what most people would pay for cosmetics and other games.
That might not look so good in our catalog if we actually charged $80 for this monocle.
A possible solution for this problem is to release the monocle in a crab bag.
Because you did all this work to plot the demand curve for the monocle, but there's a second demand curve that exists for players that just want cosmetic options.
And they'd be happy to have the monocle, but they're not gonna pay a premium price for the monocle.
So you can put the monocle in a grab bag with a lot of other cosmetic options, you're not gonna be able to charge anywhere near $80 for it, but your market's gonna be so much bigger that you'll probably actually do better in the long run.
Games like Overwatch basically employ this strategy exclusively, and it actually has pretty high customer satisfaction overall.
Okay, we're finally through pricing.
Let's talk a little bit about feedback and data.
So feedback is really, really important to design.
We are all full of cognitive biases and skewed perspectives and personal heuristics, and we rely on other people to give us feedback and provide a diverse set of voices so that we can understand how to do good design that isn't just for us, but is actually maybe going to be broadly appealing.
But what do you do when you're designing something that is almost impossible for people to speak openly and honestly about?
Well, traditionally for microtransactions, the answer is you turn to data.
And data is great.
I love data.
The collection of data on a large scale has changed the video game industry, right?
We have amazing insights into the activities of our players now, and it's really, really incredible.
But data has a really big weakness when it comes to making design decisions, and that's that data is analytical, but it's not predictive.
Data can be used to make predictions, but all by itself, it isn't predictive.
And that sucks, because we really need it to make predictions.
We need to understand how players are gonna react to our designs, what should we focus our efforts on next.
We need all these predictions, and we need them really fast.
Forecasting and actual predictive analysis is really time consuming and involves people with like PhDs and stuff and it's really hard.
And it's complex.
And it's a really bad substitute for feedback because it's so slow.
Data is fast and now it's really easily obtainable.
So what I see happen for a lot of developers is they decide that since they need data to be predictive, then it just is.
So, you know, we.
Why not?
It's the magic of design.
You create items and features and changes and then you look at data and you react to the data.
And that strategy is sort of effective.
Data sometimes does line up with predictive analysis and so you're gonna get some hits.
And the nice thing about this strategy is that it moves really fast and creates a lot of iterations so it covers up all its misses.
So it just rolls right over them and you never find out about it.
But from a design perspective, this is super, super dangerous even though it creates a lot of work, and sometimes that's very satisfying.
A vast majority of outcomes play out over a long period of time, right?
And this strategy guarantees that only a really small subset of possible design decisions are ever gonna get made because they are the design decisions that will produce positive data in the short term, and your designers will definitely start optimizing for that because they're designers and they do that all the time.
They game every system they can, even if they don't realize they're doing it.
This is basically the equivalent of all your design decisions coming from brainstorming alone.
Only ideas that can be thought of, explained, and defended in a single sentence are ever going to survive.
And that's not great.
It shouldn't be shocking that short-term gain is often paid for with long-term loss.
If your relationship with your players lasts longer than a single data cycle, then making design decisions based on a single data cycle is ludicrous.
It's just not good enough, and you're not gonna really gain any insight into why players are doing anything.
You know, this is all one item from Guild Wars 2.
It's just looking at it from different perspectives, hourly sales, daily sales, weekly sales.
They all tell a different story.
And I mean, just from this information, I couldn't even tell you if this item was successful.
It sort of depends on what you meant to do with it.
A good example of this is for the upsell example.
You might decide that when it would be most advantageous for a player to buy something, we're just gonna pop a message up and remind them that hey, they could buy it and it'd be really easy.
Just click this button right now and purchase it.
And usually that's gonna produce this really big spike in sales, but then that spike is sort of destined to fail and go down, it almost certainly will go down below your sales before you did this.
And that's because people do respond to immediate attention-seeking calls to action, but they can't keep responding to them.
Our brains are set up to filter that out.
The reason we respond to them is because they seem like danger.
And after we realize, oh, this isn't dangerous and I know what it is, we just start tuning it out.
And we can't really stop that.
We're hard-wired for it.
So at this point, you're tying the item's success entirely to the ability.
for this attention-seeking call to action to work, and it's destined to get less and less effective over time.
This is exactly the same kind of short-sighted number chasing that leads games to fall into an endless cycle of sales events.
Hey, we need to meet our goals this week.
Let's have a sale.
Great, we pumped up the numbers.
Oh, but now we're doing really poorly at the beginning of next week.
Let's have another sale.
Let's do it again and again and again and again.
This slowly eats away at your average revenue per paying user.
It has to.
Just the math means that you are basically lowering the price of all your items over time, and you really can't stop that.
and looking at the big picture can possibly get you out of this cycle.
So how do you avoid this sort of short-term data being used as a substitute for feedback?
Well, you can try to get the data to kind of work for you, right, set proactive goals that are relevant to design.
I said, know what you want to be looking for.
Maybe you're not looking for just raw sales numbers.
Maybe you want to actually be looking at ARPPU.
Maybe you want to be looking at repeat purchasers.
Actually decide what you want to be looking at before you actually put the item out there.
Another way to avoid data replacing feedback is to get the feedback.
You know, I said earlier that people aren't really capable of talking about microtransactions honestly, and that's pretty true.
It's a really difficult conversation to discuss because basically it's a highly emotional conversation because it involves money.
And that makes sense, actually, because game designers are super scary.
Game designers spend a lot of time learning how to manipulate human nature.
and encourage specific behavior.
So we actually have a really high capacity for doing evil, and when you add money to the mix, like the stakes are really high, and it gets kind of frightening.
And in fact, like if unchecked, it can be easy to just start chasing numbers and forget like, wait, what am I doing?
Like I'm manipulating people into doing, you know, maybe something that they'll regret or something that they won't like.
And you have to actually watch out for that.
You need to check yourself from time to time.
Are your designs pushing or manipulating people to do things they regret or that make them unhappy?
Your job is to entertain people and make fun, even as a microtransaction designer, and no one needs to play your game to live, we talked about that.
So if you're creating situations that make players unhappy, they're going to leave, and preventing that from happening is part of your job as a microtransaction designer, not just selling the items, but also making sure you're not eroding the quality of your game.
I know, we're out of time basically.
I'm gonna try to get through this.
Feel free to stay if you want.
I have like maybe 10 more slides, but we are at 4.30.
So I apologize.
So the majority of unstructured microtransaction feedback just comes down to, I don't want to have to pay for things, and I'm pretty sympathetic to that because capitalism is inherently unfair.
But engaging with that feedback isn't really going to help you do better design.
So when you're soliciting feedback on microtransactions, you need to focus the feedback on things that are relevant to design.
And open-ended questions like, would you buy this, are not going to give you what you want.
because they make people feel pressured to answer in a way that makes them feel virtuous or clever because it's a performative experience to be asked that kind of question.
It doesn't really have, you're not going to get a lot of relevant information that way.
Instead, you want to focus on asking questions like, how would you use this item?
Or rank these items in order of value to you.
Things that are more quantitative than qualitative.
Or better yet, don't ask questions, just watch people use your item.
That's the gold standard for feedback and all design, it's totally true for microtransactions, you can learn a lot by looking at someone's eyes as they use your item and watching the way they react.
Okay.
And that's it.
Okay.
We are in the homestretch, microtransactions and design.
This is just my little soapbox to end this.
I strongly believe that the mechanisms by which your game generates money should be the purview of game designers.
Game designers should have the same vision, control, and implementation responsibilities when it comes to microtransactions as they do with any other system in your video game.
Furthermore, game designers should enthusiastically participate in the vision, control, and implementation of microtransactions because they matter a great deal to your game and they matter a great deal to your players.
If your attitude around microtransactions is I don't wanna have to think about that or I personally don't like microtransactions, I'd never buy one of those, so I'm not gonna do this, you're doing yourself a huge disservice and you're really doing your players a disservice.
Game designers are uniquely equipped to understand what players will value and how that value should be presented in the most effective way.
As microtransactions become more and more a part of all types of video games, game designers of all kinds are going to have to get comfortable designing microtransactions and being part of the discussion about microtransaction strategy.
So if you're a game designer, I'm employing you.
Get involved.
You don't have to have a business background.
You just have to do the things you do.
You're uniquely equipped.
Get involved.
Demand that high quality standards are placed on microtransaction design.
Stand up and confidently declare you are the right person to make sure that those quality bars are met, and then do it.
Deliver really great design with microtransactions.
Thank you very much.
