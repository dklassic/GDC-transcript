Hi, thanks for coming. So yeah, my name is Patrick, as you can see up there. I'm the developer at Dry Cactus, and we're just a very small studio based in New Zealand. We made a game called Poly Bridge, and we released it at the end of June 2015 on Steam Early Access, and we had a few unexpected and unusual things happen, so that's why I'm here today.
Specifically, these are the most interesting things.
So you might have seen some of these pop up on some social media such as Reddit or Twitter in the last six months. What we did with the game was kind of integrate a replay sharing tool that made it very easy for players to share their little moments with their social media timelines and posts and wherever. And it had a very welcome, unexpected kind of flooding effect in the sense that we didn't really anticipate the kind of exposure we got through social media and how that translated to sales and financial viability of the game.
So what I'm trying to do today is kind of go over some stats and try and identify the link between exposure on social media and how that translated to sales and how eventually it created this kind of feedback loop between content creators on Twitch and YouTube and people sharing on Reddit and so on.
First of all I want to have a quick intro what the game is about because I don't expect most people to know about Poly Bridge. It's a very simple bridge building game at core.
I'm a big fan of bridge building games. It was one of my favorite genres when I was a kid. Particularly the pont effect series if anyone is familiar with that from chronic logic. It was the best bridge building game ever still.
So we took a number of ideas from those games. We did try and take it in a different direction though. So as you can see from some of the images and also these screenshots specifically, we tried to kind of take a step back away from the seriousness that are bridge building and kind of physics games in general. And it's a trend that's been going on. You can see it like in the hugely successful Kerbal Space Program, for example, is while super realistic with all the physics and so on, it has a more playful approach and makes it look less hard and less kind of engineering which is a big barrier I think to adopting these kind of games. So one of the first choices was to have a simple aesthetic style, limited color palette, make it a bit childish and just when you see the game I didn't want anyone to say, oh this is like it's an engineering game, it's not my kind of thing. So we tried to break down that wall first of all.
Along with that came some other choices like we tried to make a safe space for players as we're calling it so we don't punish failure in any way. If anything we try and encourage kind of trying this, trying that. It's very quick to try a bridge, it collapses, I'll try another strut and move this thing around and kind of make it very easy to You can iterate on your bridge design instead of feeling punished for failing.
So, no failure. Along with that, Adrian Talents, who is a very talented composer based in Canada, did a really nice soundtrack which goes very well with creating the mood of, we call it anti-rage soundtrack because the game does really, really well.
push the button sometimes if you have to spend 45 minutes tweaking a bridge design and it keeps collapsing. It's not much fun. So to try and counter that feeling of I want to kill the game developer, we put this kind of soft, mellow guitar instrumental soundtrack which is really nice. The niche is this word that is tossed around a lot. There might be some other developers here who kind of focus on niche design. It's a bit of a broad word. It doesn't really mean too much.
Bridge building game is kind of a sub niche of the physics building niche in itself. What I did when I started this project a couple of years ago and I was alone, it was shortly after my partner became pregnant and I had to decide what to do with my life. It was either find a job and do that kind of thing or try and do another game. The only successful game I had done previously was a bridge building game. Taking the lessons learned from that, I really thought I will just do a kind of game.
small niche game. Eventually the scope got bigger over time. It's something that many other developers feel the same. If you're going to make a game and you don't have much money, try and do a niche game. That's what I did. It paid out in a way. Along with that, the sandbox was a big thing. Very trendy as well. Low poly is trendy. We tried to identify trend so to speak in indie games and what players want. So sandbox was a big thing. So you're not limited in content to what the game developer gives you but you can kind of do your own thing.
It's integrated with Steam Workshop and so on. And the other big word, community, which means nothing and everything at the same time. We kept tossing this word around as we were designing the game, developing features and deciding what to do and what direction to take it in.
We kind of thought community has to be kind of the foundation of this game for it to have a long term longevity and viability and so on.
So throughout the game design we always try to keep in mind how can this feature specifically work and integrate itself with the community forming and building that community and kind of, and keeping people happy at the same time.
Yeah.
Okay, so again, just to get an idea of what the kind of style is, a very talented artist whose name is Javier, he's based in Spain, and he's here with us today. Came up with this kind of low poly style, very limited color palette. Hopefully it's inviting to the eye, you know, it's not like an eyesore, and when you see it, you might think, oh, it's cute. It's something a bit different, at least for a bridge building game. So I think that contributed a lot to kind of the exposure we got going, you know, moving forward.
So community, you know, we kept tossing this word around, not really knowing what to do with it and how to try and build a community and have people actually positively interact with us as game developers and between them and kind of take the game in a new direction.
So this is just a short recap of some of the choices we did as we were developing the game.
The main one being the replay recording and sharing, which is kind of why I'm here today.
So I'll talk a bit more about that shortly.
Along with that we integrated some other tools. The gallery, so when you share a replay in the game it goes to an anonymous online gallery where people can log in through steam and rate, comment and filter through submissions for specific levels.
It kind of gives the content creators that give the replays to our gallery a bit of feedback because you get kind of your little star rating and comments occasionally.
And it just allows kind of other players to see what people are doing.
And the most important thing for us as developers is that we're able to see very, very quickly what kind of ideas people are coming up with when playing the game.
And this has been a huge factor because as we moved forward with development shortly after the early access launch.
We were able to see all these new ways, kind of, and new mechanics to play the game that we weren't aware of. And by doing so we kind of then started designing levels and designing features of the game that brought that into the game. So a very good kind of feedback loop, so to speak, was created between the early adopters of the game and us as game developers in trying to kind of, you know, everybody's happy at the end of the day.
Another thing we did was the feedback tool. I attended GDC last year and there was a talk from one of the developers of Subnautica.
which is that kind of underwater diving game. And they had a whole talk about how they developed a feedback tool that allows players to send a little item of feedback without ever leaving the game. So a panel just pops up. You can say if you're happy, sad or medium.
You can give them a comment and it will also send a screen shot and the debugger log of what's going on behind the scenes. So when a player identifies or a bug happens, Hopefully they will send us a little feedback item saying this bug happened, I'm not sure why.
And I get to see the debug log and I can hopefully identify why the bug kind of happened.
So it's semi bug tracking, semi kind of feedback and again the loop between the player and the developer kind of trying to narrow that gap and make it a bit more kind of meaningful for players to interact with the developers.
Again, the sandbox and the workshop, a huge part of building the community, because that's where the community forms is when people get to design levels.
and send them up to the Steam Workshop specifically in this case and players can download them.
So along with that we also created the link between the Steam Workshop submissions and the replay gallery. So it's starting to kind of pay off now so to speak and seeing lots of replays. So as a player of the game if you make a sandbox level and you submit it to Steam Workshop for other people to solve, you can then see when a replay is submitted for your level you can see what players are doing with your own level. So this kind of gives.
This level designer type of feedback is rarely seen in other games which I think is a bit of a shame because you design a level, you just send it out and often you can see maybe some comments but in this way you can actually see the bridge designs that are being made with your kind of layout and it makes a really kind of nice feedback and tiny in the community.
And replays. So just a little bit talking about the replay and kind of the technical implementation without going too deeply into it because there's lots of stuff out there and I'll be more than happy to answer any questions later about the more technical stuff. But what we're doing is we're always recording footage as the simulation happens. We record that at 15 frames per second.
for technical reasons and also because animated gifs or gifs, depending where you're from, kind of a standard of 15 frames a second.
It's, you know, the animated gif is a very ancient file format.
It's like from 1990, I think.
So it's not very well compressed.
It has a very limited color palette, which is 256 colors.
The files get very large very quickly and obviously the challenge there was as we were recording footage it goes into the VRAM so we can't obviously take up too much VRAM otherwise lower end devices can't play the game and also when you go and upload the file itself you want it to be quite small because it doesn't you don't want to take like you know a minute to upload a replay it kind of breaks the flow so we you know kit plays quite small.
So we're recording footage at all times.
This kind of was a choice to try and break down that wall.
I was talking to many other game developers who are doing similar things.
And some of them are saying, we put these tools in, but we're not seeing the kind of interaction that we were hoping for.
And it's often because they require you to log into your YouTube account. You have to do all these extra steps which players are just, they're not going to leave the game to go and upload something to YouTube or to the social media platform. Some of them will of course but you're just like a good 90% making it up, obviously, of people will not just bother pretty much.
So what we try to do is you never have to leave the game.
With a single click, it generates an animated GIF of the buffer that has been recorded over the last 10 seconds, and then it saves it locally or it can upload it to our online gallery which I talked about, and social media.
We have Twitter integration at the moment and are working on some other ones.
So once you authenticate the first time in-game...
You just press a single button, share it, save your replay, upload it to your Twitter timeline, to the online gallery, to your local hard drive, so then you can repost it wherever you want.
And that created the whole kind of feedback loop which we weren't expecting. If you're interested in the tick, it's open source. It's actually Zach Bart who's a developer on Zachtronics and recently released TIS 100 and InfiniFactory. He actually wrote the encoder and he's very kind to give it to me and then it was released open source in a Bitbucket repo. So it's up there for everyone to use. It's C sharp obviously. Not obviously but it's C sharp and it comes with an example to integrate into Unity very quickly.
So definitely, you know, if your game allows for this kind of feedback, number one recommendation would be to integrate something like this and think about it, you know.
So, yeah, covering this, what I'd like to then go on to see is the more financial kind of aspect of the game.
So this is a bit of a confusing slide, so I'll give you a few seconds to try and kind of make sense of it.
It was hard for me to identify the timeline of events so it was even harder to try to communicate it in a meaningful way but this is the best I could come up with at the time.
You can see on the left you have a linear timeline and on the right is a meaningless diagram of how ‑‑ things kind of feed back into each other. It's very hard to say this first happened on a Twitter feed and then it faded into this Twitch stream which then meant somebody posted it on Reddit and then the YouTube guy came along. So it's just, you know, I just thought it's just a feedback loop between all the different platforms and the content creators that use those platforms. But what did happen though is the first kind of month is kind of what you're seeing in the left timeline. So we launched into early access. That was the 30th of June.
We had some positive reviews because we had worked with a small PR company to get some people playing the game early on and do some YouTube videos pre-launch which helped hugely I'm pretty sure. So on launch we had 15 positive reviews I think and a bunch of YouTube videos were already out there on launch day which was a very big thing in kind of creating the positive image of the game.
So along with that, shortly after launch we started seeing a very steady stream of content going on the Twitter timelines. Lots of people sharing the replays on Twitter, which were then getting retweeted and kind of starting the snowball effect of exposure of the game, which is ultimately what obviously we were trying to get, because with exposure comes potential sale. But without exposure, you're probably nowhere, unfortunately.
So then we started seeing more YouTube content coming through. The first Twitch stream started happening and kind of generating pretty sharp spikes of sales when the Twitch stream was happening. Reddit was the main one, as we're going to cover shortly. And then shortly after the Reddit kind of top page, we started climbing up the Steam charts and were in the top ten for a couple of days, which obviously created more interest. And you can see quite a while down the timeline, we then started getting mainstream media coverage.
So it's a bit unusual but it's something that's been shifting so much in the last couple of years is you no longer aim as much for getting that coverage from Kotaku, Gizmodo or IGN.
Personally what happened for us was seeing the coverage from mainstream media would bring virtually, it was impossible to identify when an article on IGN, how that would translate to exposure and sales. It wasn't even noticeable on the sales graph. While if you see a Twitch stream or a Reddit post that gets upvoted a lot, you see a very, very clear spike in sales. So as an indie developer, I guess you're aiming more these days for getting the exposure on social media and with content creators on these new platforms and not so much with the traditional media, so to speak.
Just because the level of exposure you get is nothing compared to what you can get with a Reddit post.
So to try and kind of bridge the gap, so to speak, funny bridge pun, between sales and exposure on social media, what I thought I was going to do, what I'm doing, is looking at the first 30 days of sales. And so with these 30 days of sales, as you can see here, so quick stats, in the first 30 days we sold just over 50,000 copies at full price, which is $1,199. And it made a bit over a half million gross in revenue.
This is aggregated data from the two platforms they were selling on, which were steam and humble. So what I did here was identify these kind of little events that happened the first month. You can see. So our L is the launch. You can see it kind of goes up a tiny bit and then it starts coming down. And until we hit T1, that was kind of what launch was going to be. If we hadn't integrated all the social media and replay sharing in these community tools, I'm pretty positive this graph would have just kind of stopped at the L and slowly gone down and just held there.
what happened instead are these other events that you can see obviously kind of crushed the launch cell. So we're going to dive a bit more deeply into these. So we're going to ignore launch but you can kind of launch. We had maybe on launch day about 300 cells and then 250, 200 and so on. So it's going down pretty quickly. So we have T1. T1 is the first major event. It's a twitch stream.
We peaked at about 2,000 viewers as you can see from the graph. While these are daily sales, the first 30 days, these are now hourly sales. So you can see on the left we're tailing at about 5 to 10 sales per hour on that day. And then we get a huge spike. It's about 80 on the first spike and about 100 on the second spike.
What's quite interesting with Twitch, which might be obvious to some and was not obvious to me because it was quite new to me, the whole Twitch stream and YouTube and so on.
With the Twitch stream, you often get these spikes of cells during the Twitch stream and as soon as the stream ends, you kind of just go back to where you were.
So it generates a small and short-lived spike of cells.
Potentially it generates a longer term interest in the game because people talk about it to their friends and cover it on YouTube and so on. But as far as immediate visibility of increased sales, there is virtually none. You just see the spike and it goes back down.
So that was the first Twitch stream and pretty decent spikes and we were very happy at the time. This is very unexpected. Wasn't really anticipating the game picked up by Twitch streamers but it was pretty cool.
So the second spike, T2, is just here. That's another Twitch stream.
This was a larger twitch stream. It had about 16,000 concurrent viewers at its peak.
Similar effect. We're tailing at about 20 up to 50 sales per hour because of other like YouTube was starting also to pick up. So daily or hourly sales were kind of increasing slowly on their own. But then the twitch stream happened. There was the one spike as you can see in 200 there. Shortly after that twitch stream another twitch stream with slightly fewer viewers. So that's the second kind of hump you see after the 200 mark.
But again, interesting to see how the end of the sales graph kind of matches the beginning of it. So we had the spikes and then we went back down. A couple days after, when I was working on the game, so we released the game and I was somewhat obsessively looking at the stats. What you can do on a Steam store page is link a Google Analytics tracking code so then you can go on your Google Analytics dashboard and see what's going on. You can see how many people are viewing, from which platform they're coming.
there's some issues around tracking where traffic is coming from but overall it gives you a very good idea. And what I was doing, I was keeping a little window open with the live stats so you can Google Analytics tries to tell you how many people are currently on your page.
And that was a way for me to try and identify very quickly when something happened because like these Twitch streams started to happen and other events were starting to happen and it was very important for us to try and keep track of.
what's generating a spike in sales and so we can kind of leverage on that in the future and try and make features that encourage that kind of thing to be shared or whatever.
So a few days after the second Twitch stream I was looking at my live stats which were generally hovering between 30 and 40 live concurrent people on the store page and I just turned around and it was about 1500.
And I was like, hmm, there's something suspicious going on.
And because I'm not too much of the digital generation, I was aware of Reddit, but I did not frequent Reddit as such.
So I wasn't too familiar with how it works and what goes on.
So a friend of mine sent me a text saying, you should check out Reddit.
And then I saw at the top of the front page on Reddit, there was a Polybridge GIF, which is the one you actually see in a top right.
Incidentally, that's as you can probably tell, kind of a physics glitch.
What's happening there is that the monster truck has infinite friction on its wheels.
So when it hits the edge, it just kind of has to go somewhere and it flips wildly back.
Somehow, it actually re-does a thing and hits the flag and wins the level.
So it's kind of a, you know, a very happy glitch, so to speak.
It was the first Poly Bridge gift it got.
Lots and lots of traction. It got upvoted so much that it was top front page on Reddit for any person subscribed to the gaming sub or also just anonymously browsing Reddit. So you can see the spike there pretty much. These are hourly sales. We shot up to a maximum of 350 sales for an hour.
And interestingly enough, when it goes back down, it doesn't go as down as it was at the start. So Reddit has, because it's obviously a Twitch stream, it doesn't end suddenly.
Once you drop down the front page, you still have a certain amount of visibility. And that just created the phenomenon of the meme, so to speak.
Somebody actually published a page on a website called knowyourmeme.com and polybridge gift sharing became kind of a very niche meme where people would play it and say here's how an engineer plays polybridge, here's how a student plays polybridge, here's how whatever my job title is plays polybridge. So we started seeing like some various things and it just translated to huge sales and It kind of just kept growing and when a Reddit feature would drop off front page, it was still like holding, hourly sales were still holding very well.
It wouldn't just drop out of nowhere. So definitely the fact that it got picked up by Reddit players was the main thing that drove sales.
running a bit short in time so very small stats. Might be relevant depending on what you're trying to accomplish. On Reddit these are stats that are new to me. They're a bit hard to find so that's why I thought it would be useful to share these. So on the left you see the top ten Polybridge gifs that come up on Reddit. They've accumulated roughly 12 million views.
Probably a few more.
If you want to go, if you're aiming for the front page, you have to get at least 2,000 votes, up to 5,000 if you want to be on the front page and not only on the top of the gaming subreddit. When we did get a front page gif, it would easily generate 1 to 2, even 3 million views. If you think about just, we're independent developers, we're trying to make a small game and suddenly we're getting 4 or 5 million views every couple of days just through reddit. It was just so insane for us.
What is hard though, because on Reddit you just share your little gif, luckily most people would at least put the name of the game sometimes. But if you want to then find out more about the game, most likely you're just going to go on Google, search for Polybridge. So it's very hard for us to track direct traffic from Reddit to the store page.
It's kind of guess work but it's pretty obvious when you look at the sales stats and how you see a Reddit thing and you see the spike in sales. But it's very hard to say track the long term life of a Reddit kind of feature. The other thing being YouTube. Lots of videos on YouTube for some reason or another are very big in Brazil and some other South American countries.
Top nine are from non-English speaking countries.
And then PewDiePie did kind of a very short video and misspelt the name of the game.
Thank you.
But still, it had a few million views.
The top 10 videos accumulated about 70 million views.
There's 20, whatever number, thousand videos have been posted.
And YouTube does have a very long-term impact on sales, but again, a bit hard to track because generally...
Players don't seem to click on a YouTube link and then go and buy the game.
They might be interested, but later on they'll Google it.
And so it's hard to track the direct correlation between a YouTube exposure and how that translated to sales and how many people, you know, what percentage of people actually bought the game and so on.
And this is the Dancing Banana, which you might be familiar with.
This is the top result if you do a Google image search of animated GIF.
So I thought it was relevant.
If anybody has any questions, there's a few mics or you can just shout out and I'll repeat it.
And also, because we're all kind of running out of time, I'll be across the room in the wrap up room if anybody wants to have a chat or whatever. I'm very open.
So other than having in-game videos and GIFs making it easy to share, other than that, to get the Twitch players to stream your game or the Redditors to post and upload your game, what can you do to enable, what can you do to make the Twitch players play your game and the Redditors to post it and upload it?
It's a bit of a hard question I guess. So I'll just repeat the question real quick in case nobody heard it for the video.
He was asking what can we do to try and encourage Twitch streamers or raditors to actually share the content.
So what worked for us was trying to knock down those barriers with the sharing.
So within the game, it's literally a single click and half a second and then you can keep on playing.
And then it saves your gif locally and uploads it.
So I think that was what created the initial interest in the game and as far as Twitch streamers go, we really didn't do anything though. We didn't reach out to Twitch streamers. It was just natural discoverability through the social media platforms that did everything pretty much. It was largely not anticipated on our part.
Mostly a mistake to be honest, it just kind of happened.
It was a very happy accident so to speak.
But we did contact, two weeks prior to launch, we worked with Evolve PR and they contacted some YouTube and some Twitch streamers as well, but kind of smaller channels.
The ones that I covered as far as the events and the sales graph that we looked at, those were completely organic and they were larger streamers that normally covered Minecraft specifically and for some reason they decided to cover, they were all friends I think, and they just covered it.
Yeah, so kind of organic in that sense.
I think just because so many people were sharing these gifs and then doing it on Reddit as well, just because they felt like doing it.
There was not an encouragement on our part necessarily to do so.
Yep, sorry.
I think I was going to ask something similar, but how do you think this will affect the next game that you have in development, knowing that this GIF stuff and this Twitch is actually a really effective marketing strategy?
So the question being, how is this going to affect our future development on other games with the GIF sharing and so on?
Specifically, we're not working on the game. We're a very small team, so we're still in early access.
So we're just working full-time on this. If I had to take a guess, though, I would try in any future game I work on, the core design will be keeping in mind how a player can own the content that they're making.
This worked really well in our case because you're building a bridge, and every bridge is a bit different.
So when a player...
see something funny or it's quite ingenious, they feel like they own that content. They came up with that bridge so it's going to motivate them to share these moments and that's a huge factor which other games have tried to tap into but maybe because they're quite linear and the end result is going to be the same for everyone, it's not a personal experience so I'm not going to be motivated as a player to share. So yeah, definitely kind of keeping in mind the game design with the player owning what they're doing kind of in a sense.
Hey, Patrick.
Great talk.
I'm curious if the analytics you put in to track your spikes and correlate them with social media stuff, was all of that or most of that in ahead of time when you launched?
Or did it become apparent that, oh, the stuff is feeding into each other.
We better start to investigate it more.
Yeah, so question being what we did with the analytics pretty much and whether we had them from launch and so on. Well, I'm not the biggest adopter or I don't really know much about analytics, so luckily when you set up a steam store page, you can get a lot of So all the analytics come from Steam pretty much. So you can set up a Google Analytics code in your Steam store page and then that's pretty much all I did. As far as timing, I set up pre-launch because it seemed to make sense and it was recommended by some other developers. Otherwise, I probably wouldn't have been aware of it.
And yeah, so that's kind of all I did. I just put up the Google Analytics tracking code and then I would keep a close eye on live stats specifically and then also getting an idea of how many views did we have yesterday on the store page and what percentage of those views came from a specific platform. The problem though being that it's very hard to track direct traffic because of the way you discover a game on Steam specifically.
It's very, very vague where the traffic came from.
So for example, if we track traffic from Reddit, it says it's like 3%.
But it's obviously way more than that.
But because people go through Google search engine to actually find a store page, there's that disconnect, which is very hard to make sense of.
But that's all we did, really.
It wasn't too much in the analytic space.
It was just keeping an eye on what's going on.
It was useful for that.
Cool, okay, thanks.
