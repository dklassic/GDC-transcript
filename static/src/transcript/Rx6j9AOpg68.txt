OK, I'll get started.
Firstly, hello.
Hi, everyone.
My name is James Svensson, and I'm a producer at a wonderful British studio, Criterion Games.
Over the past decade, these are some of the games that we've made.
You might have played a Burnout game, or even Black, or then more recently, some of our Need for Speed games.
I joined Criterion.
Just after the launch of Burnout Paradise back in 2008, where I cut my teeth as an online engineer, working on that year of Paradise, where we just kept on adding new content to the game after its initial release.
Since our most recent game, we've been keeping busy working on a huge new and exciting multi-vehicle game.
This one's going to be the biggest game that Criterion's ever built. And it's not something I'm going to talk more about today, but I will promise one thing.
And that's that it's going to share something with all these previous titles.
And that is our Criterion DNA.
So these are our core pillars.
These are the values that we hold up to ourselves.
They define the games we've made and all the games that we want to make.
So first up, accessibility.
Criterion's a studio that makes arcade games.
We want our games to be easy to pick up but difficult to master with a depth of mastery.
Then there's intensity.
And that's best real experiences define our games.
We really want to get the player's adrenaline pumping.
And then quality.
We hold ourselves as a AAA studio, and we want to be up there at the forefront of technology, making great games and great software that our players will love and be free of frustrations.
Then there's this idea of connected.
So what we've always been trying to do with our games is push the connected experience, because we think playing with your friends, that's the best gaming experiences that you can have.
That one's quite simple.
And then there's innovation.
We always like to do things differently.
Each game we make, there's always something that we're trying to do differently and new and not rest on our laurels.
So today, I'm here to talk about our 2010 title, Need for Speed Hot Pursuit.
And I want to talk about Autolog specifically.
I really want to drill into Autolog, partly because that's the part that I made.
And here's the Autolog team back in 2010, with me looking a little bit more fresh-faced and floppy-haired than I am now.
I suppose that's what becoming a dad does to you.
But then, so 2010, that's quite a long time ago.
Most of the time, we see postmortems on games that have just come out, or these games that are fed by nostalgia.
But I think it's really important that we take time to actually recognize our history and keep looking back at games throughout so that we can spot those trends and spot those changes.
But also, Hot Pursuit, it's one of countless Need for Speed games, but it's really important to talk about Hot Pursuit because this is the point for Criterion where we really recognize what it means to be constantly connected with your friends and it really changed our way that we think about making our games.
Also, it's a great core game experience.
I think there's a lot of big AAA development happening today where the ambition and the huge sprawling scope is contending against the ultimate quality that they can achieve with such split and segregated development.
Whereas with Hot Pursuit, that's a title that...
The game experience, it's really well honed.
It's really simple, it's really straightforward, and it's a great core game.
And I still think that the actual experience of playing that game is still one of the highest quality, funnest experiences that you can have in an arcade racer.
Then there's autolog.
So at first glance, it might be thought of as just friends leaderboards and some mechanics to sort of push that rivalry.
It really came to define the game.
It made a genuinely social experience where friends could play together and against each other even when they're not online at the same time.
And those lessons still apply today.
But before diving into the making of Autolog, let's have a look at a trailer from the game just before it shipped, just to refresh everyone's memories as to what that game was.
Put on your seatbelt as this will take a few minutes to reboot...
Grab Put on your seatbelt as this will take a few minutes to reboot...
...
So that was Need for Speed Hot Pursuit. Exotic cars, epic drives, cops. The name Hot Pursuit, it's about the thrill of the chase. This was a game of two halves. It had two separate progressions, two sets of super cars to unlock. A player could choose to play as the racers, completing races, trying to set records.
or you could play as the cops. Now the cops, their super cars were tuned and upgraded and they had cool tech and weaponry so that they could give chase and catch those races and then take them down. But ultimately whether you're playing as the cops or whether you're playing as the racers, it's a game about speed. And at its heart, it's a pure arcade racer. So throughout the whole game, it was really pure and simple. The motivation was to be the fastest and that competition, like any good racing game, defines that core experience.
And because we nailed it down to this very, very tight core experience and didn't diverge from that, it meant that Autolog could be there to amplify that core experience.
And it focused it directly on competing between you and your friends.
The development of it started a little over six years ago.
So jumping back to 2009, which in the world of tech feels like a lifetime ago, this was Criterion's first need for speed game.
And we wanted to keep it simple, so we drew inspiration from the original 3DO Need for Speeds. Exotic cars. This was the first time we had licensed cars, and we really wanted to celebrate the heritage of those cars. And also, it was the first time we were working with the data from manufacturers, and we kept true to that. So we redid our physics model, we redid our handling model. We did it again and again and again until we had it perfect so we could take all of those torque curves, take all of those aerodynamic coefficients and all that good physics-y stuff.
and have the accurate, not 60 times, have the accurate top speeds.
In fact, when we were making the game, there was a point in development where I think it was the Mercedes SLS, it was sort of five miles an hour above the actual quoted top speed.
And we were scratching our heads a bit and then we realized that the CAD model, the tires on it, were slightly wrong, they were the wrong wheels.
And just that tiny little difference made that difference in the simulation.
It's good to just have that data and be true to that because it's a really nice physical underpinning to your cars.
And then the next was Epic Drives.
So our ambition was to make a world that was stitched together from all the best of the epic West Coast drives that there are here in the US.
So that was stitched together with these huge big vistas and every time you came around a corner we tried to put as many big vistas in the game as possible.
Whether it be a mountain vista.
A big open stretch of desert, these gorgeous stretches of coastal highway where you suddenly see a big bridge or something.
But then also stretches of rural areas and farmland, and then giant redwood forest.
Then our third pillar players the cops.
Advanced weaponry, battling, high speed pursuits felt like this was a great opportunity for us to get our Criterion spectacle into the game.
When we had these things, we just slather over the top of it, Criterion Special Source.
This is what Criterion's known for.
As I said before, we're an arcade racing game studio, and we've got a great heritage of arcade races through Burnout.
And these are underpinned by spectacular physics, But also we always try and have accessible handling over the top of this.
So as well as boost, we've got responsive controls.
And the world was made with these long sweeping turns.
So actually that road network, a lot of time goes into the angle of those turns, the angle of all those corners.
And, um...
In terms of having intuitive drift, it's not a drift button.
You can either tap the brake, you can hold the brake, you can tap the e-brake, all of these different ways so that whatever the player's intent is, we can pick that up in the game and translate that into the drift that you want to see.
Then, crashing, sense of speed, intensity.
Cinematic spectacle is where Criterion really feels at home.
And from our previous games, from Burnout, from Black, we know how to craft these experiences.
The other thing we hold really dear to us is friends and putting friends at the heart of the game.
So Burnout 3 was when we started experimenting with this.
It was EA's first online title.
And then Burnout Paradise, this is where we really pushed our open world to be able to have that seamless online.
So you could jump into a game, jump into a friends game, then matchmake into a public game all without leaving the world and constantly driving around.
And we started really beginning to experiment in that year of Paradise when we were developing Free Burn Challenges, which for our Burnout Paradise fans, that still stands as some of the best card play you can have.
But this friends at the heart of the game, it's not a solved problem, but we know that it's really important to us because when you're playing a game with friends, then that makes the game endless.
Your game becomes a vehicle for your friends to get together and hang out and interact together and just have those interactions between real people and real people.
Gamers are social people and having those interactions with friends that you can attribute.
that you can attribute those actions to a real person just makes it a lot more interesting, a lot more meaningful and it makes it more memorable.
And then those interactions and that fun that you have in the game that can spill over into your real world conversations.
And in that way the game just grows and grows and becomes a really great experience to share.
But then the problem with trying to get real friends into a game together especially back in 2009 Real friends lead real lives.
And it's really hard to coordinate to get online at the same time.
It's hard enough to get colleagues out to the pub after work on a Friday night, let alone everyone online at the same time with the same game when they're at home.
And so this is something we actually knew from our telemetry on Burnout Paradise.
A really great part of being.
part of EA is that we have access to all this great data across EA's portfolio.
And so what we saw here, this is looking at the average peak simultaneous users, weekly peak simultaneous users, back from 2010 across a representative set of EA titles.
And we were seeing that more and more players were now connecting to our servers, but then only a smaller proportion of those people were playing in online multiplayer.
So while we were having more players connected.
There aren't as many people as we wanted getting in to have that connected experience to have fun with their friends because they're just not going into online multiplayer.
And I know from my own personal experience, online multiplayer, it's not always the most welcoming thing, especially as you start getting older, your reactions are slowing down, and there's only so many times I can get schooled by 17-year-olds.
So then...
We really thought rather than trying to push players into online multiplayer, how can we create these meaningful and ongoing social play experiences for those millions of players that are connected but don't want to play online against others.
So this felt like a really great opportunity to create play with friends using asynchronous interaction.
So just to recap, synchronous, that's a phone call, asynchronous, that's a text message.
But the thing that's great about asynchronous, it's things like broadcasting.
You know, you get notifications.
Twitter, Facebook, and WhatsApp, these are communication tools that allow people to share much more with more friends, regardless of living different lives.
And this felt like a real opportunity for the game, the space in which we could innovate and bring friends together by focusing on those asynchronous interactions.
And then we could really make it about real friends.
So just to put your minds back to 2009, this was when we started making the game.
So in 2009, there's a picture of Xbox Live at that point, or of the dashboard, and it was a very different place.
So we knew from other EA titles, we had telemetry showing us that the majority of players, so on Skate 2, 54% of players had only one friend or zero friends.
So friends, it was just a very early time in how people were using the social features of Xbox and PSN.
They were just really getting off the ground.
But at the same time, we had social networks.
And they were now mature, because Facebook had been around for a few years at that point.
And so we wanted all of these things that you had on Facebook and on other social networks.
So we wanted to be able to find friends of friends, to be able to grow our friends network by seeing what friends of friends had got up to, and also to just have those things like sharing, like commenting, like profile pictures, which we now just have built into our consoles and take for granted.
So that was step one.
Step one for our social play for Hot Pursuit, we didn't quite know what we were making.
But the first thing was, hey, let's build a website.
And then we're going to build a web browser and put that into our game.
And that website in the game, that was our game front end.
And then, hey, that was the year I got a smartphone for the first time.
And that felt really cool and exciting.
I could put that website on my smartphone.
It was the same website in the game as out of the game.
So.
It felt very new and exciting and different.
But the other thing that we learned very quickly was that actually working in web for a front end is really powerful because that rapid iteration speed that you get with web is just worlds ahead because there's no build time.
You're not waiting for anything.
It's just you make a change and you see it straight away.
So we could try out lots of ideas very, very quickly.
So it meant it was great for discovery.
But then the problem with this is this is not a console UX experience.
And text entry, that's a problem for trying to make these social features.
So writing out comments and posts using an on-screen keyboard, that's no way to spend precious console time.
So version 2, this is what we really got to.
This was the exciting part.
We automatically generated stories.
We did the work for the player.
and it worked. It gave people a real sense of playing with other people.
The game had to track everything, and all of these actions became human stories, and they were then shared back to me and my friends, and it became the way you played the game.
there was a feed for every game mode.
And so there was no longer an event list, there was no set way of playing through the events.
You just played the events that were based on what your friends played.
And so you got a sense of what was popular.
And playing the events became this sort of back and forth conversation with your friends.
But the real promise there came from when we started tracking leaderboard changes.
And then we could build these stories from those leaderboard changes to make them as rich as possible.
And also, it's that point of Rather than just showing a leaderboard, you really, by writing a story about it, you're really focusing in on where that player is on the leaderboard and what they need to do to take that next position.
So just break down that task of getting to the top of the leaderboard into one step at a time.
The other thing we had was a call to action.
So at every single opportunity throughout this website front end that was the first version of Autolog.
We gave people the opportunity to jump straight into the game, to play what was being talked about, to play what was posted to a photo feed, to play what was talked about on the wall.
And we put these call-to-actions at all points.
So wherever you were in the game, you could just jump straight to the event and play it.
And that, to us, felt really, really interesting at the time because it meant that it was totally dynamic.
Whatever I was playing, whatever I was being fed was what the game told me about through this social network, through what my friends were doing.
To show an example of that, here was our rapid response feed at the time.
So those events were recorded and every action was tracked and then a comparison was made for every single time one of your friends attempted the event.
And so yeah, as I said, there was a feed per event type split by cop or racer.
And that was the main way to play the game.
So if your friend tried an event, it was in your feed ready for you to try.
And at that point, we were like, excellent.
Now you're really feeling like you're playing with your friends whenever you played the game.
But the problem with this was need for speed social.
That doesn't sound like it might have been engaging.
It was interesting.
You got a real sense of what your friends were doing.
And you could have taken that further to start.
If you got into it, then you could really choose how you played and sort of set up your own progression with your friends.
But ultimately it wasn't fun. It hadn't honed in on this on this core experience and.
There was also this other problem of we've been building in web for a while now and we had really bad feature creep.
We were writing checks that we wouldn't be able to cache in production because we had all these features.
We had a timeline feature where all of your actions got amalgamated and aggregated into these timelines that you could compare against other players and we were just getting ahead of ourselves.
We had all these multiple feeds and ways of managing those feeds, ways of looking at your friends' feeds.
And really, we'd gone a bit too far with it.
And that meant we had this terrible problem with signal to noise ratio, and it was really hiding the fun of the game.
So what were we going to do?
So this got us scratching our heads a bit.
And the answer was in Beat It.
So we were asking ourselves, how are these features in service to the game?
And we took all of those automated feeds, and then we curated them.
automatically to be one feed of recommendations.
Because throughout the whole time of playing with your friends, it might seem obvious now, but the most compelling motivation, way beyond anything else, is someone beat you.
Ultimately, when you look at popular events and things like that, they're just not as interesting because they don't change over time necessarily or...
Yeah, whereas someone beat you, that means, hey, one of my friends, they've played my event and they're...
They've beat me at it, but I didn't really try, so I can go back and I can beat them.
I can beat that one faster.
And it also made us change all of our events, because before that point, we also had events which were based on points.
And we had a few different event modes, but if they didn't sort of...
If they didn't support this idea of being the fastest, then they fell to the side because they weren't as engaging.
They weren't as natural to talk about an event.
You know, when you're comparing points, it's one step removed from this idea of be the fastest.
And then we used all of these other rich stats and comparisons that we had and that we were generating.
They were then layered through the whole game to flavor every choice that the player made as they played through it.
So then our previous recommendations, or our previous stories that were generated, and the previous feeds that we had, became this one dedicated recommendations feed.
So, we took all of our recommendations and worded them as a BTIT.
That was really important, so if we had an event that was recommended because it was popular, or because it was a way of pushing the player through the progression...
We reworded them. We took the player that was one above you on the speed wall, which is our friend's leaderboard, and then we just worded it as, this player is 0.2 seconds ahead of you.
Beat them to take second. And with this, that just meant that every single time we had, even if we had run out of beat-its of those places where a friend had beaten you, we were able to give that nudge for competition. We always like to say it's not really, we don't want to push the player through competition.
We don't want to push the players into rivalry. But it's more just like the game is there, it's just giving the player a nudge and being like, you know what, this guy, I'm just saying, but he's beaten you. And we felt that that was really working. The other thing we did was we balanced that signal to noise ratio. So we tuned it back so there were never more than five cop and five racer recommendations.
And also at that point, for going into production, we recognized from a while back that we wouldn't be able to make the responsive UX experience that we wanted on a website, especially on previous generation consoles.
You just needed too much memory to have that sort of web experience.
So we rebuilt our front-end as a web-driven, console-oriented UX.
So that meant it suited up, down, left, right, forward, and back.
So then to really break it down and give those examples, I'm going to have a look at a session with recommendations just to talk through what we shipped.
We had a motto for Autolog, and that was connect, compare, compete.
So this first section, that's about the front end.
It's about connecting me with my friends.
When you booted the game, you got this live connected front end.
So it had a load of content that was delivered by web.
And it set the scene by giving you recent updates of what you'd been recently up to.
And it also gave you refreshes of what your friends had been up to.
So the first of those social features, we still had those social features that made it through, was photos.
Whereas today, we've got Xbox record that.
We've got the share button on PS4.
They do a lot of capturing of in-game content, but by building a dedicated photo mode, by giving the player the tools to take the time to compose a shot, that's still really powerful.
And I think that's really important to remember, because it's a great way for people to spread their passion with their friends, but also it's got that in common with tools that you want to build communities.
And that's what we started to see with our photo mode.
So.
Just to show you, these are some of the photos that came up through dedicated blogs that started popping up about the artistry of Sechrest County and about the great sites that could be seen in the game.
And then some people take it further.
So a lot of the slides or a lot of the photos on my slides are from the website deadendthrills.com.
where you've got this guy, Duncan Harris, and he runs the website, and he goes around taking screenshots from games that have good screenshot capabilities.
He doesn't touch any of them in Photoshop, and he just makes an art out of taking screenshots.
And so then, by having these tools, you're allowing your community and those outstanding individuals in your community to do this stuff and make your game look fantastic, and then share the best of your game with everyone else.
So that was really cool.
It was nice to see those.
And then we had our wall feature.
And as I said before, using an on-screen keyboard might not be much fun.
And it might seem like a bit of a niche feature.
But it got really, really heavy use in our PC communities, especially in the hardcore PC community in Scandinavia and Eastern Europe and in Russia.
Because PC players, that was their main tool for friend discovery.
So they're able to go there because on the wall you could see posts from your friends of friends and replies from your friends of friends.
So we had these huge, huge wall posts of people just introducing themselves to one another and getting acquainted to all share in that Autolog experience.
The other thing we built that was in our front end was friend recommendations.
As I said earlier, more than half of all players had only one or naught friends.
And this was a game about playing with your friends.
So if you've got no friends, now you can get friends.
But back in 2010, when we were getting ready to release this, it's a sign of the times that we really had to push with first parties.
that to get this feature released because they were concerned about the privacy set up for being able to see friends of friends lists.
Whereas in today's world, that's just sort of, that's very, very commonplace and it seems weird.
Why would you not want to see your friends' friends?
But in fact, I can't remember.
It only shipped on one of the platforms, I think, because of that.
So if that was Connect, then.
The other thing throughout the front end and throughout your event select, we had compare.
So we put friend comparisons at every opportunity to really drive home the sense of playing with your friends.
So here on our map screen, a player works through both Cop and Racer events through this one map screen.
And in the bottom right, we've got this speed wall.
This is a cycling wall that goes through the speed wall, which is your friend's leaderboard.
Then it goes on to show you a comparison right where the player needs it, and it influences their event choice.
All the speed walls and story were pre-downloaded.
When you were picking an event, they were right there.
and you should have never had to wait for leaderboard fetches.
And it was an expensive tech investment, but for a game about friends leaderboards, that was really, really fundamental to it and worth it, because we needed that sense of every single time you're flicking through the events trying to pick something, you can see your speed wall, and you can have that influence on your choice based on that.
So we also put a face to the name.
We shipped a feature to be able to get profile pics in the game.
Again, this is now provided functionality by first parties.
But we really wanted to humanize it.
We're also really passionate about this idea of trying to get your real names into the game, because especially on PSN, I'm still embarrassed about my PSN ID that I set up all those years ago.
But I can't change it.
But now at least they provide the functionality to put your real name in the game.
And then there we go with the story.
So by automating the story, you get a refresher of what you did last time out.
And you get that friend compare.
I said earlier about the idea of taking rich stats to really flavor the stories, to be able to build up more of an interesting story.
And attempts was a really big one for Need for Speed Hot Pursuit.
So by tracking the number of attempts and presenting that back to the player.
It made that friend competition really interesting.
So looking at this example, we've got Matt Webster, who's our studio GM.
So DizzyRascal22, that's a group of all of our IT guys.
That's the account that they used to play in their lunch break.
And they took second from Matt, but Matt couldn't have that, so he went straight back in there and took second back from them.
And at that point, the competition got really serious.
So 1,375 attempts, that equates to about 20 hours of dedicated playtime on just this one event, which is ridiculous.
I mean, well done them for trying, but ultimately, it didn't get them anywhere, so jokes on them.
So then even with the context of friends, a simple car select now has real meaning to me.
So I can see what my friends have chosen.
to set their personal bests.
And then also, when we see this car, so Matt Follett, he was our vehicle designer, and holy crap, he's amazing at racing games, and he was at the top of every single speed wall.
So when I see Matt Follett use this car to take first, I'm gonna take this car and try my best to control it.
Personally, I found it a bit back-end heavy, but by knowing that Matt used that to take first, It'll make me try that again.
It'll make me replay and try the game in different ways.
So connect, compare, compete.
That was compare.
And then the last section, compete.
So this was taking that nudge for friends' competition, but seeing it through the whole way through to close out that game loop.
So when you're on the map screen, you can get an autolog alert.
This is to say, since you were last hit.
someone's come along and they beat you. And then when you follow that auto log alert, that button prompt, you get taken through to your dedicated recommendations feed and we find that Matt Follett's beaten me again. So as I said before, the signal to noise ratio, that's had excessive tuning to surface up all of those beat you recommendations first. They were the stickiest ones, they were the freshest ones, they were the ones that really got the competition going. Then we also followed that up with some of those popular.
Those popular events to show what what your friends been doing which was sometimes really interesting if you got a run of friends trying to compete on one event and then we finally if we didn't have any recent be used we followed that up with these events that we recommended to push you through push you through the progression to so you could play the whole game through the recommends feet if you if you want to do and keep just sort of hoovering up those events you haven't done yet.
So once I choose to play a recommendation, it tells me about the recommendation.
It tells me about the recommendation through the loading screen and then again in the pre-event screen.
And then the whole time I'm racing, rather than racing against gold, silver, or bronze, I'm racing against that recommendation.
So it's something that's there for me to focus on the whole time I'm playing.
And then when I finish the event.
And then, hey, I came first, and I beat Clean Pete.
So it's great, because with that, I know that my recommendations are updated.
But I also know that Clean Pete, when he logs back in, he's going to have a recommendation sitting there from me to say, hey, you know what?
Just saying.
Sven's just beat you.
And then, just to rub it in, we get that automated story.
And we give the player the opportunity to post it to the other player's wall, to just really rub it in, because then everyone can see it.
And the game takes me back to the Autolog Recommends feed, ready to go again.
And that's the loop closed.
So that was a breakdown of a session of Autolog.
But next, I just want to talk about the outcome.
So overall, the game did all right.
I'm quite pleased with its reception.
My particular favorite here is Keith Stewart from The Guardian.
So The Guardian, if you don't know it, it's sort of like the British New York Times.
And that's a review I can show my mom.
So she'll be really proud of me.
So way to go.
But the thing that he experienced and recognized is that the game creates a beautifully seamless sense of competitive multiplayer action, even if you're not online at the same time.
And that's exactly what we set out to do.
It was also, at launch, the highest rated Need for Speed game.
And then we won a BAFTA for it, which was really nice, because that's the industry it's voted for by others within the industry.
It's sort of like the British Oscars.
And that was awarded to us for innovation and making great social gameplay.
They really honed in on this idea that we had found new ways and really got it about playing with your friends, this idea of the social async gameplay.
And the great thing about it being a game that then launched was real people can now play it, and we could see how our design ideas actually paid off.
And that's the great thing about having telemetry and having this time passed since its release is we've got a real sense of how people played it over time.
So we know that 45% of all the events that were started were because of a recommendation.
And a player took, on average, five attempts to beat a recommendation.
So you're seeing there that we are getting real replay value through.
The players that engaged with it, we had real replay value for them.
And also, 17% of event starts were through that dedicated recommendations feed.
And that's actually a really big deal.
So 17% is like 1 in 6-ish.
But those people are playing purely for the competition.
They're not playing through the progression.
And they're not picking their own events as to what they're playing.
They're not looking at the map thinking, oh, I want to play this event today.
They're just playing whatever they...
whatever the game tells them, this is where you're going to beat your friends.
So that was really neat.
The most competed over event was Vanishing Point.
And that's the same one, just by coincidence, that Matt had that competition with the IT guys.
And it was a great event.
This was a pure expression of great arcade racing.
It had a low barrier to entry.
It was early on in the progression.
And it had this really straightforward, simple track that ran through the middle of that desert.
And it only had two turns, but you had so much depth in how you placed that car to shave off those microseconds and how you went and how you kicked it into drift.
And also it looked great.
It had the Pagani Zonda in it.
It was an exciting event to play just because it was really straightforward.
Straightforward, but also very fast.
And then we've also got this telemetry through looking at This graph is actually generated after three years of play.
So it's a sort of uncannily straight line.
It's hard to believe.
I had to check the data myself.
But I don't want to push the idea too much of the relationship, because as everyone knows, correlation isn't necessarily causation.
But you could say that.
Hey, the longer players played, the more need for speed friends they had.
So need for speed friends, that's friends that they added to their friends list after they started playing the game that also had need for speed.
So as they went through the game, we saw people adding more friends or having more friends.
And then so, but then you could also look at that from the inverse of the more need for speed friends a player added, the longer they played because they were getting more replay value out of playing these against these different people that they were adding.
And to put a slightly different view on that same idea is when you plot the total number of Need for Speed friends against the rank that they achieved in the game.
So the game's progression, how you unlocked cars, was by earning XP to go up a rank.
And so what we saw here was, even after reaching that top rank, players kept on adding friends to squeeze further playthrough autolog.
So it really meant we were beginning to see, or what we've seen is that The people that engaged with the friends play really squeezed a lot of extra replay value out of the game.
They were doing that thing of using the game as a means to keep playing with their friends rather than trying to play for in-game rewards, intrinsic rewards.
And as I said earlier, what that leads to is it spills over into the real world.
And we can see just from looking at Twitter, some of the things, people just keep those conversations going.
Tweeting to each other saying like, hey man, I've just beaten you.
And it's really nice.
I don't know, this last guy, asynchronous gameplay is my ideal method of multiplayer.
Console games need to get on that tip.
Hot pursuit was a nice start.
Hashtag autologue, hashtag dog.
I have no idea what hashtag dog means, but we'll take it.
And to date, the game's had over 10 million players.
So that's 10 million unique players have logged into our service.
Which is cool.
So then, fast forward to today.
And again, being part of EA, we can look at the trends across a wider portfolio of games.
And we see that that connected gap, so here we've got the number of players that are connecting to our servers and the number of players that are playing synchronously online, so in online multiplayer.
And we see that they've both grown, but that connected gap, it hasn't gone away.
So even though we've got more and more.
online games and very heavily online games, we're still seeing a lot of players that are connected but aren't choosing to go into online multiplayer.
So that's really important.
It's saying that the opportunity that led us to make Hot Pursuit back in 2009 or make those decisions that led to Autolog, those conditions haven't gone away and it's still this big opportunity.
The other big advantage we have today is we've got just more and more academia in games and psychological research into player motivation.
So in 2015, so last year, there was an independent study that showed that 78% of American teenagers agreed with the statement they feel more connected to their friends that they play games with.
And also, from this study in 2014 that was commissioned by Twitch, we see that gamers are really inherently social people.
So for those people that identify themselves as gamers, we've got 57% of them agree with the statement, my friends are the most important thing in my life.
Whereas for non-gamers, that value is 34%.
So there's a big difference there.
And what that says to me is that, oops, sorry, jumping ahead.
Yeah, what that says to me is that gamers want these social experiences, and we need to give them to them.
We need to find ways to make genuine interaction between players.
And then today, admittedly, there's more advanced friends networks.
You can follow players.
You can have much bigger friends lists.
It's no longer limited to 100 players.
But it's still hard to all be online at the same time with your mates, especially now that every time I seem to boot up my console.
I've got another couple of patches or updates to download before I can even get into the game.
And we can see from Most Wanted, which is our last title, that the majority of players, when they're matchmaking online, they're going just against strangers and not playing with friends.
And the thing is, playing with strangers, it's easy to forget that and make games that are predominantly...
expected to be played with friends because as developers we often sit with our consoles all lined up next to each other and sitting alongside each other playing our games but that's not real world conditions and it's easy to to forget when you're making your games how important it is to find ways to put friends in the game when you're playing away from each other when you're playing at different times.
So that opportunity, that's still there.
and Since Need for Speed Hopsuit, there have been some other really good examples of asynchronous social play.
But it's not become this dominant mainstay.
So in racing, our next racing title, which was Need for Speed Most Wanted, we had Autolog again.
It was in the open world, but we had billboards because we wanted to be able to put the player's face in the game.
So we had your friends.
The billboards were where you would try and go for.
go for a long jump.
And so the billboard was to say, this is your friend that got the longest jump on that gap.
And it meant that you could have that sense of competition with your friends in an open world game.
And that was fun.
That was something different.
But then DriverTASK, I'm a big fan of Forza's DriverTASK system.
Because every time I go in and play that game, even if there's friends that haven't played the game, they're still, their name is above the car.
So I can attribute.
I can attribute the actions of that other driver, that AI driver, to someone that I know and it makes it just a little bit more fun and personable.
The problem for me with Drivatar is there's no loopback, so it's not sort of a closed game loop of you don't get to see what your Drivatar did when they're out there.
I mean, I'm sure that would be a big challenge, but yeah, there's a great job done there, but there's still so much more that they can do.
DriveClub.
Now DriveClub's a really interesting game because with their development, having had all of these ongoing iterations, I'm making big assumptions here, I don't know any of the DriveClub team, but by seeing how it performed in the wild, they've now got to this point where they've got this really great system where you've got this great async play because you join up with a club and then you work together against challenges to get rewards as a club.
and you're competing against other clubs, but again, it's always synchronous.
You don't have to be online at the same time, but you get that shared progression.
And then actually just jumping, this is not a console example, but real racing.
I love the fact that they've made a physical ghost system, so you can take your friend's time, and then you can actually race a real car that's physical that you can bump up into to try and beat it.
So then mobile, as I was saying, with console development, it's really easy to fall into the trap of just sitting there, playing a game together with your friends and thinking, right, we've got our connected experience.
Whereas on mobile, so much more of the iteration is done through these quick release cycles.
So I think it's naturally a much better fit for making asynchronous play and making asynchronous decisions that really support that.
So async on mobile is a space where I think there's a lot that we can really learn from as console developers and start thinking about how we get more opportunities to make social play through connected players that don't necessarily want to be online at the same time as others, especially in a competitive space.
And then now for us at Criterion, this is a picture of our board game corner.
We're a big fan of board games.
And as I'm sure the table that's upstairs.
is quick to point out we're going through a golden age at the moment with these masters of async social mechanics because these games are all about building trust and creating deception and then using peer pressure to and collaboration to make new game mechanics it's really interesting what they're doing there so there's a lot of these great inspiration points for how we could build new async mechanics but again it's something where I don't think And the examples we should be looking to for building new types of async play come from console because they're just not there yet.
So my advice to everyone would be to play as many different things as possible.
For that opportunity of trying to get players to play with their friends while connected but not playing online together, we should be trying to invent new ways to play.
And just be thinking about...
Be inspired and be iterating and trying things in real world conditions so that you can actually get a sense of async play.
Because async play is different to synchronous play in that you can't playtest it in one session.
You can't sit down and be like, right, we've made this change.
Let's have a go and see how it feels.
It's something that emerges between the sessions.
It's something that you only get a sense for once you've tried it and then tried it a few times and tried it in real world conditions where you're not playing at the same time.
So yeah, as I said, that connected gap that's still there.
And I feel like that represents this huge space for innovation.
So I'd love it if we started seeing more and more console games try and take that on and try and make good asynchronous play for players to have that social experience, have that online experience.
So then just to summarize.
Autolog. So Hot Pursuit was a game about arcade racing, and it was this pure arcade racing game.
And it really focused and intensified that core.
We had this sort of very overworked social network, but we pared it back to this idea of beating real friends.
Everything was about that beat it.
And that amplified the core racing experience.
And the outcome of that was that people added more friends.
They kept adding more friends.
And they were playing with their real friends.
And out of that, they got much more replay value out of the game.
And then fast forwarding to today, we can see from our telemetry that that connected gap is still there.
So we've got more players online, but they're still not playing synchronously.
So there's this great async play out there, but it's just not there on console yet.
So I invite everyone in this room.
to get social, start trying to invent new asynchronous mechanics.
Because I really believe that this is a big opportunity and it's primed for breakthroughs.
So take what you've learned today, go out into the world and beat it!
Sorry.
So that was my talk, but we've got a couple of other talks from Criterion going on.
At the moment, it's actually in a different room.
It's at the same time, which is really annoying, but you can catch it on the vault, is Pete Lake, who's been talking about rapid idea visualization techniques that we use at Criterion.
And also with his talk, you get some juicy behind the scenes in production pictures and videos from Black and from Burnout 3 and Revenge.
But then also.
On Friday at 1.30, we have our wonderful tech director, Molan, who's talking about how we've changed as a studio, how we are in this new phase of development where we're building our new game, which is a really exciting team to be part of.
So that's it for the talk.
But does anyone have any questions?
Feel free to come up to the mics.
Did you notice any major differences in behavior between players that play synchronous multiplayer and the players that engaged with the asynchronous stuff a lot? Like differences in how much they engage with the game or anything like that?
Sorry, what was that last bit?
Just differences in how they engage with the game, how much they play or...
Not so much for Hot Pursuit because with Hot Pursuit the Didn't get as much pickup as we would have wanted to, but then at the same time, we didn't focus on it as much.
And there was great play and great fun to be had with it, but it's hard to really have enough data to draw comparisons.
And it's not something that I looked into in a lot of depth before this talk, because it was so focused on autolog.
So any data that we might have available, I don't have fresh in my head, I'm afraid.
That's cool.
Thanks.
Thanks.
First, thank you for that. Very good talk. I have a few questions. First, did you keep the web browser on the console after your first two experiments? So the question is, did we keep the web browser on console after our first two experiments? Yeah, I know you changed the way the user interface was, but did you actually keep the underlying web browser?
So we didn't keep the underlying web browser in the client.
We didn't use it for anything, but we kept a lot of the same back end.
Some of the back end we rewrote because we'd been writing all of our back end in PHP just for speed, whereas then that then was harder to manage for going live.
So there were some aspects that we rewrote, but that was the back end.
In terms of the front end.
The front end was all custom tech and was just driven by JSON snippets that would come down from the web.
And also, yeah, some other bits of binary blobs and things.
Okay.
Did you try any other aspects other than the speed for the beat it components?
You know, like, I'm going to beat that guy.
In a racing game, of course, the speed makes the most amount of sense, but did you try anything else?
Yeah, so the question was, did we try anything other than time?
for those comparisons.
We actually, yeah, underlying, the underneath system can generate those recommendations based on speed rules that go either way.
We played a lot with, we did have events that were based on points.
I think the rapid response, actually maybe it was the interceptor was a points-based game where your time was just one factor that came into it as to how quickly you took someone down.
I think we also had like how many weapons you used and other things so that we could try and shape the player's play in a particular way.
But then ultimately it was just that simplicity that came back of by keeping it just about time, that's a natural thing.
You don't have to explain how those game mechanics work.
Everyone just implicitly knows it.
So it became just a much more natural, important thing to be able to talk about.
And it shortcuts a lot of the the difficulty of trying to explain the competition before you before you said.
My last question. So I've worked on a game where we had a similar system and generating a graph between all the players and the relationships and all the processing to generate that. How did you guys handle that? Because 10 million, I mean obviously not 10 million simultaneous players, but I mean you must have had a tremendous server load for that. How did you guys deal with the complexity of that?
So the question was with all of that real time.
Comparison and just churning through all that data.
How did we deal with the back end?
Is that right?
In terms of the technology platform.
With a lot of unexpected live support would be one answer.
So as in, we did stress test and we stress tested as much as we could.
And then also it's amazing.
There's, because of, because the amount of investment that Facebook and Google have done into web backend services, There's so many great tools for scalability, and also it's something that lots and lots of different, there's a lot of people outside of the games industry that know loads about how to scale up web very efficiently.
And so we leant on that because there's a lot of great knowledge in how to do that.
But then we could have done it more effectively and efficiently than we did, because we still actually shipped with some of our back-end in PHP, which would have been better probably if we'd sort of gone and baked that down into I'm not sure though.
Actually, I changed over to become a producer to avoid questions like that.
All right, thank you very much.
Yeah, thanks.
Hi, it was a great talk.
Thanks.
Regarding the Autolog version three, how long did it take you to balance it to your satisfaction?
So how long did Autolog version three take to balance to our satisfaction?
Good question.
So it was lots of iterations, and it was quite late in the development that it changed the order to have all the BUs up front.
And then it was even later that we had the prompt to really push you through the whole way from the map screen back into the game.
And that was part of just the insight we had from Matt Webster and Steve Kass, who are the two guys that really.
drove Autolog, and they recognized that, and they felt very strongly about it.
Whereas on the team, we felt like, hey, we've done all this work, you know, we've done all this work to track the popular events, we've done all this work to track those recently played events, try and make some intelligence about what you've been playing and how you want to play.
But ultimately, all of that just fell away next to this idea that someone's beat you, do something about it.
So...
Yes, so it was this gradual process, and it was as we shifted that mentality from pre-production and discovering what we could do to then actually production and shipping, thinking, OK, what's the most important thing?
What's the best player experience?
So yeah, initially we had loads of ideas.
We put a lot of effort into trying lots of different things out.
But then as we went through the development, it all just got slowly paired back and back and back, just to that simplicity of your friends beat you.
And my second question is regarding, did you employ any automation to test the correctness of this system?
Sorry, so the question was...
Did you do any automated testing for making sure that the system is working correctly?
Yeah, so the question being, did we do any automated testing?
Yes, we did a chunk of automated testing.
We have a...
I team at E.A. that helps with our automated testing.
And so we had to work very closely with them because it was something where it was so driven by how players played the game and how we expected players to play the game, so it wasn't that, it wasn't straightforward to automate, you know?
It's not like just saying, this is a game where we're gonna have however many players simultaneously playing on servers, so we need to stress test those servers.
It was a lot more complex than that because we've gotta sort of imagine, well, how are the players gonna be playing the games?
When are they gonna?
Complete the events and how many friends are they going to have?
So it was tricky to do the testing, but we did have a big automated pipeline to that.
We could write scripts against to test against our infrastructure.
Thank you. Okay. You're welcome. Any other questions?
Okay, so after this talk I'll be hanging around outside just in case anyone wants to have a chat about it or find out more.
And I think Pete Lake, who's another producer who's just finished his talk, he'll be out there as well.
So if you want to just come hang out and talk about any of Criterion's games, then we're always very happy as well.
Okay, thanks very much.
