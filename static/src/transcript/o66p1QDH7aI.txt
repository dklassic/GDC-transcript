Okay, a couple more friendly, familiar faces in the audience.
How you guys doing today?
Good?
First day of GDC is going really well? Yeah. Okay.
Man, what a pretentious title.
Moving to Heavens.
Set the bar a little high, didn't I?
All right, well, good afternoon, everyone.
My name is Keith Gurette.
I'm one of the lead effects artists at Naughty Dog.
Don't worry, I don't take this title too seriously.
I just wanted something catchy, and judging by the number of people here, it worked.
So, if you could all do me a favor now, lower your expectations tremendously, we'll go ahead and get started.
Before I begin, I want to just take a quick survey and get to know you guys.
So how many people out here are programmers?
Go ahead and raise your hands.
Okay, how many of you are artists?
Okay.
How many of you are what we call a technical artist, the people that kind of fall in the cracks?
Yeah?
So...
You're all the ones that aren't good enough to be an artist or a programmer, right?
Like me?
No, I'm kidding.
That's...
Okay.
Well, today I want to talk to you guys about skies.
Something that's the most overlooked and often stubbed in part of your environment, part of your visual presentation.
It's the sky.
It's also got a tremendous amount of power to completely transform your visual presentation. Yet again, nobody really gives it the due justice and due diligence that it deserves. So, I want to talk to you guys about what exactly a Sky can do for your presentation.
And then I want to talk to you guys about probably the most difficult challenge when you're discussing a Sky, which is how to make it move.
We have a lot of different things that I want to talk to you guys about in this.
I've got a ton of different images and videos to show you guys.
A lot of them are not necessarily mine, so I've done my best to kind of cite my sources the entire way through, but please just keep in mind that I want the due credit for the artwork that I'm showing to go to the artists.
And the last thing is, like I said, I've got a ton of stuff to cover, so we're moving a little bit fast.
Okay?
To begin, I want to talk with you about the power of the sky.
From the moment we began working on Last of Us, we recognized that the sky can change everything about our game. That for us to create an involved and emotionally driven narrative, we had to pay attention to the sky. We had to utilize it as a tool to sell our delivery. Let's start with a few of the obvious points. First of all, time of day.
Assuming you're in a normal outdoor setting, the primary light source is probably going to be the sun or the moon. As the time of day changes, the light source is going to Your source, positions in the sky, changes.
The light direction, the specular highlights, they change.
The shape of the shadows change.
In fact, your entire composition changes.
Everything because the time of day has changed.
If you're a decent photographer, one of your most important skills is to see that great light can make a great photograph.
Composing your shot around the light direction, the shape of the shadows, and the highlights on reflective surfaces can turn something drab into something stunning.
Lighting has the ability to take any surface, any material, and completely change the character within it that you as a viewer perceive.
For example, this is one of my favorite demonstrations of the effect of lighting.
The video almost appears as if several different faces, some intimidating, some attractive, some sinister, and some warm and friendly are all being merged and blended together.
Lighting also controls the schedule of the narrative. In The Last of Us, the time of day, the time of the year, played a huge role in the narrative. Passage of time was extremely important for us to consider, and you can see it through our entire production, but especially during the concept phase.
So, something as simple as the passage of time throughout the day can dramatically impact the presentation of your art.
This is the first component of the sky that needs to be considered when you're in pre-production.
The second, fairly obvious one, is the weather.
Is it a clear, sunny day in the tropics somewhere?
Your sky should be cool, baby blue with a soft gradient to the horizon, maybe a few fluffy clouds.
Something that immediately makes you feel the warmth and relaxation of the tropical sun.
In this case, I can already taste the pina colada.
Or does your level have a beautifully dramatic and dangerous rainstorm looming on the horizon?
Maybe something more dramatic.
Gloomy, desaturated, overcast sky foreshadowing the harrowing journey ahead.
You see, the weather, while obvious, can completely change the amount of tension in your level.
It's also an excellent tool to see what's coming and possibly what's just recently gone.
You can foreshadow with the sky, because the player can actually see out to the horizon.
So these two points are a little bit obvious. Essential, but obvious.
Let's go a little more abstract, a little more fuzzy, a little more artistic.
Consider this sky.
This is an amazing photo that our art director, Rob Ruppel, took from his iPhone near his house.
Just keep this in mind for a second while I change the subject.
You've all seen a painter lay out their color palette before.
Primary colors are chosen carefully. Shadows, mid-tones, highlights.
The entire composition, in fact, they all revolve around the choice of colors and their complements.
Colors that resemble the intentions of the painter, beyond just representing an image.
Beautiful, interesting paintings are made with very simple color palettes.
Different colors have different impacts on humans, and are often related to different moods.
Warm colors can be used to describe the tone of energy, anxiety, high tension.
In fact, it's often these colors that draw our eyes the most.
Blue.
can often be relaxing, cold, if not melancholy.
These are very simple, basic concepts when describing artwork and color theory, yet they're so rarely actually applied to the production of an environment, to the overall composition of the level that you're trying to sell to the player.
Again, in my opinion, the sky and all the dependencies are one of the most overlooked parts of composing a visual experience for players.
So let's go back to that photo I showed you earlier and look at the color palette.
The tone, the color temperature, the entire color palette and emotion that it drives, they're all defined by the sky.
And that is perhaps the single most important point that I can make.
In the real world, the sky drives the lighting, and therefore the color palette of your entire environment.
In games, we can do things backwards, but the sky, the lighting, the color palette, the time of day, the direction, they all need to match, because the sky is what motivates them.
Let's look at a few more dramatic skies.
from a lush yellow sunrise that shows the promise of the day to come to a deep red sunset ending the day within which blood has been spilled according to Legolas.
Change to the sky and all of its dependent components have the ability to change your landscape from one significant emotional tone or narrative tone to a completely different experience for the viewer without touching the base geometry, without touching the materials, without touching the textures.
Which leads me to this last point before we move along.
The tone that we present visually in all of our environments has a tremendous impact on the emotional experience of the player.
For us, the tones we present to the player in The Last of Us were extremely important to the narrative structure. To the emotion that the player is supposed to experience when he's playing through the game.
And you can see it mirrored in our choices for composition.
Again, all the way from the beginning.
Whether it's a foreboding storm cloud reaching forward from the horizon, hinting at the dangers to come as you set out on your journey, or the desperation and loneliness as the beautiful colors are leached out of the sky as it sets, or the peace of mind and comfort and warmth brought from a bright sunny day, the sky can be used as a tool to present to the player whatever tone or mood his character is supposed to be feeling, because we feel it too.
If I show you this picture again, most of you are going to feel the warmth.
Probably a little bit of relaxation. Hopefully a little bit of joy, if you've had good experiences on the beach.
The sky is an incredibly powerful emotional cue for the viewer.
Neil and Bruce, our creative director and game director respectively, know this, and they focused on it from the start, which is one of the things that I loved about working on The Last of Us.
You can see that even when they're planning out the story, when they're writing the narrative script.
they were focusing on the skies and how to tell that story through the sky.
So to summarize that point, an environment completely in sync with the narrative tone can be used to deliver a pointed and impactful player experience.
Inversely, you can actually ruin the narrative tone by having a sky, lighting, visual tone that just doesn't match, that's out of sync.
In summary, the sky and all of its dependencies and lighting can change the entire look, entire feel of your game.
So it's worth starting off with. It's worth considering from the pre-production, which is something that most games have not traditionally been doing, and that we're starting to see a trend uplifting.
Now, please don't get me wrong.
I would never argue that shapes, contrasts, negative space, modeling, texturing, local lighting, effects, animations, sounds, don't matter.
But the sky, again, is one of the most underutilized tools in the portfolio of games that we've seen so far.
And there's nowhere to go but up.
Eh? Anyone? No? All right.
Enough of that. Let's change the subject.
I always like having kind of some takeaways to presentations.
That was the fluffy side of this presentation.
Now I want to talk about some tech. Let's make some friends with math.
If you're working on Skies in a game, at some point, somebody, some jerk is gonna come up to you and ask you to make it move.
And it's just a bottomless pit.
It's a bottomless pit that we've been exploring for a long time, and that with Eben's help, actually we were able to somewhat resolve for our own production on The Last of Us and Naughty Dog.
So...
First and foremost, Skies move.
I hope you guys can all agree with me on that, skies move, usually in very fascinating, complex ways.
In the past few years, I've seen, heard of, been taught, experimented with so many different techniques to fake, cheat, and imply the motion of a sky.
To list a few, I've stuck clouds on a cylinder and rotated the cylinder around the vertical axis, which is great until you turn around and realize that the clouds are still moving in the same direction behind you.
I've used a scrolling plane of clouds, which you can make better by sticking an alpha on it, break it up a little bit.
But it's still missing the vanishing point.
It's still missing all the cool lighting changes and the cool motion as the clouds cross the horizon.
I've tried layering tons of complex motion and materials to make fascinating skies.
The skies of Halo Reach are still my favorite in any game I've seen to date.
So props to them.
I've used volumetrics, which are awesome, a lot of fun, but they don't quite give enough artistic control over shapes and lighting.
And, of course, they're very, very expensive, so not an option anyway.
And while not necessarily a technique in itself, I've done time-of-day systems, which are usually just a combination of all the other systems that I've ever tried.
And Rockstar has definitely dominated that.
I can't even...
properly state how much respect I have for the job that they've done at their skies.
You see, every technique that I've tried comes with very different pros and cons.
And more specifically, it's always going to end up boiling down to more time per iteration.
Skies take a lot of time, and the challenge of adding motion to skies really boils to that one simple issue.
The more custom assets you build into your sky, the longer it takes to iterate and adapt to the skies.
I am a firm believer that if you want beautiful skies across your game, it needs to be given the attention of a full-time position.
There really needs to be more sky artists out there.
Who has time for that?
We at Naughty Dog certainly don't.
And we also didn't really have the ability to use either of those, or any of those techniques, because we need matte paintings.
We need matte paintings because we need artistic control.
You see, the focus for Skies at Naughty Dog has always been artistic control.
We need the clouds to shape the composition, the sky to highlight and draw the player's attention.
We need the world to tell our story at the perfect point of the reveal.
In other words, we need matte paintings, like this.
Because of this, the skies in our games have always been a single static map painting.
The skies have polar distortion painted directly into them.
Similar to a panoramic photo you would take off a Chrome ball, or most of the sky templates that you would download online.
We then take that texture and we project it onto a dome using spherical UVs, just standard Maya spherical UVs.
And then the dome is finally attached to the camera so that no matter how much you move the camera, you never get closer or farther away from the dome.
Obviously, the rotation is not attached to the camera.
If you're curious, we always try to ship with 4K by 2K textures.
Never, ever, ever get away with it.
So we always end up doing 2K by 1K.
You know, texture memory and all that.
The other reason that our skies have to be matte paintings is because we iterate.
we iterate over and over and over again.
Naughty Dog is quite famous for how close to the line we iterate.
Huge, huge lighting changes.
Last week before we go GM is no joke.
And so obviously the skies need to keep up.
For example, this is the sky that was in the military city of The Last of Us maybe a week before we went GM.
And this is the sky that we shipped with.
Now, obviously, the lighting hasn't changed too much from this, but if I had actually put motion into this using layers, I would have been screwed.
I would have had a very small amount of time to iterate over all of the work that I'd done in the past.
Obviously, this change was a good thing for the sky, but it's something that I need to be aware of.
So here was our great challenge on The Last of Us.
How do I create the illusion of motion in the sky without needing to stick myself into the iteration process?
In other words, I couldn't split it into multiple assets.
And our inspiration from this actually came from Uncharted 3.
How many of you guys remember this level?
Okay, a few hands.
So what we're trying to do here is we're trying to have a wall of sand being held at bay by the wall of this mystical city.
That wall of sand is supposed to look like just this horrendous storm kind of on the outskirts of the city.
We dubbed it the Brown Doughnut.
But...
What we attempted to do was treat the sky the same way we treat water, which is using a UV distortion technique called flow.
Unfortunately, we didn't actually have time to really get this working for Uncharted 3, so it left a bit to be desired, but the seed was there.
And we kind of took off running with it during The Last of Us.
So before I really dig into that, I need to talk with you guys about what exactly is Flow.
I don't have a ton of time up here.
I want to make room for Evan's presentation next, so I'm gonna skim this a little bit and give you guys some more resources.
But I do need you guys to understand the broad spectrum of what Flow actually is.
So it's a very specific type of UV distortion where I'm able to specify specific directions and stretch a texture.
based on those directions.
Then once I get that stretching looking nice, I can just crossfade between an earlier version of that texture, and it looks like the motion is continuous.
For example, if I were to paint directions using any number of flow tools out there, this one is Maya Fluids, I get this texture.
I'm gonna pause on this texture for a second because I need you guys to understand what's happening with it.
I'm going to be applying this to the U and V channels of another texture, which is to say that the red channel of this texture is telling me to push the pixels in the U direction, either forwards, backwards, or not at all, based on the intensity of the red.
50% red here is no motion at all.
Pure red is forwards in U.
Black is backwards in U.
The same goes for green.
So if we go back and look at this base texture...
It doesn't look like much, but all of that vector information is in the texture.
This is really hard to paint, by the way, because it's very specific.
Now, if I apply that texture, you can see that we get distortion.
And notice the crossfading.
It looks like it's continuous motion.
Here are a few more cool examples.
A zoom.
A twist.
Here it is practically used for the pathing of water.
And here it was being used for the ground, the particles, the wind.
This is the slide you guys should take photos of.
If you want to learn more about Flow, Carlos, who is the person who implemented Flow for us back in Uncharted 1, made a presentation in 2002.
I did as well.
In fact, those examples are from it.
And then the original resources are cited there as well.
Okay, great. You guys know what flow is.
But how do we apply this to the concept of a sky moving in the world?
How do we break down the motion of a sky in broad terms so that we can consider applying this in a faked scenario?
If you look at this carefully, you'll notice that there's actually something happening here that hopefully you remember from your perspective drawing class 101, perhaps.
There's a vanishing point.
there is a point where all parallel lines, because the clouds are actually moving in parallel, are converging from our perspective, or merging.
If you notice, all of the motion is going down to that, you know, roughly that one point. If I look straight above the vanishing point, there's no horizontal motion. And if I look to the sides, there's no vertical motion.
Of course, I can turn around, and in this case, I just flipped the video, but hopefully you guys get it.
It's the same, except now instead of shrinking to, everything is growing from that vanishing point.
So I'm getting closer, but I need to start thinking about this in terms of a dome, because I'm going to be applying this to a sky dome in my game.
So if I instead take this concept and apply it to a dome, how's that going to work?
Now, as we discussed before, we need to break down the motion in terms of u and v for it to be useful for flow.
Uh, u being the direction around the sides of the dome, v being the direction up to the top of the dome.
So let's consider for a second just the vertical motion.
It starts at the back, and it rises until it reaches the top.
So for the back half of the dome, it's going up.
And on the front side, once it reaches the top, it changes directions and it goes back down to the opposite pole.
So it's going down in the front.
If we consider these as colors, keeping in mind that again, 50% green is no motion, black is down and pure green is up, these would be the colors describing the motion that I've applied.
Now, obviously, this is way too simple to describe what's going on in the sky, but it's helpful for me to start thinking in really broad terms like this.
So what I really want to do is I want to take that, and I want to find a way to make it go slower around the sides, because I'm trying to fake perspective.
So the clouds that are supposed to be the farthest away from me need to be moving much, much slower than the clouds that are the closest to me, which are directly above me.
To do that, I could paint a gradient, but through Eben's help, we were able to figure out how to do this mathematically, which is just way better.
This is the correct gradient.
It doesn't look like much right now, but bear with me for a little bit, and you'll see it working.
If you're curious how to get this mathematically, it's really, really, really simple.
If we just take the wind direction and take the dot product of the wind direction against the binormal of the sky, we get this gradient perfectly.
Another way to think about it is if you convert the wind direction to tangent space and then extract the green channel, this is what you get.
Okay, you guys feeling good if I confused you?
Still with me?
A couple smiles.
You're always smiling.
I like that.
So let's consider the U motion, the sideways motion.
Once again, we want to separate out the vertical, so we're not looking at the vertical at all, just sideways.
The motion is going around the dome, parallel to the wind direction, which means that I've got positive motion on one side and negative motion on the other side.
But again, that's an oversimplification.
It needs to be the slowest at the vanishing points.
and the fastest at the sides that are supposed to be closest to me.
So, again, I can do this through math.
This time...
the math is taking the wind direction dotted against the tangent of the skydome, or the red channel of that previous function.
Here they are combined, which, again, doesn't look like much.
You guys want to see it in action?
Okay.
I'm going to take those flow directions that we just saw in the dome, and I'm going to apply this texture to the dome.
And this is what we get.
We now have completely procedural motion, creating the illusion of the clouds moving out into the horizon with a mathematically correct vanishing point.
My favorite part of this technique is that I'm not bound by the content of the map painting at all.
Like, at all, at all.
I can literally swap the map textures and do no work.
or okay, honestly, almost no work.
I've almost completely removed myself from the iteration of the process of the sky.
Is that one not playing?
Okay.
Here's where it breaks down.
Like all good things in life, there's always something negative about it.
Uh, in this case, the fact that our sky is just repeating its motion means that...
it's vulnerable to showing that it's repeating its motion.
Depending on the contrast of your texture, you can easily see the repetition.
For example, notice that hard spike at the top of the cloud.
If you look at that, you're gonna pretty easily see that, oh, look, it's repeating.
So this is something we had to consider.
We have two decent solutions to get around this.
One is I can just change the wind direction so that it moves in a way that the repetition doesn't show.
Or the worst case is I can actually mask out the motion of the sky.
I say the worst case because we're getting a sense of depth and parallax in the motion of the sky because of the speed that it's moving.
So if I slow down sections kind of willy-nilly, it completely screws with your perception with the illusion of the sky.
The other one is that there's a very large, ugly pole at the top.
This is always a problem with Skies.
It's made much more apparent because of the flow.
We naturally called this the Sky Sphincter.
Um, we can minimize this by painting a solid color on the top of our matte painting.
We could stick extra cards up there to cover it up and put their own distortion on it.
Or you can do what we did in The Last of Us and just not allow the player to look up that high.
You know.
Either or. Okay, so a couple retrospective thoughts.
This one's a very personal issue to me.
How many of you guys actually noticed that the sky is moving while you're playing the game?
That's a lot more than I expected.
You guys are sucking up?
No? You sure? Okay.
We had a lot of debating over the speed that the skies should be moving.
Do we make them fast enough so you notice it while you're running around?
Or do we make them slow enough so that you notice it when you actually look?
We chose to favor subtlety, rewarding the players for actually taking the time to look around and take in the scenery.
But I'm not sure that it's necessarily the right choice.
I'm going to choose to believe that it was, but that was the end result.
So I've noticed when a lot of people are playing the game, they tend not to even notice that the skies are moving.
I also still choose to believe that even if they didn't notice that the skies are moving, just the fact that there is that much more motion and realism in the world adds a tremendous amount to the player experience.
That's pretty much all I've got right now.
Hopefully that wasn't too much for you guys.
And I've got three minutes to let Evan come up here and take over for me.
So I'm gonna step off to the side and take questions.
Please come up and ask me.
And then Evan's gonna take over with an awesome presentation about liquid from The Last of Us, liquid particle effects in particular.
And then if we have more questions, once Evan starts, then I'll move outside.
Cool? Thank you guys so much.
