Hi everybody.
First off, a quick video explaining what Among Us VR is all about.
I applaud.
This is me clapping my hands.
Oh come on!
Oh come on, we just started the game.
Come on pig, what is it, huh?
What do you want?
I like chicken nuggets!
Vote him out!
Vote him out!
Alright, welcome to Among Us VR Postmortem.
So, along with the overview of Among Us VR development, we will highlight some wins and challenges that we faced.
So, don't worry about taking pictures or recording a talk.
There will be a QR code at the end that you can use to download the entire deck.
And yes, please do silence your cell phones.
So, my name is Michal Książkiewicz, and I love multiplayer games!
And I'm also the design director on Among Us VR.
And I am Sean Patton, a principal game designer at Shell Games, and I worked on both minigames and playtesting efforts for Among Us VR.
And I'm Jennifer, a senior production manager at Shell.
I've been there for five and a half years, but unlike Miho and Sean, my background was not in games.
Previous to this, I had over 10 years of experience in project management in various industries, so I certainly brought a lot of transferable skills to the table.
But truth be told, this has been my most exciting gig yet.
Now before we zoom into any juicy stories, I want to zoom out to our high level schedule.
It's a bit of a beast, but this will give you the overall project in numbers.
And what this represents is 15 months from kickoff to launch.
And to break this down further, we had eight weeks of pre-production, 37 weeks of production, and 18 weeks of QA.
That not only included our internal QA testing, but localization, Meta's FQA submission process, and four external stress tests, which you'll hear more on later.
By mid-September, we had what I'll call overlap, where for eight weeks, we were simultaneously wrapping up QA, prepping for launch, and kicking off a new team for post-launch and live ops work.
Thankfully, this was all with the same directors group.
I cropped this image from our launch team contact list, which no matter which version you pull up, these five positions remain the same.
And while there are times that it's better for the team to have a shift, we had the benefit of not weathering a change of project leadership, no matter the phase.
And while I'm talking about staffing, we had 11 devs at kickoff.
At our height, we had 28 beans, I mean, devs working concurrently.
And over the course of the launch project, we had 49 developers and in-house QA folks to contribute to this effort.
This number, however, does not include marketing, product, external vendors, in-studio playtesting support, and, well, you can see the credits.
VR is no easy feat, even with a well-established IP.
So now that I've given you some numbers to chew on, we can zoom in to where it all started.
Pre-production.
Excuse me.
How long it should be and what does being ready for production look like has varied greatly from project to project.
I like to take the approach of establishing the criteria based on how many questions you have to answer.
For Among Us VR, we had two major questions to get through.
How are we going to network this in VR?
And what's even possible?
The path for one of these was a little less rocky than the other.
So to warm up, let's go over one of our first big wins, our beautiful corner.
We knew we were going to go with rebuilding the Skeld in 3D.
It was one of the first major decisions shortly after kickoff.
To quickly give some context on that front, Among Us 2D has four maps you can choose to play on, with the Skeld being the first map InnerSloth released in June of 2018.
And nearly five years later, it still remains the most popular and most played map.
It would then serve as not only the map that people would be most excited to be immersed in, but also most familiar with.
And while the engineers had to sort through networking solutions, art was set on choosing a room to bring to near polish.
This would be our beautiful corner and would serve as our benchmark and basis for answering what's even possible.
Now a lot can come together when creating a beautiful corner.
Part of creating the room also included creating a character.
This gave us a chance to work through size and scale for both Bean and Room.
And once we started to narrow in on that, we replicated our character until we hit our set limits for performance.
We discovered that 10 players is where we should max out at.
And while the decision for max players was rooted in performance, it made sense from the game design end as well, and just so happened to match the amount of players the 2D game launched with.
Now, while I don't have a headset on hand for everyone to really do this justice, here's an image from the early beautiful quarter.
We chose the Oxygen Room.
It had a good mix of mechanical and organic components, and it was small, so it could help us to guide the size of the beans better.
It also had an opportunity for VFX, so we could start playing around with those elements as well.
It just seemed fitting to breathe life into the VR version by starting with the Oxygen Room.
When we wrapped up pre-production, we had the delivery of a room that you could get in headset and experience.
Our beautiful corner would also help us to clear alignment with the look and feel with Innersloth and Robot Teddy.
And with a medium they were so unfamiliar with, and an art style that we wanted to stay sacred to, this was imperative.
It was our first chance of introducing the developers of Among Us to the top-down world they created, now rebuilt in first person.
Little did we know when we delivered this as a milestone, having this handy would actually go so much further.
We got word that Jeff Keighley, video game journalist and host of the Game Awards, was a huge Among Us fan.
So talks began if we could announce at the Game Awards, December of 2021, which would only be four months in and almost a year out from launch.
The request came in hot and we didn't have a lot to work with, so we had to call in the best, trailer maker Derek Liu.
And with our beautiful corner in hand, he made 27 seconds of magic to let the world know Among Us was coming to VR.
Still gives me chills.
But as I foreshadowed, it wasn't all smooth sailing.
While a big win for half the team was underway, the other half was grinding.
We pulled on any resource within the studio that had networking experience.
It was all tech hands on deck.
Unity had been decided as the engine of choice.
And while we knew we weren't inventing something new, I mean multiplayer VR has already been a thing, the options were still limited.
Really limited.
The solution was a product by Exit Games, Photon.
They pointed us to their newest product, wasn't even to market yet, Photon Fusion.
Part of the pre-production goal was to have a multiplayer demo, complete with role assignment and some basic forms of minigames.
But documentation and support for Fusion was sparse, which is not ideal when you're trying to set up something new.
So after weeks of spinning wheels, we wanted to go backwards.
They had previous powerful game networking middlewares, PhotonPun and Boltz.
We started researching in that direction, only to find out our timelines did not align.
They were deprecating and heading into maintenance mode, and we had no choice.
In the name of stability and sustainability, we had to go with Photon Fusion.
And the early challenges of this choice was unfortunately not limited to only pre-production.
We were developing right alongside them, and with a product that hadn't even hit beta.
We were just crossing our fingers and hoping for the best, but operating without their timeline.
While all's well that ends well, we didn't account for the time sunk into debugging, and engineers were constantly battling and researching bugs, trying to even figure out whose bug it was.
We did a lot of QAing along the way.
But I digress, and I don't want to exit pre-production just yet.
We have Pillars to talk about after all.
Thank you.
So, having these important tech questions answered, we needed to focus our design approach, so we turned to Project Pillars.
Now, in case you're unfamiliar with the concept, Project Pillars are kind of like guiding stars for your game.
They are principles that you agree to stay true to throughout production.
I'll go ahead and make the claim that we establish pretty good pillars that are serving us well until this day.
So how do we do it?
Three steps.
First off, it could be really easy to make a long list of things that are important for your game.
But you've got to remember that the more pillars you end up with, the more likely they are to end up conflicting with each other and getting blurred, which goes against their purpose.
So to battle this, you should try to think about what is it really that makes your game special and try to focus the pillars on that, as well as combine your pillars into maybe a smaller number that is a little broader and covers the same basis.
Second, product pillars really only work if both your team and stakeholders believe and understand them.
So make sure that you involve them in the process of creating pillars as early as you can.
This is where you learn what is important to different people and different teams, and the sooner you learn that, the better.
So now that you've established some small amount of good pillars that everyone's on board on and bought in, you need to use them.
So make sure you always evaluate your design choices against the pillars and scrutinize any feature that doesn't seem to quite align with them.
As you do this, you may find yourself at odds with your pillars.
This isn't necessarily a bad thing.
This didn't happen a lot to us, but it may be that you needed to get your hands a little dirty before you realize what your pillars really want to be.
So again, the sooner you do that, the better.
So what kind of pillars do we have on Among Us VR?
The first one we came up with was to bring the best of what Among Us is into VR.
Among other things, what that meant is to preserve the visual style, the overall tone of the game, and to keep a low barrier of entry when it comes to learning how to play it and getting into matches with friends or strangers.
Our second and last pillar was the one that I feel like we ended up shaking at each other more than the first.
And this was people play over gameplay.
What that meant is that our design decisions were to be in service of social deduction and players actually interacting with each other.
It also aligned well with our accessibility goals.
Okay, so making good pillars is really hard, right?
Like it takes a lot of work, it takes time, you're arguing, but once you have them, it feels great to be equipped with those tools.
So we're ready for the fun part of OMG, we're making Among Us in VR and it's going to be great.
We're going to get two new crew members, at least one alternative imposter, two new game modes, some ghost only activities on our board, and like a shooting asteroids mini game that makes you feel like you're in the Millennium Falcon.
Yeah, sorry.
I'm going to have to interject.
Production work is clearly never done.
I'm going to have to call our first emergency meeting here.
There's certainly a double-edged sword to blue sky brainstorms.
And while I don't want to be the web blanket of production, you always want to have an airtight MVP before exiting pre-production.
And I'm not saying to have all the questions perfectly answered, but you need to start solidifying that sandbox that you'll be playing in as best you can.
So what do I mean by MVP?
So this is the minimum viable product, and it serves as the absolute smallest game that you're willing to launch with.
And truly, it needs to be slim.
You want to end pre-production with this document as defined as possible.
This isn't the time for unapologetic optimism.
We've seen scope cuts generally go one of two ways.
a death by a thousand paper cuts approach where at the 11th hour you've overscoped and you're trimming down piece by piece, usually cutting down team morale and everyone's soul right along with it.
Or you come out the gate to cut until it hurts.
And to stay in line with my graphic metaphors, the latter doesn't actually leave a team bleeding and wounded how you might think.
There's acceptance when realistic expectations are set.
The team can now digest and buy into what's doable versus having to recover from lofty expectations that might get crushed or lead to crunch.
And how do we apply this to Among Us VR in particular?
Well, we had all sorts of ideas to work with, but we did have a timeline to adhere to.
and we wanted to prioritize getting this to market.
So we stripped it back to what we thought would be the best gameplay in VR, staying true to our pillars and not veering too far from the magic that the 2D version had already discovered.
We affectionately called it our vanilla version.
Now, don't underestimate Vanilla.
She's not boring, and she gave us a lot of power by way of flexibility.
We knew our community would have a cross-section of players, die-hard Among Us fans without headsets, meet people with headsets that have never played the 2D game before.
To allow this to have more of an organic growth and allow for the new community to have a hand in driving what Among Us VR should be, we needed Vanilla.
And I mean, it's America's favorite ice cream flavor after all.
How could we go wrong?
Oh, I want to talk about how we totally didn't go wrong.
Admittedly, when we came to the realization that we're going to have to focus on fundamentals and stay within our scope, there was a moment of hesitation.
We were, are we just porting?
Is this some kind of color by numbers game making situation?
Well, short answer, no.
Longer answer, we still found plenty of design opportunities to make things interesting.
There's totally room for creativity when you're translating a game from one platform to another, let alone when jumping all the way from 2D to VR.
So consider which of your new platform's features are strengths that can help you capitalize on what is it that makes your game great.
And maybe there are aspects that the original game shipped with that your translation process can improve upon or smooth out.
So on Among Us VR, we came across quite a few opportunities like this, which was a win for us, and I want to highlight three of them in particular.
So there's proximity voice chat that we added to the game, there's this magical crossover of optimization and simplification, and some balancing shortcuts that we took.
So diving into proximity voice chat, While this already existed for the 2D game via mods to it, bringing it to first-person perspective VR with spatialized audio really was a game changer.
And it did all the right things to a game about social deduction and arguing.
So even though this was not gonna be easy to implement, we knew we can't leave that out of our MVP.
We didn't immediately plan for any additional fancy features around voice chat, but some came up naturally and we ended up adopting them as just gimmies.
So hearing imposters in vents or forcing imposters to stay quiet while they're hiding inside of the vents was a bug at first, but we realized it's actually way more fun to do it and it doesn't really unbalance anything.
Another thing was seances, which is where ghost players, so the dead ones, can still hear what the living are saying.
And they can also open the doors by just approaching them.
So it opens this supernatural line of communication.
You can be like, hey, ghost, did Red kill you?
Open the door twice if you did it.
And it seems like such a game-breaking problem and such a huge advantage to the crewmates, but actually not so clear cut.
There's plenty of room for error.
There's dead imposters who are messing with this.
So it actually ended up again being just this fun new thing that was now a feature in our game.
Finally, we didn't quite predict how much noise and heated argumentation there's going to be once someone calls an emergency meeting.
So the ghosts, who now can talk among themselves, but can't be heard by a living player, are trying to talk while everyone here is arguing, trying to blame each other.
And so the ghost couldn't really hear themselves, which made the ghost experience worse.
So what we ended up doing is applying this audio effect to the living player's voices as they come through the veil to the world of the dead, so that the ghost could tell who's speaking that is, you know, alive or dead.
And this worked really well to solve this problem while being this cool reminder that you're dead, like you're in a different world.
Now, of course, voice chat also means that that much more opportunity for players to be less than excellent to each other, especially in a game that encourages you to lie, deceive, and literally get away with murder.
Now, we knew that this would be a problem.
It's not a new concept that people get toxic in multiplayer games, but we didn't manage to squeeze all the toxicity mitigating feature that we wanted to before launch.
So those will have to come in future patches, one of them launching really soon.
All right, moving on to this one simple trick for game design that probably needs a better name that I failed to come up with, but here's the gist of it.
So you're at the summit, you know how important it is to optimize your VR game.
When you're developing for a phone strapped to someone's face, it's not just embarrassing to have your experience be dropping frames, it actually makes people sick and therefore they can't play your game.
Now, at the same time, simplifying things is just a good game design principle because it's usually very easy to make things more complicated if you actually need to.
So this struck us as this win-win combination, right?
Like we can now leverage this in Among Us VR.
And Sean will give you a quick example of how we did it in the wild.
Yeah, so one example of this is in the task design, right?
Tasks in Among Us are not actually meant to be a challenge.
In fact, we aimed for players being able to figure them out without any tutorialization whatsoever.
Draw calls were also at a premium.
So simplifying some of the 2D games minigames made it not only perform better in VR, but also made them less prone to player VR error, where you accidentally interact with the stuff that you didn't mean to.
In the example of Start Reactor, which is a Simon game, we ended up with a four-button layout that made the task less frustrating and less expensive performance-wise, while still remaining one of the most challenging and focus requiring tasks in the game.
Thank you, Sean.
So this idea of simplification and optimization being a combo isn't only applicable to your game's performance.
It also helps protect and optimize scope and schedule in general.
So in alignment with our pillars, we decided to greatly simplify the matchmaking process by removing our lobby browser and letting Photon's matchmaking put players into games.
This was also Photon's preferred way of doing this, and what they recommended to us.
More on this later.
Now, this was a lot less work and a significant reduction of cases for QA to cover, but it was actually also better for the player experience, making it quicker and less confusing to find people to play with.
The small caveat here is that we do get occasional requests for a lobby browser, just like in the 2D game, but it's pretty hard for us to justify that this would actually benefit our game.
Finally, there's the crossover between accessibility and simplification.
So in the same vein, when things are simpler, they are likely to also be more accessible.
And we found a couple of little design rules along that supported this.
So all minigames must be completable with a single hand, basically demands that they are less complex and easier to implement.
So another win-win.
Dexterity should not be a major factor for player success.
It does the same thing, but notice the qualifier major that we snuck in there, that still leaves some space for player mastery.
All right, moving on to the balancing shortcuts.
So balancing is super important in multiplayer competitive games.
So it's not like we could really leave it out of our MVP, but it can be really time consuming and requires a lot of large scale playtesting.
So we had a problem.
What we decided to do is basically copy as much as we could from the original game to preserve as much of its original balance as possible.
Now, discussions of what is the correct balance for an Among Us game, that didn't fit in the MVP.
Now, the first thing we copied was the layout of the scout.
It was basically copied one to one wherever possible with a notable difference pictured here.
So on the left you see the picture of the reactor room where you have the two sabotage stations highlighted where two players need to go and touch them to kind of save the ship from blowing up and not lose the game.
Now, how it works in the 2D game is your camera limits the view.
So when you're at one of the stations, you can't see if there's anyone at the other one trying to fix it.
And you kind of live in this uncertainty of not being sure if there's someone there helping, that someone just got murdered there over there, and so on.
So in VR, what we had to do is build in alcoves to where those saboteur stations are, so that these limit your field of view and your line sites.
to accomplish a similar effect.
This was definitely an exception to the rule, though, of preserving Skel's original layout.
All right, the next thing we copied was the run speed, so that we measured how long it takes in a 2D game to run from one end of the spaceship to the other, and we copied that into VR.
It actually ended up making the speed pretty quick, but we realized that it should work.
We also copied the default match settings from the original, so things like number of imposters and cooldown durations.
And then we didn't let players mess with them, which was both a scope win and aligned with our people-play-over-gameplay pillar, but it did mean that launching a balanced game was that much more important, because now we didn't give the players the tools to self-adjust.
So because we copied all those other things though, it wasn't difficult to arrive at a balanced experience with just a few simple tweaks.
So that's how we launched a balanced game without having to do any heavy lifting.
Now, all of these design wins were great, but how do we know that?
Whether it comes to balancing or mini games or control schemes, ultimately, figuring out what works and what doesn't can't happen without a lot of playtesting.
I love playtesting!
After all, one of our shell games principles is play test constantly, it's the only way to know.
Now, while I did a talk about play testing VR back in 2018, today I'll dig into two big differences between then and now.
Those games I talked about, well, they were all single player.
And of course, among us VR is multiplayer.
The other big difference, well, we are still testing games during a pandemic.
So let's dig into that.
First, I'll talk about challenges.
Pandemic and multiplayer are on there.
But I will also cover challenges stemming from testing a game with a popular, established IP.
I will also cover how we tested and decided on our locomotion controls.
And finally, how we made sure we could handle thousands of players.
Alright, so how do you test during a pandemic?
Well, for us, Usertesting.com was an invaluable resource for finding folks that not only could test games remotely, but were able to cast and stream while they play.
We made great use of their platform for I Expect You to Die 2 and our relaxing cooking game Lost Recipes, both of which were developed fully in the heart of the pandemic.
Quick note, while we certainly focused our efforts on usertesting.com, they did not ask me to mention them and they're not the only game in town if you need the same resources.
All right, so process-wise, first we'd send out screeners, questionnaires, to make sure people had VR gear and could cast, which basically meant Quest 2, because while it's possible to do other setups, Quest 2's market share and relative ease of use of setup and capture made it the one we focused on.
Interesting tip.
When you were making these screeners, you need to keep in mind that folks on these testing sites, they're usually testing generic websites, which games are a treat for them, right?
So we needed to keep people honest, or maybe at least paying attention.
So we'd collect folks that could actually test our games.
To that end, we had questionnaire that included questions like this one.
meant to keep potential participants on their toes.
Which of the following virtual reality headsets do you have access to right now?
All right, let's look at the answers that we had in the system.
You'll notice some interesting answers here.
Like the Famicom 3D, that's not a thing.
The Google Crimson, which is a code name for the Daydream.
The PlayStation Portal S, also not a thing.
Then of course there's the Sensorama, which is from 1962.
And then the Virtuality, the classic early 90s VR headset featured, among other places, in the 1995 cinematic masterpiece, Hackers.
It's actually also the first headset that I developed VR on back in 2001.
And then lastly, we had this Xbox, the Xbox Moda.
We made it up, but it still managed to cause a 132 comment thread on Reddit.
Did Among Us VR just leak an Xbox VR headset?
No, I'm sorry, we made that up.
But under the hood, these answers have actions associated with them in the user testing platform.
Certain ones that actually exist, participants may select that was okay.
Anyone who selects a fake one, they get rejected.
And there in the middle is the only one that matters, the Quest 2.
If participants select that, they're in.
All right, so you think the only thing we have left to do is actually carry out the test, right?
Nope.
User testing platform does not handle multiple people at once.
And as we all know, Among Us VR is multiplayer, so we needed a workaround.
Our solution involved three tests per player, still conducted through User Testing's platform.
A pre-test to record base information like familiarity with VR, playing habits, and game preferences.
That test also asked participants to follow a process that made sure they really had the correct hardware and the capability to cast and record.
A lot of folks who say they do, don't.
Now that test ends with an agreement to meet at a certain date and time in a Google Meet.
At this Google Meet, kind of like a VR speakeasy, participants take another test.
This active test runs in parallel to the meet, it has installation instructions for the game, and also serves to record the cast of their gameplay.
through user testing's own platform.
And finally, folks take a post-playtest questionnaire, which includes our base playtest questions and anything unique to the gameplay that they just tried, but more on those later.
Now, while functional, this process was not without its issues.
There's the aforementioned liars who, despite our screeners, still slip through, and surprise, they don't have a quest to.
Then there's more mundane issues, like devices not being charged or updated.
Side note, Meta has an uncanny ability to push updates right before our tests, or at least it seemed that way to me.
So how do we work on these?
Well, we would send messages to players the day before, reminding them to charge their headsets, update their devices, and we would allow a full half hour of test time to troubleshoot with folks in that Google Meet.
All right, next are audio issues.
Since Among Us VR has voice chat, once players are in the game, we want them talking there.
And that audio, of course, would then conflict with the Google Meet, both volume-wise or worse, depending on the computer and their setup, the casting would sometimes not be allowed to record audio, and that would ruin the test.
So again, more time allowed for troubleshooting, and an issue checklist helped with that.
And then there were plenty of no-shows.
And how do you combat that?
Do you do it like the airlines and overbook?
Well, what we did is we booked the full 10 players, our max that could play.
And then we had some shell folks who were naive to the game, sort of in reserve, and arguably not as good as fully naive people.
And it was also harder and harder to find those shell folks as the project went on.
And if that didn't work out, then we would just play with less than 10 players.
Now this last one is not really an issue with the testers, more of a heads up for your development team.
You're going to need a lot of debug options.
You'll want something special for playtesting.
We had things for Among Us like make the host not an imposter, restart the round, mute everyone.
Things like that.
But we actually built into our build process that any builds that were going into the playtest channel were actually disabling that debug menu for anyone except the host.
Because no matter how clever you are or think you are in hiding that menu, people will find it.
All right, let's talk about the challenge of an established IP.
We had to always be aware of the level of familiarity our playtesters had with the game.
2D Among Us is being played by AOC, by Jimmy Fallon, for God's sakes.
It's in the cultural zeitgeist.
So in that screener that I mentioned earlier, we would ask if they've ever heard of Among Us.
Have they played it?
How much?
But again, as Gregory House has taught us, everybody lies.
So we'd ask follow-up questions when anything seemed suspicious.
But at the end of the day, we would be looking for three groups to intentionally playtest with.
all naive to the game, heard about it but never played it was okay, all familiar, and a mix.
Now, hold on, I have a suspicious choice here that I want to talk about.
So deciding how to react to playtest data from all these different player groups, and knowing that there's even more player groups, we had to make some difficult, not to say impossible choices, and you know, we had to pick our favorite kids.
So at first place, most favorite, were players who are both new to VR and Among Us.
Those are players that we knew are going to need most help, and we didn't want to sour anyone to our game.
Remember the low barrier of entry.
This choice led us to spending a good chunk of our development time developing, making an interactive tutorial that didn't exist in the original game.
At favorite kid runner-up, we have players new to VR only, but maybe familiar with Among Us.
So at Shell Games, we always cared a lot about making VR newbies feel comfortable and welcome.
So we ended up committing a lot of our time to providing a plethora of controls and comfort features to that end.
In third place, we have players new to Among Us only, but familiar and comfortable with VR.
Although social deduction games can be actually a pretty strange concept to someone who's never played them.
and we observed that we had to tweak some of our settings, for example, making your smooth turn speed much faster than what any of us was comfortable with, because players out there are happy spinning really fast.
We also were close to defaulting our turn modes to be head-based, so this is basically where you move your head, that's what determines your forward direction, which again, was something that experienced players play with.
But thanks again to this ranking, ultimately we ended up going with what we felt will be the better for players new to VR, so kind of the twin stick movement.
Coming at least favorite was everyone else.
So basically players who are both among us and VR veterans, who we just weren't super worried about having to do anything special for.
Now, unfortunately, that did mean that we probably disappointed that player group the most, and that's not great.
Those were some of our big fans.
Let's talk a little about locomotion.
When we first started to think about reimagining Among Us for VR, there were two main locomotion camps on the team.
Direct thumbstick move.
You push the thumbstick in the first person, and you move.
and third person, which is an interesting method of movement that really you'd have to see to believe.
Yeah, I got this one.
I can show it.
This happened actually in the pre-Sean, pre-production times.
And I can't bring up locomotion or you can't bring up locomotion without sharing more details about how third person movement was known as penguin mode.
We had an idea to eliminate any discomfort from moving, while also keeping the character pace the same, something teleport doesn't do.
When you push the thumbstick, you see your body move, and you are sort of remote controlling it.
It seemed to work, but we needed to playtest.
And in the name of playtesting constantly and answering questions early, you can see from the clip how primitive our early playtests were, yet it didn't hinder us.
It's also important to note playtesting with established IP takes additional steps and strategy, not just vetting playtesters prior to the test.
Beloved IPs and characters have influence that you might not want skewing results.
So think through similar sizes and shapes to your well-known characters and pick one to implement and anonymize the playtest with.
That way you have the same feel and your findings can be accurate.
With the early timing of our playtesting, we needed to consider marketing.
If any leaks occurred prior to our announcement trailer, it'd be a whole other host of issues to deal with.
So we used a penguin, our honorary first space bean.
Rest in peace, penguin.
That's awesome.
Yeah, maybe you need a penguin hat in the future.
So what did all this playtesting show?
Well, in short, it showed that the third-person or out-of-body playtesting worked really well for curbing any feelings of discomfort.
But, and this is a big but, The fantasy of Among Us VR, the pillar even, is the best of Among Us in VR.
And what does VR do extremely well?
Immersion.
Simulation.
Fulfilling the fantasy of being a crewmate.
If I'm constantly leaving my body, who even am I?
So even if we thought we had time to do both control schemes, which we didn't, we shouldn't because it breaks that fantasy.
So with a first-person movement decision made, well, that also means we needed to add a bunch of nausea-reducing options, which we did.
What?
Everyone else was doing it to me.
I'm just resetting the kill cooldowns here, folks.
So we made the settings, but we found in our testing that even when we explicitly required players to open the settings menu in the tutorial, folks were still not understanding, well, which settings were for them, or even that the settings existed at all.
So, we bought a costume, we channeled our inner TikTok, and we made a series of videos.
This was the first one.
In this video, we'll cover moving in Among Us VR.
Moving is achieved through the use of one or more controllers.
Many settings can be customized.
Move with your left hand is the default.
Try pushing forward now.
Right hand is available, as well as single-handed mirrored mode, where both hands do the same thing.
And this is my favorite.
Let's learn about moving the map in Among Us VR.
Need the map closer?
Pull it closer.
If the map is in your way when running, simply grab that white bar and move it up or down.
There, an unobstructed view.
Now you can relax.
about.
First, let's talk generally about these tests.
We needed to be sure that our game could handle lots of players at once.
While the observed testing that we'd been doing up to that point was all about tweaking gameplay, these tests were all about free play, letting people play unsupervised.
Also, it would be the first time we really pushed Photon Fusion.
Stress testing at its finest.
Testing matchmaking at scale.
And it all pretty much worked.
So that was great.
But we also had marketing considerations.
We had kept a pretty firm lid on testing up until this point with NDAs, some strongly worded emails if need be.
But now we'd had a lot more people to test with and a lot more people to handle.
So we figured there would be some leaks and we needed to be ready for that.
Honestly, we probably should have started stress testing a little earlier, but we were afraid of those leaks.
We did our first test with hundreds of players on August 11th, 2022.
And remember, we were launching on November 10th, so this was late in the game.
Also, these tests weren't really going to be a design test, but they still kind of were.
Insights gleaned from these tests helped inform our first patches and updates.
Lastly, we needed to keep in mind this feedback was from a very specific audience.
These were the very eager, the Among Us fans who owned VR already and were very active in our Discord.
Alright, so how did all this testing go?
Well, it turns out that stress testing was quite stressful.
Let's talk about those issues.
We had partnered with an entity that was going to help get all the testers under NDA in the Discord ready to go.
But it didn't quite work out that way.
There were communications issues throughout and we sort of ended up having to do a lot of the work that we'd pay them to do ourselves.
we actually also had trouble getting people into the, you know, the bills onto player devices.
For the smaller 10 person tests, it was relatively trivial to add the correct email addresses through Meta's system.
So players were on the right channel and could find and download the bill.
Now here we were trying to paste hundreds or thousands of emails in at a time.
And if just one wasn't valid, that whole batch would be flagged and wouldn't work.
So we had to do chunks of the emails at a time.
By hand, it was not great.
Quick tip, the site to add emails to a channel claims the limit is 1,000, but that's actually not true.
But thankfully, we had a great relationship with Meta.
We worked with their folks to make the process better, and it should now be better for all of you too.
Here's an interesting anecdote.
We ended up testing the logic that decided how many imposters there would be during one of our stress tests.
Normally, for four to seven players, there is one imposter.
for you.
So we got important information from that.
But yeah, it was hard getting thousands of players into a secret game built on a new network infrastructure with new tools.
I guess that's why they call it being on the bleeding edge of technology.
It was also totally worth it.
We were very glad we did these tests.
We weathered the storm and knew our infrastructure could stand up to the onslaught.
Some imbalances with the imposter win rate also became visible with all the new data.
So we were able to tweak some cooldowns and which minigames were visual, that is, which minigames other players could see the results of.
And we ended up balancing the game even better.
And we had the joy of seeing thousands of players enjoying what we'd worked so hard to create, giving validation to our team that we had succeeded in reimagining a beloved game for a whole new medium.
So while a challenge, VR playtesting was also a win as well.
Now, testing with the smaller groups was great.
And while testing, you know, the stress tests were also a win.
All right, now, as I covered in my 2008 talk on playtesting, there are four main questions that you want to... Listen, they can just watch your talk on the GDC fault, and we're almost out of time.
Meanwhile, I do want to mention another bump we hit right after launch.
So basically, as soon as we stopped celebrating our launch, we noticed something that didn't come up in the stress test or playtests, and that caught us by surprise.
Basically, every game you joined already had about eight people in it, and it immediately filled up, which seems good, but actually wasn't for a couple of reasons.
So the bigger problem with it was that, you know, you have that one other friend who also has VR, and obviously you want to play Among Us together, but you can't.
You would join the game at this lobby that just opened and immediately filled up back to 10.
So by the time you could relay the lobby code to them, the lobby was already full.
Also, this would be joining the lobby at kind of the most chaotic and loud part of the life cycle of an Among Us game.
So as soon as a match ends and everyone's super excited and freaking out about what just happened and who backstabbed who and how crazy lies were told, that's when new players will be immediately put into that lobby and exposed to all this excitement and loudness.
So what was the problem?
And it was our matchmaking.
Now, because we didn't fully predict how our matchmaking will look in the wild, and we couldn't really observe it even in our large-scale playtest, it had a negative impact on our player review scores right at the launch rush.
So what happened?
So, in a nutshell, it turns out that the oldest first matchmaking scheme, which was what Photon recommended and was default with, was just not the right type of matchmaking for the type of game that Among Us is.
So I'll show you some analytics data as I explain why.
So what you see here is relatively how many games start with a different number of players.
Minimum is 4, maximum is 10.
So at launch you see that most of them are starting with 10 or 9 players.
So far so good.
But because our lobbies can get old and therefore be, you know, lasting for a long time, as soon as that game ended, it would get pushed into the beginning of the matchmaking queue to scoop up all the players.
Now, another quirk of Among Us is that while the game will start with 10 players, it often ends with about six or seven, because players will immediately quit when they're not picked as the imposter or when they get killed or frustrated or tilted in any other way.
So a game would end, in this lobby that's been going on for a really long time because we have host migration, right, and it just exists, and immediately get pushed to the front of the queue where it's scooped up all the players trying to matchmake.
So if this, excuse me, if this circle represents the amount of old lobbies that were almost full jumping to front of the matchmaking line, this is, you know, the amount of new lobbies being created by players trying to let their friends in.
Now, if you did that, you would end up waiting there for maybe like 10 minutes without nothing happening, and then suddenly your lobby would become old enough to get all these players in.
Most players would immediately give up and think something's broken, which they weren't wrong.
So we kind of scrambled and we decided this has to be fixed as fast as we can, which, you know, isn't that fast when you're deploying a multiplayer VR game.
So we talked to Photon, and our options for immediate action were actually fairly limited.
But we decided to go with trying a sequential matchmaking scheme instead, where lobbies will just queue up at the end of the line, no matter how old they are, and players will be evenly in sequence distributed to them.
So we didn't really know what to expect, but what we saw was almost the complete inverse of the previous situation, where most matches were now starting with four players, and as the player number increased, the number of matches started with them would decrease, with a notable bump at eight, where you do get the second imposter entering the game.
So our first thought was, wait a minute, are four-player Among Us games even fun?
Like, what's happening in there?
So we went in and we started playing to check it out, and it turns out, really, like, just because they may not have the same strategic depth as matches with more players, it's still fun to chase each other around and have the whole thing be over quickly, whether you were the first one to die or not.
So it's kind of like jumping to Among Us Endgame straight away.
So is sequential matchmaking the ideal solution?
Well, not quite.
But just with a few more charts and bars, I'll explain.
But really, we're running out of time.
And I want to make sure that we land this spaceship and make sure that you call all of our wins and challenges.
So for wins, we talked through going with the beautiful corner approach in pre-production, which had a lot of benefits nested underneath that.
Next was setting up pillars which helped to guide our project as a whole and served as a foundation for the MVP and ensuring you're not overscoped right out the gate.
Mihael then shared the translation into VR and Sean went into details on our multiplayer VR playtesting.
Our challenges were networking, specifically working with products that are also in development, moderation features, target audience sacrifices, matchmaking, and again, VR playtesting, which really took up the entire spectrum.
So what does the future hold?
Well, from our admittedly privileged perspective, the time to make multiplayer games in VR is definitely upon us.
Multiplayer games thrive in VR.
And the more your experience relies on interactions between players, the better it will feel in VR.
There is still so much open space to explore and 2D games to bring into VR.
So good luck out there.
I think this means we did it.
Yep.
Thank you.
Thank you so much for coming and for listening.
Grab the slides if you like.
They are actually up there on the website.
And while our talk time is up, we do have time for questions.
And we'll also be in the wrap-up room in 2.04 afterwards.
But yeah, any questions?
And oh, fill out the surveys too.
Thank you very much.
Yeah.
Thanks.
Really entertaining and informative.
I was wondering, what XR interaction framework did you guys use?
So the question was, what XR interaction framework did we use?
The XR interaction framework... We basically just used what we had from our previous VR games and it was in-house custom built stuff.
Within Unity.
One other quick question.
Is there a reason you didn't go with Mirror?
You went with Photon.
Did you consider Mirror as a networking framework at all?
I'm sorry, could you say the name of it again?
MIR?
It's another Unity framework.
No, we did not go down that path.
Our engineers looked at a couple different networking frameworks and they chose Photon.
There were some issues, but it ended up working out.
It is what it is.
Great, thank you.
Hi, thank you for the talk.
So as designers, when you want to validate your design, you get your built-in engineers, and now in a non-VR application, you can have two computers, like, use one mouse to stab yourself in the back and see what that interaction's like.
In VR, you've got one headset, so do you just put one on, put one off?
What kind of challenges do you have there and what workarounds did you find?
Yeah, so question about handling multiplayer in VR.
That's definitely something we've dealt with on this project and others.
A lot of our developers will have two VR headsets.
We actually have gone so far as to buy mannequin heads that we can attach to our desks and will keep the headset alive and also point it in a reasonable direction.
but our engineers also made tools within Unity.
We call it the Photon Fusion Simulator and it'll open multiple windows and so you can then swap in the different bodies of different beings to test some of those multiplayer things.
So great tool development and support and also $25 mannequins off of Amazon.
Thank you very much.
Hi, how did you handle motion sickness during playtests?
Like if a playtester got motion sick, what was the approach?
Did you just end the playtest right there or did you find some sort of alternative to let them keep playtesting basically?
Yeah, no great question about how do we handle motion sickness in playtesting.
A lot of it is in that Google Meet, before folks would start, we'd say, hey, if you feel bad or discomfort at any time, feel free to jump out, let us know.
So we sort of set that expectation early that people could jump out.
We also had all the settings that we talked about, vignetting, things like that.
And so we also made them aware of that in the playtest where we weren't testing to see if they knew about that.
And yeah, it's all about setting expectations at the beginning of a playtest.
And I will mention the 2018 talk, Playtesting VR, because we go into that and how to like, because it's a very isolating experience to go into VR, right?
And so you want your playtesters, even if they're on their own home with user testing during a pandemic, you want them to feel at ease.
And so setting expectations early and sort of having a script that we run through to make sure people know that they can get out, that it's okay.
Don't force yourself to keep going.
That's all part of that.
And it's different than motion sickness too.
So I think just helping to educate, especially early on, so they understand when those symptoms are starting to even occur can just help to, again, just ground people better and just make sure that they're aware of like, Oh, maybe I should get out now before I do get myself just really sick.
Cause again, it can start sometimes it's just, you know, a headache or things like that.
So just helping people to understand how different this is.
Yep.
Yeah.
Great question.
Thank you.
So first, congratulations on your game.
I'm really excited to have another multiplayer game out there.
As a multiplayer game developer myself, I see when I go to the store that Oculus has submission guidelines saying that we need to have moderation tools and the like in order for our game to get approved.
I was wondering if you could maybe demystify that a little bit and tell us kind of what they're looking for and what kind of features we should build in ahead of time.
Yeah.
they have so any multiplayer game they do have just a standard api package uh that they have to give us and we implement on behalf of them uh i'd say we are working to build on top of that as well uh i guess i don't know how much we can get into details about all of that but as soon as you enter that space they certainly will tag you and make sure that these are the that make the environment a little friendlier but you know meta is definitely in process of developing this stuff and like what exists is really just a way to report other meta players through their system maybe a quick follow-up question in terms of post-launch support how much resources should one you know kind of forecast on allocating for supporting moderation and the like yeah i i was not necessarily involved in those discussions The question was, how much resources should you allocate for post-launch player support or customer support?
Basically, it depends on the volume of players that you have and the amount of issues.
We certainly had a bigger influx of tickets early on, and we worked with a company called Keywords for support.
and they're good at scaling, right?
So we don't know.
The answer is we've kind of trailblazed a lot of this, so we didn't have a lot of benchmarks for saying what does a giant multiplayer game in VR with 10 people in a lobby, you know, cause in terms of support tickets and player submitted requests.
So, you know, it was basically about let's be flexible, let's be prepared to scale up if we need to.
We also had post-launch, we had a bunch of issues that we didn't catch, which were repeatedly showing up in our support.
And then after we released our first and second patch that addressed a lot of those, that definitely all quieted down a lot.
Thank you very much.
Thanks.
Yeah, I have a different question.
I actually teach game design at the high school level, I teach with Unity, and we're actually getting into making VR games with Unity.
So my thing is, I'm just different from you guys, sorry, but like, what should I be bringing to the kids?
And what, what should they be prepping for?
Because so many of them want a career like you guys have, like, I know, it's a broad question, but like, maybe one or two things, like, what should we be bringing to kids?
What should I be bringing to the kids?
And then what should they be doing on their own?
What should they be learning?
So the question was, how do we bring game development to kids, even if they're in high school, what are the most important things?
I think we probably all have opinions.
I would say, honestly, game development is very much a team effort, right?
You've got your disciplines, art, design, engineering, sound, QA, all these different people need to work together.
Production.
I'm and also just like have a way for them to showcase it, right?
Maybe there's a website for the class where they can put their website or put the games that they make or something at the end of a semester where they get to show off their games to other classes.
I think that would be really awesome and sort of like energize people to work towards something.
And the final thing I'll say is ask them to keep the scope as small as possible.
When they propose something, like have them do the MVP, right?
Yeah, and that's huge.
And on that note, I think it's awesome that you're diving into VR development, but all those principles about working as a team and being a different role on the team apply if you make them develop a board game.
So you can easily teach all of those things by having them modify Monopoly to be a better game, or whatever it is, make a new game from scratch.
Yeah, exactly.
Don't be afraid to lower that barrier of entry.
In the Pittsburgh IGDA, we have a board game jam and we have the global game jam, which, you know, video games and board games and like you're making games and it doesn't matter the media and board games certainly has a lower barrier of entry.
Although VR is also.
Thank you.
Hi, I'm Richard from USC and the question I want to ask is that do you mind sharing some data on the per-session user play length for a mouse VR?
When I say per-session, it's like the first when they first enter a game and then by the time they finish like a lot of games and lock out of VR because I'm also doing a multiplayer VR game and what I found is that when they have like friends enter together with them like in the lobby for example they have three or four friends together the playlines will kind of increase I don't know if that's like a validation because we don't have any big bigger or playtest data so do you mind sharing some of that information?
Yeah, I do like the analytics.
We don't have an insight, I guess, in what you described, which is really interesting, right?
So the question was, hey, how long is a player session in a multiplayer game like this?
And does it vary if they entered with a bunch of friends in play versus they're just matchmaking with random people?
So I don't have that insight for our game.
Like I don't know, right, if you're playing in you know Got it.
Thank you.
Hi, I just wanted some clarification on the minimum viable product.
So is that solely documentation or does that also include like a vertical slice playtestable build that the team can get their hands on before pre-production ends?
Yeah, ideally I would say it should have had a vertical slice in there.
With our networking challenges, we didn't get there as far as we would like.
So the documentation certainly is paramount, right?
So even if you weren't able to meet that on that technical gameplay side of things, having that documentation, having that be kind of your Bible, if you will, North Star for the project is still important too.
And we made up for it, right?
Like then we're working towards, you know, figuring out the rest of those milestones and how to plan that out.
Thank you.
Yeah, of course.
Yeah, the MVP helps set the team expectations.
Yes, correct.
Yeah.
Hi, really enjoyed the talk.
Thank you.
I was just wondering what it was like working with someone else's IP and because this was InnerSloth's IP, how much of a hand did they play into production?
Yeah, no, it's interesting.
And again, there was so much that we wanted to make sure that we stayed sacred to in this whole story.
So with InnerSloth, we met up with them just right at the beginning and not very frequently throughout.
They had hired a company, Robot Teddy, talk and what we had to, again, just stay very beholden to.
So I've worked with several big IP holders and making sure you kind of uncover that right up front just makes that really good for us to understand, like, OK, how much of this is ours and how much is yours?
How much creative input do you actually want to have and how much freedom do we have?
And so we just had that real conversation, right?
Very real come to Jesus conversation right up front to establish that early on.
And yeah, again, they just really wanted us to a It was great.
I mean, it was great setting the expectations and then it also helped that they were great to work with.
That was really nice.
Yeah, it gave us a lot of freedom.
And again, with just the amount of time that we had, though, we just knew that priority needed to be getting it to market.
So we just wanted to, you know, stay true to just allowed a lot of that.
So question.
Yeah.
People are immersed so that things and to like, whereas that doesn't happen in nine choices new workflows much more collaborative and taking having one person take well in there it's a night did we do any design choice playing a VR game which is then mobile the the game times of We had a, there's a mode to play without voice chat.
So if that's too much for you and if you don't want to be needing to listen to other people constantly, you can do that.
And then there's a chat, like there's a text, you know, uh, pre canned, like text responses stuff.
And, uh, I think there's something else, but it just slipped my mind.
It's definitely something to keep in mind, though.
It's a good question.
But an easy game, just like the 2D game, which we affectionately call the flat game, that you can just kind of jump in and out of, right?
So on the mobile game, like, I feel like I'll join and then, you know, just maybe do one match and I'm out and then I can jump back in whenever, right?
We set it up similar in that way where, again... The choice is to not have a browser, you know, a server browser, to not have custom matches at launch so you don't have to think about, oh, no, are these pro players doing crazy things, you know, with settings that I don't understand.
you know, we made it really easy for you to just hit play and start playing.
All right, I think we are out of time, but yes, we will be in the wrap-up room.
Again, thank you all very much for coming.
Fill out your e-mails.
