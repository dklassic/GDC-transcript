My name is Jason Weiser and for the last four years I've been teaching a crazy pants course at Tufts University called game design which is actually tabletop game design, alternate reality game design, game testing, introduction to the Unity game engine and C-sharp programming, intro to 3d art and animation, intro to 2d art and UI, intro to audio for games, paper prototyping, level design including rational game design and encounter building, VR tools and considerations, team building and communication, digital game prototyping, pipeline development, modes of team management, marketing, industry networking and more. This past fall I described this course to the excellent Mr. Ian Schreiber who's on the board of the education summit and his response boiled down to this course of yours breaks all the rules I know for game education. I always tell people to learn one thing at a time otherwise you're going to end up frustrated with a doom project and yet you just mash it all together and go. In my head I can't imagine how this could possibly work. Do you ever get any decent quality games out of the class or is it 100% train wrecks and learning by failure? I'm not doing a particularly good Ian imitation but in other words who would ever want to take this circus and who would ever want to teach it? And I said to him actually all the projects succeed as engaging and playable prototypes and many are really original and some have gone on to be published on the steam and the app stores and then last month he asked me to deliver a talk where I proved this can work in front of hundreds of people and in fact we got a couple hundred of you. So here we are. Thank you for being here. I should mention a couple of things. Please turn off your audio devices and when you get your eval thingy please fill out the eval thingy. So a bit of background. I'm an animator and game design and educator. I animate for games and museums and robots and television and I'm the creative director of Yaya play games where I design stuff with my daughter including the award-winning card game Monsters in the Elevator and for the last 25 years I've been teaching. In hindsight I can see that my early teaching career courses had a scope problem. I started in Teach for America at a Baltimore school for students who had dropped out and asked to return and being serious about education for the first time many wanted as much as I could give them. So I taught international dance and art alongside creative writing and literature and I thought my job was to pack my courses to the limits of what they could manage.
When my classes got a reputation as the most demanding in the department the department gave me the top students and this did not incline me to reduce scope.
And then at the Art Institutes my students were entirely dedicated to the fields of games and animation and wanted everything I had to offer and my goal in every course no matter how introductory was to maximize their portfolio output.
So in a just 10 week intro to 3D modeling course we would create full portfolio ready photographic room interiors and two full high detailed characters in an intro course. My students did not sleep. One student at that time described my teaching style and this is a metaphor there was no touching involved that I would grab them by the ears place my foot on their face and knowledge. This approach seemed to be validated at Pixar Animation Studios where I taught a workshop for the layout team in summer of 2005. I built a crazy in-depth course and they tirelessly devoured everything I gave so eventually I had to pry their fingers off the keyboards to get them to take a break.
I thought this is how to teach the subjects of animation and games. You stuff the students until they burst.
But I changed priorities around 2011 when I started teaching at other colleges where the students had many interests beyond my subjects. They did not want everything I could give them so intro to 3D became more of a minimum viable product to show competency. Just one hard surface and one organic object and we animated using industry rigs and my classes no longer took over their lives. The goals of my courses switched from massive portfolio content to concept mastery and confidence building with small scoped projects so they felt empowered to take the concepts further outside of the course if they chose. And then Tufts happened. I casually emailed a friend in the Tufts computer science department asking what are you folks doing with games and he invited me to pitch the department. Now usually when I design curriculum for new game development programs I follow a somewhat typical model with five or six courses.
There is tabletop game design to learn mechanics and how to organize humans into playful experiences and level design where we learn a digital game engine like Unity, a course on game environment arts, a course on programming and prototyping their first small original digital game and then a capstone semester or two on team production. And as mentioned in Ian's feedback each topic is taught on its own to grow skills in that one area. So I suggested this to my friend at Tufts, a multi-course curriculum in games in their computer science department and he said how about you just try one class and since it was for the computer science department they would expect it to include a lot of programming. So I thought that's four game courses stuffed into one class and that's already crazy so why not make it the full five. In my interview with the CS department chair I did not emphasize that my course would be five semesters of traditional game design education in one term. I promised to teach her students how to think and plan before they code and that they would experience a team software development pipeline and she said yes. But it was made clear to me that this was an experiment and if the course was not a big hit with the students it would not be repeated. This crazy class had to work the first time and personally having spent a few years making manageable courses after a decade of crazy scoped ones I wanted my students to leave this course feeling fulfilled and happy and not burned out.
To do this I asked for teaching assistants to offer coding labs and a flexible classroom that allowed us to move tables to switch between group work and play testing and lecture. I built every single assignment around teamwork to support student motivation and creativity but also to give every student a net to catch them with each other and supportive lessons in improving their teamwork. It wasn't just okay you know how to be teams because you're humans. We would teach them how to work with each other. I built a robust course website which offers clear expectations and resources, a detailed weekly schedule and homework reminders, lecture notes, assignment rubrics, tutorial videos to review the tools at their own pace, examples from past students and sources for further learning. This site allows students to see the full scope of the course and so feel some control over their experience.
This is at madwomb.com slash tufts. You are all welcome to take whatever you want. Finally I used what I call stacking theory to structure the lessons.
Stacking theory understands that students only learn one thing well at a time but proposes that if students only learn, whoops, proposes that if students are exposed to more things in the same class meeting without deadline pressure they can get curious and begin to absorb these others. Here is how the core topics are stacked in this course. The class meets once a week for three hours. We discuss and practice the one critical topic for that week's homework and you can see the stars and introduce two to three other ideas or tool sets that will be important later. So for example a month before anyone will need to make anything in 3D for homework we start learning basic modeling and texturing. By the time these concepts are needed for homework they have been explored multiple times with room for confidence building success and opportunities for wrong turns to be corrected which reduces stress and frustration. By the time we reach final game production after midterms we've experienced most of the tools needed to accomplish it. This is a high-level summary but we're about to go into this in detail. So imagine with me a student, Samantha. Two weeks before the term begins she gets a welcome email asking to share about games she loves and because most of her classmates have not played modern board games links to Wil Wheaton's tabletop show so they don't think we are just talking about Candyland and Monopoly. The first six weeks focus on tabletop games and the students work in two week teams. On day one we distinguish between mechanics and story to focus on mechanics. Samantha forms a team with three other students and designs a tabletop game inspired by weird boards and toys. They read from Jesse Schell's Art of Game Design and meet outside of class to work on their game. Week two we practice playtesting their games to find the fun and discuss radical revision to refocus around that fun. They meet outside of class again to revise mechanics and story. One of my favorite examples of this lesson interpreted this Tree of Life game board as an asymmetrical combat between a computer antivirus and an invading AI and having used these boards now for many many years it's amazing how we never get sick of what they create as I'm sure many of you have discovered in your classes. Week three Samantha forms a second two-week team and they are asked to disrupt an existing game into something new and we get disruptions of everything from chess and sorry to Uno and Duck Duck Goose. One of my favorite examples of this was Sand Wizard of Catan. The desert is placed at the center when a player rolls seven the robber does not move instead the player chooses one of the hexes around the desert and flips the number disk so the desert spreads. At home Samantha and her team read J. McGonigal's Reality is Broken and then we spend an hour of week four brainstorming and presenting an alternate reality game to solve a misery. With three hours of class time a week we take one hour on software tools so weeks three and four they follow me in tutorials for Unity 3D and 2D projects where she learns to use scripting and physics and feedback to make basic platformers and collection games. Week four she makes Rollaball the Unity tutorial at home. My three TA start running code labs a few times a week so Samantha can get help and learn more Unity tools. Week five Samantha forms her third team to make a final tabletop project based on the routines of a workplace and we get games about window washers and airline traffic controllers and way too many baristas. Here you can see what was handed in just a couple weeks ago of the current class the window washing game an asymmetrical game where you're either the window washer trying to clean the windows or the robber trying to hide the evidence of their past crimes and you're trying to clean to catch them. Also week five I teach the basics of 3D Maya to Unity pipeline and week six we learn about making Unity builds and VR tools and then Sam's team gets one week until week seven to turn their workplace game digital with a stated zero expectation of success. The point of that one week is to just get in as much as they can and make as many mistakes as possible. A previous class actually asked for this lesson to make a lot of mistakes on an original game before the final project and it's been amazing in the years since we've done this. Week seven Samantha's team shows off their first original digital game and I'm always impressed by how much they actually get working. Sam then gets a review of all design topics covered so far and is encouraged to think of new ways to move and interact and to get playful with visuals and premise. She then gets 30 minutes of walking around brainstorming with her classmates with some silent reflection occasionally in that time.
Then everyone gets a white note card to write down their final idea and Sam chooses a colored sticky note for the main production role she plans to fulfill on the final project. Code, art, audio, or project management. Everyone participates in design so these are just the production roles outside of design concerns. Then Sam gets 45 seconds to stand up and pitch her idea to the class.
She tapes the white card with her idea to the wall and when all who want to pitch have done so everyone votes with their colored sticky notes for the project they want to make. This is the system the MIT game lab uses for the global game jam and it's stolen wholeheartedly from them. In a class of 40 students we get around 30 pitches and make about eight games. I rebalance roles if needed to make sure every group has programmers and artists and in this way final teams are decided. If Sam's idea was chosen I remind her to expect it will change dramatically in the process of iteration and testing and revision so I advise let it go and trust the process and her new team. The teams then get in the second half of the semester one week to draft a design doc and paper prototypes for user stories and then one week to get as much of the game working in Unity as they can. Two more weeks to complete a working prototype and then three weeks to build that out to a fuller game with multiple levels and more polished art and audio. We play test every week and significantly adjust the game plan at least a few times per team. And during this latter half of the semester Sam gets lessons in basic Photoshop and user interface and audio composition and three weeks of level design. For two weeks at the very end we discuss marketing and Sam and her team prepare a trailer and website while still polishing their game. On the final week Sam and her team show off their game to guests, eat pizza and then stand in front of everyone to present their trailer and website and talk about their experiences making this game with each other. This course stands on many shoulders. The game testing methodology comes from the MIT game lab via Firehose Games along with the week 7 system for choosing final teams. The first lesson in playful mechanics with bags of toys and weird boards comes from Paul Skydema's design workshop at GDC back in 2003. I owe Jenna Hofstein for our aspirational theory of game marketing. A level design lesson on encounter building comes from Forrest Dowling of The Molasses Flood.
And the other is Ubisoft's concrete solution to difficulty curves called rational game design which I learned from Alexis Jolie de Sautel and which we use for tutorializing. We get our peer evaluation system from the executive MBA program at Boston University. Jesse Schell's art of game design helps us rethink mechanics and prototyping and Dr. McGonigal's reality is broken gives us alternate reality games, our favorite definition of games, voluntary engagement and unnecessary obstacles and our working definition of fun. What she calls flow, a feeling like we can always make progress with every turn and what she calls fear, frequent opportunities for accomplishment and excitement. We discuss game success through this rubric. Clarity, do players know what to do?
Innovation, what new gameplay mechanics can stimulate interest? Immersion, is the setting art and music compelling to imply story? Flow, does the player feel constantly productive? And Fiero, are there multiple victory moments for the players? We tell the students this scale is to evaluate the strength of the games but their grade is as much for collaboration, experimentation and risk-taking in design as it is about the games being successful as games. All the tabletop games before midterms are just pass-fail. This takes the pressure off to succeed in any specific way and helps them to have fun with each other which is a lot of the goal in that first half. They're learning how to be teammates as well as learning about games. There's still a lot I'm asking them to do, meet with their teams outside of class each week, deliver a play testable game each week, learn a large amount of content in multiple disciplines, strive for their own definition of excellence but the mood every week is light and excited. The students feel they can do it. We hold them accountable in four main ways especially talking about them as teams. Each week we play their games for verbal and typed feedback according to the rubric. They weekly post task divisions in the beginning of the week to show an equal share production per member, there were at least their intention of that equal share. After midterms each student submits a weekly personal progress reports, one paragraph of screenshots, what they agreed to take on that week, what they actually completed with no penalty if it's different, who helped them, who they helped and links to tutorials that they used. Three times a semester each student fills out a peer evaluation form, that one from Boston University, where they discuss their teammates contributions to productivity and morale and divide a pool of points unevenly between their teammates. All of these evaluations are required but only the very last one handed in on the very last day of class actually affects their teammates grades, about 20% of the grade. To connect my students to the industry each is expected to attend an off-campus networking event and write about it. I maintain a website list of the large number of game industry events in the Boston area at madwomb.com and they always find these experiences inspiring.
To further engage them with the industry just this year I added video lectures by prominent game designers. Some are my personal heroes, some I actively disagree with but it gets other voices into the room than my own and gets my students thinking about who makes the games they love and to imagine themselves up there inspiring others and you'll see that on the website at the bottom of each week, a different link. I've taught this course nine times at Tufts and Harvard in the last four years. I've seen it build students confidence and their ability to create and work well with others and while they work hard I don't see them burn out and everyone stays positively engaged about the term. I am so proud of what our students create in this course. The games are always playable, often beautiful and frequently downright weird. Here's a small sample of the 40 final project games made in the course at Tufts. You can see the rest are linked from the course website, every single one made in the course and I'd like to briefly talk about one game. Displaced is one of my all-time favorites, created the very first semester I taught this course and I love it in part because I was dead sure it would not work. The original pitch was for a game where the player gets worse at playing the game the more they play it. This sounded terrible to me.
Players want to grow in mastery, this would yield poor flow and Fiero but they stuck to their guns and made an amazing platformer about self-doubt and isolation and empathy where we play a blob accidentally absorbing junk streams around the level growing in size and weight as they absorb it so we move slower and jump less high to avoid the many red monsters and death traps. The mechanic and theme work so well together and the levels were tuned with exceptional care. I tell every class since then about this game to let them know to always listen to my advice except when they shouldn't. And I think I have enough time to actually show you the trailer for that game.
Oh, you can't see anything. Hmm. Now it got complicated. If I do this. Nope.
Sorry, I don't know how to do that. I can show it to you after if you want to come up.
So I will simply resume. The first time I taught this course at Tufts after final day presentations dozens of students lined up to thank us. In course evaluations multiple students said it was one of their favorite experiences in college. They loved the teamwork and the chance to push themselves in new directions. The course offers them massive amounts of flow and Fiero. They feel able to be productive each week and feel their efforts rewarded in play testing. We include in this course much of what makes game development such an amazing and ridiculous experience. They are hungry for every bit of it and it is such a joy to serve as the teacher of this crazy pants circus of a course. And I will take any questions. I wonder if while I take questions if maybe someone can come up and figure out how to get the trailer to be visible on that screen because it is really fun. I have a question. My question relates to what experience level are your students coming in at because I have a sort of intro survey class and at week five I'm still trying to teach them how to unzip a file. So I'm just wondering are they more advanced in sort of their technical skills or are they fully freshmen? Yeah so at Tufts I'm teaching in the CS department. They are very they're already programmers. They may not know C sharp and they certainly need to have explained to them how Unity doesn't have them create one big wall of code to run their game that they're doing smaller bits of code that are associated with objects. So we try to catch where they're likely to get tripped up and stuck but we're not teaching them a lot of the basics of the tech. Interestingly about a quarter of the class this semester for the first time now that Tufts has absorbed the School of the Museum of Fine Arts a quarter of the class is from the SMFA and there are students there who are not particularly technologically strong. They are metal welders. They are artists in a variety of fields now excited to try this new thing and we've had to adjust our thinking in some ways to make sure that they have what they need. Fortunately they're avid oh that is the other one. Fortunately they're avid YouTube watchers and so creating something of a flipped classroom paradigm where I'll show something in class but then record a video of it and send that to them so they could try it again at home as many times they need to to get it helps. At Harvard it's a huge variety of students but I usually have at least a couple who are technologically strong who can carry the programming side. I'm encouraging really weird and strange and wild art make bottle caps to stop motion with lint. Try things that anybody can do with their cell phone. You don't have to be good at Photoshop. I just showed them enough to cut things out so they're usually able to move forward with that and everybody does really well when it comes to design. Did that answer?
Hi. Oh. Okay.
The AV just trolled us.
It's fine.
Thank you very much. Please continue.
Yeah. Thank you very much for the talk.
Just a question that might be either not really relevant or a longer conversation.
So I teach in a university in Toronto and not the University of Toronto but I teach in a university in Toronto and one of the thing is we have a little bit more flexibility like the three classes not one but not too much and one of the thing I struggle with is coming from something who came from art school first is the idea is the structure of the way the class is organized where there is an hour and a half lecture and then two hour lab and it's really yeah it's really hard to sort of have the flexibility of for example having an hour of like a technical thing and I'm just wondering if you had any thought or experience in like how to use your structure because I'm very much a big fan of sort of the experimental motivation thing because I also teach 3D and I do that a lot but is there a way to sort of mitigate that structure in a way that I can still do that lecture and then lab but still have it more flexible more sure yeah are you saying that the school is requiring you to follow that structure yeah that's the structure of the class okay I would hope or assume that that's in order for the students to feel like they have a reliable sense of how the class is going to go it's also university thing I think so I try not to talk for more than usually about 10 minutes before I have the students do something who's a gardener gardeners the multiple intelligences are you familiar with that that idea it's something they drilled into us and teach for America the idea of that there are different ways to learn in different ways to be smart and there's kinesthetic and bodily and there's an understanding of nature it's not just being able to function in a lecture hall so getting the students up and moving getting them using rhythm getting them interacting with each other because of the interpersonal versus the interpersonal makes a big difference there are a lot of ways to get them to interact with each other and sometimes it's just discuss this idea and come up with an idea I'm also a volunteer here as a CA I've been doing that for 18 years and I got to run a breakout session last night where the the way that I handled the get to know you part the icebreaker is I just ran one of these lessons a five-minute version I had them try to come up with a game that was based on the routines of a workplace and it got them thinking and got them playing we only had one or two ideas that were shareable they just went off in other conversations but the they get so much more out of talking to each other often than listening to me so I just talk enough to give them the core ideas and then try to get them running so I would hope that in that lecture scenario there's the opportunity to have them turn to each other even if there isn't the idea that they are going to go off and do their own thing but I would advise trying to break it up yeah an hour for this of the teacher talking to me is pretty deadly yeah hi great talk very much I run a program at a small college in upstate New York and I run into a lot of the same issues that you kind of fit have all this content to fit into so many courses but I was wondering if you could you I saw you had peer evaluations towards the later end and what do you like I have my particular methodologies of how to deal with problem teams or like the one student that's you know or everyone is like gang and so how do you deal with intergroup intra group conflicts in this sort of course so one thing that we do is we talk in the very beginning of the semester about what we're here for and I'm certainly fortunate that I'm teaching at the moment at Tufts and at Harvard and I've got students who for the most part are are very much there to learn and have self-selected out some of the the issues that we sometimes see but we certainly get conflicts and we certainly get students who are making wrong choices artists have a tendency to not want to hand in their stuff each week it's their precious they don't want to let it release and it's hard to get them to put in zero drafts crap drafts of the work just so we can get things functioning in the game I have a lesson that talks about that acknowledges that feeling and hopefully helps them get past it a little bit so we do a lesson on I messages where we talk about how to speak to each other if you're struggling about something we do a lesson on how do we optimize each other talking to each other about the ways in which we can feel best treated and hopefully establishing there for some ground rules in these lessons in these teams for what we're expecting from each other we have another lesson when I'm able to fit into the semester of playing witch hunt mafia just had experienced the triangulation and that can be fun the first semester we did this and the department chair who had approved the class came down and played with us she was a witch and I make myself very available to the students I'm checking in they are reporting on each other with these peer evaluations the peer evaluations ask for main questions what is this student doing well in terms of productivity what do you wish they were doing better or more of how is the student doing in terms of contributing to team morale what do you wish they're doing more of and then I give them some concrete numbers rate their productivity and the morale each in a score of one to ten all of which is just to help narrow them into a sense of how is this person doing they do that for all their teammates and they get a pool of numbers that is if they've got three teammates it's 30 points and they have to decide unevenly who gets what and it's just to help them make a judgment call it's just so they don't take the cop out of you all get tens and it helps them just to make concrete to put into words what they are feeling what they're thinking so they don't let it go and I also tell them early on that the stakes for these conversations in this class are so low they're gonna go out to the world they're gonna have a job they care about and having this conversation with the manager or co-worker is gonna feel like it's the end of the world do it here mess up these relationships it's okay we can take it it's only one semester I'll help you through it and ask them to try to have those conversations the evaluations are anonymous but I encourage them I see them and if I really need to I'll talk to a student not with the specific of who said what's but help them to understand how they might be being perceived but it's also meant to be an opportunity for them to talk to each other so they will hopefully take that and go okay I'm ready to have a conversation and hopefully use the I message system to get behind the person's possible defensiveness I think you have time we are at time I will stay as long as you want because I am delighted to meet you all thank you so much for being here