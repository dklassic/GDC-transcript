My name is Nicolas Doucet.
I'm the creative director and producer of the game over at SIE Worldwide Studio, Japan Studio.
And first things first, on behalf of the Asobi team, the other people behind the game, I want to say a big thank you for coming today.
So we're going to be together for about one hour.
And I hope it will be both informative and that we can have fun together as well.
OK, so if you are new to Astro Bot Rescue Mission, here's a quick video.
All right.
So if you like the music of the game, the composer is in the room.
You can approach him to work on your game.
All right.
Okay, so Astro Bot Rescue Mission, it's a VR platformer.
It was released last October for PSVR, and it was Asobi Team's first commercial title.
So if you'll allow me today, we're gonna, I'd like to take you on a journey and show you how we got around to making this game.
There's quite a lot of content, so I'm going to be going quite fast.
If I end up speaking too fast and you can't understand what I'm saying, just, you know, wave and we'll get there.
So a little bit, before we go on that journey, I just want to rewind a tiny bit and introduce a little bit about myself.
So I grew up in the south of France in the 80s, and my youth was pretty much made up of nature, organic things, and a lot of Japanese anime, and of course a lot of video games, like you guys I'm sure, you know, from both America, but with a strong influence from Japan.
At 18 I moved to UK, I began a career in games, I worked as a QA, a tester, for companies like Eidos, EA, and eventually I entered LEGO.
I was exposed to the family game market for the first time, and it was a really wonderful time, really on board a really, really wonderful family.
And five years later, I entered London studio, still at Sony Computer Entertainment.
And I was expecting to find a really kind of cold, hard tech company.
Of course, it was PlayStation, but I expected to find a lot of kind of techie guys.
But in the end, I was surprised to find a studio focused on the family market, with games like Sync Star, Eye Toy.
And so I joined the studio as a producer on the Eye Toy franchise.
And during the PS3 era, I worked on an augmented reality game.
And that was my first time as a creative director.
And then I made a big move.
In 2011, I said goodbye to fish and chips and hello to sushi, and I moved to Japan Studio.
It was like a kid's dream, really, for somebody like me who grew up playing video games from Japan.
In 2012, Asobi Team was formed.
So the team mission was to research gameplay using the new PlayStation hardware.
And by the way, the name Asobi in Japan means to play.
And we picked it because it should be a reminder that we should all be about play.
And it's something I borrowed from LEGO, actually, which is also part of how the name LEGO came to be.
And this is a world exclusive, it's a sneak peak, well it's not a sneak peak, an old peak at some of the iteration of the DualShock 4 controllers that we got to work with.
And using these controllers we will try to come up with gameplay prototypes that could showcase the new features and also share them with other developers.
The way we work is that we organize our thinking around four creative pillars.
They're magical, innovative, playful, and inclusive.
And these pillars really define the DNA of the team.
And even Astro Boat was created with these four key pillars in mind.
Then we spend quite a bit of time brainstorming with the team how to use these new technologies.
It's a relaxing time where everybody gets to get all their ideas out.
And of course, we have game designers, but we like to think that actually there is a game designer in every one of the team members, whether they're programmers, artists, or audio producers.
And then our ideas kind of all go on Post-it. It all begins on a Post-it to be honest.
And these are all of our walls in the office.
And the concept of Astrobot along with all the game mechanics started on Post-its like this.
So once we select an idea, we turn it into a very, very basic design document.
We don't do big design docs.
And these are mostly visual with minimal text.
And the reason for that is because we want to visualize the experience really quickly, but also because writing and reading in Japanese and in English for us is actually quite a big hurdle.
So we prefer simple sketches and talking face to face.
It's quite a fairly old school way of working.
It's very much like an indie team.
But we find that it works really well for us.
So once we've decided on a prototype, to create a prototype would generally take two weeks for a core mechanics.
So for example, a boss battle in Astro Bot would have been two weeks of this programmer.
And so that makes the gameplay programmers really central pieces to our development because they are the beginning of everything, really.
It is them who are going to give the gameplay that initial kind of burst.
And so later I will show you lots of prototypes, of course, for this presentation.
So going back to all the days as a team, after creating lots of tech demos, we kind of polished them.
And the best ones were eventually put together inside the PS4, known as the Playroom.
So perhaps you've known the Playroom.
And it contributed to giving PS4 a warm, inclusive image at launch.
But you needed a camera to play this game.
It was a great training ground for the team as well, because many of the members actually never worked on a game before.
It was their first time ever.
In 2013, the VR headset project Morpheus came along, and so we jumped on the opportunity to reiterate with this kind of gameplay research.
And we started researching new opportunities to play in VR.
So once again, we created many demos, particularly around multiplayer.
So we had this concept of being able to play in VR and on a TV.
And I did a talk in GDC in 2015, I think, about this.
So if you want to know more about these prototypes, you can look at that.
And during that phase of trials, we also tried third-person platforming.
And that was strange because it felt really like, it wasn't very much like a VR.
VR should be a first-person, virtual hands.
But we kind of wanted to try it, and we did.
And we found it actually was pretty cool.
And this is what it looked like.
It's our first VR platformer prototype.
So as you can see, some of Astro Bot's trademark, like jumping around, jumping from the controller, were already in there from the beginning.
And the controls were very simple.
You can move around and jump.
There was no punching or enemies at the time.
And then we included moving into Z, you know, so navigation.
And finally, the character looking back at you, that was something that we did a quick test for and we thought that it gives a lot of charm to the experience.
And then eventually it became Robot Rescue.
And Robot Rescue was included as part of the Playroom VR.
And it was a single stage.
It figured a character.
At the time, there was no Astro Bot.
But the core mechanics were there.
You could rescue little robots.
There was one gadget, which was the hook shot.
Some verticality, some vertical gameplay.
And the whole game lasted about 15 minutes, and it was created by half a dozen people in three to four months.
It was part of a bigger game collection.
And the bigger collection, it was called the Playroom VR, and it was mostly a big party game.
And as a result, Robot Rescue was kind of the old one out, really.
But we put it in because we really, if we didn't put it in at that time, it would have just gone to waste.
It would have gone lost.
So we wanted to make sure that we would still use it.
And so it was the old one out.
And it was put into the Playroom VR.
And that was the end.
And that's it.
And I remember that was like Christmas 2016.
and around that time, the holiday time, and I was in bed and I was thinking, right, next year we're going to have to start a new project and, you know, the team should be busy from the beginning. What are we going to do? You know, are we going to do like a bigger party game?
And really inside of myself and I think the team as well, we really wanted to make a big platformer, but it really felt like it's not a true VR game. And there's a bit of a trauma there, I think, because, you know, we've heard so many times that it should be first person and virtual hands that, you know, it felt like a...
And we kind of, you know, I slept on it.
And eventually the answer actually came from the community.
So looking back on the net for reviews of Playroom VR, we came across a lot of requests, actually, from gamers.
Playroom VR kind of worked with dad and the kids and playing as a family.
But the gamers, actually, they really resonated with Robo Rescue.
And they wanted a bigger game.
So that was the last push we needed.
And then came New Year.
We began working on the cleverly named Super Robo Rescue.
So that was an internal name to just make it clear to everyone.
Yeah, we're making the big version, right?
But actually, that name stayed on for very, very, very long.
Scarily long, in fact.
So, Robo Rescue was really cool and fun, but we needed a bigger game, and we couldn't afford to just copy and paste those 15 minutes and stretch them.
So we needed variety and lots of it.
So we're finally hitting the meat of today's talk, really.
So today I'm gonna take you through 10 topics that we focused on to make Astro Bot what it is.
And of course, that's not everything.
But I think it encompasses some of the most important elements of the game design.
All right, so let's go.
So I'm a kind of retro game fan, and if you know games like Castlevania or Grues and Ghosts, you know the map, you know the quest.
So only we're not saving a princess, we're making a game.
So it starts with VRness.
So VRness, OK, it's probably the number one feature of the game design, in fact, that differentiate this game from traditional TV games.
So early on, we established that to realize the full potential of VR, you have to become the only way to operate the camera in a game.
And so we decided to continue not using the right stick and instead look for fun ways for you to use your body.
And that became the VRness.
So behind that barbaric use of English, it's an ensemble of gameplay mechanics that take advantage of VR.
So for example, perspective play that lets you see behind an object.
Vertical play with big drops and gameplay that kind of forces you to look up and down in a way.
360 play all around you.
And then near and far play, which is playing with distances between you and your main character.
So we're going to go through each one of those in detail now.
So perspective play, so this is about leaning with your body to see behind a wall, for example, and that complements platforming really, really well.
It works really well as a set with jumping around.
And so we've been using this at every opportunity in every level.
So here you can see you're leaning, you see some coins, that's a guide.
And then you can use it as a way to surprise the user as well.
So we thought like here, you're leaning, you're not seeing anything, and then the moment you lean, you can see two enemies and you have to take them out.
And these enemies actually, they come up from behind the wall, and that's a really useful way to create a hint.
Because once these enemies come from behind the wall, the next thing you want to do is like, oh, what was behind that wall? And then you lean.
So you don't have to give people too much of a hint.
It's good to build it as part of the game world, really.
Next is vertical play.
So we made really heavy use of verticality for the levels.
You often drop down really, really far, with large play areas down below.
Really far away.
And then the change of height is really powerful.
Using bumpers is an effective way to quickly switch from the bottom to the top.
And then you can see gameplay from underneath.
This is another type of gameplay from underneath.
It's really dramatic to be able to control your character from this angle.
And then, um.
You can see here, parts of Astro are sticking out, and that's really important.
I'll touch on that later on.
For bosses as well, you punch a boss and the boss falls down, and that's again to create verticality.
And that's another boss attacking you from behind and then creating gameplay at the top.
So at every opportunity, we've been thinking about ways to always verticalize the experience.
So as you saw in the video, sometimes you can get your view obstructed easily, especially when you're seeing Astro from underneath.
So what we've done is that we've developed platforms that you can see Astro through.
For example, leaves let you see the shadow or glass material.
It was really, really useful.
But also being able to have parts of Astro that are sticking out.
So where the location of those platforms would be placed so that according to your physical position, you can always catch a glimpse of your character.
Also, a couple more vertical uses.
We make enemies fly up when you punch them, and that's not by accident.
It's because we want the player to experience this kind of firework moment, which is both satisfying but also kind of unique to VR.
And equally, some enemies sometimes get stacked up to create that verticality.
OK, near play.
So in VR, getting close to your character and seeing all the details is really, really powerful stuff.
So we took every chance to create moments where Astro ends up nose to nose with you.
For example, like ledges that stick out very, very close to your face.
They're really, really useful.
This rope was put there to create that moment.
This ledge here was put there so that after rescuing the little guy, Astro is right next to your face.
And underwater is really, really useful too, because you get 3D control.
So you can get really, really close to your character.
Or your character can get close to you, and he gets stuck to your face as well.
So these nose-to-nose moments, or eye-to-eye moments, are really, really important.
And so once again, we dotted them at every chance we had.
And then the opposite is also true.
So sometimes we do far play.
With FarPlay, we take Astro away from the player.
And surprisingly, compared to a normal TV game, it is totally possible to keep playing because of the depth perception that you get from the VR headset.
And this section very much feels like a 2D platformer.
And sometimes, we just do special moments like that, where we send the player really far away, just to have a little adventure, just to have a moment.
And there's no particular gameplay there.
You just go to the island, and then, you know, with a bumper, quickly come back.
But once again, this is something that you couldn't do in a normal game, or you could do it, but it would just be different.
So with VR here, we're kind of separating the player, and then bring them together again.
So with Far Play, platforming can become a little bit difficult because sometimes you may kind of drop down without realizing at the back of the level.
So we kind of reduced the gameplay to 2D play momentarily and with a 2D constraint, so you could put an invisible wall or just like, you know, have a 2D spline.
And that worked.
And you really don't notice the difference, you know, when you go from full 3D to kind of 2D gameplay.
And then mixing near play and far play can be used as an emotional lever, where you have the player and Astro together.
Then you separate them, and then you bring them back together.
And then people told us that they really felt worried when Astro was getting away from them, because there was a moment, there was a feeling that they were kind of powerless to help him.
So we can use that as an emotional trigger as well.
And finally, the 360 gameplay.
So these moments are the ones we prototyped a lot of them.
But in the end, there's only one left in the game.
They do take advantage of VR fully, but they're physically quite demanding.
So here you can see you've gone all the way to one side, you have to turn around, and then you have to finish your movement.
You can see it from the outside.
So the guy in the middle, that's the VR player.
And these kind of things, they're really good.
But it largely depends on how flexible the player's body is, and it can become quite a tiresome experience.
So we only kept one in the game, and that's the one moment where you really get a 360.
So that was VRness, and these were, we made sure that every level had at least one of those memorable views of VRness from each category.
And it essentially means that you're making a physical experience out of the game.
So a good way to know if the game has enough VRness is simply watch people's neck.
And if they're not moving quite enough, then perhaps it means that we need to adjust the level to stretch the play field and create more of these moments.
So that was the case for us.
We would watch people, and sometimes we feel like, well, there's not enough movement.
Okay, so next on our quest is Astro and you So I could have called this physical play part two to be honest because it is an extension of the honest in many ways But it focuses on you as a physical player in the game So you exist in the world you a giant robot following Astro And seeing your body is something we really wanted to incorporate where possible.
So you can see your own shadow, and people really love that.
We also look for opportunities to place TV screens where you can see yourself and move around.
And we made a VR player body that is very stretchy, so that moving in front of a mirror is a fun moment of self-performance.
And it's also an opportunity to create some kind of goofy moments where you come out of the water here, you have a snorkel, and you have this kind of seaweed attached to your face.
So these moments are the kind of things that people remember.
So we made sure that we put one of them every three to four levels.
So that is just enough to make people feel, oh yeah.
Okay, the eye contact, so that one is huge and it's a little bit linked to the previous one, the near play.
Astro looking back at you in VR, that was incredibly powerful, especially when, you know, it's a small character, quite cute.
And Astro does that a lot, like, so Astro bends in all directions to look at you at every opportunity.
He waves at you, a lot.
Really a lot.
And it's kind of layered on top of all the action animations, so that your control never changes.
But even as he's jumping around, he's always looking at you.
You'd think he's got a problem, he's just waving all the time.
But it's not just Astro, some of the NPCs as well.
So they all have big eyes, and the reason for that is because we want the world to be looking at you.
So this big flower here mimics the movement of your body.
When you get near, it gets near.
And so, the kind of goal is that we wanted you to be the star of that game.
And so having all these characters turning and looking at you was really, really powerful.
So the eye contact with Astro is really special, but particularly I think the game would never be the same without it.
It really validates your existence in that world as well.
As a parental figure, so Astro is kind of small, cute, with weaknesses, and you are the protector.
So that makes a huge difference for normal games.
And as an anecdote, if you're playing a classic game, like say you're playing God of War, and then you die, or creators die, you're going to be saying, hey, I'm going to die.
That's what you're going to be saying.
But in AstroBot, what we realized, people apologize to Astro.
They go, oh, little guy, I'm sorry.
I wasn't there to help you.
Which is very strange, because it is the same relationship.
They are controlling the guy, and they are dying.
But that's proof that they see Astro as an entity of its own, and have a real empathy.
And that's the really powerful stuff.
And I think it's largely carried by this look at and the waving, the constant waving from Astro.
So with Playroom VR, the previous game, we also understood the head-butting was great.
Really satisfying mechanic.
So we used that to make you participate in the game.
To knock down walls, push beams, or you can push a beam and then that creates a path for Astro.
And headbutting is one of those mechanics that is really like small input but big output.
So it's very satisfying.
Here you have an entire section of a level coming up.
And you can also take it further.
So we kind of turned that into a mini game.
There are some kind of VR soccer games like that.
So that was interesting to put that inside some of the levels.
And equally, dodging, that's something we've reused from Playroom VR.
I mean, you know, of course in VR we all know like, you know, that's kind of Zed.
Kind of dodging stuff feels really good.
Um, we use that in the bosses, we use that for traps.
So here the boss is kind of sending some, you know, like feathers and stuff like that.
Um...
So dodging became a key mechanic as well that we used in many situations.
And then we started combining it with the headbutting.
So here you're dodging, you're dodging, and then at the end you're headbutting.
And you can have this kind of moment.
That's another enemy in the game, it's a wasp enemy.
You're kind of dodging, and then that exposes a weak point, and then you can headbutt.
And as for penalty, so if you miss your dodge, we used to have actually health in the game.
And you could actually game over based on your physical damage.
But then it was too complicated.
You had Astro's health, your health.
So in the end, we just went for visibility penalty.
So your vision gets impaired, and then that puts Astro at risk.
We also used the PSVR microphone to create a few blowing mechanics.
So we found it difficult to create really rich gameplay because it can be triggered, it can be actually turned off by the user as well.
But we used in light, small magical touches.
And there's no real way to fail these ones.
And people, you know, some people who noticed it, they were really, really blown away by that.
And so, for example, underwater you have some bubbles, and that was a funny, so I had a personal anecdote.
My brother calls me and he tells me he's playing Astro Bot and he was really cool.
I had a cold, and every time I was underwater, I was coughing, I could see bubbles coming out.
And it's kind of nice because a lot of people actually don't know there's a microphone in a headset.
So when you use it, it's always a little bit magical, you know, it's like, it's a good one to use, I think.
And then, of course, 3D audio.
So it's hard to tell from this video, but basically we use 3D audio as a way to locate these missing robots.
So right now, there's one at the very top left, and you can hear it through the 3D audio.
And in the end, it works well, but it requires a lot of balancing between.
uh... the environment, the music, and sometimes, you know, a character that is really far away cannot be heard because of the distance, so we had to kind of cheat and increase the volume and vice versa. When he's too close to you, we've had to reduce the volume. So it's a case-by-case basis.
And there are 220 of them in the game to rescue, so he was actually a very important core mechanic of the game.
We're making good progress there.
Controller use.
So we used the DualShock 4 for this game, and we stuck with DualShock 4 because it is perfect for us.
It's trackable, but also it has an analog stick.
And the button alignment was perfect for jumping and punching for these kind of platform games.
And the controls are super simple on purpose.
We thought that the VR would be what would add richness.
So the control scheme could be very, very simple.
The richness of the game should come from everything to do with VR.
We also inflated the size at 1.1, sorry, 1.2.1.
The size was really, it was correct, but it felt small.
So of course it's a matter of IPD as well, but not just that, it's also a matter of perception.
So we inflated the controller to 1.3.
It felt nice and chunky in your hands, and that's what we did.
Also, the guns are, the gadgets are effectively guns.
So there's a bunch of gadgets coming out of the controller.
We imagine that people are sitting on the sofa in a very relaxed way, and we don't want them to have this kind of very physical, hard physical effort.
So we made all the gadgets, effectively, guns that you can shoot from your default kind of position.
and even the rope which is a physical object stretches so basically everything is kind of stretchy and the targeting is very very loose, very generous you can see that's the big circle there, that's the actually hookshot attach kind of detection zone and the same thing for the shuriken so the shuriken here, there's a little marker the user doesn't see that, that's for debug but basically we make a very very generous auto aiming so that, you know, it's much more satisfying to play that way Also, all the gadgets work as a complement to platforming.
So that sounds obvious, it's a platform game, but actually we had to remind ourselves that the gadget should be there to support the core of the gameplay, which is jumping around.
So here you can see how the shurikens are used as a way to make a platform.
And here is the water gadget, also used as a way to make platforms for Astro.
So always as a complement to platforming.
And that's really interesting because it creates a kind of turn-based approach whereby you have this kind of first-person interaction with the controllers and then you have some jumping, jumping, jumping around.
First-person interaction, jumping, jumping.
And this kind of tempo, this choreography between your...
you know, the first person and third person actually ended up being a very important point of the way we were judging the tempo of the level.
And so those gadgets, to qualify it, how do we actually go about them, we brainstormed.
And then to qualify, the gadget needs to have several use cases.
So we wanted a kind of multi-layered gameplay.
For example, the water gadget had something like 10 use cases, ranging from making platforms, defeating enemies, but also having this kind of toy-like usages as well.
So the gadget section, they're generally scripted inside the level.
It's quite a specific location.
However, within those predefined sections, there is room for self-expression.
So example here, the player is playing it safe.
You can pull all the platforms one by one.
But we made sure there was also some ways to kind of use the gadget in a skillful way.
So here you can tug on a rope to send asteroid.
And equally, this is a shuriken, so you can play really safe.
You can make like a very, very, you know, safe path with small germs.
Or you can go for a kind of more risky approach.
So, we also made sure that the gadgets kind of have this kind of dual, dual, you know, couple levels of, of, of skill, really.
Right, earlier I mentioned the gadgets were all like, you know, remote guns but I've allied because one of them is actually based on 3D position and that's the way where you plug the controller inside this door to activate, you know, like for example a door or a chest.
That's how you get a gadget, you plug the controller inside the chest, the chest opens and then you get the gadget.
But even for that, in order to help the comfort...
we actually created, we made the chest a floating object so that the chest is always at arm's length from you, which is 18 inches away from you and 10 inches up.
Yeah, 47 centimeters, 26 centimeters.
So when you move back, the chest moves towards you.
When you move forward, the chest moves away from you so that whether you're an adult or kids, you can easily click your controller inside.
One-to-one, so this is something we did in terms of just having the controller reacting to one-to-one with the inputs, so you can see like the stick or the buttons.
And that feels really, really good.
So we can spend a little bit of time on that.
On the touchpad, when you're using the Shuriken, here I'm sliding the Shuriken really slowly.
And that feels really good as well, to have this kind of one-to-one feedback.
It's a small thing, but I think it matters.
Buttons guide.
We change the layout of the controller depending on the situation.
For example, we show only circle and cross in the menu, because they're the two buttons that you use to navigate.
Once you enter the game, the buttons actually shut down, and the new button, active buttons, come up.
so that in the game you're using square and cross, which are your punch and jump buttons.
And that's really nice actually, because it means that you can actually make do with, you know, you can get rid of tutorials in a way, because you don't have to remind the player which buttons to use, they're just the ones that he can see on the controller.
All right, so that was controller.
And next are the wah moments.
Okay.
So one level, one adventure, that was a kind of idea for this.
And we ensured that every level introduced a unique theme to be remembered by.
So the beach, giant in the sky, high rise, ninja castle, graveyard.
And these were often inspired by pop culture.
For example, there is a level inside a whale, and that's Pinocchio.
There's a level inside a cave with traps, that's Indiana Jones.
So of course, we did reuse elements from level to level.
But we changed the colors, the lighting, the vegetation, so it never felt like the same location twice.
And well, there is an expense to that, of course, making everything a little bit unique.
But in the end, we thought it was better to have eight hours of fresh gameplay rather than 15 hours of recycling.
So each level has one big warm moment in the middle.
So it could be as simple as a big jumbo jet flying above you.
Usually it's something big, right?
So a boss, for example, would come as a preview because we have those models, so we might as well use them.
A big NPC would come and help you.
you know, make your... to travel through the level.
Here we have a vertical moment where, you know, you kind of fall down with Astro to the cave and continue. Here we have a vertical moment where you use your gadget to create the rest of the level and then at some point you get eaten by a whale.
And then you're inside the whale, you know, playing on his waves.
with these kind of big waves becoming part of the terrain.
And then there's the jumbo jet recycled inside the storm, so you're kind of stuck inside the storm, like Twister style.
So every level had this kind of big, big wow moment.
But also every level finished on a high.
With something with surprise and humor, that kind of links back to the playfulness that we always want to inject.
So the idea was to make it so that the goals would never be too predictable.
So when the goals appear, you know, it's always.
And here you have, that's the whale level, for example.
At the end, you find the goal, but at the end you get ejected by the whale.
And you have that vertical moment as well.
So it's a way to really combine lots of things together.
Yeah, and then you have the end of the level.
OK, and then, of course, the bosses.
So the bosses, these are the big moments of the game.
And we wanted the bosses to be really huge.
There was no bosses in Robot Rescues.
That was the first time we could get it.
And so often, the designers would do a test, and we would go, no, bigger.
So the size was really important.
That's not Astro.
And that's you, the VR player.
Astro is that little guy on the floor that you often don't see.
Yeah, that's Shark Boss, and then that's the final boss.
So talking about scale, so how big is it for a boss?
Well, if the VR player is at scale 1, Astro is at scale 0.2, and the bosses are 20.
So 100 times the size of Astro, and more or less 20 times the size of the VR player.
So that was for the kind of wow moments that we wanted to have in.
And then something that is linked to that is the dual scale.
Let me explain that one.
So since both you and Astro share the same space, it is necessary to create levels that work on both scales.
Because Astro is miniature, but you are human size.
So when you look down, you can see a level that feels like a miniature level with distances and spacing that is built for platforming.
But when you look up, you see a giant world that has been designed to be a VR ride for you, the VR player.
And this two-scale approach was adopted for all stages, and it kind of informed the themes we'd pick.
Some themes would really lend themselves to that.
Some themes would only work for one or two scales, so we would kind of not do it.
Then there's also the enemy scales.
So they come in two sizes.
There's the small enemies that are designed for astral scales.
They are defeated by punching or jumping.
And there's a whole roster of kind of Giant enemies that are there to attack you the VR player and these are normally defeated with physical actions like head-butting or using the gadgets for first first-person gameplay But also the bosses had that dual scale design and you know for the wild purpose we we made some massive bosses But then the problem we have is that we have to create gameplay with them and the gameplay mostly come from astral you know punching around so We had to create some small parts, or we had to think about the small parts that would work on Astro's level.
So here's the tooth.
And so the tooth is, roughly speaking, the size of Astro, so it's perfect.
And then you take over and have the kind of big scale kind of gameplay.
Same thing with the final boss, the hand and the fingers felt like a good thing for Astro to punch.
And then, you know, you take over and you have this kind of, you know, large scale.
And when we didn't have this luxury of...
we used small enemies that are kind of baby versions of the bosses.
So they're kind of an extension of the boss.
So here you have, like, the S&M spider and she's got these kind of little babies and stuff.
Anyway.
We're going to come back to that lady later on, actually.
Right.
So then, fun VR world.
Just taking the time, I think we're good.
So as a VR player, you are inside a cartoon.
And so we wanted people to feel, regardless of the gameplay, this is all about you being in the VR magical world.
So we filled it with stories that are happening all around you to immerse and amaze you.
And as much as possible, we also made them kind of lighthearted and, you know, funny.
For example, here, there's like a vulture sticking, you know, stealing a cow and you kind of...
And these little guys that you rescued, these 220 guys, they proved to be a great way to make funny dioramas.
So as well as the pleasure of finding a character to save, you know, you get a satisfaction of a fun little story.
Yeah.
And for example, that dude, yeah, he didn't make it.
Yeah, so these are kind of little things we doted around, you know, to, to, to, it should be just fun to just walk through these levels.
But also, we wanted a living world.
So this is something that exists in every game or should exist in every game, but I think in VR, it's that much more important, and that's having a world that is completely, like, reactive.
So everything reacts to you and Astro's presence.
So every object in the game, we added some dynamic properties so that you could punch them, and they would react.
Even platforms would kind of, you know, bob slightly when you jump on them.
And sometimes we link that to a more kind of like full screen or kind of large scale effect.
So Astro here is triggering some fireflies.
And that's for your benefit as a VR player.
It's all around you and you get that kind of, you know, moment.
This is for you, my friends.
A little heart.
Right.
The same thing with the gadgets.
So we have the same philosophy, where the gadgets should be toys.
So beside their functional use, for example, like you shoot enemies, they react.
If you shoot an electric enemy, you electrify yourself.
Even the guys you rescue, you can be mean to them.
And even Astro. Here, you're on an elevator going to the boss, and you can just, you know, be mean to Astro.
You can also beam into yourself, you can splash yourself in the face, and you can even shuriken your own face.
Yeah, and you break the headset.
So it's kind of funny.
Yeah, this is stuff we did at the end of a project.
We really reserved some time to really do all of these little things, because they're the ones that come out in the review, actually, in the reviews.
People go, oh, I tried that, and I tried that, and it did this and that, so yeah.
Equally, the bosses have like a fun finished treatment, and it's usually tied to gadgets and VRness.
So for example, here you have the octopus.
You fill up the octopus with water.
He gets really, really big, and at the end you get a verticality moment.
Yeah, yeah.
That's the spider, so you finish off the spider, and then you have to use the gadget to crack a corset open.
Yeah.
And if you look away as you're doing it, you get a trophy for being a gentleman.
Right, so that's the kind of playfulness and humor side.
Next, this is about platforming fundamentals.
So we are making a VR game with lots of VRness and lots of VR tricks, but really, like every good platformer, we need some really solid controls.
And that's an area that we worked on from Robo Rescue, and we kept refining it throughout Astro Bot.
So the character weight, inertia, acceleration, the way every action can be chained together, the way the animations and the inputs are kind of like, you know, so blending.
All of these states work together in harmony, and that was really important to create a smooth game. So even if you were to play it on the TV, you should feel the same way.
But we've had to adapt the controls a little bit.
We've had to refine them.
So for example, here, if you look, I'm pushing up on the left stick continuously.
But I'm looking left and right as I'm running along.
And so Astro is adjusting his course, actually, according to where I'm looking.
So of course, a lot of games do that also with the right stick.
But here, we're talking about really very, very brutal camera movement.
For example, here in this section, I'm going to go down.
So all the controls are now mapped to be, you know, from that point of view.
Then I go up and then the controls are kind of remapped in real time.
So it's like we've had to spend quite a lot of time actually.
getting rid of all the cases where you felt like you're trying to go in a straight line and basically you'd go in a zig-zag, because your angle of view would be a little bit strange.
And so in the end, you're able to control Astro even looking away.
So that took quite some time to implement.
But a big one, actually, is about being able to judge your 3D position.
And so we use these lasers under Astro's boots to actually give you an extra hint of where you are in relation to the ground.
And this is, this became really, really, really useful, especially in low visibility.
So for example, here you're playing from underneath, and all you have is a shadow, but having the lasers to really judge where you're going to land on each platform.
Plus the fact it's hovering, so you have an extra time actually during those sections.
That's really, really useful.
Another thing we did, something that many traditional games do, but it was the first for us, it was about the teetering.
So when a location is safe to drop from.
you can just drop down.
But when a location is unsafe or is going to have a big-time penalty, we've added a teetering, and this is something the game designers can just add to a ledge.
And you can override the teetering by jumping.
Without it, the game is really frustrating to play.
You fall down a lot.
So depending on the situation, we added this teetering.
And of course, everything else that has to go in the real game, I really hate that term, but it's like, you know, that...
he felt working on a VR game, you know, let's be a real game.
So enemies, pickups, collectibles, a progression system based on collectibles, challenge so that, you know, the very, very skillful players have something like to get their teeth into, a collection room, and of course, soundtrack, you know, that goes with a good action game.
That's from Kenny Young, who is not here anymore.
But, yeah.
Um...
No, he's still alive.
He's just left the room.
He was there at the beginning.
He's...
So...
Yes.
Um...
Comfort.
So that's really important for VR games.
Actually, in Astro Bot, the levels are perfectly straight.
So the start point and the end point are perfectly aligned.
You go in a straight line.
Choo!
But it's actually astral that goes left, right, up, and down.
So the levels are built to be twisting around you.
And at the end of the level, if you ask somebody, how did you feel that you went, they will tell you I've gone up and down and left and right.
But in fact, your body has gone in a straight line.
Apart from vertical level, but even vertical level go in a straight line, but just upwards.
And so that was really important to agree on this and to stick to it.
Also, there is an invisible leash.
This is how we kind of go around doing traversal.
That was back in Robot Rescue as well.
So there is an invisible line, if you like, and it's slightly curved outwards.
And if Astro crosses that line, you move with him.
It feels strange at first, because you have no reference point.
But over time, in your brain, you get this print of exactly where that invisible line is.
And when you start moving, you know that you're moving.
And so therefore, you become in control of the movement.
And therefore, the sickness really kind of seems to go away.
Now the important part is to really be consistent, and so that distance and that speed were never changed.
We were not allowed to change the speed.
So, it's 1.1 meters away from you in terms of distance, and 1 meter per second in terms of speed.
And the 1 meter per second, so I've been talking to the gameplay programmer, it's not a random thing that he just decided like that, actually, we went back and forth quite a lot.
And in the end it ended up being 1 meter per second, so it's easy to remember.
But, yeah.
And that distance, because it's always the same, you know when you're going to be moving.
There is one time where we break that rule, and we have something called a stopper.
So sometimes we don't want to follow Astro, we want to have some gap between Astro and the player, so that you have a big space to play inside of.
So we've developed a system which is called a stopper.
It's very simple.
You enter a zone which is a stop, and there is a zone which is a kind of unlock.
This goes on.
So for as long as you're inside that zone, you're not moving forward.
And as soon as Astro passes that trigger point.
then you move together again.
Now the trick is to put that trigger point within the 1.1 meter that we talked about earlier, so that when you move together again, there isn't a need for catching up quickly and making you feel sick.
It's a simple thing, but actually it means that you can create a big space, and especially when you have gadget play and you want a lot of space for shooting, for example, you have a stopper, Astro is far away from you, you're kind of shooting around, and then you make Astro come back close to you and you move together again.
Next is the no going back.
So this is something we had in Robo Rescue and we removed from AstroBot.
We found that people were feeling sick when going backwards.
And so we made it impossible to go backwards.
Astro can go backwards, obviously.
And so Astro is able to go back all the way to the beginning of the level and he gets really, really, really tiny.
But you don't move.
And in the end, it's really not the best solution, but what we thought is that we just created levels that minimized the motivation for going backwards.
So as much as possible, we make it so that, you know, we could have made the level destroyed behind you, but that would have been a little bit sad.
You know, every time you look around, it's just like, nothing.
So in the end, we just went for this.
And yeah, it's not perfect, but it works.
Okay, so the controller often gets in the way, and that's something that happens in games with camera and walls, but basically we used a lot of transparency whenever Astro was behind the controller or under your body.
And that was really useful for vertical gameplay because sometimes you need to see, yeah, Astro just under you.
And so during those times, yeah.
That was really useful to have that transparency.
It's a classic thing in games, but it was a first for us as well.
The respawn, to deal with death and respawn transition, we went with very simple, quick fade to black.
So you will see here, oops.
Okay, I've got, sorry, I should have told you, but once per presentation, I crash, so there you go.
Once again.
So this is the respawn fade.
So you're gonna see here, gonna die, okay.
And this is a quick black screen.
So we tried lots of kind of really intricate effects with the screen shattering and then some kind of respawning in first person, but especially when you have something like that, like the Minecraft level where you're going at high speed.
The last thing you want to do at that point is to bring lots of effects and things like that.
So we did that and it didn't do anything good really.
It just made people more uncomfortable.
So we just went for fade to black.
Okay, two more sections.
First one is level building.
So this is about how we got around to editing our levels.
So this is our level editor.
It's in Maya, and it's hooked up to the game in real time.
And alone, it still means that you have to put the headset on regularly, but the great thing about it is that it's real time.
So when you make a change in Maya, it's reflected in the game within a fraction of a second.
And it's really good for working as a pair.
So one person is controlling Maya, one person is in VR just giving feedback and orders.
And then, yeah, you can build a level together like that with a friend.
We didn't always do that, of course, because it means having two people working together.
But here, for example, stretching up, that's done.
Yay.
They say hello to all of you, by the way.
OK, also we made the levels from building blocks.
So these are really basic shapes that the designers can use.
And they can change the scales to some extent, but they can't really mess around with them too much, because the idea is to keep the base proportions.
So the artist then come in and replace those blocks with art versions and then add topicals and things like that.
And of course, there are special pieces, which are special props, and these ones are kind of custom made.
But in general, for the large majority of the base of the level, we're using this system.
And we only did the principle, we only really used that properly near the end of a project.
It took us some time to really kind of break some old habits, but now we're kind of in a mindset of working with building blocks.
And also it means that sections of levels can be repurposed.
So for example, here we had a canyon level, but it was too long, just too long.
So we chopped up the last part, and we brought it to the fire stage.
And we kind of repurposed the assets, or kind of changed the textures, et cetera.
And that was the first section of another level.
So it was a really efficient way of working and kind of shifting stuff around.
And near the end of the project, we were really still shifting big parts of level.
Now, to achieve variety, we had a checklist of how the levels were distributed.
And also, we updated that checklist with all of the sections I've been talking about today, VRness, physical play, gadgets, stuff like that.
And then we just populated.
And the idea wasn't to just fill the entire table, because that would have been overstimulating for the player.
But the idea is to just get a good idea of whether we kind of balanced as an experience.
And then the last thing is gameplay first.
So going back to the beginning of the presentation, you know, we prototype a lot, and that means actually every single piece of gameplay, we always do it first with a gameplay programmer on his own, and then we bring the artist.
And we never break that rule, and when we break that rule, it's always a mess.
We end up with just like, you know, in difficult situations.
So here's the Dandelion.
That's the programmer's version, art version, programmer version, art version.
So that's the water gadget first prototype.
And that's also true of transitions, like this is a game designer's whale, and then the big whale.
That's the boss from the Gorilla Boss.
He used to be a dragon.
But see, the gameplay is actually identical.
And then there being the Gorilla Boss.
This one is even more striking.
It's really, really respected.
So the timings, the size, the gameplay, everything is really common.
checked first and What's nice about this is that it means that you really kind of creating gameplay with a really small set of people as well So that you know in terms of reviewing it tweaking and making sure that we are okay gameplay wise It's done between you know like half, you know half a dozen people That's it and then after that meanwhile the artists are busy researching how to make things But they don't work on the game on those prototypes directly once it's proven Then we open the doors and then you know, it becomes a more classic on a production relationship And then finally, visuals.
So to be honest, it could have been a talk, an entire talk.
I'm just going to touch on three topics that seem important to me as visuals.
We created, you know, we have a lot of organic levels, but we wanted to retain the sci-fi DNA of the playroom and those robots.
So we put a lot of printed circuit boards on organic stuff.
Also, the levels, we didn't want to have to worry about making so much art, because when you look down a level, you can see to infinity in VR, so we didn't want to have to worry about that.
So we made Floating Island.
We did study that at the beginning of the project, and then we created a nice cloud shader.
So the cloud shader is animated.
We put quite a bit of effort into it, but it could save 20 levels or something like that.
So that was a good investment for the return that we got.
The characters, so the way we go about it is that they're kind of cute mechanical designs and you know you can get really close to them in VR and it's really important to have that kind of endearing feeling but also we pay attention to the details so that you know you can see all the cogs and all the parts and if we wanted to make toys out of them we could easily do it.
That's why they have this kind of tangible feeling.
And the same thing goes for the gadgets.
They have the same kind of degree of fantasy about them, but they're all inspired from real-life tools as well.
So like water guns, shurikens, slingshots, machine guns, lights, they're all kind of real objects.
And so we're able to kind of really ground them.
And the parts are designed as if they were real products, so that you can look at them closely in VR and you can see all the little parts.
Okay, so that was visual and that's it for us.
But no, because we have a special section.
I think that's gonna be the one that you guys have most fun about, right?
This is all the fails on the project.
So the game was multiplayer to begin with, actually.
So it started as multiplayer, and it was one VR player and three players on the TV.
So that was a continuation of what we did on Playroom VR.
And it was really fun.
It was so much fun, you know, playing four players.
But.
The TV camera's range being limited, the level designer could not exploit the VR properly.
So what you had was a lot of stuff like that, corridors.
And when he was in corridors, he was a little bit more open, but it was still a corridor.
And so many levels felt like that.
Bosses, however, they worked really well, because they were single screen.
So you can do that on the TV, and you can do that in VR.
As long as your camera angle on the TV can show that big boss, then you're good.
So that was a four-player version of the bosses.
And so in the end, we also tried to do some mini-games separated from the main game, because we didn't want to have to throw all that stuff away.
It's really good to have people having a laugh.
And really, every morning we were having a blast playing the game together and it was so fun, right?
But then clearly we were making the wrong game because we were focusing on multiplayer at the expense of VR.
So all the stuff I talked about today, the VRness, the verticality, all of that, we couldn't do it because the camera on the TV wouldn't allow us to follow the action.
So we decided to separate both of them to rebalance the game.
And in fact, it was effectively a cancellation of multiplayer.
It happened halfway through the game, so nine months into the 18 months.
And that meant that, to be honest, the levels we had after nine months were not that good.
So from that nine months onwards, then the designers were able to focus on VR properly.
And then we started seeing some real good VR levels coming through.
And after that, the level design really took off.
Um, yeah, and then other kind of, uh, quick selection of components that we prototyped and cut.
And then often because they were not fun, really hard to fit in the game, or they were, like, not in line with the IP.
I don't know. Maybe you can guess which one that was.
Um, but, uh, yeah, gadgets and stuff like that.
So, you know, we cut quite a bit of content as well.
And also we did an art direction reboot.
That happened about the same time as the multiplayer.
The style was too kiddy, too, you know, it was colorful, but it was the kind of wrong kind of colorful.
And so at that time, we had the same kind of review, and we thought, OK, let's take it down a route of, you know, it's playful, but it should remain kind of sophisticated, cool.
You know, PSVR owners are gamers, and their reference points are very high.
So yeah, we went down for a more mature look, but we kept all the playfulness still.
OK, that's it.
So there's a few final thoughts for me, and I think for time.
Yeah, we're good.
So first of all, so the game became quite popular.
We had some really nice reviews.
And part of me is thinking that perhaps it is because it's a nice mix of nostalgia and high technology.
It is a game that, and I'm not going to make any lies about it, it's taking into 30 years of platform game history.
It is pop culture.
We all grew up with those games, 2D, 3D.
And so I think the fact that it's tapping into this nostalgia plus the addition of the coolness of VR, I think it is perhaps what made it stand out as a kid's dream.
Perhaps it is the kind of game that we used to visualize in our kids' heads when playing 2D 8-bit games.
The other thing, and that's probably the biggest revelation, that's more of a personal thing, but you know, we started the project and I was telling you that it was all about, I remember being at GDC in fact, you know being talked to by VR purists, experts, saying that it had to be first person and virtual hands, or it wasn't VR.
But if you look at last year, you know, we had Moss, we had Tetris Effect, you had Astro Bot, before that it was Rez.
I think these are really, really great examples of classic games that have been reinvented for VR.
And so the point is to not copy and paste. It's not about taking those games and slapping them into VR.
I think we need to be able to deconstruct what was fun about these games in the 80s, 90s, 2000s.
And then reconstruct using our own words and our own technology.
And that's this very important point.
We often talk about that with the team.
It's not a copy and paste. It's an analysis and a reconstruction.
a non-VR version, so a lot of people come to us and say, hey, why don't you just make a non-VR version?
Well, I think for the reasons I mentioned today, it's like actually it was built for VR, and so, you know, even if you played the game, actually, on a flat screen, you'd probably fail at a lot of the gems because it was built for that 3Dness, it was built for VR.
So if it was a non-VR game, it'd be a different game.
And that's it. So I just want to take a chance also to celebrate the team.
Astrobot was put together in 18 months with almost no other time, which is very, very rare in Japan.
And in a fun mood, and I think we could get a good platformer out against the odds.
And it gives me a lot of hope for VR, because many classic genres can be reinvented.
Adventure, racing, fighting.
If we apply the same approach, I think it's totally doable.
So if you're thinking about it, really go for it.
Just ask yourself the right questions.
And I think, I want to see an adventure game.
I want to see a Metrovania kind of game in VR.
That would be really cool.
All right, so that was all from me.
Thank you for listening today.
Have a great time at GDC.
Thank you.
