So this talk, it's all about capturing great footage for games.
And the title says it's for trailers, but all of this will apply to any capture.
This should be useful whether you're a developer, or trailer editor, or game capture artist.
And actually, on that note, who here is interested in being a capture artist?
Okay, a few. Trailer editor?
Nice. And who's a developer?
Okay, figured.
All right, so also note, you can go to this link, which I'm gonna have a PDF of the slides with like the little tips and stuff, you can just download it.
So you don't have to worry too much about taking photos during this.
So just take a photo of that, and then I'll have this link at the end too, so if you don't get it.
Anyway.
So like I said, I'm a trailer editor.
My name is Derek Liu.
I've been doing this for about five years now.
And I worked on some games like Firewatch, Ooblets, Dead Cells, Battle Block Theater, Subnautica, Tacoma, and lots more.
I've also worked at agencies in Los Angeles where I've cut some trailers for AAA games like Mortal Kombat X, Shadow of Mordor, Mad Max, and lots of Lego games.
And I've worked on games from a wide variety of genres, and they all have unique needs when it comes to capturing footage for them and the tools that make it easy.
And so I'm going to talk a lot about shot composition and how to make shots both aesthetically pleasing and easy to understand.
I originally came up with the idea for this talk last year because every developer I've worked with had different debug tools.
So I thought I'd aggregate all that information and share the best of everyone's tools that helped me get the best possible shots for trailers I made.
All right.
So, why care about game capture?
Game capture is simply video footage of the game.
You need it for trailers, animated gifs, dev blogs, b-roll for montages and press coverage.
But most importantly, a good way to think about it is...
more people will see your game capture than play your game.
We'd love to think that every trailer view turns into a sale, but far more people will see footage of your game than actually play it.
And the game capture you release is the only time you ever have full control over how your game looks.
Once it's released, you have no idea what kind of footage will be someone's first impression of your game.
So you should want to make it look good.
Also, if you have friends, parents, or extended family who don't play games, then game capture might be the only way you can show them what it is that you do.
But the main thing to think about is successful game capture communicates effectively.
And this seems like an obvious thing to say, but if someone watches a shot that you captured and they don't have any idea what's happening or what the shot is trying to say, then it's not good capture.
All right, here's a quick overview of software and hardware for capturing and editing.
There are a bunch of solutions for PC game capture, but they all essentially do the same thing.
Just make sure it can capture at the frame rate and resolution you want.
So for my indie work, I use NVIDIA ShadowPlay, which requires an NVIDIA card, but it's free, and it's good because it uses the GPU instead of the CPU.
And the same goes for Bandicam, which you can buy for 50 bucks.
And these both capture to H.264 compressed video.
But at high bit rates, the quality is still very good.
I've had trailers on big screens at press shows, and video quality has never been an issue.
On Mac, I use ScreenFlow, which has lots of nice features and can be used for editing, and that costs $129.
There's also Fraps and OBS, but they can be a pain because the files need to be converted before I can edit with them, and with Fraps especially, the files can get enormous.
So a lot of hardware options.
There's devices by Elgato, AverMedia, HotPog, Razer, and they all capture to H.264.
I got a little head there.
There's also Blackmagic Intensity Pro and Intensity Shuttle, which capture uncompressed video.
And right now you might be thinking, well, obviously I should capture uncompressed video instead of H.264, but.
Really, it doesn't matter that much.
Uncompressed video is way faster to edit with, but the files are enormous, and most people won't be able to tell the difference in quality unless maybe they're played side by side.
And in the end, they're all gonna get filtered through YouTube compression and watched on someone's phone anyway.
So don't worry about it too much.
Editing software, I edit with Premiere Pro, but I tell people just use whatever editing software you're most comfortable with, as long as the software supports multiple tracks of video and audio at the resolution and frame rates you want, doesn't matter, especially if you're not sharing project files or working with someone else's equipment.
I've also used Final Cut Pro and Avid Media Composer, and Sony, Vegas, HitFilm, and Lightworks are others that I just know exist, but I've never used them.
They all have different pricing structures, so pick what's right for your budget.
They also all have trial versions too, so check those out before dropping money on them.
And there's also a lot of good free editing software.
There's Avid Media Composer First, there's DaVinci Resolve, there's HitFilm Express, and Lightworks Express.
These are all worth looking into if you have a limited budget, and they'll all have way more features than iMovie or Windows Movie Maker.
All right, so lastly, here's a few options for easily making animated GIFs.
Honey Kim and GIF Brewery all have lots of features, like being able to convert video or just capture straight from your screen.
And you can adjust the resolution and lots of other things.
And GIFGun is a great script for easily making GIFs straight out of After Effects.
Okay.
So next, I want to talk about capture difficulty factors.
These are four things that determine just how difficult it's gonna be to make capture for a game.
And those are visual feedback, camera distance, number of objects on screen, and audience familiarity.
If you look at your game through all four of these factors, you can generally tell how hard a job you have ahead of you.
Visual feedback is simply how easy it is to see something changing or being affected on screen and understanding what happened without prior knowledge of the game.
And high visual feedback is usually great for capture.
At the highest end, you have action-based games like Super Mario and Street Fighter.
You can clearly see something on screen being affected.
Enemies are defeated, people are punched, and they go flying in the air.
But action and hitting things doesn't necessarily mean high visual feedback.
For example, in games like Clash Royale, there are characters hitting things, but their effect generally isn't apparent until something dies or blows up.
Everything before then is just a health meter slowly going down.
Then you have games like MOBAs, which have very flashy animation and visual effects, but they take a while before anything seems to be affected in a way that an uninformed person can understand.
And then there are games like Everybody's Gone to the Rapture, where there are very few moving objects on screen.
But to figure out how much visual feedback a game has, just the question you need to ask is, when a player does something, would someone not at the controls see anything changing on screen?
Next factor is number of objects.
It's gonna change, yes, there it goes.
Generally, capture is more difficult when there are more objects on screen, especially if they're all moving like they all have minds of their own.
And depending on the game, it can be a lot of information to process.
For example, again, games like single screen multiplayer games, strategy games, MOBAs, they all have a lot of stuff on screen at any given time, so you have to kind of mitigate the confusion.
Whereas games like Lego games or the Batman Arkham games and Super Mario have fewer moving parts and can be captured with their in-game camera with some debug camera shots mixed in.
And then games like Street Fighter, Limbo, Everybody's Gone to the Rapture can often be captured with very few debug camera shots.
And the number of objects on screen is very closely related to camera distance.
pretty much further away the camera is in the game, the more difficult it's going to be to capture for, because a faraway camera makes it more likely that there are more objects on screen at any given time.
You can see that in games like League of Legends, where the camera's very far away.
But conversely, Limbo, the camera's also far away, but since there's only one character, it's not as hard to capture for.
And same with Lego games, kind of like a medium distance, not as difficult.
And again, like Street Fighter, default camera's fine.
The final thing that can make your job either incredibly easy or incredibly hard is audience familiarity, which is simply how likely it is the audience will already have some knowledge of what they're looking at when they see it.
Like, it's easier to capture for an informed audience than one you have to teach.
So, for example, we can generally assume that people understand real-life objects like a car or a fishing rod or a gun.
And at this point, Nintendo can pretty safely assume that people don't need to be taught that Mario jumps on enemies.
Whereas most people aren't going to understand footage from a MOBA if you show it to them.
So when capturing, you have to think, are you targeting people who have a familiarity with your game, or are you trying to get people who aren't?
Because it's very different when you can't assume a base level of knowledge from the audience.
All of this to say that's why Clash of Clans, League of Legends, Dota 2, World of Warcraft, Hearthstone, and strategy games tend to make fancy pre-rendered trailers instead of gameplay trailers.
There's a ton of objects on screen, the camera's really far away, it takes so much prior knowledge to know what's going on, and even though there's lots of animation, it's hard to see what's changing.
With that said, If there are a large number of objects and a far away camera, but there's a way to create focus then it'll be easier to watch.
I added this slide after seeing kids at Day of the Devs.
Or if you imagine in a real-time strategy game, several copies of one unit attacking simultaneously, like fire bats or zerglings in Starcraft, it'd be easier to understand if a whole bunch of stuff is doing one thing.
but just anything that helps the audience see something other than random chaos.
I mean, this isn't to make a qualitative judgment about these games, it's just that looking at these factors will help you know just how hard it is it's going to be to capture for.
Also, this exercise might help developers design their game because if they're finding that their game doesn't communicate well visually, there might be a way to improve it.
And, okay, something.
that we need to clear up, which is game capture isn't just playing the game and hoping that you get something good.
That's how you start the process, but once you find a good moment that you want, what you want to do is then perfect that moment until it's the ideal version of what you want, which doesn't necessarily mean perfectly played gameplay.
It's just getting a shot that shows what you want it to because game capture is filmmaking.
you're communicating with film language, not game language.
So you have to think purely visually, since the audience doesn't have their hands on the controller.
So when you're a capture artist, you're wearing multiple hats.
You're the director, because you're deciding the purpose of the shot, how to frame the action, and where and how the characters move, and the tempo of all those things.
You're the camera person because obviously you move the camera.
And you're a puppeteer because when you capture, you're not really playing the game like you normally would.
You're controlling the game and trying to create shots for a specific purpose.
And like a puppeteer, you're trying to give a performance through the avatar you're controlling.
So with that in mind, here are three things to focus on when you're capturing.
Composition.
readability, and performance.
Composition is simply deciding how to frame the character's objects or environment.
Depending on the game, the default camera will be different.
Third-person games tend to be center-framed, and centering is a good, safe way to compose your shots.
If you want to keep things simple, just keep the focus of the shot to the center at all times.
2D games like platformers and, sometimes need some reframing in post because either the character jumps all over the screen or favors the left or the right in like in a point-and-click adventure game.
Next tip, use the rule of thirds to help your shot composition.
Simply just dividing the shot into a three by three grid and composing your shot so the subject or subjects generally fall in the lines or in thirds.
And when you do this, the shots tend to look very aesthetically pleasing.
If you're not gonna center frame things, this is a good way to do it.
Which brings me to my next tip, which is...
create a three by three grid for your monitor with string and tape or whatever else you have available.
This is a photo of my TV when I'm capturing which has my makeshift grid I just made out of string and some blue painter's tape.
When I'm setting up I just open a JPEG of a three by three grid that I have on my computer and display it at full screen and then just align the string to the lines.
And it helps me compose.
Similarly, create a three by three grid image to overlay in your editing software.
This helps give you some nice guides if you ever need to zoom in and reframe your shots.
Next tip is put a sticky or piece of tape or whatever on your monitor to replace the crosshairs if there's one in your game.
First person, third person.
Because when you're capturing, you usually don't want to have the in-game crosshairs on, so putting a sticky on the monitor allows you to know where the center is even when it's turned off.
It's a simple little thing.
Capture at higher resolution than your final output.
You don't have to do this with all your capture, but for shots that you know you're gonna reframe in post, this lets you avoid blurriness if you scale the image up.
Or alternately, if you're working on a pixel art game, here's a tip that I learned from fellow trailer maker Kurt Gartner, which is to upscale video of pixel art in After Effects.
Simply, when you put a video clip into After Effects, you can set the quality to draft, which enables nearest neighbor scaling.
So, the pixels won't get as blurry when you scale it up.
And then you precomp that.
So, if you had like a 1080p clip, scale it up to 4K, precomp it, and then edit in a 1080 sequence.
And this will let the pixel art stay sharper when you want to zoom in.
And that said, I frequently scale up footage to like 150%, and it doesn't really cause that much visual degradation.
And again, all getting recompressed and put on YouTube and watched on the phone anyway.
And another very important consideration for shot composition and editing in trailers is eye trace.
Eye trace is simply being aware of what the audience's eyes are looking at and making sure that when you cut to a shot, you're not forcing them to reorient their eyes too much.
This is especially important for games where the camera doesn't move too much, but the characters do.
But most of the games I've worked on, the action's pretty centered, so here's an example from Kurt Gartner's trailer for Celeste, which has very good eye trace.
I overlaid a little pink circle, and it shows you how the subject moves from cut to cut, and you can see what I'm talking about.
You don't have to move your eyes around too much to keep following what's going on, and it can get cut very fast because of that.
Just to give you an idea of how bad eye trace can affect the trailer.
I cut together this reel, which while watching it, just try to keep track of the action and pay attention to, sorry, pay attention to how much more work it is to just do that.
And trailers are generally cut pretty fast, so if you have bad eye trace, forces the audience to work really hard to watch the trailer.
And the thing is, When the audience's eyes get lost, they stop retaining information.
So you just have to make your footage as easy to watch as possible.
And to this point, I have some recommended viewing.
Which first is, why is it so hard to remember what happens in Transformers by Lindsay Ellis and Mad Max Center Framed by Vasi Nedimanski.
These are very good video essays.
Also, Jackie Chan, My Stunts.
This is a great documentary.
It's really hard to find a DVD for, but it's on YouTube.
This documentary's great first because it's amazing, and it's very inspiring, and mostly because...
At the end of it, he choreographs a fight scene and shows you both the good takes and the bad takes and why a shot was rejected or put into the final edit.
So like here, he's trying to get the bottle in the center of the frame.
So that last one was the best take.
It's really very instructional.
Okay, moving on to readability.
which is related to composition, but it has more to do with simplifying your shot so that it's very easy to digest very quickly.
You can see each of these photos has two cats in them, but the one on the left takes you ever so slightly longer to be sure of it because I have a shirt on the floor and there's my shoulder bag there, whereas the photo on the right has nothing else dark in the frame, so it's much easier to read.
because sometimes games can be very chaotic.
There's numbers and visual effects and explosions everywhere.
It's easy to understand when you're playing and being selective about your focus, but when the game is being shown to you as a series of rapid images, the simpler the frame, the better.
You might want to show as much as possible, but the goal is to make sure the audience remembers what they see, otherwise it's all useless.
For example, in most of my dead cells capture, I made sure to kill all the extraneous enemies that would have been competing for attention.
And the thing that I say is that a shot that says too much communicates nothing.
If I just flash this photo of cats onto the screen, the only information you could retain is probably, that's a whole lot of cats.
But if what I wanted you to know was how many gray tabbies there are, then there's no way you'd be able to figure it out in a short period of time.
It's much better if you show the audience one thing and they remember it, than showing them multiple and they just forget them all.
and it can be something as simple as, I'm sorry, I forgot to advance that.
It's something as simple as just zooming in on the frame, especially with 2D platformers.
These are both the same shot, but the right one's zoomed in.
You can see that there's so much more information on the left screen than the right.
It takes longer to read, and by the time the audience finds the subject, the shot might be over.
And there's a simple thing you can do to test how readable a shot is, and that is to, once it advances, Any time now.
Oops.
Squint at your shots to check their readability.
This blurs your vision and then instantly shows you what stands out when you can't pay attention to the details.
So take a look at these shots again.
If I blur them out, like you're squinting, you can tell right away that there are a lot of things competing for your attention on the left.
If the thing that your eye gravitates to in the shot when it's blurry isn't what you want it to be, then consider how you can change it.
Zooming in is just one possible solution.
It could be something as simple as just removing the items or enemies from the screen.
For example, if I removed all the yetis and the gold on the shot on the left, it'd be way easier to understand.
And a Twitter account that I recommend.
is at micro trailers.
This is a bot that just takes six random seconds for the trailer of every single Steam release.
And it's just like a good way to see which games look good in very short video clips.
It's very educational and amusing.
Moving on to performance.
Like I said before, when you're capturing, you're essentially puppeting the game character and creating a performance.
But what you need to think about is, are you performing as the character in the game, or are you capturing the player interacting with the game?
So here's some capture for Uncharted Lost Legacy that I got from AtSoonHeLegend, who posts amazing animated gifs on Twitter.
This is captured like Chloe Frazier's just the most amazing adventurer in the world.
Whereas in this version, it looks like it's by a person messing around on the couch in front of their TV.
Each of these approaches are valid, it just depends on the context that the capture is being used in.
every game has different capture needs.
So games focused on character and story, it usually makes most sense to perform according to what's happening in the scene and play like you're a character in the game.
Whereas games focused on the player, like multiplayer and competitive games, are all about the people at the controls.
So the capture is about showing the audience what they'll literally be doing in the game.
And then some games tread the line because they can both be about the characters in the game or the player expressing themselves through the game.
So you have to capture accordingly.
So how the heck can you give a performance with a keyboard or a controller?
The thing that you need to remember is that movement is character.
You might not have much control over character animation, but how you move a character or the camera conveys so much personality, whether it's a 2D platformer, third-person game, or first-person game, or others.
And even just how a mouse cursor moves can just show character and personality.
Think about this, when you look at a car driving, You make assumptions about them that are usually not based at looking at the driver.
It's just how the car moves.
So, like, what do you think about this driver?
In first-person games, how you move the camera and what you look at communicates the thoughts of the character.
This is from one of my Firewatch trailers where I wanted to put you in Henry's head as he decides whether or not to throw the fireworks in the fire pit.
Here's another example I made where Henry just kind of walks to the lake and then he picks up the boombox and then he looks at the teenagers and just walks to the side and he kind of thinks for a second and then he throws the boombox in the water and he just kind of backs away without breaking eye contact.
which, like, based on this, what kind of person do you think this Henry is?
Whereas in this version, this Henry is just like a total spaz, it just runs in and then grabs the boombox and then throws it in the water.
It doesn't even wait for it to fall in, it just runs away.
So you can see how different the capture is just from changing the speed that the player moves and performs their actions.
Here's another example from Spelunky.
Here I'm just playing quickly and recklessly and get into some very typical Spelunky moments.
And in this version I just played very slowly as if I didn't have much experience playing it.
And the game looks very different depending on how you play it.
These two approaches communicate very differently to the audience.
And here's another example from Firewatch.
In the game, you can easily select dialogue options while walking, but in this clip, which I'll play in a sec, it changed up my movement to just give the performance a little more character.
Yeah, I'm not sure I got a lot of choice in getting struck down.
Especially not with your electric personality.
I see my joke did not spark your sense of humor.
UGH!
What, you're not enjoying our...
CURRENT conversation?
Oh my God, lady!
The... the arc of our budding friendship.
They put the entire wilderness in the hands of an insane person.
How exactly are you in charge?
Ah, charge, Henry.
You get the point.
This isn't to say that you need to think of character and emotion for every single thing that you capture.
Sometimes you just want to show competently done gameplay.
But if you're even just doing that, capture one idea at a time and then build on that.
You pick one action, intent, or emotion, find the best way to show it.
And then I have some more recommended viewing, which is this episode of Every Frame a Painting by Tony Jo called The Spielberg One-er, which is about how Steven Spielberg does long shots that are essentially multiple shots in one, which game capture can be like that sometimes.
Another tip, which is controllers are best for slow movement.
I have an Xbox Elite controller for the games where I want to be constantly adjusting the camera with my thumbs, but I still need to press the face buttons.
So for example, it's useful in shots like this one for the Wild Eternal trailer, where I'm moving alongside this marker, and I wanted to activate it while I was moving it.
And then the downside of a controller, of course, is that it's difficult to do fast camera movements.
which is what keyboard and mouse is good for because sometimes you want quick and fast movements.
For example, I used keyboard and mouse in the opening shot of Firewatch's trailer because I really wanted to be able to spin around very quickly for when Henry says, seriously, it's totally fine in here.
Just to make it funnier, hopefully.
These are just a lot of the takes that I did in the process of making the trailer.
And then.
The downside of keyboard and mouse is that you can't vary your walking speed unless you have speed settings for movement.
Next performance tip.
Use a metronome or a metronome app when timing and choreographing multiple actions.
This is especially good when you wanna synchronize movements to the beat of your music.
This is something I did for my Cosmic Trip trailer.
By using a metronome set to the tempo of the trailer's music, I could just add some visual interest by having the capture and music in sync, which I'll play right now.
Another solution I've used is just loop the trailer music in the background while I'm capturing.
All right, moving on to debug tools for capture.
A lot of these are about saving time, but they're also about the ability to capture a wide variety of shots.
And I'm not saying you must implement all of these, because obviously time and resources are a finite thing, but I just want to show you what's worked best for me and why.
Think about this stuff early, especially if you're planning on lots of developer updates or having someone else do your own capture or trailer work, hint hint.
Just to give you an idea of what a difference a nice debug camera makes, here's a trailer I made for Ooblets and a version I made without using the debug camera.
Also, the one on the left was an older build, and you will not be able to get that many ooblets at one time next to you.
I think it's like 10.
Anyway, so I'm gonna start with what I consider the essential time-saving debug tools.
Some of these might already be implemented for making the game, but just in case.
Number one thing you need is the ability to turn off the HUD.
On-screen text or any overlays.
I'm still surprised at how many trailers out there have the HUD on.
It's very distracting, especially anything with text.
Like, you ever try not reading subtitles?
This is especially important for button prompts because if you have a cross-platform game, you don't want to have to capture multiple times or digitally add in button prompts, which yes, I worked at places that had to do that and sometimes motion track it.
The way I think of the HUD in Game Capture is, it's like when you're in a car and suddenly there's something on your windshield.
It's so distracting, it feels invasive because you just can't look at it.
This is what I feel like you're doing to the audience when the HUD's on.
So just have an option to turn it off and everything will be good.
Music toggle seems like an obvious thing, but I've worked on several games which didn't have an option to turn off the music.
This saves time because when making trailers if the music is mixed in you can't use any of the sound effects from that capture which means manually adding them in which can get very tedious and time-consuming.
Also, if the game has nice audio panning this is an easy way to have it tied to the footage whereas doing it in post requires extra work.
Level skip just saves a ton of time going from place to place if you can just skip around to different levels Just by the press of a button Related an option to teleport which is especially useful for big games Even when like flying around takes a long time Subnautica has a coordinate system that you can use to display your current position and then use a warp command To just go straight there level number display. I'm working on the Adventure Pals right now and in their menu they have a dev mode and one thing it turns on is the level number on the top right hand corner. It's super useful because I did a first pass of capture just to see what was in the game and because of this label combined with the level skip ability, it's super easy to just go back and redo a shot.
Inventory management, this is really important for games like Ooblets and Dead Cells, which have lots of objects in them.
It meant I could do a lot of customizing and also tailor-mix scenarios to capture for the trailer.
Dead Cells in particular had a really good system because it let me spawn any item in the game in any iteration and change its modifiers.
Spawn enemy, another nice tool for dead cells.
Sometimes I wanted to do this because I just found a very aesthetically pleasing part of a level and then needed to do multiple takes to get the shot right without reloading the game every single time.
And if the game has procedurally generated levels, it might be even harder to redo a shot.
Invincibility, this is just to avoid having to restart the game all the time if it has a health system.
Simple.
Fast mode, this is another mode I had for Octageddon, just the ability to make everything go super fast.
This let me skip to different parts of a level very quickly.
I also had that for Thimbleweed Park.
Tourist mode, another thing from Dead Cells.
Similar fashion, just lets me walk past all the enemies, which is great for saving time and scouting out a level to see which parts I want to capture.
Cursor visibility, especially important for point-and-click adventure games.
There's really no reason in those trailers to ever see the cursor.
But of course, in your capture, you still need to be able to activate objects and move around, but so you need an option to make it invisible.
In fact, when in Wajidai's Unavowed, I was working on that trailer, there was no option to hide the cursor.
So I wanted the shot where you're choosing your party members.
So I had to erase the cursor in After Effects by using a patchwork of clips.
And if I just had the ability to turn off the cursor, it would have saved me hours.
I put this GIF in my blog post about the trailer and Dave Gilbert, the creator, felt really bad when he found out I had to do all this.
Object highlights.
These are distracting because by their nature, they draw attention.
And unless you're capturing for showcasing UI, there's really no reason to have it on.
Time of day.
If your game has a day-night cycle, this option makes it very easy to get a variety of shots very quickly.
With Subnautica's time of day system, I could speed up the rate that the day went by and then just slow it down when I found the pattern of light that I liked.
All right, on to some genre specifics.
First-person games have their own unique needs.
First thing you need specific to first-person games is head bob toggle.
This is a very exaggerated example from Quadrilateral Cowboy.
Sometimes you want to use head bob to show the point of view of the protagonist, but other times you just want a smooth camera movement showing the environment, so put a toggle for head bob.
Other essential thing is a free cam, which can fly around freely, get shots of the environment and close-ups on objects, or just to get from one area to another, just really quickly. This is especially important for trailers because it adds to the variety of possible shots, which opens up the ways you can tell the story.
which standard first-person game controls are typically how free cams are mapped.
I usually request the ability to move up and down with the triggers since they're the only other analog controls available in addition to thumb sticks.
But the most important thing about a free cam is that you optimize it for smooth movement.
You basically want the camera controls to be the exact opposite of high fidelity, one-to-one, super precise controls.
And this means things like adjustable camera speed.
This isn't first person game, but I had a good system in Ooblets, which is most of the time I want slow camera moves, but sometimes it helps to be able to move really fast.
For example, on Subnautica, I could trigger an event, and then press five, make the free cam move really quickly, and just get into position, and then press a lower number to make the camera move slow as it captured the shot.
And in terms of how to adjust these settings, sliders and hotkeys are the most user-friendly way to adjust camera speed and sensitivity.
Console commands are difficult because a setting of, say, one can be totally different game to game.
You know, it could be fast in one and slow in another.
Next free cam tip is that dead zones are great.
If you don't know, dead zones are just how far the thumbstick has to move before the input is read.
This is to prevent sudden jerky movements, and it allows for smoother camera transitions.
Another thing that helps is camera smoothing.
I worked with Scott Goodrow on The Wild Eternal.
And on that game, they had an option for camera smoothing, where the game averaged out the inputs within a certain time frame, and that made it easier for me to get nice, smooth movements.
And the hardest thing in this shot was transitioning from using both sticks at the same time to only one for when I track in at the end.
And camera smoothing helped a bunch.
And the other thing I had for that game was a thumbstick sensitivity based on the stick's position.
Basically, in the center of the radius of the movement that the stick can go in, it's less sensitive, and further out it's more sensitive.
All this just to say that I just wanted to be able to start the camera and move it, start it gradually, and then end the movement gradually, whereas usually just very sudden.
Moving on to third person games.
Camera controls here can get more complicated because you have a character on screen and here's where I tell you just copy the tools that I had for Ooblets because it has the best options I've used for third person games so far.
So in Ooblets, the camera is always in a fixed position and follows the player character positionally.
So moving left stick moves the character and the camera follows along.
And then when the free cam mode is activated, the camera is still following the character positionally, but the triggers, bumpers, face buttons, and right thumb stick can offset the position of the camera.
And this let me get some great wide shots, and steady cam shots, and then side angle shots.
And I could even adjust the camera while moving.
So for example, in this shot, I am moving with the left thumb stick and tracking in at the same time by holding the right trigger.
And I could also rotate around the character while moving.
And since the camera's always attached, I didn't have to worry about keeping track of them.
And like I showed earlier, I could change the speed of the camera using hotkeys.
And there were some nice pop-ups there that told me how much higher or lower the speed was.
And then the other great camera option was the ability to detach the camera from the character by pressing Y.
This meant I could lock the camera in place and move the character freely, which, for example, is what let me get these montages of the character decorating the house or planting crops.
And another good option for third-person games is a toggle for player visibility.
This is good for when you need to capture shots of the environment or NPCs.
And so one caveat to all this is that these camera controls worked great for Ooblets because the player controls are just movement and interacting with the A button.
The setup wouldn't work with a game like Uncharted where you're just using all the buttons to control the character, which the ideal scenario would be the ability to say offset the camera position, lock in those new settings, and then control the character from that position like normal.
But actually another great example of a third-person game with a great debug camera is the Mad Max game from 2015, which I worked on at an agency in Los Angeles.
The capture team there actually captured everything in the trailer that I worked on using the retail version, which shipped with a video mode.
If you hook up a second controller, that becomes the camera controls, which have all these additional options when the first controller plays as Max.
So just like an Ooblets, the camera follows positionally, and you can reposition it.
Then just walk around.
You can change the field of view, which, zoom.
And then you can move the camera up and down.
And then you could also detach the camera.
And then there was also a button for slow motion, which we'll get to in a sec.
Come on.
There you go.
And then.
There's an option to tilt the camera.
And then you could also set up multiple camera angles, which are switchable back and forth.
And there are also toggle for depth of field and focus.
And all this you can either do by yourself or by moving the camera with one controller, then switching to the other one and playing.
Or you could just do it with a partner, so the second person's the camera person.
And the only thing that would have made this mode better are speed settings for the camera, because the default sensitivity was quite high.
But there are a lot of games now that have a photo mode, but this is the only AAA game that I can think of that has a video mode, which I'd love to see this sort of feature in more AAA games, especially if you find an elegant way to do it without requiring a second controller.
Debug tools for 2D games, which aren't as complicated since you're only dealing with x and y axes, but here are a couple things.
First is free cam mode, which not as important as in 3D games, but sometimes it's useful.
For example, in a trailer I made for Dead Cells, the free cam let me show off the new levels.
And this one here is more of an idea of mine, which would only really work if the game assets scale better in game than in editing software.
But if there was a way to have a debug camera that allowed zooming and position offsetting, that would be a great thing to have.
Again, only if the assets scale.
I'm guessing this would work best with pixel art.
And lastly, here are some debug tool extras.
Not essential, but they're handy tools to have.
I mean, kittens are essential, but anyway.
Just an excuse to have another kitten photo.
NPC control.
Watch at eyes game unavowed had a nice debug option where I could switch control to other characters and just move them around.
This helped for when I wanted the characters in a certain arrangement on screen to make the composition better.
And like I said with Mad Max, camera attached to a second controller is great to have for a third person game.
Just allows for much more dynamic shots.
In the second trailer for Ooblets, I was able to move a camera via the keyboard and mouse while controlling the character with a game pad, which would have been easier with a second set of hands, but for this shot, I was literally just holding the game pad and then with a free finger just pressing forward to move the camera.
Having a separate controller act as a camera also helps immensely for 3D games that have co-op play.
I've worked on games where getting shots of two players moving at once required some very hacky solutions.
In that case having a third controller be the camera would be great.
And another handy tool for 3D games is time freeze.
This is really useful for 3D games with lots of action.
It's just a button to freeze the action, let me reposition the camera to a new angle, and then resume the action.
This saves a lot of time for when it might be hard to control a game at a certain angle, and then it's great for creating match cuts.
And then slow motion's sometimes nice to have, but I'm usually wary of using it because if the game doesn't have some sort of slow motion bullet time mode, I don't want to misrepresent the game.
But it can help make some cool shots or make it easier to perform a succession of shots and then maybe speed it back up to normal speed.
For example, Sunhi Legend does a lot of these uncharted capture in slow motion, so it's easier to queue up things one after another and react and then later sped it back to normal speed.
And some games I've worked on let me control the time scale down to like a third or fourth decimal, but it's really not necessary to be that granular.
If adding options for multiple time scales, just whole numbers are better, so then that when you would set it back to normal speed in editing software, it's simple to do.
And next, I'm just gonna talk, that's a good one.
Gonna talk a little bit about VR.
just briefly, because really what you should do is go to fellow trailer maker Kurt Gartner's website.
He has an entire talk that he did earlier this week about capturing footage for VR games.
And his website has an in-depth article about virtual cinematography for VR trailers.
And in his talk he has a slide where he says, your head is not a camera, because using footage of only the first person view isn't the best way to show VR games.
And I agree that having the option to show an avatar playing the games in VR is the best way to go because just like having a free cam for first-person games, an alternate angle just gives you more options for interesting shots, especially in VR.
All that said, if you have to do first-person VR capture, here are some tips.
Implement motion smoothing on the external monitor.
I'm still amazed at how many trailers for VR games don't have motion smoothing.
It looks terrible, it's shaky, and it might make your audience sick just from looking at it.
I once had to work on a VR game where there's no motion smoothing, and I just got nauseated just from going through footage.
So if the footage is smooth, then the audience can simply focus on what's happening in the shot.
And everything will just look much better.
And also with a motion smooth camera, just make sure it doesn't break all your filters and effects which is something I've noticed.
Next tip is use the eye that corresponds to the PC monitor window.
The window that displays on your PC when in VR usually is signal from the right or left eye, so naturally you should only be using that eye when capturing.
Otherwise, the footage might be at a slight angle when you're lining it up, which is especially obvious when you're trying to do something like aim down the sight of a gun.
So that's with the right eye, not the left one.
Next is find the center of your view. If you're just capturing by yourself, you have to do some extra work to make sure everything is composed well.
And in VR, a lot of the time, you can feel like you've, you're centered something in your view, but you're actually looking too high or too low or too much to the side.
In this capture, I didn't have any guide for the center, but it felt like things were centered.
But it turns out I'm mostly looking a little bit too high.
And the best way I found to center my view is to put a sticky on the lens of the monitor eye.
I just start by putting it on the eye and then just do some test capture where I look at something and if it's not centered then I just adjust the position until it's good.
Takes some trial and error but makes things way easier once you do it.
Next, be aware of hand position.
You can play most VR games with your hands in a position that an external monitor will just never see.
So if you want the controllers to be visible, you have to test to see how high they should be.
Most of the time it will feel really unnatural to hold your hands so high, but it'll look better if you want the audience to see the controllers.
Whereas you see in the right screen, I was just holding my hands in a very comfortable position and you can see I can play the game just fine but everything isn't as clear as on the left version.
And capture with a partner.
All the previous tips were capturing alone but having a capture partner is ideal because they can tell you if you're looking at the right thing or not.
Also mind the mouse cursor.
is just make sure the mouse is in a place that it's not on the monitor, and maybe it is in a place where it can be nudged by cats, because that can happen.
Yeah, just save you some time there.
Also, hire someone with physical training to do your capture, like a professional dancer or a martial artist, or someone who's just very good with their hands.
It's easier for them to repeat choreography, make graceful motions, and they probably won't get tired very quickly.
Performance in VR is just so much more important because every little head and hand movement, scene one to one, it's very easy for the performance to have no energy or flow.
So get a dancer or martial artist, makes a big difference.
And make a free cam for your VR game.
More shot variety makes the footage just much more fun to watch.
So whatever you can do to create more shots that aren't from the first person's perspective, do it.
All right.
So capture practice. Here's some great games if you want to practice capturing. Disclaimer, not being paid by anyone here, but I did work on trailers for all these games. Like I said before, the Mad Max game, great for third person game capture practice. So get this if you want to practice for that.
First person games, Quadrilateral Cowboy, great, because using a free cam's part of the game.
You have to enter some commands to be able to use a controller, but since it's a game about hacking, the debug console is still in the game as an option in the settings, because of course it is.
These are the instructions for what you need to set up the free cam, it's just some things you have to punch into the console, and then you can use the controller.
Also in the console, you can just type find, and find lots of other commands, which.
I'm sure the creator of the game would love for you to do.
I actually mean that.
But yeah, so then the game, you just press F1 and you got a free cam, you can just turn it on and off.
And you can practice.
Also, Tacoma, fantastic for practicing framing NPCs in a first person camera.
because the game is all about having these scenes that play out and then just rewinding them so you can just easily try different angles over and over and over and over again.
This is just some of my raw capture from when I was trying to get this shot for the trailer.
Next to Ooblets and Quadrilateral Cowboy, Tacoma's just the easiest game to capture for.
Another fun thing you can do is...
Oops, sorry.
I thought I turned the volume down on that one.
Doop-a-doo.
All right, another fun thing you can do in Tacoma is treat it like a virtual film set and practice editing scenes together.
This is just one I made just very quickly for this talk, but it made me want to do more.
All right, capture inspiration.
Some good examples of video game and film resources for inspiration.
Other Places by Andy Kelly, which is all about showing pretty environments in video games.
Unfortunately, he doesn't update anymore, but there's still a lot of great videos on his YouTube channel.
At SoonHeLegend on Twitter posts amazing animated GIFs.
I already showed a whole bunch in this talk.
Right now he's on Monster Hunter.
Next, oh, and Rebecca Cordingly's Twitter for oobletsgifs.
She's at nonplayercat.
Her development gifs are always lots of fun to look at.
Compositioncam is a Instagram account, also not updated anymore, but they overlay grids and lines to show how a lot of great shots from films are composed.
And at oneperfectshot tweets shots from films and articles about film.
Okay, so in summary, think about capture early.
The sooner you think about how your game looks in video, the better.
Helps you market your game, and it might even help you with the game's design.
Watch films with great cinematography, good visual flow, and camera moves.
Not saying your shots have to rival Hollywood directors, but might inspire you to, or give you some good ideas.
Watch films with great framing.
There are a lot of great directors, but just start with Kurosawa.
Like, just watch all the Kurosawa films.
It's amazing.
Watch films with well-shot action.
You know, good blocking, good spatial awareness in editing.
So watch Jackie Chan films.
Watch Yuen Woo-Ping choreographed films.
John Wick, Edgar Wright films, Guillermo del Toro.
Give yourself the tools to create great shots.
Without good tools, just making it harder for everyone.
Think of yourself as a puppeteer.
Again, game capture isn't simply playing, it's a performance.
Capture with intention.
Think about what the intent of each shot is and how to best achieve that visually.
And really, simplify your shots.
It makes them much more readable.
So strip away anything inessential.
And I'll leave you with some good advice from Jackie Chan.
The most difficult thing is when I throw the fan and coming back for one shot, more than 120 tick.
When you see it in two minute or one second, if, oh, Jackie, good.
It's not good.
You can do it.
Except do you have the patience or not?
And that's it. Thank you for coming. Uh, follow me on Twitter. Talk about trailers and post lots of cat photos on my website. I write about trailers I make. I also have a page with trailer submission specs for all the consoles and a weekly newsletter where I talk about movie and game trailers. And also please fill out your session evaluation forms. Do we have time for questions? Five? Four? Alright. If anyone has questions.
Hello.
Hi.
Can you talk a little bit about interesting trailers for UI driven games?
Like maybe card games or visual novels, things like that?
Right.
There are really, what I try to do, so I did a trailer for Lady Killer in a Bind, which is a visual novel, and what I did was, I actually kind of recreated the game's UI in After Effects in that case, just so I could take out the parts that I didn't want.
So if you can find a way to take out the parts that aren't important in the shot, that's something I would recommend.
Yeah, just taking stuff out usually. And then if there's like text, just really stripping down the text, rewriting it, whatever. Just make it so then that the reading is part of the trailer. It's not like text that you can tell that's not meant to be read when you're watching it.
Yes?
Hello.
I also do trailers, and it was great to see your talk and validated a lot of the stuff that we do as well.
But I just wanted to ask, you talk a lot about capturing, but not so much on the editing side.
If you were starting a blank canvas, you made a whole new trailer from scratch, what's your first step?
Do you do music first?
Do you do narrative stuff first?
So question is about first step to start editing a trailer.
It depends, if it's like dialogue driven, I'll start with a dialogue, like give me the whole crap ton of dialogue, and then I'll figure out that first, do the dialogue, and then next is music, and then the shots.
So usually the, but music first is usually what I want.
I want it to sound like a trailer as soon as possible, otherwise it's just agonizing to work on.
Absolutely, all right, thank you.
Yes.
Hey.
So obviously I'm sure debug tools are one of the things you ask for, but what's a list of assets?
Or do you ask for specific images in a certain way?
The original audio?
Or do you just get into the game and take what you get from there?
Yeah, the question, so what assets do you need for a trailer to get started?
Usually you say like a build, the music files, sometimes sound effects.
If it's a game with a lot of sound effects that are playing all at the same time and I want to be able to just pick specific ones, I'll usually ask for sound effects.
And then maybe like graphic design stuff.
And then we have time for one more question.
Is there a rule of thumb for the length the trailer should be?
Like a lot of them seem to be 30 seconds.
Yeah, I mean, generally game trailers tend to be 90 seconds or fewer.
But really, a lot of it's just the editing, too.
Like, you can make a trailer that is 30 seconds long, but if the editing's bad, it just feels like forever.
Whereas you can have one that could be very snappy, but it's a minute and a half.
So I usually just say, it's just as long as it needs to be.
But everything is better when it's shorter, usually.
Thank you.
All right, if anyone has more questions, I can meet you outside.
Thank you for coming again.
