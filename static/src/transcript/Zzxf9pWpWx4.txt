You have a cool idea for a video game.
It's been a while since you've been this excited about a project.
Ideas seem to flow out to you readily and you start to craft them.
Working on this game has been a lot easier than the last project.
You work on it for a while, happy with the progress you're making, but then you start to hit some bugs and some issues.
It's okay, persevere, no problem.
You do this for a while longer, but you slowly hit more bugs, more problems.
It's getting harder to keep pushing through them.
But when you start to notice, you could have done things a little bit better.
Now you're going back to go fix those problems, but you're uncovering more bugs and more problems.
Now you're trying to find that motivation, trying to rekindle that fire that push you to work on the project in the first place.
You sit there as your mind starts to wander.
And then suddenly, you have a cool idea for a video game.
Hi, my name is Charles McGregor, and I'm the founder and sole developer at Tribe Games.
And I personally have been stuck in this loop before.
It feels like you aren't making any progress on any of your projects or your skills.
And you're basically you're in a rut.
I want to tell you about my story of starting out in that cycle and then how I had a turning point that helped launch my career.
And what that led to, and hopefully this can help you make that leap.
But.
Before I even start, I do want to say that there is nothing wrong with wanting to just be a hobbyist developer or a hobbyist at anything in life.
You don't always have to try and make a living off of everything that you do.
And if doing doing things just for you is valid, you don't have to continue to try and pursue some type of financial gain out of this and such.
So I encourage you to keep doing that if that is your goal.
This talk is for those that feel stuck in a cycle of starting new projects, for those who want to make the jump from being a hobbyist to a professional, and even for those who want to switch things up.
So this is still for you.
But for me, when I first started out, I had the goal of I already had the goal of doing it professionally when I was like eight or nine years old, I.
I read an article in a Time magazine about a young girl who started her own bakery business.
And she was around my age at the time.
I didn't realize that you could do something at such a young age.
So I wanted to do that, but I knew I wanted to do that with something that I loved.
So I approached my dad and asked him, how do you make video games?
My dad is a computer scientist, so he sat me down and taught me how to code and do the fundamentals.
He bought me some software called Dark Basic. Yes, that is as terrifying of a box as you might have thought even back then. But he taught me how to do programming in such in all the basics that he knew.
And it was super cool that there is a thing that specialized in programming video games.
Bear in mind, I didn't know what a game engine was back then, but I was just so excited to keep on working on or work on video games in general.
He also bought me a 700 page book on Dark Basic that I attempted to read all of.
I would stay in bed when I was supposed to be when I was supposed to be asleep and try and read through all of the different chapters. I never ended up doing that.
But I was I was really excited about learning and working towards the goal of making games for a living.
As I was learning Dark Basic, I was reading the dedicated forms online where I found out that about Dark Basic Professional.
And I was thinking back then, oh, if I had a professional version of this software, then I would make better games.
So I pleaded with my dad to see if we can make the upgrade.
And I'm extremely fortunate to have like super supportive parents that I believe believed in me when I was really going full bore into into learning how to do development and all of the the crazy hobbies that I work on.
So he got the upgrade and I.
And I quickly learned that that did not help me in terms of trying to figure out how to make video games.
A quick aside, upgrading to get the pro version of something should not be your first concern when you are starting out.
I had started out making small projects, but I never actually finished anything.
I would get to a point where I had some technical problem or lose motivation working on a game.
I would work on, I would start working on a game.
get a ways in, but then find that, oh, there's something that I could have done better or something that has taken my interest elsewhere.
And then I wouldn't actually complete the video of the video game that I was trying to do, because finishing a game seemed like a task that would always take years to complete.
When I became discouraged, I would factor that in and then be the move on to another project.
And when I did move on, I felt like I've always, or I needed to work on something harder because it needs to move, or because I felt like I needed to move forward in developing my skills.
So I started to work on a game called Emerald, which was initially small, but I started working, which was initially small for a while.
But then I started working on another game with my friends.
Unfortunately.
That game petered out.
And then I attempted to go back to the first game, but I lost the drive and motivation to work on that because I was hitting technical problems and I didn't want to work on old, old code.
But I knew I I knew I could have done things better, so I didn't want to go back.
So the list of games that I didn't finish and grew and grew.
Eventually, I made the switch over to Unity.
seeing that I would be able to make games for multiple platforms, where I would be able to, and I had what I consider one of my most productive summers, where I learned Unity, I learned 3D modeling, I learned Blender, I learned more about music production, I started working on a new game.
And I was extremely excited.
I was I was really into the process of learning new things.
But with all of that.
I still didn't finish again.
I was getting frustrated as I was not finishing games that I started, and this went on for years and years.
This started out since I learned about Dark Basic back when I was a kid in the middle of high school, still trying to figure out how to finish games.
As I was learning more and more about Unity and starting and stopping projects, of course, I came across a Unity forum post that told me about, told a story and the post was called The answer to every, can it be done, and I've lost my way post.
The post starts out with a more whimsical take on what I led the talk out with.
The journey of someone who followed the sound of an ambitious project right away.
How it led them astray and losing that drive to keep working on that project.
After that anecdote, the post goes on to talk about how the poster's wife said that he has been messing around with this prototype that he's been working on for too long.
And he needs to finish whatever he was working on.
After getting a bit defensive, his wife replied, build something in six weeks, anything at all.
so long as you finish it.
Knowing he couldn't finish it in six weeks, he said, give me eight weeks.
It took him nine.
He shipped the product out, admits it wasn't the greatest, but it was finished and for the world to see.
It flipped a switch.
He started to actually finish projects.
And in and in the four years preceding, he had released nine products out on three different platforms, along with a slew of other great accomplishments and personal achievements.
I totally wanted that after hearing that I wanted to be able to finish games, I was like, Oh, that sounds amazing.
But the problem is that I heard all of that before.
I heard you need to start small or don't work on an MMORPG as your first project.
The problem is that I thought I was following those guidelines already.
Instead of doing the 3D hack and slash idea that I had wanted to make, I started out and lowered my scope to a 2D Frogger game.
which is smaller.
But after initially paring down the size, I let my mind wander to more and more things to add to the game.
Add in multiplayer.
Add in an in-game level editor.
There was some arbitrary limit that I thought of that needed, oh yeah, we need more environments.
Actually, we need two more environments.
Let's add characters and add a story behind it.
Ah, but you know what else we also need?
We need to update all the art.
And then we should also add some more environments, because clearly there's not enough environments.
It's not actually a game yet if there are not enough environments.
And then I and then the the crowning achievement is instead of working on what I already had, let's make bigger levels.
Now, the list goes on and on of things that I started adding and adding and adding to the game.
But. I, I was never stopping in adding new features.
The post hit me because I was him, I toiled away on a game for a while, but then I didn't finish it.
I kept going and I didn't know when to stop.
Or I didn't know when to stop adding features.
Or the game was already too big in some of the earlier versions of games that I started.
But that post came at a great time.
I had the opportunity to make a small game for a school club fair that we were trying to showcase our work at the catch.
I had two days to finish it.
Perfect. The game had to be complete.
It had a deadline.
So I started to get working on it.
The work the game needed to be flashy and easy to pick up and play, but it ultimately needed be finished in two days.
So I was inspired by one of my favorite arcade games, Geometry Wars, and I started work on glitching the system.
It was rough, but it was completed.
And I showed it off at the event and it went amazingly.
Sure, there were some bugs and it wasn't the most balanced game out there, but there was something that was actually finished.
And from after that event, I said, OK.
I'm going to polish what I already have.
I'm gonna release it and I have two weeks.
I'm giving myself a two week limit.
So I started working and polishing and I said I had two weeks.
It took two months.
I wanted to make sure that I didn't add in new features but I still added in some new features.
I did add in a new enemy and I added in some power ups.
But for the majority of that, I was only adding in polish.
And discovering that adding in polish took that much time really helped put things in perspective.
And about eight weeks later, I finished.
I was done.
I remember when I put in the last line of code.
I remember when I used that 3D modeling experience that I learned that one summer to help make the trailer.
I remember sitting there after releasing the game on my website, thinking to myself, I did it.
It was a surreal experience, because I've never gotten to that point where I got to the point where I could say that, hey, I actually finished.
And with this, the floodgates opened.
Glitch in the system opened up so many doors that I didn't want to take them for granted.
I had the opportunity to port the game to a mobile RIP Windows phone.
I was able to get my first paid gig because of it.
I was able to do some of my first public talks because of because of glitch in the system.
I won my first award because of a game that I made, which is absolutely insane.
And I can't believe that that's the case.
So with that, I was able to keep that momentum.
I started to understand what it what went into finishing a game because I now had experience of doing it.
Sure, it was a small game.
But the ending to development was no longer a hazy area.
It no longer was, oh, this automatically takes years and years because it's a video game.
So I was able to start working on projects that were much more reasonable in scope.
And I understood what caused my games to blow.
I better understood what caused my games as well.
Adding new features every week would tend to do that.
So, yeah, I didn't want to jump into any bigger project than glitching the system right away.
I wanted to continue learning from smaller projects and smaller game jams.
Smaller projects went where that's where I learned about game jams, where you have a set amount of time to finish games.
This helped me make more progress in learning and growing as a developer.
I was able to do my first my first contract job.
because of glitch in the system, as I mentioned.
I was able to work on my first VR experience with the Minnesota Orchestra, which is insane to think about.
I did my first game jam with friends, where I was able to experience in a short amount of time the creation of a polished, what I consider a polished experience.
And then on top of that, I also worked on my own solo game jam.
So I continued down this path, working on more smaller games that helped me get better and better.
And now all the games that I've worked on from then on out did see the finish line.
And you know, it's okay if you don't finish some games.
But it became less about about me running out of steam on those ideas, on those games, but it's more on, oh, these ideas are not working out.
So after doing this about two years, I had about eight projects finished of varying sizes, which is a stark contrast to what I had done before.
So this ultimately led me to my biggest solo project I had taken on.
A project that was born out of similar constraints from my first completed game.
I had four days to complete a game that was going to present to a class that had nothing to do with video games.
This led me to start work on HyperDot.
I applied what I learned from all the other projects that I had worked on from before.
And I scoped it to what I thought would be reasonable after showcasing or after doing the presentation for that four days.
I'd scoped it to what I thought would be reasonable to be done in about six months total.
It took nearly four years.
So yeah, it doesn't always work out perfectly every time.
But I still ended up finishing the game.
I was able to practice what I've learned from previous projects, and I limited my scope early.
And I had clear goals.
And even though I fell into some of the same trappings as a project like my first project, the difference was that I had much more experience dealing with each part of the game so I could figure out the size of the endeavors that I'm going into.
So, yes, HyperDot also has multiple environments.
It also has more mechanics, adding in an in-game level editor.
But I was more comfortable comfortable working on those because I was able to experience them from previous projects or my past finished games.
So with that, in the end, I was able to actually make a game that I was immensely proud of.
A game that I stayed true to the original design pillars of. A game that I finished. HyperDot was partially made so I could prove to myself that I could finish a game that was bigger than Glitch in the System.
that I could express myself through mechanics, design, music, and art of a game.
But HyperDot became much more than just the game.
HyperDot, I hold HyperDot so close to my heart because I was able to fulfill those childhood dreams that I had all those years ago.
I was able to do things that I only seen on a TV or a computer screen.
I was able to meet people that I followed for years.
I'm able to do this very talk, and I was able to finish a game, point to it and say, I made that.
And I'm really proud of that.
OK, so you're probably tired of hearing me wax poetics about my story and whatnot.
So with all that said.
What can we take away with all of this?
When you feel like you are getting nowhere in your projects or you're restarting all the time, when you feel like you aren't making progress and getting better at development, when you want to take the next step, try to finish a game.
It doesn't matter how small you think that idea is.
Go through the process of releasing a game.
And when I say releasing, releasing doesn't only mean put it on the store.
It could mean that, but it also can mean just post it on a form or share it with your friends and family.
It doesn't always have to be publicly available to everyone.
Just go through the process so then you can better understand the scope of all of the things that you're trying to do.
for future games.
And I know that you have probably heard this advice before, because I heard it before before that forum post, which is try making a small game.
But sometimes it's hard to figure out how small you should make it.
So. Try putting a time limit on the developments.
Try putting a time limit on the development and add a stopping point after two months.
or one month, or even one week.
Try making a game that you can finish in that time, include releasing and whatever releasing means to you.
Try doing a game jam that would add a lower pressure.
So you have 48 hours to make it.
And because it's only 48 hours, it doesn't have to be the greatest thing since indoor plumbing.
It can be what it can be, what it is for the 48 hours.
It can be creative or expressive.
But as long as you try and finish the game.
And I know that you really want to work on that dream project of yours.
that idea that seems a little bit too big, or just it seems like, oh, this is the thing that is motivating me to work on the game.
Try, before you do, work on that.
Hold on to that idea.
And try and make a smaller game, multiple smaller games, that can teach you how to work on that big game.
Try pulling out that cool art style that you're thinking of, and then work on an experiment or a prototype or even a finished game.
on doing that.
Try pulling out that mechanic or that the sweet audio ideas that you have and do those on separate projects.
That way, when you do go back to that big idea, it's more refined because you have that idea of what you have a better idea of how this entire game will be scoped out.
Because think of it this way.
Think of the first time that you did something that you do regularly now.
Think of the first time that you played a game or you drew a doodle or played an instrument or ran a race.
Then compare that first time to where you are now.
To see how far you have come, apply that to apply where you've, the growth that you had in that hobby or that.
that thing that you're trying to compare to.
And then see where that you can apply that to your dream game.
The big game will still be there.
But if you had all that experience doing those smaller things the big game will be better and better in quality because of how you build on all of your information and knowledge from those small games.
Which lands on the last point that I will mention is that it's OK, not being it's OK for whatever you make to not be the greatest thing.
I will admit glitch in the system wasn't the greatest thing ever, but it was fun, but it wasn't the greatest thing ever.
But I learned from my process of making Glitch in the System.
And you can learn from your process of making whatever project that you're working on so that next time you can be back.
Now, none of these things that I've mentioned are guarantees.
Some of these things may work for you.
Some won't.
Some, maybe none will.
But I hope that at least this starts you in the right direction.
My goal is for the my goal for this talk is for this to be someone's forum post.
For this to be something where you've heard this at the right time, when I heard that advice, when I saw that forum post.
I I already heard that advice before I got what that advice meant, but I didn't understand and internalize what it meant until that moment.
So you may have already heard this advice before, but I hope that someone hears this just at the right time so that they can make their jump and their leap.
All right, and with that, thank you so much for listening to me ramble on and on.
You can follow me on Twitter, at Tribe Games or my personal account, at DarkAceTG to keep up with whatever I'm doing.
And thank you so much for taking the time to hear my story.
And I hope that this talk helps you in some way.
