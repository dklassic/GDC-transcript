Hi everybody.
Thanks for coming down. I'm Patrick Redding. Before I launch into this, I'm supposed to inform all of you at five o'clock on day three that you're supposed to turn your mobile devices off at this point.
I assume most of you have already done that.
No videotaping or recording of this. That's a prerogative reserved for the folks at GDC who are going to be doing that.
And I think other than that, if you have questions at the end, there are microphones that are set up in the aisles, so you're encouraged to use those.
Okay.
So I want to talk about a problem we have with lost time.
And to be clear, I'm not talking about this kind of lost time.
It's only Wednesday.
Maybe by Friday, this will be kind of more relevant.
I'm actually talking about the player's time.
And in the spirit of this, I'm going to back up a bit.
When a developer has put on a few years and has maybe shipped a few mass market games, they will at some point invariably have some version of this conversation.
Why do we have the genres that we have?
Why have mass market games kind of settled into this particular landscape?
And the answer to that is some variation on this.
It's to maximize the production values and constrain the design space.
So AAA games.
which also need to be legitimately interactive, are expected to meet kind of steadily escalating expectations in terms of sensory immersion, in terms of accessibility, in terms of visual quality, and the like.
designers also need to be able to limit the range of the game's outputs and minimize the amount of energy they spend dealing with edge cases, you know, dealing with the player colliding with the edges of the simulation. And so there are only really kind of a few sort of games that meet both those criteria. But to be fair, there are also plenty of games and quite a few developers, including I imagine a few in this room, who are who have managed to challenge that point, challenge the first point, kind of say that the AAA emperor is wearing no clothes, etc.
But what about that second point?
So if you haven't seen it in the sort of critical path segment of many kinds of combat, Alex Hutchinson talks about the fact that, you know, one of the reasons why...
game franchises, genres have settled into the kind of preoccupation that they have with combat and life and death struggles, is because we can't underestimate the value in taking people out of play and taking people off the board.
When you let the losing guy stick around, it generates this kind of cascading series of problems that you then have to manage, like, well then what happens after that?
What happens next?
Whereas when we go with kind of existential conflicts, we're able to really limit and constrain the scale of that problem and give us, the designers, but also the player, kind of a reset button.
There's another facet to it.
This is Jesper Juul, who wrote a book called The Art of Failure and has spoken extensively about this.
And he points out that over the years, we've also kind of trained up a generation of players for whom this is fun, right?
Like dashing yourself at the kind of groundhog day cycle of trial and error is a kind of fun, as long as the refractory period is short enough, right?
And so we're at the stage now where we're even starting to make games that are offering a commentary about the fact that people find that sort of thing fun.
So, this is the prevailing model of failure that we have right now.
I'd like to tell you that this is some kind of elegant step function, but actually this is just a cliff.
You fall off the failure cliff.
right? And it's a frictionless, unclimbable cliff, and the game state collapses into something that the player isn't capable of reversing. Alright, so let's say that this weird shape represents the kind of sum total of the possible states supported by the game simulation, right?
This isn't really a very rigorous or scientific model, but it's simple.
Every time, enough time passes and the player will eventually cross the magic threshold that tells the game that it should return a failed state.
So there's an interrupt, the game resets itself, and the player respawns.
Now what's interesting about that is that big orange dot that you see over there on the far left, sits outside of that state space.
Why is that interesting?
Well, because what it means is that ultimately the cost of failure is external to the game.
Think about that.
I'm going to be willing to bet that most of the people in this room put some kind of premium on the consistency of the player experience.
But what we're saying is that this one very critical recurring aspect of the player experience, namely failure, incurs a cost that can't possibly be measured.
Because the value of a person's time is completely dependent on who they are and the kind of life that they live.
It depends on...
a number of things but it's safe to say that even if they're playing the same game that the cost for this guy is going to be different from the cost for this guy.
But that's what we have right now.
And implicit in that is a kind of bargain that exists between the player and the game, right?
Which says that in return for submitting themselves to this binary failure model, players have an expectation that they can evaluate the risks associated with the actions that they're about to take.
And also that they have enough of an understanding of the game state that they can kind of manage its complexity, they can plan for it.
In other words, the player says to, the game says to the player, I'm winnable.
Now, we also have to acknowledge, and this is great, right, that in recent years there's been a shift.
You know, we've seen new games all the time that are challenging the established assumption about what happens when a player fails.
But we can think of these as approaches that are trying to kind of sweeten the deal for the player.
Right?
They're still dealing with the currency of player time, but doing it in a way of, that's kind of, it's because it's a way of offloading the problem.
So trying to apply some multiplier to the failures effects on the game and make sure that it's worth more than just lost time and also at the same time start to bring back some of those consequences into the game state.
So what are some examples of that?
So we see in kind of persistent world games and in MMOs this kind of commitment to the idea that your resources are recoverable.
Your stuff has a persistence in the game and that generates its own kind of tension.
You respawn and it immediately turns into a race to try to recover what you may have dropped before it slips into the lava, as it were.
Some games...
give the player a mechanic for managing the cost of their own potential failure while still staying within the kind of narrative logic of the game, or the metaphor of the game, and then tweak it to make sure it doesn't become an exploit.
You know, and we've seen an interesting evolution of that. You saw that between Bioshock 1 and Bioshock 2, uh, something happens with the Vita Chambers, you know, so when you use them, there's this kind of reset factor to what's going on with the rest of the world, and it becomes a way of preventing the kind of grind of going up against big daddies in these sort of boss-like moments.
In sports games where you have an ongoing dynasty mode, or in any squad game where the player is managing and investing in a rotating roster of player characters, there's this interesting effect where as a particular character gets better and better and becomes more of an asset to the larger goal, the player's own sense of investment causes them to second guess their use.
So it's that problem of you start to become overly protective of the one guy that can make a difference in the battle.
You don't want them to get killed, you don't want them to end up on the injured list or dead.
It's a very strange phenomenon with that.
I think it's also interesting we have games which are very transparent about the fact that when the player fails, it's kicking off a completely new mode of play.
It's basically, you know, if you're playing Max Payne 3 or you're playing Borderlands, for example, and you get killed under certain circumstances, the game simply stops everything and presents you with a mini-game of trying to track down the person responsible for your death and take them out in order to kind of recover the right to continue with the game.
In a game like SSX or Forza, there's a rewind feature which, you know, becomes increasingly valuable the further into the session you are and potentially allows you to recover that loss without having to completely restart everything.
And then still other games establish an entire resource, practically, around failure.
The idea that as you're grinding your way through things, you experience this kind of specific loss.
Loss of humanity in Dark Souls, for example.
And of course we're seeing games like Rogue Legacy which kind of bring combinations of these strategies together, right?
This sort of recoverable resources linked with the uh... the kind of upgrade loss uh... in the form of your heirs who inherit some combination of these things in a modified way uh... is kind of the very essence of that game.
But these are all strategies ultimately for keeping the player from running away with the game.
Keeping them from colliding with the limits of the simulation.
But hard failure conditions, no matter how you slice it, are kind of inelegant.
I mean, there's specific circumstances in which they just flat out don't feel that great.
Like, for example, in multiplayer games, the session must go on.
It's not going to stop just because one person dies.
So guess what? You're going to have to deal with that.
That's why we would like to look at how to bring that player mitigation back into the fold of the core game experience.
We want to expose the player to survivable changes in their immediate situation from which they can then find their way back to something stronger, something more sustainable.
So think about why a player spins out in the middle of a race.
it's because they're doing the thing they're supposed to be doing they're driving fast, they're driving as fast as they possibly can, they're driving too fast which is really what they should be doing and what they're doing is they're going so fast that they're exceeding the performance envelope of the vehicle that they're driving or their own skills you know and so depending on some other related driving skills that might be fine that might be the opportunity for them to kind of rest control back of the vehicle and get things back on track with a minimal loss of momentum.
Sure, some players, depending on what their motivations are, trying to beat their best time, they're going to stop and reload and go back to the beginning of that.
But for a certain core group of players, the important thing is that they've maintained the continuity of that experience.
This is the function of a setback.
So when we talk about setbacks, just to be clear...
You know, these are arising out of the game's low-level mechanics.
It's not something we design into the map.
We're talking about something that is not a forced mode change, it's not an exotic gameplay sequence, it's not a scripted moment where Nathan Drake is tossed out of the back of a cargo plane in mid-air, even though that obviously fits the narrative definition of a setback.
That's not what we mean.
We're talking about a prolonged period of gameplay.
And it arises from the same systems that the player's using the rest of the time.
It's preventing runaway behavior, but it's still allowing play to continue, survivably.
And it's perceptibly altering the state of the game in some meaningful way.
It's interesting.
So this experience, if we want to think of it aesthetically, is directly analogous actually to going through a reversal in the kind of traditional narrative sense.
It yields that water cooler anecdote moment that's completely the player's own.
So there I was.
But dynamically what it means is that the system defined by the player and the game interacting at runtime is able to absorb serious shocks and recover without interruption.
It's resilient in the way that economists typically use the term.
So what we want to do is we want to replace the failure cliff with something a little softer and a little more reversible.
Something that follows a bit more of the kind of stimulus response curve.
And that kind of behavior emerges from having a feedback system that prevents the player from progressing unimpeded into meaningless degenerate end state, while at the same time plucking them out of that, kicking them back into a more volatile game condition in which success is by no means ensured, but without driving them to the point where they rage quit.
my idea, this isn't new, it was established by a lot of different people including notably Clint Hawking in his 2009 talk on improvisational play which was entitled appropriately enough fault tolerance. And in describing the player's experience on Far Cry 2 for example which was this kind of friction generated by systems like malaria, Max is laughing at me, weapons jamming, fire, propagating fire, all these various other functions, the player is really getting hit with these kind of small inputs.
And they rarely die from these events, but it's unpredictable, right?
It forces them to adapt.
And it's exactly because they are small and unpredictable that the player doesn't feel this kind of compulsion to quit and reload.
So, just to quickly illustrate the difference between what a failure is and a setback is, if you're flying in a helicopter and your main rotor goes out, that's a fail.
If you're flying in a helicopter and your tail rotor goes out, that's a setback.
So basically, you now need to look for a place to land as soon as possible.
You need to modify the way you're using the helicopter to sort of rely on auto rotation.
And you need to somehow get the thing down without loss of craft or crew.
OK, well, that's cute.
But we need a more formal definition than that.
So a setback needs to disrupt the player's focus on their current low-level activity.
It also needs to revise the player's awareness of the game's state or context.
In other words, a setback can be defined as that moment when the player's immediate goal changes unexpectedly.
That says that setbacks are built out of the switching off between what the player thought they were going to be doing...
and a new priority that's absolutely critical to the continuation of play.
So if we can work with that definition right away, we can start to understand the scope of potential setbacks in terms of a broader system of player goals.
So, luckily, there's a lot of work out there that establishes general taxonomies of player goals, and the good news is they're mostly pretty finite.
Lots of people are already familiar with Bjork and Halperin's patterns in game design, so I've kind of adapted the list that they use.
There's 13 goals that they talk about.
This is them.
Yeah, there they come.
I've re-termed them a little bit to put them in verb form.
But out of these 13, what's interesting is, if you just start with the transitions that go from a single goal A to a single goal B and from that same goal B back to goal A, because for our purposes, those are distinct, out of those 13 goals, you're going to get about 650 unique transitions.
A little more, a little less, I don't know.
That's not too many.
And out of those, we only really care about the subset that's systemic, recoverable, and interesting.
but also the ones that keep the player in the sweet spot between wanting to quit the game and trade it in or being so inconsequential as to get lost in the noise of moment-to-moment challenge.
So that's an interesting model, but it's still too abstract.
I want to try applying it to the types of games I'm the most familiar with.
So I want to look at the stealth genre. I want to look at failure in stealth games, which typically looks like this.
So classically, stealth games have relied on four key pillars.
You've got the fragility of the game state, the fact that the game starts the player out undetected by the game's ecosystems, and the player's challenge is to try to preserve that state moving forward.
there's the fact that that ecosystem is a simulation, right?
It exists independently of the player.
It's analog for the most part.
So the player needs to use their intuition, their observational skills, in order to read the AI, in order to read the environment and understand the gameplay potential there.
And the player is really incentivized to do that by the fact that they're not very powerful, typically, in the kind of classical model.
The game imposes, often, survival horror levels of scarcity in terms of resources, in terms of ammunition and health and all of the other resources at the player's disposal.
And if they do get into a fight, they're better off running away, typically.
Now the flip side to that...
is that if these games are richly systemic as they often are, they're typically pretty high agency.
Players are afforded a lot of tools and opportunities for playing with the AI and finding creative solutions to get through a problem.
Now, the classical hardship of stealth, though, was always that almost anything the player does disturbs the system.
And once the player falls off that, what's called the detection cliff, it's hard to support many ways for them to continue moving forward.
It forces the player, ultimately, to be a perfectionist, sometimes literally by returning the game over if an alarm is tripped, or, at best, forcing the player to make a run for it.
So...
The early solution to that has been to go through some kind of strange contortions to limit the player's exposure.
That leads to some sort of arbitrary level design solutions like resetting the AI after each section.
And that doesn't really encourage experimentation.
So that model of stealth maps to these kinds of goal transitions.
So this is classical stealth in terms of goal transitions the way I was describing it.
So from this initial state, the player either needs to explore the world in order to reveal the various objectives available to them, or maybe because it's on some kind of formal mission structure, they just need to get from A to B.
They just need to get into the mission space.
And then from there, they need to align themselves to be able to go through a collection of objectives, some of which are probably mandatory, some of which may be optional.
And the main disruption occurs when they come into first contact with the enemy and have to get past them undetected.
They need to paint some kind of picture of the state of the game and understand where the enemy is at and what they're doing.
Which leads to, usually, some fairly trivial goal shifting, either to realign or to maybe get to some kind of safe haven.
And this is notable because for much of play in this kind of game, doing nothing is actually a really good strategy.
And the player has these kind of extended periods of stimulated planning.
Not exactly action-packed.
And when there is a major setback, frankly, it almost collapses the game entirely, and assuming that it's not a straight-up game over, the player's probably booking it.
Okay, so what we'd like to do is let the player recover from those kinds of situations and restore the game to a condition where they're hidden, where they're back to being stealthy and they're doing what they like to do.
And we want them to be able to do that systemically.
Jamming open the detection window by preventing a single instance of the AI from wrecking everything and from propagating that detection to the rest of the world.
We want to assume that if you're some kind of elite spy or thief or assassin or hitman, that you have it in your ability to take out that one stupid guy that's going to sound the alarm and kind of climb your way back up the detection cliff in order to get into a state of stealth.
Alright.
So for the rest of the talk, what we're going to do is we're going to kind of...
go through and look at kinds of gameplay models that are doing what I'm talking about.
We're going to look at recovery dynamics.
And there are a lot of different ways that players try to modulate their ability, sort of the games try to modulate the player's ability to recover.
And when we look at them in terms of goal transitions, it starts to become clear which strategies do a good job of exposing the player to good setbacks.
And which ones don't.
The Save Anywhere model is going to be familiar to anybody who's been playing a lot of Skyrim on PC.
Right?
You've been writing the quick save, quick load buttons, you know.
This can be satisfying, I mean, it's in its own way, but make no mistake, it degenerates the game.
Right?
In terms of our model, it effectively reduces any situation in the game to incremental experimentation.
And that is a valid way to play that game.
But it does quickly hollow out whatever sense of context the player has over time.
And it renders it mostly inconsequential in the context of the game.
Unfortunately, the console-friendly flip side of that doesn't fare a whole lot better.
In this case, the player in a corridor shooter simply has to endure the designer's intentions and reach the next trigger volume.
In fact, they might not actually have to do anything else.
They might not have to fire a shot.
Again, that act of traversal to get from point A to point B effectively collapses the game into a challenge that totally undermines the mechanical tension.
So another solution is for games to deliver what's really kind of a thousand foot view on the game world, accompanied by kind of a rich information layer.
If you compare Clay's Mark of the Ninja with, for example, Dishonored, two games that share several core mechanics, the side-scrolling format means that players can see exactly what part of the world they can disturb.
And they have a lot of UI tools for monitoring the state of the AI, even when they're obscured, when they're hidden behind a wall or a door.
And when something does happen that disrupts the player's intentions, it slips the game back into a goal of alignment.
And so this has a kind of interesting effect.
It sort of, having such a complete tactical picture of the world around you effectively turns the game into kind of a strategy game, even though it's, you know, it's this 2D side-scrolling platforming stealth experience.
And you know, Mark of the Ninja is a hugely satisfying game.
It just, it happens to rely on a different mechanism in order to deliver.
that sense of setback. It's not coming from necessarily a lack of information the way it would in a more immersive style of stealth game.
And plus which, because of the format that it uses, there is a more rapid turnaround when you fail and need to reload.
So it isn't punishing in that respect.
You know we talked earlier about how we put a premium on the consistency of the player experience but some games will change the rules on the fly as a hedge against players selling short when the chips are down and so they basically stated that that consistency is not as important as trying to keep the player in the game and that's a valid choice.
You can sort of see the carrot version of this with fighting games that feature damage scaling or some kind of desperation mode.
And ultimately, what happens is the player learns over time that the trick is to absorb punishment until the game delivers them the means of recovery.
And the effect of that is, again, to reduce the sense of consequence to the game.
The stick version of that can be seen in games that use some kind of token-based damage system so that players that are in an otherwise skill-based game can end up suffering certain kinds of setbacks deterministically.
So to use a stealth example, AI enemies in the Batman Arkham games who will start targeting destructible gargoyles in challenge rooms as a way of interfering with the player's ability to maneuver and use the kind of Batman swinging around.
Well, the mechanism is the same, but actually the player's perception of it is the polar opposite because in their view the game has taken something away from them and now it takes them time to get it back.
So in that case, the perception is that it's pushing against them, it's frustrating or foiling their attempts to do the thing that they want to do.
So those kinds of tweaks need to be applied conservatively.
So I want to talk for a second about the example of Dungeons of the Endless.
This is interesting, right? We have this sort of roguelike experience where the players need to manage limited resources in order to get to the exit, if you will, of the current section that they're in.
That's pretty straightforward.
What spices it up is the fact that then we have these additional rooms that are kind of these mystery boxes.
And the risk-reward trade-off is by opening some of them up, you can potentially add to your resource pool, but you can also unleash additional horrors on top of the ones that are already standing in your path.
And so this generates a fair amount of tension in a very simple way.
Now what's interesting is the simplest kind of tension economy is really just in a sports game.
It's when you have two teams that are both scoring points at the same time.
So this type of approach applies to a number of different games. It's very interesting to see that it crosses a lot of genre boundaries.
That kind of simple Red Queen scenario, with the kind of moving goalposts, forces or pressures the player to switch goals when the point deficit between them and the other side gets too big.
So that would be what we'd call a single-axis tension economy.
The points can go up, the point spread can go down, but whether I have four points or twelve points...
matters only in terms of how many points the other side has.
Right, and so that sets the context for the game.
What that means in terms of goal transitions is that it forces the player to abandon the kind of luxury objectives, you know, the collection of objectives you kind of see on the far left over there, in favor of the most expedient goals, such as taking the opposing force out of play, or going all-in on the main prize.
Now...
you get a more nuanced output in tension economies when you add a second economy that just consists of time that's slowly chipping away.
So you can take a game like Rim Capsule, which is real time, the player has to watch the clock, they're frantically completing all of these critical tasks.
you know, building their bases, scanning their monoliths, all the stuff that they gotta get done within 45 minutes.
And then just waiting for that exact moment to like pull back into defensive positions because the next big wave, increasingly large wave of enemies is gonna come in and try to mitigate the effects of that.
It works in a turn-based game as well. So you can take Invisible Inc., the game formerly known as Incognita, and every time the player's little team of spies makes a move, it's depleting one little tick from this kind of finite pool of time that's available to them to complete the mission. And so when it hits zero, the whole map goes into alert, and suddenly the reinforcements show up hot on your heels. And so this puts an interesting counter-pressure on the player, where they have to decide how greedy they want to be.
They have to decide how many of these juicy optional objectives that are available to them they want to try to go after.
And of course they're willing to overextend themselves a little bit each time when they know that the SWAT guys are coming in through the main doors and are going to chase them down to the exit.
And so, with the addition of that second economy, it kind of brings the dynamics of the game more fully into view.
And what you're seeing is that it adds this layer of suspense to the player's decision-making, because it's no longer feasible for the player to succeed just through simple attrition.
That's interesting. So let's look at games that offer a kind of level playing field and symmetry between opposing sides.
This applies to everything from head-to-head fighting games, to sports games, to some MOBAs.
And what we can say is that table turning, as we're going to call it here, becomes enabled when the sort of mid-level, kind of minute-to-minute play between the two sides consists of them being engaged in a symmetric, back-and-forth contest of control over territory.
And then that's driven or enabled by this low level or second-to-second gameplay that's basically kind of like rock-paper-scissors contests between individual units, but it's perturbed or spiked by short-term power-ups.
So that's what's kind of driving this.
And what comes out of that is that the player's immediate focus, both the player and also his opposition, which is kind of a mirror image of him, is shifting back and forth between goals and counter-goals.
Goals and the goals that are designed to block those goals.
And the opposition is doing the same thing.
And this is relevant in talking about stealth games because it powers this kind of ongoing role reversal that you get between the hunter and the hunted, particularly in games where the AI is operating with a fairly strong enough perception model.
And the same conditions that allow the player to break line of sight with the AI and remain hidden are also depriving the player of a full picture of the game state, of the game world.
And it's making it risky for them to move out of hiding because the wrong move could bring them into immediate close quarters contact with an enemy and alert the entire space and cause the situation to flip itself.
you get interesting setbacks emerging when the game dynamically plays with the amount of space that's actually available to the player on the fly.
So in GTA, this happens because the verbs available to the player, when they're driving anyway, are all really designed to increase the localized amount of chaos in the world, the amount of destruction that they're putting into the world.
And that becomes a magnet for this sort of aggressive law enforcement response.
And we all know how that ends up, right?
You get this cop car dog pile that results in clogged roads, and the roads are already hard enough to drive through.
It triggers this immediate goal transition where the player has to switch from paying attention to all of the various mission objectives they may have had active at that point to realigning themselves around just stealth and hiding in a car and eliminating enemies and trying to overcome.
the kind of amassing numbers of vehicles that are getting in their way.
And it's forcing all these snap decisions and maneuvers until things are getting progressively more claustrophobic and clogged and clogged and clogged, at which point the player of their own volition entirely elects usually to make a mode switch. They abandon their car and they take off on foot, just like in real life.
By leaning heavily on the destructibility of cover, Battlefield 4, for example, can set up conditions where the players who are taking the smartest tactical decisions, they're moving into buildings that afford them a good line of sight on their enemies and creating excellent fire positions for them.
So doing are, of course, becoming huge magnets then for return fire, which necessarily creates this disproportionate effect when the entire building comes crashing down.
So through that small action, that seemingly intelligent move from a tactical point of view, that player has set off a chain of events that results in this kind of massive reformatting or restructuring the battlefield space.
When we look at stealth games, we can see that this approach approves these interesting setbacks just by flipping the dynamic lighting state of the game.
So in other words...
you leave a dead body lying around, the AI gets disturbed, the next thing you know the lights come on.
So what's interesting about that is that area denial does not have to rely on literally physically blocking the player, it can just simply be taking an area that was dark and now making it light and now it's not opportune for the player to move through that space anymore.
So with Civilization V and the transition to Civ V, there were four key rule changes.
that helped to power some very specific kinds of setback situations.
One, unit production became limited, became curtailed to the point where individual units became rather precious.
The second was that it became possible for an individual unit to lose a skirmish, to kind of suffer a defeat without actually being eliminated, you know, and need to kind of retreat and rest up and recover and remain in play.
There was also the introduction of the new hex grid, which increased the number of adjacent playable spaces in the map, and also the restriction of a single unit per hex.
So what those four rule changes ultimately did is combine to put a powerful increase in emphasis on laying siege as the primary mechanism of eliminating enemies on the map.
As in real life, laying siege is dependent on all of the elements of the siege holding the line, and that is jeopardized when a single unit is damaged and the player finds themselves tempted to withdraw that unit, because it's so precious, to a safe distance in order to be able to recover.
So the player needs to decide, they need to go through this goal transition choice as to whether they are going to focus on a collection of goals that are guaranteed to try to increase the survivability of the individual unit or a collection of goals that are focused on the success of the larger strategic action.
Very much consistent with the fantasy of playing strategically.
And it's worth noting that those kinds of sacrifices at a granular level are also matched in some games by supporting the player having to take much larger sacrifices.
In other words, being willing to lose large swaths of territory ultimately in order to win the larger war.
Now, I mentioned before in Clint's fault tolerance talk how exposure to potential setbacks was a characteristic of improvisational games.
The player is constantly moving back and forth between cooking up plans for their next action and then executing those plans.
And the game features lots of small sources of friction that combine in order to kick the player out of that execution phase and quickly back into planning and response.
Far Cry 2 provides an interesting case study on how that unfolds in a stealth game, but it was also an explicit part of the design challenges on Splinter Cell Conviction.
The creator director of that game, Max Bland, who's actually sitting in the front row if you guys want to wave at him, one of his stated goals was to equip the player with multiple ways out of situations, and that led to the establishing of kind of these three gameplay axes with the intention that players can be impeded on one or maybe even two of these axes and still have at least one avenue left for pulling off a clever escape.
So those axes are 3D navigation, infiltration, and combat.
And so when we look at the outcome of adding that focus on having ways out and offering multiple axes of both input and output for the player, what that does is it kicks the player into goal transitions more frequently, and some of those goal transitions exist on top of what we would consider to be the classical stealth loop.
So that extended loop is when the player gets into trouble with the AI.
The new loop was termed Prepare, Execute, and Vanish.
And you can see that at each of these stages, Prepare, Execute, and Vanish, we're talking about a specific set of goal transitions that allow the player to first move from an act of reconnaissance, keeping eyes on where the targets are, where the enemies are, being able to then take action to deal with them, either in an aggressive way or in a more stealth-oriented way, and then ultimately regaining the state of being stealthy or hidden.
And the team introduced new mechanics specifically aligned with the PEV game loop.
So they let the player mark enemies in order to keep tabs on them as they moved around the environment, even if they were obscured.
It gave them the ability to eliminate those marks if they earned that token through taking stealth takedowns.
And it also let them see their last known position, giving them insight into the AI's thinking and planning, and creating opportunities for them to lay ambushes or set traps.
It's important to note, and I'll talk about this a bit later on as an important feature of setback generating, that those mechanics were not simply added wholesale, but they were kind of nuanced expansions of existing features of the game that retained that kind of deep, rich interconnectedness with the other mechanics of the game, so that it wasn't going to undermine the player's ability to use all the various tools of stealth, but was designed really to be added onto that.
The general lesson from improvisation is that games where setbacks emerge along multiple axes can also provide players with an opportunity to adapt or adjust their approach along those same axes.
And we talk about ways to challenge or impede the player along specific axes, and that gets into the idea of having orthogonalized ingredients in the game.
And in this case, I'm going to talk specifically about orthogonalized enemies.
So Left 4 Dead, for example, uses specific versions of the infected that are designed to exploit the routine moments of vulnerability that bubble up for individual players, often creating moments of jeopardy that can then drive cooperative support.
Very much part of the co-op dynamic of that game.
But also Left 4 Dead's AI director creates the right level of unpredictability to the infected hordes and the appearance of specialized infected.
You know, in Gears of War's horde mode, you can kind of imagine the ideal playthrough for this.
It's like the players spend just the right amount of time setting up fortifications.
They spend just the right amount of time running around collecting ammo and picking up guns they think are going to be good.
And they get back into their defensive positions in just the right amount of time to sort of plan their strategy and just before the next wave of enemies attack.
And the reality is that the surprise appearance of kind of heavily orthogonalized enemies into that mix typically has the effect of tipping that apple cart over, right?
You know, suddenly, okay, our plan didn't account for that particular enemy showing up and burrowing his way up through our ranks.
And so now we have to deal with that.
And then the aftermath of that creates a bunch of knock-on effects that players will then spend the next several waves trying to recover from.
So to go back to our stealth example, on the follow-up to Conviction, Splinter Cell Blacklist, the team continued to build on gameplay axes that were established on Conviction, and the design lead, Laurent Malville, hit on this idea of using specialized archetypes in order to inhibit the player's freedom of action on specific combinations of axes.
And it's interesting, it's uniquely challenging to use this kind of solution on a realistic game like Splinter Cell because unlike Gears or Left 4 Dead, the differentiation can't be exaggerated to the point of fantasy.
The variations on the gameplay abilities of the AI and even their appearance and their silhouette has to remain credible within a real world context.
So the specific archetypes that they came up with were, you know, a very armor-centric heavy that would challenge the player on navigation and combat.
A couple of different units, actually, that would inhibit the player on infiltration and combat.
One of which was a dog, which had some limitations, because he was a dog.
He couldn't really communicate tactically with the humans and had this kind of imprecise smell mechanic for fighting the player.
But that was coupled with a corresponding human, an enemy to commando, that...
had a little more on the ball in terms of being able to see in the dark and move quickly.
A drone operator that would interfere actively with the player's technology and with their goggles and their ability to move around in the dark, as well as delivering autonomous drones that could challenge the player along 3D navigational paths.
And then ultimately kind of the super archetype, the sniper, which only appears about halfway through the game, that can actually challenge the player on all three axes.
With that in mind, what's interesting then is to go back and revisit that extended progression of goal transitions that we associate with classical stealth plus prepare, execute, and vanish.
And you can kind of see where each of these archetypes motivates the player to switch their focus.
So with the Heavy, you can see where the Heavy is, the Heavy's focus on navigation and combat is forcing goal switches there between the kind of exploration and traversal stages and realignment and then later on between, within the execution phase of the prepare-execute-vanish loop.
You can look at the dog and see where the dog's still blocking the player on combat, in addition also blocking the player on the infiltration level.
So this is pushing the player to have to move into a recon phase, trying to understand a bit better the lay of the land and their situational awareness to understand where the dog's coming from and what they're going to be able to do to get away from them.
And then ultimately the sniper hitting them on all three, so you can see where the problem potentially lies with that particular archetype.
Alright, so that's them on paper.
You don't typically deal with them in a vacuum.
They're almost always presented in combination with kind of the generic grunt AI.
So it's interesting to look at what happens in the kind of more typical scenario, representative scenario.
You know, the player enters the sort of kind of sniff radius, the olfactory radius of the dog.
The dog raises a bit of a fuss.
The human AI treat that as a bit of a disturbance, same as like a broken light bulb or a door that shouldn't have been left open.
And eventually the dog begins undertaking a kind of random walk that will deterministically lead him to the player if the player doesn't do something about it.
And so the kind of robust move in this case is to take advantage of the fact that the dog isn't really challenging the player on 3D navigation and use that as the tool for staging an escape.
But sometimes it doesn't work out and the dog pulls the player out from cover and the entire map gets alerted and they find themselves exposed.
Now...
In the case of the sniper, you have an archetype that can engage the player at about 150% the distance of the other AI and is able to see in the dark using the laser on their rifle.
And so that can create immediate problems for the player if they're relying solely on darkness as a way of staying hidden.
It can also create problems if the player is relying on using their 3D navigation in order to try to stay away from the usual prying eyes of the AI because the sniper is usually in a position to see them.
And often if the player just simply gets involved in a normal run-of-the-mill altercation with one of the other AI, then the sniper is in a position to put fire on them very effectively right away.
Okay, so that's, you can start to see right away where that becomes a pretty substantial force multiplier.
So, here's the really scary prospect.
Dog x Sniper.
And so in this scenario, the worst case scenario is that the dog pulls the player out from cover and the player gets shot in the head.
But just as likely to happen is that the player, aware of the fact that there's a dog around and knowing that they need to move quickly in order to avoid that scenario, simply runs around the corner and gets shot in the head.
So, just an important lesson there.
And so I'm gonna try to wrap things up by talking about the insights that come out of that.
out of all of the things that we've just talked about.
The first is that when we use orthogonalization and these kind of defined game axes as a tool for both putting friction on the player but also providing the player with channels for surviving and recovering from the setback, it's very important that those axes be agnostic to all of the various scenarios and specialization forces that we normally inflict on the player.
It doesn't do you any good to have three axes.
if the player is only ever interested in using one of them at any given time, or if the level design of the game blocks the player from using all but one of them at any given time, that's not going to yield a setback, that's just going to yield frustration.
So it was important that, you know, it's important that in a stealth game, 3D navigation, infiltration, combat, however you want to define those axes, are of interest to a player regardless of whether they're a hyper-traditional stealth player or somebody who's a little more action-oriented.
The other lesson, which should have been fairly evident from the example that I used, admittedly it's a data point of one, but I think it's fairly compelling, is that second order combinations of setback ingredients can often generate frustration very, very quickly.
And so they have to be used with a great deal of care.
observation that we made was that ultimately if you take a classical stealth model and then give the player tools for surviving altercations and continuing play and being able to extend that experience into other areas, there is a general tendency for the game to push very very quickly into kind of arranged encounters with the AI. And if that's not what you want, if you don't want the game to be telling the player, great, you're playing a shooter now, then there needs to be some specific design around how to prevent that.
And I have some thoughts on it, which I'll get to in a second.
And then ultimately there's the danger of additional breadth.
We talked about the idea that you need to have mechanics that will help support these extended loops of play, so that players feel like they have tools in order to help take advantage of the opportunities afforded to them by these setbacks and be able to feel clever and use those opportunities to come up with a more successful outcome.
all of those features still need to be richly interconnected with all of the other mechanics the player is using the rest of the time.
Otherwise you end up with a shallow mess that the player somehow has to learn and then interpret and decide how to use instead of a real opportunity to develop ongoing mastery in the game.
So it's important that those features be applied judiciously and not in a giant mess of new new gack.
I haven't had a visual for a while. My favorite moment in Far Cry 3 was when I'd get harassed by cassowaries. Cassowaries suck. And actually it doesn't matter if it was a cassowary or a cow. Actually getting attacked by a tiger isn't the most exciting thing that happens to you in Far Cry 3. It's when you're in the middle of lining up a target through your sniper scope. You're about to take out an outpost and all of a sudden you get head butted by a cow until you fall off a cliff.
cliffs again. It's the theme, I guess. So, but there's a very important lesson to be learned there, right? Like, for most of the rest of the game, you're getting into long-range altercations with enemies that fall back behind cover, take out a gun, and shoot at you. I have never been shot at in my entire life, knock on wood, right? I have, however, been chased by a dog.
menaced by a schoolyard bully, had a drunk take a swing at me in a bar. I know what it feels like to be menaced by somebody who's coming after me at close quarters with intent to do bodily harm.
Most of us know that feeling, unfortunately.
And the reality is that it's super visceral. It's hardwired into our system.
We respond in a really emphatic, atavistic kind of way when we're menaced in that fashion, because it's part of our wiring.
And I think what's interesting, and it's an interesting challenge, and it's something that I have not seen executed especially well in games, but I think it's a clue that points the way forward, particularly with stealth games, if we want to try to support greater setbacks and richer setbacks.
is to try to encourage encounters that are like that.
Try to encourage, you know, try to invest in AI and invest in enemies that want to move in for close quarter encounters with a player and menace us in that fashion.
You know, but that means being willing to step away from the model that we use all the time when we're making kind of like modern day sort of geopolitical military style games, which is the guy pulls out a gun and shoots at you because you know, everybody's got a gun.
So I think that's an interesting, it raises an interesting question and it's an interesting opportunity that I'd like to see more people take advantage of.
So as a quick recap, I only have two points.
The first is, you want setbacks in your game, you need to figure out how to describe your game in terms of goal transitions.
It doesn't matter what taxonomy of goals you like or choose to use, what flavor you want to go with, you just need to have a set, and you need to be able to look at your game and kind of objectively evaluate what's going on in the game that way.
and the other part of it is once you started doing that you're looking for specific setbacks that are going to keep the player in the sweet spot they can't just be little bumps in the road that they're not going to even notice and they're also not going to make them want to rage quit and that's it that's how it works we have a lot of time for questions if anybody wants to ask any Yo. Hi. Very interesting talk and it's great. A lot of it seems to relate very strongly to strategy games which I work on as well which is very interesting to see the correlations. I think strategy games probably have been supporting and dealing with setbacks as a thing, as a dynamic longer than anybody else has. So it's not surprising. I think there's still lessons to be learned from looking at a lot of strategy games. So one thing I'm curious about though is You started out describing sort of the danger or the fall, the bad part about having binary fail conditions in that you're basically costing your player's time, which isn't intrinsic to the game, so it's kind of a frustration point.
The setbacks you described are all super interesting, but they seem to all just be steps along the way to a still binary fail condition.
So you're still gonna, yeah.
So I'm curious as to whether you have any insight into how you can get those setbacks to expand beyond that into maybe player motivations that exist outside of just straight up failure so that you can set your player back without the setback just being a step towards fail and then reset.
Right.
So, I think it's a super good question, and to be honest, I mean, one of the things I'm acutely aware of, and I became aware of it as soon as I started looking at the fact that there was this spectrum between, or dynamic range between rage quit and I didn't even notice anything happened, and the problem is as soon as those are the things that are bracketing the output of the game, the reality is that you are probably, at the end of the day, going to have to fall back on some kind.
of binary failure state in order to have any kind of stakes.
Now, that's looking at it through the lens of someone who's been working on probably triple A games that are like, you know, you shoot at people and they shoot back at you and you die, etc.
So I fully acknowledge that, you know.
probably a more five-dimensional thinking about that would yield something that can stay completely within the game state and preserve the game state forever and allow you to continue, you know, on infinitum without ever having to get popped out of it. And I think there's lots of examples of games out there that do it.
I'm just not summoning them in the middle of this talk very well.
But yeah, you're absolutely correct. At the end of the day, this is a—it's a buffer. It's a kind of a—a kind of a firewall against the ultimate reality, which is at some point the player's gonna— Interrupt what they're doing and have to reload and lose some time We're just trying to make make that happen less often and less easily and not as early I guess Cool. Awesome. Thanks. Thanks You mentioned a couple consequences for failure, such as you just go to a loading screen, come back, and then all the enemies are the same, or you kind of go, it makes you do like a mini game or something.
That just reminded me of Prey.
I don't know if you ever played that.
That game was actually quite an inspiration for me, because I firmly believe that going into a loading screen is very destructive to the player's immersion.
Yeah.
And so I was, but I know some people complain about Prey in particular that it didn't provide enough of a consequence for failure.
That it didn't feel like they were failing and therefore wasn't satisfying.
What are your thoughts on that?
Yeah, I mean it's funny.
Prey was actually one of the examples that I had when I was originally working on this talk for looking at the kind of...
sort of Max Payne 3, Borderlands, SSX, Forza style model, where you're kind of introducing a mode change, or kind of an alternate reality mode to the game that kicks in. I mean, Prey literally does that. I mean, it says literally, you're going into another universe as a result of failure, and you get through that and come out the other side of it. I mean, I think it's interesting, but I think, I think maybe that also provides a little bit of a hint to why some people grappled with it. It's like...
modifying the context of the game so radically that it changes the fundamental reality of the fundamental metaphor of what you're going through is sometimes a risky thing to do you know and it's not like it's not like praise initial premise was particularly accessible in the first place.
I mean, you were abducted by aliens in the first five minutes of the game, right?
And you're occupying a spacecraft that has portals that let you jump through.
So there's a lot of strange things going on in the normal reality of that game, and then kind of layering on this additional sort of spirit world on top of that, I think was just a hard thing for some people to wrap their heads around.
But I don't think the concept is intrinsically flawed.
I just think that there's ways of establishing context for it that probably would have made it easier for people to...
read and understand.
