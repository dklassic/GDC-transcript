Oh, don't clap yet.
Hello.
Yeah, my name's Sean.
I work at a studio called Campo Santo.
Hold on, I have no presenter notes.
And I'll just stand here in silence for 25 minutes.
Cool.
And before that, I worked at Telltale Games.
And while I was there, I was lucky enough to work on games like Tales of Monkey Island, Poker Night at the Inventory, personal favorite of mine, Nelson Tether's Puzzle Agent, and The Walking Dead Season 1.
And yeah, so I'm currently working on a game called Firewatch with everyone at Campo Santo.
And it's a first-person adventure type of thing.
And the game's core focus is the relationship between a man and a woman.
And it's in isolation, sorry.
So I can talk about that more in a little bit.
We're going to talk about some of the challenges we're facing.
But even though all these games are very different experiences, I kind of believe they're all after the same thing.
And they kind of focus on a few narrative concepts.
One is character interaction with realistic, believable dialogue.
Also stories and anecdotes the player can discover and impact in a meaningful way.
And interaction systems that pay attention to what the player is doing and the choices they're making.
And looking over all these games that I've been lucky enough to work on, the most recent being The Walking Dead, I see that these concepts are all working towards a common goal.
And that would be the title of the talk, the suspension of disbelief.
There's been a sort of concerted effort on the part of these games to presuppose that they're not games or puzzles or whatever, that they're simply experiences.
They're meant to entertain, provoke, and surprise.
And I think if you're trying to make a piece of fiction about people, that the suspension of disbelief is really one of the most important things to consider in your design.
So for a quick turn to Wikipedia, the phrase was coined in 1817 by a poet-philosopher, hypochondriac, opium addict, and cravat enthusiast, Samuel Taylor Coleridge, who suggested that by being sure to anchor an otherwise impossible tale in elements of the human experience, readers would suspend their judgment of the fantasy and experience it for its drama.
So Coleridge was working during a time of the enlightenment, when people had begun to stop believing in things like witches, ghosts, and specters in their everyday lives.
So consequently, these absurdities had fallen out of vogue in popular works.
The suspension of disbelief as a tool for the author became a way for these very powerful images to bridge the gap between what was popularly believed and the thematic meanings the images could bring with them, such as the spirits that Coleridge himself employs in his poem, The Rime of the Ancient Mariner.
The audience could see past their disbelief of the supernatural if they were actually being told a story about people.
It was the author's job to assure that that was the case.
Now we jump forward to the age of cinema, and it seems as if the onus of the suspension of disbelief has sort of transferred to the audience.
For the audience to really engage in the human elements of a story, they are the ones that are asked to take the supernatural at face value, to ignore the artifice, and to suss out the meaningful parts of the story.
The truth, I mean the same is often really said about video games, just ignore certain aspects of the system or the gameplay or the dialogue or the very premise itself and it's there you're going to find enjoyment and meaning and value.
Like I'm not saying you should take this literally, like I'm not suggesting that we make like hyper immersive like completely real simulations where the audience actually believes this is happening and therefore they feel the feelings that are inside the text.
What I'm saying is that, with Coleridge, I reject the notion that the player should have to ignore certain aspects of the experience just to find value in the narrative or to connect to the story.
And if you're going to make games where the narrative matters, then I think it's the job of the people in this room to communicate to the player through design and focus on the human experience.
That the game the player is sat down to is worth engaging with emotionally, and not just take for granted that the player actually should.
So Jake Rodkin, who's Campo Santo's co-founder, and I have described video game design in this method as like going on a date with a player.
Like the player is at the table with you, and for the date to go really well, you have to listen to what that person is saying, or what that person is expressing, and then respond with a mix of comfortably predictable and excitingly surprising ways.
Gabe Newell has referred to Valve's sort of design and marketing philosophy as a dance with the audience.
Valve's going to take the first step, like they're going to put the game out, or design the IP, or the system, or the backend, or whatever.
And it's the player that will then sort of find meaning in it, contribute to it through play, or oftentimes even like an asset creation, and then the company has to respond.
So this understanding that you're dancing with the player I think is key in creating an interactive piece that suspends the audience disbelief.
So I quickly want to look at The Walking Dead and think about how we sort of did with that.
And I think we set out to strip away things from the classic adventure game that forced you to consider its structure.
And we really wanted to replace that with character interactions that drove the entire experience forward.
We wanted the players to be a participant, not an all-powerful entity, because we felt that was appropriate for the property and was just sort of interesting to us as designers.
So when we consider these narrative concepts, character interactions, dynamically discovered story and player-aware interaction systems, we feel like The Walking Dead actually did pretty good.
We came at the game with certain assumptions about adventure games, that dialogue trees were static, that storylines didn't change, and said, well, what if they did?
And what if you don't answer and the game just keeps going on?
And also, what if players have radically different outcomes?
And I feel like the game enabled most gamers to see past the artifice of the experience and just sort of consider it not as a game, but as a human story experience, even if only for a few minutes here and there.
Where does the game fail?
Firstly, I think I could have, and a bit of the writing in general, could have structured the dialogue responses throughout the game to be more responsive.
Whenever the game is obviously responding to a choice you're making, it feels like it's really succeeding.
But there are times when, either through scope or personal laziness, that the game feels like it's just feeding you core story content.
And then you can see the player's eyes glass over, because they're experiencing.
A story, but they're not experiencing their story.
And I also think the game falls down to the use of quick time events, which we all, unfortunately, know seem to be really way too often employed in games with narrative focus.
But I do want to talk about those.
Because when I was considering failures for The Walking Dead for this talk, like, it's obvious, like the first thing I wrote down.
But then I think the reason that quicktime events are universally maligned isn't because of something inherent to their design, I think it's because of their misuse.
So I'm gonna, like, look at a couple of examples.
So, here, hopefully this works. Yeah. Cool.
The player has been startled by a zombie during their first conversation with Clementine.
And it's like jarring and disorienting.
And it's a situation where Lee will escape with the skin of his teeth, but it's totally OK if you die.
You're going to get better at it.
It's a mix of mashing and grabbing and object use, most of which are tied to the game's core mechanic, the reticle.
So the player's going to use that to go on to select basic objects, shoot guns, and open doors.
It's disorienting in a forgiving way, and also teaches the player to become more proficient at the game's core mechanic, pointing and clicking.
And then later, oop, did that work? Go!
Maybe it'll work. Okay.
We subvert the QuickTime event in a fight with a stranger.
We drop the UI from the screen, and we actually let the player continue to choke a man to death if they choose.
We also utilize QuickTime events when you're supposed to fail.
Trying to open a shuttered door, or even just trying to stand as you're moments away from dying.
And there's like this emotionally, and I think that's really emotionally effective.
We're doing our best, given the systems of the game, to share with the player Lee's ever-increasing lack of power.
However, we also started using them, namely, just like button presses and mashes, like really broadly.
Press X to dodge and like, excuse me, press B to open a thing.
And those, I found, sort of gamify the experience.
And they don't serve to continue that dance with the player.
It's like stepping on the player's foot.
Like, you both stumble, like literally look down and to see what's happening at the controller level.
And like, we try to course correct and then you have to spend a bunch of time and mental energy to get back in time with the music and getting back in time with the tone of the story.
Like, essentially, QTEs are not the problem.
It's like how, when, and why they are written into the game and how they impact the overall tonal consistency of the experience.
So I want to talk for a second about tonal inconsistency.
It's an incredibly important concept to the suspension of disbelief.
And I don't want to go too far in the weeds on that.
I would point you towards, like, Clint Hawking's talks at GDC before.
Steve Gannard has a podcast called Tone Control that I think is very good.
And if you want to go into that.
But like anything else, you have to consider your writing and the narrative as a consistent piece of the whole.
And make sure that at every level it's working towards the creation of a cohesive experience.
My argument is that sometimes QuickTime events actually do that, but used broadly, they won't.
The issue is usually that QTEs destroy the mechanical cohesiveness of the game, in turn obliterating the player's suspension of disbelief and undercutting the importance of the game's story in the player's mind along with it.
So, tonal consistency through theme and mechanic is one of our chief concerns on the game we're working on, Firewatch at Campo Santo.
Again, you play as a man named Henry who's retreated from his sort of like messy life to be a fire lookout for the summer in the Absaroka wilderness in Wyoming.
And while doing the job, you build a relationship with your superior, a woman named Delilah, whom you talk to exclusively over handheld radio.
But on your first day, like something weird happens.
and you have to go out of your tower and then you go out into the world.
And through environmental exploration and sort of narrative choice, you learn to inhabit Henry and build a relationship with Delilah.
We're super early, so names and things might change, but hopefully not because we keep saying them.
But we'll see.
But it's a first-person story experience.
And most games like this would put a voice in your ear and expect you to follow it.
And we do.
We just thought it would be interesting if you could talk back.
So in this game, you can.
A large personal goal for the project is to suspend disbelief, obviously, in order for folks to see past the artifice of the game and feel like they're having a real conversation with Delilah.
If players feel like they're having real conversations, and like, that's great, like goal number one checked off, then the next one is for folks to feel like they're building a relationship with her.
And if we can do those two things, and hopefully we've created a game where the player feels totally in control of the action, and they're pushing and pulling on the emotional aspects of the story in a world that is responsive and fulfilling, like that's the entire goal of the project.
It's weird to be talking about the goals of a project when you're just like always anxious about making it.
Like, I've never done this before. It's strange.
To that end, what are some of the things that can stop us from achieving that goal?
I have a lot.
Poorly written dialogue. Being unresponsive to player choice.
I'm just going to go through them. Poor voice acting is a good one.
Checkpoints, missions, arbitrary game elements, such as these.
The list goes on and on.
Poor density of world interactions is a big one.
Unresponsive world state.
Repetitive dialogue, interface tutorials, and UI.
Failing to pursue empathetic characters.
It just...
The list of things that will stop us from succeeding seems infinite.
But some of these things are actually avoidable through just like execution.
That's just like talented people doing their jobs well, which is kind of hard to comment on.
But other things are solved through game design.
And then some of these things though are solved not just through writing, a form of execution, but how we write.
And when I talk about how we write, I'm talking about sort of the principles we use when writing dialogue in addition to the tools we develop to organize and implement the stuff that we're going to make.
Because one of the things I personally remember when I'm either at any stage of development is that nobody really cares about writing, like in the traditional sense.
People just don't recognize objectively strong dialogue if it's presented to them statically, or in a laborious cut scene, or in a really obviously linear way.
But if you let the player make a choice to deliver a particularly well-written line, then we're often told the writing's really good.
That line, the exact same line, tucked into like an expertly crafted 90 second cutscene, gets completely dismissed if it's ever seen at all, because the player just feels like they're not moving forward.
So, um...
It's the writing's job to either not infringe on gameplay or actually be gameplay.
This is one of the first things we prototyped.
Check out that exclusive reveal of garbage!
But, uh...
Because the game we're working on is in first person, and it's an ideal world.
We'd absolutely never take control away from the player.
We need tools, and again these principles, to interrupt dialogue in a realistic way.
Because you can walk around with this thing that makes people talk.
So for instance, let's say like Henry and Delilah are out, and you're talking about a windstorm that happened last night.
Because dialogue about weather is like a surefire way to be super successful.
But mid-conversation, the player discovers a necklace of human fingers on the ground.
That's not in the game, actually. Shit. Sorry.
It occurred to me that if I put that in two seconds ago, people might think you could find that in this game.
I'm just suggesting that as a weird thing.
There's no necklace of human fingers in this game.
Furthermore, I googled that to put it into the talk, and then I realized that if I showed people what I found, somebody would be sick and barf.
So you get to look at a picture that Ollie drew instead.
Anyway, you find this necklace of human fingers.
Henry better say, like, whoa, there's some finger jewelry here.
Holy shit.
And stop talking about the wind, because this has now become much more important.
We have to interrupt the dialogue naturally, and that's like really scary to do.
So it means that I, it actually means things for how I write the dialogue.
It means I can't write super lengthy lines that we need to finish in order to be interrupted in natural fashion.
I need to be able to time the new dialogue to interrupt in concordance with the thing that the player has just found.
Or if it's even just like on screen, whatever event has triggered that.
We need all the dialogue to exist in an organized and discrete chunk so it can be rearranged.
The speech manager needs to know exactly what's happening in the game at all times.
And sometimes the cone of the conversation actually needs to change.
So...
Like, I have to write short, snappy, back-and-forth dialogue, and I have to save longer monologues for times when I know stuff can't happen, which is super rare.
And then I actually voice direct lines in tight concordance with the possible, like, tones of the story, sometimes duplicating conversations, pre- and post-a-specific event.
But the thing that allows any of this to work is the system and methodologies used to organize the written content of the game.
So we actually took major cues from Elon Ruskin's 2012 GDC talk about Val's dialogue system.
There are aspects of it that don't quite work for our game because it's really dialogue choice heavy.
Excuse me, but the principles he outlines in the talk are like, which is available outside of the vault.
You can just go find it.
They've been like an invaluable cornerstone to the thing that we're trying to build.
So yeah, I'll share with you where we're at and the problems we're considering and some of the ways we're thinking about solving them.
To really oversimplify the process, you should just really go watch the talk.
Each of the lines is triggered by a singular event and is aware via appropriate context at what point in the game it's allowed to be triggered.
The dialogue system and the event manager work together to find the most pertinent line in the database and deliver it to the player at the most appropriate time.
So we want to vary user-friendly.
Because I guess I'm the user and I'm an idiot.
So I need to have a very user-friendly way to generate and organize dialogue contents and story moments.
Because Firewatch is not procedural.
It's more systems-driven than some of the things we've ever worked on.
But it's not procedural at all.
It's not a puzzle game.
Like, content isn't being generated by a robot.
The game is going to rely on lots of.
Responsive content succeed, and we're a super small team, so we have to be able to generate that and implement it really quickly.
And we've established goals for how I write, and now we're developing this tool to help me get there.
For now, I work in a relatively free-form way, and then chop up the individual lines so they can be put into a database.
And right now, Patrick Ewing, who's a programmer we're working with at Campo Santo, and I are trying to flatten the process from written dialogue line to implementation in a database into the game.
So to put it as simply as possible, we're trying to consider what are the fewest amounts of button presses it takes to write a line, store all of its logic and data, record it, implement it, and tinker with the timing to ship in the final game.
We're trying to solve this really complex problem which is compounded by a realization that we both had which is how these tools work is gonna dictate what comes out of the screen, not just the pipeline.
It means fundamental things to the nature of the game's cadence and tone, the dialogue itself.
So if we're going to choose to develop a system predicated on world state and the possibility of interruption and to respond to lots of different player inputs and the content we feed that system, the actual writing has to be compatible.
Every choice we make about how the tool works alongside the game's systems impacts what we're able to put into the system and therefore what we're able to push out of the screen.
Because it's worth, like again, we need to make as much of it as possible.
In this game you're going to be talking to someone over a radio as you explore.
In most games, when you write dialogue, you know a character is going to be in a certain place at a certain time.
You literally bring a character with you anywhere.
So the dialogue has to reflect that.
And to do that, we need like, just a shitload of it.
So we struggle to consider flexibility against agility.
How feature-rich do we make the front end of a tool versus how good is it at making the exact game we're trying to make?
We err towards the latter, obviously.
We need to make this one game.
But it's an inescapable lure to think, well, what if the tool could?
It doesn't just take time to build.
But that moment of wondering, well, what if the tool also let us, is going to impact the game we make, the actual content.
If you give a craftsperson a brush versus a pencil, you're going to get two very different images.
And at the most basic level, all we really need to do is write down and store a bunch of data in a database.
It's like we could easily use Excel.
We could just organize a bunch of lines as individual events.
So when the player does X, or world state is Y, we just make thing happen.
So, what we've settled on thus far is creating a very simple interface that has as much searchability as possible.
Because we want to be able to look at a line in a tool and give it a bunch of new requirements on the fly.
Requirements is the stuff that says, oh, I can happen when this is true.
Furthermore, we know we can take a big bite out of the polishing phase of the game.
So it would be amazing if we could actually tune the timing of the dialogue right in the tool.
I focus on a couple of core features like this.
It's going to help us debug quickly and shift the dialogue faster.
But I want to point out that decisions to create and deliver content in a certain way, to build a certain tool, actually help us combat the hurdles that stand in the way to creating suspension of disbelief that I mentioned before.
Long cutscenes start to go away because of our methodology.
Bad dialogue timing can hopefully be solved right in the tool.
We can respond to player choice more deftly, and we're trying to flatten the content pipeline.
The same goes for interactions, story, and cutscene density.
As lots of people have always said, game writing is game design.
It's level design.
It's programming.
It's the most disciplinary, multidisciplinary thing that you can do, I think, at times.
And in my day-to-day, game writing is actually systems design plus tools development plus creative direction.
I need to be aware that things can't change without impacting one another.
And if I have a clear picture in my mind for what the final product is supposed to feel like, I can make informed decisions about all these things.
Like not as a writer or a director or a project leader or whatever, but simply as someone who's making things in the pursuit of a broader creative goal.
So that's it.
I hope you find some of this useful.
Hopefully the game comes out as good.
I hope it results in a cool game for us to play.
I don't think we do Q&A at these, is that right?
But yeah, you can find me there if you have questions.
Maybe we do.
I don't know, do we not?
OK.
So thank you.
That's it.
