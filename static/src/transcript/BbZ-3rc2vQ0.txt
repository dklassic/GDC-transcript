Hello everybody. We gotta get started. I know there was a card reader problem, but it turns out we still have to end at 520. So we gotta get it moving along, because we have three delightful micro-postmortems. Hello, I'm Brandon Sheffield. I'm unrelated to this, but I run the Career Seminar, and so that's why I'm here talking to you right now. I hope you enjoyed it. This is the last talk of the show. So yeah, woo indeed!
We've almost made it.
So we got three Postmortems for you.
We got Gabe McGill talking about Blaseball.
We have, yes, we have Vincent Diamante, who I realized I've known for 22 years, talking about the audio for Sky.
And then we have Zellivere Nelson, Jr., who's going to talk about...
the uh uh warlord or i can never say the whole space warlord organ trading simulator yeah there you go there's there's so many words in that title okay let's get started with gabe hi everybody congratulations on surviving gdc i have 150 slides so i'm gonna go quickly My name is Gabe McGill. I'm a product designer at The Game Band. I joined Blaseball right when it started, so we're really going to do this. We made a lot of slides. Joel is sitting in the front.
Shout out. We gave a talk the other day on Blaseball, and it turns out that giving a talk with another person is incredibly difficult, and never having met him before in my entire life, it's very hard to do so. So what is Blaseball? Well, it's a baseball league. That's really all you need to know.
except for the part where it's also a horror game or the community is the one who's driving the story.
Blaseball is really a game about choice. This is probably the best encapsulation we've found.
And it's really, really weird. Instead of having a playthrough for every single player, like in say, a video game, we all have one shared understanding of the universe. Blaseball is just one thing, but it's kind of really hard to know what's going on if you're just on the website. So our understanding actually takes place on Reddit, Discord, etc.
We also develop it on a highly compressed time schedule.
We have an election every week, and we're basically running an entire sports season in that week, so if we need to change something, we find out Wednesday, and we have to make the change by Sunday.
So we iterate rapidly, and our iteration is primarily dictated by the outcome of an unpredictable system.
We're building the simulation, the fans are setting up inputs, we don't know what's going to happen, and that's the thing that we use to drive direction.
And we get really, really weird by what I call boiling the frog.
We take incremental steps, adding one simple system at a time, and then the combination of those systems together gets us to very strange places.
Chaos reigns.
The experience then becomes about those iterations.
Your experience is grounded in baseball, that is until somebody gets incinerated on the field.
Then your experience is grounded in baseball where somebody gets incinerated on the field.
Awesome.
Ultimately though, the fan input I think is one of the things that makes it the most unique.
We aren't just going out of our way to tell a story, we are actually allowing the fans to control what goes into it in the same way that maybe a tabletop GM would.
So we have this combination of factors, the output of the simulation, input from the fans, and our direction of development.
All of those things coincide to make the thing that is Blaseball.
We can't do everything at once, though.
You can imagine if everyone in this room wanted to go to a different place to eat, it'd be really hard to pick a place to go eat.
So we need to boil it down to one simple thing.
That's why we have one election each week.
in order to coalesce the entire community into one specific movement forward.
So, like, what am I talking about?
We're basically on the same side as the fans.
We are also watching this live thing play out, saying, oh my god, can you believe that just happened?
And basically what we're trying to do is create the possibility space.
So we think in terms of systems primarily, even though the experience we're trying to create is a narrative one.
We break it down into these three categories.
So beats are the things that we specifically do.
This is going to happen.
These are great moments to say, introduce God, have God show up and speak to you for blaspheming or succeeding.
And these beats often create prompts.
So prompts are a question to the player.
God just showed up and told you that you're doing a bad job.
What do you do?
We have a whole bunch of different kinds of questions we can ask, and what you care about is a really cool one.
And ultimately, the way that question is going to be answered is either by a narrative decision or filling in some sort of data.
We have this concept of what we call the ad lib where.
We know something is going to happen, but then we allow the fans to say to whom.
So we have these two things that we try to conflate as often as possible, system and narrative.
If something is important in terms of the story, we should see it take place on the field of play.
It should happen during a baseball game.
If, for example, Luke Krikese shows up, he better impact what's actually gonna happen in the sport.
And every time we make a prompt, we are also making a promise.
When you tell us what you care about, we will respect that.
And how do we respect that?
Well, we like to reward with consequence.
The consequence is probably a system, and it's probably a cursed system.
Ultimately, though, the best situation are when the fans have a very clear idea of what's going on.
what they want to do, what they can do, and then we throw them a monkey wrench, or monkey's paw.
If you're unfamiliar with the term, it's basically an unintended consequence.
So you get the thing that you do want, and you also get something that you very much do not.
You can think of it like a mixed success in a tabletop RPG.
You get what you want, and you get what you want.
But...
This allows the fans to have one very specific goal that they're trying to work towards, and then the complication of the story comes out as we introduce some secondary effect.
Sometimes they just want to mess around and find out what happens.
But typically when it's more focused, everybody has more fun.
It's a lot easier to tell one specific story, even if ultimately that ends up in a labor strike.
So when we do a good job, we give the fans the thing that they want, and then also introduce a complication that moves the story forward. There's not really any point to all of this unless there are people playing it. So we have this concept of the digital stage. The key here is that we have a shared world that is changing. When it changes, it changes at the same time, and it changes for all of us. This is pretty different than how we would say experience an MMO.
I play a lot of Final Fantasy XIV, and in that game I'm very much in control of my story.
I can go do the main story quest for 60 hours, and that might be entirely different from your experience of raiding.
But in Blaseball, we're always doing the same thing.
We would be watching the same story unfold for both of us.
Well, okay, or maybe 24 because we have 24 teams or maybe like 300 to 400 because that's how many players there are in the league.
But I think ultimately, The more it can be boiled down the more successful it is Narrative choice takes place on the collective stage Everyone here participating gets to input into the choice, then we all experience the consequence together Here's an example The forbidden book exists we open the forbidden book something bad happens But because it's happening in real time, the experience can still be asynchronous.
We love to tell stories.
We wanna tell you about what happened.
Just look at this talk.
So for the fans, typically the experience of something like the Forbidden Book goes like this.
Wow.
What?
Where'd the book go?
It was like, I don't know, I don't know what I missed.
Wait, what?
Come back, please.
Wait, where did it go?
I think I missed it.
Correlation, I think I missed it.
I'm not, sorry.
Oh, it's here.
Anyone here remember it?
There's a shirt that you got wit this, the one that I was wearing.
And even if we're having an asynchronous experience where the way that we're digesting the story is second hand through our friends, the change still happened in the moment.
It's the same thing for all of us, even if our understanding of it is different.
The world we knew yesterday no longer exists, and now the player has been transformed.
I'm just gonna reiterate that we don't know what happens.
The simulation isn't deterministic.
We set things up with probabilities.
We have some idea that X could occur, and then we roll dice.
We want specific things to happen, though, and then we find out at the same time as the fans to whom.
Unfortunately, this means that we have to be in a state of sort of constant vigilance.
If you don't know who your protagonist is, it's really hard to plan the end of your story.
So whatever happens on the website is the truth.
This is something that we say to ourselves all the time, especially when it comes to leaning into bugs.
If there's a bug that affects the data, well, the only data we're manipulating is production.
So that means that now we have a new universe.
Reality is different, and it's different because that bug actually did happen in the real world.
And we try not to unwind things or roll back things unless it's actually critical to do so.
This one example, we have a promise to the fans where the community is going to be the one who's driving the story.
So if someone is able to say, get infinite votes, we would undo that because it's breaking the fundamental promise of what baseball is.
So let's run through an example as quickly as we can in terms of how we would design one of these things.
We have the idea of umpire.
That's the guy who stands behind the catcher.
If you're not familiar with baseball, I'm sorry, I can't really help you.
Because they get the ball thrown at them really hard, they need to be really big.
So that means that their two responsibilities in this stage play are to loom and to pass judgment.
That's awesome.
If you're making a horror game, that's fantastic.
So what do they do?
Well, thematically, we've already established we have these two things.
So then we wanna figure out how can we make the simplest possible system to achieve those two things?
Most of the time, we get inspiration from something else.
In this case, Stephen Bell, who unfortunately can't be here, asked what if an umpire could shoot somebody like a naked gun?
Obviously a great idea.
So because that's either horrific or hilarious, depending on the framing, we kind of roll with it.
You can interpret it in either way.
That makes a lot of questions though.
When you can kill somebody.
Well, you have to figure out where they can go.
What happens in the simulation?
Can a dead player play blazeball?
In this case, no, that's like specifically the thing it means, you can't anymore.
So if an umpire incinerates a player, they have to be removed from the team and replaced with someone else.
And that was the system as it was first introduced, just those two rules.
The player goes away and a new player is there instead.
And then we keep adding to it.
So if someone dies, where do they go?
And we introduce...
The answers to those questions is piecemeal.
So we find out that players get incinerated and leave the league and then we find out that they end up in the Hall of Flame.
And then we find out that the Hall of Flame actually, its purpose is to create an all-star team to kill an antagonistic god.
So, Umpires always existed, but we need some sort of inciting incident, and we really want that inciting incident to be driven by the fans.
In this case, it was the opening of the book.
It's a scripted moment that resulted from an election.
The player that it specifically chose to incinerate for the first time, we didn't choose, we just set up a simple rule, picked the best player.
Then we wrote a script to establish what would happen.
The umpire's eyes turn white, Moe the Swallowed by a Hellmouth.
The first incineration, shocking.
But it's also tipping our hand at the system.
We introduced Solar Eclipse at the same time as incineration.
That is all you basically need to know for the system.
The interpretation though would be something like this, an umpire just killed somebody.
What does that mean?
And that second piece really, if you think about it, is what playing blazeball is.
So you ask yourself questions like, can players just die now?
but only in specific circumstances.
This is the part where we can sort of tell the story.
It's not just a random die roll.
It also allows us to introduce more complications.
So we have a modification of unstable, a player becomes unstable, they're more likely to be incinerated, and then debt players can cause each other to become unstable.
In this way, each of these very simple pieces, one after the other, is getting us to a place where we have a very rich story.
Blaseball is all about kissing.
Keep introducing simple systems.
Let's talk about how this works on a typical week.
It's Monday, well except it's actually Sunday because that's when the election happens so it's really important to know what the new fan input is going to be.
We pay a lot of attention on Sundays.
Are there new storylines?
Are there new introductions of systems?
Are there things we didn't anticipate?
Does some player now have multiple modifications that will work together in some unexpected way?
How did our life get complicated?
Then we have an idea of where we want to go, and maybe we have a very clear, specific idea of where we want to go.
Just going to give a little bit more context for the forbidden book. This is the actual text.
In the early days, Joel was prototyping the game and really allowing the development to be sort of completely driven because all the fans were the internal developers.
So we needed to introduce this choice when we finally got to it being live. How are we going to introduce this system? We chose to do it by a mystery box and we assumed well that's a pretty juicy mystery box. So the fans chose to open the forbidden book. We had a very clear idea of the outcome. The sim incinerated the players and all together we told the story of Blaseball.
That's great.
When we're doing a good job, we have a big stack of simple systems that's driving the narrative forward in collaboration with the fans.
Everything makes sense on its own, and the part that's really fun is imagining how this is gonna play out when they're all stacked together.
We go into it with this sense of being incredibly flexible and embracing the wild ideas that we or the fans have, but I don't know, that was really quick, right?
Can you remember everything I just said?
I probably can't.
Sometimes it's too much.
And we really want the moment-to-moment and big takeaways to feel cohesive.
It's why I structured the talk in this way, to try and overwhelm you with information so that you would understand better what it's like to play blazeball.
Eventually the stacking systems get too complicated and we need to cut some away.
But if any of you are narrative designers or storytellers, taking away player mechanics is probably the least popular thing you can do, so you really need to adjust it from a narrative perspective.
Another mistake I would say we made is leaning into team stories.
If all 24 teams are trying to achieve a specific goal, well, we have 24 threads going at once, and that's too many. So we want to try and simplify things, get back to the place where we are, running one main story that's easy to communicate to your friends.
Ultimately, it's about building tools that allow the cool stories that come out of Blaseball to be communicated to each other.
All right.
Hi there.
My name is Vince Diamante and where's the thing here?
Here we go.
All right.
Hi, yeah, my name is Vince Diamante.
I do not want to do Camtasia.
I think I did that right.
Cool. This is the Sky Children of the Light music micro post-mortem.
Quick intro. Sky Children of the Light is a multiplayer social online game where players engage in acts of friendship and compassion and kindness.
while exploring a beautiful and mysterious world.
We've been working on this game for a while now, and by a while I mean really, really freaking long.
It started out in 2012.
You might have seen that we announced that it was gonna be in beta in 2017, and we beta tested for a long time, two years, before we eventually got to a global release in July 2019.
And I've been with that game company for that entire time.
since 2012. I was the audio director all the way up to 2019.
And then once we globally launched, I'm like, OK, maybe I can relax a bit.
I'll just be the music composer for a while.
And that's what I'm doing right now.
Is that a good idea?
Well, we'll see.
Anyways.
Sky really is sort of a story of a couple of different games and different workflows that went into it because 2012 was really weird when it came to the mobile space. You know, some people think, wow, mobile games, it's like this monolithic thing. It's actually changed a whole hell of a lot. Back then we were thinking, oh wow, Journey came out and it was pretty good and let's do something with that in mobile.
we can sell a game for 99 cents, 2.99, whatever, on the App Store.
That wasn't working after a couple of years, so we had to change that. We had to change what we were selling. We had to change the structure of that, which ultimately meant we were changing what the game was. And I was actually really struggling to deal with that, because for the most part, I was being a very...
artistic audio director. I was just hanging out and being like, hey, level designer, what are you doing? Let me make something really cool for this level.
Or if someone had a cool mechanic, I would say, yeah, let me make the sound of flying.
Maybe make the cool music and the rhythm of flying and all that.
It was a really cool exploration process for me for those first four or five years of stuff.
And all throughout that time, I was very aware of what that game company was before that, Flow, Flower, and Journey. Yes, Journey did have that multiplayer component, but it was a very limited component. And really, the other thing that was there was that very important, very solid narrative arc that brought you through that experience.
And how do you define that?
Well, it's the series of moments, series of set pieces that we've got there.
Oh yeah, you finally have that vertical sequence through that underground temple and journey.
Yeah, set pieces, moments, let's score those things.
So for me as a music composer, I was definitely thinking about hitting those moments in a really solid way, making things that were beautiful along this particular trajectory.
So yeah, making sure that there was an awesome soundtrack for that single player story campaign experience.
But in addition to that, we really wanted to make a robust online multiplayer experience, not just, oh, someone might drop in into your game and then you could go to the end.
There's going to be more multiplayer, four people, eight people, maybe even more than that, that you join in and these more along the lines of an MMO instanced experience.
And these guys would come into the world and do different things.
And for me as a music composer, I was thinking, how do I actually rectify what the music is that's going to be playing at any given time?
Someone wants their emotional story experience, their interacting with this really cool NPC, and then they get smashed into an instance with a couple of people that are just, uh...
goofing around and doing silly tricks.
Some of you who've played Journey might know about people who are into out-of-bouncing, just doing really cool things with the weird level geometry.
This also happens in this game too.
Hey, they just want to have fun.
They want to play around with this.
How does that actually jive with what's going on with these players that are playing the story?
And we didn't really have a good answer to that, except maybe let's just make some tech in order to try to deal with that.
That is not the.
thing that I was looking for.
That's the wrong slide.
Uh, okay, so there's a missing music texture.
Music tech.
One of the cool things that we did was we have all these music callbacks that are in the game.
So I did all the music in Cakewalk Sonar until we got into Reaper, and I kept on using Reaper.
Cool thing with Reaper is that you can do these things called re-scripts and script actions where you run a script, I'm reading MIDI note data, and then it can export these markers into the project, which I then exported into FMOD music events, which would give me some cool things.
I could know at any point in the music what chord is being played, what the melody was, what the dynamic level was.
and that was really useful because then I can jive the sound effects that are playing with the harmony and key center of the music that's going on and we made a pretty good decision early on to actually make this happen for all the music. So I was doing things in Cakewalk Sonar, then I eventually did things in Reaper.
running rescripts, it was great.
There was a missing slide in here, which is actually really important.
I'll try to describe it.
There were two other pieces of tech that we did specifically for rectifying the different types of music in the game.
One of them is sync.
So we can actually sync up what clients are actually playing and say, hey, there's Music One that's playing on iPhone One.
OK, let's make sure that Music One is actually playing on all three, four, eight iPhones at the same time, at the exact same point.
And it will sound really cool and awesome.
Okay, but what if I don't want to do that? Then we introduce this idea of not just music background, but also music foreground. So if someone is doing something elsewhere in the level, like they go into a little nook, and they say, okay, I'm going to do this little side quest that's not related to the main story that you actually experience in that level.
then you can experience music foreground.
Maybe the music foreground is a stinger, maybe the music foreground is actually a looping piece of music that accompanies this particular quest, but they will have music foreground and they can have their music not synced with the other people that are experiencing stuff in the single player campaign.
And that's what we thought we needed because there was this clear divide between these different types of music.
The music of the core narrative, where you would have cutscenes for experiencing the cool things that the elders of the world were actually showing you.
But then there were all the other things that came along the line.
Once we realized that we weren't just being a free-to-play, a premium game, we were being a social game, and this idea of seasons and events, then maybe that music is going to be stuff that consistently is foregrounded.
So stuff like New Year's music, Valentine's music, things like that, or even specific multiplayer situations and quests.
So we're going to introduce a new space in the game that's specifically a flying arena.
All right, maybe that music is foregrounded, but it's also synced between all the players that actually want to play in that particular space. So hopefully I described that okay.
Ratios of music.
So at global launch, there was about 100 megabytes of music, and 100 megabytes is after things were crunched down into the FMOD music banks, and the core narrative music was about 75 some megabytes, and then everything else was the rest.
Seasons, seasons, quests, and sheets, those basically correspond to the new stuff that would come along the line.
There's stuff in there because we were beta testing this idea of seasons.
from 2017 to 2019, and it seemed pretty cool.
We kept on going with that.
And so now we're on 14 seasons and the core narrative music is still there, still 70-some with a few more here and there, but now the music bank size is huge.
It's 250 megabytes compressed and it's actually really crappy quality, but that's okay.
You know, it's an iPhone.
Ratios of music, another way of looking at it is There have so far been three albums released. Volume 1, which is about a CD worth, is that core narrative music. Volume 2 is events and situations, and Volume 3 is seasonal.
There's a lot of music in this game.
But I put a whole lot of work into that core narrative stuff.
40% of the core narrative music is live orchestral.
And just to throw some numbers out there, we booked an orchestra.
It's the Fames Orchestra in Macedonia.
47-piece orchestra.
We recorded for six hours, 30 minutes of music recorded with that.
8,000 euros.
This was definitely on the low end and actually kind of affordable if any of you are interested in doing that stuff, whether you're a musician or not.
8,000 euros, it's still pretty accurate, even though these are 2018-2019 numbers.
The rest of the music was synth or synth and live solo, just like a single soloist, like a single flute or whatnot.
And as we continue to do this seasonal music...
that's what we did. And we had to keep on going with that. So we're on 14 seasons right now.
It's been between 5 and 30 minutes of new music for each season. So we're doing new areas, new side stories, and often really new mechanics. So we're going to expand the flying mechanics.
We're going to go crazy and let you swim underwater and stuff like that. And these things are happening at a regular clip. New seasons are basically dropping every two to three months.
and there's time pressures there. So 30 minutes of music, and it's one thing to be like, okay, I can do 30 minutes of music for this new flight season, and then, oh wait, there's 30 minutes of music for these new mechanics, and 30 minutes, okay. It can be really tough to just keep that up, so we're definitely not going with live orchestra for all that. Now, the thing that kind of frustrated me on reflection with that is that...
no one cares about the core narrative music anymore.
And we put so much effort into that.
You know, you got the orchestra and I spent besides that cost there, there's also the other stuff.
Okay, the time that I need in order to actually create all the scores for people to read and prepare that and dealing with the music orchestra coordinator and whatnot.
It's really tough, sort of that feeling there.
Players love the new music that wasn't actually polished the same way.
But honestly, it's alright.
I should have realized, because of the differences between the music that I was making, as well as the needs of the music, and I think this thing's not playing because it's a PowerPoint.
Whatever, we got these two game soundtracks, and they're sort of fulfilling different functions.
There's the music that we worked on and we polished, and actually was really important from a marketing perspective and part of communicating to people, not just potential players, but to everyone else in the world, hey, we care about this game, we are polishing this game.
There's that marketing and promotional value.
Sometimes it's really important to just have that bullet point there.
and that's great to a certain extent. And then the game comes out and it's really so much more about the player connection, connecting with the mechanics, even if I'm not polishing the music the same way because we don't have the time or the money to actually deal with an orchestra.
it's so connected to those game mechanics. I'm not thinking, oh, I want to make this cutscene awesome. I should have really thought about that question before. Who cares about this cutscene?
You know, 45 seconds in a single-player campaign. It just sort of came to mind. It's like, oh yeah, of course that's what I do. I know about the cutscene, so I'll polish them. Instead, it's...
Oh right, people care about what is going to be this new sound of swimming underwater.
I need to make sure that I create a musical experience that properly correlates with that.
And players responded to that. They don't care if there's no orchestra there, they don't care if we're not polishing that, but that connection and making sure that what I'm doing as a music composer is properly motivated by the things that players actually care about, that's really what's important there.
So yeah, if you have any questions, feel free to email me. I'm also on Twitter. And thanks.
I think yours is over here.
So I'm Zoliver Nelson Jr. I do a lot of stuff. And I've eaten at Denny's four times in the last three days. So if I'm not entirely lucid, blame the Denny's Corporation.
I've worked on over 60 games in the past six years.
I was a journalist once upon a time, including running a column for PC Gamer Magazine for two years.
I've worked in RPGs and print.
I've written comics.
I used to go around the world wearing Jeff Goldblum masks for non-criminal purposes.
This is a...
post-mortem of one of my latest games, Space Warlord Organ Trading Simulator, and it's going to run a little bit different than a formal post-mortem for some reasons we're about to go into. First...
What Space World Organ Training Simulator is, is a sci-fi body horror market tycoon.
You know, because that's a breakout genre that everybody needs.
It's really hot right now on Steam.
It revolves around the one thing everyone has, wants, and needs in a strange and evolving universe.
Organs.
This has been the cause of an existential crisis.
Because when you're making games that are idiosyncratic, people treat you as a monolith.
Like you are making these games alone instead of actively enabled by a team to create singular visions and bring them to life in an ambitious and expansive way.
And it's fucked, frankly.
So, uh...
I want to talk about how our studio works, if only because people all week have been saying, how do you do what you do, and why did you do that to your body at Denny's?
Strange Scaffold uses something I call the constellation model.
Essentially, my work and purpose, not just as a creative director, but as a person, is to find ways to make games better, faster, cheaper, and healthier for the people who build them.
I create a singular vision, I act as a prism and filter for bringing that vision to life.
But my job from there is to enable and empower the people around me to do the best work possible in a healthy environment and see themselves inside the game they create.
I assemble a team, and from each person, collect the specific things we need to bring that vision to life.
And from that point...
When their work is done, they're done.
We might work with them and connect the dots in a different configuration for another project.
If there's a specific need that arises on a different project, they can come and address it.
They might Voltron off and do their own thing.
But essentially creating this wider cloud and constellation of collaborators ensures that we can have really personal games that still exist on a micro-budget scale, and that emphasize the human health of the people who build the games more so than the projects themselves.
Because I would rather build a bad game well, than make a great game in a way that destroys a single human life.
uh... this is guided by a few key phrases behind our studio uh... but one of them is just frankly we want to provide a fair compensation for the most flexible interesting work you can do at a given time one of the jokes we have inside the studios that we rehabilitate seniors because when you've been working on the same game for five years uh... under shall we say not charitable circumstances being told, hey, do you want to make a game about organs and be treated fairly and join a team where even if something arises in your life, there will be other people who can support you in specific and individual ways. It feels like a breath of fresh air. And we can talk about how the game did, but we were next to Halo for like game pass. It did well. Okay. It got.
It got very flattering and frankly surprising critical and commercial attention.
It earned back its development costs, even putting aside the Game Pass deal very quickly.
It did not sell mega hits, but it is profitable and sustainable.
And the people who made the game have gone on to both continue to work with the studio and make their own things in a way that preserved their creativity and humanity, which is our purpose for existing.
But through all of this.
people are acting like this was my game.
And I am not going to downplay my own capabilities as a creator or my role in maintaining that vision, but I don't make games alone, and I don't think I would enjoy it.
So how we're going to structure this talk is I'm gonna basically take you through our credits list and con GDC into giving me a several thousand dollar pass so I can do an ad for all of the incredible people I worked with and how inside of this vision that is mine, you can see the individual people who worked on it and their perspective in bringing that game to life. First, I want to talk about Sam Chayot. He is our programmer. He's the reason why this game works on a Kinect in 2022.
As you can see here, Sam has a deep distrust of the Unity engine, and so he scaled our actual screen space to be the size of several football fields, so we could just drop in sprites and not tell Unity shit.
His perspective on, again, making games better, faster, cheaper, and healthier, and creating collaborative tools means we can make anything, any major piece of content in a game within two to five minutes, and it's created in a workflow that is itself joyful, because the process of making games should be as much of a joy, if not more so of a joy, than playing them.
We have Ben Chandler, who when I was originating the concept, I said, hey, how does this even look?
I had this idea in my head, is that pixel art?
Is this, what is this?
And then he dropped something that he should have fairly put a content warning in my inbox and said, does it look like this?
And I said, yeah, yeah, Ben, it does.
Uh, Ben Chandler has a way of seeing worlds and of rapidly iterating on visual concepts that meant he fused 2D pixel art that's very strong in its identity with ray traced 3D engine graphics and stuck them into a single thing that looks like a cohesive whole.
Ben was our audio director.
Julia Minamata, our second artist on the team, created the pixel portraits that defined its world.
And looking at the portraits of the game and how this has come together, you might see it as again a singular collaboration but actually two artists with very complimentary but also divergent skill sets worked together to make something that looks like nothing else out there. RJ Lake, our sound composer, created a dynamic soundtrack that nearly melted two computers.
Uh, every single tab in the game has a different mix of a central theme that's being made that also has an escalating mix once your trading day begins.
So we ended up making like four different mixes for eight different screens for every portion of the game.
And in our roughly 20 gigabyte repo for the title, 19 gigabytes are sound files.
RJ Lake is a madman and also someone with a priority on team health and on finding reasonable ways to bring things to life that even with the madness finds method to enable his collaborators and focus on the singular vision for the title.
Hunter Bond created this gif.
He is an artist.
He used to be a carpenter.
He is now a marketing expert.
And his insistence on supporting the team overall and to thinking and talking about how we can even.
turned down opportunities to ensure that the team had useful time to preserve themselves as human beings and focus on larger press beats as part of the way this game came to be. Marketing is a point as a part of the development team and anyone who tells you otherwise is either lying or ignorant.
Judith McCrory, earlier in the development process, we said, hey, we made a game that looks like this.
How do we turn it into key art?
And Judith, taking her skills from Cartoon Network, among other places, found a way to translate this into key art that defined the branding for the title.
Astralor Games, our QA team, also a independent developer in their own right who understands the needs of independent development, QA is a part of the development team, came in and.
introduced us to the glory that is Notion and organized the issues and points of feedback that could be brought into our title in a way that revolutionized several parts of the game, even right up to the point before release, to make sure that we brought the best experience to players possible. And finally, we have our producers.
Not finally, a lot of people worked on this game in multiple small ways that no matter what their size was, allowed this thing to be what it is.
Tanya and Meredith Hall are producers that came in near the end of the project.
And part of the reason they did is because this is a game called Witch Strandings.
We made it in the middle of making Space Warlord Organ Training Simulator because were a little bit crazy. And because of the way in which we work, that game isn't completely finished yet. It's 95% finished and we were just waiting for the final pieces of content to go in. And I kind of forgot to tell Sam to finish Space Warlord for three months.
Having other people in the room.
to advocate for the development team and to see where the wheels are turning and who can be unblocked and supported is essential to not just the game but the studio as a whole becoming a better place. Tom Vanita created a tutorial for an airport for aliens currently run by dogs that was like completed by over 90% of our players and I said I've never made anything with a spreadsheet before and I'm scared.
He came in near the end of the development cycle and provided a template for how to consider a game from a spreadsheet perspective that allowed us to create the content that led to the final version of Space World at Oregon Trading Simulator and something that looks reasonably balanced, even though this game, much like capitalism, is deeply broken.
And finally, uh, not finally, lots of people, Maxi Molina, uh, made our steam graphics.
We were tired after finishing the game, even with an emphasis on team health.
And I said, please someone make our steam graphics.
And Maxi Molina took the various pieces of art from the game, including making some new pieces to allow us to create among other things, a.
real money simulacrum using the steam trading card market of an organ trading market.
It turns out the human soul plummeted in value very quickly, which might be a commentary on Steam itself.
And Maximalina enabled all of that during a time when we were too exhausted to pull together such assets ourselves.
And finally, Alex Rose, a prolific indie game developer of his own right, worked on Super Red Rude Bear Resurrection.
We were coming hot into our release zone, dealing with some final things with Xbox cert, and I said, Alex, please save us. And he did. He parachuted into the team and with a few points of expertise allowed us to not just meet our date, but exceed it and have the game ready early.
There is a narrative in games that, as much as we attempt to dethrone the auteur establishment, continues to valorize people who single-handedly build projects.
And it's a lie, and we're partially responsible for it on a cultural level.
We say we want games that emphasize and support the teams that build them, and then take singular figureheads and make them into gods.
This game and my career is proof that so-called auteur games with a singular vision are made better when they visibly display the contributions, identities, and priorities of their collaborators.
And if you take anything else away from this talk, it's that time and time again, the people who contributed to this thing and solved problems that allowed us to release this game emerged from pre-existing relationships.
If I had this game as my first game and attempted to go into the breach, I might have smashed myself against the wall of reality in the process.
Your first game is not your worst game, but your best game is your next game.
And I didn't intend this section to have so much rhyming, but here we are.
You survive in video games by surviving, by shipping what you have and moving on to the next title, and saying that no matter what is in your hands, the people around you are more important than the subjective value of the product.
The more we nurture our relationships and our medium with the collaborators we're surrounded by, the better our games will become.
And I think that is particularly evident in the growth of the medium is seeing right now.
I don't make games alone, but the games that I make.
feel like me because of dozens of collaborators, seen and unseen, who make my work possible and who believe in a better medium.
And if you are here today and believe in a better medium, I encourage you, look for the ways that you can not just treat your collaborators well, but uplift their voices in your process because your vision will become stronger as a result.
Thank you.
Okay, we have six minutes for questions if anybody's got any questions, but there's also a wrap-up zone that we can go to after this. But if anyone does have questions for any of the panelists, you can go to one of these two mics and ask it there from.
And if we don't, we can all go home and sleep forever.
Please let us escape GDC.
I will not let you escape.
What kind of difficulties did you face getting the Kinect up and running on a modern game?
One of them is that we ended up outracing the end of life for Xbox's Kinect.
I think it got revealed a little bit ago that all of its drivers are about to be sunset, which is great when you've made the Kinect a critical piece of your marketing for over a year.
Ready?
So I was curious to your point where you're talking about how You need to uplift and identify and celebrate your collaborators Just how do you yeah, what's the best way to find those collaborators in the first place?
like especially if you're just starting out and You don't really know who you need or what you need for your game. Just how do you know who to look for?
Look for people who share your perspective and who can communicate and believe in the health of their collaborators first and foremost.
You can teach and cultivate skills.
You can go into a different area of development entirely, but what you can't teach is a human being to care about another human being.
Or at the very least, teaching that might be a much more involved process than is possible over a single development cycle.
So look for the people around you who...
have a rad perspective and are actively seeking to not just improve themselves but to create better conditions for their collaborators. I hire a lot of people these days and no matter what the skill set of the collaborator, I haven't failed with that methodology yet.
Thank you. By the way, you all can answer too.
Yeah, one thing to add to that, which is you should work with the people who make you the most excited.
When you see yourself being reflected back to you in the creative output of someone else, that's the best situation you can be in.
And those are the people that you want to hold close to your heart and pay.
Yeah, I've got a quick addition to that as well, which is basically piggybacking off of that.
I've had multiple times where I'm like, I wish I could do something that looked like X, or I wish I could work with a composer that sounded like Y.
And then I might, the gears click another couple times, and I was like, wait, why don't I just ask them?
And that has worked so many times.
So, uh, okay.
Go right on.
I have two questions.
One is, as a flagellant designer, how do I practice the dark sorcery called spreadsheets?
Oh, man.
Yeah, like, uh, there are a lot of tutorials online.
Like, genuinely.
The key I think is knowing the specific problem.
Like that's always the part that helps the most with spreadsheets because ultimately it's just.
a dumb way to do programming.
It's the only way I know how to do programming as well, so I'm not knocking it.
But if you know, if you can very clearly define the problem that you want, then you can get to the end of your expertise and figure out what question do I need to go ask the infinite sized pool of knowledge that exists around spreadsheets to improve on.
Sort of general knowledge isn't that helpful, but.
if you can find, oh man, VLOOKUP solved my problem, you've really improved yourself as someone who is using expressions.
And two is, who's going to Denny's tonight?
I'm not.
Nobody.
The cycle has to be completed.
I really want another panookie.
Okay, over here.
Oh, yeah, so hello.
After watching these micro talks, I have two main questions in my mind.
The first of which is, what the hell is Blaseball?
I need to see this.
I hadn't heard about it before, and now I'm very interested.
And my second of which is for the Denny's guy.
So.
So.
So.
So.
So.
So my question is, you talked about this constellation model and my impression of it, based on what you said, was having this cloud of collaborators, have a whole bunch of different, you know, important, all these collaborators in your group.
You also said this thing about backup support. So is there redundancies built into this model? Or is there, like, could you talk more about this?
Let's talk about something that isn't Demi's first and talk about the glory that's Blaseball.
Yeah, if you go to Blaseball.com you can sign up because it simulates the experience of watching like the NBA or the MLB.
We're currently in an offseason so we're not running right now.
But if you go and sign up, you'll get added to our newsletter and you will find out when we are coming back.
And I promise you will know when we are coming back.
All right. That's very ominous.
As far as this consolation and collaboration.
We actually, we just ran out of time.
Oh, sorry.
You'll never learn.
I'm keeping the knowledge, it's mine!
We'll go ahead and wrap up here.
