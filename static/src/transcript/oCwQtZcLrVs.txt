OK, thanks for tuning in.
This is Mining Your Own Design, Crafting the Crafting System in Astroneer.
Let's get right into it.
So first, just a couple of quick introductions.
I'm Aaron Bittlecombe.
I'm a technical designer with System Era.
And I've been in games for about eight years and been working on Astroneer for the last three of those.
Before that, I worked on Galaxy, this 2D roguelike shooter, and on Envelop VR, which was a desktop VR platform.
Most of my career has been focused on gameplay and interaction design, especially features that are highly physical and tactile.
But I've also worked on everything from systems design to engine architecture.
I'm sure any indie devs listening are familiar with wearing lots of different hats.
And I would like to overhear a gameplay programmer in a system era.
I started in games around the same time as Aaron, but I worked in mobile and casino games before making the jump to PC and console.
In addition to programming, I also have a design background that's been part of my work.
I've often worked in UI and UX and large gameplay systems.
I made the Absurd Seagull Simulator's Sploot to try my hand at VR and mess around with its tactile interactions.
And I did independent work for a while after that, also wore many hats, and joined System-R about three years ago.
All right, so what is this talk actually about?
Well, we wanted to give you a look at some of the lessons that we learned while working on our crafting update, which came out near the end of our early access period.
We'd identified that the crafting loop was kind of struggling to scale up with the additions that we'd made to most of the other systems in the game.
But to improve it, we had to make big changes to widely integrated parts of the game.
It was kind of like trying to perform open heart surgery, but on a conscious patient.
Once we got into working on it, we quickly started second guessing ourselves.
And it was kind of a red flag that we didn't understand something about Astroneer.
Mining your own design is really just a way to describe the process that we developed to overcome that paralysis.
We treated Astroneer kind of like an archaeology dig site, digging into it and deepening our understanding of how it worked.
It allowed us to make changes that could be almost seamless.
As a new player, you'd be hard pressed to spot the new from the old.
This meant reconciling some conflicting ideas about the core aspects of our game, which made our goals seem mutually exclusive at first.
That conflict only really became apparent when Elijah and I started pushing forward what at least felt like competing visions for the game.
We didn't really set out to use this back and forth process. It's just what emerged over the course of putting this update together. Mining your own design happens whenever we were in conflict with each other. I was coming at the crafting system with more of an outsider's perspective, while Aaron was really familiar with the existing gameplay and how players were engaging with it.
Soon after we started working on the update, we both accepted that we both had valid points.
And diving into Astroneer's mechanics to break them down and understand them wasn't so much to prove who was right, but to find some sort of missing or misunderstood piece of the design that could reconcile our perspectives.
We didn't realize it at the time, but this is going to change our understanding of Astroneer and how we build it.
Working together also reviewed holes in the design process that we were using and advanced it further.
It established the immense value of bringing the engineer into the design process early on.
So, if you're not familiar with it, Astroneer is an exploration, crafting, and survival game set in space. It focuses on ground-based exploration rather than spaceship travel, and it's limited to a small set of planets in a fixed solar system.
By this point in development, we had a lot of things that already worked great and made our game really unique.
Our planets were procedural, but each of them had a distinct identity, and this made exploration both beautiful and unexpected.
Our terrain was fully deformable, and you could sculpt it like Play-Doh.
Item interaction was extremely tactile and diegetic, which made it not only charming and toy-like, but it also was intuitive for new players.
And we had this chill, low stakes vibe that emphasized relaxed problem solving, with only the occasional moments of danger to kind of spice things up.
All of this was presented in a vibrant aerospace fantasy package.
So what was the problem?
Well, player engagement dropped off after just a couple of hours.
We were at early access and the opinion of the player base hovered around, hey, great concept, can't wait to see the full game.
This had not shifted despite months of updates.
It was clear that there was something in Astroneer that was sapping player motivation or just not really keeping their interest.
There were a lot of fun and interesting things, especially what we had added recently to the game that players just never even got to see.
I believe that it was the crafting system that was kind of the main offender for all this.
It was flat compared to the new drip of experiences you got from spelunking, unlocking items, and visiting different worlds.
Baseboarding and exploration both generated resources that followed into crafting.
It was kind of the end point of almost all steps of your gameplay.
Nothing changed how crafting worked, though, past the first hour of the game.
I liked a big moment where a mechanic got introduced that changed some part of the crafting system you're familiar with and gave you this totally new experience with new opportunities.
Thanks.
I like the cadence of crafting games, how they manage to fold in new resources and new steps, new ways of building the longer you play.
These are big, important beats in the experience that give you something new and interesting to play with, and they make me excited to see what's going to come next.
It felt like Astroneer was really missing this opportunity.
I thought that we should have more resources in the game, but just not make them all available from the outset.
I wanted to add a few new modules that combine or transform the existing resources into entirely new ones.
This would give us a couple new resource sets, unlocked by these modules, to divide the crafted items up in between.
Each module would feed into the next, giving us a nice natural progression so that we could divvy up the recipes between early, mid, and late game pretty effectively.
I didn't actually disagree with Elijah, at least in principle, but I was having trouble squaring it with that same laid-back, low-stakes vibe that felt like a core part of Astroneer's identity.
The team had often talked about simplicity and minimalism as watchwords for the game, and I was worried that the various additions we'd made to the crafting system already had moved us away from those concepts.
Despite the fact that the overall crafting loop was shallow and repetitive, it also had a lot of moving parts that completed for the player's attention.
On top of that, after the smelter, each of our crafting modules only got more complex in their interactions, involving things like reusable containers, which were needed to hold resources.
Even though players use these modules less often than the smelter, their complexity took a lot more focus.
And it wasn't clear how much the game had actually benefited from it.
The more Elijah and I battled over this, the more we started to realize that we were really arguing over the issue of cognitive load in our game.
Normally, when you hear that term, it's in a negative context, as in you have too much of it.
But you can just as easily end up with not enough, which results in losing player engagement.
This was the problem that Elijah was pointing to with our crafting system.
Its core loop centered around just three simple steps that the player repeated ad nauseum.
You mine resources out of the ground, toss them into the smelter, and use the output to print new items.
On top of that, all but one of these resources was available on your starting planet, and there were no choices in how to use them outside of what you wanted to print.
But at the same time, we had added several additional crafting stations.
And instead of creating a stable long-term loop, they'd started chipping away at the simple elegance that players had found appealing to begin with.
From my perspective, I felt like we were already placing too much cognitive load on players to the point that we were losing them to frustrating complexity.
You run into an apparent contradiction of opinions like this, you know, too much cognitive load versus too little.
Don't be too quick to just discard one argument and take the other.
It's easy to use a common language that is actually obfuscating what you're really talking about. Aaron and I both had an opinion about the crafting system, but it was only when we laid out the specifics of our positions that we realized we were talking about different subsets of the crafting system. Aaron was talking about the visceral moment-to-moment interactions that the player had with crafting.
He did have a really good point about how these modules are complicated to players.
for players to use, which I hadn't concerned myself with very much.
Instead, I was focusing on the systemic interactions within the crafting system and how to beef those up. We were both right, but my relative distance from working on the crafting system day in and day out gave me a pretty clear view of the core loop of Astroneer's crafting and its deficiencies.
And speaking of the core crafting loop, This diagram illustrates it and kind of how it works.
To start with, players use the deform tool to mine resource nuggets from deposits embedded in the soil.
Two of those mined resources could be fed through the smelter, which would turn them into metals.
And the final crafting step was using the resources that you had mined and that you had converted with the smelter in order to make printed items.
printer would consume a couple of nuggets and output some kind of item like a solar panel or an oxygenator, something of the sorts useful in space.
The smelter was the only module that created new resources in the game.
And it was also the first crafting module that players would unlock after about 30 minutes of play.
It only created two new resources that had a use.
Ores didn't have any of the use other than to be smelted.
They weren't used in any crafting recipes directly.
So the player wasn't facing many trade-offs when they were engaging with the crafting system.
Using it was very simple.
You can see in this video over here that all you have to do is take an ore, place it onto the smelter, and then it turns it into a nugget of metal.
It's a one-to-one conversion.
And...
And again, you can't use the or for anything else.
So with the speltzer being so simple in its form and having such a simple UX, it really felt more like a beginner crafting module in order to kind of ease players into the concept of using them.
But you could make literally every item in the game using just the speltzer and printers.
So let's take another look at that crafting diagram.
As we said, in addition to the core loop, there were these three other modules that were involved in crafting, but were on their own separate track.
We'll call this track the spur, because it kind of poked out the side from the core loop.
The first of these was the soil centrifuge, and it was practically the module equivalent of your terrain tool, as it produced all the same resources as it.
Branching out from that were the chem lab and the condenser, both of which made the same single resource, hydrazine, which served as Astroneer's rocket fuel, but wasn't actually used in crafting.
The soil centrifuge worked by taking a sample resource that you would have mined out of the ground and effectively cloning it in exchange for the soil that was collected when you deformed terrain.
There were a few parts to it that can make it confusing to use, which is probably a little easier to understand if we see it in action.
So the orange buttons that you're seeing would allow you to select whatever output you wanted, but it also made it clear which resources could be cloned.
But you could also just select your output by placing any valid sample resource, which would automatically set it as the selection.
The amount of resources that you got back depends on how much soil you provide, and different resources have different exchange rates.
All of this presented a bit of a learning curve without adding anything fundamentally new to the crafting loop.
In the case of the condenser in the chem lab, like we said, both of them only produced that single resource, hydrazine.
Originally, hydrazine could be either mined out of the ground or produced from nothing but the atmosphere and electricity through the condenser.
Mining something as complex as rocket fuel felt kind of bizarre, but the condenser was way too overpowered and unbounded to serve as the only way to produce hydrazine.
So to address both of these issues, we previously added the Chem Lab, which crafted hydrazine from a new resource that we used to replace the hydrazine deposits.
At the same time, we changed hydrazine to depend on the same reusable canisters that were also used to store soil.
This introduced a constraint on the previously unbounded production in the condenser, as players now needed to manually supply it with fresh canisters.
But the downside was a finicky and kind of tedious UX.
Players had to juggle their canister use between soil and hydrazine.
And while we had intended for the chem lab to eventually produce an entire set of complex resources, in the meantime, we were presenting players with two ways of doing exactly the same thing without a clear trade-off between them.
So let's see how those both worked.
With the condenser, using it was actually pretty simple.
You just attached an empty canister and started it running.
As long as it remained powered, it would slowly fill up the canister until it was complete.
You could also put empty canisters in storage next to it, and they'd be pulled in automatically when the previous one was full.
For the catalyzer, that thing that looks like a pizza oven, hold the mind resource, ammonium.
For every nugget of ammonium, you also needed an empty canister.
If you had a mismatch between those, the machine wouldn't even start.
Otherwise, you'd set it going, and a few seconds later, you'd have some hydrazine.
The issues with the spur modules was more subtle than just an overtly broken design.
It wasn't that players didn't enjoy using them at all.
Outside of that initial learning curve, it was actually full of the kind of tactile and dynamic interactions that Astroneer was so special for.
The real problems only manifested in the interactions between these modules and the rest of the game in one of two ways.
Either they were too cut off from other systems, kind of acting like a mini game, or they were redundant with other systems and ended up undercutting them.
We found that these kinds of design challenges can be especially difficult to address since things often seem to be working up close.
This not only leads to an urge to defend them from valid critique, but it can also obscure problems until much later on, after those systems have become entrenched.
Confronting issues like this require you to look at your game holistically and evaluate individual parts of your design as gears in the larger machine.
In the case of the condenser and the soil centrifuge, both of them had been built around testing out different sinks.
The condenser was a power sink, and the soil centrifuge, naturally enough, was a soil sink.
In order to demonstrate each of these ideas, we'd use existing resources to service their output, mostly just as a convenient proof of concept.
But in each case, this had led to the same unintended consequence.
Both functioned as resource gathering shortcuts that started to undercut the need to collect resources from the wild. Mining resources served as the backbone for exploration, and it helped establish the alternating rhythm between exploration and base management.
The Chem Lab was the least problematic of the three, and mostly it just suffered from being underutilized.
We still felt like there was a great opportunity to expand its use with new resources, but this was stymied by the problems we were having with the other two.
With the strain that these modules placed on the rest of the loop, the obvious question was why not just cut them and start over, aside from the fact that we were a live game?
The problem was that from the player's perspective, they had real value.
The instant gratification that they provided sidestepped a lot of potential frustrations that arose when needed deposits came up short.
In a way, they functioned kind of like player junk food.
In small doses, there wasn't a problem.
But without any limits placed on them, they soon took over the more balanced diet of the mining group.
Players gorged themselves until they started to feel sick and ultimately started burning out.
We saw this pretty clearly with the soil centrifuge.
I had actually anticipated the impact that it might have on resource mining, and I tried to mitigate it by making it less efficient than mining deposits.
It also required that sample resource of whatever you wanted to produce, so you couldn't just skip ahead without doing some of the initial exploration.
The idea was that it would function great as a supplement to mining, since you could collect soil in the process and get a double return for your efforts.
But players started to just grind for the soil itself, digging up the terrain around their base instead of continuing to explore for deposits that they could just clone instead.
We'd made some attempts to tune our way out of the problem, but it didn't really seem like there was a sweet spot.
We were kind of in a stalemate with our players.
So over time, we really lost sight of why these modules were introduced in the first place.
The design intent was to provide new resource sinks and engagement with base builders.
We paired those things with these potent resource shortcuts as an incentive for players to generate power and collect soil.
But over time, in our minds, the intent incentive became a single, inseparable assumption about how these modules just had to be.
We felt stuck, and trying to balance a resource clutter in this infinite rock and fuel generator was not working.
This is why mining your own design and doing it with someone else can be so important.
in really decomposing how your design works and figuring out what parts are actually necessary and what parts are not.
And I brought the perspective to Aaron that we needed a new resource set that expanded over time with the crafting gameplay.
He started to look at the existing crafting system in a totally new light.
My proposal provided a new set of incentives for players to engage with crafting and proctored him to look at our existing modules and the incentives they provided and asked, wait a minute, maybe these modules don't have the right incentives at all.
This was the sign we needed to know that we were on the right track with this redesign.
The experience that we intended the player to have started lining up with how we were incentivizing them to play Astroneer.
If you find yourself struggling to align your design's incentives and intent, challenge the assumptions that you're making on each half of that divide.
This can reveal a hidden or flawed assumption.
If you're still struggling to challenge your assumptions, then collaborate with someone who has a very different vision for the design.
It's easy to get attached to the way things are and to take it personally, but let it go.
This can be difficult to practice, but it's a powerful way to get through problems that have gotten you totally stumped.
In hindsight, the solution to these three was actually pretty straightforward.
Since all we needed was to prevent these modules from being redundant with each other, then the answer was to make all of their outputs unique.
As soon as we landed on this idea, it immediately clicked for us.
Having more modules that made unique resources gave us a way to expand the resource table without adding tens of new deposits, which was pretty disruptive to the game.
Resource acquisition could tie into additional game systems in a more fundamental way, and most pressingly, it would expand the depth of the crafting system without even needing new modules, while simultaneously reducing the cognitive load caused by the current disjointed system. The result of this was a distinct purpose for each of the three modules that actually strengthened their existing conceptual identities.
First up, we had the soil centrifuge.
Instead of cloning our mined resources, we coined the idea of trace minerals that could only be produced from soil.
This leaned into the fact that soil could be collected anywhere, making these resources more reliably available than their mined counterparts.
This also did away with the idea of the confusing sample mechanic, which made it much easier to select what you wanted.
For the condenser, we embraced the idea that you were collecting resources out of the atmosphere itself, going further with that idea and giving every planet a different set of gases that could be produced.
And since that meant it no longer took the place of other systems, there wasn't as much need to constrain it, which allowed us to do away with the reusable canisters that players were finding kind of tedious.
And finally, for the chemistry lab, we could finally expand it into a multipurpose crafting station.
To differentiate the complex resources that it would produce from the smelter, we introduced the idea of composite resources, which would be made up from mixed ingredients.
This had a secondary benefit in that it allowed us to compact multiple resources into one, which was particularly important in a game with a diegetic inventory, where your inventory space was actually physical and could take up real space in the game.
Taken all together, these changes not only addressed the existing issues that we'd had with these modules, they opened up new opportunities for us.
The condenser and the centrifuge could provide new challenge factors for resource scarcity, planet travel, and large-scale terrain deformation.
And the Chem Lab created a huge multiplier on our raw resources, adding any number of permutations between them.
For the first time, it felt like our goals for this update actually seemed to be in sight.
You can kind of see with the graph there how this would work.
The three different sources for our raw resources could funnel through the other crafting stations into finally a complex one at the end.
So fixing these modules required us to take a step back and ask two questions that were vital in this process of mining our own design.
What do we want the player to do?
and why is the player willing to do it?
The first is about examining your intent as a developer.
How does your economy, enemy AI, and counter design all come together to make the gameplay experience for the player?
What possibilities and challenges are you trying to introduce to them?
The second question is about what your player is actually doing in your game.
Players can come up with shortcuts you never anticipated that subvert your intent.
They can also put up with boring or bucky gameplay to accomplish their own personal goals.
Motivations can vary wildly.
They can be something like mastery, joy, item rewards, fantasy fulfillment.
But what matters is that your player wants it.
And since it has shaped the desire path that players take through your game to get to what they really want.
You're playing the game wrong is kind of a classic designer complaint.
But this is more about spotting negative player motivation that's enticing them to suffer for what they really want.
The goal is to alleviate player fatigue and make sure they're not putting up the clunky UX or in gameplay.
This is a factor in our big game lull that I didn't totally appreciate at the outset.
I kind of thought it was all about systemic design, right?
But once you've identified these negative player motivations, fixing them is going to lead you back to that question of, what do we want the player to do?
Every time you iterate those two questions, you bring your design's incentives and the player's desires into tighter alignment.
This probably doesn't sound like a totally revelatory process to you, but it can be easy to forget to do it at the right time, and more importantly, to consider both of these questions fully.
So at this point, we had kind of assumed that the hard part was really behind us.
Astroneer uses real world materials.
Partly this is for the aerospace fantasy aesthetic, but we also felt it made the printer recipes more intuitive.
we assumed that this rear wall connection would make it very easy to pick additional ingredients.
Aaron did some research and came up with a potential set, and it was too large, and he struggled to narrow it down. Thinking that maybe we just didn't understand them well enough to leverage these new resources, Aaron invited me to take a look over the potential ingredients with him. I have an interest in engineering and manufacturing.
These were real-world ingredients, they had real-world properties that were useful in the manufacture of various goods.
Things like electric wood conductor, light structural material, shock absorber.
We thought tagging all these new resources with these properties was going to make it obvious to pick.
Instead, we found it no easier to judge.
It was no easier to judge if Astroneedle needed another electrical conductor or shock absorber versus if it needed tungsten carbide or carbon fiber.
So running around in circles like this was an indication that we didn't totally understand something about our design, maybe an entire pillar of our design that hadn't been identified yet.
We had to do some mining to discover the missing connection between Astroneer's resources and the recipes.
From the outset, we assumed that we need more resources was the problem that we were solving.
It was, but mostly in service of adding a crafting progression to our game.
We kept asking, what are these materials used for in the real world to try and understand them better?
But that's not as useful a question as, what are these materials used for in Astroneer?
To print items is the answer to that question.
Half of their purpose was unexamined.
Our exhaustive research on the new resources made us pretty sure we had a good grasp on them.
But maybe we didn't understand the anatomy of a printed item itself well enough.
It was easy to forget about printed items because we weren't really adding many to this new update.
So we took all the resources off of the board and put up all the items you could print instead.
We went through each of them and started asking, what would matter if you tried to build this?
A shuttle would need to be light, strong, and heat resistant.
A rover would need to be tough and have good shock absorption.
This line of questioning made us focus on the output of the crafting system, and it generated the same set of material properties that we'd come up with for the resources.
This is an exciting moment.
Up until this point, we'd never thought about our printed items in this way.
We had such a small set of ingredients in the game that we'd made all of our recipes on intuition.
There was an underlying logic to the system we had just never articulated before.
Unfortunately, with Astroneer late in its early access development, there were a lot of printed items to do this mapping exercise on.
It gave us a very clear roadmap of the material properties that would be most useful for printing Astroneer-type items.
Knowing that made the set of resources that best matched those material properties quickly emerge.
So part of the problem here was that we were really relying too much on our design intuitions.
Especially on a small indie game, it was pretty effective for a long time to just kind of run off of our gut feelings on what the game needed and how things worked.
In the early stages of development, having good design intuition is an effective way to build up a foundation.
But as the game becomes more complex, those same intuitions can start to get murky.
Rather than relying solely on your gut feelings, try to identify the underlying rules guiding your intuitions and make them explicit.
This makes it possible to quickly iterate on concepts with confidence, instead of spending weeks trying to understand why something feels off.
So we were in a pretty good place.
Every new ingredient in the revised crafting system had a purpose, except for the gases.
Gases were tough to think about.
They are used in manufacturing, but more often than being just like a direct ingredient in making something, they're more like a part of the manufacturing environment that you have to control for.
For instance, oxygen oxidizes materials.
And so if you're making something and you do not want it to oxidize, don't make it in an oxygen-rich environment.
The only gas that made sense as an ingredient was hydrogen for making hydrazine.
But we needed six useful gases to spread across all the different planets to have our progression.
We considered using the gases as part of the recipe for the crafting modules to try and capture that concept of they're a component of the manufacturing environment.
But it ended up being a weak comparison.
An alloying furnace isn't made out of nitrogen.
It just kind of needs it to run.
More importantly than that, we wanted players to build a lot of atmospheric condensers, not just get a gas once and then never have to worry about it again.
As before, it wasn't that we hadn't thoroughly researched and considered the gases carefully, but that we were failing to consider how they were actually being used in the game.
We just rolled with the assumption that gases would be used to print items like any other resource.
But there was a question to be asked of, well, what are the printer recipes for?
They're there to give players items, yeah, but they're also there to take the players' resources.
Printer recipes are the resource sink in the game, but they don't have to be the only one.
We were chasing the power sink of the atmospheric condenser.
We could just come up with a new sink that could keep pace with its output.
Maybe the alloy furnace could require certain gases to run.
Thinking about it this way made sense for the gas to only be partly consumed and to have like a fuel for many of our different crafting recipes.
Reframing the role gas is played in crafting led to a new sort of item.
canister of gas that would get gradually consumed to run crafting modules.
The shift into contextual framing for the gases allowed us to think about them differently and break the constraints that we'd always had around printer ingredients, where they were fully consumed and they were competing with all the other printer ingredients in their input slots.
It made us more comfortable with putting the gases in all kinds of recipes for making composite resources that maybe may not have been a major player in otherwise.
This idea of what's this for that we asked with the gases isn't just an arbitrary question.
We've talked about several design problems that were only solved for us after we challenged a constraint that we had previously assumed was essential.
What's this for is kind of a thought exercise, and it's actually one of my favorite design tools.
It's a simple way to effectively take a step back when you find yourself spinning your wheels and remind yourself of what it is that your ultimate goal is.
What do you want the player to do, and why is the player willing to do it, are really just specialized versions of this idea.
Asking, what's this for, forces you to articulate what it is you're trying to accomplish, without focusing on the particular approach that you've been taking to get there.
So, for instance, If we used it on the soil centrifuge, it revealed that we just wanted a sink for soil and simply needed to provide something of value to do so.
If we employed it on the resource table, it revealed that we needed to know how our ingredients would be used in Astroneer, not in the real world.
And of course, with the gases, it got us past trying to confine them to the same conceptual uses or other resources.
From here on, things went pretty smoothly.
we'd realize the value of minor redesign, and we got into the practice of challenging each other's assumptions on the fly.
Our last problem to tackle was how the player would make the new composite resources.
You see, we'd already identified five or so manufacturing techniques that I had convinced everyone that we were going to turn into new crafting modules.
But once we'd parceled the resources out between them, few were severely underutilized.
We collapsed the crafting manufacturing techniques into two generalized concepts, both of which could justifiably use gases as fuel, heat processes relying on inert gases, and chemical relying on fossil gases.
This resulted in two composite resource machines, the alloying furnace and the chemistry lab.
We prototyped these and play tested them with the team, but they were so similar, the team found it very difficult to guess.
which one they needed to use to make any particular resource.
The only difference was the type of gas used, volatile versus inert.
Otherwise, they had the exact same UX and basically did the same thing.
People don't have a great intuition about volatile and inert gas, as it turns out.
It just wasn't a strong enough distinction.
And it was a departure from how unique all the other crafting modules felt from each other.
In the end, we combined these two and kept the more conceptually open-ended one, the chemistry lab.
Aaron had really challenged me and be like, come on, man.
What are these really for?
And I was like, all right, you're right.
This replaced the old chemistry lab, and it brought us full circle.
We'd always imagined the chem lab could be the station for combining complex resources, and now it finally was.
This left us with a final set of modules that kind of had a surprising twist to them.
Not a single brand new module was necessary.
With all the changes to our existing modules that we already talked about, we had everything that we needed for this crafting update.
Not only did this preserve existing save files, which is a godsend in a live game, but it made onboarding the player to the new crafting system incredibly fluid.
While the inputs and outputs changed, the overall UX for each item was familiar.
It had been improved somewhat, but it remained largely the same.
This is true, too, of their visual language, which A lot of these modules were kind of older.
And so really, when we visually updated from the up, when we upgraded them for the update, it felt more like that, just visual updates, not a total rework of the modules.
We managed to address both of our concerns about cognitive load that had plagued us at the outset of this project.
Being able to keep that familiar UX and visual language kept the cognitive load manageable.
We didn't have to teach players how to use these things.
But redesigning their output.
totally added this depth to the crafting system that gave it some more staying power.
It was as though we had uncovered the true form of our existing modules and our ugly ducklings had grown into be beautiful swans.
So this had taken us pretty much to the finish line with this.
Presumably, all that was left was to actually implement these modules in game and ship the update.
So far, we've mostly talked about this idea of mining your own design in the context of identifying the broken or incomplete parts of your game and finding solutions that still stay true to it.
But as we learned at the end of this update, it's also an important piece of protecting the parts of your design that do work or critical parts of the new solution.
While the crafting update was on the whole a significant success for us, it wasn't without some key mistakes that ended up compromising some of the goals that we had set out with.
Most of these came right at the tail end of development.
At this point, Elijah had been pulled away from direct collaboration with me in order to start actually implementing these new features.
Ostensibly, the design had already been locked, but as the feature started coming online, ongoing feedback from the team made it clear that further iteration was needed.
Unfortunately, we had neglected to buffer the schedule sufficiently to absorb these setbacks, resulting in some hasty last minute changes to the design.
And without the benefit of Elijah's counter perspective that I had relied on throughout the rest of the development process, we were missing one of the key ingredients to this idea of mining our own design.
I want to take a closer look at one of the mistakes that we made here and discuss how better using the concept of mining our own design could have prevented, or at the very least, mitigated it.
Playtesting the new version of the soil centrifuge had revealed two overlapping issues.
Previously, the overlap between the centrifuge and mined resources provided a kind of release valve on the persistent need for the common resources.
Without that overlap, players started to chafe against that constant need, which crowded out their limited personal inventory space and forced them to make multiple trips to collect all the different kinds of resources that they needed.
And as they depleted the local deposits of those common resources, this meant tedious expeditions in search of a resource that had once been plentiful.
On the other hand, The exclusive nature of the centrifuge meant that soil collection was now an unavoidable part of the crafting system.
This was, of course, intended, but the prevalence of the soil-extracted resources in our new recipes meant that players had trouble keeping up using only the soil that they got while mining deposits.
We kind of had pushed into the soil grind instead of alleviating it.
With the clock running down toward our release, we needed to figure out how to address these issues fast.
The simplest solution, at least on the surface, was to just restore some of the mine deposits to the centrifuge, and at the same time, make deposit versions of its new exclusive ones.
This did solve the immediate problem, but it also removed the centrifuge from the crafting progression.
And now the mid-game rested solely on the shoulders of the chem lab and the condenser, spread out across six different planets.
So what could we have done instead?
Importantly, the two issues that had shown up in play testing had a serious impact on the pacing of the crafting loop.
Having a solid progression was definitely important, but it wouldn't matter much if players tired of the loop before they had moved through it. Doing nothing wasn't really an option here. As before, the real failure on our part was in not asking ourselves the right questions.
What do we want the player to do? And why is the player willing to do it?
More simply, what's this for?
Asking those questions would have reminded us of the critical role the centrifuge played in our new progression and redirected our attention on other areas that were more flexible, such as the exchange ratio on the centrifuge or the frequency with which its resources showed up in recipes.
But it had been all too easy to see the new paradigm that we were introducing as the actual problem and fall back on aspects of the old system that were at least a known quantity.
Ideally, we would have had time to iterate on these issues.
But even with the most forward-looking production schedules, the reality of development sometimes means that you have less time than you'd like to make decisions.
Mining your own design allows you to isolate the most important core principles of your game and better adhere to them when you're making these kinds of tough calls.
Ultimately, the cracking update was still a major success for Astroneer.
not only filled out our mid-game, but it also paved the way for another year and a half of updates.
Since release, the number of crafted items in the game has more than doubled, and it's done so without adding a single new resource or crafting module.
We haven't touched this crafting system at all since we introduced it a year and a half ago.
But more importantly, the process that we went through on this update greatly improved our understanding of Astroneer, allowing us to make future updates with more confidence and efficient iteration.
Earlier this summer, we released the automation update, something we planned for the game for a really long time.
It was one of the most major features that we've released.
Made a number of improvements to the crafting, providing new ways to counteract the tedium of manually upkeeping a functional base.
But thanks to the stable foundation we built, we were able to layer these new features on top of the existing crafting system without having to overhaul it at all.
So, minding your own design is not just a technique that's specific to Astroneer.
It's about asking the right questions about your game to avoid sticking to familiar design patterns that are failing you.
Asking these questions that challenge even your deeply held assumptions can allow you to mind the text for hidden rules and a deeper understanding of what makes your game tick.
Bringing in someone from a different discipline can invite a totally new vision for the design that's able to generate the sort of questions that are tough to ask yourself when you're really close to it on a daily basis.
It's all about nutting yourself into asking those fundamental but powerful questions.
What do you want the player to do?
Why is the player willing to do it?
WTF?
What is this for?
All right, that is our talk.
Once again, thank you very much for tuning in.
We've put up our email addresses if you have any questions that you want to send us.
And I hope very much that you enjoy the rest of GDC.
