All right, I'm going to get started.
Just come in and sit down.
We only have a short time for this talk, so we've got to try and cram in as much as we can.
My name is Donald Mustard, and I'm the creative director at Chair Entertainment Group.
This is Jeremy Mustard, who's the technical director at Chair Entertainment Group, and today we're going to be talking about designing Shadow Complex.
Just really quickly, Shadow Complex was released for the Xbox Live Arcade this past summer.
It was a very successful game by at least our standards of looking at things, and we're going to talk a little bit today about just some of the different philosophies that we kind of brought to our game design in trying to make a successful downloadable game.
and we're gonna hopefully what we can do is impart some at least a little bit of Knowledge to help you guys making your games. We sure stumbled through a lot of stuff And we well we began the process of learning things along the way Now I'm gonna need your guys help The best the best way that we're gonna actually learn something today is if you guys ask good questions so I'm going to rattle on for a few minutes here, but I need you guys to be thinking of what things actually matter to your games and what you're doing and and please please ask us because I probably won't cover Everything that's relevant to you, and that's really the whole point of you being here is to actually Hopefully get something out of this So let's get started Embracing the limitations, I think that is the number one key thing that you need to do when you are making a downloadable game?
What are some of those limitations?
For us, and this is what we kind of think, probably the main limitations that you're probably hitting if you are like us.
If you're a small team, if you are making an original game, and you're really kind of embarking out there on your own.
So these are what we found were our biggest limitations were genre, budget, tech, team, and memory.
So, genre. Genre is one of your limitations because you aren't just competing against other games that are released on the downloadable space or the downloadable consoles. You really are competing against Gears of War, Mass Effect 2, Uncharted 2. That is your real competition.
And you need to find a way to differentiate yourself from those kind of games.
and that is an awesome opportunity.
It's an amazing opportunity, actually.
It's the coolest thing that's ever happened to our industry, I think, that you have the opportunity to orthogonally go away from what the mainstream games are doing or what the big $60 retail games are doing.
You have the opportunity to, in the downloadable space, create something completely unique and cool that will be a fun, entertaining experience for your consumers.
Okay, budget. If you have a $10 million development budget for your live arcade game and a $20 million marketing budget, just leave now. We all hate you. That's great. I don't think that that's reality. Reality is you don't really have much of a budget at all. You have no marketing. You have no PR.
And so, you need to find ways to make that work for you.
You need to find ways to be unique enough that the media will be intrinsically interested in what you're doing.
You need to find ways to differentiate yourself.
And again, lots of opportunity there with so much noise of, you know, again, all these big games.
You have an opportunity to be unique and special and push things that way.
Tech. Tech is something that we're going to talk about a little bit. We debated this for a while, but we ultimately came to the conclusion that every minute we would spend writing our own technology would be a minute someone else would spend who used licensed technology to be focusing on gameplay.
And so we, when we first started Shadow Complex, we were an independent studio kind of doing our own thing.
About halfway through developing Shadow Complex, we were acquired by Epic Games.
So that probably gives you some clue into what technology we decided to go with.
But that really was one of the best decisions that we ever made, because that allowed us to focus completely on creating unique, cool gameplay instead of writing a renderer or a physics engine.
The consumer does not care about that.
They care about what you're doing cool in your game.
And then memory. At least at the time when we started Shadow Complex, this was a pretty big issue.
When we first started Shadow Complex, we were under the impression that our game had to be under 150 megabytes total.
Our previous game, Undertow, was under 50 megabytes, and we learned a lot on making that game of how to really, really, again, kind of embrace the limitations of how much memory you have.
and find ways to boil your game down to its core essence of fun.
And we're going to talk a lot about that.
Okay.
So, we came to the conclusion that people don't want a cheap version of their favorite retail game.
What I mean by cheap is, you know, imagine if we went and spent our limited resources making a kind of a hacky, crappy version of Gears of War.
You know, why would you want to pay $15 for a crappy version of Gears of War when you can go buy the full retail version and have it be awesome?
This is something that people have spent so much time making, and that just doesn't seem like a smart investment.
For us, we conclude that people want a unique game experience, and I think that that's just a pretty obvious statement, but sometimes it's hard to forget that when you're thinking, oh yeah, yeah, yeah, we're just going to go, we're going to take, you know, the Unreal Engine because we decided to use it, and we're going to make...
You know, we're going to make Gears and we're going to sell it for $15.
No, you're not.
You're not.
It's not going to happen.
You don't have the time and you don't have the resources to do it.
So find something that can be really unique about your game and deliver a unique, original game experience.
I think that people are, I mean, there's always going to be room for old ports or remakes of old games.
But that isn't really what's going to drive this market forward or our industry forward.
We need to be originating and pushing new things forward.
Okay.
The other thing that we decided was that we had to find what a small game could do that a big retail game wouldn't do.
And so for us, you know, we deliberated about this for a long, long time.
And for us, what that ultimately meant was we tried to target an old and abandoned genre.
which to us was kind of this Metroidvania side-scroller adventure genre that had been abandoned.
No one was making games in this genre.
And we said, what if we took that genre and we fused that with some of the modern sensibilities that have come out, some of the modern ideas of AI and physics and graphics.
That would be a really cool combination.
And guess what? Nobody's going to do that at the $60 price point.
No one would do that. No one's going to make a next-gen side-scroller in this style.
So we said, we're going to, and we're going to do it on this platform.
If you even wanted to experience that kind of game, you needed to have a Super Nintendo or a Game Boy or an original PlayStation.
There was nothing on the 360, even remotely close to this.
So we found a niche and we decided to push it.
All right. So let's kind of actually get these all up here.
So, once we determined that, we feel pretty passionately about this next stuff that we're going to talk about. Because you have a small team, you don't have time to write really, really lengthy documents. The most important thing that you can do is create gameplay.
So we found that it was critical for us to quickly, quickly plan out what our game was and have big sessions with your little team.
That's the advantage you have of a little team, is that you can all gather around a little table and hash it out.
And you can get a collective understanding quickly of what you're trying to do.
And instead of then documenting it in a 50-page design document, make a three-page design document.
The design document for Shadow Complex was, I think it was like five pages.
Right. And I had a couple of couple screenshots.
And I mean, it was it was nothing. It was very, very boiled down.
And but we quickly, quickly focused on getting gameplay up and running when he made undertow.
So undertow was a 16 player multiplayer shooter.
Within 10 days, within the first 10 days of development, we had the entire game up and running and we were playing multiplayer matches against each other and it was freaking awesome.
I mean, it was really, really fun to do.
The Shadow Complex, within the first few weeks, we were in and we were refining gameplay already.
It was just little cubes and little stuff, but we were running around and jumping around and we were trying to focus on our core gameplay loop.
Knowing the end from the beginning, you must scope your game.
You do not have the luxury, when you're making a game of this size, to waste your time on anything.
There might be a few games that this isn't appropriate for.
Like, I don't know, if you're making Tetris, maybe.
Or something like that, where the pacing of your game or the scope of your game isn't as critical.
But almost every game type is pretty reliant on pacing.
and on timing and how the game flows through from beginning to end. It's just like making a film. People, if they're making a film, don't make a vertical slice of their film.
They gesture it all in. They create an animatic. They create storyboards of the entire thing so they know how it flows through. So we developed a process where we very, very quickly, rapidly prototype our entire game. And with Shadow Complex...
that that that was a few different things.
So we had our little, you know, couple page document.
But what we then did is we went into Illustrator and we created the entire game in Illustrator in about.
A month and a half period, and I'm going to zoom out and show it to you.
So this. This is Shadow Complex.
There's the whole game that we made.
And we spent a lot of time going through and figuring out where everything needed to be and what to do.
For us, our entire game is completely dependent on the power-up acquisition.
Going from a little guy with a flashlight to by the end of the game you're triple jumping and hook-shotting and foaming stuff.
And so if we put, in creating like a non-linear game, we had to know where all those power-ups were going to be and what they would affect so that we could get everything in the right place.
And so to do this, we...
And we designed it all out, and then we made these little guides.
This right here was our core gameplay loop.
We said, that's how high you can jump, that's how high you can double jump, that's how high you can triple jump, that's the extension of your hook shot.
And we started to design out exactly how we wanted things to move and flow.
And then we would take this little guy, and we would play through the game.
So we would go to the very start of the game.
I don't know if any of you have played it.
This is where Jason and Claire first dropped down into the cave, so we'd go, oh, yeah, that was a cool jump.
And then we would walk through the game a little bit.
I mean, no, I'm totally serious.
And we'd drop down and be like, oh, see how, OK, they could still make that jump and get back out of that hole because they could jump that high and they could ledge grab.
And we'd start to play through and be like, oh, we want to train them that when they fall down into here, that they have to hold down the jump button a little bit to get up to this.
And so we made that jump height so they wouldn't make it across.
And we started to just go through and play through the entire game.
And we had the entire team playtesting this map for a few weeks.
And we would tweak it and tweak it until we thought it was fun.
And that requires a lot of imagination, but you guys are game developers!
You have imagination!
You know?
So it works!
It's a lot of fun.
And it was awesome. We learned so much by going through this process.
And honestly, the guilty side of this was it was so freaking fun.
To like, make a game on paper and you're playing through it and you're like, yeah, yeah, that's awesome. I totally stealth killed that guy.
You know?
It was cool, you know, and so this is like, this is the funnest game that will never get released, right?
Because you're going through and you're like, oh yeah, man, and we sit there in meetings and be like, yeah, I went through and I like shot that guy in the head and then I jumped up here and then I went back and, you know, so ridiculous, but, but it was pretty, it was pretty awesome.
But we learned a lot by going through this process because it really helped us to define what our core gameplay loop was.
Once we had this down then, can we switch over to...
the game engine. So once we had this down, we then quickly, quickly went into our editor, the Unreal editor, and quickly prototyped out the entire game in what we call BSP. So that's just basically these little cubes. We went through the whole game, and granted, even this, like we have a few crates placed or whatever. So let me show you actually on the Illustrator map that room. So in Illustrator...
This is what this area looked like.
We initially designed out this thing where we're like, oh, we want them to kind of learn what wall jumping is going to be, so we're going to put these ladders here so they kind of get the idea of going back and forth and we'll have this guy on a ledge and some shootable stuff here.
And we quickly, quickly blocked that in to BSP like this.
So same thing, I see my little elevator shaft, I have a guy there, some crates, and we quickly in about two weeks did this for the entire game.
We just threw it in there.
And we made the entire team play through the whole game from start to finish.
And it sucked, but...
it totally taught us where our pacing was.
Because we could go through and be like, oh, you know what?
This does feel like the power-up's gonna be in the right place.
You know, for boss fights, we put in cards that said, boss fight.
You know, for cinematics, we put in story.
You know, I mean, we just, and it would, but it would pace it out.
We could start to see, this is where everything's gonna happen.
And that allowed us to very, very quickly make really, really smart decisions about what we needed to cut and what we needed to keep.
And it also taught us to focus on our core loop.
Our core gameplay loop was exploration punctuated by moments of combat.
So for us, we decided that the players were going to have the most fun when they were exploring this non-linear world, when they were discovering power-ups and things like that.
And everything we decided needed to support that core fun loop.
And then we had the idea of combat as contrast.
to that core loop. It was not the focus of the game. So determining that really, really helped us to make, again, smart cuts.
I mean, again, if you look at the map, anyone that's really, really familiar with the game, which I don't know if any of you are, I mean, if you look at this map, there are drastic differences between this and the actual shipped game.
This whole bottom area is gone.
That whole flying airship in the background that you were going to get on, not in the final game.
There's all sorts of areas that did, because when we initially planned out, like, oh, this will work.
But when we played it...
really quickly after, like, oh, the pacing's wrong, this needs to be trimmed, this needs to be edited, and it helped us to quickly mush the game into something that was really, really fun.
So then we just had this really ugly, fun game, and we spent the rest of the development layering on polish.
It was easy after that, because all of our hard questions were answered in the first few months of development.
Oh.
I accidentally closed our slideshow.
Just click on here and say from current setting.
Alright.
So once you have that, you can start to really, really work on stuff.
Our philosophy is that everything that you have in your game must support your core gameplay loop.
And really, a lot of that was taught...
to us by making undertow. Where with on undertow we literally had only 50 megabytes for the whole game. So we had to look at every single, every single thing that was going in the game and say, does this sound actually matter? Does this pixel actually matter? Does this normal map actually matter? And it really, I mean, we had to look at every single little thing and make these tough choices between should our guy make a sound or should he have a texture map? I mean, it was literally that.
that hard, right? And so it really taught us to say, you know, we can only have things in here that are critical to the player actually having a good time. And we kind of brought that lean mentality into Shadow Complex, because again, we only thought we had 150 megabytes.
So that gestural process and that kind of mindset of always be cutting really kind of helped us to just streamline, streamline, streamline down to what actually matters.
And that kind of brings us to what I think is one of the most kind of critical things in any game development, which is the fully integrated experience.
How does every feature you have loop back into your core loop?
So to give you an example of that, in Shadow Complex we have this device we call the Foam Gun.
And what it let you do is shoot these little blobs that could stick on to each other so that you could make geometry to build your own platforms and get around the world.
When we initially conceived of the Foam Gun, that's all it was.
It was a device to build platforms and navigate.
Because to us...
Exploration is the core loop.
That's all that really matters is exploration.
So building platforms to navigate, fun, right?
So we focused on that, but as we got into development, we said, no, everything in the world needs to work together.
Because what happens if the player wants to stick some foam and then throw a grenade into it?
Or stick some foam and then hook shot into it?
Or all sorts of other different things that they would try to do.
And we found that The more that we integrated every feature into each other, the more emergent our game became, and the more fun our game became.
And this is something that we discovered.
I think a little too late.
So like in our game, you can.
You can build foam things, you can stick a grenade into it, it'll make a bigger explosion, that's awesome.
You can't, like if you build some foam and you try and hookshot into it, I think it just bounces off.
I wish we would have made the hookshot work with it.
I wish we would have really, really pushed to have everything be fully, fully integrated.
And the more that we pushed that, the more that we found.
again, that just things were cleaner, things were more exciting, and I think that's something that you guys should think about in your games, is how can jumping be more integrated into my world?
Again, in our game, we had the jump mechanic, it was our most basic mechanic, was jumping and grabbing, but as we started to kind of develop this integrated mindset, we said, There's got to be a... it just seems obvious.
There needs to be a reason to have combat with jumping.
So we put in a ground pound, you know, that you can jump up and hit the attack button, you slam down on the ground and hit guys.
And to us that was just... it started to be an extension of this idea of the fully integrated experience.
So we don't have a ton of time.
And I'm so sorry, there's a billion things I would love to say that we don't have time for.
But...
This would be the biggest advice, or the biggest stuff that we learned was don't try and compete with the retail games.
Offer something unique and original and understand that you actually are competing with them.
But that's how you compete with them, is to do something that's orthogonal and different than what they're doing.
And thoughtful planning and early prototyping are absolutely essential to good pacing.
We think that, um...
the main thing that we did right with Shadow Complex was do this, because it allowed us to solidify the entire game experience before we'd invested too heavily in any one area.
And it really, really helped us to focus on the right, right things to polish.
And then just, you know, the final advice, every bit of effort now yields dividends later.
I mean, so push, just push to your game playable.
I promise you that if you can kind of break from the mentality of drooling down and polishing too fast, that you will find that you're freed up to really see much more clearly where you need to focus your time and efforts.
Because again, when you have a small team, no budget, and all the constraints that you have, you must, must make smart decisions.
And that's what we have found is the best way to do that.
So moving forward.
There's so much that we learn on shadow complex. We definitely don't know what we're doing.
You know, we're just we're just trying to make our best decisions as we go along.
We've started to really push this philosophy into our next project.
And now it's kind of a little different because we're really focusing on expanding and growing our team.
So we're going from a team of shadow complexes made with nine people.
So we had six artists and three programmers.
And we're now pushing a little bit in a different direction and growing.
And we're trying to apply the same principle to what we're doing.
And we're finding all sorts of new things.
But I'm telling you that this works.
And that's about all I have to say.
So questions.
Please, please let us know how we can help.
What questions do you guys have?
We have about.
two minutes for questions, but there's not another thing in here for half an hour.
So I'll answer questions until they shut off my mic.
Once you had the BSP layout after your paper file, how do you make changes?
Did the BSP layout become your existing roadmap?
uh... you might coming out what would you say that that the sd file can become you're working like map of the game it is yeah someone's so actually did is the bsp once we have a lot then and kind of refined that actually became all of our collision geometry the entire and we took the whole bsg map converted to collision and then i don't know if we have i'll show you a fast select this level in its and state this, right? So this is what it starts to look like when it was actually finished. And you can see that those little blocking volumes, that used to be the BSP, and that got changed into stuff. And we refined that gameplay and kind of moved everything around. So, yeah, it was perfect.
Hi. Nice and quick. 6.3 code, how long would you say until you got to like alpha beta?
So we, so Undertow came out in November of 2007.
We had that little illustrator map at that point.
And our alpha, our alpha for us meant completely, not just the BSP playable, but every boss was in, every cinematic was in.
We could truly see everything, and that was about ten months later, that next October, November, is when we were there.
How did the change from the 150 megabyte limit to whatever limit it is now, how did that affect your design and development process?
Did it occur early enough that it didn't really matter?
Really what it let us do was, so on Undertow, what our plan was, we still wanted all the content, so we were just planning on really, really, really compressing the audio.
So Shadow Complex was 834 megabytes, which is a lot bigger than 50.
help me out with. 450 megabytes of that was audio. And we localized full audio in nine languages. So just removing that, the game was only 400 megabytes. So we just allowed our audio not to be so compressed. But audio and textures, that's the big stuff.
Hey, making games for XBLA, we've kind of discovered that the trial portion, like that experience is really, really important. Is there anything surprising you guys learned trying to make that as good as possible?
Uh, yeah.
No, you're right. I probably should have touched on that, and I apologize. The demo is critical, because you have no choice in giving away a portion of your game for free. So that really is your marketing. Your marketing is your demo. And we, on Undertow, we felt like we did not spend enough time focusing on our demo. And on Shadow Complex, we spent a ton of time focusing on the first five seconds of gameplay, the first 30 seconds of gameplay, the first five minutes of gameplay, the first 20 minutes of gameplay, which was the demo, and then the first 90 minutes of gameplay.
And we spent a lot of time.
Again, for Shadow Complex, we considered the first five seconds of gameplay our title screen.
And so we purposely put a lot of really pretty graphics on our title screen.
So the first thing you saw was, ooh, pretty game.
I've never seen this on Live Arcade before.
And so We considered that the first interaction with the player.
And I do.
It's critical that you focus on that.
And what we found was.
You have to give the players a really, really good time, but you've got to leave them really, really hanging.
So the best thing you can do is get them, and we did lots of play testing to try and get this, get them right to the moment where they're like, this is awesome, this is awesome, and then take it away.
No, that's what you have to do, because if they're satisfied at all, then they're satisfied.
They're like, ah, that was cool.
But that's not as good as, oh, oh, it's going to be so awesome, no, buy?
OK, OK, I'll buy it.
So you want to kind of create that feeling of, I must have more.
And.
I don't know how successfully we did that with Shadow Comics, but we have a pretty high conversion rate, so...
But, even moving forward, we have all sorts of ideas for next kind of titles and how we can make that an even more refined process of getting people appropriately titillated, right?
I mean, yeah. Okay, one more question.
Yeah, hi. I was just wondering, within your marketing plan, what are the things that you did to make your game unique and stand out?
Sorry, what?
Within your marketing plan, what are the things you guys did to make your game stand out and really unique?
So we think that some of the key things were, we took this old genre that we thought was beloved, and luckily we guessed right, that people actually wanted games in that genre.
So a lot of people instantly, when they heard we were making that kind of a game, that was a big draw.
But we also knew the drawback of that was, if we were going to compete with these old games that are beloved, our game had to really, really measure up.
So if you're going to go that far and be that bold, you have to like...
you have to deliver or else you're screwed, right?
And so I think an unused genre was a big deal.
We really, really thought that graphically we had something that we could say.
There just hadn't been a lot of games.
I mean, we don't have the best graphics ever.
I mean, whatever, it's fine.
But in the space, there were not other games that looked like this at the time.
And so we thought that that would be a big advantage.
That was all this window dressing to get people to play the game.
Because once we could get the media playing the game, we knew that we had a fun, fun core game.
And that as they played the game, they would start to evangelize it for us.
So that was the key.
Oh, and okay, one last thing.
I'm going to probably get in trouble for saying this because it's such an awesome secret.
But this is the first game we launched with Twitter.
And one advantage that you guys have...
that retail games don't is your game is downloadable. So a few days before Shadow Comics came out, we got codes that we were supposed to give to the media to review. And we gave them codes to review, but we also a few days before started leaking codes out onto Twitter. And so we had people, a few random customers, playing the game.
before it actually shipped. And we exploded on Twitter. We were like the number three thing on Twitter behind Miley Cyrus and Britney Spears crotch for like two weeks. And that was huge because so many people were out there talking about, oh my gosh, Shadow Complex, I'm playing it, it's awesome, it's so fun because people want free stuff. And you have the ability to give your game away in a way that retail can't do. So try and think of ways to use viral marketing to your advantage.
OK, thanks guys.
Sorry.
