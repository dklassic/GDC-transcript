So, let me tell you a story that occurred, let's say, 10 years ago.
I was working on Killzone 2 at the time and in this particular moment I was working on the multiplayer ambiences.
So you know, making boxes in Maya, making ambiences and putting them into the game and running through them.
And just like, oh, this transition works nice.
Put a spot sound there.
Kind of the sound gardening.
It's really beautiful.
And then at one point, I hear this strange, high-pitched, weird sound somewhere.
And then it was gone.
So I didn't think too much of it.
We were working hard.
It was hard dev time, really focused, and just excited to be working on a title that was much anticipated, so a lot of energy.
but also a lot of hard work, so we're getting a little bit tired.
And then continued working, and a little bit later I hear it again.
This is kind of strange. I tried to figure out what it could be. I look at the debug screens that we have, I try to look at the sounds that I just added, are all the WAV files still okay, is there somewhere a glitch in there, are the converters versions of them all right, you know, and all the stuff you do to figure out what could be going on.
and then at a certain point it was gone again.
And I couldn't reproduce it. I tried to do it all the same places that I went to before. I tried to repeat my actions.
I tried to remember what might possibly be it.
But it didn't happen again.
So I decided I'm just going to go down to the canteen.
We have a nice little canteen at the time in the basement of the office.
And we had a chef there during crunchy times.
And he would cook great food. So I enjoyed the meal.
I come back to my room and open the door and I hear the sound again.
So I go sit behind my desk and it turns out that my game is turned off.
So alright, it's not in the game.
That was good news in a sense because at least I didn't have to worry about it too much in being in the ship title but still I think I had a problem.
You start to look at, is Windows still running fine?
Is there a driver conflict?
It's like 10 years ago, right?
So go to the amp, the dev kit.
Is it all right?
Yeah, everything's fine.
Well, then my live sound engineering background kicked in.
I used to work in a small theater and did sound there.
And I started to follow the cables, right?
So is the cable from the DevKit to the amp all right?
Yes.
Is the signal coming through there?
Great.
Start to follow the speaker cable.
And it seemed to always be coming from the front of the sound field.
So I started with the left front speaker and then jangled it a little bit.
And then I went to that center speaker right there and I went underneath the desk with my hand and I touched the cable and it was sticky.
And I smelled it.
It smelled really, really bad, so that made me really curious.
And I went underneath the desk, so I'm kind of going like that.
I'm a bit tall and pretty cramped, and trying not to knock over the speakers or the monitors.
But I went underneath and I followed the cable up, and I'm following the cable up, and I go up to the backside of the speaker, you know, that's the baseboard right there.
And as I approach it, I hear this weird sound, and suddenly a family of mice appeared.
So I had some roommates.
This was crunchy times.
We were in a very old office from the 17th century.
It's a very great building, but it was getting kind of funky.
So welcome.
This is Zen and the Art of Game Audio Maintenance.
This is Aloy in what I suspect is some kind of pose related to this topic.
I'm Anton Wolteck.
I'm celebrating 12 and a half years in game audio this year.
And yeah, it all started actually right here in this room 12 and a half years ago.
I still remember it as if it happened five minutes ago.
These days though, I'm a principal sound designer at Guerrilla Games, and I've been working at Guerrilla Games for the past 11 years.
And during those 11 years, in contrary to a previous speaker, I shipped four games, not a hundred.
But they were nice games though.
Killzone 2, like I was saying, then on the PlayStation 3, Killzone 3, also on the PlayStation 3.
Then the launch title for the PlayStation 4, Killzone Shadowfall.
And then the last game we released last year, Horizon Zero Dawn.
And what I was gonna say is I'm not a Zen monk.
I am not a Buddhist.
I don't know much about philosophy.
But about four years ago, I read this book by a guy called Robert Piercy.
And I was reading this book at the time that I was preparing a GDC talk about Killzone Shadowfall.
And it really resonated with me in ways that were fundamental to who I am.
And it took a little while to recognize what it was.
But I realized the book, when it came out in the 70s, it influenced a generation, particularly here in San Francisco, I would say, but all around the world significantly in so many ways.
But it influenced my parents' generation.
And I think probably for a lot of people in the room, their parents' generation was influenced by it.
And it's a difficult book to describe in this talk, so I'm not really going to do that.
But one particular thing that caught my attention was how he talked about our relationship with technology.
And as I was doing this talk about the note graph system for Killzone Shadowfall, I started to reflect upon my relationship with technology and start to think about things that might be shared between all of us working in game audio.
So talking about that, our relationship with game audio, with technology, I would say we love it.
Because the game is technology, right?
It enables our creative ambitions.
We wouldn't be here without these high-tech dreams that we have.
And it shows in how we treat technological objects as almost religious artifacts.
I've got my modular synthesizer that I'm obsessing about and spending way too much time and money on.
Damien's got his pedal boards that he's raving about endlessly.
A lot of you have plugins that you consider somewhat the holy grail of something.
But in any relationship where there's love, there can be hate.
Because whenever you have something that doesn't do, doesn't deliver what you want to achieve creatively, where your ambitions are, then you can get really frustrated and angry with them.
And when you are, you know, such as us, at the cutting edge of technology with games, that happens all the time.
Also important in a relationship is trust.
That is key.
Without trust, you can never have any kind of good relationship.
So put a pin on that for a second.
And let's talk a little bit about ambitions in games.
Because I think games are really unique in that we have three really important ambitions.
First of all, like I was saying, technology, right?
We're pushing that technology to the very, very edge.
And it's so much fun to be riding that edge.
It's really inspiring.
But also we have these creative ambitions.
We want to make people cry when they play our games or whatever reaction we get out of them.
That's also a really strong ambition a lot of us have.
And of course, you know, we have kids and we want to eat and we want to live in a nice place.
We want to have stability.
So our games have to make money.
We're doing this also as a sustainable financial endeavor.
And you can never forget that too.
And I think, you know, when I think of this and I look at that, I know where I can place myself on that map.
I can put myself somewhere in that triangle and say, this is where I will balance these three things for myself.
And also the game I'm working on, I can put on that map.
I can say the game I'm working on is also trying to achieve something here.
And it might be true for you as well.
And sometimes there is a discrepancy there.
You know, sometimes where we are and where our core ambitions are fundamentally as humans is radically different from the jobs that we have and where they want to go with that.
And that sometimes can create large tensions, especially if you're not aware of it.
I think as long as you're aware of the thing you're working on being something fundamentally different from where you are, then you can find ways to deal with that.
Another thing is that you have your ambitions, the game has those ambitions, but you're not doing this alone, right?
Games is this hyper-collaborative process where you're constantly together making this.
It has no real creative owner for a game.
Everybody is contributing so much to it.
So...
everybody on the team is putting their dot somewhere too.
And it might not be always in the same place as yours.
So that creates company culture, I think.
Again, this is my bird's eye view from these 12 and a half years.
And maybe it is different from yours, but maybe some stuff resonates well with you.
So what I find is that you have culture and game companies, somewhere in between the Rock Band and Law Firm Slider.
You know, on the one hand, the extreme, you have the studios that are all about creativity, no rules, just go, and whatever you need to do to achieve that ambition. On the other hand, you have studios that are really structured and have all kinds of defined processes and that's what gets their day and games out of the door in time, right?
And you can put all kinds of...
markers on kinds of pluses and minuses that those company cultures bring.
But again, it's one of those things where if you know what your company culture is and you can see it clearly and you know what parts of it you like and don't like, you can also relax a little bit more. You can think about that and say okay, this is going on, but that's because this company is here and that is also something that made me pin for a second. Because These are all kind of static.
These things change slowly over time, but you can say for any moment during game development, they're kind of static.
Game development has states.
And the ones who own the states of game development right now is the production team.
Because they define pre-production, production, and maybe even a little bit of polish time.
But that is not my experience.
Those clear defined periods are not how I perceive the times I've spent making games.
I see it more as a wave.
Oh, sorry about that.
I see it more as a wave.
So for me, at a certain point, I come into the office and suddenly I'm tense.
All my muscles tense up and I go, what's going on?
This didn't happen yesterday, nothing bad happened on the way over here, everybody said hi, what's going on? And then it turns out soon enough they'll figure out, wait, a lot of people around me are working very hard and getting very focused and the energy changes. And that's when I noticed, know that a wave is gonna come. So a wave has these three stages, the pre-wave period where you kind of see stuff building, then you're fully in it, you're focusing, focusing, focusing, And at a certain point, it crashes on the ocean or on the beach and it ebbs out.
And what's important to realize, and this is also about that feeling thing, is that not everybody you're working with is gonna be in the same state at the same time.
Some people are much further out at sea than you are, and they're working on things you have no real sense of, particularly in sound, I think, because we're so far at the back end of projects.
And you can also have multiple.
waves during a project.
So, you know, sometimes there, but, sorry, you can have multiple waves, but there's usually also one that is like the big one, the one that defines the project.
But there will be the E3 demos and the things that just like wash over you as well.
But let's take a little bit of a closer look.
So we can, I know this is kind of, well, let's take a bit of a closer look to the period before the wave comes, right?
This period is highly chaotic.
It's highly chaotic because there are so many questions you cannot answer.
What game am I making?
Why is this thing there?
Is it going to be there in the end?
But you know that you have to have as many answers as possible.
Because as soon as you are in this wave period, you're going to rely on those answers to inform your work.
Now- During a wave, there is also chaos.
A lot of it, actually.
And it comes from deadlines, scope changes, unexpected changes, all these external factors that you cannot control.
The only thing you really know during this time is that there's no way you're going to do everything that you want to do.
Those three ambitions that we talked about in the beginning, they are fighting for your attention, and during this time, it's impossible to really achieve all of them.
And that's also really good to be aware of, I found.
So, during this time, my focus starts to narrow deeply.
I start to focus on the particular task I'm working on, like making an ambient and testing the ambient transitions.
And that is, that just happens, right?
But because of that, your communication skills start to decrease because your focus is so much on what you want to achieve, that communicating about those things becomes harder and harder. And it goes for more people in the company that you're working for. Another thing that happens is that your perception changes. You're focusing so much on the one particular thing or things or whatever, that sometimes you get these gaps in your perception and issues that were that easy to spot when you were not in this time are somehow escaping your attention.
and they can suddenly hit you when you least expect them.
So that sounds maybe a bit of a downer, but actually, this is the time where you get to achieve your ambitions.
And that is the nice part about this.
This is where you get all the energy from to really achieve that dream that you have for whatever you're working on.
Now, then the wave passes in whatever form that might happen.
And one thing that will happen is your audience will react.
And that reaction is chaotic.
You don't know how they're going to react.
They could be positive, negatives.
There could be all kinds of things that you never thought of.
But the certainty that you have from that chaos is that you're going to get lots of new information from so many players.
It's really going to inform the work that you've done.
So I said I would also make it a little bit more practical.
And so I wanted to share.
some of the things that I found that can help me in these three different stages, states of a project. In the pre-wave period, I found it critical to verify my signal chain. So what I mean by that is, first of all, draw it out as detailed as possible. This is a bit of a rough sketch of your game engine going into your dev kit, going into your amp, going into your AD converter, this is a particular example for my current setup, going into a MADI router, et cetera, et cetera, until it reaches your brain.
And make this as detailed as you can possibly make it.
Go out and describe every step in your game audio engine.
And then put a test sound at the start.
I might suggest a pink noise at minus 12 dB full scale.
Play it at the beginning.
And then.
get towards the end and see if it still comes out the same way.
I suspect for a lot of people in the room that might not be the case.
Some processes in between will change the signal, will make it softer, or might even change the frequency spectrum because of phase cancellations, all kinds of things can happen, right? There's so many things in between.
So, when that happens, don't panic, just try to figure out where could it come from.
and try to take out steps.
So play the sound directly from your amp.
Is the ping noise working directly from your amp?
Great, and it's not everything behind it, it must be before it, right?
At a certain point, and this might take half a minute, if you're lucky, or it might take months, as was my case, after Killzone 3, and the amount of bugs we found in our engine by simply doing this was staggering and funny.
Because we're in this pre-wave period, right?
We could just do this in our leisurely pace.
So, once you've done that, and you have a certain confidence, calibrate it.
Minus 12 dB full-scale pink noise should be a certain amount of dB SPL on your speakers in your room.
78, for example.
Whatever works for you.
I don't think there's one number that should be adhered to.
What that gives you is something to recalibrate to.
And recalibrating regularly is what builds trust.
That's what we want.
Taking it a bit further, what if you take that ping noise and then trigger it directly from the game?
So you don't need your audio tools to trigger it.
You just have a debug menu in your game, and all it does is trigger a sound that is your calibration signal.
What that gives you is the ability to test your setup somewhere else.
You know this signal now, right?
You've calibrated your studio, so you know how it should come back.
Now we can go anywhere in the dev team and see if it actually is represented the same way there.
Recently, for example, I was in our review space, which is a nice little cinema for 12 people.
great surround setup, and we were reviewing the game in the current state, and we felt like something is off in the front field again.
And we were discussing, was it this makes change, that makes change, no, that doesn't make any sense.
At a certain point, I had the clarity of mind to figure, let's just play the test sound.
And the test sound is simply a white noise or pink noise panning around the full circle.
As soon as it reached the left front speaker, It was dull.
What happened?
The tweeter of the speaker had blown.
That saved us hours of debating what it could be.
It was hard to perceive a tweeter being blown on a full-range giant Bauer and Wilkins system, and now it was that easy.
But only because we could trust this test signal because we knew it so well.
The third thing in the pre-wave period you can do is to identify and engage your allies within the team.
So I think there's three different kinds of allies that I like to have.
The first one is a wicked repeal magician.
So this is the special person who can just magically find the way to reproduce that issue from happening that you haven't been able to find out.
For the last game that happened to be, my intern Nick, who was a magician for doing this with weapon sounds, and our game director Matthijs de Jong, who would come with the most.
beautiful music-triggering bugs that haunt me still.
You also need somebody with a very sharp analytical mind, so somebody that you can give a logic issue and then instantly tells me, yeah, but you're missing that step there.
That can save you so much time.
The third one I need is a trusty creative ear.
Now, again, this doesn't need to be a sound person.
This is somebody whose creative opinion you trust.
And you build this relationship.
during the pre-wave period because as soon as you go into the wave period and you get hyper-focused and your communication skills decrease, then finding somebody that you trust and explaining the issue or just hearing their feedback and receiving it is very hard unless they already have some kind of relationship with you and you understand each other.
So see if you can get these kinds of people around you.
So the wave hits you, and I'm sorry to say, there's not a lot of things you can do, I found.
But what I noticed happens is, at some point I'm working hard, by my desk, this is at my current studio, happily chapping away, and suddenly, I hear something wrong, and my instinct tells me at this point, quick, run, I need help.
So, before you do that, realize you are hyper-focused.
Some people call this maybe, Flow state, either way, your instincts are sometimes misleading you.
Take a second and ask yourself some questions.
And I'm going to very quickly run through some suggestions and I promise I will upload my slides too.
Is your signals chain still calibrated?
Are you missing something obvious?
What does my content do?
How is my content being triggered?
And what does the debug tell me?
And could the debug be lying to me?
It does.
When did you hear something similar?
And now, who are you going to talk to about this?
Why are you going to talk to that person about this?
And what would she do, or tell you?
How stressed am I?
What is my weakness?
And what is my strength?
Good things to ask yourself before you run off in a hurry.
The reason for that is, of course, those other people are also hyper-focused, likely.
So you're taking away from their chance to reach their ambitions.
So be mindful of that.
So, then there's some things you can do.
Just let some time go by, right?
Just let some time go by. It might become clearer.
Or just capture it and play it back.
That gives you a new perspective, too.
Start over from a blank canvas.
Works great for logic issues.
Throw it away, get a cup of coffee, come back, try again.
Read the revision history in Perforce.
That is such a gold mine of information in there.
What you see is not what you hear, or the other way around.
So turn off your screen and just listen.
Or turn off your speakers and just watch.
Because those eyes and those ears that influence you in ways that your brain doesn't know about.
It happens subconsciously.
So just separate them.
And sometimes that gives you really important clues of what might be going on.
Isolate your problem as much as possible.
Get away as much of the other things around you.
So put it into a test level with absolutely nothing.
Get rid of anything else attached to it.
have that one trigger in there and then, you know, it's still not solvable.
Reboot.
Okay, and then you can go talk to somebody.
The other thing that I like to do is to keep a log of what I do.
So every day, as I do things, I just type out, worked on this sound, talked with that person.
Very short, no details, just type it out.
And then, when I notice a gap in my perception, so I have an issue that eluded me for a while, and I was like, why didn't I realize that sooner?
I write down, this is the issue I had, I thought I should have noticed this sooner.
File away, forgive yourself, move on.
This is your time to reach your goals.
Don't worry about it, it's a waste of time at this point.
We'll come back to it later.
So.
it crashes ashore, right?
And when you're working on a deadline, you don't always make the nicest assets.
The players don't mind, they don't care if your Y sounds are all horribly named or if my graph sounds look like a horrible mess of wires.
They don't care.
But you should care for yourself on the next project, if you're gonna maybe reuse those assets.
Because those are the assets that are gonna give you bugs on the next project, and you're gonna hate your old self.
for not cleaning up when you still have plenty of time.
So refactor them, throw them away if you're not going to use them anymore, but get rid of the cruft.
Now, the second thing to do in a post-wave period is to look at the bugs that you've marked for this thing on your list, and then start to design ways to help yourself find these bugs sooner.
Help yourself and create processes that...
do that. Now, you might notice that what I'm talking about now is something that you could apply to that signal chain thing that I was doing and that test sound thing. All of these things come from these kinds of processes. And that was already happening naturally for me. But once I started to reflect on it, it really made me realize how important it is.
And important to realize that it's good to focus on the things that make sense in the state that you're currently in.
It doesn't make sense to worry about your processes or your signals chain too much when you're in a wave period.
Just roll with it and go. You've got the tools you built before, you've got to live with it now. Make it work.
But, don't forget about the issues you're having during the wave period.
Because it's so easy and you don't realize this when you're so focused.
You think this is so important, I'm never going to forget it, it was so terrible, it was so terrible, but as soon as the wave is over, it's all gone.
I don't remember any of the painful stuff I had to endure during any of the projects I did, because as soon as it's out, it's all forgotten and forgiven.
It's not a thing anymore.
So write it down with a little note, and then you remember, oh yeah, that was really terrible.
And then you start to design processes to prevent you from being in the same boat again.
You want to have a better boat.
So.
What I would love to hear is other people's MyStories.
And I hope this talk gives you a chance to maybe be a little bit more zen in your daily work.
Thank you.
