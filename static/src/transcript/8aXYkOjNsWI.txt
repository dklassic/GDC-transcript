Hi everyone. Greetings in this remote presentation in this COVID-19 world that we're living in.
Great to be with you today. My name is Devin. I'm the Senior Director of Product at EA, the APAC region.
I'm going to be talking to you today about integrating product management into development teams, specifically teams that have not had mobile experience before.
They may be working on new mobile games now or other platform games, but they don't come from a mobile background.
And that presents some interesting challenges.
So let's get into it, shall we?
I'm first going to talk to you today, just give you an overview of my journey.
I'm going to talk about the PM discipline in general.
I'm going to talk a bit about games as a service and PMs and how they fit into that.
I'm going to talk about some common challenges and solutions to integrating PMs into these types of AAA teams.
And I'm going to give you some closing thoughts.
So a bit about me first.
So my journey actually started on the M&A and capital side where I was raising money for a lot of free-to-play gaming companies in the infancy of free-to-play. I worked with companies like Zynga, Gris, Funzio, etc.
I really developed my interest in free-to-play at that time.
I then took a sabbatical to pursue a passion for a while of playing Magic professionally, which didn't work out so well.
And soon after that, landed at Kabam, where I was fortunate to come on during the first the web game days and the first mobile revolution where we were just getting started on mobile, where user acquisition CPIs were less than a dollar and everything was a totally different landscape.
Gave us an opportunity to define a lot of what mobile free-to-play would look like and a lot of what product management analytics would look like in the industry. Stayed on a command in what I like to call the second mobile revolution where we started leaning in more to data science, launching more of a contest of champions which I'll talk about later.
and venturing eastward where I moved to our Beijing office, built out the product function there, and actually launched a fully culturalized version of Contest in China for the Chinese user base.
Soon after that, I had the opportunity to join EA sort of a broader role which I fully embraced and dived into, moved to Shanghai and went deeper into Asia with EA with a large sort of IP-based portfolio. I joined really excited about the sports titles like FIFA and NBA which we were going to launch in Asia and I've since been fortunate to work with a lot of other brands from SimCity and Red Alert to PBZ and Apex Legends.
Very exciting time at EA, it's been very gratifying for me.
And I've learned a lot over my time here, so I'd like to share some of that with you.
So, going into the PM discipline in a little bit more detail.
Product management in gaming is a young family.
I mean, it's well established in technology companies for more than three or four decades now.
PMs all over the org from ads to gaming to social etc. And that's where sort of the Agile manifesto came from. These technology companies with product managers and getting into an agile sort of scrum based way of doing things.
So it's very well established in bigger technology companies but in gaming it's actually quite young.
Gaming PM function sort of gained prominence after free-to-play and social became more prominent in the gaming industry. So you may recall in the early or sort of late 2000s I guess Zynga started taking off with Facebook games and Facebook games in the mid-2000s really started taking off where developers started developing on the Facebook platform. Zynga and Farmville series really caught fire. You had other sort of social gaming platforms like CrowdStar, Kixai, Kabam came soon thereafter and Rovio. But one of the reasons why it gained prominence is because it realized with The amount of data we were getting from these free-to-play and solo games, the types of real-time engagement metrics and microtransactions that were starting to take shape with the free-to-play business model, you could really analyze and optimize in real time and build the type of experience that your users wanted. And PMs were rock stars at doing that, and we are rock stars at doing that. So the function sort of took off after that sort of inflection point in the gaming industry.
So what is PMing and what are amazing PMs?
I always like to say that PMs are a Swiss Army knife.
Maybe an overused phrase, but I still use it a lot.
PMs use cross-functional business skills to elevate game teams.
And they do it through a few different pillars.
The first pillar is design and strategy.
Having a strategic vision of the roadmap that maximizes the lifetime value of your games, leverages monetization design best practices, looks at competitors and competitive intelligence, and balances player wants with team capabilities, the resource requirements and resource costs, and the business needs.
And PMs, amazing PMs I like to see, have a very strong ability to abstract.
A lot of times come from consulting and strategy backgrounds and were excited about gaming and came into gaming from there.
And are very good at this sort of long-term view of strategic vision of the game and the product and also very good at looking into designs that work and designs that don't work and servicing why those things happen.
The second pillar is live operations.
So being not always the one pressing the buttons, but the guiding voice in monetization and engagement planning, owning problems of game and platonomy balance and lifecycle management, and having that sort of semi-aggressive, almost proactive revenue mindset, being the guardian of game performance.
And game teams will trust the PMs to show them, you know, how is our game doing?
You know, what's the game performance?
What should our game be doing in terms of revenue and KPIs in the next six months?
Those are questions for your game PM, right?
And for this reason, the game PM is the sort of guiding voice in the live operations.
Sometimes they're actually executing it themselves.
Sometimes you have...
LiveOps GMs and game masters and other people actually what I call pressing the buttons.
But that function of live operations that the pillar doesn't doesn't change much.
The third one is analytics and optimization. And this actually goes hand in hand with live operations. But using data to drive outcomes over outputs. A lot of times I think teams can get caught up in producing content.
in shipping features and almost the amount of content or the amount of things that get shipped is an indicator of success. However, if those things don't hit, if they don't move the needle in terms of revenue and other engagement KPIs, how effectual was that content push? And PMs can be relied upon to use data.
Wizards with data, very strong in data analysis and optimization.
They come from those backgrounds to keep the team honest in terms of the types of outcomes that these changes are making. So outcomes over outputs, having that growth and optimization mindset backed by behavioral data. So always thinking about how can I grow the player base?
What are some creative or innovative things that I can do in the game to try to grow the product?
And not always pulling from gaming, pulling from other tech products and pulling from other best practices and using that sort of strategic and almost design expertise.
And in doing so, having effective and rapid communication with the team.
and with outside stakeholders.
A lot of times the PM is almost the guardian of the team.
The team doesn't want to be distracted by a bunch of execs coming in and asking questions.
And a lot of times the PM can serve as the face of that type of communication so that the team can focus on making the magic.
So that's the PM discipline as I see it in terms of these pillars.
But I also like to show that the pillars of product management almost map to a game's life cycle.
If you look at the game and feature life cycle over the course of concept, pre-production, production, testing, launch, and live service, then you see that the product management pillars almost change over time.
Early on, you will need strategic and design clarity.
And the PMs will work cross-functionally with designers and consumer insights and publishing to define what the product should be.
Once the product launches, you have this LiveOps excellence pillar where the PM will collaborate with the analytics function and with LiveOps game masters and other executors to optimize the product in real time.
And as the team is looking toward their next adventure, right, PMs play a very, you know, a very pivotal role in that roadmap guidance, right?
Not only the next feature or large content update, but also even the next game, right?
And that sort of comes back to this product definition phase.
But in terms of live features and content updates, PMs work with analytics and CI and publishing functions to...
You know, analyze what the players are saying, how players are feeling, how players are behaving in game, and use that to provide the road map guidance to the rest of the team.
The guidance for the future in terms of what content and client updates we need to push in order to move the game.
So what are some quick examples of PM success in free-to-play?
So spanning these different functions, these are just some very, you know, sort of random examples that I pulled from different products.
So a feature impact is something that we do on FIFA very often where we analyze the KPI impact of releases.
We surface that information back to the team. I'll talk about that a little bit later, but these have been big wins for us in terms of improving the KPI impact of our live releases. So that's one example of feature impact. Another example is you know deconstructing individual games and business models to guide our design teams.
This is something that I think is a very good at deconstructing systems and thinking abstractly.
And then also I'm doing so to help the design teams embed them in terms of what are these games doing well, what are the core loops, what are these new features, what are these new business models, things like battle pass, what is this new emergent genre like auto chess, what are things that are driving daily gameplay.
These are some things that over the course of my career, that one of the strengths of PNs is sort of deconstructing and providing guidance to design teams and game teams on the sort of latest and greatest.
It's another very specific example from when we were doing Contest of Champions, but working with analytics teams in very close proximity allows us to uncover some really incredible things.
On Marvel, we uncovered the importance of a new metric, which we started out calling subscribers and then eventually called players.
Players that basically played every day.
And we brought this metric and others with us to EA in the terms of committed players.
But it was so staggering to us how a player who played seven days a week was so different from a player who played six days a week.
And that was something that we uncovered working closely with the analytics teams at Marvel.
It's something that I've taken with me into any game that I've worked on or that I've been a part of in analyzing.
And we've shown that it really moves the needle in terms of driving sustained lifetime value increases.
So just another example of collaborating with analytics very closely to drive very impactful and powerful insights.
So games is a service, and he is.
One of the reasons I'm talking to you today is not about the PM function overall, but it's how PMs, a lot of these wins that I've talked about before are in the mobile gaming industry and in the mobile platform. But our industry as a whole, if you talk about HD and console games, you talk about PC games, subscription games, all of these games are universally moving to what I call a game as a service.
Consumer packaged goods are phasing out.
Packaged goods is still a big business for us at EA, obviously the majority of our business, but you know a lot of these things are moving, even these packaged goods are moving to a games as a service.
Players are going to expect content updates over the course of the life of the game.
They're not going to want to play a 20-hour PvE experience and be done with it.
They're going to want to play with other players in PvP and other multiplayer situations with players.
Subscription is another business model that's been tacked on to a lot of console games now.
So games are becoming more of a service inherently, not just endemic to mobile.
but something that's happening across different platforms in the industry.
And because of that, the value of PMs and the importance of PMs is becoming more pronounced across platforms in console, HD, PC, online, etc.
Now, one of the PM superpowers, and what I like to say is the PM's problem space, the problem that we generally own.
in these Games as a Service scenarios is abstracting a game into its business components.
And this is something that, which I'll get into a little bit later, something that is unique, I think, in terms of how PMs think about a game and think about the business, is breaking it down into these component parts, right? Being able to, you know, acknowledge the creative portion of the game, but also being able to break down the constituent parts as a business through the funnel of acquisition.
from different sources to retention and the factors that allow you to keep your acquired users down to monetization and back forward through the funnel through acquisition.
So maximizing acquisition, minimizing churn, maximizing retention, optimization, right?
And abstracting a game into these components is the first thing, the first step to optimizing the game.
And this is the PM's problem space.
In addition, so this is something that becomes more important I think as Games as a Service takes hold of our games, right. The other thing that I find as Games as a Service becomes more and more prevalent is that team composition also needs to change, right. In pre-launch of a Games as a Service game or you know in production before you launch the game.
This is generally how we have our teams constructed.
There is the feature team, the development team, consisting of designers, engineers, artists, QA, et cetera.
And there's also a live team.
A lot of times they're working on other parts of the game.
So they're working on the live content pipeline, making sure that there's enough content in the game when it launches.
They're working on developing live ops tools, the tools that allow us to go in the band and basically deliver the content to our users.
And they're working on live service readiness.
What is the calendar like?
What is our first month going to look like?
What is our first six months going to look like in terms of events and content, etc.?
That's what the live content team is working on.
And in pre-launch, the PM will often play a supporting role.
Like I said, they will talk about product definition and product direction, live service readiness.
free to play, ready, and thinking about new features and pre-launching a feature that guides us to the future.
Now once a game launches, the team composition tends to change, right?
You still have the exec producer who is managing the feature team, managing all the engineers, artists, designers, etc.
And these guys are designing core gameplay features, major gameplay systems, and long-term things.
Now the PM, once a game launches, generally becomes more hands-on and a lot of times elevates their stature in the game team to be an equal sort of business partner with the exec producer and will generally take control of a live team. So that team will work on live ops roadmap, they will continue to produce live content, oftentimes we'll staff it with analysts and we'll look at analytics and we will...
We'll also look at how we can augment our live tools to create more nimble ways to interact with players and deliver content to players.
So in a post-launch live service phase, a lot of times the PM, as I said, becomes more hands-on, becomes more prominent in the team, and a healthy team, as I see it, is one in which The exec producer and the PM are equal business partners and trust each other to make the right decisions.
And, you know, the EP sort of trusts the PM as the sort of business voice behind the product, while the EP sort of takes center stage in town halls and summits, etc., to talk about the game.
So.
In AAA games, and because many AAA teams have spent years shipping games and then starting the next one, as we move into games as a service, the model in which you have to work sometimes is foreign, right? And as a result, integrating PMs into the team and adopting that iterative development mindset can sometimes prove challenging. And this is easier for some teams than others, but for those teams that have challenges, one of the purposes here is to talk about how to overcome this.
So let's go into some common challenges and solutions, right?
Of integrating, you've got PMs, you hired your first PM, right?
He's really excited, he wants to contribute.
But you're going to start to run into some challenges as a VP or GM, as an EP, whoever hired the PM, as you integrate these guys into your teams.
Now the first sort of acceptance of the PM role.
So as I said, PMs, game PMs who've had experience will come from other gaming companies, but a lot of times junior PMs will come from other backgrounds like consulting strategy, sometimes financial industry. And most non-mobile teams don't really understand the role of the PM in the development process. A lot of times because they have not worked in a live service product before, they have not worked in games as a service before, and they won't understand the PM's role. They won't know.
how to interact with a PM initially.
And as a PM, for those PMs in the audience, you have to accept the fact that in a AAA team, you'll often be viewed as the outsider.
You'll often be viewed as sort of the black sheep.
And that can have challenges to not only team onboarding, but also just team chemistry, morale, et cetera.
And also just the value of the PM initially, right?
If the PM is sort of viewed as someone that the team wants to sort of hide away in a corner and not have them be a prominent voice at the table, it will definitely limit their value.
And a PM's value is directly correlated to the team's buy-in of the PM function.
So this is something where early on, team acceptance of the PM role is going to be a challenge.
The other thing, and I've learned this, teams, is that a lot of these teams, you know, maybe have worked on a live service before in a different way, right?
Maybe they've worked on a game that shipped live DLCs, you know, or had post-launch content that they would launch.
And because of this, they developed sort of pride in Ubis, right?
And when you come in as PM, you'll say, I'm a PM, I look at business, I look at design and strategy, live execution, look at data, etc.
Teams will often feel and they'll often say that they have the PM role covered by other functions.
This is a little bit dangerous sometimes, but they'll say, you know, we've got live producers that produce our live content. We're good. We've got this. We have data analysts. We're working with the CI team and the data analysts. We're good. We got this. And, you know, it kind of stonewalls the PMs right away.
And this is something that needs to be, need to look out for very closely.
I would say for team leadership, as you onboard PMs onto your teams, because this is quickly something that could stonewall your PMs, can demotivate them, et cetera.
If your team doesn't know how to interact and does feel that they have the PM role covered by other functions.
You know, sometimes it's the case that they do, but most oftentimes it's the case that they actually don't.
And you know, they're standing there, I can hear, and the house is burning down.
So this is something that you have to be mindful of.
So how do you circumvent these challenges? And there are ways to do it.
One of the things that PMs can do, and I like to think of this as a bottoms-up approach versus a top-down approach, one approach is always the GM or the VP saying, these are your PMs, Listen to them. They do X, Y, and Z, and you need to rely on them for this. That's definitely a top-down way.
If you're a PM, I would approach this as a bottom-up way. And one way is to involve the dev team in PM processes. And this is something that we've seen a great deal of success with on products over my career. So FIFA Online is one example where we instituted the feature impact assessment process. It was a process that we set up to instill rigor in You know, shipping our client releases and the types of releases we're shipping, looking at the KPI impact of the of the releases we're shipping.
And the rest of the team was fully involved and we made sure to do it this way.
We set up different milestones for these feature impact assessments that integrated into the development process each milestone.
So at the beginning of a milestone, we would come in and look at the design docs with the team.
We would get a full sort of download of what the feature was trying to achieve, and then we would come with our KPIs and say, what do we think this is going to be?
It would be a brainstorming process for the team.
It's going to do engagement, it's going to up monetization, and by how much, right?
And then after the feature was released, and after we had sufficient data, we would come back and we would task the analytics team with pulling all the right data, we would put it together, and we would do a postmortem of okay how did this feature actually perform versus what we expected.
And so for FIFA mobile in China we've extended this to a weekly program analysis because you know a lot of our live content is in the form of programs and it's it's a faster content cadence because it's mobile. So we have this weekly program analysis with the dev team to understand the why behind different decisions. So feature impact assessment program impact assessment, et cetera, and doing it at a regular cadence and doing it in the same timeline and integrated into the milestone that the process of the team and involving the team early on.
So they can get exposure to you as a PM and they can see the value that you bring early on in discussions to get to alignment.
And then later on, once we get the data and showing what impact these features actually have.
So that was a very positive way for us to do it.
Another thing that I've implored all my PMs across different games to do, it's something that other teams like the Pentium team, which I'm very closely in communication with them, does as well, is to work for the team rather than trying to lead.
And there's a lot of literature on the PM function out there, a lot of it related to other tech.
Parts of the tech industry that sometimes I view as erroneous and damaging a bit in gaming is that a lot of times PMs are paraded around as the CEO of the product and you've got these eager PMs that come in and they try to lead right away. Oftentimes this is the wrong approach. As I said, you need to accept the fact that you're going to be viewed as an outsider when you come into these teams.
One great way to build equity is to work for the team rather than trying to lead.
And one of the things that we've done, you know, across the products that I'm across, across other products that other heads of PM are across at EA, is to embed PMs directly in the dev team and require them to split time between sitting with a centralized PM pod and sitting with the core team. Oftentimes we'll just have our PMs sit directly with the core team.
um all the time and you know you wouldn't think this is important where they sit but it's extremely important um to sit with the team and then we'll come back to the pm pod maybe one day a week or just during our scrums etc um but you know all pms will sit with the team and they'll begin onboarding onto the team by basically listening to team needs, talking to team leadership, and tailoring their tasks to the team needs. And this is something that I've observed is that, you know, for different projects our PMs, the needs of the PM are going to be different.
Sometimes you've got a team with designers that are very quantitatively motivated and you may need to do less hand-holding with the design team onboarding with analytics. Sometimes you'll have to do more, right? Sometimes it just depends on how the project shakes out, but because PM skills are so cross-functional and so broad-based, PMs can often tailor their tasks and tailor their function to the team needs and should be doing.
So this is something that we've seen a lot of success with at EA, both on products that I'm across and products that are other heads of PM across the company and in EA Mobile and, you know, Max and BioWare Maxis also have had success with. He is working for the team rather than trying to, you know, take the lead right away.
Another thing beyond team acceptance of the PM role is ownership and accountability, right?
And this is something that AAA teams are very, you know, they'll harp about this a lot.
I've noticed more, more so than mobile teams, is what are you actually accountable for? What are you actually owning? And one harsh reality is that because, again, the PM role is very cross-functional, there will be confusion about what PMs own and are accountable for.
And you see this sort of, you know, the cameo from Office Space here, if any of you have seen that, and one of my favorite scenes in the movie.
But you'll actually get these questions from people on your dev team.
A guy from QA will come up and say, what are you actually doing here?
Or a designer or creative director will say, what value are you adding?
And a lot of times, you know, It's on you to educate, but it also can be damaging to the morale of new PMs.
Being met with this type of attitude, I guess, from people on the team that they're actually excited to be a part of.
But it's a harsh reality that you'll have to accept that there will be confusion.
And there are definitely ways to solve that confusion.
So, how do we solve for this?
One of the things I've learned in my years as a PM leader is that the strike team approach is a very popular sort of approach to PMing where you'll have PMs in a central pod who will, you know, whenever a project has problems, whenever a game isn't hitting their KPIs, they'll come in as a strike team or they'll move from project to project. And this is something that I've learned is actually better off abandoning.
Because as a strike team approach, PMs come in as consultants, they come in as advisors, and then they roll off. So not only does the team not always understand what they're doing, what they're accountable for, but they're gone from the project six months later or a year later, and were they actually part of the team? So abandoning this approach and actually making them part of the team is, I think, a really good thing to do. So in FIFA, One of the things that was done very early was we bifurcated the team into dev and live, right?
So as I said before, the feature team and the live content team. And early on, the PM team actually assumed direct ownership of the live content team and the live roadmap, eliminating ambiguity as to what they are responsible for. If someone says, what do you do? What are you accountable for?
I control, I'm the decision maker for the live team.
That's a very short answer.
And it was one that we had a lot of success with.
FIFA Mobile in China was a project that launched very fast and very aggressively, but it quickly sort of bottomed out.
And once we did this sort of bifurcation of the team, and gave PMs control of the live team, our performance started coming up considerably.
We nearly doubled our DAU, and we've been on a very good sort of trajectory ever since.
So it's something from a performance standpoint that worked, and it's something from a sort of...
Team function standpoint worked because the team was able to gel, was able to work very quickly without, you know, sort of scratching their head as to, you know, what does the PM actually own here.
In the BioWare team with Anthem, I think I talked about with, you know, we had a senior leader that was hired now a couple years ago in BioWare, who's a great guy, hired for that PM function reporting directly to, you know, the VP GM of that studio.
and had his PMs assume accountability for the live roadmap in a similar way.
So one part of that was having a leader come in to sort of represent the PM function in BioWare for Anthem and another one was to have other PMs come in accountability over things like game economy and live roadmap and other things that the team quickly saw had massive value as you know Anthem was seen.
At that point, a game is a service and live service product.
Another way to sort of, you know, circumvent this harsh reality I was talking about before is to use sign-off. And the reason you use sign-off is it forges dependencies within the team, right?
And this is something that a lot of times the GM or the VP will have to do as a top-down thing, but it's very powerful once it's done. And this is something that we've done across our FIFA products, our free-to-play FIFA products in Asia.
with FIFA Mobile and FIFA Online.
Even though these products were both free to play, the teams working on them were not mobile teams.
These were teams that came from AAA, so that's why I'm including them here.
But we quickly had this sign-off built in where we aligned in our interop site that PMs would own all engagement metrics for the game.
Also design the model used for forecasting and operational modeling and how we basically lock financial forecasts and financial targets.
So because financial targets have to be locked every month, PMs have to be consulted as long as they own the engagement metrics.
It's a forced sort of dependency in order to sort of involve PMs in the operational modeling.
in looking at the features and using feature impact to assess what those engagement metrics would be, etc. Another thing that PMs directly own is, as I said, the feature impact assessments for each client release. And this is something that is mandated as part of the milestone, and it's something that gets presented back to the team.
in the spirit of iterative development, right?
And we've instilled these processes, and we've developed muscle memory around them, and we've used sign-off to forge those dependencies.
So even if the dev team may be confused in the start, they have to, they do know that there's a sign-off dependency, and they have to go to PMs and work with them.
And that sort of forcing function has allowed the team to better understand what PMs do and what value they bring.
So a third sort of bucket of challenge is creative versus data-driven decisions. And this is one that you know is I think a bit harder to get out of even if a team understands what PMs do.
Moving to a games as a service mindset, moving to a more analytical mindset, is often very very hard for teams. Not only but also you know mobile teams as well, depending on the function.
So the harsh reality is that you know I think I feel and maintaining morale quote unquote will often take precedence over data-driven realities.
And I mentioned maintaining morale is one because you know I've been in situations where the KPIs were not great or you know we were not focusing on the right things in terms of long-term retention.
Do we have the elder game features?
We're seeing where there's smoke, there's fire, right?
And some of the PMs will see smoke and they'll want to call it out.
And they'll get, you know, the response that, well, we don't want the team to focus on this right now because we don't we want to maintain the morale.
This this isn't great for team morale to see.
You know, once we launch this great game, we should be celebrating.
But you're talking to us about, you know, how the KPIs are good.
And.
I think that is a little bit dangerous and it's something that really has to be kept at bay because data-driven realities are something that should be positive for the team, even if that data is not proving out what we want, right?
Because it's a learning experience and if you adopt a test and learn my unset, then it's just an opportunity to get better, right?
So, harsh reality, how do we get around that?
One way to get around, I think, I feel, is to use frameworks to maintain rigor in fact-based decision making.
Now, this is something where, you know, the Anthem team, again, had a really good way to do this.
And this is something that I actually barred for them, and it's worked very well for me, too.
It is speaking in frameworks, right?
Maybe we don't all agree on what the right decision is. Maybe we don't want to talk about retention that's lower than we thought it would be or revenue that's lower. But can we all agree That as a team we all have the same shared goals. Can we all agree that our goal is to maximize traffic and to maximize revenue? It's to grow MAU as much as possible. It's to grow our monthly revenue as much as possible. And oftentimes when you get down to that very simple fact-based decision making and that simple framework, those goals are irrefutable for the rest of the dev team.
I don't think anyone's going to tell you no, we want to minimize traffic.
So you break it down into first principles and you establish those shared goals.
And once you've aligned on those shared goals, what you realize is that magic starts to happen, right?
Once you can agree on those shared goals, you can move to the brainstorming phase about what the best ways are to get there instead of arguing over the goals themselves.
So Now that we know that MAU is, you know, something that we want to maximize, how do we do that?
And then that's where PMs start to shine, because PMs can bring proposals for how to maximize MAU.
And a lot of times in our meetings with teams where we bring in those plans, the team's response is, oh, we'd never thought about it that way.
Oh.
Yeah, that's actually true.
That's not something that's top of mind for us.
And they start to realize the value of the different perspective of data-driven reality that PMs will bring into the team when they're thinking about things in a little bit different way.
So this is something that I would highly recommend is speaking in frameworks and using frameworks to maintain rigor in fact-based decision making.
I think I feel is something I think everyone eventually sort of reverts to, but it's something that has to be kept in check on a more regular basis.
Another way to win is...
Again, to use business realities to pressure test decisions, right?
So sometimes the team will, you know, make a feature decision or make a design decision based on, I think, I feel, and that client release will get shipped and, you know, the PM will have said or someone on the team will have said, yeah, I don't think we should be doing this because X, Y, Z, and the team should have said anyway.
However, if you have the right processes set up, you can pressure test those decisions.
So...
On all our products now, we have bi-weekly business reviews.
Every two weeks, we have a business review, which are high visibility, comprehensive reviews of the business, the live ops performance, and how we're tracking versus targets.
And this is very simple.
This is something that I think a lot of teams that are listening to this probably already do in some shape or form, but I would encourage these to include a lot of cross-functional people in the team, not just the PMs and the producers, but across the team.
And I would actually encourage you to include execs in these reviews to the extent that you can.
Because when you do that, and when you have execs present, when you execs will want to talk about objective things, right?
It makes it hard to hide in the gray area, I think, I feel.
And very quickly, it starts to change the team's mindset in terms of what's important, and in terms of who needs to be consulted before decisions get made.
And that can have some very powerful sort of impact in terms of how the team approaches releases, how the team approaches live content development, etc.
And I think we've seen that prove out across our products.
FIFA Mobile I'm using as an example here, which is where we've seen a profound impact.
But we've seen the same impact on FIFA Online, we've seen the same impact on Red Alert, and it's something that I would highly recommend.
is on the org structure side is maintaining an unbiased view through central reporting lines but at the same time staying embedded within the core team and sit together.
Right, I go back to sitting together because I think it's really important.
So it's a fine balance, right? A lot of times, you know, the PM function is well-staffed on a lot of teams. A lot of times you'll see PMs reporting into the exec producers of these different games.
which can work in some cases, but can also be dangerous in others.
And the reason it can be dangerous is because the PM, you know, as a great communicator of data and business realities, can sometimes become a tool to mask business realities or sort of, you know, Use data to basically communicate whatever message the exec producer or the creative director wants to put forth versus the actual sort of unbiased truth. So for that reason, especially in orgs where the PM function is not that sure yet, I recommend a central reporting line structure.
So a structure more like this where you have a director of product that reports into a VP or GM or other exec.
That person has PMs under him, and those PMs are embedded within the team.
They sit with the team, they tailor their tasks to the team's needs, and they dotted line into the team leadership.
However, they report back into the head of product, who reports back into the GM, which serves as a nice sort of check and balance on the team in terms of, as I said again, I think I feel over data-driven realities, right? And it sort of keeps that in balance. And I think one of the reasons why these bi-weekly reviews have been so strong for us, why feature impact and these other sort of central processes have been so strong, is because of this matrix-based reporting.
That said, I think on teams where PMs have sat there for years, where you have EPs who are very fast and agile and have worked on several games as a service or free-to-play games before, this structure can work. I'm not saying it can't work, but when you're introducing the function specifically, I do think this structure is a bit better.
So, some closing thoughts for you.
I do want to leave time for, I would say questions, but this is a recorded session, so no questions, unfortunately.
However, I would encourage you to reach out to me afterward for questions if you have them on LinkedIn or through email, etc.
So my first closing thought is that GM and games as a service and agile and free to play is a mindset first and foremost.
You know, the physics model, having this mindset, so, so important.
And even on games where, you know, you're even on a game that was not games as a service.
I think this mindset is so incredibly valuable that I would just, you know, this is the one thing that I would take away from everything is that it's a mindset.
And the quicker you can get everyone on the team into thinking about this mindset.
From exec producers, to producers, to art directors, to creative directors, to designers, to QA, to everyone into this spirit of iterative design and rapid experimentation informed by behavioral data. Having people adopt this testament mindset, it elevates the creative process. It absolutely elevates it, right? Now PMs are at the center of, I guess, owning the problem that this mindset solves for. PMs own The problem, how do we maximize for engagement? How do we maximize monetization, etc. Right?
And act as the stewards and evangelists of this for the rest of the team.
But, you know, the sooner you can get the team thinking this way, the better it's going to be for your game.
So some rules of thumb as part of my closing thoughts. Rule one, after you've adopted that mindset, align on shared goals. And it can be very, very simple. The best way to get past differences between the PM and their iterative mindset clashing with other big personalities on the dev team is to establish those shared goals. And you'll see that once you do that, magic starts happening with the rest of the team.
You can start simple, like I said. Identify your North Star metrics that both creative and business types can rally around. Prove the value of the discipline by optimizing your North Star metrics.
As a PM, take ownership of optimizing your metrics. As a VP, empower your PMs to optimize these, to run A-B tests and run experiments, and provide the communication to not only your internal dev team, but to outside stakeholders.
in the form of air cover. The dev team will thank you because they'll be able to focus on creating great games.
My second rule is to adopt a service-based support mindset.
So as I said, a lot of this literature about PMs being the CEO of the product is, I think, a bit toxic when it comes to games. And the best PMs are great at working for the team rather than viewing themselves as the CEO.
So...
Put your head down, deliver great results, listen to the team's needs, and tailor your function to their needs.
Think about how can I use my amazing Swiss Army knife tools to help the team deliver on what it needs right now.
Leading through influence and doing this goes a long way.
And you know, it may sound a little bit harsh, but come in with a mindset that you will have to prove your value first, before you're able to foster a fundamental mindset shift, before you're going to be viewed as a member of the leadership team and giving guidance to those leads, meetings, etc.
You're going to have to prove your value.
So coming in with that mindset and adopting that service-based mindset is going to help you a lot as a PM.
The third thing I would say is that, as I just said, PM reporting structure depends on team maturity.
So when beginning to hire for the PM function, a matrix reporting structure, I think, is ideal.
And PMs serve as that check and balance for the team as a new mindset is in training wheels.
Once the team becomes more mature, PMs reporting directly into EPs and game GMs can make sense.
And PM value, you know, when it doesn't need to be policed by a functional head like a head of product, reporting lines can become more flexible, right? Especially in a full buy-in scenario, I think director of product, head of product becomes more of a career coach for PMs that hones their skills and impact and doesn't really have to micromanage PM workflows with their respective dev teams because the dev team is doing that with the PM directly.
The last thing I would say is that the PM function overall is going to require buy-in and blessing from execs and leaders. There's going to be the blessing from the VPs and GMs or exec producers is required in order to maximize the PM function. Convincing the dev team involves getting early buy-in from the game team and studio leadership.
We're going to have to get that buy-in.
Without this buy-in, it's going to be difficult for the PM to shine, and their value in voice will be greatly reduced.
I've seen teams where they have a PM, but that PM is relegated off into a corner, and this guy came in excited.
You know, he came in from McKinsey or another gaming company, another free-to-play company like King or Supercell, and he's now working on this AAA team, and he's in a corner, and the rest of the team is...
laughing and high-fiving about this great game they shipped.
And within six months, this great talent is gone.
He's quit the company, right?
Because he didn't have the buy-in and the blessing from leadership.
So that leadership blessing is really required.
And that's basically it.
And I would just leave you with, again, this mindset is really important, that iterative development mindset.
Work on fostering that within your teams if you're leadership.
If your PM's coming onto the team, remember these harsh realities and remember the ways to solve for them.
And try, try and try to work for the team, influence to get them to adopt that mindset as soon as possible.
It's going to lead you to releasing much more impactful features, thinking long term, and really maximizing your business.
Thank you very much.
