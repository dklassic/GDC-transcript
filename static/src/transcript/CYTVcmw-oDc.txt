Let's do this.
OK.
So these are our faces and our names.
My name's Alex.
I'm the founder of an indie hardware game company called Sensible Object.
There's about eight of us in London working out of a maker space, but a whole bunch more people who work with the studio here in the US.
Before that, I ran a games agency called Hide and Seek.
Super keen for tweets, feedback through Ammonite.
That's me and Beast of Balance.
So yeah, hello.
Hi.
This is Robin.
Yeah, hi, I'm Robin.
I'm an independent game developer, and I used to do mobile games in London, and now I do just experimental hardware stuff.
And how that works out, I'm going to talk about during this talk.
And the main focus of this talk for me will be Line Wobbler and for you, Beast of Balance.
So we have a short intro prepared of the game, but I also brought it on stage.
So this is the game.
Physical things.
Woop.
So let's try to switch it on.
Yes.
Yeah.
All right.
It's working.
So for those of you who don't know the game, it's a one-dimensional dungeon crawler.
So you control this green light, and it's kind of impossible for me now to play it, but you're trying to avoid these red lights down there, because when you hit them, you kind of die a colorful death.
So what you try is you kind of get close, and you kind of fling the spring.
I have to kind of guess.
Blind Wobbler.
This is a new version.
Whoa.
Amazing.
Blind Wobbler.
You heard it here first.
All right.
Yeah.
So that's the game.
And of course, the Blind Wobbler.
Yeah.
Okay.
And I also brought what I made.
So there's the box, Beasts of Balance, and some of the pieces, the Beasts of Balance.
And here is the trailer.
So, what was kind of interesting about being invited to do this talk together is that Robin and I have taken different paths to shipping indie hardware games over the pretty much exact same time.
Robyn started with LimeWobbler Game Jam around the same time that we started some funded R&D for what was then called Fabulous Beasts.
We both showed prototypes here at GDC in March 2015.
We both were selected as part of the IndieCade Festival in November 2015, both won prizes.
You got design, right? And I got technology, which is exciting. Well, we got technology.
But then it diverges.
So on my side, what we then did was aiming at mass manufacturing and retail and e-commerce and all those kind of things.
So we raised investor money.
We raised revenue.
We've tried to go through this whole process of Kickstarter, we've been manufacturing in China, and we're actually now shipping the game to retailers.
And that is a different route to the one that Robin is going to kick us off talking about, which I will now hand over to him and go and sit down.
All right.
Yeah, so for me, it was much more like a linear progression.
So I kind of kept showing the game and improving it over time.
And I'm going to talk in detail about what kept breaking, what worked well, and what I learned from the progress.
But before we dive into that, it's just a tiny little prelude about why you should all be making hardware games now.
And yeah, especially if you hold the soldering iron wrong, it's going to be so hot.
But yeah, in general, it's easier to use than ever.
There's like little kits like Makey Makey where I don't even need to do any programming.
You just plug the cables into Banana and suddenly you have like a controller like that.
It's cheaper than ever.
It's easier to buy.
So you can buy it from China, even, even though it takes like two months to arrive, which I've done before a few times.
And you forget about it, and you arrive, and so a surprise arrives on your door.
It's quite nice.
The hardware gets getting better, so lots of devices get honed.
So I am using like a type of Arduino.
It's called a Teensy, which is kind of...
Much better in every way, and I kind of rave about it every chance I get.
But there's also a lot of Kickstarter devices and all kinds of different directions, connected devices.
And the community is getting better as well, both online and offline.
So offline, there's a lot of hack spaces and maker spaces.
So I almost exclusively work from the Hackspace London, which has lots of different tools.
But there's also a lot of online communities and forums that kind of help you with everything you need.
So if you want to get started making these games, there's a few kind of events where you can do this.
So there's, for example, there is the alt-ctrl game jam, which is kind of weird as far as hardware games jams go, because you submit online, so nobody can actually play any of the games.
So it's a bit strange, but I mean, it's worldwide, so what else can you do?
But there's, for example, then on the right, there's Zoo Machines Festival, which is a small, tiny festival in France.
But everyone's making weird controllers there, and it's a really nice event if you can make it over there.
I made a game once there about knives, where knives spin on a motor, and you have to put your finger in.
It's very fun, very fun.
But also you can make your games at all kinds of game jams.
So this was me three days ago soldering a weird kind of cat-finding game on the train to San Francisco.
So it's possible to do it on the train.
You have to kind of make sure your tools are fairly small.
There's like a USB soldering iron, which I love.
So it's definitely possible to make your games everywhere you like.
But yeah, now let's more specifically dive into Line Wobbler, which is why I'm here.
So I'm going to talk about what inspired me to make the game, and then how I iterated it towards a proper art piece, in a way.
So first the game was made at the Exile Game Jam, which is a small game jam in Denmark.
And it's a very nice setting.
And I made it to there, teamed up with Matthias Maschek.
So we kind of together kind of brainstormed on different things.
So I was looking at springs, and Matthias was looking at LED strips.
And I got the idea to look at springs just before the jam by doing research online.
And as you know, you look at cat videos when you do research online.
So this is the actual literal inspiration for the controller of Line Wobbler.
So this is a cat.
Apparently, it's not my cat, unfortunately.
But fortunately, I guess, because it does that every morning at 5 o'clock, apparently.
But I thought, like, you know, the cat has so much fun.
So I want to make a controller that has, like, this kind of cool vibrating feedback.
And so humans should enjoy this kind of interaction as well.
So it took me a while to figure out how to measure the movement of the spring.
So at first I thought it could be bend sensors, or it could be like a little joystick on the base.
But finally arrived at accelerometers.
And so I figured out how to kind of use the spring.
And at the jam, Matthias was working with the LED strip.
And so it was a very kind of mechanics-driven design process.
So mechanics in this case, I mean like literal mechanics, like physical objects that kind of define what the game will be.
So what we wanted to do is we want to build a game entirely based on these two objects only.
So no buttons, nothing else, just the one-dimensional display and a spring.
So this limitation to this simple interaction meant that we were quite limited in what we could do.
So obviously you can bend a spring back and forth.
So that kind of works just like a normal joystick in a way.
But you also got this additional interaction of kind of flinging the spring.
So it's a new thing.
And once we tested this, so we had a debug output on the LED strip, just like the spring position.
And once we flung it back and forth, it's like, oh, this looks kind of violent, this movement.
So why don't we say this is an attack, and we add some enemies to it?
So that kind of kick-started the idea for Line Warbler basically.
It went from there, so it said, OK, if we can move along the spring, what else can there be?
So there could be a timing challenge where you have to wait, and then you have to go, and you get pushed in one direction.
That is basically all the game is.
So there's not much more to it, I mean, from a mechanics perspective.
And yeah, so once I put these little accelerometers in here, they're actually behind this, inside this little 3D printed knob here.
And they work way better than expected.
So the accuracy is much, much higher.
I thought I could maybe detect if it's forward or backwards, but it's actually a very precise joystick.
So that allowed me to push up the skill ceiling by making the game much faster and thus a bit harder.
So it's kind of a very difficult game, but I can kind of make the levels easier to compensate.
So over to the graphics. Because it's an LED strip, it's only one line of light, you don't really have much depth of information to convey to the player.
So there's no sprites, there's no text, you know, there's barely any information besides color.
And so I decided to stick to, we decided to stick to a very limited set of information we could convey.
So it's very much like a traffic light in a way. So green is good, red is bad, and orange is somewhere in the middle.
So that's kind of what we used. And that also kind of...
prevents me in a way from kind of expanding the game to make it deeper because like now when I add some teleporters or some pickups, then the question becomes, you know, what does this weird blue purple thing mean?
And that is not quite as obvious.
And it might make sense as a kind of a hardcore mode or like an advanced mode where people want to discover what they're doing, but I found like showing this game, because it is so simple, also non-gamers play it.
And surprisingly, or I don't know, for me surprisingly, they're not willing to explore.
So when they see something they don't understand, they just stop.
And so then, you know, you need to have some kind of way to convey what they're doing.
I actually was forced to cut this, well not forced, but like with this little short instruction sheet that you can kind of see on the screen there, that was necessary to have people understand, you know, oh this is lava, you shouldn't go there when it's bright.
I mean you could, you know, as gamers we figure that out, but like normal players or people that are not as exposed to video games, they don't have this kind of...
It's an interesting balance you need to find there.
Also the LED strips are really cool because they're extremely bright.
So whenever I work on them, I kind of see these little dots afterwards in my vision for hours almost.
So they're painfully bright, but I kind of decided to use that to my advantage to kind of...
not quite torture the player, but kind of really, when things happen in the game, you kind of, you flash them a bit.
So it reminded me a bit of asteroids.
I don't know if any of you have played this in the vector graphics display.
It was like, how bright this looked, and it was so cool.
Wow, how can a TV look that bright?
And so I kind of wanted to capture that feeling as well.
So all the main objects of the game have like full brightness, and then the rest of the game is kind of a very mellow color.
And also when you kill enemies, I'm not going to show it now, then the entire screen flashes in full brightness, but it's very fast because the frame rate is so high, so it's almost subconscious.
And this high frame rate also helped me to kind of make the game look really buttery smooth.
and together with the low latency of this accelerometer, I get a really immediate feedback of what the player is doing.
And that, I think, helped also make the game feel so nice.
Because I think in a lot of modern games, there's a trend to higher and higher latency, especially like mobile phones, when you tap it, there's a built-in latency of, I think, 50 milliseconds at least.
And it goes up with certain devices.
So it's like this immediacy is going away.
And I wanted to recapture that in this custom hardware game.
And I'm also looking into when I make more games, I want to keep this kind of snappy response there.
I also one more thing the the death effect it's like it's a one the particle fact I mean it's just like little things running on the screen it's almost too beautiful to be a death animation so I thought do players really understand that it just died or is it just pretty too pretty but everyone really comments immediately on like how nice it looks and it almost makes the players a bit suicidal because they just want to die all the time but yeah it was too pretty to change I had it in red for a while like blood but that doesn't quite work so it's It's, it might be doesn't kind of communicate so well, but it sticks with the players.
And there's like subtle effects. For example, there's like a subtle dimming around the player.
I don't know if I can show this now.
It's very hard to see, but there's, you see there's like a gradient around the player where it gets darker, so it's just kind of to increase the contrast even more.
And then there's like a shader running through the entire thing, if you want to call it a shader, but it kind of dims, or like kind of smooths out the entire movement.
So when you move really fast, you can kind of see a trail behind the player, even though it's only one pixel width at any time.
So it just kind of fades it out where it was.
Yeah, so now that you have this game, how do you show it?
So that's another nice aspect of this LED strip is that you can embed it into the real world, or you have to in a way.
So again, the screen is always flat, and that's it.
But with an LED strip, you can kind of show it and arrange it according to the to the existing architecture of wherever you show it.
So for example, at Mace in Berlin, where one of the first places I showed it, had to go over the player's heads and even behind them.
So everyone had to kind of crane their necks back and kind of almost painfully look at the game.
And it was a nice eye-catcher, and I kind of like to annoy the player a little bit with that, just kind of bring them out of their comfort zone.
So here's another show.
That was at the Zoo Machines Festival that I mentioned earlier.
And they had some nice art piece there, and I just arranged the LED strip inside it in a spiral there.
So that was good fun.
Or you can kind of go all out and put the game, for example, underwater.
So this was some background chatter at home from my parents.
They have a little pond and I put the LED strip underwater.
It didn't really change the game at all, but it just kind of looked really cool.
And I could well see having some weird wet sensors on the strip so you can have it go underwater.
A little nude, enjoying the party.
That's fun.
But yeah, so you can show the game in different ways.
So once you have the game and you start showing it, you immediately notice mistakes you made.
And with normal video games, you have all these software bugs you discover, usually at the worst kind of moment.
But with hardware games, you also, on top of it, have hardware bugs.
And these are almost impossible to debug beforehand, because you just don't know what's going to break.
Because you think, oh, I soldered this properly, but no, you didn't.
Or this cable is strong enough.
Of course it is not.
And kids won't unplug this by mistake.
They do it on purpose.
So it's fun.
So this was, for example, an exhibition in Italy.
So in Rome, I showed the game at the Maker Faire.
And so I don't speak any Italian.
The kids don't speak any English.
So there was no way of communicating.
And also, when kids play, they forget everything.
They just kind of.
pushing each other out of the way, pulling on this thing as hard as they could.
So that was an ideal stress test for the game.
And that kind of also revealed one of the biggest flaws at that time of the game.
And I'm gonna go into detail of that, and that is the spring design.
So initially, when I first made the game, and you saw it in the screenshot earlier maybe, I used these shoe tree springs.
I used for leather shoes to keep them in shape.
These are actually my grandma's, so I kind of.
from her and re-appropriated them into a video game.
And so these work fairly well, so they're kind of big and very springy, but they're kind of awkward to mount to a table.
So you can see the clamps over there, so you need to kind of make this weird wooden thing.
So that didn't quite work and also getting more was a bit complicated and I just couldn't just steal all that stuff from my grandma.
It was not cool.
So in the end I changed over to the doorstopper springs that was actually the original inspiration.
So these are much easier to use so they can come with the mounting holes.
They're smaller and much cheaper to use.
So you can actually see the accelerometer up there as well.
But they have one main issue and they are not strong enough.
So this is how it looks after kind of a couple, well, this is a couple months, that was in Berlin at the Game Science Center.
And so you can see the loops of the spring come loose.
And so it's very difficult to use that way.
So what I decided to do was make my own springs.
And I luckily found a small-scale spring manufacturer in London.
So I talked to them.
They're called Small Order Springs and Fittings Limited.
So it was kind of ideal.
Not only do they do springs, but they also only do small orders of it.
And I only wanted the small orders.
So it's kind of weird what companies exist.
But that was fine.
It took me a while to convince them that I wanted to do that.
Oh, let me turn it down a bit.
So this is a machine that makes the springs.
As you can see there's a base on the bottom.
That's for attaching it to the base.
And then in the top it kind of gets a bit smaller, like there.
And that's where I attach the knob, the 3D printed top of the spring.
And I cut it off.
It's quite fascinating to watch.
And yeah, so I made 50 of those.
There they are.
And so now I have 50 of those springs lying around.
It's not too expensive to do it like that.
So I think overall, this turned out to be like $5 per spring, which, considered the other cost, is not too much.
And then on to manufacturing the other things.
So there is laser cut boxes.
These are super simple to make.
So you just use Inkscape or any vector drawing program.
And there's even plugins that make these tabs for you.
It's super fast to assemble those.
There's 3D printing, of course.
There's new and exciting materials.
You can't actually play a game with it.
It doesn't look like wood.
Some are flexible, and I used the flexible ones, so you can actually squeeze that in.
I don't know if that's visible, so it's kind of much more comfortable to use.
And also when you work in a Hackspace, so this was all taken in the Hackspace, you get sometimes little playtesters like this one.
So I want to really make a dedicated cat version of the game.
So I want to rub some catnip into the controller, so then one cat controls it and the other one runs after the LED.
So that would be the ideal game, I think.
Ah, such a cute cat.
Yeah.
Yeah.
Right. Yeah, so it's just one more thing then of the manufacturing process. So I used to use like these breadboards as you know, like just plug everything in and to just make it easier for me to make more of them. I learned how to make PCBs. It's not too hard to do that. The software is free. It's a very archaic software. So you have to like use a combination of buttons and command line commands. But overall, it's not too bad.
Here's the part list. It's not really important, just in case you're curious.
So I'm using this Teensy, which is like an American version of an Arduino.
It's just better and faster in most ways, but essentially it's an Arduino.
The Axorometer is just the cheapest one and the first one that was recommended, so I just googled for Axorometer Arduino, and there was a full discussion.
I'll use these ones, they're $3, and these are the pins you should use.
Here's a library, and done. So that was super simple.
And the LED strips, I think, are the most expensive part of the project.
So there are individually addressable LED strips.
For now, these rolls come to about $150, but it's also the highest density you can buy and the longest you can buy them.
So if you want to have shorter or less good ones, it's way, way cheaper.
Yeah, so then the progression from this prototype I built to installation art, or kind of, it's not, yeah, it's like a question of where do you show the game.
So, and I started, and I guess like some of you here also started with, or will start with, the Alt Control GDC exhibition, which is a really cool initiative now in its fourth year by John Paulson here at GDC.
So, if you don't know about it, it's on from Wednesday in the Play area, I think.
And they show like weird experimental games and all kind of all stages of development so like really simple little things to really complex like sewing machine controllers and all this weirdness. So that's super super nice and there's like a couple other ones you can go to and I've kind of written up this progression here so you start at these events that are really good for experimental games.
For example, Out of Control, Amaze, Fantastic Arcade and then you go on to normal game shows.
Tokyo Game Show was really fun.
For me, and then you expand to more artsy events.
So for example, this was at the Cluj-Utronic Music Festival in Romania, which was very fun to go to.
And it's like electronic music everywhere and then there's these light games that worked out really well.
And finally, you can show it at museums as well.
So game science centric museums or kids centric museums love to show that stuff.
Yeah, well you showed it like weird events like Burning Man.
That was a very fun event to go to and it turns out people on acid really like blinking LEDs.
Also I hear.
So that was that was really cool and good stress test for the hardware as well.
Making money from installation art is always tricky.
For myself, my route with Leinmobler was to make this kind of piece for museums and festivals.
So I rent them out now.
I get often emails from curators, and I think they see them at these events I showed before.
And it depends really on the size of the museum, but you can get around like $500 or more for showing it at a brief event.
It depends really on the size, so I don't really know if that's a good number or not.
It's just what I've been seeing.
And it kind of sidestepped this durability issue a bit because it only rented out for one week.
But, you know, if I want to make limited editions, then that question will come up.
What about warranty?
What about durability?
What about, like, kind of electrical safety testing?
And I haven't done any of this, so that's going to be a next big question.
And also price will be a question, because these are all handmade now by me, so the hardware is not that cheap, so it'll be probably north of $1,000, $2,000 per copy, which is definitely more than I would pay for a copy of this, especially because the game is so short.
But yes, so almost done here with my part.
So I've discovered, or I kind of identified like three main ways to kind of bring your game forward.
So the small scale installation art is what I've been doing with Line Mobbler.
You can also license it out to arcade companies, to toy companies, different ones that always look for innovation and try to license your games.
I have no idea how trustworthy or good these deals are, but then there's experts in those fields that can help you.
Or you do the Kickstarter mass production approach, and that's what Alex is going to talk to you about in a minute.
But just to wrap up my part, so what's next with Line Mobiler, I really want to build a massive version.
So like really building size would be amazing.
So this is the CN Tower in Toronto.
And we actually started talking to those guys.
So because they have an interactive LED thing on there, I think it's just screens, no, like normal lamps.
But it turns out their system is super archaic, so actually how they do it is they have one big PNG, like one picture, and they read it out line by line, once per second, and that's what they put on the string.
So I don't know if it's at all possible to have a faster update.
It's like a frame rate of one isn't that great.
But yeah, so now I kind of play around with the games.
I want to make a multiplayer version, like an endless version, like a loop around the room, for example, or different games on the same hardware.
But it's actually very limiting.
So, I mean, Line Warper seems to have come together by itself almost when we made it, but thinking specifically of more games is very tricky.
So I have to see if I come up with other cool, fun ideas.
But yeah, so that's my part.
So now I'll hand over to Alex.
Yeah.
Cheers.
So, yeah, that was Line Mobbler. And I'm switching on my...
Very good. Hardware. Really good with the, super good with the hardware.
So, yeah, so Line Mobbler is one kind of way of doing it, and here is a different way.
So, yeah, I am the founder of Sensible Object and kind of brought the idea for Beasts of Balance into the company.
I kind of started the company to make games like this, having, before this, run a studio called Hide and Seek.
And Hide and Seek worked with some incredible game designers, so people like Margaret Robertson and Holly Gramazio, to make a lot of games that intersected physical and digital.
And one of those was this game called Blocks, which we created for the launch event of the PlayStation Move Controller in 2011.
So Blocks was a game which combined stacking these slightly offset wobbly translucent cubes with this kind of spatial reasoning mechanic. Every time you added a block to the 2x2 tower, you had to match all of the adjacent faces, which were the PlayStation symbols.
So if you put a sort of, you could always go up because you could go triangle to triangle, but if you wanted to put the fourth block in a row of four, you would have to match the two spaces there and the one below.
And...
It kind of just exploded in terms of the amount of fun that it generated.
It was one of those games that we were like, wow, that was good.
And I always think of the reason why it worked so well as having something to do with like these two different kind of cognitive flavors.
So I could talk about it like the cheese and pineapple on a stick.
of games. So on the one hand you have this chewy, savoury, spatial, resource-managing kind of game, and on the other you have this sweet, tangy, performative, stacking, dexterity game. And you put those two together and something about that was just super satisfying.
I always wanted to make a quote-unquote digital version of the game, but in 2011 when we designed the game, the technology wasn't really there to support that.
We did have some conversations with PlayStation around a kind of screen-only move controller version, but I never really felt like that would do the idea justice, so it kind of got filed away.
So kind of fast forward to 2014.
2015, 2014-2015, when I was looking at what to do for this game.
And as you can see, as a kind of game design and creative director, drawing is definitely not one of my strengths.
But as a kind of illustration, you can see that the kind of key concepts of what I was trying to think about were starting to be here.
So I had this whole kind of...
idea that we would use computer vision to track the positioning of the objects and the alignments of the shapes on the objects to kind of integrate kind of match three style mechanics with the stacking game so that you would be trying to align different patterns and and score points and kind of have combos and bonuses as a result.
So because we started from a different place with Sensible Object, which was really to take kind of event games and the kind of thinking and creativity which I've been putting into event games, but try to kind of pack that down into a scalable product business, so something that could be sustainable, something that could potentially You know, board games and tabletop games can be kind of popular for a pretty long time, and they can earn revenues and enable you to do more R&D to make more games.
And so a much more typical kind of game studio commercial model.
I was thinking from the outset about what the kind of commercial thinking that went into this game would be.
And it was trying to kind of overlay between three things.
that I guess I'm super into, but also that I felt kind of had some kind of interesting alignment.
So on the one hand was dexterity games, Jenga is of course the most popular, but if you're into your German tabletop games, you'll know games like Bandu and Hamster Roller.
Collectible card games, CCGs, so they bring sort of really valuable play experiences, but also there's kind of long-term models of like continuously updating and evolving a game.
And then, you know, in 2013-14, when I was thinking a lot about this, you also had kind of an emerging array of hybrid games.
So the first of those were the kind of toys-to-life games, which were doing super well and very commercially successful, and clearly did something that players really loved.
They were these kind of physical collectible toys, and they were unlocking things in a video game.
But for me, their kind of limit, or the thing that frustrated me about them having made event games for a pretty long time, was how little action there was in the real world, that you basically just had this toy, and it was either on the platform or off the platform.
So, trying to kind of merge those things together from a commercial standpoint.
So that kind of first four month R&D period put together a kind of core product team which is still with the company today.
So Tim Burrell-Saward on physical design, George Buckenham on digital game design and development, Lyle McCarthy on art direction, and Chris Shaw was our engineer.
who is our engineer.
And one of the things I think which kind of I bring or which I'm very like obsessive about as a kind of creative director, CEO type of person, is how do you get teams with skill sets and cultures from different disciplines to really work together?
And having had lots of experience about how that can not go well, one of the biggest things is language and use of language and being able to translate and kind of understand across different domains and disciplines.
I've been on many projects where two people were describing the same thing but thought it meant something completely different and it wasn't until the night before demo day when it turned out there was some chasm in the way the project worked that was only discovered at kind of 6pm with 12 hours to go before we had to ship it out on a plane.
that that kind of problem of language was kind of picked apart.
So something that I picked up from my old colleague Margaret Robertson at Hide and Seek was this idea of a this we believe.
So a this we believe is a tool for collaborating across disciplines where you set this aspirational set of goals and we used it a whole bunch and basically it's not a feature list, it's a kind of slightly pretentious set of goals that helps you kind of aspire to what you want to be. But it had some things in there that really helped us.
So we took these two sentences and from those reached the conclusion that computer vision was a really bad idea.
That basically it was too risk to be kind of effective in all situations and too expensive to translate into a family game.
So our engineer Chris Shaw went away and kind of did a bunch of research, came back with a whole bunch of options about how we could like look at the tower or sense the tower, and the only one of those that really was effective in his view was putting a weighing scale underneath the tower.
Now, the trouble with that was that it didn't, in his view, give anything like a good enough image of what was going on in the tower.
It wouldn't know things like proximity, for example.
But this is where that kind of interdisciplinary collaboration really comes off, because as designers, George and I were able to look at what that kind of one dumb number of how heavy the tower was gave us, and start to derive ideas of game mechanics that would really work.
So the one that's probably most effective, which you had a little look at in the trailer, is when the player knocks over the tower.
then basically the tower goes from the weight that it was at to zero or close to zero.
If you can rebuild the tower before the volcano erupts, then you get to keep playing.
So, it's quite kind of simple from a sort of sensing perspective.
We're just looking, did the number get back to the number that it was before in the time available?
But from a player perspective, it's an incredibly dynamic and exciting moment.
Another advantage of dumb sensors, and I think we share some sort of thinking here, is super low latency.
So we're taking this one feed of data from a single sensor and we're doing some signal processing to kind of turn that into a game input.
And that low latency gives a nice crisp, cheery effect in the game.
So we also iterated through exhibition, kind of similar thing of taking it to expos and so on.
Original prototype was this more geometric 3D printed abstract 2 player competitive game.
It had a ton of pieces, had breeding and battling mechanics, had more regions.
So we took that into playtests.
It turns out that if you put a playtest up on Eventbrite in central London and you say free pizza, you will get literally anybody who will come to that event.
And they will sometimes, quite often, not know why they are there.
You'll say, so you're here for the pizza? Yeah, there's pizza, right?
I should say, that's actually the design team from us too, so they did know why they were there.
But actually, it turns out that's super useful because...
Trying to communicate your weird indie hardware game to people who don't know what's up is very valuable.
We also did a whole bunch of exhibitions, and for us, what we were trying to do in those situations was, could we get the game to be readable and understandable by somebody in like 10 seconds?
Because, you know, in that kind of environment, you're getting a lot of people coming through, and you're trying to get people hooked, and that's super important.
What those two types of playtesting gave to us is that that first version we created was wrong in two ways.
One, the core gameplay was far too complex.
And the second was that we needed to switch from a competitive game to a cooperative game.
So we were asking a lot, we do ask a lot of players when they come to our game.
They have to absorb a new interaction model.
There's like these pieces, there's this hardware, it's connecting to this world.
They don't match in a kind of completely obvious way.
And the thing about a competitive game is that you are going to keep the information that you glean about the way the system works to yourself because it may give you an advantage.
Whereas in a competitive game, you get to share that knowledge and it becomes a form of social currency.
So actually, a lot of what George and I tried to accomplish with the design of the first hour of gameplay is not giving you too much tutorial, much like a mobile game would do these days, but instead to give you a set of mechanics.
And through scoring and different things, you can discover that you can really enjoy figuring out and piecing together as a group.
And that's been a very effective tool.
We get a lot of people coming back to us saying that that experience of discovery is a really big part of what they dig about the game.
So conscious of time, so I'm going to kind of whip through all of this.
We had a pretty big year last year.
We successfully kick-started the game, we manufactured and shipped on time, we had coverage and sales all around the world, and we actually got into a whole bunch of fairly premium retailers, none of which was stuff that we knew or thought we were going to do at the start of the year, so it was pretty exciting.
And that kind of translates into some pretty cool numbers.
So we manufactured about 13,000.
We've sold through, so there are now kind of in people's homes, about 10,000 at $99.
So that's, you know, like pretty good.
We see that when people come to our e-commerce site, that that thinking we were putting in about collectible card games is starting to play out.
So there are four different upgrades you can buy from beastsofbalance.com.
Two of those add gameplay, and the ones that add gameplay are way more popular than the ones that do not.
And yeah, basically people are into this idea that this is a game that gets more fun the more pieces you buy.
And they're kind of doing it because they want to, not because they have to.
It's being played a bunch.
So we talked to tabletop game companies about this statistic that like 15 or 16 games a month is the average number of times our game is played.
And they like A.
don't know, obviously, because if you ship a plastic game to somebody, how would you know how many times it's played?
And if they do know, they would not expect that number to be so high.
So we're kind of moving into a sort of different territory with the industry as we kind of start to flow this data into our communications with people.
So that's just a quick scamper through kind of the design history, a little look at some of the headlines, but I want to spend the kind of last piece of the talk just looking at like what this means for you and what this means for people who want to enter this exciting world.
So I think you know like we're doing this in different ways, but really what I would say like because I'm an old person.
I remember in 2005, 2006, just as indie games as a concept were really starting to migrate into the mainstream, that two things that were driving it were, it was easier to publish games and it cost less to make them, and that's what made it possible for everyone to do that.
Robin and I are both doing is finding that is now true, but also with hardware and electronics and retail.
And that's exciting because it means that what we've done, you guys can do too.
And I just want to kind of quickly look at the stacks.
There are these four kind of stacks that we think about as we kind of rest on.
And some of these things will be super familiar to you, like Unity, everyone's probably using that.
But then that's integrated with the kind of Arduino and 3D printing technologies that we both use to kind of help make our prototypes.
We also kind of see makerspaces as incredibly important to what drives this.
There's probably a makerspace.
If you're making hardware, you're probably in or near a makerspace, the whole bunch.
And it's not just...
The resources, although those are important, this is an early 3D printed version of a prototype.
You definitely do not want to be trying to 3D print that many pieces by yourself, because each one of those things takes like 24 hours and it's a complete pain.
If it works at all, which of course is the joy of 3D printing.
But more the community that we have access to.
So just in our one makerspace in central London.
There are four or five different companies that have kick-started in the last six months and between them raised well over a million pounds in kick-start revenue.
So everyone is sharing ideas, information, mailing lists, all of this stuff.
And emotional support, like everyone knows, if it's day 27 of your kick-starter, that you're in a very particular emotional place and you need shoulder rubs and pizza and just kind of pushing through the last few days of your campaign.
And yeah, find those communities because they're incredible.
So then there's your supply chain.
So what we did is we went out to China and we found Chinese manufacturing partners.
We did not try to do that alone.
There are lots and lots of different knowledge networks that you can tap into that are going to help you find the right manufacturing partner in China.
That partner exists for everybody, but there are very, very, very, very many different ways of getting it done.
So we found a sourcing company that actually sort of transacts with and manages our supply chain, and we found them through Hardware Club, which is a members-only community of startups who are doing hardware all around the world.
You then need to deal with getting it from the factory to people.
So there are a whole bunch of third-party logistics companies that you can use.
We're currently using Shipwire, which is really great for e-commerce and Kickstarter, not so great for shipping into retail.
And then you need to deal with customer service, but then you can use something like Zendesk to help you automate and manage that process.
We talked a bit already about launch in e-commerce through Kickstarter.
It's incredibly important for revenues and also for kind of awareness and marketing.
If you successfully kickstart your project, you have a good chance of getting onto Amazon Launchpad, which is a kind of startups-only program where you get a whole bunch of free additional services delivered to you by Amazon that you would normally have to pay a bunch of money for, like putting that video that is on our Amazon product page.
Normally, you have to pay thousands of dollars for that, and we get it for free.
And finally, the stuff that I don't need to tell you guys about, because if you're an indie game developer, you're already doing this really well, MailChimp, you know, all of these different sort of promotional tools that you've already got.
And one thing I would say is, I think Robin and I both found this, that if you have a really weird, interesting indie hardware game, you have a much better chance of getting good coverage because it's so different.
And, you know, we haven't yet paid any YouTube content creators for any of the coverage that we've had to date.
And I think that's largely a function of, they look at it, they think, that is sufficiently weird and interesting that I just want to try it.
And if I'm going to try it, I may as well make a video out of it.
And that makes a big difference when you're trying to get started.
So, super quickly, Kickstarter, a ton of things we got right, obviously a whole bunch of things we got wrong, so many things I could say about Kickstarter, but here's my one big takeaway for you all.
Your pricing is more important than your marketing.
Our early bird pricing jumped by $10, and it was after we'd raised about a third of our target, and basically the person 501 who came to our site had to pay $10 more than person 500, and that just pissed people off.
So they didn't, and our numbers dropped really badly in a kind of scary way.
So, like, there's a ton of knowledge out there about how to do physical Kickstarters right.
Look at the board game community, especially a guy called Jamie Stegmeyer, who's super expert in kind of, and has shared very kind of much information on that.
Okay, so one more thing for us about how manufacturing works and how profitability works.
So it's a very different world if you're coming from indie software to indie hardware.
You're used to Apple or Steam taking kind of 30%.
There's a whole bunch of different people who are going to take money from you in a whole bunch of different ways.
And you kind of have to be alert to what all of these mean.
So, when you're thinking about that $99 that our game costs if you go buy it in Marbles the Brain store around the corner, firstly the retailers are going to take a chunk.
And that chunk varies massively depending on what channel.
So if you're on Kickstarter, they're going to take about 5%.
If you're like a startup doing a deal with a niche retailer who's going to help you launch your product, they might take as much as 60%.
Um, that channel also varies depending on which, um...
category you're in.
So if you're in what's kind of STEM and electronics, they're much more used even in big department stores to thinking about 20 to 30%.
But if you're in toys and games, then they're used to cards against humanity type products where it doesn't cost them hardly anything to make and you can take a much, much bigger slice of the pie if you're the retailer.
So actually like figuring out where your product is gonna sit in retail and knowing how the kind of margin and buying structure works is actually a really important thing.
So on the other side of it, you have your COGS, or cost of goods sold.
So that's basically everything that it costs to make one copy of the game, plus everything it costs to get to a warehouse in the country where you're gonna be selling it.
So also kind of container shipping, import charges, other crap.
And then if you're kind of, there's the actually warehouse to retailer or warehouse to customer kind of bit, which is another 5%.
The mathematically savvy of you will have noticed that if you add up all of those costs, you can end up making no money.
on your own retail product.
And that is possible, really possible.
And you can underestimate these things very easily.
So, like, we knew pretty much.
where we thought we were going to end up before we did our Kickstarter campaign, and we kind of planned all of our sort of pricing and everything around that.
Because if you don't, you can end up with all sorts of troubles down the line.
So you have to be very, very kind of thoughtful ahead of time about this.
You're going to have to work with those manufacturing partners.
You're not going to be able to get to this number on your own.
You're going to have to talk to people in China who are going to have to...
It helps decide what components you're going to use, all of these sorts of things.
To give you a quick example of how that looks, like in the sharp end of design, this is our engineer Chris Shaw's patented custom in-house frictional coefficient bug fixing test.
Yep, it's an angle and a bit of plastic, and down to the right you can see a shiny bit of plastic that has fallen off.
So, if you've got a stacking game, one of the most important things about a stacking game is that your pieces can stack.
Our 3D printed prototypes and our epoxy resin kind of next kinds of prototypes had a very sticky kind of finish, either through paint or through the kinds of materials that we were using.
And that meant that when you kind of built a tower out of them, even if that tower was slightly janky, they would all kind of just hold in place.
And that was really good, because it meant that you would sometimes stack a piece and be convinced that it would fall off, when it didn't and you felt good.
With the pure ABS, so these are the first shots that came out of our injection molding tool.
They were slippy as hell. There was nothing. If they weren't exactly parallel all the way up, the tower would just kind of explode without warning, which is not good.
So instead, what we did was look for different solutions to that.
There were two different ways we could solve the problem.
The way that we thought we were going to solve the problem is by etching the molding tool.
So this is basically a process where you apply some kind of texture to the stainless steel tool, so that when you shoot the plastic into it, that texture kind of gets on.
So if you think about like a walnut veneer dashboard in a car or something like that, it has that kind of texture.
That actually made it worse, because there was actually less...
kind of contact area between the two.
So we thought, if they're rougher, it'll work.
But actually, what happened?
They just bounced off each other even more.
So then we had to go to plan C, which was the thing we really didn't want to have to do, which was this.
So this is a rubberized spray coating which gets sprayed onto all of our hero pieces.
It doesn't get sprayed onto all of the pieces, but so it gives it this lovely tactile kind of premium feel and it also makes that kind of stackability really work.
This added about 10 percent.
to the overall cost of our product, which is bad.
And where we were was basically, like, this is what game design looks like if you're manufacturing.
There is this dance happening between your product team, which is one place, your manufacturing team and your sourcing team, which is another place.
You're having a ton of Skype conversations.
You're FedExing prototypes backwards and forwards.
You're making videos.
You're kind of doing the, you're just figuring out how to test stuff.
and you're trying to relate all of that back to a kind of creator's idea about what you want your experience to be when somebody gets this and unpacks it.
In our case, we were also having that conversation with investors because we were also saying, yeah, so all of our estimates were off.
Actually, we kind of allowed for a margin of error, but our margin of error wasn't enough, so we were kind of actually only about 5% over, but that was still bad.
Now that is my idea of fun.
So I would not recommend it if that sounds like stressful, but the dance, the relationship between this supply chain and all of these incredible people, like I've met so many amazing makers in China, and the kind of skill and the insight and the experience that they brought to this process was really a kind of humbling thing to interact with.
And we got it, and it worked.
So basically...
The end of that story is you have to take the hit on your margin because there's no point in shipping a product that people don't enjoy.
Right?
You know, and ultimately there are a bunch of ways you might be able to solve that problem down the line.
For example, changing from ABS to PVC is our kind of underlying material.
But we can only do that if we've generated enough commercial interest to redo the tooling and all these kinds of, all these sort of nested things.
But it's possible, but what you can't do is ever get back from, this product sucks, you can't stack the pieces, it's no fun.
So that's where we ended up.
So what we were surprised by was that Kickstarter drove interest not just from consumers, but also from commercial partners like retailers.
So we had a bunch of emails pretty early in the campaign saying, you know, this is really cool, we want to stock it, will you come and show us a prototype?
And those translated into purchase orders that meant we could basically triple the amount that we made in that first run.
So cash flow and financing is another thing that you have to kind of get into.
It's hard, but not impossible to do that if you have a purchase order from a reputable retailer.
What you can't do is go to a bank and say, hey, this new product that we've never made before, I reckon I can sell 10,000.
Will you give me some money, please?
I did try that.
It doesn't work.
And we're just like, no.
So that was the great thing.
So Marbles, also a brilliant company in lots of ways, gave us all of this great in-store presence.
All of that work we'd done taking the game to exhibitions and festivals, so it turned out to be super useful in boiling down what the demo experience was in retail.
So it turns out there to be a very close analog between what happens when you walk into a specialist retail in terms of how they get into and understand your game and what happens at a conference.
The bad part was that you need to be aware that if you're working with small scale retailers like Marbles, the fortunes of those companies can go down as well as up.
They went bankrupt a couple of weeks ago and we're currently in the middle of a whole bunch of bankruptcy court stuff with them.
So another good reason for working with Amazon as a partner is, I am pretty sure, don't quote me, but I'm pretty sure that Amazon is not going to go bust any time soon.
So I super recommend working with those guys for that reason.
If you get to this point that we've got to, so where we've now sold the game, we're doing more deals with retailers, we've just come back from the New York Toy Fair, it's all super exciting, you're then going to kind of come up against an interesting thing which is different between digital indie and physical indie.
This is a quote from a CEO of a similar company.
She's about three years ahead of where we are.
So she's my kind of go-to person for wisdom.
And this was really challenging when she said this to me.
If you didn't write another line of code or design another piece this year, you'd have a better year.
And what that is, is actually just a challenge saying, right now we're a making company.
And we had to be a pretty good making company to get through this process.
We had to be obsessive about the product.
This year, We could just be a selling company.
We could just concentrate on our retail deals and our e-commerce channels and growth marketing and getting our Facebook ads better and doing better automated email and building the brand and doing ads and blah, blah, blah, blah, blah.
All, you know, like a million stuff.
Now, that isn't, like, natively what we're into, but she's right.
We would have a better year if we did that.
But we're not going to do that, because we like making games!
So this is a little sneaky peek at what's coming up next for our game.
So anyone who's played the game will know that that co-op game is where we are right now.
We are going to be shipping a competitive game mode, hopefully later this year, timing slightly TBC.
It's going to come with a whole bunch of new pieces that are going to completely change what that game is all about.
And it's also going to ship as a free app update to everyone who already has the game.
And this is where you start to get into some fun blending of the kind of digital game model and the physical game model.
So we're used to cool new features being a reason that draws us back to digital games, right?
And we can do that. We can just ship an app update that means, hey, person who bought our game, you now have a completely new experience and that's free.
Thank you for getting into our game.
We can hopefully then convert some of those people to buying the physical upgrade, which is if you like that, then there's all of this extra cool stuff that you could be doing too.
And then hopefully that gives us some more capital to work with to keep making cool games.
And I think this is like, you know...
Not many companies get to play around with these kinds of things.
And it's really exciting to just be trying this stuff.
We don't exactly know how it's going to work, but we feel pretty good about making it work in some kind of a way.
So that's me.
I'm going to bring Robin back up and say thank you for having us.
Thanks. I mean, yeah, I just don't really have so much to add.
I'm just going to wrap this thing up by saying, yeah, now there's never been a better time to make hardware games than now.
And there's many routes to success and also many more routes, I think, than what we've shown you today.
I want to show you two, right?
And hopefully that talk inspired you to kind of make a game for yourself and, yeah, kind of get into the hardware scene.
So, thanks.
Just a tiny piece of housekeeping.
Please don't forget to fill out your evaluation forms.
If you enjoyed what you saw.
If you didn't enjoy, then don't fill them out.
And do we have a couple of minutes for questions?
So there's a mic in the middle, so you just step up to the mic in the middle there.
And ask away.
You have to go to it, I think.
Yeah.
Hi, that was a really insightful talk, thanks.
So you talked a lot about iteration through exhibition.
How do you encourage your players to give constructive criticism, and how do you gather all your feedback and things?
So for me, it's kind of a more passive approach, so I kind of watch them play.
I mean, I guess that works well because it's a very simple interface, so you can kind of visually see what they're doing and what they're doing wrong.
So for example, with DLIMOBLAR, the idea was you would shake the controller like this, but everyone would kind of...
the controller and would not let go.
People aren't used to letting go of anything.
So in the first, I was like, oh, no, you can let go, you can let go.
And I kept repeating this, but you have to kind of give in to that.
So I made the game playable with kind of holding it.
So it's kind of an observant process and also kind of level balancing.
When people stop playing, that's kind of, aha, maybe I have to change something here.
So for me, it was a very kind of passive observant process.
So I think we do a lot of that just sitting back and kind of taking notes.
We also, every time we run a play test, we agree a set of questions that we're going to leave everybody with, just a simple Google form, and then ask them to fill that out in their own time.
We usually make sure that a member of our team, like a producer or somebody who's not on the front line of game design, runs the process so that we kind of get as much emotional distance between the makers and the playtesters as possible.
Basically, shut the fuck up.
That's my main rule about observing a playtest for me.
No, no, not like that.
Thanks.
Cool.
All right, any other questions?
Any more for any more?
Yeah.
Yeah, one at the front.
Come on down.
You both mentioned low latency.
Can you give some tips how to...
Robin maybe can tell how you make a video or promote yourself.
Because to get to those shows, you need to show something on a video.
It is very difficult.
Yeah, and you need to sell the product, so you actually need to convince the actual buyer to...
So how do you show this low latency?
Like, this stuff you can only feel.
So how do you deal with that?
Yeah, it is very tricky and that's actually a good point and an important point, like especially with these LED strips, because they're so bright they're almost impossible to take good videos of, because they immediately saturate the photo sensor.
So I now know how to do it, but it's kind of difficult, it's like HDR photography, you can do it.
It is very difficult to convey what the game is about online, so if you see a video of it, you just see a flashing LED strip and a weird spring, and you have no idea what's going on.
And it's also one of the reasons why I never thought about doing a Kickstarter, because you only get this online impression.
So you have to kind of convince them, they have to trust you basically.
And for these experimental exhibitions that works...
For more general games exhibitions, it helps if you have shown elsewhere.
But it's kind of tricky to see that in a video.
I always shoot 60 frames per second, so that helps a bit.
It makes it look smooth, but it doesn't really convey the kind of tactileness.
So it's tricky.
So there's the marketing consumer's question, but there's also the marketing to industry.
And actually, it turns out that the whole toy industry runs on face-to-face demos.
Like, we just came back from New York Toy Fair, where we had a booth, and it was just like being at an expo.
you know, we were there and basically all the buyers and all the toy companies come by the booth.
We're in the kind of, so there's a, every single one of the toy fairs there's like a new start-ups area.
You can only be in there one time, so you want to make sure you do it right.
But everyone will come by there because they want to see what new stuff is around that year.
So we worked super hard to figure out who we tried to get to come there.
So we had a whole sales process to get people to turn up.
The toy industry is an incredibly old school industry in lots of ways.
And one of the ways it is, is people go to these big toy fairs.
The one in Nuremberg, the one in Hong Kong, the one in New York.
They put their hands on a bunch of things, and then they decide what they want to have in their stores that year, and they make those decisions pretty much there and then.
You can do it outside of that, but the absolute huge majority of deals get struck in Toy Fair.
So actually, that's one way in which it sort of can be okay.
Real quick, one last question.
One more, and then we'll have to wrap up.
All right.
Uh, so do you guys, do you guys like patent all this stuff?
Or so like, what kinds of, uh, precautions do you take as far as like preventing people from just like.
Ripping off your idea.
So I didn't patent anything and it seems to be very tricky in general.
So with hardware, I've read conflicting reports, but one says when you show it publicly for the first time, you basically waive your right to patent it.
It depends on the country as well, I guess, but especially if you make weird hardware, I have no idea if it's going to be successful unless you show it publicly.
So it is very tricky to do that, and then in terms of gameplay, you can't or shouldn't patent software anyway.
So it's...
It's for me it's all open so I just hope no one copies it and so it's just by presence.
So it's like I show it everywhere so everyone associates the game with me.
So that kind of is my hope that it works.
So that brand and speed is a big part of defensibility.
So we have patented, and that's part and parcel of going the kind of VC investor route.
They're going to expect a different degree of kind of intellectual property underpinning for the stuff that you do.
So we've got patents and trademarks.
We've tried to trademark Fabulous Beasts, and then J.K. Rowling's lawyers said, so about that name.
So hey, Beast of Balance was a great name.
We were super happy to change that really fast.
So, yeah, like I think you can do that.
So in hardware, we are patenting a combination of hardware, software, and intended use.
So you're looking at the kind of overall system and the specific relationship between the sensors and the software, any sensing algorithms that you've written.
So that is, I think, That is very sort of top line defensible in terms of what a patent attorney will tell you.
It's super expensive and you have to do it before you disclose, so you're going to need some kind of backing and a decision to go in that direction.
As well as brand and identity, the other thing that's defensible is make a weird thing.
Because frankly, the stuff that gets ripped off, a Chinese factory, if Fidget Cube had been patented, it wouldn't have bothered the Chinese companies that have ripped it off.
It's just easy to copy.
It's super successful and it's easy to copy.
Our thing was reasonably successful and a real pain in the ass to copy.
Because who is going to go to the trouble of designing all of these pieces and kind of getting all of that stuff right?
So in a way, going weird is a good way to defend yourself against imitators.
And slightly higher ends.
Like there is this kind of...
market emerging for tech toys, which are $100 and up.
And they necessitate more stuff in them.
And that makes them harder to imitate and copy than a thing which is just like a single piece of plastic or a single idea.
So there's another thing there to think about.
Cool.
Thank you, Robert and Roni.
Thanks.
