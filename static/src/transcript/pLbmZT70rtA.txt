Change.
Change.
Oh wait, not that.
Change.
Not that.
Change.
In regards to how comedy is utilized, presented and created in the medium of video games.
And because games are like theatre.
No wait.
No wait.
Oh, it's not even here.
Is it here?
Yes.
Yes.
That bit.
There.
Act one.
Beginning of act one.
Starting great.
So, I'm William Pugh.
I co-created the 2013 game The Stanley Parable with a guy called Davey Reardon over in America, but he's not here and I'm here, so I get to just take all the credit.
It was me. It was all me.
But, yeah, just applaud.
Oh, yeah.
See, this is just ego food for me right now.
Oh, yeah.
But, you know, enough jokes.
Let's get down to the humor.
I'm going to talk about comedy and games that use comedy.
They're different, alright?
Comedy games are designed from the ground up to be funny, like Surgeon Simulator or Goat Simulator or something like that.
And games that use comedy are mechanical games that add comedy bits and bobs to improve the experience overall.
So like Portal or Portal 2.
and there's a blurred line between them, and I think that's probably where the Stanley Parable sits.
But let's forget the Stanley Parable for a moment.
Let's go back in time.
In 2016, no, in 2006, a friend of mine was interning at Valve Software, and back in those days, before they were content to make millions.
they actually made games.
the interactive medium. Now, truly, some of the greatest men and women were, like, fought with this never-before-heard tale.
The first team was Fast Off The Mask, or it was Fast Off The Mark, led by the writer Eric Walpaugh.
He had a vision for a game that transcended the mechanics-driven monotony that pervaded the industry at the time.
He envisioned a game without gameplay.
with no restrictions for the writer.
When the rest of Valve saw this, he'd never have to write another Combine Soldier reloading line again.
He'd be free to lead the creative charge, right?
With no restrictions.
Without the structure enforced by traditional notions of gameplay that we've held since, like, the 90s, he could reach heights of storytelling and narrative freedom and immersion and jokes never before imagined by human beings or gamers.
But sure, he might not have known what it was going to look like exactly, but...
You know, as old Grandpa Walpole had told him many years before, he said, Son, if you don't understand what your concept will look like once it's built, it lies outside of the conventions you hold.
Therefore, it will not only surprise yourself, but your peers too.
Eh?
Eh? Right.
That's important, by the way.
If you're writing notes, write that one down, because that's good.
But, you know, old man Wolpar had decided, like his job, he wasn't a game developer, but he designed safety devices for automobiles.
So his philosophy might not have suited his kind of profession entirely.
But Eric heard those words echo in his head, and so he got down to work.
However, as he had spent most of the day philosophizing and thinking about heady concepts, all of the technically talented people at Valve had joined other teams.
So you just had a texture artist and Jeff the coffee guy.
But they embraced their limitations, like true indies, and produced a game with no barrier of gameplay or interactivity.
Right?
A piece that allowed Eric's inner thoughts to be completely communicated directly to the player.
His masterpiece was completed quickly, and he proudly presented Gabe with...
Four Jokes by Eric Walpaw.
And we're gonna look at that now.
Oh yeah.
Play.
Now we mixed up the next one. This is a visual joke.
Yeah. Yeah. And the last one returns back to the text.
Yeah. Yeah. And then that ends. And the player turns around if they want to see the jokes again.
And jokes are only funny once.
Now, Eric was playing with fire here.
Sure, he'd removed gameplay from the equation, but did that make it any better?
I don't know.
He replaced the structure that Half-Life 2 gave him and replaced it with something else.
It was a step in the right direction, but perhaps just writing good jokes wasn't good enough.
Gabe didn't really feel engaged by four jokes by a Rick Walport and decreed that making a good comedy game is a design problem as much as it's a writing problem.
And you can't argue with me about that because I didn't say that.
Gabe said that, and he is, like, well smart, and he knows what he's talking about.
So, you know, it's good stuff. Good stuff.
Right, so Eric nodded his head to Gabe and agreed.
He knew that he wasn't talking about funny design like Octodad or Surgeon Simulator.
He was talking about creating a structure in the game that allowed writers to write jokes that fundamentally incorporated the notion of player interaction.
And that's what games are about, aren't they?
They're like immersive theater.
The player is integral to the message that they're trying to convey and the jokes that they're trying to tell.
And if you make the player walk through a bunch of rooms and write jokes at them, they won't feel engaged and connect with what you're doing.
Eric knew he'd have to change his approach, but hey, they'd worked out something about environmental storytelling, what with the writing on the walls, and Eric's design idea evolved to become Left 4 Dead.
Hey, yeah, realistic.
However.
Another force was lurking at the edge of this meeting room.
The writer Chet Falicek rubbed his hands together gleefully.
Right?
And he ran back to his cabal and explained to them exactly how they should make their prototype.
He saw Eric's flaw.
He cackled with malice and explained in an American accent, which I can't do, so we'll make him British.
We must let the writing inform the design, and the design inform the writing, chaps." His underlings nodded and got to work.
They worked for five days and five nights and produced something that fundamentally improved upon Eric's game.
Now, Chet knew he couldn't just use the same mechanics and structure as the previous game and just slap more writing on the wall.
Valve.
But, you know, Valve law dictated, show, don't tell.
But Chet amended it to involve, don't show.
Huh?
Er...
Yeah, check it out.
Player clicks on the door, knocks, responds, they click again, for spell, spell him, and...
Joke.
Yeah.
Yeah.
Like, he wasn't writing a play. He wasn't writing a book.
He knew the play needed to be enmeshed in the world he was creating.
He was making his game a conversation.
Right? And that's the end.
And then they might turn around.
And jokes can be funny twice if you change them into a callback.
That was the cleverest joke of the talk.
I hope you enjoyed it.
So, come on, you.
Chet R surveyed the paradigm of interactive humor he'd created, and he knew he'd done well.
So he took a copy home on a USB, he walked into his house, he went up to his attic, and he placed the USB on a shrine he'd created to the spirit of games writing.
He spoke the magic words and the shrine came to life and a ghostly figure picked up the USB and plugged it directly into its ghostly laptop computer, right?
Chet spoke to the spirit and said, Oh, great spirit of games writing, what do you think of this game that I created?
And, uh, the ghost spoke in this voice.
Look, Chet.
If you're writing a comedy game, write it like comedy, not like a sodding joke book, yeah?
I'm talking about callbacks, Chet.
A consistent character that develops over the course of the work.
Design your game so the player's inherently involved.
This all ties into how you should be designing and writing jokes for your games, Chet.
Involve your player.
And then Chet responded with, no, but I'm already involving the player.
It's like you're knocking the door.
And the ghost responded angrily.
He was like, silence!
You are merely having your player act out the script.
With no options or granularity when it comes to player interaction, you've done no better than your predecessor, Chet.
And then Chet responded.
They're like, hey, hey, come on.
I thought it was, and then the ghost cut him off again, saying like, whoa, whoa, whoa, I'm not finished.
Why is there no voice acting?
Why are you telling jokes via text?
Right?
If there's voiceover, your actor will do 90% of the work.
They're also human beings and are unpredictable.
With this in mind, you could write a lot of short, extra jokes and incidental dialogue.
In the recording booth, you will be surprised by how actors deliver things.
You don't have to think every extra bonus line you write is brilliant, but good actors can make lines you think are average sing in ways you'd never expect.
Knowing this, you'll find a lot of great, cheap content for you to tuck away behind corners for players to discover.
And Chet paused and asked, Are you Steve Gaynor?
And then they go shouting, no, no!
You're getting advice, right?
From the f***ing ghost of writing or whatever I am.
Just pay attention, alright?
Adding this, adding the extra content will balloon playtimes massively.
Just be prepared for that by designing your game so it doesn't waste your players' time.
Keep the pace fast.
I mean, I had to fast forward that video earlier because all your jokes needed the same repeated setup.
If the player knows what's coming, they'll get bored, and you're also missing a fantastic opportunity to subvert expectations.
Now, as Chet and the ghost of spirit thing argued back and forth, right?
Neither of them noticed a figure slip away from the window.
That figure had heard everything. He'd seen Chet's game. He knew what he had to do.
That's right! Tim Schafer heard everything.
He rode back to Double Fine on his motorcycle and called an emergency meeting.
They would start work immediately.
on a brand new game. Tim Schafer's Jokerama. Right?
So, oh. Now Jokerama used some of Chet's door idea combined with Eric's corridor gameplay, but he added in an important twist.
At several points throughout the game, the player would make a choice, and that game would split off and riff off whatever the player, whatever the choice the player made.
And I don't have a copy here to show you, but take my word for it that it was pretty special and too complex to actually make for just a talk.
like the other games.
But no, it was pretty...
No, and it's real, it's real, and it was pretty special, okay?
So, it was structured like a small stand-up set, but callbacks and jokes were based around the player's actions rather than being predetermined six months before the game was built.
Tim Schaefer playtested this for, like, 90 days and 90 nights, iterating constantly.
He hid jokes everywhere he did.
They called him the joke hider back where I came from, you know.
He'd go and hide funny textures and little skits behind odd interactions.
He'd see players try and playtesting.
And he'd say stuff to his staff on a near hourly basis, like, they won't see them all, but it'll make the game feel really kind of full of humor and nice.
It'll make it feel nice.
That's what Tim sounds like.
I have limited voices.
But one errant designer said in brave defiance, but Tim, Mr. Schaefer, joke hider, why are we making all this content that players won't see?
Why don't I just add a few extra design tricks and point out these secrets to the player?
Like add a light over here to guide the player's eyesight, pop a bit of signage to lead the player to the kind of secrets so they can see more content.
And an old Tim Schafer was enraged by this.
He slapped his designer across the face.
Oh, it made a horrible mark.
Oh, he slapped him again, back and forth, back and forth.
He went all over the shop.
Tim Schafer looked at him, and he looked with rage in his eyes, right?
And he said something that employee would never forget.
The less you try and push players towards secrets, the obvious design decisions, the less special it is for them to discover them.
If you hide 10 secrets and they discover one, that one secret will be memorable and make their experience incredibly unique.
Unique player experiences, link into viral marketing and YouTube Let's Plays.
And I know we're doing this for the art, but if we can help, you know, sell the game, that's a nice bonus.
It's a nice bonus.
But Tim Schafer had gone a bit secret crazy, right?
So, uh.
And he knew that himself, like, legends have it he stayed in his office until about five in the morning every night just adding secret joke after secret joke after secret joke.
And he was wandering home after a drunken night of joke writing, and he lucked up to the moon.
And much to his surprise, it spoke to him.
And it said...
Tim!
I didn't have that voice prepared, that just came out.
Tim!
You need to be sensible about this hidden joke stuff.
You're too wild, man, too wild.
As a rough guideline, you'll want to hide secret jokes that maintain the pace and feel of the area they're placed in.
If you want a section to be snappy, hide some fun visual stuff rather than elaborate five-minute skits.
Hey, you could even add a procedural callback system that remembers the side jokes players have seen and then tailors future jokes to involve that theme or reference.
And then Tim responded, yeah, yeah, most of that's good, but that last part sounds a bit hard to implement and write, so I'm not doing that.
And Amun said, yeah, okay, I understand.
And Tim said, yeah, and the players, the players wouldn't even notice something that complex to do with like.
procedural joke callbacks. And the moon said, yeah, in fact, actually, I bet you could just randomize those jokes and players would infer some sort of complex system on it. I bet, I bet they'd think your game would be doing some crazy strange back-end logic when all you're really doing is calling random dialogue variations. Tim. And then Tim said, yeah, but I bet if you made that game you'd probably be the kind of type of wanker who'd do a talk at GDC and then use some kind of fake story character nonsense to talk about your game as a metaphor.
And the moon agreed, yeah, and they'd probably go and reference that in a weird meta sort of way.
And Tim responded, yeah, the audience would probably initially think it's funny and clever.
They'd like laugh, you know.
But then they'd kind of quickly realize that it's just a ploy to waste time.
because he applied for the talk because he didn't have a pass and he really wanted to get one for free.
And he gave a really vague talk description and then he had to write something and he didn't know what to write.
And then the other one, I can't remember which one, said...
But once he went down that road, he'd be a bit stuck, wouldn't he?
He'd just be narrating two people talking to each other.
And then the other one said, Yeah, he would be.
He'd need to do something really clever in order to segue out of this.
Act two.
Yeah.
Okay.
Oh yeah, the time.
I've written here how long it'll take me to get to this point, and it's fine.
Everything's going really well.
And so...
Basically, legend has it that all of Tim Schafer's prototype was stolen.
Nobody knew who by, but Tim's multiple door, non-linear, repeatable game featuring jokes in corridors was likely developed into some sort of commercial product that I'm sure is unrecognizable from that bland and silly description.
But alas, we may never know what those despicable thieves did with that beautiful concept and what they perverted it into.
Anyway, let's talk a bit about the Stanley Parable on a different notion.
So um...
Now it's the actual talk.
The spaces in between the choices are the best to design, for me.
I mean, whenever I was designing a space for the player to choose a path in a game, I knew it had to be a quiet space for the player to think about things, to talk back to themselves where they'd never, where they'd been before, or what they thought lie behind each choice, and then try, with no information to justify, red over blue, or left over right.
and the spaces in between those kind of moments were really fun to play with because the only technical kind of requirement of that, of those spaces, is that they just get you to the next choice so that's like time that you can do with anything you can like like within the structure of the game you can play with anything you can like write anything basically and took it behind the corner so the player can like you know, find it out. So, like, early on we started by blocking out the corridors, and then we just really played for a long time. We, like, reiterated everything about three times, and we just, you know, had a good play. But I suppose in games where levels have to serve a greater definition of gameplay, like having the area of fun to navigate while shooting bad guys, or needing the level to teach the player how to solve puzzles, I suppose that would be much harder to achieve. If your player gets distracted by a joke written on the floor, they might forget some vital information that you needed to communicate to them about.
weapons or reloading or whatever.
I don't care.
But if you're making a comedy game, you do really wanna have it, do you really wanna have its central focus be kind of technically complex gameplay?
If the answer is yes, then you can still use the hidden secret stuff in downtime or in areas where you don't need the player to focus.
So, yeah.
So in one of these moments that I made between the bigger choice sections, it was this thing called the broom closet.
And here's the nice interactive part of the talk that I probably should have done at the start.
Who here has actually played the Stanley Parable?
Ah. OK. That's really hard to judge.
Who here has not played the Stanley Parable?
OK. I'm really sorry, everybody.
All of you.
Yeah. Well.
Might as well just go.
Dunno, dunno why you even came here.
No, don't actually leave, because, like...
No, it's good, it's fine. That was a joke.
It didn't hit as well as I thought it would, but...
But, okay.
Moving on, I really enjoyed players going through the kind of room closet, going in, waiting, have the narrator talk to them.
It felt like a step outside of my design philosophy a bit, because during the core of that skit, there's no actual tactile interaction going on.
The player is just kind of waiting about, but the only option they have at...
like, that time, is to leave the broom closet, and the only option they have is when they're gonna do that.
And that somehow makes it feel like a back and forth between the narrator and the player, even if we're just playing lines with, like, a time delay.
However, I also do think that the broom closet flirts a bit with an unhelpful facet of comedy games, and that's waiting dialogue.
Waiting dialogue is fun, guys.
We get it.
You know, where, like, your player's waiting around, and the writers are like, we've got nothing to do for 90% of development, so we'll write loads of funny little jokes for the characters to say, while, like, the player's not doing what the game's about.
But if you only hide extras in waiting around, then you're tying content to player inaction.
And if you let the player play about, like tie content to exploration and play, again we're talking about games as a conversation, rather than asking the player to sit still and listen to the writer.
Moments of quiet are also important, and a space without waiting dialogue can definitely provide that.
So we had to kind of make a determined effort to try and cut down as much as we could on waiting about and rewarding players for waiting about. So we tried to kind of incentivize them through like experience for them to like, if they see something weird, click on it.
If they like see two doors opposite each other, try closing them both and maybe you'll get a little joke or a section.
So it was kind of a way of trying to teach the players to play about and to kind of...
have a bit more fun and not try and find content through boring means.
And if you get your playfulness from players waiting around, they'll miss 90% of it in the latter half of your game.
And that really skews the distribution of joke stuff to the first half.
And you'll want players to be focusing on learning how to interact with your game.
If you could find a way to do both of these at the same time, that'd be pretty cool.
It's kind of like improvisation in a stand-up comedy set.
They'll often play around in the first act, and the audience will be like, oh wow, this is cool.
And then the audience will be kind of out of energy by the second half, and then you've just gotta kind of go and.
talk serious stuff. It's meta, it's about my talk.
If you, if you didn't get that.
Yeah, the energy thing. Yeah, that's, that's, I didn't feel that.
So another thing to think about is repetition.
Jokes heard again and again, they're not only not funny, they're annoying.
If your player moves through an area more than once, or if your game is designed so they will have to repeat content, listen to me now. Randomize assets.
Add variants in every way that you can.
Repeated content usually stems from a facet of your design that just kinda has to be.
You can't design around it. It's what your game is.
And, um...
It's okay, nobody's perfect, and you can't always design a game, you know, that isn't repetitive in some aspect.
And in fact, a level of repetition gives you a bunch of great options to subvert and call back.
But in reality, you can't always redesign the entire basis for your game to fix the flawed assumption about...
your game. So my advice would be to not think, well, if people don't like this, then they just don't get the game. This is just how it is. You need to be applying as many like plasters and band-aids onto that gaping design wound as possible. If you can find 20 really, really tiny things to make it a little less painful, then you better be doing all of those 20 things and thinking about how you can find 20 more. So the problem with the Stanley Parable was the opening section.
If you play 10 endings, that's about 45 seconds of repeated.
content each restart. That's 7.5 minutes of dead time.
Like, time where your player is getting nothing new from you, and that just...
that, like, that might cause players to get bored, say, okay, I've seen enough content, I've hit a lull, and then, you know, you don't get the funness of players kind of experiencing all of your stuff together, and, you know, keeping their head in your work throughout the entire piece, and, like, not splitting it up into chunks or whatever.
So, um...
And actually previously we did actually kick the player back to the start menu at the start of after after each ending and that was insane that added like like ten, ten minutes to just loading times, which was completely useless. So the twenty things that we did to make this section better, the opening section in Stanley, was to add a lot of randomizable, like, elements, from the narrator dialogue to the layout itself. This not only added to the, like, the mystery feeling of the game, but it also sprinkled more jokes into the repeated sections and gave the game a feeling of being fresh every restart.
It wasn't kind of knowable. You couldn't.
understand what it was and that kind of felt, even if the player was playing for the ninth time, it still felt like, okay, I'm back at the start, but things have changed, what's changed, what have I done previously to make this change?
And I referenced this earlier, where we did, we did like all this random generation stuff, but players thought that we were being much cleverer than we were, and they, you know, thought that, oh, something I did in this ending caused the office layout to change and whatever, so.
You know, you don't always have to go the complex route.
You can fake it.
And people won't know.
So.
So one of the randomized bits and bobs we put in the opening section was a phone in an office that just started ringing.
None of the items in the office ever made any noise or allowed you to interact with them much.
So when the phone rang, it gave the players this new interaction with a world that they'd not had before.
It's off to the side, though, hidden in one of the cubicles.
So if players want to go searching, they can, but if they want to rush on and get to the next ending, there's nothing stopping them.
Anyway, so...
You pick up the phone, and we do a little skit about this box delivery company, and you talk to them on the phone, and you, like, press numbers, and the skit ends with a player ordering, like, 500,000 boxes to the office, and, you know, they think, aha, that's funny, what an inconvenience for the office, ha ha ha.
and they put the phone down and they move on and they play the next ending or whatever.
But then, the next restart, we do a callback to that joke and instead of randomizing the office, we instead force it to fill itself with boxes everywhere.
And it doesn't really change anything gameplay-wise, but it starts a precedent for those little independent jokes beginning to link together to form something more.
And even if you just do a few of them, that really, that will start the player thinking, like, okay, maybe something more complex is going on.
And that helps into the lying thing.
Lying.
Lying. Okay, you're not idiots. It's clear as day that we stole the concept from Tim Schafer's Jokerama. Chet Faliszek presents five jokes by Chet Faliszek and four jokes by Eric Walpart.
Okay, we stole it. But you know what? Stealing is really, really easy.
I've stolen like 10 jokes in this talk and you won't ever know.
and you all laughed like idiots.
You thought that was funny, when in reality, I did very little work for that, and you all thought you enjoyed it.
You didn't enjoy it, but you thought you did, and that's good enough.
So, you know, as long as you, stealing's really easy, so as long as you don't find out, you don't get found out, it's fantastic.
So like, if you get called, and if you do get called out on something, just say, hey dude, it was a really kind of.
formative piece of work and I took a lot of inspiration for it, from it.
So, so I'd like you all to repeat this line with me so you can steal jokes in the future. The phrase is...
Okay, so I'll, I'll say you respond. Hey dude!
It was a really formative piece of work.
And I took a lot of inspiration from it.
I am a creative individual.
No idea is unique.
No idea is unique.
Inspiration is that, wait, no, not copying.
You know, actually, I didn't even write this bit.
It's because I've actually got like this much left and they just put the five minutes up.
But you know, that killed time and I get to end on this great joke.
So, if you need an example for how to use that line, it's, yeah, the Simpsons episode in the box factory where the guy shows, you know, them around and shows them, like, the line to walk along.
That was a really formative piece of work.
And I took a lot of inspiration from it.
And online, I've seen nobody call us out on stealing that.
So, yeah, steal your jokes.
You can never write that many good ones.
Steal them. No one will find out.
And if they do...
Just lie.
Thanks for listening to my talk.
We have two minutes left.
We can do one question.
A sole question.
It's whoever goes fast.
Go, run.
Oh, there's one, oh, oh, yes.
Hello.
And the one question is, can I ask that question?
You can ask that question.
Are you Alex Bruce?
Yeah, did he tell you to say that?
Yeah, so I'm just going to kind of...
Like, there was no really great ending bit there, so I'm just going to walk off stage.
