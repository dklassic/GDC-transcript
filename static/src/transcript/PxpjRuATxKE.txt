Hello, everyone.
Just as a reminder before I start my talk, turn off your cell phones and fill out the surveys that they give you through email.
And so I'm going to get this talk rolling.
So I'm going to be talking about single player versus multiplayer level design, and the paradigm shift that kind of occurs when you're thinking about designing between each one.
First of all, who am I?
My name is Elizabeth Beinke-Schwartz, and I'm a level designer at a company in Austin, Texas called Certain Affinity.
and I got my start working on the MMORPG, Lord of the Rings Online, the Minds of Mora expansion pack.
And since then, I've worked on a bunch of different single player and multiplayer titles, including Bioshock Infinite, Mafia III and Doom, and Call of Duty Modern Warfare Remaster.
And so what I will be covering today is what is based on my own experience coming from a single player, highly narratively linear background.
designing stuff like for Bioshock Infinite and then moving over to working at Certain Affinity and designing more multiplayer levels, especially for a first-person shooter design like for the new Steam game that came out. Certain Affinity helped with with some of the multiplayer for that and so I came from a very narrative-heavy single-player background, and I was very surprised when I started designing levels for multiplayer about a lot of the differences.
There are some similarities, but there was a lot of things I was used to putting a lot of time into in single-player levels that I didn't need to in multiplayer.
And comparatively, things where I found out need to be paid a lot of attention to when you design for a multiplayer level that you don't really need to think about as much.
when you're designing a single player level.
So this talk is based on my own experiences, kind of a, if you're gonna switch in between the two and learn what similarities there are and what differences there are.
So first of all, when you are starting to design the layouts for a space, obviously, you need to plan for the size of your level.
And in single player, the things that go into figuring out how you'reâ€” the size that you're going to design for is, you know, how many combats are you going to be supporting in that space?
What are the sizes of those combats?
Are there going to be any big narrative set pieces in that level?
any traversal conversations, like for example if you need to support smaller narrative moments where maybe, for example on Bioshock Infinite, the player as Booker is talking with Elizabeth and they're walking and having a conversation and you're learning narrative moments and so you want to think about designing a space that's a quiet moment.
where it doesn't intersect into combat or other elements like that.
And so thinking about the sizing there and any additional side quests or content that you might want to add in there.
Whereas in multiplayer, the biggest thing when you're thinking about the level size is obviously what is the game you're working on, how many players does it support, are you designing for like a 2v2 level or a 64x64, and also what is the intended time until engagement.
Is the game you're designing a game like Doom where it's almost immediate interaction and combat and you just go, go, go?
Or are you designing a level for a smaller, slower, sorry, larger, slower-paced level where you want to have a bit more space before the player encounters another enemy so that they can get a sense of the battlefield and their options and a bit more of a tactical feel?
And once you've had a general idea of how big you want to make your level.
There's a couple differences between the things you have to think about when you are designing and framing and composition of the level overall.
So the biggest focus in single player, especially if you're working on a very narrative level, is storytelling.
Storytelling is really important.
As some of the previous speakers talked about, trying to find any little moment that you can tell the story in the level is really important.
and also supporting any gameplay objectives.
Steve touched on this a little bit about making sure the player knows where they're going, like where they're trying to get to, and making sure that's clear for the player is really important.
Whereas in multiplayer...
the biggest things isn't really storytelling as much, and that was a big change for me.
Coming from working at Irrational, it was all like, story, story, story, how can we put story into every little bit element of the space, whereas in some multiplayer games do have a bit of story, but it's not as important, and it's almost a waste of time to spend.
spend your time working and thinking about that element.
Whereas the more important things in multiplayer are more, what are your player routes and paths and options for the player to move around the space?
And also, something that's more important in multiplayer, but not as important in single player, is tightening up all the sight lines and making sure that you fix any and all exploits that you can before it gets out there live.
And so I'm gonna kind of break this down a little bit more.
So when I was talking about telling a story, and using any opportunity you can to tell a story, is you need to identify or create situations that really frame narrative moments.
And so think about when you are designing a level that doesn't have cut scenes.
what are the times where the player will definitely be looking at a certain location and identifying those and making sure that you use the crap out of that moment.
So some examples of this would be like in the image here, when the player is exiting a room, you know that the player is going to be looking at that door and putting all this narrative moments.
around the door or say you're exiting the door, what do you see when you exit that door?
And some more examples of this are if the player is stuck in an elevator moving up or down, maybe they are climbing up a ladder and that moment where they exit the ladder, what will they see?
Identifying those moments is really important when you're designing a level.
either creating those moments or using those moments.
Also, when you are designing the space to support narrative moments, thinking about using things like a T-junction to have an opportunity to show narrative.
bits to the player. For example, here, this is a T-junction where the player has entered and they have the option of going left or right, and so putting the narrative elements right at the base so the player will see it no matter which path they choose is a better option than putting it in one area or another because you don't know whether the player is going to see it or not.
And besides narrative, also making sure gameplay objectives are clear is super important in single player.
There's this idea that was coined by Walt Disney called weenies.
It's based on the concept that his dog used to follow him around when he had a hot dog or weenie, and he noticed that the dog would follow him around and it would...
it was a way to guide the dog to certain places he wanted to.
So he used that terminology when designing theme parks, like for example, Cinderella's Castle in Disney World, etc.
It's this visually distinctive thing that you can see, and you can use that as a point of reference.
So in this example from Infinite, you are exiting this small space.
the first thing you see is this statue of an angel, and you know from past knowledge that the young woman, Elizabeth, is in that tower, the angel tower, and that's where you need to get to.
But you don't really, might not know how to get there yet, but at least you know where you're going.
And on the image to the right, it gives you an idea of the fact that you can kind of see this angel statue from anywhere.
you are guided towards that space.
And so making sure you identify moments like exiting rooms or things to display relevant narrative or gameplay objectives is super important in single player.
Whereas in multiplayer, framing is still really important, but you're kind of framing different things.
You are thinking about Making clear the player path options that they have so that players when they're running around the space They can make split-second decisions of where they're going to be going and also it's really important to guide To make clear where the paths are going to be leading Some some multiplayer levels you you might turn a path and you think you're going a certain direction and you get frustrated Because it leads you somewhere else where you don't intend and that's not really the best design of a space when you're designing a multiplayer level.
But for example here, this is an image of Zanzibar from Halo, and on the bottom right you can see that there's a path framed on the side with the sand that kind of leads up.
giving you the impression that you're going into the second layer of this building here, but you also know that you can see the path up on the left coming out from the building, so you know that somebody might be coming into the building from that left upper path as well.
Making sure that the options the player has to move around the space and strategically where other enemies will be is the most important thing when designing a multiplayer level.
And the biggest change that I had to think about when I started designing multiplayer levels is really paying a lot more attention to sight lines.
In single player, it can be kind of fun to find that teeny little spot where you can get an advantage over an NPC and they don't see you and you feel like...
It's rewarding and fun because the enemy doesn't have feelings.
But in multiplayer, the enemy you're killing has feelings, they're a real person, and they get frustrated if they don't, they die and they don't understand why.
In a multiplayer game it's important to understand why you died and...
feel like the players should feel like it's their fault that they made a mistake that they died and not that there's some gaming of the system that feels unfair and so watching out for untimely sight lines is super important and I have an example here of one of an early level I had done and there was a small room.
where you could enter from either door, which is the brown blocks there.
But if you enter down from the bottom and walked up the stairs around those hexagonal pillars, the player could have an unattended sight line where they could look in between the two pillars and get this teeny little sight line out of the door and just snipe or shoot anyone who was running around outside the door.
And the people who are running around outside were like, what the heck?
Where did I die from?
I don't know.
And because the people outside can't really see in, and they don't really see that there is an enemy in there.
And so I had to adjust this to block off that sight line.
And so a lot more time goes into really nailing down these sight lines when you're designing a multiplayer map.
And once you have the base map designed, obviously you want to start thinking about optional or more advanced player routes.
And so in single player, the additional routes can be used to.
give additional story elements to the player.
For example, this is a small basement in a bar in the level Finkton, and it's very out of the way, but what happens is there's a guitar that's...
on a chair and the player can interact with it.
And what happens if you interact with it is the player Booker starts playing, strumming a guitar and Elizabeth there, she starts singing this kind of melancholy song about how the circle will never be unbroken, kind of talking about like the chain of oppression and people being poor and it being really difficult to get out of that situation.
And she...
takes this orange and gives it to this little kid here.
And so it's a really poignant little teeny side moment that a lot of players might not see, but it can be fun to design and add these little elements in your game.
And it can feel very rewarding as a player to find these teeny little tidbits and support additional narrative initiatives or the feel of the level.
But you also have to think about what happens if the player misses this.
Do we have the money and the resources to support these moments?
Because in single player, at least more linear single player levels, players often only play once.
And so is it OK if players miss this content?
And that's something that you have to think about a lot more than when you're designing a multiplayer game.
game level because people will be playing those over and over again.
And obviously you can also use additional areas in single-player to additional loot or other narrative elements as well.
Another thing that you have to consider when designing a single-player level is will the AI play nice if you add different types of ways of interacting with the levels.
So it's great in single-player and multiplayer to design spaces that support multiple play styles.
Maybe you want to design for stealth players or you want to design for run-and-gun.
just go and shoot everyone, action folks, or sniping, but you have to think about, will the AI play nice with that?
So an example I use here on the left is Deus Ex, where you can go in the vents and run around and use those as a stealthy way of getting around.
And it's appealing to add these additional routes to support stealth gameplay, but you have to think about, is the game you're making, will...
that support this type of play style, because what happens if you shoot the enemy through the vents, but the enemy can't get to you?
What happens then?
Is that okay?
Is your game, is your levels supporting that kind of gameplay style?
And on the right side over here, I'm using this example from Far Cry 3, because this is something that, when I was playing through it, I, felt kind of frustrated at.
There are these defensible areas that you have to go into in the map and try to take them over.
But once I got the sniper, I would just sit on the ridge and shoot every enemy before they could even get to me because the AI didn't really play nice with the sniper because the combats weren't designed with AIs having snipers.
And so I had an advantage over them.
And the AIs would try to run towards me, like in the path that you can see kind of in the back left, there's like a route up.
But they have to take so long to get to you that you just have so much of an advantage, it's not really fun anymore.
And so when you're thinking about adding sniper vantage points, trying to restrict the spaces that the players can have those sniper moments, or thinking about how the AIs will respond to those moments accordingly.
So when you're designing optional routes in multiplayer, it's pretty much a necessity that you have to design more than one route.
Because if players encounter each other, the same route over and over again is really boring.
And because players are playing these levels over and over again, you need to provide multiple routes and options for the player.
And so I have a couple examples here.
The player can jump up on that platform and then double jump onto the platform.
platform on the right, or they can just run straight on the ground and then jump and then ledge grab up onto the right, or an even more advanced player could jump onto that platform and then do a much more difficult jump to get to a very small side ledge and have a different angle and advantage over the players, but it's a lot more difficult for players to get onto that ledge without falling off.
And so providing both simple and advanced ways for players to get around is really important in multiplayer.
Now, when you're thinking about pickups in single player and multiplayer, in single player, oftentimes you can design the level first and add pickups later, weapon placements or power-ups or ammo to replenish Any anything that you've lost Which often is designed so that that happens after a big combat scene or right before a big combat?
The good thing about in single-player is you can use pickups to tell stories You can instead of just plopping them anywhere thinking about okay. How did these items get here?
Who was here and you know?
Why are they gone now?
And using those to tell stories and to support the overarching story of your game.
Whereas in multiplayer, you pretty much have to design pickups at the same time that you are designing the layout.
So pickups in multiplayer like a power-up or a power weapon or something.
Like in this example in Doom here, there are these things called runes where they appear randomly after a certain amount of time.
in a level and players rush to it and once they the first person to pick up the rune turns into a giant demon who has a lot more power over everyone than just an individual player would and so the thing to consider when you're placing these is that they will change how the space that the pickups are in and how they play. They will be both a draw where a lot of combat will happen around these pickups and a lot of different angles will need to be supported for entering to get to those pickups and to support a larger combat space than just this teeny little teeny little location And exploits is probably one of the biggest things to think about when you're designing a level for multiplayer.
In single player, it's not super important.
If the player finds an exploit, besides people posting silly videos and then it getting on Polygon or something, there are pretty low consequences.
And sometimes it can even be fun to get those teeny little exploits.
But in multiplayer, especially if you're designing a level that might possibly be used for.
for competitive gameplay someday, it's critical to fix and it's super high consequences.
Players will find any exploit, it's just a matter of time and it's only fun for the individual, but frustrating for everyone else and unfair for everyone else involved. And so a lot more time and play testing needs to be taken to find and fix these exploits.
And now we get into playtesting, because playtesting for a single-player level and playtesting for a multiplayer level are pretty different.
So when playtesting for single player, you really, especially if it's a narrative linear game, you only get one shot.
Each playtester only gets one first impression of your level and how they initially react to things.
And that's very applicable to the fact that players in the end game The final product will only play at once and so you need to find more people to play But you need to take more time to polish your level before you show it to anyone Because a lot of playtesters you know, normal gamers don't have the skill set to extrapolate earlier levels into a more polished state, so they might get distracted by little elements, and taking more time to polish a level before putting it in front of a player will make sure to see if the subtle, nuanced level design structures, or lighting, or framing, etc., will lead to them understanding...
what they're doing and why and the narrative of a level.
And so keeping them as pure and untainted as possible is really critical.
I mean, one way to get around this is to find find other devs on your team, especially other level designers who are good at extrapolating.
So if you need to, and you should, get people to look at your level early, then you should find those people who have the skill to look at the base bare bones framework of a gray box and being able to imagine what it's going to be in its final state and not get distracted by all the nitty gritty details that don't really matter at that stage.
And so overall, when you are playtesting for single player, you should make sure that players should know what their motivation is, and they should always know where they are.
They might not know how to get to where they are supposed to be going right away, but they should always have a frame of reference as to where they're going and not get lost.
And so if players are lost, then you should probably fix it.
Whereas when playtesting for multiplayer, you really need to playtest often and iterate often.
It's really necessary to get loads and loads of playtests done, preferably every day if possible, get people in and just playing through it.
You don't really need to spend as much time on polish as compared to single player, because the biggest thing in multiplayer is the layouts themselves.
And so you can get people in earlier on.
play testing. And the earlier you get players in, the more players can have the opportunity to experience your level over and over again, because that's going to be closer to what the polished end-shipped game is going to be like, where players are going to play over and over again.
So for multiplayer, first impressions aren't a huge deal.
If players aren't really sure where they're going, or if they're slightly lost, or they aren't able to make a mental map of the whole layout of the level, it's not a huge deal because most.
A well-designed multiplayer map will guide players to the combat anyways, and so as long as players initially encounter other players, it's fine.
And if they don't have the skills the first game that they play to understand what the layout is, they'll get that.
They'll get that after playing it many times.
And so in singleplayer, it's a big deal to fix if players are lost, but not as much in multiplayer.
So in summary, the biggest things to think about when you are designing for single-player and multiplayer levels, and where you should put more of your time and your priorities.
So in single-player, you should really make sure to sell the narrative, whereas in multiplayer, narrative is generally low priority.
I got, this is one of the things that I had to unlearn when designing for multiplayer levels.
I was designing a level and I, I like to, when I first design a level, to think about a space of what is it?
What is the structure?
Who was there before the player got there?
What is the whole history of the design of the space and what was it being used for?
And in multiplayer, I got really bogged down with thinking of all those teeny little details that don't really matter and don't have a huge impact on the end result.
Not to say that teeny little narrative elements can't add a little bit to a level, but you don't need to spend much time on that in multiplayer. But in single player and multiplayer, they do share a similar element that they both need to make sure that they frame, you know, optional routes and gameplay objectives.
And in single player, you need to design optional routes to support any rewards that you give the player, whether that's a narrative tidbit, or a pickup, or something like that, and support optional play styles as well.
And in multiplayer, you also need to support multiple play styles, and that's even more important.
and make sure to design routes for more advanced players so those advanced players feel a sense of progression and that they're not just playing the same level over and over again, but they can find additional routes to evolve through the level and get a fair advantage over players, not like the sightline issue I was showing earlier, but fair and visible advantages over other players.
And when you're playtesting single player, you playtest less and polish more in between.
And in multiplayer, you playtest as often as possible and make sure to repeat your playtesters.
And most important, fix exploits and sightlines in multiplayer, because in single player, they're pretty low priority.
And so these are a bunch of the things that you have to think about when you are designing for different experiences in single player and multiplayer.
And a lot of the skill sets you learn from one are applicable to the other, using a lot of architectural and framing techniques that you've learned, or thinking about what makes a fun layout in space.
And those can definitely be interchanged in between the two, but there's a lot of slightly different things that you have to think about in terms of where you place your time in thinking about them.
So thank you.
So we have like three minutes, so.
So yeah, if there's any questions, might get one or two in.
Hi, that was a great talk, thank you.
I was just curious how you think of cooperative level design, because this seems focused mostly on multiplayer.
So I'm thinking, would you place cooperative closer to single player or multiplayer?
So I haven't personally designed any cooperative multiplayer levels yet, but I imagine that it probably takes into account kind of both of the elements that I was talking about in single player and multiplayer.
Obviously, you're right.
I was designing.
I was talking about specific examples, and there are a lot of multiplayer experiences or single player experiences that don't fit in between the two things I was talking about.
But cooperative play.
Yeah, there's definitely some similarities, like there might be framing objectives and maybe narrative moments that the cooperative team wants to experience together.
Those would be important to design and frame, but you don't have the issue of a single-player level where you only get one chance to understand what's going on.
Thank you.
Hi, thanks for the cool talk.
I would like to stick with the single player levels right now.
Before you're going to start with, I don't know, basic block out, whatever environment you're working on, how much story, in terms of the storytelling-wise, how much story do you need to start working on the level you're thinking about?
It really depends.
I would say the biggest thing to think about is...
what is the space.
Obviously, you might have varying amounts of data as to what the story will be in the space, but at least thinking about, instead of starting out with just plain shapes, thinking about what are those shapes and structures and building small stories based on that that might support the overall theme of the game you're working on.
And so even if you don't have the full idea of what the story is yet, you probably have a good idea of the general theme of the game.
And I mean, single player, you're going to rework your level multiple times.
And especially if it's a narrative game, you're probably going to remake a bunch of the levels to support new narrative elements that get put in.
And so you're just going to have to start somewhere and then add stuff in later when you get more data.
Thank you so much.
Hello. Thanks for the talk first of all. I wanted to talk about multiplayer level design.
I guess my question is what's your opinion on asymmetry in multiplayer level design and how you like handle giving players different advantages in a situation or would you rather have like a completely symmetrical map where both teams like have no advantages over each other? So I think symmetrical multiplayer levels are, I don't prefer them because players can get easily mixed up and confuse us where they are.
But asymmetrical multiplayer, I hate using the word asymmetrical because they still are symmetrical in terms of balancing. You need to figure out, like if you give advantage on one side, you need to figure out a different way to give a similar advantage on another side.
provide locations that give advantages that are equidistant between the two players and maybe supporting, like, maybe one route on one side is more stealth-oriented whereas the other side is more open, direct combat.
And so, I prefer more asymmetrical multiplayer levels.
Thank you.
I think that's all the time we have, so thank you.
