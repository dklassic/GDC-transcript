Holy crap, a lot of people turned up. I'm totally pumped because the crazy Cliffy B, Peter Molyneux mega panel is going on at the same time. So I was expecting no one to turn up.
I'm just looking around to see if anyone realized they're supposed to be at that instead and are about to run out the door.
All right, so I've just been told to let everyone know to turn off your noise-making devices in whatever form that may be.
And yeah, we'll get started.
So this talk is called Depth in Simplicity, the Making of Jetpack Joyride.
My name's Luke Muscat.
I'm Chief Creative Officer at Halfbrick Studios.
I made these, Fruit Ninja, Monster Dash, Jetpack Joyride, and a whole bunch of other games that no one cares about or has heard of.
So let's just move along.
So this talk is kind of like a post-mortem sort of.
I'm really just going to be stepping through a lot of the different design stuff we did for Jetpack Joyride.
It kind of might get a little bit crazy at times.
I started organizing it all chronologically, but because we worked on so many features in unison, it was kind of jumping around everywhere.
So we sort of look at a feature from beginning to end and then travel back in time and check out some more stuff.
So yeah, and there's way more in here than I can fit into an hour.
There's heaps of other stuff I wanted to talk about.
So we'll see how we go.
So just for a bit of context, Huffrick Studios is now over 50 people.
But internally we're divided up into a bunch of teams.
This is my extremely attractive, good-looking team right here.
We're seven people.
And we actually work on two projects at once.
So right now half of the team is working on jetpack joyride updates.
The other half is working on prototyping some new IP.
It's just kind of useful to let everyone know that this is how we work, because when I say, hey, we spent 10 months working on a one-button game, people go, what, 50 people for 10 months?
It's not like that.
Jetpack Joyride was pretty much, you know, three people at its core, and then, you know, a whole bunch of extra people who helped out along the way.
So, chapter one, a game in four weeks.
Originally Jetpack Joyride was going to be this game we made in four weeks.
So Fruit Ninja is already out.
It's done about three million units or so at this point.
So, you know, we can really tell that that's, you know, going along.
It's got its own velocity now, which is great.
Monster Dash was already out, and it was doing good.
It was sort of starting to flag off a bit.
And, you know, it wasn't really carrying that same momentum as Fruit Ninja.
So we were looking to do something new.
and we kinda had this idea where you know we really liked the machine gun jetpack in monster dash it seemed really badass and you know when we were coming up with it the spec was what's the craziest most ridiculous stupid weapon we can make and the machine gun jetpack is what we came up with.
So we had this idea of maybe what we'll do is we'll kind of hack up Monster Dash and we'll make this one button game with the machine gun jetpack and we'll make it in four weeks and we'll just release it for free and it'll be like this kind of, I don't know, almost like a fan service thing where you know just hey guys here's something cool we made in four weeks. It just seemed like a nice little mini project, almost like a distraction on the side that we could work on.
And so right from the beginning, even when it was going to be this really simple four-week game, we had some goals and some pillars of the design.
We wanted it to be one button.
Didn't want to have kind of contextual buttons all over the screen.
Just you touch somewhere, you fly up, you let go, you fall down.
As simple as that.
And you know, we wanted to be super accessible.
Hopefully, one-button game design, pretty accessible.
Most people should get that figured out pretty quickly.
wanted to have this kind of ad break play model that both Monster Dash and Fruit Ninja had where you could play it in an ad break, right? Like you can fit it in in a couple of minute break or you know on the train or the bus. But at the same time we were hoping that this time we could add a bit more kind of depth for the more hardcore players you know we because you know this was kind of aimed at our fans we thought we could really you know add a bit of extra in there as well. So this is the prototype for Jetpack Joyride. This is programmed by me. I'm not a programmer.
You can tell I made it in one day because I spelled shield wrong.
So this obviously wasn't photoshopped.
And what we did is, you know, I knocked this up in a day. You know, you can tell, it's simple as anything. It's basically, you know, a cave flyer.
You know, just like iCopter or whatever. And just with a couple of power-ups in there to spice it up. And you know, we had some collectibles.
And I sent it out to the office and I was like, all right, whoever gets the highest score at the end of the day wins a candy bar.
So something you should know about everyone who works at Halfbrick, they are hyper competitive.
Like crazy competitive.
There's a poker tournament every Friday night, there's a 500 tournament running at the moment, there's a group of 10 people who play Smash Bros every single lunchtime and have done so for like the last 7 years.
So people go, free candy bar! And they just lose their minds.
And it was great because everyone was playing the game.
I mean, it was just simple. I spent like a day on it.
It was really basic, but, you know, it became really clear to me really quickly that this game could kind of support that competitive social side, which was very cool.
So then, started working on it.
So I just have a little bit of a thing here.
Last year we announced Jetpack Joyride at GDC and I think it might have even been the same day we announced it. I was at a talk here.
I can't remember which talk so I apologize for whoever it was but they said this acronym and then explained what it was during a talk which was JSI RSO which stood for jamming shit in and ripping shit out.
And I'm sitting in the crowd and I'm like, oh my god!
That's Jetpack Joyride.
That's exactly how we've gone about developing that, and you'll kind of see that as I go through, you know, the design process for this.
Right from the beginning, you know, we kind of had this vision of what we wanted it to be, you know, this simple accessible game with lots of explosions, basically.
But...
we certainly couldn't have envisioned how big and crazy and out of control our development got.
So you'll see as I'm going through this, the crap that we tried sticking in there didn't work, and all the stuff we got rid of.
It's had quite an interesting life, which is cool, it makes it good for post-mortem style critique.
So this is the game at three days old.
Isn't it beautiful?
I remember when it was just a boy.
And you know, you can sort of see already we have some basic stuff in there, the jetpack's in there, we have some coins, mucking around with some lasers, there's some things to dodge and also it looks like shit.
So one of the first things I had to work on was, you know, the procedural level generation.
I really wanted to do procedural level stuff.
And that's not because I'm against level design. I love level design.
You know, before I started Fruit Ninja and all that, level design was my bread and butter.
I have a big passion for it.
But there was this simple fact when I was working on both Fruit Ninja and Monster Dash at the same time, one designer, I was shit at a time.
There was no way I would have had the time to author levels.
So we thought we'd go with procedural levels.
And this is why you can see like this extremely scientific, well-researched graph right here.
This is kind of my feeling on, you know, the design workload on a procedural level design game versus an authored level game.
So with an authored level, you know, right at the beginning you're getting your mechanics going and all that and that's cool.
And you can knock out some white box levels, test out some stuff and that's cool.
And then for the life of the project, you're forever working on the levels, making new ones, generating content for your game.
With procedural levels, it's a bit different because although in the back-end you don't have to do all that creation, up front you can't do anything until you have the system working.
You gotta sit down with the programmer and figure out how this thing's gonna work, how you're gonna edit it, what you might need to do in the future, how it's gonna be extensible.
So it takes a bunch of extra time up front.
But then on the back-end, you know, the workload gets a lot lower.
It doesn't go all the way down to zero, just like any design.
It needs to be iterated on and refined and improved.
But yeah, so that was kind of my feeling about doing procedural level generation.
So we had all these different entities we wanted to place.
Zappers, coins, lasers, all kinds of stuff.
And we came up with this idea of the interval system.
This is extremely basic, this is not rocket science by any means.
Basically, the game comes up with a whole set of intervals, you know, down the corridor that Barry runs down, and every type of entity has the probability of falling into the next slot.
So it's like a 50% chance it'll be a zapper, 50% or, sorry, 20% chance it'll be coins, 20% chance it'll be missiles, and 10% chance it'll be something else.
So you know, this is all pretty simple stuff.
So then the problem was figuring out, you know, where to put these intervals.
By the way, if you're looking at this screen and for some reason, and you don't know why, your fingers are cramping up, it's because I was looking for an athletics track and I just completely stole the background out of QWOP.
So a regular interval system, you know, you see, it's there, it's reliable, but it's boring.
So if we randomize it a bit and have totally random intervals, then that's cool, but total random is crazy, right?
It's really hard to keep track of what's happening in a total random system, and maybe it works fine, like 90% of the time.
But then every now and then you'll have that outlier where you have this massive gap and nothing happens and there's no gates and then, you know, all of a sudden there's like three gates right on top of each other and, you know, that's no good.
So our solution is pretty basic. It's basically, you know, you have a minimum interval length, a maximum interval length and you randomize inside that.
Again, there's nothing all that exciting about that, but what's really, really good about this system for, you know, randomizing and, you know, doing procedural level generation is how easy it is to change.
you can really easily modify that minimum interval length and maximum interval length and in doing so you dramatically change the difficulty of the game.
Monster Dash, when we had that, that just got faster and faster and faster forever and the problem was, at a point you were just jumping blindly and just hoping you would make it over stuff. It got so fast that there's no way you could actually react.
By using this system, we were able to do it a bit smarter.
You speed up at the beginning, and then your speed stays constant.
And we start messing with these numbers.
We start bringing the minimum, maximum interval lengths down.
And that brings everything closer together and requires the player to have more accuracy when flying between obstacles.
So the minimum interval is what's really interesting in this MinMax system, because the minimum intervals kind of represents what's unfair about the game.
So in Monster Dash we had these enemies, the zombies are a good one, where they just pop out right in front of you, right?
And where they can pop out in front of you is measured in distance from Barry, and there's a minimum and a maximum value.
And the minimum value is really deciding how unfair this system is, right?
So here's some more scientific graphs, as you'll see.
I'm all about really carefully researched data, you can tell.
And this is the player reaction-o-meter.
And obviously, if this zombie appears right in front of your nose, the player's just gonna be like, well, fuck this game.
You know, screw this. This is impossible.
This game is treating me unfairly.
I want to have nothing to do with it.
slide it along a bit and you know it'll still be impossible, but then you're gonna start getting this point where it's gonna get a bit blurry and they're gonna be like, well maybe if I was just a little bit faster, just a little bit quicker off the mark, then I could have gotten it.
And a little bit past that, you know, where they actually get it at the very last moment, that's your crazy oh shit moment, which you know, the player feels really good about.
So really where this minimum interval is set is deciding how unfair the game is.
And...
Fruit Ninja, Monster Dash, Jetpack Joyride are all deliberately designed to be a little bit unfair.
So in Fruit Ninja you have the bombs and often you know like the bombs get right up in the fruit.
We could do something about that. We could make it so you know the bombs never overlap with the fruit.
But it's deliberately has a little bit of overlap at least.
Because we want the game to be a little bit unfair.
And the reason is, is in these games that are all about you know getting a high score and then retrying to get a high score again and again and again.
By making the game a little bit unfair, the player can assign some of the blame on their failure on the game.
you know, rather than getting to 200 points and going, well, I'm never gonna beat that, I've reached my maximum skill limit.
By making the game a little bit unfair, the player can go, well, if only that bomb wasn't there, if only I got that extra critical, if only, you know, all these scenarios.
They're placing some of the blame and, you know, some of the credit as well, to be sure, on the game itself rather than entirely on themselves, and it doesn't sting so much when you don't get the high score.
So when you think about it, Fruit Ninja, classic mode at least, Monster Dash and Jetpack Joyride don't seem like they're going to be a really good game for the player because effectively it's an inevitable march towards failure.
There's no finish.
The end game for every game is failure on the player's behalf.
So when you're doing a game like that, it's really important to make sure you fully understand what the costs of failure are.
These for me are the three big costs of failure. Time lost, the feeling of failure, like the emotion, and the friction on starting again, or the retry loop, how long it takes to retry the game and get going again.
So time lost, you know, changes a lot for different games.
This is really vaguely organized, like on the left, from not much time lost to right, more time lost.
So, you know, Canabalt, if you're really shit like I am, your times are only like 10 seconds long.
So, you know, when you fail, it really doesn't hurt that much.
You're ready to go again, and you can just keep going and going and going and going.
even when they throw, you know, unfair situations at you like the glass window you have to jump in and the crazy car bomb thing that falls right in front of you, it doesn't hurt quite so much.
On the other hand, you know, a game like Spelunky, you could be spending quite a long time on that before you die.
And that, you know, you really feel it when you die in that game, you know, you scream at your monitor and all of that, which is fine, you know, for the game it is, that works perfectly, but especially on a mobile game, you want to be careful on how much time lost there is.
There's also the emotional cost, so just how bad you feel.
So if we just came up and as soon as you die in Jetpack it says, you failed and you're worthless as a human being.
That's probably not a great way to treat the player.
So what we do with a lot of our games is we actually reward the player for failing.
In Fruit Ninja, you know, when you...
When you die when you hit a bomb in classic mode or drop the fruit We actually give you like a nice little fruit fact there You know gives you something to take your mind off the failure sensei's there. He's smiling at you like yeah, good job So you know we do a lot of things to minimize the emotional cost In Jetpack Joyride we took this to the extreme.
So you know, you die and then you have the slot machine.
So like a whole nother mini game of prizes and excitement.
And then even on the results screen we have the little Polaroid photo of you that gives you something to focus on.
You got the leaderboards to check out.
You know, you're getting all of this kind of positive feedback and all this recognition for your game.
If you get new best, then stuff pops up as well.
We really do a lot of steps to minimize the emotional cost to the player.
There's even this thing we do where, originally, when you ran into a zapper, Barry just vaporized instantly. He just went, poof!
And that was it. That was your score that you got.
What we found by, you know, changing it so that he kind of, you know, gets zapped, and he bounces along and slides on his face, and sometimes he bounces and picks up a few coins, and if you're really lucky, you know, maybe you might pick up a spin token or something else along the way, or even complete a mission sometimes when you just need those extra few meters.
is it almost fades in the failure rather than just being instantaneous, boom, you have failed.
I mean, you take the hit, you know you've taken the hit and you've failed, but instead of immediately considering the fact that you've failed, you have this little mini thing, it's only like two seconds or so long, but you're watching Barry bounce, you're kind of anticipating, trying to figure out whether he's gonna, you know, run into that next zapper or collect that coin or that token.
And it almost fades in the failure in a way.
The other stuff that we do is, you know, obviously, if you completed a mission, boom, you know, there's stars and explosions and coins and, you know, we do a lot to really try and make the player feel good about themselves.
Come back to the mission system a little bit later.
So the other one is restart friction as well.
So when I say restart friction, I mean like how difficult is it for the player to restart the game?
You know, how seamless does it feel?
So in Jetpack, you'll notice I have, this is kind of like a comic book, so you start at the top left and read across.
When the final spin machine comes up, instead of cutting abruptly to a whole different screen, we actually kind of simultaneously slide the machine up and fade the game in the background down, but the game in the background is always there.
So rather than kind of cutting to a whole nother area, you're still being, you know, you're still within the game world.
And it just kind of makes it feel a bit more seamless and, you know, rather than kind of cutting out to a whole nother room.
Even then when we slide the final spin off, you'll see the game is still in the background.
We mess around with the tint of it a bit just so that it doesn't conflict with the menus.
And, you know, the other thing is, is we always make sure that restarting is as easy as possible.
So in the final spin, if...
You don't want to play if you really just want to go again.
You have the cash in button so you can just tap it, cash in your tokens, skip past it.
All of these transitions you can tap on the screen and it will speed up or skip past them.
And then we have the play again button which is in the bottom right hand corner and massive.
And what you'll notice is the play again button is in the bottom right hand corner.
So is the cash in button, so is the next button on the missions, so is the continue.
Every button that involves you progressing is always in the bottom right hand corner.
And the main reason it's there is what we found is in playtesting was people were typically like around 80% of people were using the bottom right hand side of the screen.
for actually putting in their input.
Even though you can touch anywhere on the screen, the bottom right-hand screen is the preferred area.
So every single thing in the game that involves you continuing or progressing to the next area is put in the bottom right-hand corner, and that way, even if you're not really paying attention, you're kind of playing and talking to someone, you just keep mashing the bottom right-hand side of the screen, you're gonna go to the next area, and you're gonna be able to restart.
So, testing.
This is what the game looks like Christmas 2010.
You can see it's still called Machine Gun Jetpack at that stage for everyone who remembers that whole thing. You know, originally you'd touch this window and Barry was supposed to burst through the window.
We actually changed that because then we realized we'd have to, you know, do frames of Barry facing forward, which is fine, but we wanted to customize all the different outfits and it meant all these extra frames over time we'd have to do.
It's looking pretty simple. You can see this was pre-scientist.
We didn't have any scientists in there yet.
We added them later just to add some kind of visual interest.
We had a couple of other interesting things in there at this stage.
Originally in that crummy flash prototype you had these pickups that would literally just add meters to how far you'd go.
They were still in there.
And we had these close calls.
So every time you got close to a zapper, you would actually get an extra 20 meters added to your score and then if the next one you got it as well it would chain up and it would exponentially get higher and higher and higher.
We ended up taking that out because even though you know like you know that's your classic risk reward design.
But it was so... it was almost too powerful.
It kind of subverted the way people were playing the entire game.
And you spend your entire time trying to get really close to the zappers, and then you would die.
Because the collision on these zappers is, you know, they're really spiky and everything, it's not super clear, not as clear as, you know, just like a hardcore, this is a red box, don't touch this.
It was, you know, it just didn't quite feel right.
We actually took it out to simplify the game a little bit later on.
So the way that we do playtesting is, we do a bunch of different ways, but one of my favorite ones is we'll sit down, we'll go to the company and we'll present the game on a big screen, get the whole company and be like, check it out, this is what we've been working on.
If you like the look of it, come down to our room, we'll put it on your iPhone and you can play it. You'll be our playtesters.
And then once it's out on everyone's phones in the company, we almost treat it like it's a live release.
So everyone's sort of coming back to us and they have all these suggestions and, you know, bugs and stuff that's coming up.
And rather than just sort of like taking all of that in and then, you know, later on we do another major test, we actually update the game.
Whoa, I think my thing just fell off.
That's still working? There we go.
And so we would actually treat it like a live release and you know every two weeks we would update the game. We'd even make up these like posters and you know say this is what else is being added this time. These changes, these fixes.
And we're almost treating it like it's out on the store already and being updated.
You can actually see like a final beta. It was still called Machine Gun Jetpack.
One of the other things we do is something called street testing.
Full credit to Simon Joslin of the Voxel Agents, who made Train Conductor and some other games for giving me this idea.
I've completely stolen it and adopted it because I think it's amazing for casual game testing, which is literally just...
taking the game out on the street on your iPhone and approaching completely random people and saying play this for two minutes and that's it and in terms of evaluating accessibility and you know how quickly people will understand the game cannot be beaten I highly recommend it so thank you Simon for that I looked up like games on the street and yeah joust came up So the revelations we had from this very first company playtest that we put out over Christmas, and putting it out over Christmas turned out to be really cool, because it was right before everyone's two-week break, so everyone got to spend two weeks with it, you know, not in the office, treating it as if it was an actual game on their iPhone.
First thing was that this game needs more time.
We'd spent over four weeks already, and it was really obvious to us that it wasn't going to be done in four weeks or anywhere near four weeks.
The other thing was, you know, Fruit Ninja was getting more and more velocity.
And we started to feel like releasing a free kind of half-assed game really doesn't feel like the right way to go about following up Fruit Ninja.
You know, there was already people kind of talking about on the net, like, ah, what's the next game gonna be? And, you know, we started to feel that pressure.
The playtesters had two major problems.
First, it feels hard and super intense.
There's no low points in the pacing.
And you're always one moment away from death.
And the other one was that there's just not enough variety.
You know, it was simple, but simple to a fault at this point where people were really burning out and, you know, getting sick of it quite quickly.
So the first problem of intensity, basically this is what the intensity looks like initially when at this point in the design.
The game starts off, it speeds up and then boom, you're always one hit away from death and it is intense, it is always intense.
So we're playing around with how can we make this a little bit less intense.
We tried putting in a three-heart system just like Monster Dash, and you kind of get this effect where at the beginning you're kind of cruising along and you're relaxing, you know, I got three hearts up my sleeve, nothing to worry about, easygoing, and then you take a hit and it kind of jumps up a bit and like, oh.
Shit, I've only got two hearts left.
And then you lose the last heart and you're right back up against that intensity line the whole time.
Even when we added in hearts to collect and all that, it kind of, you know, just put some downward steps in this graph. And it really didn't feel right. It still just didn't feel like the best possible solution.
We also tried a Call of Duty style intensity. You know, the one you get shot and all the red comes up in your peripheral vision and you've got to make sure...
I'm sorry, I know heaps of games other than Call of Duty had done it, you know, even before it.
always, that's the one that comes to mind for me. And so what would happen is your intensity would be, you know, semi-low and then you would take a hit and it gets ratcheted right up and then it would come down again. And the weird thing here was the only way we could kind of kill the player, because we don't want the player to play for too long, remember?
We need to keep our cost of failure in terms of time lost under control. It's to make the game extremely hard, you know, we're throwing millions of zappers at them so they take that second hit while they're in that state.
So that didn't quite feel right either.
So we'll come back to that.
Problem two was variety. How do we add more variety?
Well, we add variety in the same way that every other game in history has added variety.
Power-ups.
And so we're coming up with these power-ups, and the problem is, is again, the game is so simple that we're really struggling to come up with power-ups.
We have ones, you know...
What are you going to do? You give Barry a shield, you make him invulnerable for a period of time, you slow down the game like a bullet time type thing, make the zappers smaller. I mean, you know, all these things kind of worked and they were interesting, but it was far from inspiring.
It felt quite basic and wasn't quite there.
So we're spending a long time bashing our heads against the wall, like, why is it so, so hard to come up with power-ups for this game?
So we had this idea of what if we change the controls?
Maybe that's what we need to do.
People hate it when you change the controls, right?
Because you die.
You don't have enough time to get it figured out, and you die, and it feels really unfair and almost, like, disrespectful to the player.
So this is where the idea of the vehicles came in.
The idea of the vehicles is simple.
We're going to change the controls, but we'll do it as a vehicle.
And because it's a vehicle, you'll take the hit, you'll explode, but Barry will be okay.
So...
The controls are going to change, yes.
But the thing is, it doesn't really matter.
This is just a bonus run anyway.
And because it was a bonus area and there was no real risk to your overall game, we kind of felt like we could treat the player a little bit more disrespectfully in this time and make the assumption that they're going to die the first few times until they figure out how to use the vehicle.
And all of a sudden the pacing completely changes for the game.
Now it looks like this. It's always really intense still, like that very first graph.
But when you get the vehicle, it drops way, way down.
You're in a safe area, you've got this cool little variety moment, you know, the pacing has changed dramatically.
Certainly, you know, while you're in the vehicle, the speed picks up and it does so quite quickly.
We don't want you to spend too long in the vehicle, or else it's not going to be special anymore.
But you know, this really, you know, we were really excited about this.
You know, the pacing was fixed, the variety was better.
more explosions equals more beta, obviously.
You can never have too many explosions in a game like this at least.
And so, you know, we were feeling really, really good about this.
It was definitely a big breakthrough for us.
The other thing was the game had a big injection of character at this point, which is great, because before it was feeling a little bit dry and all that, and, you know, the Barry Steakfries universe, a game where the very first Barry Steakfries game, Age of Zombies, the opening line is, surprise, Professor Shit for Brains.
really felt like it needed some extra character in it to, you know, make sense that it's Barry Steakfries.
That said, you know, we kept everything much more G-rated this time.
So then we're playing around with the vehicles and we're like, well, how dumb can we be?
How crazy can we go? How stupid can these vehicles be before they're too dumb and too stupid and players don't like them?
I'll concede as well, but not every player likes the crazy freaking teleporter.
But this was our test, our foray into like, maybe we just come up with this really stupid bizarre, our original, I couldn't find a screenshot of it, the original prototype had this as the DeLorean for some reason with some really bad coder art on it.
And this was us really testing the boundaries of the crazy stuff we could do.
And you know, because it was wrapped in this bonus system and it was part of this world that was kind of ridiculous, it all seemed to fit and you know, we didn't have any problems with it.
So this kind of gets us to last year's GDC when we announced the game.
It was the first time we'd done like a big playtest of the vehicle system, especially with external people that hadn't been there during the development of it.
And the big thing that we learned straight away was people would make critical mistakes, like in close proximity to the control changes, which is kind of what we anticipated.
You know, we knew that people were going to have problem with the control changes, but we didn't anticipate to have, you know, what extent.
People really did have difficulty with it.
So...
Again, more explosions.
Explosions are the answer to all of our problems.
When you pick up the vehicle, it explodes.
There's a big doo-hoo, and it clears away all the obstacles.
So this just gives you a bit of breathing room.
Same when you destroy the vehicle.
I mean, that worked to an extent.
That worked OK.
But where we really, really found ourselves breaking through was when we started mucking around with these kind of scripted coin sequences.
So the first time you pick up a vehicle, Well, sorry, every time you pick up a vehicle, no matter what, you get two sequences of coins.
And what these coins do is...
they're never on the ground, they're never where you can get them without having to do something.
So it really provides the player with a goal and something that, you know, they're not going to get it just by watching the game play out.
They're going to see this goal and they're going to have to figure out how to get there.
So it acts like this little kind of mini tutorial time and we do it every single time.
Because, you know, there's six vehicles and you've got the jetpack as well, seven control schemes to keep track of, this control...
Sorry, this playground area almost.
really gives the player a chance to explore the controls and get familiar with them again, get recalibrated with them again.
You might remember how it works but you might not quite remember how it feels, how quickly the gravity changes, how quickly you can press it again.
Also when the vehicle explodes we add another coin sequence again, and this gives you another kind of little section of time to get recalibrated and kind of re-buried.
The number of vehicles is kind of an interesting thing as well.
Because these vehicles have so much kind of character and they all control really differently, everyone has their favorite, right?
Like, people really latch on to what their favorite one is.
The balance here is, if you have too few vehicles, you are getting your favorite one so often that it doesn't feel special and that you're not excited.
Too many vehicles, you're not getting your favorite one often enough.
So we always found, you know, we have a similar amount of weapons in Monster Dash.
We really felt like around six or maybe seven was the sweet spot.
Where, you know, when you get your favorite one, so the favorite one for me is always Little Stomper.
When I get him I'm excited and I'm like, yeah, Little Stomper time.
So yeah, it was really important. There's some other interesting things to do with the way that, you know, we had to mess around with the probability of the vehicles in the missions, because when you have a mission that's like, you know, you need little stomper for something, it kind of dramatically changes your perception of how often it comes up.
because you go, you collect like four vehicles and not get the stomper and in your mind you're saying god damn it the stomper never ever spawns even though it's well within the realms of like you know standard probability.
So we actually kind of game it at that point and override the probability if you haven't gotten the vehicle you need to complete a mission in a long time.
A long time, it's like three pickups.
So the next thing we were attacking was stickiness.
So I apologize.
This is the worst slide in my presentation, for sure.
I was like, what image am I going to put for foundation?
And this came up.
And at the time, when I had to submit this talk back in November, I was like, ha ha, that's kind of a funny joke.
And then I was going back through my slides this morning, and I'm like, I'm so embarrassed.
So let's skip past that.
So the game at this point is feeling like quite solid.
And you know, the thing that kind of becomes obvious to us is this is, this game, the base of this is really solid.
And it means it's kind of this good playground now for half-brick experimenting with some things, trying some things that we haven't really done before.
The first thing we really wanted to do is make an ultra sticky game.
So you know, like Fruit Ninja or Monster Dash, those games, people play them and they like them and it's received well, but people never spend that long with it.
So we wanted to try changing that.
We wanted to make something that.
even though it was simple, people would spend a long time in.
We also wanted to try out a bit of, you know, in-app purchase economy stuff.
We didn't want to, like, we weren't looking to make money off it or anything, or gouge players, or piss anyone off.
We just wanted to try it out and get an understanding for how the system works, and, you know, everyone who's smartphone developers will be seeing that trend kind of shifting that way.
And, you know, we just wanted to learn stuff, do stuff that we hadn't done before, and, you know, see what we can get, rather than doing something so similar to what we'd done previously.
So this is when the shop came in.
So the shop, the idea was to provide an incentive for the player other than beat my friends.
Because previously, you only had that social pressure to beat your friends.
And when you're playing Fruit Ninja and you don't get your high score, you almost get this sense of you've wasted your time a little bit.
So we wanted to use the shop to change that.
We really wanted to allow players to express themselves, too.
just seemed like a neat thing to do.
I mean, this whole game is like a whole exercise in scope control gone terribly wrong.
We just come up with these ideas, and like, yeah, cool, we'll add that in.
Customization, why not?
They've already blown way past the four-week limit anyway.
So this is the very, very first mock-up for the shop. It was basically exactly the same as that, except flipped.
And you know, so this was our first sort of stab at doing it, and problem is, is again, you know, talking about the character of Barry Steakfries, it feels quite dry.
Really wanted to get some flavour text in there where, you know, we could write some, you know, semi-witty jokes and, you know, add a bit of extra character into the game, a bit more personality.
Here's another version, and you can see we've now got flavor text down the bottom.
The big trouble we were having was, you know, how are we going to get all this stuff on screen, make it easy to navigate and kind of intuitive to get around.
Clearly this isn't it. This wasn't implemented, this is just a dodgy Photoshop mockup.
So this time we tried putting the categories into tabs, kind of like a folder.
Um, you know, we had our items, we had the flavor text down the bottom, we've made the bars bigger to try to minimize how much text is on the screen and make it a little bit less visually noisy.
Even then we kind of felt like that's a bit too visually noisy, so we pushed the flavor text out into a pop-up, so when you click the, uh, the...
item, it actually comes up in a pop-up. And you know this design seemed alright on paper. We actually implemented it. We spent a couple weeks implementing it and trying it out and this was, if there's any press guys here, this was the shop as it was in the GDC build last year. But you know it still just wasn't feeling quite right. We really weren't happy with it.
It felt a bit clunky to get around. So we were like, right, okay, almost out of ideas. Where can we get some good inspiration from for how to do a shop front?
So, it is time for us to, you know, borrow some concepts.
Obviously, if you're playing on the iPhone, you're probably fairly familiar with the App Store on there.
You most likely got the game by navigating through the App Store.
So we thought, right, okay, these guys seem to know what they're doing, let's, you know, take a few cues from them.
So you can see it sort of started to become horizontalified.
Those are light pink boxes on the left there are the icons.
So you know, you got the icons on the left, the price on the right.
You can see you've got like the little sideways arrow, just like the app store as well.
We still got the kind of categories down the side for categorizing things.
And you'll notice at the top, there's two major categories, which is like the for sale and my gear.
We weren't really sure whether we should be pushing out things that you had already bought into an inventory screen or whether it should all stay within the same shop area.
So again, yeah, it's looking alright, but still not quite happy with it.
There's a lot of text on that screen, right? There's a lot going on.
So we tried kind of...
horizontalifying the whole thing, like getting rid of the noise down the sides.
So you can see it's kind of been stretched out and you can kind of see this is starting to get close to the current shop implementation.
We still have the two categories, the for sale and the my stuff, so you know the inventory and stuff I haven't yet bought. We've got down the bottom the uh... you know a lot of Apple apps have the categories listed down that way in those black bars but you know and then eventually we came up with the idea that we would pull all the categories out to the top level and that way we could have visuals and again give it a bit of character and then finally the the end result there it obviously looks much better because at this point then an artist touched it you can see that you know design-wise that was kind of the next obvious step and you can see how similar that is to the app store right like you even got the glossy icons and everything the biggest change more than anything is that when you click an item rather than pushing you to a whole new page it just kinda pops down Okay, so that's the shop.
Next thing, mission system.
So the mission system was originally inspired by the little system in Tiny Wings.
I thought that was a really neat idea when I was playing it, but I had a lot of problems with it too.
I wanted to do kind of more reward structures and, you know, more interesting stuff.
It felt cool completing missions, but I never really felt fulfilled by doing so.
And I would often get stuck on a mission and, you know, really sit there tearing my hair out trying to get past it.
So we figured we'll budget one week to do this thing.
If you assume that like four weeks was accurate to make this game in nine months, then this one week estimate is pretty close.
So we tried three different things in addressing these, you know, in improving this mission system.
We had the daily system, the optional system, and the progressive system.
So the daily system was our first one.
The idea is this.
Every single day you get three new missions you can do.
There's an easy mission, a medium mission, and a hard mission.
That way I know I'm never going to get stuck because you know I've always got an easy mission to do there and when you complete the easy mission it's just it's done. That's it for the day.
You don't get another one to replace it. It's just there and then I check back tomorrow.
and I'll have three new missions to do.
And that seemed like a really cool idea, you know, on the surface of it, because we know it's going to address the problem, no one's going to get stuck, clearly, like, even if you can't even complete the easy mission, then you can just come back the next day and, you know, maybe you'll be able to complete the next one. Our goal of making it sticky, this seemed like a cool idea because, you know, you'd be able to keep coming back, there'd be incentive to come back every single day, so it seemed kind of neat.
And we did another kind of company beta and one third of the company got this system.
The second system we did was this optional system.
So again, really trying to address the issue of getting stuck.
So this was simple.
At all times, you basically had two missions to complete.
And rather than it being one and the other, it was one or the other.
So this one, run 800 meters in a little stomper in a single run, or spend a total of 2,000 coins.
And you'll notice the top one is a skill-based mission.
The bottom one is this kind of grind, time-based mission.
Something that anyone could do given enough time.
Experienced players are gonna complete it quicker.
But, you know, anyone will get there if they invest enough time into it.
So this was the second mission we tried and, you know, we put that one over there and, you know, again it's kind of neat but it's feeling a little bit off.
The final one is the progressive system. So this is obviously the one closest to the current system as we know it in the game.
three missions, you know, you complete one, you get a new one.
We had experience points at this point as well.
And so, you know, this was the system and it was easily the favorite of our playtests.
Again, one third of the company got this.
The problem was with the daily system was the guys who started playing it, like, on a Monday compared to the guys who started playing it on a Friday.
The guys on Friday felt like no matter what they did, they could never catch up, right?
Because it didn't matter how much time they put into it, they could never catch up to their friends and they're always one step behind.
And they felt quite disempowered by not having control over what they were able to complete and how much time they were able to invest in the game.
The optional system worked out a bit better, it seemed okay, but you know, it kind of delivered the missions in such a, you needed such a long string of them, and because you were only doing one at a time, it felt really kind of steppy, and this, and then this, and then this.
Progressive system was easily the favorite for the playtesters, because they really enjoyed completing multiple missions at once, and all that kind of stuff.
Originally, we had this rewards system, which is literally the money-old box.
So when you leveled up, this is what happened.
You got this screen and you could either get the money or you could have what's in this box.
And we had this big list of prizes you could get in the box.
It would unlock things in the shop.
You get random currency rewards.
You might like win $1 instead of taking the easy two grand or you might win 100,000 coins.
We even had these collectible things that you could get.
They were, you know, we had made some crazy, stupid large amount of them and they did nothing.
They had no utility value.
It was like a kind of collectible card mini game on the side.
The big problem here was, you know, in the progressive system, people felt like they wanted the missions to get harder and harder and harder, and because of this reward system, we weren't able to give bigger rewards.
Because you know, we would ratchet up the money on the money side, but the box is still always this random kind of box.
And maybe we give them a bigger box, or a golden box, but even still, it was way more difficult to actually ratchet up the rewards to meet, you know, the expected reward for more difficult missions, which you would expect as you kind of progress through a system.
So, you know, we had experience points, you know, the bars filling up were nice.
We really wanted, you know, the utility side of things was all good.
We really wanted to make it more punchy and more visceral.
And so, you know, all of the stars that we have, you know, they slam into place.
The whole screen kind of moves around.
I think we even have dust that comes off the stars.
We really put a bit of time into it.
It was able to simplify the experience point system as well to just one, two, and three stars.
And the mission system becomes this crazy surprise mega feature.
Like, honestly, when we started working on it, we were expecting it just to be this thing.
You know, again, one week on the side.
We ended up pouring, I think we spent three months on it.
It took us about a month and a half to get the system right.
And it spent a month and a half of purely just tweaking the order of the missions, the difficulty of the missions, the variety, coming up with new ones, cutting the ones that weren't very good.
And now, like, the game is getting crazy addictive, right?
Because we've got so many layers of goals.
You've got, like, the kind of social goals of trying to beat your friends.
We've got that whole thing going on, like Fruit Ninja.
You've kind of got this status thing of leveling up.
You know, what level are you?
I'm level 463 kind of thing.
So you've got that side of things.
You've got these personal goals of unlocking the stuff that you like the look of in the shop.
you've got this progressive system, you're working your way through towards an end goal you know, the game has got so many layers of feedback and reward for the player that I really think that's what grabs people in and keeps them in no matter where you are, you're always like, you know, a couple of steps away from the next awesome thing that's going to happen to you So we did the mission system and that seemed awesome.
At this point we're like, okay, what about our really hardcore players?
These guys are going to play it, finish it, what are we going to give to them?
So again, you know, we got a bit of inspiration from our Call of Duty.
You know, thought we'd come up with a prestiging system.
But instead of being just ten medals, we would make these medals and they'd be made out of three components.
They would have five borders, five different fills and five different icons.
That gives us a hundred and twenty-five different badges we can give them instead.
honest to God, when we were working on it, we were expecting only the hardest of the hardcore would get a couple of badges, you know, a couple of badges at most.
We put these ID tags on them and gave them all these unique games because we thought it would give the community this kind of fun game where they would all try and come together and they'd say, like, oh, I got badge 63 and I got badge 67, and a large number of people would come together to build the definitive list.
So imagine my surprise.
when this gets emailed to me after only 20 days of the game being out.
all 125 medals unlocked by a single person averaging 8 hours of play everyday, 7 days a week uh... what do we got there?
I can't see the time that was on there. This is a guy off the Touch Arcade forum it's called Microbite and we were just blown away and the crazy thing is is I mean you know obviously this guy is the extreme case but even casual plays like even my partner who is definitely not a gamer comes up to me and is like yeah I got my third medal. I'm like holy shit three medals, like we were expecting that would be our hardcore players.
The level of engagement in Jetpack is just off the chains, like you know, we did a lot, you know, that was our goal for sure, but there's no way we could have anticipated how high the level of engagement was. Certainly it's got a small audience, I've added a little question mark there because I wrote all this pre the game going free.
But you know, our engagement is just out of control for this game.
So, I've got a couple of quick things I'll go over pretty quickly.
Getting this game out the door was terrible.
Terrible, horrible experience.
really, really wanted to make this game work at 60 frames per second on everything.
And like this iPhone made out of clay is probably about as fast as like the original 2G iPhone.
On top of that, we really wanted it to look good on retina display screens as well as iPad 2 and all of that, which is obviously a major challenge.
But then as if that wasn't enough, we're trying to keep it under 20 megs.
You know, we're really trying to have it all and that was an obvious source of problems for us.
Came up with this kind of neat solution where, I hope that shows up alright, you know, we really wanted to make it really sparkle and look good on the iPad but there's no way we could, you know, jam in these sprites that would take up four times more room to accommodate for Retina and iPad.
So one of the guys at Halfrick actually wrote this kind of custom, it's almost like a HQ2X scaler.
And so what happens is if you have a retina phone and you boot up Jetpack for the first time, he goes, I see that you have a retina phone and it takes a little bit longer to load, it actually goes through and converts a big list of sprites into these, you know, expanded sprites that aren't nearest neighbor, aren't bilinear because, you know, nearest neighbor makes it look pixely, which is fine, it's part of the style.
and bilinear makes it look blurry, but this way we kind of get, it looks nice and chunky and smooth and still kind of pixel-y.
So that was a really big breakthrough for us, because it could look great on everything, but also, you know, it could, it would still fit into 20 megs, because we only had to have these low sprites in there.
We were extremely fortunate that our artist, Sierra, had been, you know, he's a pixel ninja kind of guy and even though there was absolutely no, at the time, technical reason he had to, he kept all the sprites, like either eight or sixteen colors, just because he wanted to, just because he felt like, you know, that was the way this game should look.
And thank God he did because it meant this, uh, this scaler actually worked really, really well.
The other thing we had to do was, uh, then we had stuff for the interface that we'd made at iPad and Retina resolution, and because that was so big, it would run really, really slowly on the really slow devices, so then we used the scaler in the opposite direction to make lower resolution versions of that stuff so it still runs smoothly.
So also, yeah, we changed the name.
We did this at the 11th hour, like, it was the last thing we changed about the game.
And it's not something we took lightly. It was a massive source of stress for both myself and Phil Larson, our marketing manager.
We spent days just being like, oh my god, have we just made the biggest mistake?
Have we just undone all of our long lead marketing?
One of the big things that, you know, made us decide we changed it, it became obvious to us, you know, this game was, you know, getting a bit more casual than the name suggested.
But also when we were doing the icon.
our artist sort of mocked up the icon into the app store so we could see what it would look like, you know, whether it would pop when it was presented in a list.
And you only have so many characters on the app store, so when you look at it in there and it was mocked up, instead of saying machine gun jetpack, it says machine gun dot dot dot. Which sounds like really ominous.
So that was, you know, another reason for the name change.
And...
Then the game finally came out and we had a massive critical reception.
Our marketing guy Phil worked overtime.
We had a lot of stuff happen there.
We had a big chart success.
And a lot of people were really happy that this was the game that followed Fruit Ninja.
Certainly it's maybe not what a lot of people were expecting, a game about machine guns and explosions.
But it definitely was still appealing to largely the same audience.
And even though this had started off as a game we were going to make in four weeks, and we ended up spending 10 months on a one-button casual iPhone game, we really felt like it was worth it, and we still definitely think it was worth the extra 1,200% effort that it took.
And yeah, we couldn't be happier. We were absolutely thrilled with the response we got.
It was definitely very personally satisfying for myself and the guys because we poured a lot of ourselves and a lot of our own personality into the game.
By the end we were all so emotionally invested and wrecked and we were all hating on each other.
It must have been terrible to work with us at that point but we were extremely thrilled with the response.
Since then we've been working on updates.
So again, gadgets update estimated to take two weeks.
This took four months.
So pretty much my rule of thumb now for estimating in a Jetpack Jiraiya is times it by eight or so, and that'll be pretty close.
And yeah, so we just announced this recently.
We're working on more updates.
And yeah, thank you very much for coming.
And thanks.
Thank you.
Thank you.
Thank you.
Thank you so much.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
So we have a bit of time for questions. We've got about 8 minutes or so.
If you could use the microphones and line up at the microphones for the questions.
Also if you're too shy to get up there, which is fair enough, I have my email address up on the screen. Otherwise come and catch me after the show.
I'll be happy to talk shit about jetpacks.
One of the things that I find a little vexing about the game is that I love playing into the high score list against my friends.
However, you guys allow some minor subversion of that high score list with being able to buy the extra bounce, being able to buy a head start, and you can even do this with real world money.
So part of it is that I feel like it undermines my effort to honestly get on that list.
And I'm curious if you get any pushback from the community about that feature.
and whether you had any second thoughts about allowing people to sort of buy their way a little bit of that feature.
Yeah, that's a really good question. So we really tried to be careful about that.
You know, certainly you do gain a minor advantage.
The big thing is when we did all the testing for the game with in-app purchases and all that, we never ever used in-app purchases ourselves when testing the game.
We do everything the hard way.
We earn the coins ourselves.
We kind of made the assumption that no one was going to want to use our in-app purchase.
So the good thing about the head start is you don't actually get any real advantage from that.
Certainly, it makes the first.
few meters easier and safer, but any good player is going to be able to get through there quick, you know, just the same. It's just going to take a little bit more time. We also made it so, yeah, the, you can buy the kind of extra meters, which I think equates to, there's a lot of stuff because it changes with velocity, but can buy you about an extra 300 meters. We made it so you can't repeat it, because obviously then we would expect people to put $10 in and just, you know, buy 100 bombs and just sit there and go boom, boom, boom all the way to victory, so.
You know, we were certainly aware of that.
We really liked the idea of having these expendable items in there, because early on, before we had that, people would play through and they'd unlock the stuff they want, like, oh, I want that head, that body, and that.
And that was it. And then the coins kind of lost all meaning.
So the expendable items kind of let those coins remain having meaning.
So yeah, it was something we were interested in.
We get a bit of a pushback, but you know, we definitely feel like we're in a comfortable area with that.
Two short questions. What did you use to prototype and what inspired the Prophet Bird?
To prototype I just used Flash. I used Flash AS2 because I'm both a terrible programmer and it's the only thing I know.
If I actually had to do things like declare variables and all that I'd go mad.
in in terms of the profit but I mean you know it is definitely inspired by those other bird games that we're doing really well and you know we I don't think they have any hard feelings is just like you know a bit of a good joke and you know it all sort of fit into the crazy Barry steak fries community as well yes so you said the name change came at the 11th hour I'm jetpack joyride I can you share any other names that were uh possible considerations? I'll tell you this name we actually changed the app to this name because we really didn't want it to be machine gun jet pack and the thing we were really worried about was that by making it too drastically different we were gonna undermine all of the uh marketing effort that we'd done. We actually had this name for a while we were gonna call it machine fun jet pack.
And at the time we were like, a shin-fan jetpack, that sounds alright, maybe I could live with that.
And then we got in in the morning, and I walked up to Phil's desk, and as we both said the same thing at the same time, which is like, the fuck were we thinking?
What a terrible, I'm so glad we didn't go out with that name.
Yes?
Yeah, hey Luke, I just wanted to ask you about, like, the pricing that you did, how it was paid to start with and then went to free.
Was that a planned thing?
And also, based on that, is that something you guys are going to use again going forward?
I'm so glad someone asked that question.
I didn't want to disappoint you.
So the funny thing is, is we'd never designed this game.
Well, I mean, originally, you know, when it was a four-week game, we were thinking we would release it for free.
But it became obvious to us once we spent a lot of time on it that it wasn't going to be a free game anymore.
We set it to free right before Christmas just because we thought it'd be a cool promotion to do.
It was sort of starting to fall down and we thought it'd get a bit of extra attention.
We have not, since we set the game to free, changed any of the pricing in the game.
We did nothing to make this a freemium game, but what this blue line is, is represents revenue.
And see if you can guess where it went free.
Yeah, and so we set it to free and we left it over Christmas, then we got in and we were like, okay, we'll set it back to paid in a couple of days.
And I'm like, geez, this is pretty cool though, it's working out really good.
And you know, we're excited because more people are playing our game.
And you know, if people are playing the game, then I'm happy.
So like, ah, maybe we'll leave it for a few extra days.
And then, you know, we left it a few extra days.
Maybe we'll leave it for another week.
Maybe we'll leave it for another week.
I guess now we've made a freemium game.
So I guess you believe in the freemium model then?
Ah, yeah, I definitely think it could work.
And I've been really happy with it because we really took efforts.
We really don't want to gouge our players.
We treat them with respect.
We do all of our testing, as I mentioned before, by not using in-app purchases at all.
We grind it all up manually ourselves, and we set it at a price point that we feel comfortable with doing that.
We make the assumption that no one is gonna use in-app purchases.
The fact that people do, I mean...
You know, that's great for us. I think the model's really good. I think the main thing is, is like, I really don't like people who abuse the model and, you know, use, you know, dirty tricks and, you know, bring it really in their face.
I think it's, you know, when, this really vindicates, I think, the fact that you can treat players with respect and still have the model work for you.
Thanks. Thanks.
Yeah.
Kind of along those same lines, the counterfeiter feature, it's really dramatically changes the economy.
of the whole game, it doubles your value, and it really, or halves the value of the coins in the game.
Any comments on that?
And then my other question is the name Halfbrick, just could you talk about the name and the logo too?
Sure thing, well the name Halfbrick, We get asked that question a lot. Honestly, like, there was all these crazy names floating around when the guys were coming up with it.
I think there may have been drinking involved.
And then the next day, the name was just kind of the name that stuck out the most, was the most memorable.
In terms of the counterfeit machine, so, you know, when we started mucking around with in-app purchases, there's still very much this big stigma about in-app purchases.
And I certainly didn't want to spend any money on in-app purchase.
The counterfeit machine was kind of like, for me, it was like, this is something I might actually think about buying.
Like, you know, this is worth 99 cents.
To me, this costs less than, like, one-third the price of a coffee.
The fact that it stays there and is there forever, that's something that actually appeals to me.
So I thought, you know, if it appealed to me, maybe it would appeal to other people as well.
And again, we put it in there.
And because all the shop stuff is, you know, you can earn it quite easily, and it's really for getting that extra staff, or, you know, really completionist people, we felt comfortable with that.
Thanks, I think we've got time for one more question.
Yeah, my question was actually tied to the counterfeiter.
I don't know if you can give this information, but what's the ratio between all of your users and the people that bought that?
Because it seemed like the most obvious feature to spend money on.
I wouldn't know off the top of my head.
Well, off the top of my head, I would say it would be somewhere around...
3% mark. 3 or 4% mark. Definitely not nearly as many people as you might expect.
Wow. I was expecting higher.
Yeah, but you know, again, it's quite cool. With the in-app purchases, certainly.
We have tons and tons of people that play it for free and never spend a dime.
But that's fine because they're enjoying the game and we're happy with that.
You know, I'm definitely a believer that even if you put out a free game and you don't make a dime off it, don't make a cent, there's still value there. The people who are playing your game, now they know about you.
If it's a good game, they know you make good games and that's extremely valuable.
So yeah, that's pretty much it. So thanks very much everyone. Again, uh...
Feel free to email me if you have any other questions. Come grab me after the talk.
And yeah, thanks again.
