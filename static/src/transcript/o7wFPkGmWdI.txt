I work for Arkin Studios in France and today we're going to talk about change and adaptation from a VFX artist perspective and we'll see how working for a different company makes your personal practice evolve.
So this morning with Ryan and Mike, we were talking about the outside of VFX.
And we'll keep on talking about art here.
We're back to basics.
So we'll just focus on particles and their fundamental behaviors.
And this is where the title is coming from, because everything will be just plain and elementary.
But this time, as opposed to this morning, it's going to be a bit more focused on the relationship with gameplay.
So it's...
It's a bit more hands-on.
So here's how we're going to spend our time.
The first half, we'll be going back and forth between two games I've been working on.
And we'll compare how the VFX were made on each of them.
So first of all, we're going to introduce those games.
Then we look at some similarities between them.
And then, of course, we'll look at some differences.
And during the second half, we'll dig deeper into Dishonored 2.
And as a quick intro, we'll define what makes the style of the effects on Dishonored 2.
And then we'll look at gameplay.
And we'll see how the gameplay and the features influence the way we create our VFX.
So as a super quick intro, I'll just tell you how I got into real-time VFX, because this is the closing theme for today.
So yeah, I thought this would be a nice place to start.
So back in France, I'm French.
I was studying arts and graphic design from the age of 15.
Then that got me to move to the UK to study new media.
And because at that time I knew people who were working in games, then that got me to work on the compositing of the pitching trailer in After Effects.
And then eventually that got me to proper game development.
So this is a career path and move that I really wasn't expecting.
It just happened, but I'm really happy it happened.
And now I've been working in games for ten years.
The first five years I spent at Ninja 3, which is in the UK, and at the end of the five years I got to a senior position, everything really felt nice and easy and comfortable, I was in control, and then I moved back to France, my home country, and started working for Arkin Studios.
And suddenly I was really out of my comfort zone.
Everything was new. It was a new company, new people, a different type of game, new technologies, so just overall new challenges. And that's when I realized I had to change my habits. Before we get to that, I'll present to you the two games that framed this transition.
So the last one I worked on at Ninja Theory was Devil May Cry 5. So it's a third-person game.
Although this one was a reboot that was made in the UK, it comes from a Japanese license.
Because I'm short of a better word, I'd say that the gameplay is pretty dense.
And what I mean by that is that there's a lot of information to communicate in a very short amount of time.
So, as you can see, the game is pretty fast-paced.
Combo chaining is really encouraged.
You have several weapons, you have many moves per weapons.
You have different enemy states, some of those enemies are immune to certain weapons.
So all of that, and even more actually, needs to be understandable throughout the game.
And finally, the gameplay demands the player to be very reactive.
So everything is all about control skills and really knowing your moves and knowing your timing.
Now, what does all that mean for a VFX artist?
Well, first of all, because it's sort of a fantasy, it's not a realistic world, we were able to make very stylized effects, so it was a really, really fun playground as an effect artist.
But then, within that creative freedom, because we had so much to communicate, we had to establish a visual language using shapes and colors.
And then finally, every move had to read as a signature and be really clearly identified.
So now let's talk about Dishonored 2, which is the first game I worked on at Arkane Studios.
So it's a first-person game.
And already you can see there's a contrast in pace.
It is an immersive simulation.
That's a sort of genre where it's all about saying yes to the player.
You want them to be in control of their adventure so that in a given situation they'll be able to use a different approach.
So your duty as a developer is to embrace the player's creativity and make sure that you don't break the illusion and that you don't remind them that they are playing a game.
So a lot of energy is spent in every department to make sure that this world really feels like it exists, like it is tangible. There's a great emphasis on depth and on consistency.
And then finally, the game is giving you a toolbox and encouraging you to experiment and find some creative ways to combine everything it has to offer.
So what does all this mean for VFX artists?
Well, first of all.
RFX needs to feel believable.
It's not necessarily photorealistic or anything, but it has to feel right, and it has to feel like it belongs to that world.
Then we can't really afford to be really minimalistic.
We need layers of details to echo the detailed world that is surrounding RFX.
Finally, we need to cover every possible case, because you never know what the player is going to do.
So everything has to work in any given condition.
To give you an example, if you take a mouse, usually that's something that you just plant and it stays there.
But then if the player decides to plant it on something that they can carry around, such as a chopped head or a limb, then you need to make sure that your effects are going to work also when they're in movement.
So my transition happened between these two games, and they are pretty different in many respects.
But it's OK, because I come from an applied arts background.
So really early on, I was told to analyze and deduce, and then create something, whilst always strongly keeping the brief in mind.
And basically, that's exactly what we do when CreateFX.
So you think that should be a lesson learned, but when I started working for Arkane, all those sudden changes made me realize that I was working out of habits, more than I would have wanted to admit.
And I guess part of the reason is that I knew only one company.
I had only ever worked at Ninja Theory before.
So it was my first company, and it was where I learned everything about games.
So I was lacking critical distance, and I was lacking the means to put my practice into perspective.
And so that change of company just did that, give me a bit of perspective.
So now we're going to compare some examples between the way the effects were done on DMC and on Designer 2.
So first of all we'll look at some old tricks I still cherish to that day, and then some other areas where you have to do things a bit differently.
So even though the title on the slide here says comparison, I really want to stress out how there's no judgment value.
It's not about comparing the games and trying to define if one is better than the other.
They're just different.
And they're also made on a different console generation.
What we are comparing here is how you create VFX in one context or another.
And again, there's not a method that is better than the other because it's all about having the right method for the type of game you're working on.
So first of all, we're going to talk about textures.
We all have our favorite go-to textures that we like to use all over the place.
And so all these that you're seeing now are textures that belong to Dishonored 2, but they mimic behaviors that were used on DMC.
And the reason for that is that I joined quite early on the development of DMC, of Dishonored 2.
And at that time, there wasn't a full library of texture being built. So what happened is that as I started working through my first tasks, naturally I was reminded of other effects I had been working on before.
So I created some textures with a direct influence of other methods I had been using previously on DMC.
So now we're going to have a look at two of them in more details.
This first one, so that's the setup, how it is in a Designer 2, is just three textures rotating at different speeds and multiplied together to get a sort of a shimmery feel.
And even though in that case it was made with three textures, you could just use the single one and multiply it with itself as long as the rotating speeds are different, then it's going to work just fine.
And so this is the way that it was used on DMC.
And by the way, throughout the talk, I'm going to be mostly showing some effects that I've been working on, because they're the ones I know the best, but every now and again, we'll also see some effects from other people.
So if you compare that, to how it's been used on Dishonored 2 is quite interesting because the original material is extremely, extremely close and similar, but the use of it is different because, you know, the games all demand something different.
The material really stands out on DMC.
It's big and flashy, and you can really quickly identify it.
Whereas in the Zoner 2, it's harder to tell that element apart from the rest.
Everything participates to the explosion, and that one just flows with the rest.
So the different contexts just means that you need to adapt your method a bit.
Now our second example is just a simple lye streak, a very convenient and versatile kind of texture.
And again let's have a look at how it was used on TMC.
And it's the same thing here.
If we compare the use of that texture in the two games, it stands out a lot more on DMC, because it's telling something to the player.
It's telling the player to run away, otherwise they're going to get really badly hit in a second.
Whereas.
In the explosion from Descendants, those streaks themselves, they don't have something really particular, really special to say. They have a purpose, and that's to give rhythm and emphasis to the overall effect. But it's all about participating to the main event.
So let's keep on talking about textures, and more specifically, let's talk about shape variations on sparks.
Now, this is the kind of texture that is often used for sparks.
And it's OK, but I think you can do better than this.
So let's have a look at some resources from Designer 2.
So what you can do is bake a whole cluster of sparks into one texture.
You can make variations even on simple static shapes.
Even though those parts are going to be quite small on screen, it does make a difference.
Then, of course, you can use animated materials.
And finally, you have flipbooks as well.
They're not just there for animations.
You can use them for texture variations as well.
Although, OK, this one is a bit of an overkill.
I think four of these map variations could have probably been enough.
So yeah, I'll just optimize that for the next game, basically.
So in both games you see how the sparks are just more detailed than a simple round soft gradient.
And by the way, if you look at the example from Dishonored 2, this one is using three of the textures that we were looking at just before.
And in both cases, there's also the fact that the textures that are, the spots that are oriented towards the velocity, their textures have a leading edge, they're not symmetrical, so that really enhances the motion and gives a better sense of direction.
And that's something that a round centered texture can't convey quite as well.
Now, before we move on to differences, we're going to have a look at a way to use the initial color.
So this is what you get when you apply the same base color to every one of your sprites.
So in our proprietary engine, the void engine, we have two initial controls for our color.
We have a base color, and that's multiplied by initial color.
But that's kind of a detail.
you could apply that same tint to everything by either using your texture color or just specifying the same initial color on every of your sprites.
So anyway, to get a bit more variety than this, what you can do is use a range on initial color so that every sprite gets tinted slightly differently.
And I really love using a range on initial color because it's a very simple way of just bringing a little bit more life to your effect.
And it's also making the most of our tools because if you're not tied to a texture color, then let's exploit it.
However, that's a very, very sensitive value, so you have to be cautious with it, because this is the result that you get if you use the full 0 to 1 range.
And sometimes it might be what you're after, but most of the times, it's not the case.
So anyway, you just use your restricted range.
And then on top of that, you can also add your usual color of the life curves.
And that exact setup with those values is one of the elements that are used in the grenade explosion in Dishonored 2.
So that being said, sometimes you can use really, really pronounced colors, but you have to organize them around a common tint.
Because you see, if you pose on single frames...
you see how sometimes you get really contrasted colors, but it's controlled.
The way it was done in that case is that there are several emitters, and some of them are balanced towards green, and some of them are balanced towards purple.
And so that none of them can go through the full color range, as we've seen before.
And therefore, the overall perception of the effect remains blue.
And.
If you have too little elements or your effects don't last very long, and you can't really use that range on the initial color, what you can do is, if you have several emitters, just use a slightly different tint on all of them and you'll get the same result.
Just make sure that not everything is exactly the same color.
Now, because gameplay dictates a lot of what you do, there's obviously a lot of differences as well.
So our first example is going to be a bit of a case study.
And I'm going to show you the first effect I ever showed to my art director.
And that's a sort of flashbang effect.
And at that time, I was still new at Arkane Studios, and I was still working under the influence of DMC.
So because it's so old, I can't show you that exact version that he reviewed.
So what I've done instead is I recreated what I imagine I may have done at that time, or what I would have done while working on DMC and if I had been given the same brief.
So.
Obviously it's a very biased exercise but I've tried to do it as honestly as I could.
So his feedback on that or something along that idea is that the effects were too smooth and too neat.
That the weapon that was shooting that is handcrafted by a gang of thugs.
And he wanted that to be visible in the effect.
So overall, it needed to be more noisy and to give a sense that the weapon was almost barely functioning.
And I really remember that moment because it was the trigger for my understanding of the arcane touch.
So this is the version that made it in the final game.
And both versions are using exactly the same elements.
So the difference between them is solely on the way the particles behave.
And if we compare them into a bit more details, well, first of all, the effects in Dishonored 2, they're more realistic.
So we use dust and smoke and debris and so on.
You can see that I didn't put any smoke in the sort of DMC-like version.
So we did use some dusty elements back then in the game, but usually they were very secondary in order to not interfere with legibility.
Let me just go back, because they're supposed to be in sync, and then you can compare them a bit better.
So then there's the textures.
On DMC, because it's more of a fantasy register, we can use more fictional elements.
And we are using some of those on Designer 2, because they give a good impact, but they're not the star of the show.
And they're a lot more prominent on DMC.
Then the timing, that's a single flash on the DMC-like version, but on Dishonored, the elements, they appear one after the other.
It's not as neat in design, and the effects have more of a...
It's got more of a life of its own.
And finally, the timing is more stylized in DMC.
The elements, they can pop and flash, whilst in the designed version, everything is going to last a bit longer because the smoke just needs time to dissipate.
This is the way it is.
Now.
In retrospect, if I look back at the version that made it through the final game, I think I could have taken it one step further in the sort of noisy and messy aspect, because there are a lot of elements in there, and there's probably more than you actually get to see, because some of them, they just get lost in the mix.
So a better timing balance would have showcased them a bit better.
Now the first thing I wanted to build when I worked on that effect was a sort of core of the bright flash and this is what I had in mind. This is the heat impact from DMC. So I thought all I need to do is create my texture, offset it from the center, duplicate it and rotate it and you know job done.
But this is something I can't do actually in Dishonored 2, because in our game, the players have the ability to slow down or stop the time.
And the thing is, if you freeze an effect that is camera-facing and you start moving around it, suddenly you can see how flat it is.
And it looks quite cheap.
So if you don't go this way, but you distribute your layers in proper 3D space, then.
it feels again that the, it feels like the effect is belonging to that world and it stops breaking the illusion. And this is the method that had to be used to build the core flash of that effect.
Now we're going to talk about camera view. So we've seen that one game is a first person game and the other one is a third person game. And yeah, what does that imply for VFX?
In this example, you are seeing two features that appear in both games, and that's shooting and slashing.
So, first of all, we'll have a quick look at the muzzle flash.
To give you a bit of context, what you're seeing here is one of the different elements that make up the muzzle flash in Dishonored, but it's been massively exaggerated just for the...
for the purpose of making a point here.
So the longest of those lines are 16 meters long.
And if you don't know about metric system, then I can guarantee that's pretty massive.
What you're seeing on screen, the tiny black smudge on the left-hand side, is the arms of the player.
And you can see the scale relationship to the longest of those parts.
But you have no idea about that from the first-person angle.
So.
everything that is almost in line with a camera gets really drastically reduced by the perspective shortcut.
And this is something that is of use for those of you who work on FPSs, but you know, not everyone does.
And personally, when I started working for Arkane, I was quite disconcerted by that camera angle.
I just had to change a few things.
So it's the same for muzzle flashes or trails or anything that is aiming down to the center of the screen.
You have to find ways to make them visible despite that camera angle.
And in the meantime, in a third-person game, it's pretty straightforward to just make the muzzle flash look readable.
And these effects on DMC, the muzzle flash and the trails, were done by my colleague at that time, Omar Parada.
Now, the second thing that we are seeing in both games here is the use of the sword.
So on DMC, that was a major feature for two reasons.
First of all, well, it's really important to gameplay because it's scenario of effect.
So the visual representation has to be super accurate to the gameplay data.
Otherwise, the game is going to feel unfair.
And.
And then because it's a third-person game, it's got all that room to unfold.
It's a very good excuse for a bit of a visual extravagance.
So that feature back then has represented a lot of work for many teams, for the engine team, for the animation team, for the design team, and for the art team.
And whilst it is that really, really crucial feature on DMC, in Dishonored, it's more of a visual enhancement.
It's less meaningful, and it's less significant.
And the reason for that is, well, first of all, visually it just wouldn't work.
In that world, that kind of trails, the trails from DMC would feel really out of place.
And then because of the camera angle, you just couldn't cover the screen with long lasting trails because you wouldn't be seeing what you're doing in the game.
So anyway, we still have a trail.
It's a game after all, but it's a lot more subtle.
And now for our last difference between the two games, let's talk about animation smoothness.
And what I mean by that is how smoothly you make things flow between the different states of your effects.
Here, you're seeing an attack being charged.
So if you release at the perfect time, you're going to unleash a more powerful and more visually rewarding attack.
And you have to release the button after just three frames.
So the tell to the player had to be really obvious.
Originally, I was animating that glow in size and opacity.
But really quickly, we realized with our designer that it had to be instant to allow the player to react in time.
Now, that's exactly the same principle and timing, but on a different move.
And those two cases are really extreme.
But generally speaking, on DMC, we were able to just swap one effect to another.
And you wouldn't see it popping as long as it looked kind of similar, because your eyes and your brain just fills in the gap.
But again, this is something that we cannot do on Dishonored 2, because as I mentioned before, the players have that ability to slow down the time.
So everything has to flow really seamlessly between the different states of our effects.
And this one was done by my lead, Thibaut Guichard.
So...
Looking at the way the effects were done on these two games, it tells us something that we know already, but that gets proven once more.
And it is that nothing is arbitrary in a game, or at least nothing should be.
Because the particular game that we're working on is going to decide.
dictate what we do. We are here to serve its purpose. So that doesn't mean that all your previous experience gets lost because every time you start working on a new project.
As an individual, you do come with your personal luggage and your influences, and you bring your own perspective to the table.
But every time, you just need to adapt it just a bit.
And it's actually a really interesting challenge, because it's all about trying to make the most of what you already know, whilst respecting the current game you're working on.
So now it's time to focus on design two.
And...
as an intro, will quickly define what makes the VFX style in Dishonored.
So these are a few weapons that have been created for Dishonored 2.
And they've been designed with a lot of love and care.
And the reason why I'm showing you those right now is that in this talk, I'm mostly describing the sort of real part of the effects, the effects related to weapons and gadgets.
because we also have magic and powers, but this is more about control.
And the effects for the weapons, they have to feel a bit shaky and noisy and accidental, because if they are too neat, then it's going to feel a bit artificial.
It's going to feel out of place in that world of many details.
So the noise that we bring to them helps them feel like they exist.
And as I mentioned before, it's especially the case on the ones used by the thugs faction, because they're made with bits and pieces.
So the idea is that we have to make things feel accidental and sort of random.
And that has to do with the way we use our properties.
So to try and illustrate this, I recreated what I see as a sort of a generic gamey spark explosion.
And there's nothing wrong as such, but there is a lot of room to sort of spice it up.
So right now, you're seeing eight different loops of the same effect, but you can't really tell it.
I mean, they all look extremely similar.
And this is more what a spark explosion would feel like in Descender 2.
Every time it feels different.
You can really tell that it's been recalculated every time.
And in between the two versions, that's all the properties that have been modified.
So you don't have to read it all.
The idea is just to give you an idea of how every little thing and detail can be pushed a little bit further.
And in the end, both versions, they are going to fulfill exactly the same function.
It's a bunch of sparks shooting radially and covering a certain gameplay area.
But this one feels more alive and more unpredictable.
And that's exactly what we need in the world of Dishonored.
So now we're going to talk a bit about the relationship between gameplay and VFX.
Now, even though the art direction is extremely important, of course, it's not the only factor that is responsible for the visual of the effects.
The gameplay is also a very good contestant, because not only does it influence the look of our effects, I mean, it defines, you know, the size of it and how long it lasts and so on, but sometimes it can also influence the way we create them.
So first of all, we're going to have a look at a particular grenade, because this one is non-lethal.
It just causes a physics impact.
And even though our effects are quite detailed in the end, we have to start simple.
And everything I'm going to talk about now sort of crosses over what Mike Linden was talking about this morning.
It's all about working simple from the beginning so you can iterate a bit better.
Because, yeah, making games is an iterative process.
So every feature is prone to evolve, maybe get cut.
So you can't make an effect look final on day one, because the chances are you're going to have to do it all over again.
Now, that level of simplification, you don't necessarily use it very often.
But it can be useful for very early feature debugging.
It can be useful for your designer so they get the feel of the metrics and of the timing and it can be useful for your gameplay coder because then they can make sure that everything is triggered properly.
But then it's time to start on your research phase, because from that raw gameplay data, which is just a radius, then there's a world of possibilities.
It's up to you to decide what sort of intent you want to put into it.
So you get to decide how you want to break it up.
And at that stage, you just keep your element to the minimum in order to just define your intention and just get a feel for it.
And.
You know how Mike this morning was saying that he likes to draw that and not get... how to say...
not spend too much time with the tools.
Well, I don't really draw.
I've never learned about drawing animation.
So this is my equivalent of his way of doing things.
And to not spend too much time on the tools and on the engine, well, the idea is just to keep everything to the minimum.
And it's a different method, but it's achieving the sort of same goal.
Anyway, when you're happy with the global field, your intention and your motion, that's when you're going to start to add a bit more details.
And this is kind of an obvious process, but I think that obvious reminders don't hurt sometimes.
I know that I have a tendency to really get carried away quite quickly.
So when I work, I need to be aware, constantly aware of what I'm doing, so I can refrain myself before I move on too quickly.
Now we're going to talk about the muscle flash.
So this is the muzzle flash on Designer 2, and this one is very much defined by the art direction and by the narrative background.
It looks very sparkly because Designer 2 is not set in modern times.
So what we've used as references is muskets.
and on those two still frames you can see the amount of smoke and sparks being produced when you're shooting. Also the muzzle flash is like a really thin straight line coming out of the barrel.
And this is something where actually I couldn't really stick to the reference because we've talked about it before, if it's too thin because it's aiming to the center of the screen then there's nothing to see.
So in that case the sparks are much, much wider than the barrel.
And also, where we couldn't quite follow the reference is that the smoke had to vanish more quickly and be a lot more transparent.
Because again, it would just cover the whole screen, and you don't really see your gameplay through it.
But then we've tried to stick to the reference as far as flying residues are concerned.
So it makes it look very messy.
And also, we used a lot of different sparks texture.
So the overall muzzle flash doesn't feel too regular.
So you see everything sort of comes around.
So.
Okay, it's all very well, but you may be wondering what I'm talking about.
We're going to get to gameplay, but I just thought it would be just an opportunity to talk about and describe the image of Flash a little bit.
So anyway, gameplay-wise, this is what is happening.
You are shooting straight and aiming to the center of the screen.
But you are holding your gun on the left-hand side.
And even though the effects are attached to the gun, then you can't really keep the gun's alignment because it would look like you're aiming to the side of the screen.
So we have to change the values and shift them down and left so they are going to appear like they are centered.
And since we're cheating, we cannot just use the gameplay metrics and be accurate, like you could do on an explosion radius, for instance.
So what was done in that case is everything was adjusted manually using an overlay of the damage debug volume and just checking for the accuracy to the effect and making sure it matched the gameplay data.
Now, because I'm talking about debug, I just really want to put a quick word about the importance of console commands.
We have a lot of them in the Void Engine.
And at any time, I can find out exactly what is going on behind the scene.
So to give you a few examples, I can find the name of every of my particle system.
and of the container regardless of the way it was triggered.
I know how many instances there are of each of them, how they are being oriented, how much they cost.
If a collision occurs, I know the name of the instigator and the name of the surface.
If I'm working on character effects, I can make sure the AI stops reacting so I can check all my attachments and I can make sure that everything is properly triggered.
So basically, if I encounter an issue, I've got the tools to really strip down the scenario and get to the bottom of it and just fix it, basically.
But I think this is not necessarily the game for everyone in every studio and on every engine.
And it's a bit of a difficult topic because it's all a matter of.
resources if you don't have those.
But I think if you really have some needs, maybe you can try to get your coders to understand how that help is really crucial for you.
And if you can't really tug at the hard screens, maybe you can just try being them sometimes.
Beer or cake makes the job.
It's worth a try.
Now we're going to finish this talk with the in-game slow-mo ability that I've touched upon before.
The players have the ability to slow down or stop the time in Dishonored 2.
And it's a specificity in our game that is a big deal on a number of levels and have several implications on the way we create our effects.
So you see what's happening here.
I'm stopping the time, then shooting.
at the guard and just moving a bit so I see what I'm doing and then bringing back the time and that's when he actually gets shot.
So this is a sort of a mine called the Spring Razor and that is going to chop your enemy into bits.
And this one was made by Thibaut Guichard.
And if I look at it at normal speed, I can't really make much sense of what's going on.
It could be, you know, the effects could be made based of blinking rings with a barbed wire texture, and that would probably work.
But if you start to use that slow mobility, then you really get to see everything unfolding.
You get to see how the base undulates and how everything grows.
So at that point, you don't want to see things popping out.
And it would be looking very cheap if it was all choppy.
So it has to be really smooth.
Now, yeah, I'm afraid a lot of guards were injured for the shooting of this presentation.
Well, that's their job.
So the upgrade for that power is that you can freeze the time.
And that means that the effects need to look good when you start moving around them.
Because remember, if you pause the game on a camera-facing effect, then everything looks terribly flat.
So there are different ways to organize your sprites in 3D.
Usually, velocity is being used.
But I'll just take the opportunity to show you one way that we can do it in the Void engine.
So I can specify some set of vectors according to which my sprites are going to orient.
And it's not just some default x, y, z axis.
I can really tailor exactly what angle I want.
So if I specify one set of vector, then the second is the camera.
And the sprite is going to automatically rotate to try and face the camera as much as possible.
If I set two sets of vector, then it knows exactly where to point, and it remains static in space.
And so if I use that method.
And just use a range of minus one to one on every sprite, then I get a star shape in 3D.
It's all very well, but there's potentially a problem with that, because if you're really unlucky, and that can happen, everything could look sideways, and then there's nothing to see.
So to address that, there's a compromise to be made.
And to be on the safe side, we double up our emitters.
So the white ones here are the ones which are static in space.
and what is building your effect.
But then you just add the red ones, which are camera facing, and you keep the lowest spawn rate possible on this one because they're just there to make sure that there's always something to see, whichever angle you're looking at it from.
So.
You're going to see them face and rotate a bit, but at least you make sure you always have something to see.
Now, the best way of things to not look flat is to not use flat elements.
So for instance, you can use beams and ribbons as other types of elements.
Now let's talk a bit about this ability, which is a really good showcase of those.
What happens is that those two characters, they are connected.
What you do to one will happen to the other.
So you can stun them, or burn them, or vaporize them, or anything.
This is going to propagate to the other character.
And I think this effect works really well.
And I can say so because my colleague, Vincent Rosier, made it.
I think there's something really satisfying about that stringy motion.
The line is going to expand and contract as the characters move around.
I think in that respect it is very successful because it exploits the nature of the feature.
And then it just makes the meaning crystal clear.
You see the connection between those characters, and even though one may die off screen, then you connect them, you understand what's going on.
So another thing that you can use, obviously, is meshes.
Again, this is Vincent Rosier who made this one.
What's happening there is that you are summoning a swarm of rats, and they're going to be able to attack your enemies.
So the concentric circles are going to properly fill out the space, because, you know, the mesh is their existing space, its actual volume.
And they also do a very good job at hiding the way the rats appear out of nowhere.
And even in slow motion or when you pause and freeze the effect, everything works really well and it's all well integrated together.
And then on top of that, you have a lot of small specks of dust remaining at the end and they're really scattered through the space.
So as you move through them, you're going to feel them moving past the camera and it really gives you a sense of space.
Now, the last consequence of altering the time is that we need to add details to our effects.
Because you want the ability to feel rewarding.
So as you slow down the time, you want to see a bit more happening.
So to sum it up, to make our effects work in that slow-mo mode, first of all, we need to add layers of details.
We need to have a very smooth animation between the different states of the effect, and we need to give them volume.
And that can be achieved by using sprites facing the camera but properly distributed through space, or using sprites which are oriented in 3D space.
And finally, of course, you can use elements which are made of actual volumes such as meshes and ribbons.
So we just covered a few examples of how the gameplay can influence the way we make our effects, the way they look, and the way we actually build them.
And what that tells us.
This is going to load eventually, yes.
So what that tells us is that adaptation is not just about changing jobs, because that can happen within a single production.
The specificities of certain features might challenge the way that you used to work sometimes.
And yeah, we're done here.
So now we're going to take a minute to enjoy a really entertaining play through of Dishonored.
And you'll see what I was saying about the ways the players are able to combine everything together.
And this one is going to have audio, because during the rehearsals, our audio guys there were really disappointed that I had muted all the video.
So because they make our effects sound really cool, then yeah, I had to comply.
That sounded like it.
Evolve!
Uh!
Oh!
Hurry!
Oh!
I'm sorry.
This must be Power's place.
The workers stopped digging, and the Duke will see that mine can produce here.
What?
You and I, we'll remember that night.
It's annoying.
Why did you do that?
The mines were a good job still didn't make sure it gave me To stop this, I'm sorry.
It's quite fascinating, isn't it?
Yeah, but I have to pause it because you won't listen to me otherwise.
So anyway, just to recap, so first of all, we've been talking about how I had to adapt by transitioning between combat effects on DMC to weapons effects on Dishonored 2.
And then we've seen some features within Designer 2 and how they sort of shaped and challenged the way that I've had to create my effects.
And this is all very personal and specific to my case.
But I think everyone from there can extrapolate and sort of project their own situation.
Because.
This is what games is about.
It's all about adapting and evolving, because there's always a next something, a next feature, your next game, your next engine release, your next console.
So every time, you can take the opportunity to stop and step back a bit and try to put things into perspective.
so that over time you can build upon your previous knowledge.
You've got that existing base and then you can just dig into it and try and grow to the next level.
So as you keep your practice evolving, then normally every time everything should get a little bit better.
And now, if you fancy a transition yourself, well, Arcane Studios is hiring.
So you've got the email address, and you can check what positions are open at the moment.
I just quickly want to thank everyone here for coming, and thank Ninja Theory for allowing me to show all this material, and everyone I've ever worked on, because it's so important.
It's a team job, and without the rest of the people, you just, you know, you're no one.
So yeah, thanks, everyone.
So now it's going to be time for questions, and I've got to remind you to please fill out the form after you're done.
So are there any questions?
Well?
Oh, yeah.
Near the beginning, there was the first person muzzle flash that was like 16 meters in length.
How did you allow the player to, how did you reconcile that with them being able to see that from the side if they stopped time?
Well, actually, so the question is how.
OK, so it is not actually 16 meters long in the game.
I just made it much bigger just to prove a point there.
But it is quite long.
And especially when you stop the time, you can actually see them in the game.
You can see them and they're probably like, I don't know, three meters long or something.
But that's not really a problem.
Actually, sometimes it's quite satisfying to move through it.
And people really accept that and actually enjoy it.
So you do see how exaggerated it is as you move around it.
Thank you.
Okay, well, looks like we're done. Thank you very much.
