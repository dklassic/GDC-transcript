All right, we're going to get started.
So we've been told to let you know to turn your cell phones off.
We'll make them silent before we get going.
So this talk is about a class that we've both been running where students make a prototype every week of the semester.
But it's really about more than just learning to make prototypes, which is the main theme of this talk.
So first, some quick introductions to who we are.
I'm Douglas Wilson.
I'm a lecturer at RMIT University in Melbourne, Australia, where I teach and research game design.
I also co-own a game studio, Degouta Fabrique, based in Copenhagen, Denmark.
And I'm Bennett Foddy.
I teach at the NYU Game Center, and I make indie games as well, the most recent of which was Getting Over It with Bennett Foddy.
In 2014, I started running a class in our master's program at NYU where students make a digital game every single week of the semester.
And Doug later adapted it for the bachelor's students at RMIT in Australia.
So in this talk, we're going to explain why we did that and how we implemented it and how that turned out.
After my first year teaching at NYU, I was starting to feel concerned that there was like a handful of things that I wanted to teach students, that I wanted them to get from me.
that I couldn't get into a normal style of game production class.
Students who came to us as very strong coders usually have been taught to engineer their code for large-scope projects.
So for small projects, I think that habit tends to lock them into creative ideas too early in the process, and it prevents them from experimenting in the kind of free way that I wanted to see.
But we also get weak coders, weaker coders with skills in other domains who could work very creatively and freely.
except that writing code makes the whole process too slow to make fast iteration feasible.
So because of those two problems, students tend to over-commit to their seed ideas and they spend all of their time building their first idea rather than trying out different ones and seeing which ideas are good.
Because most digital game classes involve students making just one or two projects, they get very invested in them emotionally and I think that makes it very hard to give the kind of robust critique I want to give.
without discouraging them.
You want to be able to get them to recognize and abandon unpromising ideas really early on.
But in fact, what happens normally is you just wind up helping them to make the best of a bad idea.
And that makes it really hard to help the students build a personal sense of good taste over time as well.
And I think finally, if you're at school learning game design, I think making games is homework for you.
And homework generally not as joyful as a real creative practice.
So I felt like I wanted a class that would address some of those challenges structurally.
Doug and I are indie game developers.
And the idea that we could solve these problems by changing the class format comes from the spirit of rapid prototyping and jamming that has been prevalent in the indie games community.
And of course, one of the biggest sources of inspiration for the idea is the Experimental Gameplay Project, where a group of four CMU students, led by Kyle Gabler.
made a game prototype every week, more or less, and posted them online.
And that ran for two semesters in the academic year of 2005.
And it generated a lot of great stuff, including the prototype for World of Goo, but was never formalized into a class.
Sorry, go ahead.
More recently, there have been a few popular articles and talks about Game a Week as a strategy for budding indie game developers.
So, for example, Rami Ismail, who co-owns the Dutch studio of Lambeer, famously wrote about Game A Week in 2014.
You can find that article on Gamasutra.
And actually, Rami's post directly inspired a number of game makers, including Ojiro Fumoto, who went on to make the successful roguelike game Downwell from a Game A Week process.
Also in 2014, Adriel Wallach gave a GDC Europe talk about Game a Week as an indie dev methodology.
This is actually a really useful talk that explains the benefits of the Game a Week method, and I show it to my students in week one of my class.
You can find this online.
Chris DeCaitla has been coordinating the One Game a Month project on the internet, which has by now amassed a really large following, kind of culturally very deeply in indie games.
And I think these sorts of projects show that committing yourself to a regular cadence of projects is a really great way to build up speed and also to try out left field ideas generally and enjoy the process of making video games.
But we had an idea that there could be additional benefits to that practice in the context of a formal class, particularly if we added certain additional pedagogical structures.
So let's look a little bit at how we set it up.
At NYU, the class exists in a two years master's level class, two years master's level course, which is limited to students who have already made at least one game by themselves and demonstrated some basic level of comfort with their tools.
So I don't want it to be a class about learning to use Unity or Game Maker or anything like that.
I want it to be about exploring creative ideas.
It's about six hours of class time per week.
About two hours of that is given up to presentations and feedback, and the rest is just work time.
Students have to submit a playable digital game every week, and their grade is really heavily penalized if they miss more than one week.
So there's a lot of social pressure and a lot of structural pressure to turn something in every week.
And every week's game is produced according to a given prompt or a constraint, like make a game about rainbows, or make a game that uses only one button.
Being forced to dream up new ideas is part of the benefit of the class, so I just want to make sure that they don't just hit up their old notebooks and remake old ideas.
I tell the students that good work in the context of this class should answer a particular unanswered question by testing the value of an original mechanic or an aesthetic design, by solving a design problem with an existing type of game, or by seeing if a game can produce a certain original type of experience.
You can't get a good grade just by making Pac-Man.
The games only need to run.
They don't have to be bug-free.
And it's fine if they only work if you play them sort of generously in a certain way, so long as they form a useful answer of some kind or a useful test.
And I get them to do all their projects alone as a way of ensuring that students broaden their skill set and learn new ways to generate ideas and implement them.
And of course, There's weeks where nothing comes together, and the result is a project which runs, but doesn't really achieve or show anything.
And I make students still, in those cases, formally present that work, partly to resist the idea that anyone's process is failure-free, and partly to share what they learned from that process of failure with each other.
So that's one crucial way that it differs from game a week outside of the class format.
All these structures apply a lot of pressure, which is not there in self-imposed game-a-week structures. So that pressure ensures a very high completion rate, normally close to 100% of all the projects come in, but it's also really stressful. So to try to relax that pressure and encourage freedom of experimentation in these students, I only grade them on the best three prototypes they make over the course of the semester, as selected by me at the end of the semester.
that emphasizes fast failure and creative risk-taking.
Yeah, so the RMIT version of this.
So in 2016, I took a faculty job at RMIT and inspired directly by Bennett, wanted to bring this class format and evolve it for our program.
So for our first offering that year, which I coordinated, the class was taught by our PhD student and local Melbourne Indie, Michael McMaster, who's in the audience.
Hi, Michael.
So I want to note that the syllabus that I'll share at the end of this talk is actually partially built on Michael's syllabus.
This past year, 2017, Michael and I co-taught the class.
So the class is specifically for second-year undergrads in our game design degree.
So note that this class did not actually include any games programming students who are in a different school and a different degree.
Our students at RMIT Games are mostly visual artists and designers.
And in Australia, you tend to apply to a specific program.
So our students have been taking game classes and focusing on game classes from day one.
So at this point in the curriculum, before they take game a week, they've already taken classes in Game Maker, and Unity, and 3D art, prototyping, playtesting, and more.
By the way, this year, coming year, we may actually start bringing in some of the games programming students to join, which would be great, but otherwise Game of Week is not an elective. It's not open to other degrees. This class, Game of Week, is actually one of three different streams the students can ballot into, so only about a third of our students end up taking the class, and they do so explicitly by choice, which is really important, which we'll talk a little bit about later.
It's a 24 credit point class, which means it's about a half their semester workload.
So in essence, Game of Week counts as like two of their four classes for the semester.
And so it's three hours of seminar plus three hours of studio per week.
In the three hour seminar, we play all their game submissions from the previous week, and I do one-on-one feedback meetings.
Me or Michael do one-on-one feedback meetings.
That takes about 90 minutes to get to a class of about 23-ish people.
Then we reveal the new theme for the coming week.
We lecture about relative precedents, like different games or artworks that might relate to the theme.
And finally, give them some time to brainstorm ideas and ask us questions about their ideas.
Later in the week, during the three-hour studio class...
It's just the students working on their games in the lab, asking us questions and getting feedback before they actually have to submit the game.
So in our version of the class, a little unlike Bennett's, students can work alone or in pairs, but nothing bigger than pairs.
And in fact, we encourage them to try out different configurations and partners per project over the course of the semester.
We don't prescribe a preferred technology.
Many of our students use GameMaker or Unity, which they've learned in previous classes.
But sometimes we also see random alternative technologies.
We do want the students to be making digital games primarily in this class, although we do occasionally allow non-digital games if the student can pitch us on a strong idea for one.
So part of the trick here is to get students assembling their own toolkits and building off the work of their previous week's submissions.
Students do need to explore a fundamentally new idea each week, but we explicitly encourage the reuse of scripts and assets and so forth.
This past iteration of the class I had students submit every single week.
mostly because I wanted them to practice scoping and coping even in weeks where they're super busy and learning how to deal with that. However, as I'll actually talk a little bit later, I think this policy was a mistake. I think it was a little too stressful and so this year I'm going to give them one free skip week at their choice like that does. We grade on three explicit criteria.
functionality and style.
So style is there to emphasize that we want the students to find their own creative voice through this semester.
And it's something that Michael and I talk about explicitly in one-on-one feedback meetings.
And like Bennett, we don't grade every single game for the same reasons Bennett mentioned, in order to leave room for half-baked prototypes and failures.
So in the end, we end up grading four of their 11 games at various.
milestones throughout the semester.
What matters most is that they submit something each week to avoid abduction.
So there's some cultural differences, both between bachelors and master students, and also between American and Australian students.
So we don't do everything exactly the same.
At NYU, in general, I'm trying to avoid showing students sample games.
I think MFAs generally come to us very literate in games.
But when I showed them precedent games every week that were relevant to the theme, I felt as though I was seeing those games influencing the work more than I wanted.
And I wanted the MFA students to really head out into open water creatively and to make things outside of established genres, so I stopped doing that.
Yeah, I think really this might actually be the biggest difference between our two classes.
So at RMIT, game a week is a really important place where we can build taste and expose students to lots and lots of games and artwork.
Each week when we lecture about relevant precedents, we'll show a video or have a student play the game on the big screen in front of the class.
So on average, that means we get to talk about like 10 precedent games or work.
each week. So over the course of the semester, that means we get to show them like over a hundred relevant games and artworks, which is just a massive amount to be able to expose the students to, which is really great. In fact, often Michael and I would even pick our weekly prompts based on the kinds of work that we wanted to expose the students to. By the way, you can see all of Michael's and my week-by-week lecture notes at the end of our syllabus, which we'll link to at the end of the talk.
So some other differences.
Bennett has students do brief presentations to the class and also grades their participation, for example, when they're playing each other's games.
At RMIT, I removed presentation and participation components.
In my experience as an American working in Australia, Australian universities tend to emphasize public speaking a little less compared to comparable American programs.
And so unsurprisingly, our students are pretty anxious about public speaking.
So the stress of doing Game of Week is like kind of more than enough in and of itself.
So I wanted to make the class as welcoming as possible.
We do cover public speaking in a number of our other classes, and I wanted Game of Week to be more focused.
Both of us eliminated all readings and written work from the class to save on time.
You really are pressed for time as a student in this class.
And at first I got students to give each other feedback as part of their public presentations in front of the class, but I found that that tended to inhibit them from making personal work or vulnerable work.
And it also resulted in very shallow, useless style of feedback, given the number of games that we had to see.
So now they get and give feedback in person, one on one, and only after actually playing each other's games.
Lastly, we both make a.
theatrical, ritualized presentation of the prompt every week.
The first time I ran this class in 2014, I just told students the creative prompt at the beginning of the class, and I think about a third of them every week would just really phone in their projects.
And I felt as though they had the ability and the interest, but their whole situation was just a bit too casual.
So I started making a big multimedia reveal of the prompt, like this video.
The main thing is that it has to show some effort on my part.
to pressure the students to apply a similar amount of effort in their work.
If you haven't got it yet, the prompt for this week, we'll see in a second, integers.
So after I started doing that, I found the number of phoned-in projects just dropped almost to zero.
Really, really made an enormous effect.
Sometimes I hide the prompt inside of a prototype-sized game.
So this is a small game I made with the prompt hidden at the end of a difficult maze.
And by doing that at least once every year, I hope to kind of indicate the correct scope for a one-week prototype But also to kind of prove to the students that prototyping is enjoyable enough that I'll choose just to do it when I don't have to and Once a semester towards the end of the class when the students are starting to run out of energy I give each student a personalized prompt in a formal invitation letter that's designed to challenge their personal boundaries but also importantly to recognize the artistic identity that they've developed over the course of the class.
So here, the quality of the game that they make out of this prompt isn't the point.
It's to explicitly recognize their individual creative voices.
So like Bennett, we also tried to ritualize the reveal of each prompt at our RMIT class.
So first, we'd show a short teaser video, usually from a film or a TV show or an artwork.
usually something outside of games entirely.
And then we'd have students guess in class what the prompt might be.
So for example, here for the prompt ritual, I showed the famous excruciating candle carrying scene from Tarkovsky's film Nostalgia, if you've ever seen this.
Yes, I make them watch like the whole nine minutes.
And then we'd reveal the prompt in a nice juicy GIF.
For example, here's that GIF for that prompt ritual.
Another example here is the gift for the theme, Weird Input.
By the way, all these gifts lovingly prepared by my co-instructor, Michael McMaster.
At RMIT, we also posted the prompt gifts to the public on social media and encouraged our students to publicly post their work under the same hashtag, hashtag game of week 2017 in this case.
So this ritualization and public performance helps make each week.
seem like something greater and more real than just like a homework assignment for school.
Also, logistically, the hashtag allows students to opt in on their own terms, like whether they do want to make their work public or not, and gives instructors like me a place to point to student work without having to play favorites. So instead of feeling pressure to retweet particular students, I can say, hey, go look at the hashtag that's collected a bunch of students' work.
Another thing that we did to make Game a Week feel more like a community of art practice rather than just another university class was to arrange a public exhibition of the class games at local Melbourne art game space of Bar SK So this was opt-in and we had 10 students express interest so Bar SK co-founder and curator Louis Roots generously reviewed all the students Game a Week output and picked one game from each student.
The games were then exhibited for two weeks in Collingwood, in Melbourne, in two waves of five games each.
Note that we explicitly avoided branding the event poster with RMIT University, because part of the whole goal of Game a Week was for students to find their own artistic voice and start thinking of themselves as game developers like anyone else out in the real world, rather than thinking of themselves as just gamers.
students. So this was a nice move that we were really fortunate to be able to do to kind of take that out of the institution into Melbourne.
One of the nice things about this class structure is the students get so many attempts at coming up with games that they're more likely to come up with at least one really great idea.
And that often comes after a period of sort of dialing in their process and their ideas and their taste and developing their artistic voice.
So we're going to show you a few that originated in our classes, with kind permission of the students.
Jenny Jiao Xia made morning makeup madness as part of a series of funny self-portraits in my class, a game which has now been exhibited at various events around the world.
And I think through the course of the semester, Jenny really found a way.
She really found a unified vision for these self-portrait games to the point where she now has this kind of internationally recognizable style in visual design and in game design.
And I think this game marks the turning point where her artistic voice really became clear in this class.
A.P. Thompson made prototypes for two IGF-nominated games in my class, Stella's Smooch and also this prototype for The Glitched, which went on to win the IGF student prize.
The final version, which Jenny also contributed art to, looks like this.
And I'm just showing this one as an example of how these one-week prototypes can become a platform that the students can use to build a bigger releasable project, either as part of their degree or after they graduate.
The class is also a great place to try out ideas that there might not be room for in the context of a traditional class format.
Nina Freeman made this prototype for Sybil.
a game where the player is given control of Nina's mouse cursor and embodied in her autobiographical experience.
I'm the leader.
That game went on to look like this when it was finished and released, and it won the IGF Nuovo Prize and was nominated for two Choice Awards as well.
What's up?
So our class at RMIT, Matthew Woods, made a mall cop simulator where you watch AI-controlled customers on the various screens to report on shoplifters, if you can catch them.
This game, I think, is a great example of how really technically proficient students can make pretty ambitious, substantial progress in prototypes in just seven days.
Joanna Tran honed her 3D art skills and ended up making a series of narrative, personal vignette games, including these two, Road Trip and Do You Remember?
And over the whole semester, Joanna was working out a framework in which to place her visual art.
And so it was really exciting to see her start to work out her own personal take on vignette games and what that might mean for her.
In fact, partly because of social media and that hashtag, and Joanna tweeting to that hashtag, Some local Melbourne curators picked up on Joanna's work and invited her to talk about her work to an audience of over 200 people at prestigious Australian showcase Freeplay Parallels.
And so Joanna ended up presenting two of her Game a Week prototypes alongside some of Australia's most famous game developers, like literally two weeks after the semester had ended, which is fantastic.
Looking beyond the games that come out of the class, it's also really warmly received by students.
It's always oversubscribed.
The evaluations are consistently really positive.
Here's a couple of pull quotes from the NYU and RMIT student evaluations.
And the vibe in the classroom is really positive.
Students find joy in this kind of ultra small scope work, particularly as they get faster and the technical challenges of making prototypes starts to fade into the background.
It's important to mention as well, this isn't just a format that works for the most ultra talented students.
All the students who take it see it as valuable and enjoyable as a class format, and they think that it improves the quality of their work and gives them a sort of a taste of enjoying making games.
OK, so to wrap up, some recommendations and acknowledgment of some challenges with teaching in this format.
So I'm personally really happy about how Game a Week has been working out, at least at RMIT.
But our students still struggle with semester long projects and their other classes.
So I think it's important to make sure your curriculum deals with that kind of project management production skills, even before a final year capstone project class.
So topping up and pairing Game a Week with also those longer planning skills classes.
So the pace of Game of Week is probably too fast for students who are still teaching themselves Unity or 3D modeling or something for the first time.
So I think it's really important that students who take this class be able to get far enough each week so that you can actually have something to say and critically discuss with them beyond basic like how to use the software questions.
And as I mentioned earlier, a game a week is one of multiple options for us that the second year students can take.
And I would not want to make this kind of class mandatory.
It's important to let students know beforehand how intense this class will be.
And let them take it only if they really feel ready.
The class really is a balancing act between applying the right amount of pressure and incentives, and on the other hand, looking after the students with regard to burnout.
For me, that has meant constantly emphasizing that failures are okay and not punishing people for weaker submissions and expressing that both verbally every week, but also through the structure of the class.
For example, we both give feedback verbally, one-on-one, so there's no implicit shaming involved in public critique.
I alternate between using strict...
highly specified constraints, like make a game with one button, and vague inspirational themes, so there's some creative breathing room on alternate weeks.
And I think it's important to push the students, but you can take it too far.
A game a week can become very stressful, especially at the end of the semester as people's final projects in other classes start to ramp up, and it's really useful to structure in some way for them to opt out if the schedule is really bad.
So, just wrapping up really quickly, and then we'll be done.
So the most important thing we want to emphasize is that Game a Week, as a formal class structure, is more than just learning how to work fast and scope properly.
First, I think Game a Week as a class is also about taste making, whether that's through explicit lectures about precedence for the week's theme, like Michael and I do, or through weekly personal feedback from the instructor.
And I think the sheer volume of games made in Game a Week.
facilitates that kind of a taste evolution.
A huge part of becoming a successful professional artist is learning to take your own work seriously and hold yourself to a professional standard.
And I think one of the nicest things about this class is that it offers students a chance to be recognized as peers by the teacher and by the other students, but I think most importantly in their own eyes.
The class doesn't work as well without a sense of high occasion when the weekly themes are revealed.
So if anybody wants to run a similar class, I would really strongly suggest using a similar ritualization of the theme presentations to give the students that sense of occasion and an extra boost of motivation.
And finally, of course, one of the main reasons to run a class like this is the same as the reason to do it in your own creative practice outside of school, which is...
that by building a very large number of projects, you have a chance to identify and really hone your own creative identity and explore different expressions of that identity.
And that's really about it.
We have one minute left, so probably not enough time for questions.
We do, however, we've linked our syllabi publicly.
Mine's annotated, and my syllabus also includes Michael and I's weekly extensive theme.
notes, so please feel free to take a look at those.
And Bennett and I are both super happy to answer questions, whether that's by email or in person, out in the hall after this talk.
So that's about it.
Yeah, thank you so much.
Thanks very much.
