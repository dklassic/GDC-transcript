Okay.
All right, I guess it's time for me to, wow, that's echo.
All right, big room.
All right, Sartin, welcome to the talk.
This is the last 10 going from good to awesome.
Or SM as we like to say at work if you're a South Park fan My name is Benson Russell And I'm a senior game designer at Naughty Dog and just a little bit of history on me briefly I used to work at EA Los Angeles on the Medal of Honor franchise I worked way back in the day at Ritual Entertainment on a Star Trek game and For those of you who've been in the industry way a long time I was a founder of 2015 where we did the original Medal of Honor Allied Assault for PC I worked on both the Uncharted 2, all Uncharted games, and for Uncharted 2 and 3 I was the primary AI and combat designer.
So just a quick note, don't forget the little email thing that's going to send out, you know, rate me, however, I swear to God I will not buy your boat.
And another thing is the talk, I have tons of information, I'm going to go right up to the last minute.
So I won't have time for questions, but if you want, hit me up outside, wherever, and we'll go from there.
So.
Let us go on with what this talk is actually going to be about.
No, don't do that, you stupid thing.
All right.
I love it when my notes crap up on me.
So quick overview.
The last 10.
You've heard the phrase, last 10% takes 90% of the work.
Also refer to this as polish and at Naughty Dog We believe this is what can take a great game and make it absolutely awesome and to us It's arguably one of the most important aspects of the game development cycle But in our experience it seems to also be one of the most marginalized aspects of the game development cycle But I'm here to give a talk about how the fix can be easier than it might seem It's basically it's going to involve the change in mindset of what you're going to what you need to look for the level detail You want to aspire to and then also a better distribution of your development time and pretty much a good tell the industry for us Is every person we've hired it naughty dog goes through the same process every game when we go into the polish phase the new people Are like you want to fix what you know it's like literally that level of detail They're like you're nuts what we don't fix this before it's like well. We do so hence It's kind of a tell us that maybe more the industry isn't doing this as much as we kind of would hope they would.
Alright, so this also this talk is me about how we approached polish and uncharted 2 uncharted 3. Now this quick disclaimer. The first thing to note is that this is by no means a perfect system. This is what works for us. This is also the system that.
We've been refined. We're continuing to refine overtime. In fact, it's controversial internally, like when I was talking people getting information for this talk or asking them what they you know what they think of it. I got a lot of the that's not right. We hated that. Why did you want to talk about that? That's crazy. That's not what we did for policy with you stupid. So yeah, even internally we have a little bit of strife over it, but the key approach and take away or the key takeaway for this entire talk is that you need to allow time for polish and don't just let it sit in the rest of the mix and I'll go over that a little bit later.
So, what am I defining as polish?
Well, the first thing is it is not about iterating and finding your gameplay mechanics.
You should have that known by this point in the game.
This is about wrapping it up and getting it ready for public consumption.
You want to finalize that product.
And just like you do with a car, when you polish it, it's the act of removing the blemishes and the imperfections.
Anything that can take the user out of the experience and make them no longer immersed.
Some high level examples of what I'm talking about.
My slides work here.
There we go.
Gameplay related issues.
And this can be anything from, say, glitchy controls.
Are they frustrating?
Can the player easily translate what he wants to do into his actions into his avatar?
Could also be wonky world interactions, like bad collisions.
So artists love to make, hey, I'm going to make collision around all this little tiny, wonderful stuff.
And the player comes and walks along with his feet IK, and his feet are dancing in the air.
And then he turns into the physics ball of goo that bounces off into space.
And you want to go smack your artist in the face.
It could also be like difficulty controllers, or sorry, bad difficulty spikes.
And pretty much all those translate to controller into television screen, which is what you really want to avoid.
It could also be visual presentation issues, like a confusing interface.
Are your menu items clear and concise?
Can they find the data they need?
Is the HUD overcrowded?
You know, does it, do they, can the player get the information he needs at any time?
It could also be anything from like bad animation pops or blends or awkward timing, which is exactly what I'm doing right now in this speech.
So.
And the third thing I kind of group into a category. We as game developers think is called status quo.
And the litmus test for this is if you sit there and you go, it's a game, they'll deal with it. No.
If you say that about anything, you probably need to actually put your head down and be like, well, maybe I should actually consider fixing this.
Our approach that we took on Uncharted 2 and Uncharted 3.
Well, the first thing you have to do is you need to set the quality bar really high.
And this is what I mean specifically about a change in mindset.
And I'm going to, I'll go over here in just a little bit with some examples.
You want to shoot for perfection.
Don't settle.
Don't sit there and accept something as the status quo.
Don't, you know, if you see a little bad pop or a blend or something, take the time to fix it.
You know.
As long as you give yourself the time, which is another thing I'm going to go over here.
All the small things that you think, stop doing that, all the small things that you just let slip through, yeah you might be able to have one here and one there in your shipping product.
The more of these small things you have, it just chips away at the overall feel of polish in the game.
Like, even if on a subconscious level, it's just the player is going to realize, kind of feel awkward, like, I'm not really playing a completed game here, so why do I care?
Let's see, and now for some video examples.
And I've got some better ones even later, but these are just, I wanted to at least spread them out so you maintain your interest.
And I'm going to quiz you on it.
So this first example is from Uncharted 3.
It's where we're training the player how to do pull-around stealth kills in the London Underground.
The guy who we want to watch in this video is Cutter.
He's the one on the left.
Take a look at what he does.
Take them out quietly.
All right, we got ninja mode.
Attack, yes, kill, yes, and oh, oh, and go ahead and desecrate his corpse, why don't you?
Yes, just stand on him.
You stupid AI.
That phrase wasn't uttered enough.
So what it should look like when it's actually polished is this.
Ninja mode again.
Hit the button.
And just like they say in tennis and golf, a great follow through.
It's exactly what you want.
And honestly, that was a real simple fix.
It was just a minor line in script that basically was when they were playing the animations on the two guys, as he was going through his swing, the animation on the guy that was supposed to die ragdolled him too soon, so he didn't get any momentum to follow through with the rest of it.
And it was just a small line change in fix made it that much better.
All right.
Game glitches, or camera glitches.
Now this one I might have to play for you twice, because every time I've tested this one people, they don't notice it.
See if you find it.
that you see a pop i will play again watches the camera tilts point there that little glitch fix that It makes your game just feel awkward and unpolished.
In fact, well, I got the video, so I might as well show you what it looks like when it's fixed.
See?
No glitch, much nicer, much smoother.
And again, this was an easy fix in script.
It was basically the camera was playing an animated path, and we have a command in the game that pauses the game, puts the menu up, and says, wait for this button to be pressed for training.
And so then what happens is, even though that command was issued to pause the game, the script would execute one more line of code because of the way the engine works, and thus the camera started moving.
So it was just a matter of putting an extra, like, weight one frame in there to give the script enough time to get that buffer in there, and then it was not a problem.
All right, now this one is a sequence of events, and I'll just let this one play, and I'll go over it afterwards.
Hey, Nate, over here.
I think we can cut through the building.
Here, help me with this.
What are you doing, Elena?
Why are you standing there?
What are you doing?
Get the door, you stupid AI.
In that whole sequence, you can see there was an awkward dialogue moment where she's walking over telling Nate we need to go to the door and Nate goes, yeah, good call, but her dialogue stomps it.
So they're both saying things at the exact same time, which is difficult for the player because now you have to kind of filter out what was going on.
What did she say?
Did I just say a response?
And then she decides to walk over the door and is like, oh, yeah, this, sorry, you want that?
Yeah.
Why?
There was no reason for that.
The polished version of it should look like this.
Hey Nate, over here. I think we can cut through the building.
Alright, good call.
Here, help me lift this.
And she goes right to it.
And there was no stopping of dialogue, everything's wonderful, order is restoring the world, peace in the Middle East. Yay.
So.
That's what I'm talking about with the mindset change.
I mean, some of these might seem really small.
I've got some even smaller ones for you that'll come later on in the presentation.
Evan Wells, our co-president, is the master at breaking things and finding little things to polish.
And oh my God.
We'll go on.
All right, so that's what we're talking about in terms of polish.
Now let's talk about how we do it.
So the first thing is schedule.
Now, It's easy to say. Let's say this is kind of a representation of what a standard development cycle is that most companies you've got pre-production a very long production very short alpha very short beta ratio gold and everyone's happy we hit gold.
The key thing to note though is with a short alpha and a short beta, most people in their studios tend to be like, alpha is almost a gold candidate.
It's like final art, near zero bugs, everything is polished and ready and voila, it's fantastic.
The problem with this approach is people just leave polish into the production cycle because they don't actually schedule for it.
So you're just like, oh you've got this much time to work on your level, make it as awesome as you can before alpha.
But of course in reality what happens is the OH MY GOD!
and everyone's running around with chickens, you know, headless chickens, just get the game done.
You know, get it out the door.
That's what everyone starts falling onto and hence polish falls by the wayside.
So what we do at Naughty Dog is is we change it up a little bit.
We actually use our alpha and our beta time for polish instead.
So we reduce our production time and then we specifically say we're hitting alpha.
In fact, in Uncharted 3 it was four months we gave ourselves.
And in future projects, we want to give ourselves even more time because we felt that wasn't enough.
But let's see, where did I go?
I lost myself on my notes, pardon me for a second.
So for those of you who want to put a number on it, if you want to polish in the alpha and beta phase like we do, allocate at least 20 to 25% of your schedule.
One gotcha in this approach, though, is you kind of want to hit a solid alpha as much as you can.
And internally, this was one of the controversial subjects of like, we hit maybe sort of, kind of an alpha.
Well, maybe it was an A, at the very least.
You know, not quite the alpha.
So...
Now, as a quick side note, the one nice thing about shortening your production schedule is it gives you more time to make an evaluation on difficult things earlier.
So if you have systems or parts of the games that are not quite, look like they're not going to hit their schedule, because you've reduced your production time and you've moved that alpha up, you can say, oh, well maybe we need to cut it, maybe we need to trim it down or eliminate these features, whatever.
But it allows you to self-edit, you know, and go for quality over quantity.
And that's something that we feel is very important.
So back to this whole scheduling thing in order for this to work, you have to not fear change. Most of the studios I've worked at and people I talked to the moment you talk about like get it out for beta. The standard practices do not touch the hell's wrong with you. I'm trying to ship this game. You're going to break it.
It's like well, no, you're not. If you give yourself enough time and you allocate accordingly, you can actually apply your policy in alpha so.
What I'd like to propose is a little bit of a following change in definition when we go through this stuff.
So pre-production is still, you know, you're prototyping R&D, fleshing out your core.
Production is still the grunt work of the game.
When you get to alpha, though, our definition of alpha is the game is playable from start to finish.
All mechanics are implemented, but they're in a rough form.
Puzzles and systems and gameplay like combat, exploring sections, even the art, they're all in there, but they're in a rough form.
To some way and then you're not really concerned about your bugs You because now is the time when the beta testers are going to start playing the game any bugs up to this point?
We're pretty much You know or you next to useless unless you're you know having an e3 demo or something because of course it was still in production So and also at this point stability is paramount so class a bug should be top priority anytime the game is broken It doesn't matter who's on what whose job it is to fix it They stop what they're doing you go fix it so that way everyone can keep working And then when we get to beta, our definition of that is the majority of polish has been applied, levels should be looking and playing really well, of course the game should be really stable because you're about to damn put the thing out the door.
And as many critical and high priority bugs are pretty much fixed, and at this point you're also like bugs are being waived, like lower bugs at this point are totally being waived, it's like no we're not fixing that.
Polish can still happen, but there's an approval process that we go through, and I'll tell you about that a little bit later as one of our little tips and tricks section.
Now one thing from the controversy that talking people inside the studio is we wanted to add is his hands off section. So the idea is that alright. So we did this work during alpha and beta. Yes, there's a chance that a bug might have been reduced. This is where the entire game is beta and it only is in the hands of the programmers and the testers. You're just playing the game looking for anything that can cause a major breakage and that that way you're not polishing anything more. You're not fixing bugs. You're not doing anything. You're not touching anything that can cause more bugs. It's just actually.
We were lucky enough to find one in uncharted 3 that was a really nasty level loading bug that would have caused a crash on probably 20 to 25% of the systems out there.
It was a really hard one to find, so it was kind of like who you think God and then of course you had gold and everyone's happy.
So.
Let me get on here.
Rolling deadline, sorry.
If that's the scheduling side of it, now I'm gonna talk about some of the tips and tricks that we use on how we manage all that stuff.
So, the rolling deadline, one thing that can really fight against you when you're working on this wonderful, magnificent opus that you're creating is the gigantor game that you have made.
It is huge, it is relentless, it wants to suck your soul.
So, I mean, you get to this problem of like, Hey, person A needs to talk to person B to get his stuff done, but person B is doing something for person C because he's got to work on a different part of the game.
And then all of a sudden person D is pining for person A and nobody's getting anything done at all.
So what we like to do instead is we take the game and we split it up into sections.
Specifically for Uncharted 3 it was three sections.
And each section will go through its own alpha beta gold period.
And then what we do is we stagger them on the schedule.
So the idea is that if we have that four months...
that I talked about to ship to get the rest of the project done.
We split that four months into the across these four sections.
The sections that are most ready to be completed go in section one.
The sections that are next most ready section two and the least ready go in section three.
So you'll notice section one hits alpha.
Section one is dedicated all to itself until there will be a time when section two's alpha will have to kick in and there will be some overlap.
That's fine, but at least you know if you're working on a level in section one, you have the artists and the animators are focused on you.
And same with programmer time. That is the priority. They're getting that done right now.
And same thing as you move through the rest of the sections.
Big gotcha on this one though is watch the overlap.
This killed us a little bit on charted three, hence another reason we want to say we want more time in the schedule to push these things out even further.
In actuality, our section one didn't finish until about the end of section two.
Did I say that aloud?
Oh, crap.
So.
Let me leave that up.
So one other nice thing that we use for this is we use bug count totals to go with the sections in terms of alpha and beta gold.
And what I mean by that is so level hits alpha, bugs are coming in, you're just, you're balancing polishing with fixing, balancing polishing with fixing.
At some point, Kristof sends an email saying, okay, this is your bug count total.
You want to have no more than this.
And it's about halfway through alpha.
And then, so now you want to have that or less.
So that it helps you focus your attention of like, oh, I need to make sure my bug count is that or below this.
And then as you get further in alpha, that number shrinks again.
You go to beta, shrinks again.
Halfway through beta, shrinks even more.
So the concept is, is that we can sit there and see like, okay, who's consistently below their bug count and who's above?
Or maybe somebody's getting overloaded with bugs too much and we need to have somebody who's got less bugs help that person.
And you also can track your game as a whole to make sure that are we going to finish this thing on time.
In fact, here's a little bit of data that might be interesting.
The chart on the left is an actual snippet of what the bug graph would look like from our bug database that Christoph would send out every day.
The blue represents that phase in time, that's your bug limit, and if you're in the red, that means you're way over.
So obviously Josh sure is having a bad day.
top of the chart. But it also is a sign that he was our cinematics lead. So he was getting tons of bugs for the entire cinematics team and he had to dole them out.
So maybe it's better if we get one of the guys on the cinematics teams to start fishing through the bugs for him and find his own, or come along and help him take some off of his plate, etc.
Now the one on the right is just an interesting side note is we also when we were in Alpha we do we started doing focus testing every week. We had focus that was coming in playing the game once a week and we have automated data capture of like you know per breakdown of the task. How many times did somebody die. And this was a little spreadsheet we put together is called the attempt canaries.
So anything that started creeping up above three or more deaths, like either the medium, in the median or the average, then that's something we, as part of the polish process, we would go back in and try to fix it.
Hence the task, my favorite, RP Jesus, is looking a little tight right there.
So, yeah, can you tighten up the graphics on level RP Jesus, please?
So, anyways, tiered approvals.
This is the other, this is another phase, another trick and tip that we do.
And this is kind of what I was going into earlier is like we have a group of key people that are high up that you have to get approvals from at certain points in order to get anything fixed or even polished.
The key people in this case were Evan Wells, co-president, he's our main highest designer in the company.
Christoph Balestra, he was the other co-president, highest programmer in the company, and then the game director, Jusmin Richman.
And the nice thing is you want to pick people that have an understanding of the technical and also the quality bar.
that can and they have to be high enough to be able to be decision makers so that way they can sometimes have to duke it out amongst themselves or whether or not does quality take precedence or does the risk take precedence and therefore we don't do it.
And this goes as the often and the alpha beta gold stages happen the approve this is where this kind of goes into play so at the beginning of alpha you're fixing your polishing whatever whatever whatever but halfway through alpha there's going to come a point where it says OK from this point on out if you're going to do a polish pass you have to get one of these people's approval doesn't matter who just have to get one.
And then as it goes on later, like, especially as it approaches beta, now you have to get two.
And then once you get near that hands-off phase, that's gold, then you have to go all three.
That's where the real fun begins.
You've got to bring in, like, chocolate cake for one guy and a cinnamon bun for this guy.
A little bribery always goes a long way.
But anyways, this system helps to mitigate risk.
Because you're all running around like chickens with your heads cut off, you know.
It's people that are up there high enough in level that they understand the balance of shipping the game, but making it awesome.
And they can make sure that the right balance is restored of like, yeah, we can waive that bug, or no, we really should fix that, that looks ugly.
And again, I already said it, make sure you put the right people into approvals.
Okay, and the last little note to go over is what I call the all-seeing eye.
So, again, while you're running around like headless chickens, I love that phrase, headless chickens.
Someone make a game about headless chickens, please.
I'll download it right now.
All right, the all-seeing eye is...
Everyone's crazy at the end of the game. We have a high-level person in our case It was Evan Wells looking for polish daily, so he understands the quality bar We're trying to hit he understands the the trade-offs that need to be made But he was the one who's going through make sure nothing slips through the cracks This person must have a deep understanding of what to look for very important and It's also important to note. I'm gonna put these two up at the same time It's not a dictatorship role.
Even though he could, he's the president of the company, he could come at any time and say, you will fix this right now, like the hand of God.
And what are you gonna do, say no?
Well.
he got it was never a dictatorship role he would keep that what a little bit alpha he's going to the game every day constantly looking for problems in that areas that we have video capture inside of the game where you can capture setback the videos you've seen so far use a video capture you grab the segments should money mail sent to the appropriate people and if they were important up we go get them put on the bug list to make sure that they would get done But the point is, you would have to balance fixing those with fixing your bugs and the other polish tests you have.
And it was always a discussion.
You could go to him anytime and say, I don't know if I'm going to have time to fix this, how important is it?
Or you could say, you find out this is a really difficult fix, it can break a lot of crap, what do you want to do?
And then it's always a discussion with him.
He's like, well, I really would like to see this fix, can we find a compromise?
And you know, you work it out.
He's very approachable.
But it is, like I said, a critical role you must have to catch things in the craziness.
Now, these three videos are actually from Evan.
I have no polished version of these because I had to dig back through an email, a friend's email to grab these.
And I'll play these more than once because these are a little crazy to see.
Did you catch that?
I'll play it again.
Look, watch Drake as he wigs out right before the water comes.
There.
Like, that crap.
It's like, even, I've been at this company for, since Uncharted 1, and even when I got into Uncharted 3, I was like, oh yeah, my level's polished, and I start getting videos, and I'm like, oh, that's right, we do that, I forgot.
So, I mean, it's frickin', yeah, it's crazy.
This is another good one, we call this the one frame off category of bug.
Did you see it?
Big white flash right there in the middle of the door.
And now this one, it turns out because you're in a pivoted fixed camera up here, and then you're in another animated camera in the sequence between the two, what happens is it was another one frame off bug where the animation, I think, finished a frame early.
So what happened was the camera said, oh, I'm done here.
And it went all the way back to wherever the hell the player camera was off in world space for one frame.
And then it came right back for the next animated camera, hence causing that white flash.
Because it could have been a black flash or whatever.
But yeah, that level of craziness and nice little, just give example of a render pop.
See the world right there? It happens right near the beginning. Just watch the background, how the light changes.
Boink. That. Like, that's another one of those things. He's like, hey, this looks bad, go fix it.
And I have, I mean...
If this was an hour long talk, I could fill the entire talk up with this.
I mean, we have thousands of these videos of, like, really Evan?
You want us to fix that?
I remember walking over to Travis's desk, and he's walking around in the sand, and he's trying to show them this little shuffle step that he's doing.
And I'm looking at it, and Travis is looking at it going, can you do it again?
What are you seeing here?
And it's like, literally, this crazy little minuscule detail.
But all of that helps to add up and make your game that much more solid and tight.
So.
Quick takeaway on all this, wow I'm actually slightly ahead of schedule.
That's what nervousness will get you.
Last 10% is the hardest but it gives the highest level of payoff.
You know, and schedule your time for polish.
Make sure you put it in the schedule not just put it as part of your production time so like no no we're actually going to whether it's through from beta or you want a dedicated time for polish and you cut your production cycle sort and say no now we're doing nothing but focusing on getting this thing is rock solid as awesome as you can if you want to do the alpha beta thing like we do at least 2025% of your schedules that you want.
I just said that a rolling schedule you can use this to help focus your team.
uh... tiered approval systems to help make sure things they check in the right balance of what to fix versus what not taken care of the dedicated overseer as we just went over and then most importantly aim for that perfection set that quality bar high don't don't accept the status quo don't just accept something because it's like that's the games the industry everyone deals with it they're players Silly players, and that's pretty much it. That's me down there and then a quick pimp for our HR person We are hiring she wanted me to put the slide in if you contact jobs at Naughty Dog calm Or you can follow Candace Walker on her Twitter. It's at Candace underscore Walker and one more quick note We have two more naughty dog talks in this very room later today the art of uncharted it is from our art director Rob Ruppel at noon and Caitlin Burnell a new hire. She's doing another day design talk at 2 30 in this room, and that's it And if you want questions, outside.
