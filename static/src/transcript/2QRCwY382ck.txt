The massacre was only the beginning.
Who did this to us?
Who attacked the tribe?
All we can do is pray to the goddess.
No.
Praying won't save us.
We have to find the killers.
So you will have to leave the Sacred Land.
Where the trail leads, I will go.
Aloy of the Nora, what brings you to Meridian?
There's a threat to us all.
Men in masks, raising up ancient machines.
And I've seen their leader.
From the depths, I will raise an army.
A storm of shadows to take back what's ours.
What are you doing to them?
Taking control.
You can see the corruption coming off them like smoke.
You've come a long way since the Citadel, Aloy.
Who are you?
An interested party.
All right guys, let's get started.
So you know the drill by now, about 15 minutes after you leave this hall, you're gonna get one of these nice little emails with the feedback.
And the bit I'm really interested in, this is a little white box.
So I'm far too close to my material.
I don't know whether this is really clever or really obvious.
So if you guys could just give me a few notes afterwards, we'd really appreciate it.
But without any further ado.
Here's all what you're here to see.
Horizon Zero Dawn.
So...
We're that game with the...
with the dinosaurs.
And not only that, more specifically, we're that game where you play as a young huntress and you fight those robot dinosaurs with a bow and arrow.
And we're set in a beautiful, expansive, open world which, spoilers, is actually the ruins of our own civilization reclaimed by nature.
This is populated by a series of new human civilizations.
Humanity is now scattered and struggling to survive.
And as Aloy, the player character, you become embroiled in the conflicts of this new world and work to solve the mystery of what happened to the old world.
So these tribes, these are what we're going to focus on today.
The title of my talk is Repopulating the Earth.
And it has a dual meaning.
In the fiction, the tribes, they don't really know anything about our shared history.
They've had to start from scratch.
They have their own mythology, their own cultures.
And really, we had this parallel challenge.
We had to go from a blank slate, no design, no story, no tools, to this world populated by a great many diverse living peoples.
So to begin with, let's take a look at how that blank slate came to be.
Because Guerrilla, for the longest time, were the Killzone guys.
And some people in the studio had done literally nothing but 15 years of Killzones.
So a little bit of creative fatigue was setting in, and a small team of just over about a dozen people, they split off and worked on what would become Horizon.
So this was a pretty small team, but the work they did was absolutely pivotal.
They came up with this amazing premise that basically just won over everyone who saw it.
We got fantastic prototypes like this that set a very clear expectation of what the game could be.
And through all this inspirational work, everyone on the team was really sold on this potential.
But at this point it's just potential and this tiny team they can't actually make this huge crazy ambitious game all on their own To do this they need a lot more people So Kills on Shadowfall wraps up and then a 200 person team rolls on over and I have a video of what that looked like So everyone's really excited.
Everyone has loads of ideas, too many ideas.
Everything's up in the air.
We have this atmosphere of paralyzing uncertainty.
And that was the point where I joined the team.
So 10 slides in, I am Dan Calvert, and I was character art director on Horizon Zero Dawn.
And getting in on the beginning of a crazy, ambitious, creative, new IP.
is many people's dream project, including my own, especially if that project does end up being successful like Horizon was.
But of course, at the beginning, when we were starting, we had no idea if it would be successful.
We didn't even know if we could pull it off.
and I had to deal with the worst possible one-two combo, that uncertainty which I just mentioned.
But also this huge scope of this expansive world full of people.
So, summed up, you know, we didn't know what to make, but we knew that we had to make a hell of a lot of it.
So, much like this guy, you know, once I got over the initial excitement, I'm like, where the hell do I even begin?
This story is the talk of the story of how I ate this burger.
How we managed those two contradictory requirements, scope and uncertainty.
And I'm going to do this by breaking down the last three and a half years of my life into ten little stories for you all.
So, this first story, let's take a look at this contradiction.
We don't know what to make, but we know we need to make a lot of it.
And at this point, at the beginning, you know, the project is a blank page.
All we have is a premise, and we just have to figure out the rest.
And this wouldn't have been so bad, were it not for the fact that everyone else was also sitting in front of a blank page.
The story isn't written. We don't know how many quests there are going to be.
We don't have any idea which characters people are going to need.
And all the tools, you know, they're all still geared towards making kills in games.
So these guys, they can't even make any quests.
It's going to be a long time until we actually have any information to act on.
But we can't just sit around and wait.
I wanted to get some characters done, but I didn't want to do any thorough work.
So for these early characters that we make to be useful, you know, what form do they need to take?
Formless.
Shapeless.
Like water.
You put water into a cup.
It becomes the cup. You put water into a bottle, it becomes the bottle.
You put it in a teapot, it becomes the teapot.
So they had to be like water, you know.
We didn't know exactly what shape hole they had to fill, so they had to fill any hole.
Or put it another way, you know, we didn't know exactly how the characters would be used.
So we'd need to start with the characters which were the most versatile.
But normally this isn't always how things are done.
You see, specific characters like the lead cast for example are some of the most important content you need to make and obviously it's like some of the more visible content, some of the most visible content.
So it's often what people will start with.
But you know, specific characters like these, this is risky.
If you're doing a design which is geared to communicate one thing, one idea.
What if things change?
And what if things are cut?
That's just wasted time and effort.
The more important someone is as well to the story, like these lead characters, the more likely it is they're going to change.
Let's take Ross, for example.
So Ross is Aloy's surrogate father.
He's pivotal to the first act.
He was part of the story back when they were still working out the premise.
you'd think Ross, you know, he'd be a safe bet.
But not at all.
You see, as the story evolved, so did Ross.
He mellows out a lot from this ax-wielding berserker you see on screen.
And leaving what we know about Ross aside, you know, we don't really know anything about the culture that Ross comes from.
You know, this is kind of important if you're doing a key character like Ross.
Because he's individual, he's special.
And if I don't know what the average person from Ross tribe looks like, you know, how do I know how to make this guy stand out?
So instead of starting with individuals like Rost, we started with the generic guys.
Generic is a bit of a dirty word.
I say generic, you're probably thinking things looking the same, things looking boring like this poor guy.
That's not really what generic means.
It merely, it's merely the opposite of specific.
It means versatile.
So let's look at this from another angle.
What characters did the design team need at the beginning of production?
They don't really need specific characters like Ross because their ideas aren't yet that specific.
They're still figuring things out.
They need to have flexibility to change their minds.
So we thought bigger.
You know, instead of designing a person, we designed peoples.
You know, we started with the cultures, the tribes, and we designed these guys as a unit.
You know, we'd map out all the different kinds of character we thought we'd need in each tribe.
And we call these key designs archetypes.
You know, what you're looking at on the screen, these are the archetypes for the Kai tribe.
But why do it this way?
Well, the trick here is that, provided the tribe as a whole is versatile, individual archetypes can be less versatile if you're thinking about these guys in a unit.
So that guard, you know, he's fairly limited in his uses, but that's okay, provided the rest of the population can cover what the quest team might need.
But if we don't know anything, how do we go about identifying which of these archetypes to design?
Well, we don't actually need that much to go off.
We only need a few very basic assumptions like this from the writers in order to get started.
I mean, we need a hell of a lot more to get finished, but we don't actually need all of this information to start.
And with this little bit of information, you know, we can get stuck in, we can start designing those first archetypes.
Once we have something to show, you know, we bounce things back and forth with the writers and we just continue that until we have all of these guys.
And this worked out pretty great because whilst all the quests are their own little stories, these stories are taking place inside of an established world.
And because we got started early, we got in on the ground floor with the writers whilst they're still doing this world building, these archetypes ended up being a part of that world building.
So when the quest team, you know, when they needed to start nailing down what kind of characters they needed to use, they tended to be these kind of characters, you know, what a coincidence.
And for every character with a name, we'd build a unique character from those generic parts, those generic archetypes.
Many of our key characters, like Nil or like Petra, they just kept using these generic parts.
Those parts, they just kind of fit the characters so well that we didn't need to change anything.
But of course there were many, many other characters where that generic content wasn't good enough.
There were some simple examples, you know, sometimes a character needs to look injured.
But more importantly, we'd have a large number of important story characters where these kind of generic looks wouldn't fit their characterization.
Let's go back to Rost.
This is how Rost looked like for most of production.
This guy, you know, he even snuck into one of the trailers.
and we kept using generic Ross, you know, we kept keeping him generic because things were staying in flux for the longest time.
And we really waited until stuff was only really coming together, which was really only a couple of months before alpha, before we started selecting the characters like Ross, who needed that bespoke content the most.
And then we would start doing, you know, very specific designs who really nailed who these characters, you know, really were.
And in Ross' case, you know, this is about making him look a bit more paternal than we originally envisioned.
But it was also about communicating his weird relationship with the rest of the tribe.
You see, Rost, he's a very kind of conservative, very traditional Noor, but he's also an outcast from the tribe.
So his design is to strike that difficult balance between, you know, keeping Noor traditions on one hand, but also separating him from the rest of the tribe.
And if we didn't wait until we had all of that information, you know, his design would not have been as effective, his characterization wouldn't have been as strong, and, you know, the idea of who Ross was wouldn't have been as clearly communicated to the player.
And, of course, as a bonus, because these bespoke characters, because they're the last characters we made, they're also the best characters we made, because we were able to take and apply everything that we'd learned from the other several hundred.
So that's how I steered art design towards first star characters.
That's not the only way the characters needed to be versatile, because of course, when you're done with a character, when they're all checked in, you lose total control over how they're used.
So stop me if you've heard this one before.
You've been asked for an asset out of blue.
But don't worry, it's a simple request.
This model, he's only seen far, far, far in the background.
He can be super simple, don't spend too long on him.
And then one morning, you boot up the game, and you see this.
And.
This can be frustrating and hilarious, but look at it from the designer's point of view.
He's probably just addressing some kind of critical feedback, or maybe this wasn't even the designer who made the request.
Maybe some other designer needed a character like this, they found this guy in the database and just figured he's a placeholder, you know?
These guys, they shouldn't have to work out exactly which characters they use in which context.
It's not fair to impose this on them.
So once a character was available...
they should be free to use it however they see fit.
So this didn't really happen on Horizon, because we didn't build the art at different quality grades.
Every character had to survive close-up scrutiny, even this generic dude whose name I don't remember.
So every character that we made was of the same high visual and technical fidelity.
So this guy, you know, his design is not as perfect to his characterization as Ross was.
But I can zoom in on this guy just as close as I could do on Ross.
And also you guys can do the same with photo mode.
So another anecdote, you get a request for a cinematic asset.
So it's going to be close up to the camera.
You make it super detailed and, you know, super expensive.
And then one day you boot up the game and someone's filled a city full of them, and the framerate is now in single digits.
But again, not really an issue on the horizon because every character has a very, very similar performance footprint.
Every character gets very cheap as soon as you're not in their face because we're extremely aggressive and extremely consistent with our approach to LODs.
So our crowd NPCs who walk around, and those one-off individuals like the guy you just saw, they're using the exact same pool of models, but the game is clever enough to use them contextually.
A crowd NPC, the game knows only to pull in those lower lods, whereas the same character in a conversation, the game knows how to pull in the full set.
By investing all of this time up front, making the characters technically more robust, the team could use them however they wanted.
And that meant that we weren't constantly spending time maintaining them, which gave us free time at the end of the project to do more bespoke characters like Rost.
So, how do you get started when you don't know anything?
Well, bespoke content is extremely important, but risky.
So start with more versatile content, work up to more specific things later.
The more versatile your content is, the more likely it is to end up in the final product.
And though it takes extra time up front making content versatile from a technical perspective, increases its usefulness and makes life easier for dependent teams.
So that's the first and the longest story.
The other ones are shorter, I promise you.
That's how we tackled the uncertainty, but what about the scope?
You see, we've got the player character, which has a lot of outfits, and we have story characters, and we have quest characters, we have enemy characters, and we have all the background characters, and on a game like Killzone, you have about this much work to do, and on Horizon, it's a bit more like this.
It's a whole lot more stuff to make, but that's not the end of it.
You see, we're a first-party studio.
We're there to show off what the hardware can really do, so it's not enough just to make all these guys.
They need to look not only better than anything that we've ever done before, they need to set the bar for open world games.
So, too much stuff, not enough time.
So has anyone here ever worked on a project where they felt they had more time than they needed?
Anyone?
You're a lucky dude.
So how did we get more time?
We didn't.
We just made sure that we squeezed as much as possible out of what we did have.
And I'm gonna explain this with some fun graphs.
So this is an abstraction of production capacity from the beginning of a project until its end.
And the vertical axis, that's capacity.
That's how many artists inside and outside the studio which I can keep busy making characters.
And you see, there's a ramp up.
whilst we're figuring stuff out in pre-pro, and there's a ramp down as we put the brakes on new content and transition to book fixing.
And this is important because this shaded area in the middle, this is literally how many characters are we gonna be able to make.
If this red space is how many characters we're making, the negative space is how many we aren't but could be.
And our potential capacity is quite high.
I can get hold of quite a lot of artists if I like.
So this adds up very, very quickly.
In an open world game like Horizon, the scope is something which adds value to the player experience in a very direct way.
Not just in the sense of here's some more different things for you to look at.
If we can do more characters, we can do more distinct cultures, we can do more variation within and without, we can make each culture and the world really feel alive.
If we can do more characters, we can do more bespoke content.
We can do more of those important one-off moments and story characters like Rost.
So, like, my plan was, I'm going to claim as much of this white space as possible.
But, I mean, that sounds pretty obvious, right?
But it's something I had to constantly sell.
You see, remember our old friend uncertainty?
Uncertainty creates this tendency to be cautious.
And it's very easy to start just eroding this volume with lots of small, very reasonable decisions.
So I hypothetical, let's say there's this cool new procedural texturing tool.
So let's experiment, let's get the workflow locked down before we commit to full production.
And that's not the end of the world, but now the tools guys, they want to refactor the export pipeline.
So let's wait for things to settle before we get stuck in.
And certainly days, the writing and design teams, they don't really know what they need.
Let's wait for things to settle a bit.
Let's wait for some asset requests to come in.
And you see all of these things, they add up very quickly, you know.
So how to solve this? Well, I didn't really solve it.
I just had to learn to tolerate that uncomfortable feeling that came with the uncertainty and just commit to things regardless.
We had to just get stuck in. Now I'm not dismissing those examples, you know.
We did research that procedural technology, we were constantly pinging the other teams to get that updated design and story info, but we didn't need to wait until we had this information before we got stuck in and scaled up.
But you might be thinking, you know, isn't this risky?
Couldn't you waste time by making things that you're not gonna end up using?
Well, not really, because there's an opportunity cost at play, you know, this time is wasted by not being utilized.
If we do make something in that time, and there is a good chance of it being used, then on the whole, we're gonna have a lot more characters.
And of course, what is the best way to increase the odds of that content being utilized?
Like Bruce said, by making them like water, you know, by making them as versatile as possible.
So on horizon we had 0 wasted characters.
Probably should have done a pun there.
And everyone we made, they were used in the game.
Not always how we might have originally thought, but always in a way that kind of added something to the player experience.
So that's how we could go from this to this.
You know, we made smart choices about what to make and in what order, which got us starting faster and earlier.
and we did more work up front making the content more technically robust, which frees us up at the end to do extra stuff.
So how can you find the time to do everything?
Well, claim that white space.
You know, make sure you're using all of the time you have available to its fullest potential.
Learn to tolerate that feeling of uncertainty and ignore it if it's just you being irrational.
And don't wait for new information.
Don't wait for new technology.
Use what you have now and adapt later.
So, you know, that's how we were able to finish everything.
But if you're serving other teams like we are, you know, if you're providing other teams with content, it's not enough to just get everything finished before you ship.
Because the rest of the team is still working in order to do their work.
They need characters, they need characters now.
And we need to get them what they need, when they needed it, or even before.
And this is pretty difficult for our content creation teams, because most of these other teams, they're going to be using some mode of Agile development.
You know, they're going to be doing continuous, short, iterative cycles punctuated by play tests.
And this is pretty incompatible with the ideal flow for our content creation, where you're doing these long, slow, methodical processes, which are not really fitting nicely into these Agile development loops.
So, you know, any artists here ever been pressured to cut corners and compromise quality to squeeze a model into a sprint?
Anyone?
Yeah?
And any producers here ever been frustrated by artists giving you multi-month estimates, refusing to budge?
So, what do you do?
Well, if you zoom in on those blocks...
You know, you get a little bit closer to them.
You actually find that there are a mix of tasks and some are agile.
So anything design related, for instance, you know, you're testing stuff out as quickly as possible.
You're seeing if it works and you more or less, you know, just rinse, repeat that process.
Whereas things like game mesh creation, these things are really waterfall.
You know, the work is not very subjective.
It takes a predictable amount of time and the goals and outcome are pretty clear.
You know, you can pretty much do this in one go.
And fortunately, those fast, agile, friendly bits, they're mostly at the beginning.
And the slower, methodical bits, they're mostly at the end.
So what we did is we worked in those early subjective bits into the sprints everyone else was running, which kept them fed.
And that meant we could take our time on the rest.
So let's look at this in practice.
Making a high-poly model is about solving a couple of very different problems.
So we've worked to get the shape and the form and the volume right, you know, essentially nailing the essence of the concept design in 3D.
And this process, you know, it's very subjective in these lots of iterations and it's suited to agile processes. Whereas a high poly also needs material expression, it needs detail, it needs construction.
These things are all very time consuming. They're all very careful.
These things are not suited to agile.
Making a design change at this point is destructive, it's time consuming.
So what we did is we broke the task in two, we speed sculpted the design, we handled the rest as a separate pass.
And the great thing about this was it got the character to the rest of the team extremely quick.
because we very very quickly convert it into a proxy model and get it into the game.
Now these models, they look pretty crude, but they actually clear all of our dependencies.
It's visually representative of those characters for design and playtesting.
So these characters are recognizable, they're distinct, even if they look a little bit Play-Doh.
And tech animation, you know, they can do rigging, they can do simulation.
Animators are getting a good representation of volume, form and weight.
But the most important thing...
is that because we made the poly counts, we made the shaders and textures, all these things are representative of the final content.
This proxy model and the final model performance-wise, it's essentially a like-for-like replacement.
So tech can now more relaxed, you know.
There's not gonna be this performance apocalypse at the end of production, when all of this content gets integrated all the end at once.
So that meant they were willing to let content be integrated much later than they would have otherwise, and in much higher volumes.
And that's how we got, you know, even more stuff done at the end of production.
So this approach is good because it gets us off the critical path really quickly.
When other teams have a proxy, which fills their every need, this removes the pressure on us to deliver that final content.
Lead times are now less of an issue, so we get more flexibility with deadlines.
We needed some finished characters to meet internal milestones or for demos or for trailers, but other than that we pretty much just had to get the rest of the cast on the disc before they started printing them.
And that meant that we could give every single character, every single one of them, the time it needed to be excellent.
So how can you work agile without compromising quality?
Well, the trick is to work out which part of the workflow agile and which bits aren't, and then only apply agile methodologies where it makes sense.
Use proxy content to meet the needs of dependent departments as quickly as possible.
Because if you can quickly meet the needs of other people's, sorry, if you can quickly meet the needs of other team.
you get all the time that you need to make every single asset good.
So proxies, you know, they're a great way to handle these content requests.
We were getting a lot of requests.
Most of these quests, you know, they have at least a half dozen characters.
Pretty much all of them come with some kind of special requirement.
And that's just quests, you know, we've got enemies, we've got player outfits, all kinds of other stuff.
So, you know, that's where all these guys come from.
As I'm sure you've experienced yourselves, everyone always needs everything at once.
And you can't do it all at once, so you have to work out some kind of order.
And the most obvious way to prioritize is by how important things are.
This is pretty easy to quantify, it's critical path stuff, the things which are central to the experience.
On Horizon, that's core mechanics, player character, main narrative.
But the other thing we had to account for was our old friend uncertainty.
So to avoid wasting time, we started with the things which were most important, but also the most certain.
Let's look at some of these requests that we got for Aloy.
We got a lot of requests.
So this is every feature, addition, gizmo that I was asked at Aloy, and all of her costumes at one point in development.
And clearly not all of these made it, and thankfully we avoided spending a lot of time on these things by prioritizing the most certain.
But how do we know which bits were more certain or less certain?
Well, with experience you do kind of get a sixth sense for like how, what is going to work.
But you have to be really careful about relying on your intuition.
because prototypes and playtests, they have this tendency to constantly surprise you.
I mean, that's kind of the whole point of them.
So my approach was that for any asset, it didn't really matter what, we'd immediately offer to create some kind of proxy content, and it's normally led to one of the following outcomes, you know.
Often the feature or request, it just works as intended, awesome.
But sometimes, you know, the request evolves, we iterate as we need to, we wait for things to settle, and then we make the final content.
Sometimes the proxy though, it just goes unused.
Maybe the feature got cut.
Maybe another team didn't have time to work on it.
But it doesn't really matter, because we didn't actually spend that much time on it.
And sometimes, rarely, the requestee just doesn't take us up on the offer to make a proxy.
And I found that this is generally a good sign that feature is never going to see the light of day.
So those things we deprioritize.
And I found that informal techniques like this are much more reliable than just blindly following production documentation.
So this is an experience I'm sure most of you can share.
I've learned to be a little bit skeptical of these tracking systems.
You know, they're often inaccurate or out of date.
The requests normally lack context or are missing some kind of critical information.
And this is my favorite example.
Okay, so there's a killzone level.
It's centered around a 100-foot statue, okay?
And your objective is to infiltrate the complex inside the 100-foot statue.
And at the end of the level, there's a big set piece, you know, where you blow up that 100-foot statue.
And not a single producer identified that we needed to build the 100-foot statue.
It was just so obvious that everyone had just assumed that someone else had tracked it somewhere else.
And as hilarious as that mistake was, it's perfectly reasonable.
Like, trying to log every little bit of work on a project like Horizon, which has a million moving parts and hundreds of independent actors doing their own thing, it's insane.
It's unreasonable to expect someone to do it perfectly.
So I gave them a hand by being proactive.
So whilst I did pay attention to those tracking systems, I didn't ignore them.
But I found it far more important to pay attention to the ground truth, which was to play the game every single day.
You know, so I put my trust in what I could see in the game.
I trusted my own judgment on how the existing content was going to work out.
And doing this, you know, I was able to identify work that we were going to need to do and start it and sometimes finish it long before anyone even noticed there was an issue.
I found the best way to do this, the best way to approach this, is you have to shift your perspective.
You have to stop looking at the game as a developer and try and experience it as a player.
It's important to taste your own dog food.
So I caught literally hundreds of things this way and if I hadn't those things would have just not been in the game.
So how can you prioritize?
Well, start with the things which are most critical and also the most likely.
Use project planning tools, but with some healthy skepticism.
And play the game every single day.
Track issues and tasks yourself and solve issues before people even become aware of them.
All right.
So we're at the end of point four.
I've mostly been droning on about production stuff.
I reckon at least a couple of you in the room are probably thinking a bit, feeling a bit misled.
You know, this is on the visual arts track, why are you talking about production?
Well my philosophy is that process and outcome, they're part of the same thing.
You know, they kind of exist on the same continuum.
And if you want to be the person who is directing the outcome, you can't wholly delegate process.
And on game development, that process does involve a lot of strategy and planning, collaboration, team building.
So in my experience, the most effective approach to creative leadership is a holistic one, which does incorporate these things like planning and production alongside creative direction.
But enough production for now.
Let's do some creative direction.
Everything that we've talked about so far has been pretty methodical.
And in keeping we have a pretty methodical approach to our visual design.
Art design is essentially an exercise in communication.
Whatever you're creating must effectively communicate your intent.
But as we have hundreds of people working together, how do we make sure that these guys, they're all seen to the same him sheet?
We have this focusing device which we call the four pillars.
And these are the key themes, the main ideas around which the premise is built.
You know, it's these first four videos that I showed you, this beautiful post-apocalyptic world, you know, these animalistic machines, the diverse tribes, and of course Aloy.
So anything that anyone asks of the game, it needs to enhance these pillars and not detract from them.
And this is how we work out if something is horizon-y.
As of themselves though, these are not things that I can directly apply to the characters.
So let's examine them and deconstruct them and see if we can translate them into something that's a bit more applicable.
The whole point...
of that beautiful, natural, post-post-apocalyptic world is that it's vibrant.
Life perseveres. It's optimistic. So to reflect that pillar, we want characters who are equally vibrant. Diversity is something that's also fairly self-explanatory.
The archetypical example in Horizon is, of course, the machines, who are this new and diverse form of life.
Horizon is a game that celebrates the difference and the unexpected.
So obviously we want tribes to be very different from one another in ways which are complex and unexpected.
Contrast between the old and the new, this one is super important.
In my opinion, this is the key to making things feel horizon-y.
So these kind of animalistic machines, that kind of contrast is the archetypical example of this, but it's a critical theme and it needs to come across to the characters as well.
And finally, David and Goliath, this sense of overcoming impossible odds.
We need to show those tribes and Aloy as underdogs in order to really sell the power of those machines.
So having these ideas outlined, it gives us some sort of metric for what is right, you know?
So if I were to add detail X on a character, and someone else, they disagree.
We can discuss this objectively over them what is, you know, just what our personal tastes are.
You know, this isn't foolproof, but we're able to skip a lot of those familiar circular arguments.
So let's run through this methodical design process for a tribe's visual identity.
And this is going to be the Cliff Notes version of how we approach the Loyal Tribe.
So let's start at the very beginning.
Let's look at some of those assumptions we get from the writers, like I showed you earlier.
What do we know about the Lenoir tribe at the start of pre-production?
Well, their core identity is that these guys are gonna be survivalist hunter-gatherers.
And they're the first tribe the player encounters, okay?
So in order to introduce this interesting contrast between the advanced machines, underdog humans early, we're gonna make these guys relatively low-tech.
And because these guys are the first tribe, you know, this is where the player is going to be learning the robot hunting.
This is where they're going to, these are the guys who are going to be doing the tutorials for robot hunting.
So in order to be able to teach the player, they need to be expert machine hunters, but because they're low-tech expert machine hunters, we're hitting that David and Goliath theme.
And we know where the game starts, you know, it's the Rocky Mountains.
This is really useful because from this we get climate, we get material culture, all kinds of other useful assumptions for which to start.
And our first main point of reference is these mountain men.
So these guys are appropriate for the climate.
They kind of embody that survivor's aspect.
This is a pretty good starting point.
We start doing early exploratory sketches in Parallel.
And these guys, you know, they embody that hunter-survivor's role.
But they're not really right. They're not really hitting any of those key themes These guys, you know, they're too literal to the reference These guys are too sophisticated for a low-tech culture. So let's let's focus in on that material culture This is a good way to tackle this. These guys are they're hunter-gatherers Okay, so they're not going to do a lot of farming This means that they have little to no textiles and their primary materials for garments. They're going to be hides They're going to be pelts. They're going to be leathers But we have now a conflict with one of our pillars, okay?
You see, in order to have pelts, you need to have animals.
There's this big discussion in the studio, you know, should the world of Horizon have living animals?
Because on the one hand, you know...
There's an argument to be made that having living animals competes with the primacy of the artificial life.
But on the other hand, we need to feed and clothe the tribes.
So we reach a compromise.
Animals can stay, but so as to not compete with the robots, any animal over a certain size is now extinct.
So we have to make the garments from stitching smaller hides together.
So we've made a bit of progress now, but something's still missing.
Was design work is now appropriate for the environment.
but we're still not really embodying a lot of those key themes I identified earlier.
And there's nothing about these guys as well that kind of makes them particular to the world of Horizon.
You know, they're only about a step or two removed from Vikings.
So we'd had our nose far too close to this material culture and had kind of forgotten these guys were hunting robots.
These machines, you know, they're a threat, but they're also an opportunity.
A low-tech culture is going to have all kinds of uses for the materials that they can strip off one of these damn machines.
So this opens up a wealth of new opportunities to hit some of those key themes.
You know, starting by mixing modern and natural through adding some of these robot materials to the characters.
So it took a lot of exploration to get this right.
This is one of our first attempts and these guys are really not very successful.
Nothing really fit the character, there's no kind of practicality here.
So we start thinking more about function, you know, why are these guys using the robot bits?
And by this point, you know, the writers have established that the Nora, they don't really have any particular reverence for the robots.
So these guys are going to be using them purely practically, as armor for instance.
But working this out is tricky, okay, because if I make these robot pieces fit a person too well, you know, it looks too deliberate, it looks like they were designed for that person.
You've basically designed a mech suit, you know, we need that contrast between the old and the new.
But if the way that these things are applied, you know, it looks too improvised, it makes the Nora look like they're careless and messy, we're not kind of hitting that expert machine hunter note.
So it took a lot of ideation.
Eventually we solved this by striking the balance by using intricate configurations of these smaller plates.
But we're still missing vibrancy because these natural materials, they're only providing a very, very limited palette.
So we start thinking about maybe how we can use these robot parts to this effect.
And we start by just taking small elements like bronze or gold connectors and use these things as accents, as jewelry.
And then we also add in these cables, especially these really, really colourful anodised ones, you know, that have this kind of silvery luster.
And then what we did, we interwoven these things with similar cables made from natural materials, and we get to this juxtaposition of the same shape language, but with different materials.
You know, it helps to make the robot elements look less foreign, so we get our contrast, but in a way which isn't abrasive.
And that's the really abbreviated version, but that's how we kind of worked out the main motifs for the Nora visual design.
And because we approached this methodically, there were a lot fewer dead ends.
We knew very quickly if something was working or if something was missing.
And this methodical approach went beyond designing the individual tribes.
Because in order to make the tribes distinct, before we designed any of them, we roughly mapped out what the core identity of each tribe would be and what the main force of shaping them would be.
And by planning out things like location, climate, cultural development, technological sophistication, all these things in advance, we knew that even though we couldn't be sure exactly how they would end up, we knew that they would be distinct.
So if art is subjective, how can you know what is right?
Well, you don't need to know everything, but you do need to know what your work is really about, okay?
And I don't mean in a mechanical way, like what the plot is, I mean the overarching themes, the ideas in the premise.
Work through your designs one step at a time, making sure that your conclusions are internally consistent and logical, but more important, that these things embody the key themes and communicate them very clearly to the player.
So yeah, once again, that was the super short version.
And I kind of focused on the successes to save time.
Which is pretty misleading, because I gave the impression that this was a lot easier than it was.
And it really, really wasn't easy.
So, when I show you that process as a story, it looks all fine and good, because you get a nice beginning, middle and end, you know?
But being in the middle of that is something else entirely.
It was frustrating and difficult, and at times I thought it was never going to end.
We generated so much material, I couldn't possibly show it to you all.
This is just like a small selection I grabbed.
But you see, in reality...
Design is about trying to find your way to some kind of end goal, because you often don't know what that end goal is until you reach it.
And even then, sometimes when you do reach it, you're still not sure.
So our process, it's less of a roadmap and it's more of an evolutionary tree.
Normally we have some kind of jumping off point, like those assumptions.
So we generate some ideas, okay?
And our concept guides, they're great.
So all of these ideas, they're great.
But we have to choose what to commit to.
You know, we have to start making decisions.
Again, not picking between good or bad ideas.
We're selecting ideas on how effective they are at encompassing that original intent, as well as how complementary they are with the other decisions that we've made.
And this process just basically continues.
We ideate, we make decisions, we ideate, we make decisions, and then at some point you just have to kind of stop when you're feeling it.
But committing to things, super important, because it creates this positive feedback loop.
The more decisions you make, the easier it is to make even more decisions, because you can base them on the decisions you've just made.
You get this snowballing phenomenon called the cone of uncertainty.
Which is basically that as you make decisions over time, the number of possibilities decrease, which means that certainty increases, and then it's easier to make progress and do useful work.
And on the beginning of a new IP like Horizon, those possibilities, they're endless.
We could have done anything.
So it's very easy to feel lost and hopeless, and it felt a lot more comfortable to play it safe and just not commit to anything.
But I just had to ignore this and just start making decisions because it's literally the only way to make progress.
But those decisions, they can be pretty hard because it often feels like you're throwing away great ideas.
This guy, he's a tech priest from when the guys were just working on the premise.
The story changed a lot and this guy got cut because he no longer fit.
But his design was so strong and it had so many great ideas that just some of the themes and ideas just kept re-emerging.
You know, the robes and the colours, they influenced a very similar Mesa priest.
The Paron logo that's stitched on his sleeves, you know, we adapted this for the Eclipse cult and this iconography just made a hell of a lot more sense for these guys.
You know, and the cable stitched into his flesh.
You know, we incorporated these into the Banuk shamans and the writing team then, you know, imbued them with a lot more meaning and they became a lot more important.
I didn't need to worry because if those ideas were really strong, they persisted, a good idea stays with you, it gets stuck up here.
It's impossible to unsee things, okay?
So this is a bunch of random noise, yeah?
Okay, and now you see a dog, okay?
And now you will see the dog whenever you see this picture.
It's now stuck in your subconscious forever.
I could show you this image again in five years and you will still see the dog.
So how can you get to the end if you don't know the way?
Well, don't despair if it feels like you're not making progress because the worst thing you can do is be too careful.
The best way to crawl through that cone of uncertainty is to start making decisions, start committing to things, and don't stress out about cutting things.
You know, if something is good and it gets cut, it will find its place sooner rather than later.
So making those decisions, that's pretty important.
But you need to be sure you're making those decisions for the right reasons.
I'm not making those decisions on my own, we're making things for other people to use, so there are a lot of stakeholders from lots of different disciplines.
And this means that we're getting feedback from people who don't always have an art background.
These guys, they don't always have the artistic vocabulary to verbalize their feedback clearly.
You know, they're not always able to do things like separate presentation from design.
But turning this inward, as artists, we're not exactly objective about our own work either.
Everyone has their blind spots. Everyone can be swayed by quality of finish or taste rather than content.
So, as an example, we present lineups like this, even though these things are just about presenting costume design and getting feedback on costume design, people were getting swayed by things like gesture, facial expression, even silly things like the order in which things were presented.
We'd talk about this beforehand, and people would make a conscious effort not to be swayed.
But it's really hard, practically impossible even.
The feedback that we were getting was just less useful as a result.
So in a misguided attempt to address this issue, I shifted us to lineups of identical poses and models, so the only difference was costume.
It didn't really work like I thought it would, because before, if someone didn't like a pose or something, they didn't like that one specific variant.
But now, if someone doesn't like the pose or the face, they don't like any of them.
So those contextual clues like gesture, they're irrelevant to the costume design, yes, but it's not just fluff.
They're communicating vital aspects of the character.
So now what we do is we go wide representation to begin with, and then we standardize as the design is closing, as we're getting towards the end.
And sometimes, like this example on screen, where we draw the same illustration, the same design, under different conditions to A-B test and work out exactly what it is people like about a very specific illustration.
You know, you can't defeat bias with brute force.
It's just something you have to account for.
And another thing you have to account for is people's expectations.
So before someone sees your work, they will have their own mental image of what they expect to see.
And if what you show is different from those expectations, even if it's appropriate and even if it's good, it can trigger an adverse reaction.
So this is the first design for Silence.
So for people who don't know, Silence is this kind of morally dubious genius badass.
He was first described to us by the writers as this kind of technological wizard, but he's also an awesome hunter.
He has no problems taking down machines.
So I see this first concept, you know, and it's awesome.
It nails who I think Silence is.
And the concept team, they also think they've nailed it in one.
So we're really enthusiastic.
We go show it to the writers, and they like it.
But they don't really see him as Silence because it doesn't really meet that wizard description that they gave us.
So, but no worries, you know, we discuss our expectations and we do a bit more exploration.
And we're not really sure on this wizard thing, so we start subtle, you know.
We show them this, they're not really feeling it, you know.
It's not really as striking as that first design, and it's not really as strong on that wizard note as it should be.
So we think, okay, we're being a bit uncompromising.
Let's pull the wizard slider to max, thinking that this is what silence needs to be.
But unexpectedly, they don't like this one any better.
And every time we talk about these concepts, everyone's always doing it in the context of that first concept.
It was just like, it left such a strong impression.
It essentially just pulled everything else into its orbit.
And it wasn't so much that it was wrong, it was just that it wasn't really what they had in mind.
And it just took a bit of adjusting to.
And ultimately what we ended up shipping with was something pretty close to that first concept.
Now mind, those explorations, they weren't wasted time.
You see, we incorporated a lot of the features from those ideations into the final, but it just meant that we kind of got there in a fairly roundabout way.
So now what I do is I try and make sure that every design has a bit of breathing room by making sure that people see designs long before they're asked to cast judgment on them.
You know, I try and do this out of context so it doesn't feel like I'm soliciting their opinion that very second.
And this is like silly, simple things like, you know, print them out big and stick them around the office, slip them into random emails and meetings.
And this sounds a little bit manipulative, but it's not really, because if someone really, really doesn't like a design, a bit of time isn't going to help, you know.
If you're doing something original and with something which is sometimes a little bit weird, like Horizon is, in order to give a design a chance to be properly appraised, you know, appraised objectively, it needs a bit of a climatization time.
And I found that if you do this, the more original, the more distinctive designs, they're the ones that consistently win out.
So how can you keep that feedback objective?
Well, be aware that your design work is judged holistically, not just that one thing you want to focus on.
Be aware that everyone brings their expectations and preconceptions.
So give your work room to breathe.
You know, in my experience, the more radical, the more unexpected the design, the more acclimatization people need to see it objectively.
So we're going to stick with this theme of psychological blind spots.
So here's a story about a time that I fell into that coma failing, getting excited about the process whilst losing sight of the end result.
You know, for where I'm from, we call this being too clever by half.
So now we have a whole bunch of distinctive, diverse designs, you know, the concept's ready to go.
Now the problem is like, how do we make all this stuff cost effectively?
You know, how do we make these things, these characters as efficiently as possible?
And modular construction is a fairly obvious way to go.
So, you know, we start with this Lego approach.
You know, we build huge libraries of small pieces, you know, discrete chunks of the character which are individually versatile.
And then we just start recombining these to make many different variants.
And on paper, this looks really promising.
But when you transition to 3D, the reality is pretty different.
Because our designs, they use a lot of layering and a lot of overlap.
This makes it really difficult for these pieces to work together without intersections or without reading complications.
So in order to make these things work together, we were constantly making design compromises in order to make things physically fit.
And a good design, it can tolerate a little bit of compromise.
But the difficulty with these modular systems is that every time you add a new piece, the number of these interdependencies increase exponentially.
So each of these lines represents a dependency between these pieces, and the more of these dependencies you have, the more compromises you are going to need to make.
And this looks like a lot, but this is really just like three sets of pieces.
This complexity, it scales exponentially, you know, here's 10 sets of pieces.
This only gets worse and worse, okay?
So now, you know, I can only think of two ways to make this work.
Option one is we do like hard rules on piece design, we settle on standardized, very, very similar forms, very, very similar volumes.
But this kind of defeats our point because everything is just going to end up looking the same.
Option two is like we try and defeat this with cleverness, you know, we kind of create some tool that does some kind of procedural fitting system.
But the trick is like these things, they come with a lot of management overhead.
They require a lot of time to use and maintain.
And this is time that I could be spending making more characters.
And really the most that these systems can do is just kind of clumsily warp and fit pieces together and that's not really a compromise I was willing to make because I would lose all of these bulges, compression folds, you know, these are important descriptive details that really make these materials feel real. So to cut a long story short, the problem wasn't a modular construction problem, it was a damn problem. I was being too clever by half.
I've gotten so enamored with the potential of this modular process that I essentially just lost sight of the outcome, which was simply to make as much variation as efficiently as possible.
So in reality that's dead simple, because not every part of a design adds value equally.
So now what we do is we just look at a set of archetypical designs like this.
We identify the elements which are most distinct, have the most visual variation from design to design, and then conversely we identify the bits which have the least variation, which are most similar from character to character, and then we break them up and we make lots of that first category, and then we make fewer or one of the second.
So we have bigger pieces, they have less interdependencies, and this worked out a hell of a lot better.
So we can't make quite as many different variants with this set as I could in the earlier example, but the variants that I can make are substantially more different looking from one another, but even more importantly, because I know interdependencies across these archetypical characters, I can make every archetype look very different from one another.
So how can you avoid being too clever?
Well, don't lose sight of your objective.
Focus on what you're trying to achieve.
Don't get seduced by cleverness for its own sake.
Make sure it's the problem that's leading the process, not the solution.
So these techniques, they helped us make more content.
But even then the scope of the game is still hilariously overwhelming.
And Guerrilla is not exactly a small studio, you know, Horizon was about 200 people.
But we like to pretend and we try and keep a small studio mindset.
We like having things like direct lines of communication.
We like having an open environment where everyone can be criticized.
But with every single extra person you add to a team, collaboration becomes harder, it becomes more formal.
So what we did with the Horizon Character team was keep it deliberately small.
We only had four full-time artists and two contractors.
So this of course means that we relied a lot on outsourcing.
And I could talk all day about how to outsource effectively, but I have three minutes, so I'm going to focus on, you know, perhaps the most important thing.
To outsource effectively, you need to outsource the right things.
And the right things are not always the most obvious things.
They're not always the things that you might want to outsource.
But if you want to make a lot of stuff with a small team, you need to be constantly asking yourself on every task, you know, can we outsource this?
And the trick to untangling this question is to consider where it is that your studio really is adding the value, okay?
Because those are the things that you shouldn't be outsourcing.
And at Grimmel Games, you know, we're a game developer.
We're not a creative commune, we're not an art school, we're not a model factory.
We're making video games.
And the meat of the game is the player experience, where the storytelling, the gameplay, the technology, the visuals, where all of this stuff comes together.
You know, this is what people remember.
This is what gives the game its identity.
This is what we need to own.
This is where we really are adding the value.
And everything else is essentially details and execution.
So, game meshes, can we outsource this?
Well, doing a good game mesh, yeah, it requires skill, it requires practice and talent, okay?
But the outcome is relatively objective and fairly easy to communicate.
It needs to look good, it needs to meet the performance requirements.
This means it's super easy to train, it's easy to brief, it's easy to review.
But they're super time consuming to do well, you know?
So what value are you adding?
by like tying up your internal stuff, making these game meshes.
Let's look at this from another angle.
Here's a workflow from the perspective of the person making the game mesh.
So you see someone is handing them a high poly, and then in the middle they do their thing, and they hand their stuff off to like, whoever's doing the UVs, okay?
So this work is just flowing in one direction.
You know, there are clear endpoints, clear success criteria for every single handover.
This is not exactly a collaborative process.
These guys need to cooperate, they need to make sure their shit is getting done, take any special notes, but their interactions aren't really adding a lot to the outcome.
You know, this is the difference between cooperation and collaboration.
Collaboration is where those interactions make a team greater than the sum of its parts.
So there's no real reason to have these three guys sit next to each other because they can do their job more or less equally the same as if they were hundreds of miles apart.
Let's compare this to an example of something we did with the studio, you know, Aloy's hair, can we outsource this? No.
Because this is not just an asset we can shuffle around, it's an R&D project, it spans multiple disciplines, and everyone is adding something different to the process.
The flow is not one-dimensional and predictable, it's back and forth, it has dead ends, it has eureka moments.
And a project like this benefits from people working closely together, you know, people who know each other well enough that they can have a passionate argument about something.
without things getting too personal.
So Aloy's hair is important.
Anything Aloy related is important.
Because of course, she's one of the pillars of the game.
But as important as she was, it didn't mean that we had to do every single facet of her inside the studio.
And I talked about our speed model process before.
So inside the studio, we spend a lot of time working at Aloy in 3D.
We get her in the game, we get feedback, we see how she feels to play.
And after an extremely long and collaborative process, we feel like we've resolved the design, the proportions are good, the design elements are working, you know, she's nice and readable.
We're ready to do this kind of final high poly, add in all that detail, material expression, you know, everything she needs to feel believable.
Can we outsource this? Yes.
And at this point, we hand it over to one of our skilled friends, because whilst this is extremely important, things like material expression, they're not very subjective, you know, they're not very collaborative.
Detailing is high poly, it's super skilled, and it's definitely fun, and it's definitely something our artists are perfectly capable of doing, but it's not necessarily the most impactful part of the production, and by not doing this, it frees them up to do some other more important things, which I'll talk about in a second.
But just to kind of wrap up, what did we outsource in total?
Quite a lot.
So using man hours spent on the asset as a metric for almost 90% of our content, one of our partners did the majority of the actual asset creation.
You know, they spent more time on it than we did.
That doesn't mean that they did all of it because we still have our fingers in every single character.
We're still keeping ownership of those identity-defining parts, but it did mean that they spent more time on it than we did.
But for 99% of all characters, at some point in their life cycle we had some kind of external development assistance.
So even if a character is owned internally, like one of our lead cast, we still get a partner to do at least some of the more mechanical, less collaborative bits like UVs or baking or LOLs.
And just a reminder, I said the internal team only did about 13%, which doesn't really sound like a lot, but it's 13% of our enormous scope, so that's a pretty impressive chunk of work.
And it was pretty awesome work, so I'm just going to take a sec to show it off.
Internally, we made pretty much the same amount of characters as a Killzone game, so outsourcing more didn't mean that we did less, it just meant that we outsourced more.
And through outsourcing more, we gave the game the scope of content it needed to be a success.
So how can you decide what to outsource?
Well, make a habit of asking yourself if something can be outsourced, because the answer is yes, but often you think.
The more collaborative, the more subjective something is, the more difficult it is to outsource.
So work out where your team really needs to add the value and hold on to those things in particular.
These things, they tend to be less content creation and more problem solving.
See, our internal team, they focus more on that problem solving, collaborative aspect, and then delegate to the larger part of the actual content creation to our partners.
This leads into what I look for in a team member.
You see, in my experience, you can categorize game artists into one or two boxes.
You have the artists who are focused on making great pieces of work, you know, the craftsmen.
And there are artists who love figuring stuff out and pushing the boundaries, you know, the tinkerers.
And the people in that first category, they have ownership needs which are pretty focused.
They put their all into that one thing they're doing now, that thing is theirs.
And we have a need for people with this focus, but it's not always a very collaborative approach.
So I found these guys, more often than not, can work just as well remotely.
When it comes to the team who are inside the studio, I want the mad scientists, okay?
These guys are the ones who are at the cutting edge of what the tech and what the tools can do.
These guys are the first people to get out of their chair and collaborate.
And these guys are the ones who are just like trying out all kinds of crazy shit on their own initiative.
So when it comes to ownership, you know, these guys say they think bigger Yeah, they own big broad problems like human anatomy and deformation or digital tailoring I mean a more masochistic artist might really like tackling the problem of hair and the character team They have an abundance of these ongoing projects Most of our artists own at least a couple And their task goes beyond just kind of tinkering and researching and developing.
These guys are supposed to set the workflow, they're supposed to teach others, they're supposed to maintain the standard throughout production.
And that basically means that for every position, I'm looking for someone who has an aptitude for leadership.
Either an artist who has an existing experience and wants to keep at it, but also people who don't have that experience, but exhibit the right mindset and qualities.
These guys need to coordinate a wider pool of artists.
So in addition to having excellent visual and verbal communication skills, they need good emotional intelligence, but most importantly these guys need an earnest desire to share their knowledge and to teach other people.
And the problem is like not every excellent artist is or wants to be an excellent leader.
And if you put someone in a position where their job evolves like that and they don't want to do that, that rarely works out.
So how can you handle ownership?
Well, be aware that people have different needs concerning ownership.
and hire people whose needs are aligned with what you want to achieve.
Ownership of broad problems to the right person can be as satisfying or even more satisfying than just owning individual content.
And if someone does own one of those broad problems, they need to be equipped with leadership skills to educate, inspire and delegate.
Hire people not only based on their skill, look for people whose goals align with your own goals.
the obligatory hiring seek.
And with that out of the way, I'm just gonna circle back to this happy guy.
I didn't finish that burger with some grand strategic master plan.
I didn't calculate the optimal way to shove it down my throat at once.
And I didn't design some kind of magical burger eating tool.
Instead, I just kind of got stuck in and took it one bite at a time.
Because more often than not, those smaller day-to-day decisions, those are the most important.
Individually, they don't amount to much, but their combined effect is powerful.
How do you make good small decisions? Well, ironically, you have to think bigger, you have to check every little call you make against what you're ultimately trying to achieve.
Every teeny tiny decision needs to be measured against what effect it's going to have on the player's experience.
And with that, I'm afraid I have run out of time and they're about to kick me off stage.
Anyone who wants to ask me some questions or argue with me, I like arguing, you can meet up with me in this wrap-up room.
Overlook 22, same building right there in the corner, at 7.30.
You see, I foolishly took an appointment right after this talk, so I have one last lesson.
Always check your calendar.
Don't agree to anything without checking.
You can do it first.
And it takes only one really dumb mistake to undermine an entire presentation.
So, thanks everyone.
