Hello? Hello? All right. Hello, everyone. Welcome to my talk. A little bit of boilerplate stuff to get out of the way. So turn off your cell phones, obviously. You guys all got e-mails for the survey as you checked in. So don't forget to fill those out.
They're important.
And also during the talk, if you guys want to stay for the portfolio review after, there's a blue shirt dude in the back called Grant. He's holding his hands up now. He has a USB key.
So you can just drop your portfolio onto there and then we'll review that stuff over lunch hour. Cool? All right. So with no further ado, let's get a little bit of a look at the So to start off, I want to get a couple things out of the way. I wanted to set expectations for this talk just so you guys know what you're getting into. So first of all, what this talk is going to be about, we're going to be talking about linear progression versus open world progression. So as you design your mission, it's going to be about a visualization tool. So a method to look at your data, to look at the content that you're creating to evaluate if you're spacing things out properly. You'll understand when we go through it. It's also a starting point. This is not going to be an end all solution. It's going to be how you start your design and start looking at how you're going to lay things out. And it's also like for a lot of you that are already doing this stuff, it's just framing things you're probably already doing but didn't necessarily put the vocabulary to it.
On the flip side, just so you don't come out of here disappointed that you didn't get the information you were looking for, we're not going to be talking about block out. So like how to create your 3D set up at first. This is something another talk should be about. We're not going to be talking about mission scripting either. So how to set up the perfect mission more like technically. This isn't going to be about it.
And most importantly, this isn't your holy grail.
So don't see this.
Don't expect it to be like a panacea like that.
If I do this, my entire mission design problem is going to be solved.
This is just one part of the process.
All right. Now, let's get on to it. So I wanted to do a little bit of personal background. It's helpful to understand the flow of the conversation. So this used to be me. I used to work in waste water management. So technically I used to shovel shit for a living.
So it wasn't the most glorious career. I was very well paid, but at a certain point after an unfortunate event I decided I can't really do this anymore and decided to go back to what I loved when I was a kid, which was designing games. So I went back to school, got a couple training programs in game design and level design. I specifically focused on level design and eventually got a really nice job at Ubisoft and I've been there now for 15 years, specifically in Montreal.
These are the games I worked on.
So I started my career on Prince of Persia Sands of Time.
This was a dream job for me.
I played the old Jordan Mechner games when I was a kid.
And when I got the opportunity to work on the new generation of it back in the PS2 days, I was like, yes, I'm jumping ship, I'm going there.
followed through with prince of Persia war within. I worked on chaos theory afterwards and had a short stint on snowboarding and for the most part I would say more than three quarters of my career has been on assassin creed games just focusing on open world design in those environments. Specifically mission design. I'm currently working on a project I'm not allowed to talk about but maybe in the next couple of years in GDC I'll be here.
What I want to focus on today were these three games. Prince of Persia, splinter cell and assassins to explain the progression between those three. All right. So starting with prince of Persia. So for anybody who is not familiar with it, so this is my first AAA game experience. I worked in MMOs things nobody has heard about. This is my big thing. So I got to UB working on this. This is like, it's a standard old school linear progression game. It's a platformer. For anybody who has done classical level design, it's just going through a tube and setting beats, right?
Our inspirations on the NAV side were ICO. So ICO was like a beloved project for us. Combat wise we're looking at Mark Cree but game structure wise it was much closer to the Jack and Daxter games. That was our inspiration as far as level design stuff goes.
What that means is there's not really options in the path, so the player, like, once he gets into your level, he goes through, like, what you orchestrated as a level designer, so you're really controlling his experience on a second-to-second basis.
It's really directed content, and as I said, like, the player's, like, whatever you put forth, this is what the player is gonna go through.
Now, afterwards I jumped on to Chaos Theory. This was the third in its series. It was a little bit different for me. It was a multi-path stealth game. Now, what I mean by that is, you So when you were going through the game, the different environments were more, like you had a single objective in any given room and you had more options to get through.
So we would just give players options, a whole bunch of ingredients and tools that he could use, and he would make his own way through it.
We would have profiles, like player profiles, so like the more aggressive player or the more stealthy player, and give them tools that complied to that.
and he found his own way through that environment.
But it was still limited in size.
It was still enclosed spaces, or very small outside like courtyards or things like that.
So it was fairly focused.
So you're still controlling the player's approach, but instead of being on a second to second basis, maybe more on a minute to minute basis.
and what that means is you can't really rely as much on the pacing or controlling your player as much you're guiding him but a little bit more loosely than you would in a straight linear game and that led me afterwards to Assassin's Creed most of the team that worked on this, we were a lot of people that just finished sands of time and jumped on to it for the conception phase. As I said, I went on to chaos and came back with my original team afterwards. So what we started working on wasn't what you guys saw in the end. Initially we were a lot more inspired by the pop game that we were working on before. So the first version we had was more of an epic linear action adventure game. It was meant to be linear platformer on steroids with multi-path. That was the approach. A lot of the splinter cell stuff I talked about was there in our design so the different bubbles you go into would have a little bit more multi-path but you were still going from tunnel hub, tunnel hub, tunnel hub.
and the scope was humongous on that thing. Because for the first year or two we didn't have an engine, we didn't have anvil, so a lot of it was paper design. As you can imagine, you just go crazy. It's just free imagination. You don't have constraints. We didn't know what the console specs were for the 360 or the PS3 or PS2. So we just went out. We just drew a whole bunch of things on the board, wrote a whole bunch of scopes. Our original version had 72 missions in it. It was just We had, like, one of the missions we had was, like, in the crack of Chevalier, so, like, this big Templar citadel in the middle of the desert. We had, like, this dynamic light tower that would invert as you played through it. So, like, this big thing that would then go down, like, a funnel and then go back up. We even had, like, this giant snake ride. So, in the sewers under Acre. It was like a whole bunch of Corey Mayer writers just went crazy when he wrote this shit.
so a lot of it was cool. We were super inspired by it but then reality checked in and we got the first version of mandel. Oh, we can't do a third of this. Okay. We'll re-scope and eventually we realize we can't do two-thirds of this. And we're like, okay, we're sort of screwed. We need to re-we need to look again at what we designed and focus a little bit more on our design. So...
that led us to what you guys eventually saw. By looking at what we already had, we realized that navigation was our fun breakthrough. That was what was cool about playing the game. The other aspect of it was the crowds. It was the first time as far as I remember where we could get a lot of NPCs on screen and they were actually game play ingredients. People you could play around with. They had reactions. So those two factors combined, navigation and crowds, were what we decided to focus on for what eventually became the game.
and so that led us to like a densely populated tight environment and we decided, okay, so cities. Cities is the way to go. This is how we're going to use these two features as much as possible. And that led us to the open world 360 degree assassination profile. So we decided to focus on assassination because we were assassins after all so there was.
decision to make. Player free of ‑‑ sorry.
So what that meant, though, is with this approach, it meant that if I was going to open world, I could not control my player as much as what I was used to in the past. So I had to get used to that idea again and recheck, okay, what does that mean for my progression? And in a sense, we were making our first open world game at Ubisoft, so there was a lot of questions that we needed to answer before we could move ahead.
So I was left with this question. How do I manage my progression? Now, in the past I was used to, once again, a more linear approach. And going into this big open world, I needed to check what that meant for it. Sorry.
So my first inclination because of my past experience was to say, okay, I'm going to design player paths. I'm going to design a stealth approach. I'm going to design an acrobatic approach and I'm going to design a fight approach into each of my set ups. That was a bad idea. Because I realized with the open world, there was so much landscape or so much areas to cover that I couldn't handle it all. There was just too much data.
I have too many notes. I realized there was no way I was actually going to cover all this stuff. I need to reassess once again what it meant to do open world progression. So I started thinking back to my pop experience. So if I was going to You consider the path that the player takes.
Most of the time, when we would draw out the progression in the map or the player path, we all do a golden path.
It's where the player comes into your area and where he's going to go.
This is one of my examples from Sands of Time.
It was the water reservoir.
So the start of that spline is where he comes in and the end arrow is where he gets out of it. And I can sort of define that path through one simple spline. There's very little branching other than for collectibles in there and there's no expression on the player standpoint. So it really comes down to one simple line. If I take a bunch of random the open world set up, usually what will happen is you'll set where your mission location is or like your target or your objective, and then you draw this like circle or blobby area around it and that defines the general area that your mission is going to take place in.
And if we apply the previous knowledge, then you can sort of represent the shortest path, your objective, as the radius of your circle or like a single line that goes from the outer edge of your area down to the creamy center where your main objective is going to be.
what your player is going to be doing. There's no way he's going to be going straight from the outside to the inside.
Because he's going to be exploring. He's going to get familiar with the ingredients you have in there. He's going to move left and right. He's going to go backwards. He's going to circle around your objective. At some point he's going to commit and go down to the center. And that became super interesting.
Okay. The area is where things take place. So how do I do make sure that the player can feel a progression from that outer edge to the inner edge.
With the circumventing that he does, it's not a direct pass.
So it became a little bit harder.
And this here, I'll give an example, like an actual in-game example of what that means. So this is an example from AC1.
This is the C-brand assassination in the port of acre. So we had already defined where the assassinations were going to take place at the beginning of the project. So I already knew this guy, he's going to be in the port. That already knew. We already done like a sort of block out for the area. That was mainly inspired by architecture and like just historical references that we found. So we just mocked up a thing, made sure it looked like a port with boats and shit in there. And this is what it gave.
And now in there, I place my target.
So it's that little crosshair at the bottom right on the boat.
So that I knew, or I had established that this is where I want my final moment, the crescendo to happen.
Because it was in the middle of the water.
The character didn't have any swimming abilities back then.
He would automatically die.
So it was my lava pit.
So it just made sense to have everything progress towards there And it was a nice like amphitheater setup if I did that right like from the outer edge of my city And I'm leading towards everything sort of naturally focused around there, so it just made sense Afterwards what I did is I defined a zone around it.
So as I said earlier on, that's my mission area.
So that's that dotted line around the whole thing.
So in a sense, the port.
The port is where most of my gameplay is going to be.
Anything that's outside of there is an approach.
I'm not going to control it.
I'm going to use the systems of the game in there.
But I'm not going to put anything really in place to sort of complement my mission right away.
I'm going to focus mainly on the port here.
And as I said earlier on, the shortest path is from the entrance of the port directly to the boat.
Right? Like, that's gonna be, like, if you want to do the mission inside of five minutes or less, that's probably the best path.
But really, most players, they approach from anywhere in there.
And so you're gonna get these, player stories are gonna be different, everybody's gonna have their own way.
And in a way, you sort of have to embrace this.
This is, like, you're making an open-world game, and this is what you want.
You want everybody to have their own story.
You want everybody to, um...
tell you how they did it and then the next day you do it in a completely different way and that's the upside of doing an open world setup.
So with this in mind, that led us to take it on a more systemic approach.
Because the whole area could be used, there's no way I could control the whole thing.
So using systemic ingredients, where we would prepare a whole bunch of either ingredients or ingredient setups, we would create a list.
that we can just distribute through there and the player that can then interact with all these toys. So similar to what we would do in a small multi-path room in splinter cell, we would do this on a wide scale in a large area. The one thing we're scared about, though, is as opposed to splinter cell where everything is focused in one small room, being a large area, you can lose the focus. You can lose the ability to interact with the toys. So we're going to have to figure out how to the intent that you're trying to go for. And in the end there's a risk that it might seem random. So once again I need to think, okay, how do I sort of redo that sort of progression curve that you could have in a linear game in this set up. And so that brought me to segmenting my areas.
So if I was to divide my mission area into multiple concentric zones, then I could sort of have a similitude of what I was doing in the open world progression.
Because normally they are in the linear progression where you'll have beats for each given room as you progress towards your objective.
I could do that more in an area using this approach.
Now I'll give you an actual example of this.
So.
I'm going to use Assassin's Creed again.
We're going to use the same example from what you saw earlier on, but we're going to go a little bit more in depth.
So first, you need a rough layout.
If you don't have a rough layout, you're going on a blank slate.
You're just going to hit your head against the wall.
At least try and block out...
A general idea of where your mission takes place, I've done versions of this that only has like five blocks in it.
And in the ground.
Just to have something to work with.
If you don't have anything, it's going to be too long, and you won't get any good results.
So just at least try and do your block out first.
And so here, this is a much more complex block out than what you need.
This is one of my final versions, but I couldn't find the older ones.
content in there and still look like a port. Next step is identifying where your goals are going to be. So in this case, as we said earlier on, we had the dude on the boat. I knew that's where it was going to be.
you define your approach zone. So we already talked about that one. So just define your area. Now, the size of the approach is basically it's up to you. It's dependent on your game. I can't tell you the size of it because it's like the character movement, the speed that he goes at. What type of objective is your mission? Or even the mission time. Like say it's something that you all have to agree upon on your project. Like do we want our missions to be five minutes, ten minutes, 15 minutes or an hour. And that defines the area that you're in.
And then from that point on, once you have a general area, then you want to segment it up just to create sections that progressively lead you towards your objective.
Now, you might want to avoid creating too many of these areas because the more you have, the less contrasted you can make them be.
the larger your area or the lesser you have, the more distinct you can make them all be.
That progression or the passing from one area to another will be easier to indicate or make the player feel.
Now you can see here also that it's not concentric. In this case, as I said earlier on, I built an amphitheater set up so everything leads towards the boat. This just came about because of the environment I had. Everything, like the water I can't navigate in, so it just made sense to sort of progress towards it. In a case like, let's say an outpost from Far Cry, where it's in the middle of a field or a much more open area, then you'll probably have concentric zones that like circle in the middle and then you approach from any given direction. So...
I guess here what I want to say is take inspiration from your world as well as from your abilities and have fun with your zones.
They don't have to be concentric geometric shapes.
Really take inspiration from the geometry you already have and you can use that to sort of guide your player without once again trying to limit him too much.
And this is a good thing to know.
you're once again in open world, like try and not limit the player's options. Try and give them as many options as humanly possible so that he, like you can get more player stories basically out of it in the end. All right. Now, the next step, this might seem a little bit like cosmetic, but it's not.
I like to add color to this. This is mainly to improve readability of your design document. Because if you don't do it, like ultimately in the end you're going to have a lot of information layered on this. And if you don't do that color coding, it just will make it much harder to read. So I just like to have this to like when I can take a top view of my whole thing, I can see the contrast a little bit better.
All right.
Now the next step, which is the, I guess, where we actually start getting into gameplay stuff, ingredient distribution.
So I'll go into details about ingredients a little bit later on after this.
I just want to give you guys a really quick view of how the method works first.
So basically what you're doing here is you're laying down the different ingredients that are complementary to your mission within your different progression sectors.
Now, these ingredients can be anything from existing gameplay objects that you already have in your object bank.
They could be art assets.
They could be sound events.
They could be gameplay patterns that you want to use.
Pretty much anything is OK as long as it is complementary to the theme that you're trying to represent or the type of progression.
And we'll go into details on that a little bit later on as well.
And here what you want to do is basically, like, the closer you get to your objective, well, either the harder the ingredients become, or the stronger the emotional ingredients, or like the stronger...
the closer they are to the target emotion you want to get, depending on, once again, the theme that you're going for.
One thing to be careful of is don't increase the number of objects in each and every zone.
Think about density, not about number of objects.
Because naturally, as you get closer, the zones become smaller and smaller.
So if you have more objects, you'll just have way too many ingredients in there.
And it'll be chaotic in the end.
So just be weary of that notion.
All right. And really, this is where it gets important. This is all document. This is all theory. But you're making a game. So everything has to be an engine. As soon as you can, you want to drop this theory into your engine and start playing around with it. This is where the magic happens. But this is where the game is, right?
So usually what I would do is I would take that theory, so the stuff I would set up, and then drop it directly into my world layout, and then adapt as I go.
Now the first thing you're going to notice is you are using a 2D tool.
So the 3D component to your game is just completely busted.
You won't like...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
You'll...
you'll distribute stuff evenly because you're top down approach and like verticality won't be considered. You'll notice that distances are off so then you start distancing objects from one another. Especially when it comes to mobile ingredients like enemies.
because you'll get aggro, so if you aggro an enemy and you bring him to another enemy then the difficulty just increases exponentially.
So this is stuff you'll notice right away as soon as you start dropping stuff in.
So space it out as soon as you get in the engine.
Don't spend too much time on documentation, just do it directly in the engine.
This is the actual final layout that we ended up with. This is the mission, this is the map that was in game. So a lot of the geometry I just readjusted afterwards. The guard placement also I removed guys from my initial plan because it was hard to understand the contrast between them.
elevation. This is where we realize that enemies cannot see beyond a certain threshold too much. It was cool if you're trying to do a stealth approach. If you want to navigate on top that means enemies on the floor cannot see you. But it also meant if you were planning something that had a lot of verticality, your intentions might not work in the end because enemies couldn't see you. So it's just stuff once again directly in the engine you're going to notice this.
Now, I talked about it a little bit earlier on, but how do you choose your ingredients?
So in your game, you probably already have an existing list of ingredients, hopefully, or preparing the process of designing these things.
So you probably have a really wide selection of, there's just a lot of things that you can choose from, from the art assets, from the sound cues, to any small, little scripted events.
There's a lot of objects that are in front of you.
And so how do you choose which ones best complement your mission?
So what I like to do first is come to a common understanding on your project of what you want to challenge the player on.
Like what's your, I'm calling it a dimension here, but really what is your, what is the value that you want to see a progression on during your entire game? More often than not, we choose difficulty. Difficulty is the one that we often refer to. And it's a great one. I highly suggest using it.
but there's other ones that you can use as well. The mission phase is what that means is like for a lot of military games you have the approach zone, the infiltration zone and then the encounter zone. So you can use that as your progression parameter. Game play focus is another one. So I'll give examples from Far Cry a little bit later on. But if you choose a game play object or a game play feature in the game and design an entire mission around there.
could be another dimension that you're choosing to focus on.
Emotional theme. I'll talk a lot about these as well. This is one thing that we do a lot of on the older ACs where we choose I want to do vertigo or I want to do fear. I want to do risk.
these are another type of approach. And finally, here, there's probably a lot more that you guys can come up with. But one I've had a little bit of experience working with was the narrative acts. So this is like a lot of our background was work like just writing. We had a lot of writers on our team. So we used a three-act structure to sort of inspire ourselves on mission progression. So we would design.
introduction zone so how you get where you get familiar with your concept then the catalyst being the event or the cinematic that led you into the development phase of your mission so where the story sort of progressed so the area where that happened and then the conclusion phase with the catalyst in between which was once again another cinematic or something that led you into the final epic battle so it was neat intellectually but where it fell apart is all those choke points in between the catalysts where we were sort of breaking the appeal that open world had. Because, like, if everything is open world but then you're choke pointing your player through a specific point, then you just lost everything that you've worked for. So that one I would actually, if you can do it where you're not choke pointing your player, I would actually recommend that.
It's way better, so think about it, but if you have to choke point your player into specific moments, then you're really throwing the open world approach out the window, so probably not the best thing to do. Now, in the previous example I showed you before, we used two dimensions, so this is also a possibility. It becomes harder to sort of visualize your data, but it's something that you can do. We were using here, so difficulty progression.
as well as emotional progression.
So in this case, I was using exposure as my emotion.
So the further you went out to the water, the less objects you had to sort of block line of sight with enemies, and you were on water.
So the closer you got to the enemy, the more exposed you were to the different enemies, and also the risk of falling in the water and whatnot.
So it's just one way to.
progress things. Now, once you have your dimension isolated, choose a theme. So this is the flavor. This is so if we were talking about emotions earlier on, well, okay, like we generally on the project decide emotions are what we're going to bank on, then is this mission going to be about vertigo or is this mission going to be about love? Is this mission going to be about like eating? I don't know.
this is just like the subset. It's the flavor you want to choose for your given mission. The example I gave here is for gameplay focused on AC, like the main pillars were acrobatics, stealth or fight. So we could decide this specific mission we're going to make it a stealth mission. So this is what I meant by this.
And finally, listing your appropriate ingredients.
So this is taking all the ingredients you already have in your bank, and then picking and choosing the ones that fit the theme that you're going for.
As I said earlier on, these can be anything from like actual game ingredients you already have in your bank. They could be scripted events. So just a conversation between two people.
Explosions, things falling apart. They could be sound cues.
So just hearing like a bird chirp or like people screaming out in the distance. The wind. Like that type of stuff.
art assets. So like bioshock for instance, like all of the graffiti that they would have in there, like the environmental storytelling set ups that you could do, that fits pretty well in the art assets section. Game play patterns, so this is more of an amalgamation of multiple game play objects together. So when you see like, when I was talking about exposure in the previous mission, we had a lot of moments where we would put what we call troublemakers, so they were the crazy dudes, they would just push you, put those next to really narrow platforms, so that was for me a gameplay pattern where putting guys near narrow platforms where I can fall, I can re-instance that a couple places, and that became a gameplay pattern.
And finally, also list things that don't exist.
Like you don't have to go through the list of things that are there.
If you find that you're missing stuff in your list, like on any of these standpoints, you can propose things, right?
You can come up to any manager or content.
organizer and say, you know what, I'm missing ingredients for this type of motion, I'm missing ingredients to challenge a player on this type of gameplay focus, so just come out with your own proposals, prototype them if you can, and then you can help develop that list of ingredients that can then be shared by other people.
Now the more variety you have in this, the better off you'll be.
Like the more objects you have, the better off you'll be, because especially when you're dealing with an open environment, if you're reusing the same object over and over and over and over again, that's cool in the sense that the player is going to recognize it and be able to deal with it, but you end up having the Flintstones syndrome where it's just the same thing repeating over and you notice the pattern and it becomes less compelling.
So the more...
deep your list goes, I think the more flexibility you guys will have in the end. One thing you might want to do is also create subcategories in there. So if you choose a given emotional theme or whatever, choose things that will complement the progression in there. So things that are like emotional state to stronger emotional state or something that like flips to something that is like a different dimension of those over time so that you then once you start applying it in your 2D method you can actually segment it per world area.
And also, a neat thing that you can do with this is this is where, as I said earlier on, you can notice this gameplay thing is completely understaffed in ingredients, or I don't have enough objects to represent this type of gameplay focus.
And on the flip side, you can actually notice the stuff that you're using way too much.
So it's a way to sort of.
do an evaluation on the objects you have in your bank and get an idea of like, do we have enough?
Do we not have enough?
So it's just another way to evaluate your own content.
Now here's an example I wanted to give for emotional things. I mentioned vertigo. This is an example from assassin's creed 2.
It's the San Genniano assassination in Tuscany. So we tag this mission as a vertigo mission. So going through the list, we have a list of the things that we can do. We can do the things that we can't do. We can do the things that we can't do. We can do the things that we can't do. We can do the objects we had, we isolated a couple ones that seemed to complement that a little bit better. And so we ended up with the swing pole. So the idea that you had like these poles that only your hands would touch, so that meant your feet were not touching the ground. So all of a sudden you lost a lot of your security. So it played a little bit more with vertigo. Corner swing, which was those objects that just like turned a corner 90 degrees. And so that one, you're putting your your livelihood in the hands of the designer. Because you didn't know where that was going. Just hoped that it led to something. Because there's a way, if the designer knew his job, there's a real risk that you could jump onto those and fall to your death afterwards. So.
that was another one that helped us a lot.
Archers, so as you climb up, having archers on opposing towers that could spot you, put you super exposed, and once again, you became very conscious of the lack of floor underneath you.
Tightropes, so this is an easy one, just having these really exposed tightropes between towers that you can just plunge underneath.
and once again exposed to those archers was a really good combination.
High buildings, so as you progress, and this is a feature of the San Gennaro towers, like these are like really tall towers that like peak out from the really low horizon on all those buildings, so that already just in its architecture helped us out.
on the less game play side we put in flying birds. So the higher up you went you ended up like, oh, wow, I'm climbing amongst a whole bunch of flocks of birds. So you became very conscious of how high you were. Normally you wouldn't see those.
They would be so high they were just background elements. When you saw them next to you, oh, shit, I'm really high now. And finally the wind ambiance. So going from a more city atmosphere when we're at the bottom and then progressively switching that to wind atmosphere once we got high up, same thing, made you really conscious about the risk you were now taking. Now here's an example of my game I never worked on, but like I'm sure you're all familiar with the Fort Frolic mission from Bioshock 1.
talking with the mentors, they gave me a little bit of insight on the mission. I found it really interesting and actually very appropriate. So the Fort Frolic mission came to in a moment in the game where you were getting pretty confident with your skills as well as the eerie nature of Rapture.
And so it was put in here to sort of destabilize you from that position of safety you were sort of getting. So from my understanding, the intent from Jordan, the level designer on the mission, was to destabilize the player. And to do so, he went through a bunch of different in a way these enemies did not exist because they're not used anywhere else in the game. This was like a unique place where these are used. So up until now the player has been encountering dudes with guns. For the most part it's just a whole bunch of dudes with guns. And here you start encountering enemies that can teleport.
they mainly attack you in melee. Like the only other enemy that attacks you in melee was the big daddy, right? He was like a big thing. So you already associated to something that, oh, man, like this is not going to be comfortable. The fact that he walked on walls, like, was not something you were used to either. You were used to aiming at eye level and just ‑‑ shooting heads, right? And because they could walk on any surface, that put you at ease. Like your aiming needed to adjust. And finally, they used smoke grenades as well. And they could disappear on top of that. So it just put you completely uneased. And finally, the graffiti, like they used that in the rest of the game, but it just helped to complement that really, really well.
And finally, this is my last example. I want to give an example from Far Cry 4. Once again, I didn't work on this, but I sat down with my colleagues from Far Cry, so Nicolai Duclos, their level design director, as well as Danny Paquette, their outpost designer. He's the guy who designed pretty much all the outposts in Far Cry 3 and Far Cry 4, so he knows what he's doing.
So here we have an outpost. The example I wanted to talk about is the Shanath training ground in Far Cry 4. So this is the, for anybody who's played, it's the dog kennel outpost.
Now, their focus here, it was a game play focus. They decided to focus on dogs. Now, dogs were really different object from all the other enemies because they're animals. They're not human beings. They don't have weapons other than their teeth.
And so the specific game play nature of them where they're They're basically meat missiles, right?
They see you and they just run at you and chow down at you.
And they don't have as much strategy as the other enemies have.
They won't take cover.
If they see you, they jump at you and try to bite you.
to find the best environment to sort of suit this game play focus. Now, this is something the Far Cry team works a little bit different than what I was used to on AC. But what they'll do is they'll do Google map scouting. So when they know the general area that their game takes place in, they go and take satellite footage of different areas and try and find something that they find neat, like a distinct feature and try to reproduce that in layout. So here like they found a some farm set up. I don't know exactly where this is, but somewhere. And so we took a screen shot and then, okay, we're going to try to reproduce this. And then what I was saying earlier on about like very simple block outs, like this is a version of that. There's six blocks in here plus one cliff difference. And you could start designing stuff with block of it is this simple. So they reproduce that image that we just saw. And then they started applying mission content onto it. So this setup is way simpler than what I showed you earlier on. And that's intentional. It's just to focus on something that's maybe easier to approach.
you can already see it just from this layout. I think you can sort of define how the areas are going to go. So let's see if you guess properly. So when you start mocking it out, you can see the initial, that center zone which is that big open area.
Now, that's really appropriate for dogs. It's a big wide open area. As soon as you get in there, they can spot. There's nothing to really block them from approaching you. They can run directly at you.
and that secondary zone around it is basically the roadside.
And so this has more line of sight blockers. Dogs will have a little bit more problems seeing you. However, if they do see you, they can go through that geometry and try to get at you, which makes it a little bit harder for you to shoot that.
And we'll get to that a little bit later on.
So here you can see also like, we're going to color it.
There's less zones than the previous examples that I gave.
Because it's an outpost.
It's not a mission.
The missions from AC, they were meant to be 15 minutes long.
Outposts in general, you target about five minutes as a general rule.
So you'll naturally have less zones in there.
And so an interesting thing here is like only the red and yellow zones are actual gameplay zones in here.
The green zone is what I was talking about a little bit earlier on.
It's an approach zone.
It's an area that has no direct challenge to the player.
It's more a get familiar with your environment zone.
So I'll give a couple examples of that in the next slides.
But as I said, it's really an area that you can use to your advantage to sort of get the player familiar with the general things he's going to encounter without necessarily challenging him. And you don't want him, you don't want to put anything in there that's going to like alert his presence to the enemies. Unless like he's being stupid and throwing grenades everywhere in the middle of the forest and trying to kill trees for some reason. Like this is really just like get the layout of the world. And so for anybody who's played any of the Far Cry games, It's also where you usually get your points of view. So elevated areas that you can just get higher ground and see what the hell is going on. In safety for the most part, there's very little risk of exposure. And this is where you will make your plan as a player.
So here like there's like basically three elevated zones around the area where the player can do that.
Once again, it's an open world, so you need to prepare for that, right?
You need to prepare that the player is going to be approaching like here, there's a weakness on the left side.
If I'm approaching from the west side here, there are no Vista points in there, right?
So luckily there's three other ones.
So like as you approach, you can see that there's higher levels.
And so the player can just circumvent and try and like go around the setup to eventually get to there if he wants to have more information.
or he could just go in guns blazing without the information needed. And that was intentional here actually. The main road leads into there. So it was like the way to go the fight route in here.
Now, once you have that approach zone sort of set up, this is where now you can start distributing ingredients in there. So we said it's dogs. This is the focus of this mission was dogs. So the center there was the penultimate area.
It's multiple objectives here. You have to kill everybody basically to win the challenge. So the majority of the dogs will be present in that little area. Fighting more than one dog is obviously harder. And that's away from the screen is what it's going to be. I'm going to click on run and I hope that something happens. That's the point. And thinking about what to do and trying to capture what's going on and how to distribute that to the sub-routes. Exactly. You're going to see the forest is, yes, getting our tools for the and they have little geometry to sort of block them from seeing you.
Now on the outside, a little bit less dogs, they're isolated one from the other.
The two at the bottom there are actually in cages, so they can't really get to you.
You can shoot them through the cage, or if you're unlucky, then you just broke the cage and they start running after you.
But this is where you get familiar with the GameBly object and you're able to take it out by yourself without it warning anything else, hopefully.
Now next step is putting in your guards. Here the designer put in only one single human guard in there and that was intentional. Once again, the focus is on dogs. You don't want to dilute their presence by adding too many enemies because at that point it becomes a game about guards that have dogs instead of being a setup that is about dogs with a couple guards around. So that was intentional here. And this is the hardest guard in this general setup. Not in the game.
It's just a second level guard. But of the area, this is going to be the hardest guard. So it just makes him stand out from all the other ones and he acts as a handler.
Now, he added the weakest guards in the game are these three guys that he added. These, they mainly act as warning bells, right? Like for the guards. Like if these guys detect you, they will alert the guards, the dogs and then the dogs come running after you. And he placed them in areas really close to the stealth entrances. So they're really easy to take these guys out. So anybody who's done the job of properly scouting can take these guys out individually and then he's left to just dealing with the dogs. And then afterwards he just did the passive, like the boilerplate stuff, the reinforcements, any flammable surfaces and the alarm bell.
So a lot of this, you can imagine, is reverse engineering of what some guy did.
He didn't do this job.
He did it instinctually.
Most of the defining of the zones, he did that just by looking at the content.
So as I said at the very beginning, this is probably stuff that a lot of you are doing.
But it's just by adding that visualization layer, you can realize.
if you're doing your job correctly or not, and if there's stuff that's missing. So here, by doing this exercise and talking to the designer, we realized that that green zone could have been used a little bit more than just a general approach zone. Like we could have dropped in empty cages.
to warn the player that, hey, there might be dogs coming up or mangled beasts or civilians that had been mauled by the guards or like just those weaker guards again that are just like calling out and trying to find their lost dog or something like that, right? So you're just warning the player that these ingredients are coming without, once again, creating any form of conflict or any challenge area.
and then you get into the engine and you adapt. You need to actually build this thing, right? So as soon as the guy had planned it out, they spent about a week less on this document. Same thing for assassins. We don't spend that much time on the actual documentation phase. It's more to get your brain juices flowing. So they dropped it in, started building. This is the final set up. This is what it looks like. Now, one thing they noticed, I mentioned earlier on was that.
Covers are really, really, really shit when it comes to dogs because the dogs, they're lower, right?
And the player, as I said for the Bioshock example, you're used to aiming like at head level.
And so the dogs are so much lower, so you're actually aiming down, and that's really, really hard for the player to do.
If they're coming in a straight line, you have a chance.
You can actually track them and shoot them down, but if they're dodging and darting through geometry, that makes it super hard, because it's just something that enemies don't do normally.
So they ended up removing all the cover, and then more focusing on when you try and...
that central area, creating lanes that you can sort of dart into and then when the dog is coming at you, it's just a straight tunnel. It's actually just a shooting fish in a barrel almost. And once again, this is the only stuff they could realize once they got into the engine.
Now, what sucks about this method? I've been using this for ten years now. I'm well aware that it's not perfect. It really is a set of like a starting point. There's a whole bunch of things that like don't work so well about it.
really dependent on your block out. As I said at the beginning, if you don't have a block out, you can't do much with this. So you need to actually create content before you can start even thinking about applying this. Same thing for the game play ingredients. If you don't have a list of game play ingredients, you're a little bit screwed. You're going to get blank page syndrome. So I highly suggest getting some of that stuff out of the way before you start applying the method.
sorry. Like any documentation, it gets quickly outdated. I'm sure you've all worked on documents that nobody reads or that like if you look up your final documentation in comparison to the final game you created, like they don't match really, that's okay.
don't worry about that. That's actually a good thing. Documentation is not meant to be kept.
It's meant to be thrown away. It's mainly meant for your brain to get used to the idea and start playing around with shit. As soon as you have that, get into the engine and start building stuff. So this is actually, yes, it's a downside that's quickly outdated, but it's not the end of the world. However, There are interesting things that can be done. The firecracker team actually developed a thing internally where they call atlas. It's a visualization tool that keeps in sync with the engine. So any time you move around enemies or like any gameplay object, there's actually like a position that is known that is sent to the tool. So you can do your prep work in that tool, go into the engine, move things around, and then as soon as you move it around, it's updated to the actual file. So it's a way to sort of keep your document alive and living, but once again, don't rely too much on it. And in game is better. And finally, oops, sorry.
it's not 3D. That's the biggest problem with the tool. It's all 2D. So for the most part, like on AC and on far cry, it's not the end of the world because yes, the game is 3D, but it's not really. In ratio when you look at your world, everything is so spread out that the height difference does not match really the spread that you have on things. So the 2D method is not the end of the world. It actually functions in the state.
where it doesn't work as well is if you have a lot of verticality. So if you're like the towers in fallout, like all those really high sky rises that are networked in fallout, like you wouldn't be able to do this. You would lose a lot of that verticality info in there. The high rise section in sunset overdrive, that was the same thing. Everything is so high that you end up actually looking at your level more like on a profile view than on a top view. Or like...
anything like in space, right? Like if you're using star citizen where it's really 366 axis approach where you can approach it top, bottom, left, right, any direction, you can't apply this. This does not work for that. So...
Looking towards the future, I'd be curious about trying the 3D approach, so using a 3D mockup tool, so either SketchUp or 3DS Max. If you can do it in your engine simply by putting colored volumes and whatnot in there and creating really a 3D sphere as you get closer, obviously these are geometric shapes. Oftentimes when you look at triggers, you want to be able to make composite shapes that lead up towards it. But in the future, I'd like to try this using this type of approach.
And in conclusion, these are the steps that we went through for the approach. So starting with your top down, identifying your zones in there, listing ingredients that are complementary to your machine design, distributing the ingredients and then most importantly getting in the engine and actually building the thing. Thank you. That's it.
And now we'll take questions.
Hi, thanks for the talk. I really loved Prince of Persia, Assassin's Creed, Assassin's Creed 2, all those games, big fan.
I was wondering, as a level designer you're building gameplay on top of blockout architecture, and you're naturally drawn to the paths that architecture elicits from you.
And I was wondering, like, landmarks draw players towards them, bridges draw you underneath.
And I was wondering if you had any tips or tricks for that kind of 3D architecture stage of the level design.
So on that standpoint, usually what I try to go through is creating like a grid of landmarks that are like the main navigation points between objects. So like especially in things like in assassin's creed or even fallout where you're recreating a real environment. There are landmarks that you sort of expect to see. But if you're not doing that, a lot of the multiplayer games do it with landmarking certain regions of it and everything in between is more like the lanes that go in between them. So by creating those points of interest that you go from one point navigating to the other.
So if I'm any given point I can see a landmark or this is where I'm going to go. And then you end up creating a grid, right?
So when I was on assassins the general rule we had is on any given landmark, if I'm near one, I can see at least two other landmarks from that position that are going to be like 100 meters away. And that creates like my meta navigation method that I can just move from one point to the other.
That sounds great. Thank you.
all right and my question is so kind of especially with assassins creed where you kind of have these especially round environments usually in a city and you're usually kind of targeting one area of the city and there's a lot of these kind of side objectives and side missions. How do you how do you keep that interesting for the player when they're kind of intended to go from point A to point B but you're trying to keep them interested in moving around, kind of doing a lot of what sometimes can seem very repetitive.
to cut you off for a second. We're going to do a few more questions for Felipe's talk. But if you're here for the portfolio review and you have materials that you need to get on USB drive, Grant standing here behind the mic, he has a thumb drive that you can use to drop your files on to. We can get all that stuff prepared so we have minimum amount of bumps as we go into the lunchtime review.
So basically what we do for that is, so you have your main line structure view, right?
Like going from one main mission to the next main mission to the next mission, or even parts of a main mission to another one.
And those are going to be distributed throughout your city or your general game space.
and so good practice is actually have like a lot of distance between those so that the player is then navigating through your open world, your systemic environment, and then creating opportunities or just distributing opportunities in there for him to sort of pique his curiosity, right? So if I'm leaving here to there, then putting like a, like pick pocket challenge or a couple treasure chests on the way. And that creates like the first game I remember doing that is playing crackdown where I was going to mission objective and then seeing like those glowing orbs and then realizing two hours later that I was still on my way to that given objective, right? So it's good practice to do that. Just space things out so you give a chance to the player to actually experience your game world.
you. No problem. Thanks for the talk. First off I just had a quick question. What are your thoughts on, you know, as the port for an example, you'll maybe spend an hour or two in there outside of a mission and that will have an established structure to it that the player will learn.
what are your thoughts on subverting that structure for the sake of the narrative. If you have established zones and those aren't supported in the neutral structure, kind of changing that rule set and catching people off guard.
It's interesting.
For the most part, you don't want to change it too much because the player has gotten a bit of experience in your game space.
So you want them to have that advantage.
Because I've mastered this area, I now have a little bit of ownership onto it.
It's totally cool to have something that just changes the setup, so just to put them a little bit on ease.
As long as it's explainable, it makes sense that it happened.
So he understands why it happened.
It's different than what he went through earlier on.
So that's totally cool to do that.
I had another point on that one. Yeah, I completely forgot.
But no, like it's totally okay to actually flip stuff around.
Just make sure that, like, your engine supports it. Like, stuff that we try to do, like, switching things dynamically just is much harder to do in open world space because, like, there's, you know, geometry, nav mesh and whatnot to consider.
So it's the ‑‑ you have to deal with the technical difficulties about doing that.
Ideally what you want, though, and this is the hardest thing to do technically or memory wise, is that if there is a change in the world, you want to save that game state so that when you come back, like, there's memory of what the player did in there.
And so, like, one of the first ones I remember is, like, playing old GTA games where I had a mission and the whole building, like, went on fire.
so every time I came back to that area, I was driving my car and said, this is the building where shit blew up. So creating that memory space inside of your game is also pretty good practice. No problem.
I have a question about Assassin's Creed Black Flag. How exactly did you guys do the layout for the islands and like the distance in between islands to where you keep the player interested but you also give them a chance to just zone out for a bit while sailing?
So I didn't personally work on Black Flag so it's, I'm gonna guess.
but it's the same thing as what I was saying earlier on where like you create a discovery grid where you space out your main objectives between things and in between those objectives you want to distribute opportunities or points of interest on a fairly regular basis.
when I was on brotherhood our general rule was like you want to create opportunity points like every 50 meters on a grid.
And then black flag is probably bigger because especially in the naval stuff, your speed of travel is much bigger. So there's probably a correlation to be done with like amount of time I need to move before encountering something else as well as the mini map.
so making sure that you're teasing these opportunities on that mini map so that at any given point I have like two or three things that are there that can draw my attention. And don't go overboard because at some point it just becomes like icon stuff. No problem. Cool. All right. One more.
So, with open world, you kind of often have to reuse a lot of the same systems for people to understand what they're doing, which can often maybe lead to boredom, which is like irrepetitiveness.
And do you have any thoughts on how to balance the player knowing what they're doing versus being bored of it?
something I'm still struggling with in general. Trying to find the right formula to expose the player to these things.
Right now, I'm sort of like, there's a couple camps, right?
There's the camp where just give everything to the player and let him go at it, which is good.
I mean, it's an open world game, right?
Like, you want the player to have access as much of the content as you can.
However, the risk you have with that one is he can get familiar with a lot of it really, really quickly.
And you're left with no more cards in your deck.
So there's nothing you can surprise him with.
My current standpoint on that one is to just, yes, put a lot of cards on the table when you start, but keep at least half of your deck hidden so that as you progress throughout the game, as the player gets more skilled, you don't have to do it on a linear standpoint.
You can do it in branches.
all the stuff from the Skyrim games where you have the mage's guild, depending on how far they are in there you can start introducing new elements or new gameplay features in there. But I tend to want to hide some stuff that I can just gently expose as the player goes on. So you're always giving them surprises. A kind of follow-up question is when do you think if you have categories for missions very clearly set up like how you develop them?
do you think that can affect the repetition of things if you have them very clearly set up?
Like these are outpost missions, these are assassination missions with this. Do you think there might be a point of obfuscating that in development somehow?
I think like as long as you have enough tools to create variety on top of that, it's not a problem.
Because like patterns are good. Patterns are your friend.
Players like to see things that are like, oh, I know how to do this. But then inside of that this, inside of that content, so the now post, for instance, that's where you start playing with the ingredients I was mentioning earlier on and layering them to create surprise and differences. So play with the objective type, but having a couple like recurring game play objectives is actually a good thing. Thanks a lot. No problem. Cool. Thank you all.
