My name is Rich Wilson.
I'm the level design lead at Arcane Austin.
I'm here to talk about Mooncrash.
More specifically, the talk is about questioning dogma.
It's about sort of getting the opportunity to take something that you love and break it into pieces and then build something new with those pieces.
And without further ado, there we go, all right.
So the project, And this was a DLC for our core game, Prey, that we launched in 2017.
So the project was defined by the dynamic tension between three major forces that we were dealing with.
The motivation to do something different and a bit unorthodox to evolve our genre.
The preservation of the studio and design team's core values, as well as testing ourselves to see which of those were worth keeping.
And then adaptation to the new problems that we were going to get to solve as we incorporated all of the new ideas.
given the direction change from Prey to Mooncrash.
So to speak to that, a bit of a sort of digression, a quick summary of Prey and Mooncrash, just to make sure everyone's on the same page and kind of build a foundation.
So Prey was an immersive simulation.
It was kind of a hybrid first-person shooter RPG where you had basically alien abilities and science gadgets and tools and things like that to solve problems that came your way.
So it wasn't just about shooting your way from point A to point B.
There were guns, but they weren't the only way to solve problems.
It was set in this confined, but fully explorable space station orbiting the moon.
So you could travel anywhere within the station as well as without through zero-G travel and things like that.
This design was inspired in part by games like System Shock and the studio's own history with games like Arx Fatalis, which was also inspired by Ultima Underworld.
We use the term space dungeon colloquially within the studio to kind of express this idea.
The objective is to escape the station.
It's kind of a science fiction trope complete with this alien infestation of creatures called the Typhon.
But we added wrinkles to that so it wasn't as tropey, I guess.
So there's a psychological element to the game that makes the player kind of question their reality.
You start the game in this fake apartment.
And upon breaking your window to try to escape the apartment, you discover you're in this simulation, this sort of observational situation.
And for the rest of the game, you're kind of unable to trust your eyes.
There's a sort of pervasive sense of unease, basically, that permeates the game.
There's also this looming moral framework to the game where you have to weigh the fates of everyone on the station against the people on Earth, against your own life.
So it's this sort of immersive trolley problem.
with the player's hand on the lever the whole game, basically.
So next up is Mooncrash.
This was a DLC, again, expansion for the main game.
It's a mechanical extension of Prey, so it uses the same player mechanics as the core game.
Weapons, abilities, things like that.
First person, we didn't diverge too far in that regard.
The story was adjacent to the main game.
It wasn't really a prequel or a sequel.
It happened kind of alongside.
And it was set primarily within a simulation of a moon base owned by the same company that owned the space station from the original.
But the simulation gave us a lot of wiggle room to play with the sort of meta structure of the game.
And used a framing story for the narrative, the main narrative delivery, rather than moment to moment drama.
You're a hacker diving into the simulation, so your story is separated from the moment to moment game, basically.
One of the player's primary goals while in the simulation is to escape the moon base.
And this is part of a list of player directed goals that took the place of Prey's series of story based objectives.
And we'll talk more about this later as well.
The game uses a roguelike framework, which means death is incorporated as part of the core loop.
And there's a lot of variability between sessions, among other things.
I'm gonna use roguelike for simplicity's sake.
I know it's a very contested term, so don't add me on Twitter or anything.
And a quick rundown on immersive sims as well, I know most of you are probably well versed, but again, it's a wide ranging subgenre, so kind of make sure everyone's on the same page.
So immersive sims, they're a particular flavor of first person shooter, RPG hybrid, where we inject an extra level of simulation fidelity into the mix.
So it's somewhere between the depth of Dwarf Fortress, and the immediacy and spatial inhabitation of Wolfenstein.
So instead of a God's eye view and turn-based progression or whatever, you're actually inside the simulation, touching it with your hands.
So this means there might be simulated fire propagation instead of fire just being a damaged volume with a particle effect attached.
AI may have an organic awareness of the player and their surroundings, instead of magic knowledge of where the player is at all times.
And so that's sort of what separates these from other first-person shooters.
All right, so first up is the motivation section.
This is our first step in the path to developing Mooncrash.
And it's kind of set the tone for everything that followed.
We took some creative risks, given the smaller scope of the project.
We could have done something that was a standard story DLC extension.
We could have followed the main antagonist from the core game, Commander Dahl, and did like we did with Knife of Dunwall and Dishonored.
We could have even taken the moon base that we made the DLC out of and did a more story-based A to B kind of adventure there.
So this section is about why we did not do that.
So one reason was to grow outside of our domain.
So when you go from project to project in AAA, a lot of the times you're solving the exact same problems every time with very little in the way of innovation.
So are we gonna use lean this time?
What are we mapping jump to?
Are we using face buttons for the use?
Stuff like that, right?
This doesn't offer much in the way of creative growth.
You're solving problems in the same domain and you're not getting to stretch your legs any.
Sometimes this can even cause people to jump ship and go to other studios between projects and you're not really learning anything new.
So with Mooncrash, this meant a kind of a cross-genre exploration.
We explored some ideas for random level elements in Prey that ended up getting cut for Scope.
So we took that and leaned more heavily into that and brought some of that stuff back and more roguelike elements on board because it seemed like a natural extension of those ideas.
So once we made that decision, then we could look into the roguelike space.
and look at their problems and their solutions and things like that and learn from them basically.
Issues like respawning and persistence, difficulty escalation, character variety.
So games like Spelunky, Rogue Legacy and Risk of Rain, they were basically master classes in these other spheres of thought that we hadn't really explored yet.
And so why did we pick the roguelike genre specifically?
Part of it was design team bias.
A lot of us were playing some of these games at the time.
Risk of Rain, Darkest Dungeon, things like that.
A big part of it also is the kinship between the genres.
So roguelikes generally rely heavily on a player's internalization of systems.
They don't rely on rote memorization and they generally allow for expressive players and emergent situations.
And a lot of those core values really speak to what we do in Immersive Sims as well.
So there was a lot of overlap there.
So another thing we wanted to do was sort of deconstruct our genre.
So searching for these new problems to solve, it afforded us the opportunity to deconstruct our games and basically take the constituent parts and spread them all out and kind of evaluate them individually, right?
You know, we take for granted that the player can hack keypads or crawl through events or things like that.
So isolating these parts and then recontextualizing them and looking at them in a new light means we could ask ourselves why we use them and why we adopted them in the first place.
It's like moving, between houses and then you have this dog clock that your grandmother gave you and you can finally ask yourself why are you holding onto this thing.
It's a win in either case because you either get rid of baggage or you remind yourself why this thing was important to you and you keep it and take it along.
Some examples from Mooncrash, character skill trees for instance, this was something we had on the block and we're looking at and we decided to keep it and brought it over to Mooncrash.
A linear sort of beat by beat narrative.
That was something we examined and decided did not belong in the DLC, so we set it aside.
Another motivating factor was DLC being this sort of stable launch pad.
One of the cool things about a DLC project is that usually you're starting with this really extensive and refined tool set from the previous project.
And you've got studio expertise, assets, and the ability to prototype things really rapidly and extensively.
Your metrics and mechanics are also in place.
This is something you can't really take for granted because it's very valuable.
So even if you're planning to diverge a bit, this starting point can really be immense for prototyping and getting started.
These sort of pre-existing assets and engine and things like that act like a force multiplier for small teams, and DLC are usually small teams.
So as a motivating factor, again, this kind of leverage encourages us to kind of flex a bit and try something.
A good example of this as well is we had a game jam in between the main game and the DLC.
One purpose of this was to help the team blow off steam as people ramped off of the project and onto other things, or onto the next project, but another thing this served was as an incubator for ideas for the DLC.
So we had things like VFX laden basketball games complete with scoring mechanisms and jump pads.
We had this dance party involving the Typhon organisms.
We even had some things that made it into the DLC, like the tentacle grenade here and the mimic companions.
Both of those things actually made it fully into the DLC.
A lot of the content wasn't ultimately used for anything that shipped, but the exercise was really valuable.
A lot of the team members, they got to play with development tools they wouldn't normally use.
They got to kind of step outside of their box for a bit.
And it also helped motivate the team to try new things.
It was sort of engendering this spirit of exploration.
All right, so preserving what we do best and what we love about Immersive Sims was a big part of this project.
It was a big deal because on other projects, these values generally just tag along as a matter of course.
They're just something we take for granted.
But in this project, we were explicitly calling these things into question and sort of explicitly bringing these values along, the ones we thought worked and such.
We also didn't want to lose sight of what worked for us in pursuit of something new, but we didn't want to cling too tightly to dogma out of blind habit.
So there wasn't like a clean deconstruction phase that preceded actual development, but as we pared things down in meetings, we gradually got a more focused picture of the values that we wanted to preserve as we move forward.
So one worry early on was, especially from the design department, was that moving to a roguelike model would mean we were completely tossing Arkane's knack for world building and environmental storytelling out the window.
But this was one of the dogmas that we wanted to hang on to and because we explicitly sort of analyzed it and decided we wanted it, not just because it was something we always do.
So this survived the transition, remarkably intact actually.
A large part of this is because Arkane's emphasis is usually on player story.
So the bulk of our storytelling work also happens in the environment, like a lot of our prescriptive stories, environmental stuff.
And this worked really well with Mooncrash, because the game takes place in a defined fictional location and the main character's job was to find out what happened there, and so that pairs very well with environmental storytelling.
So speaking of values, quite a while back, Chris Crawford, he coined the term process intensity.
in describing what computers are better suited for versus what they aren't.
And you can see him here at GDC92, brandishing a sword as you do.
And this is what he said on the subject of process intensity.
I'll drink water while people read.
So the short version is that processors are more useful with game systems than they are with game content.
They're more useful with verbs than they are with nouns.
And this is what games can flaunt that other media can't, basically.
So immersive sims embody this concept pretty well, pretty heavily.
They pull content towards the process end of the spectrum, basically.
And we leveraged this more extensively in Mooncrash than we even did in Prey.
Part of this was a question of economics.
So if you look at more process intensive games, they've got a much higher consumption time to development time ratio.
If you look at something like Counter-Strike or Quake, for instance, the footprint of one of those levels, you get a lot more hours of gameplay out of one of those than a more linear narrative kind of game.
Consumption time's not a be all, end all of games.
I'm not preaching that by any means.
But I'm mainly talking about development economics and how we were able to leverage that.
There's a whole spectrum of experiences on the sort of process to content continuum, and that's fine.
Now process-intense games also respond more dynamically to player choice, which is a boon for agency, you know, the player's sense of having an impact on the game world.
There are multiple tiers of agency, and again, this is kind of a recap of Design 101, but low-level agency is stuff like footstep sounds, bullet impact effects, you know, the enemy's reacting to your presence.
sort of base level acknowledgement of your existence at all.
Then you've got high level agency, which is more narrative impact kind of stuff.
Dialogue options based off of the fates of characters or different endings to the game.
The lower level agency stuff is much more process intense, while the higher level stuff gets simpler and simpler on the process end, and more intense on the content end.
So the fate of the world can just be like a Boolean flag or an integer index that's checked by one script node at the end.
on the content and you're gonna have to author four different cut scenes with voice acting and things like that, right?
So in Mooncrash we didn't retain Prey's sense of higher level player agency.
That was something we set aside.
You can't really affect the ending of the game.
There aren't any conditional blocks of dialogue based on your actions or anything like that.
Because monolithic moment to moment story doesn't play as big a role in that game.
It was all intentional.
What we did double down on, however, was the lower level agency and a sort of sense of intentionality.
in the player.
So, again, speaking of sort of core values, right?
As I mentioned earlier, one handy overlap between roguelikes and immersive sims, and one of our core values, our core values are a bias towards systems.
So the drama and gameplay with both generally relies on novel situations emerging from the interactions of systems, rather than hand-scripted cinematic scenes.
You know, the player's story is paramount in these games.
So a quick example of systemic design, and again this is kind of 101.
So let's say there's an ice wall in the game blocking the player's path and the player has to get past it to progress through the game, right?
The, there we go, the non-systemic approach might be to have a variable that's tied to the player picking up a specific item in the game.
and then there's a trigger in front of the wall, and when the player enters that trigger, it checks that value, says yes or no or whatever, plays some VFX, Steam, plays an animation as the ice melts away, things like that, right?
This is really rigid, it's a rigid relationship, there's a very lock and key kind of thing going on here, they're not very flexible.
So in immersive sims, you start with the concept of heat.
This abstract concept, heat is a signal that can be passed between objects.
And in that case, anything in the world can emit and respond to heat, and so we say, okay, the torch is a thing that emits heat.
The wall is something that can respond to heat.
And so now, when you get close to the ice wall with the torch, you can say, okay, the ice wall responds to that by melting.
You can do the same animation in VFX, as in the non-systemic version.
But now you've got these systems that can more dynamically play off of one another and potentially produce novel and player-driven results and provide plenty of novel scenarios for the QA department in the process.
So when I say player-driven, this means the player's conceiving of ways to solve the problem rather than reading the designer's mind.
And that's kind of key to our, again, our values, the things we want to preserve between projects.
This also means that in most immersive sims, the torch won't be the only way to bypass the blockage.
There's no real point in having a novel simulation-based system if you're only gonna have one way to solve a problem.
But now that you've got heat, now that anything in the world can generate heat, you can have any kind of heat sources.
You can have a barrel explode next to the wall and melt it.
You can have a dragon that breathes fire at you and you dodge out of the way.
You can have Channing Tatum dance next to the wall and melt it.
So any kind of thing you want that generates heat.
Also this means the torch can also go and live a life of its own as a generic heat source so it can cook food items, it can spread through grass, it can burn enemies, etc.
So systemic design ties back into agency because a player with an expressive set of tools like this in a consistently responsive world can genuinely have an impact on that world.
The consistent rules give the player a sense of intentionality, and so that means they can make informed decisions.
And the emergent nature of the game can provide surprises and novel results so things don't get too stale or predictable, and it's kind of a balancing act, right?
Like making sure things are interesting enough but also predictable enough, and you have to have kind of found the sweet spot there.
So one example of systemic design in Mooncrash is the player learns there are these devices called Typhon gates, and they block your passage if there are enemies nearby.
So you can see the gate there, and it tracks how many enemies are close and all that stuff.
There's an enemy called the Moonshark that patrols and levels underground.
It's blind, so it chases whatever vibrations it can sense in the soil.
And it's also massive and really hard to kill, so the player is disinclined.
from engaging with the thing.
So we wanna avoid confrontations, especially in the beginning when the player's weak.
So you have a situation where the Moonshark is near the Typhon Gate, and how does the player get past the gate, right?
So the player can put all of these kind of elements together and decide, okay, I'll throw a projectile really far away.
The Moonshark will sense that, it will go chase it.
The Typhon Gate will drop, I get to pass through.
And that was all the player's sort of, generation of the idea, not us saying, well this is exactly what you have to do.
We'll tutorialize it and we'll step you through all the processes, right?
This was sort of a bottom-up kind of solution on the player's part.
One metric we use for game objects at Arkane is how many systems interact with them.
So the Typhon gates, for instance, interact with the AI ecosystem, like in the example here.
But they also interact with player progression.
So if you get too many alien upgrades, the things will actually lock down when you're nearby.
They interact with the EMP system, so much like the heat stimulus that I mentioned earlier, EMP is also a stimulus in our game, so you can use any kind of like stun guns or exploding batteries or things like that to take them down.
Player powers also interact with these things, so the player can burrow beneath or use an EMP power as well.
And this is similar to the thought processes behind things like the walls of light and Dishonored and so forth.
But it may look at first like there are a thousand different ways to get around these things.
But the truth is, in the beginning, the player only has a handful of these tools, like one, maybe two tops in the beginning.
And then as they gradually progress over the game, they get more and more tools to get past the things.
So there's this sort of organic process where by the time the player would be getting frustrated and tired of dealing with Typhon gates, they have all these expressive tools to get past Typhon gates.
And so it's a problem that kind of actually takes care of itself over time, and it's this interesting relationship.
So why do we make these things?
Again, looking at our values, looking at moving forward, why do we want to keep this stuff around?
Immersive sims can be a sea of chaos.
Systems interact in unpredictable ways.
Organic AI awareness means you can put a basket over someone's head and then rob them blind.
If you get too close to a quest giver and you have a torch and they have a broom, maybe their broom catches on fire and then they freak out and attack you or something like that, right?
You go to pick up a key card and you kick it into a lake, tons of things, right?
But when you have this terrarium of systems that interact in these internally consistent ways, these things begin to take on a life of their own.
Instead of depicting something that happened to a player, you're actually building a microcosmic reality.
And the players that these games attract end up falling in love with them because of that sort of internally, I don't know, the sort of small world you're building.
So a large part of Mooncrash was taking these new mechanics, these sort of roguelike ideas and things like that, and adapting everything to this hybrid that we were creating.
A lot of things we took for granted, we now had to figure out how to work with new ideas.
So one of the big things were playable characters.
And this is one of the systems we debated most on the project.
Some versions we had one playable character we were gonna have that could be retooled in a lot of ways.
Some versions on the drawing board, we had dozens of variants in the character that were, there was no real narrative veneer to them.
They were just kind of buckets of mechanics.
And we settled on what I think ended up working best for our game and our studio.
The characters had names and faces, they had personalities and backstories.
And this worked really well with our traditional storytelling methods.
We could put a lot into the backstory and then let the abilities kind of speak for the characters, right?
And let the player speak through that.
So we took the all-encompassing Morgan and broke it into pieces.
And then we looked for themes and play styles in those pieces.
And there were some that kind of naturally clumped together in this process.
And there were many different configurations that we ended up settling on the five that you see there.
So yeah, we looked for themes and play styles in those clumps.
So you might have more of a tank character, someone's more of a space wizard kind of guy, someone's more tech-inclined.
And so from those templates, character traits emerged and we wrote personalities to go with those.
So the tank becomes VJ, the engineer becomes Joan, et cetera.
And this approach yielded some really cool results that ended up solving some problems that we deal with in immersive sims without that being the intention going into it, right?
So first we lost the sort of choice paralysis you can get when you get a massive skill tree presented to the player like right off the bat.
Each character was focused so the player could make informed decisions.
You know, this character's about dealing damage, so here are my options to do that, right?
And all the smaller trees, they had enough wiggle room within them for the player to choose their style, but they were all heavily themed so the player was making informed decisions.
And this is an example of the Morgan overwhelming suite of powers, by the way.
So there was very little overlap in these skills as well so they could compliment one another.
So maybe one, you know, only Claire, for instance, had hacking.
So she could go open doors and then other characters could come in subsequent runs and go through those doors.
Vijay was combat centered so he could go clear an area of enemies and you come back as another character and have a bit of a reprieve.
So second, since all these characters are mandatory at some point or another in the campaign, we have the potential for pushing the player outside of their comfort zones.
You know, through the sort of focus skill sets of each one.
One thing about RPGs and immersive sims is players tend to gravitate towards a style.
Game after game after game, like I'm the sneaky person, I'm the gun haver, I'm the whatever, right?
But by pushing other templates in front of the player, we can make them see the game from different angles.
And I think that's very valuable.
It can be a double-edged sword, because some players don't want to step outside their comfort zone.
It's comfortable.
But I think everything was under a small enough umbrella in our game that it worked out okay.
Yeah, we weren't making anyone do match three games or cart race or something as part of their character's skill sets.
Third, so by playing characters with a set of affinities, you get out of what I call guilt-driven gameplay.
This is the thing I really liked about Heat Signature from Tom Francis.
You get these characters that are already leaning in a direction, so they have a temperament and the associated tools.
to go in a certain direction, right?
So with Dishonored or Deus Ex, you can end up playing the whole game in a very narrow fashion because, like in my head, Corvo doesn't kill people.
In my head, JC Ditton is never seen by anybody, right?
So you kind of self-impose these limitations and that can be, that's fine, right?
But you can end up playing.
in a sort of self-flagellating way, where you're like, okay, I was seen by somebody, I'm gonna reload my save.
I accidentally killed somebody because they slid down a hill into the river.
I'm gonna reload my save, right?
Even if the game isn't technically saying you failed, you're, again, you're imposing that on yourself, and you end up hating the game in the process sometimes.
So when you're given a variety of characters, you can break out of that prison for a bit, because okay, this person is already kind of chaotic, this person is already very violent, and I can do that through them without sullying Corvo's good name or something like that, right?
Some of the best experiences in Dishonored came when players would fail their sneaky approach and then have to sort of improvise in the messy aftermath, playing like a rat-infested jazz in the process.
Those experiences were completely negated, again, when the player would just stop and reload.
This also combats ambient anxiety built up from fear of missing out.
If you're wondering, oh, well, that whole other skill tree over there, I'll never get to do, I wonder what it's like.
Or some players are like, okay, I'll play that, and I'll do my second playthrough with that tree or something like that, and then they never get to it because they've got a Steam backlog of 500 games or something.
So one of the first things we had to decide after choosing to go roguelike with Mooncrush was a model of persistence to use in the characters specifically.
Traditionally, in our games, death means you have to go back to the last checkpoint and try again.
Death is outside of the core loop.
It's outside, basically.
In roguelikes, however, death is an expected and integrated part of the experience instead of an interruption to that experience.
Now there are loops, basically.
So to adapt to this new model.
We had to decide if we wanted the player to retain some semblance of progress between runs or if we wanted to completely wipe the slate clean.
And then what kind of metastructure we wanted to use to hold the whole thing together in the process.
So we looked at Spelunky and Rogue Legacy as our sort of go-to examples of two different models, two different schools of thought.
So Spelunky is this kind of pure expression of replay.
You start on the same footing every single time with the exception of shortcuts, which don't really count.
you get this sort of stateless, timeless feeling to the game.
It's like checkers or chess or something like that, right?
Other thing that changes over time is the player's skill level and the game itself is this immutable thing.
And also due to the random generation of the levels, you're learning how the systems interlock instead of memorizing a layout, you're learning a language rather than memorizing a piece of music.
Rogue Legacy, on the other hand, has a progression system that persists between your trips to the castle.
So you're not mechanically expected to be able to beat the game until many runs in.
Some people do it, but they're outliers.
But every death, you get to bring experience points and gold and things back to give you this sort of incremental advancement to push you over slumps in progress.
It's a really effective negative feedback system that also keeps you playing in light of defeat.
And so ultimately, we settled on the latter model, the Rogue Legacy model, mainly because, for one, the character progression in Rogue Legacy mapped really well to what we were already doing with character skill trees in Prey.
And character skill trees are something that generally play best over multiple sessions.
We had this one model that we entertained where you would have the skill tree but it would reset every single time.
But that ended up being way too tedious in our heads of having to spin those points every single time you get killed or something.
And we also eventually decided we wanted to have an overarching story to narratively tie this game to the franchise.
And that worked best with a sense of progression doled out over multiple sessions rather than one sort of stateless experience like Spelunky.
Oh, there we go.
So the next question is what do we want to persist in the world?
So you've got character progression and world progression and state, basically, you have to kind of keep track of.
So we wanted to keep a sense of agency in the game.
You know, the player having some kind of lasting impact on the world, but we also kind of wanted to have our cake and eat it too.
We wanted, you know, the sort of fresh start of a roguelike where you can try new things without the baggage of previous mistakes.
And we knew we'd have to reset the world at some points to make the escapes challenging and repopulate monsters and things like that.
So we introduced the concept of resetting the simulation, again, to sort of have both.
The conceit is that everything in the world persists until all five of your, or however many characters you have, until they're all dead or have escaped.
and then things are reset.
So each character gets one life, basically.
So for instance, Joan might make her way into the shuttle and escapes, and now she's no longer playable for the rest of that run of the simulation.
Then the player picks up Vijay and goes and dies in the middle of the crater to the moon shark, and he's no longer available, and now there's like a phantom with his name on it carrying all of his stuff.
I'll talk more about that later.
So then the player comes back in as Claire, and she can either go fight the VJ phantom, or she can go try to make an escape, or whatever, and so on until everyone's dead or has escaped.
So doing this meant we got the roguelike consequences of permadeath, sort of, as well as the ability to have interplay between the characters and a meaningful player impact on the world.
That, and we'll talk about this in a second, actually.
Maybe the next slide.
Yeah, so this adaptation ended up as a happy compromise between the new and the old.
So yeah, speaking to that, you get this concept of an afterlife when you do this, the sort of persistence in the world.
It's a legacy you're leaving for yourself.
We really like the idea of the player sort of playing a co-op game with themselves in a way.
And this adds a layer to the emergent nature of these kinds of games as well.
So if you get interesting combinations based on the abilities and equipment of one player, you can only imagine what you can string together if that player can leave stuff for another player, another character.
So one character might be on their way to an escape route, but they've got a lot of cool weapons and gadgets and things like that, so if they escape with it, then it's all gone, but instead they can leave it in a chest for the other character to come through and grab.
Or if you skirt around an enemy encounter as one character, those enemies will still be there for the next character, so you have to think a few moves ahead, basically.
And lastly, as I mentioned earlier, we added this wrinkle where characters that die come back as phantoms for other characters to deal with.
So if you die with a lot of cool stuff, you'll have to fight a monster with that cool stuff to get it back.
It's much more interesting, or it was more interesting to us than just picking your crap up off the ground, basically.
It adds this sort of dynamic piece to the board that you now have to deal with because of your ineptitude in a previous run.
All right, so let's look at replay and game length.
So this is a diagram.
of a narrative-driven linear AAA game.
I guess it doesn't have to be AAA, but a narrative-driven linear game.
The dollar bills here represent budget allocation in an abstract sense.
So this can be cut scenes, character interactions, weapon pickups, entire levels, whatever.
It's abstract, right?
And this is the player's path through that game, right?
You can see most of the dollars over the 15 to 20 hours have been hoovered up by the player.
because it's all kind of laid out in a nice row in front of them.
Then if you look at the budgets on Immersive Sims, this is more like what you get with those games, right?
Those are the same number of dollars, but it's all over the place.
And this represents things like branches and dialogue, or mutually exclusive quests, or large levels that are non-linear and the player can just beeline through and miss everything.
Stuff like that, right?
And so this is a single playthrough, a hypothetical single playthrough.
There are a lot of diehards that will eat all the content in these games, but they're outliers.
This is more like the average kind of playthrough in one of these spaces, right?
So you can see a lot of dollars are missed here.
This is not a value judgment.
Again, I wholeheartedly believe in this sort of model.
I think there's an intangible quality you get from doing this kind of thing that you can't.
that you can't really quantify that justifies the spread like that.
So here's an example of multiple paths through our hypothetical immersive sim.
So you can see different players, they have vastly different experiences here.
Some don't even finish it.
But if they only play through one time, then maybe they don't know there were choices.
They don't see the breadth of the whole thing through their single play through.
So we looked at this phenomenon going into Mooncrash and the effect it has on the player's sense of agency and choice and outcomes.
So if you've got a game that's 15 hours long and there are choices to be made in the beginning or the middle or wherever, actually, by the time the player finishes the game and comes back to those choices, it's possible they won't even remember what they did the first time around or what the outcome was.
And this is assuming they even knew there was a choice happening at all, assumes that the player finished in the first place and didn't just move on to another game.
If you've got a shorter game, players are more likely to remember those choices in the short time it takes for them to get back to the choice.
And they're also more likely to play the game multiple times to experiment with different outcomes.
Additionally, there's a phenomenon we discovered with player choice in games when we were playtesting Dishonored with people is that if the choice is too subtle and organic, players don't know they even made one.
And this can be really great for immersion, again, I'm not saying you shouldn't do this, but it's a phenomenon that we noticed.
We did a play test with the first hour of the game with some people, and everyone at the end were like, yeah, we played this, and it's a pretty linear experience, I went and killed this person, or infiltrated this place, or whatever, and then the person next to them would turn around and be like, you met who?
You went where?
And then when they compared notes, they could see the breadth of the space, but only then, because everything was so organic.
it was all based on their sort of moving through the space instead of a hard choice, like a big left or right, or A or B, or something like that.
So to address all these kind of ideas in Mooncrash, we adapted the more roguelike approach, and so we wanted to shorten the replay loops for starters.
A single pass through the campaign would actually involve several passes through the content, several loops through the content.
And by a pass through the content I mean like traveling through a few different levels to do an escape Or completing a story mission or maybe just dying as the result of a plan gone wrong And this results in the player seeing a large percentage of the game and developing a familiarity with the world One problem this model can cause, however, and you can probably guess from the diagram here, is boredom from repetition.
You see everything is kind of branching off of that one root, so that one section of the game is gonna get very stale very fast, it's the alarm clock from Groundhog Day, basically, over and over again.
So to address that, oh, this is the same diagram, more accurate, with loops and dotted lines and stuff, but this is a lot to swallow, so, yeah.
So to counter this, we had multiple starting locations in the game.
So when a new character started, they would start in a different location than the previous character.
But they would be in the same level that they had died in as that previous character, or escaped in.
Part of this was purely logistics.
We wanted to negate load times as much as possible, especially when you're doing loopy stuff.
Load times can really kill the game.
But also it had the side effect of keeping the player moving forward because they could basically start really close to the kind of scattered remains of their last run if they had failed.
so they'd pick up and know exactly where they needed to go.
It's worth noting that this concept can be taken too far as well.
Some of our earlier models, we had the player start in any level, in any location, all these random spots basically, but it got really disorienting really fast, and the players wouldn't, it would take them a while to get back into the context of what they needed to be doing and where to go and stuff.
So even with these varying spawns though, you're gonna have the potential for boredom due to overexposure to the same content.
Let's talk about that.
So earlier I mentioned how systemic design and focusing on process intensity helps lengthen the experience for the player.
You get more output for your input as a developer.
The dark side of this can be a game that keeps the player playing even when the novel experiences have run dry.
We dipped our toes into random content shuffling in generations, so this topic became very relevant to us.
The concept of infinite content, it can be a facade over an endless grind, basically.
You know, by the time your game stops having something new to show the player, it should make a graceful exit instead of trying to compel them to stick around.
This isn't always an obvious choice as a developer either.
There can be a lot of times where you're like, oh yeah, I can easily generate another three hours of game here for the player just by doing this one little thing, right?
The players want more game, right?
Have some more pancakes, player.
So there's not always malevolence behind this.
So instead of focusing on the amount of variability we were offering, we started filtering for meaningful variability.
So what could we offer that was different from session to session in a tangibly meaningful way?
So in this straw man example above, I could say TV static offers the viewer hundreds of unique images every minute.
It's ridiculously exaggerated, but.
It sort of speaks to this one exaggerated extension, or this one approach.
It's very scalable, basically.
But the thing about TV static is not only are the images individually meaningless to the viewer, they're also individual, or sorry, they're meaninglessly different from one another, from frame to frame, basically.
A more gamey example might be a dungeon that's randomized, but you're only changing the color of the tiles on the floor or something like that.
The opposite of the spectrum.
is to handcraft everything individually and that doesn't scale very well at all.
So in Mooncrash, one of the ways we tackled this was through what we called hazard channels.
So we took each of the four environments, the four levels, and we layered on top of them five different hazard states.
So you've got fire, radiation, flooding, the power can be out, you can be oxygen deprived, right?
Some of these had to be offered.
You can see like the fire, for instance, requires VFX and mesh alterations and things like that.
Radiation and flooding also need custom geo, but.
We authored these all in chunks, so then they could be mixed and matched.
So any one particular level that was on fire could have five different versions of being on fire with different rooms being affected and things like that.
Yeah, so these states could then be layered on top of each other in different combinations as well.
So you could have fire and radiation, you could have the power be out and it could be on fire, things like that.
Some of these were mutually exclusive, so if there was no oxygen in a level, then it couldn't be on fire.
And then some modified each other, so.
Normally if there's flooding, then you have electrical hazards, but if the power was out, then you had flooding without the electrical hazards and things like that.
So you had these interesting sort of combinations.
What this gave us was really strong.
So the combination of channels gave us a lot of outputs over a few inputs.
And that was especially given the fact that it was a DLC team, small, you know, small scrappy team.
The spaces could be recontextualized meaningfully for the player.
So, you know, the staircase that you see here is normally perfectly fine, you can walk up it and there's no problem, but when it's on fire, now you have to decide if you want to find another way around or use your player tools or things like that.
The spaces also look dramatically different in subsequent visits while remaining recognizable.
So this means you get visual interest over time, but since we're not randomizing the layout of the level, you can actually learn these spaces.
So the staircase will always be the staircase, but now it's different tactically and visually.
Also, power outages cause, there's a tram that connects levels, and so power outages can cause it to malfunction.
So it overhauls the topography of the game every time, basically, so you have to decide which levels, or you have to learn which levels are connected to each other.
So your approach from level A to B might be completely different in subsequent visits.
And so this is the same staircase, without the fire, for instance.
You can see here, whoop, did I skip?
Yeah, okay, here's some just brief examples of flooded and electrical, normal, radiation, et cetera.
Oh, and this is, yeah, without fire, with fire.
And so we worked a lot with the granularity and frequency of the random elements within the levels.
We found that if every level had a little bit of everything in it, it was what I call the chopped salad effect.
Basically, you've got a lot of ingredients in the salad, but every bite tastes the same as the last one.
The same thing with the levels.
Your net sort of impression going from level one to level two here is gonna be the same.
These two levels are almost 100% different from one another, but like the TV static, they're not meaningfully different from one another.
So what we ended up doing was sort of consolidating and clumping.
these random elements.
So now you've got one that's primarily fire and one that's primarily radiation.
And so your net impression from going from one to the other is very palpable, basically.
And then, let's see.
Yeah, this also works temporally as well as spatially.
So when you revisit these levels subsequent times and subsequent resets of the simulation, you get again a very different impression each time you visit it, instead of the sort of samey kind of chopped salad effect.
And this also was echoed in our enemy encounter design and several other random elements that we did over the course of the game.
Here's an actual level layout with the same concept applied.
Chopped up version and.
the more consolidated version.
Another way to add variety to the game was the corruption meter.
So this kept the player from just kind of hanging out in the game and pushed them to accomplish their goals.
We ratcheted up the difficulty during the time they spend in the simulation and we culminate in a forced reset after the sort of corruption meter hits level five.
This was inspired partly by Risk of Rain's difficulty system, as well as the ghost in Spelunky.
We liked how it makes the player choose between kind of taking their time to gather resources and sort of pushing them forward to accomplish their goals.
It also adds a layer of variability to the experience because further down the corruption meter you get different encounters with enemies and things like that.
This was one of the more contentious adaptations we made, honestly.
A lot of people thought it kind of undercut the exploratory nature of our games.
We mitigated it some with these items that you can get that reset the clock or wind it back some.
But at the end of the day, it was something that some people didn't like.
It was an intentional design decision and yeah.
One of the larger departures from Prey was the concept of narrative progression in Mooncrash.
So the game primarily consists of a series of orders from the main character's employer.
The larger.
the percent of items checked off the list, the farther along the framing story progresses, basically.
But the player can take these things in any order.
There are some that have a sort of dependency chain, but otherwise you can take them in whatever order you want.
The actual items are more than just fetch questy stuff as well, some of them are entire story missions or elaborate escape methods or things like that.
The point of it is to allow the player to proceed at their own pace.
and in the order that they choose.
This opens the door for different strategies as well and caters to different play styles.
So some players might want to save big stuff for last or focus on one character at a time or go on a collecting spree or things like that.
This is also a win for us because we could decouple the player's actions.
from the prescribed narrative thrust of the game.
We didn't have to deal with problems like, well, what if the player goes over here and gets this thing before they find this other thing?
Or once they've done X, what is their motivation to then proceed to Y?
That was a big deal on Prey because the entire game was this sort of continuous string of cause and effect.
But this sort of unasked those questions.
And here you can see a brief example of the elements that change over time as the player finishes items from the list.
So you get more hazards introduced to the simulation, the corruption meter gets faster over time, the player's mastery of the space is basically tested more and more the further along they get to the end of the campaign.
Finally, the escapes.
So yeah, one of the first drafts of Mooncrash was basically reusing Talos from the core game and just adding, like opening the whole thing up and adding random escape methods to it.
Partly inspired by this game called Monstrum where you're on this freight ship escaping an alien, or sorry, a monster that's escaped and is with you.
So the Talos version was a much lighter weight version of what we ended up doing within Mooncrash, but the overarching concept of this sort of escape, the randomized escape remained interesting to us.
So the base in Mooncrash has five different ways to escape.
Each one is mechanically and thematically different from the other.
So there are a few examples.
One is a shuttle that requires a character to install a piloting skill, but you have to find the random location of the last person to install that skill using the personnel locating system, basically.
And then that skill persists for whatever character installs it, so that person can now use that escape method once they've got that skill.
One of them is a cargo container you can stow away in and get blasted by rail gun to Earth, basically.
But first you've got a scavenge for a randomized list of supplies, basically, so you can survive the trip to Earth.
One of them is an experimental portal, but you need hacking and repair, which are separated into two different characters.
So those two characters have to work together to enable this escape method to even function.
So these differences kept the game interesting by varying up the types of tasks between the escapes.
In addition to all the other world variables that you have to deal with in a given session.
The differences also add very deliberate choices for the player, so maybe Joan has the piloting skill installed from a previous escape, but you need to use her for half of the portal before sending her off in the shuttle or something.
Maybe you found some supplies for the crate as Riley, but the only way you can use the brain upload escape is with her.
So you have to find somewhere to stash those supplies.
You know, there are lots of choices, basically, the player has to kind of think up or deal with.
And not only do you have to decide which escape route is the most opportune for the character you're currently playing, but you have to consider characters down the line.
And again, none of this is prescriptive.
This is all up to the player to determine the best strategy.
We don't say you have to do this in this order or whatever.
So the most elaborate list item is the five-person escape.
You have to escape in all five different escape routes with all five characters in one run.
without the simulation resetting.
We wanted to incorporate this because it turns the game into this puzzle box, basically, where you have to consider things like the strengths of the characters, the complexity of the escapes, and the order that you want to perform them in, and the corruption meter because, again, the difficulty is ratcheting up over time.
So then the player has to weigh things like should I get an easy escape like the escape pods out of the way early or save it for later because I'll need an easy win, or I could escape with this character right now but they could do things.
in the world to help other characters with other escapes down the line.
Now the speedrunning community has eliminated the optimal path by this point, but for regular players, for regular human beings, there are a lot of interesting variables to sort out, in combination with actually playing the moment-to-moment game.
So you've got the planning phase and the execution, strategy and tactics kind of playing with each other there.
All right, so in conclusion, so in retooling Prey to make Mooncrash, we were looking for what might be next for immersive sims.
Originally I wanted to have immersive simulations are dead or something dramatic here, but I don't think that's the case, and it's kind of hyperbolic anyway.
Immersive sims are not dead.
I think the monolithic vent crawler we're all familiar with is no longer the only expression of immersive simulation.
I think the regimented model is dead, and in its wake are all these really amazing possibilities.
You've got things like a lot of indie projects experimenting with the form, and adding their own systemic wrinkles to the mix.
A lot of mainstream games are also adapting more and more of the simulation-driven elements into their mechanics suites.
Our big takeaway from this project was that you should be willing to break from tradition if you're given the opportunity.
DLC is a really great, fertile ground for that.
And even if you're not happy with the results, and your studio's still open, you can always bring some of those lessons back to your core projects the next time around.
Also, don't be timid looking at other genres for inspiration.
We didn't quite go as wide as cart racing or collectible card games or something, but there were enough different elements and problems and roguelikes that resulted in this really unorthodox kind of hybrid at the end of the day.
It was one of the most engaging projects I think I've worked on, and I don't, I think at the end of the day that Mooncrash is the future of immersive sims, but I think it is a future of immersive sims.
Special thanks to everyone on this big list.
I didn't come up with all these cool design ideas.
There was a design team that we collaborated with at Arkane that came up with a lot of cool ideas.
Special thanks to Clint for mentoring me and everyone that sat through my talk.
And yeah, any questions?
I think there are two microphones.
Hi there.
I think I noticed you said one run takes about one to two hours.
Does that mean completing five runs in that kind of simulator, for each character to each escape is about five to ten hours?
All total, I think the game ends up, I think it ended up longer than Prey.
Honestly, any given run can take an hour or two, a couple of hours.
And also, that was like the branchy thing was kind of a simplified example.
So I think there were probably like 15 to 21 to two hour runs in the game, something like that.
And the corruption meter, does it reset on a failure?
Or is it persistent across runs and it kind of keeps on ratcheting it up?
So when the simulation resets, the corruption meter also resets.
So it's not like a positive feedback thing.
So you do get a reprieve basically, it starts over.
Okay, thank you.
Yeah, yes.
First of all, I want to thank you for the talk and just working on this amazing, some of my most favorite games of all time.
A few questions about both the time you took for the game jam itself and the time you spent on the prototyping and just how big was the team working on the game?
The team, I don't know if I can actually technically speak to team size, but it was about half of what we had on Prey basically.
And the game jam was about a work week of time, maybe two, something like that.
And we managed to churn out some stuff really quickly, like again, having that leverage of the existing platform and the existing engine was really, yeah, a lot of leverage there.
Thanks.
Yes.
So when a player discovers some emergent gameplay that lets them solve a problem in an immersive sim and makes it very easy for them to complete something, How do you make the decision between this is a glitch, this is an exploit, let's get rid of it in our design, and this is working as intended, they've discovered a wonderful novel solution to something.
Do you ever get that kind of decision to make, and how do you make it?
Lots.
In general, we err on the side of saying yes to the player.
Usually, if a bug crops up and it prohibits a well-meaning player from finishing the game, then we'll spend our time and focus on that.
But if some clever player comes up with a way to subvert, things, then let them have it.
You know, as long as it doesn't completely, like, break everything, we generally let them, let them get away with whatever.
Yeah, thanks.
Yes?
When doing the design for Mooncrash, was there anything you expected to be able to carry over from the single player that wound up not quite working, besides the obvious?
Like anything you really wanted to get in, but couldn't quite make work?
I think if we had a bigger budget, each of the characters have their own story missions, and so if we had the budget I think it would have been cool to do a complete redecoration of the moon base for each player's individual vignette, and have characters walking around and stuff like that.
That was the one thing that I would have liked to do if we had a bigger budget, I think.
Yes, so you were talking about how low level agency, or low level agency like kill or not kill, seen or be seen, can vary with these new and varying characters in their play styles they present.
Is it possible that if you were to expand that to more high level agency, like changing up narrative or dialogue choices based on these individual personalities like I'm the crazy guy, I'll pick the crazy dialogue option?
more than just the more natural, neutral response.
That's definitely something you can do.
It's, again, it's much more content intense and you need a much bigger team to support that kind of thing, I think.
But yeah, it's definitely something you could entertain.
Thank you.
Yes.
I have two questions.
Why did you, what was the idea behind making the corruption meter happen at the very start of the game rather than 25% of the way through with progression?
And also, did you guys have any mechanisms for helping struggling players who were failing over and over again?
So the first question was about the corruption meter?
Yes, and like why it was at the very start of the game when you first played in your first playthrough, it existed rather than when you've done a few of the escapes?
It actually only kicks in, I think, after the first escape, but it's very early on because we wanted to get a lot of play with that system, basically indoctrinate the players like right off the bat, like this is what the game is about.
dealing with this sort of, among other things, dealing with this corruption meter and things like that.
And what was the other question again?
Sorry.
The other question was about if a player was failing over and over again, did they have any, were there any mechanisms to help them?
Yes, so we had this currency called simulation points, sort of like the experience points in Rogue Legacy or something, you accumulate those over time and you can spend them on gadgets and upgrades and blueprints and things like that.
So you can give yourself more gear going in the next time to sort of get over the hump.
Gotcha, cool, thank you.
Hi, another question about the corruption meter.
Like when I was playing Mooncrash, I feel like the corruption meter give me too much pressure and I have no time to read the notes and books in the game.
And a lot of friends of me say the same thing.
So I'm just wondering why there's no easier mode in the Mooncrash to let player enjoy, to explore the environment and to read books and like that.
Primarily about scope, honestly.
If we had more time, there might have been a mode where you could explore more.
One thing we were kind of banking on was the player will be through this area like half a dozen to a dozen times so then they can read that book the fifth time they come through.
But primarily a scope issue, honestly.
If you look at the book on Spelunky and stuff, he talks about having a staunch difficulty model and don't diverge from that and stuff.
But I think we would have probably, yeah, if we had more time, development time, we would have.
So if there's more time, it would be better to add such easier mode in Mooncrash, is that right?
Yeah, I think so.
I think if I recall correctly, like when the Mooncrash is updated, there's also a new update for the core game that is a relaxed mode or something like that.
There was an easier mode for the core game for sure.
Yeah, so that's why I'm wondering why there's no easier mode for the Mooncrash.
Yeah, it's primarily just development economics.
Okay, thank you.
Yes?
Yeah, I guess I had a, oh, first of all, I want to say the Easter egg in the static was really, really cool.
The other thing is, it kind of plays on the previous question.
I'm wondering what you think the impact was of losing, a lot of times in immersive sims, I think particularly for perhaps less skilled players, that kind of die, back to the quick save, try again loop helps people kind of figure out the possibility space and makes encounters quite a lot easier.
Did you find that you were cutting out a chunk of potential player base?
Cutting them out because it was too difficult?
Well, I'm not saying necessarily, but I think there might have been some people who might say played Dishonored or something by exploiting that loop.
Did you feel you were potentially cutting out people?
I think it was definitely a much more focused set of people for that particular project.
Yeah, I mean, it was kind of a smaller subset for sure.
A more focused kind of experience.
Yeah, cool.
Yeah.
Thanks.
Last two questions.
All right.
Thanks.
Hey, thanks for the talk.
Thanks for the games.
They're awesome.
I was wondering over there at Arcane, when you guys are working on these immersive sim mechanics themselves, what the sort of ratio is to when you're creating the individual sort of building blocks, like intentional bespoke interactions versus ones that you sort of discover.
Like the example of the torch and the ice ball, it's like.
we are going to make heat because we want a means of melting this ice wall, right?
Then you accidentally find out like, oh, but when you heat ice, it makes water, and then water does this electricity.
Like, what's the sort of ratio to like sort of pre-planning versus like, and what are design philosophies to create components that sort of play nice with each other?
So in general, the mechanics, often like the game objects that I mentioned, we look to see how many different systems that they can interact with themselves.
And then a lot of the times, things will just kind of bubble up over the course of production and iteration.
So we'll have these systems out in the wild and some level designer comes up with a, like, oh hey, wouldn't it be cool if the electricity conducted from this thing powered a computer or something like that, right?
And so then we have to evaluate that and say, okay, do we want this to be a one-off thing or do we want to now sort of bring this up and elevate it to a system itself, right?
So a lot of this stuff happens organically over time.
And then there are some rare cases where it's like, okay, well this...
these two things interact in a way that we don't, we can't support because there are expectations that then cascade out of this.
And then we have to cut something off, but in general it's like the more the merrier.
And again, QA loves that stuff.
Yeah.
Thanks very much.
Yes.
Hello.
So, Mooncrash is a pretty big departure from Prey.
Moving from the Prey style of game to the Mooncrash style of game.
How did that affect your team?
Assuming they were the same people who worked on the base game.
It was the same people, yeah.
But it was a smaller sort of subset that weren't going on to other things and stuff.
So there was definitely like a bit of a learning curve and people were getting used to the sort of thing, but overall I think it was kind of a good exercise to like rejuvenate people between big projects and let them try something different and sort of stretch their legs a bit.
So it didn't like maybe.
take a big morale hit to the team, it was more reinvigorating instead.
There were definitely some people that were a little, like they were questioning it, but it was kind of a mixed bag, honestly.
Cool, thanks.
Thank you.
All right, thanks.
