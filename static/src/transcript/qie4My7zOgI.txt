I'm Dan Hudson, and thanks for coming to my talk entitled, Player-Driven Stories, How Do We Get There?
You'll see a link here.
The slides are already available, so don't worry about taking pictures or trying to copy everything down.
You can just go to that site.
And that link is also on the last slide, so don't worry about scribbling it now, unless you leave in the middle.
Anyways, about me, real quick.
I started my career at Ion Storm Austin, where I worked on Deus Ex Invisible War, the PS2 version of Deus Ex, and Thief 3.
Then I went to Midway Austin where I worked on a open-world action game that was canceled when Midway started to go under After that, I moved to 2k Marin up in the North Bay where I worked on Bioshock 2 And the new XCOM project and I recently moved to LucasArts where I'm making a new game with Clint Hocking and Matthias Wortsch Quick spoiler alert here. Yeah, it's a good picture of him quick spoiler alert here I am going to discuss some stories in games and if you haven't played these games you might consider these A spoiler, so those games are Red Dead Redemption, Morrowind, Deus Ex, Passage, and Portal.
There's a little title slide before each of these, so if you want to close your eyes and cover your ears if you haven't played those games, go for it.
So yeah, quick overview of the talk.
First, I'm going to talk about the problem as I see it with story and games right now, talk about a goal we should be striving for, some common stumbling blocks in reaching that goal, look at some possible solutions along with analysis of how certain games have tackled those types of things.
And finally, of course, some closing thoughts.
So let's jump right in.
The problem that I'm putting forth is that games really aren't taking advantage of what makes games games, which is interactivity.
We're often copying these Hollywood linear stories and just kind of moving the player from one cut scene to the next or from one scripted sequence to the next.
and kind of telling these linear stories that frankly would be told better in other mediums.
Whereas in games, we do have the advantage of that interactivity and can be telling games that are more about, you know, what the player's doing and letting the player actually build and construct those narratives.
The interactive elements of games are often, you know, simple and unengaging when compared to the cutscenes that you find in games.
You just shoot a bunch of dudes and then go fall in love in a cutscene and then go back to shoot a bunch of strangers.
So basically right now...
Players aren't driving the story, even if the character that they're playing is.
And like I said, this is something that we and our medium have a unique ability to address because we do have that element of interactivity.
So I'd like us to try to make stories that are a little bit more specific to our medium.
And the question of what we should be aiming for, the goal I'm putting forth is a story in which the player makes influential decisions that create a unique narrative that's not prescribed by a designer.
And I want to call out a couple of words there that might seem obvious, but the first one is influential.
What that means is that the choices are meaningful.
They're not just short loops.
They're not cosmetic.
They actually fundamentally change where the story is going in the game.
The second one is create, which means that these choices actually generate new story events.
It's not just choosing linear branches that have been picked by a designer.
But again, you're creating new story content, new story events.
And finally, the word is narrative.
What this means basically is that we need to be creating a coherent series of events over time that hang together as an actual story as opposed to a bunch of little micro interactions that don't really have any long-term benefit.
That's what a story is, you know, long buildups and releases of tension and blah, blah, blah, all that good stuff.
We'll get to it later.
So yeah.
When we try to create stories like this, we need to understand what people strive for.
What do people want in their lives?
And what do people want for happiness?
Because if we are trying to give them worlds in which they can create their own stories, we have to understand what motivates them.
And so when I started looking for a framework to talk about that, I came upon self-determination theory, which is basically a theory that's been studied for about 30 or 40 years now.
It's been verified independently and borne out again and again in experiments.
And it basically says...
that when people are seeking happiness or well-being, they're looking for three primary things.
They want autonomy, competence, and relatedness.
To talk about autonomy first, that basically means being a causal agent within your environment.
It means being able to simply make decisions that matter, make choices that affect what's around you.
Since that's very similar to a term that I'm sure we're all more familiar with called agency, for the purposes of this talk, I'm actually just going to use the word agency because, again, it's just a more familiar term.
But they mean equivalent things.
And so just want to call that out at the start.
Competence is exactly what it sounds like.
It's being good at something.
It's being able to have your actions affect your environment in a positive way.
And that's something games actually do very well, at least in gameplay.
A lot of games are about skill mastery and competition and those things.
But again, it's not something that we really bring into our stories very often.
And the last one is relatedness, which is simply the desire to interact with and connect to and develop relationships with other people.
Pretty basic human desire.
Remember these three words because I'm going to be calling back to them a lot during the talk.
Agency, competence, and relatedness.
It might not come up on the screen, but you'll hear me say them a lot, so try to keep them in mind.
So yeah, with those in mind, let's talk about our original goal again.
I actually wrote this definition for a previous version of the talk where I used a completely different psychological framework that's not as good as this one.
And it's weird because I had those three words called out last time, and I realized that this one actually they map better to this new self-determination theory than my old talk.
So that was kind of a nice little surprise.
The first one, agency, influential decisions, i.e.
what I'm doing matters.
What I'm doing has meaningful change in the environment that I'm in.
The second one is creation.
And that maps to competence, which is basically if I'm good at something, if I'm interacting well with my environment, that actually creates new events.
That competence that I'm developing as a player feeds into the story.
And finally, narrative and relatedness.
Stories are about relationships with people and those dynamics that happen over time.
So we'll go into depth on each one of these.
But we will start with agency.
and specifically the concept of disparate agency, which is kind of where I see a lot of games going right now where you've got the player who has a pretty limited set of abilities when compared to what the character he's playing is doing in a story.
And basically, the agency that the player has within the game is actually a subset of the character's agency that he's playing.
And so when it comes to the story...
It's almost like the story is subtly telling the player who's sitting on his couch with a controller, you can't do anything that really matters in this world that you're inhabiting right now.
You know, the big stuff, we're saving that for the super sweet scenes, and we're saving that for the cut scenes, and all that kind of stuff like that.
And the stories where you're going to get that compelling content.
And really, your job is to just keep an avatar alive to get to the next trigger, to the next cut scene.
So, that in mind, what should we be striving for?
Pretty simple, right?
Unified agency.
Basically, creating worlds in which the player and the character have all the same.
impacts in which the character and the player can both affect all systems and relationships in the game, and giving the player agency across all of the game.
We need to get rid of as many player-excluding dynamics and mechanics as we can, and if there's a particular emotion you're trying to put into your game, figure out a way to express that mechanically.
Don't just think about the next cool cut scene or scripted moment that you're going to try to evoke those emotions with, because you want the player to feel those for himself, not necessarily watch that character he's playing on the screen experience them.
Player verbs should really affect even the mid and high level parts of the story.
And the player basically needs to speak the language of the narrative with his actions.
So let's look at an interesting example of a game that has done some of this, didn't quite get there, but it had some really interesting things to talk about.
That game is Morrowind.
It's a game where the player has an incredible amount of agency across the game, all sorts of crazy customization and powers and everything else like that.
And a perfect example is the main quest giver, who I'm going to butcher his name, Caius Cossades, I think.
I didn't really listen to how they said it in the game, because I played this like five years ago, but he's basically the main quest giver in the game, and he gives you all your objectives and goals in the early part of the story, and he's the central guy to guide you through the story.
That said, in Morrowind, you do have a really high level of agency in the world, and you can kill anyone, including the main quest giver of the game.
So if you actually kill this guy, this little message pops up at the bottom of the screen that's really, really awesome, and it says, With this character's death, the thread of prophecy is severed.
restore a saved game to restore the weave of fate or persist in the doom world you've created.
And it's really cool because this is like an accessibility feature. Like, they're just like, hey dude, this is your game, this is your world, this is the choice you made.
Just want to let you know you can't finish this story, but if you want to keep playing, go for it. Like, they didn't make you reload the game, they didn't make them invulnerable, you know, they didn't make them always, you know, kill you and overpower you. They were like, look, just letting you know, dude, if you want to keep playing, go for it.
So it's really cool that they allowed that sort of agency within the world.
Unfortunately, the story ultimately couldn't compensate for that level of agency on the player's part and it did break the main narrative and so you did lose a lot of cool content going into the game.
But it makes you ask, why didn't they take this further?
Morrowind is actually a game that could have tolerated a lot more variance and more in the narrative because, you know, it's basically got a player with extensive verbs that are mapped very closely to what the, you know, characters in the world it's interacting with have.
So there's a lot of parity between the player and those other agents in the world.
A lot of customization.
There's alliances.
You can be in good or bad with different groups.
You can kind of shape the world around you.
And it's also a game that relies on text.
So it's...
as you can see, relies on text a lot, even in conversations and not a lot of VO.
So it would have been pretty cheap for them to anticipate a lot of this stuff and let the story react in more robust ways.
So it's a little disappointing they didn't go further with it, but I at least applaud them for letting you keep playing and just kind of letting you know what's up, as almost like I said, an accessibility feature.
So killing that guy was really goofy.
It wasn't like a sweet cut scene.
It was like the combat's actually not that great.
Morwen is just kind of chop wood on him for a while and then he falls over and that's kind of it.
But...
I don't know that's necessarily a problem.
You might ask, why not turn that into a super awesome cut scene or do whatever instead of just popping up a little text box?
And the thing I realize is that players are willing to put themselves into an experience if you give them that level of agency.
And they'll add meaning to systemic interactions in ways that you didn't anticipate.
And they will accept a huge drop in fidelity when it comes to allowing them to make more meaningful decisions in the world.
You don't have to pay everything off with these super deluxe cut scenes or scripted moments or whatever.
players will add that meaning themselves.
So hold that thought about agency.
I'm gonna come back to that, but first I wanna talk a little bit about why I think we haven't been able to deliver as much agency and why this problem's actually getting a lot worse recently.
And that issue is the concept of chasing reality.
Oh, Pat's laughing.
I'm sorry, dude.
You worked on co-op, not the single player.
It's cool.
Um.
Hehehe.
I'm not making fun of Splinter Cell Conviction.
It's actually a really fun, cool game.
I really enjoyed it.
But, in this scene at the very beginning of the game, you're basically interrogating this guy in the bathroom.
And if you look, the fidelity of this scene is amazing.
It is phenomenal.
You can crash his head into the mirror and it breaks the sink.
If you crash him through the stall door, there's a guy in there taking a dump and he's like, ah, get out of here, dude.
And like, there's all kinds of stuff that happens.
But the thing I realized, it kind of made me depressed when I was playing that because I was like, man, it took so much work to do this.
And it means there's one outcome.
Because when you start to, you know, have this arms race of fidelity that games are getting into, at least in the AAA space, it just gets more and more expensive to create the same sort of story content as we were creating, you know, five years ago.
And it ultimately is really limiting agency because the more expensive it is to do one thing, it means that you're less likely to do two or three or four different options in a given story scene.
And even branching stories, you know, in something like a Mass Effect, even those are limited by manpower.
How much, how many of these, you know, discrete branches can we make?
So, you know, and branching isn't really true agency. You're still choosing from a number of linear paths. So, ultimately, it's, you know, troubling to me because as fidelity goes up, agency basically goes down.
And the question is, do we really need this level of fidelity and this level of, you know, we do need higher agency, but do we need this level of fidelity to create emotionally compelling content?
And I'd say no, because like I mentioned before, players are willing to trade off a significant amount of fidelity to, you know, have more agency in the game and feel like that world is reacting to them a little bit more.
So let's break down what goes into a scene like that and see if we can find some solutions on how to do this stuff a little bit more smartly.
So I'm using the word cutscene here, by the way.
It's just a handy shorthand, but please don't think that I'm just ranting against cutscenes in this talk.
This also goes for any sort of really scripted, you know, objective design or the kind of game where you're just moving from trigger to trigger and watching stuff happen and just moving along a linear path.
All that stuff falls under this.
It's just cutscenes are sort of the most...
you know, dramatic example of you putting the controller down just watching and having literally no agency.
So that's just shorthand here.
But anyways, we look at what goes into this.
We've got, you know, obviously VO, custom writing, environments, modeling, and animation.
You know, pretty high-level breakdown.
No need to explain too much here.
But let's take a look at, you know, how far you can go when you start to strip these elements away and still create an emotional experience.
This is the game Passage, which is, I don't know, I'm sure if Hans has played this, anybody played Passage?
Oh my gosh, it's awesome, I love you all.
So this is a really sweet game, it's really awesome, it's a five minute game about life, and to me, personally, I can only speak for myself, it was more emotionally compelling than Mass Effect, Alan Wake, all these big story games.
I liked both of those games a whole lot, so I'm not making fun of them again.
But the important thing about Passage is it's super simple, super low fidelity.
and the mechanics in the presentation actually define the story in some really interesting ways.
So I'll do like a quick run through here.
Basically, it's a game about life.
You're this little dude on the left, and you start on the left, and your only verb is movement.
I'm really glad they put this on the iPhone, because the little D-pad makes it easier to talk about this.
uh... movements your only for and that's how you make choices and your fidelity is low enough to the mechanics in this game are the story so you start on the left and you start to move across the screen you know going to your life and time passes and they do a couple clever things here for example if you notice on the right side of the screen it's really garbled and blurry that's the future and the further out the future gets the less certain it is and you don't know we're gonna be in twenty years and and it's a very simple mechanical representation of that that you just you bracket instantly playing like oh yeah you start walking to the world And you meet a girl, you get a little closer to her, and you just walk up to her and fall in love.
Movement's the only verb, you simply express that intent very simply.
I want to fall in love with her.
By the way, a little callback to relatedness, one of our friends from the self-determination theory.
So, you meet up with this girl, you join forces, and you start to move through life together.
And as you notice, as you move through life, you start to move from the left side of the screen to the right side, sort of demonstrating.
This is moving through my own timeline.
And you notice that the future and the past start to become both kind of blurry.
Because as you get in the future and have less life, you know kind of more what's coming.
And the past and the memories start to fade.
And there's a number at the top that starts to increment and show your age and stuff like that.
And you start to move through life and get old.
And you get even older.
Your hair falls out.
Your hair turns gray.
And you guys are sort of an elderly couple moving through life.
And again, this is simply movement, just moving these guys across the screen slowly and watching these changes happen.
There's no VO, there's no anything else.
And then one of the saddest things in a video game ever happens, she passes away.
And you turn into this sad old man, who's got no hair, and they do a really, really powerful thing.
They simply reduce your movement speed.
So at the very end of the game, you just start moving half as fast.
And you don't need to see the guy cry, you don't need to have a message on the screen, you don't need VO.
You can just tell, he's moving half as fast.
He has nothing to live for.
He's this guy at the end of his life, the love of his life has died, who's been through this whole...
you know, life experience with, and you start going through life alone.
And that tombstone moves into the blurry past with everything else that's gone and you get to the end of the screen and you die.
And that's the whole game.
And it's incredibly powerful.
When you play it, you know, the simplicity of it and the simple verbs of simply moving through the world, it makes you think about these things.
You're looking at the screen and you're thinking about your own life and your own relationships and your own friendships.
And it's amazing.
But another really cool thing about it is...
Again, movement is your only, you know, verb here.
And if you start the game over or start a new game, and you walk up to the girl and you say, you know what? I'm gonna go it alone.
You just walk around her.
You just don't walk up to her.
And you can start to go through life yourself.
And the same kind of thing happens.
You move from the left side to the right side, and the future gets more and more sharply focused, and the past fades into memory, your hair falls out, you get old.
And then you die at like half the age.
You don't turn into the old man, you don't slow down, you simply go, go, go alone and die.
And it's really, really sad.
And you don't kind of have to explain how profound that is and what the implication is there.
It's just a really simple way to express these complex emotions that come with living life.
And it's a very, very powerful game.
I'd encourage you to play it.
It's on every platform imaginable.
So let's quantify a passage real quickly against those elements we talked about.
VO, there's none.
Custom writing, there's none.
Modeling, by my count, there are five models.
There's the man, the woman, the middle-aged man, the old man, and the tombstone.
I'm going to.
be generous and call the tombstone a model.
Animation, there's three by my count, the man, the woman, and the old man.
And the environments, obviously, are at a very low level of fidelity.
Now, I'm not sitting here contending and saying that Passage is a reasonable AAA game that you could put in a box and sell for $60.
But I did want to demonstrate that you can really move players with a very low level of fidelity if you're trading off and giving them agency and allowing them to fully inhabit that experience, as opposed to watching a scripted series of events.
Let's move back to the AAA discussion and free these elements from cut scenes or scripted moments or whatever you want to call them and consider them one by one and see if there's things we can do to use them more efficiently.
Because ultimately the goal should be, let's take all the things at our disposal, you know, really good VO and really good writing and really cool environments and all these wonderful things that we have at our disposal now.
Let's think about how we can use them more efficiently so that we can enable more agency for players and create a larger possibility space and create worlds that can react to players a little bit better.
So...
First one up is VO.
Basically, isolate it if you can.
Just because you want to have VO in the game doesn't mean that you have to also have a really sweet lip syncing model, and animations, and cool cut scenes, and cool camera angles, and all that stuff like that.
There are ways to just simply put the VO into the world without all those attendant costs.
Lots of games do that kind of thing.
AAA games, data links in Deus Ex, or radios in Bioshock, the voice coming over the speakers in Portal.
Don't, you know, as you consider these things, don't assume that you have to do it to the fullest degree.
Think about clever ways to get more in the world.
Because if you do it for cheaper, you can do more of it and you can react to more different, you know, scenarios from the player.
Custom writing.
If you can systematize that writing a little bit and sort of make it react to a little bit more generic of events, and I don't mean make the writing generic and sucky, you know, still have lots of flavor and cool characters and all that, but basically just make it to where it can react to a series of events, you know.
character is mad at you, character is happy, character is pleased, character is confused, stuff like that. That might seem a little bit egregious at first because you want to have every scene crafted and, you know, have this awesome, awesome dialogue for every possible thing that could happen. But, again, players, if they feel like the game is reacting to what they're doing, they will accept a much lower level of fidelity. And if they simply feel like the game noticed what they did, they're not going to say, oh, that sounds like a generic response. I remember playing System Shock 2, it was pretty clear that they had three or four generic lines of Shodan saying, I've uploaded some modules.
Good job for when you would complete an objective.
And you heard the same lines over and over in the game.
But it always happened whenever you did something cool that you felt you should be rewarded for.
And so you never were like, ah, they're using that stupid line again.
You're like, sweet, yeah.
Like, they noticed.
Awesome.
It's a good feeling.
So try to systematize your writing where you can, which, of course, frees up your VO.
and also try to isolate the writing as well.
Just because you wrote something cool doesn't necessarily mean you have to have it voice acted and presented on a model and animated and lip synced and all that stuff like that.
There's lots of games right now that are doing things that are really interesting with sort of making your writing stand on its own.
So you can have games like Costume Quest and Stacking, which are two really cool games on Xbox Live right now.
They've got little, brr, brr, brr, brr, brr, brr, brr, when people talk, and they just put text on the screen.
And if you can just afford to put text on the screen, that lets you do a lot more of it and make stuff that really reacts to more situations.
You can also use Simlish, like The Sims had, or this might be a stupid example, but whatever.
Voice synthesis, you know, like people are like, oh, it's not good enough.
It's not believable as human characters.
then don't make a game where it's coming from human characters.
Like, make robots or something, or make computers that talk.
Because it would sound OK for that, because it sounds like a computer.
So like, you know, think about how you can extend your writing and make it to where you can get more in the game for cheaper costs.
For environments, try to reuse where you can.
There's sort of two reasons for this.
If you can use gameplay spaces for your story scenes and allow the story to...
occur in spaces that players are inhabiting otherwise in gameplay, then number one, you just have more real estate and you have more time to simply build more game environments for playing the game, which is great.
But also, a lot of times games will have sort of hero scenes, you know, not about heroes, but sort of like really sweet looking environments that are really carefully crafted for story events.
And players can tell in the back of their minds that the fidelity of those areas is higher.
And it's a subtle way, again, of the game saying, hey, the story's where the really cool stuff happens.
We built a special, sweet penthouse with a helicopter outside of it or whatever.
And that's where it's going to happen.
And it's a little subtle diss to the player, again, saying that the story's important, you're not.
So if you can reuse those spaces and just be sort of cost-conscious with it, then, again, you have more opportunities to allow for more agency on the player's part.
Next one.
Modeling, basically just use some restraint here.
Don't model story-only characters that only exist in cut scenes, because that's a pretty poor use of resources.
Either try to figure out how those characters can be in the gameplay and take part in that world that allows the player to have unified agency, or find other ways, again, for that story character to communicate.
Maybe they are calling you over a radio.
Maybe they're emailing you.
Reading emails is a really fun thing to do in games.
Do comic book style cut scenes so that you can use a pretty cheap drawing of them as opposed to 3D.
But again, think about how if your intent is this character says this, don't just immediately assume, OK, then we've got to build out the huge Excel sheet of all the dependencies that go into creating a huge character.
Think about clever ways to have people communicate.
And that doesn't even have to be VO.
I'll talk about some examples of that in a little bit.
And animation, pretty much hand-in-hand with modeling.
The less models that you have to animate in those scenes, then the more animation you can do for just making your gameplay better, which we make games, so that's cool.
So when you look at all these individual elements, try to use them separately and or efficiently, and ultimately use them in ways that give the player more agency.
But the key thing is this.
own your choices.
Like, don't look at how you can be cheap and scramp and be like, ah, the animation doesn't have to be that good for the scene, or, you know, maybe we can get away without lip syncing.
Because players will definitely recognize if you're trying to do a cheap version of something that's done really well in like, you know, Call of Duty or some like really high polish, high fidelity game.
They will recognize that and they will think you're cheap and they will know it.
So, instead of doing that, find...
a version of, you know, a cheaper storytelling method that you can own and really make cool.
Here's an example of that from Infamous, which is a, this is from the beginning of the game so it's not really a spoiler, but they basically had a really cool style for their cut scenes, so I'll show that here.
While sliding into unconsciousness, I can somehow, I don't know, hear the voices of the dying.
Thousands crushed by falling buildings burned alive in the fires.
Trish lost her sister. Homeless lost me.
Zeke was always there, somehow sure that I'd wake up while outside the city he fell apart.
So they gave you a lot of information in that scene.
They established the timeline.
This is the beginning of the game.
The hero, he's unconscious, and he's apparently been affected with some weird electrical powers.
There's people being killed and burned out in the city.
There's all these disasters going on.
The player's got a girlfriend named Trish, whose sister died.
The hero has almost died, and he's on death's door.
And he has this loyal friend named Zeke, who's sure that he's going to come back to life.
They got that across in like 15 seconds with, uh, 2D art, really, really stylish, but more importantly, they owned that style.
They said, we're going to do something that's cheaper.
The VO was completely isolated. There was no 3D modeling.
There was no animation, da-da-da, you know, long list of stuff.
They isolated the VO, used it as a voiceover, used this really cool 2D hand-drawn style.
And when I saw that as a player, when I popped that disc in, I was like, wow, that's really neat. That's interesting.
I really like this game. It did something different. You know what I'm saying?
they embraced it as opposed to just trying to find a cheap way out.
So please keep that in mind, because I'm not saying just like, try to, you know, pinch those pennies.
I'm saying simply consider where your, you know, development resources are going.
And if there's ways you can do stuff in really cheap, but also really cool ways, then go for it.
Another game that did this was Portal.
Used a lot of those similar things I talked about.
The voice, you know, from the antagonist character simply comes over loudspeakers in the environment, so they can very quickly write and record stuff and just play it to the player through a, you know, convention.
that's established in the world.
And they also have a lot of environmental storytelling, where instead of having to create all these scenes, animate them, blah, blah, blah, blah, blah, you come across the remnants of things that have happened in the past that are static scenes.
And it's actually more engaging for the player, because you're trying to solve a mystery, and you're trying to puzzle together what's going on.
You know?
There's this little crack in the wall.
Ooh, what's back there?
It's actually engaging.
It's not, you don't sit there thinking, like, man, I really would have wished I'd seen the soldier kill that guy.
You're like, wow, what happened here?
You know?
It's actually cool.
It makes it more engaging.
But it's also very economical.
And that's just the storytelling methods.
But another thing I want to get back to is that we've sort of left competence behind from that self-determination theory.
And so I want to talk about that a little bit.
Basically, the gameplay of Portal was defeating these really cool geographical puzzles.
Like you're trying to figure out how do I get from one side to the other.
And you're always constantly thinking in terms of geometry, geography, and your own abilities, and how you can defeat each of these test chambers.
And the story of the game.
is thinking about how you can use your abilities to escape this facility.
It's a macro version of what you're doing in every level of the game.
So the micro and the macro were unified.
What you were doing moment to moment, second to second as a player was directly in line with your motivations as a character.
And those, you know, they never broke from first person.
They never, you know, tried to inject story stuff that didn't fit with that motif.
And basically you felt like what I'm doing every second.
goes along with what's going on in the world and what my story is.
So a really nice way to allow the player's competence, the player's skill as they're playing through the game to contribute directly to the narrative.
Another scene is the companion cube, which if you haven't played, you basically have this special cube that you've got to, you know, the game's all about taking these cubes and putting them on different switches to make doors open and stuff like that.
And there's a particular level where you have this cube that has a heart on it.
uh... the you know disembodied voice over the speakers tells you it's your weighted companion cube. And you're like, oh what's this? And so you go through the whole level and it's one of the longer more complex levels in the game and you grow that you create like an actual legitimate attachment to this box this with a heart on it like it that there there's not that's it like there's you don't need a video that's that's the companion cube and at the end of the level there's a twist where the uh... disembodied voice makes you kill your companion cube and it's the only way to proceed and like gamers like you know, you're looking like, ah, I can't, mm.
And it's a box.
So, but it's really great because they use really economical storytelling devices.
And, you know, it again, it used the core verbs.
It's the player picking up, putting down, solving puzzles.
All of that stuff was completely unified, and yet it was a really powerful moment.
Now, it's not a perfect example of a player-driven story, which I'll get back to that concept, I promise.
It's not a perfect example of a player-driven story because ultimately there was only one outcome.
But it does ask the question, would it have been more expensive, that much more expensive, for them to allow for more possibilities in that story?
It really wouldn't be, because again, it's disembodied VO.
It's simple player verbs.
It's a static object.
It's not that I'm knocking Valve for not doing that, because Portal is a beautiful game in every sense.
And systemic story just simply wasn't a priority for them on the project.
But it does demonstrate interesting possibilities.
Again, it's a AAA game by one of the best publishers in the industry.
or developers in the industry, sorry, and used some very simple devices to make a very cool scene happen.
So again, keep that in mind.
There are ways to do this where you don't have to talk about writing your little failed novel into a video game.
So again, the interesting thing is that your player's competence in Portal was the story.
It was your ability carrying you through that narrative.
And so when you take that sort of story relevant competence and you combine it with agency.
an achievable level of fidelity, like the stuff we talked about being more economical with the tools that you have available to you, then you can start to create emergent story outcomes without a heavy content burden.
So let's talk about that connection just a little bit more.
Game mechanics and the story, they need to be implement or game mechanics and character interactions need to be implemented as mechanic or, sorry.
Let me start that one more time because I can't read my slides.
Game mechanics and story need to be communicating seamlessly.
And so you want to implement your story and character interactions as systems.
So the player-generated story events and the computer-generated story events occur at the same level.
The player should not distinguish a difference between what I did and what the world did in any sort of way.
Because at that point, they're just looking at how the world works.
If there's no rift between the fidelity of the story and the fidelity of the gameplay.
then the player perceives those things at the same level and they become one experience.
So let's talk about some ways you can do that and some examples from games that have accomplished this.
One example is conversation systems in games.
If they have not only story utility, but also bartering or gameplay utility, and if social interaction is part of the game, then that simply becomes something the player perceives as a system in the game, and just one of the things I do.
So sometimes I talk to people because I want information.
Sometimes I just want some knowledge about the world.
Sometimes I'm trying to buy my way through a guard post and bribe this guard.
Sometimes I'm buying something from someone.
If you can get it to where all of the story and the gameplay are funneling through the same system, and you should have many of these systems in your game, but this is one example, if that's all coming through one system, the player simply sees it as, this is how the world that I'm in works.
And so they don't start to, you know, distinguish between this is a story scene, this is a gameplay scene, and these things are, you know, at opposite ends of the spectrum.
Another example.
is games that use sort of abstracted representations of story content and expose those elements as game systems.
So for example, notes that you find in World of Warcraft when you loot a body that give you a quest.
Usually in that game, you go talk to a character and a bubble comes up that describes the quest, and you hit accept, and you've got it.
But every now and then, you're out in the world and you kill a monster, and you go to loot it, which is something you do all the time.
It's just a game system, it's a game mechanic.
And there's a note and you're like, that looks curious.
And you open it the same way that you would open a lockbox or, you know, one of those pearls you find on the beach and stuff.
And it pops up the quest thing.
You're like, oh wow, I found this thing in this dude's pocket.
And whoa, it's mysterious.
It's a quest.
I'll accept that.
And ding, it goes in your quest log.
And all of a sudden you feel like, I was out in the world and I did something and I picked something up using this system that I use all the time and found a little neat little story bit.
And now I'm on a new quest.
And it's a really interesting way to sort of mix it up for players and also, again, integrate that story a little bit more into the gameplay through a simple existing mechanic.
Another example of that is hacking in a game like Deus Ex.
Players simply say, you know, if you invest in hacking, you're like, I can hack stuff.
Sometimes I'm going to hack a security station to turn off a camera to make it easier to get into this, you know, guard outpost.
Sometimes I'm going to hack an ATM to steal some money.
Sometimes I'm going to hack someone's computer to read their email.
And that kind of runs the gamut of gameplay to story relevance.
When you read those emails, you get insight into the world.
And it doesn't feel cheap.
You actually feel like you're invading their privacy a little bit and getting into the stories of the bad guys.
And it's also, by the way, a cheap way for text and writing to be isolated, like we talked about, in a way that allows the player to absorb information without, again, creating these super expensive cut scenes and whatnot.
The player simply says, I can hack stuff and I hack different things for different results, but sometimes that's story and sometimes that's gameplay, and they don't really perceive that difference that much, because it's simply how the world works.
And I want to take a quick detour here, because I'm talking a lot about systems and a lot about mechanics and a lot about systematizing things and all that stuff, and I want to be very clear that I'm not trying to...
make everything super bland and make everything just boil down to ones and zeros and say that we shouldn't be creating really awesome interesting fictional worlds. I love that stuff. I really think we definitely should be creating those worlds. We should create fascinating worlds with vibrant characters because that's where players want to go. They want to step into a scene like that and find out what's around the corner.
This isn't about removing fiction or flavor or personality from your games.
This is simply about...
removing a really prescriptive linear narrative from your game.
So you want to create worlds that are really interesting, where the player wants to interact with different people and different elements, and tell his own story and explore and all that stuff.
You want to create all that stuff.
It's just about not necessarily making it a completely linear narrative within that world.
So, just wanted to make sure I was clear that I'm not saying just make everything bland and make it all just, you know, these little 16-bit indie games.
So let's look at a couple games that have actually expressed key story moments through mechanics.
And the first one I was just talking about, I'll talk about Deus Ex.
And this is the scene where you find Paul Denton back at the apartment, he's your brother.
And you're at his apartment and you're getting ready to get raided by the bad guys.
And so you walk up to him, you're like, hey, we gotta go.
And then the bad guys beat on the door and they're like, come out, come out.
And you're like, shit, man, we gotta roll.
And he says, oh, I'm hurt, I can't make it.
You say, I can't just leave you here.
And he goes, run, don't worry about me, don't be a fool, just go.
And then the guys break in and there's a firefight and there's Paul.
He gets up and he's fighting and you have a choice.
Am I going to stay and fight with my brother or am I going to bail?
Because he said, get out of here, save yourself.
That's a heroic thing for him to say.
What do you do?
So and you know, one version of this, you head out the window like a coward.
And in the next level, you find his dead body because you left him to die.
You left him to his fate.
You're like, crap.
When I made that decision, which wasn't, you know, a press X or Y to do whatever.
It was a.
you know, using the verbs of the game, movement, combat, conversation.
When you made that decision, those results came out again in the game.
You found that body through exploration.
But let's roll back the clock a little bit.
Back to that scene in the apartment.
What if you did fight your way out with him?
And you go out in the hallway and you're brave and you stand beside your brother and you kill everybody and, you know, it's a very heroic moment.
You fight your way out the lobby and you guys survive.
And the next level in the same spot you find him alive.
You're like, wow, that's awesome.
I made a choice as a player and it played out in the game.
And more importantly, that choice was expressed seamlessly through mechanics.
It wasn't, again, like a big choose, you know, X or Y to make a decision or a conversation tree or whatever.
You've got these systems like combat and navigation and conversation and these data links that, you know, people will talk to you from.
And you simply took in your environment and made a call right there in a very heat of the moment, you know, decision.
And you lived with it.
You know, the results of that decision were fed back to you through those same means.
You got data links about, you know, where your brother was.
You even discovered his fate, either dead or alive, by exploring hostile territory and playing the game.
And you came across it in one of the rooms that you hacked your way into.
So it's all very unified.
Ultimately, though, it wasn't, again, an example of a true player-driven story because in the game it was a sort of short loop.
It was mostly cosmetic.
It didn't change the narrative for the long haul of the game and didn't meaningfully open up new branches or anything else like that.
So it's not a perfect example of a true player-driven story, but it does show that core mechanics can let players express intent seamlessly because Paul was just another guy fighting in that firefight with you and you just followed him and stayed with him and that's how you made your decision, or not.
Next example I want to talk about is Red Dead Redemption.
This is just a huge spoiler.
So if you haven't played this game, beware.
But despite the fact that in traditional Rockstar style, Red Dead is a very, very sort of cut scene heavy, dialogue heavy, character story heavy game.
It had some very, very powerful moments that were expressed through mechanics.
If you played the game, you remember riding into Mexico.
You're riding through the desert on your horse like you always do.
Or when you're training your son to hunt, going out and doing the same hunting verbs you did as a player, and when you see him do it, it's like really touching because you feel like you're actually teaching him something.
And one example of this I really want to dig into is the Deadeye mechanic, which is basically it's bullet time, it's a way that, you know, as a player you can initiate a mode where it goes in a slow-mo and you can tag different, you know, three or four, maybe even five if you're really good guys, and then when the slow-mo releases you, boom, boom, boom, shoot them down, you know, like a, you know, Wild West kind of gunfight.
So here's an example of the Deadeye mechanic.
Experienced players can place the shots individually to devastating effect.
So that's what the Deadeye mechanic is.
And now we're going to look at the endgame cutscene.
At this point, John Marston, who's our hero, has sent his wife and kid off to safety and he's kind of at his own personal Waterloo. He's surrounded by federal agents, he's in his barn and it's come to, you know, the showdown in the game.
Here's the last scene of this part of the game.
Now that's 90% cutscene and 10% gameplay, but that 10% of gameplay was brilliant because as you play through the game, you've probably gone into Dead Eye hundreds of times and you knew instinctively what the system did, what it was capable of, and what the outcomes would be.
You knew that you could, if you were really good, maybe, you know, peel off like five guys before they got to you.
So when you stepped out there and the game forced you into Dead Eye and you're surrounded by 20 people.
You panicked yourself, not for him, yourself, because you identified so closely with that viewpoint and with what was happening right there.
And you said, oh my god, my competence as a player, this isn't enough, I'm doomed, I'm dead, oh shit.
And that all went through your head, you know, in a flash.
And you realized viscerally in a way that really identified with that player.
exactly what was going to happen, and you knew it.
And they, you know, they sold that sense of despair and finality through using that mechanic better than any cutscene could have, you know?
The rest of that cutscene looked great and it was cool and it's a wonderful thing to watch, but inserting that dead-eye mechanic into the middle of it made it so powerful.
So yeah, you just felt like, I am doomed with him.
You felt like you were going to lose that, not watch him lose it.
So it's a very, very powerful example, especially if you played the game up to that point, of how mechanics can be used to really...
heighten the emotional impact of a story moment, even if it is a scripted story moment like that.
So, to wrap up the discussion of agency and fidelity and competence, which we've been talking about for a while, I want to talk about a quote from my friend J.P. Labreton, who was a level designer on Bioshock.
He was a lead level designer on Bioshock 2, and in general is one of the smartest dudes you'll ever meet talking about games.
And this is from an article he wrote on Rock, Paper, Shotgun about Deus Ex.
It was sort of like a little retrospective series they did last year.
And...
The quote is this, the capitalized word that comes to me now is fidelity.
I ponder how incredibly difficult it would be to make a game like Deus Ex for a major publisher today.
Reasonably advanced for 2000, today it's clear DX's simple environments and primitive people enabled both its scope and its depth.
Our standards have risen in some ways, but are they unequivocally the right ways?
I love that, I'm in love with that quote.
Like I wanna kiss him on the mouth every time I read that.
Uh, because, you know, when you look back at Deus Ex now, people joke, oh yeah, the characters look terrible and the voice acting was actually kind of bad.
But people are joking.
Like, it's sort of like you laugh about it a little bit, but like that doesn't diminish the experience in any way.
So, so think about that.
And, you know, when you're building games, don't just assume that we have to do things in the fanciest way possible.
And consider how we can give players more agency and let them be more expressive.
Uh, and use our, you know, abilities in smarter ways.
Um, so we've talked about.
Given the player-unified agency, we've talked about trying to find a manageable level of fidelity by using those elements in more intelligent ways, more efficient ways that are still stylish and cool.
And we've also talked about how the player's competence can contribute to stories, but that only covers the mechanics half of this discussion.
How are we going to...
create actual stories out of those sort of lessons we've learned as developers there.
We haven't addressed relatedness yet, so let's come back to our friend here, which again is the desire to interact with or connect to or develop relationships with other people.
If we just have unified agency and a competence that contributes to the narrative, we've likely created a new problem that I think of as system soup, which is basically saying that like, yeah, this game's really reactive, the player can do a whole bunch of stuff.
But it's just this series of flat interactions that have no resolution.
It's just a bunch of just moment to moment type stuff that over eight hours doesn't amount to anything.
It's a toy box, which is fine.
But good stories come from peaks and valleys and relationships that resolve over time and increasing tension and conflict and all the great stuff that you can look at in any sort of screenwriting book or whatever.
So how do we solve that?
How do we go from this system soup into allowing the systems we've created to actually create a narrative that means something over time?
We have to look at the chaos that we've created with these uncontrolled systems and figure out how to bring order from that chaos, how to understand what's there.
But what kind of order are we looking for?
What has meaning?
The game that you're making needs to understand and respond to key interactions and comprehend meaning.
It needs to, you know, understand the times when events culminate in turning points that resonate with the players.
These are things like, you know, in a traditional story, the death of a lover, or parting with a friend, leaving home for the first time, having your life saved, you know, all the major moments, you know, finally having that big conflict with your mortal enemy.
How do we do that?
Well, first off, the game has to listen to what the player's doing and figure out what the player's actions mean.
That's step one, which is basically discerning meaning.
And I'll use a cheesy little graph here to talk about sort of...
Understanding the qualitative value and quantitative impact of a given gameplay interaction in a game.
So, here's a graph, very simple, good on the right, evil on the left, and amplitude, which is basically the impact of the event.
So let's put some points on here just to demonstrate what we can, you know, try to get from a series of interactions.
First, giving a homeless man food.
It's a nice thing to do, it's like a three, but it's a homeless dude, he's probably not super important in the story, so it's only a two on the amplitude scale.
Snubbing the mayor at a party.
Not really a big deal, it's not super, you know, you didn't murder the guy.
But he's also an important guy, so it's still a 5 on the amplitude scale, because he's going to remember that.
So that has a different sort of quantitative value.
Killing a dictator.
That's pretty sweet, because he was oppressing a whole nation of people, and you've, you know, freed them from oppression.
And it's, you know, really big deal, because it affects not only you and the story, but also, you know, a whole nation.
So that's a pretty sweet, like, good, big event.
Opposite end of the spectrum, killing your best friend.
Terrible thing to do.
It's evil to kill someone and it's also super bad because, you know, one would assume that your best friend, that's a relationship that's been built up over 10, 20, 30, however many years.
So basically, if you have a game that can understand these individual events and understand what they mean and understand the value and the amplitude of these events, how do we have that have an effect over time?
And basically what we have to do is take those assigned values, those events that the game can understand.
and apply them to long-term relationships and, you know, allow a series of events to develop an understanding of a relationship in basically a database somewhere.
For example, you know, if you do a lot of nice things to another character in a game, healing them or joining them in a firefight or giving them food or whatever, that could develop over time into a friendship.
And then once the game understands those relationships and understands sort of that relationship database that you're building as a player with your actions, not what the story is defined for you but what you have expressed.
through your intent as a player through these systems, the game can start to react in proportion to the strength of those relationships.
So what's an example of a game that understands the meaning of events over time and is able to create gameplay out of those player-creator relationships?
And there's actually a lot of really good examples of this.
This is Civilization V, but it's probably true of most strategy games.
And basically, this is actually a solved problem.
It's pretty fundamental to strategy games that all of the entities, be that players or AIs.
have all of the verbs.
So there's our unified agency again.
Let's not forget that.
And they all have the same abilities.
And they track relationships over time and let those relationships feed into decisions.
So attack means, oh my god, now we've gone hostile.
That would be sort of up and on the left on our chart back there.
And that becomes a war.
And maybe you sign a peace treaty, but it's tenuous because you know that that war is still lingering.
That hasn't yet still in the database somewhere, or an alliance, or factions, all that stuff.
That's a big part of strategy games.
Now, it's not terribly emotionally compelling, because strategy games are generally played from an isometric view, and you're not relating to characters on a daily basis or moment-to-moment basis.
And there's a lot of exposed math, and so they're not really making it into an emotional state of affairs.
But that's really a matter of presentation.
That's not saying that you can't do this sort of relationship tracking under the hood.
So it's worth asking, how could that proven backbone?
of relationship tracking be ported to a game with more traditional characters and subject matter.
And when the relationship is there, characters in the story should be able to take advantage of it and express what's going on behind the scenes in a more human way.
And this is heavily connected to that level of manageable fidelity we talked about before.
The challenge is deciding how to reasonably feedback these moments, and that is a big challenge with human characters.
Hopefully, some of the techniques we talked about can get you a leg up there in terms of isolating your VO or finding a really cool storytelling style that isn't as expensive.
But one approach is to basically, you know, you know what the verbs are in your game.
You know what the player can do.
You know what the big moments are going to be.
That's going to be different for every game, but you understand what the player's capabilities are because you're giving him those verbs.
So that probably means that you can understand what some of the biggest things that he could do is.
And so, let's say you were to take your top five events that the player could do that, you know.
you would understand to have big impact, and just create a suite of reactions, kind of like we talked about before, of happy, mad, angry, surprised, confused, stuff like that.
And basically have a suite of reactions expressed however makes sense in your game that are waiting for the player's inputs.
This is not branching, but it's more like a switchboard, where the game is saying they're listening, and they're like, OK, player did this, connect it to this one.
Player did this, connect it to this one.
And basically listening for what the player's doing, listen for the player's intent, and then connecting it to the right response from the game.
And if you have that suite of reactions on cue, cued up, ready to go, waiting for the player to poke the systems, that's significantly different than story branching.
Because story branching is taking a series of predetermined events and giving the player finite choice.
Whereas, if the game is listening and waiting to react and feed back, then that is allowing a lot more expressivity on the player's part.
And again, when we go back to that relationship tracking we talked about.
You can understand if it's the homeless guy versus the dictator or your best friend, you can understand the amplitude with which to feed back.
So you could have happy but doesn't really care, happy ecstatic, or angry but just kind of miffed versus, oh my god, I'm going to kill your whole family.
You could have degrees of those reactions and basically just have those sitting in a hopper waiting for the player to poke the system so you can feed it back appropriately.
That's the beauty of agency and emergence, right?
And if the system has a reaction at the ready, then if we use that kind of unified for the other we talked about, so for example, a series in Deus Ex of data links that are waiting for one of maybe 10 things the player could do.
Ultimately, you're going to have to pick a finite list, so at least try to take your best guess.
But then you can kind of combine that robust relationship tracking that is a solved problem again, and the story delivery methods that resonate with the player and, again, allow for those emergent outcomes.
So tracking and learning, that is a solved problem.
We just have to apply these known solutions to new territory in terms of presentation and making it more human.
If you are making a character about human, let's not make too many assumptions.
But how does that create a narrative?
Is that all it takes?
And no, I think there's a final piece left, because that at least lets us understand what the player has placed value in and respond to actions related to that.
But stories still need structure.
They need a beginning and a middle and an end.
and they need form.
So let's look at a really, really simple example of this.
Everybody probably recognizes this.
It's a simple three-act structure.
And what that is is basically just time and tension.
Over time, dramatic tension rises and falls, and like any good story, you basically have moments where big relationships resolve, and you have falling action to give the audience a break, and then you build up the tension over time, and you have your climax at the end, and then you quickly fall off and finish the story.
That's pretty standard.
This is a perfectly good example to work with.
So if you have a game that can track the player's actions and understand how those actions create relationships, and knows the kind of timeline that we want to start feeding those relationships back on and seeding events into the system, then how does the game make that happen?
And to do that, you have to create moments.
You have to understand enough about the player that you can force those issues.
An example of this is, let's look at the movie Jaws.
This should be pretty familiar to everybody.
You've got your characters, you've got Chief Brody, you've got Quint, and you've got this big shark out in the ocean that's eating people.
And, you know, so these guys go out on a boat and they're going to hunt for this shark.
And they have some initial encounters that are scary but don't resolve.
That's a little spike and then it falls back down.
And then you start getting into the heavy stuff at the end where Quint just eats it or gets eaten, I guess.
And then, of course, the final showdown between Brody and the shark.
You basically want to, you know, in this, when you're talking about creating moments, you want to take that timeline that you agree that your story is going to occur on and simply try to inject major moments at appropriate times.
And this is not to say that you pick what those moments are.
In fact, you definitely shouldn't.
What you should do is basically, again, peek into those relationships that the player has invested in over time and say, hey, if this is the end of, you know, if this is in Act 3, this is our big shebang, let's pick, you know, the biggest relationship the player's got.
and find the most opposite thing we could do, or a big twist, or whatever.
You can actually quantify this stuff mathematically and say, we want a big bang.
Let's pick one of those big relationships and do something interesting with it.
Again, based off those verbs that the player has.
So it's going to be different for every player.
And you probably don't want to have an exact schedule on your timeline of when these events happen.
Probably build some variance in so it's not the same and repetitive chronologically as the player replays the game.
But in general, you can have an understanding of what kind of arc resonates with players and resonates with audiences without necessarily mandating exactly what those moments are.
And the key thing is when you do inject those moments into the game, when you do say, hey, it's time for a big event.
that's the best time to listen and build your relationship data because, you know, when the player's under pressure and reacting to extreme circumstances, you're going to find out a lot about who that player is and where their allegiances lie.
Do they fight with their friend?
Do they run?
Do they turn on somebody?
You know, all those kind of things.
So, that's a good time to listen.
So, you sort of are benefiting yourself and helping to feed back into that database, you know, by, uh, by injecting these big moments into games.
Um, one example of, of those big moments I'll talk about, uh, is actually something I know.
pretty well because it's Bioshock 2, a game I worked on.
And the story of the game revolved around a player who was a Big Daddy and his little sister named Eleanor, and her mother, Dr. Sophia Lamb.
It's kind of a triangle.
They were kind of fighting over Eleanor.
And Big Daddies and Little Sisters also had a mechanical relationship in the game.
Big Daddies could adopt Little Sisters.
There were more than one in the city.
And you could pick them up, and you could save them, you could kill them, you could exploit them to try to gather resources for your own power up.
And so it was sort of a relationship that was not only narrative but also mechanical in the game.
And then you had big sisters, which was the sort of larger character there, who were little sisters who had grown up.
And in Bioshock 2, they were LAM, the enemies, personal sort of assassin force or personal protection force.
And so every now and then, those big sisters would come attack you.
And this is really an example of how game systems and story systems were very closely tied.
For example, how you dealt with the little sisters over the course of the game and gameplay defined what story outcomes you got at the end of the game, you know, what ending you got.
So it's basically an example of the story and the theme and the relationships and the gameplay very closely tied together.
Now, how do we use that to create moments like we were just talking about?
What we were doing under the hood was every time you dealt with a little sister, we had a point value for that.
If you ignored them, that was zero.
If you killed them, that was...
I don't remember exactly, but it was like a five.
If you save them, that's a different number.
And if you exploit them, that's a different number.
So we sort of had put a...
or not monetary, but numerical value on how you interacted with those in gameplay.
And then we had, separately, a schedule where we said, hey, we want to have some sweet boss fights with these big sister characters who are...
you know, the most fearsome, you know, combatants in the game.
And they are sent after you by Sophia Lam, who cares about the little sisters that you're interacting with.
So there's a story and a gameplay connection there.
And those fights happened not on a story schedule.
It's not like we built a bunch of battle arenas and said, at this point, you know, this thing happens in the story, and you go in and boom.
You know, we did that like for the intro fight, because you have to introduce mechanics.
But over the, you know, meat of the game, the bread and butter, it was all systemic.
And so we basically had this schedule, and we said whenever the player reaches a threshold in dealing with little sisters, based on how he's doing it, so it's going to be different for every player because some players ignore them, some players kill them all, some players save them all, whatever, any combination of that math, once it reaches a certain threshold, say 10 points or whatever that was, we'll send a big sister after the player.
And we actually did a lot of work on the AI side to make sure that big sisters could fight you anywhere.
It wasn't like there were certain arenas or anything else like that.
No matter where you were and what you were doing, you could be in the middle of another boss fight.
It didn't matter.
It was purely systemic.
So we made it so that this event could happen at any time.
And so, as the player started defining his relationship with those story slash gameplay characters, those characters, you know, the big sisters, with a deep connection to the story and to the theme, interacted with the player based on the player's actions over time in a way that no designer ever authored or set up.
So over the course of the game, we listened to how the player was interacting with these.
We agreed on this is about how often we want these to happen if you're doing these different values.
And we just took our hands off the system and said, hey, let's let the players decide when these things happen.
As with most examples here, it's not a true player-driven story example because we didn't take it all the way.
If you saved all the little sisters, for example, you couldn't cause the big sisters to revolt against Lam or anything.
It wasn't like a full ecosystem where we closed the loop.
But it still was an example of.
taking those sort of tracking and learning and discerning methods that are found in strategy games and applying them to a more sort of emotional first person type game, more traditional AAA game.
So that said, I think that seeding the system, once we've done all that under the hood work, and trying to create those moments actually kind of is the final piece of the puzzle to creating these.
And we are almost out of time.
So I'm going to do a really quick recap.
Game stories aren't taking advantage of interactivity.
We're copying other mediums.
We're telling linear stories that players and our audience are not contributing to.
We should be creating stories in which the player makes influential decisions that create unique narratives that aren't prescribed by a designer.
And if we use the interactivity that's unique to our medium and look at what people want in their lives and apply those desires to our goal, then we can start letting players affect every part of the worlds that we're building for them.
We've got to give up this arms race with fidelity that's flimming our abilities so badly.
And instead, look at how we can use the tools at our disposal in smarter, more efficient ways that allow us to give our players more agency and ownership in the worlds we're creating.
And if we own our choices and create systems that allow our gameplay to communicate seamlessly with our narratives, then we can start to understand what the players' actions mean.
And from that data, we can build relationships.
And those are relationships that we can manipulate in a way that forms a cohesive narrative that's full of moments that mean something to our players based on their own choices and their actions.
And if we can do those things, then we can create stories that are possible only in our medium and players will make those stories their own.
So if we as developers can get out of our own way and create worlds in which we're asking our players to be the authors, then we really do have a chance to create meaningful player-driven stories.
Thank you very much.
