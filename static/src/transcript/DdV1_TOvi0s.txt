Hello, everybody.
Welcome to my very brief presentation on the VFX process behind Battleborn, where I'm just going to kind of scratch the surface of how we came about to create our game's very unique style of VFX.
So before we get started, I would like to introduce myself.
My name is Ashley Lyons.
And I'm one of the senior VFX artists at Gearbox Software, where in addition to Battleborn, I also worked on Borderlands the pre-sequel.
And I've currently been at Gearbox for a little over five years.
So for those of you who are unfamiliar with Battleborn, I'd like to show you just a quick video introduction featuring some of the VFX that we'll be discussing today.
So threatening!
All right.
Okay, so what is Battleborn?
Essentially, Battleborn is a fast-paced, lighthearted team FPS with a stylized aesthetic, and it incorporates MOBA-like elements.
All right, so now that the introductions are out of the way, during today's presentation, the topics that I'm gonna be covering are why we decided to feature stylized effects, how we concepted many of our ideas, and finally, how we implemented those ideas to come about with our final product.
So why did we decide to go with this specific stylized look?
Well, for one, it was a great way to stand out amongst other FPS games.
And by doing so, it allowed us to create some super creative and original VFX.
And, the characters themselves were...
they had this already exaggerated look to them, and by adding in our specific effect style, we were able to complement and enhance the already cartoon-like aesthetic.
And finally, the animated VFX also really complemented our already colorful environments.
All right, so one of the nice things about deciding on our stylized look was the ability.
to experiment with different techniques and styles, which also led itself to the creative investigation of trying to land a specific look.
And having visual effects somewhat based in reality, in my opinion, tends to somewhat restrict an artist to how far visually that realistic style can be pushed.
But with Battle Born, we were able to experiment with many different variations of the same type of effect.
So in addition, sorry, in certain cases, we would have five or six different types of explosions going off and each one would look and feel entirely different from the other.
So, for example, this is one of them.
And here's another.
And one more.
Okay, so during the concepting part of Battleborn, we were fortunate enough to gain the talents of Michel Gagn√©.
If you're not familiar with Michel's work, he has been an effects animator on The Iron Giant, the My Little Pony movie, and most recently Into the Spider-Verse.
Now, Michel is an amazing animator, but when we first started working with him, he was unfamiliar with Game VFX in regards to what we wanted.
But he did have Game VFX experience in the form of Insanely Twisted Shadow Planet, which is a 2D platformer.
So getting into first-person shooters was something entirely new for him.
This is an early effects concept image.
where we were trying to imagine how one character's ultimate would cast during our game.
So Michelle was off-site the majority of the time, so explaining some of the details of our requests at first was kind of difficult.
But in a few months time, we eventually developed a system that would maximize our time and work began to flow a lot more steadily.
So basically, it was just a lot of video conferencing and instant messaging.
But once we got all the initial growing pains out of the way our feedback to Michel became a lot faster and his iterations on our VFX assets followed suit.
And this is a closer look at the concept image from earlier.
So I'm using this as an example of one of the methods that we use to concept our ideas.
So what we have here is Michel's initial ideas drawn over still frames of the game animation.
So with this in hand, we would go over it and basically figure out what works, you know, what won't work, and you know, what might need to, what might need to be altered later. Now, we have another effects artist on staff. He's an effects animator named Sung Kim, and he worked very closely with Michelle, and he had the most contact with him.
So Song would be the one that drew the in-betweens of the animation assets, and he would get everything ready to be imported into our game engine.
And once development on the game was complete, we had well over 30,000 frames of individual animation.
See, and here are a few more constant images like the ones before that were worked on both by Song and Michelle.
So over the course of the game development, our creativity grew and expanded with our animation requests.
So for example, if we wanted a type of basic ground impact, so Michelle would animate that for us.
Eventually, we fell into the groove of Battleborn's, you know, like, we fell into the groove of Battleborn's universe, and a basic ground impact would turn into something closer to this.
Also, towards the end of development, so we started to notice that many of our older assets weren't up to the standards of what we were currently, you know, what were currently being produced.
So we actually had to go back and polish many of those older assets, giving them like a more precise and crisp look akin to something that was being, you know, being worked on at the time.
So this is an example of one of those reworked assets.
for one of our, one of our characters named Miko.
And here we have another example.
So as you can see, the later asset, the one on the right, is, has a much cleaner look with less usage of gradients.
So one of the advantages of having two animators on the effects team was being given the opportunity to observe and then apply some of the principles of animation to our effects, namely timing, anticipation, exaggeration, and secondary action, which in turn aided us in having our effects mimic the character animations.
So each animation asset was drawn frame by frame, meaning.
no frames were skipped.
If a flipbook needed 36 frames, then 36 frames of animation were drawn.
So nothing was animated and then shortened or frames cut to fit a certain frame length.
So because of that, we were able to break down whatever animation asset we were using, examine the frames, and integrate that technique used into whatever particle effect that we were creating at the time.
So this is that last image animated.
And this is that image, that asset in game.
So being able to break down the animations by frame, also aided us in incorporating the technique of adding a quick spark, like a spark type effect, to many of our explosions.
So many times the spark itself would be random shapes or almost unnoticeable, but it did aid us with the timing and giving them a little something extra.
So this is an image of some early concept sparks.
And these are some explosions with that spark.
technique added in.
So in order to maximize our texture space, Michelle and Song came up with a frame rate guide that helped them better organize each texture sheet according to how many frames of animation were needed for each asset.
And at the end, in addition to the 30,000 frames of hand-drawn animation, we ended up with well over 3,600 individual particle effects.
Okay, so developing a style guide.
And with all that was going on in Battleborn, we needed a style guide in order to keep things consistent.
We had five different factions with a total of 30 different characters in each faction, and each character had their own custom stylized effects.
So by creating this style guide, we were able to cement the look of each faction while still keeping each character's effects feeling uniquely their own.
So for example, we had the Generate faction, which is in the bottom left.
which incorporated mostly stark red geometric shapes compared to the Eldred faction in the top right, which consisted of more organic and natural tones.
And here is an example of an effect from the Eldred faction.
And in this effect is actually from the LLC faction.
which is a group that focused mostly on money and robots, like robotics, which we represented with electric blue and some golden yellow hues.
So once we acquired the animation assets for a character, we would begin assembling and adding them into our materials and particle effects.
So each asset we kept at around two to three colors.
with little to no gradients, sorry, with little to no gradients in them.
This was in order to keep colors consistent once we began gray packing everything.
So unless we actually needed a, unless we needed a specific color, most of the stuff that we did was gray packed.
So if you are unfamiliar with the process of gray packing, it's where you just store a black and white texture into the red, green, or blue channels.
of a single texture.
So at the end of the project, we had gray-packed about 90% of the VFX textures.
So in order to have our 2D animations exist in our 3D environment, our particle effects use many different types of meshes, each with a specific UV mapping to give each animation that extra dimension it needed.
In this example here, you can see a, couple of concepts for a whirlwind type effect.
So in order to achieve a similar look of the hand-drawn concept, we did include the UV mapping mesh strips, which did wrap around like a central core.
And this is that final whirlwind effect.
And this is another example of how an asset would go from concept to an in-game effect.
So here we have the initial concept for this nuke impact.
And as fantastic as this animation looks, applying it in-game as a one-to-one asset would not work from all directions.
So with something like we just saw, we would tell Michelle, imagine that you are looking directly down into it.
How would that look?
And this right here is that concept broken down into two of its core elements.
And this is the in-game effect for that nuke explosion.
So as you can see, many of the animations are mapped onto a variety of meshes in order to give that effect a more volume, like more volume and escape that flat billboard type look.
So getting each effect to work with their specific character resulted us in, as I had mentioned earlier, applying the principles of animation.
Sorry, applying the principles of animation.
Namely, squash and stretch and timing.
With the exaggerated look of our character animations, many of the effects needed to correspond and match with their respective characters.
As a result, this conveyed a sense of ownership to every effect of its player character.
So for example, this is Pendels.
He is a bipedal snake assassin whose passive ability was this slight invisibility.
Like he gave off this predator type shimmer during the game.
So we had the idea of giving him this ninja vanish like smoke puff whenever he did activate his passive.
And on top of that, we also decided to give him a snake theme for all of his effects.
And here's his smoke bomb that he does before his passive broken down into some of its main parts.
So this right here is the main part of the smoke bomb.
This is another part, and as you can see, it's a heavily implied snake theme.
And here we have more snakes.
And this is the smoke bomb effect in game.
So another example I have is the character Ernest.
And as you can see, he's like a bird.
And so many of his effects were egg, yoke, and feather-based.
So here's one.
And another one's very yoke-like.
And we have some feathers.
And this is an earnest effect in-game.
Okay, so one of the things we fought with heavily in creating Battleborn's VFX was avoiding what we on the team called effects soup.
or basically color vomit, which basically meant having too many effects on the screen at once.
So with the nature of the effects we were making and how easily it was to get carried away with it, it was a challenge straddling the line of over the top versus over abundance.
So to dial back much of what we put into the game, we held numerous critiques within the effects team itself.
And we also used player feedback from a lot of our play tests.
In addition to that, we also did a huge polish pass at the end of development where we added a fade to all of the particle systems any time the player got close to them.
So that also helped cut down on too much impeding the player's view during the game.
Okay.
So, in conclusion, with the experience of Battleborn behind me, here are some of the things that I would recommend when considering incorporating stylized effects into your game.
You should ask yourself why use stylized effects in the first place, and how will this decision affect your game?
So once you know the answer to that question, You can ask yourself, is the universe cohesive?
Does everything belong?
If you're going to add a specific effect style into your games, like I said, does it belong there?
Now, once you're ready to go into the concepting part, don't be afraid to try new things and really go wild with the type of effects that you can create.
but also know when to dial it back.
You want to avoid that effects soup look.
And also consider this, think of effects not only as screen filler or a way to cover up transitions in animations, but also as a character in itself.
Give them life, give them attitude, give them personality.
Really push the limits of what you can achieve.
Okay, so with that being said, thank you all for coming to my very brief presentation on Battleborn's visual effects.
I'd also like to thank Michelle Gagne and the Gearbox effects team.
They helped me with this a lot.
I'd like to thank GDC, and thank you audience for coming to see my presentation.
And if you like, you can follow me on Twitter.
That's my handle.
Let's see, thank you again.
And if there are any questions, feel free to step up to the mic at this time.
Hey, how are you?
Hi.
Thanks for the presentation.
I noticed you showed mostly the 2D assets.
How much emissive or different properties inside of the engine did you guys apply to the effects?
How much emissive?
Right, like different things that you didn't showcase here.
Different emissive properties or anything.
OK, so you want to know how much emissives we added to the- I guess non-2D aspects.
Non-2D assets.
Emissive-wise.
I think it misses.
Maybe you didn't do any.
It's, well, it was, we did add, like, a lot of it was the basic 2D assets that you did see, but we did add a lot of, like, simulated smoke effects, some fire effects and things like that, so we did not, so we didn't just stick with the 2D assets, like, as just, like, one-to-one, but, like, we did add, you know, just basic.
as smoke, like as you saw with the Pendle's effect, we did add some gradient smokes.
One of the things we wanted to avoid a lot of was we wanted to avoid a lot of gradients and just kind of adding things that didn't look like they belonged in the world, if that makes sense?
Sure.
Yeah, so we did add, like we did add them, but it was very, on a smaller scale.
Like we were very, we kind of wanted to restrict ourselves and kind of.
and going too far from the hand-drawn 2D look.
Okay.
That makes sense.
Yep, thanks.
Thanks.
Anyone else?
Okay.
Yeah, I'll be, if anyone has any other questions, I'll be walking around.
So, but thank you.
