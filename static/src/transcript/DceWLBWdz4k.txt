So thank you for being here.
And so for those who don't know me, my name is Silja, and I have a PhD in psychology.
And the past 10 years I've worked in the video game industry.
I started at Ubisoft in France, hence the accent.
Then I moved to Ubisoft Montreal.
I worked at LucasArts on Star Wars games.
And after LucasArts was bought and closed by Disney, I moved to Epic Games in 2013 and worked as director of UX at the studio level.
on many projects at Epic, including Unreal Engine, and of course, Fortnite.
So this is what I'm going to talk about.
When I arrived at Epic, there was no UX, no nothing.
So it was like a UX team of one.
I'm sure you're familiar with that.
And the idea was to build it up at that time.
So the idea of having a UX mindset, I love to think about UX as a mindset or a philosophy more than a discipline.
Because what's important is just to try to place yourself in your players' shoes and build up all the development around it.
And so to have a UX mindset, you have the people with UX in their titles, especially people like me coming from.
human factors background or cognitive psychology background.
They're here to bring UX practices.
They're here to bring over tools and knowledge about the brain and all that jazz.
And of course you have the people on the core team.
They're here to build up the experience that they want to offer.
So designers, artists, engineers.
And you have people, so if you have a big team, you have people on the marketing, publishing side, try to define who the user is, who's your audience, so you can understand better what they're after, what they like, stuff like that.
So by understanding your target audience, your users, and the experience that you really want to offer, and by having the right tools, this is how you have a UX mindset.
But to get there, it's actually pretty difficult.
You know, when in a studio, they are not used to these practices, you have to go step by step.
And the first step that is important is to try to build trust.
Of course, when you enter into a studio, they see coming a girl coming from a kind of psychology, like a psychologist.
So you have to make sure that they understand that you're not here to impede whatever they're trying to accomplish.
You're here to help them out.
And to do that, you need to build trust along the way.
And also, you start by debunking some misconceptions.
So I'm not going to talk about that too much.
But there are some big misconceptions about UX coming from the game developers.
A lot of them are afraid, which I can understand that UX will distort the design intentions.
So sometimes when I talk about UX, I will have a game developer saying, what about Dark Souls?
I'm like, what about it?
Are you gonna, with UX and making it usable, you're gonna have all these games that were super hardcore, you're gonna change the experience of these games and make them all easy.
Well, no, IQX is all about making sure that the experience you want to offer is the one that people experience in the end.
So if the point of your game is to build a game that is going to be difficult to very specific audiences or hardcore gamers who like to suffer, we're going to absolutely help you accomplish your statistic goals.
And so that's really what's important to remember, that we are here to help you out.
So that's the one big thing you need to debunk if you're starting on a team or not used to UX and what it is.
Try to really help them out to understand that you're here to serve them and to help them accomplish their goals.
There's another big one is like, yeah, UX is cool, but we can UX it later.
I love how people sometimes use that term as a verb, as if we can unfuck everything at some point later on.
And that doesn't work as well.
And so you have usually like the team, the core team's gonna iterate in a closed loop.
And when I see that, I say, oh, you have some prototypes out there.
Like, what?
That sounds cool.
Can we try them out?
Can we bring players over and test it?
And there's a lot of, not fear, but the developers are not super comfortable with that idea and they're like, no, no, no, no, it's ugly, it's not ready for testing, I don't want to do that, and that's, yeah, happened to you, that's something that it's important to understand that it's never too early to test.
You can't test everything early, but there's always something that you can test, whether it is the menus, icons, the systems with dice or whatever.
You can always prototype something to test it out.
If you test it out when it's very early on, low fidelity, paper, before it's implemented and even better before it's added up, then whatever changes you need to make is actually faster and less costly to do than if you wait.
too long down the line.
So that's really important to understand.
And here's an example of the, so you can tell that I am not a UX designer, so this is something that I put together to help the game designers explain what their vision about the game.
Because it's also important.
when you're on a team, it's not always about the UX towards the audience, your gamers, the players in the end, but also when you're working in a studio, you have to convince your bosses, you have to convince the executives that your vision is the right one, and this also needs good UX.
And so this is the sort of things that, you know, in Fortnite you have your home base, this is where you grow, just helping them try to visualize, explain what this is gonna be about, and, When we were doing the online testing very, very early on, we had then a version of what the home base was, what was the point of the home base later on.
But it's important to try to have a very low fidelity version, even if it looks a bit crappy like this one, just at least to make everybody on the same page and know where we're going.
And so, that building that tailored relationship, whatever you need right now, I can help you out, I can help explain what you're trying to do, or I can help test something that you need.
At some point during the development of Fortnite, the lead animator was trying to understand what made the husks, the little zombies, more difficult at times to shoot at.
And he had like several, the team had several ideas behind it.
Maybe the huts were moving too fast, maybe it's an animation problem.
Maybe it is because when because these these enemies are the the least, the most frail ones, they're also the smallest ones.
So it's.
interesting, but because they are the level one monsters, they're also the ones that are harder to aim at from a distance because they're small.
So maybe it's that, maybe it's something else.
And they wanted to figure out what it was about.
So I asked him, can you build a gym level so we can just spawn the zombies and we can ask players to shoot them as fast as possible and we can see what's going on and just reproduce a...
the environment, typical environment in Fortnite, with some obstacles and the zombies will go around it.
And so this is what we did.
He built a gym level and we tested it.
So it looks like this.
The idea was we asked players, we pretended that there was a contest that the ones that were having the best score, we had the prize or whatever.
So we deceived them and then it was like, they didn't know.
We gave them like a chocolate bar and they were like, okay.
But there were good sports with it.
But the idea is to think that you're in competition and they had to do headshots as fast as they could and as many shots as they could.
So it looks like this.
There's no sound, but I promise you it's shooting.
And so you see they're trying to aim at the zombies.
Awesome.
Doing headshots.
And the moments when it's really harder for them is when zombies are going around an obstacle.
And so that was really interesting and revealing at that moment.
It was not, you know, there's always like several possibilities of why do we have a problem.
But we really saw at that moment like going like the pathing code when a zombie had to go around something was really too sharp.
And so this is when it was hard for players to follow that.
So that helped us determining what was the greatest problem there.
So really trying to be a partner, build trust, and try to find ways to test little things here and there and to help the team communicate what they're trying to offer was really an important step.
Then the second step is to establishing quick wins.
You want to show to the core team that a UX process, a UX mindset is going to help them iterate faster and have quick wins.
So to do that.
The important thing is to lay out the main limitations of the brain.
And this is usually where I start, because I want to make sure that everybody understands that we have brain limitations.
Players have them.
We have them.
We all in the same boat.
And so we need to understand these limitations so we can correct problems when they occur.
So this is just a very simplified, overly simplified diagram of what happens in your brain when you process information and when you learn.
It's always starting from a perception, always starting from an input from your senses.
Then you have information processing happening.
And in the end, if you learn about something new, what's going to happen is it's changing something.
in your brain physically.
You have new synaptic connections, or some synapses are strengthening, so the synapses are connections between neurons.
So physically, it's changing something in your brain.
So I'm sure you know all that.
But when you learn about something, it's changing your memory.
And so during this process, there's a lot of factors, of course, physiological factors, biological factors.
But the ones that I, the one I would focus on usually is attention, because attentional resources are scarce, and we know that if you don't pay attention to what you're doing, you're less likely to remember it.
So attentional resources for our players is really important.
And I usually also talk about emotion and motivation.
I'll talk about that a little bit later.
And so, and again, it's overly simplified.
The brain is not this, it's a very complex thing that we barely understand.
And it's not working in different separate buckets like that.
So, it's really, you know, way more complex than that.
But it's just to understand the main limitations that we're facing.
And to give you an example for perception, I'm going to give you an example from each.
and show you one of the limitations and how we can have quick wins once we know that.
So take a look at this image and tell me what do you perceive in this picture?
People, okay. What else? Yeah?
Just yell it, it's fine.
Street fighter, okay. How many of you see street fighter characters in this picture?
Okay, roughly half the room. Yeah, gamers.
Okay, so it is indeed a representation of Street Fighter characters by the artist, Ashley Browning.
And this is really interesting because we are at GDC.
We are all game developers.
We all love games.
We make games.
And even then.
Even if we're kind of an homogeneous crowd in terms of what we care about in our gaming culture, depending on your specific connection with the specific game, you're not gonna perceive this image in the same way.
And that's because perception is subjective.
And if you're colorblind, like about 8% of the male population, well, you left out from this example and you hate me because I'm not allowing you to participate.
So it's also a reminder that we're not all perceiving the colors in the same way.
And so you have to be careful to never convey information only through colors.
So perception is subjective and it's hard for us to remember, especially with vision, because we have such a feeling that we're perceiving the reality as it is when perception is in construct of the mind.
And so it's very subjective and that's a problem because in a game, you have a lot of stimuli, a lot of inputs that your player is gonna have to interpret.
And you want them to perceive all these inputs, like visual, audio, all these inputs, the way you intended.
And because perception is subjective, you're not 100% sure that what you perceive and what you design is what players in the end are gonna perceive.
Here's an example from Fortnite.
So that's the reason why we playtest a lot, so that we can verify what players perceive.
Can you tell me what you believe this icon from early on from 2013 represents in the game?
Good job, a lot of you play Fortnite.
Okay, so that's a good answer.
This was the icon for traps.
So of course it's all placeholder in the menu.
You could see the trap icon.
And so we brought over a few players to play the game, because we had already a good prototype for the core loop.
And at the end of the session, players stopped playing.
And then I show them a few of the icons or the HUD.
And I ask them, what is this?
What is that?
So I can verify that their perception is matching ours.
And for this specific icon, some players actually did not remember or perceived it as the icon for traps.
Some players told me it was the icon for ammunition.
So if you look at the icon right under the trap one, is it right under?
It's small for me to see.
You see the ammunition icon is pretty close to this one.
And so it's a problem, because now I have an icon that's confusing.
Some players don't recognize it, don't understand what it's for.
And Fortnite is not a game where you want to put the challenge on player's perception.
A game like Monument Valley puts the challenge on player perception, so that's fine when it's the goal of your game, but this is not where the challenge is for Fortnite.
So I don't want players to be confused by an icon.
especially the trap icon.
It's one of the main icons in the main menu.
And it's quite core to the experience of Fortnite, like being able to craft traps and place traps is really important.
So the UI designer iterated on it and ended up with a stereotypical trap icon.
a representation of a trap, a bear trap.
There are no bear traps whatsoever in Fortnite, but as soon as we changed this icon, we didn't have any confusion anymore with the players we tested.
So even though for you it seems obvious, make sure that you verify that it is indeed obvious for your players.
All right, another problem with memory, and I'm sorry I put that very quickly together.
I was supposed to have a little quiz here, but it's gone.
I don't know what happened.
There's a lot of stuff that when we learn, it's gonna be gone.
We're not gonna remember it forever.
So this is what we call the forgetting curve from Ebbinghaus.
And the way he did that is he trained himself into remembering some syllables that were non-meaningful, but he could pronounce it in his language, German.
He wanted to make sure that it was non-meaningful, so it was no familiarity with the content he was learning.
And so he learned a chunk of them and then varied the moment when he had to recall them.
And when it was immediate recall, so he just learned them all by heart, you know, like for maybe 20, I don't remember how many syllables, right after he learned them by heart, he has 100% good answer.
After only 19 minutes, it drops down to around 60%.
And after a day, it drops down to 30%.
So.
That's your worst case scenario.
But it means that when you learn something that you don't care about, that is not meaningful with no methodology of any kind, you're very likely to lose about 70% of its content from one day to the next.
Our memory is very fallible.
And not only we don't remember everything, and for what we remember, it's not accurate.
And we also have false memories.
It's a mess.
We can't really rely on the memories.
And that's a problem, because a game is an experience that we have over several days, weeks, hopefully months and years.
So we want to make sure that from one day to the next, players are not going to forget about critical information from them to be successful playing the game.
And a quick win about that is to make sure that we remove some memory load.
So if you're not asking players to memorize something, then there's no problem.
They're not going to forget about it because they don't have to memorize it in the first place.
And so this is the reason why the HUD is very important.
And in Fortnite, every time you go close to a searchable object, you have the pop-up telling you what key you need to press to search that object.
you don't have to remember that information.
We alleviate that load.
Another example is if you're interested in crafting a specific item, we don't want players to have to remember all the ingredients for that.
I mean, it's boring information, and we want them to focus on where to find these ingredients, harvesting them, and then crafting the item.
That's how we do it.
what's important in the experience, not remembering the ingredients.
So we allow for functionality where you pin the ingredients, you pin the recipe in your head.
So you do not have to remember that.
So it's important to keep that in mind, to remember that we don't remember well.
And also, again, that we're not going to remember things perfectly.
I usually ask people to try to remember the posture of the thinker from Auguste Rodin.
So you can try that out at home tonight and look afterwards at the result.
It's really hard to remember exactly on which leg or legs, lay which arm or arms of the thinker because we only have an approximate memory of that.
So memory is fallible and it's a reconstruction of the mind.
So we don't like take pictures and then we can just recover whatever we try to store, the information we store.
Okay, and last thing I'm gonna talk about, attention.
So I'm going to show you cards and ask you to pick a card and to remember that card.
I'm going to go fast.
All right.
I bet I can now guess which card you picked and make it disappear.
like not impressed at all with my trick.
All right, so I changed all the cards and this is a very basic magician tricks that magicians are doing and it's called misdirection of attention.
In psychology, we call that change minus.
It's our inability to see big changes from one scene to the next.
And for those who know that these changes are happening, it seems so obvious, but if you don't know that they are happening and you're just focusing on other information, it's likely that you're not even going to realize that something's going on.
And that's because our attention is scarce.
We are not good at processing a ton of information.
Attention works like a spotlight.
When we focus on something, it's really hard for us to process other information.
We are terrible at multitasking.
It's a myth.
And we, again, like the other limitations, we don't realize that this is what's happening.
And so in a video game, we have a lot of different stimuli that happen at the same time, especially in action games, which is fine.
We're challenging people's attention.
But when you challenge people's attention during the onboarding, as you're conveying important information for players that they have to remember, well, then it's dangerous.
So here is an iteration that the developers were doing to teach the players how to regen health.
So back then, you had to consume a health item.
And to try to introduce that to players, initially, it looked like this.
So the first time the player's health is going below 50%, it's blinking.
And then there's information saying, hey, your health is low, you're going to need to consume a health item.
And then it disappears.
But at that moment, the player is focused on destroying zombies.
So it's very likely that they did not even perceive that there was something popping in the HUD.
So you have to be very careful with that.
We're terrible at multitasking.
We are not good at paying attention to multiple things at the same time.
And when players are learning about the mechanics, about your controls and everything, you have to avoid that.
to make sure that players can really process information you want them to remember.
So that's what we call the cognitive load theory.
Vanessa Emovich this morning talked about it a little bit.
But the idea that if there's too much information, we're just not going to process it.
And players don't read, so that's another problem.
We don't like to read information.
And so this was when we were testing a bunch of PvP modes.
Sorry.
This was the first iteration.
It's always good to have like three items, like this is what you need to do.
But then there was a lot of detail and cute artwork.
And so players were looking at the artwork, you see the eye tracking, the red circle, they were really focused on the artwork and therefore not reading the instruction.
And so like being in multiplayer, like, ooh, what do I do?
I don't know.
And so if you make it maybe less beautiful, but more focused on what they need to do, and reduce the text as much as you can, so then players can bang, bang, bang, try to understand what they need to do.
So that's something that's also a quick win when you need to change an interface.
So we have perception is subjective, attention is scarce, and memory is fallible.
We have a ton of cognitive biases, and so we need to make the changes and fix things, keeping that in mind so we can understand where it's coming from.
The third step is to have common language.
Also, it's really important to be able to speak the same language when there are problems so we can address them and try to find a solution.
So the language that we established, the usability part, is the same.
very established nowadays, about to talk about fun and all that.
It's the finding a way to explain how this works is more complicated.
So I'm not going to describe all that because there's ways you can find all that and I'm sure you already know about it.
We have heuristics that rule of thumbs to look at usability problems.
I just want to highlight here the importance of accessibility, especially since...
Keith is not here to talk about it.
Please check this website.
It's really well done and it's going to give you a lot of tips to have better accessibility.
And the second part is engageability, which is mainly how to bring fun and immersion and engagement.
And the main elements are, it's motivation, how to motivate players to keep playing.
And then emotion and game flow can support that.
I'm gonna go fast because I can see that the time is running.
But human motivation is still complicated.
We don't understand very well how it works.
So this is like a very quick.
mapping of the main type of motivation.
There's another talk about it if you want to reference it.
But usually when we talk about motivation, we distinguish between intrinsic motivation and extrinsic motivation.
Extrinsic is when you do something to get something else.
Intrinsic is when you do it for the sake of it.
So that's really important to try to make sure that your players have what they need to be motivated intrinsically and extrinsically.
And then whenever, when it's intrinsic, there's a meaning, and when they have to do something intrinsically, so it's competence, autonomy, relateness, it's also meaningful to what they're trying to accomplish.
And then when you survey your players, you can use that to try to find out, you know, if players get the purpose and the objectives of what they have to do, and if it's meaningful to them.
So this is when you can use Likert scales, Likert scales like this, and try to...
figure out what's going on and if they understand what they need to do in the game.
And later on with analytics.
So that's, you know, the ingredients that we can use, the rules of thumb that help us out, but it's also establishing a common language.
It's really important.
That's important, the QA also knows about it, so they can reference back to it from time to time.
And the last step is process.
So establishing a process, especially around UX testing, make sure that we start with hypotheses.
We're not just doing UX test for UX test, that the developers participate in it.
We have a plan.
We have goals.
We test a build that QA knows what to look for.
It doesn't know what we're going to test.
So they're going to ensure there's no bugs for these particular features or systems.
And then in the end, we have task creation.
So there's always takeaways, and we're going to act upon several things.
We discuss with the team, of course, to define what we're going to do, what we want to act upon.
And that's really important to have that relationship.
And at Epic, we have a very great user experience lab.
There's a few Epic people here.
So it's pretty cool to see that and to be able to bring people in to do that.
I don't think I'm going to have the time to go through the rest.
Obviously, I didn't have time to time it because I knew that Keith was not able to do it yesterday night, so I put that all together.
The main thing I want to talk about here is whenever you find a problem, like let's say your players complain that the game is too grindy.
Is it a problem from your design?
Is it like the math that's off?
Or maybe it's a problem in perception.
Because remember, perception is subjective.
And maybe there's something that is misleading to players and make them perceive that something is off.
So the example I usually take, but I'm not going to have the time to go through it all, is with the weak points in Fortnite.
So you have weak points in Fortnite when you start destroying something.
There's a little pop-up that tells you where to aim to go faster.
And of course, the math and the system design is based off players using this.
And so if players don't know about this and they don't use it, then of course, they're going to feel that the game is grindy.
And at the beginning, the players were not seeing this little thing.
They were just ignoring it.
And when I was asking what it is, they were like, I don't know.
So we iterated on it, and the UI artists changed it to make it more popping out, standing out.
And still the players were not using it.
So we're like, what the hell?
And when we were asking them what is this, players were saying, oh, this is where I'm targeting, this is telling me that I'm targeting this element.
So in the end, what the designers did is they, in the PVE mode, at some point you're gonna unlock, you don't have that ability right away, you unlock it in the skill tree.
So now it's an event, now it has meaning, and now players know there's something new.
And after we did that, we had way more players that were actually using it.
All right, so I'm going to go through all that.
I'm sorry.
So, yeah, I know, it's like, ooh, I'm the fly.
So these are the four steps.
If you want to build a UX mindset in a company, this is what worked for me in the past.
You start by building trust with the people you're working in so that everybody is sure that you're on the same boat.
you're not gonna backstab them, you're not gonna test the game and then show the VPs and say, oh, look at what they're not doing.
You're working with them and you're helping them solving the problems.
And then you establish quick wins, you have a common language, and you develop a process.
So that together you can get there.
Of course it can take a lot of time.
There's a few maturity models in terms of UX.
This one is simpler.
But just to let you know, it can take years to get to the distributed model where we really have a UX strategy.
Last thing I want to talk about is for your recruiters to understand a bit better the different UX roles.
And sometimes it's a bit confusing, because what's a UX designer?
Is it like UX slash UI?
I'm confused.
Are these people making pretty things?
So it's also important to try to establish these different roles and what they mean.
And then if you do that, the last step is really having business goals aligned also with the development teams and what they're trying to do and the support team so that everybody can reach these goals and understand the US strategy behind it.
All right, that's it.
So thank you so much.
I hope it was not too chaotic.
I don't think we have time for questions because I talked too much.
But I'll take questions, I'm just gonna stay a bit here.
So thank you again and yeah.
Oh, you wanna ask a question?
All right, run, run, run for the mic.
That was a great talk.
Thank you.
Thank you.
That's very interesting.
So this is my question.
You brought up hypotheses, and I want to go into that for a second.
Let's say you are a researcher and you have a hypothesis.
It's a problem I'm working through.
And you play through some content, and you have a different hypothesis than the designer who is biased.
You're trying to build trust, but you're also trying to test in a way that can inform the designer that what they see is not the same as what you as a researcher or potentially the player see.
So there's almost like, I want to say, conflict of interest. It's very difficult to...
So how do you do it?
Great, thank you. I'm so glad you asked that question.
It can be tricky sometimes.
When you build trust, you have also to explain to the people you're working with that they have to trust you as a researcher, and that you're trained to establish what the protocol, the experimental protocol, is going to be able to test what they're trying to test.
And this is usually what I do.
I'm telling them, bring me your questions.
give me your hypothesis, and then I'm going to build up the experiment that is going to be able to test this hypothesis.
And when we go back and forth and see if we aligned.
But trust has to go both ways.
You have to do the first step.
But then you have to make them understand, hey, I'm trying to do that.
So trust me.
Does that make sense?
She's like, yeah.
I was gonna say, sometimes they question how you build the experiment or how you run the experiment, and that's another issue altogether, which I don't know if you wanna get into.
Yeah.
Yeah, I mean, it's never always super easy.
You can just show them how it works a little bit, or concentrate on the other people who trust you and start with them, because then you can establish the quick wins and then it's gonna be easier to convince the others.
So if you have that level of resistance, start with the people who trust you and understand how this works.
Thank you.
Sure.
Yeah, I'm sorry, I'm gonna be kicked out.
I'm gonna answer questions right after.
Thank you so much.
Sorry for the last minute kind of thing.
I hope it was still valuable for you.
And have a great rest of UX Summit and GDC this week.
Bye bye.
