Okay, good, we're live.
Hello, my name is Zach Barth.
I work at Zachtronics Industries, and we made a game called Spacechem.
My part in particular was just design and production.
But today I'm gonna tell you about things that went right during the development of Spacechem, some things that went horribly wrong, and if I'm fast enough, some questions from you guys.
So, you ready?
Yeah.
First, we're gonna talk about Spacechem.
So raise your hand if you've heard of Spacechem.
Yay.
Keep your hand up if you've played Spacechem.
Keep your hand up if you have a love-hate relationship with SpaceChem.
Yes. Exactly.
So, for those of you who have never heard of SpaceChem before, this is a screenshot of SpaceChem, and it's pretty self-explanatory.
I don't really need to say anything else.
So, a question we get asked a lot is, what inspired SpaceChem?
And so, some of you may be familiar with some of our older games.
It's kind of a, it's a direct descendant of a game called The Codex of Alchemical Engineering.
which is a lot like Space Camp, but harder. It's kind of hard to believe.
That game was an easier version of a game called Manufactoid, where you programmed a factory in Lua.
Not very accessible, which is funny, because I made Space Camp.
And that's actually based off of a television show called How It's Made, which is awesome.
SpaceChem is also inspired by a park in Seattle called Gasworks Park. I don't know if anybody from Seattle is here, but if you go here it's like being in a SpaceChem level.
And it's a really cool park. It was a super fun site, super polluted. They cleaned it up and made it into a park.
Another question we get a lot that's actually really hard to answer is what kind of game is SpaceChem?
And so we invented a term called design-based puzzle games.
And it leads to a follow-up question of what is a design-based puzzle game?
So we just made that term up.
And so we're going to explore that right now.
The first answer I will give you to that question is a definition.
So a design-based puzzle game is a puzzle game where solutions take the form of a design.
What is a design?
This is a definition that I found on Wikipedia that I think is really great, because it's kind of complicated, but it covers all the points.
So a design is a specification of an object that accomplishes goals in a particular environment using a set of primitive components satisfying a set of requirements subject to constraints.
Or in normal people talk, a plan for a thing that does stuff in a place using parts with constraints.
Yeah, another way to look at what a design-based puzzle game is, is that you kind of know it when you see it.
So a traditional puzzle has usually just one solution with very little replay value, because most of the game play is in trying to either figure out what that state is or figure out how to get there.
So portal, crossword puzzles both have a single solution.
On the case of a crossword puzzle, it's very important that it has a single solution.
That kind of was part of it.
On the other hand, a design-based puzzle game has many possible solutions.
Because people, you're not looking for a state, you're looking for a, you're trying to build a design that does something.
So there's many possible solutions, and in the process has replay value, because often times that involves optimization and other sort of fun things that make it, you know, add replay value to puzzles, which usually don't have them.
There's another game, Manufactoria, is a Turing machine game that's awesome, and it's kind of similar.
And then you have games that are puzzle games that are not remotely close to being puzzle games, like Bejeweled and Tetris, and they actually have a lot of replay value because they're not puzzles and you can't solve them.
So, whatever.
So in our process, we've made a lot of puzzle games that ended with Spacecam, and most recently.
And there are four aspects that we found in design-based puzzle games that are...
common.
Emergent tools are one, and this sort of fits back into the definition.
So a design is built out of primitive components.
For us, these are emergent tools.
The difference between a non-emergent tool and an emergent tool is that non-emergent tools do something, and then it's done, and then it did it.
You can have a bunch of tools, but you just use them individually, like a hammer.
I guess we don't have to go there.
But emergent tools, like in SpaceChem, you can combine them together, and you get really crazy results by combining.
The whole is more than the sum of the parts.
And that's true in SpaceChem.
And you've got reactors.
You've got instructions.
Some of our older games, we had steam valves and integrated circuits and all that.
So emergent tools that have emergent behavior as a result.
Also having precise goals.
And this fits into a design also that it has a specific purpose of something it's trying to solve.
So SpaceChem, you have to build molecules from specific inputs and outputs.
Codex Electromechanic had to do a similar thing.
Constructor, you had to match little circuit diagram, timing diagram.
So it's all very specific.
So that way, players know exactly what they have to do, which makes it.
They can build lots of possible designs because they know what they're trying to do.
You can also add canvases and constraints, which matches into the definition of particular environment with constraints.
In SpaceChem, those are reactors, monsters trying to kill you.
In Bureau of Steam Engineering, they're steam robots, you had to fit everything inside.
And another aspect is that design-based public games should have many solutions.
And this sort of fits into the specification of an object that if you have a design space, you can create many designs in it.
So, there's many possible solutions.
And this is definitely present in SpaceChem.
So we've got these three sort of ingredients and maybe a lofty goal.
This isn't really a good hierarchy because it doesn't fit in neatly.
But what happens?
So what's the point?
What is this?
Well, it turns out that if you add all of these things together, you basically get what we call crack for engineers.
It turns out there's a huge portion of the population that their jobs are solving problems.
They go to school to learn how to solve problems.
And then you get to real life and you're filling out TPS reports and stuff.
You have to go to meetings.
And that's not problem solving.
That's politics.
But then you play Spacechem and it's just pure, unadulterated problem solving.
And a lot of people really love that, and that's awesome.
And another aspect of this is that because everybody's creating their own design, as opposed to just finding the one solution, people have a really strong sense of ownership, which makes this very likely to be a favorite game of theirs, which is something I've heard from a lot of you, which is fantastic.
One of the other cool side effects of this is that making these kind of puzzles is really easy.
So we did the first ever that I know of space chem, like in-person space chem tournament at PAX.
And this is our Ironclad Tactics booth, but we had a bunch of people there playing space chem.
And 30 minutes before I realized, oh, I did not make a puzzle.
We should make a puzzle for this.
So I went on Wikipedia, found some cool hydrocarbons, found acetone, and kind of mocked that up in space chem in the level editor and figured out that.
oh yeah, that's mostly methane with a little bit, so if we subtract out some methane, we've got a carbon and oxygen.
And it turns out that the oxygen is too above carbon in the periodic table, so we could take those extra hydrogens, and fusion, there we go, and add in some bonders, that's probably enough.
And bam, it's a puzzle!
Is it playable?
Sure, maybe, I don't know.
And that's sort of the great thing about SpaceChem, is that, and that's how we made all of our puzzles for SpaceChem, was just making something that looked like it was playable, but because there's such flexibility in how these are solved, that you can just do whatever you want when you're making the puzzles.
uh... something that falls out of a lot of these these design-based puzzle games are some really awesome community features when we did the codex we put it on uh...
flash game website, can't think of the name uh... it's a big one, you guys probably know what it is uh... and they have forums and a congregate, is that it?
A lot of people posted in the comments, and they're like, this is my solution.
Here's the crazy code for it.
And somebody else would load it up, and they say, you know what?
I shaved two cycles off your solution.
Somebody's like, oh, I shaved another five cycles off.
And so what's going on?
What is happening here?
This is kind of weird.
This doesn't happen in a lot of other games.
because a lot of games aren't like these.
And we realized that players like to compete, they like to optimize their solutions, and they like to share them with other people.
So when it came to SpaceChem, instead of letting people just kind of duke it out in the forums of Kongregate, which is not the best place to do anything, we started adding these all as first-class features.
So starting with histograms.
I'm sure all of you who have played SpaceChem know about the histograms and hate them.
Histograms are awesome because they're basically like an egalitarian leaderboard.
When you have a game with an actual leaderboard, you know, you're going to be like 50,000 maybe, like slightly behind like xxxpantherfanxxx and somebody who just like slammed on the keyboard, you know?
And it doesn't really tell you like, did you do well? Did you not?
How many people are hacking? Like leaderboards are awful.
In Spacechem, you've got this leaderboard, kind of, but it shows you the distribution, it shows you like where the average falls, it doesn't have any asshole's name on it, you know, it's very egalitarian.
It also encourages optimization, because you see that when you're to the right of the average, that you can probably go to the left, and it wouldn't be that hard.
It also has the side effect that everyone is a winner.
And what we mean by this is that when you solve a level, when you optimize for cycles, you probably are not doing well with symbols, but we are logging all of those into the graphs.
So every time you do really well on one, you're doing really bad on another, and you're padding out the bad side, and it kind of increases the ability of everyone to do better than average at something, which is fantastic.
One problem, though, is that these are not good for every game.
And actually, the portal, there's a lot of fans that like it, there are a couple of fans at Valve of SpaceChem at least, and who wanted to add histograms to Portal 2.
So they did.
And their histograms are, the axes are time to beat the puzzle, I think, and number of portals shot, both of which are terrible, because, you know, Portal's a performance game, SpaceChem's a design game, if you mess up, you have to go back over and do it again.
I don't think anybody, I tried searching for pictures of the histograms on Portal 2 and could not find them on the internet, which is saying something.
So it doesn't work in every game, but for some games like SpaceChem it is amazing.
The funny thing though, we tried to push, we're like, no, we don't want leaderboards.
So people went and made their own leaderboards.
If you go to SpaceChem.net, which is probably the domain we should have bought, there's a SpaceChem leaderboard where they reverse engineered our file format so that people can upload their saved files and put it into a leaderboard that we didn't make.
So, and honestly, that's probably better than us making our own, because if it gets gamed, whatever, it's not ours.
You know, that's their problem.
But these are awesome.
One of the great things about a hardcore game like Spacechem is that you've got hardcore awesome fans, who make their own leaderboards and reverse-engineer your file formats.
It's awesome.
Another cool community feature we did were videos.
We realized that people were sharing the little codes for saving, and that was actually only because we didn't even know how to make games that save stuff in Flash, but, uh, people were sharing these codes and sharing the designs.
So we realized, you know what we're gonna do?
We're gonna make it so you can press a button in SpaceChem and it'll export, like, uh, it'll take you to a website where it uploads, uh, like, images of your solution.
You can click on reactors and view inside.
And really quickly we realized, wow, this is a terrible feature.
Because if you look at that, is that a good solution?
Is that bad?
Is that clever?
Is it awful?
I have no idea.
So we realized really quickly that as cool as this feature is, it really needs to be a video because otherwise it's useless.
But then we realized, oh god, where are we going to put those videos?
That's going to take up so much more space.
It's going to just, ah, put them on YouTube.
That's where you put them.
Because they are glad to host your videos for you.
And so we did.
So we built a recording, uploads to YouTube.
It goes on their dime.
All of it links back.
There are 11,000 SpaceChem videos on YouTube.
That's kind of awesome.
This is normally where I would talk about how to do this, but that's going to take way too long to talk about now.
So I'm not going to talk about that.
But you guys can talk to me later about that if you care about that.
So we did it in a cross-platform way.
Super cool, super simple, super reliable, and potentially open-sourced to anybody who's interested.
Another community feature we had were custom puzzles.
This is our kind of gaudy looking level editor for Space Game that's ugly but highly functional, and allowed us to do something really cool.
This part's kind of conventional. A lot of games have level editors.
What a lot of games don't do is have level editors that feed into a thing that the designer picks the levels that get published instead of just having them go in so they all get rated and there's terrible stuff.
Like, I think Super Meat Boy, they have a bunch of user levels, but users had to filter through them.
So instead, we did something called the journal, so it looks like a scientific journal, and kind of fits in the universe of the game.
And I went through for months and hated it, but it was cool, picking out all the puzzles that looked like they were good, because I didn't play them, because I didn't have to, because it's Space Chem.
And then published ones in volumes that looked cool.
So, and there's a lot of actual pros to this.
There are no trash puzzles.
Like, anybody who made up, like, my first puzzle, ASDF, like, did not see the light of day.
There are no puzzles that broke the spirit of the game.
Anybody who didn't know, like, a thing about kind of making fake chemistry, not going in.
Themed issues made it feel cohesive.
That, you know, the first, the one on the top, issue nine that you see, is actual science.
These are all reactions that are based on actual reactions from real life.
So we could do that kind of theming stuff like that.
It's super awesome.
And getting published is really cool.
And having a game, kind of, you do something for the game and it recognizes you and puts your name up there.
When I got really lazy at then, I just started doing research anthologies that were just based on a, like, the common theme was that a person made them.
So, and that's cool.
Like, it was easy for me and it was cool for them because the game recognized how awesome they were.
The downside of this is that it's a pain in the ass.
So, surprise, surprise.
So, those are all some good things from SpaceChem.
Now we're going to talk about the bad things that we did terribly, terribly, poorly, bad job.
Cautionary tale number one is a peel.
Everybody loves science, right?
No, everybody loves Portal.
You would not believe how many people played, they took a look at Space King and they're like, oh, I'm not good at chemistry, I'm not gonna play your game.
And the funny thing, you guys all know, is that it's not even about chemistry, it's a game about programming. God.
So, but what happened? I mean, is science really that unattractive?
No, but Spacechem is.
Here's a screenshot from Spacechem.
And Ryan, if you're here, we love you, and you did a great job.
But this is me making a game that is like, oh yeah, there's going to be lines and circles, and we're going to have to make this look as pretty as possible on an indie budget.
Like, this is Spacechem.
Battlefield 3 also came out that year.
It looks like this.
Like, which one do you want to play?
Like, if somebody showed you screenshots, they're like, you can buy this, or you can buy this.
And given this one's a little bit cheaper, but this one has guns in it.
So.
But the truth of it is that SpaceCam, you know, like these kind of games can be attractive.
Here's a game called Splice, which looks beautiful, and it's a puzzle game, and it's kind of programmery.
It's about like binary trees and stuff, and it looks really good.
And it even looks science-y.
And people are like, wow, that looks like awesome science, as opposed to that science.
So, appeal is important and we sort of didn't realize that until it was far too late.
But fortunately for us, Spacechem is addictive.
And like all addictive substances, it is up to your questionable friends to get you hooked on it.
And I think that's really why Spacechem was successful and I'm allowed to be here today is because all of you who played Spacechem and everybody who played Spacechem told their friends about it and they're like, you should try this game.
And they're like, but it looks like...
and I'm like, no it's really fun, I will buy you a copy.
And because of pushy people who really enjoyed the game, it really had an awesome viral reach, outbreak, whatever you call it.
That has negative connotations, I don't know.
Cautionary tale number two, difficulty.
When we designed Spacechem, we were designing for our previous games for engineers audience.
We made a game about, called Constructor, about integrated circuit design.
You're placing silicon.
It's, uh, yeah.
So it was, these are people who really liked hard games and, you know, played our old games and were like, oh, where's the challenge?
These are easy.
It turns out that is not the same thing as the games for normal people audience, who like things like Portal that are very approachable and palatable and well, you know, they, they, they're easy to play.
It's nice.
Even when they're challenging, they're still easy to play.
In SpaceChem, you have to beat over 50 puzzles to complete the story.
It takes up to like an hour, if not more, for a puzzle.
I talked to somebody who played the last puzzle for like a week.
Not straight, but in pieces.
And then on top of that, there are seven defense missions, which are super vague and are like harder than average.
Okay, so this is the difficulty percentages of SpaceChem levels, and you can see that some of them are like 50% or lower, people who boot them up complete them, which comes out to a bottom rating of like 2%.
And if you compare this to other games, it's actually...
It's more on par closer to Meat Boy than games like World of Goo or Bastion, which have like a 15% completion rate.
Which kind of leads to an open question. Is this a bad thing? Is this acceptable?
Spacechem is really hard.
It's kind of cool being able to say you've made one of the hardest puzzle games ever, but I think next time wouldn't make it so hard, because then more people can play it and more people can like it.
Cautionary tale number three, and we're running out of time, so I'm going to blast through this. The tutorials in Spacechem suck.
Like, I...
So...
You guys know why! I don't really...
The most important rule of making games is you have to ship it.
So, which in this case is finishing the presentation.
So, our theory about tutorials, because we all know why the Space Chimp tutorials suck, is that...
When we did the SpaceChem tutorials, we put a lot of text. We tried to explain it.
Kind of like, you're in school, you're reading stuff, and everybody in school reads everything and thinks about it, obviously. No.
People learn through trial and error. They're gonna click stuff, and they're gonna click it again, and they're gonna click it like five times, just in case two clicks aren't enough.
People learn through trial and error.
So, in order to make a good tutorial, just make a little like bumper padded room where people can just bounce around and click on everything, and ultimately find their way to the door and like move on to the next one.
So, that's how all your tutorials should be.
More simply, you could just playtest your game until people get it right, and then just keep tweaking stuff, and then play...
We didn't do enough playtesting with SpaceChem, but, yeah.
Okay.
We're gonna finish up. RapidFire post-launch secrets. These are the parts that you guys are gonna love!
Steam! Great platform or greatest platform?
Greatest! Over 90% of our sales come from Steam.
Mac and Linux, is it worth it?
That was the question at the end of the last talk.
Kind of.
Like, 10% of our sales came from Mac and Linux.
And the split was probably like 90%, 8% on Mac, and then 2% on Linux.
And then it lets you get on the Humble Bundle, which is amazing.
What about iOS?
Kind of.
Even SpaceChem did OK on the iOS.
Although I think it was mostly PC customers just buying it again on their tablet.
What about Android?
The iOS sales were pretty low compared to PC.
Android sales were one-fifth of that.
Not worth it, unless you count the Android Humble Bundle, which is amazing and did way better than iOS ever did for us.
So, something to consider.
Funding. How did we make SpaceChem?
We worked nights, we worked weekends, we did profit sharing, cost very little out of pocket, and we all profited wildly from it.
So, yay.
uh... speaking of how much yes so we made like seven hundred thousand dollars on space camp and that includes humble bundles team sales private store sales on the long tail we still sell a little bit stick starters for physical copies just a stretching out of what you know looking as much as you can but uh... that's that's the name of the game right how do we have a support and that is i do that personally and this is awesome because when people email me they buy the gary debate by copies based on we put on fifty percent off the next day and uh... and they asked for poetry or something i don't know if you guys are that good enough but he wanted me you want to get one sale the air but the important sale and i want to sell any felt on the as for palms i wrote a poem and i will just i think i got off on it okay so once was a bloke on the net but space camp but that was upset This game is on sale, but I'm full of fail, so I think that it's time to make threats.
I've been wronged and I'm plagued with frustrations, and demand poetry as reparations.
Although I thought twice, in the end I was nice, you can't beat my customer relations.
So...
So, the future.
What are we working on now?
Ironclad Tactics.
Check it out online.
We'll talk about it later.
Thank you so much for coming out.
Thank you, CAs, for being awesome.
Thank you, GDC, for having me.
So, how much time do we have left?
I'm kind of exhausted.
Do we have like five minutes?
Okay, question time.
Rise, ask questions.
You guys have to talk as fast as me if we're going to get through this.
uh... there's a microphone there, there's a microphone, you gotta get to the mic, oh there's a microphone there, yes, go!
okay uh... you had an article at one point about how you thought the demo was a failure, oh god yes, but but i personally found the demo completely convinced me to play the game uh... if it was half as long would it have also convinced you to play it?
i don't know if that's true because i liked that it was longer than most demos, i think you would have bought it anyway you think so? i think so, it's space cow, yes!
so so quick So, for your next game, are you going to spend more time refining the demo first, rather than like the final ship thing?
I've been told that a game with a compelling gameplay trailer and no demo will do better than the demo, or at least equal.
Please demo your game.
I'll just give you a free copy. How about that?
You can be in the beta.
Thank you.
Next.
Um, how do you know that a puzzle is solvable?
And also, do you know...
You give it to a play tester.
You can also...
With SpaceChem, there are two stages of solvability.
The stoichiometry phase, where you make sure that there's, like, the right atoms and the right combinations.
And then there's the does-it-fit-without-losing-your-mind inside the little box of the reactor phase.
So I did the first part on paper.
And so I've never beaten the last level of SpaceChem.
I can be honest.
I have had enough space cam, I think I deserve a pass.
I never beat the last level, but I designed it, I spent like a week proving on paper that it was possible, passed it off to some playtesters, they beat it, or they didn't beat it, they said it was too hard, went back, refined it to make some of it simple.
Instead of hydrogen, it used to be methane that powered everything at the end, which is way harder to break apart.
So, and then, they're gonna re-do the stoichiometry, pass it back, some people beat it, not enough people, obviously, but that's, we've been through that, so.
So you proved it on paper?
I proved it on paper and then gave it to playtesters.
thank you. I'm not saying that's the way you should do it, I'm just saying that's the way we did it.
This is not advice, these cautionary tales are indeed cautionary tales.
I actually played through the game and beat it and thought it was awesome.
Something you didn't talk about, was the story, was that like an afterthought or was that something you had conceived of from the beginning? Like the writing was actually really good.
So we start all of our, and you should be careful because my wife writes the stories.
But we start every game with a story.
And there was a talk at PAX Dev last year about board games, where a lot of German board games, they make a game and then they slap a story on the back of the box and hope it made it into the printing of the game.
And we start every game with a well thought out story.
Because eventually we get to a point and say, what do we add now, or how should this work?
And you can turn to the story and say, how would it work in the story?
That's a big part.
All the levels in Spacechem were inspired thematically by the story and where they fit in, and the career path of the protagonist.
and so for us story is very important production wise the story in Spacechem was very simple and very limited because everything about Spacechem was honestly so Ironclad Tactics the game we're working on now for contrast is a seventy page graphic novel that we have way too many people working on and uh... but it's going to be amazing because it weaves in with the game and it's not quite the same as like a world that has the story in it but we're still pushing that way because it's very very important to us you to feature was super cool thank you how long did you spend getting that in the game just roughly one of the programs right it's uh... yeah yeah it's it's like three but i guess that's how much program but uh... it's it's pretty it's it's surprisingly not hard once you figure out how to do it the across platform yet cross platform we use a c sharp for everything exclusively so we we have a way to do it if i'll tell you i later how it works and like that that would be the code I know for a little while you gave out the game to schools for free.
It's still.
Oh, it still is.
Still.
Anybody here who has a school who wants Space Chem, it's yours.
Oh, maybe I shouldn't have said that.
are there any cool again it goes again from like professors or anything about what it's a the one and i don't know if this is going to pressing but uh...
so so we've been at the schools all over the world and it's not like a lot really like a hundred but on so uh... typical school in america will say oh yeah we want to have a space comes when it is his chemistry And that's where you guys all laugh, because yeah.
In the schools in the UK, however, there's apparently some sort of strong computing in schools thing, where they say, oh, we want to use SpaceChem to teach kids programming familiarity, which makes more sense.
You give it to the schools in Eastern Europe, and they say, oh, we want to teach kids how to be problem solvers, and how to just approach a problem, break it down, and use problem solving logic.
And I think that shows differences, the different ways in how they use the tool reflects their culture.
But those are also just total anecdotes.
Anecdotal evidence is the best kind of evidence.
I agree.
Yeah.
Do we have time for more questions?
One more.
Hi.
Great talk, by the way.
By going off of the subject about bringing the game to schools, some games in the past have given to schools have also have bundled with lesson plans or things of that sort.
When you give the game to schools, do you usually give any kind of suggestions of how you've seen it effectively used in the classroom, where you just kind of let them have at it?
Or have you had any ideas yourself of how you would want to see it used?
We have a two-page document on ways you could possibly use it, but that's really why we're giving it away for free.
no school's gonna buy Space Cam. Like, it's just not happening.
Well, I don't buy it, but rather than...
It doesn't... it really doesn't fit into a curriculum, and that's the thing.
Like, and it has, like, there's, like, people's heads exploding, and, like, we described the nostrils sliding down his cheek, you know, and little touches like that, that...
that's not exactly what schools are into.
And, uh, and it definitely doesn't fit into curriculums, because it's nothing like real life, and that's sort of...
I mean, we can talk later, like, we do a little bit of educational games on the side, and, uh, and that really fits into our philosophy of how we make educational games, is that, like, try to make it as, like...
weird and different as you can right mistake and i think that's all the time we have so thank you guys so much for coming up