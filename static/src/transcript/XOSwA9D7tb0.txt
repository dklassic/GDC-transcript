Hi everyone, and welcome to our virtual version of this talk, Until You Fall, Building a Satisfying VR Combat on a Budget.
I'm Dave Bennett, the guy with the glasses on the left.
And I'm Patrick Shelbier, the guy hiding behind swords on the right.
And we are both game designers for a studio called Shell Games, and if you haven't heard of us, we're a studio that works on a wide variety of different weird things, both original IP and client work.
But our most well-known VR title is probably I Expect You to Die.
It's a kind of escape the room spy fi puzzler where you need to escape death defying situations that only a, you know, spy with telekinesis would find themselves in.
But again, we work on a lot of other weird stuff, ranging from location based entertainment to physical toys that teach chemistry to iPad apps that teach your toddler how to stop and go potty with the assistance of Daniel Tiger.
But the most recent game that we solved weird problems on together is a game called Until You Fall, which is a melee combat action game with roguelite elements where you are a badass glowing knight fighting your way through a neon hellscape that kind of feels like it was taken from every 1980s album cover.
And the core combat in the game is striving to be what we call like a rhythm light combat or gameplay.
that focuses on choreographed attacks and blocks, and tries to maintain a much faster pace of combat than we were seeing in other melee games at the time.
And to give you an idea of what we mean by that, we've got a clip from one of our top players.
And a shout out to Krosis for giving us that.
So yeah, kind of with the high level of Until You Fall kind of established, I also wanted to take a moment and kind of give some context for why Patrick and I wanted to give this talk.
So when we first started working on Until You Fall, one of the early goals was to make something that was not only high action and very high intensity, it was also replayable.
It was kind of a stark departure from I expect you to die.
But with so many other VR titles kind of under our belt, we wanted to, you know, try stuff we hadn't done before.
And even though Patrick and I are both game designers at the studio, we both had different roles on this project.
So I, for example, am the project director.
who's responsible for kind of the high level vision of the game, as well as the theme and overall cohesiveness of the game itself.
So you can thank me for the weird synth wave and neon nights.
But Patrick is the design director, and he's in charge of the combat systems, the kind of player experience and the overall implementation of how we actually do combat in this game.
So.
Even though this wasn't Shell Games first VR title, we faced a lot of kind of difficult challenges.
I mean, like we've worked on, I don't know, this is like number eight or ten or something like that.
There's a lot of VR that we've done at the studio.
And for Until You Fall, there are a lot of useful lessons that we had learned that we wish we had known earlier on and.
kind of after talking with Patrick and trying to reflect on our experience making the game, we wanted to take these lessons learned and try to give them as takeaways to give to you guys so that hopefully you guys don't end up making the same mistakes.
So Dave and I talked about it a lot and cut a lot of slides and tried to boil down all of our takeaways from Until You Fall into kind of five major points that will be the subject of the talk that we're going through here today.
One, it's okay to reference non-VR games for your VR game.
Two, be wary of adding secondary VR interactions.
Three, know your player fantasy, especially for VR.
Four, set the rules of your virtual reality.
And five, find ways to incentivize your player fantasy in your gameplay.
So kind of getting started with the first takeaway, it's okay to reference non VR games.
And this might be something that's just more specific to us and our studio.
But there's a lot of things that with our experience in VR, it kind of really made it hard to trust our instincts.
So kind of taking a step back when we first started working in VR, there's a lot of stuff that we had had to throw out a lot of experience or instincts, that kind of thing. And.
In VR, things that seem oh so obvious and so straightforward actually aren't, and more often than not can make players just super sick.
And that can lead to you feeling like all of our experience up to this point, making other types of experiences, location-based, tablet, PC, whatever.
It feels like it leads you in the wrong direction and can lead you to becoming super shy about trusting those instincts that you'd honed over years of making games.
And.
kind of worst of all, this actually leads to this feeling of, uh, things you can and can't do in VR, these generalizations that kind of become ingrained in us.
And it becomes this vicious cycle where you can't do that because it didn't work that one time. So we shouldn't do it again.
Therefore it becomes the truth that you can never do that.
And even for problems that in other mediums have solutions that are pretty straightforward.
it feels like you have to invent entirely new, sometimes very expensive, solutions for these problems.
So something that became a really important learning point for the team in pre-production was that our instincts aren't always wrong, and sometimes the non-VR solution to a common game problem can still work, especially when it came to game feel in Until You Fall, because our game was a...
hack and slash games. So our hit impacts were some of the most important things. And a big challenge early on for us was figuring out how to get that same good meaty game feel that you could have in a non-VR hack and slash or a non-VR combat game to translate faithfully into VR.
And non-VR games would try to accomplish these things with screen flash, camera shake, hit pause, sometimes an animation hit pause, things that some of our developers were nervous about trying to translate into VR.
But we did end up studying a lot of these non-VR games, and even when we couldn't directly take the solutions from those games, we were able to really use those as our starting points and as our tone targets.
And sometimes the solutions actually did just work, which was a happy accident.
We found out that screen flash and camera shake worked way better in VR and were way more successful in terms of getting a satisfying hit than we thought it would. And we only needed like minor tweaks to get them VR ready. But in every case, we were always ready or capable of using those non-VR solutions as starting points.
and then iterating towards those VR-specific solutions if we needed to.
And for Until You Fall, this directly led to how we solved the game's movement system, how we solved all of our impact in our VFX system, and actually led a lot towards our final solution for weapon weights in the game, since we made that as a direct response trying to come up with something to mimic the animation lag on a heavy hit.
in in a game like Devil May Cry or God of War.
So even though the non VR solution for some of these problems do work or at least serve as a good starting point, we are still making a VR game.
And one of the pitfalls of working in VR is that it feels so real and you want to make it feel as realistic as possible.
And I guess our second takeaway for you is to be aware of those secondary VR interactions, also known as don't drop the sword.
But we'll get to that in a little bit.
So when I'm talking about secondary interactions, I'm really talking about those high fidelity moments of VR that are super exciting and super seductive.
It's those those things where it's just you touch everything in the world.
You pick everything up.
You can interact with anything and everything, because as a virtual world, it should reflect reality and be realistic.
So I should be able to pick this object up and hit it against this other thing.
And it will work the way I expect it to because of my experience in reality.
And a lot of early VR actually based their gameplay, including I Expect You to Die, on having this wide variety of novel interactions, having the sandbox of different things you can interact with.
But if your game is trying to have a more narrow or specific fantasy, having a lot of these interactions can actually become a trap, which if you haven't figured out already, is one we fell into during Until You Fall as development.
So to kind of illustrate this, I wanted to kind of walk through some of the earlier features that or, you know, the lost features of until you fall that, you know, we ended up having to walk away from. So.
Way back in the before time, the pitch for until you fall actually started with a solid combat prototype.
So it was just a simple thing where you were fighting one enemy and it highlighted the fun nature of our choreographed combat system.
And.
You know, obviously, to take that from a prototype to a full game, we wanted to make it a fully immersive, fully featured VR dungeon crawling experience.
So.
With that target in mind, we wanted to we started prototyping all sorts of features that seemed absolutely necessary to not only hit, you know, stay in the space, but also keep it entirely immersive in VR.
So we added a bunch of stuff like, you know, looting because there's treasure in dungeons consumables because you need potions and things to acquire and heal yourself, which means I guess you have health and maybe money.
I don't know.
There's weapon holsters because you have a sword, so you got to put it somewhere.
The sword has physics, so I should be able to throw it.
That makes sense.
Also, the weapons should be, you know, stuck in trees because, you know, they're sharp and sticking them in trees or, you know, even better, enemies is awesome.
And hey, there's a big rock over there, so I should be able to climb it because I can climb in real life and more stuff along those lines.
And for every feature that we added, it ended up inspiring us to either add more features, more depth to the existing features, or more polish to make sure it met player expectations in addition to our own quality bar.
So we kept adding these features and we were sort of following this normal path of iteration, which, you know, coming from a studio that made a game like I Expect You to Die was not super surprising.
But we started to get some issues with our playtest, especially as we got more into combat playtesting. We noticed that players were very frequently during combat dropping their swords, and after they've dropped their sword during combat, they'd look at the ground looking for their sword, fumble around trying to pick it up, and get beat around the head and shoulders by even the most basic enemies in the game. And it turns out this is actually the symptom of a bigger problem.
Because by adding all of these secondary interactions in pursuit of that VR immersiveness and that feeling of being a fully featured game, we'd added a bunch of new ways for players to be bad at our game.
Climbing introduced falling, particularly during combat.
The whole concept of weapon holsters introduced the weapon dropping issue.
Grabbing became grabbing the wrong thing during combat.
throwing was really just dropping with style, and weapon pinning was tough because it was really awesome against the last enemy in a room, but mostly super frustrating when you were trying to fight and your weapon was getting stuck off screen. And each one of these problems individually was solvable, like we could iterate into solutions to shave the rough edges off of these, but the iteration cost for all of those little rough edges would push us out of scope.
So ultimately, these were all features that we felt we couldn't actually afford and be faithful to.
So if the worst offender is dropping the sword, obviously the solution is to not drop the sword, right?
I mean, we actually did take a hard look at what was really important to our core gameplay.
And going back to our simple prototype, it's spoiler warning, it was about hitting dudes.
And we asked ourselves in what ways is it okay to be bad at this video game?
And as we went down the list of all these things that we thought were oh, so important to make a fully featured dungeon crawling game, a lot of the VR interaction polish that we had added was just straight up removed or re-imagined entirely. And wherever possible, these points of friction, these kind of stumbling blocks that vexed players so often, we tried to turn those moments and make them opportunities for the player to feel awesome instead. And going back to dropping swords, I think weapon summoning Our solve for that became kind of our best example.
So in our game, instead of dropping swords and having physical weapons, you have magic hands with magic swords.
And at a moment's notice, you can summon that sword out of thin air.
So if you don't want your sword, you can just get rid of it and be able to interact with a limited number of items.
Or, you know, if you do it by accident at a moment's note, you can just re-summon that weapon and it's OK.
So these small moments where it's oops, I goofed up now actually look and feel awesome.
And off of that, don't drop the sword actually did become a mantra on the team as we went into our next round of iteration.
And a process that we ran through that we'd recommend absolutely doing with your own games and your own features in VR is for every feature, asking yourself, does this feature do anything other than increase VR immersion?
And if not, does it introduce more depth?
or confusion? Does it add new ways to fail? And is it supporting a core interaction in an important way that justifies it doing that? And even if it does, could another solution do that same thing in a way that doesn't add those points of failure? And lastly, is this a feature that it is supporting or undermining what your core player fantasy is?
Or does it have anything to do with it at all?
And that takes us to our third takeaway, which is knowing your player fantasy and really kind of understanding it and instilling that knowledge to your player.
And this is something that, you know, as designers, we generally, you know, try to establish a player fantasy early on.
But for until you fall in for VR, especially, it seems extra important.
So once we had kind of changed the rule to, you know, you can't drop the sword in this game.
It really kind of helped us establish what your fantasy is in this world.
You are not some bumbling idiot.
You are a badass magical knight from the moment you put on the headset.
It's not a story of zero to hero.
This is a competent swordsman, at the very least, becoming a literal sword god.
And as a roguelite, it's also a game about dying and learning from your mistakes while still feeling OK about it.
In this game, death is expected, so it needs to feel worthwhile and understood.
And you didn't die because you are a chump.
You died because the odds are unbelievable, and you fought valiantly until the bitter end, and you'll be rewarded justly.
So that put us in a place where we want to make the player feel empowered in a game that is still a roguelike, knowing that you will die.
So to reiterate...
And until you fall, you're supposed to start off feeling like you are a competent swordsman in this universe, and then progress towards being this transcendent figure.
And preserving that heroic identity became the guiding light for a lot of our secondary features that we did keep in.
For example, our rewards, like every upgrade or item that you select in the game, is actually a crystal that you grab and crush in your mailed fist.
and that sort of underscores that moment of winning.
Our narrator, after this pivot, was redesigned.
And she was turned into a character that was much more earnest and there to pump you up and tell the player that, yes, they are worthy of this challenge and they can overcome it.
And what they are trying to do is difficult and worth cheering on.
And lastly, something that actually helped a lot with this, was introducing a new, weaker enemy.
Because we found that our husks, which were our basic enemy at the time, were accomplishing a lot of technical goals for us.
They teach you basic combat, they showcase our mechanics, they explain to players the best way to play, but players would still die to them in the tutorial and end up feeling weaker because of it.
So the purpose of the lesser husks that we added later on, is specifically to remind you that you are not the bottom of the power rung in this universe.
You are strong, and these are the weakest things in the world that you can dispatch easily and quickly.
And a lot of these features became ways to invite players to really embrace that power fantasy, even if it was their first time using VR.
And we found that was pretty crucial to get people into the experience so that they didn't immediately feel like it was something that they were bad at or should feel embarrassed of while they were learning.
And even if you're new to VR or a veteran, it's really important, at least we found, that having this strong player fantasy and teaching this to your player and having them internalize it, it helped really reinforce the kind of most important part of the game, which was the combat.
What we mean by that is that as soon as the player kind of started believing that they were, yes, a hero, yes, they were a badass magical knight, they started acting like it.
And it manifests in subtle ways, but they're important.
So for one, you know, if you're being told that you're heroic and you look cool and you feel cool, do you start standing up a little more straight?
You, uh, strike heroic poses, whether you mean to or not.
And then when it really comes down to the combat, you start taking bigger, more exaggerated swings, which.
not only plays better and works better with the hardware that you're playing on, but it also looks better, feels better and is just awesome.
It's like for people both in and out of the headset, it's makes this, you know, kind of goofy thing into something actually heroic and enjoyable.
And also as a bonus, it's really helpful for scope control.
So for until you fall, if the feature did not help make you feel powerful or worse made it, made it undermine that feeling. We just straight up cut it.
Or in cases where we really couldn't cut it or we really kind of thought that, no, this could be cool if we just did one more thing.
We actually just kind of tried to change the rules for how it worked.
This idea of changing rules or setting up rules for what our specific virtual reality was became another big mantra or something that we tried to carry forward into production.
Because really what we were asking is...
what is our game's baseline fidelity of interaction?
And to really dig into that, we found that this is something that is actually a pretty hot debate right now in VR development and in the VR gaming community, because the nature of VR creates this bottomless pit of expectation for...
minute fidelity and functionality.
Like we suddenly now have this universe where we have hands and the hands can touch everything and we can pick things up and we can manipulate them.
And we as developers need to pick the point where no, you, you can no longer do that in VR because it's almost impossible to meet every request for fidelity of interaction.
And for Until You Fall, during development, we did start to get a lot of that.
And we got a lot of playtesting requests for features that we deliberately walked away from, either because we didn't have the scope for it or because we knew that it just added a lot of noise or ways to fail to the game.
So it became this big sticky question of how can we preserve that sense of immersion and that selling point of VR without blowing our game scope.
And one of the ways we kind of inadvertently early on done that was by rewriting the rules of reality.
So you can't throw up the sword was actually our first stake in the ground at trying to solve this problem and As an unintended side effect players were no longer asking for holsters because they knew where sorts lived in this world They were in your hands. They're magic swords with magic hands, obviously, so you don't need a place to put them and Based off of that kind of initial change, we started establishing other laws of our world to head off some more problematic requests that we had noticed.
So, for example, looting and fighting in our game is always separate, and that helps solve the problem of picking up the wrong thing at the wrong time.
There's no way the enemy will sneak up on you while you're looting, and there's no way to accidentally grab a piece of loot while you are trying to fight for your life.
We also kind of shrank the size of our combat arenas to make them small and focused and make sure that the exit is always clear.
And in our world, because you got magic swords, these weapons have super abilities and what they really are.
These kind of catch all grab bag powers that actually let you do things that otherwise would have been too risky or too scopey to actually implement into our game.
So with all this combined, it really changed the way the players started at requesting features and requesting things in our game.
So in our world, rather than asking for a way to throw weapons because you can't drop swords in this game, it became a request for super that let you throw the weapon.
And it was kind of great because it helped recontextualize a lot of things and make requests a lot more sane, even if we couldn't entertain every single one.
And that was because.
We had established this virtual reality where the nomenclature for weird things that you wanted to do was your supers.
When we took a big step back from that and tried to figure out, okay, what's the system, what's the process underlying this iteration that we're doing?
When Dave and I talked about it, it was really that we were deciding on the fidelity of our world.
We were deciding the smallest interaction.
or that was vital for the game.
And our recommendation moving forwards is to take a look at what that baseline fidelity is for your game and consider cutting interactions that fall below that line in terms of gameplay importance.
Because things that fall radically below that line may not be missed.
And in cases where you can't do that, we found other ways to remove wants.
from playtesting requests that we really couldn't support from playtesting.
For example, in Until You Fall, we had a lot of playtesting requests initially of players wanting to pick up enemy weapons and use them.
But as soon as we made weapons dissolve immediately after killing an enemy without letting them touch the ground, those playtesting requests disappeared.
And it wasn't...
that we deprived players of the privilege of looting these weapons, it was because in this universe, clearly, weapons dissolve.
But and I'll throw this out, this is still something, like we said before, that is kind of a contentious topic in VR development.
Until You Fall gets critiqued a lot for being a VR game with a narrow feature set.
Some people really love what the game could accomplish because of that feature set, but it's definitely an ongoing conversation.
So we're not saying that going narrow and being very laser-focused on your features is the right way to go about VR development.
It's just what ended up working for our game and for our team.
So...
With our limited interaction set and our more focused core gameplay, it becomes really important for us to then incentivize the interactions that we do have.
And one of the ways that we really found helped us out was actually incentivizing our player fantasy.
And put it another way, we really looked for ways to find how to make the fun way to play our game the mechanically the best way to play our game.
And that's really exploiting this idea that something's not dumb if it works.
And that was pretty important to us because we saw early on in our playtesting that for especially adults and teenagers and especially players that are new to VR, they can feel self-conscious while they're playing.
And that affects how much fun they have and the type of poses that they strike while they're playing.
And beyond that, fatigue and focus will naturally push players towards doing whatever the smallest effective action is for the game, aka wee-waggling.
And in Until You Fall, because we wanted to underscore our power fantasy, we ended up building a lot of detection to isolate and shut down these waggling strategies because we wanted to change our smallest effective action.
This actually had a really obvious and dramatic impact on our playtest, and actually became something that playtesters called out as their favorite part.
of the playtest in hindsight. They loved that they couldn't cheese the mechanics or they loved that the game's tutorial wasn't lying to them about the best way to play the game.
And we found that for players that really internalized that and believed what the game was telling them about making big swings, they were more likely to strike those powerful poses and get into that play acting. And that was because to them, it was no longer a silly act or play acting with the game.
it was the effective, smart, and optimal strategy for playing.
And we found that that actually carried over, not just from our more organic, like our mechanical swinging features, but into the game stats as well.
Once we had this trust with the players that the game's mechanics mattered.
we found that we could use our weapon stats to enforce and create a number of these optimal play styles that players can aspire towards.
So when we were doing our weapon design, we actually created four major archetypes, and we assigned one to two of these archetypes to each one of our weapons.
The bruiser was all about big hits and big swings and dramatic motions.
The Spellsword is all about supers and nukes and big damage, sometimes from a distance.
Tactician was for players that really liked manipulating the space, so dashing around or locking enemies in place or pushing enemies around.
And Rogue was sort of our high-mobility, probably VR-familiar player who wanted the high-risk, high-reward or high-twitch skill strategies.
And once we had these play styles and play targets, we then made it a point with the game's traits and weapons to ensure that these archetypes had multiple effective builds.
And we used built-in traits on the weapons to make sure that the way the weapon was being used during our play tests actually aligned with that fantasy of the weapon.
And at the end, we found out that this really benefited all skill levels of play.
this kind of balancing and this kind of mechanical enforcement of your fantasy is not something that only the hardcore players are going to appreciate, but that a lot of our first-time VR users really appreciated.
Because this isn't about balancing the game for the hardcore, it's about giving players permission to play-act with your game, because that play-acting is the optimal way to play.
So we're just about at the end now.
Before we sign off, I wanted to just kind of go over the takeaways one last time, so we remembered what we were just talking about.
So five big takeaways of this talk were it's OK to reference non VR games.
Be wary of secondary VR interactions.
Know your player fantasy.
Set the rules of your virtual reality.
And lastly, incentivize the player fantasy that you've established.
I'm just kidding. There's a sixth one.
So if you can be sure to try to consult with others in the space or genre, even if it outside of VR, Jason Vandenberg kind of came in early.
He's, you know, well known for his expertise in melee combat games, and he was able to give us some really helpful advice early on.
And we would definitely recommend for you to do the same.
In any case, just find someone that you can rely on to give you good advice.
So big shout out to Jason Vandenberg.
And that's it. So we can't give any, we can't take any questions here in a digital format, but if you'd like to talk with us more about any of this stuff, we've got our emails and our Twitter handles on screen, and please don't hesitate to reach out.
Thank you so much for listening, everyone.
