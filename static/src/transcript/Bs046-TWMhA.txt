My name is Gwen. I'm a tech artist. I'm an animator and I'm a studio founder. I've been an animator for about eight years now Why thank you Two years ago. I actually went indie I left triple-a and I started a small indie studio in Boston with five other people We just shipped our first title the flame in the flood This is really good. You should do this the whole time. I feel really good about this. Anyway, so the flame of the flood was very unique. This was a game where most of the characters I was animating were not humanoids and not bipeds. Most of the characters I was working on were quadrupeds. They're animals with four legs to worry about. And I found that traditional biped animation techniques just didn't work very well for quadruped characters. I found that there was ‑‑ quadrupeds present unique problems that we needed to solve.
Uh, when working on a quadruped character, I want to kind of go through my process.
I kind of want to go through my process.
I mostly try to solve three problems before I dive down into actually animating the character or polishing any animation.
The three problems I want to solve are moving forward through the world, you know, your forward locomotion.
I want to solve, I want to figure out how I'm going to get the character to turn, which is extremely difficult for quadrupeds.
And I want to figure out how I'm going to transition between moving and idle and back again.
And I found if you can solve these three problems, then.
After that, it's mostly polishing up your animations and adding on whatever your gameplay layer is.
So for this talk, I'm going to be demonstrating my solutions for these problems using two characters.
The first character I'm going to show you is the boar.
This is a kind of cartoony, stumpy little character with short little legs.
It's a character that kind of idles for a while and charges the player really quickly like a battering ram.
And then it returns to idle.
I streamed the entire development process for the boar.
So all the footage you're going to see in this talk is from when I was actually working on it, developing the boar.
And I'm supposed to tell you we used Unreal Engine 4 for development.
So a lot of the footage you're going to see is actually using the in‑game animation blueprints and such.
All right.
Let's get started.
The first thing I work on when I'm doing locomotion for a quadruped is forward locomotion.
This is just moving forward through the world.
I think everyone here is probably familiar with how you make a biped move forward through the world.
Usually you animate a walk and then you animate a jog and you animate a run and you do like a linear blend between these animations.
You keep the foot phasing roughly similar between these animations so that you know your linear blend will work properly.
For quadrupeds, a lot of people, if you're looking at a quadruped, they generally have like a trot and a gallop, so a linear blend like that wouldn't work.
What I decided to do for the boar, because the boar pretty much always moves at roughly the same rate, I decided to make a linear blend and actually use that biped style linear blend and just go between having a slow trot, a slightly faster trot, and a super fast trot for the boar.
I thought I could get away with this, because this character is really cartoony.
Here you can see...
The final result, I'm slowing this down quite a bit, for the slowest animation for the boar and the fastest animation for the boar.
And you can see the feet are hitting the ground at roughly the same time.
The footfalls happen at roughly the same percentage of the animation for both of these animations.
So if you're familiar with biped, this should seem pretty standard to you.
Here you can see actually all four animations for locomotion for the boar.
And you'll notice that each animation, the footfalls line up pretty closely with the next slowest and the next fastest animation.
And this helps you really visualize and know that your animations are going to blend together properly when you set up your blend space.
All right, and this is the actual blend space for the boar in game.
What you see here on the line are the little, the dots are those animations that I demoed a minute ago.
And what I'm doing is I drag the cursor from left to right.
I'm manipulating this speed variable.
This is the speed at which the character is moving through the world.
And I'm just simulating what would happen if the character moved faster through the world.
And you can see I'm blending through these animations.
Again, this is probably really familiar to you.
You will notice that I have more animations when the character is moving slowly.
I find when a character is moving slowly, the foot sliding and glitches are way more obvious than if a character is moving quickly.
You can get away with a lot more when flailing around when a character is moving quickly through the world.
All right. So that was the boar. I think this is a good setup if you have a character that's maybe more cartoony like the boar was. I think this is a setup that you're all familiar with. So you can do it pretty quickly. It's really easy to generate animations off of existing animations. Like it's easy to take a slow trot and make it a fast trot versus having a walk and a gallop which will be totally different animations. So I think this is a really fast setup. But it is extremely unrealistic. This is not what happens in the natural world.
All right, the other character I want to demonstrate today is this wolf.
This is a character that always stays on a perimeter near the player.
This is a character that modulates its speed.
This is a character with a long spine and these really lanky limbs.
And I really, really wanted to differentiate the motion between these two characters because this is a character that, uh...
has much more dynamic motion and moves through the world in a it slows to a stop rather than stopping suddenly it tends to run around the player at any given time because this is a character that does this I really wanted to uh... have it properly transition between having a walk and a gallop and so forth so when I started for the wolf I went ahead and I animated a walk and a trot and a gallop just like you would expect and the foot phasing for these is not the same they don't line up at all really If I was gonna try to do a linear blend, like here's a trot and a gallop, if I try to blend between them, that's obviously not gonna work.
You're gonna get some kind of funky dance, right?
So instead what I'm going to do is I'm going to take and I'm going to scale the play rate of those animations based on the speed of the character.
So if the character is moving twice as fast as the animation was authored at, then I play the animation twice as fast.
If the character is moving half as fast as the animation was authored at, then I move, then I play the animation at half speed.
What I want to do is when I move at a certain speed, I want to transition from the walk to the trot to the gallop.
This way you never actually see the walk playing at 2x speed.
You only ever see the walk playing at maybe 20% faster or 20% slower.
I transition quickly between these animations, and each of these animations has the play rate scaled based on the velocity of the pawn.
Or I'm sorry, the velocity of the character.
For this you will actually notice there is some foot sliding when I go between the trot and the gallop if you look closely because they obviously don't line up in any way.
But because the character is moving so quickly through the world, by the time that transition happens you really don't notice it.
It's basically imperceptible.
So what should you take away from this?
I think both characters were successful.
I think the wolf feels more like a quadruped.
I was actually pleasantly surprised that I could just do a quick transition and I didn't have to offer an animation to transition between trotting and galloping.
It actually worked pretty well to just do a quick blend.
I think the boar was successful because it mostly only ever moves at one speed.
So I was pretty happy with both characters.
So after forward locomotion you tackle your next problem which is turning.
This is extremely difficult for quadrupeds.
Quadrupeds tend to have multiple points of contact with the ground at any given time.
I can demonstrate just looking around being incredibly difficult for quadrupeds.
I mean imagine like...
I'm here if I look around or if this biped character looks around it's pretty simple. It's pretty straightforward You can manipulate You can look behind you and you can twist your spine in order to look behind you Whereas for a quadruped if you try to do the same thing if you try to twist the spine you get some really ugly deformation you get a pose where the the front limbs feel like they're they're unnatural they they should be moving Just to even look around So I knew that turning would be very difficult, and I decided to break down turning into three steps.
I decided that the first thing a character does when they turn is they, a quadruped should look in the direction that it's gonna turn, and then I felt like the front legs should move in that direction, and the spine should kind of arc, and then as the quadruped continues to move in that direction, I wanted the spine to straighten out, and I wanted the back legs to catch up.
So here's a prototype early on.
This is after I had already had the forward locomotion happening.
So the character is walking forward.
Obviously I haven't had a turning solution yet here.
And what I've done is I've slowed the turn rate of the character in engine so that you can see this wolf is not snapping to turn in the direction it's moving.
It's moving a little bit slowly.
What I'm going to do now is every frame I'm going to query the direction that the wolf is moving.
And I'm going to query the direction that the wolf is facing.
I'm going to find the angle that's the difference between those two directions.
If I take that angle and I apply it to the spine, I can get the front legs to kind of follow or I can get the front legs to point in the direction that the wolf is moving.
So here's a really early example of this.
All I'm doing is I'm taking that angle that I'm getting every frame.
I'm dividing it by three because there's three joints in my wolf spine.
And I'm adding that as a world space rotation to the spine.
And what I get now is I get a character that has its front limbs always moving in the direction that the wolf is, or always pointing in the direction that the wolf is facing.
And I get the back limbs to kind of catch up as the wolf moves forward because the pill is turning slowly.
And I get the back limbs to kind of catch up as the wolf moves forward because the pill is turning slowly.
I did this using skeletal controls, but you can imagine once you get that angle you could solve this in many ways You could use that angle to drive an additive animation that that curves the spine you could drive a blend space that has a spine Arced in different directions. There's any number of things you can do once you have that angle I Mean obviously there's a lot of foot sliding in this video. It was still pretty early on What we ended up doing finally in game was I worked with my programmer at this point to manipulate the path of the wolf slightly. We decided to take the turn rate of the character, of the pill of the character, and we set that to scale based on the speed of the character. So if If the wolf was ever stationary, it couldn't twist its spine.
But as the wolf moved faster, it could twist its spine more.
My programmer Damian also went ahead and set the wolf to never turn directly in place.
The wolf always moves forward just a little bit in order to turn, similar to a car.
Like a car has to kind of be moving forward a little bit in order to turn.
And that's how we got the result that you see here.
So I liked that result a lot.
I thought it worked really well for the wolf.
I didn't think it would work very well for the boar.
For the boar, I wanted this to be a character that, I didn't want to have a separate looking with the head and looking with the spine.
I didn't want the separation there.
I wanted this to be one mass that was always focused on either looking in the direction it's moving or looking at the player.
I also...
wanted to experiment with different solutions.
I knew that the bore would mostly be moving in a straight line and not arcs.
So for the bore, I decided to try using a blend space instead.
I'm going to take that same angle, and I'm going to use it to drive a blend space.
Here you can see I have my fastest trot, my medium trot, and at the top, my slowest trot.
And for each one, I authored a variant, one where I'm looking 180 degrees to the left, and one where I'm looking 180 degrees to the right.
In order to do this, I actually, in each of these animations, the board is facing forward.
But I'm kind of creating a strafing motion at these extremes when you're looking completely behind you.
Because I didn't want the board to look like a U.
I wanted the board to kind of strafe if it was looking completely behind it.
And here's the result of applying those animations to this blend space. This is the same thing you saw earlier where I had, when I was moving between left and right, I was manipulating the speed of the character. I'm still doing that.
Now I've also added this turn direction for the up and down vector here, right? So whenever I move the cursor up or down, I'm simulating if that angle is negative 180 degrees or if that angle is 180 degrees.
and I've created this blend space where just by getting the angle between the direction the character is moving and the direction the character is facing and by getting the speed I can completely blend between these different animations to get a final result that will work for the character.
All right, so now we've handled turning, we've handled forward locomotion, and we get to the hardest part about quadrupeds, which is stopping and starting again.
I find, like I said earlier, that character glitches and foot sliding is way more obvious when a character's moving slowly.
Your character's never moving slower than when it's about to stop.
So this is where you really need to focus your attention on trying to make this look good.
For a biped, stopping and starting again is pretty trivial. Bipeds pretty much only ever have one foot on the ground at a time. You can see here I'm showing any time the left or the right foot is hitting the ground. And they're never both planted. So if you really wanted to, you could do what most of you do, where you actually animate the transition between idle and ‑‑ or between locomotion and idle and back again.
You'd only have to make two animations one when the left foot is planted one when the right foot is planted I think a lot of studios do this and I think this is a complete non-starter for quadrupeds Quadrupeds could have two feet on the ground at any given time. They could have three feet on the ground the The feet could be in different positions relative to each other if they're in a gallop versus if they're in a trot.
So offering animations to transition between locomotion and idle seemed like a complete nightmare.
It seemed like a complete nonstarter to me.
You could always do what many games do, which is just blend directly from locomotion to idle.
I think this looks really bad.
I think it's ‑‑ it just didn't hit my personal quality bar.
the when you animate your idle and you assume that the feet are going to be in certain positions and then you're you're blending from a locomotion where the feet could be in completely different positions then when you do that blend the feet will probably slide along the ground you'll get something that looks really wonky. What I'm going to recommend instead is what you see here on the right where you assume with your idle that you don't know where the feet are going to be you just pull them right down to the ground and you idle wherever you are. Here's how I accomplished that with the wolf.
So for the wolf, I had this walking forward animation.
And what I did was I authored a second animation, which is the same thing, it has the feet in the same place, but any feet that were off the ground, I just pull it to the ground at that point in the animation.
So I get this animation where the feet are just kind of sliding around on the ground, right?
I also lowered the center of gravity for the wolf slightly.
If you recall from earlier, for the wolf, I'm scaling the play rate of the animation based on the velocity of the character.
So if the wolf is moving at half the speed that the walk was at, then the walk is playing at half speed.
If the wolf is not moving at all, if velocity is zero, then that walk freezes because the play rate is zero.
At that moment, I have a blend on my tree.
So I blend from a walk to an idle state.
This idle state is that grounded animation.
That grounded animation is set to sync with the walking animation.
So what happens now is any time the wolf stops moving, the walk freezes.
We blend to the idle, which is the same frame.
It's just that the same frozen animation, but with the feet down.
And uh...
the wolf will kind of freeze there in place.
It'll lower its body and it'll kind of be frozen with its feet on the ground.
When the wolf starts moving again, when velocity increases, the wolf will blend back to walking.
It'll pick up right where it was before, just picking up any foot that it just put down on the ground, and it'll just resume walking.
I thought that was pretty cool.
So I decided to do the same thing for the boar.
However, if you recall, the boar is set up a little bit differently.
There's three walking animations for the boar.
So in order to do this for the boar, I had to author three feet planted animations.
And I had to create a blend space that would mirror what I was doing with the walk.
And that's what you can see here.
And here's an earlier prototype when I was working on the bore.
This is where I was at this moment.
I had the bore moving forward through space, using its trotting blend space.
I had the bore turning, in this case, pretty much always to face the player rather than facing move direction.
And I have the bore stopping, so any time the bore stops, it pulls its feet, it freezes, and it pulls its feet down to the ground.
is all well and good, but now your character is frozen any time it stops moving. And we're animators, so that's not okay.
So the next thing I did was I authored an additive idle for these characters. I'm going to play this any time the character is frozen.
This was the first additive idle I made for the boar.
You can see here it's a very basic keep alive.
I'm mostly only animating the torso and the head and the tail.
I'm very careful not to animate the feet because I don't know exactly where the feet are gonna be.
They could be at any position and the legs could be at any rotation when the character stops.
And this is the result of applying that additive animation to that idle state.
So now, whenever the boar stops moving, it freezes in place, it lowers its legs, and in that frozen pose, it plays this additive idle.
You'll notice here that the feet are kind of swimming around on the ground a little bit. This is especially apparent when the board turns because its hips are turned and its torso is also turned. So I'm going to zoom in in a second here. And you'll see there's a lot of foot swimming. They're kind of drifting around on the ground. They don't quite feel planted and grounded. I think anybody that's worked with additive animation is familiar with this. This is a result of the way a computer sees additive animations.
When you create an additive animation, you give your engine a finished result and it breaks it down into a pose and an animation.
If you take that same animation and you apply it to a pose where the base is turned or moved in any way, or I'm sorry, if you apply that to a pose where the hips or your base is rotated, then what you're going to get is a, something that's mathematically correct, but doesn't quite look right.
The feeder is going to be swimming around on the ground.
So the way I fixed this for the boar was a little unorthodox.
I just went ahead and I parented the hooves directly underneath the root of the character.
And I reversed the joint chain, so that the knees are underneath the ankles and the hips are underneath the knees.
I did this rather than use IK to save performance because we couldn't run 4IK at all times on all quadrupeds. But what this is going to do, because I did not move the hooves during the additive idle, there's no translation data on the hooves.
So when I play the additive idle, the hooves are going to be locked down to the ground.
And you can see that here.
So now the hooves are locked down to the ground.
And technically there is still joint swimming, but it's occurring at the shoulders and at the hips, which is very difficult to detect, especially with this particular character.
This is a character with a massive torso and our camera's top down.
So you never see what's going on in the chest or in the hip region of this character.
I can get away with this because I am the rigger and the animator and everything in my studio. But I know most studios you probably can't re‑parent up your joints if you are in the middle of production. That's probably a non‑starter for most people. So I think a more typical response would be to run IK on each leg if you can afford it for your game. I'm going to demonstrate that now. This is the additive idle I made for the wolf. It's kind of like an aggressive ‑‑ motion, I am definitely moving the hips and the, I'm definitely changing the rotation on the hips and on the torso for this character.
And this is that additive applied in engine.
And what I'm doing here is I'm going to, or what I'm doing is, I'm taking the world space position of the paw before the additive is applied.
And I'm running an in-game IK on each paw that will end at that position.
And so this is just doing a bit of fix-up to keep the feet completely planted in place while that additive runs.
All right, so what should you take away from this?
I think there's three main things you should look into when you're animating a quadruped.
I think the first thing you do is you figure out how this specific character is gonna look moving forward through space.
You solve that because that's a lot of.
That's a lot of the character and the feeling behind whatever it is you're animating.
The next thing you do is you figure out the technical problem of how you're gonna turn, because that is a huge challenge for quadrupeds.
And then you figure out how you're gonna transition between moving and stopping and starting again.
What I did for this talk was I showed the boar using a linear blend for its forward locomotion.
I showed the wolf doing a kind of gated approach.
for its locomotion.
And I showed how I solved turning and how I personally solved transitioning to idle and back again.
I recommend when you transition to idle, I think it's wise to not assume that the feet need to be in any specific place, but to find a way in your engine or in your game to pull the feet down directly to the ground and animate wherever they are.
I think that's an elegant solution and it's one I've personally enjoyed doing quite a bit.
All right. So that was my talk. I am on Twitter and on YouTube. I do two‑minute technique videos, two‑minute animation technique videos on YouTube that just show off whatever tech animation stuff I'm working on at any given time. So definitely, you know, check that out. I hope you enjoyed the talk. Thank you for coming. I did just ship my first title as an indie, the flame in the flood. So if you get a chance to, I don't know, maybe Google it or something, that would be cool. It's kind of a big deal to me.
What else was I supposed to remind them?
If you have any questions, please come up to the mic and please say your name.
I'm going to repeat the question back at you.
Thank you.
No questions?
That's cool.
That makes this way easy.
One question.
Hi, Garrett.
OK.
So I have a couple of questions.
You talked about your process, but how does your process fit in with everybody else?
So did you have AI behavior for the enemies before you started prototyping your animation blending and how that worked?
Or was it kind of all together?
Or did you do that?
Okay. So I feel like there are two questions there. First I think you asked how what I'm doing here is different from how other people approach quadrupeds?
No. Within your studio.
how did you work with the people prototyping the actual enemy behavior or did you do that as far as game play?
Gotcha. So our studio is six people. I do all the prototyping. Everything you saw up there up until I said my programmer stepped in here was literally me. I just used blueprint to script the pawn to move from one location to another. We're a very small outfit. So I don't have to worry too much about working with other people. Clearly.
I guess that would be me.
So you said with the boar that you couldn't afford to apply IK to all four feet with potentially multiple creatures and then you said with the wolf that you then did that.
Yeah, I was playing around.
Sorry?
Yeah, I was playing around.
To be honest, I did the wolf before the boar.
And for the wolf...
I wasn't sure if I could afford to have those 4IK running at all times.
It was at that moment we had not yet done our profiling and we were unclear on exactly what platforms we would be on at that point. The wolf was the first AI we worked on. So when I came time to do the boar, I decided to use the boar as a chance to experiment with other solutions that would maybe save us some performance because it was something I was personally a little bit worried about. I was looking at the time at this, and I'm like, that's 12 IKs running at all times, plus the dog, so that's another four, so I guess I'm not that good at math.
And I was concerned that that might be expensive. I didn't actually know yet Sure, so the for the wolves that stayed in and then for the boars you found another solution Or did you then retrofit the wolf as well?
I have not yet retrofitted the wolf. I have decided to tackle that when it becomes a problem because it's a huge pain. If you are going to change the rig and reverse the joint order that's ‑‑ and then re‑export all the animations and check it to make sure everything looks right. That's a significant chunk of work and I'm one person. So if we end up hitting a performance problem on the CPU, I will definitely look into that and see if that's a place we could make some savings.
Sorry.
Oh, sorry.
Go ahead.
Yeah, hi.
So this might be a bit more of a technical question in terms of how you're doing specific things in Unreal.
But you said you mentioned you're getting the turn the AI character's actually doing.
How are you actually getting that?
Because we don't seem to be able to have access to that.
To get access to the turn rate of the character?
Not the rate, but the actual turn that it's going to actually be making.
Oh, manipulating the path finding to open an arc?
Yeah, exactly.
Yeah, that's why I got a programmer involved.
Oh, right.
Yeah, that was a, I tried scripting solutions for that.
I did not succeed in finding a scripting solution for that quite yet.
there was a talk yesterday if you go look at the vault and it was on quadruped motion. So it was a very similar solution so you can look that up on the vault which will answer that question. Thank you. That's my job for me. I appreciate that.
Hi, so it seems like you basically have two kinds of creatures the wolf had a discreet spine and you wanted to Separate the motion of the front and back legs versus the boar which didn't really have a spine you wanted the whole body to move as as one object Would you foresee like a third kind of creature we have to do something in between them Or do you think that you could pretty much separate all quadrupeds into these two categories?
Every time I do a character I do a completely different solution because I can So these aren't the only two characters.
These are just the two I focused on because I only have half an hour.
So there's also a bear that rears up on its hind legs and that moves in a way that's very different.
It's actually kind of like a rabbit.
For the bear I tried to, I experimented with the idea that the front legs and the back legs actually move completely differently and independently and I kind of solved in between.
That was not the best solution so it didn't make this talk.
dog is a pretty good hybrid between the two. Between my solution for the wolf and my solution for the boar. The rabbit is a totally different creature entirely.
So you're showing a lot of flat terrain. I don't know if you guys build the levels with this in mind. How do you handle inclines and the change in slope?
how would I handle that?
Oh, I'm sorry.
The question was how I would handle inclines or a change of slope.
We don't have too much of that in our game.
We do have subtle inclines at times, and that did come online a little bit late.
If I was working at a AAA studio or somewhere where I had to worry about that, generally what you would do is you would take the pill and you would adjust the pill to kind of rotate to be perpendicular to the, to the whatever ground that it's over, and then you would probably update the feet using IK solutions.
so that they're always on the ground.
All right, that's our time.
Thank you everybody.
