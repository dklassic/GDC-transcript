All right, everybody, can I have your attention?
So you are in room 130.
It is 1.30, and I have about 130 slides.
So we're going to go really, really fast.
Welcome to Design in Detail, how to subtitle your talk with an entire paragraph and make sure you don't forget to mention Halo 3.
Before we start, is anybody thirsty?
Can I get you anything?
OK.
I'm going to talk very fast, like I said. Let me tell you first about myself. I am a gameplay design lead at Bungie Studios. I've been there for 11 years. I worked on all three Halos and did the weapon balance for all three Halos. Except for the Halo 1 pistol. That was somebody else and it was at the last minute and they didn't even tell me. So when you curse somebody for the battle rifle spread, that's me. There's a face.
and feelings. Last year I was at the Art Institute of Chicago. That's where I grew up. Not at the Art Institute, but at Chicago. And I saw one of the most famous paintings of all time.
And I took a picture of it with my iPhone. Does anybody want to guess what this is?
Oh, somebody got it. Good. This is a Sunday afternoon on the island of Ganja. It's by George Zara. And this painting inspired my talk. And it also inspired my very long title.
You probably will recognize it better from a little farther back.
What I showed you was the lower right by the monkey.
This painting is not famous for how it looks or what it shows.
This is famous because of how it was made.
So, Rott lived in the 1800s and he was very interested in how we perceive color.
Scientists at the time were just discovering that we see.
one color, but what we're actually seeing is a mixture of several different types of color and to demonstrate that fact, he invented the art school of pointillism, which basically takes dots of basic colors and puts them together to produce an image with a huge variety of color.
So, I started thinking, what happens if we take Halo 3, we pointillize it, we break it into these tiny details and then we...
Sorry, I'm popping a lot.
And then we take just one of those tiny details and explore it exhaustively.
Specifically, the time between shots for the sniper rifle.
So this is my actual talk.
Before we get started, I have a couple caveats.
My opinions do not represent fungi management.
They rarely represent reality.
This is the past as I remember it, and I'm sure that I'm glossing over stuff.
In fact, one of the things I want to talk about is how unreliable your brain is, especially your memory.
I have some examples from games.
They are all from games that I like, just to avoid controversy, just to avoid fanboys.
I'm not ripping on any game that I criticize.
And this talk was really hard to write.
Like I said, it's at like 1.30 now.
It got to 300 slides at one point.
are focusing in on one little detail, you actually have more and more to say. So I'll be presenting the full talk at Sniper IphoneCon 2011.
So first we're going to get some context from Halo 2. And what I'm going to show you through Halo 2 is sort of the four filters that I'm going to look through this detail through.
Halo 2 was pretty popular. We released it in 2005.
And according to Major Nelson, we were the top live game of 2006 and 2007 and 2008 and 2009.
There was lots of months in there where other games came and went, but if you look at the Uniques for the whole year, it was Halo 2.
It's going to shut down in April, and I'm assuming it's going to be the top game of 2010, and then because Live for Xbox wanted to shut down forever.
The sniper rifle will remain balanced the whole time.
And what this does is it gives us kind of a practical definition of balance, which is often argued about.
And I'm going to say the only definition of balance that actually matters is that balance is longevity.
If it doesn't last, it wasn't balanced.
So we're going to do a little audience participation.
Balance this equation.
And just as soon as you get it, shout it out.
That's fast.
You're a programmer, aren't you?
So now, balance this stack of blocks.
Anybody?
So my point here is that balance is not a process.
It is not something that you do to a game.
It is a state of the game.
And so what you're trying to get to get longevity is a static situation that is balanced.
Rule number four of Jenga.
Quote it with me.
Your turn ends 10 seconds after you stack your block.
So even in a game like Jenga, they understand that balance requires lasting, requires longevity.
Let's talk about the Halo 2 Crunch.
There's been talks about the Halo 2 Crunch.
I'm not going to rehash them.
It was less than ideal.
My postmortem is, don't try to fix bugs in the tutorial and balance the weapons at the same time.
Find somebody else to do the tutorial.
production is always worried about a repeat of this situation, so they're constantly asking me when I'm going to be done. We kind of have a love-hate relationship.
So I invented the balancer's paradox. Balance can't happen until the end. Balance can't wait until the end. You can answer any question with one of these two points. But the problem is that when we did get to the end, you have to resolve the balancer's paradox.
the technique that I came up with is to balance in passes.
So, what does this mean?
It means at the end of each pass through the balance, the game is static.
The game is, it has that longevity to a certain level.
Then you don't backtrack.
Once you achieve balance, don't lose it.
You can try to balance at a finer degree of detail, but...
But don't ever upset the apple cart.
Halo 3 had six balance passes, roughly.
I mean, they kind of play together.
But role, flow, strength, limitation, exceptions, and perceptions.
And don't worry, I'll get to these in a lot more detail.
So after all that stuff about Halo 2's dominated life, Halo 2 was not balanced.
We shipped Halo 2, and the designers, after waking up from the coma.
I started to play it on live and felt wrong.
It was different than how we played it in the office.
In a lot of ways, it was broken.
And we sort of looked at each other and we knew this is not going to have legs.
This is not going to last.
How did we know this?
Well, during the development, we had fine-tuned our sense of balance.
Malcolm Gladwell lays out in his book, Outliers, the 10,000-hour rule.
10,000 hours of practice is required to achieve the level of mastery associated with a world-class expert on anything.
So this means I'm an expert in trying and trying to balance a sniper rifle.
Niels Bohr offers an alternative definition.
An expert is a person who has made all the mistakes that can be made in a narrow field.
And that also means I'm an expert at trying to balance a sniper rifle and at driving too fast for conditions.
But don't ask about that.
So in order to establish a sense of balance, you need to understand how your brain works.
So I'm going to talk just really briefly about the neuroscience of intuition.
You have this thing called the orbital frontal cortex.
Easy for me to say.
It's called that because it's located behind your eyes, but we call it the gut.
And it goes through a learning process.
What it does is it builds a model of the world, tries to make predictions and anticipate what's going to happen.
And if it's right, it releases this chemical called dopamine.
And that kind of cements the neurons into that configuration.
And it does this over and over and over again about everything.
Even things that you don't even care about.
ordering fast food, like, it tries to predict how long it's going to take before they bring your money back and you can't turn it off. But you can sort of guide that process and what you're trying to do is you're trying to get the game inside of your head. And that's what happened to us in Halo 2. We had the game so internalized that when we played it, it was different than the game that was inside of us. And we knew from the way it was different that we were going to have problems down the road.
So back to AO2. Nobody wants a patch. Choosing to patch is hard. Luckily we had networking bugs so we knew we were going to have to have a patch anyway. Choosing what to patch was even harder. Some things, we made melee do a little bit more damage, grenades smaller radius, we were just trying to make it so that the game didn't degenerate into dual wielding all the time. But choosing what not to patch was our risk of all.
and we didn't patch a sniper rifle, and that was like the top of the things that we were going to change, but we ended up not. It's just, it didn't have as broad an impact as the other changes, and our studio head used to be a test lead, and so he's pretty harsh about stuff like that. So my final theme for this talk is make the hard choices. Don't put them off, don't let them happen by chance, don't let somebody else do it, make it yourself. What do I mean?
When I say hard choices, why are these choices hard?
Again, the answer is in your brain.
But this time, it's in the neuroscience of reasoning.
This thing called the prefrontal, again, easy for me to say cortex.
And I don't know why it's called that.
But I call it the brain.
Your brain is a poor tool.
It can only handle a very small number of factors.
It is easily confused.
It's subject to all kinds of errors and fallacies and biases.
You're not going to be able to reason about your game in its entirety.
But what you can do is reason on a very small detail scale.
So Radiolab, great podcast slash radio broadcast out of New York, describes this psychological experiment.
where they bring people in, they give them a number to memorize.
Some people get a two-digit number, some people get a 10-digit number.
And then they say, OK, we need you to walk down the hall and go tell this number to our assistant in the other room.
On the way, and it's not clear that's part of the test because that's how all good psychological tests work, somebody offers them a snack.
And they can either have an apple or some cake.
And what they find is that The people with the short numbers choose apples, because they're thinking, I've got to cut calories, I've got to budge my weight, you know.
They're reasoning about their choice.
Whereas the people with longer numbers, and we're not talking the first hundred decimals of pi, we're talking about a ten-digit number, you know, a social security number or something, they choose cake, like by huge margins.
That's because their rational brain is full.
Ten numbers is all it takes to fill your brain, so don't think you're going to look at a weapon tag with 40 values and understand it all in your head at once.
At least not rationally.
So my four themes. Balance is longevity, balance in passes, developers need to balance, and make the hard choices.
We're going to start with Halo 3 paper design.
Are there any producers in the audience?
A couple?
Don't worry, I don't bite.
This slide is for you.
Paper design happens in pre-production.
You need to start before you have 40 artists sitting around with nothing to do.
And don't exit it too early.
That is actually what led to Halo 2 having such a rotten crunch.
Every gameplay object needs a paper design.
As a designer, it's your responsibility be disciplined. And this is going to save you time in the long run.
So this has never been seen outside of Bungie. I think probably most of the current Bungie employees have never seen this. I didn't ask if I could show it, but that's okay. This is the paper designed for the original sniper—oops, I skipped it. Sorry. This is the paper designed for the first sniper rifle.
You can see it's four lines long, talks about the range, five round clip, which is not what we ended up shipping.
It's got a lot of stuff about the flood in it.
So spoilers, sorry about that.
And the second trigger actually, we originally planned that the second trigger on the controller was going to control zoom.
So some important things to note about that spec.
It's pretty flawed.
There's a lot of things that were wrong.
It's not five shots.
The contrail is not small or short.
There's a lot of mechanics that are unclear.
The zoom is totally, it says to be decided in the spec.
Headshots are very vague.
And many details are missing.
Maximum ammo count, body shot damage.
You couldn't hand this off to a programmer and get anything back.
They'd have too many questions.
That's okay. It's a paper design. A paper design is about role, which is an abstract concept.
So now let's look at Halo 3's paper design. It's a little bit longer, a little bit more organized.
It ought to be. This is the third time we did it.
I'm going to break it out on further slides, so you don't need to worry about reading it all, but just kind of get a feel for how big it is and how detailed.
It's still pretty abstract, but the role is even more clear.
There's nothing about fiction in it. There's nothing about enemy characters.
Very little about art.
So, the very first line, role, long-range, instant-kill sniper rifle, but reloading makes it difficult to use.
And really the only reason why reloading is in there is because there's a covenant sniper rifle where heat makes it difficult to use.
Talks about range, talks about the damage, talks about its limitations.
That's it.
Clearly specify the role in your paper design.
But let's look even closer.
It has a bunch of supporting mechanics, so two zoom levels, a magazine of four shots with a slow reload.
It talks about the feeling we want to bring out.
It does massive damage, you know, used good descriptive words like that.
It also points out critical assets.
This is not so a producer can go and make a schedule out of it.
It's so that when you're thinking about the sniper rifle, you have to be thinking about that special depth animation every single time.
You can't do one without the other.
And it's got a couple of little special details, like there's a delay when you fire your last shot.
Really what it should be doing is unzooming and reloading immediately, right?
But then you're not seeing what happened with your last shot.
So it waits a second, half a second, actually.
Include what is necessary, nothing more.
So how do you develop your sense of balance for paper designs?
It can be done.
I think I can look at a paper design and have a pretty good idea of how it's going to work.
Mostly you're looking for the role and a couple of key factors that are the results of the role.
So, you're looking for a sense of depth.
You want to balance between simple and complex.
If you make a role that's too simple, people are going to get bored.
If you make a role that's too complex, people are going to get boggled.
So what you want is a barely manageable number of choices.
You want people to look at your weapon.
be thinking of all the crazy stuff they can do, but really they don't have to execute on most of that stuff.
This is where role comes in, because game theory...
sorry, the sniper rifle is sometimes the best weapon.
And game theory tells us that if strategies have the same payoff, they all have a numerical equivalent payoff, then people are just going to pick randomly.
Doesn't matter.
On the other hand, if you have roles, you have asymmetry, and if you have asymmetry, that means...
sometimes you're going to get moved to a certain strategy or another.
And that's sort of the core of depth.
So roles require real differences.
And that's why Rock, Paper, Scissors, though it makes a great t-shirt, is bad game design.
Every choice in Rock, Paper, Scissors has the same payoff.
So you just pick randomly.
It's not even really a game. It's gambling.
So the sniper rifle is the only very long-range weapon.
What does that mean?
Well, technically there's a beam rifle, but those don't appear in the same mission, so for the purposes of argument, let's say there's only one.
It means that for every role, there is one weapon.
It's unique.
You don't want to add multiple copies of the same role, because you're just going to add complexity.
You're not adding depth.
It's really hard to add weapons to Halo because most of the roles are filled, there's a limited number.
You kind of have to force a little bit of space in there or rely on AI or something.
And so, so roles must be unique.
Rock, paper, scissors, lizard, spock, funny joke, not a good game.
It's worse than rock, paper, scissors because it's more complicated, but it's not actually more, it doesn't have more depth.
The converse of what I just said is also true. The sniper rifle is a necessary role.
So, um, the ratio of weapons to roles needs to be one-to-one as well.
If you have a game without certain roles, then you're going to have an incomplete game, and people are going to feel it.
Uh, this is why almost every first-person shooter out there has the same set of weapons.
It's not because we're not original, it's because these are the weapons you need to make a game like this.
Roles must be filled.
rock paper, that doesn't even make any sense.
I should admit, Halo 1, that close to shipping without a shotgun.
I know.
But, we didn't think that there was a necessary role there, and we were pretty prominent, so we had to kind of scrounge at the last second.
So, the last way that roles provide depth is, um, You don't have a crappy sniper rifle.
You want to avoid strict dominance.
What is strict dominance?
OK, who is going to pick the health potion?
And who's going to pick the piece of heart?
The health potion is single use.
It just repunishes your health.
You can go buy it in the store.
The piece of heart is totally unique.
It makes your health bar longer, and you can never buy it.
Yeah, everybody picks a piece of heart.
Sorry if you didn't.
You were probably eight.
It's OK.
So no crappy sniper rifle because you want to avoid strict dominance.
And then you want to practice iterative deletion, which is when you go in and you remove all the dominated strategies.
So you remove all the crappy sniper rifles, and then you remove all the strategies that were only good against these strategies that you just eliminated.
So for example, if you have an anti-tank mine, and then you cut the tank, you should also cut the anti-tank mine.
Otherwise, you have a strategy that doesn't dominate anything.
So the second way that you develop a sense of balance about paper designs is to look for anticipation. Anticipation is not the right word, but there isn't really a word maybe in some other language. What you're trying to do is pick between chaos and certainty.
If you have a game that's too chaotic, then everybody's just guessing all the time. If you have a game that's too certain, then it's predetermined. You've got to be careful because certain parts of your audience want a game that's totally chaos because they're not very good at your game and they want a chance to win.
And some elements of your audience want a game that is totally predictable, because they're really good at your game, and they don't want anything to get in the way of them winning.
But you really need to lie in the middle.
And that means that balance is probable, but not inevitable, future events.
Maybe one way to think about it is a bad form of anticipation, which is, I am not a great fool, so I can clearly not choose the winner in front of you.
You all know this scene, I'm sure.
Vizzini.
He's talking to himself in circles, right?
And if they were having a sword fight while this happened, he would be doomed.
So there's a guy in the audience, David Sterling, who calls this kind of anticipation Yomi, which is Japanese for reading the mind of your opponent.
Yomi comes in layers. Oh no, I'm out of power.
We're back on.
So the first layer is, uh, I know what I will do.
Second layer is, I know what he will do.
Third layer is, he knows what I will do in reaction to what I know he will do.
This works great if you're a professional Street Fighter player, uh, championship, uh, level.
It's not so great if you're a frat boy and you're just wanting to play while you have a beer.
So for a game like Halo, stop.
Stop at three.
In fact, stop at two and a half.
Not beers, yummy layers.
The sniper rifle has one purpose, if I see you carrying it, I know what you're going to do, I don't have to guess.
Right?
So you want to limit the amount of second guessing.
And that helps people anticipate, that helps your balance.
Successfully sniping confers no benefits.
How many of you have heard that feedback loops are always good in games?
It's not true.
If you have a positive feedback loop, you do well, you get rewarded by being able to do well more, you're going to win.
You get a killstreak, I mean you've all been on the receiving end of a killstreak, that's not good balance.
If you have experience points, I kill an enemy, a Warcraft mob, say, and I get experience points, that makes me better at killing him, right?
It's great for a single player game.
It's great for a game that's built on investment and progression, but if you're really just pulling back to balance, positive feedback's going to spin you out of control.
Same thing with negative feedback.
So if I do bad, I do worse.
That's one of the best new features of modern warfare is if you do bad, they'll let you do better.
Right?
So if I miss with a sniper rifle, now I'm out of ammo, now I don't even have a sniper rifle.
Or if I miss four times and I'm going to reload, now I can't even fire my weapon.
Feedback loops push you away from balance.
They're great for a lot of other systems in games.
They're not great for balance.
So the last thing the rolls do is they let you bite off more than you can chew.
Sniper rifle is never your only option.
I'm going to start hurrying up here.
You want to use multiple gameplay channels so that you're never relying on just one weapon being balanced.
Sniper rifle takes up a very specific inventory slot.
So if you have monolithic.
inventories, like cars in a car racing game, those are really hard to balance. You've got to balance every car against every other car.
On the other hand, slots are easier. Weapons and Halo only have to be balanced against other weapons, they don't have to be balanced against the Warthog.
Grenades don't have to be balanced against equipment, so use balance groups whenever you can.
A sniper rifle is not in every map, so you can kind of limit the interactions in that way.
Hard Choices is about a paper design.
Picking the right mechanics.
We left off the sniper rifle night vision scope in this paper design because it just wasn't that important to become the right mechanic.
You want to capture the mood, so engage the animation, the imagination, don't use sterile language.
You want to focus on your core before your SPICE.
Sniper rifle was done before the overshield.
It should be obvious, but a lot of times you have some little weapon that's kind of tweaky and weird and it's only going to be used in one place, you spend too much time on it.
A very important mentor in my life said, once you're done, cut half.
This is always good advice. It never sounds like it, but it is.
If you can't describe the role, cut it.
If you think it's too similar to something else, cut it.
If you can't sell it to the team, cut it.
You're going to want to cut so that you can focus on the things that remain.
So the second pass in the sniper rifle setting is setting up the initial values.
And what you're trying to capture here is the flow.
Again, producers.
This happens really early in production.
As the objects come online, you want to set the tone up front.
You've got to stay ahead of everybody else.
And you want to give your designers lots of space in this stage.
Feedback is not important when you're setting up the initial values.
In fact, it's best done in private.
You want to do it on your machine.
You don't even want to check it in sometimes.
You guys heard of Mahayachik Sent Mahayi?
His book Flow?
Mahayachik sent Mahayachik, Mahayachik sent Mahayachik, that's like Flow right there, right?
The problem is he wrote his book in the 70s.
It's about that kind of state of consciousness that you get in when you're really grooving.
He wrote it in the 70s, he didn't mention video games in it.
So how do we apply it to video games?
Well, there's a lot of research that says your physical aspect influences your mood, so smiling makes you happy, laughing makes you happy.
rifle fires with a very specific timing because it makes your fingers happy. If you set up our sniper rifle so it's too slow, your fingers get bored in between shots, they're waiting.
If you set it up so it's too fast, then the shots blur together, you're not really seeing the results of every single shot. So you want to focus on cadence when you're trying to capture flow. Versatility, which is the quality of seeming to be true.
Sniper rifles on a trigger, for weapons, versatility is really easy.
For others it's not so, for other mechanics it's not so easy.
So what you want to do is you want to make sure that the finger movements match the action in some way.
Shooting on a trigger, punching, it's on a button.
You don't want to set it up the opposite because then people can't get comfortable with your control scheme, they can't enter that flow state.
So if you have punching and kicking on a stick, say, right, like that isn't analogous to the action that you're taking.
Switching inventory on a D-pad, that's not the way you do it in any other interface, right?
And so people aren't used to that, and they're just never going to learn to do it naturally without popping up out of flow.
Virtually anything on a stick click.
Like I said, we were wanting to put the zoom onto the trigger for a good reason.
Nobody gets the stick click.
If you play a lot of Halo, eventually you'll get used to it, but it's not easy.
So you want to play in your spectacle.
The sniper rifle has a...
delay on the sound, the contrail hangs in the air for a really long time. Like I said, there's a special animation when you get headshots. And the reason for that is if you are in a flow state, the spectacle keeps you there. It stops you from being distracted from what's going on off your TV. Let me tell you a story from this screenshot. Red guy shoots a blue glove with a sniper rifle. He misses. Then there's this crazy rickshay insanity.
And the red guy gets in the trail.
So how did I tell this story from the screenshot?
That's not me.
I'm not the red guy.
I was the blue guy that dodged.
Causality.
Basically, you want to pass the YouTube test.
And the sniper rifle looks really good on YouTube.
There's the giant contrail.
There's a special headshot animation.
You want to exaggerate your causality.
You want to delay it, artificially stretch it out.
So you've seen a chain explosion of grenades in Halo.
There's like a 0.1 second delay between when one grenade goes off and the next one goes off and the next one goes off so that you can see the whole process unfold.
It's also one of the reasons why Halo feels a little bit floaty is because we want it to be a little bit slow so you can watch the causality.
It also makes it a really good game for other people to watch.
Causality preserves flow because you understand what's happening the whole time, and you can kind of predict it along with what's happening.
So how do you get your sense of balance?
How do you know what initial settings should be?
Lower your flow barrier.
So sniper flow is very fragile.
It's really easy to pop out of it.
And what you want to be able to do is make yourself easy to entertain.
You've got to train yourself to ignore frame rate problems.
You want to ignore bugs and glitches.
You want to practice filling in details with your mind.
You want to use your imagination and see the game as it's going to be when it's done, not how it is right now.
Make mouth noises.
This sounds ridiculous, right?
Don't do it at your desk if you have a shared space.
But pew, pew, pew, that puts you in flow.
That gets your whole body connected with what's going on on the screen.
And then play v-games with an open mind.
The last game we played was Avatar.
Had so much fun.
Does he just meet the game where it is?
On the other hand, sniping flow has a high ceiling, meaning that if you're really in the flow state, you can really get in the flow state.
So you want to also raise your flow barrier.
You want to never be satisfied. You want to get in a mood where you can get irritated with every single bump.
You've got to unleash your inner critic.
You take the best game to come out last year and you just rip it apart.
point out every flaw, like understand everything that's preventing you from reaching that maximum flow.
And I'm warning you, this is going to wreck your ability to play games for fun.
That's okay, because now you're making them for fun.
This is why you're a designer. Those of you in the room that are designers, I really think this is the essential design skill.
Don't expect other disciplines to have it. Programmers are going to see bugs.
Artists are going to see kind of the still frame, the compositions.
Producers are going to see inexplicable delays as you're just like constantly.
doing what looks like nothing over and over again.
But you need to learn how to apply conscious control.
You know when you're having fun, know when you're fooling yourself.
This is really hard to interview for.
One thing that I have noticed is that philosophy majors tend to have this more often than the general population.
I think it's because in philosophy you're being taught to analyze your own thoughts and your own opinions and sort of why you believe what you believe, and how that helps for controlling your own flow state.
Most sniper rifles aren't fun. I'm sorry. They don't find that flow. Or they had some other goal, like they had a mission, they had a support or something.
The reason why, maybe because they're not searching broadly enough. They're doing science. They're making one change at a time.
They have a control group and they make a change and then they compare it. You can't do that. You gotta, at this stage, you gotta go drastic.
You gotta, let's try a sniper rifle that only fires once every ten minutes. Okay, well it turns out that's not fun, but that's okay because...
We're trying everything.
Don't tell the engineers that you're trying all this stuff.
Try to get a tool you can do yourself, because they'll think you're crazy.
My engineers think I'm crazy.
So imagine that you're trying to learn how to drive, right?
But nobody's wanting to teach you.
The accelerator doesn't do anything until you find the ignition.
The blinkers are pointless unless you're in traffic.
Don't tell me why I said that.
But they're pointless.
They don't do anything unless you're in traffic.
And sometimes when you release the emergency brake, you roll down the hill and you crash.
You don't understand why. That's okay. You've got to change in groups.
You've got to change multiple things at once. Don't just, well, I'm going to iterate on this one number until it's perfect.
Because you're never going to get there because maybe that number doesn't do anything until you change something else.
There's this great book, Embracing the Wide Sky. It's by Anne By, Daniel Tammitt.
He has Asperger's and he's this numeric genius.
He sees prime numbers as petals.
And all of their numbers are these jaggy things.
He literally sees it that way when he looks at it on a page.
And you need to develop that same sense.
For me, it's a click.
Like, when I know I've set the right value, it clicks.
This picture has nothing to do with anything.
I just thought it was awesome.
So once you find these flow knobs, write them down.
Four shots per clip, zoom time, total ammo is enough to.
Fight for an entire counter.
You will want to change these later, except under extreme circumstances.
Remember, once you leave this step, you don't want to backtrack.
So know what you cannot change and then have the discipline not to change it.
Once you find these flow knobs, crank them up.
Crank them to all the way.
Sniper rifle is perfectly accurate.
It travels instantly.
It zooms almost instantly.
It always kills with a headshot.
don't go halfway with these flow knobs because the more you loosen them up the easier and more people are going to reach this flow state.
You're also going to notice the things that aren't allowing you to get in this flow state.
If everything else is loose then the one thing that's tight you're going to notice it really easily.
Alright, so you've got the flowing sniper rifle.
It's fun by itself.
It's probably really powerful.
How do you put it together with other weapons?
This one is for the engineers in the house.
I know you like to fix bugs last.
I know good coding practice is to optimize at the end.
But you need to start doing it earlier, because it's impossible to balance without a solid build.
Write bug-free code.
That's that easy, right?
You need to fix the gameplay bugs right away.
A lot of times, this isn't a priority.
You've got a bunch of features, probably features I asked for.
But.
I can't really do my job until there's enough bugs out of the way that I can get a sense for this balance and optimize.
Unless you're going to ship your game at sub-30, don't let your designers play sub-30.
Get a special mode or test map or something where they can run the game.
And have good lighting, sounds and effects, and animations as early as you can.
There's this joke we kind of talk about where if we're going into a play test...
we have to make sure that there's light maps, because if there's no light maps, people think the AI is dumb. I don't know why. But it's true. It's like a 15 point difference. People will think your AI is dumb if you don't have good light. And then sometimes placeholder errors are required. So strength. What does that mean? I'll put the slides up. It's okay.
How does strength help you put all your weapons together? So Glabo, in another book, What the Dog Saw, talks about...
Why are there 50 kinds of mustard and only one kind of ketchup?
I don't know how he comes up with these topics. It's awesome.
So, he says, Heinz ketchup, the taste begins at the tip of the tongue, where you have sweet and salty receptors.
It moves along the sides where you can taste sour the strongest.
Then it hits the back of the tongue for umami and bitter in one long crescendo.
How many other things in the supermarket hit all of the kinds of taste that you can have?
The answer is none.
Heinz Ketchup, it's got all the flavors, they're all really strong flavors, and they're all perfectly balanced against each other.
Tasters call this amplitude.
Halo is like ketchup.
It's everywhere.
It's got a lot of flavors.
You've got close range, you've got long range, you've got aiming, you've got running, vehicles, grenades, melees, just tons of flavors.
All of them are very strong, right?
It's okay. It's not overwhelming because they're all the same strong.
Designers call that balance, and it requires strength.
One of the ways you can tell if something is strong is through affordance, which is a visual clue, which is a function of an object.
Heidegger calls this ready to hand, which is a great phrase.
This is where sci-fi games like Halo run into trouble.
What does a proton phase amplifier do?
I don't know. It's not affordant.
You're not giving me a clue.
If you have to explain a strength to people, it's not a strength.
Okay, this is a hardcore textbook, and it rocks.
Like, it's dense, and it hurts you when it hits you.
It kind of rocks.
And I think probably there's a couple of the authors of this book in the audience.
Buy it and read it. It's great.
They define competence this way.
It's a condition or quality of effectiveness, ability, sufficiency, or success.
And they show through experimentation that it is a major human motivator.
People want to be competent. They want to show that they're competent.
They want to feel competent.
Sniping starts off hard, but the more you learn, the more competent you get.
Why is this important?
Strengths are things that you can get good at, and competence is an implicit motivator instead of an external motivator.
So what's the difference?
External motivators...
evaporate as soon as they're not there anymore.
So if somebody's paying you to play Halo, as soon as they stop paying you, you'll stop playing.
On the other hand, internal motivation, intrinsic motivation, the more you get of it, the more you want it.
So the better you get at the sniper rifle, the more you want to play with the sniper rifle.
And again, balance is longevity.
So this is a great way to make your game have longevity.
There's so many of these screenshots of Master Chiefs lifting Mordhawks.
It's great.
So how do you recognize strength when you see it?
How do you train yourself to appreciate these strengths?
People hate it when you change the sniper arrow on them.
Just when I was getting good, they say, why?
Because it resets their confidence.
But what you're trying to do is you're trying to prevent optimization.
Brains are lazy, and they will optimize out all of the interesting parts.
They won't stop you from thinking.
Some people speculate this is what beginner's luck is.
Like the first time you play darts, you're really focusing and you're calculating all the wind variance and everything.
And then as you start to get used to it, your brain gets lazy.
It's like, yeah, whatever, I can do this.
And you get worse, right, until you get the muscle memory and you get better again.
So the other reason why you want to change constantly is prevent inertia bias.
That's the way it's always been.
It's perfect.
Why are the designers still making changes?
We have a game to ship.
We could call this deadline bias, I guess.
But you want to give them something different with every playtest.
You don't want anybody to get used to the game how it is because it's going to change, especially in this stage.
You also want to change your passes.
Lots of Halo weapons kill in one shot, and so strength is relative.
It's only strong when it's compared to everything else.
And you'll find that things get weaker as time goes on, so you want to go through all the weapons and start back at the beginning and see if the first weapon is still as strong as what you made it.
If you can't make everything strong, you can't have anything strong.
So it's kind of a good rule of thumb.
This guy is really good at Halo.
I don't even know what button that is.
Pro players often complain that the guys making decisions about Halo suck at their own game.
It's true.
I'm not that good at Halo.
I'm really not that good at sniping.
I'm not that good at anything in Halo, except driving a Warthog.
And I'm not that good on purpose.
I like to think it's on purpose.
The problem is dopamine is not specific.
When you get dopamine, it feels good.
Your body's saying, yes, keep doing that.
Success feels good, too.
Success in the game gives you dopamine just like success at balance in the game gives you dopamine.
So, if you're good at the game, you're going to think it's balance.
And it might not be.
You've got to keep your neurons plastic.
Don't play too much.
This goes back to competence. Competence is a great motivator.
If you play too much, you're going to get invested in your competence.
You're going to be one of those guys saying, don't change the sniper rifle, it's perfect.
Don't forget your paper designs.
You've got to constantly go back to, you know, what was my original intent here?
And don't specialize.
I love the Warthog, and I think it shows.
It's my baby. It's my favorite.
But don't pick favorites if you can help it.
You're going to neglect everything else.
You're going to spread yourself out.
So when is this not true?
So when do you want to play a lot?
Remember, you're trying to train your brain.
So spend more time playing what does work than what doesn't work.
It's counterintuitive.
It drives people crazy.
I spend hours and hours driving the Warthog around and it's fine.
And then I spend no time driving some other vehicle that's not fine.
It's because I know it's not fine.
I don't want to imprint on that.
I play a sniper rifle encounter over and over and over again.
Once I know the sniper rifle is good.
Or I find some game where it is good and I play it over and over again, because then I can recognize it.
Once it works, you've got to get it stuck in your head.
Did you notice the strength is increasing as we get through these slides?
Hard choices.
Alright, producers, this is your most important slide. After this, you can leave if you want.
This is an actual bug.
Sniper rifle reload is too long. It's bug 12.
We've been working on this game for like three days and somebody's already giving me feedback.
In raid, as a bug, sniper rifle reload is too long.
Don't let people file bugs against balance during this rough stage of balancing.
In fact, don't let people file bugs against balance, period.
What'll happen is, you know, your brain likes to optimize, so instead of thinking about what should I do, you think, what does this bug tracking program tell me I need to do?
Don't do that.
Listen to complaints. I'm not going to tell you don't listen to complaints, but really, you know, they don't have a foundation yet, right? If anybody's going to have enough of the game internalized to make complaints, it's going to be you. And you don't have it at this stage, so chances are nobody else is going to have it. So don't be reactive.
Don't design by committee, or else you'll all end up shooting each other in a big circle.
Other hard choices.
There are certain things about the sniper rifle that make it strong.
Damage, distance, accuracy.
Once you have these things, write them down.
It's just like fun knobs. You need to write them down, and then know which ones not to touch later.
Because you don't want to backtrack. You don't want to make things weaker again.
Don't change it once you know.
Then once you have these strength knobs, you want to crank them to 11.
Make everything overpowered.
To sort of paraphrase the Incredibles, if everything is overpowered, nothing is.
So you've got your flow knob set, you've got your strength knob set.
Turn everything else to zero.
If it's not important for flow and it's not important for strength, it's not important.
You need to remove that complexity because it's just going to get in the way.
You don't want to obscure the role that you initially decided on, and anything other than those two are just, they're noise.
We balanced the sniper rifle for most players. We've talked about this before.
Once you have things working in multiplayer, it's pretty easy to retrofit single player.
You can make the AI accommodate in a bunch of different ways.
Again, you cannot make things too powerful.
So moving on, you go to the Polish Pass.
How do you fine tune a sniper rifle?
The answer is not by giving it weaknesses.
If you read a game preview, it'll say, oh, don't worry.
The sniper rifle is not too powerful because it's got some.
huge negative, like your head is ten times bigger when you're using it or something.
You don't want to add weaknesses, right, because we already talked about why you want to make things, everything overpowered. So what you have to do is you have to have limitations on that strength.
There's been lots of talks about our playtest process. John Hobson gave a great one last year. It's online. You can look at it. But here's some quick points. Start before things settle.
you know, somewhere toward late production, do it regularly, schedule, you want to have a really quick build process, can't take longer than a couple of hours, so you can make a change in the morning, make the build, do the playtest in the afternoon.
And don't tell people what's changed, because you don't want to bias them, you want their natural reaction.
focus groups, I don't like to call it that, but it's sort of a popular name.
You want to get the feedback immediately while it's fresh for people. You actually want to you don't want to argue with them, right? But you want to kind of let them argue with each other.
And don't spend any time talking about solutions. Get together with your designers afterward, figure out the solutions. You don't even talk about it in a focus group.
So, limitations.
If your game becomes predictable, it probably probably means that you need to limit strengths because there's something that's so powerful in so many situations that people are always using it.
On the other hand, if your game is too random, that probably means your strengths are too narrow, and whoever happens to be in the right situation for the strength of their weapon is going to win.
There's nothing really that other people can do.
Game theory tells us that the ratio of people playing a strategy is about the same as the ratio of their effectiveness.
If you have a lot of people doing one thing, it probably means it's more effective.
This is a really great slide.
I skipped right past it.
Taking team feedback and not giving them a boop to the face.
There are three kinds of feedback.
The first one is very desirable.
It's, I don't like this.
Everybody, everybody on your team should be telling you, I don't like this.
This is what I don't like.
Or this is what I like.
Usually, this is what I don't like.
There's an even better kind of feedback, which is thoughtful.
I don't like this because.
I don't like this because it feels bad is even better than just I don't like this, but I don't like this because it makes it too long, the recovery is too long, it takes too long before I can acquire it and shoot again or whatever, as long as it's thoughtful.
The undesirable feedback is you should change this to this, because they're not telling you, they're telling you what they don't like, they're not prescribing how to fix it.
Most of the people on your team really need to pay attention to what they don't like, but it's not their job to tell you how to fix it.
And so you should, I mean, listen to them.
Sometimes they have great ideas, but that shouldn't be your primary goal of like, please tell me how to fix this.
Trust their guts, but not necessarily their brains.
What does feedback mean?
What are people trying to tell you when they say they don't like it?
They're saying the game in my head is different than what I'm playing.
So you gotta ask, what's the game in their head?
Is that the game that we're making?
Is that the game we decided to make in pre-production?
Even people with the wrong game in their head, maybe they really like some other game, or some other game came out, and they're really enamored with it right now.
Even if they have a different game in their head, their feedback is still useful, but you gotta understand where it's coming from.
And then you gotta watch out for development bias.
People know that all you have to do is go back to your desk and change something, and it'll be different.
So, they're much less likely to overcome the barriers to entry and get confident with something.
They're more likely to complain.
But once you ship and it's burned onto a disk, people are much less likely.
They're much less sensitive.
Much less likely to complain about stuff like that.
And I'm going to skip through the types of players.
What you want to do is you want to figure out what kind of people are giving you the feedback.
Figure out kind of what style they are.
If they're an optimizer and they're only using one weapon, it's probably overpowered. If they get, you know, really angry really easily, then watch them, because as soon as they start to simmer, that's when you know something is disturbing their flow. We've got some guys, it doesn't matter what game type, it doesn't matter what the state of the balance is, they want to be a sniper, they want to be the guy that runs around with a shotgun and invisible. Let them role play, it's great. They're going to be trying the thing that nobody else is trying, because that's what makes them feel powerful.
We had a guy in Halo 1, called him, not when he was around, your mom, because we would say, hey, is this too hard to learn? Well, I don't know, let's see if your mom can get it. Yeah. True story. I used to balance easy by playing with my nose and nothing else.
Right? And this guy still couldn't beat it.
Look for griefers.
If Nathan Walpole, I mean if Nathan, is having fun sniping, that means somebody else is crying.
And then look for pros. These guys want everything to be perfectly predictable, they don't want anything to get in their way.
And that can help indicate to you when there's too much randomness in your game and when there's not enough.
Don't spend all your time in a playtest playing. You want to watch the people that are playing differently than you.
But sometimes you need to let your head drive.
Wow, this is really good, but I think I'm going to have to skip it.
Okay, so basically everybody has this thing in their head that tells them, oh, a million monkeys for a million years, that can make anything.
That makes Shakespeare.
It's totally not true.
The Planck length is 10 to the negative 23 centimeters.
The fastest speed is a speed of light, c.
That means it takes less than 10 to the negative 43 seconds to travel any distance.
There are 10 to 80 particles in the observable universe.
Anything that's not observable means it can't affect us because that means we can't see it.
That means light's not getting here, so we can discard anything that's not observable.
And there's been 10 to the 16th seconds since the Big Bang.
So if you take the smallest distance in the fastest time, times the number of discrete objects in the universe over the lifetime of the universe, you get 10 to the 139th possible events.
That means 10 to the 139th conceivable trials.
So this laptop has 100 keys, including capitals.
This PowerPoint deck has 21,000 letters, including spaces.
This talk has 10 to the 22,000 possible configurations.
So if every particle in the universe was a monkey, and Every possible event in the universe was a talk.
And they started at the dawn of time.
There's still only one out of 158 probability of this talk being created randomly.
My point, don't rely on random changes.
You're going to underestimate how long it's going to take you to figure out anything by just changing things randomly.
It's really tempting.
You want to change physics over math.
Players don't perceive math directly, so you're better off changing the rate of fire, which is something they can perceive.
than damage per shot. Or you want to fix the base damage, you don't want to add random variants in there. And again, players don't perceive averages, right? So you want to fix that instant snapshot, you don't want to fix it by changing it over time. It's really tempting to say, ah, the sniper rifle's too powerful, but we'll only give it six shots. So it's not actually going to kill a larger percentage of the people. But people don't, they don't understand that, oh, well, that guy killed me five times, and luckily he can only kill me one more time.
You need to balance what players can see.
Be wary of fairness. It's not balance.
You're going to have a temptation to go into symmetry, because that's fair, right? But Halo's not fair.
Especially the sniper rifle.
And on a small scale, that's fine.
But you don't want to end up with Tic-Tac-Tie.
That's bad game design.
You want to polish off your edges in this stage.
All right, finally, with five minutes to go, we're at the detail.
This is the point in development where we actually made the change from 0.5 to 0.7 seconds.
The sniper rifle is overpowered. It's okay, remember, we made it that way.
The problem is, it was making all the other weapons feel weak.
The optimizers, those guys that, for some reason, they always find the perfect weapon to use, were using it exclusively. The depth was gone. The game was simple. It became Halo colon snipers.
And the role players who refuse to use sniper rifles, because that's not who they imagine themselves as, they're getting creeped.
It's being used at close quarters. That's like directly opposed to the role that we intended in the paper design.
So, it's outside of its role. It's bleeding into the other weapons roles, making them dominated.
And it's contrary to all the effects and the expectations that we're setting.
thing has this giant scope on it and if you can use it at point-blank range.
That's not what you'd expect, it's going to be what we call a newbie hammer.
And it had no effective counter-strategies, so the sniper could acquire you, zoom in on you, fire, hit you in the head, before you could even ping him with a battle rifle and pop him out of zoom.
Even after a body shot, which is sort of a failure case for most snipers, you couldn't get back into cover, they were able to hit you right away.
And most importantly, this goes back to training your sense of balance.
Every time I saw somebody use a sniper rifle, I got nervous. I got upset. I thought I was getting an ulcer.
But really, it's just my neurons were sensing that something was clashing with their representation of the game.
And they weren't giving me dopamine.
My internal model was wrong. My spidey sense was tingling.
I was reaching out with my feelings. You know, all the classic lines.
So use your sense of balance to feel when something is wrong.
Because you're never going to figure it out by looking at graphs, looking at data.
You're not going to figure it out that way.
So we decided to make a change.
We knew we couldn't touch the strength knobs, right?
We can't change the damage, because that's what makes the sniper rifle good, is that you can kill somebody in a headshot.
You can kill somebody in two shots to the body.
We couldn't shorten the range, because that's what makes the sniper rifle the sniper rifle.
That's the rule.
It's really seductive to add weaknesses at this point.
I'm going to ask you not to do it.
Don't do it.
It'll ruin your game.
You can't add error to a sniper rifle, right, under any circumstances.
It just makes it so it's not a sniper rifle anymore.
It's a sniper rifle but.
We couldn't remove the melee attack.
Couldn't give it some kind of confident sound so everybody always knew where you were when you're sniping.
We didn't want to make you move slower.
One of the big problems with adding weaknesses is that people will figure out ways to get around it.
So we have to touch the flow knobs.
Remember, we removed everything that wasn't a strength or a flow knob, and so if we can't touch the strength knobs, sometimes we have to mess around with the flow knobs.
Turns out cadence is sort of the most flexible flow knob, especially for the sniper rifle.
It's the most prominent part of the sniper rifle.
Flow is that rhythm you get into when you're sniping.
You know you're, I don't have to be on his head until right now, because that's when they can shoot.
And it has a large impact on strength, but it's not a strength knob explicitly.
You can make the sniper rifle fire slower, and it doesn't actually change the core of the sniper rifle.
It just changes how effective it is.
So we're using our rational brain at this point.
Now, once we've used motion to figure out what's wrong, we're using our rational brain to decide how to change.
And so we're going to limit the strengths.
We're going to figure out what change fixes the problem, what has the least impact.
We considered changing the shots in the clip, but the problem is that three shots is not usually enough to kill two people.
And what's going to happen is you're going to kill one guy and you're really going to feel like you need to reload because you only have one shot left, or maybe two.
Can't miss.
We could have increased the length of the reload, but it would have to be increased a lot to fix this problem, and that felt like adding a weakness.
We did play around with changing the time to a full zoom.
After you hit the button until you're fully zoomed, it fixes the problem with acquisition speed.
I can stick my head out, and by the time you finish zooming in, I can run back.
But it doesn't fix close range use.
And it also encourages people to fire without zooming, and that breaks the fantasy of being a sniper.
We tried making it so you couldn't get headshots when you're unzoomed, but that really limits the strength.
And that only fixes the close range problem.
It doesn't fix the.
the long-range acquisition speed problem.
We thought about limiting the maximum total ammo, but like I said before, that fixes the average, it doesn't fix the instant, it doesn't make you feel any better when you get killed that eventually the guy's going to run out of ammo.
Hopefully he's not going to run out of ammo before you can kill him and take it back and use it yourself.
So time between shots.
It fixes the acquisition speed, because if you do miss, it takes a while before you can shoot again.
and it fixes the close range because what was happening at close range was people just pounding the trigger and shooting it like a shotgun almost, like trying to get as many bullets out of it as possible. It's not a negative feedback loop, it prolongs the fight.
If somebody misses and I run back into cover, the fight is longer, it didn't end quicker.
So this is the one we chose. It was our choice, we've got to make it carefully. We changed from 0.5 to 0.7 seconds. Don't make changes less than 10%.
It's not a hard rule, but it's a good rule of thumb.
It's not going to have a noticeable effect.
And you can twiddle these numbers forever, and one game it'll work and one game it'll won't work.
You don't need to get that specific.
What you're trying to do is you're trying to reduce the balance to the point where it's overcome by noise on the battlefield.
Try to overshoot and come back.
You want to make sure that this change actually made a difference, right?
So you make a big change and then come back.
I'm almost done.
And don't break the flow.
Anything higher than 0.7, we would have to change something else, because that just broke the flow too much.
So verify the change.
It's still overpowered. That's fine.
The other weapons don't feel weak.
The optimizers, they're doing other things now.
It's not being used at close quarters.
It's not a predictable outcome at long range.
Somebody's going to get back in the cover.
And my emotional state is no longer nervous.
So you use both your brain and your gut to verify change into the sniper rifle is balanced.
And I'm gonna skip the very last section.
So thanks for coming to my talk.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
Thank you.
