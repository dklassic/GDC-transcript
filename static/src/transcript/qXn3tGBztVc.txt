Good afternoon, everybody.
Oh, that's loud.
That better?
I hope everybody enjoyed the lunch break.
I'm excited about giving this presentation.
Before I get started, just a couple of announcements.
Just make sure that if you have a cell phone or anything else that makes noise, that you put it into the quiet mode at this point.
Also, If you have an opportunity to do the survey afterwards, it is really useful.
I did a presentation last year, and reviewing those was extremely informative for me, especially those that left comments.
So really appreciate it if everybody can go do that.
I'd also really be excited to get onto that deck of cards for next year.
We'll see if we can do that.
So I'm here to talk about randomness in games.
Before we get started, just a quick couple of things about my background.
So, for those of you that are not familiar with my work, I'm a game designer.
I've got about ten published titles at this point, ranging from Space Cadets to The Expanse is actually my latest title.
We are currently working on an expansion for that.
If anybody has a good title for an expansion for The Expanse, let me know.
We're in a little bit of a quandary over that.
Yes, Expansion, I don't know.
There's some good pun title there that we'll come up with.
I also am on the Dice Tower doing the Game Tech segment for that podcast and do the Ludology podcast, which is a biweekly show that goes into the nuts and bolts of game design.
And I teach board game design at the NYU Game Center in New York City.
So I wanted to start with.
This quote from the designer Greg Castikian in his really excellent book, Uncertainty in Games, which was published in 2013, which I would recommend.
And he talks about uncertainty as being an essential part of games.
As he says, in designing games, a degree of uncertainty is essential.
And that if there is no uncertainty, then it is not a game.
You can have other forms of entertainment that don't have any uncertainty, a book or a movie, if you're watching it for the second time, it's going to do exactly the same thing.
But a game, if you know exactly what the outcome is going to be, then there is no reason to play.
So he looks at it and breaks down four major areas of uncertainty in games and ways that you can introduce uncertainty.
Hidden information, examples would be in poker, things like that, where you've got cards or something that your opponent doesn't know that you have.
There is skill or performance-based uncertainty.
that is like darts or basketball or anything where you have to flick a disc or something like that, there is opponent uncertainty.
Even in perfect information games like chess, you don't know what plans your opponent has or what move your opponent is going to make, and you have to make plans on how you're going to react to that.
And then the last one is the traditional randomizers, which are dice and spinners, card draws, tile flips, stuff like that.
And it's that green box, the randomizers, that I want to focus on today.
Each of these deserves their own lecture and presentation, but I really want to focus on the randomizers and the way that those can impact the game.
So as I said, there's a couple of different types of this.
Die roll card draws.
You also have classic spinners.
One of my goals in life is to design a spinner-based game.
I'm actually working on a game where you build your own spinner, like a giant roulette wheel, with different probabilities for different things.
And then the venerable cube tower, where you throw cubes and then they come out.
These are all ways that you can create uncertainty in your game.
But how does that get applied?
So let's take a look at some basic, this is just sort of a really basic representation of the flow of a game.
There is a state of the game, then the player makes a decision, and that ends up with a result.
Now there's two main places that the randomness can fit into this picture.
The first is what I refer to as input randomness, and that is where the game state is randomized.
So first the game state is randomized, then the players make a decision based on that, and then the results of the decision are going to be fixed.
When a player makes a decision, they know what the outcome of that decision is going to be.
The uncertainty in this case is on the input side.
What is the game state?
Now on the flip side, you can also have output randomness.
In output randomness, the game state is fixed, and you're just making a decision around the current game state.
But the result of your decision is going to be random.
You make the decision, and then you see what the outcome is.
You don't know how those two things are going to be correlated.
So some examples of output randomness.
This is typically the type of randomness that is used in games, and certainly was going back millennia.
You have risk.
Of course, in risk, when you decide you're going to attack a territory, then you roll the dice and decide, figure out what the results are going to be.
Roulette, you place your bets and then see it.
In Dungeons and Dragons, every action that you take, you roll a die to see what the effect of that is.
It's not necessarily super random things.
There's also more sophisticated games.
War games, in particular, have a lot of output randomness.
I've shown here a typical combat results table from a 70s, 80s war game, where you decide you're going to do an attack, and then you roll a die or dice and see what happens.
So those are all some examples of output randomness.
Input randomness tends to be a more modern phenomenon in terms of games, with some exceptions.
But one looking at here is Dominion is a great example.
In Dominion, in one mode of play, there is a randomization for the kingdom cards that you select at the beginning of the game.
But once you select those decks, that creates that game state that players then react to.
Dominion actually, interestingly, has a couple of different levels of input randomness versus output randomness.
One is the overall game state.
But also, each time you draw a hand of five cards, that's sort of input randomness.
And then you have to decide how you're going to play out those cards.
There may be some output randomness in that.
Like if you're playing a blacksmith and you have to draw cards, you're not necessarily sure what you're going to draw.
But in general, you have a pretty good indication of the way that your turn is going to flow based on the input randomness of the cards that you draw.
Similarly, backgammon is input randomness.
You kind of roll the dice and then decide what you're going to do based around that, make your plans based around that.
Contract bridge, to a certain extent, has a level of this in that, you know, as a declarer you see all your cards and your dummies cards and you can kind of build a plan around that.
There is some...
unknown factors, of course, in what your opponents hold, but typically you can have a pretty good idea of a plan.
And then finally, I just threw in a video game here, the recently released Into the Breach, which is a great example of input randomness in that it very, very deliberately shows you exactly what the opponents are going to be doing on their turn.
So in this case, for those of you that haven't played Into the Breach, you can see that there's a, those red striped lines there, those are the areas that the enemy is going to be attacking on their turn unless something happens to them.
If they get moved out of the way or they get destroyed, you know exactly what's going to happen and your moves are also very, have limited randomness.
You just know if you move here and you shoot here, you're going to do this damage, you're going to push this guy into the water, he's going to die, you know exactly what's going to happen.
So those are some examples of input randomness.
Now, it's good to divide it up and to think about it as you're designing, as a way of approaching randomness and these decisions that you build into games.
But they're not.
you know, they're not very clearly, you know, absolutely perfectly delineated in games.
Because, you know, you think about risk.
There is a fixed setup to when you start your turn about what the board looks like.
And then you have to decide what you're going to do, and then you roll the dice to the outcome.
But the input from your turn is the output randomness from somebody else's turn.
So there's this constant flow, this constant cycle.
But it still can be, um...
It's still, I think, very useful from a design standpoint.
There also can be longer term consequences, like in Settlers of Catan, there is also sort of input randomness for your turn, where you roll and see what goods are available, and then you decide how you're going to deal with it.
And when you're building a settlement, you know if I play these four cards, I'm going to be able to put a settlement in this area in Settlers of Catan.
But I don't necessarily know how that's going to produce for me down the road.
So that's kind of longer term output randomness.
So there's a lot of gray areas in this, but in general, I think this is a useful classification.
Typically, input randomness built into a game will lead to strategy, a more strategic feel to the game, gives the players more sense of control, and rewards more skillful play, whereas output randomness is typically going to feel more random.
There's little things that you can do.
It becomes more tactical in that you have a shorter planning horizon, and it's typically associated with lower skill caps.
Now, these are broad generalizations.
There's a lot of examples on both sides.
For example, war games. War games are filled with output randomness.
Every time you do an attack, you typically roll the dice and see what happens.
And those still feel very, you know, obviously have a lot of strategy, have a lot of tactics.
There's ways to rise above that.
But if you take the example of like Into the Breach, the video game example, that game would have a very, very different feel if you didn't know the results of your combats going into them.
If you just planned your moves and then there was some sort of randomization about what happened.
It's a very, very different game and it's a very less puzzly sort of a game.
It becomes more of a, you know, just more random.
there's a blend there of what you want to approach.
Interestingly, also, which is a little bit outside the scope of this, but the more uh... randomness that you have in your game you can actually make it feel less random the more dice rolls that you have you're going to start to approach an average value that's a whole separate talk but uh... just keep that in mind and war games take a lot of advantage of that there's so many dice rolls that you can pretty much predict over the long run what's going to be happening Now there's more than at least two axes of randomness.
Input, output is one of them.
I ran through that one kind of quickly, but I want to spend a little bit more time talking about the correlation axis of randomness, because this is not one that's considered all that often, and I find it really interesting to look at games in this light.
So what is correlation in terms of this randomness and the way I'm approaching it?
The idea is basically that there's gonna be a series of events or a series of random numbers that are happening over time.
Time one, time two, time three, time four.
And if you know what's happening at time x, how much does that tell you at time x plus one?
If I know that this is happening this turn, how much does that tell me about what's happening next turn?
And there's a lot of different answers to that question.
Sometimes, the answer is, you know nothing.
You know absolutely nothing about what's happening next.
And that, in the scientific or mathematical terminology, is called white noise.
And what that means is that, again, there's no correlation between the last result and this result.
If I'm playing Risk and I roll the dice, the battle result that I got last time is not impacted at all, does not impact in any way the result that I got this time.
They are completely unrelated to each other.
Just as a fun fact, we'll come back to it.
It's actually called white noise.
It's related to a frequency spectrum.
So when you have noise, it generates different frequencies in it.
And white noise has all the different frequencies, from low frequencies to high frequencies, low correlations to high correlations, small jumps and big jumps.
So in a light spectrum sense, that would be white.
And so that is why it is called white noise.
And this is, as you can imagine, the most common way of treating randomness in games.
But it's not the only way.
Next option is called brown noise.
In brown noise, you know a lot.
The results at time step one are very, very highly correlated to what's going to be happening at time step two.
By the way, white noise is called white because of the color of light, but brown noise is not called brown because of the color of the spectrum.
It's called brown off of Brownian motion.
In a spectrum standpoint, it's called red noise, which you'll sometimes see as a term.
But brown noise is a little bit more of a common term.
A really simple way to generate brown noise is to say you're starting at a certain value.
You're starting at a value of eight, and you flip a coin.
And on a heads, it goes to nine, and on a tails, it goes to seven.
So you have a really good idea of what the next result is going to be, but you can't over the long run predict exactly where it's going to be.
This is also sometimes called a random walk type of randomness because it's tied to where you start from, and it will spread out from there, but it spreads out in a controlled and slower way.
And then the last type of noise is in between these two, white noise and brown noise.
It's called pink noise.
And pink noise, which goes back to our spectrum again, you have a very high chance of a small change, but a much smaller chance of a big change. So over time, that's going to start to gradually drop down and you could get really, really big jumps, but most of the time it's going to be focused on those small areas.
Now, pink noise actually is sort of interesting, because it ties a lot into what humans like, and the way that humans experience the world.
Pink noise is actually the best representation of randomness, and the randomness that we see.
There's been studies, Vossen Clark did studies in 1975, where they took music, and they plotted the frequency of the notes over time, and how the frequency changed from one note to the next.
and it's exactly corresponding to pink noise.
They did the same with human speech.
Human speech in terms of its tone, in terms of its volume, in terms of the pacing of it, also is a pink noise type curve.
Financial systems follow this.
You get a lot of small changes in the stock market, and every once in a while you get big movements and crashes and big jumps.
You also have what are so-called black swan events, like the giant stock market crash in 2008, which are supposed to be exceptional events.
So systems tend to be, you have an idea of where the Dow Jones is gonna end up every day.
But every once in a while you get these big giant jumps.
So a pink noise, in a very real way, represents a closer representation to reality.
And it's also been found that systems that model pink noise, musical systems particularly, and voices and speech and things like that, that people respond to them better.
People like them.
Even if you just, I was going to play some noise for you, but I'm not going to.
I'm not going to burden you with that.
But if you listen to samples of white noise, audio, white noise, and brown noise, and pink noise, people universally like the sound of the pink noise better, even though it just sounds like noise.
It just sounds like a fuzzy noise.
But it's a better fuzzy noise than white noise.
So.
A couple of game examples that I wanted to jump into and talk about how these three different types of noises are represented in some board games.
So this is a game from 1987 called Shotgun Company about building a chocolate company.
And in this game, as a business simulation, there's at the end of each turn or beginning I forget if it's beginning or end of each turn, but you flip over a card that says what the market conditions are.
and it basically tells you how much chocolate people want and how much they're willing to pay for it.
But there is zero correlation from one turn to the next.
You have no idea if the market is going up or the market is going down.
So you can invest in all this infrastructure to build your chocolate and process all your chocolate.
And then you flip over a card and there's only 10 bars of chocolate that are wanted in the world and you're in trouble.
It makes it very chaotic feeling.
It makes it very, very difficult to plan for the future.
And also, there are some special abilities in this game that will let you peek at cards coming up, and that makes those extremely powerful.
But as a business simulation, it doesn't really feel right.
It just feels like you're just taking a guess at what's gonna be happening.
As a counterpart, a counterpoint to that, the game Crude or McMulty, which was originally released in 1974, in that game you roll two dice.
There's an economic situation, so there's like prosperity or there's expansion.
You roll two dice in that game to see what areas on the border can it produce.
Actually it's really similar to Settlers of Catan, it's really interesting.
This is a sort of a precursor to that system.
But on doubles, the economy changes to a new state.
And when you get doubles, I don't know if you guys can see on the thing here, but at the bottom of those cards, it tells you where it goes to next.
So, like, if you're in prosperity, it may go to rapid growth.
Most of the time, if you roll doubles, it's going to go to downturn, or it may go to depression.
So that is sort of a combination of white noise and brown noise.
You have a pretty good idea of what's going to be happening, but kind of the trigger of that is more random.
But it makes the economy feel a lot more alive.
This was refined even more in the re-release in 2012 of Crude.
The rules were changed in that point.
Instead of the economic changes being triggered by doubles, on that roll, it was changed instead that there was an accumulator that was created.
When you rolled those two dice, you took the difference between those two dice, you rolled a two and a four, it was two, and you added that up on a track.
And when the track reached eight, then it moved into a new economy.
And then you again rolled a die to see where it was, which economy it would go to.
The great thing about that system, that's a real pink noise system because you can have big changes.
Somebody could roll a one and a six.
Somebody could roll doubles for a while in a row and it's not going to change at all, but you can kind of see it coming.
With the first system in Krugman-McMulty, you knew ultimately what most likely economy was, but you couldn't see it coming.
Here you can.
You can say, okay, it's at six, it's at seven, it's getting close to that eight point.
It may change next turn.
It may not change next turn.
Do I want to deal with it now?
Do I want to wait?
So, you've got big swings, little swings, and some idea of where things are going.
So, a much more robust and interesting system for players.
To look at another genre, I want to compare two dinosaur games.
The first one is Evo in 2001.
This is the environment track from Evo.
So one of the things that's really important to your dinosaurs is whether it's temperate or desert or whatever and so the You guys can see my mouse. You can't see my mouse. Okay, so You have a marker on this track and at the end of each turn you roll a die to see where it moves and you Can see that on a three four five or six it moves forward to the next one on a two It stays where it is and on a one it actually moves backwards So again, as a player, I have a really good idea where it's going to be.
This is classical brown noise.
So it's kind of a random walk, but it's even more directed than a random walk.
But it has a very staid feel to it.
It's not going to move that much over the course of the game.
Again, as counterpoint, the game Tyranno X from 1990, which really should be reprinted.
God, please somebody reprint this game, has these environment tokens that are put onto each separate environment that represent the fruits or suns or whatever.
The way that this works, though, is when players add environment tokens, they put them on face down.
So you know what you're putting in, but the other players don't know what you're putting in.
And when the number of face down tokens exceeds the number of face up tokens, the environment changes.
You throw away all the face up tokens, you flip everything else up, and the majority becomes the new winner.
depending on how that goes, that can actually cascade into multiple changes immediately.
It can also leave the environment in a really stable state if everyone put in the same kind of feature.
Or it can leave it in a really unstable state if there's a lot of different things that are in there.
So it's very much a pink noise process.
And it's a really, really dynamic and interesting part of Torano X because of those cascading features.
You also get that cascading feel a little bit in Pandemic when you get kind of these supercritical states and small differences can make big changes on the board.
But that's, it's not as much of a pink noise process as there is here.
So generating pink noise is actually pretty challenging in a board game environment.
It's really easy in a video game environment.
From a board game it can be challenging.
There's a couple of different ways to do that.
One is, by using the Dice Delta, like I talked about, which was used in Crude. You can have, I'm going to talk about exploding dice in a second, but you can also have something like this Heat of Battle table from Advanced Squad Leader, which I call Extending the Extremes. In Advanced Squad Leader, crazy stuff can happen any time you roll a 2 or a 12.
This is the chart that what happens if you roll a two.
So if you roll a snake eyes on two dice, you then go to this second table that can result in people going berserk.
It can result in people promoting heroes arising from a squad that was just about to be destroyed.
There's all different kinds of things that can happen.
And there's this very small chance of gating into this other world, this other table of things that can happen.
So that can be really interesting.
Exploding dice, which as far as I know, were originally used in the game The Uncharted Sea, the miniatures game, is really interesting because in this game you just roll lots of dice when you're doing an attack.
A one, two, or three is a miss, a four, five is one hit, but a six is two hits and you get to re-roll those dice.
the sixes.
So it creates these moments.
It creates this tension that you have a pretty good idea of what your distribution is going to look like.
But you've got a tail now that extends infinitely out.
And I've seen some crazy stuff that happens because you're rolling like 20 dice.
And so you can get tons of sixes, and it just keeps going and going.
And it can lead to these really dramatic and exciting moments.
So it leaves out the possibility for real extremes while keeping things generally focused in the middle.
I'm just going to throw out one other thing, just because I've got five minutes left here.
So violet noise, as far as I know, has never been used in a board game.
Violet noise is the exact opposite of pink noise.
There's a very, very small chance of something small happening, but really big chances of big things happening.
I'm not sure how that would be used, but I'm just throwing it out there for the sake of completeness on the different colors of noises.
So just a couple of design tips, just to kind of wrap it up.
When you're making decisions for the players in terms of how they're approaching things, look at input versus output randomness and how that's going to affect planning, how that's going to fix strategy, how that's going to affect analysis paralysis of players that have to consider every last thing.
Lastly, people like pink noise.
So white noise is easy to do.
Brown noise is easy to do.
Try to come up with systems that will generate pink noise that will give this opportunity for you know mainly what's going to happen, but it has the chance for these outlier events that keep things really interesting and spice them up.
So that's all I've got for today.
Thank you.
I'd be happy to grab any questions.
I think we've got a We've got about five minutes left for questions.
So I think there's a microphone in the middle, if anybody has any.
Otherwise, I will just keep talking.
So your initial quote said, was about uncertainty.
Yes.
And randomness is one way to achieve uncertainty.
in games that I've designed that have a lot of uncertainty being generated by uh... player behavior uh... but no randomness. I've ended up with situations where the play testers will tell me your game is way too random because they're it's too unpredictable to them what's gonna happen based on other people's behaviors uh... if they're not the designer and they don't have they don't see the table well enough to to predict um...
Can you think of ways that one might use randomness to provide more predictability to unpredictable player behavior?
Which seems counterintuitive, but.
I think that one way of looking at that is, I'm almost kind of reminded of a bluffing aspect of a way to do that.
So you kind of have more of an idea of what, you don't want it to be absolutely certain what the players are doing.
And I'm going to lean back on what Tom Lehman talked about in the last talk.
about Race for the Galaxy and the way that players are making choices and the first level heuristic is just pick what's best for you and then after that start to leech off of what other people are doing.
So I could kind of see that where you don't want your choices to be too obvious of what people want to do.
If all choices are equally valid for people then that's a design related issue that you need to fix. There needs to be...
things that are in general better for people but not to the level of certainty uh... you know this is absolutely what I have to do I have no other options so I would just try to constrain people's choices and that'll make it feel a little bit better.
lots of different kinds of randomness other than randomizers like other players and so on.
Is there, how do you see being able to apply this concept of different colors of noise to that?
Because I'm trying to wrap my head around how would you get pink noise out of other human behaviors as opposed to randomizers?
That's an interesting question.
I'm not sure if there's a direct analog, really, as much.
I think with your skill-based stuff, there's always going to be a certain distribution of player performance in flicking games or shooting three-pointers or what have you.
So I'm not sure it's as easy to control it.
In terms of uncertainty with hidden information, stuff like that, I think you can tune it to a certain extent allowing information to come out partially.
Like if you look at social deduction games like Werewolf or Avalon or things like that, there's ways that information leaks out.
So then you've got, you don't have a perfect, you're basing it on a little bit of information which may not be suspect, which I think kind of lays some of that groundwork that you're talking about.
Yeah.
Hi, my name is Toti.
And thank you for the talk.
It was, I loved it.
And I have maybe a comment that I'd like for you to elaborate on.
So basically, I think it's interesting that you have these, like you said about pink randomness, or pink noise.
That's kind of the holy grail, right? That's what you want to have, that's what people like the most.
And you say that it's a trick to make it in a board game environment, it's easy in a digital game or a computer game.
I have been designing MMOs, and there it's extremely difficult to prevent it from being a game-killing event, which is like a world-killing event, right?
And you know, it's extremely difficult.
So I think it was very interesting that you were...
Mandelbrot and Chaos Theory and Black Swan, right?
These are Chaos Theory events.
And so, yeah, yeah, this was just my comment that I wanted you to maybe elaborate on it.
Thank you.
Yeah, I think that you don't wanna have.
And as a designer, you've got to keep the game on track.
I mean, and that's part of the fun and challenge and frustration about being a game designer is you kind of set up this machine, but then it's got to run on its own and the players are providing the input for it.
And you can't set up a situation where the players can push it all the way off the edge of the cliff, because they will if they have an opportunity to do that.
So...
So you can extend the extremes but still kind of try to keep it constrained in some fashion.
You have to look for closed feedback loops that can move things off really quickly and stuff like that.
So I think that there's...
As a designer, I also do software development.
And as a computer programmer, 99% of the things I screw up are at the edges of my loops, or I forget to check for nulls, or at the corner cases.
And in game design, it's the same thing.
You've got to look at your corner cases.
What if somebody just does this move over and over and over again?
Or if all the players try to do that, or somebody tries to tank the game, or somebody tries to end the game on the second turn.
You know, you got to look for all of those extreme events.
And so you want to create good randomness, but you want to create it in a bounded sandbox that the players can operate in.
You can't let them just completely run amok, because you're not going to get the experience that you want out of it, so.
Okay, I think that's time.
If anyone else has any other questions, I'll be outside afterwards at the meetup area.
So thank you all, and please remember to do the surveys if you have the opportunity.
