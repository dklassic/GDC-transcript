All right, everybody ready?
Welcome.
Please silence your cell phones.
And yeah, I think we're ready to get started.
So there's going to be talk on how we created the prototype for Edith Finch and then how those evolved into the broader game itself.
And this is the team at one snapshot.
We started the game with three people on the team and then grew to about 15 and then tapered off.
Towards the end, so it's sort of a medium-sized team, not too small, but certainly not AAA.
The game itself, for those who don't know or it's been a while, is a collection of short stories.
And each of the short stories has a totally different game mechanic, different from the rest of the stories in the game, but then also hopefully different from anything else players have ever experienced.
The game is an attempt to...
Try to keep players in this kind of beginners mind of never quite understanding what it is that the game is about. So they're always going to feel like they're discovering new things as they move forward. So we did a lot of prototype for each of these stories and each of the prototypes also had the constraint that.
There are no tutorials in the game, because the game is about this sense of discovery.
So we wanted to create things that people had never seen before, but also things that were discoverable.
That people could learn how to progress by playing the game.
And instead of focusing on traditional goals, like a challenge, this game is focused on evoking a feeling.
In that case, it's the feeling of the sublime.
talk about in a minute. Here's a quick trailer.
Alright. So, that's the game, and in this talk I'll be beginning with the kind of high-level approach to how we approach The overall design for emotions and then talk about how we figure out which emotions we're going to be focusing on in the particular game we're making and then get into the nuts and bolts of actually making those prototypes that try to evoke those feelings.
All of these kind of tie into.
The problem of how do you make something when you yourself are kind of a little unsure about it, which is part of the appeal as a developer that we're making things that we ourselves are kind of actively exploring and.
The games that we make tend to be themselves about a sense of exploration, because that's kind of what the game development process for us is like.
The development process of Edith Finch is kind of a worst-case scenario of going in blind, but hopefully a lot of these things will seem somewhat familiar for games you might be working on, where there are at least a few aspects that are not very well sussed out.
But hopefully you know a little bit more about your game than we did when we started making it.
So starting off, just to give you kind of a philosophical perspective, my sense of the way that the games work and stories and emotion and the difficulty there is that it really boils down to attention and what you can expect players to be focused on.
And it's difficult in games because there are a lot of things that are going on compared to a play where people are generally like pretty much sitting or going to the bathroom.
One of those two things for the duration of the performance.
But in games, the problem isn't just your game, it's every other game that players have experienced coming into it in their lifetime has kind of trained them to approach the experience of the game often as a life-or-death situation.
Usually, you know, if you stand in one spot for too long, you will be destroyed in a lot of games and genres.
or you will lose or whatever it is.
So players aren't used to taking their time.
They're not used to stopping to take a breath.
They actually have to be encouraged to do those things.
So we try to create a space that evokes that feeling and kind of encourages them to approach it differently than they would a more traditional game.
So this is kind of our...
high-level plan of attack, which is that we start off by not giving them, hopefully, too many distracting toys.
I mean, we try to balance it. There are times in the game where you become a giant tentacle monster eating sailors.
But those are not the same moments where we're trying to get you to pay a lot of attention to a specific area.
We alternate these very small scenes with broader, sillier moments.
And then, yeah, in a nutshell, what we are trying to do is to create interesting spaces and tools to explore those spaces.
And those tools are the gameplay prototypes that we'll be talking about a little bit later.
And instead of relying on an explicit story and, you know, setting up...
Character and conflict and plot, in words, dialogue, we try to do as much as we can just with the environment itself.
Ideally it's something that, you know, it's like a silent film where you don't need any audio or text in the beginning.
Just the experience of being in that space already gets you to ask questions as a player and wonder like what might be happening and get you into the the mood of it and it's a lot easier and more reliable.
Because players don't have to pay attention to context, it's something that they can absorb through osmosis.
And instead of starting, again, with a written, more didactic story, we start with a very broad goal of evoking a certain kind of feeling.
And what we found is that when we start with something that is...
a little more open-ended like that, even though there's a lot more uncertainty, it's something that actually has a good chance of making it to the finish line, because games tend to go through a lot of changes as you realize how many of your initially sound seeming ideas aren't going to work for a number of reasons. But when you...
hold on to a little bit of uncertainty and you bring it with you, you know, that gives you enough room to actually preserve the original intent even though what ends up at the end is not what you would have expected, but it is, you know, if it's something like a feeling, there's a good chance that that's gonna carry through. In the case of Eda Finch, the game began as a way for me to explore a particular moment that I had in my own childhood when I was scuba diving as a teenager and saw the bottom of the ocean sloping away into like a seemingly infinite darkness and that moment where something was simultaneously very beautiful, but also unsettling Which in a word is like the sublime in this moment where you you feel You know the transcendent beauty of the universe, but also you yourself, you know Acknowledged to be very small and a fragile part of that and so this game was trying to explore that initially it began You know by literally Remaking that teenage scuba diving experience more or less And then I just like it was way too gamey and didn't actually feel like What was in my head and so it went off in a obviously very very different tangent and then once we have a better understanding of that particular feeling, which is the next thing I'll talk about.
Then we move on to making prototypes, because those prototypes are the most difficult part of the whole process and have the most emergent complexity and changes that arise out of the process of making them.
Story comes in, like we begin with the best effort at the very start of like, yeah, okay, we think...
These are the characters and this is roughly what's going to happen.
It's going to be a story of a family, for example, in this case.
We knew that it was going to be centered around Edith.
But we found it a lot easier for us to rewrite everything once we had the experiences, which is like a classic chicken-eating problem.
But we would...
have people play the game as it existed in a more or less complete prototype, and then ask them about how it felt to play the game, and then write more to that experience.
So instead of trying to make an experience that tracked with the story, we just adjusted the story to track better with what the prototype was that we had made.
Okay, next up is finding that.
feeling in this case, you know, we started with a sense of sublime, but it, you know, had to get a little bit more detailed.
And then the challenges of, you know, once you have that idea, how do you communicate that to the rest of the team?
So, for game development purposes, I think it's helpful to boil down things into a couple of very concrete ideas. Ideally, in the case of Edith and Angelique, we had three words, sublime, intimate, and murky. And the hope was that These were feelings that anybody on the team could look to for inspiration for how to do whatever it was that they were engaged in that day.
So, you know, the lighting artists, you know, might be working on like the fog or, you know, an animator might be working on jump animation, whatever it is that they could look and say like, oh, is there a way that I can make this a little bit more intimate or more murky?
And even before anything has actually been checked into Perforce, people have this collective sense of what this might feel like, and there's going to be divergences.
But that's part of the appeal also, when you have something that is powerful and specific, but also a little bit open-ended.
It provides a space for everybody else to...
contribute their own perspective on these things and add to the richness of the game without hopefully pulling too much in opposite directions.
And then once you've kind of settled in on the feeling, I think it's really helpful to try to find as many really good examples of that in other mediums, kind of as a way for you to almost like play the game in your head years before you ship it.
In our case, there was a genre of literature called weird fiction that, like Neil Gaiman and H.P. Lovecraft and a bunch of other folks have written really good stories about the sublime.
And a lot of weird fiction deals with the challenges of being in a universe that is stranger than you can possibly imagine.
And so those were really useful tools for us to, you know, kind of imagine what it would feel like to play the game by reading it.
Also, soundtracks are great because people have already done the work of saying, you know, what does it feel like for this, you know, like in the case of Edith Finch, things like Donnie Darko or Under the Skin, you know, movies that were tonally in that ballpark.
What might that sound like? And so for a lot of the project, I just had a couple of those soundtracks, like on repeat, and it was a way of kind of getting into this alternate headspace and kind of dreaming in that place.
Also...
Just printing out a whole bunch of references was really helpful and sticking them up all over the office.
Engaging the visual part of your brain, which I'll talk about a little bit later.
And then similarly, updating your Windows or Macintosh desktop background is a nice thing.
Just to kind of put it right in the middle of your face.
So here's the game that we're working on next.
That's a little preview.
And, oh, we're out.
OK.
And, OK, here's our first mood board.
This was, I don't know, maybe like three or four months into development of the project, when we still thought there would be magic and combat.
And I don't know, like Edith was going to take words and put them together and make spells.
This is like a nightmare.
It was a totally different game.
It had a different name.
It never would have shipped, but this is what it would have looked like.
And it actually looks kind of like a game we did ship, called Watermans of Edith Finch.
And I think it's just like the power of having these, you know, kind of specific but somewhat open-ended tonal goals. So we didn't ship a story about a microscope, you know, but there is a lot of underwater elements and certainly the forest in those lighting conditions are things that are not too far away from from what we did ship.
And then next I'm going to show a green light trailer that we made, I think about four months in, that is kind of a moving version of this mood board.
None of these things actually shipped, but they're what we were imagining the game.
I don't know, maybe some of those books.
I think some of those books might have been in the game.
You can see it's a little more haunted housey than the real game, but there is still a sense of this very large house that you'll be exploring.
And a little bit of underwater stuff still clinging to that original scuba diving inspiration.
Here's an invisible dog that we thought would be a good idea.
We went back and forth a lot on how puzzly the game would be, and for various reasons.
The game could have had more of those delightful physical interactions, but they're just really hard and they weren't where our heart was when it came down to it.
But this is really weird. We had an underwater sequence in the shipping game, an underwater house that we completely forgot about for several years, but it was there. Four months in, we had this underwater house, and I think it just speaks to...
The game being about this combination of civilized and natural spaces.
This also did not actually ship.
But it's a nice idea.
And so yeah, what you're looking for, or what we're looking for, is a sense of where you're going, but I don't think you really want a map.
I mean, the producers probably want a map. It would be easier to work with.
But it's really hard to make maps, for one.
And they quickly become inaccurate.
and need to be maintained.
And it's easier and it's more fun to just pick a direction.
And it also puts you into places where you can't predict where you're going to be, which I think is part of what made Edith Finch such a strange experience, is that we could not have expected that that's where we would end up.
We only found our way there because we set off in a direction and just kept marching for a lot of years.
OK, but try to balance this with the practical needs of making a video game. It's not all, you know, there's like layers of abstraction and confusion and we'll figure it out later. We're always trying to find things that we can.
put a stake in the ground on and say, you know, even though we're operating in this sea of unknown and this morass of poor decisions and, you know, shaky ideas, we can still pull out a few things that we can have certainty about or just like feel somewhat confident about. And for us, looking at things like weird fiction, this literary genre, and other experiences that evoke the sublime, you know, I think it became obvious that for whatever reason...
They tend to involve natural spaces.
People feel a sense of the sublime most often in places like the forest or the beach.
And so, yeah, we should probably be setting stories in those spaces where we can.
So it gave us a way to focus of all the potential prototypes we might do.
Maybe we can try some of those at the beach.
Similarly, with weird fiction, a lot of the stories are very short.
And a lot of them involve very explicit narrators, people that are telling the story, writing it down, often several layers deep, where someone is telling a story to somebody else.
And that's a way of emphasizing that you're never getting the full truth, you're just getting a perspective on it, and making the universe that much more obviously unknowable to you. So that was something that we took wholesale for Edith Finch.
And there's about...
I think a year or so of us, or me, particularly, like wrestling with like, what does a sublime mean?
Like, how do we make that concrete?
And eventually kind of giving up and saying, I don't really know how to do that, but I do know how to do overwhelmed.
And that's pretty close.
So I think overwhelmed became something that's easier.
Like if an animator is making, you know, like a walk cycle or whatever, like you can...
Visualize that a little better and it's not exactly what we set out to make it's not as aspirational as sublime But it's something that's a lot easier for You know to actually make a concrete version of it and Yes, the next is talking about how?
Once there's this idea of this, you know feeling that you have how do you communicate that with everybody else and People like to ask for documents, written descriptions of how this thing will work, knowing that, of course, these things are going to change.
Many people kind of read them.
They forget about them.
The documents become stale.
There are some limited utility, but it does help to write them, partly just for your own benefit.
And then also, later on in development, a lot of people will come on to the project, like various contractors.
Or you might have someone who's only going to be there for a couple of weeks doing shrubbery or whatever it is that that week you really need someone to do.
And so having the corpus of documents, actually, even if.
It's not super helpful for communicating the original idea.
It is good to just have around for people that come on late.
But I think what works better is to try to communicate to everybody in the language that they're most comfortable with.
Which, unfortunately, is different for every single person on the team, because everybody is a snowflake.
But, you know, kind of broadly speaking, like artists tend to prefer like a more visual way of describing something.
So like a collection of screenshots or, you know, reference photos might make the idea of, you know, like your beach prototype a bit clearer.
Where the artist really wants to know things like, oh, like how wet is it, what time of day, you know, that you might not even be thinking about.
But your reference photos.
We'll have some concrete version of that.
Programmers tend to like feature lists.
But everybody has their own thing that they're most concerned about.
So in terms of communicating, a lot of it just boils down to talking individually to everybody on the team where that's possible.
And in our case, that even extended to task tracking, where every single department by the end of the game ended up with their own kind of different task tracking tool, because they had different ideas about how much work they wanted, like how described it should be.
And so rather than having one monolithic task tracking tool that nobody really liked, because we were a very small team, it actually was easier for us to say, like, OK, you guys can just work in Google Docs, and we can use Jira, and we can use The bug tracking tool and whatever, which seems insane, but that's part of the like one of the nice things about being a small team is that you can do kind of insane things and it's only insane for like six of you. It's not like 60 or 600 so you can mitigate that a little bit. And then in terms of communicating to everybody else. Nothing beats like a prototype or anything that is moving. A lot of it feels like an optical illusion where you can look at something.
And you swear, like, oh yeah, that's really, that's a hole.
But then you move a little bit, and you're just like, oh, no, it's just a painting of a hole.
But it only works if the camera's in one particular perspective.
And that's kind of what a moving prototype does, is it gives you a different perspective on the problem.
And it lets you ask more painful questions than you might otherwise if it was a series of reference photos or whatever.
Ideally, any kind of moving object is a great place for discussions and ends up solving a lot of questions or raising questions that wouldn't have been raised otherwise.
And it's not enough to just communicate initially what the emotional goal is of something.
It also is incumbent on you to communicate that.
every time it changes, which is like all of the time, for very good reasons, but often kind of complicated reasons.
Of like, oh well players were getting confused about this thing, so even though we really liked it, we kind of had to remove it or move it over here, and it's hard to tell everybody every time something changes. So what we found was helpful were a couple of kind of best practices like team Traditions like every Friday.
We would have show-and-tell where we would walk around to each person's desk and the whole team would kind of whatever they're working on and then people would give like a one to two minute spiel and show things off which is also really nice for people to brag about what they're working on because often if you know an artist.
is making some really complicated prop.
They could spend a week or two on it, and it just goes into the asset folder in the background, and nobody really notices it.
Even though it's very pretty, it gives everybody a chance to kind of clap for them.
And also, it's a very explicit demonstration of like, oh, that's funny.
You're making props for this Egypt level or whatever.
I had no idea we were going to do an Egypt level.
And it just surfaces a lot of things that might otherwise go under the radar.
It's been my experience on both of the games we've made, which I think turned out pretty well overall.
But there are phases in development where a lot of people don't play the game, even though they may like it or they may hate it or whatever.
There's just long stretches of time that can go by where people...
get very busy on whatever, you know, their part of the game is and don't actually play the rest of the game.
So it can be helpful to force them to do that. And we used to have these dog fooding sessions where the team would eat its own dog food and for an hour or two everybody would play the game themselves like at their desks and then we would have a meeting usually afterwards and sometimes we would generate tasks. Often we would just chat about it and it sounds really stupid but Just having everybody play the game was a really good way of communicating what had changed about the game and what we were working on.
Also, similarly, getting everybody together to watch a playtest can be a good way to communicate things out.
Ideally, people would know.
that you would add to this level or change this thing before they see somebody actually playing it.
But that's a good kind of last stop for, oh yeah, now that thing exists because I see it now.
It's live.
And similarly, showing for the publisher, they'll ask you to demo at various conventions.
That's a good place to get people in front of other players.
And especially later on in development.
You can get kind of jaded to the game because you've been seeing it so long and getting a chance to see how happy new players are with the things that you yourself have gotten very tired of can be inspirational.
Also, even though there are a lot of times where in our development process we have no idea what's going on, we do have phases where we can make lists of like, oh yeah, we need like 300 things done, like for the art team.
I was like, oh, you hear like 300 problems?
And it feels really good to make that list and then see it go away and to actually chip away at it.
There's something that's very empowering about crossing things off and seeing things get completed, which when you're working on something where you have this kind of broad direction but not a very specific roadmap for how to get there, you don't have a lot of those opportunities.
So.
We would take advantage of things like E3, for example, or any time we had a big milestone build, to turn that into this kind of smaller phase of certainty.
And rather than use the already really cumbersome, overloaded task tracking tools that we all had, that we'd been working with forever, it was surprisingly powerful just to open up a new document.
and say, all right, here's just 200 items that we're going to make today.
And we're going to see them all be done a week from now.
And we're just trying to balance the certainty and uncertainty.
OK, moving on to prototyping.
So once you have this sense of, OK, this is going to be an interesting space to explore.
That creates a problem because there's so many ways to potentially explore it.
And the prototypes are where the rubber meets the road.
And they're a way for the ideas to actually start talking back to you and to work with them in a very tangible way and to discover things often through repeated failure.
And in terms of what you're looking for, I think for us...
Because we were venturing into these places that we really had no idea, like how a game about short stories, for example, could work, by making a few of these examples and then watching a bunch of people play it, we kind of developed our own internal sense of how these things would fit together.
And over time, there's a way in which the game itself starts to kind of talk back to you.
Or another way of looking at it is that you've already made a lot of decisions intentionally or unintentionally, and now you start to see the repercussions of those decisions.
And a lot of times, those can be actually positive moments.
Like for us, two of the things that we discovered, it wasn't that we planned these things, but just in watching play tests that really changed the way the game ultimately feels.
When we saw playtests, we found that a lot of players would get very focused on whatever their objective was.
That's kind of a traditional player behavior that is a little bit frustrating when you might want them to open up and take their time and take a breath.
But because it's...
So ingrained in players to follow instructions, we ended up making a number of stories that are about that process of what happens when you get so focused on something that you ignore everything else that's going on in your life.
Just because that's what we saw a lot of players kind of were headed towards without us even pushing them.
We also had a very kind of garden variety design problem of...
Most games are about trying to prevent your death.
How do you make a game where death is inevitable, but players don't feel like that's a sign of failure?
So we tried to make those moments feel a little more positive, and in doing that, we created these strange moments where players would march happily towards their death, which is something that...
We hadn't experienced ourselves in any other games and felt like a very canonical Finchian moment for us.
So that became something that we found in a couple of stories and really emphasized.
So it started as us just trying to solve a particular problem and then ended up being something that was more interesting and that we put more love into than we'd expected.
OK, jumping into some nuts and bolts, prototyping tips from the trenches.
The first suggestion I have is 3x5 index cards are a really good way when you're dealing with a lot of ideas to try to get other parts of your brain involved.
So like a lot of this talk is really just about dealing.
with this combination of complexity and confusion and the unknown.
These note cards are one way that I personally have found really helpful just drawing really, really crappy visual representations of whatever is...
Here I think it's like motifs in the game trying to figure out like what are the primary and what are secondary and what are bad and by making them visual it Engages this other part of your brain that is enormous like a huge part of our brain is dedicated to visual processing But if it's something that you know, it's just in a tech document or in your head There's a limit to what that part of your brain can work on Like 7 plus or minus 2 is about the things you can keep in your head at any given time.
But if you put it out into the world in some way, you can think about a few more things.
Which is helpful when you have a game that's about, in this case, 13 different family members.
Here's another version of that.
In a spreadsheet form where I looked at this document like pretty much every day for the last two years of the project.
It's just a really terse summary of all the different stories and what the order is and some of the different values here, like the gender of the story and trying to balance those things out and just trying to kind of wrap my head around.
what this whole game was going to feel like.
And obviously these pictures don't really look like the stories, but they're enough of a shorthand that you can kind of imagine what a whole game's worth might feel like and run through it in your head, just by making it more visual.
Also, just a note about the brain.
I think it's really helpful to write down all of your ideas because if you don't, then your brain tends to hold on to them.
I think your brain is like a second grader who's got their hand up and really wants to tell you the answer, but if you don't call on that second grader, then eventually they just shut down.
And what I found a lot of the times a solution for a problem would come when I was in the shower or doing something else.
and not really thinking about it actively.
But the only way you get to that point, I think, is if you reward your brain by saying, yeah, I'm listening to you.
I'm writing these things down.
Even these ideas don't seem like they're that great.
There's a power of just getting it out of your head also.
So even if it's not a great idea, it makes space for something that might be coming up next that could be great.
Also, even though game development is very collaborative, I think early on when you're making prototypes, it can be really useful to just.
Do everything on your own, because as soon as you involve anyone else, there's just like a lot of complexity that you're borrowing that can be really helpful if it's something very technical that are difficult or, you know, that you really don't know how to do.
But often you can get a lot of the way there just knowing a little bit about a couple of programs, like on Edith Finch, it's like a 3D modeling tool, like a very basic knowledge of Unity, and some Photoshop is enough to get...
A lot of questions answered positively or negatively before you go out to somebody else.
And then there's, you know, beyond that, tons of things in game development that you could be learning that are really useful for making prototypes.
Also, when we make prototypes, the very last phase is actually making the prototype itself.
A lot of time is spent kind of in the phases where you're dreaming about it in different ways.
So just like downloading a whole bunch of images and finding reference is a really great way of getting your brain kind of spinning on possibilities, particularly with reference photos of real world things like If you're doing a father-daughter camping trip in the 1970s, you might stumble across an image of, like, oh, right, they had different kinds of cans for opening soda back then with little peel tabs and stuff that you just wouldn't normally think about.
But finding references can give you a lot of free ideas and help you to think of things in different ways.
We also did a lot of work in Unity, even though the game itself was made in Unreal.
It's, I think, kind of nice to work in a completely different space, because there's a lot less pressure in some ways.
Like, you know that it's going to look really shitty if you did all of the art, and yet, it actually, like, you know, in this particular case of the prototype for the swing set story, you know, starts to get to a point where you can ask some, you know, valid, troubling questions about should this story have hands, for example.
Should the rope be bending at all?
Should that rope instead be a chain?
A lot of questions that once you start to get things moving at all, rear the ugly head that might not have been visible if you were just on a whiteboard.
And then the last thing we do is in-engine prototypes because they're a little bit more heavyweight.
OK, Critically Damped Springs.
That's a one-dimensional mathy sort of value for how you move something, like basically like a real spring that we used everywhere.
And particularly on cameras, places where you want really smooth motion, there are things that worked really well for prototyping because they're so simple.
So I'll just talk.
Really briefly about them, but here you can see like on the top.
This is just like it's a box moving and see at the very end.
It just kind of clunks like that, but a spring is just this tiny little piece of code and it feels much more expensive, much more magical.
And the other great thing about springs is that they're really easy to tune because there's only two values like how Springy they are and then whether or not they overshoot their target So even though they look really nice. They are also Really easy to adjust for designers later on in the process And here's an example of taking just a raw input, like if you have the analog stick moving around.
Sometimes you want that snappiness, but often it feels better if there's a little bit of a delay, particularly with cameras.
So here's an example.
PowerPoint is a little slow there.
But yeah, so on the left, it's just what you get if you listen to the stick.
And you say, OK, oh, they moved left.
Great.
Moved the camera left that fast.
And you see a lot of Unity trailers for games with cameras that look just like that.
They're very jerky.
And these springs are so simple.
They're just a couple lines of code, and they start to feel much more like a finished product.
And it doesn't have to be this floaty.
This is closer to the Edith Finch floaty camera that I personally like.
But the nice thing about springs is that there's two values, and you can tune those knobs.
And because we were making so many different prototypes, tools like these springs were really useful because we could drop them into all kinds of different scenarios and then still have something that we could easily adjust the feel of.
And then music is another thing that was surprisingly useful for the prototypes that we made, partly because...
Composers are really good at evoking feeling.
They are professionally obligated to listen to people, ask them for something to be 20% more whimsical, and then have a cogent response to that.
They're much more professional than game developers in that way.
So our composer was really helpful when we had problems in certain stories where it's like, it's close, but it's not.
It's not quite there.
It was a very surgical level of tuning at that point.
And it's also something that is very practical to adjust later on.
Like, as the door begins to close and you get closer and closer to shipping, there's a lot of things that you can no longer change.
And everyone agrees that, yeah, the game would be a lot better if we could, you know, get rid of this thing or that or whatever, but, like, we can't for memory reasons or, you know, in this sensitive area.
But music is one of the things that's almost free, usually.
I mean, there's a little bit of streaming cost.
But in terms of technical complexity, it's very low.
And yet, it has a very significant emotional impact.
So for us, there were a few stories, like Swing said, Calvin's story, that that made a really big impact on and came in late.
But I think it's especially true for Gregory's story.
Where we had four different gameplay programmers try to work on it.
And it just never felt right.
Like it felt too clunky.
And we got very focused on the mechanical aspects of it.
And it's a difficult problem.
Like you're doing kind of 3D platforming in a space where the camera is fixed.
You're Gregory in the scene like you're a baby.
It's very hard to judge depth.
And so we spent a lot of time adjusting that and thinking about what should we be doing and why does this not feel whimsical.
And I think the best answer, I mean, there were a lot of legitimate gameplay fixes that came in that helped a lot, but in terms of the emotional feel of that story, just adding the waltz of the flowers got us a lot of the way there.
Something that felt like people have associations with ballet, put us into the right mindset of being this kind of balletic frog jumping around a tub.
Okay, playtests are a really nice phase because it's a way of moving out of this kind of forest of the unknown into a place of a lot of practical and tractable solutions and fixes.
There are a lot of things that...
Don't have clear answers in the design process and you can stay up very late wondering like, oh man, there's so many different ways we could do that. But on the other side, there are a lot of issues that are quite amenable to just brute forcing like pathing. I think is a great example of that of if players.
You know, tend to, like you want them to go, say, right down a hallway, but they keep going left, then it's something that you can just do a bunch of play tests and keep making little adjustments to that.
Like, oh, maybe make this, you know, a little bit brighter, maybe add a little bit of motion, or, you know, however many revolutions it takes.
If you just keep doing more playtesting, it's like turning the crank and things eventually get better.
And it's really kind of comforting that there are phases and aspects of development that are amenable to that.
Because again, a lot of times we spend floundering in places that are very murky, but playtests are a great place to just kind of not worry about these problems.
Like they may be legitimate issues, like pathing and people getting confused about something, but there's something that you can...
Just work hard enough on and it will eventually solve itself.
A few sort of specific takeaways.
When people who are playing get frustrated, often they will have an idea about why they got frustrated and they'll have suggestions for what you should change about your game.
Generally, it's a bad idea to listen to them because they're unaware of...
What has led them to that state?
Often, we would see players who would get very frustrated if they, for example, if they're playing Molly's story and they didn't catch any owls.
So they spent 20 minutes flying around as the owl trying to catch the rabbits.
And then they would complain about the next sequence of the game when you become a shark.
It's like, oh, the shark sequence is really boring.
It's like, well, it's only boring because you exhausted yourself in this sequence right before it.
But people usually aren't aware enough about that.
So, yes, it's useful to listen to that they are upset, but not usually helpful to listen to why they think they're upset.
In a first-person game, it's also really helpful to look at where their camera is pointing.
You can kind of mind read a bit there and get a sense of what they're concerned about or what they think is important in the scene.
Repeating anything tends to be kind of a death knell.
I don't think of any genre where doing something a second time is going to pay off, but that's kind of the last step of desperate players.
And then sometimes people have a lot of trouble with the game.
And it's because they're very dumb.
And it's kind of heartbreaking when you watch them play.
And one of our play tests, someone spent, I think, like 20 minutes on the downstairs of the house, a sequence that usually takes maybe two or three minutes.
They went upstairs.
They missed the part they were supposed to go.
They went downstairs.
They went upstairs again, downstairs.
And I think the fourth time they found the thing they were supposed to.
And I thought they were really upset, but they, oops, sorry, getting ahead of myself, but they're actually really proud of themselves.
Oh yeah, no, I found my way through it. And I think, you know, there are a lot of people out there that just have trouble with life, and your game is like the latest manifestation of that, but it's not your fault. So, you know, it takes a little bit of Detachment to say, OK, what's my bad and what's just their fault?
But if they're having a lot of trouble and they're not upset about it, that's not necessarily a bad thing.
That just might be how they go through life.
So that takes an expert's eye to suss out.
And then we would alternate our playtests between doing kind of functional tests where we have one person playthrough with more what we called focus tests where we would have like up to five or ten people play at any given time and those were really useful I think for testing different things like the one-person test was really good for very specific mechanical issues of like what might be confusing to a player where the larger tests were really good for more subjective, like, how does it kind of feel? Do these things make sense from a narrative standpoint?
So doing a mix of those playtests worked well.
And I think about five players is probably as much as you need after those diminishing returns.
Something that was also really helpful for us was doing batches of playtests at conferences like GDC where you've got thousands of game developers from all over the world who were here for one week and you can, you know, call them up ahead of time.
And a lot of people are really happy because they're already in town to come by your hotel room.
So I think last year or the year before, we had maybe 10 or 15 playtests with tons of really great game developers in a single week that would have been very difficult if we'd had to organize it in Los Angeles in the normal way.
And then just a note on frustration in particular is something that we focused on a lot with our playtests because.
I think more than anything else, frustration kind of unravels all of the good work that you might be doing elsewhere.
It's like the scene in The Matrix when Neo wakes up in this amniotic fluid.
It just completely rips you out of this world.
And it's something that can be difficult to get players back into.
So our fixes for that, a couple of them, where it was possible, things like dynamic difficulty, maybe Owl was a case of that, where some players...
had a lot of trouble catching the rabbits.
And so if players failed a couple of times, then the radius of acceptable triggering got larger and larger.
And that's something where we wanted to preserve.
We didn't want to make it too easy for all of the players, because I think some players really like to have a little bit of challenge.
And there certainly isn't that much of it in Edith Finch.
So the places where we had challenge existing, we wanted to hold onto that.
But there are some players that would spend 30 or 40 minutes, potentially, on those sections that just felt like, wow, that was a terrible experience.
Let's try to help the people that are having trouble without hurting the people that are doing just fine.
So dynamic difficulty was a way to do that.
There are a few places where there were two ways or more that kind of made sense.
Like, for example...
When players come to a ladder that's below them, they might press forward on the stick because they want to go, like, forward and down the ladder, or it might make sense in their head to press down on the stick because they're going down a ladder.
Either of those kind of work.
But what we ended up doing was supporting both of them.
So when you get close enough to the ladder, whatever direction you press, we assume you want to go down the ladder.
So we just adjust the controls to conform to what players expect.
And then everyone gets the experience of, oh, yeah, I just sort of expected it would work like that, and it did, rather than 50% thinking it would work and then being surprised that it works the other way.
So if there's no reason it has to work one way, it can be nice to just.
the way that players imagine that it should.
And then even though there are some people that struggle, and I think it's fair to just say like, ah, it's fine, you can struggle.
There are times where...
People will struggle and then never get through it.
Places like, actually even in something as simple as the swing set story, most players figure out, okay if I move my right stick, like that'll move my right leg, and the left stick will move my left leg.
But some players just never figure that out, because they got the feedback of moving one of the legs.
And they just got so focused on that leg that they never thought of moving the other leg.
So the fix for us was to, after I think it's like a minute or two, we eventually spawn some little letters that swirl around the leg that you haven't moved just to try to get people to kick that other leg.
And I think that's something that, you know, it seems really stupid when you watch someone not figure it out when so many other people have had no trouble with it.
But it's the kind of thing where...
Everybody has those moments.
I don't think you have to be too much of an outlier.
But there are places where, like, about 5% of the time, people would just, you know, not because they were necessarily being dumb, but it just didn't click with them.
And for a game like Edith Finch, you know, if you have 13 stories or whatever, like 5% failure rate on any of those stories, it's still, that's going to add up over time.
So we tried to find places where if there was going to be some kind of hard failure where people would get really, really stuck, you know, we would lend a helping hand if they spent.
Minute or two without moving forward and then some of those cases to where most people will never see that and it won't bother them that you're offering this little hint for something when I could have figured it out but after a minute or two of not figuring out something very obvious just throwing them a bone.
Helped move things along and then the last tip is kind of part and parcel of this.
The difficulty of working with things that you don't understand is that it can be.
really effective to change a lot of things at the end when you do understand them.
So I think at the end of the project you're at this point where you know you've been struggling and suddenly things are kind of clear and you also have the ability to affect the changes you want, but there's not a whole lot of time.
Although hopefully by this point you do have a sense of what are the things that you can change without breaking everything else so you can be a little bit more surgical.
Also, even though we did make a lot of changes, it's a kind of rolling phase on the project where as you get closer and closer, then the scope of things that you can make changes to does get smaller over time.
But I just want to jump into a couple of specific cases of places where I think the game really benefited from the team continuing to be open to embracing those kind of changes.
One of the bigger changes was a week before we did our final dialogue recording, we did our last pass on Edith VO and rewrote a huge chunk, nearly half I think or more, of what's in the game.
Because we finally understood, kind of at a macro level, what the concerns were and what players were confused about.
And a lot of it came down to very simple things, like just adding mom and uncle, and like...
being very clear about the familial relationships.
So we changed a whole lot of dialogue in small ways at the end. And we also, not quite at the very end, but a few months before we finished the game, we did our last bedroom. So we kind of worked in stages from the ground floor working up to the top, and or like almost nearly last bedroom for Lewis's room. And we decided to make him character. He's more of an overt archetype. He's very much like a pothead.
And we had resisted doing that on earlier bedrooms because we really wanted these family members to feel like distinct, real human beings and didn't want them to feel in any way cartoonish.
But, you know, by the end, what we realized is that in order to understand someone, like, if the challenge is understanding them from their bedroom, then a regular person generally would fail that.
Like, I know my bedroom is not that expressive of who I am.
I mean, there's like a few details, but...
It's nowhere near what Edith Finch needed to be in order for players to cruise through and in like a minute or two, you know, pull out a couple of high-level details about who that character was.
So, for the very last bedroom, we finally realized, like, oh, right, this is what we should have been doing the whole time.
And then we went back and redid every single other bedroom.
And a lot of the characters, like Barbara for example, went from being just an actor, like someone who liked performing, to being a child star, which is like the more character version of that, but also a lot easier to design that bedroom for and have people understand immediately who that character was.
And then, appropriately, the last thing to talk about is the ending of the game, which took up a good year or so of my life making terrible prototypes, things that did seem promising and then just didn't coalesce.
And we realized after a while that the problem was essentially we were trying to write the last episode of The Twilight Zone.
Like, we had created all of these weird, bespoke, unique stories.
And then we wanted something at the end that would kind of summarize all that and put a bow on it.
And that just doesn't really exist.
The last episode of Twilight Zone is called The Bewitching Pool, and it's terrible.
It doesn't really answer anything.
But that was the problem we had, and the solution for us ended up coming when we just kind of randomly had a request from our friend Jenova to come by and play the game because he had a friend in town and didn't have anything to do with him that weekend or that afternoon.
So they came by and...
They played the game. I don't think there was an ending at that point, but we talked about this problem that we had.
And then one of them said, well, you know, there's like a lot of death in this game.
What if, you know, the ending was something about a birth?
It's like, oh, yeah.
That actually might work.
And part of me was a little frustrated at that point, because it's like, well, how did they see these things?
Who are these amazing people that can solve our problems for us?
And I think that the miracle here is really what it's like to be at the end of something.
You go through all these confusing phases, but...
In the last retch, you actually start to kind of, like there are enough pieces there that someone can come in and ideally it would be you, but sometimes it's not enough for you to make that.
Like you can't see it, you're too close to it, but someone else who's not been there for several years staring at it, it becomes immediately obvious that, oh yeah, all these pieces are there.
So yeah, I think there's this kind of miraculous phase at the end of project.
where even if you've been working in the dark for years, it helps to be flexible just a little bit longer and Edith Finch benefited a huge amount from that.
It is really difficult on everybody to remain flexible throughout that process.
So, huge thanks to everybody on the team for putting up with all that and being excited most of the time to keep.
Making those changes. It's also pretty rough on publishers. So thank you to all of our publisher friends and You know, thanks to the press too It's been amazing with Edith Finch to see that even like a year after the game came out People are writing articles on like Edith's gloves like there's a whole article just on her gloves And that level of detail has been really surprising and wonderful and then you know thanks obviously to everybody who's played the game and And really open themselves up to it and had very emotional experiences with the game that are very collaborative effort on the part of the game developer and the player and it only really works when people are coming to the game and being emotionally open to it and we sincerely appreciate it and then we're also very very early stages on our next game which is going to be super animation focused so if there's anybody out there who's an animator or an animation programmer or So if anyone knows good people of this type, definitely let them know that we're looking.
And I think we've got a few minutes left for QA.
So if there's any questions.
Hi.
Great talk.
Thank you very much.
I had a question about your development process.
It seems very iterative and explorative.
Obviously, no one has unlimited time and money to make a video game.
So I've been wondering, like, you talked a lot about exploring and prototyping.
Do you have any tips for when you have to stop and just execute on a plan?
Or did you just timebox it? Like, what's your technique there?
Yeah, I mean, our technique was to rely on our publisher to set milestones.
I mean, working with them.
But I think that was one of the really useful aspects of that relationship, that we would have things like E3, or like that Greenlight trailer I showed, for example, that was a publisher deciding, I mean, we talked to them about the scheduling, but...
I think it is really helpful to have milestones.
And it would be very difficult if you didn't have a publisher like forcing you to those milestones.
But that kind of discipline would be really useful just to say like, OK, we're going to show at this conference or do whatever.
Like nothing really.
I mean, it's kind of like the miracle at the end of the project.
It's like that for every milestone.
When you have this big goal, it gets everybody kind of together working on achieving some nugget of it.
But yeah, I think it just comes down to you need little bits of crisis.
to bring everything together and get all of the check-ins submitted and integrated together, because otherwise you'd never ship.
But yeah, look for any way you can add little bits of crises.
All right, thank you.
So as a publisher, that terrified me.
Looking at the talk, I'm like, oh, that's cool.
Every team uses their own tracking.
Just terrifying.
While the end product was amazing, was there sort of, like you say there was milestones, but was there elements of crisis as well where because it was like not really formalized and kind of rough and kind of very sort of a humanistic process, so was there elements of terror or was there bad parts of it as well I guess? Yeah, I mean there were definitely moments where the publisher was very concerned, both of the publishers, but I think It's not like we were working in a vacuum and just kind of like in the dark the whole time.
Every week we would have new cool things that would come out of it.
So we could show the publisher, hey, we thought it was going to take us this long and we would have this thing, but instead it's taking us this long and we have this other really cool thing.
So, yeah, I guess to answer your question, we...
We didn't always hit all of our milestones, but we did always find interesting things along the way, and so I think that was somewhat comforting to the publisher to say like, okay, well, it does feel like good progress is being made and it's not very predictable, but the publishers also kind of understood going in that that was part of the development process, and kind of like what they were interested in making also.
They had signed up to publish a game that nobody really understood.
That's part of what was appealing about that.
But that would not have worked if we were doing a Halo sequel or whatever, where there were much more fixed ideas.
Cool, thanks.
Sure.
Sorry, is there in the back?
Yes.
Okay.
Oh, you.
Oh me? Okay, sorry.
Sorry about that.
So you talked about your mood boards a lot, and that kind of interests me, and I was wondering how much they evolved throughout the project, and were they just kind of like a, were they like your base of like, it was like a stone for you guys, or was it more fluid?
Uh, we didn't continue to make mood boards per se, I think that was an early phase, like it takes a while, you know, to put all those things together and look at them, but we did something very similar, where like Chris, our level designer, would put together You know, like a couple pages of a bunch of different photos and ideas and references for, you know, kind of like what a middle school girl might make for a crush.
Just like all these cool ideas about a thing and put them together a little bit more structured, in Chris's defense.
But yeah, so they weren't like mood boards per se, but they were kind of in that vein when they were really helpful when design needed to communicate something to art, was usually where they would come into play.
Okay, so the mood boards were more like, I mean, what you started with then?
Yeah, yeah, that was more like, what is this feeling that we're thinking about?
Like, what are the kind of tent poles that we think are important here?
But we didn't keep making them in the same way that we didn't keep making a game design document for the whole game.
That was something like, initially you take a pass at it, and then the game itself becomes the document eventually.
Awesome, thank you.
Sure.
Hi.
So in a game like this, that it's very...
abstract and with a lot of feeling based design ideas.
How do you manage to balance keeping the vision that you have as a creative director and not like micromanaging the team and giving some freedom to the team to develop their own ideas?
Oh yeah, I don't know if I have. That's not really a question that I can answer one way or the other, but you know I'd say like the...
My attempt was to try to define things, I guess, in very specific kind of directions of like, okay, we want it to feel like this, but not necessarily prescribed.
This is how we get there.
But, you know, to leave things open.
Like I think coming up with three words is a good example of a place where, you know, you can be specific about what you're looking for, but, you know, not being too prescriptive.
And I guess that just, you know, comes down to really like, defining the task and hopefully leaving enough room there.
But I mean, I think as a creative director, one of the things that I've struggled a lot with is people that don't want that freedom.
Like, I think it's easier when people really are excited about putting their own stamp on something, like assuming that they understand what the goals are.
But I think a lot of times people on the team, especially in our art department, they really just wanted to be told what to make, which is quite surprising.
So I think.
It's more so than the challenge of giving people creative freedom.
It's the challenge of understanding what kind of freedom people really want, and then giving that to them.
Thank you.
Sure.
In the back.
Hi.
So, you said, don't give them the gun, right?
And I understand that part of the feeling that you're trying to evoke, you said, is sort of being overwhelmed, and so you're constantly presenting these new gameplay ideas to the player, and that helps you tell the story.
So how deep and complex of a mechanic could you present before you'd say it starts to distract from your ability to tell a story?
Hmm. Um...
Yeah, it's a good question, I guess.
Because I noticed it was part of your design philosophy, but it was also part of your emotional message.
So it's like when you design another thing with another emotional message, can you make deeper mechanics?
Or will you lose your player?
Yeah, I mean we tended to, for our prototypes, settle on fairly simple mechanics.
In some ways, you know, like they feel embarrassingly simple.
And, you know, like Lewis is a good example of a mechanic that initially was very complicated when we were on the whiteboard describing how fish chopping should work.
And there was going to be a boss who was going to come around, and there were going to be fish that you didn't want to chop and fish that you did.
And what we found was just like in playtesting it, the player's focus was so divided.
So in that particular story, there just wasn't a lot of...
bandwidth. So I guess, you know, in answer to the question, we just would like try something and then we would see how much emotional kind of headspace the player had and trying to be conscious of the things that are taking from that stockpile. Like there's like a limited amount of emotional attention that a player can give and on Edith Finch one of the things we were surprised about was when we would do the longer play tests, the people playing the game, you know, beginning to end, that when they came into a story They weren't even really fresh.
They were still thinking about the story before, and the story before that.
And so in testing them in isolation, we would have a different experience from someone playing it all the way through.
So in our case, we tried to encourage players to stop after stories.
We would open the family tree, and Edith would talk a little bit and do a little drawing, just as a way of getting some of that attention back, because the stories for a lot of players are kind of emotionally draining.
So it wasn't that we were designing complicated things to a certain level of complexity that we thought would be appropriate for the game.
It was more like just being...
Like an emotion budget.
Yeah, yeah. Like taking the temperature in playtests and trying to figure out what kind of made sense.
And in our case, it's kind of embarrassing how simple we could make things and get away with it.
Where no one complains that fish chopping needed to be more complicated because it's not really about the fish chopping.
That is getting you to something else, and you're thinking about all these other things, and our job is to kind of set the table for you, in this game anyway, that it was more about this context and creating that than it was about digging really deeply into a particular mechanic.
Okay, thank you so much.
Sure.
Hi, thanks for a great talk and for making GameWare fish-shopping as a central mechanic.
You're welcome.
That was amazing. I love that sequence.
So my question is...
Was there any prototype that you really, really loved, but that didn't make it into the game because it didn't fit?
There wasn't anything that I'm heartbroken about.
I mean, there are stories that we tried really hard on, like a story where you lean back and then look at the world upside down and things fall away from the earth, where we spent a long time.
But I think we got really good after a while, painful lessons of realizing what we as a team did well and what was just kind of like.
I think there are some stories that work right away and it feels like you're bicycling downhill.
And then other stories, even though they may seem really cool, you just find even after, you know, a couple of days of prototyping, it's like you're pedaling uphill.
And you're like, wow, this is really fun, but I don't know if I want to keep pedaling for six months.
So nothing that is like, oh, if only we had time.
I mean, Louis's story and Gregory's story almost got cut.
So those would have been like, oh man.
I really wish we had these stories. You wouldn't believe what we had.
But no, nothing that I regret too much.
Thank you.
Sure. OK, last question.
I really loved what you said about discovering what the game wants to be through the prototyping process.
I'm curious if you had any situations where in early prototyping you had sort of like variations on a theme, like different prototypes that tested well, that fit within the overarching story but were like directly in competition with one another, that sort of like pulled it in different directions but felt equally compelling to you as designers. And if you had that situation, do you have any best practices for kind of like sifting through the data and figuring out what to up-rez?
Yeah, I don't think we had any prototypes where we liked both of them and they were like competing with each other.
Usually it was more the case of like, like the pedaling downhill thing.
I'm like, oh, well, this is clearly like a story that we should be doing more of.
And this other one, you know, is really frustrating.
But I mean, certainly looking back on the original design, it seems crazy that we would have spells or combat or things like that.
But we never really got that far into it.
I think.
We just kept, you know, we made this pile of ideas and then we would take the most interesting idea off the top of it for the next prototype.
So we just kept, you know, kind of sorting that pile and if we had been making prototypes from the middle of the pile or the bottom, you know, like the spellcasting ideas that we had, like I'm sure we would have run into, you know, more conflictory stuff.
But I think just the evolutionary process of what should we work on next was enough to weed out...
A lot of the conflicting ideas.
We also, early on, like our first two prototypes, like the large ones, ended up being the largest, most complicated stories we have in the game.
Molly's story and Lewis' story.
So in terms of like, how we prototype things, we kind of made stories that we really liked, but...
were in hindsight like insane that it would not just be like one mechanic but oh my god there's like five different animals that you get to be in this story and you know these like stories that were combinations where we kind of got away from that from a production standpoint but I mean it's nice that we had them because we could take those and eventually ship them but we could only do that because we'd started them really early and we had years and years to keep working on those stories we couldn't have continued to make Prototypes like that. So in that way like they were successful. We like those stories, but they were all the cautionary tales of like Let us never do this again We can you know, we have space for two of these in our hearts, but that is all Thank you. Sure Alright, I think that's