So a couple weeks ago when they announced this, I saw that I had the last slot of the day and I got really nervous that no one would show up.
So thank you for replacing that with nervous now performance anxiety.
Full crowd, okay.
So for those of you who don't know me, my name is Jim Brown, I'm a designer at Epic.
I was inspired to do this talk originally when after almost 20 years in design, I decided to move into a UX role.
I personally saw a huge amount of crossover between the UX process and the design process, and I very quickly figured out that not everyone shared that same view.
It was a very genuine misunderstanding amongst, especially on the design team, amongst the team, about how traditional UX principles, especially 2D things from UI, interface design, web design, things like that, might apply or translate over into 3D game design.
So my talk today hits on some of those topics in the hope that we can bridge that gap with a wider audience.
I actually see three major points where UX and game design share goals.
Both strive to clarify intent, to ensure that the designer's intent is understood by the players, but also so that the player's intent is understood by the designers.
Both try to show empathy for the player, to empower them rather than frustrate them.
And both hope to provide meaning, to identify why someone would spend time with a game and figure out what they can actually take away from that experience.
So I actually have 2 goals today.
The first is to go over 3 areas of design and show how those UX principles can blend with some specific areas of design to help create clarity, empathy, and meaning for the player.
And then the second is to give you some pro tips, so to speak, to take back and kind of practice when you try and implement these on your own with your teams back home.
So first up, first topic on there is encounter design, more specifically how an encounter structure can provide clarity for the player.
Encounter design, for those not necessarily familiar, deals with any time the player encounters, yay, a game component and has to interact with it.
This could be talking to NPCs, solving a puzzle.
Most often, this is a combat scenario.
Most importantly, encounters are points of interaction with the game, which is obviously where UX can come into play.
So, quick pop quiz.
Many of you may have seen this already, but when you look at this image, do you see random stripes of color?
Thank you, Celia.
Or the cast of characters from a Street Fighter game?
And when you see this, did you see the letter B or the number 13?
There are no wrong answers here because obviously we don't see the world as it is, we interpret it and that interpretation is affected by both context and any existing knowledge that we bring along.
In order to understand what our players might do in an encounter, in order to understand what their intent is, we need to understand how their brains work.
How do they make choices? How do they get information?
How do they perceive the world around them?
And not surprisingly, those are all UX questions.
So luckily there are some guidelines like the Gestalt laws, which hopefully I don't need to go into with too much detail with this crowd, but just to cover my bases again, just in case, Gestalt is a very fancy way of saying that we see objects in their entirety before we break them up into their individual parts.
which is an example is the Gestalt Law of Similarity, which describes why you probably see rows of dots here that are organized by similar color, rather than just seeing a random collection of dots.
And the Law of Proximity, which is probably explains why you are more likely to see columns of dots here, rather than just 36 individual circles.
Now I know that talking about Gestalt with a group of UX people is very, very played out, and I promise we're mostly done, but I bring it up because these two principles in particular have a direct application to encounter design.
This is a screenshot from Serious Sam, shared with me several years ago by a fellow designer, and I kind of fell in love with this concept.
In this scene, or in this encounter, the player is most likely to perceive two groups of enemies, one on the left and one on the right, because of their proximity to one another.
there is a chance that they may also see two groups based on their similarity, the headless bombers and the brown NAR guys, but it's very unlikely that they would see each enemy individually.
And as evidence of that, did anyone see the biggest threat in this scene, or did you miss it entirely because it has no similarity and no proximity?
So these same Gestalt principles really helped guide the encounter design in Fortnite.
In the early game, you meet these small enemies called Husks, which are kind of just teach you the general rules of combat.
And then as the game progresses, you run into these big purple enemies, which are called the Mist Monsters, and they require very focused team coordination.
Now the order in which these enemies are introduced helps the player learn.
There's nothing really special there, most games do that.
But the enemy's visual similarity is also what helps make them understandable.
The humanoid looking husks are all individual threats.
and the purple mist monsters require team attention, so that when you see a new enemy for the first time, you automatically have an idea of which category it falls into without, or before you even know what its individual capabilities might be.
And that recognition is especially important in Fortnite because we spawn our enemies in these huge squads.
Sometimes there's even several dozen on screen at a single time.
And so knowing that players are most likely to see that entire squad as one unit, having one giant purple thing that stands out from all the rest helps the player overcome that default state of perception and to effectively prioritize targets.
So here's a screenshot from the game.
It zoomed in, so it's a little blurry, I'm sorry.
But if you look at the mini-map up on the top right, each of those red dots is an incoming enemy.
And yes, there are a lot of them.
And this is me playing here.
If I had to parse through each of these enemies individually, this would impose a huge cognitive burden.
and quite honestly I'd probably be dead by the time I got through half of them.
So while the enemies here are presented in large numbers, this is the intended design.
the enemies are organized into specific ways to account for human perception.
On the flip side, players are then given weapons, traps, and special abilities that allow them to sweep through entire groups of these enemies all in one pass, as if a group really was a single enemy.
So in this screenshot, you can see how I've taken that into account and purposely funneled them between the rocks.
to create this single tight group, and this signals my intent as a player.
Thanks to the visual organization of players, of enemies in this encounter, the designer intent and the player's intent are now aligned, guiding the player on a path to success.
And with that success, the player can learn repeatable behaviors to find the same success or more success in the next encounter, which ideally becomes an ingrained pattern, which you may also recognize as a flow state.
So these are UX principles being applied as design techniques.
Gestalt, Cognitive Load Flow, usually only thought of in terms of a 2D interface, are being used here to help the player understand what their capabilities are, what the game rules are, and embody the intent of the design team through gameplay.
So this brings me to my first UX pro tip on how to bridge the gap between UX and design.
This is a grown-ass man having a pants-wetting encounter with a cuddle bear.
My first tip is actually a warning.
Don't be the bear.
If you come at a designer talking about gestalt and cognitive load, they're gonna look at you the same way that this guy is looking at the cuddle bear.
So go out of your way to learn design lingo.
Start the conversation in terms that the designer can relate to or that you both understand.
Talk about squad groups instead of gestalt laws.
Talk about combat pressure instead of cognitive load.
Save the technical jargon for overbearing GDC speeches like this one.
All right, second category I want to talk about is environment design, which has a lot to do with showing empathy for the player.
we want our environments to be interesting and helpful rather than just confusing.
And because game environments are so visual, all of those UX factors that deal with human perception also apply here with environment design.
So the same gestalt laws apply as well as a few others like the law of closure, which is why you see a circle and a square here.
Law of symmetry, which helps provide balance to a scene.
Continuity.
which gives alignment and common fate, which kind of guides the eye down a straight path.
And just again, very briefly, I promise we're almost done with Gestalt entirely, here is a screenshot from one of Epic's Paragon maps.
And there are some broken arches where we have the Law of Closure going on.
We have symmetry down the middle to balance the scene.
Players can follow the ramps up to the stairs, up to the arches where the Law of Continuity is happening.
and the law of common fate as the architecture shapes really guide the eye down the center path where all the important action is taking place. All of these concepts work together to make the content easily digestible, showing empathy by lowering cognitive burden and helping players maintain focus. Done with Gestalt.
So, negative space is another tool that helps players by removing miscellaneous detail, grabbing their attention, and giving them something to focus on.
We use negative space very intentionally while designing game environments by adjusting geometry, lighting, color, contrast, various other effects.
This is a screenshot from Unreal Tournament.
There are various pieces of contrast and negative space and things going on here.
The main point being the eye is drawn straight down to the bottom of those towers where all the important action takes place.
And if you contest that with the moment in Fortnite, where you jump out of the battle bus and you start skydiving, and you see the world below you, and it's all chaos.
There's details and things going on, and it's really hard to figure out what's going to happen, until you start to drift down and start gliding.
And the negative space and contrasting colors here help guide you toward an objective.
You can see very clearly the dark building tops which stand out from all the other spaces to signal, hey, maybe this is a place where you should think about landing.
Good environmental design shows empathy by guiding or helping the player along.
There are various other 2D techniques from painting and photography and various others that can really, really help with environmental design in gaming.
They may also really fall apart when things get translated into 3D because players are independent beings.
We as designers have very little control over.
where they're going to be looking, what they're going to be doing, or how they're going to be moving in any particular instance, unless we take control away from them, which is the absolute last thing we want to do.
So...
In a case like this, if you're trying to do, say, the rule of thirds, and you have your geometry set up so that the horizon and the skyline are lined up perfectly, that's great until the player is staring at a rock between their feet, in which case nothing works.
So while the actual practice of this type of thing doesn't always apply, the principle behind it still does.
And so what I try to do is capture the essence and the meaning behind that to incorporate it into a consistent visual language that can work across the entirety of the game.
A great example of this was described by the lead designer at Naughty Dog in an article she wrote about leveraging the affordances of primitive shapes.
She said that rounder shapes evoke safety and well-being, rectangular shapes are solid, stationary, and powerful, and those diagonal and pointy shapes evoke a sense of danger or imbalance.
So when it came time for them to design their environments for Uncharted, they were able to use these natural affordances as a means of communicating intent to the player.
Where is it safe to go? Where is the eye most likely to focus?
And if I go back to that same Fortnite screenshot I showed you earlier, you can see how some of those same affordances come into play in guiding the player toward a landing spot.
The pointy clusters of trees are probably bad landing places.
The rounded treetops are...
Okay, they're probably benign, you can get some cover if you can get underneath them, but the strongest, safest places to land are rectangular and solid.
This type of visual language helps the player have a better experience by, again, leveraging those natural tendencies of human perception.
Way back in the day, we used a very similar language with Gears of War, so that when you saw a wall, or a car, or some sandbags, or this rock, or this roadblock, they all had a consistent overall shape.
Again, bulky and solid to communicate safety, because these were all cover objects.
and very importantly, all of our cover was exactly the same height.
In Gears, if something looked like cover, it has to actually be cover. Because if someone's in cover and they're still taking damage and getting shot, then we as designers have let them down. We can't let the game lie to them, otherwise the core mechanic, this cover mechanic in Gears, completely falls apart. Pardon me.
We tried really hard to be consistent with this language, not just through Gears of War, but through the entire Gears franchise, where the end of every single wall and every single game is the same minimum thickness.
So players see this nice, solid rectangle and instantly recognize it as a cover object.
The space between objects is a standard minimum distance to provide the necessary negative space that allows players to know they can perform their cover slide or their rolling moves, all of these things which are really vital to navigating through the environment.
And if you draw a plane across the entire battlefield, you can see how, again, cover everywhere is all exactly the same height, whether it's in this courtyard or the rocks along the shoreline.
or junk in an abandoned farm, or the supplies and counters in this abandoned market, there's a standard visual language that we never, ever varied from.
Everything is purposefully consistent so that anyone, no matter what their skill level is, instantly knows what objects are cover, which aren't, what's dangerous, and what's safe.
Again, there are a million other visual tricks that artists and designers love to use in these spaces.
But the point that I'm trying to get across is that if you understand how someone sees, which is UX, you can do a better job of presenting what they see, which is design.
And applying UX principles to your environmental design specifically shows empathy for the player by reducing their overall cognitive burden and guiding them toward that better game experience.
So my UX pro tip for environmental design is to always respect the environment.
Now I don't mean this in the sense that you should be recycling, even though you should.
I mean that the game environment is more than just a space in which the game takes place.
The environment is actually core to the game experience.
It affects how people see the game, how they interact with it, and how they feel about it.
It's more than just a place.
All right, last section is system design.
Systems tend to be a lot more abstract.
They're difficult to visualize in 3D space, but they are arguably the most important or most significant piece of this puzzle because they do such a great job of giving the player both context and meaning.
Designers can sometimes get caught up in the 2D nature of systems.
We love to get lost in our spreadsheets and data tables, but what I propose is that we should think of them not in 2D, not even necessarily in 3D, but in 4D, meaning how does a system affect a player over time?
Here is a legendary pistol from Fortnite.
In 2D, all the stats are there.
It's super exciting if you love numbers, and the drop rate is like 0.001%.
In 3D, it looks like the Funky Space Pistol, which is cool, but think about it in 4D.
Imagine how the player is going to feel when they actually get this pistol in the game.
Imagine all the experiences that they're going to have to reach the point where they have it leveled up to max power.
and think about everything that they've had to learn and master along the way.
Systems in Fortnite are designed specifically to help the player find meaning.
This is a not so exciting screenshot from a quest system that we're working on, but you can see how the quest circles break down these kind of complicated, long quest chains into digestible pieces and patterns.
The completion marks help provide feedback to the player.
Showing what quests rewards are coming up helps players set goals and this tracking provides a way for players to measure their progress in the overall game. The goal of this type of system is to give player visibility into kind of the underpinnings of the game which shows that design intent.
to offer them achievable short-term goals with extrinsic rewards, which shows empathy and respect for their time, and hopefully encourages the formation of longer-term achievement and intrinsic reward, which is where that meaning comes from.
This is all three of those UX pillars I've been talking about today rolled into one boring system screen.
But systems don't necessarily need to be quite so player-facing in order for them to provide that same level of meaning.
As an example of that, this is another screenshot from Gears, and Gears has no health bar.
Instead, as you start to take damage, we draw this cog in the center of the screen, and if you get to safety, the cog will fade back down over time.
If you don't, it goes opaque, and then you die, pretty straightforward, but there's a ton of fancy UX stuff that's going on under the hood that players probably don't even realize.
The central location of that cog and its bright color make it really hard to miss.
And the arrows along the edge show the direction that the threat is coming from.
When we do start to fade it in, we purposely fade in the edges of the cog first, and then go in toward the center, which reinforces both the shape and location of the reticle.
and for reasons I don't have time to explain, that reticle isn't always there in gears, so sometimes this is your only indication of where to shoot.
And in fact, when you're just about to die, we try and give you one last ping, this audio ping that comes on, that lets you know that you're in a critical state.
And at that point, the cog is also fully filled in, it's fully opaque, and it's kind of a not-so-subtle reminder that like, hey, I'm not letting you see this thing because you shouldn't be engaging with it, you should be retreating into cover.
The full array of all these warnings working together is specifically intended to help players of all skill levels.
You know, a very experienced player can push this to the limits, an inexperienced player may just be like, oh hey, okay, I finally get it, I'm retreating.
And the other thing is, is that that last bit of health, that critical portion where you're just about to die, is actually more resistant to damage than any of your other health.
So very often, you'll come away with this feeling that you just barely survived an encounter, and it's because we lied to you.
We told you you were about to die when you really weren't.
But rather than feeling like they screwed up and almost died, players now have this exciting story where they can talk about pulling something off at the last second, which in turn, can make that experience more memorable.
Another example from Gears is our active reload mechanic.
When you reload a weapon in Gears, it goes through all of the reload stuff as you'd expect, but it also starts a little mini-game on the HUD.
A marker scrubs from left to right, and you have the opportunity to hit reload a second time.
If you hit it the second time while it's in that sweet spot, you get a weapon boost.
It's more damage, higher rate of fire, whatever. It's different per weapon, but it's always a benefit to you.
If you hit reload the second time while it's outside of that sweet spot, you jam the weapon, and it takes longer to reload, and you get no bonus.
Now, this active reload system dramatically impacted player behavior in ways that we didn't really expect when we first implemented it, which led to an overhaul of our entire system's design.
because advanced players figured out that if they did the active reload early, they would get more damage in the rest of their clip.
And that meant that they were doing more damage to all of the enemies in the game.
And because they were more successful, they were doing this more often.
So we actually had to go back and redesign all of our enemies to account for this higher level of damage output.
But most of our new players, didn't use the active reload system.
They were too afraid of jamming or didn't know that the system even existed, so they were more likely to just empty out their clip to the very end, then wait for the reload, and then re-engage, which meant they weren't getting the active bonus, so they were being doubly punished by not doing extra damage and facing more powerful enemies.
So to account for this, what we decided to do was actually boost the damage of the last few bullets in every clip.
We called them magic bullets.
Now advanced players usually missed the magic bullets because they did that mechanic where they reloaded early to get the active boost.
while newer players were more likely to hit them because their behavior that we saw was that they were draining the clip to the very end and hitting those bullets before going into a full reload.
So better UX on this system ensured that everyone found more meaning in with it, regardless of their skill level or overall play style.
Systems exist to help the player.
They teach, they guide, and they reward.
they should lay out the entirety of a game like a roadmap that shows the players their potential and hopefully present it in a way that promotes growth over time.
All right, my pro tip for system design is kind of a no-brainer, but it is worth reinforcing for sure.
This is a llama unicorn riding a rainbow.
I wanted to include this image because it's a frigging llama unicorn riding a rainbow.
Also, if you know Fortnite, then this might have some more meaning packed into it.
You might get the inside joke there.
If you don't know Fortnite, then it's just quirky and probably strangely out of place.
And that is actually my point.
Game systems are like unicorns.
They're very exciting to the rare person who gets to meet and understand them.
but very opaque to the vast player population.
So whether it's controls, monetization, progression, abilities, whatever the system is, remember that systems are about the player, not the data.
They should serve the player directly and clearly.
Systems require user-centered design just like everything else, and this is your specialty.
So try and make it your responsibility.
As we look back on those original pillars that I talked about at the beginning of the talk, I hope I've been able to show you how each can play into the various aspects of game design.
It is worth mentioning that these are not mutually exclusive sets.
Good environmental design doesn't just show empathy, it can also clarify intent, it can also provide meaning.
And these are not the only aspects of UX that crossover into design.
They're just the three explicit ones that I had time to talk about today, which means I am out of time.
But if you do have questions, I will stick around to the end.
I would love to hear your thoughts.
Thank you very much for your time.
