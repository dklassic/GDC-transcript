Okay, I'm going to get started. Thanks for coming down again. This is Keep It Together, where we're going to be talking about how to get players to cooperate with each other when they're playing in co-op games. So, I'm Patrick Redding. I'm currently a game director at the new Ubisoft Toronto studio. We opened a little over a year ago. Prior to that, I spent about five and a half years, six years at the Ubisoft Montreal studio.
where most recently I was the co-op game director on Splinter Cell Conviction.
And then before that I was the narrative designer on Far Cry 2, and then played various game design roles on the last generation of consoles, Far Cry games.
But today, I'm going to talk about player cooperation.
And I mean this in the sort of most obvious, explicit possible way.
I'm not talking about...
cooperation in the sense of when players get together and agree to abide by the same rules.
I'm not talking about stepping into the magic circle or any of that stuff. I mean actually players working together to try to overcome the challenges that are posed by the computer.
So co-op play. Before I get into that, I just want to step back a couple weeks ago to an article that I was reading on Greg Castigan's blog, which is Play This Thing.
And there was an article posted by one of his regular blog contributors.
It goes by JZW.
And JZW was asking, he was sort of thinking about the current situation in the Mideast and some of the recent popular uprisings that have taken place in places like Egypt and Algeria and whatnot.
And he was asking, if someone was to make a game that was about a modern, non-violent revolution, what would that game look like?
And this, you know, this prompted kind of a lively discussion on the comments thread, in which a variety of people brought up different games that they had seen over the years they thought kind of fit the bill.
Games that this is a force more powerful from a few years ago.
And pretty quickly the author had to kind of push back and say, well hang on, a lot of the games that people are talking about are games in which the player is kind of a revolution tycoon.
He's somebody who's sort of taking all of the resources that make up the populace.
and figuring out how to allocate them in support of a revolutionary movement in order to take down the man, as it were.
And his point was that in real life, as we've seen somewhat vividly, somewhat tragically in some cases, real revolutions are started from within.
They're started by people whose necks are every bit as much on the line as the people who they're organizing.
And that furthermore, the nature of this kind of movement is that...
It started by people reaching out to their friends and to their family and to members of their immediate community, the people with whom they share all of the common interests that lead them to have a grievance in the first place.
That it's not about just simply sticking a YouTube video on the Internet and then having 20,000 people show up in a public square the next day.
And there has been kind of a popular misconception, I think, in the last couple of years that somehow...
modern non-violent revolutionary movements come about as a sort of smart mob uh... with slightly higher stakes uh... that the fabric of the twitterverse has somehow just kind of given rise to these movements in some kind of magical emergent way and in fact this doesn't turn out to be true at all it turns out that the same kinds of strong social links that were needed five thousand years ago or five hundred years ago or fifty years ago are just as critical and important now as ever.
That it's not going to be your 958 Facebook friends that are going to help you when you're up against the tanks and the barricades.
And the reason why this is ought to be relatively apparent, but there's some non-trivial consequences to it.
Basically, if you're dangling at the end of the string, if it's an existential stake that you're up against, then those strong social links that you're depending on are a mechanism for negotiation.
You're depending on the fact that you have license to negotiate action in the service of some kind of collective goal.
And what's interesting is that the negotiation actually helps to reinforce those strong social links and then the strong social links in turn help to reinforce and enable the negotiated action.
When we apply this to other types of collective goals.
say the collective goals associated with an alternate reality game or even an online multiplayer game, something like World of Warcraft. What we find is that the same effect is true, obviously slightly smaller stakes, but players become invested primarily in the success of their collaborative partners because of that ongoing process of negotiation, because of those leveraging of strong social links. The negotiation process converts.
their individual selfish motives into the motives that are associated with the collective goal. Now, it's probably too dark, but that's okay. Like a lot of people within about five square blocks of this auditorium, I've occasionally been playing Minecraft in the last year.
Mostly I've been playing Minecraft on a multiplayer server maintained by a small group of friends of mine who are scattered all over the world in different time zones. And what's interesting is...
We hardly ever actually see each other when we go on this multiplayer server.
We show up, we do our mining, we do our crafting, we construct massive monuments to our personal hubris, but we don't actually see each other's avatar very often, and we don't even really chat that often.
So interestingly, a couple weeks ago, probably around the same time I was reading that article on PlayThisThing, I had to sort of take a bit of a hiatus from playing Minecraft.
To be honest, it wasn't a hard hiatus to take.
As much as I enjoyed mining and crafting and building extravagant monuments to my hubris, the truth was that, you know, I had a point where I had other things that I needed to take care of, like creating GDC talks.
But one weekend I decided to fire up the server because I was kind of, I needed a break and I was curious to see what had been happening in the two weeks since I'd been on there.
You see here in this kind of dark image is kind of an elaborate urbanized area with elevated light rail systems and waterworks and lava pipes and various barricades for the mutual defense of the inhabitants against marauding mobs. None of that had been there two weeks before. It had been desert and waterfront and mountains. It was like visiting people in limbo in Inception. All of a sudden there was like these giant cityscapes that had emerged from nowhere. And I was almost instantly overwhelmed by the need.
to devote the next 48 hours to working on my territory.
I felt this powerful sense that I was not only missing out on all of the cool collective things that had been going on in the meantime, but that maybe I was actually not holding up my end of the bargain.
And I think the point here is that players respond very, very powerfully to a sense of collective agency that's at work in the game space.
It's more powerful and more potent.
than maybe any one individual game motivation that they might experience as a single player.
And for scientists who study the psychology of people in games, in games that have multiple players, this is known as shared intentionality.
And it lies at the heart of what we're going to be talking about in terms of cooperation.
So that's fine.
That's Minecraft.
That's eight weirdos playing a game that doesn't actually have victory conditions.
a game that hasn't technically been released yet.
For those of us that are working on kind of these mass-market commercial mainstream games that have a co-op component, how do we achieve the conditions in which shared intentionality becomes an important factor in the enjoyment of the players and therefore causes them to want to work together and to want to cooperate?
Now this isn't trivial because by definition if it's an online game, the players are separated geographically.
If, to a large extent, our statistics are correct, and we think they probably are, probably at least half of them don't even know each other.
They're playing by a matchmaking and various other mechanisms.
Also, let's face it, as game developers, as designers, we really prize and prioritize individual player agency.
Right? We have huge fights about it.
It's probably the one fight that every single designer has had at some point with the rest of their team.
As we argue that...
regardless of what the production realities are, regardless of how polished the scripted events might look in a particular section, that if we're eroding somehow the agency of the individual player, if we're taking away from interactivity, that we're fundamentally degrading the play experience.
And we're actually correct about that.
However, sometimes I think we develop myopia because we don't stop to consider that also multiple players need to be able to have a kind of collective agency and that we need to support that systemically.
So I'll talk about some lessons that I learned with my team while I was working on the co-op part of Splinter Cell Conviction.
Well, the first big lesson is that players will work together if they determine that there's a way for them to use that cooperation to optimize the output of the game's systems.
To talk about that, I'm going to just refer very, very loosely and very broadly to the detection model that we used in Splinter Cell.
This isn't going to be a technical discussion of this, by the way.
So if you're in the AI business, I apologize.
It's not very deep.
So the number one lesson that we obtained from observing our players is that stealth is a difficult enough thing to achieve in a single player game, but when you have more than one player running around in the game space, stealth becomes an extremely fragile condition.
Okay, well what do I mean by stealth?
What am I talking about?
Stealth for us is really a condition that we achieve by allowing the player to either be detected by the AI or not be detected by the AI, and it's all the various actions the player can take one way or the other in that direction.
And to understand how that works, we just need to sort of see that our AI has been kind of built to be tricked, but also been built to incrementally detect the player.
So there's a number of states that permit this.
We have kind of an idle default state, which is everything that the AI does.
between the time that it's instantiated and the time that it's killed or unloaded, whether it's systemic or scripted, it's going about its business.
But if something happens to disturb the AI while it's in that state, then it can move into this kind of perturbed condition where the behaviors are all about searching for whatever the source of the disturbance was.
And if enough disturbances occur, or if the player just simply outright allows themselves to be detected, then the AI will enter a state where its behaviors...
are those that we would associate with combat, with trying to close with the player, or trying to kill the player, or more specifically and accurately, trying to entertain the player while looking like it's trying to kill them.
And an important point here, again, not technical at all, is that these transitions that I just described between states, these are thresholds, basically.
This represents an accumulation of events that cause the AI to move from one state to another.
And if we look at just even a single player that's operating in the game space, what we see is that it's actually kind of difficult to know exactly how any one little action or event contributes to those transitions taking place.
I mean, you can do it.
You can build a giant list or a log.
You can build a big matrix that shows exactly how one particular action by the player under certain conditions will cause this to take place.
It would just be a lot of work.
If we add a second player to the mix, well, we have to do all that as well.
We have to see how the second player can contribute actions that will cause the second player to be detected.
But then, very quickly, what we realize is that, actually, it's even worse than that, because then we have to account for how player one can cause actions that will cause player two to be detected, and then player two can do things that will cause player one to get detected.
So you can see, I mean, it turns into a non-linear and highly messy combinatoric.
expression that I wouldn't want to have to draw the matrix for. Bottom line, just because you have two players in the map doesn't mean you only have twice as much chance of being detected. In fact, it's possibly a whole lot worse than that. But the flip side is that if the players are behaving intentionally and they are observing the AI and learning how the AI operates and learning how the detection model works.
they can actually work together to reduce the chances that they're going to be detected substantially.
And the point is here that players are acting with their knowledge and understanding of the game systems, not because the game has told them that that's what they should be doing, but because as they study the game and as they play the game, whether they're playing cooperatively or not to begin with, they realize that they have a better chance.
of success if they work together under these conditions.
And what's interesting, maybe even paradoxical, is that that power that comes from that knowledge and understanding of the game systems, that kind of procedural literacy, actually is giving the individual players more permission to express themselves as individual players.
And this is something that we actually observed when we were doing our play tests and when we were looking at other games as well.
Is that self-expression...
becomes a much more interesting and deep and rich thing when there's multiple players around.
At the high level, what we saw was that players working together will do so to develop strategies in the pursuit of the game's objectives. That at a mid-level, those players will work together to create planning and to delegate individual low-level tasks in order to support those plans. And that when they carry out those low-level actions as individual players.
they're more likely to take risks and to try things that they wouldn't have tried if they were playing as single-player players.
And that over the course of the entire game, as they are developing this kind of mastery, this kind of literacy in the game systems, their understanding of how the AI works, how the 3D navigation system works, all of these things, that they are willing, more willing than they are in single-player to explore optional paths and try alternate play styles, because they know that they have a reasonable chance of regrouping with their team and trying another approach if it doesn't work out.
And what we find is that if both of these conditions are present, if the players have an understanding that they can use their cooperation to optimize the output of the game systems and that the game is letting them express themselves as individual players more because of cooperation, then they actually enjoy the game more. In fact, their enjoyment from that from this, from what I'll call meaningful cooperation, is so good and so high that they're willing to forgive an awful lot of flaws and an awful lot of lack of polish in the game that would maybe bother them if they were to scrutinize it while playing as solo players.
Okay so I use this term meaningful cooperation. I want to examine meaningful because it's a little bit loaded. But basically what I mean by this is that it's important in terms of their actual success in the game.
It's not just something we're telling them, you ought to do this, because it says co-op on the box.
But also, even though we're not telling them to jump through hoops, it does matter in the context of the game systems.
The game systems recognize that they're doing something, in this case cooperating, and it rewards them for it.
Okay, so now we have this idea that we would like to try to create circumstances for conditions for meaningful cooperation.
Now we need design tools as designers.
that are going to allow us to support that. We need specific strategies. Now, today I want to talk about the strategies that are hopefully usable by the largest number of people. So I want to talk about strategies that don't depend on any one particular aesthetic wrapper or particular genre. I want to talk about strategies that are hopefully scalable and are replicable across the whole game that are not dependent on a particular special case implementation, that are practical in the context of most productions.
So I'm going to talk today about what I'll call cooperative dynamics, which essentially just means I'm talking about enabling cooperation through the game's dynamics. Okay. Another loaded term, dynamics. Actually, it's good that I'm talking on a Thursday because those of you who've been here for the week will likely have now had several opportunities to run into this usage of the term, notably Clint's talk from yesterday and if you've attended the game design workshop, you've heard those guys talk about it.
Basically, it's dynamics in the sense that we need it in the MDA model.
And in Mark and Robin and Bob's paper in 2004, they describe it as the runtime behavior of the mechanics acting on the player's inputs and each other's outputs over time, which is a way of saying it's what the game does when you're actually playing it.
Dynamics are what is delivering the final player experience.
In this case, it's cooperation.
meaningful hopefully, but cooperation meaningful or otherwise.
And what I'm going to talk about today are seven of the dynamics that we were looking at on Splinter Cell.
This list I'm not going to pretend is complete, but what I am going to try to do is demonstrate or claim that all seven of these dynamics, which I'm going to go through, sit on a continuum of what I would call coerciveness.
They run the gamut from the top to the bottom of...
dynamics that are highly prescriptive, in the sense that the player can avoid them, down to those that are entirely voluntary. The player retains control over whether to participate in them or not. And interesting gameplay emerges out of that.
Okay. So let's look at the first of these. What I'll call gating or tethering. This is probably the one with which the majority of players and the majority of people here are familiar. It's kind of the most brute force. It essentially is just saying that no player is allowed to proceed in the game unless all players are allowed to proceed in the game.
And this should be familiar to anybody who's ever run into an invisible wall because there was a teammate that was straggling behind them, or has been abruptly teleported forward because a teammate hit a checkpoint in advance of them.
It should be pretty evident that this is a highly prescriptive approach towards keeping players together.
It's either straggler-centric or it's sprinter-centric in the sense of relying on these outliers to determine whether it works or not.
And most importantly, maybe, is that there are lots of ways to tart this up and make it look like something more and deeper than it actually is.
But even if it is glossed over with a lot of production value, it is just going to be an invisible wall or an invisible tether mechanically.
Now, that doesn't mean there aren't good implementations of it. In Uncharted 2, if you're playing Gold Rush mode in their co-op, you'll encounter situations where the two teammates need to work together, for example, to move a burning obstacle out of the way so that they're able to advance forward. It's a good implementation. It fits the fiction of the game, the kind of action-adventure sort of fiction that's been used there, and it's consistent with the level of production value that you find elsewhere in the game.
On Splinter Cell, we used, I have to admit, a lot of different gating strategies. Some of which were, I'd say, heavily realized, and some of which were just straight up gamey invisible collisions. We had things like exotic doors that needed both players to pry open.
But we also had our holding points between different sections of the map where one player would just simply be forced into an idle position until the second showed.
Okay, the next I'm going to talk about is what I call exotic challenges.
And the term exotic in this case means specifically that the normal camera and controls that the player is using during core gameplay have been altered and substituted with something else.
A unique perspective and a unique set of controls that are for different types of gameplay.
And what's interesting about this is that it creates the condition in which the player who is required to use these different controls.
is still susceptible to all the same kinds of threats and all the same kinds of defeats that he'd be confronted by when he has his core gameplay controls.
So, it's moderately coercive in the sense that it's not a binary threat.
It's not something that is immediately going to snap and then it's kicked into effect and now you're unable to proceed.
What it means is that the risks associated with the player playing by themselves grow sharply over time.
and that furthermore, you need more than one player to avert trouble in order to survive because there are other players who've retained the core gameplay controls and are therefore able to support you. So, classic example of this is the sort of wizard performing astral projection while the muscly fighter guy, you know, hangs out and keeps track of his lifeless body. The modern warfare equivalent to that is I equip my laptop in order to control the predator drone.
while my friends continue to use their tactical movement and shooter mechanics in order to protect me.
What's interesting is actually in the case of Modern Warfare 2 and the spec ops levels that they have is the flip side's also true, right?
I could be in an AC-130 gunship and I'm actually the one helping to avert trouble for my friend on the ground who's using the core gameplay mechanics.
He's outnumbered, he's fleeing a larger force and I'm firing shells in order to help protect him and cover him and play, run interference.
On Conviction, we had a few different exotic gameplay moments.
Probably the best realized was the wireless hacking sequences where one teammate would need to go up to a particular computer, interact with it, and then had to remain within a certain radius of that object in order to be able to maintain the signal strength to download the secret data, which meant that they were constrained.
They still had access to a lot of their core gameplay, but they couldn't move away from that point or it would interrupt the download.
who retained free movement would have to run interference, move around, try to protect the two of them against the inevitable horde of security forces that were responding to the hack. So the next two systems I'm going to talk about are kind of two sides of the same coin. In the case of punitive systems, what we're saying is that really, one player is trapped. One player is trapped and another player needs to come to their rescue or it's game over for them.
I think the obvious thing about this is just that it requires rescue by another player in order for the first player to survive.
The less obvious thing is that it actually represents punishment and negative feedback to everyone involved, not just the player who's been trapped.
The player who's been trapped is being punished because he was careless and wasn't paying attention and wandered away from the group, all the usual things you would expect.
The other players are being punished because they let the player wander away, but also they're punished if they don't respond in time and don't take the necessary action to.
to recover the situation. But the less obvious thing is that it's not a particularly coercive mechanic because it can be avoided. If you're smart and if you've mastered the game, you're able to recognize that the dangers are there and you're able to get away from them. Probably the best implementation of this that we've seen in recent years would be in the Left for Dead series with the smoker. I think the smoker is perfectly balanced in the sense that the signs and feedback associated with it, the distinct sound that accompanies it.
the smoker appearing on the scene sort of sets the entire party on edge. They quickly look at each other to make sure they know where each other are. They quickly scan the rooftops to make sure that they can see where the smoker is. And maybe kind of disgustingly, the smoker's tongue is like the perfect progress bar, right? It's like the ultimate organic timer as it drags you to your doom. Everybody can see exactly how much time they have left in order to try to save you. We had a couple of punitive systems in.
Splinter Cell Conviction co-op. We had the usual one that you associate with these kinds of games where one teammate has been wounded, is going to bleed to death unless the other teammate comes and rescues them. But we had an additional one which is at higher levels we started to encounter enemies that were capable of grabbing an unwary player and holding them in a choke hold at which point they would start to asphyxiate. And then the second player would need to run to their aid and the first player could throw the elbow and duck down and create the window of opportunity.
What's interesting is that these two systems actually ended up working together in a really surprising and delightful way, which I'm going to talk about a little bit later.
The flip side to those would be buffing systems. Buffing systems are pretty familiar. It's just the idea that one player is mechanically making another player more powerful. And as they are doing that, it's creating this kind of back and forth movement between the team being sort of unbalanced in a way.
the buffer is probably rendered vulnerable by this and the buffy becomes very overpowered.
One thing that's interesting is that it can be implemented in a way that's either passive or intentional. Passive in the sense that as long as you stay close to me, you'll be tougher or less visible. Or it can be intentional in that I actually have to target my teammate.
The benefits are almost always conditional and usually temporary in order to avoid a permanent unbalance. And it's entirely voluntary. Players can opt in or not opt in to this.
An interesting approach to this on a game that's nominally pretty realistic would be in the Army of Two series, the aggro system, which literally allows one player to buff the stealthiness and the invisibility of his teammate just by standing up and making a bigger target of themselves. And this is a system that's actually grafted above and beyond the normal behavior of the AI, accompanied by a bunch of signs and feedback in the HUD and in the game. Now, we had a buffing system in Splinter Cell Conviction Co-op.
And people definitely used it.
However, if we're being honest with ourselves, we probably have to admit that a lot of them didn't realize that they were using it.
We had the mark and execute system, which was developed for single player, which enabled the player to pre-mark targets and then, under certain conditions, take them all out in one attack to sort of enforce that idea that you're the elite spy who's a crack shot and you're able to do this.
In co-op, what we allowed players to do was jump in on each other's executes if they shared.
line of sight on any targets, but also if any other marks were available nearby, so that we could essentially extend and boost the range of the area of effect of the mark and execute. And it was a great system, and people definitely were using it, but when quizzed about it afterwards, a lot of them weren't even aware that they were using it.
So, fail. Asymmetric abilities are, I think, a pretty straightforward notion to people who played, for example, rock band style games, games that are supporting.
different sets of abilities for the characters, and we're talking specifically about the characters in this case. The idea being that the group is constantly moving back and forth between conditions of being sort of overwhelmed by the challenges of the game or overpowered just as they sort of reconfigure themselves to tackle those challenges in the right way.
It could be an entirely built out orthogonal class system like you might see in an RPG game.
Or it could be the consequence of a customization system, players spending experience points in order to specialize, in order to give themselves unique abilities.
But the one common assumption here is that no one player is going to be able to max out everything, right?
They can't just turn themselves into a super generalist.
But what's interesting is that players are still free to progress with their own limited subset of those character abilities.
They can try it, and in some cases they can succeed at it.
It's just that all of those complementary advantages and disadvantages tend to lend themselves in a fairly obvious way to the players to working together for mutual support.
Borderlands is a game recently that I think has done a very good job of this because at the start of the game, while we have different stats, the different characters have different stats, nevertheless they do share a kind of core set of mechanics that they can kind of learn to use at the same time.
And after about an hour of leveling up.
they are able to unlock their unique abilities and then become very powerfully motivated to explore those unique abilities even while they've retained their understanding of the core systems.
The fact of the matter is that on Splinter Cell Conviction, we didn't explore this particular dynamic very much.
The both of the players, in spite of the fact that one of them is supposed to be an American Splinter Cell, the other one is supposed to be a Russian Voron agent, have identical abilities, identical movesets, they use the same animation, the same fighting ability, they just look different and sound different when they talk.
So the onus was entirely on the player to use the PEC challenge points in order to customize their weapons loadouts to give themselves either armor or more weapon ammo capacity or gadget capacity. And the sad reality is that most players didn't explore that system very much at all.
So next is combined actions. Now, combined actions on first blush is going to sound a little bit like asymmetric abilities. It's the notion that there are different...
player skills that are implicated in the gameplay and that players need to understand that no one player is going to be able to tackle those challenges by themselves, or at least it's going to be very, very difficult for them to do it.
And the key here is just that players are able to recognize the nature of the challenge, break it down into its individual component challenges, and then divvy up.
or delegate those roles between them, at which point it becomes almost a formality. Now, this hinges on an idea. It's pretty simple, but it does merit some explanation. So the notion that any game challenge that we describe can be defined by the specific player skills, not the character abilities, but the player skills that are required in order to overcome it. Now, here's a list of player skills, precision, timing, measurement in the sort of analog input sense.
resource management, tactical choices, strategic choices, puzzle play.
This might be a complete list, but I'm not going to stand up here and debate whether it should be like eight more things or five fewer things or whatever.
I mean, the point is that if we accept the notion that there are skills and that the skills are implicated by discrete gameplay challenges, then it's possible for us as designers to ensure that the tempo of those challenges is just always beyond the comfort zone of any one player.
At which point, it's up to the players.
to identify what those compound challenges are, agree amongst themselves as to who's going to take on what, and then at that point, it becomes a rather enjoyable process of overcoming it.
Red Dead Redemption and the Outlast to the End co-op does a very good job of this, actually.
The specific example I'll use of I'm driving the horse-drawn stagecoach, so I'm having to engage in precision and timing in terms of controlling the horses, a certain amount of analog measurement in terms of my speed.
at the same time that my buddy who's riding shotgun is having to use precision to line up targets with the crosshairs, is having to make tactical choices about which of the bandits to shoot in which order. This is almost a classic example of how combined actions would work in order to help promote cooperation. In Splinter Cell, I mean, we call ourselves a stealth action game, and in co-op it was a mandate on the level design side to try to support multiple styles of play.
players being able to use action, being able to use stealth, being able to use gadgets in order to make their way through it. The reality is that an awful lot of the skills associated with those different styles of play are the same skills. They differ maybe by one or two skills in a couple different areas. But we didn't really fully explore or take advantage of this approach. But it's definitely something that we could.
The last dynamic I'm going to talk about is one that I think is probably familiar to people who have played a lot of the bullet hell style shooter games.
its notion of survival and attrition. And as a dynamic, it really is a kind of oscillation in terms of player motive. So it's almost at the level of metagame. It's the notion that play can continue for as long as there is at least one player alive, which is essentially saying you can be a hero, but you can also be dead.
many players are possible, or many survivors are possible. In fact, all the players could survive until the very, very end. But if you die, you're out for the round. You're going to be waiting for however long the round lasts until your friends are done and you get to listen to them laughing and screaming and yelling and enjoying themselves. What's interesting about this dynamic is that it makes survival itself a kind of victory. It just makes it kind of a slightly lower tier victory.
At the end of the day, there can really only be one most valuable player.
And that pressure to say, well, I've survived the last few levels, I'd really like to be the hero, I'd like to be the MVP, means that players will, over time, tend to stick their neck out.
They'll weigh the risks and the rewards and they'll give it a shot.
And some of them will do it, and they'll be the hero, and some of them will die, and then the next round they'll probably play a bit more conservatively.
This particular dynamic lens itself.
really, really well to sort of the squad military style game, because that whole aesthetic, the whole conceit of we're a military unit, we have certain mission objectives we need to achieve, but at the same time, you know, we have to keep the squad alive, we leave no man behind, this kind of concept works very well with this dynamic. And the recent Ghost Recon games, Grawl 1 and Grawl 2, did a very good job of leveraging this approach.
Now, I can say with absolute certainty, we did not use this dynamic in Splinter Cell Conviction co-op at all. Because in Splinter Cell Conviction, when one player dies, it's game over for both sides. Now in our case, I think it was the right choice, because it fit the fantasy of the two covert agents placed in harm's way, unable to be able to complete the mission unless both players are able to do it. So it fit, and it wouldn't necessarily have made sense for us. Although, something we would explore.
Okay, so those are the seven dynamics. And I'm going to just go through some of the lessons that we learned on conviction as a result of seeing how these things worked in practice.
The first thing that we found is that more players in co-op were tending to use the mark and execute system intentionally than they were in single player. Why? Because we let them share marks. We let the players mark individual targets on their own.
and then we let either of the players execute on those marks.
Now initially, players would mark targets because it was a great way to communicate with each other. It was a great way to say, oh, hey, there's a guy over there. He just walked around that, oh, there, okay, there he is. And then that created an opportunity as players were earning execute tokens for each other by taking enemies out hand to hand for the players to use, mark, and execute in exactly the way we designed it.
Next, and this gets back to what I started to mention before.
we got real drama, like real, the sort of true archetypal water cooler moment out of the interaction between our punitive systems.
Because it was possible for a player to be wounded and to be immobilized on the ground bleeding to death, to have their teammate come rushing to their rescue, and to be within steps of reaching them and then get grabbed by another enemy in a chokehold.
At which point, the player on the ground...
was able to draw a sidearm.
They could scream at each other over their mics, duck, duck now, duck.
And the guy would duck and say, take the shot, take the shot, exactly like we've seen in every movie 100 times over.
Pop them in a headshot with both of their health bars shrinking as the whole thing's going on.
And then the freed teammate would race to his friend's aid and rescue him at the last second.
We knew it was possible when we were designing the system, but we thought, eh, it's probably kind of an edge case.
We'll be lucky if we see it once in a while.
Happened in our first playtest.
It was honestly probably the most ecstatic moment I've ever had as a game designer.
And here we had these players who up until that point had been playing a pretty, to be blunt, shitty, mediocre build of a game.
Struggling with all the different problems that we were having with the controls at that moment.
Didn't know each other, because they were just guys we pulled into the playtest.
Suddenly they're like high-fiving each other, and, you know, they're best friends.
It's good stuff.
The fact is, while they were useful and they helped us to, in a very pre-planned way, author moments that fit the spy fantasy, the fact is, exotic gameplay moments and exotic challenges did have the effect of exposing limits on the interactivity of the player.
Because up till that point, the players using core gameplay mechanics.
is in the groove, is developing a kind of familiarity, that kind of literacy that we talked about, the ability to optimize the outputs of the game, the ability to cooperate with each other and communicate with each other, and then all of a sudden we're imposing a very specific constraint on their action. It's still a tool, it's still a useful tool, but we need to be aware of the fact that it's a big sort of screech in the flow of social interaction in the course of the co-op game.
Something that we realized, and this wasn't really a big surprise, because it's also true in single-player games to a large extent, is that high-level plot is never going to be as important as the kind of low-level interactions that we support between characters, and in our case, between players.
In our case, we were able to exploit that.
We built a lot of the dialogue between our two-player characters around systemic output.
So in other words, when certain kinds of gameplay...
outputs would occur. The two characters would acknowledge it, they would share a bit of dialogue, and we allowed the nature of that dialogue to evolve over the course of the whole game. So that these two characters who, in the plot, aren't supposed to like each other at the beginning of the game, are kind of slowly beginning to respect each other.
And this is reflected in their systemic barks in their gameplay dialogue. Players appreciated this. In fact, it's the only thing they talked about when it came to story.
when we read the forums. They'd long since forgotten what the plot was, something about EMPs and Russia and mobsters and things. But they talked a lot about Archer and Kestrel and the fact that these guys didn't really like each other, but they seemed like they were buddies and then, well, I'm not going to spoil the ending.
So just to kind of go over some generalized best practices in order to wrap up, I think the first thing is, if you don't have to...
Try not to pour production values into highly prescriptive systems.
Alright? You're not fooling your players.
If you stick an invisible collision or a glowing wall or whatever it is, your players will understand what it is.
They'll realize what you've done and they'll understand that you had a reason for doing it.
They might not like it, but they'll move on.
If you attempt to make it look as though everything is normal and okay, then they are going to bump into that collision in a more painful way because they will be trying to use their collective agency. They'll be talking to each other. Wait, no, maybe we need to go around to the left. Okay, you try going to the right. Okay, see if you hit that. Okay. No, actually, no, you're just not allowed to do that. So better to go the gamey route and embrace it and have them deal with it than to try to convince them something else is happening. Whether or not you agree with any of the dynamics that I've described, just please, my appeal to you is give the players tools for mutual support. You can find your own language for it. You can find your own way of doing it. But that's really the key here. This is what matters. Recognize that when you have more than one player in the environment, that generates noise. It generates all kinds of noise. It generates the actual noise of multiple players' characters moving around in the game space. So the sensory noise. It generates a system's noise.
of multiple players perturbing the system, the AI, and all these other things in lots of different ways that make the environment more chaotic. And you have the social noise of these two people who might be sitting on a couch or might be talking over their microphones distracting each other. So when you're designing the ingredients at the level of kind of aesthetic level of level design, focus on readability, on the legibility of those ingredients first, then make it pretty. To give you a good example of this.
on conviction in the single-player maps, which were beautiful. Lighting was initially done as a kind of an art pass. Basically, the lighting fit the logic, the architecture, the intentions, the mood of those maps, and it was beautiful. And once it was beautiful, then after multiple iterations, looking at heat map results, all this other stuff, the team was able to go in and tweak and adjust the lighting to work well with the AI's detection model. In the case of co-op...
we had to do it 180 degrees in the opposite direction.
We built, our lighting was giant circles of light, like you'd see in a Bugs Bunny cartoon.
And we would sort of string these circles of light to create our shadow paths.
And once we knew that we had enough of a shadow path to accommodate more than one player, then we'd do a pass to try to substitute those light sources with something maybe it felt a little more logical.
And then we would go through and do these iterative passes to make it more discreet and more subtle, and have it look a little bit nicer.
And the message there is, players will forgive that.
Even if they were to do a side-by-side comparison and go, woo, geez, man, co-op lighting looks a little old school.
It's OK.
They're more interested in having the ability to do what they want to do than they are in whether the lighting pass was done exactly the same way between single player and co-op.
Finally, and this is sort of the high level takeaway, I guess, is you need to trust that your players will find a way.
they will, if you let them work together and if you give them a good reason to, they will find interesting solutions to the gameplay challenges that you present them with that maybe you wouldn't have anticipated.
So, after everything else I've said, at the same time, don't freak out, don't feel like you need to control the player experience for these two people or three people or four people.
Their numbers will give them the added collective intelligence to tackle these problems.
Now there's some things that I think would merit further investigation.
They're outside of the scope of this talk.
They were almost within the scope of this talk until I realized that it would be a two-hour-long talk.
I think we've talked about dynamic solutions that are meant to be relatively accessible to lots of different types of games, but it would be an interesting discussion to see how specific aesthetic directions, specific level design solutions could also help make a particular game type.
more conducive to mutual cooperation and meaningful cooperation.
There's an entire discussion about how we can use presentation design. In other words, the HUD system, cues and prompts and visual signs and feedback inside the game environment in order to give players a stronger sense as to situations where they can cooperate or where cooperation might be a good idea.
And then I think there's an entire talk or two on the subject of tools for communication and coordination, which is really communication coordination being something entirely distinct from just straight collaborative working together to solve problems, but it feeds into this and there's so many dependencies here that there would be an entire discussion on it.
So these are all topics that I encourage any of you who are involved in the development of co-op games to think about.
and maybe offer suggestions on, but it's a GDC talk for at least a few people in this room if you want to give it a shot. And that's where I'll end it. So I'll start taking questions.
We have two mics. There you go.
in the neighborhoods and taking care of the lawns nice.
But at some point, they get competitive about this.
Like, mobile is a big part of the solution.
Is there a role for cooperating or competitiveness with the agent cooperation in terms of ways of thinking about these other platforms.
Will you ever have a meeting?
Um, yes, absolutely.
The, the...
It's funny you say that. So, coopetition, which is the horrible portmanteau that we use for this, is absolutely, has a role in probably the majority of cooperative games.
Because at some point, when you reach that level of mastery, where there's so much shorthand and these strong social links are allowing players to use shared intentionality, and na-na-na-na-na-na-na, you start to want more.
And what's fascinating about that is, we can either, again, throw that entirely to the player's discretion and just try to seed the world and seed the game system space with lots of opportunities for one player to kind of elbow aside his fellow citizens in his own pursuit of his own glory. Or we could do it in a really deliberate and intentional way. My suspicion is the more deliberately and intentionally we try to support co-opetition, the more we'll screw it up. But the long and short of it is I absolutely think there's a role for that. I mean, I think there was clearly evidence of it in Splinter Cell.
and I think probably we would love it if we could support that even better than we did.
And how do you avoid the player from becoming a co-op?
kind of punish that is going to fail badly. It's just simply going to degrade the experience for everybody. So there's a certain amount of this that just needs to be self-policed.
It needs to be people trying to act somewhat like civilized human beings, although that's always a tall order online. But the other aspect to it is just that we need to bear in mind that co-op is often the easiest way for a new player to get into a game. So when we're designing our co-op modes, whoops, co-op modes, we need to be thinking about that.
It's, there is often a temptation to think that, oh, well, because it's multiplayer, it must be more hardcore, right?
But maybe we don't need to think of it that way.
Maybe what we ought to be trying to do is imagine that it's the perfect opportunity for an experienced player to kind of help bring up the speed, a less experienced player help them level up a bit faster, kind of twink them along a little bit, so that then they're able to get into playing single player and really get to know the system.
I don't know how to change human nature, but I do know that maybe we as developers need to be careful that we're not deliberately making our co-op modes the more hardcore mode.
That would be my solution.
Yeah.
Right.
It's a super good question.
I mean, we had local co-op on Conviction.
We had split screen, for example.
And we felt like it was super important to support it.
I think the main issue, there's a number of usability issues that come about when you're sharing the same kind of screen real estate, which is, again, outside of the scope of this.
But I think, again, that almost is the perfect example of where you have two players who are co-located.
They're geographically sitting on the couch with each other.
or at least in two different rooms if they're playing over SysLink or something like that.
But presumably they know each other, right?
They're talking to each other in like meatspace.
They're not on their microphones. They're like throwing beer cans at each other and all this kind of stuff.
So in a sense, that's a classic set of conditions in which the player in a sense is able to supply most of what's needed in order to facilitate the communication.
The shared intentionality has spilled out of the game and into the real world, into the living room or wherever.
So that they're able to kind of do that negotiated action In a way that's very human and you know ancient so to a certain extent That's an example where we almost don't want to intervene because they're gonna figure it out on their own I know it probably sounds like that's my answer to everything is just don't intervene, but But in this case, it's true.
It's like it's much harder for us to negotiate these things with online play, because we just don't know what the conditions are.
I mean, you might have a guy in Lithuania playing with a guy in Buenos Aires.
They literally have no common framework in which to speak to each other.
And one guy's been up since 3 a.m.
and the other guy's just woken up.
So it's, I mean, those are the hard problems for us to solve in terms of social interaction.
Thanks.
Right.
So I think, I mean, for me, when I'm using the term exotic challenges and exotic moments, I'm really talking about situations in which we have fundamentally altered.
the sort of interaction space of one or more of the players.
Like, we've changed their camera, we've changed their controls, we've changed the way they move, we maybe even have altered their perspective completely.
So, the situation you're describing, where maybe one pl- the players have been forcibly separated, you know, one guy's fallen into the pit and is now fighting the Sarlacc, while, you know, so-and-so is trying to, whatever, call in an airstrike, um, I mean, those, those...
what you're describing are situations where players still have access to their core game mechanics.
and to the normal level of agency that they do in the game world.
They're just, they've just been confronted by a level design constraint that causes them to be separated.
Now in those situations, I think that, you know, that creates some interesting variety.
I wouldn't want to abuse that.
I wouldn't want to force players to go through that more than, for more than maybe 5 or 10 minutes before they get back together.
But I think that sort of situation works out rather well.
I'm talking about situations where...
you're the first guy to hit the trigger, and so now all of a sudden, you're the one that's flying the biplane around and you can't do any of the things you normally would do and you're vulnerable and you're, you know.
Those are the situations that I think we need to use sparingly, or at the very least, understand that players will recognize that it's imposing some kind of limit on them.
Thanks.
Yeah.
Awesome.
Right.
Yeah.
Yeah, yeah.
Yeah, no, really, really good point and I don't know if you noticed like for combined action.
Yeah, I had my screenshot from StarCraft 2, that was like my token RTS moment, I didn't even talk about.
But, but you're, no, you're correct. In fact, I mean, I find it actually weirdly, like, sports games and RTS are like, it's like these two sort of subgenres of game that we in everywhere, in everywhere else land often fail to look to in order to find lessons.
But you're right, we absolutely looked at that. And actually, I'd say that, that over the course of the last few games I have worked on, and dot dot dot...
We have spent more time paying attention to real-time strategy for the lessons that we can we can extract from it And and yeah, it's it's true like I think You know I think for like combined action in Stargate or Starcraft 2 is a perfect example of this right It's the that kind of ability to share resources as you know in a kind of intentional way that that I'd say Is perfectly exemplified by that Thank you Yeah. Yes. Yes, absolutely.
Yeah. Oh, I see. I mean, I mean, okay, now you're getting into stuff that's under the hood that the players maybe either don't perceive or aren't sure about.
It's interesting, we've had people ask us, oh hey, so if one guy's fallen, does that mean you're more likely to get grabbed in a chokehold?
The answer is no.
I mean, the only way in which it's more likely is that the second player is running to get to his friend, so he's automatically being not as careful, not as conservative in his movement, and he's heading straight for the place where there was enemy activity.
it really is an emergent outcome of those two systems.
And we didn't have to do anything to monkey wrench it, and I probably would be very, very cautious, well, as no big surprise there, I don't think we should intervene.
I wouldn't probably try to force the issue.
What I think is interesting, though, it's a more interesting challenge is, can we come up with like a third system that fits in perfectly in a kind of rock, paper, scissors way with those two?
That's a tougher problem.
But you're right, it does seem like it gives us a more organic moment that players really feel ownership of.
And I think I'm getting the eyeball from everybody.
Okay, yeah, last question.
Going back to the Capture 12 versus SolarWinds...
Yeah?
...are there systems that you provide that only do one or the other, or that are not really...
...succession-ready?
I mean...
anything which depends on incomplete information for one player or the other is probably not going to be very effective in split-screen or couch co-op. But I mean, I would have to look at the whole list and probably do a, kind of build a matrix for it, but yeah, yes, yes, for sure. Cool. I think that's it. Thank you very much, everybody.
