Cool.
Maybe we should get started.
First thing, I'm supposed to remind you to please turn off your cell phones.
And I guess, otherwise, people still filing in?
OK.
I guess we should begin.
Hello, everyone.
Thank you for coming to this session instead of going right to lunch.
My name is Jane Ng, and I am an artist at Campo Santo.
First, a little bit of background about myself.
I've been doing environment art for games professionally for over 12 years.
Before I joined Campo Santo, I was at Double Fine Productions for six years.
Most recently, I was the lead artist on The Cave.
Before Double Fine, I was part of much larger teams at EA.
I was a senior artist on Spore, and in the PS2 era, I was a lead world artist on Godfather.
I am now working on Firewatch, due out later this year, and this is a behind-the-scenes look at how we are translating a very graphic 2D art style into a 3D world that you can explore in first person.
Let's jump right in.
This is a poster we made for the announcement of the game almost exactly a year ago, actually right before GDC last year.
This poster art was also actually kind of the key art for our game.
At that point, our company was only three months old.
Not everybody had started.
We hadn't found a graphics programmer yet.
We knew the story we wanted to tell, but visually speaking, this was really all we had.
This was the goalpost we set for ourselves.
Well, this aesthetic didn't just jump out of nowhere.
The look of the game had been brewing for a few months.
Let me show you.
This was the first concept sketch by Olly Moss, when Sean and Jake, the co-founders of Campo Santo, first started talking with him about maybe working together.
And this is about maybe mid-2013.
And here are some more early sketches.
The basic premise of the story was already known then.
Like you, we know that this happens in the national forest, that you play as a fire lookout.
Who spent a lot of time talking to another lookout in another tower?
Now let me show you how the game looks right now.
Thank you.
For the next 23 minutes or so, I will explain how we were able to create this game world with a very small art team in the last 12 months.
And if you like what you see, we have a public demo this Friday, actually.
I will share more details at the end, and you can come see it for yourselves.
Okay, let's back up a little bit.
What is Firewatch?
Firewatch is a mystery set in the Wyoming wilderness, where your only emotional lifeline is the person on the other end of a handheld radio.
It is a narrative exploration game made in a Unity engine.
We were using Unity 4.5 all last year, and we have just transitioned into Unity 5.
You play as Henry in first person, and you have full body awareness in the game.
You can look down and see your body, see that maybe you should hike outside a little more often, see your boots going through the grass, your hands interacting in the world, and you spend a lot of time talking to Lila over your handheld radio, and she's your supervisor.
Henry's story takes place in a very specific time in a very specific place.
We are trying to evoke, not necessarily recreate, a piece of wilderness in the Shoshone National Forest in Wyoming.
in the summer of 1989.
The world of Firewatch is visually very stylized, but for Henry's story to be believable and immersive, the world has to feel real.
We really want the player to feel physically connected to Henry in first person.
It is important that as Henry, The player feels like he could live in this cabin as a lookout, that this forest around him is a place he could have real human thoughts, real worries, and thus a real relationship over the radio with Delilah.
The art really needs to support this sense of realness, despite whatever stylization.
So who is making this? Who is Campbell Santo?
We are a small development team of 10, with seven of us based right here in San Francisco, one in Vancouver, Canada, and two in the UK.
And we all wear many hats, so we don't really have titles.
But this is about the half of us most daily preoccupied with the visual aspects of the game.
Now let's go back to talking a bit more about the key art.
It is designed by Olly Moss, and as some of you might know, he is quite an established graphic designer before he became involved with game development.
Olly is most well-known for his poster designs.
A lot of them are about movies, and some are about games.
His designs are great at clearly communicating an idea while hitting the right emotional tone of the subject.
And I really, really like that Last of Us one.
Now let's look a bit into what is so striking about this image.
If this is to be our art direction for a 3D game, we really need to clearly understand what makes this image so special for us.
Why it makes people feel the way they feel when they see it, before we can even attempt to translate this into the game.
Analyzing this could be its own lecture, so for today I will just pick three key points to talk about.
I will first list them, and then I will go into detail for each one.
Okay, number one, the colors.
There are beautiful and bold colors here, and they're in very distinct layers.
Each layer adds to a feeling of great depth and distance, pretty perfect for a wilderness game.
And the color palette itself really sets the right tone for a mystery in the woods.
Number two, the shapes.
Much of the composition is made with flat shapes with strong distinctive silhouettes with abstracted internal details.
Number three, narrative details.
You might not notice on first glance, but if you look closer, the story is actually hinted at in the little details.
Okay, now let's talk a bit about how we're bringing the layers of colors in the game in some detail.
Now, if we were making a 2D game, this would actually be quite easily achieved.
You know, use an eyedropper, separate these into parallaxing layers, and you know, bam.
But in a 3D world, one in which you can walk around at will, not to mention Firewatch is not a level-based game.
And as much as we love this color orange, it will look lovely during the sunset, but it really shouldn't look like that in the night or in the morning.
So copying the colors directly from the concept art and painting it directly onto the assets is quite out of the question.
We require instead a dynamic solution.
Since Firewatch takes place in the outdoors, the biggest chunk of color is actually determined by the sky.
Sometimes it's even more than half of your screen.
We tried a few different ways to make our skyboxes.
Initially, we used a program called VIEW to generate panoramas.
But we have since developed our own tool to generate procedural skies that really cut down on the compression artifacts.
And it is also a dynamic tool.
And this shows you a bit of what our sky tool looks like.
Now, for our style, we really want to be able to control our sky colors like how you would imagine making such a thing inside Photoshop, rather than how you would define a physically correct, physically based sky shader.
Due to the time limit, I can't go into too much detail about exactly what's going on here.
But Paolo, our graphics programmer, has written a pretty in-depth explanation on our development blog.
So if you want to read more about it, I will share the link, and it will be explained there.
The sky is really important because we also derive a lot of game lighting from the sky.
And lighting is a huge factor in determining color on screen.
Since the bulk of our development was using Unity 4.5, we used the excellent Unity extension Marmoset SkySharp as our dynamic image-based lighting solution.
And SkySharp is so easy to use.
Once you have a visual skybox, and in our case we used the procedural tool that I just showed in the previous slide, you just need to add a shadow passing directional light, which is your sun, and with a few button presses, and you will have yourself a very naturalistic and very dynamic lighting in a world that matches your sky.
And this approach pairs ideally with big outdoor spaces.
And luckily, Firewatch falls into that category.
The upside of having a dynamic solution for lighting is that if you build an interpolation manager on top of it, you can change your colors on the fly as the player moves around.
And one of the ways we trigger a color change is using trigger volumes.
So in this video, I accidentally placed one right around here.
So it's a mistake.
It doesn't happen like that in the game.
But it looks really cool, and it illustrates my points, so I recorded it.
Yeah, it's not like that in the game.
So actually, in the video, besides the sky and sun changing colors, something else was also changing.
It's the atmospheric fog.
Now, but before I talk about the fog, it is hot tip time.
I'm going to share some of these lessons learned all through the talk.
And these are mostly aimed for smaller developers.
OK, so hot tip number one.
Spend the money to buy a tool if it will save you a lot of development time.
It is very tempting to write your own tools because you know what you want, you know how you want it, but it takes a lot of time to make good usable tools.
And here's a list of Unity extensions that we bought and used and are very thankful for.
Something that is $120 per seat is considered very expensive in a Unity asset store.
But if it saves you a day or two per seat, it is worth it.
That is equivalent to paying someone $15 an hour for just one day at work.
you could be spending that day making your game better and more unique instead.
Okay, so we have sky color, but how do we create those layers leading up to the sky?
The answer is, as I said before, atmospheric fog.
Traditionally in 3D games, most artists would use fog to enhance the perception of distance.
The objects are gradually more fogged out as they become more distant.
And the Unity scene fog or the global fog image effect readily achieves this.
The problem is, with just a scene fog, is that you only get one color.
And it also just uniformly becomes stronger as, you know, as more distant.
So in order to get final control over the fog, our first instinct was to use a color strip texture to modulate the color and intensity of fog based on distance.
We developed what we are calling stylistic fog.
It's a very innovative name, which takes a strip of RGBA texture as input, and it is applied as an additive blend post-process image effect to the scene.
Here's the scene in Firewatch without fog.
And here it is with stylistic fog.
And you can see the texture strip we're using in the scene in the bottom.
And this really scary, horrific one is my reference fog.
It is very good for debugging, and you can see exactly what pixels in your color strip is affecting which part of your scene.
Now let's look at the same scene in a different lighting.
This is actually the same lighting from the video I showed earlier, but with no fog.
And now with stylistic fog.
When the fog intensity is high, it really hits close to the graphic art style of the poster.
And since it is a dynamic system, it is very easy to experiment with.
This is the sunset lighting, but with the daytime fog we had earlier.
It's kind of fun to just play with it.
Here's another experiment.
I kind of like this one.
It's weird, though.
I hope this shows how powerful it is to have good controls over your different colors.
Which brings me to hot tip number two.
So while I urge you all to buy the tools when you can, you are going to have to make some of your own.
And when you do, excuse me, develop your custom tools to the strength of your team with a goal to minimize dependencies.
For example, it makes sense for us to use a color strip textured control fog because it is very easy for Ollie, who is an excellent 2D artist who lives and breathes Photoshop every day, to understand a texture strip intuitively as an input.
It might not make sense for another team, so if, let's say, a text-based input is more comfortable to you, then by all means, use that instead.
Okay, now let's talk about the importance of the color palette itself.
The colors are not just there to look beautiful.
The colors on screen really do drive the mood of the scene.
It is really important to recognize what kind of mood you are trying to convey with your colors.
And since Firewatch is a narrative game, we are pretty clear on what mood we are trying to tailor for each story moment.
The art being in harmony with what the player is feeling really does add to the immersive realness of player experience.
For example, when the game is trying to introduce a mysterious, perhaps menacing element, you really want the mood of the scene to support that.
You probably don't want that crazy parade, you know, birthday party color scheme when you're trying to be spooky.
We sketch up this mood progression with what's called a color script.
It is a process used frequently in other games and also films.
This is a chunk of color script from The Incredibles by Pixar.
And this is our color script for our PAX demo.
And here's another one for a little bit later in the game.
We try to do this really early in world building.
When we have to make a new area of the game, we pick the most iconic story moment for the locale and build it with that color palette in mind.
And we do this in passes as well.
First, when you have a pretty rough idea of player experience, we have a pretty rough color script and use that information to build a pretty rough gray box.
And then you play around it.
And when you're happy with the general scale and pacing, we take screenshots from the game, paint over it to how we want, and use those to create a more detailed color script, which are more like these ones.
Now, hot tip number three.
Having a color script really helps a team visually map out player experience.
Whoops, I think I went too far.
Anyway, I think you guys saw the thing.
Having a color script really helps a team visually map out player experience from start to finish and be on the same page about expectations.
Make sure you're happy with an overview of player experience with sketches and whatnot before you go into full art production.
Making art once is not actually that hard.
Having to rework finished assets is what is really costly for a small team.
Okay, now I'm doing it right.
Let's switch gears a bit and talk about shapes and silhouettes.
Now, since Firewatch is set in the Wyoming wilderness, our Wyoming wilderness, and not, let's say, a fantasy wilderness like Middle Earth or Brutal Legend, We don't really have giant evil shiny towers or huge statues that we can use to draw the player's interest.
What do we have?
Lots of trees and rocks everywhere.
So we have to use those natural elements to effectively guide the player's eye to where we want them to go.
And this is a quick drawing of how we're using some trees and rocks to see if we can funnel the player forward.
And this is how we mock it up pretty quickly.
And notice how there is already a stuffed-in sky and some really rough lighting even at this stage.
And this is a paint-over concept Ollie did over a screenshot after he saw how crappy it was.
And this is what's currently in the game.
We nicknamed this Pride Rock.
And if you as a team naturally nickname your big shapes during development, you're probably on the right track.
Now trees.
When creating our trees, I focus mostly on the silhouette they create in distance.
And these are all handmade.
We don't have sweet tree or anything.
They still have to look good up close, of course.
But I just make sure that the lower branches are up to snuff, because most of the rest of the tree is usually way beyond player reach.
These things are actually realistically proportioned.
So they're like 20, 30 meters tall or even taller.
Real trees are really big.
Ollie really wanted our tree shapes to get more stylized and more simplified as they're further out in the distance, just like in the key art.
Now, the middle two trees on screen, the one on the middle left, is what a model would look like without any texture detail.
And he's hoping that for the middle right, it shows what, in Ollie's mind, a reduced detail LOD stylization should look like.
While the stylistic fog is great at cutting down the texture detail.
It does nothing to simplify the silhouette of the trees at all.
So how are we going to do this?
When I was first playing with Unity, I noticed that when you're creating an alpha material, alpha texture, there is this slider called alpha cutoff, which essentially determines where the transparency threshold of your alpha testing is.
And this shows the same tree with three different alpha cutoff settings.
And it is much easier to see the difference in silhouette.
So I realized, hmm, now if we could somehow adjust the slider as the tree is further out in the distance, this would basically achieve the effect we kinda want of simplifying the silhouette.
And so that's what we did.
In our foliage shader, we do puff out the tree in the alpha test threshold, just like this.
And together with the stylistic fog, it does a really good job of simplifying and stylizing what we want to achieve in the art direction.
Okay, now a quick few words about our rocks.
This is a concept sheet for our rocks.
It is all about the angular shapes, and especially the shapes that they create in pretty harsh lighting.
And when I was making these, I basically only cared about the shape they create.
I tried to make each module one have its unique, interesting shape characteristic in all 360 degrees so I can use them differently as I rotate them.
And think of these as your rock words.
And just like how you use words to create different sentences, we're hoping that we can use these rock words to create different rock sentences so they all mean something different in combination.
Or you can think of these as Lego blocks, you know, similar.
And there's almost no texture detail on these, other than some dry-brushed highlights on the edges from the ZBrush sculpt, a gentle occlusion bake, and a good quality normal map.
Okay, let me demonstrate how we actually use these raw modules.
This is a detailed paint-over concept with notes for our front-end UI scene.
It is also the first shot of our teaser trailer.
And as you can see, the notes are all about how we should arrange the raw composition.
And this is a quick scene breakdown showing just how we use those to create what Olly wanted.
You will see a floating one.
Yeah, those floating ones are just a module before I layer onto the scene.
Getting close, that's pretty good.
Need some pointy bits though, right?
There you go.
I'm missing some stairs, and that one's good for stairs.
Ta-da!
Okay, so hot tip number four.
Make a small number of modular assets that are versatile.
For a game full of rocks, we actually only have a handful of types.
Keeping your number of assets low makes your life a lot easier because you'll be managing way less data.
You are likely going to have to retouch all of your assets like once or twice, so if you only need three rocks, don't make a fourth one, even if it's really fun to make.
Okay, I talked a lot about the ways we have abstracted the forest of Firewatch down to just shapes and colors.
Now let's go into the ways we put narrative details into the world.
I mentioned earlier that no matter the stylization of the art, the world needs to feel real enough to support a real human relationship you build with Delilah.
And one main way the player interacts with Delilah is through conversing about objects that you can look at.
or objects that you can pick up, examine, and you can choose to radio to Delilah and talk about them.
Yeah, check out this whiskey.
So while we focused on the shapes and silhouettes of the generic rocks and trees in the world, we did the exact opposite for all the human scale props that has narrative payoff.
These items are actually quite simple in shape, but has a lot of detail in the texture and are all very unique.
And these are all in engine shots, actually.
We just put it in a white room.
And there are two advantages to this style choice.
Number one, it establishes a pretty clear visual language that any object with a certain level of texture detail is something that adds to your story, or is something that you could talk to Delilah about.
And the second is our last hot tip.
By focusing your art bandwidth on assets that deliver the most payoff in terms of player experience, you are basically getting the most bang for your buck there.
So do use style to your production advantage.
Our rocks and trees are relatively simple assets because they only serve to set the stage, but we put a lot of design love and thought into these props because they do help build narrative, and narrative is the core of our game.
Okay, now some final thoughts.
I would like to encourage you all to embrace your limitations.
A lot of the art and process decisions we have made developing Firewatch are defined by the people and technology we have available to us.
Knowing what your limitations are and working within them can be very empowering.
They can push you to play to your strengths, and when you do that, you can create amazing things with a small team.
Lastly, I want to invite you all to our demo day this Friday.
It's from 11 to 7 on Howard Street between 6 and 7.
So it's only two or three blocks from here.
Very walkable.
And we have transformed a bit of Soma into a little forest.
I mean, there are real trees and everything.
It's awesome.
And you can play Firewatch there.
We have demo stations.
And it's a free event.
You don't need a GDC pass, so bring a friend.
And that's it.
I hope you all enjoyed the presentation.
Thank you.
Again, for those interested in more in-depth explanation for the processes and tools I mentioned or haven't mentioned, we try to keep up with our development blog and probably will do more of it after GDC.
And please keep in touch.
Twitter's probably best.
And please fill in the evaluation form.
I very much appreciate it if you do.
And have a great rest of GDC.
Thank you.
